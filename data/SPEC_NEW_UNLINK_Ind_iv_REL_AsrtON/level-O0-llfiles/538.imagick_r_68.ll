; ModuleID = 'magick/enhance.c'
source_filename = "magick/enhance.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._Image = type { i32, i32, i32, i64, i32, i32, i32, i64, i64, i64, i64, %struct._PixelPacket*, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, double, %struct._ChromaticityInfo, i32, i8*, i32, i8*, i8*, i8*, i64, double, double, %struct._RectangleInfo, %struct._RectangleInfo, %struct._RectangleInfo, double, double, double, i32, i32, i32, i32, i32, i32, %struct._Image*, i64, i64, i64, i64, i64, i64, %struct._ErrorInfo, %struct._TimerInfo, i32 (i8*, i64, i64, i8*)*, i8*, i8*, i8*, %struct._Ascii85Info*, %struct._BlobInfo*, [4096 x i8], [4096 x i8], [4096 x i8], i64, i64, %struct._ExceptionInfo, i32, i64, %struct.SemaphoreInfo*, %struct._ProfileInfo, %struct._ProfileInfo, %struct._ProfileInfo*, i64, i64, %struct._Image*, %struct._Image*, %struct._Image*, i32, i32, %struct._PixelPacket, %struct._Image*, %struct._RectangleInfo, i8*, i8*, i32, i32, i64, i32, i64, i64, i32, i64 }
%struct._ChromaticityInfo = type { %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo }
%struct._PrimaryInfo = type { double, double, double }
%struct._ErrorInfo = type { double, double, double }
%struct._TimerInfo = type { %struct._Timer, %struct._Timer, i32, i64 }
%struct._Timer = type { double, double, double }
%struct._Ascii85Info = type opaque
%struct._BlobInfo = type opaque
%struct._ExceptionInfo = type { i32, i32, i8*, i8*, i8*, i32, %struct.SemaphoreInfo*, i64 }
%struct.SemaphoreInfo = type opaque
%struct._ProfileInfo = type { i8*, i64, i8*, i64 }
%struct._PixelPacket = type { i16, i16, i16, i16 }
%struct._RectangleInfo = type { i64, i64, i64, i64 }
%struct._CacheView = type opaque
%struct._ColorCorrection = type { %struct._Correction, %struct._Correction, %struct._Correction, double }
%struct._Correction = type { double, double, double }
%struct._XMLTreeInfo = type opaque
%struct._MagickPixelPacket = type { i32, i32, i32, double, i64, float, float, float, float, float }
%struct._GeometryInfo = type { double, double, double, double, double }
%struct._QuantumPixelPacket = type { i16, i16, i16, i16, i16 }
%struct._HaldInfo = type { float, float, float }

@.str = private unnamed_addr constant [17 x i8] c"magick/enhance.c\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"ColorCorrection\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"SOPNode\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"Slope\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"Offset\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"Power\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"SATNode\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"Saturation\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"  Color Correction Collection:\00", align 1
@.str.11 = private unnamed_addr constant [33 x i8] c"  color_correction.red.slope: %g\00", align 1
@.str.12 = private unnamed_addr constant [34 x i8] c"  color_correction.red.offset: %g\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"  color_correction.red.power: %g\00", align 1
@.str.14 = private unnamed_addr constant [35 x i8] c"  color_correction.green.slope: %g\00", align 1
@.str.15 = private unnamed_addr constant [36 x i8] c"  color_correction.green.offset: %g\00", align 1
@.str.16 = private unnamed_addr constant [35 x i8] c"  color_correction.green.power: %g\00", align 1
@.str.17 = private unnamed_addr constant [34 x i8] c"  color_correction.blue.slope: %g\00", align 1
@.str.18 = private unnamed_addr constant [35 x i8] c"  color_correction.blue.offset: %g\00", align 1
@.str.19 = private unnamed_addr constant [34 x i8] c"  color_correction.blue.power: %g\00", align 1
@.str.20 = private unnamed_addr constant [34 x i8] c"  color_correction.saturation: %g\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"MemoryAllocationFailed\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"`%s'\00", align 1
@.str.23 = private unnamed_addr constant [24 x i8] c"ColorDecisionList/Image\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"Clut/Image\00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c"Contrast/Image\00", align 1
@.str.26 = private unnamed_addr constant [22 x i8] c"ContrastStretch/Image\00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c"Enhance/Image\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"Equalize/Image\00", align 1
@.str.29 = private unnamed_addr constant [19 x i8] c"GammaCorrect/Image\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"Grayscale/Image\00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c"Level/Image\00", align 1
@.str.32 = private unnamed_addr constant [15 x i8] c"Levelize/Image\00", align 1
@.str.33 = private unnamed_addr constant [20 x i8] c"modulate:colorspace\00", align 1
@.str.34 = private unnamed_addr constant [15 x i8] c"Modulate/Image\00", align 1
@.str.35 = private unnamed_addr constant [13 x i8] c"Negate/Image\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"SigmoidalContrast/Image\00", align 1
@.str.37 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @AutoGammaImage(%struct._Image* %image) #0 !dbg !807 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !811, metadata !DIExpression()), !dbg !812
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !813
  %call = call i32 @AutoGammaImageChannel(%struct._Image* %0, i32 134217719), !dbg !814
  ret i32 %call, !dbg !815
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @AutoGammaImageChannel(%struct._Image* %image, i32 %channel) #0 !dbg !816 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %gamma = alloca double, align 8
  %mean = alloca double, align 8
  %logmean = alloca double, align 8
  %sans = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !820, metadata !DIExpression()), !dbg !821
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !822, metadata !DIExpression()), !dbg !823
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !824, metadata !DIExpression()), !dbg !825
  call void @llvm.dbg.declare(metadata double* %mean, metadata !826, metadata !DIExpression()), !dbg !827
  call void @llvm.dbg.declare(metadata double* %logmean, metadata !828, metadata !DIExpression()), !dbg !829
  call void @llvm.dbg.declare(metadata double* %sans, metadata !830, metadata !DIExpression()), !dbg !831
  call void @llvm.dbg.declare(metadata i32* %status, metadata !832, metadata !DIExpression()), !dbg !834
  %call = call double @log(double 5.000000e-01) #6, !dbg !835
  store double %call, double* %logmean, align 8, !dbg !836
  %0 = load i32, i32* %channel.addr, align 4, !dbg !837
  %and = and i32 %0, 256, !dbg !839
  %cmp = icmp ne i32 %and, 0, !dbg !840
  br i1 %cmp, label %if.then, label %if.end, !dbg !841

if.then:                                          ; preds = %entry
  %1 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !842
  %2 = load i32, i32* %channel.addr, align 4, !dbg !844
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !845
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 58, !dbg !846
  %call1 = call i32 @GetImageChannelMean(%struct._Image* %1, i32 %2, double* %mean, double* %sans, %struct._ExceptionInfo* %exception), !dbg !847
  %4 = load double, double* %mean, align 8, !dbg !848
  %mul = fmul double %4, 0x3EF0001000100010, !dbg !849
  %call2 = call double @log(double %mul) #6, !dbg !850
  %5 = load double, double* %logmean, align 8, !dbg !851
  %div = fdiv double %call2, %5, !dbg !852
  store double %div, double* %gamma, align 8, !dbg !853
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !854
  %7 = load i32, i32* %channel.addr, align 4, !dbg !855
  %8 = load double, double* %gamma, align 8, !dbg !856
  %call3 = call i32 @LevelImageChannel(%struct._Image* %6, i32 %7, double 0.000000e+00, double 6.553500e+04, double %8), !dbg !857
  store i32 %call3, i32* %retval, align 4, !dbg !858
  br label %return, !dbg !858

if.end:                                           ; preds = %entry
  store i32 1, i32* %status, align 4, !dbg !859
  %9 = load i32, i32* %channel.addr, align 4, !dbg !860
  %and4 = and i32 %9, 1, !dbg !862
  %cmp5 = icmp ne i32 %and4, 0, !dbg !863
  br i1 %cmp5, label %if.then6, label %if.end14, !dbg !864

if.then6:                                         ; preds = %if.end
  %10 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !865
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !867
  %exception7 = getelementptr inbounds %struct._Image, %struct._Image* %11, i32 0, i32 58, !dbg !868
  %call8 = call i32 @GetImageChannelMean(%struct._Image* %10, i32 1, double* %mean, double* %sans, %struct._ExceptionInfo* %exception7), !dbg !869
  %12 = load double, double* %mean, align 8, !dbg !870
  %mul9 = fmul double %12, 0x3EF0001000100010, !dbg !871
  %call10 = call double @log(double %mul9) #6, !dbg !872
  %13 = load double, double* %logmean, align 8, !dbg !873
  %div11 = fdiv double %call10, %13, !dbg !874
  store double %div11, double* %gamma, align 8, !dbg !875
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !876
  %15 = load double, double* %gamma, align 8, !dbg !877
  %call12 = call i32 @LevelImageChannel(%struct._Image* %14, i32 1, double 0.000000e+00, double 6.553500e+04, double %15), !dbg !878
  %16 = load i32, i32* %status, align 4, !dbg !879
  %and13 = and i32 %16, %call12, !dbg !879
  store i32 %and13, i32* %status, align 4, !dbg !879
  br label %if.end14, !dbg !880

if.end14:                                         ; preds = %if.then6, %if.end
  %17 = load i32, i32* %channel.addr, align 4, !dbg !881
  %and15 = and i32 %17, 2, !dbg !883
  %cmp16 = icmp ne i32 %and15, 0, !dbg !884
  br i1 %cmp16, label %if.then17, label %if.end25, !dbg !885

if.then17:                                        ; preds = %if.end14
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !886
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !888
  %exception18 = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 58, !dbg !889
  %call19 = call i32 @GetImageChannelMean(%struct._Image* %18, i32 2, double* %mean, double* %sans, %struct._ExceptionInfo* %exception18), !dbg !890
  %20 = load double, double* %mean, align 8, !dbg !891
  %mul20 = fmul double %20, 0x3EF0001000100010, !dbg !892
  %call21 = call double @log(double %mul20) #6, !dbg !893
  %21 = load double, double* %logmean, align 8, !dbg !894
  %div22 = fdiv double %call21, %21, !dbg !895
  store double %div22, double* %gamma, align 8, !dbg !896
  %22 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !897
  %23 = load double, double* %gamma, align 8, !dbg !898
  %call23 = call i32 @LevelImageChannel(%struct._Image* %22, i32 2, double 0.000000e+00, double 6.553500e+04, double %23), !dbg !899
  %24 = load i32, i32* %status, align 4, !dbg !900
  %and24 = and i32 %24, %call23, !dbg !900
  store i32 %and24, i32* %status, align 4, !dbg !900
  br label %if.end25, !dbg !901

if.end25:                                         ; preds = %if.then17, %if.end14
  %25 = load i32, i32* %channel.addr, align 4, !dbg !902
  %and26 = and i32 %25, 4, !dbg !904
  %cmp27 = icmp ne i32 %and26, 0, !dbg !905
  br i1 %cmp27, label %if.then28, label %if.end36, !dbg !906

if.then28:                                        ; preds = %if.end25
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !907
  %27 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !909
  %exception29 = getelementptr inbounds %struct._Image, %struct._Image* %27, i32 0, i32 58, !dbg !910
  %call30 = call i32 @GetImageChannelMean(%struct._Image* %26, i32 4, double* %mean, double* %sans, %struct._ExceptionInfo* %exception29), !dbg !911
  %28 = load double, double* %mean, align 8, !dbg !912
  %mul31 = fmul double %28, 0x3EF0001000100010, !dbg !913
  %call32 = call double @log(double %mul31) #6, !dbg !914
  %29 = load double, double* %logmean, align 8, !dbg !915
  %div33 = fdiv double %call32, %29, !dbg !916
  store double %div33, double* %gamma, align 8, !dbg !917
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !918
  %31 = load double, double* %gamma, align 8, !dbg !919
  %call34 = call i32 @LevelImageChannel(%struct._Image* %30, i32 4, double 0.000000e+00, double 6.553500e+04, double %31), !dbg !920
  %32 = load i32, i32* %status, align 4, !dbg !921
  %and35 = and i32 %32, %call34, !dbg !921
  store i32 %and35, i32* %status, align 4, !dbg !921
  br label %if.end36, !dbg !922

if.end36:                                         ; preds = %if.then28, %if.end25
  %33 = load i32, i32* %channel.addr, align 4, !dbg !923
  %and37 = and i32 %33, 8, !dbg !925
  %cmp38 = icmp ne i32 %and37, 0, !dbg !926
  br i1 %cmp38, label %land.lhs.true, label %if.end48, !dbg !927

land.lhs.true:                                    ; preds = %if.end36
  %34 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !928
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %34, i32 0, i32 6, !dbg !929
  %35 = load i32, i32* %matte, align 8, !dbg !929
  %cmp39 = icmp ne i32 %35, 0, !dbg !930
  br i1 %cmp39, label %if.then40, label %if.end48, !dbg !931

if.then40:                                        ; preds = %land.lhs.true
  %36 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !932
  %37 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !934
  %exception41 = getelementptr inbounds %struct._Image, %struct._Image* %37, i32 0, i32 58, !dbg !935
  %call42 = call i32 @GetImageChannelMean(%struct._Image* %36, i32 8, double* %mean, double* %sans, %struct._ExceptionInfo* %exception41), !dbg !936
  %38 = load double, double* %mean, align 8, !dbg !937
  %mul43 = fmul double %38, 0x3EF0001000100010, !dbg !938
  %call44 = call double @log(double %mul43) #6, !dbg !939
  %39 = load double, double* %logmean, align 8, !dbg !940
  %div45 = fdiv double %call44, %39, !dbg !941
  store double %div45, double* %gamma, align 8, !dbg !942
  %40 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !943
  %41 = load double, double* %gamma, align 8, !dbg !944
  %call46 = call i32 @LevelImageChannel(%struct._Image* %40, i32 8, double 0.000000e+00, double 6.553500e+04, double %41), !dbg !945
  %42 = load i32, i32* %status, align 4, !dbg !946
  %and47 = and i32 %42, %call46, !dbg !946
  store i32 %and47, i32* %status, align 4, !dbg !946
  br label %if.end48, !dbg !947

if.end48:                                         ; preds = %if.then40, %land.lhs.true, %if.end36
  %43 = load i32, i32* %channel.addr, align 4, !dbg !948
  %and49 = and i32 %43, 32, !dbg !950
  %cmp50 = icmp ne i32 %and49, 0, !dbg !951
  br i1 %cmp50, label %land.lhs.true51, label %if.end61, !dbg !952

land.lhs.true51:                                  ; preds = %if.end48
  %44 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !953
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %44, i32 0, i32 1, !dbg !954
  %45 = load i32, i32* %colorspace, align 4, !dbg !954
  %cmp52 = icmp eq i32 %45, 12, !dbg !955
  br i1 %cmp52, label %if.then53, label %if.end61, !dbg !956

if.then53:                                        ; preds = %land.lhs.true51
  %46 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !957
  %47 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !959
  %exception54 = getelementptr inbounds %struct._Image, %struct._Image* %47, i32 0, i32 58, !dbg !960
  %call55 = call i32 @GetImageChannelMean(%struct._Image* %46, i32 32, double* %mean, double* %sans, %struct._ExceptionInfo* %exception54), !dbg !961
  %48 = load double, double* %mean, align 8, !dbg !962
  %mul56 = fmul double %48, 0x3EF0001000100010, !dbg !963
  %call57 = call double @log(double %mul56) #6, !dbg !964
  %49 = load double, double* %logmean, align 8, !dbg !965
  %div58 = fdiv double %call57, %49, !dbg !966
  store double %div58, double* %gamma, align 8, !dbg !967
  %50 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !968
  %51 = load double, double* %gamma, align 8, !dbg !969
  %call59 = call i32 @LevelImageChannel(%struct._Image* %50, i32 32, double 0.000000e+00, double 6.553500e+04, double %51), !dbg !970
  %52 = load i32, i32* %status, align 4, !dbg !971
  %and60 = and i32 %52, %call59, !dbg !971
  store i32 %and60, i32* %status, align 4, !dbg !971
  br label %if.end61, !dbg !972

if.end61:                                         ; preds = %if.then53, %land.lhs.true51, %if.end48
  %53 = load i32, i32* %status, align 4, !dbg !973
  %cmp62 = icmp ne i32 %53, 0, !dbg !974
  %54 = zext i1 %cmp62 to i64, !dbg !973
  %cond = select i1 %cmp62, i32 1, i32 0, !dbg !973
  store i32 %cond, i32* %retval, align 4, !dbg !975
  br label %return, !dbg !975

return:                                           ; preds = %if.end61, %if.then
  %55 = load i32, i32* %retval, align 4, !dbg !976
  ret i32 %55, !dbg !976
}

; Function Attrs: nounwind
declare dso_local double @log(double) #2

declare dso_local i32 @GetImageChannelMean(%struct._Image*, i32, double*, double*, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @LevelImageChannel(%struct._Image* %image, i32 %channel, double %black_point, double %white_point, double %gamma) #0 !dbg !977 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %black_point.addr = alloca double, align 8
  %white_point.addr = alloca double, align 8
  %gamma.addr = alloca double, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %i = alloca i64, align 8
  %y = alloca i64, align 8
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !981, metadata !DIExpression()), !dbg !982
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !983, metadata !DIExpression()), !dbg !984
  store double %black_point, double* %black_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %black_point.addr, metadata !985, metadata !DIExpression()), !dbg !986
  store double %white_point, double* %white_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %white_point.addr, metadata !987, metadata !DIExpression()), !dbg !988
  store double %gamma, double* %gamma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %gamma.addr, metadata !989, metadata !DIExpression()), !dbg !990
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !991, metadata !DIExpression()), !dbg !996
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !997, metadata !DIExpression()), !dbg !999
  call void @llvm.dbg.declare(metadata i32* %status, metadata !1000, metadata !DIExpression()), !dbg !1001
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !1002, metadata !DIExpression()), !dbg !1003
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1004, metadata !DIExpression()), !dbg !1005
  call void @llvm.dbg.declare(metadata i64* %y, metadata !1006, metadata !DIExpression()), !dbg !1007
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1008
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !1010
  %1 = load i32, i32* %debug, align 8, !dbg !1010
  %cmp = icmp ne i32 %1, 0, !dbg !1011
  br i1 %cmp, label %if.then, label %if.end, !dbg !1012

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1013
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !1014
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !1013
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2961, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !1015
  br label %if.end, !dbg !1016

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1017
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 0, !dbg !1019
  %4 = load i32, i32* %storage_class, align 8, !dbg !1019
  %cmp1 = icmp eq i32 %4, 2, !dbg !1020
  br i1 %cmp1, label %if.then2, label %if.end59, !dbg !1021

if.then2:                                         ; preds = %if.end
  store i64 0, i64* %i, align 8, !dbg !1022
  br label %for.cond, !dbg !1024

for.cond:                                         ; preds = %for.inc, %if.then2
  %5 = load i64, i64* %i, align 8, !dbg !1025
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1027
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 10, !dbg !1028
  %7 = load i64, i64* %colors, align 8, !dbg !1028
  %cmp3 = icmp slt i64 %5, %7, !dbg !1029
  br i1 %cmp3, label %for.body, label %for.end, !dbg !1030

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %channel.addr, align 4, !dbg !1031
  %and = and i32 %8, 1, !dbg !1034
  %cmp4 = icmp ne i32 %and, 0, !dbg !1035
  br i1 %cmp4, label %if.then5, label %if.end12, !dbg !1036

if.then5:                                         ; preds = %for.body
  %9 = load double, double* %black_point.addr, align 8, !dbg !1037
  %10 = load double, double* %white_point.addr, align 8, !dbg !1038
  %11 = load double, double* %gamma.addr, align 8, !dbg !1039
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1040
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 11, !dbg !1041
  %13 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !1041
  %14 = load i64, i64* %i, align 8, !dbg !1042
  %arrayidx = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %13, i64 %14, !dbg !1040
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx, i32 0, i32 2, !dbg !1043
  %15 = load i16, i16* %red, align 2, !dbg !1043
  %conv = uitofp i16 %15 to float, !dbg !1044
  %call6 = call double @LevelPixel(double %9, double %10, double %11, float %conv), !dbg !1045
  %conv7 = fptrunc double %call6 to float, !dbg !1045
  %call8 = call zeroext i16 @ClampToQuantum(float %conv7), !dbg !1046
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1047
  %colormap9 = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 11, !dbg !1048
  %17 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap9, align 8, !dbg !1048
  %18 = load i64, i64* %i, align 8, !dbg !1049
  %arrayidx10 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %17, i64 %18, !dbg !1047
  %red11 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx10, i32 0, i32 2, !dbg !1050
  store i16 %call8, i16* %red11, align 2, !dbg !1051
  br label %if.end12, !dbg !1047

if.end12:                                         ; preds = %if.then5, %for.body
  %19 = load i32, i32* %channel.addr, align 4, !dbg !1052
  %and13 = and i32 %19, 2, !dbg !1054
  %cmp14 = icmp ne i32 %and13, 0, !dbg !1055
  br i1 %cmp14, label %if.then16, label %if.end26, !dbg !1056

if.then16:                                        ; preds = %if.end12
  %20 = load double, double* %black_point.addr, align 8, !dbg !1057
  %21 = load double, double* %white_point.addr, align 8, !dbg !1058
  %22 = load double, double* %gamma.addr, align 8, !dbg !1059
  %23 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1060
  %colormap17 = getelementptr inbounds %struct._Image, %struct._Image* %23, i32 0, i32 11, !dbg !1061
  %24 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap17, align 8, !dbg !1061
  %25 = load i64, i64* %i, align 8, !dbg !1062
  %arrayidx18 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %24, i64 %25, !dbg !1060
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx18, i32 0, i32 1, !dbg !1063
  %26 = load i16, i16* %green, align 2, !dbg !1063
  %conv19 = uitofp i16 %26 to float, !dbg !1064
  %call20 = call double @LevelPixel(double %20, double %21, double %22, float %conv19), !dbg !1065
  %conv21 = fptrunc double %call20 to float, !dbg !1065
  %call22 = call zeroext i16 @ClampToQuantum(float %conv21), !dbg !1066
  %27 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1067
  %colormap23 = getelementptr inbounds %struct._Image, %struct._Image* %27, i32 0, i32 11, !dbg !1068
  %28 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap23, align 8, !dbg !1068
  %29 = load i64, i64* %i, align 8, !dbg !1069
  %arrayidx24 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %28, i64 %29, !dbg !1067
  %green25 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx24, i32 0, i32 1, !dbg !1070
  store i16 %call22, i16* %green25, align 2, !dbg !1071
  br label %if.end26, !dbg !1067

if.end26:                                         ; preds = %if.then16, %if.end12
  %30 = load i32, i32* %channel.addr, align 4, !dbg !1072
  %and27 = and i32 %30, 4, !dbg !1074
  %cmp28 = icmp ne i32 %and27, 0, !dbg !1075
  br i1 %cmp28, label %if.then30, label %if.end40, !dbg !1076

if.then30:                                        ; preds = %if.end26
  %31 = load double, double* %black_point.addr, align 8, !dbg !1077
  %32 = load double, double* %white_point.addr, align 8, !dbg !1078
  %33 = load double, double* %gamma.addr, align 8, !dbg !1079
  %34 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1080
  %colormap31 = getelementptr inbounds %struct._Image, %struct._Image* %34, i32 0, i32 11, !dbg !1081
  %35 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap31, align 8, !dbg !1081
  %36 = load i64, i64* %i, align 8, !dbg !1082
  %arrayidx32 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %35, i64 %36, !dbg !1080
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx32, i32 0, i32 0, !dbg !1083
  %37 = load i16, i16* %blue, align 2, !dbg !1083
  %conv33 = uitofp i16 %37 to float, !dbg !1084
  %call34 = call double @LevelPixel(double %31, double %32, double %33, float %conv33), !dbg !1085
  %conv35 = fptrunc double %call34 to float, !dbg !1085
  %call36 = call zeroext i16 @ClampToQuantum(float %conv35), !dbg !1086
  %38 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1087
  %colormap37 = getelementptr inbounds %struct._Image, %struct._Image* %38, i32 0, i32 11, !dbg !1088
  %39 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap37, align 8, !dbg !1088
  %40 = load i64, i64* %i, align 8, !dbg !1089
  %arrayidx38 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %39, i64 %40, !dbg !1087
  %blue39 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx38, i32 0, i32 0, !dbg !1090
  store i16 %call36, i16* %blue39, align 2, !dbg !1091
  br label %if.end40, !dbg !1087

if.end40:                                         ; preds = %if.then30, %if.end26
  %41 = load i32, i32* %channel.addr, align 4, !dbg !1092
  %and41 = and i32 %41, 8, !dbg !1094
  %cmp42 = icmp ne i32 %and41, 0, !dbg !1095
  br i1 %cmp42, label %if.then44, label %if.end58, !dbg !1096

if.then44:                                        ; preds = %if.end40
  %42 = load double, double* %black_point.addr, align 8, !dbg !1097
  %43 = load double, double* %white_point.addr, align 8, !dbg !1098
  %44 = load double, double* %gamma.addr, align 8, !dbg !1099
  %45 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1100
  %colormap45 = getelementptr inbounds %struct._Image, %struct._Image* %45, i32 0, i32 11, !dbg !1101
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap45, align 8, !dbg !1101
  %47 = load i64, i64* %i, align 8, !dbg !1102
  %arrayidx46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %46, i64 %47, !dbg !1100
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx46, i32 0, i32 3, !dbg !1103
  %48 = load i16, i16* %opacity, align 2, !dbg !1103
  %conv47 = zext i16 %48 to i32, !dbg !1100
  %sub = sub nsw i32 65535, %conv47, !dbg !1104
  %conv48 = sitofp i32 %sub to float, !dbg !1105
  %call49 = call double @LevelPixel(double %42, double %43, double %44, float %conv48), !dbg !1106
  %conv50 = fptrunc double %call49 to float, !dbg !1106
  %call51 = call zeroext i16 @ClampToQuantum(float %conv50), !dbg !1107
  %conv52 = zext i16 %call51 to i32, !dbg !1108
  %sub53 = sub nsw i32 65535, %conv52, !dbg !1109
  %conv54 = trunc i32 %sub53 to i16, !dbg !1110
  %49 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1111
  %colormap55 = getelementptr inbounds %struct._Image, %struct._Image* %49, i32 0, i32 11, !dbg !1112
  %50 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap55, align 8, !dbg !1112
  %51 = load i64, i64* %i, align 8, !dbg !1113
  %arrayidx56 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %50, i64 %51, !dbg !1111
  %opacity57 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx56, i32 0, i32 3, !dbg !1114
  store i16 %conv54, i16* %opacity57, align 2, !dbg !1115
  br label %if.end58, !dbg !1111

if.end58:                                         ; preds = %if.then44, %if.end40
  br label %for.inc, !dbg !1116

for.inc:                                          ; preds = %if.end58
  %52 = load i64, i64* %i, align 8, !dbg !1117
  %inc = add nsw i64 %52, 1, !dbg !1117
  store i64 %inc, i64* %i, align 8, !dbg !1117
  br label %for.cond, !dbg !1118, !llvm.loop !1119

for.end:                                          ; preds = %for.cond
  br label %if.end59, !dbg !1120

if.end59:                                         ; preds = %for.end, %if.end
  store i32 1, i32* %status, align 4, !dbg !1121
  store i64 0, i64* %progress, align 8, !dbg !1122
  %53 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1123
  %exception60 = getelementptr inbounds %struct._Image, %struct._Image* %53, i32 0, i32 58, !dbg !1124
  store %struct._ExceptionInfo* %exception60, %struct._ExceptionInfo** %exception, align 8, !dbg !1125
  %54 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1126
  %55 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1127
  %call61 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %54, %struct._ExceptionInfo* %55), !dbg !1128
  store %struct._CacheView* %call61, %struct._CacheView** %image_view, align 8, !dbg !1129
  store i64 0, i64* %y, align 8, !dbg !1130
  br label %for.cond62, !dbg !1132

for.cond62:                                       ; preds = %for.inc173, %if.end59
  %56 = load i64, i64* %y, align 8, !dbg !1133
  %57 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1135
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %57, i32 0, i32 8, !dbg !1136
  %58 = load i64, i64* %rows, align 8, !dbg !1136
  %cmp63 = icmp slt i64 %56, %58, !dbg !1137
  br i1 %cmp63, label %for.body65, label %for.end175, !dbg !1138

for.body65:                                       ; preds = %for.cond62
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !1139, metadata !DIExpression()), !dbg !1142
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !1143, metadata !DIExpression()), !dbg !1145
  call void @llvm.dbg.declare(metadata i64* %x, metadata !1146, metadata !DIExpression()), !dbg !1147
  %59 = load i32, i32* %status, align 4, !dbg !1148
  %cmp66 = icmp eq i32 %59, 0, !dbg !1150
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !1151

if.then68:                                        ; preds = %for.body65
  br label %for.inc173, !dbg !1152

if.end69:                                         ; preds = %for.body65
  %60 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1153
  %61 = load i64, i64* %y, align 8, !dbg !1154
  %62 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1155
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %62, i32 0, i32 7, !dbg !1156
  %63 = load i64, i64* %columns, align 8, !dbg !1156
  %64 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1157
  %call70 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %60, i64 0, i64 %61, i64 %63, i64 1, %struct._ExceptionInfo* %64), !dbg !1158
  store %struct._PixelPacket* %call70, %struct._PixelPacket** %q, align 8, !dbg !1159
  %65 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1160
  %cmp71 = icmp eq %struct._PixelPacket* %65, null, !dbg !1162
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !1163

if.then73:                                        ; preds = %if.end69
  store i32 0, i32* %status, align 4, !dbg !1164
  br label %for.inc173, !dbg !1166

if.end74:                                         ; preds = %if.end69
  %66 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1167
  %call75 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %66), !dbg !1168
  store i16* %call75, i16** %indexes, align 8, !dbg !1169
  store i64 0, i64* %x, align 8, !dbg !1170
  br label %for.cond76, !dbg !1172

for.cond76:                                       ; preds = %for.inc154, %if.end74
  %67 = load i64, i64* %x, align 8, !dbg !1173
  %68 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1175
  %columns77 = getelementptr inbounds %struct._Image, %struct._Image* %68, i32 0, i32 7, !dbg !1176
  %69 = load i64, i64* %columns77, align 8, !dbg !1176
  %cmp78 = icmp slt i64 %67, %69, !dbg !1177
  br i1 %cmp78, label %for.body80, label %for.end156, !dbg !1178

for.body80:                                       ; preds = %for.cond76
  %70 = load i32, i32* %channel.addr, align 4, !dbg !1179
  %and81 = and i32 %70, 1, !dbg !1182
  %cmp82 = icmp ne i32 %and81, 0, !dbg !1183
  br i1 %cmp82, label %if.then84, label %if.end91, !dbg !1184

if.then84:                                        ; preds = %for.body80
  %71 = load double, double* %black_point.addr, align 8, !dbg !1185
  %72 = load double, double* %white_point.addr, align 8, !dbg !1185
  %73 = load double, double* %gamma.addr, align 8, !dbg !1185
  %74 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1185
  %red85 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %74, i32 0, i32 2, !dbg !1185
  %75 = load i16, i16* %red85, align 2, !dbg !1185
  %conv86 = uitofp i16 %75 to float, !dbg !1185
  %call87 = call double @LevelPixel(double %71, double %72, double %73, float %conv86), !dbg !1185
  %conv88 = fptrunc double %call87 to float, !dbg !1185
  %call89 = call zeroext i16 @ClampToQuantum(float %conv88), !dbg !1185
  %76 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1185
  %red90 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %76, i32 0, i32 2, !dbg !1185
  store i16 %call89, i16* %red90, align 2, !dbg !1185
  br label %if.end91, !dbg !1185

if.end91:                                         ; preds = %if.then84, %for.body80
  %77 = load i32, i32* %channel.addr, align 4, !dbg !1186
  %and92 = and i32 %77, 2, !dbg !1188
  %cmp93 = icmp ne i32 %and92, 0, !dbg !1189
  br i1 %cmp93, label %if.then95, label %if.end102, !dbg !1190

if.then95:                                        ; preds = %if.end91
  %78 = load double, double* %black_point.addr, align 8, !dbg !1191
  %79 = load double, double* %white_point.addr, align 8, !dbg !1191
  %80 = load double, double* %gamma.addr, align 8, !dbg !1191
  %81 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1191
  %green96 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %81, i32 0, i32 1, !dbg !1191
  %82 = load i16, i16* %green96, align 2, !dbg !1191
  %conv97 = uitofp i16 %82 to float, !dbg !1191
  %call98 = call double @LevelPixel(double %78, double %79, double %80, float %conv97), !dbg !1191
  %conv99 = fptrunc double %call98 to float, !dbg !1191
  %call100 = call zeroext i16 @ClampToQuantum(float %conv99), !dbg !1191
  %83 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1191
  %green101 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %83, i32 0, i32 1, !dbg !1191
  store i16 %call100, i16* %green101, align 2, !dbg !1191
  br label %if.end102, !dbg !1191

if.end102:                                        ; preds = %if.then95, %if.end91
  %84 = load i32, i32* %channel.addr, align 4, !dbg !1192
  %and103 = and i32 %84, 4, !dbg !1194
  %cmp104 = icmp ne i32 %and103, 0, !dbg !1195
  br i1 %cmp104, label %if.then106, label %if.end113, !dbg !1196

if.then106:                                       ; preds = %if.end102
  %85 = load double, double* %black_point.addr, align 8, !dbg !1197
  %86 = load double, double* %white_point.addr, align 8, !dbg !1197
  %87 = load double, double* %gamma.addr, align 8, !dbg !1197
  %88 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1197
  %blue107 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %88, i32 0, i32 0, !dbg !1197
  %89 = load i16, i16* %blue107, align 2, !dbg !1197
  %conv108 = uitofp i16 %89 to float, !dbg !1197
  %call109 = call double @LevelPixel(double %85, double %86, double %87, float %conv108), !dbg !1197
  %conv110 = fptrunc double %call109 to float, !dbg !1197
  %call111 = call zeroext i16 @ClampToQuantum(float %conv110), !dbg !1197
  %90 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1197
  %blue112 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %90, i32 0, i32 0, !dbg !1197
  store i16 %call111, i16* %blue112, align 2, !dbg !1197
  br label %if.end113, !dbg !1197

if.end113:                                        ; preds = %if.then106, %if.end102
  %91 = load i32, i32* %channel.addr, align 4, !dbg !1198
  %and114 = and i32 %91, 8, !dbg !1200
  %cmp115 = icmp ne i32 %and114, 0, !dbg !1201
  br i1 %cmp115, label %land.lhs.true, label %if.end131, !dbg !1202

land.lhs.true:                                    ; preds = %if.end113
  %92 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1203
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %92, i32 0, i32 6, !dbg !1204
  %93 = load i32, i32* %matte, align 8, !dbg !1204
  %cmp117 = icmp ne i32 %93, 0, !dbg !1205
  br i1 %cmp117, label %if.then119, label %if.end131, !dbg !1206

if.then119:                                       ; preds = %land.lhs.true
  %94 = load double, double* %black_point.addr, align 8, !dbg !1207
  %95 = load double, double* %white_point.addr, align 8, !dbg !1207
  %96 = load double, double* %gamma.addr, align 8, !dbg !1207
  %97 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1207
  %opacity120 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %97, i32 0, i32 3, !dbg !1207
  %98 = load i16, i16* %opacity120, align 2, !dbg !1207
  %conv121 = zext i16 %98 to i32, !dbg !1207
  %sub122 = sub nsw i32 65535, %conv121, !dbg !1207
  %conv123 = sitofp i32 %sub122 to float, !dbg !1207
  %call124 = call double @LevelPixel(double %94, double %95, double %96, float %conv123), !dbg !1207
  %conv125 = fptrunc double %call124 to float, !dbg !1207
  %call126 = call zeroext i16 @ClampToQuantum(float %conv125), !dbg !1207
  %conv127 = zext i16 %call126 to i32, !dbg !1207
  %sub128 = sub nsw i32 65535, %conv127, !dbg !1207
  %conv129 = trunc i32 %sub128 to i16, !dbg !1207
  %99 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1207
  %opacity130 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %99, i32 0, i32 3, !dbg !1207
  store i16 %conv129, i16* %opacity130, align 2, !dbg !1207
  br label %if.end131, !dbg !1207

if.end131:                                        ; preds = %if.then119, %land.lhs.true, %if.end113
  %100 = load i32, i32* %channel.addr, align 4, !dbg !1208
  %and132 = and i32 %100, 32, !dbg !1210
  %cmp133 = icmp ne i32 %and132, 0, !dbg !1211
  br i1 %cmp133, label %land.lhs.true135, label %if.end153, !dbg !1212

land.lhs.true135:                                 ; preds = %if.end131
  %101 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1213
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %101, i32 0, i32 1, !dbg !1214
  %102 = load i32, i32* %colorspace, align 4, !dbg !1214
  %cmp136 = icmp eq i32 %102, 12, !dbg !1215
  br i1 %cmp136, label %if.then138, label %if.end153, !dbg !1216

if.then138:                                       ; preds = %land.lhs.true135
  %103 = load i16*, i16** %indexes, align 8, !dbg !1217
  %104 = load i64, i64* %x, align 8, !dbg !1217
  %add.ptr = getelementptr inbounds i16, i16* %103, i64 %104, !dbg !1217
  %cmp139 = icmp ne i16* %add.ptr, null, !dbg !1217
  br i1 %cmp139, label %if.then141, label %if.end152, !dbg !1220

if.then141:                                       ; preds = %if.then138
  %105 = load double, double* %black_point.addr, align 8, !dbg !1217
  %106 = load double, double* %white_point.addr, align 8, !dbg !1217
  %107 = load double, double* %gamma.addr, align 8, !dbg !1217
  %108 = load i16*, i16** %indexes, align 8, !dbg !1217
  %109 = load i64, i64* %x, align 8, !dbg !1217
  %add.ptr142 = getelementptr inbounds i16, i16* %108, i64 %109, !dbg !1217
  %cmp143 = icmp eq i16* %add.ptr142, null, !dbg !1217
  br i1 %cmp143, label %cond.true, label %cond.false, !dbg !1217

cond.true:                                        ; preds = %if.then141
  br label %cond.end, !dbg !1217

cond.false:                                       ; preds = %if.then141
  %110 = load i16*, i16** %indexes, align 8, !dbg !1217
  %111 = load i64, i64* %x, align 8, !dbg !1217
  %add.ptr145 = getelementptr inbounds i16, i16* %110, i64 %111, !dbg !1217
  %112 = load i16, i16* %add.ptr145, align 2, !dbg !1217
  %conv146 = zext i16 %112 to i32, !dbg !1217
  br label %cond.end, !dbg !1217

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv146, %cond.false ], !dbg !1217
  %conv147 = sitofp i32 %cond to float, !dbg !1217
  %call148 = call double @LevelPixel(double %105, double %106, double %107, float %conv147), !dbg !1217
  %conv149 = fptrunc double %call148 to float, !dbg !1217
  %call150 = call zeroext i16 @ClampToQuantum(float %conv149), !dbg !1217
  %113 = load i16*, i16** %indexes, align 8, !dbg !1217
  %114 = load i64, i64* %x, align 8, !dbg !1217
  %add.ptr151 = getelementptr inbounds i16, i16* %113, i64 %114, !dbg !1217
  store i16 %call150, i16* %add.ptr151, align 2, !dbg !1217
  br label %if.end152, !dbg !1217

if.end152:                                        ; preds = %cond.end, %if.then138
  br label %if.end153, !dbg !1220

if.end153:                                        ; preds = %if.end152, %land.lhs.true135, %if.end131
  %115 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1221
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %115, i32 1, !dbg !1221
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !1221
  br label %for.inc154, !dbg !1222

for.inc154:                                       ; preds = %if.end153
  %116 = load i64, i64* %x, align 8, !dbg !1223
  %inc155 = add nsw i64 %116, 1, !dbg !1223
  store i64 %inc155, i64* %x, align 8, !dbg !1223
  br label %for.cond76, !dbg !1224, !llvm.loop !1225

for.end156:                                       ; preds = %for.cond76
  %117 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1227
  %118 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1229
  %call157 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %117, %struct._ExceptionInfo* %118), !dbg !1230
  %cmp158 = icmp eq i32 %call157, 0, !dbg !1231
  br i1 %cmp158, label %if.then160, label %if.end161, !dbg !1232

if.then160:                                       ; preds = %for.end156
  store i32 0, i32* %status, align 4, !dbg !1233
  br label %if.end161, !dbg !1234

if.end161:                                        ; preds = %if.then160, %for.end156
  %119 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1235
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %119, i32 0, i32 47, !dbg !1237
  %120 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !1237
  %cmp162 = icmp ne i32 (i8*, i64, i64, i8*)* %120, null, !dbg !1238
  br i1 %cmp162, label %if.then164, label %if.end172, !dbg !1239

if.then164:                                       ; preds = %if.end161
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !1240, metadata !DIExpression()), !dbg !1242
  %121 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1243
  %122 = load i64, i64* %progress, align 8, !dbg !1244
  %inc165 = add nsw i64 %122, 1, !dbg !1244
  store i64 %inc165, i64* %progress, align 8, !dbg !1244
  %123 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1245
  %rows166 = getelementptr inbounds %struct._Image, %struct._Image* %123, i32 0, i32 8, !dbg !1246
  %124 = load i64, i64* %rows166, align 8, !dbg !1246
  %call167 = call i32 @SetImageProgress(%struct._Image* %121, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i64 %122, i64 %124), !dbg !1247
  store i32 %call167, i32* %proceed, align 4, !dbg !1248
  %125 = load i32, i32* %proceed, align 4, !dbg !1249
  %cmp168 = icmp eq i32 %125, 0, !dbg !1251
  br i1 %cmp168, label %if.then170, label %if.end171, !dbg !1252

if.then170:                                       ; preds = %if.then164
  store i32 0, i32* %status, align 4, !dbg !1253
  br label %if.end171, !dbg !1254

if.end171:                                        ; preds = %if.then170, %if.then164
  br label %if.end172, !dbg !1255

if.end172:                                        ; preds = %if.end171, %if.end161
  br label %for.inc173, !dbg !1256

for.inc173:                                       ; preds = %if.end172, %if.then73, %if.then68
  %126 = load i64, i64* %y, align 8, !dbg !1257
  %inc174 = add nsw i64 %126, 1, !dbg !1257
  store i64 %inc174, i64* %y, align 8, !dbg !1257
  br label %for.cond62, !dbg !1258, !llvm.loop !1259

for.end175:                                       ; preds = %for.cond62
  %127 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1261
  %call176 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %127), !dbg !1262
  store %struct._CacheView* %call176, %struct._CacheView** %image_view, align 8, !dbg !1263
  %128 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1264
  %call177 = call i32 @ClampImage(%struct._Image* %128), !dbg !1265
  %129 = load i32, i32* %status, align 4, !dbg !1266
  ret i32 %129, !dbg !1267
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @AutoLevelImage(%struct._Image* %image) #0 !dbg !1268 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1269, metadata !DIExpression()), !dbg !1270
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1271
  %call = call i32 @AutoLevelImageChannel(%struct._Image* %0, i32 134217719), !dbg !1272
  ret i32 %call, !dbg !1273
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @AutoLevelImageChannel(%struct._Image* %image, i32 %channel) #0 !dbg !1274 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1275, metadata !DIExpression()), !dbg !1276
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !1277, metadata !DIExpression()), !dbg !1278
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1279
  %1 = load i32, i32* %channel.addr, align 4, !dbg !1280
  %call = call i32 @MinMaxStretchImage(%struct._Image* %0, i32 %1, double 0.000000e+00, double 0.000000e+00), !dbg !1281
  ret i32 %call, !dbg !1282
}

declare dso_local i32 @MinMaxStretchImage(%struct._Image*, i32, double, double) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BrightnessContrastImage(%struct._Image* %image, double %brightness, double %contrast) #0 !dbg !1283 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %brightness.addr = alloca double, align 8
  %contrast.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1286, metadata !DIExpression()), !dbg !1287
  store double %brightness, double* %brightness.addr, align 8
  call void @llvm.dbg.declare(metadata double* %brightness.addr, metadata !1288, metadata !DIExpression()), !dbg !1289
  store double %contrast, double* %contrast.addr, align 8
  call void @llvm.dbg.declare(metadata double* %contrast.addr, metadata !1290, metadata !DIExpression()), !dbg !1291
  call void @llvm.dbg.declare(metadata i32* %status, metadata !1292, metadata !DIExpression()), !dbg !1293
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1294
  %1 = load double, double* %brightness.addr, align 8, !dbg !1295
  %2 = load double, double* %contrast.addr, align 8, !dbg !1296
  %call = call i32 @BrightnessContrastImageChannel(%struct._Image* %0, i32 134217719, double %1, double %2), !dbg !1297
  store i32 %call, i32* %status, align 4, !dbg !1298
  %3 = load i32, i32* %status, align 4, !dbg !1299
  ret i32 %3, !dbg !1300
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BrightnessContrastImageChannel(%struct._Image* %image, i32 %channel, double %brightness, double %contrast) #0 !dbg !1301 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %brightness.addr = alloca double, align 8
  %contrast.addr = alloca double, align 8
  %alpha = alloca double, align 8
  %intercept = alloca double, align 8
  %coefficients = alloca [2 x double], align 16
  %slope = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1304, metadata !DIExpression()), !dbg !1305
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !1306, metadata !DIExpression()), !dbg !1307
  store double %brightness, double* %brightness.addr, align 8
  call void @llvm.dbg.declare(metadata double* %brightness.addr, metadata !1308, metadata !DIExpression()), !dbg !1309
  store double %contrast, double* %contrast.addr, align 8
  call void @llvm.dbg.declare(metadata double* %contrast.addr, metadata !1310, metadata !DIExpression()), !dbg !1311
  call void @llvm.dbg.declare(metadata double* %alpha, metadata !1312, metadata !DIExpression()), !dbg !1313
  call void @llvm.dbg.declare(metadata double* %intercept, metadata !1314, metadata !DIExpression()), !dbg !1315
  call void @llvm.dbg.declare(metadata [2 x double]* %coefficients, metadata !1316, metadata !DIExpression()), !dbg !1320
  call void @llvm.dbg.declare(metadata double* %slope, metadata !1321, metadata !DIExpression()), !dbg !1322
  call void @llvm.dbg.declare(metadata i32* %status, metadata !1323, metadata !DIExpression()), !dbg !1324
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1325
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !1327
  %1 = load i32, i32* %debug, align 8, !dbg !1327
  %cmp = icmp ne i32 %1, 0, !dbg !1328
  br i1 %cmp, label %if.then, label %if.end, !dbg !1329

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1330
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !1331
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !1330
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 301, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !1332
  br label %if.end, !dbg !1333

if.end:                                           ; preds = %if.then, %entry
  %3 = load double, double* %contrast.addr, align 8, !dbg !1334
  store double %3, double* %alpha, align 8, !dbg !1335
  %4 = load double, double* %alpha, align 8, !dbg !1336
  %div = fdiv double %4, 1.000000e+02, !dbg !1337
  %add = fadd double %div, 1.000000e+00, !dbg !1338
  %mul = fmul double 0x400921FB54442D18, %add, !dbg !1339
  %div1 = fdiv double %mul, 4.000000e+00, !dbg !1340
  %call2 = call double @tan(double %div1) #6, !dbg !1341
  store double %call2, double* %slope, align 8, !dbg !1342
  %5 = load double, double* %slope, align 8, !dbg !1343
  %cmp3 = fcmp olt double %5, 0.000000e+00, !dbg !1345
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !1346

if.then4:                                         ; preds = %if.end
  store double 0.000000e+00, double* %slope, align 8, !dbg !1347
  br label %if.end5, !dbg !1348

if.end5:                                          ; preds = %if.then4, %if.end
  %6 = load double, double* %brightness.addr, align 8, !dbg !1349
  %div6 = fdiv double %6, 1.000000e+02, !dbg !1350
  %7 = load double, double* %brightness.addr, align 8, !dbg !1351
  %sub = fsub double 1.000000e+02, %7, !dbg !1352
  %div7 = fdiv double %sub, 2.000000e+02, !dbg !1353
  %8 = load double, double* %slope, align 8, !dbg !1354
  %sub8 = fsub double 1.000000e+00, %8, !dbg !1355
  %mul9 = fmul double %div7, %sub8, !dbg !1356
  %add10 = fadd double %div6, %mul9, !dbg !1357
  store double %add10, double* %intercept, align 8, !dbg !1358
  %9 = load double, double* %slope, align 8, !dbg !1359
  %arrayidx = getelementptr inbounds [2 x double], [2 x double]* %coefficients, i64 0, i64 0, !dbg !1360
  store double %9, double* %arrayidx, align 16, !dbg !1361
  %10 = load double, double* %intercept, align 8, !dbg !1362
  %arrayidx11 = getelementptr inbounds [2 x double], [2 x double]* %coefficients, i64 0, i64 1, !dbg !1363
  store double %10, double* %arrayidx11, align 8, !dbg !1364
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1365
  %12 = load i32, i32* %channel.addr, align 4, !dbg !1366
  %arraydecay12 = getelementptr inbounds [2 x double], [2 x double]* %coefficients, i64 0, i64 0, !dbg !1367
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1368
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 58, !dbg !1369
  %call13 = call i32 @FunctionImageChannel(%struct._Image* %11, i32 %12, i32 1, i64 2, double* %arraydecay12, %struct._ExceptionInfo* %exception), !dbg !1370
  store i32 %call13, i32* %status, align 4, !dbg !1371
  %14 = load i32, i32* %status, align 4, !dbg !1372
  ret i32 %14, !dbg !1373
}

declare dso_local i32 @LogMagickEvent(i32, i8*, i8*, i64, i8*, ...) #3

; Function Attrs: nounwind
declare dso_local double @tan(double) #2

declare dso_local i32 @FunctionImageChannel(%struct._Image*, i32, i32, i64, double*, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ColorDecisionListImage(%struct._Image* %image, i8* %color_correction_collection) #0 !dbg !1374 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %color_correction_collection.addr = alloca i8*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %token = alloca [4096 x i8], align 16
  %color_correction = alloca %struct._ColorCorrection, align 8
  %content = alloca i8*, align 8
  %p = alloca i8*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %cdl_map = alloca %struct._PixelPacket*, align 8
  %i = alloca i64, align 8
  %y = alloca i64, align 8
  %cc = alloca %struct._XMLTreeInfo*, align 8
  %ccc = alloca %struct._XMLTreeInfo*, align 8
  %sat = alloca %struct._XMLTreeInfo*, align 8
  %sop = alloca %struct._XMLTreeInfo*, align 8
  %offset29 = alloca %struct._XMLTreeInfo*, align 8
  %power30 = alloca %struct._XMLTreeInfo*, align 8
  %slope31 = alloca %struct._XMLTreeInfo*, align 8
  %saturation152 = alloca %struct._XMLTreeInfo*, align 8
  %luma = alloca double, align 8
  %luma358 = alloca double, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1377, metadata !DIExpression()), !dbg !1378
  store i8* %color_correction_collection, i8** %color_correction_collection.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %color_correction_collection.addr, metadata !1379, metadata !DIExpression()), !dbg !1380
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !1381, metadata !DIExpression()), !dbg !1382
  call void @llvm.dbg.declare(metadata [4096 x i8]* %token, metadata !1383, metadata !DIExpression()), !dbg !1384
  call void @llvm.dbg.declare(metadata %struct._ColorCorrection* %color_correction, metadata !1385, metadata !DIExpression()), !dbg !1399
  call void @llvm.dbg.declare(metadata i8** %content, metadata !1400, metadata !DIExpression()), !dbg !1401
  call void @llvm.dbg.declare(metadata i8** %p, metadata !1402, metadata !DIExpression()), !dbg !1403
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !1404, metadata !DIExpression()), !dbg !1405
  call void @llvm.dbg.declare(metadata i32* %status, metadata !1406, metadata !DIExpression()), !dbg !1407
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !1408, metadata !DIExpression()), !dbg !1409
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %cdl_map, metadata !1410, metadata !DIExpression()), !dbg !1411
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1412, metadata !DIExpression()), !dbg !1413
  call void @llvm.dbg.declare(metadata i64* %y, metadata !1414, metadata !DIExpression()), !dbg !1415
  call void @llvm.dbg.declare(metadata %struct._XMLTreeInfo** %cc, metadata !1416, metadata !DIExpression()), !dbg !1417
  call void @llvm.dbg.declare(metadata %struct._XMLTreeInfo** %ccc, metadata !1418, metadata !DIExpression()), !dbg !1419
  call void @llvm.dbg.declare(metadata %struct._XMLTreeInfo** %sat, metadata !1420, metadata !DIExpression()), !dbg !1421
  call void @llvm.dbg.declare(metadata %struct._XMLTreeInfo** %sop, metadata !1422, metadata !DIExpression()), !dbg !1423
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1424
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !1426
  %1 = load i32, i32* %debug, align 8, !dbg !1426
  %cmp = icmp ne i32 %1, 0, !dbg !1427
  br i1 %cmp, label %if.then, label %if.end, !dbg !1428

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1429
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !1430
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !1429
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 424, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !1431
  br label %if.end, !dbg !1432

if.end:                                           ; preds = %if.then, %entry
  %3 = load i8*, i8** %color_correction_collection.addr, align 8, !dbg !1433
  %cmp1 = icmp eq i8* %3, null, !dbg !1435
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !1436

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !1437
  br label %return, !dbg !1437

if.end3:                                          ; preds = %if.end
  %4 = load i8*, i8** %color_correction_collection.addr, align 8, !dbg !1438
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1439
  %exception4 = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 58, !dbg !1440
  %call5 = call %struct._XMLTreeInfo* @NewXMLTree(i8* %4, %struct._ExceptionInfo* %exception4), !dbg !1441
  store %struct._XMLTreeInfo* %call5, %struct._XMLTreeInfo** %ccc, align 8, !dbg !1442
  %6 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %ccc, align 8, !dbg !1443
  %cmp6 = icmp eq %struct._XMLTreeInfo* %6, null, !dbg !1445
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !1446

if.then7:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !1447
  br label %return, !dbg !1447

if.end8:                                          ; preds = %if.end3
  %7 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %ccc, align 8, !dbg !1448
  %call9 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0)), !dbg !1449
  store %struct._XMLTreeInfo* %call9, %struct._XMLTreeInfo** %cc, align 8, !dbg !1450
  %8 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %cc, align 8, !dbg !1451
  %cmp10 = icmp eq %struct._XMLTreeInfo* %8, null, !dbg !1453
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !1454

if.then11:                                        ; preds = %if.end8
  %9 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %ccc, align 8, !dbg !1455
  %call12 = call %struct._XMLTreeInfo* @DestroyXMLTree(%struct._XMLTreeInfo* %9), !dbg !1457
  store %struct._XMLTreeInfo* %call12, %struct._XMLTreeInfo** %ccc, align 8, !dbg !1458
  store i32 0, i32* %retval, align 4, !dbg !1459
  br label %return, !dbg !1459

if.end13:                                         ; preds = %if.end8
  %red = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 0, !dbg !1460
  %slope = getelementptr inbounds %struct._Correction, %struct._Correction* %red, i32 0, i32 0, !dbg !1461
  store double 1.000000e+00, double* %slope, align 8, !dbg !1462
  %red14 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 0, !dbg !1463
  %offset = getelementptr inbounds %struct._Correction, %struct._Correction* %red14, i32 0, i32 1, !dbg !1464
  store double 0.000000e+00, double* %offset, align 8, !dbg !1465
  %red15 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 0, !dbg !1466
  %power = getelementptr inbounds %struct._Correction, %struct._Correction* %red15, i32 0, i32 2, !dbg !1467
  store double 1.000000e+00, double* %power, align 8, !dbg !1468
  %green = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 1, !dbg !1469
  %slope16 = getelementptr inbounds %struct._Correction, %struct._Correction* %green, i32 0, i32 0, !dbg !1470
  store double 1.000000e+00, double* %slope16, align 8, !dbg !1471
  %green17 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 1, !dbg !1472
  %offset18 = getelementptr inbounds %struct._Correction, %struct._Correction* %green17, i32 0, i32 1, !dbg !1473
  store double 0.000000e+00, double* %offset18, align 8, !dbg !1474
  %green19 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 1, !dbg !1475
  %power20 = getelementptr inbounds %struct._Correction, %struct._Correction* %green19, i32 0, i32 2, !dbg !1476
  store double 1.000000e+00, double* %power20, align 8, !dbg !1477
  %blue = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 2, !dbg !1478
  %slope21 = getelementptr inbounds %struct._Correction, %struct._Correction* %blue, i32 0, i32 0, !dbg !1479
  store double 1.000000e+00, double* %slope21, align 8, !dbg !1480
  %blue22 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 2, !dbg !1481
  %offset23 = getelementptr inbounds %struct._Correction, %struct._Correction* %blue22, i32 0, i32 1, !dbg !1482
  store double 0.000000e+00, double* %offset23, align 8, !dbg !1483
  %blue24 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 2, !dbg !1484
  %power25 = getelementptr inbounds %struct._Correction, %struct._Correction* %blue24, i32 0, i32 2, !dbg !1485
  store double 1.000000e+00, double* %power25, align 8, !dbg !1486
  %saturation = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 3, !dbg !1487
  store double 0.000000e+00, double* %saturation, align 8, !dbg !1488
  %10 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %cc, align 8, !dbg !1489
  %call26 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0)), !dbg !1490
  store %struct._XMLTreeInfo* %call26, %struct._XMLTreeInfo** %sop, align 8, !dbg !1491
  %11 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %sop, align 8, !dbg !1492
  %cmp27 = icmp ne %struct._XMLTreeInfo* %11, null, !dbg !1494
  br i1 %cmp27, label %if.then28, label %if.end147, !dbg !1495

if.then28:                                        ; preds = %if.end13
  call void @llvm.dbg.declare(metadata %struct._XMLTreeInfo** %offset29, metadata !1496, metadata !DIExpression()), !dbg !1498
  call void @llvm.dbg.declare(metadata %struct._XMLTreeInfo** %power30, metadata !1499, metadata !DIExpression()), !dbg !1500
  call void @llvm.dbg.declare(metadata %struct._XMLTreeInfo** %slope31, metadata !1501, metadata !DIExpression()), !dbg !1502
  %12 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %sop, align 8, !dbg !1503
  %call32 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0)), !dbg !1504
  store %struct._XMLTreeInfo* %call32, %struct._XMLTreeInfo** %slope31, align 8, !dbg !1505
  %13 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %slope31, align 8, !dbg !1506
  %cmp33 = icmp ne %struct._XMLTreeInfo* %13, null, !dbg !1508
  br i1 %cmp33, label %if.then34, label %if.end62, !dbg !1509

if.then34:                                        ; preds = %if.then28
  %14 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %slope31, align 8, !dbg !1510
  %call35 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %14), !dbg !1512
  store i8* %call35, i8** %content, align 8, !dbg !1513
  %15 = load i8*, i8** %content, align 8, !dbg !1514
  store i8* %15, i8** %p, align 8, !dbg !1515
  store i64 0, i64* %i, align 8, !dbg !1516
  br label %for.cond, !dbg !1518

for.cond:                                         ; preds = %for.inc, %if.then34
  %16 = load i8*, i8** %p, align 8, !dbg !1519
  %17 = load i8, i8* %16, align 1, !dbg !1521
  %conv = sext i8 %17 to i32, !dbg !1521
  %cmp36 = icmp ne i32 %conv, 0, !dbg !1522
  br i1 %cmp36, label %land.rhs, label %land.end, !dbg !1523

land.rhs:                                         ; preds = %for.cond
  %18 = load i64, i64* %i, align 8, !dbg !1524
  %cmp38 = icmp slt i64 %18, 3, !dbg !1525
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %19 = phi i1 [ false, %for.cond ], [ %cmp38, %land.rhs ], !dbg !1526
  br i1 %19, label %for.body, label %for.end, !dbg !1527

for.body:                                         ; preds = %land.end
  %20 = load i8*, i8** %p, align 8, !dbg !1528
  %arraydecay40 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1530
  call void @GetMagickToken(i8* %20, i8** %p, i8* %arraydecay40), !dbg !1531
  %arraydecay41 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1532
  %21 = load i8, i8* %arraydecay41, align 16, !dbg !1532
  %conv42 = sext i8 %21 to i32, !dbg !1532
  %cmp43 = icmp eq i32 %conv42, 44, !dbg !1534
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !1535

if.then45:                                        ; preds = %for.body
  %22 = load i8*, i8** %p, align 8, !dbg !1536
  %arraydecay46 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1537
  call void @GetMagickToken(i8* %22, i8** %p, i8* %arraydecay46), !dbg !1538
  br label %if.end47, !dbg !1538

if.end47:                                         ; preds = %if.then45, %for.body
  %23 = load i64, i64* %i, align 8, !dbg !1539
  switch i64 %23, label %sw.epilog [
    i64 0, label %sw.bb
    i64 1, label %sw.bb52
    i64 2, label %sw.bb57
  ], !dbg !1540

sw.bb:                                            ; preds = %if.end47
  %arraydecay48 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1541
  %call49 = call double @StringToDouble(i8* %arraydecay48, i8** null), !dbg !1544
  %red50 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 0, !dbg !1545
  %slope51 = getelementptr inbounds %struct._Correction, %struct._Correction* %red50, i32 0, i32 0, !dbg !1546
  store double %call49, double* %slope51, align 8, !dbg !1547
  br label %sw.epilog, !dbg !1548

sw.bb52:                                          ; preds = %if.end47
  %arraydecay53 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1549
  %call54 = call double @StringToDouble(i8* %arraydecay53, i8** null), !dbg !1551
  %green55 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 1, !dbg !1552
  %slope56 = getelementptr inbounds %struct._Correction, %struct._Correction* %green55, i32 0, i32 0, !dbg !1553
  store double %call54, double* %slope56, align 8, !dbg !1554
  br label %sw.epilog, !dbg !1555

sw.bb57:                                          ; preds = %if.end47
  %arraydecay58 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1556
  %call59 = call double @StringToDouble(i8* %arraydecay58, i8** null), !dbg !1558
  %blue60 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 2, !dbg !1559
  %slope61 = getelementptr inbounds %struct._Correction, %struct._Correction* %blue60, i32 0, i32 0, !dbg !1560
  store double %call59, double* %slope61, align 8, !dbg !1561
  br label %sw.epilog, !dbg !1562

sw.epilog:                                        ; preds = %if.end47, %sw.bb57, %sw.bb52, %sw.bb
  br label %for.inc, !dbg !1563

for.inc:                                          ; preds = %sw.epilog
  %24 = load i64, i64* %i, align 8, !dbg !1564
  %inc = add nsw i64 %24, 1, !dbg !1564
  store i64 %inc, i64* %i, align 8, !dbg !1564
  br label %for.cond, !dbg !1565, !llvm.loop !1566

for.end:                                          ; preds = %land.end
  br label %if.end62, !dbg !1568

if.end62:                                         ; preds = %for.end, %if.then28
  %25 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %sop, align 8, !dbg !1569
  %call63 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %25, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0)), !dbg !1570
  store %struct._XMLTreeInfo* %call63, %struct._XMLTreeInfo** %offset29, align 8, !dbg !1571
  %26 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %offset29, align 8, !dbg !1572
  %cmp64 = icmp ne %struct._XMLTreeInfo* %26, null, !dbg !1574
  br i1 %cmp64, label %if.then66, label %if.end104, !dbg !1575

if.then66:                                        ; preds = %if.end62
  %27 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %offset29, align 8, !dbg !1576
  %call67 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %27), !dbg !1578
  store i8* %call67, i8** %content, align 8, !dbg !1579
  %28 = load i8*, i8** %content, align 8, !dbg !1580
  store i8* %28, i8** %p, align 8, !dbg !1581
  store i64 0, i64* %i, align 8, !dbg !1582
  br label %for.cond68, !dbg !1584

for.cond68:                                       ; preds = %for.inc101, %if.then66
  %29 = load i8*, i8** %p, align 8, !dbg !1585
  %30 = load i8, i8* %29, align 1, !dbg !1587
  %conv69 = sext i8 %30 to i32, !dbg !1587
  %cmp70 = icmp ne i32 %conv69, 0, !dbg !1588
  br i1 %cmp70, label %land.rhs72, label %land.end75, !dbg !1589

land.rhs72:                                       ; preds = %for.cond68
  %31 = load i64, i64* %i, align 8, !dbg !1590
  %cmp73 = icmp slt i64 %31, 3, !dbg !1591
  br label %land.end75

land.end75:                                       ; preds = %land.rhs72, %for.cond68
  %32 = phi i1 [ false, %for.cond68 ], [ %cmp73, %land.rhs72 ], !dbg !1592
  br i1 %32, label %for.body76, label %for.end103, !dbg !1593

for.body76:                                       ; preds = %land.end75
  %33 = load i8*, i8** %p, align 8, !dbg !1594
  %arraydecay77 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1596
  call void @GetMagickToken(i8* %33, i8** %p, i8* %arraydecay77), !dbg !1597
  %arraydecay78 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1598
  %34 = load i8, i8* %arraydecay78, align 16, !dbg !1598
  %conv79 = sext i8 %34 to i32, !dbg !1598
  %cmp80 = icmp eq i32 %conv79, 44, !dbg !1600
  br i1 %cmp80, label %if.then82, label %if.end84, !dbg !1601

if.then82:                                        ; preds = %for.body76
  %35 = load i8*, i8** %p, align 8, !dbg !1602
  %arraydecay83 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1603
  call void @GetMagickToken(i8* %35, i8** %p, i8* %arraydecay83), !dbg !1604
  br label %if.end84, !dbg !1604

if.end84:                                         ; preds = %if.then82, %for.body76
  %36 = load i64, i64* %i, align 8, !dbg !1605
  switch i64 %36, label %sw.epilog100 [
    i64 0, label %sw.bb85
    i64 1, label %sw.bb90
    i64 2, label %sw.bb95
  ], !dbg !1606

sw.bb85:                                          ; preds = %if.end84
  %arraydecay86 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1607
  %call87 = call double @StringToDouble(i8* %arraydecay86, i8** null), !dbg !1610
  %red88 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 0, !dbg !1611
  %offset89 = getelementptr inbounds %struct._Correction, %struct._Correction* %red88, i32 0, i32 1, !dbg !1612
  store double %call87, double* %offset89, align 8, !dbg !1613
  br label %sw.epilog100, !dbg !1614

sw.bb90:                                          ; preds = %if.end84
  %arraydecay91 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1615
  %call92 = call double @StringToDouble(i8* %arraydecay91, i8** null), !dbg !1617
  %green93 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 1, !dbg !1618
  %offset94 = getelementptr inbounds %struct._Correction, %struct._Correction* %green93, i32 0, i32 1, !dbg !1619
  store double %call92, double* %offset94, align 8, !dbg !1620
  br label %sw.epilog100, !dbg !1621

sw.bb95:                                          ; preds = %if.end84
  %arraydecay96 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1622
  %call97 = call double @StringToDouble(i8* %arraydecay96, i8** null), !dbg !1624
  %blue98 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 2, !dbg !1625
  %offset99 = getelementptr inbounds %struct._Correction, %struct._Correction* %blue98, i32 0, i32 1, !dbg !1626
  store double %call97, double* %offset99, align 8, !dbg !1627
  br label %sw.epilog100, !dbg !1628

sw.epilog100:                                     ; preds = %if.end84, %sw.bb95, %sw.bb90, %sw.bb85
  br label %for.inc101, !dbg !1629

for.inc101:                                       ; preds = %sw.epilog100
  %37 = load i64, i64* %i, align 8, !dbg !1630
  %inc102 = add nsw i64 %37, 1, !dbg !1630
  store i64 %inc102, i64* %i, align 8, !dbg !1630
  br label %for.cond68, !dbg !1631, !llvm.loop !1632

for.end103:                                       ; preds = %land.end75
  br label %if.end104, !dbg !1634

if.end104:                                        ; preds = %for.end103, %if.end62
  %38 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %sop, align 8, !dbg !1635
  %call105 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %38, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0)), !dbg !1636
  store %struct._XMLTreeInfo* %call105, %struct._XMLTreeInfo** %power30, align 8, !dbg !1637
  %39 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %power30, align 8, !dbg !1638
  %cmp106 = icmp ne %struct._XMLTreeInfo* %39, null, !dbg !1640
  br i1 %cmp106, label %if.then108, label %if.end146, !dbg !1641

if.then108:                                       ; preds = %if.end104
  %40 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %power30, align 8, !dbg !1642
  %call109 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %40), !dbg !1644
  store i8* %call109, i8** %content, align 8, !dbg !1645
  %41 = load i8*, i8** %content, align 8, !dbg !1646
  store i8* %41, i8** %p, align 8, !dbg !1647
  store i64 0, i64* %i, align 8, !dbg !1648
  br label %for.cond110, !dbg !1650

for.cond110:                                      ; preds = %for.inc143, %if.then108
  %42 = load i8*, i8** %p, align 8, !dbg !1651
  %43 = load i8, i8* %42, align 1, !dbg !1653
  %conv111 = sext i8 %43 to i32, !dbg !1653
  %cmp112 = icmp ne i32 %conv111, 0, !dbg !1654
  br i1 %cmp112, label %land.rhs114, label %land.end117, !dbg !1655

land.rhs114:                                      ; preds = %for.cond110
  %44 = load i64, i64* %i, align 8, !dbg !1656
  %cmp115 = icmp slt i64 %44, 3, !dbg !1657
  br label %land.end117

land.end117:                                      ; preds = %land.rhs114, %for.cond110
  %45 = phi i1 [ false, %for.cond110 ], [ %cmp115, %land.rhs114 ], !dbg !1658
  br i1 %45, label %for.body118, label %for.end145, !dbg !1659

for.body118:                                      ; preds = %land.end117
  %46 = load i8*, i8** %p, align 8, !dbg !1660
  %arraydecay119 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1662
  call void @GetMagickToken(i8* %46, i8** %p, i8* %arraydecay119), !dbg !1663
  %arraydecay120 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1664
  %47 = load i8, i8* %arraydecay120, align 16, !dbg !1664
  %conv121 = sext i8 %47 to i32, !dbg !1664
  %cmp122 = icmp eq i32 %conv121, 44, !dbg !1666
  br i1 %cmp122, label %if.then124, label %if.end126, !dbg !1667

if.then124:                                       ; preds = %for.body118
  %48 = load i8*, i8** %p, align 8, !dbg !1668
  %arraydecay125 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1669
  call void @GetMagickToken(i8* %48, i8** %p, i8* %arraydecay125), !dbg !1670
  br label %if.end126, !dbg !1670

if.end126:                                        ; preds = %if.then124, %for.body118
  %49 = load i64, i64* %i, align 8, !dbg !1671
  switch i64 %49, label %sw.epilog142 [
    i64 0, label %sw.bb127
    i64 1, label %sw.bb132
    i64 2, label %sw.bb137
  ], !dbg !1672

sw.bb127:                                         ; preds = %if.end126
  %arraydecay128 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1673
  %call129 = call double @StringToDouble(i8* %arraydecay128, i8** null), !dbg !1676
  %red130 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 0, !dbg !1677
  %power131 = getelementptr inbounds %struct._Correction, %struct._Correction* %red130, i32 0, i32 2, !dbg !1678
  store double %call129, double* %power131, align 8, !dbg !1679
  br label %sw.epilog142, !dbg !1680

sw.bb132:                                         ; preds = %if.end126
  %arraydecay133 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1681
  %call134 = call double @StringToDouble(i8* %arraydecay133, i8** null), !dbg !1683
  %green135 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 1, !dbg !1684
  %power136 = getelementptr inbounds %struct._Correction, %struct._Correction* %green135, i32 0, i32 2, !dbg !1685
  store double %call134, double* %power136, align 8, !dbg !1686
  br label %sw.epilog142, !dbg !1687

sw.bb137:                                         ; preds = %if.end126
  %arraydecay138 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1688
  %call139 = call double @StringToDouble(i8* %arraydecay138, i8** null), !dbg !1690
  %blue140 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 2, !dbg !1691
  %power141 = getelementptr inbounds %struct._Correction, %struct._Correction* %blue140, i32 0, i32 2, !dbg !1692
  store double %call139, double* %power141, align 8, !dbg !1693
  br label %sw.epilog142, !dbg !1694

sw.epilog142:                                     ; preds = %if.end126, %sw.bb137, %sw.bb132, %sw.bb127
  br label %for.inc143, !dbg !1695

for.inc143:                                       ; preds = %sw.epilog142
  %50 = load i64, i64* %i, align 8, !dbg !1696
  %inc144 = add nsw i64 %50, 1, !dbg !1696
  store i64 %inc144, i64* %i, align 8, !dbg !1696
  br label %for.cond110, !dbg !1697, !llvm.loop !1698

for.end145:                                       ; preds = %land.end117
  br label %if.end146, !dbg !1700

if.end146:                                        ; preds = %for.end145, %if.end104
  br label %if.end147, !dbg !1701

if.end147:                                        ; preds = %if.end146, %if.end13
  %51 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %cc, align 8, !dbg !1702
  %call148 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %51, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0)), !dbg !1703
  store %struct._XMLTreeInfo* %call148, %struct._XMLTreeInfo** %sat, align 8, !dbg !1704
  %52 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %sat, align 8, !dbg !1705
  %cmp149 = icmp ne %struct._XMLTreeInfo* %52, null, !dbg !1707
  br i1 %cmp149, label %if.then151, label %if.end163, !dbg !1708

if.then151:                                       ; preds = %if.end147
  call void @llvm.dbg.declare(metadata %struct._XMLTreeInfo** %saturation152, metadata !1709, metadata !DIExpression()), !dbg !1711
  %53 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %sat, align 8, !dbg !1712
  %call153 = call %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo* %53, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0)), !dbg !1713
  store %struct._XMLTreeInfo* %call153, %struct._XMLTreeInfo** %saturation152, align 8, !dbg !1714
  %54 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %saturation152, align 8, !dbg !1715
  %cmp154 = icmp ne %struct._XMLTreeInfo* %54, null, !dbg !1717
  br i1 %cmp154, label %if.then156, label %if.end162, !dbg !1718

if.then156:                                       ; preds = %if.then151
  %55 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %saturation152, align 8, !dbg !1719
  %call157 = call i8* @GetXMLTreeContent(%struct._XMLTreeInfo* %55), !dbg !1721
  store i8* %call157, i8** %content, align 8, !dbg !1722
  %56 = load i8*, i8** %content, align 8, !dbg !1723
  store i8* %56, i8** %p, align 8, !dbg !1724
  %57 = load i8*, i8** %p, align 8, !dbg !1725
  %arraydecay158 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1726
  call void @GetMagickToken(i8* %57, i8** %p, i8* %arraydecay158), !dbg !1727
  %arraydecay159 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !1728
  %call160 = call double @StringToDouble(i8* %arraydecay159, i8** null), !dbg !1729
  %saturation161 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 3, !dbg !1730
  store double %call160, double* %saturation161, align 8, !dbg !1731
  br label %if.end162, !dbg !1732

if.end162:                                        ; preds = %if.then156, %if.then151
  br label %if.end163, !dbg !1733

if.end163:                                        ; preds = %if.end162, %if.end147
  %58 = load %struct._XMLTreeInfo*, %struct._XMLTreeInfo** %ccc, align 8, !dbg !1734
  %call164 = call %struct._XMLTreeInfo* @DestroyXMLTree(%struct._XMLTreeInfo* %58), !dbg !1735
  store %struct._XMLTreeInfo* %call164, %struct._XMLTreeInfo** %ccc, align 8, !dbg !1736
  %59 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1737
  %debug165 = getelementptr inbounds %struct._Image, %struct._Image* %59, i32 0, i32 59, !dbg !1739
  %60 = load i32, i32* %debug165, align 8, !dbg !1739
  %cmp166 = icmp ne i32 %60, 0, !dbg !1740
  br i1 %cmp166, label %if.then168, label %if.end199, !dbg !1741

if.then168:                                       ; preds = %if.end163
  %call169 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 16384, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 570, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0)), !dbg !1742
  %red170 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 0, !dbg !1744
  %slope171 = getelementptr inbounds %struct._Correction, %struct._Correction* %red170, i32 0, i32 0, !dbg !1745
  %61 = load double, double* %slope171, align 8, !dbg !1745
  %call172 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 16384, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 572, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0), double %61), !dbg !1746
  %red173 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 0, !dbg !1747
  %offset174 = getelementptr inbounds %struct._Correction, %struct._Correction* %red173, i32 0, i32 1, !dbg !1748
  %62 = load double, double* %offset174, align 8, !dbg !1748
  %call175 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 16384, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 574, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i64 0, i64 0), double %62), !dbg !1749
  %red176 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 0, !dbg !1750
  %power177 = getelementptr inbounds %struct._Correction, %struct._Correction* %red176, i32 0, i32 2, !dbg !1751
  %63 = load double, double* %power177, align 8, !dbg !1751
  %call178 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 16384, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 576, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0), double %63), !dbg !1752
  %green179 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 1, !dbg !1753
  %slope180 = getelementptr inbounds %struct._Correction, %struct._Correction* %green179, i32 0, i32 0, !dbg !1754
  %64 = load double, double* %slope180, align 8, !dbg !1754
  %call181 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 16384, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 578, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14, i64 0, i64 0), double %64), !dbg !1755
  %green182 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 1, !dbg !1756
  %offset183 = getelementptr inbounds %struct._Correction, %struct._Correction* %green182, i32 0, i32 1, !dbg !1757
  %65 = load double, double* %offset183, align 8, !dbg !1757
  %call184 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 16384, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 580, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.15, i64 0, i64 0), double %65), !dbg !1758
  %green185 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 1, !dbg !1759
  %power186 = getelementptr inbounds %struct._Correction, %struct._Correction* %green185, i32 0, i32 2, !dbg !1760
  %66 = load double, double* %power186, align 8, !dbg !1760
  %call187 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 16384, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 582, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.16, i64 0, i64 0), double %66), !dbg !1761
  %blue188 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 2, !dbg !1762
  %slope189 = getelementptr inbounds %struct._Correction, %struct._Correction* %blue188, i32 0, i32 0, !dbg !1763
  %67 = load double, double* %slope189, align 8, !dbg !1763
  %call190 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 16384, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 584, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i64 0, i64 0), double %67), !dbg !1764
  %blue191 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 2, !dbg !1765
  %offset192 = getelementptr inbounds %struct._Correction, %struct._Correction* %blue191, i32 0, i32 1, !dbg !1766
  %68 = load double, double* %offset192, align 8, !dbg !1766
  %call193 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 16384, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 586, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.18, i64 0, i64 0), double %68), !dbg !1767
  %blue194 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 2, !dbg !1768
  %power195 = getelementptr inbounds %struct._Correction, %struct._Correction* %blue194, i32 0, i32 2, !dbg !1769
  %69 = load double, double* %power195, align 8, !dbg !1769
  %call196 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 16384, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 588, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.19, i64 0, i64 0), double %69), !dbg !1770
  %saturation197 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 3, !dbg !1771
  %70 = load double, double* %saturation197, align 8, !dbg !1771
  %call198 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 16384, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 590, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i64 0, i64 0), double %70), !dbg !1772
  br label %if.end199, !dbg !1773

if.end199:                                        ; preds = %if.then168, %if.end163
  %call200 = call i8* @AcquireQuantumMemory(i64 65536, i64 8) #7, !dbg !1774
  %71 = bitcast i8* %call200 to %struct._PixelPacket*, !dbg !1775
  store %struct._PixelPacket* %71, %struct._PixelPacket** %cdl_map, align 8, !dbg !1776
  %72 = load %struct._PixelPacket*, %struct._PixelPacket** %cdl_map, align 8, !dbg !1777
  %cmp201 = icmp eq %struct._PixelPacket* %72, null, !dbg !1779
  br i1 %cmp201, label %if.then203, label %if.end212, !dbg !1780

if.then203:                                       ; preds = %if.end199
  %73 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1781
  %cmp204 = icmp ne %struct._Image* %73, null, !dbg !1781
  br i1 %cmp204, label %if.then206, label %if.end211, !dbg !1784

if.then206:                                       ; preds = %if.then203
  %74 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1781
  %exception207 = getelementptr inbounds %struct._Image, %struct._Image* %74, i32 0, i32 58, !dbg !1781
  %75 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1781
  %filename208 = getelementptr inbounds %struct._Image, %struct._Image* %75, i32 0, i32 53, !dbg !1781
  %arraydecay209 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename208, i64 0, i64 0, !dbg !1781
  %call210 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception207, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 596, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay209), !dbg !1781
  br label %if.end211, !dbg !1781

if.end211:                                        ; preds = %if.then206, %if.then203
  store i32 0, i32* %retval, align 4, !dbg !1784
  br label %return, !dbg !1784

if.end212:                                        ; preds = %if.end199
  store i64 0, i64* %i, align 8, !dbg !1785
  br label %for.cond213, !dbg !1787

for.cond213:                                      ; preds = %for.inc267, %if.end212
  %76 = load i64, i64* %i, align 8, !dbg !1788
  %cmp214 = icmp sle i64 %76, 65535, !dbg !1790
  br i1 %cmp214, label %for.body216, label %for.end269, !dbg !1791

for.body216:                                      ; preds = %for.cond213
  %red217 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 0, !dbg !1792
  %slope218 = getelementptr inbounds %struct._Correction, %struct._Correction* %red217, i32 0, i32 0, !dbg !1794
  %77 = load double, double* %slope218, align 8, !dbg !1794
  %78 = load i64, i64* %i, align 8, !dbg !1795
  %conv219 = sitofp i64 %78 to double, !dbg !1795
  %mul = fmul double %77, %conv219, !dbg !1796
  %div = fdiv double %mul, 6.553500e+04, !dbg !1797
  %red220 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 0, !dbg !1798
  %offset221 = getelementptr inbounds %struct._Correction, %struct._Correction* %red220, i32 0, i32 1, !dbg !1799
  %79 = load double, double* %offset221, align 8, !dbg !1799
  %add = fadd double %div, %79, !dbg !1800
  %red222 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 0, !dbg !1801
  %power223 = getelementptr inbounds %struct._Correction, %struct._Correction* %red222, i32 0, i32 2, !dbg !1802
  %80 = load double, double* %power223, align 8, !dbg !1802
  %call224 = call double @pow(double %add, double %80) #6, !dbg !1803
  %mul225 = fmul double 6.553500e+04, %call224, !dbg !1804
  %conv226 = fptrunc double %mul225 to float, !dbg !1805
  %call227 = call zeroext i16 @ScaleMapToQuantum(float %conv226), !dbg !1806
  %conv228 = uitofp i16 %call227 to float, !dbg !1807
  %call229 = call zeroext i16 @ClampToQuantum(float %conv228), !dbg !1808
  %81 = load %struct._PixelPacket*, %struct._PixelPacket** %cdl_map, align 8, !dbg !1809
  %82 = load i64, i64* %i, align 8, !dbg !1810
  %arrayidx = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %81, i64 %82, !dbg !1809
  %red230 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx, i32 0, i32 2, !dbg !1811
  store i16 %call229, i16* %red230, align 2, !dbg !1812
  %green231 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 1, !dbg !1813
  %slope232 = getelementptr inbounds %struct._Correction, %struct._Correction* %green231, i32 0, i32 0, !dbg !1814
  %83 = load double, double* %slope232, align 8, !dbg !1814
  %84 = load i64, i64* %i, align 8, !dbg !1815
  %conv233 = sitofp i64 %84 to double, !dbg !1815
  %mul234 = fmul double %83, %conv233, !dbg !1816
  %div235 = fdiv double %mul234, 6.553500e+04, !dbg !1817
  %green236 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 1, !dbg !1818
  %offset237 = getelementptr inbounds %struct._Correction, %struct._Correction* %green236, i32 0, i32 1, !dbg !1819
  %85 = load double, double* %offset237, align 8, !dbg !1819
  %add238 = fadd double %div235, %85, !dbg !1820
  %green239 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 1, !dbg !1821
  %power240 = getelementptr inbounds %struct._Correction, %struct._Correction* %green239, i32 0, i32 2, !dbg !1822
  %86 = load double, double* %power240, align 8, !dbg !1822
  %call241 = call double @pow(double %add238, double %86) #6, !dbg !1823
  %mul242 = fmul double 6.553500e+04, %call241, !dbg !1824
  %conv243 = fptrunc double %mul242 to float, !dbg !1825
  %call244 = call zeroext i16 @ScaleMapToQuantum(float %conv243), !dbg !1826
  %conv245 = uitofp i16 %call244 to float, !dbg !1827
  %call246 = call zeroext i16 @ClampToQuantum(float %conv245), !dbg !1828
  %87 = load %struct._PixelPacket*, %struct._PixelPacket** %cdl_map, align 8, !dbg !1829
  %88 = load i64, i64* %i, align 8, !dbg !1830
  %arrayidx247 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %87, i64 %88, !dbg !1829
  %green248 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx247, i32 0, i32 1, !dbg !1831
  store i16 %call246, i16* %green248, align 2, !dbg !1832
  %blue249 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 2, !dbg !1833
  %slope250 = getelementptr inbounds %struct._Correction, %struct._Correction* %blue249, i32 0, i32 0, !dbg !1834
  %89 = load double, double* %slope250, align 8, !dbg !1834
  %90 = load i64, i64* %i, align 8, !dbg !1835
  %conv251 = sitofp i64 %90 to double, !dbg !1835
  %mul252 = fmul double %89, %conv251, !dbg !1836
  %div253 = fdiv double %mul252, 6.553500e+04, !dbg !1837
  %blue254 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 2, !dbg !1838
  %offset255 = getelementptr inbounds %struct._Correction, %struct._Correction* %blue254, i32 0, i32 1, !dbg !1839
  %91 = load double, double* %offset255, align 8, !dbg !1839
  %add256 = fadd double %div253, %91, !dbg !1840
  %blue257 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 2, !dbg !1841
  %power258 = getelementptr inbounds %struct._Correction, %struct._Correction* %blue257, i32 0, i32 2, !dbg !1842
  %92 = load double, double* %power258, align 8, !dbg !1842
  %call259 = call double @pow(double %add256, double %92) #6, !dbg !1843
  %mul260 = fmul double 6.553500e+04, %call259, !dbg !1844
  %conv261 = fptrunc double %mul260 to float, !dbg !1845
  %call262 = call zeroext i16 @ScaleMapToQuantum(float %conv261), !dbg !1846
  %conv263 = uitofp i16 %call262 to float, !dbg !1847
  %call264 = call zeroext i16 @ClampToQuantum(float %conv263), !dbg !1848
  %93 = load %struct._PixelPacket*, %struct._PixelPacket** %cdl_map, align 8, !dbg !1849
  %94 = load i64, i64* %i, align 8, !dbg !1850
  %arrayidx265 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %93, i64 %94, !dbg !1849
  %blue266 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx265, i32 0, i32 0, !dbg !1851
  store i16 %call264, i16* %blue266, align 2, !dbg !1852
  br label %for.inc267, !dbg !1853

for.inc267:                                       ; preds = %for.body216
  %95 = load i64, i64* %i, align 8, !dbg !1854
  %inc268 = add nsw i64 %95, 1, !dbg !1854
  store i64 %inc268, i64* %i, align 8, !dbg !1854
  br label %for.cond213, !dbg !1855, !llvm.loop !1856

for.end269:                                       ; preds = %for.cond213
  %96 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1858
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %96, i32 0, i32 0, !dbg !1860
  %97 = load i32, i32* %storage_class, align 8, !dbg !1860
  %cmp270 = icmp eq i32 %97, 2, !dbg !1861
  br i1 %cmp270, label %if.then272, label %if.end351, !dbg !1862

if.then272:                                       ; preds = %for.end269
  store i64 0, i64* %i, align 8, !dbg !1863
  br label %for.cond273, !dbg !1866

for.cond273:                                      ; preds = %for.inc348, %if.then272
  %98 = load i64, i64* %i, align 8, !dbg !1867
  %99 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1869
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %99, i32 0, i32 10, !dbg !1870
  %100 = load i64, i64* %colors, align 8, !dbg !1870
  %cmp274 = icmp slt i64 %98, %100, !dbg !1871
  br i1 %cmp274, label %for.body276, label %for.end350, !dbg !1872

for.body276:                                      ; preds = %for.cond273
  call void @llvm.dbg.declare(metadata double* %luma, metadata !1873, metadata !DIExpression()), !dbg !1875
  %101 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1876
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %101, i32 0, i32 11, !dbg !1877
  %102 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !1877
  %103 = load i64, i64* %i, align 8, !dbg !1878
  %arrayidx277 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %102, i64 %103, !dbg !1876
  %red278 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx277, i32 0, i32 2, !dbg !1879
  %104 = load i16, i16* %red278, align 2, !dbg !1879
  %conv279 = zext i16 %104 to i32, !dbg !1876
  %conv280 = sitofp i32 %conv279 to double, !dbg !1876
  %mul281 = fmul double 2.126560e-01, %conv280, !dbg !1880
  %105 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1881
  %colormap282 = getelementptr inbounds %struct._Image, %struct._Image* %105, i32 0, i32 11, !dbg !1882
  %106 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap282, align 8, !dbg !1882
  %107 = load i64, i64* %i, align 8, !dbg !1883
  %arrayidx283 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %106, i64 %107, !dbg !1881
  %green284 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx283, i32 0, i32 1, !dbg !1884
  %108 = load i16, i16* %green284, align 2, !dbg !1884
  %conv285 = zext i16 %108 to i32, !dbg !1881
  %conv286 = sitofp i32 %conv285 to double, !dbg !1881
  %mul287 = fmul double 0x3FE6E29307AF20EA, %conv286, !dbg !1885
  %add288 = fadd double %mul281, %mul287, !dbg !1886
  %109 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1887
  %colormap289 = getelementptr inbounds %struct._Image, %struct._Image* %109, i32 0, i32 11, !dbg !1888
  %110 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap289, align 8, !dbg !1888
  %111 = load i64, i64* %i, align 8, !dbg !1889
  %arrayidx290 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %110, i64 %111, !dbg !1887
  %blue291 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx290, i32 0, i32 0, !dbg !1890
  %112 = load i16, i16* %blue291, align 2, !dbg !1890
  %conv292 = zext i16 %112 to i32, !dbg !1887
  %conv293 = sitofp i32 %conv292 to double, !dbg !1887
  %mul294 = fmul double 7.218600e-02, %conv293, !dbg !1891
  %add295 = fadd double %add288, %mul294, !dbg !1892
  store double %add295, double* %luma, align 8, !dbg !1893
  %113 = load double, double* %luma, align 8, !dbg !1894
  %saturation296 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 3, !dbg !1895
  %114 = load double, double* %saturation296, align 8, !dbg !1895
  %115 = load %struct._PixelPacket*, %struct._PixelPacket** %cdl_map, align 8, !dbg !1896
  %116 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1897
  %colormap297 = getelementptr inbounds %struct._Image, %struct._Image* %116, i32 0, i32 11, !dbg !1898
  %117 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap297, align 8, !dbg !1898
  %118 = load i64, i64* %i, align 8, !dbg !1899
  %arrayidx298 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %117, i64 %118, !dbg !1897
  %red299 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx298, i32 0, i32 2, !dbg !1900
  %119 = load i16, i16* %red299, align 2, !dbg !1900
  %call300 = call i32 @ScaleQuantumToMap(i16 zeroext %119), !dbg !1901
  %idxprom = zext i32 %call300 to i64, !dbg !1896
  %arrayidx301 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %115, i64 %idxprom, !dbg !1896
  %red302 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx301, i32 0, i32 2, !dbg !1902
  %120 = load i16, i16* %red302, align 2, !dbg !1902
  %conv303 = zext i16 %120 to i32, !dbg !1896
  %conv304 = sitofp i32 %conv303 to double, !dbg !1896
  %mul305 = fmul double %114, %conv304, !dbg !1903
  %add306 = fadd double %113, %mul305, !dbg !1904
  %121 = load double, double* %luma, align 8, !dbg !1905
  %sub = fsub double %add306, %121, !dbg !1906
  %conv307 = fptrunc double %sub to float, !dbg !1894
  %call308 = call zeroext i16 @ClampToQuantum(float %conv307), !dbg !1907
  %122 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1908
  %colormap309 = getelementptr inbounds %struct._Image, %struct._Image* %122, i32 0, i32 11, !dbg !1909
  %123 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap309, align 8, !dbg !1909
  %124 = load i64, i64* %i, align 8, !dbg !1910
  %arrayidx310 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %123, i64 %124, !dbg !1908
  %red311 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx310, i32 0, i32 2, !dbg !1911
  store i16 %call308, i16* %red311, align 2, !dbg !1912
  %125 = load double, double* %luma, align 8, !dbg !1913
  %saturation312 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 3, !dbg !1914
  %126 = load double, double* %saturation312, align 8, !dbg !1914
  %127 = load %struct._PixelPacket*, %struct._PixelPacket** %cdl_map, align 8, !dbg !1915
  %128 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1916
  %colormap313 = getelementptr inbounds %struct._Image, %struct._Image* %128, i32 0, i32 11, !dbg !1917
  %129 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap313, align 8, !dbg !1917
  %130 = load i64, i64* %i, align 8, !dbg !1918
  %arrayidx314 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %129, i64 %130, !dbg !1916
  %green315 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx314, i32 0, i32 1, !dbg !1919
  %131 = load i16, i16* %green315, align 2, !dbg !1919
  %call316 = call i32 @ScaleQuantumToMap(i16 zeroext %131), !dbg !1920
  %idxprom317 = zext i32 %call316 to i64, !dbg !1915
  %arrayidx318 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %127, i64 %idxprom317, !dbg !1915
  %green319 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx318, i32 0, i32 1, !dbg !1921
  %132 = load i16, i16* %green319, align 2, !dbg !1921
  %conv320 = zext i16 %132 to i32, !dbg !1915
  %conv321 = sitofp i32 %conv320 to double, !dbg !1915
  %mul322 = fmul double %126, %conv321, !dbg !1922
  %add323 = fadd double %125, %mul322, !dbg !1923
  %133 = load double, double* %luma, align 8, !dbg !1924
  %sub324 = fsub double %add323, %133, !dbg !1925
  %conv325 = fptrunc double %sub324 to float, !dbg !1913
  %call326 = call zeroext i16 @ClampToQuantum(float %conv325), !dbg !1926
  %134 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1927
  %colormap327 = getelementptr inbounds %struct._Image, %struct._Image* %134, i32 0, i32 11, !dbg !1928
  %135 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap327, align 8, !dbg !1928
  %136 = load i64, i64* %i, align 8, !dbg !1929
  %arrayidx328 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %135, i64 %136, !dbg !1927
  %green329 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx328, i32 0, i32 1, !dbg !1930
  store i16 %call326, i16* %green329, align 2, !dbg !1931
  %137 = load double, double* %luma, align 8, !dbg !1932
  %saturation330 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 3, !dbg !1933
  %138 = load double, double* %saturation330, align 8, !dbg !1933
  %139 = load %struct._PixelPacket*, %struct._PixelPacket** %cdl_map, align 8, !dbg !1934
  %140 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1935
  %colormap331 = getelementptr inbounds %struct._Image, %struct._Image* %140, i32 0, i32 11, !dbg !1936
  %141 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap331, align 8, !dbg !1936
  %142 = load i64, i64* %i, align 8, !dbg !1937
  %arrayidx332 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %141, i64 %142, !dbg !1935
  %blue333 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx332, i32 0, i32 0, !dbg !1938
  %143 = load i16, i16* %blue333, align 2, !dbg !1938
  %call334 = call i32 @ScaleQuantumToMap(i16 zeroext %143), !dbg !1939
  %idxprom335 = zext i32 %call334 to i64, !dbg !1934
  %arrayidx336 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %139, i64 %idxprom335, !dbg !1934
  %blue337 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx336, i32 0, i32 0, !dbg !1940
  %144 = load i16, i16* %blue337, align 2, !dbg !1940
  %conv338 = zext i16 %144 to i32, !dbg !1934
  %conv339 = sitofp i32 %conv338 to double, !dbg !1934
  %mul340 = fmul double %138, %conv339, !dbg !1941
  %add341 = fadd double %137, %mul340, !dbg !1942
  %145 = load double, double* %luma, align 8, !dbg !1943
  %sub342 = fsub double %add341, %145, !dbg !1944
  %conv343 = fptrunc double %sub342 to float, !dbg !1932
  %call344 = call zeroext i16 @ClampToQuantum(float %conv343), !dbg !1945
  %146 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1946
  %colormap345 = getelementptr inbounds %struct._Image, %struct._Image* %146, i32 0, i32 11, !dbg !1947
  %147 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap345, align 8, !dbg !1947
  %148 = load i64, i64* %i, align 8, !dbg !1948
  %arrayidx346 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %147, i64 %148, !dbg !1946
  %blue347 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx346, i32 0, i32 0, !dbg !1949
  store i16 %call344, i16* %blue347, align 2, !dbg !1950
  br label %for.inc348, !dbg !1951

for.inc348:                                       ; preds = %for.body276
  %149 = load i64, i64* %i, align 8, !dbg !1952
  %inc349 = add nsw i64 %149, 1, !dbg !1952
  store i64 %inc349, i64* %i, align 8, !dbg !1952
  br label %for.cond273, !dbg !1953, !llvm.loop !1954

for.end350:                                       ; preds = %for.cond273
  br label %if.end351, !dbg !1956

if.end351:                                        ; preds = %for.end350, %for.end269
  store i32 1, i32* %status, align 4, !dbg !1957
  store i64 0, i64* %progress, align 8, !dbg !1958
  %150 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1959
  %exception352 = getelementptr inbounds %struct._Image, %struct._Image* %150, i32 0, i32 58, !dbg !1960
  store %struct._ExceptionInfo* %exception352, %struct._ExceptionInfo** %exception, align 8, !dbg !1961
  %151 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1962
  %152 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1963
  %call353 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %151, %struct._ExceptionInfo* %152), !dbg !1964
  store %struct._CacheView* %call353, %struct._CacheView** %image_view, align 8, !dbg !1965
  store i64 0, i64* %y, align 8, !dbg !1966
  br label %for.cond354, !dbg !1968

for.cond354:                                      ; preds = %for.inc448, %if.end351
  %153 = load i64, i64* %y, align 8, !dbg !1969
  %154 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1971
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %154, i32 0, i32 8, !dbg !1972
  %155 = load i64, i64* %rows, align 8, !dbg !1972
  %cmp355 = icmp slt i64 %153, %155, !dbg !1973
  br i1 %cmp355, label %for.body357, label %for.end450, !dbg !1974

for.body357:                                      ; preds = %for.cond354
  call void @llvm.dbg.declare(metadata double* %luma358, metadata !1975, metadata !DIExpression()), !dbg !1977
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !1978, metadata !DIExpression()), !dbg !1979
  call void @llvm.dbg.declare(metadata i64* %x, metadata !1980, metadata !DIExpression()), !dbg !1981
  %156 = load i32, i32* %status, align 4, !dbg !1982
  %cmp359 = icmp eq i32 %156, 0, !dbg !1984
  br i1 %cmp359, label %if.then361, label %if.end362, !dbg !1985

if.then361:                                       ; preds = %for.body357
  br label %for.inc448, !dbg !1986

if.end362:                                        ; preds = %for.body357
  %157 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1987
  %158 = load i64, i64* %y, align 8, !dbg !1988
  %159 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1989
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %159, i32 0, i32 7, !dbg !1990
  %160 = load i64, i64* %columns, align 8, !dbg !1990
  %161 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1991
  %call363 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %157, i64 0, i64 %158, i64 %160, i64 1, %struct._ExceptionInfo* %161), !dbg !1992
  store %struct._PixelPacket* %call363, %struct._PixelPacket** %q, align 8, !dbg !1993
  %162 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1994
  %cmp364 = icmp eq %struct._PixelPacket* %162, null, !dbg !1996
  br i1 %cmp364, label %if.then366, label %if.end367, !dbg !1997

if.then366:                                       ; preds = %if.end362
  store i32 0, i32* %status, align 4, !dbg !1998
  br label %for.inc448, !dbg !2000

if.end367:                                        ; preds = %if.end362
  store i64 0, i64* %x, align 8, !dbg !2001
  br label %for.cond368, !dbg !2003

for.cond368:                                      ; preds = %for.inc429, %if.end367
  %163 = load i64, i64* %x, align 8, !dbg !2004
  %164 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2006
  %columns369 = getelementptr inbounds %struct._Image, %struct._Image* %164, i32 0, i32 7, !dbg !2007
  %165 = load i64, i64* %columns369, align 8, !dbg !2007
  %cmp370 = icmp slt i64 %163, %165, !dbg !2008
  br i1 %cmp370, label %for.body372, label %for.end431, !dbg !2009

for.body372:                                      ; preds = %for.cond368
  %166 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2010
  %red373 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %166, i32 0, i32 2, !dbg !2010
  %167 = load i16, i16* %red373, align 2, !dbg !2010
  %conv374 = zext i16 %167 to i32, !dbg !2010
  %conv375 = sitofp i32 %conv374 to double, !dbg !2010
  %mul376 = fmul double 2.126560e-01, %conv375, !dbg !2012
  %168 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2013
  %green377 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %168, i32 0, i32 1, !dbg !2013
  %169 = load i16, i16* %green377, align 2, !dbg !2013
  %conv378 = zext i16 %169 to i32, !dbg !2013
  %conv379 = sitofp i32 %conv378 to double, !dbg !2013
  %mul380 = fmul double 0x3FE6E29307AF20EA, %conv379, !dbg !2014
  %add381 = fadd double %mul376, %mul380, !dbg !2015
  %170 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2016
  %blue382 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %170, i32 0, i32 0, !dbg !2016
  %171 = load i16, i16* %blue382, align 2, !dbg !2016
  %conv383 = zext i16 %171 to i32, !dbg !2016
  %conv384 = sitofp i32 %conv383 to double, !dbg !2016
  %mul385 = fmul double 7.218600e-02, %conv384, !dbg !2017
  %add386 = fadd double %add381, %mul385, !dbg !2018
  store double %add386, double* %luma358, align 8, !dbg !2019
  %172 = load double, double* %luma358, align 8, !dbg !2020
  %saturation387 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 3, !dbg !2020
  %173 = load double, double* %saturation387, align 8, !dbg !2020
  %174 = load %struct._PixelPacket*, %struct._PixelPacket** %cdl_map, align 8, !dbg !2020
  %175 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2020
  %red388 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %175, i32 0, i32 2, !dbg !2020
  %176 = load i16, i16* %red388, align 2, !dbg !2020
  %call389 = call i32 @ScaleQuantumToMap(i16 zeroext %176), !dbg !2020
  %idxprom390 = zext i32 %call389 to i64, !dbg !2020
  %arrayidx391 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %174, i64 %idxprom390, !dbg !2020
  %red392 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx391, i32 0, i32 2, !dbg !2020
  %177 = load i16, i16* %red392, align 2, !dbg !2020
  %conv393 = zext i16 %177 to i32, !dbg !2020
  %conv394 = sitofp i32 %conv393 to double, !dbg !2020
  %178 = load double, double* %luma358, align 8, !dbg !2020
  %sub395 = fsub double %conv394, %178, !dbg !2020
  %mul396 = fmul double %173, %sub395, !dbg !2020
  %add397 = fadd double %172, %mul396, !dbg !2020
  %conv398 = fptrunc double %add397 to float, !dbg !2020
  %call399 = call zeroext i16 @ClampToQuantum(float %conv398), !dbg !2020
  %179 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2020
  %red400 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %179, i32 0, i32 2, !dbg !2020
  store i16 %call399, i16* %red400, align 2, !dbg !2020
  %180 = load double, double* %luma358, align 8, !dbg !2021
  %saturation401 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 3, !dbg !2021
  %181 = load double, double* %saturation401, align 8, !dbg !2021
  %182 = load %struct._PixelPacket*, %struct._PixelPacket** %cdl_map, align 8, !dbg !2021
  %183 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2021
  %green402 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %183, i32 0, i32 1, !dbg !2021
  %184 = load i16, i16* %green402, align 2, !dbg !2021
  %call403 = call i32 @ScaleQuantumToMap(i16 zeroext %184), !dbg !2021
  %idxprom404 = zext i32 %call403 to i64, !dbg !2021
  %arrayidx405 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %182, i64 %idxprom404, !dbg !2021
  %green406 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx405, i32 0, i32 1, !dbg !2021
  %185 = load i16, i16* %green406, align 2, !dbg !2021
  %conv407 = zext i16 %185 to i32, !dbg !2021
  %conv408 = sitofp i32 %conv407 to double, !dbg !2021
  %186 = load double, double* %luma358, align 8, !dbg !2021
  %sub409 = fsub double %conv408, %186, !dbg !2021
  %mul410 = fmul double %181, %sub409, !dbg !2021
  %add411 = fadd double %180, %mul410, !dbg !2021
  %conv412 = fptrunc double %add411 to float, !dbg !2021
  %call413 = call zeroext i16 @ClampToQuantum(float %conv412), !dbg !2021
  %187 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2021
  %green414 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %187, i32 0, i32 1, !dbg !2021
  store i16 %call413, i16* %green414, align 2, !dbg !2021
  %188 = load double, double* %luma358, align 8, !dbg !2022
  %saturation415 = getelementptr inbounds %struct._ColorCorrection, %struct._ColorCorrection* %color_correction, i32 0, i32 3, !dbg !2022
  %189 = load double, double* %saturation415, align 8, !dbg !2022
  %190 = load %struct._PixelPacket*, %struct._PixelPacket** %cdl_map, align 8, !dbg !2022
  %191 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2022
  %blue416 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %191, i32 0, i32 0, !dbg !2022
  %192 = load i16, i16* %blue416, align 2, !dbg !2022
  %call417 = call i32 @ScaleQuantumToMap(i16 zeroext %192), !dbg !2022
  %idxprom418 = zext i32 %call417 to i64, !dbg !2022
  %arrayidx419 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %190, i64 %idxprom418, !dbg !2022
  %blue420 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx419, i32 0, i32 0, !dbg !2022
  %193 = load i16, i16* %blue420, align 2, !dbg !2022
  %conv421 = zext i16 %193 to i32, !dbg !2022
  %conv422 = sitofp i32 %conv421 to double, !dbg !2022
  %194 = load double, double* %luma358, align 8, !dbg !2022
  %sub423 = fsub double %conv422, %194, !dbg !2022
  %mul424 = fmul double %189, %sub423, !dbg !2022
  %add425 = fadd double %188, %mul424, !dbg !2022
  %conv426 = fptrunc double %add425 to float, !dbg !2022
  %call427 = call zeroext i16 @ClampToQuantum(float %conv426), !dbg !2022
  %195 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2022
  %blue428 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %195, i32 0, i32 0, !dbg !2022
  store i16 %call427, i16* %blue428, align 2, !dbg !2022
  %196 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2023
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %196, i32 1, !dbg !2023
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !2023
  br label %for.inc429, !dbg !2024

for.inc429:                                       ; preds = %for.body372
  %197 = load i64, i64* %x, align 8, !dbg !2025
  %inc430 = add nsw i64 %197, 1, !dbg !2025
  store i64 %inc430, i64* %x, align 8, !dbg !2025
  br label %for.cond368, !dbg !2026, !llvm.loop !2027

for.end431:                                       ; preds = %for.cond368
  %198 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2029
  %199 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2031
  %call432 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %198, %struct._ExceptionInfo* %199), !dbg !2032
  %cmp433 = icmp eq i32 %call432, 0, !dbg !2033
  br i1 %cmp433, label %if.then435, label %if.end436, !dbg !2034

if.then435:                                       ; preds = %for.end431
  store i32 0, i32* %status, align 4, !dbg !2035
  br label %if.end436, !dbg !2036

if.end436:                                        ; preds = %if.then435, %for.end431
  %200 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2037
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %200, i32 0, i32 47, !dbg !2039
  %201 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !2039
  %cmp437 = icmp ne i32 (i8*, i64, i64, i8*)* %201, null, !dbg !2040
  br i1 %cmp437, label %if.then439, label %if.end447, !dbg !2041

if.then439:                                       ; preds = %if.end436
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !2042, metadata !DIExpression()), !dbg !2044
  %202 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2045
  %203 = load i64, i64* %progress, align 8, !dbg !2046
  %inc440 = add nsw i64 %203, 1, !dbg !2046
  store i64 %inc440, i64* %progress, align 8, !dbg !2046
  %204 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2047
  %rows441 = getelementptr inbounds %struct._Image, %struct._Image* %204, i32 0, i32 8, !dbg !2048
  %205 = load i64, i64* %rows441, align 8, !dbg !2048
  %call442 = call i32 @SetImageProgress(%struct._Image* %202, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i64 0, i64 0), i64 %203, i64 %205), !dbg !2049
  store i32 %call442, i32* %proceed, align 4, !dbg !2050
  %206 = load i32, i32* %proceed, align 4, !dbg !2051
  %cmp443 = icmp eq i32 %206, 0, !dbg !2053
  br i1 %cmp443, label %if.then445, label %if.end446, !dbg !2054

if.then445:                                       ; preds = %if.then439
  store i32 0, i32* %status, align 4, !dbg !2055
  br label %if.end446, !dbg !2056

if.end446:                                        ; preds = %if.then445, %if.then439
  br label %if.end447, !dbg !2057

if.end447:                                        ; preds = %if.end446, %if.end436
  br label %for.inc448, !dbg !2058

for.inc448:                                       ; preds = %if.end447, %if.then366, %if.then361
  %207 = load i64, i64* %y, align 8, !dbg !2059
  %inc449 = add nsw i64 %207, 1, !dbg !2059
  store i64 %inc449, i64* %y, align 8, !dbg !2059
  br label %for.cond354, !dbg !2060, !llvm.loop !2061

for.end450:                                       ; preds = %for.cond354
  %208 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2063
  %call451 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %208), !dbg !2064
  store %struct._CacheView* %call451, %struct._CacheView** %image_view, align 8, !dbg !2065
  %209 = load %struct._PixelPacket*, %struct._PixelPacket** %cdl_map, align 8, !dbg !2066
  %210 = bitcast %struct._PixelPacket* %209 to i8*, !dbg !2066
  %call452 = call i8* @RelinquishMagickMemory(i8* %210), !dbg !2067
  %211 = bitcast i8* %call452 to %struct._PixelPacket*, !dbg !2068
  store %struct._PixelPacket* %211, %struct._PixelPacket** %cdl_map, align 8, !dbg !2069
  %212 = load i32, i32* %status, align 4, !dbg !2070
  store i32 %212, i32* %retval, align 4, !dbg !2071
  br label %return, !dbg !2071

return:                                           ; preds = %for.end450, %if.end211, %if.then11, %if.then7, %if.then2
  %213 = load i32, i32* %retval, align 4, !dbg !2072
  ret i32 %213, !dbg !2072
}

declare dso_local %struct._XMLTreeInfo* @NewXMLTree(i8*, %struct._ExceptionInfo*) #3

declare dso_local %struct._XMLTreeInfo* @GetXMLTreeChild(%struct._XMLTreeInfo*, i8*) #3

declare dso_local %struct._XMLTreeInfo* @DestroyXMLTree(%struct._XMLTreeInfo*) #3

declare dso_local i8* @GetXMLTreeContent(%struct._XMLTreeInfo*) #3

declare dso_local void @GetMagickToken(i8*, i8**, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal double @StringToDouble(i8* noalias %string, i8** noalias %sentinal) #0 !dbg !2073 {
entry:
  %string.addr = alloca i8*, align 8
  %sentinal.addr = alloca i8**, align 8
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !2079, metadata !DIExpression()), !dbg !2080
  store i8** %sentinal, i8*** %sentinal.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %sentinal.addr, metadata !2081, metadata !DIExpression()), !dbg !2082
  %0 = load i8*, i8** %string.addr, align 8, !dbg !2083
  %1 = load i8**, i8*** %sentinal.addr, align 8, !dbg !2084
  %call = call double @InterpretLocaleValue(i8* %0, i8** %1), !dbg !2085
  ret double %call, !dbg !2086
}

; Function Attrs: allocsize(0,1)
declare dso_local i8* @AcquireQuantumMemory(i64, i64) #4

declare dso_local i32 @ThrowMagickException(%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ClampToQuantum(float %value) #0 !dbg !2087 {
entry:
  %retval = alloca i16, align 2
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !2091, metadata !DIExpression()), !dbg !2092
  %0 = load float, float* %value.addr, align 4, !dbg !2093
  %cmp = fcmp ole float %0, 0.000000e+00, !dbg !2095
  br i1 %cmp, label %if.then, label %if.end, !dbg !2096

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !2097
  br label %return, !dbg !2097

if.end:                                           ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !2098
  %cmp1 = fcmp oge float %1, 6.553500e+04, !dbg !2100
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !2101

if.then2:                                         ; preds = %if.end
  store i16 -1, i16* %retval, align 2, !dbg !2102
  br label %return, !dbg !2102

if.end3:                                          ; preds = %if.end
  %2 = load float, float* %value.addr, align 4, !dbg !2103
  %add = fadd float %2, 5.000000e-01, !dbg !2104
  %conv = fptoui float %add to i16, !dbg !2105
  store i16 %conv, i16* %retval, align 2, !dbg !2106
  br label %return, !dbg !2106

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %3 = load i16, i16* %retval, align 2, !dbg !2107
  ret i16 %3, !dbg !2107
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ScaleMapToQuantum(float %value) #0 !dbg !2108 {
entry:
  %retval = alloca i16, align 2
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !2110, metadata !DIExpression()), !dbg !2111
  %0 = load float, float* %value.addr, align 4, !dbg !2112
  %conv = fpext float %0 to double, !dbg !2112
  %cmp = fcmp ole double %conv, 0.000000e+00, !dbg !2114
  br i1 %cmp, label %if.then, label %if.end, !dbg !2115

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !2116
  br label %return, !dbg !2116

if.end:                                           ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !2117
  %cmp2 = fcmp oge float %1, 6.553500e+04, !dbg !2119
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !2120

if.then4:                                         ; preds = %if.end
  store i16 -1, i16* %retval, align 2, !dbg !2121
  br label %return, !dbg !2121

if.end5:                                          ; preds = %if.end
  %2 = load float, float* %value.addr, align 4, !dbg !2122
  %conv6 = fpext float %2 to double, !dbg !2122
  %add = fadd double %conv6, 5.000000e-01, !dbg !2123
  %conv7 = fptoui double %add to i16, !dbg !2124
  store i16 %conv7, i16* %retval, align 2, !dbg !2125
  br label %return, !dbg !2125

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %3 = load i16, i16* %retval, align 2, !dbg !2126
  ret i16 %3, !dbg !2126
}

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @ScaleQuantumToMap(i16 zeroext %quantum) #0 !dbg !2127 {
entry:
  %retval = alloca i32, align 4
  %quantum.addr = alloca i16, align 2
  store i16 %quantum, i16* %quantum.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %quantum.addr, metadata !2131, metadata !DIExpression()), !dbg !2132
  %0 = load i16, i16* %quantum.addr, align 2, !dbg !2133
  %conv = zext i16 %0 to i32, !dbg !2133
  %cmp = icmp sge i32 %conv, 65535, !dbg !2135
  br i1 %cmp, label %if.then, label %if.end, !dbg !2136

if.then:                                          ; preds = %entry
  store i32 65535, i32* %retval, align 4, !dbg !2137
  br label %return, !dbg !2137

if.end:                                           ; preds = %entry
  %1 = load i16, i16* %quantum.addr, align 2, !dbg !2138
  %conv2 = zext i16 %1 to i32, !dbg !2139
  store i32 %conv2, i32* %retval, align 4, !dbg !2140
  br label %return, !dbg !2140

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !2141
  ret i32 %2, !dbg !2141
}

declare dso_local %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image*, %struct._ExceptionInfo*) #3

declare dso_local %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #3

declare dso_local i32 @SyncCacheViewAuthenticPixels(%struct._CacheView*, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @SetImageProgress(%struct._Image* %image, i8* %tag, i64 %offset, i64 %extent) #0 !dbg !2142 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %tag.addr = alloca i8*, align 8
  %offset.addr = alloca i64, align 8
  %extent.addr = alloca i64, align 8
  %message = alloca [4096 x i8], align 16
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2148, metadata !DIExpression()), !dbg !2149
  store i8* %tag, i8** %tag.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tag.addr, metadata !2150, metadata !DIExpression()), !dbg !2151
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !2152, metadata !DIExpression()), !dbg !2153
  store i64 %extent, i64* %extent.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %extent.addr, metadata !2154, metadata !DIExpression()), !dbg !2155
  call void @llvm.dbg.declare(metadata [4096 x i8]* %message, metadata !2156, metadata !DIExpression()), !dbg !2157
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2158
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 47, !dbg !2160
  %1 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !2160
  %cmp = icmp eq i32 (i8*, i64, i64, i8*)* %1, null, !dbg !2161
  br i1 %cmp, label %if.then, label %if.end, !dbg !2162

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !2163
  br label %return, !dbg !2163

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %message, i64 0, i64 0, !dbg !2164
  %2 = load i8*, i8** %tag.addr, align 8, !dbg !2165
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2166
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !2167
  %arraydecay1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2166
  %call = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0), i8* %2, i8* %arraydecay1), !dbg !2168
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2169
  %progress_monitor2 = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 47, !dbg !2170
  %5 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor2, align 8, !dbg !2170
  %arraydecay3 = getelementptr inbounds [4096 x i8], [4096 x i8]* %message, i64 0, i64 0, !dbg !2171
  %6 = load i64, i64* %offset.addr, align 8, !dbg !2172
  %7 = load i64, i64* %extent.addr, align 8, !dbg !2173
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2174
  %client_data = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 48, !dbg !2175
  %9 = load i8*, i8** %client_data, align 8, !dbg !2175
  %call4 = call i32 %5(i8* %arraydecay3, i64 %6, i64 %7, i8* %9), !dbg !2169
  store i32 %call4, i32* %retval, align 4, !dbg !2176
  br label %return, !dbg !2176

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !2177
  ret i32 %10, !dbg !2177
}

declare dso_local %struct._CacheView* @DestroyCacheView(%struct._CacheView*) #3

declare dso_local i8* @RelinquishMagickMemory(i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ClutImage(%struct._Image* %image, %struct._Image* %clut_image) #0 !dbg !2178 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %clut_image.addr = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2181, metadata !DIExpression()), !dbg !2182
  store %struct._Image* %clut_image, %struct._Image** %clut_image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %clut_image.addr, metadata !2183, metadata !DIExpression()), !dbg !2184
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2185
  %1 = load %struct._Image*, %struct._Image** %clut_image.addr, align 8, !dbg !2186
  %call = call i32 @ClutImageChannel(%struct._Image* %0, i32 134217719, %struct._Image* %1), !dbg !2187
  ret i32 %call, !dbg !2188
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ClutImageChannel(%struct._Image* %image, i32 %channel, %struct._Image* %clut_image) #0 !dbg !2189 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %clut_image.addr = alloca %struct._Image*, align 8
  %clut_view = alloca %struct._CacheView*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %clut_map = alloca %struct._MagickPixelPacket*, align 8
  %i = alloca i64, align 8
  %adjust = alloca i64, align 8
  %y = alloca i64, align 8
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2192, metadata !DIExpression()), !dbg !2193
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !2194, metadata !DIExpression()), !dbg !2195
  store %struct._Image* %clut_image, %struct._Image** %clut_image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %clut_image.addr, metadata !2196, metadata !DIExpression()), !dbg !2197
  call void @llvm.dbg.declare(metadata %struct._CacheView** %clut_view, metadata !2198, metadata !DIExpression()), !dbg !2199
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !2200, metadata !DIExpression()), !dbg !2201
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !2202, metadata !DIExpression()), !dbg !2203
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2204, metadata !DIExpression()), !dbg !2205
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !2206, metadata !DIExpression()), !dbg !2207
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %clut_map, metadata !2208, metadata !DIExpression()), !dbg !2209
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2210, metadata !DIExpression()), !dbg !2211
  call void @llvm.dbg.declare(metadata i64* %adjust, metadata !2212, metadata !DIExpression()), !dbg !2213
  call void @llvm.dbg.declare(metadata i64* %y, metadata !2214, metadata !DIExpression()), !dbg !2215
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2216
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !2218
  %1 = load i32, i32* %debug, align 8, !dbg !2218
  %cmp = icmp ne i32 %1, 0, !dbg !2219
  br i1 %cmp, label %if.then, label %if.end, !dbg !2220

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2221
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !2222
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2221
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 774, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2223
  br label %if.end, !dbg !2224

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2225
  %call1 = call i32 @SetImageStorageClass(%struct._Image* %3, i32 1), !dbg !2227
  %cmp2 = icmp eq i32 %call1, 0, !dbg !2228
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2229

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !2230
  br label %return, !dbg !2230

if.end4:                                          ; preds = %if.end
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2231
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 1, !dbg !2233
  %5 = load i32, i32* %colorspace, align 4, !dbg !2233
  %call5 = call i32 @IsGrayColorspace(i32 %5), !dbg !2234
  %cmp6 = icmp ne i32 %call5, 0, !dbg !2235
  br i1 %cmp6, label %land.lhs.true, label %if.end12, !dbg !2236

land.lhs.true:                                    ; preds = %if.end4
  %6 = load %struct._Image*, %struct._Image** %clut_image.addr, align 8, !dbg !2237
  %colorspace7 = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 1, !dbg !2238
  %7 = load i32, i32* %colorspace7, align 4, !dbg !2238
  %call8 = call i32 @IsGrayColorspace(i32 %7), !dbg !2239
  %cmp9 = icmp eq i32 %call8, 0, !dbg !2240
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !2241

if.then10:                                        ; preds = %land.lhs.true
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2242
  %call11 = call i32 @SetImageColorspace(%struct._Image* %8, i32 13), !dbg !2243
  br label %if.end12, !dbg !2244

if.end12:                                         ; preds = %if.then10, %land.lhs.true, %if.end4
  %call13 = call i8* @AcquireQuantumMemory(i64 65536, i64 56) #7, !dbg !2245
  %9 = bitcast i8* %call13 to %struct._MagickPixelPacket*, !dbg !2246
  store %struct._MagickPixelPacket* %9, %struct._MagickPixelPacket** %clut_map, align 8, !dbg !2247
  %10 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %clut_map, align 8, !dbg !2248
  %cmp14 = icmp eq %struct._MagickPixelPacket* %10, null, !dbg !2250
  br i1 %cmp14, label %if.then15, label %if.end23, !dbg !2251

if.then15:                                        ; preds = %if.end12
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2252
  %cmp16 = icmp ne %struct._Image* %11, null, !dbg !2252
  br i1 %cmp16, label %if.then17, label %if.end22, !dbg !2255

if.then17:                                        ; preds = %if.then15
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2252
  %exception18 = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 58, !dbg !2252
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2252
  %filename19 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 53, !dbg !2252
  %arraydecay20 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename19, i64 0, i64 0, !dbg !2252
  %call21 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception18, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 786, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay20), !dbg !2252
  br label %if.end22, !dbg !2252

if.end22:                                         ; preds = %if.then17, %if.then15
  store i32 0, i32* %retval, align 4, !dbg !2255
  br label %return, !dbg !2255

if.end23:                                         ; preds = %if.end12
  store i32 1, i32* %status, align 4, !dbg !2256
  store i64 0, i64* %progress, align 8, !dbg !2257
  %14 = load %struct._Image*, %struct._Image** %clut_image.addr, align 8, !dbg !2258
  %interpolate = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 70, !dbg !2259
  %15 = load i32, i32* %interpolate, align 8, !dbg !2259
  %cmp24 = icmp eq i32 %15, 5, !dbg !2260
  %16 = zext i1 %cmp24 to i64, !dbg !2258
  %cond = select i1 %cmp24, i32 0, i32 1, !dbg !2258
  %conv = sext i32 %cond to i64, !dbg !2261
  store i64 %conv, i64* %adjust, align 8, !dbg !2262
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2263
  %exception25 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 58, !dbg !2264
  store %struct._ExceptionInfo* %exception25, %struct._ExceptionInfo** %exception, align 8, !dbg !2265
  %18 = load %struct._Image*, %struct._Image** %clut_image.addr, align 8, !dbg !2266
  %19 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2267
  %call26 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %18, %struct._ExceptionInfo* %19), !dbg !2268
  store %struct._CacheView* %call26, %struct._CacheView** %clut_view, align 8, !dbg !2269
  store i64 0, i64* %i, align 8, !dbg !2270
  br label %for.cond, !dbg !2272

for.cond:                                         ; preds = %for.inc, %if.end23
  %20 = load i64, i64* %i, align 8, !dbg !2273
  %cmp27 = icmp sle i64 %20, 65535, !dbg !2275
  br i1 %cmp27, label %for.body, label %for.end, !dbg !2276

for.body:                                         ; preds = %for.cond
  %21 = load %struct._Image*, %struct._Image** %clut_image.addr, align 8, !dbg !2277
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %clut_map, align 8, !dbg !2279
  %23 = load i64, i64* %i, align 8, !dbg !2280
  %add.ptr = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i64 %23, !dbg !2281
  call void @GetMagickPixelPacket(%struct._Image* %21, %struct._MagickPixelPacket* %add.ptr), !dbg !2282
  %24 = load %struct._Image*, %struct._Image** %clut_image.addr, align 8, !dbg !2283
  %25 = load %struct._CacheView*, %struct._CacheView** %clut_view, align 8, !dbg !2284
  %26 = load i64, i64* %i, align 8, !dbg !2285
  %conv29 = sitofp i64 %26 to double, !dbg !2285
  %mul = fmul double 0x3EF0001000100010, %conv29, !dbg !2286
  %27 = load %struct._Image*, %struct._Image** %clut_image.addr, align 8, !dbg !2287
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %27, i32 0, i32 7, !dbg !2288
  %28 = load i64, i64* %columns, align 8, !dbg !2288
  %29 = load i64, i64* %adjust, align 8, !dbg !2289
  %sub = sub i64 %28, %29, !dbg !2290
  %conv30 = uitofp i64 %sub to double, !dbg !2291
  %mul31 = fmul double %mul, %conv30, !dbg !2292
  %30 = load i64, i64* %i, align 8, !dbg !2293
  %conv32 = sitofp i64 %30 to double, !dbg !2293
  %mul33 = fmul double 0x3EF0001000100010, %conv32, !dbg !2294
  %31 = load %struct._Image*, %struct._Image** %clut_image.addr, align 8, !dbg !2295
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %31, i32 0, i32 8, !dbg !2296
  %32 = load i64, i64* %rows, align 8, !dbg !2296
  %33 = load i64, i64* %adjust, align 8, !dbg !2297
  %sub34 = sub i64 %32, %33, !dbg !2298
  %conv35 = uitofp i64 %sub34 to double, !dbg !2299
  %mul36 = fmul double %mul33, %conv35, !dbg !2300
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %clut_map, align 8, !dbg !2301
  %35 = load i64, i64* %i, align 8, !dbg !2302
  %add.ptr37 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i64 %35, !dbg !2303
  %36 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2304
  %call38 = call i32 @InterpolateMagickPixelPacket(%struct._Image* %24, %struct._CacheView* %25, i32 0, double %mul31, double %mul36, %struct._MagickPixelPacket* %add.ptr37, %struct._ExceptionInfo* %36), !dbg !2305
  br label %for.inc, !dbg !2306

for.inc:                                          ; preds = %for.body
  %37 = load i64, i64* %i, align 8, !dbg !2307
  %inc = add nsw i64 %37, 1, !dbg !2307
  store i64 %inc, i64* %i, align 8, !dbg !2307
  br label %for.cond, !dbg !2308, !llvm.loop !2309

for.end:                                          ; preds = %for.cond
  %38 = load %struct._CacheView*, %struct._CacheView** %clut_view, align 8, !dbg !2311
  %call39 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %38), !dbg !2312
  store %struct._CacheView* %call39, %struct._CacheView** %clut_view, align 8, !dbg !2313
  %39 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2314
  %40 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2315
  %call40 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %39, %struct._ExceptionInfo* %40), !dbg !2316
  store %struct._CacheView* %call40, %struct._CacheView** %image_view, align 8, !dbg !2317
  store i64 0, i64* %y, align 8, !dbg !2318
  br label %for.cond41, !dbg !2320

for.cond41:                                       ; preds = %for.inc178, %for.end
  %41 = load i64, i64* %y, align 8, !dbg !2321
  %42 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2323
  %rows42 = getelementptr inbounds %struct._Image, %struct._Image* %42, i32 0, i32 8, !dbg !2324
  %43 = load i64, i64* %rows42, align 8, !dbg !2324
  %cmp43 = icmp slt i64 %41, %43, !dbg !2325
  br i1 %cmp43, label %for.body45, label %for.end180, !dbg !2326

for.body45:                                       ; preds = %for.cond41
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !2327, metadata !DIExpression()), !dbg !2329
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !2330, metadata !DIExpression()), !dbg !2331
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !2332, metadata !DIExpression()), !dbg !2333
  call void @llvm.dbg.declare(metadata i64* %x, metadata !2334, metadata !DIExpression()), !dbg !2335
  %44 = load i32, i32* %status, align 4, !dbg !2336
  %cmp46 = icmp eq i32 %44, 0, !dbg !2338
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !2339

if.then48:                                        ; preds = %for.body45
  br label %for.inc178, !dbg !2340

if.end49:                                         ; preds = %for.body45
  %45 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2341
  %46 = load i64, i64* %y, align 8, !dbg !2342
  %47 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2343
  %columns50 = getelementptr inbounds %struct._Image, %struct._Image* %47, i32 0, i32 7, !dbg !2344
  %48 = load i64, i64* %columns50, align 8, !dbg !2344
  %49 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2345
  %call51 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %45, i64 0, i64 %46, i64 %48, i64 1, %struct._ExceptionInfo* %49), !dbg !2346
  store %struct._PixelPacket* %call51, %struct._PixelPacket** %q, align 8, !dbg !2347
  %50 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2348
  %cmp52 = icmp eq %struct._PixelPacket* %50, null, !dbg !2350
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !2351

if.then54:                                        ; preds = %if.end49
  store i32 0, i32* %status, align 4, !dbg !2352
  br label %for.inc178, !dbg !2354

if.end55:                                         ; preds = %if.end49
  %51 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2355
  %call56 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %51), !dbg !2356
  store i16* %call56, i16** %indexes, align 8, !dbg !2357
  %52 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2358
  call void @GetMagickPixelPacket(%struct._Image* %52, %struct._MagickPixelPacket* %pixel), !dbg !2359
  store i64 0, i64* %x, align 8, !dbg !2360
  br label %for.cond57, !dbg !2362

for.cond57:                                       ; preds = %for.inc159, %if.end55
  %53 = load i64, i64* %x, align 8, !dbg !2363
  %54 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2365
  %columns58 = getelementptr inbounds %struct._Image, %struct._Image* %54, i32 0, i32 7, !dbg !2366
  %55 = load i64, i64* %columns58, align 8, !dbg !2366
  %cmp59 = icmp slt i64 %53, %55, !dbg !2367
  br i1 %cmp59, label %for.body61, label %for.end161, !dbg !2368

for.body61:                                       ; preds = %for.cond57
  %56 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2369
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2371
  %58 = load i16*, i16** %indexes, align 8, !dbg !2372
  %59 = load i64, i64* %x, align 8, !dbg !2373
  %add.ptr62 = getelementptr inbounds i16, i16* %58, i64 %59, !dbg !2374
  call void @SetMagickPixelPacket(%struct._Image* %56, %struct._PixelPacket* %57, i16* %add.ptr62, %struct._MagickPixelPacket* %pixel), !dbg !2375
  %60 = load i32, i32* %channel.addr, align 4, !dbg !2376
  %and = and i32 %60, 1, !dbg !2378
  %cmp63 = icmp ne i32 %and, 0, !dbg !2379
  br i1 %cmp63, label %if.then65, label %if.end71, !dbg !2380

if.then65:                                        ; preds = %for.body61
  %61 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %clut_map, align 8, !dbg !2381
  %62 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2381
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %62, i32 0, i32 2, !dbg !2381
  %63 = load i16, i16* %red, align 2, !dbg !2381
  %call66 = call i32 @ScaleQuantumToMap(i16 zeroext %63), !dbg !2381
  %idx.ext = zext i32 %call66 to i64, !dbg !2381
  %add.ptr67 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %61, i64 %idx.ext, !dbg !2381
  %red68 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %add.ptr67, i32 0, i32 5, !dbg !2381
  %64 = load float, float* %red68, align 8, !dbg !2381
  %call69 = call zeroext i16 @ClampToQuantum(float %64), !dbg !2381
  %65 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2381
  %red70 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %65, i32 0, i32 2, !dbg !2381
  store i16 %call69, i16* %red70, align 2, !dbg !2381
  br label %if.end71, !dbg !2381

if.end71:                                         ; preds = %if.then65, %for.body61
  %66 = load i32, i32* %channel.addr, align 4, !dbg !2382
  %and72 = and i32 %66, 2, !dbg !2384
  %cmp73 = icmp ne i32 %and72, 0, !dbg !2385
  br i1 %cmp73, label %if.then75, label %if.end82, !dbg !2386

if.then75:                                        ; preds = %if.end71
  %67 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %clut_map, align 8, !dbg !2387
  %68 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2387
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %68, i32 0, i32 1, !dbg !2387
  %69 = load i16, i16* %green, align 2, !dbg !2387
  %call76 = call i32 @ScaleQuantumToMap(i16 zeroext %69), !dbg !2387
  %idx.ext77 = zext i32 %call76 to i64, !dbg !2387
  %add.ptr78 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %67, i64 %idx.ext77, !dbg !2387
  %green79 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %add.ptr78, i32 0, i32 6, !dbg !2387
  %70 = load float, float* %green79, align 4, !dbg !2387
  %call80 = call zeroext i16 @ClampToQuantum(float %70), !dbg !2387
  %71 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2387
  %green81 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %71, i32 0, i32 1, !dbg !2387
  store i16 %call80, i16* %green81, align 2, !dbg !2387
  br label %if.end82, !dbg !2387

if.end82:                                         ; preds = %if.then75, %if.end71
  %72 = load i32, i32* %channel.addr, align 4, !dbg !2388
  %and83 = and i32 %72, 4, !dbg !2390
  %cmp84 = icmp ne i32 %and83, 0, !dbg !2391
  br i1 %cmp84, label %if.then86, label %if.end93, !dbg !2392

if.then86:                                        ; preds = %if.end82
  %73 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %clut_map, align 8, !dbg !2393
  %74 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2393
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %74, i32 0, i32 0, !dbg !2393
  %75 = load i16, i16* %blue, align 2, !dbg !2393
  %call87 = call i32 @ScaleQuantumToMap(i16 zeroext %75), !dbg !2393
  %idx.ext88 = zext i32 %call87 to i64, !dbg !2393
  %add.ptr89 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %73, i64 %idx.ext88, !dbg !2393
  %blue90 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %add.ptr89, i32 0, i32 7, !dbg !2393
  %76 = load float, float* %blue90, align 8, !dbg !2393
  %call91 = call zeroext i16 @ClampToQuantum(float %76), !dbg !2393
  %77 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2393
  %blue92 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %77, i32 0, i32 0, !dbg !2393
  store i16 %call91, i16* %blue92, align 2, !dbg !2393
  br label %if.end93, !dbg !2393

if.end93:                                         ; preds = %if.then86, %if.end82
  %78 = load i32, i32* %channel.addr, align 4, !dbg !2394
  %and94 = and i32 %78, 8, !dbg !2396
  %cmp95 = icmp ne i32 %and94, 0, !dbg !2397
  br i1 %cmp95, label %if.then97, label %if.end134, !dbg !2398

if.then97:                                        ; preds = %if.end93
  %79 = load %struct._Image*, %struct._Image** %clut_image.addr, align 8, !dbg !2399
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %79, i32 0, i32 6, !dbg !2402
  %80 = load i32, i32* %matte, align 8, !dbg !2402
  %cmp98 = icmp eq i32 %80, 0, !dbg !2403
  br i1 %cmp98, label %if.then100, label %if.else, !dbg !2404

if.then100:                                       ; preds = %if.then97
  %81 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %clut_map, align 8, !dbg !2405
  %82 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2405
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %82, i32 0, i32 3, !dbg !2405
  %83 = load i16, i16* %opacity, align 2, !dbg !2405
  %conv101 = zext i16 %83 to i32, !dbg !2405
  %sub102 = sub nsw i32 65535, %conv101, !dbg !2405
  %conv103 = trunc i32 %sub102 to i16, !dbg !2405
  %call104 = call i32 @ScaleQuantumToMap(i16 zeroext %conv103), !dbg !2405
  %idx.ext105 = zext i32 %call104 to i64, !dbg !2405
  %add.ptr106 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %81, i64 %idx.ext105, !dbg !2405
  %call107 = call zeroext i16 @MagickPixelIntensityToQuantum(%struct._MagickPixelPacket* %add.ptr106), !dbg !2405
  %conv108 = zext i16 %call107 to i32, !dbg !2405
  %sub109 = sub nsw i32 65535, %conv108, !dbg !2405
  %conv110 = trunc i32 %sub109 to i16, !dbg !2405
  %84 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2405
  %opacity111 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %84, i32 0, i32 3, !dbg !2405
  store i16 %conv110, i16* %opacity111, align 2, !dbg !2405
  br label %if.end133, !dbg !2405

if.else:                                          ; preds = %if.then97
  %85 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2406
  %matte112 = getelementptr inbounds %struct._Image, %struct._Image* %85, i32 0, i32 6, !dbg !2408
  %86 = load i32, i32* %matte112, align 8, !dbg !2408
  %cmp113 = icmp eq i32 %86, 0, !dbg !2409
  br i1 %cmp113, label %if.then115, label %if.else124, !dbg !2410

if.then115:                                       ; preds = %if.else
  %87 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %clut_map, align 8, !dbg !2411
  %call116 = call float @MagickPixelIntensity(%struct._MagickPixelPacket* %pixel), !dbg !2411
  %conv117 = fptoui float %call116 to i16, !dbg !2411
  %call118 = call i32 @ScaleQuantumToMap(i16 zeroext %conv117), !dbg !2411
  %idx.ext119 = zext i32 %call118 to i64, !dbg !2411
  %add.ptr120 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %87, i64 %idx.ext119, !dbg !2411
  %opacity121 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %add.ptr120, i32 0, i32 8, !dbg !2411
  %88 = load float, float* %opacity121, align 4, !dbg !2411
  %call122 = call zeroext i16 @ClampToQuantum(float %88), !dbg !2411
  %89 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2411
  %opacity123 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %89, i32 0, i32 3, !dbg !2411
  store i16 %call122, i16* %opacity123, align 2, !dbg !2411
  br label %if.end132, !dbg !2411

if.else124:                                       ; preds = %if.else
  %90 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %clut_map, align 8, !dbg !2412
  %91 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2412
  %opacity125 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %91, i32 0, i32 3, !dbg !2412
  %92 = load i16, i16* %opacity125, align 2, !dbg !2412
  %call126 = call i32 @ScaleQuantumToMap(i16 zeroext %92), !dbg !2412
  %idx.ext127 = zext i32 %call126 to i64, !dbg !2412
  %add.ptr128 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %90, i64 %idx.ext127, !dbg !2412
  %opacity129 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %add.ptr128, i32 0, i32 8, !dbg !2412
  %93 = load float, float* %opacity129, align 4, !dbg !2412
  %call130 = call zeroext i16 @ClampToQuantum(float %93), !dbg !2412
  %94 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2412
  %opacity131 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %94, i32 0, i32 3, !dbg !2412
  store i16 %call130, i16* %opacity131, align 2, !dbg !2412
  br label %if.end132

if.end132:                                        ; preds = %if.else124, %if.then115
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then100
  br label %if.end134, !dbg !2413

if.end134:                                        ; preds = %if.end133, %if.end93
  %95 = load i32, i32* %channel.addr, align 4, !dbg !2414
  %and135 = and i32 %95, 32, !dbg !2416
  %cmp136 = icmp ne i32 %and135, 0, !dbg !2417
  br i1 %cmp136, label %land.lhs.true138, label %if.end158, !dbg !2418

land.lhs.true138:                                 ; preds = %if.end134
  %96 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2419
  %colorspace139 = getelementptr inbounds %struct._Image, %struct._Image* %96, i32 0, i32 1, !dbg !2420
  %97 = load i32, i32* %colorspace139, align 4, !dbg !2420
  %cmp140 = icmp eq i32 %97, 12, !dbg !2421
  br i1 %cmp140, label %if.then142, label %if.end158, !dbg !2422

if.then142:                                       ; preds = %land.lhs.true138
  %98 = load i16*, i16** %indexes, align 8, !dbg !2423
  %99 = load i64, i64* %x, align 8, !dbg !2423
  %add.ptr143 = getelementptr inbounds i16, i16* %98, i64 %99, !dbg !2423
  %cmp144 = icmp ne i16* %add.ptr143, null, !dbg !2423
  br i1 %cmp144, label %if.then146, label %if.end157, !dbg !2426

if.then146:                                       ; preds = %if.then142
  %100 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %clut_map, align 8, !dbg !2423
  %101 = load i16*, i16** %indexes, align 8, !dbg !2423
  %102 = load i64, i64* %x, align 8, !dbg !2423
  %add.ptr147 = getelementptr inbounds i16, i16* %101, i64 %102, !dbg !2423
  %cmp148 = icmp eq i16* %add.ptr147, null, !dbg !2423
  br i1 %cmp148, label %cond.true, label %cond.false, !dbg !2423

cond.true:                                        ; preds = %if.then146
  br label %cond.end, !dbg !2423

cond.false:                                       ; preds = %if.then146
  %103 = load i16*, i16** %indexes, align 8, !dbg !2423
  %104 = load i64, i64* %x, align 8, !dbg !2423
  %add.ptr150 = getelementptr inbounds i16, i16* %103, i64 %104, !dbg !2423
  %105 = load i16, i16* %add.ptr150, align 2, !dbg !2423
  %conv151 = zext i16 %105 to i32, !dbg !2423
  br label %cond.end, !dbg !2423

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond152 = phi i32 [ 0, %cond.true ], [ %conv151, %cond.false ], !dbg !2423
  %conv153 = sext i32 %cond152 to i64, !dbg !2423
  %add.ptr154 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %100, i64 %conv153, !dbg !2423
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %add.ptr154, i32 0, i32 9, !dbg !2423
  %106 = load float, float* %index, align 8, !dbg !2423
  %call155 = call zeroext i16 @ClampToQuantum(float %106), !dbg !2423
  %107 = load i16*, i16** %indexes, align 8, !dbg !2423
  %108 = load i64, i64* %x, align 8, !dbg !2423
  %add.ptr156 = getelementptr inbounds i16, i16* %107, i64 %108, !dbg !2423
  store i16 %call155, i16* %add.ptr156, align 2, !dbg !2423
  br label %if.end157, !dbg !2423

if.end157:                                        ; preds = %cond.end, %if.then142
  br label %if.end158, !dbg !2426

if.end158:                                        ; preds = %if.end157, %land.lhs.true138, %if.end134
  %109 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2427
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %109, i32 1, !dbg !2427
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !2427
  br label %for.inc159, !dbg !2428

for.inc159:                                       ; preds = %if.end158
  %110 = load i64, i64* %x, align 8, !dbg !2429
  %inc160 = add nsw i64 %110, 1, !dbg !2429
  store i64 %inc160, i64* %x, align 8, !dbg !2429
  br label %for.cond57, !dbg !2430, !llvm.loop !2431

for.end161:                                       ; preds = %for.cond57
  %111 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2433
  %112 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2435
  %call162 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %111, %struct._ExceptionInfo* %112), !dbg !2436
  %cmp163 = icmp eq i32 %call162, 0, !dbg !2437
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !2438

if.then165:                                       ; preds = %for.end161
  store i32 0, i32* %status, align 4, !dbg !2439
  br label %if.end166, !dbg !2440

if.end166:                                        ; preds = %if.then165, %for.end161
  %113 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2441
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %113, i32 0, i32 47, !dbg !2443
  %114 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !2443
  %cmp167 = icmp ne i32 (i8*, i64, i64, i8*)* %114, null, !dbg !2444
  br i1 %cmp167, label %if.then169, label %if.end177, !dbg !2445

if.then169:                                       ; preds = %if.end166
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !2446, metadata !DIExpression()), !dbg !2448
  %115 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2449
  %116 = load i64, i64* %progress, align 8, !dbg !2450
  %inc170 = add nsw i64 %116, 1, !dbg !2450
  store i64 %inc170, i64* %progress, align 8, !dbg !2450
  %117 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2451
  %rows171 = getelementptr inbounds %struct._Image, %struct._Image* %117, i32 0, i32 8, !dbg !2452
  %118 = load i64, i64* %rows171, align 8, !dbg !2452
  %call172 = call i32 @SetImageProgress(%struct._Image* %115, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i64 0, i64 0), i64 %116, i64 %118), !dbg !2453
  store i32 %call172, i32* %proceed, align 4, !dbg !2454
  %119 = load i32, i32* %proceed, align 4, !dbg !2455
  %cmp173 = icmp eq i32 %119, 0, !dbg !2457
  br i1 %cmp173, label %if.then175, label %if.end176, !dbg !2458

if.then175:                                       ; preds = %if.then169
  store i32 0, i32* %status, align 4, !dbg !2459
  br label %if.end176, !dbg !2460

if.end176:                                        ; preds = %if.then175, %if.then169
  br label %if.end177, !dbg !2461

if.end177:                                        ; preds = %if.end176, %if.end166
  br label %for.inc178, !dbg !2462

for.inc178:                                       ; preds = %if.end177, %if.then54, %if.then48
  %120 = load i64, i64* %y, align 8, !dbg !2463
  %inc179 = add nsw i64 %120, 1, !dbg !2463
  store i64 %inc179, i64* %y, align 8, !dbg !2463
  br label %for.cond41, !dbg !2464, !llvm.loop !2465

for.end180:                                       ; preds = %for.cond41
  %121 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2467
  %call181 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %121), !dbg !2468
  store %struct._CacheView* %call181, %struct._CacheView** %image_view, align 8, !dbg !2469
  %122 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %clut_map, align 8, !dbg !2470
  %123 = bitcast %struct._MagickPixelPacket* %122 to i8*, !dbg !2470
  %call182 = call i8* @RelinquishMagickMemory(i8* %123), !dbg !2471
  %124 = bitcast i8* %call182 to %struct._MagickPixelPacket*, !dbg !2472
  store %struct._MagickPixelPacket* %124, %struct._MagickPixelPacket** %clut_map, align 8, !dbg !2473
  %125 = load %struct._Image*, %struct._Image** %clut_image.addr, align 8, !dbg !2474
  %matte183 = getelementptr inbounds %struct._Image, %struct._Image* %125, i32 0, i32 6, !dbg !2476
  %126 = load i32, i32* %matte183, align 8, !dbg !2476
  %cmp184 = icmp ne i32 %126, 0, !dbg !2477
  br i1 %cmp184, label %land.lhs.true186, label %if.end192, !dbg !2478

land.lhs.true186:                                 ; preds = %for.end180
  %127 = load i32, i32* %channel.addr, align 4, !dbg !2479
  %and187 = and i32 %127, 8, !dbg !2480
  %cmp188 = icmp ne i32 %and187, 0, !dbg !2481
  br i1 %cmp188, label %if.then190, label %if.end192, !dbg !2482

if.then190:                                       ; preds = %land.lhs.true186
  %128 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2483
  %call191 = call i32 @SetImageAlphaChannel(%struct._Image* %128, i32 1), !dbg !2484
  br label %if.end192, !dbg !2485

if.end192:                                        ; preds = %if.then190, %land.lhs.true186, %for.end180
  %129 = load i32, i32* %status, align 4, !dbg !2486
  store i32 %129, i32* %retval, align 4, !dbg !2487
  br label %return, !dbg !2487

return:                                           ; preds = %if.end192, %if.end22, %if.then3
  %130 = load i32, i32* %retval, align 4, !dbg !2488
  ret i32 %130, !dbg !2488
}

declare dso_local i32 @SetImageStorageClass(%struct._Image*, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @IsGrayColorspace(i32 %colorspace) #0 !dbg !2489 {
entry:
  %retval = alloca i32, align 4
  %colorspace.addr = alloca i32, align 4
  store i32 %colorspace, i32* %colorspace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colorspace.addr, metadata !2494, metadata !DIExpression()), !dbg !2495
  %0 = load i32, i32* %colorspace.addr, align 4, !dbg !2496
  %cmp = icmp eq i32 %0, 2, !dbg !2498
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2499

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %colorspace.addr, align 4, !dbg !2500
  %cmp1 = icmp eq i32 %1, 17, !dbg !2501
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !2502

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %colorspace.addr, align 4, !dbg !2503
  %cmp3 = icmp eq i32 %2, 19, !dbg !2504
  br i1 %cmp3, label %if.then, label %if.end, !dbg !2505

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !2506
  br label %return, !dbg !2506

if.end:                                           ; preds = %lor.lhs.false2
  store i32 0, i32* %retval, align 4, !dbg !2507
  br label %return, !dbg !2507

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !2508
  ret i32 %3, !dbg !2508
}

declare dso_local i32 @SetImageColorspace(%struct._Image*, i32) #3

declare dso_local void @GetMagickPixelPacket(%struct._Image*, %struct._MagickPixelPacket*) #3

declare dso_local i32 @InterpolateMagickPixelPacket(%struct._Image*, %struct._CacheView*, i32, double, double, %struct._MagickPixelPacket*, %struct._ExceptionInfo*) #3

declare dso_local i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @SetMagickPixelPacket(%struct._Image* %image, %struct._PixelPacket* %color, i16* %index, %struct._MagickPixelPacket* %pixel) #0 !dbg !2509 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %color.addr = alloca %struct._PixelPacket*, align 8
  %index.addr = alloca i16*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2513, metadata !DIExpression()), !dbg !2514
  store %struct._PixelPacket* %color, %struct._PixelPacket** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %color.addr, metadata !2515, metadata !DIExpression()), !dbg !2516
  store i16* %index, i16** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %index.addr, metadata !2517, metadata !DIExpression()), !dbg !2518
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !2519, metadata !DIExpression()), !dbg !2520
  %0 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !2521
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %0, i32 0, i32 2, !dbg !2521
  %1 = load i16, i16* %red, align 2, !dbg !2521
  %conv = uitofp i16 %1 to float, !dbg !2522
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2523
  %red1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 5, !dbg !2524
  store float %conv, float* %red1, align 8, !dbg !2525
  %3 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !2526
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %3, i32 0, i32 1, !dbg !2526
  %4 = load i16, i16* %green, align 2, !dbg !2526
  %conv2 = uitofp i16 %4 to float, !dbg !2527
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2528
  %green3 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %5, i32 0, i32 6, !dbg !2529
  store float %conv2, float* %green3, align 4, !dbg !2530
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !2531
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 0, !dbg !2531
  %7 = load i16, i16* %blue, align 2, !dbg !2531
  %conv4 = uitofp i16 %7 to float, !dbg !2532
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2533
  %blue5 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 7, !dbg !2534
  store float %conv4, float* %blue5, align 8, !dbg !2535
  %9 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !2536
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %9, i32 0, i32 3, !dbg !2536
  %10 = load i16, i16* %opacity, align 2, !dbg !2536
  %conv6 = uitofp i16 %10 to float, !dbg !2537
  %11 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2538
  %opacity7 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %11, i32 0, i32 8, !dbg !2539
  store float %conv6, float* %opacity7, align 4, !dbg !2540
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2541
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 1, !dbg !2543
  %13 = load i32, i32* %colorspace, align 4, !dbg !2543
  %cmp = icmp eq i32 %13, 12, !dbg !2544
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2545

land.lhs.true:                                    ; preds = %entry
  %14 = load i16*, i16** %index.addr, align 8, !dbg !2546
  %cmp9 = icmp ne i16* %14, null, !dbg !2547
  br i1 %cmp9, label %if.then, label %if.end, !dbg !2548

if.then:                                          ; preds = %land.lhs.true
  %15 = load i16*, i16** %index.addr, align 8, !dbg !2549
  %cmp11 = icmp eq i16* %15, null, !dbg !2549
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !2549

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !2549

cond.false:                                       ; preds = %if.then
  %16 = load i16*, i16** %index.addr, align 8, !dbg !2549
  %17 = load i16, i16* %16, align 2, !dbg !2549
  %conv13 = zext i16 %17 to i32, !dbg !2549
  br label %cond.end, !dbg !2549

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv13, %cond.false ], !dbg !2549
  %conv14 = sitofp i32 %cond to float, !dbg !2550
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2551
  %index15 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 9, !dbg !2552
  store float %conv14, float* %index15, align 8, !dbg !2553
  br label %if.end, !dbg !2551

if.end:                                           ; preds = %cond.end, %land.lhs.true, %entry
  ret void, !dbg !2554
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @MagickPixelIntensityToQuantum(%struct._MagickPixelPacket* %pixel) #0 !dbg !2555 {
entry:
  %retval = alloca i16, align 2
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !2561, metadata !DIExpression()), !dbg !2562
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2563
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 1, !dbg !2565
  %1 = load i32, i32* %colorspace, align 4, !dbg !2565
  %cmp = icmp eq i32 %1, 2, !dbg !2566
  br i1 %cmp, label %if.then, label %if.end, !dbg !2567

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2568
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 5, !dbg !2569
  %3 = load float, float* %red, align 8, !dbg !2569
  %call = call zeroext i16 @ClampToQuantum(float %3), !dbg !2570
  store i16 %call, i16* %retval, align 2, !dbg !2571
  br label %return, !dbg !2571

if.end:                                           ; preds = %entry
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2572
  %red1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %4, i32 0, i32 5, !dbg !2573
  %5 = load float, float* %red1, align 8, !dbg !2573
  %conv = fpext float %5 to double, !dbg !2572
  %mul = fmul double 2.126560e-01, %conv, !dbg !2574
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2575
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 6, !dbg !2576
  %7 = load float, float* %green, align 4, !dbg !2576
  %conv2 = fpext float %7 to double, !dbg !2575
  %mul3 = fmul double 0x3FE6E29307AF20EA, %conv2, !dbg !2577
  %add = fadd double %mul, %mul3, !dbg !2578
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2579
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 7, !dbg !2580
  %9 = load float, float* %blue, align 8, !dbg !2580
  %conv4 = fpext float %9 to double, !dbg !2579
  %mul5 = fmul double 7.218600e-02, %conv4, !dbg !2581
  %add6 = fadd double %add, %mul5, !dbg !2582
  %conv7 = fptrunc double %add6 to float, !dbg !2583
  %call8 = call zeroext i16 @ClampToQuantum(float %conv7), !dbg !2584
  store i16 %call8, i16* %retval, align 2, !dbg !2585
  br label %return, !dbg !2585

return:                                           ; preds = %if.end, %if.then
  %10 = load i16, i16* %retval, align 2, !dbg !2586
  ret i16 %10, !dbg !2586
}

; Function Attrs: noinline nounwind uwtable
define internal float @MagickPixelIntensity(%struct._MagickPixelPacket* %pixel) #0 !dbg !2587 {
entry:
  %retval = alloca float, align 4
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !2590, metadata !DIExpression()), !dbg !2591
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2592
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 1, !dbg !2594
  %1 = load i32, i32* %colorspace, align 4, !dbg !2594
  %cmp = icmp eq i32 %1, 2, !dbg !2595
  br i1 %cmp, label %if.then, label %if.end, !dbg !2596

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2597
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 5, !dbg !2598
  %3 = load float, float* %red, align 8, !dbg !2598
  store float %3, float* %retval, align 4, !dbg !2599
  br label %return, !dbg !2599

if.end:                                           ; preds = %entry
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2600
  %red1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %4, i32 0, i32 5, !dbg !2601
  %5 = load float, float* %red1, align 8, !dbg !2601
  %conv = fpext float %5 to double, !dbg !2600
  %mul = fmul double 2.126560e-01, %conv, !dbg !2602
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2603
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 6, !dbg !2604
  %7 = load float, float* %green, align 4, !dbg !2604
  %conv2 = fpext float %7 to double, !dbg !2603
  %mul3 = fmul double 0x3FE6E29307AF20EA, %conv2, !dbg !2605
  %add = fadd double %mul, %mul3, !dbg !2606
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2607
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 7, !dbg !2608
  %9 = load float, float* %blue, align 8, !dbg !2608
  %conv4 = fpext float %9 to double, !dbg !2607
  %mul5 = fmul double 7.218600e-02, %conv4, !dbg !2609
  %add6 = fadd double %add, %mul5, !dbg !2610
  %conv7 = fptrunc double %add6 to float, !dbg !2611
  store float %conv7, float* %retval, align 4, !dbg !2612
  br label %return, !dbg !2612

return:                                           ; preds = %if.end, %if.then
  %10 = load float, float* %retval, align 4, !dbg !2613
  ret float %10, !dbg !2613
}

declare dso_local i32 @SetImageAlphaChannel(%struct._Image*, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ContrastImage(%struct._Image* %image, i32 %sharpen) #0 !dbg !2614 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %sharpen.addr = alloca i32, align 4
  %image_view = alloca %struct._CacheView*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %sign = alloca i32, align 4
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %i = alloca i64, align 8
  %y = alloca i64, align 8
  %blue20 = alloca i16, align 2
  %green21 = alloca i16, align 2
  %red22 = alloca i16, align 2
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2618, metadata !DIExpression()), !dbg !2619
  store i32 %sharpen, i32* %sharpen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sharpen.addr, metadata !2620, metadata !DIExpression()), !dbg !2621
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !2622, metadata !DIExpression()), !dbg !2623
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !2624, metadata !DIExpression()), !dbg !2625
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !2626, metadata !DIExpression()), !dbg !2627
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2628, metadata !DIExpression()), !dbg !2629
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !2630, metadata !DIExpression()), !dbg !2631
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2632, metadata !DIExpression()), !dbg !2633
  call void @llvm.dbg.declare(metadata i64* %y, metadata !2634, metadata !DIExpression()), !dbg !2635
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2636
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !2638
  %1 = load i32, i32* %debug, align 8, !dbg !2638
  %cmp = icmp ne i32 %1, 0, !dbg !2639
  br i1 %cmp, label %if.then, label %if.end, !dbg !2640

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2641
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !2642
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2641
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 968, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2643
  br label %if.end, !dbg !2644

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %sharpen.addr, align 4, !dbg !2645
  %cmp1 = icmp ne i32 %3, 0, !dbg !2646
  %4 = zext i1 %cmp1 to i64, !dbg !2645
  %cond = select i1 %cmp1, i32 1, i32 -1, !dbg !2645
  store i32 %cond, i32* %sign, align 4, !dbg !2647
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2648
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 0, !dbg !2650
  %6 = load i32, i32* %storage_class, align 8, !dbg !2650
  %cmp2 = icmp eq i32 %6, 2, !dbg !2651
  br i1 %cmp2, label %if.then3, label %if.end9, !dbg !2652

if.then3:                                         ; preds = %if.end
  store i64 0, i64* %i, align 8, !dbg !2653
  br label %for.cond, !dbg !2656

for.cond:                                         ; preds = %for.inc, %if.then3
  %7 = load i64, i64* %i, align 8, !dbg !2657
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2659
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 10, !dbg !2660
  %9 = load i64, i64* %colors, align 8, !dbg !2660
  %cmp4 = icmp slt i64 %7, %9, !dbg !2661
  br i1 %cmp4, label %for.body, label %for.end, !dbg !2662

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %sign, align 4, !dbg !2663
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2664
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %11, i32 0, i32 11, !dbg !2665
  %12 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !2665
  %13 = load i64, i64* %i, align 8, !dbg !2666
  %arrayidx = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %12, i64 %13, !dbg !2664
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx, i32 0, i32 2, !dbg !2667
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2668
  %colormap5 = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 11, !dbg !2669
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap5, align 8, !dbg !2669
  %16 = load i64, i64* %i, align 8, !dbg !2670
  %arrayidx6 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %15, i64 %16, !dbg !2668
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx6, i32 0, i32 1, !dbg !2671
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2672
  %colormap7 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 11, !dbg !2673
  %18 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap7, align 8, !dbg !2673
  %19 = load i64, i64* %i, align 8, !dbg !2674
  %arrayidx8 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %18, i64 %19, !dbg !2672
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx8, i32 0, i32 0, !dbg !2675
  call void @Contrast(i32 %10, i16* %red, i16* %green, i16* %blue), !dbg !2676
  br label %for.inc, !dbg !2676

for.inc:                                          ; preds = %for.body
  %20 = load i64, i64* %i, align 8, !dbg !2677
  %inc = add nsw i64 %20, 1, !dbg !2677
  store i64 %inc, i64* %i, align 8, !dbg !2677
  br label %for.cond, !dbg !2678, !llvm.loop !2679

for.end:                                          ; preds = %for.cond
  br label %if.end9, !dbg !2681

if.end9:                                          ; preds = %for.end, %if.end
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2682
  %22 = load i32, i32* %sharpen.addr, align 4, !dbg !2683
  %23 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2684
  %exception10 = getelementptr inbounds %struct._Image, %struct._Image* %23, i32 0, i32 58, !dbg !2685
  %call11 = call i32 @AccelerateContrastImage(%struct._Image* %21, i32 %22, %struct._ExceptionInfo* %exception10), !dbg !2686
  store i32 %call11, i32* %status, align 4, !dbg !2687
  %24 = load i32, i32* %status, align 4, !dbg !2688
  %cmp12 = icmp ne i32 %24, 0, !dbg !2690
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !2691

if.then13:                                        ; preds = %if.end9
  %25 = load i32, i32* %status, align 4, !dbg !2692
  store i32 %25, i32* %retval, align 4, !dbg !2693
  br label %return, !dbg !2693

if.end14:                                         ; preds = %if.end9
  store i32 1, i32* %status, align 4, !dbg !2694
  store i64 0, i64* %progress, align 8, !dbg !2695
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2696
  %exception15 = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 58, !dbg !2697
  store %struct._ExceptionInfo* %exception15, %struct._ExceptionInfo** %exception, align 8, !dbg !2698
  %27 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2699
  %28 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2700
  %call16 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %27, %struct._ExceptionInfo* %28), !dbg !2701
  store %struct._CacheView* %call16, %struct._CacheView** %image_view, align 8, !dbg !2702
  store i64 0, i64* %y, align 8, !dbg !2703
  br label %for.cond17, !dbg !2705

for.cond17:                                       ; preds = %for.inc56, %if.end14
  %29 = load i64, i64* %y, align 8, !dbg !2706
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2708
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %30, i32 0, i32 8, !dbg !2709
  %31 = load i64, i64* %rows, align 8, !dbg !2709
  %cmp18 = icmp slt i64 %29, %31, !dbg !2710
  br i1 %cmp18, label %for.body19, label %for.end58, !dbg !2711

for.body19:                                       ; preds = %for.cond17
  call void @llvm.dbg.declare(metadata i16* %blue20, metadata !2712, metadata !DIExpression()), !dbg !2714
  call void @llvm.dbg.declare(metadata i16* %green21, metadata !2715, metadata !DIExpression()), !dbg !2716
  call void @llvm.dbg.declare(metadata i16* %red22, metadata !2717, metadata !DIExpression()), !dbg !2718
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !2719, metadata !DIExpression()), !dbg !2720
  call void @llvm.dbg.declare(metadata i64* %x, metadata !2721, metadata !DIExpression()), !dbg !2722
  %32 = load i32, i32* %status, align 4, !dbg !2723
  %cmp23 = icmp eq i32 %32, 0, !dbg !2725
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !2726

if.then24:                                        ; preds = %for.body19
  br label %for.inc56, !dbg !2727

if.end25:                                         ; preds = %for.body19
  %33 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2728
  %34 = load i64, i64* %y, align 8, !dbg !2729
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2730
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %35, i32 0, i32 7, !dbg !2731
  %36 = load i64, i64* %columns, align 8, !dbg !2731
  %37 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2732
  %call26 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %33, i64 0, i64 %34, i64 %36, i64 1, %struct._ExceptionInfo* %37), !dbg !2733
  store %struct._PixelPacket* %call26, %struct._PixelPacket** %q, align 8, !dbg !2734
  %38 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2735
  %cmp27 = icmp eq %struct._PixelPacket* %38, null, !dbg !2737
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !2738

if.then28:                                        ; preds = %if.end25
  store i32 0, i32* %status, align 4, !dbg !2739
  br label %for.inc56, !dbg !2741

if.end29:                                         ; preds = %if.end25
  store i64 0, i64* %x, align 8, !dbg !2742
  br label %for.cond30, !dbg !2744

for.cond30:                                       ; preds = %for.inc40, %if.end29
  %39 = load i64, i64* %x, align 8, !dbg !2745
  %40 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2747
  %columns31 = getelementptr inbounds %struct._Image, %struct._Image* %40, i32 0, i32 7, !dbg !2748
  %41 = load i64, i64* %columns31, align 8, !dbg !2748
  %cmp32 = icmp slt i64 %39, %41, !dbg !2749
  br i1 %cmp32, label %for.body33, label %for.end42, !dbg !2750

for.body33:                                       ; preds = %for.cond30
  %42 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2751
  %red34 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %42, i32 0, i32 2, !dbg !2751
  %43 = load i16, i16* %red34, align 2, !dbg !2751
  store i16 %43, i16* %red22, align 2, !dbg !2753
  %44 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2754
  %green35 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %44, i32 0, i32 1, !dbg !2754
  %45 = load i16, i16* %green35, align 2, !dbg !2754
  store i16 %45, i16* %green21, align 2, !dbg !2755
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2756
  %blue36 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %46, i32 0, i32 0, !dbg !2756
  %47 = load i16, i16* %blue36, align 2, !dbg !2756
  store i16 %47, i16* %blue20, align 2, !dbg !2757
  %48 = load i32, i32* %sign, align 4, !dbg !2758
  call void @Contrast(i32 %48, i16* %red22, i16* %green21, i16* %blue20), !dbg !2759
  %49 = load i16, i16* %red22, align 2, !dbg !2760
  %50 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2760
  %red37 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %50, i32 0, i32 2, !dbg !2760
  store i16 %49, i16* %red37, align 2, !dbg !2760
  %51 = load i16, i16* %green21, align 2, !dbg !2761
  %52 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2761
  %green38 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %52, i32 0, i32 1, !dbg !2761
  store i16 %51, i16* %green38, align 2, !dbg !2761
  %53 = load i16, i16* %blue20, align 2, !dbg !2762
  %54 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2762
  %blue39 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %54, i32 0, i32 0, !dbg !2762
  store i16 %53, i16* %blue39, align 2, !dbg !2762
  %55 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2763
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %55, i32 1, !dbg !2763
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !2763
  br label %for.inc40, !dbg !2764

for.inc40:                                        ; preds = %for.body33
  %56 = load i64, i64* %x, align 8, !dbg !2765
  %inc41 = add nsw i64 %56, 1, !dbg !2765
  store i64 %inc41, i64* %x, align 8, !dbg !2765
  br label %for.cond30, !dbg !2766, !llvm.loop !2767

for.end42:                                        ; preds = %for.cond30
  %57 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2769
  %58 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2771
  %call43 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %57, %struct._ExceptionInfo* %58), !dbg !2772
  %cmp44 = icmp eq i32 %call43, 0, !dbg !2773
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !2774

if.then45:                                        ; preds = %for.end42
  store i32 0, i32* %status, align 4, !dbg !2775
  br label %if.end46, !dbg !2776

if.end46:                                         ; preds = %if.then45, %for.end42
  %59 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2777
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %59, i32 0, i32 47, !dbg !2779
  %60 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !2779
  %cmp47 = icmp ne i32 (i8*, i64, i64, i8*)* %60, null, !dbg !2780
  br i1 %cmp47, label %if.then48, label %if.end55, !dbg !2781

if.then48:                                        ; preds = %if.end46
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !2782, metadata !DIExpression()), !dbg !2784
  %61 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2785
  %62 = load i64, i64* %progress, align 8, !dbg !2786
  %inc49 = add nsw i64 %62, 1, !dbg !2786
  store i64 %inc49, i64* %progress, align 8, !dbg !2786
  %63 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2787
  %rows50 = getelementptr inbounds %struct._Image, %struct._Image* %63, i32 0, i32 8, !dbg !2788
  %64 = load i64, i64* %rows50, align 8, !dbg !2788
  %call51 = call i32 @SetImageProgress(%struct._Image* %61, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i64 0, i64 0), i64 %62, i64 %64), !dbg !2789
  store i32 %call51, i32* %proceed, align 4, !dbg !2790
  %65 = load i32, i32* %proceed, align 4, !dbg !2791
  %cmp52 = icmp eq i32 %65, 0, !dbg !2793
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !2794

if.then53:                                        ; preds = %if.then48
  store i32 0, i32* %status, align 4, !dbg !2795
  br label %if.end54, !dbg !2796

if.end54:                                         ; preds = %if.then53, %if.then48
  br label %if.end55, !dbg !2797

if.end55:                                         ; preds = %if.end54, %if.end46
  br label %for.inc56, !dbg !2798

for.inc56:                                        ; preds = %if.end55, %if.then28, %if.then24
  %66 = load i64, i64* %y, align 8, !dbg !2799
  %inc57 = add nsw i64 %66, 1, !dbg !2799
  store i64 %inc57, i64* %y, align 8, !dbg !2799
  br label %for.cond17, !dbg !2800, !llvm.loop !2801

for.end58:                                        ; preds = %for.cond17
  %67 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2803
  %call59 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %67), !dbg !2804
  store %struct._CacheView* %call59, %struct._CacheView** %image_view, align 8, !dbg !2805
  %68 = load i32, i32* %status, align 4, !dbg !2806
  store i32 %68, i32* %retval, align 4, !dbg !2807
  br label %return, !dbg !2807

return:                                           ; preds = %for.end58, %if.then13
  %69 = load i32, i32* %retval, align 4, !dbg !2808
  ret i32 %69, !dbg !2808
}

; Function Attrs: noinline nounwind uwtable
define internal void @Contrast(i32 %sign, i16* %red, i16* %green, i16* %blue) #0 !dbg !2809 {
entry:
  %sign.addr = alloca i32, align 4
  %red.addr = alloca i16*, align 8
  %green.addr = alloca i16*, align 8
  %blue.addr = alloca i16*, align 8
  %brightness = alloca double, align 8
  %hue = alloca double, align 8
  %saturation = alloca double, align 8
  store i32 %sign, i32* %sign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.addr, metadata !2813, metadata !DIExpression()), !dbg !2814
  store i16* %red, i16** %red.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %red.addr, metadata !2815, metadata !DIExpression()), !dbg !2816
  store i16* %green, i16** %green.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %green.addr, metadata !2817, metadata !DIExpression()), !dbg !2818
  store i16* %blue, i16** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %blue.addr, metadata !2819, metadata !DIExpression()), !dbg !2820
  call void @llvm.dbg.declare(metadata double* %brightness, metadata !2821, metadata !DIExpression()), !dbg !2822
  call void @llvm.dbg.declare(metadata double* %hue, metadata !2823, metadata !DIExpression()), !dbg !2824
  call void @llvm.dbg.declare(metadata double* %saturation, metadata !2825, metadata !DIExpression()), !dbg !2826
  store double 0.000000e+00, double* %hue, align 8, !dbg !2827
  store double 0.000000e+00, double* %saturation, align 8, !dbg !2828
  store double 0.000000e+00, double* %brightness, align 8, !dbg !2829
  %0 = load i16*, i16** %red.addr, align 8, !dbg !2830
  %1 = load i16, i16* %0, align 2, !dbg !2831
  %2 = load i16*, i16** %green.addr, align 8, !dbg !2832
  %3 = load i16, i16* %2, align 2, !dbg !2833
  %4 = load i16*, i16** %blue.addr, align 8, !dbg !2834
  %5 = load i16, i16* %4, align 2, !dbg !2835
  call void @ConvertRGBToHSB(i16 zeroext %1, i16 zeroext %3, i16 zeroext %5, double* %hue, double* %saturation, double* %brightness), !dbg !2836
  %6 = load i32, i32* %sign.addr, align 4, !dbg !2837
  %conv = sitofp i32 %6 to double, !dbg !2837
  %mul = fmul double 5.000000e-01, %conv, !dbg !2838
  %7 = load double, double* %brightness, align 8, !dbg !2839
  %sub = fsub double %7, 5.000000e-01, !dbg !2840
  %mul1 = fmul double 0x400921FB54442D18, %sub, !dbg !2841
  %call = call double @sin(double %mul1) #6, !dbg !2842
  %add = fadd double %call, 1.000000e+00, !dbg !2843
  %mul2 = fmul double 5.000000e-01, %add, !dbg !2844
  %8 = load double, double* %brightness, align 8, !dbg !2845
  %sub3 = fsub double %mul2, %8, !dbg !2846
  %mul4 = fmul double %mul, %sub3, !dbg !2847
  %9 = load double, double* %brightness, align 8, !dbg !2848
  %add5 = fadd double %9, %mul4, !dbg !2848
  store double %add5, double* %brightness, align 8, !dbg !2848
  %10 = load double, double* %brightness, align 8, !dbg !2849
  %cmp = fcmp ogt double %10, 1.000000e+00, !dbg !2851
  br i1 %cmp, label %if.then, label %if.else, !dbg !2852

if.then:                                          ; preds = %entry
  store double 1.000000e+00, double* %brightness, align 8, !dbg !2853
  br label %if.end10, !dbg !2854

if.else:                                          ; preds = %entry
  %11 = load double, double* %brightness, align 8, !dbg !2855
  %cmp7 = fcmp olt double %11, 0.000000e+00, !dbg !2857
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !2858

if.then9:                                         ; preds = %if.else
  store double 0.000000e+00, double* %brightness, align 8, !dbg !2859
  br label %if.end, !dbg !2860

if.end:                                           ; preds = %if.then9, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then
  %12 = load double, double* %hue, align 8, !dbg !2861
  %13 = load double, double* %saturation, align 8, !dbg !2862
  %14 = load double, double* %brightness, align 8, !dbg !2863
  %15 = load i16*, i16** %red.addr, align 8, !dbg !2864
  %16 = load i16*, i16** %green.addr, align 8, !dbg !2865
  %17 = load i16*, i16** %blue.addr, align 8, !dbg !2866
  call void @ConvertHSBToRGB(double %12, double %13, double %14, i16* %15, i16* %16, i16* %17), !dbg !2867
  ret void, !dbg !2868
}

declare dso_local i32 @AccelerateContrastImage(%struct._Image*, i32, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ContrastStretchImage(%struct._Image* %image, i8* %levels) #0 !dbg !2869 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %levels.addr = alloca i8*, align 8
  %black_point = alloca double, align 8
  %white_point = alloca double, align 8
  %geometry_info = alloca %struct._GeometryInfo, align 8
  %status = alloca i32, align 4
  %flags = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2870, metadata !DIExpression()), !dbg !2871
  store i8* %levels, i8** %levels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %levels.addr, metadata !2872, metadata !DIExpression()), !dbg !2873
  call void @llvm.dbg.declare(metadata double* %black_point, metadata !2874, metadata !DIExpression()), !dbg !2875
  call void @llvm.dbg.declare(metadata double* %white_point, metadata !2876, metadata !DIExpression()), !dbg !2877
  call void @llvm.dbg.declare(metadata %struct._GeometryInfo* %geometry_info, metadata !2878, metadata !DIExpression()), !dbg !2887
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2888, metadata !DIExpression()), !dbg !2889
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !2890, metadata !DIExpression()), !dbg !2891
  %0 = load i8*, i8** %levels.addr, align 8, !dbg !2892
  %cmp = icmp eq i8* %0, null, !dbg !2894
  br i1 %cmp, label %if.then, label %if.end, !dbg !2895

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2896
  br label %return, !dbg !2896

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %levels.addr, align 8, !dbg !2897
  %call = call i32 @ParseGeometry(i8* %1, %struct._GeometryInfo* %geometry_info), !dbg !2898
  store i32 %call, i32* %flags, align 4, !dbg !2899
  %rho = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 0, !dbg !2900
  %2 = load double, double* %rho, align 8, !dbg !2900
  store double %2, double* %black_point, align 8, !dbg !2901
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2902
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 7, !dbg !2903
  %4 = load i64, i64* %columns, align 8, !dbg !2903
  %conv = uitofp i64 %4 to double, !dbg !2904
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2905
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 8, !dbg !2906
  %6 = load i64, i64* %rows, align 8, !dbg !2906
  %conv1 = uitofp i64 %6 to double, !dbg !2905
  %mul = fmul double %conv, %conv1, !dbg !2907
  store double %mul, double* %white_point, align 8, !dbg !2908
  %7 = load i32, i32* %flags, align 4, !dbg !2909
  %and = and i32 %7, 8, !dbg !2911
  %cmp2 = icmp ne i32 %and, 0, !dbg !2912
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !2913

if.then4:                                         ; preds = %if.end
  %sigma = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 1, !dbg !2914
  %8 = load double, double* %sigma, align 8, !dbg !2914
  store double %8, double* %white_point, align 8, !dbg !2915
  br label %if.end5, !dbg !2916

if.end5:                                          ; preds = %if.then4, %if.end
  %9 = load i32, i32* %flags, align 4, !dbg !2917
  %and6 = and i32 %9, 4096, !dbg !2919
  %cmp7 = icmp ne i32 %and6, 0, !dbg !2920
  br i1 %cmp7, label %if.then9, label %if.end12, !dbg !2921

if.then9:                                         ; preds = %if.end5
  %10 = load double, double* %black_point, align 8, !dbg !2922
  %mul10 = fmul double %10, 6.553500e+02, !dbg !2922
  store double %mul10, double* %black_point, align 8, !dbg !2922
  %11 = load double, double* %white_point, align 8, !dbg !2924
  %mul11 = fmul double %11, 6.553500e+02, !dbg !2924
  store double %mul11, double* %white_point, align 8, !dbg !2924
  br label %if.end12, !dbg !2925

if.end12:                                         ; preds = %if.then9, %if.end5
  %12 = load i32, i32* %flags, align 4, !dbg !2926
  %and13 = and i32 %12, 8, !dbg !2928
  %cmp14 = icmp eq i32 %and13, 0, !dbg !2929
  br i1 %cmp14, label %if.then16, label %if.end22, !dbg !2930

if.then16:                                        ; preds = %if.end12
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2931
  %columns17 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 7, !dbg !2932
  %14 = load i64, i64* %columns17, align 8, !dbg !2932
  %conv18 = uitofp i64 %14 to double, !dbg !2933
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2934
  %rows19 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 8, !dbg !2935
  %16 = load i64, i64* %rows19, align 8, !dbg !2935
  %conv20 = uitofp i64 %16 to double, !dbg !2934
  %mul21 = fmul double %conv18, %conv20, !dbg !2936
  %17 = load double, double* %black_point, align 8, !dbg !2937
  %sub = fsub double %mul21, %17, !dbg !2938
  store double %sub, double* %white_point, align 8, !dbg !2939
  br label %if.end22, !dbg !2940

if.end22:                                         ; preds = %if.then16, %if.end12
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2941
  %19 = load double, double* %black_point, align 8, !dbg !2942
  %20 = load double, double* %white_point, align 8, !dbg !2943
  %call23 = call i32 @ContrastStretchImageChannel(%struct._Image* %18, i32 134217719, double %19, double %20), !dbg !2944
  store i32 %call23, i32* %status, align 4, !dbg !2945
  %21 = load i32, i32* %status, align 4, !dbg !2946
  store i32 %21, i32* %retval, align 4, !dbg !2947
  br label %return, !dbg !2947

return:                                           ; preds = %if.end22, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !2948
  ret i32 %22, !dbg !2948
}

declare dso_local i32 @ParseGeometry(i8*, %struct._GeometryInfo*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ContrastStretchImageChannel(%struct._Image* %image, i32 %channel, double %black_point, double %white_point) #0 !dbg !2949 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %black_point.addr = alloca double, align 8
  %white_point.addr = alloca double, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %intensity = alloca double, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %black = alloca %struct._MagickPixelPacket, align 8
  %histogram = alloca %struct._MagickPixelPacket*, align 8
  %white = alloca %struct._MagickPixelPacket, align 8
  %stretch_map = alloca %struct._QuantumPixelPacket*, align 8
  %i = alloca i64, align 8
  %y = alloca i64, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %indexes = alloca i16*, align 8
  %x = alloca i64, align 8
  %intensity42 = alloca i16, align 2
  %indexes693 = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x694 = alloca i64, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2950, metadata !DIExpression()), !dbg !2951
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !2952, metadata !DIExpression()), !dbg !2953
  store double %black_point, double* %black_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %black_point.addr, metadata !2954, metadata !DIExpression()), !dbg !2955
  store double %white_point, double* %white_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %white_point.addr, metadata !2956, metadata !DIExpression()), !dbg !2957
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !2958, metadata !DIExpression()), !dbg !2959
  call void @llvm.dbg.declare(metadata double* %intensity, metadata !2960, metadata !DIExpression()), !dbg !2961
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !2962, metadata !DIExpression()), !dbg !2963
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2964, metadata !DIExpression()), !dbg !2965
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !2966, metadata !DIExpression()), !dbg !2967
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %black, metadata !2968, metadata !DIExpression()), !dbg !2969
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %histogram, metadata !2970, metadata !DIExpression()), !dbg !2971
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %white, metadata !2972, metadata !DIExpression()), !dbg !2973
  call void @llvm.dbg.declare(metadata %struct._QuantumPixelPacket** %stretch_map, metadata !2974, metadata !DIExpression()), !dbg !2975
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2976, metadata !DIExpression()), !dbg !2977
  call void @llvm.dbg.declare(metadata i64* %y, metadata !2978, metadata !DIExpression()), !dbg !2979
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2980
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !2982
  %1 = load i32, i32* %debug, align 8, !dbg !2982
  %cmp = icmp ne i32 %1, 0, !dbg !2983
  br i1 %cmp, label %if.then, label %if.end, !dbg !2984

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2985
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !2986
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2985
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1166, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2987
  br label %if.end, !dbg !2988

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2989
  %4 = load i32, i32* %channel.addr, align 4, !dbg !2990
  %5 = load double, double* %black_point.addr, align 8, !dbg !2991
  %6 = load double, double* %white_point.addr, align 8, !dbg !2992
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2993
  %exception1 = getelementptr inbounds %struct._Image, %struct._Image* %7, i32 0, i32 58, !dbg !2994
  %call2 = call i32 @AccelerateContrastStretchImageChannel(%struct._Image* %3, i32 %4, double %5, double %6, %struct._ExceptionInfo* %exception1), !dbg !2995
  store i32 %call2, i32* %status, align 4, !dbg !2996
  %8 = load i32, i32* %status, align 4, !dbg !2997
  %cmp3 = icmp eq i32 %8, 1, !dbg !2999
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !3000

if.then4:                                         ; preds = %if.end
  %9 = load i32, i32* %status, align 4, !dbg !3001
  store i32 %9, i32* %retval, align 4, !dbg !3002
  br label %return, !dbg !3002

if.end5:                                          ; preds = %if.end
  %call6 = call i8* @AcquireQuantumMemory(i64 65536, i64 56) #7, !dbg !3003
  %10 = bitcast i8* %call6 to %struct._MagickPixelPacket*, !dbg !3004
  store %struct._MagickPixelPacket* %10, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3005
  %call7 = call i8* @AcquireQuantumMemory(i64 65536, i64 10) #7, !dbg !3006
  %11 = bitcast i8* %call7 to %struct._QuantumPixelPacket*, !dbg !3007
  store %struct._QuantumPixelPacket* %11, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !3008
  %12 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3009
  %cmp8 = icmp eq %struct._MagickPixelPacket* %12, null, !dbg !3011
  br i1 %cmp8, label %if.then10, label %lor.lhs.false, !dbg !3012

lor.lhs.false:                                    ; preds = %if.end5
  %13 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !3013
  %cmp9 = icmp eq %struct._QuantumPixelPacket* %13, null, !dbg !3014
  br i1 %cmp9, label %if.then10, label %if.end18, !dbg !3015

if.then10:                                        ; preds = %lor.lhs.false, %if.end5
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3016
  %cmp11 = icmp ne %struct._Image* %14, null, !dbg !3016
  br i1 %cmp11, label %if.then12, label %if.end17, !dbg !3019

if.then12:                                        ; preds = %if.then10
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3016
  %exception13 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 58, !dbg !3016
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3016
  %filename14 = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 53, !dbg !3016
  %arraydecay15 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename14, i64 0, i64 0, !dbg !3016
  %call16 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception13, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1180, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay15), !dbg !3016
  br label %if.end17, !dbg !3016

if.end17:                                         ; preds = %if.then12, %if.then10
  store i32 0, i32* %retval, align 4, !dbg !3019
  br label %return, !dbg !3019

if.end18:                                         ; preds = %lor.lhs.false
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3020
  %exception19 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 58, !dbg !3021
  store %struct._ExceptionInfo* %exception19, %struct._ExceptionInfo** %exception, align 8, !dbg !3022
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3023
  %19 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3025
  %call20 = call i32 @IsGrayImage(%struct._Image* %18, %struct._ExceptionInfo* %19), !dbg !3026
  %cmp21 = icmp ne i32 %call20, 0, !dbg !3027
  br i1 %cmp21, label %if.then22, label %if.end24, !dbg !3028

if.then22:                                        ; preds = %if.end18
  %20 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3029
  %call23 = call i32 @SetImageColorspace(%struct._Image* %20, i32 2), !dbg !3030
  br label %if.end24, !dbg !3031

if.end24:                                         ; preds = %if.then22, %if.end18
  store i32 1, i32* %status, align 4, !dbg !3032
  %21 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3033
  %22 = bitcast %struct._MagickPixelPacket* %21 to i8*, !dbg !3033
  %call25 = call i8* @ResetMagickMemory(i8* %22, i32 0, i64 3670016), !dbg !3034
  %23 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3035
  %24 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3036
  %call26 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %23, %struct._ExceptionInfo* %24), !dbg !3037
  store %struct._CacheView* %call26, %struct._CacheView** %image_view, align 8, !dbg !3038
  store i64 0, i64* %y, align 8, !dbg !3039
  br label %for.cond, !dbg !3041

for.cond:                                         ; preds = %for.inc120, %if.end24
  %25 = load i64, i64* %y, align 8, !dbg !3042
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3044
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 8, !dbg !3045
  %27 = load i64, i64* %rows, align 8, !dbg !3045
  %cmp27 = icmp slt i64 %25, %27, !dbg !3046
  br i1 %cmp27, label %for.body, label %for.end122, !dbg !3047

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !3048, metadata !DIExpression()), !dbg !3051
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !3052, metadata !DIExpression()), !dbg !3053
  call void @llvm.dbg.declare(metadata i64* %x, metadata !3054, metadata !DIExpression()), !dbg !3055
  %28 = load i32, i32* %status, align 4, !dbg !3056
  %cmp28 = icmp eq i32 %28, 0, !dbg !3058
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !3059

if.then29:                                        ; preds = %for.body
  br label %for.inc120, !dbg !3060

if.end30:                                         ; preds = %for.body
  %29 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3061
  %30 = load i64, i64* %y, align 8, !dbg !3062
  %31 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3063
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %31, i32 0, i32 7, !dbg !3064
  %32 = load i64, i64* %columns, align 8, !dbg !3064
  %33 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3065
  %call31 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %29, i64 0, i64 %30, i64 %32, i64 1, %struct._ExceptionInfo* %33), !dbg !3066
  store %struct._PixelPacket* %call31, %struct._PixelPacket** %p, align 8, !dbg !3067
  %34 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3068
  %cmp32 = icmp eq %struct._PixelPacket* %34, null, !dbg !3070
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !3071

if.then33:                                        ; preds = %if.end30
  store i32 0, i32* %status, align 4, !dbg !3072
  br label %for.inc120, !dbg !3074

if.end34:                                         ; preds = %if.end30
  %35 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3075
  %call35 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %35), !dbg !3076
  store i16* %call35, i16** %indexes, align 8, !dbg !3077
  %36 = load i32, i32* %channel.addr, align 4, !dbg !3078
  %and = and i32 %36, 256, !dbg !3080
  %cmp36 = icmp ne i32 %and, 0, !dbg !3081
  br i1 %cmp36, label %if.then37, label %if.else, !dbg !3082

if.then37:                                        ; preds = %if.end34
  store i64 0, i64* %x, align 8, !dbg !3083
  br label %for.cond38, !dbg !3085

for.cond38:                                       ; preds = %for.inc, %if.then37
  %37 = load i64, i64* %x, align 8, !dbg !3086
  %38 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3088
  %columns39 = getelementptr inbounds %struct._Image, %struct._Image* %38, i32 0, i32 7, !dbg !3089
  %39 = load i64, i64* %columns39, align 8, !dbg !3089
  %cmp40 = icmp slt i64 %37, %39, !dbg !3090
  br i1 %cmp40, label %for.body41, label %for.end, !dbg !3091

for.body41:                                       ; preds = %for.cond38
  call void @llvm.dbg.declare(metadata i16* %intensity42, metadata !3092, metadata !DIExpression()), !dbg !3094
  %40 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3095
  %41 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3096
  %call43 = call float @GetPixelIntensity(%struct._Image* %40, %struct._PixelPacket* %41), !dbg !3097
  %call44 = call zeroext i16 @ClampToQuantum(float %call43), !dbg !3098
  store i16 %call44, i16* %intensity42, align 2, !dbg !3099
  %42 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3100
  %43 = load i16, i16* %intensity42, align 2, !dbg !3101
  %call45 = call i32 @ScaleQuantumToMap(i16 zeroext %43), !dbg !3102
  %idxprom = zext i32 %call45 to i64, !dbg !3100
  %arrayidx = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %42, i64 %idxprom, !dbg !3100
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx, i32 0, i32 5, !dbg !3103
  %44 = load float, float* %red, align 8, !dbg !3104
  %inc = fadd float %44, 1.000000e+00, !dbg !3104
  store float %inc, float* %red, align 8, !dbg !3104
  %45 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3105
  %46 = load i16, i16* %intensity42, align 2, !dbg !3106
  %call46 = call i32 @ScaleQuantumToMap(i16 zeroext %46), !dbg !3107
  %idxprom47 = zext i32 %call46 to i64, !dbg !3105
  %arrayidx48 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %45, i64 %idxprom47, !dbg !3105
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx48, i32 0, i32 6, !dbg !3108
  %47 = load float, float* %green, align 4, !dbg !3109
  %inc49 = fadd float %47, 1.000000e+00, !dbg !3109
  store float %inc49, float* %green, align 4, !dbg !3109
  %48 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3110
  %49 = load i16, i16* %intensity42, align 2, !dbg !3111
  %call50 = call i32 @ScaleQuantumToMap(i16 zeroext %49), !dbg !3112
  %idxprom51 = zext i32 %call50 to i64, !dbg !3110
  %arrayidx52 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %48, i64 %idxprom51, !dbg !3110
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx52, i32 0, i32 7, !dbg !3113
  %50 = load float, float* %blue, align 8, !dbg !3114
  %inc53 = fadd float %50, 1.000000e+00, !dbg !3114
  store float %inc53, float* %blue, align 8, !dbg !3114
  %51 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3115
  %52 = load i16, i16* %intensity42, align 2, !dbg !3116
  %call54 = call i32 @ScaleQuantumToMap(i16 zeroext %52), !dbg !3117
  %idxprom55 = zext i32 %call54 to i64, !dbg !3115
  %arrayidx56 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %51, i64 %idxprom55, !dbg !3115
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx56, i32 0, i32 9, !dbg !3118
  %53 = load float, float* %index, align 8, !dbg !3119
  %inc57 = fadd float %53, 1.000000e+00, !dbg !3119
  store float %inc57, float* %index, align 8, !dbg !3119
  %54 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3120
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %54, i32 1, !dbg !3120
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p, align 8, !dbg !3120
  br label %for.inc, !dbg !3121

for.inc:                                          ; preds = %for.body41
  %55 = load i64, i64* %x, align 8, !dbg !3122
  %inc58 = add nsw i64 %55, 1, !dbg !3122
  store i64 %inc58, i64* %x, align 8, !dbg !3122
  br label %for.cond38, !dbg !3123, !llvm.loop !3124

for.end:                                          ; preds = %for.cond38
  br label %if.end119, !dbg !3125

if.else:                                          ; preds = %if.end34
  store i64 0, i64* %x, align 8, !dbg !3126
  br label %for.cond59, !dbg !3128

for.cond59:                                       ; preds = %for.inc116, %if.else
  %56 = load i64, i64* %x, align 8, !dbg !3129
  %57 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3131
  %columns60 = getelementptr inbounds %struct._Image, %struct._Image* %57, i32 0, i32 7, !dbg !3132
  %58 = load i64, i64* %columns60, align 8, !dbg !3132
  %cmp61 = icmp slt i64 %56, %58, !dbg !3133
  br i1 %cmp61, label %for.body62, label %for.end118, !dbg !3134

for.body62:                                       ; preds = %for.cond59
  %59 = load i32, i32* %channel.addr, align 4, !dbg !3135
  %and63 = and i32 %59, 1, !dbg !3138
  %cmp64 = icmp ne i32 %and63, 0, !dbg !3139
  br i1 %cmp64, label %if.then65, label %if.end72, !dbg !3140

if.then65:                                        ; preds = %for.body62
  %60 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3141
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3142
  %red66 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %61, i32 0, i32 2, !dbg !3142
  %62 = load i16, i16* %red66, align 2, !dbg !3142
  %call67 = call i32 @ScaleQuantumToMap(i16 zeroext %62), !dbg !3143
  %idxprom68 = zext i32 %call67 to i64, !dbg !3141
  %arrayidx69 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %60, i64 %idxprom68, !dbg !3141
  %red70 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx69, i32 0, i32 5, !dbg !3144
  %63 = load float, float* %red70, align 8, !dbg !3145
  %inc71 = fadd float %63, 1.000000e+00, !dbg !3145
  store float %inc71, float* %red70, align 8, !dbg !3145
  br label %if.end72, !dbg !3141

if.end72:                                         ; preds = %if.then65, %for.body62
  %64 = load i32, i32* %channel.addr, align 4, !dbg !3146
  %and73 = and i32 %64, 2, !dbg !3148
  %cmp74 = icmp ne i32 %and73, 0, !dbg !3149
  br i1 %cmp74, label %if.then75, label %if.end82, !dbg !3150

if.then75:                                        ; preds = %if.end72
  %65 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3151
  %66 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3152
  %green76 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %66, i32 0, i32 1, !dbg !3152
  %67 = load i16, i16* %green76, align 2, !dbg !3152
  %call77 = call i32 @ScaleQuantumToMap(i16 zeroext %67), !dbg !3153
  %idxprom78 = zext i32 %call77 to i64, !dbg !3151
  %arrayidx79 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %65, i64 %idxprom78, !dbg !3151
  %green80 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx79, i32 0, i32 6, !dbg !3154
  %68 = load float, float* %green80, align 4, !dbg !3155
  %inc81 = fadd float %68, 1.000000e+00, !dbg !3155
  store float %inc81, float* %green80, align 4, !dbg !3155
  br label %if.end82, !dbg !3151

if.end82:                                         ; preds = %if.then75, %if.end72
  %69 = load i32, i32* %channel.addr, align 4, !dbg !3156
  %and83 = and i32 %69, 4, !dbg !3158
  %cmp84 = icmp ne i32 %and83, 0, !dbg !3159
  br i1 %cmp84, label %if.then85, label %if.end92, !dbg !3160

if.then85:                                        ; preds = %if.end82
  %70 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3161
  %71 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3162
  %blue86 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %71, i32 0, i32 0, !dbg !3162
  %72 = load i16, i16* %blue86, align 2, !dbg !3162
  %call87 = call i32 @ScaleQuantumToMap(i16 zeroext %72), !dbg !3163
  %idxprom88 = zext i32 %call87 to i64, !dbg !3161
  %arrayidx89 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %70, i64 %idxprom88, !dbg !3161
  %blue90 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx89, i32 0, i32 7, !dbg !3164
  %73 = load float, float* %blue90, align 8, !dbg !3165
  %inc91 = fadd float %73, 1.000000e+00, !dbg !3165
  store float %inc91, float* %blue90, align 8, !dbg !3165
  br label %if.end92, !dbg !3161

if.end92:                                         ; preds = %if.then85, %if.end82
  %74 = load i32, i32* %channel.addr, align 4, !dbg !3166
  %and93 = and i32 %74, 8, !dbg !3168
  %cmp94 = icmp ne i32 %and93, 0, !dbg !3169
  br i1 %cmp94, label %if.then95, label %if.end101, !dbg !3170

if.then95:                                        ; preds = %if.end92
  %75 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3171
  %76 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3172
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %76, i32 0, i32 3, !dbg !3172
  %77 = load i16, i16* %opacity, align 2, !dbg !3172
  %call96 = call i32 @ScaleQuantumToMap(i16 zeroext %77), !dbg !3173
  %idxprom97 = zext i32 %call96 to i64, !dbg !3171
  %arrayidx98 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %75, i64 %idxprom97, !dbg !3171
  %opacity99 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx98, i32 0, i32 8, !dbg !3174
  %78 = load float, float* %opacity99, align 4, !dbg !3175
  %inc100 = fadd float %78, 1.000000e+00, !dbg !3175
  store float %inc100, float* %opacity99, align 4, !dbg !3175
  br label %if.end101, !dbg !3171

if.end101:                                        ; preds = %if.then95, %if.end92
  %79 = load i32, i32* %channel.addr, align 4, !dbg !3176
  %and102 = and i32 %79, 32, !dbg !3178
  %cmp103 = icmp ne i32 %and102, 0, !dbg !3179
  br i1 %cmp103, label %land.lhs.true, label %if.end114, !dbg !3180

land.lhs.true:                                    ; preds = %if.end101
  %80 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3181
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %80, i32 0, i32 1, !dbg !3182
  %81 = load i32, i32* %colorspace, align 4, !dbg !3182
  %cmp104 = icmp eq i32 %81, 12, !dbg !3183
  br i1 %cmp104, label %if.then105, label %if.end114, !dbg !3184

if.then105:                                       ; preds = %land.lhs.true
  %82 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3185
  %83 = load i16*, i16** %indexes, align 8, !dbg !3186
  %84 = load i64, i64* %x, align 8, !dbg !3186
  %add.ptr = getelementptr inbounds i16, i16* %83, i64 %84, !dbg !3186
  %cmp106 = icmp eq i16* %add.ptr, null, !dbg !3186
  br i1 %cmp106, label %cond.true, label %cond.false, !dbg !3186

cond.true:                                        ; preds = %if.then105
  br label %cond.end, !dbg !3186

cond.false:                                       ; preds = %if.then105
  %85 = load i16*, i16** %indexes, align 8, !dbg !3186
  %86 = load i64, i64* %x, align 8, !dbg !3186
  %add.ptr107 = getelementptr inbounds i16, i16* %85, i64 %86, !dbg !3186
  %87 = load i16, i16* %add.ptr107, align 2, !dbg !3186
  %conv = zext i16 %87 to i32, !dbg !3186
  br label %cond.end, !dbg !3186

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv, %cond.false ], !dbg !3186
  %conv108 = trunc i32 %cond to i16, !dbg !3186
  %call109 = call i32 @ScaleQuantumToMap(i16 zeroext %conv108), !dbg !3187
  %idxprom110 = zext i32 %call109 to i64, !dbg !3185
  %arrayidx111 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %82, i64 %idxprom110, !dbg !3185
  %index112 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx111, i32 0, i32 9, !dbg !3188
  %88 = load float, float* %index112, align 8, !dbg !3189
  %inc113 = fadd float %88, 1.000000e+00, !dbg !3189
  store float %inc113, float* %index112, align 8, !dbg !3189
  br label %if.end114, !dbg !3185

if.end114:                                        ; preds = %cond.end, %land.lhs.true, %if.end101
  %89 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3190
  %incdec.ptr115 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %89, i32 1, !dbg !3190
  store %struct._PixelPacket* %incdec.ptr115, %struct._PixelPacket** %p, align 8, !dbg !3190
  br label %for.inc116, !dbg !3191

for.inc116:                                       ; preds = %if.end114
  %90 = load i64, i64* %x, align 8, !dbg !3192
  %inc117 = add nsw i64 %90, 1, !dbg !3192
  store i64 %inc117, i64* %x, align 8, !dbg !3192
  br label %for.cond59, !dbg !3193, !llvm.loop !3194

for.end118:                                       ; preds = %for.cond59
  br label %if.end119

if.end119:                                        ; preds = %for.end118, %for.end
  br label %for.inc120, !dbg !3196

for.inc120:                                       ; preds = %if.end119, %if.then33, %if.then29
  %91 = load i64, i64* %y, align 8, !dbg !3197
  %inc121 = add nsw i64 %91, 1, !dbg !3197
  store i64 %inc121, i64* %y, align 8, !dbg !3197
  br label %for.cond, !dbg !3198, !llvm.loop !3199

for.end122:                                       ; preds = %for.cond
  %red123 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 5, !dbg !3201
  store float 0.000000e+00, float* %red123, align 8, !dbg !3202
  %call124 = call i32 @ScaleQuantumToMap(i16 zeroext -1), !dbg !3203
  %conv125 = uitofp i32 %call124 to float, !dbg !3203
  %red126 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 5, !dbg !3204
  store float %conv125, float* %red126, align 8, !dbg !3205
  %92 = load i32, i32* %channel.addr, align 4, !dbg !3206
  %and127 = and i32 %92, 1, !dbg !3208
  %cmp128 = icmp ne i32 %and127, 0, !dbg !3209
  br i1 %cmp128, label %if.then130, label %if.end167, !dbg !3210

if.then130:                                       ; preds = %for.end122
  store double 0.000000e+00, double* %intensity, align 8, !dbg !3211
  store i64 0, i64* %i, align 8, !dbg !3213
  br label %for.cond131, !dbg !3215

for.cond131:                                      ; preds = %for.inc142, %if.then130
  %93 = load i64, i64* %i, align 8, !dbg !3216
  %cmp132 = icmp sle i64 %93, 65535, !dbg !3218
  br i1 %cmp132, label %for.body134, label %for.end144, !dbg !3219

for.body134:                                      ; preds = %for.cond131
  %94 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3220
  %95 = load i64, i64* %i, align 8, !dbg !3222
  %arrayidx135 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %94, i64 %95, !dbg !3220
  %red136 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx135, i32 0, i32 5, !dbg !3223
  %96 = load float, float* %red136, align 8, !dbg !3223
  %conv137 = fpext float %96 to double, !dbg !3220
  %97 = load double, double* %intensity, align 8, !dbg !3224
  %add = fadd double %97, %conv137, !dbg !3224
  store double %add, double* %intensity, align 8, !dbg !3224
  %98 = load double, double* %intensity, align 8, !dbg !3225
  %99 = load double, double* %black_point.addr, align 8, !dbg !3227
  %cmp138 = fcmp ogt double %98, %99, !dbg !3228
  br i1 %cmp138, label %if.then140, label %if.end141, !dbg !3229

if.then140:                                       ; preds = %for.body134
  br label %for.end144, !dbg !3230

if.end141:                                        ; preds = %for.body134
  br label %for.inc142, !dbg !3231

for.inc142:                                       ; preds = %if.end141
  %100 = load i64, i64* %i, align 8, !dbg !3232
  %inc143 = add nsw i64 %100, 1, !dbg !3232
  store i64 %inc143, i64* %i, align 8, !dbg !3232
  br label %for.cond131, !dbg !3233, !llvm.loop !3234

for.end144:                                       ; preds = %if.then140, %for.cond131
  %101 = load i64, i64* %i, align 8, !dbg !3236
  %conv145 = sitofp i64 %101 to float, !dbg !3237
  %red146 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 5, !dbg !3238
  store float %conv145, float* %red146, align 8, !dbg !3239
  store double 0.000000e+00, double* %intensity, align 8, !dbg !3240
  store i64 65535, i64* %i, align 8, !dbg !3241
  br label %for.cond147, !dbg !3243

for.cond147:                                      ; preds = %for.inc163, %for.end144
  %102 = load i64, i64* %i, align 8, !dbg !3244
  %cmp148 = icmp ne i64 %102, 0, !dbg !3246
  br i1 %cmp148, label %for.body150, label %for.end164, !dbg !3247

for.body150:                                      ; preds = %for.cond147
  %103 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3248
  %104 = load i64, i64* %i, align 8, !dbg !3250
  %arrayidx151 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %103, i64 %104, !dbg !3248
  %red152 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx151, i32 0, i32 5, !dbg !3251
  %105 = load float, float* %red152, align 8, !dbg !3251
  %conv153 = fpext float %105 to double, !dbg !3248
  %106 = load double, double* %intensity, align 8, !dbg !3252
  %add154 = fadd double %106, %conv153, !dbg !3252
  store double %add154, double* %intensity, align 8, !dbg !3252
  %107 = load double, double* %intensity, align 8, !dbg !3253
  %108 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3255
  %columns155 = getelementptr inbounds %struct._Image, %struct._Image* %108, i32 0, i32 7, !dbg !3256
  %109 = load i64, i64* %columns155, align 8, !dbg !3256
  %conv156 = uitofp i64 %109 to double, !dbg !3257
  %110 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3258
  %rows157 = getelementptr inbounds %struct._Image, %struct._Image* %110, i32 0, i32 8, !dbg !3259
  %111 = load i64, i64* %rows157, align 8, !dbg !3259
  %conv158 = uitofp i64 %111 to double, !dbg !3258
  %mul = fmul double %conv156, %conv158, !dbg !3260
  %112 = load double, double* %white_point.addr, align 8, !dbg !3261
  %sub = fsub double %mul, %112, !dbg !3262
  %cmp159 = fcmp ogt double %107, %sub, !dbg !3263
  br i1 %cmp159, label %if.then161, label %if.end162, !dbg !3264

if.then161:                                       ; preds = %for.body150
  br label %for.end164, !dbg !3265

if.end162:                                        ; preds = %for.body150
  br label %for.inc163, !dbg !3266

for.inc163:                                       ; preds = %if.end162
  %113 = load i64, i64* %i, align 8, !dbg !3267
  %dec = add nsw i64 %113, -1, !dbg !3267
  store i64 %dec, i64* %i, align 8, !dbg !3267
  br label %for.cond147, !dbg !3268, !llvm.loop !3269

for.end164:                                       ; preds = %if.then161, %for.cond147
  %114 = load i64, i64* %i, align 8, !dbg !3271
  %conv165 = sitofp i64 %114 to float, !dbg !3272
  %red166 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 5, !dbg !3273
  store float %conv165, float* %red166, align 8, !dbg !3274
  br label %if.end167, !dbg !3275

if.end167:                                        ; preds = %for.end164, %for.end122
  %green168 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 6, !dbg !3276
  store float 0.000000e+00, float* %green168, align 4, !dbg !3277
  %call169 = call i32 @ScaleQuantumToMap(i16 zeroext -1), !dbg !3278
  %conv170 = uitofp i32 %call169 to float, !dbg !3278
  %green171 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 6, !dbg !3279
  store float %conv170, float* %green171, align 4, !dbg !3280
  %115 = load i32, i32* %channel.addr, align 4, !dbg !3281
  %and172 = and i32 %115, 2, !dbg !3283
  %cmp173 = icmp ne i32 %and172, 0, !dbg !3284
  br i1 %cmp173, label %if.then175, label %if.end216, !dbg !3285

if.then175:                                       ; preds = %if.end167
  store double 0.000000e+00, double* %intensity, align 8, !dbg !3286
  store i64 0, i64* %i, align 8, !dbg !3288
  br label %for.cond176, !dbg !3290

for.cond176:                                      ; preds = %for.inc188, %if.then175
  %116 = load i64, i64* %i, align 8, !dbg !3291
  %cmp177 = icmp sle i64 %116, 65535, !dbg !3293
  br i1 %cmp177, label %for.body179, label %for.end190, !dbg !3294

for.body179:                                      ; preds = %for.cond176
  %117 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3295
  %118 = load i64, i64* %i, align 8, !dbg !3297
  %arrayidx180 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %117, i64 %118, !dbg !3295
  %green181 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx180, i32 0, i32 6, !dbg !3298
  %119 = load float, float* %green181, align 4, !dbg !3298
  %conv182 = fpext float %119 to double, !dbg !3295
  %120 = load double, double* %intensity, align 8, !dbg !3299
  %add183 = fadd double %120, %conv182, !dbg !3299
  store double %add183, double* %intensity, align 8, !dbg !3299
  %121 = load double, double* %intensity, align 8, !dbg !3300
  %122 = load double, double* %black_point.addr, align 8, !dbg !3302
  %cmp184 = fcmp ogt double %121, %122, !dbg !3303
  br i1 %cmp184, label %if.then186, label %if.end187, !dbg !3304

if.then186:                                       ; preds = %for.body179
  br label %for.end190, !dbg !3305

if.end187:                                        ; preds = %for.body179
  br label %for.inc188, !dbg !3306

for.inc188:                                       ; preds = %if.end187
  %123 = load i64, i64* %i, align 8, !dbg !3307
  %inc189 = add nsw i64 %123, 1, !dbg !3307
  store i64 %inc189, i64* %i, align 8, !dbg !3307
  br label %for.cond176, !dbg !3308, !llvm.loop !3309

for.end190:                                       ; preds = %if.then186, %for.cond176
  %124 = load i64, i64* %i, align 8, !dbg !3311
  %conv191 = sitofp i64 %124 to float, !dbg !3312
  %green192 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 6, !dbg !3313
  store float %conv191, float* %green192, align 4, !dbg !3314
  store double 0.000000e+00, double* %intensity, align 8, !dbg !3315
  store i64 65535, i64* %i, align 8, !dbg !3316
  br label %for.cond193, !dbg !3318

for.cond193:                                      ; preds = %for.inc211, %for.end190
  %125 = load i64, i64* %i, align 8, !dbg !3319
  %cmp194 = icmp ne i64 %125, 0, !dbg !3321
  br i1 %cmp194, label %for.body196, label %for.end213, !dbg !3322

for.body196:                                      ; preds = %for.cond193
  %126 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3323
  %127 = load i64, i64* %i, align 8, !dbg !3325
  %arrayidx197 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %126, i64 %127, !dbg !3323
  %green198 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx197, i32 0, i32 6, !dbg !3326
  %128 = load float, float* %green198, align 4, !dbg !3326
  %conv199 = fpext float %128 to double, !dbg !3323
  %129 = load double, double* %intensity, align 8, !dbg !3327
  %add200 = fadd double %129, %conv199, !dbg !3327
  store double %add200, double* %intensity, align 8, !dbg !3327
  %130 = load double, double* %intensity, align 8, !dbg !3328
  %131 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3330
  %columns201 = getelementptr inbounds %struct._Image, %struct._Image* %131, i32 0, i32 7, !dbg !3331
  %132 = load i64, i64* %columns201, align 8, !dbg !3331
  %conv202 = uitofp i64 %132 to double, !dbg !3332
  %133 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3333
  %rows203 = getelementptr inbounds %struct._Image, %struct._Image* %133, i32 0, i32 8, !dbg !3334
  %134 = load i64, i64* %rows203, align 8, !dbg !3334
  %conv204 = uitofp i64 %134 to double, !dbg !3333
  %mul205 = fmul double %conv202, %conv204, !dbg !3335
  %135 = load double, double* %white_point.addr, align 8, !dbg !3336
  %sub206 = fsub double %mul205, %135, !dbg !3337
  %cmp207 = fcmp ogt double %130, %sub206, !dbg !3338
  br i1 %cmp207, label %if.then209, label %if.end210, !dbg !3339

if.then209:                                       ; preds = %for.body196
  br label %for.end213, !dbg !3340

if.end210:                                        ; preds = %for.body196
  br label %for.inc211, !dbg !3341

for.inc211:                                       ; preds = %if.end210
  %136 = load i64, i64* %i, align 8, !dbg !3342
  %dec212 = add nsw i64 %136, -1, !dbg !3342
  store i64 %dec212, i64* %i, align 8, !dbg !3342
  br label %for.cond193, !dbg !3343, !llvm.loop !3344

for.end213:                                       ; preds = %if.then209, %for.cond193
  %137 = load i64, i64* %i, align 8, !dbg !3346
  %conv214 = sitofp i64 %137 to float, !dbg !3347
  %green215 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 6, !dbg !3348
  store float %conv214, float* %green215, align 4, !dbg !3349
  br label %if.end216, !dbg !3350

if.end216:                                        ; preds = %for.end213, %if.end167
  %blue217 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 7, !dbg !3351
  store float 0.000000e+00, float* %blue217, align 8, !dbg !3352
  %call218 = call i32 @ScaleQuantumToMap(i16 zeroext -1), !dbg !3353
  %conv219 = uitofp i32 %call218 to float, !dbg !3353
  %blue220 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 7, !dbg !3354
  store float %conv219, float* %blue220, align 8, !dbg !3355
  %138 = load i32, i32* %channel.addr, align 4, !dbg !3356
  %and221 = and i32 %138, 4, !dbg !3358
  %cmp222 = icmp ne i32 %and221, 0, !dbg !3359
  br i1 %cmp222, label %if.then224, label %if.end265, !dbg !3360

if.then224:                                       ; preds = %if.end216
  store double 0.000000e+00, double* %intensity, align 8, !dbg !3361
  store i64 0, i64* %i, align 8, !dbg !3363
  br label %for.cond225, !dbg !3365

for.cond225:                                      ; preds = %for.inc237, %if.then224
  %139 = load i64, i64* %i, align 8, !dbg !3366
  %cmp226 = icmp sle i64 %139, 65535, !dbg !3368
  br i1 %cmp226, label %for.body228, label %for.end239, !dbg !3369

for.body228:                                      ; preds = %for.cond225
  %140 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3370
  %141 = load i64, i64* %i, align 8, !dbg !3372
  %arrayidx229 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %140, i64 %141, !dbg !3370
  %blue230 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx229, i32 0, i32 7, !dbg !3373
  %142 = load float, float* %blue230, align 8, !dbg !3373
  %conv231 = fpext float %142 to double, !dbg !3370
  %143 = load double, double* %intensity, align 8, !dbg !3374
  %add232 = fadd double %143, %conv231, !dbg !3374
  store double %add232, double* %intensity, align 8, !dbg !3374
  %144 = load double, double* %intensity, align 8, !dbg !3375
  %145 = load double, double* %black_point.addr, align 8, !dbg !3377
  %cmp233 = fcmp ogt double %144, %145, !dbg !3378
  br i1 %cmp233, label %if.then235, label %if.end236, !dbg !3379

if.then235:                                       ; preds = %for.body228
  br label %for.end239, !dbg !3380

if.end236:                                        ; preds = %for.body228
  br label %for.inc237, !dbg !3381

for.inc237:                                       ; preds = %if.end236
  %146 = load i64, i64* %i, align 8, !dbg !3382
  %inc238 = add nsw i64 %146, 1, !dbg !3382
  store i64 %inc238, i64* %i, align 8, !dbg !3382
  br label %for.cond225, !dbg !3383, !llvm.loop !3384

for.end239:                                       ; preds = %if.then235, %for.cond225
  %147 = load i64, i64* %i, align 8, !dbg !3386
  %conv240 = sitofp i64 %147 to float, !dbg !3387
  %blue241 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 7, !dbg !3388
  store float %conv240, float* %blue241, align 8, !dbg !3389
  store double 0.000000e+00, double* %intensity, align 8, !dbg !3390
  store i64 65535, i64* %i, align 8, !dbg !3391
  br label %for.cond242, !dbg !3393

for.cond242:                                      ; preds = %for.inc260, %for.end239
  %148 = load i64, i64* %i, align 8, !dbg !3394
  %cmp243 = icmp ne i64 %148, 0, !dbg !3396
  br i1 %cmp243, label %for.body245, label %for.end262, !dbg !3397

for.body245:                                      ; preds = %for.cond242
  %149 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3398
  %150 = load i64, i64* %i, align 8, !dbg !3400
  %arrayidx246 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %149, i64 %150, !dbg !3398
  %blue247 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx246, i32 0, i32 7, !dbg !3401
  %151 = load float, float* %blue247, align 8, !dbg !3401
  %conv248 = fpext float %151 to double, !dbg !3398
  %152 = load double, double* %intensity, align 8, !dbg !3402
  %add249 = fadd double %152, %conv248, !dbg !3402
  store double %add249, double* %intensity, align 8, !dbg !3402
  %153 = load double, double* %intensity, align 8, !dbg !3403
  %154 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3405
  %columns250 = getelementptr inbounds %struct._Image, %struct._Image* %154, i32 0, i32 7, !dbg !3406
  %155 = load i64, i64* %columns250, align 8, !dbg !3406
  %conv251 = uitofp i64 %155 to double, !dbg !3407
  %156 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3408
  %rows252 = getelementptr inbounds %struct._Image, %struct._Image* %156, i32 0, i32 8, !dbg !3409
  %157 = load i64, i64* %rows252, align 8, !dbg !3409
  %conv253 = uitofp i64 %157 to double, !dbg !3408
  %mul254 = fmul double %conv251, %conv253, !dbg !3410
  %158 = load double, double* %white_point.addr, align 8, !dbg !3411
  %sub255 = fsub double %mul254, %158, !dbg !3412
  %cmp256 = fcmp ogt double %153, %sub255, !dbg !3413
  br i1 %cmp256, label %if.then258, label %if.end259, !dbg !3414

if.then258:                                       ; preds = %for.body245
  br label %for.end262, !dbg !3415

if.end259:                                        ; preds = %for.body245
  br label %for.inc260, !dbg !3416

for.inc260:                                       ; preds = %if.end259
  %159 = load i64, i64* %i, align 8, !dbg !3417
  %dec261 = add nsw i64 %159, -1, !dbg !3417
  store i64 %dec261, i64* %i, align 8, !dbg !3417
  br label %for.cond242, !dbg !3418, !llvm.loop !3419

for.end262:                                       ; preds = %if.then258, %for.cond242
  %160 = load i64, i64* %i, align 8, !dbg !3421
  %conv263 = sitofp i64 %160 to float, !dbg !3422
  %blue264 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 7, !dbg !3423
  store float %conv263, float* %blue264, align 8, !dbg !3424
  br label %if.end265, !dbg !3425

if.end265:                                        ; preds = %for.end262, %if.end216
  %opacity266 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 8, !dbg !3426
  store float 0.000000e+00, float* %opacity266, align 4, !dbg !3427
  %call267 = call i32 @ScaleQuantumToMap(i16 zeroext -1), !dbg !3428
  %conv268 = uitofp i32 %call267 to float, !dbg !3428
  %opacity269 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 8, !dbg !3429
  store float %conv268, float* %opacity269, align 4, !dbg !3430
  %161 = load i32, i32* %channel.addr, align 4, !dbg !3431
  %and270 = and i32 %161, 8, !dbg !3433
  %cmp271 = icmp ne i32 %and270, 0, !dbg !3434
  br i1 %cmp271, label %if.then273, label %if.end314, !dbg !3435

if.then273:                                       ; preds = %if.end265
  store double 0.000000e+00, double* %intensity, align 8, !dbg !3436
  store i64 0, i64* %i, align 8, !dbg !3438
  br label %for.cond274, !dbg !3440

for.cond274:                                      ; preds = %for.inc286, %if.then273
  %162 = load i64, i64* %i, align 8, !dbg !3441
  %cmp275 = icmp sle i64 %162, 65535, !dbg !3443
  br i1 %cmp275, label %for.body277, label %for.end288, !dbg !3444

for.body277:                                      ; preds = %for.cond274
  %163 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3445
  %164 = load i64, i64* %i, align 8, !dbg !3447
  %arrayidx278 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %163, i64 %164, !dbg !3445
  %opacity279 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx278, i32 0, i32 8, !dbg !3448
  %165 = load float, float* %opacity279, align 4, !dbg !3448
  %conv280 = fpext float %165 to double, !dbg !3445
  %166 = load double, double* %intensity, align 8, !dbg !3449
  %add281 = fadd double %166, %conv280, !dbg !3449
  store double %add281, double* %intensity, align 8, !dbg !3449
  %167 = load double, double* %intensity, align 8, !dbg !3450
  %168 = load double, double* %black_point.addr, align 8, !dbg !3452
  %cmp282 = fcmp ogt double %167, %168, !dbg !3453
  br i1 %cmp282, label %if.then284, label %if.end285, !dbg !3454

if.then284:                                       ; preds = %for.body277
  br label %for.end288, !dbg !3455

if.end285:                                        ; preds = %for.body277
  br label %for.inc286, !dbg !3456

for.inc286:                                       ; preds = %if.end285
  %169 = load i64, i64* %i, align 8, !dbg !3457
  %inc287 = add nsw i64 %169, 1, !dbg !3457
  store i64 %inc287, i64* %i, align 8, !dbg !3457
  br label %for.cond274, !dbg !3458, !llvm.loop !3459

for.end288:                                       ; preds = %if.then284, %for.cond274
  %170 = load i64, i64* %i, align 8, !dbg !3461
  %conv289 = sitofp i64 %170 to float, !dbg !3462
  %opacity290 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 8, !dbg !3463
  store float %conv289, float* %opacity290, align 4, !dbg !3464
  store double 0.000000e+00, double* %intensity, align 8, !dbg !3465
  store i64 65535, i64* %i, align 8, !dbg !3466
  br label %for.cond291, !dbg !3468

for.cond291:                                      ; preds = %for.inc309, %for.end288
  %171 = load i64, i64* %i, align 8, !dbg !3469
  %cmp292 = icmp ne i64 %171, 0, !dbg !3471
  br i1 %cmp292, label %for.body294, label %for.end311, !dbg !3472

for.body294:                                      ; preds = %for.cond291
  %172 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3473
  %173 = load i64, i64* %i, align 8, !dbg !3475
  %arrayidx295 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %172, i64 %173, !dbg !3473
  %opacity296 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx295, i32 0, i32 8, !dbg !3476
  %174 = load float, float* %opacity296, align 4, !dbg !3476
  %conv297 = fpext float %174 to double, !dbg !3473
  %175 = load double, double* %intensity, align 8, !dbg !3477
  %add298 = fadd double %175, %conv297, !dbg !3477
  store double %add298, double* %intensity, align 8, !dbg !3477
  %176 = load double, double* %intensity, align 8, !dbg !3478
  %177 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3480
  %columns299 = getelementptr inbounds %struct._Image, %struct._Image* %177, i32 0, i32 7, !dbg !3481
  %178 = load i64, i64* %columns299, align 8, !dbg !3481
  %conv300 = uitofp i64 %178 to double, !dbg !3482
  %179 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3483
  %rows301 = getelementptr inbounds %struct._Image, %struct._Image* %179, i32 0, i32 8, !dbg !3484
  %180 = load i64, i64* %rows301, align 8, !dbg !3484
  %conv302 = uitofp i64 %180 to double, !dbg !3483
  %mul303 = fmul double %conv300, %conv302, !dbg !3485
  %181 = load double, double* %white_point.addr, align 8, !dbg !3486
  %sub304 = fsub double %mul303, %181, !dbg !3487
  %cmp305 = fcmp ogt double %176, %sub304, !dbg !3488
  br i1 %cmp305, label %if.then307, label %if.end308, !dbg !3489

if.then307:                                       ; preds = %for.body294
  br label %for.end311, !dbg !3490

if.end308:                                        ; preds = %for.body294
  br label %for.inc309, !dbg !3491

for.inc309:                                       ; preds = %if.end308
  %182 = load i64, i64* %i, align 8, !dbg !3492
  %dec310 = add nsw i64 %182, -1, !dbg !3492
  store i64 %dec310, i64* %i, align 8, !dbg !3492
  br label %for.cond291, !dbg !3493, !llvm.loop !3494

for.end311:                                       ; preds = %if.then307, %for.cond291
  %183 = load i64, i64* %i, align 8, !dbg !3496
  %conv312 = sitofp i64 %183 to float, !dbg !3497
  %opacity313 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 8, !dbg !3498
  store float %conv312, float* %opacity313, align 4, !dbg !3499
  br label %if.end314, !dbg !3500

if.end314:                                        ; preds = %for.end311, %if.end265
  %index315 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 9, !dbg !3501
  store float 0.000000e+00, float* %index315, align 8, !dbg !3502
  %call316 = call i32 @ScaleQuantumToMap(i16 zeroext -1), !dbg !3503
  %conv317 = uitofp i32 %call316 to float, !dbg !3503
  %index318 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 9, !dbg !3504
  store float %conv317, float* %index318, align 8, !dbg !3505
  %184 = load i32, i32* %channel.addr, align 4, !dbg !3506
  %and319 = and i32 %184, 32, !dbg !3508
  %cmp320 = icmp ne i32 %and319, 0, !dbg !3509
  br i1 %cmp320, label %land.lhs.true322, label %if.end367, !dbg !3510

land.lhs.true322:                                 ; preds = %if.end314
  %185 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3511
  %colorspace323 = getelementptr inbounds %struct._Image, %struct._Image* %185, i32 0, i32 1, !dbg !3512
  %186 = load i32, i32* %colorspace323, align 4, !dbg !3512
  %cmp324 = icmp eq i32 %186, 12, !dbg !3513
  br i1 %cmp324, label %if.then326, label %if.end367, !dbg !3514

if.then326:                                       ; preds = %land.lhs.true322
  store double 0.000000e+00, double* %intensity, align 8, !dbg !3515
  store i64 0, i64* %i, align 8, !dbg !3517
  br label %for.cond327, !dbg !3519

for.cond327:                                      ; preds = %for.inc339, %if.then326
  %187 = load i64, i64* %i, align 8, !dbg !3520
  %cmp328 = icmp sle i64 %187, 65535, !dbg !3522
  br i1 %cmp328, label %for.body330, label %for.end341, !dbg !3523

for.body330:                                      ; preds = %for.cond327
  %188 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3524
  %189 = load i64, i64* %i, align 8, !dbg !3526
  %arrayidx331 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %188, i64 %189, !dbg !3524
  %index332 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx331, i32 0, i32 9, !dbg !3527
  %190 = load float, float* %index332, align 8, !dbg !3527
  %conv333 = fpext float %190 to double, !dbg !3524
  %191 = load double, double* %intensity, align 8, !dbg !3528
  %add334 = fadd double %191, %conv333, !dbg !3528
  store double %add334, double* %intensity, align 8, !dbg !3528
  %192 = load double, double* %intensity, align 8, !dbg !3529
  %193 = load double, double* %black_point.addr, align 8, !dbg !3531
  %cmp335 = fcmp ogt double %192, %193, !dbg !3532
  br i1 %cmp335, label %if.then337, label %if.end338, !dbg !3533

if.then337:                                       ; preds = %for.body330
  br label %for.end341, !dbg !3534

if.end338:                                        ; preds = %for.body330
  br label %for.inc339, !dbg !3535

for.inc339:                                       ; preds = %if.end338
  %194 = load i64, i64* %i, align 8, !dbg !3536
  %inc340 = add nsw i64 %194, 1, !dbg !3536
  store i64 %inc340, i64* %i, align 8, !dbg !3536
  br label %for.cond327, !dbg !3537, !llvm.loop !3538

for.end341:                                       ; preds = %if.then337, %for.cond327
  %195 = load i64, i64* %i, align 8, !dbg !3540
  %conv342 = sitofp i64 %195 to float, !dbg !3541
  %index343 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 9, !dbg !3542
  store float %conv342, float* %index343, align 8, !dbg !3543
  store double 0.000000e+00, double* %intensity, align 8, !dbg !3544
  store i64 65535, i64* %i, align 8, !dbg !3545
  br label %for.cond344, !dbg !3547

for.cond344:                                      ; preds = %for.inc362, %for.end341
  %196 = load i64, i64* %i, align 8, !dbg !3548
  %cmp345 = icmp ne i64 %196, 0, !dbg !3550
  br i1 %cmp345, label %for.body347, label %for.end364, !dbg !3551

for.body347:                                      ; preds = %for.cond344
  %197 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3552
  %198 = load i64, i64* %i, align 8, !dbg !3554
  %arrayidx348 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %197, i64 %198, !dbg !3552
  %index349 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx348, i32 0, i32 9, !dbg !3555
  %199 = load float, float* %index349, align 8, !dbg !3555
  %conv350 = fpext float %199 to double, !dbg !3552
  %200 = load double, double* %intensity, align 8, !dbg !3556
  %add351 = fadd double %200, %conv350, !dbg !3556
  store double %add351, double* %intensity, align 8, !dbg !3556
  %201 = load double, double* %intensity, align 8, !dbg !3557
  %202 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3559
  %columns352 = getelementptr inbounds %struct._Image, %struct._Image* %202, i32 0, i32 7, !dbg !3560
  %203 = load i64, i64* %columns352, align 8, !dbg !3560
  %conv353 = uitofp i64 %203 to double, !dbg !3561
  %204 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3562
  %rows354 = getelementptr inbounds %struct._Image, %struct._Image* %204, i32 0, i32 8, !dbg !3563
  %205 = load i64, i64* %rows354, align 8, !dbg !3563
  %conv355 = uitofp i64 %205 to double, !dbg !3562
  %mul356 = fmul double %conv353, %conv355, !dbg !3564
  %206 = load double, double* %white_point.addr, align 8, !dbg !3565
  %sub357 = fsub double %mul356, %206, !dbg !3566
  %cmp358 = fcmp ogt double %201, %sub357, !dbg !3567
  br i1 %cmp358, label %if.then360, label %if.end361, !dbg !3568

if.then360:                                       ; preds = %for.body347
  br label %for.end364, !dbg !3569

if.end361:                                        ; preds = %for.body347
  br label %for.inc362, !dbg !3570

for.inc362:                                       ; preds = %if.end361
  %207 = load i64, i64* %i, align 8, !dbg !3571
  %dec363 = add nsw i64 %207, -1, !dbg !3571
  store i64 %dec363, i64* %i, align 8, !dbg !3571
  br label %for.cond344, !dbg !3572, !llvm.loop !3573

for.end364:                                       ; preds = %if.then360, %for.cond344
  %208 = load i64, i64* %i, align 8, !dbg !3575
  %conv365 = sitofp i64 %208 to float, !dbg !3576
  %index366 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 9, !dbg !3577
  store float %conv365, float* %index366, align 8, !dbg !3578
  br label %if.end367, !dbg !3579

if.end367:                                        ; preds = %for.end364, %land.lhs.true322, %if.end314
  %209 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3580
  %210 = bitcast %struct._MagickPixelPacket* %209 to i8*, !dbg !3580
  %call368 = call i8* @RelinquishMagickMemory(i8* %210), !dbg !3581
  %211 = bitcast i8* %call368 to %struct._MagickPixelPacket*, !dbg !3582
  store %struct._MagickPixelPacket* %211, %struct._MagickPixelPacket** %histogram, align 8, !dbg !3583
  %212 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !3584
  %213 = bitcast %struct._QuantumPixelPacket* %212 to i8*, !dbg !3584
  %call369 = call i8* @ResetMagickMemory(i8* %213, i32 0, i64 655360), !dbg !3585
  store i64 0, i64* %i, align 8, !dbg !3586
  br label %for.cond370, !dbg !3588

for.cond370:                                      ; preds = %for.inc577, %if.end367
  %214 = load i64, i64* %i, align 8, !dbg !3589
  %cmp371 = icmp sle i64 %214, 65535, !dbg !3591
  br i1 %cmp371, label %for.body373, label %for.end579, !dbg !3592

for.body373:                                      ; preds = %for.cond370
  %215 = load i32, i32* %channel.addr, align 4, !dbg !3593
  %and374 = and i32 %215, 1, !dbg !3596
  %cmp375 = icmp ne i32 %and374, 0, !dbg !3597
  br i1 %cmp375, label %if.then377, label %if.end412, !dbg !3598

if.then377:                                       ; preds = %for.body373
  %216 = load i64, i64* %i, align 8, !dbg !3599
  %red378 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 5, !dbg !3602
  %217 = load float, float* %red378, align 8, !dbg !3602
  %conv379 = fptosi float %217 to i64, !dbg !3603
  %cmp380 = icmp slt i64 %216, %conv379, !dbg !3604
  br i1 %cmp380, label %if.then382, label %if.else385, !dbg !3605

if.then382:                                       ; preds = %if.then377
  %218 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !3606
  %219 = load i64, i64* %i, align 8, !dbg !3607
  %arrayidx383 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %218, i64 %219, !dbg !3606
  %red384 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx383, i32 0, i32 0, !dbg !3608
  store i16 0, i16* %red384, align 2, !dbg !3609
  br label %if.end411, !dbg !3606

if.else385:                                       ; preds = %if.then377
  %220 = load i64, i64* %i, align 8, !dbg !3610
  %red386 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 5, !dbg !3612
  %221 = load float, float* %red386, align 8, !dbg !3612
  %conv387 = fptosi float %221 to i64, !dbg !3613
  %cmp388 = icmp sgt i64 %220, %conv387, !dbg !3614
  br i1 %cmp388, label %if.then390, label %if.else393, !dbg !3615

if.then390:                                       ; preds = %if.else385
  %222 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !3616
  %223 = load i64, i64* %i, align 8, !dbg !3617
  %arrayidx391 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %222, i64 %223, !dbg !3616
  %red392 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx391, i32 0, i32 0, !dbg !3618
  store i16 -1, i16* %red392, align 2, !dbg !3619
  br label %if.end410, !dbg !3616

if.else393:                                       ; preds = %if.else385
  %red394 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 5, !dbg !3620
  %224 = load float, float* %red394, align 8, !dbg !3620
  %red395 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 5, !dbg !3622
  %225 = load float, float* %red395, align 8, !dbg !3622
  %cmp396 = fcmp une float %224, %225, !dbg !3623
  br i1 %cmp396, label %if.then398, label %if.end409, !dbg !3624

if.then398:                                       ; preds = %if.else393
  %226 = load i64, i64* %i, align 8, !dbg !3625
  %conv399 = sitofp i64 %226 to float, !dbg !3625
  %red400 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 5, !dbg !3626
  %227 = load float, float* %red400, align 8, !dbg !3626
  %sub401 = fsub float %conv399, %227, !dbg !3627
  %mul402 = fmul float 6.553500e+04, %sub401, !dbg !3628
  %red403 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 5, !dbg !3629
  %228 = load float, float* %red403, align 8, !dbg !3629
  %red404 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 5, !dbg !3630
  %229 = load float, float* %red404, align 8, !dbg !3630
  %sub405 = fsub float %228, %229, !dbg !3631
  %div = fdiv float %mul402, %sub405, !dbg !3632
  %call406 = call zeroext i16 @ScaleMapToQuantum(float %div), !dbg !3633
  %230 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !3634
  %231 = load i64, i64* %i, align 8, !dbg !3635
  %arrayidx407 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %230, i64 %231, !dbg !3634
  %red408 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx407, i32 0, i32 0, !dbg !3636
  store i16 %call406, i16* %red408, align 2, !dbg !3637
  br label %if.end409, !dbg !3634

if.end409:                                        ; preds = %if.then398, %if.else393
  br label %if.end410

if.end410:                                        ; preds = %if.end409, %if.then390
  br label %if.end411

if.end411:                                        ; preds = %if.end410, %if.then382
  br label %if.end412, !dbg !3638

if.end412:                                        ; preds = %if.end411, %for.body373
  %232 = load i32, i32* %channel.addr, align 4, !dbg !3639
  %and413 = and i32 %232, 2, !dbg !3641
  %cmp414 = icmp ne i32 %and413, 0, !dbg !3642
  br i1 %cmp414, label %if.then416, label %if.end452, !dbg !3643

if.then416:                                       ; preds = %if.end412
  %233 = load i64, i64* %i, align 8, !dbg !3644
  %green417 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 6, !dbg !3647
  %234 = load float, float* %green417, align 4, !dbg !3647
  %conv418 = fptosi float %234 to i64, !dbg !3648
  %cmp419 = icmp slt i64 %233, %conv418, !dbg !3649
  br i1 %cmp419, label %if.then421, label %if.else424, !dbg !3650

if.then421:                                       ; preds = %if.then416
  %235 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !3651
  %236 = load i64, i64* %i, align 8, !dbg !3652
  %arrayidx422 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %235, i64 %236, !dbg !3651
  %green423 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx422, i32 0, i32 1, !dbg !3653
  store i16 0, i16* %green423, align 2, !dbg !3654
  br label %if.end451, !dbg !3651

if.else424:                                       ; preds = %if.then416
  %237 = load i64, i64* %i, align 8, !dbg !3655
  %green425 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 6, !dbg !3657
  %238 = load float, float* %green425, align 4, !dbg !3657
  %conv426 = fptosi float %238 to i64, !dbg !3658
  %cmp427 = icmp sgt i64 %237, %conv426, !dbg !3659
  br i1 %cmp427, label %if.then429, label %if.else432, !dbg !3660

if.then429:                                       ; preds = %if.else424
  %239 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !3661
  %240 = load i64, i64* %i, align 8, !dbg !3662
  %arrayidx430 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %239, i64 %240, !dbg !3661
  %green431 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx430, i32 0, i32 1, !dbg !3663
  store i16 -1, i16* %green431, align 2, !dbg !3664
  br label %if.end450, !dbg !3661

if.else432:                                       ; preds = %if.else424
  %green433 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 6, !dbg !3665
  %241 = load float, float* %green433, align 4, !dbg !3665
  %green434 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 6, !dbg !3667
  %242 = load float, float* %green434, align 4, !dbg !3667
  %cmp435 = fcmp une float %241, %242, !dbg !3668
  br i1 %cmp435, label %if.then437, label %if.end449, !dbg !3669

if.then437:                                       ; preds = %if.else432
  %243 = load i64, i64* %i, align 8, !dbg !3670
  %conv438 = sitofp i64 %243 to float, !dbg !3670
  %green439 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 6, !dbg !3671
  %244 = load float, float* %green439, align 4, !dbg !3671
  %sub440 = fsub float %conv438, %244, !dbg !3672
  %mul441 = fmul float 6.553500e+04, %sub440, !dbg !3673
  %green442 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 6, !dbg !3674
  %245 = load float, float* %green442, align 4, !dbg !3674
  %green443 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 6, !dbg !3675
  %246 = load float, float* %green443, align 4, !dbg !3675
  %sub444 = fsub float %245, %246, !dbg !3676
  %div445 = fdiv float %mul441, %sub444, !dbg !3677
  %call446 = call zeroext i16 @ScaleMapToQuantum(float %div445), !dbg !3678
  %247 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !3679
  %248 = load i64, i64* %i, align 8, !dbg !3680
  %arrayidx447 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %247, i64 %248, !dbg !3679
  %green448 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx447, i32 0, i32 1, !dbg !3681
  store i16 %call446, i16* %green448, align 2, !dbg !3682
  br label %if.end449, !dbg !3679

if.end449:                                        ; preds = %if.then437, %if.else432
  br label %if.end450

if.end450:                                        ; preds = %if.end449, %if.then429
  br label %if.end451

if.end451:                                        ; preds = %if.end450, %if.then421
  br label %if.end452, !dbg !3683

if.end452:                                        ; preds = %if.end451, %if.end412
  %249 = load i32, i32* %channel.addr, align 4, !dbg !3684
  %and453 = and i32 %249, 4, !dbg !3686
  %cmp454 = icmp ne i32 %and453, 0, !dbg !3687
  br i1 %cmp454, label %if.then456, label %if.end492, !dbg !3688

if.then456:                                       ; preds = %if.end452
  %250 = load i64, i64* %i, align 8, !dbg !3689
  %blue457 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 7, !dbg !3692
  %251 = load float, float* %blue457, align 8, !dbg !3692
  %conv458 = fptosi float %251 to i64, !dbg !3693
  %cmp459 = icmp slt i64 %250, %conv458, !dbg !3694
  br i1 %cmp459, label %if.then461, label %if.else464, !dbg !3695

if.then461:                                       ; preds = %if.then456
  %252 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !3696
  %253 = load i64, i64* %i, align 8, !dbg !3697
  %arrayidx462 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %252, i64 %253, !dbg !3696
  %blue463 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx462, i32 0, i32 2, !dbg !3698
  store i16 0, i16* %blue463, align 2, !dbg !3699
  br label %if.end491, !dbg !3696

if.else464:                                       ; preds = %if.then456
  %254 = load i64, i64* %i, align 8, !dbg !3700
  %blue465 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 7, !dbg !3702
  %255 = load float, float* %blue465, align 8, !dbg !3702
  %conv466 = fptosi float %255 to i64, !dbg !3703
  %cmp467 = icmp sgt i64 %254, %conv466, !dbg !3704
  br i1 %cmp467, label %if.then469, label %if.else472, !dbg !3705

if.then469:                                       ; preds = %if.else464
  %256 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !3706
  %257 = load i64, i64* %i, align 8, !dbg !3707
  %arrayidx470 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %256, i64 %257, !dbg !3706
  %blue471 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx470, i32 0, i32 2, !dbg !3708
  store i16 -1, i16* %blue471, align 2, !dbg !3709
  br label %if.end490, !dbg !3706

if.else472:                                       ; preds = %if.else464
  %blue473 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 7, !dbg !3710
  %258 = load float, float* %blue473, align 8, !dbg !3710
  %blue474 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 7, !dbg !3712
  %259 = load float, float* %blue474, align 8, !dbg !3712
  %cmp475 = fcmp une float %258, %259, !dbg !3713
  br i1 %cmp475, label %if.then477, label %if.end489, !dbg !3714

if.then477:                                       ; preds = %if.else472
  %260 = load i64, i64* %i, align 8, !dbg !3715
  %conv478 = sitofp i64 %260 to float, !dbg !3715
  %blue479 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 7, !dbg !3716
  %261 = load float, float* %blue479, align 8, !dbg !3716
  %sub480 = fsub float %conv478, %261, !dbg !3717
  %mul481 = fmul float 6.553500e+04, %sub480, !dbg !3718
  %blue482 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 7, !dbg !3719
  %262 = load float, float* %blue482, align 8, !dbg !3719
  %blue483 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 7, !dbg !3720
  %263 = load float, float* %blue483, align 8, !dbg !3720
  %sub484 = fsub float %262, %263, !dbg !3721
  %div485 = fdiv float %mul481, %sub484, !dbg !3722
  %call486 = call zeroext i16 @ScaleMapToQuantum(float %div485), !dbg !3723
  %264 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !3724
  %265 = load i64, i64* %i, align 8, !dbg !3725
  %arrayidx487 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %264, i64 %265, !dbg !3724
  %blue488 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx487, i32 0, i32 2, !dbg !3726
  store i16 %call486, i16* %blue488, align 2, !dbg !3727
  br label %if.end489, !dbg !3724

if.end489:                                        ; preds = %if.then477, %if.else472
  br label %if.end490

if.end490:                                        ; preds = %if.end489, %if.then469
  br label %if.end491

if.end491:                                        ; preds = %if.end490, %if.then461
  br label %if.end492, !dbg !3728

if.end492:                                        ; preds = %if.end491, %if.end452
  %266 = load i32, i32* %channel.addr, align 4, !dbg !3729
  %and493 = and i32 %266, 8, !dbg !3731
  %cmp494 = icmp ne i32 %and493, 0, !dbg !3732
  br i1 %cmp494, label %if.then496, label %if.end532, !dbg !3733

if.then496:                                       ; preds = %if.end492
  %267 = load i64, i64* %i, align 8, !dbg !3734
  %opacity497 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 8, !dbg !3737
  %268 = load float, float* %opacity497, align 4, !dbg !3737
  %conv498 = fptosi float %268 to i64, !dbg !3738
  %cmp499 = icmp slt i64 %267, %conv498, !dbg !3739
  br i1 %cmp499, label %if.then501, label %if.else504, !dbg !3740

if.then501:                                       ; preds = %if.then496
  %269 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !3741
  %270 = load i64, i64* %i, align 8, !dbg !3742
  %arrayidx502 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %269, i64 %270, !dbg !3741
  %opacity503 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx502, i32 0, i32 3, !dbg !3743
  store i16 0, i16* %opacity503, align 2, !dbg !3744
  br label %if.end531, !dbg !3741

if.else504:                                       ; preds = %if.then496
  %271 = load i64, i64* %i, align 8, !dbg !3745
  %opacity505 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 8, !dbg !3747
  %272 = load float, float* %opacity505, align 4, !dbg !3747
  %conv506 = fptosi float %272 to i64, !dbg !3748
  %cmp507 = icmp sgt i64 %271, %conv506, !dbg !3749
  br i1 %cmp507, label %if.then509, label %if.else512, !dbg !3750

if.then509:                                       ; preds = %if.else504
  %273 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !3751
  %274 = load i64, i64* %i, align 8, !dbg !3752
  %arrayidx510 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %273, i64 %274, !dbg !3751
  %opacity511 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx510, i32 0, i32 3, !dbg !3753
  store i16 -1, i16* %opacity511, align 2, !dbg !3754
  br label %if.end530, !dbg !3751

if.else512:                                       ; preds = %if.else504
  %opacity513 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 8, !dbg !3755
  %275 = load float, float* %opacity513, align 4, !dbg !3755
  %opacity514 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 8, !dbg !3757
  %276 = load float, float* %opacity514, align 4, !dbg !3757
  %cmp515 = fcmp une float %275, %276, !dbg !3758
  br i1 %cmp515, label %if.then517, label %if.end529, !dbg !3759

if.then517:                                       ; preds = %if.else512
  %277 = load i64, i64* %i, align 8, !dbg !3760
  %conv518 = sitofp i64 %277 to float, !dbg !3760
  %opacity519 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 8, !dbg !3761
  %278 = load float, float* %opacity519, align 4, !dbg !3761
  %sub520 = fsub float %conv518, %278, !dbg !3762
  %mul521 = fmul float 6.553500e+04, %sub520, !dbg !3763
  %opacity522 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 8, !dbg !3764
  %279 = load float, float* %opacity522, align 4, !dbg !3764
  %opacity523 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 8, !dbg !3765
  %280 = load float, float* %opacity523, align 4, !dbg !3765
  %sub524 = fsub float %279, %280, !dbg !3766
  %div525 = fdiv float %mul521, %sub524, !dbg !3767
  %call526 = call zeroext i16 @ScaleMapToQuantum(float %div525), !dbg !3768
  %281 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !3769
  %282 = load i64, i64* %i, align 8, !dbg !3770
  %arrayidx527 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %281, i64 %282, !dbg !3769
  %opacity528 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx527, i32 0, i32 3, !dbg !3771
  store i16 %call526, i16* %opacity528, align 2, !dbg !3772
  br label %if.end529, !dbg !3769

if.end529:                                        ; preds = %if.then517, %if.else512
  br label %if.end530

if.end530:                                        ; preds = %if.end529, %if.then509
  br label %if.end531

if.end531:                                        ; preds = %if.end530, %if.then501
  br label %if.end532, !dbg !3773

if.end532:                                        ; preds = %if.end531, %if.end492
  %283 = load i32, i32* %channel.addr, align 4, !dbg !3774
  %and533 = and i32 %283, 32, !dbg !3776
  %cmp534 = icmp ne i32 %and533, 0, !dbg !3777
  br i1 %cmp534, label %land.lhs.true536, label %if.end576, !dbg !3778

land.lhs.true536:                                 ; preds = %if.end532
  %284 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3779
  %colorspace537 = getelementptr inbounds %struct._Image, %struct._Image* %284, i32 0, i32 1, !dbg !3780
  %285 = load i32, i32* %colorspace537, align 4, !dbg !3780
  %cmp538 = icmp eq i32 %285, 12, !dbg !3781
  br i1 %cmp538, label %if.then540, label %if.end576, !dbg !3782

if.then540:                                       ; preds = %land.lhs.true536
  %286 = load i64, i64* %i, align 8, !dbg !3783
  %index541 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 9, !dbg !3786
  %287 = load float, float* %index541, align 8, !dbg !3786
  %conv542 = fptosi float %287 to i64, !dbg !3787
  %cmp543 = icmp slt i64 %286, %conv542, !dbg !3788
  br i1 %cmp543, label %if.then545, label %if.else548, !dbg !3789

if.then545:                                       ; preds = %if.then540
  %288 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !3790
  %289 = load i64, i64* %i, align 8, !dbg !3791
  %arrayidx546 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %288, i64 %289, !dbg !3790
  %index547 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx546, i32 0, i32 4, !dbg !3792
  store i16 0, i16* %index547, align 2, !dbg !3793
  br label %if.end575, !dbg !3790

if.else548:                                       ; preds = %if.then540
  %290 = load i64, i64* %i, align 8, !dbg !3794
  %index549 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 9, !dbg !3796
  %291 = load float, float* %index549, align 8, !dbg !3796
  %conv550 = fptosi float %291 to i64, !dbg !3797
  %cmp551 = icmp sgt i64 %290, %conv550, !dbg !3798
  br i1 %cmp551, label %if.then553, label %if.else556, !dbg !3799

if.then553:                                       ; preds = %if.else548
  %292 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !3800
  %293 = load i64, i64* %i, align 8, !dbg !3801
  %arrayidx554 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %292, i64 %293, !dbg !3800
  %index555 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx554, i32 0, i32 4, !dbg !3802
  store i16 -1, i16* %index555, align 2, !dbg !3803
  br label %if.end574, !dbg !3800

if.else556:                                       ; preds = %if.else548
  %index557 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 9, !dbg !3804
  %294 = load float, float* %index557, align 8, !dbg !3804
  %index558 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 9, !dbg !3806
  %295 = load float, float* %index558, align 8, !dbg !3806
  %cmp559 = fcmp une float %294, %295, !dbg !3807
  br i1 %cmp559, label %if.then561, label %if.end573, !dbg !3808

if.then561:                                       ; preds = %if.else556
  %296 = load i64, i64* %i, align 8, !dbg !3809
  %conv562 = sitofp i64 %296 to float, !dbg !3809
  %index563 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 9, !dbg !3810
  %297 = load float, float* %index563, align 8, !dbg !3810
  %sub564 = fsub float %conv562, %297, !dbg !3811
  %mul565 = fmul float 6.553500e+04, %sub564, !dbg !3812
  %index566 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 9, !dbg !3813
  %298 = load float, float* %index566, align 8, !dbg !3813
  %index567 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 9, !dbg !3814
  %299 = load float, float* %index567, align 8, !dbg !3814
  %sub568 = fsub float %298, %299, !dbg !3815
  %div569 = fdiv float %mul565, %sub568, !dbg !3816
  %call570 = call zeroext i16 @ScaleMapToQuantum(float %div569), !dbg !3817
  %300 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !3818
  %301 = load i64, i64* %i, align 8, !dbg !3819
  %arrayidx571 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %300, i64 %301, !dbg !3818
  %index572 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx571, i32 0, i32 4, !dbg !3820
  store i16 %call570, i16* %index572, align 2, !dbg !3821
  br label %if.end573, !dbg !3818

if.end573:                                        ; preds = %if.then561, %if.else556
  br label %if.end574

if.end574:                                        ; preds = %if.end573, %if.then553
  br label %if.end575

if.end575:                                        ; preds = %if.end574, %if.then545
  br label %if.end576, !dbg !3822

if.end576:                                        ; preds = %if.end575, %land.lhs.true536, %if.end532
  br label %for.inc577, !dbg !3823

for.inc577:                                       ; preds = %if.end576
  %302 = load i64, i64* %i, align 8, !dbg !3824
  %inc578 = add nsw i64 %302, 1, !dbg !3824
  store i64 %inc578, i64* %i, align 8, !dbg !3824
  br label %for.cond370, !dbg !3825, !llvm.loop !3826

for.end579:                                       ; preds = %for.cond370
  %303 = load i32, i32* %channel.addr, align 4, !dbg !3828
  %and580 = and i32 %303, 8, !dbg !3830
  %cmp581 = icmp ne i32 %and580, 0, !dbg !3831
  br i1 %cmp581, label %if.then591, label %lor.lhs.false583, !dbg !3832

lor.lhs.false583:                                 ; preds = %for.end579
  %304 = load i32, i32* %channel.addr, align 4, !dbg !3833
  %and584 = and i32 %304, 32, !dbg !3834
  %cmp585 = icmp ne i32 %and584, 0, !dbg !3835
  br i1 %cmp585, label %land.lhs.true587, label %if.end592, !dbg !3836

land.lhs.true587:                                 ; preds = %lor.lhs.false583
  %305 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3837
  %colorspace588 = getelementptr inbounds %struct._Image, %struct._Image* %305, i32 0, i32 1, !dbg !3838
  %306 = load i32, i32* %colorspace588, align 4, !dbg !3838
  %cmp589 = icmp eq i32 %306, 12, !dbg !3839
  br i1 %cmp589, label %if.then591, label %if.end592, !dbg !3840

if.then591:                                       ; preds = %land.lhs.true587, %for.end579
  %307 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3841
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %307, i32 0, i32 0, !dbg !3842
  store i32 1, i32* %storage_class, align 8, !dbg !3843
  br label %if.end592, !dbg !3841

if.end592:                                        ; preds = %if.then591, %land.lhs.true587, %lor.lhs.false583
  %308 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3844
  %storage_class593 = getelementptr inbounds %struct._Image, %struct._Image* %308, i32 0, i32 0, !dbg !3846
  %309 = load i32, i32* %storage_class593, align 8, !dbg !3846
  %cmp594 = icmp eq i32 %309, 2, !dbg !3847
  br i1 %cmp594, label %if.then596, label %if.end687, !dbg !3848

if.then596:                                       ; preds = %if.end592
  store i64 0, i64* %i, align 8, !dbg !3849
  br label %for.cond597, !dbg !3852

for.cond597:                                      ; preds = %for.inc684, %if.then596
  %310 = load i64, i64* %i, align 8, !dbg !3853
  %311 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3855
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %311, i32 0, i32 10, !dbg !3856
  %312 = load i64, i64* %colors, align 8, !dbg !3856
  %cmp598 = icmp slt i64 %310, %312, !dbg !3857
  br i1 %cmp598, label %for.body600, label %for.end686, !dbg !3858

for.body600:                                      ; preds = %for.cond597
  %313 = load i32, i32* %channel.addr, align 4, !dbg !3859
  %and601 = and i32 %313, 1, !dbg !3862
  %cmp602 = icmp ne i32 %and601, 0, !dbg !3863
  br i1 %cmp602, label %if.then604, label %if.end620, !dbg !3864

if.then604:                                       ; preds = %for.body600
  %red605 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 5, !dbg !3865
  %314 = load float, float* %red605, align 8, !dbg !3865
  %red606 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 5, !dbg !3868
  %315 = load float, float* %red606, align 8, !dbg !3868
  %cmp607 = fcmp une float %314, %315, !dbg !3869
  br i1 %cmp607, label %if.then609, label %if.end619, !dbg !3870

if.then609:                                       ; preds = %if.then604
  %316 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !3871
  %317 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3872
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %317, i32 0, i32 11, !dbg !3873
  %318 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !3873
  %319 = load i64, i64* %i, align 8, !dbg !3874
  %arrayidx610 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %318, i64 %319, !dbg !3872
  %red611 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx610, i32 0, i32 2, !dbg !3875
  %320 = load i16, i16* %red611, align 2, !dbg !3875
  %call612 = call i32 @ScaleQuantumToMap(i16 zeroext %320), !dbg !3876
  %idxprom613 = zext i32 %call612 to i64, !dbg !3871
  %arrayidx614 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %316, i64 %idxprom613, !dbg !3871
  %red615 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx614, i32 0, i32 0, !dbg !3877
  %321 = load i16, i16* %red615, align 2, !dbg !3877
  %322 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3878
  %colormap616 = getelementptr inbounds %struct._Image, %struct._Image* %322, i32 0, i32 11, !dbg !3879
  %323 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap616, align 8, !dbg !3879
  %324 = load i64, i64* %i, align 8, !dbg !3880
  %arrayidx617 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %323, i64 %324, !dbg !3878
  %red618 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx617, i32 0, i32 2, !dbg !3881
  store i16 %321, i16* %red618, align 2, !dbg !3882
  br label %if.end619, !dbg !3878

if.end619:                                        ; preds = %if.then609, %if.then604
  br label %if.end620, !dbg !3883

if.end620:                                        ; preds = %if.end619, %for.body600
  %325 = load i32, i32* %channel.addr, align 4, !dbg !3884
  %and621 = and i32 %325, 2, !dbg !3886
  %cmp622 = icmp ne i32 %and621, 0, !dbg !3887
  br i1 %cmp622, label %if.then624, label %if.end641, !dbg !3888

if.then624:                                       ; preds = %if.end620
  %green625 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 6, !dbg !3889
  %326 = load float, float* %green625, align 4, !dbg !3889
  %green626 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 6, !dbg !3892
  %327 = load float, float* %green626, align 4, !dbg !3892
  %cmp627 = fcmp une float %326, %327, !dbg !3893
  br i1 %cmp627, label %if.then629, label %if.end640, !dbg !3894

if.then629:                                       ; preds = %if.then624
  %328 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !3895
  %329 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3896
  %colormap630 = getelementptr inbounds %struct._Image, %struct._Image* %329, i32 0, i32 11, !dbg !3897
  %330 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap630, align 8, !dbg !3897
  %331 = load i64, i64* %i, align 8, !dbg !3898
  %arrayidx631 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %330, i64 %331, !dbg !3896
  %green632 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx631, i32 0, i32 1, !dbg !3899
  %332 = load i16, i16* %green632, align 2, !dbg !3899
  %call633 = call i32 @ScaleQuantumToMap(i16 zeroext %332), !dbg !3900
  %idxprom634 = zext i32 %call633 to i64, !dbg !3895
  %arrayidx635 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %328, i64 %idxprom634, !dbg !3895
  %green636 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx635, i32 0, i32 1, !dbg !3901
  %333 = load i16, i16* %green636, align 2, !dbg !3901
  %334 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3902
  %colormap637 = getelementptr inbounds %struct._Image, %struct._Image* %334, i32 0, i32 11, !dbg !3903
  %335 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap637, align 8, !dbg !3903
  %336 = load i64, i64* %i, align 8, !dbg !3904
  %arrayidx638 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %335, i64 %336, !dbg !3902
  %green639 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx638, i32 0, i32 1, !dbg !3905
  store i16 %333, i16* %green639, align 2, !dbg !3906
  br label %if.end640, !dbg !3902

if.end640:                                        ; preds = %if.then629, %if.then624
  br label %if.end641, !dbg !3907

if.end641:                                        ; preds = %if.end640, %if.end620
  %337 = load i32, i32* %channel.addr, align 4, !dbg !3908
  %and642 = and i32 %337, 4, !dbg !3910
  %cmp643 = icmp ne i32 %and642, 0, !dbg !3911
  br i1 %cmp643, label %if.then645, label %if.end662, !dbg !3912

if.then645:                                       ; preds = %if.end641
  %blue646 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 7, !dbg !3913
  %338 = load float, float* %blue646, align 8, !dbg !3913
  %blue647 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 7, !dbg !3916
  %339 = load float, float* %blue647, align 8, !dbg !3916
  %cmp648 = fcmp une float %338, %339, !dbg !3917
  br i1 %cmp648, label %if.then650, label %if.end661, !dbg !3918

if.then650:                                       ; preds = %if.then645
  %340 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !3919
  %341 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3920
  %colormap651 = getelementptr inbounds %struct._Image, %struct._Image* %341, i32 0, i32 11, !dbg !3921
  %342 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap651, align 8, !dbg !3921
  %343 = load i64, i64* %i, align 8, !dbg !3922
  %arrayidx652 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %342, i64 %343, !dbg !3920
  %blue653 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx652, i32 0, i32 0, !dbg !3923
  %344 = load i16, i16* %blue653, align 2, !dbg !3923
  %call654 = call i32 @ScaleQuantumToMap(i16 zeroext %344), !dbg !3924
  %idxprom655 = zext i32 %call654 to i64, !dbg !3919
  %arrayidx656 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %340, i64 %idxprom655, !dbg !3919
  %blue657 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx656, i32 0, i32 2, !dbg !3925
  %345 = load i16, i16* %blue657, align 2, !dbg !3925
  %346 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3926
  %colormap658 = getelementptr inbounds %struct._Image, %struct._Image* %346, i32 0, i32 11, !dbg !3927
  %347 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap658, align 8, !dbg !3927
  %348 = load i64, i64* %i, align 8, !dbg !3928
  %arrayidx659 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %347, i64 %348, !dbg !3926
  %blue660 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx659, i32 0, i32 0, !dbg !3929
  store i16 %345, i16* %blue660, align 2, !dbg !3930
  br label %if.end661, !dbg !3926

if.end661:                                        ; preds = %if.then650, %if.then645
  br label %if.end662, !dbg !3931

if.end662:                                        ; preds = %if.end661, %if.end641
  %349 = load i32, i32* %channel.addr, align 4, !dbg !3932
  %and663 = and i32 %349, 8, !dbg !3934
  %cmp664 = icmp ne i32 %and663, 0, !dbg !3935
  br i1 %cmp664, label %if.then666, label %if.end683, !dbg !3936

if.then666:                                       ; preds = %if.end662
  %opacity667 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 8, !dbg !3937
  %350 = load float, float* %opacity667, align 4, !dbg !3937
  %opacity668 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 8, !dbg !3940
  %351 = load float, float* %opacity668, align 4, !dbg !3940
  %cmp669 = fcmp une float %350, %351, !dbg !3941
  br i1 %cmp669, label %if.then671, label %if.end682, !dbg !3942

if.then671:                                       ; preds = %if.then666
  %352 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !3943
  %353 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3944
  %colormap672 = getelementptr inbounds %struct._Image, %struct._Image* %353, i32 0, i32 11, !dbg !3945
  %354 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap672, align 8, !dbg !3945
  %355 = load i64, i64* %i, align 8, !dbg !3946
  %arrayidx673 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %354, i64 %355, !dbg !3944
  %opacity674 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx673, i32 0, i32 3, !dbg !3947
  %356 = load i16, i16* %opacity674, align 2, !dbg !3947
  %call675 = call i32 @ScaleQuantumToMap(i16 zeroext %356), !dbg !3948
  %idxprom676 = zext i32 %call675 to i64, !dbg !3943
  %arrayidx677 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %352, i64 %idxprom676, !dbg !3943
  %opacity678 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx677, i32 0, i32 3, !dbg !3949
  %357 = load i16, i16* %opacity678, align 2, !dbg !3949
  %358 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3950
  %colormap679 = getelementptr inbounds %struct._Image, %struct._Image* %358, i32 0, i32 11, !dbg !3951
  %359 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap679, align 8, !dbg !3951
  %360 = load i64, i64* %i, align 8, !dbg !3952
  %arrayidx680 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %359, i64 %360, !dbg !3950
  %opacity681 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx680, i32 0, i32 3, !dbg !3953
  store i16 %357, i16* %opacity681, align 2, !dbg !3954
  br label %if.end682, !dbg !3950

if.end682:                                        ; preds = %if.then671, %if.then666
  br label %if.end683, !dbg !3955

if.end683:                                        ; preds = %if.end682, %if.end662
  br label %for.inc684, !dbg !3956

for.inc684:                                       ; preds = %if.end683
  %361 = load i64, i64* %i, align 8, !dbg !3957
  %inc685 = add nsw i64 %361, 1, !dbg !3957
  store i64 %inc685, i64* %i, align 8, !dbg !3957
  br label %for.cond597, !dbg !3958, !llvm.loop !3959

for.end686:                                       ; preds = %for.cond597
  br label %if.end687, !dbg !3961

if.end687:                                        ; preds = %for.end686, %if.end592
  store i32 1, i32* %status, align 4, !dbg !3962
  store i64 0, i64* %progress, align 8, !dbg !3963
  store i64 0, i64* %y, align 8, !dbg !3964
  br label %for.cond688, !dbg !3966

for.cond688:                                      ; preds = %for.inc834, %if.end687
  %362 = load i64, i64* %y, align 8, !dbg !3967
  %363 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3969
  %rows689 = getelementptr inbounds %struct._Image, %struct._Image* %363, i32 0, i32 8, !dbg !3970
  %364 = load i64, i64* %rows689, align 8, !dbg !3970
  %cmp690 = icmp slt i64 %362, %364, !dbg !3971
  br i1 %cmp690, label %for.body692, label %for.end836, !dbg !3972

for.body692:                                      ; preds = %for.cond688
  call void @llvm.dbg.declare(metadata i16** %indexes693, metadata !3973, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !3976, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.declare(metadata i64* %x694, metadata !3978, metadata !DIExpression()), !dbg !3979
  %365 = load i32, i32* %status, align 4, !dbg !3980
  %cmp695 = icmp eq i32 %365, 0, !dbg !3982
  br i1 %cmp695, label %if.then697, label %if.end698, !dbg !3983

if.then697:                                       ; preds = %for.body692
  br label %for.inc834, !dbg !3984

if.end698:                                        ; preds = %for.body692
  %366 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3985
  %367 = load i64, i64* %y, align 8, !dbg !3986
  %368 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3987
  %columns699 = getelementptr inbounds %struct._Image, %struct._Image* %368, i32 0, i32 7, !dbg !3988
  %369 = load i64, i64* %columns699, align 8, !dbg !3988
  %370 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3989
  %call700 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %366, i64 0, i64 %367, i64 %369, i64 1, %struct._ExceptionInfo* %370), !dbg !3990
  store %struct._PixelPacket* %call700, %struct._PixelPacket** %q, align 8, !dbg !3991
  %371 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3992
  %cmp701 = icmp eq %struct._PixelPacket* %371, null, !dbg !3994
  br i1 %cmp701, label %if.then703, label %if.end704, !dbg !3995

if.then703:                                       ; preds = %if.end698
  store i32 0, i32* %status, align 4, !dbg !3996
  br label %for.inc834, !dbg !3998

if.end704:                                        ; preds = %if.end698
  %372 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3999
  %call705 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %372), !dbg !4000
  store i16* %call705, i16** %indexes693, align 8, !dbg !4001
  store i64 0, i64* %x694, align 8, !dbg !4002
  br label %for.cond706, !dbg !4004

for.cond706:                                      ; preds = %for.inc815, %if.end704
  %373 = load i64, i64* %x694, align 8, !dbg !4005
  %374 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4007
  %columns707 = getelementptr inbounds %struct._Image, %struct._Image* %374, i32 0, i32 7, !dbg !4008
  %375 = load i64, i64* %columns707, align 8, !dbg !4008
  %cmp708 = icmp slt i64 %373, %375, !dbg !4009
  br i1 %cmp708, label %for.body710, label %for.end817, !dbg !4010

for.body710:                                      ; preds = %for.cond706
  %376 = load i32, i32* %channel.addr, align 4, !dbg !4011
  %and711 = and i32 %376, 1, !dbg !4014
  %cmp712 = icmp ne i32 %and711, 0, !dbg !4015
  br i1 %cmp712, label %if.then714, label %if.end727, !dbg !4016

if.then714:                                       ; preds = %for.body710
  %red715 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 5, !dbg !4017
  %377 = load float, float* %red715, align 8, !dbg !4017
  %red716 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 5, !dbg !4020
  %378 = load float, float* %red716, align 8, !dbg !4020
  %cmp717 = fcmp une float %377, %378, !dbg !4021
  br i1 %cmp717, label %if.then719, label %if.end726, !dbg !4022

if.then719:                                       ; preds = %if.then714
  %379 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !4023
  %380 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4023
  %red720 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %380, i32 0, i32 2, !dbg !4023
  %381 = load i16, i16* %red720, align 2, !dbg !4023
  %call721 = call i32 @ScaleQuantumToMap(i16 zeroext %381), !dbg !4023
  %idxprom722 = zext i32 %call721 to i64, !dbg !4023
  %arrayidx723 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %379, i64 %idxprom722, !dbg !4023
  %red724 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx723, i32 0, i32 0, !dbg !4023
  %382 = load i16, i16* %red724, align 2, !dbg !4023
  %383 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4023
  %red725 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %383, i32 0, i32 2, !dbg !4023
  store i16 %382, i16* %red725, align 2, !dbg !4023
  br label %if.end726, !dbg !4023

if.end726:                                        ; preds = %if.then719, %if.then714
  br label %if.end727, !dbg !4024

if.end727:                                        ; preds = %if.end726, %for.body710
  %384 = load i32, i32* %channel.addr, align 4, !dbg !4025
  %and728 = and i32 %384, 2, !dbg !4027
  %cmp729 = icmp ne i32 %and728, 0, !dbg !4028
  br i1 %cmp729, label %if.then731, label %if.end744, !dbg !4029

if.then731:                                       ; preds = %if.end727
  %green732 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 6, !dbg !4030
  %385 = load float, float* %green732, align 4, !dbg !4030
  %green733 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 6, !dbg !4033
  %386 = load float, float* %green733, align 4, !dbg !4033
  %cmp734 = fcmp une float %385, %386, !dbg !4034
  br i1 %cmp734, label %if.then736, label %if.end743, !dbg !4035

if.then736:                                       ; preds = %if.then731
  %387 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !4036
  %388 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4036
  %green737 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %388, i32 0, i32 1, !dbg !4036
  %389 = load i16, i16* %green737, align 2, !dbg !4036
  %call738 = call i32 @ScaleQuantumToMap(i16 zeroext %389), !dbg !4036
  %idxprom739 = zext i32 %call738 to i64, !dbg !4036
  %arrayidx740 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %387, i64 %idxprom739, !dbg !4036
  %green741 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx740, i32 0, i32 1, !dbg !4036
  %390 = load i16, i16* %green741, align 2, !dbg !4036
  %391 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4036
  %green742 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %391, i32 0, i32 1, !dbg !4036
  store i16 %390, i16* %green742, align 2, !dbg !4036
  br label %if.end743, !dbg !4036

if.end743:                                        ; preds = %if.then736, %if.then731
  br label %if.end744, !dbg !4037

if.end744:                                        ; preds = %if.end743, %if.end727
  %392 = load i32, i32* %channel.addr, align 4, !dbg !4038
  %and745 = and i32 %392, 4, !dbg !4040
  %cmp746 = icmp ne i32 %and745, 0, !dbg !4041
  br i1 %cmp746, label %if.then748, label %if.end761, !dbg !4042

if.then748:                                       ; preds = %if.end744
  %blue749 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 7, !dbg !4043
  %393 = load float, float* %blue749, align 8, !dbg !4043
  %blue750 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 7, !dbg !4046
  %394 = load float, float* %blue750, align 8, !dbg !4046
  %cmp751 = fcmp une float %393, %394, !dbg !4047
  br i1 %cmp751, label %if.then753, label %if.end760, !dbg !4048

if.then753:                                       ; preds = %if.then748
  %395 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !4049
  %396 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4049
  %blue754 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %396, i32 0, i32 0, !dbg !4049
  %397 = load i16, i16* %blue754, align 2, !dbg !4049
  %call755 = call i32 @ScaleQuantumToMap(i16 zeroext %397), !dbg !4049
  %idxprom756 = zext i32 %call755 to i64, !dbg !4049
  %arrayidx757 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %395, i64 %idxprom756, !dbg !4049
  %blue758 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx757, i32 0, i32 2, !dbg !4049
  %398 = load i16, i16* %blue758, align 2, !dbg !4049
  %399 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4049
  %blue759 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %399, i32 0, i32 0, !dbg !4049
  store i16 %398, i16* %blue759, align 2, !dbg !4049
  br label %if.end760, !dbg !4049

if.end760:                                        ; preds = %if.then753, %if.then748
  br label %if.end761, !dbg !4050

if.end761:                                        ; preds = %if.end760, %if.end744
  %400 = load i32, i32* %channel.addr, align 4, !dbg !4051
  %and762 = and i32 %400, 8, !dbg !4053
  %cmp763 = icmp ne i32 %and762, 0, !dbg !4054
  br i1 %cmp763, label %if.then765, label %if.end778, !dbg !4055

if.then765:                                       ; preds = %if.end761
  %opacity766 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 8, !dbg !4056
  %401 = load float, float* %opacity766, align 4, !dbg !4056
  %opacity767 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 8, !dbg !4059
  %402 = load float, float* %opacity767, align 4, !dbg !4059
  %cmp768 = fcmp une float %401, %402, !dbg !4060
  br i1 %cmp768, label %if.then770, label %if.end777, !dbg !4061

if.then770:                                       ; preds = %if.then765
  %403 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !4062
  %404 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4062
  %opacity771 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %404, i32 0, i32 3, !dbg !4062
  %405 = load i16, i16* %opacity771, align 2, !dbg !4062
  %call772 = call i32 @ScaleQuantumToMap(i16 zeroext %405), !dbg !4062
  %idxprom773 = zext i32 %call772 to i64, !dbg !4062
  %arrayidx774 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %403, i64 %idxprom773, !dbg !4062
  %opacity775 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx774, i32 0, i32 3, !dbg !4062
  %406 = load i16, i16* %opacity775, align 2, !dbg !4062
  %407 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4062
  %opacity776 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %407, i32 0, i32 3, !dbg !4062
  store i16 %406, i16* %opacity776, align 2, !dbg !4062
  br label %if.end777, !dbg !4062

if.end777:                                        ; preds = %if.then770, %if.then765
  br label %if.end778, !dbg !4063

if.end778:                                        ; preds = %if.end777, %if.end761
  %408 = load i32, i32* %channel.addr, align 4, !dbg !4064
  %and779 = and i32 %408, 32, !dbg !4066
  %cmp780 = icmp ne i32 %and779, 0, !dbg !4067
  br i1 %cmp780, label %land.lhs.true782, label %if.end813, !dbg !4068

land.lhs.true782:                                 ; preds = %if.end778
  %409 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4069
  %colorspace783 = getelementptr inbounds %struct._Image, %struct._Image* %409, i32 0, i32 1, !dbg !4070
  %410 = load i32, i32* %colorspace783, align 4, !dbg !4070
  %cmp784 = icmp eq i32 %410, 12, !dbg !4071
  br i1 %cmp784, label %if.then786, label %if.end813, !dbg !4072

if.then786:                                       ; preds = %land.lhs.true782
  %index787 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 9, !dbg !4073
  %411 = load float, float* %index787, align 8, !dbg !4073
  %index788 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 9, !dbg !4076
  %412 = load float, float* %index788, align 8, !dbg !4076
  %cmp789 = fcmp une float %411, %412, !dbg !4077
  br i1 %cmp789, label %if.then791, label %if.end812, !dbg !4078

if.then791:                                       ; preds = %if.then786
  %413 = load i16*, i16** %indexes693, align 8, !dbg !4079
  %414 = load i64, i64* %x694, align 8, !dbg !4079
  %add.ptr792 = getelementptr inbounds i16, i16* %413, i64 %414, !dbg !4079
  %cmp793 = icmp ne i16* %add.ptr792, null, !dbg !4079
  br i1 %cmp793, label %if.then795, label %if.end811, !dbg !4082

if.then795:                                       ; preds = %if.then791
  %415 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !4079
  %416 = load i16*, i16** %indexes693, align 8, !dbg !4079
  %417 = load i64, i64* %x694, align 8, !dbg !4079
  %add.ptr796 = getelementptr inbounds i16, i16* %416, i64 %417, !dbg !4079
  %cmp797 = icmp eq i16* %add.ptr796, null, !dbg !4079
  br i1 %cmp797, label %cond.true799, label %cond.false800, !dbg !4079

cond.true799:                                     ; preds = %if.then795
  br label %cond.end803, !dbg !4079

cond.false800:                                    ; preds = %if.then795
  %418 = load i16*, i16** %indexes693, align 8, !dbg !4079
  %419 = load i64, i64* %x694, align 8, !dbg !4079
  %add.ptr801 = getelementptr inbounds i16, i16* %418, i64 %419, !dbg !4079
  %420 = load i16, i16* %add.ptr801, align 2, !dbg !4079
  %conv802 = zext i16 %420 to i32, !dbg !4079
  br label %cond.end803, !dbg !4079

cond.end803:                                      ; preds = %cond.false800, %cond.true799
  %cond804 = phi i32 [ 0, %cond.true799 ], [ %conv802, %cond.false800 ], !dbg !4079
  %conv805 = trunc i32 %cond804 to i16, !dbg !4079
  %call806 = call i32 @ScaleQuantumToMap(i16 zeroext %conv805), !dbg !4079
  %idxprom807 = zext i32 %call806 to i64, !dbg !4079
  %arrayidx808 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %415, i64 %idxprom807, !dbg !4079
  %index809 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx808, i32 0, i32 4, !dbg !4079
  %421 = load i16, i16* %index809, align 2, !dbg !4079
  %422 = load i16*, i16** %indexes693, align 8, !dbg !4079
  %423 = load i64, i64* %x694, align 8, !dbg !4079
  %add.ptr810 = getelementptr inbounds i16, i16* %422, i64 %423, !dbg !4079
  store i16 %421, i16* %add.ptr810, align 2, !dbg !4079
  br label %if.end811, !dbg !4079

if.end811:                                        ; preds = %cond.end803, %if.then791
  br label %if.end812, !dbg !4082

if.end812:                                        ; preds = %if.end811, %if.then786
  br label %if.end813, !dbg !4083

if.end813:                                        ; preds = %if.end812, %land.lhs.true782, %if.end778
  %424 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4084
  %incdec.ptr814 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %424, i32 1, !dbg !4084
  store %struct._PixelPacket* %incdec.ptr814, %struct._PixelPacket** %q, align 8, !dbg !4084
  br label %for.inc815, !dbg !4085

for.inc815:                                       ; preds = %if.end813
  %425 = load i64, i64* %x694, align 8, !dbg !4086
  %inc816 = add nsw i64 %425, 1, !dbg !4086
  store i64 %inc816, i64* %x694, align 8, !dbg !4086
  br label %for.cond706, !dbg !4087, !llvm.loop !4088

for.end817:                                       ; preds = %for.cond706
  %426 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !4090
  %427 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4092
  %call818 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %426, %struct._ExceptionInfo* %427), !dbg !4093
  %cmp819 = icmp eq i32 %call818, 0, !dbg !4094
  br i1 %cmp819, label %if.then821, label %if.end822, !dbg !4095

if.then821:                                       ; preds = %for.end817
  store i32 0, i32* %status, align 4, !dbg !4096
  br label %if.end822, !dbg !4097

if.end822:                                        ; preds = %if.then821, %for.end817
  %428 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4098
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %428, i32 0, i32 47, !dbg !4100
  %429 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !4100
  %cmp823 = icmp ne i32 (i8*, i64, i64, i8*)* %429, null, !dbg !4101
  br i1 %cmp823, label %if.then825, label %if.end833, !dbg !4102

if.then825:                                       ; preds = %if.end822
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !4103, metadata !DIExpression()), !dbg !4105
  %430 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4106
  %431 = load i64, i64* %progress, align 8, !dbg !4107
  %inc826 = add nsw i64 %431, 1, !dbg !4107
  store i64 %inc826, i64* %progress, align 8, !dbg !4107
  %432 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4108
  %rows827 = getelementptr inbounds %struct._Image, %struct._Image* %432, i32 0, i32 8, !dbg !4109
  %433 = load i64, i64* %rows827, align 8, !dbg !4109
  %call828 = call i32 @SetImageProgress(%struct._Image* %430, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i64 0, i64 0), i64 %431, i64 %433), !dbg !4110
  store i32 %call828, i32* %proceed, align 4, !dbg !4111
  %434 = load i32, i32* %proceed, align 4, !dbg !4112
  %cmp829 = icmp eq i32 %434, 0, !dbg !4114
  br i1 %cmp829, label %if.then831, label %if.end832, !dbg !4115

if.then831:                                       ; preds = %if.then825
  store i32 0, i32* %status, align 4, !dbg !4116
  br label %if.end832, !dbg !4117

if.end832:                                        ; preds = %if.then831, %if.then825
  br label %if.end833, !dbg !4118

if.end833:                                        ; preds = %if.end832, %if.end822
  br label %for.inc834, !dbg !4119

for.inc834:                                       ; preds = %if.end833, %if.then703, %if.then697
  %435 = load i64, i64* %y, align 8, !dbg !4120
  %inc835 = add nsw i64 %435, 1, !dbg !4120
  store i64 %inc835, i64* %y, align 8, !dbg !4120
  br label %for.cond688, !dbg !4121, !llvm.loop !4122

for.end836:                                       ; preds = %for.cond688
  %436 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !4124
  %call837 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %436), !dbg !4125
  store %struct._CacheView* %call837, %struct._CacheView** %image_view, align 8, !dbg !4126
  %437 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !4127
  %438 = bitcast %struct._QuantumPixelPacket* %437 to i8*, !dbg !4127
  %call838 = call i8* @RelinquishMagickMemory(i8* %438), !dbg !4128
  %439 = bitcast i8* %call838 to %struct._QuantumPixelPacket*, !dbg !4129
  store %struct._QuantumPixelPacket* %439, %struct._QuantumPixelPacket** %stretch_map, align 8, !dbg !4130
  %440 = load i32, i32* %status, align 4, !dbg !4131
  store i32 %440, i32* %retval, align 4, !dbg !4132
  br label %return, !dbg !4132

return:                                           ; preds = %for.end836, %if.end17, %if.then4
  %441 = load i32, i32* %retval, align 4, !dbg !4133
  ret i32 %441, !dbg !4133
}

declare dso_local i32 @AccelerateContrastStretchImageChannel(%struct._Image*, i32, double, double, %struct._ExceptionInfo*) #3

declare dso_local i32 @IsGrayImage(%struct._Image*, %struct._ExceptionInfo*) #3

declare dso_local i8* @ResetMagickMemory(i8*, i32, i64) #3

declare dso_local %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #3

declare dso_local float @GetPixelIntensity(%struct._Image*, %struct._PixelPacket*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @EnhanceImage(%struct._Image* %image, %struct._ExceptionInfo* %exception) #0 !dbg !4134 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %enhance_view = alloca %struct._CacheView*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %enhance_image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %zero = alloca %struct._MagickPixelPacket, align 8
  %y = alloca i64, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %aggregate = alloca %struct._MagickPixelPacket, align 8
  %distance = alloca float, align 4
  %distance_squared = alloca float, align 4
  %mean = alloca float, align 4
  %total_weight = alloca float, align 4
  %pixel = alloca %struct._PixelPacket, align 2
  %r = alloca %struct._PixelPacket*, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4137, metadata !DIExpression()), !dbg !4138
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !4139, metadata !DIExpression()), !dbg !4140
  call void @llvm.dbg.declare(metadata %struct._CacheView** %enhance_view, metadata !4141, metadata !DIExpression()), !dbg !4142
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !4143, metadata !DIExpression()), !dbg !4144
  call void @llvm.dbg.declare(metadata %struct._Image** %enhance_image, metadata !4145, metadata !DIExpression()), !dbg !4146
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4147, metadata !DIExpression()), !dbg !4148
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !4149, metadata !DIExpression()), !dbg !4150
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %zero, metadata !4151, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.declare(metadata i64* %y, metadata !4153, metadata !DIExpression()), !dbg !4154
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4155
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !4157
  %1 = load i32, i32* %debug, align 8, !dbg !4157
  %cmp = icmp ne i32 %1, 0, !dbg !4158
  br i1 %cmp, label %if.then, label %if.end, !dbg !4159

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4160
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !4161
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !4160
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1621, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4162
  br label %if.end, !dbg !4163

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4164
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 7, !dbg !4166
  %4 = load i64, i64* %columns, align 8, !dbg !4166
  %cmp1 = icmp ult i64 %4, 5, !dbg !4167
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !4168

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4169
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 8, !dbg !4170
  %6 = load i64, i64* %rows, align 8, !dbg !4170
  %cmp2 = icmp ult i64 %6, 5, !dbg !4171
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !4172

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !4173
  br label %return, !dbg !4173

if.end4:                                          ; preds = %lor.lhs.false
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4174
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4175
  %columns5 = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 7, !dbg !4176
  %9 = load i64, i64* %columns5, align 8, !dbg !4176
  %10 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4177
  %rows6 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 8, !dbg !4178
  %11 = load i64, i64* %rows6, align 8, !dbg !4178
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4179
  %call7 = call %struct._Image* @CloneImage(%struct._Image* %7, i64 %9, i64 %11, i32 1, %struct._ExceptionInfo* %12), !dbg !4180
  store %struct._Image* %call7, %struct._Image** %enhance_image, align 8, !dbg !4181
  %13 = load %struct._Image*, %struct._Image** %enhance_image, align 8, !dbg !4182
  %cmp8 = icmp eq %struct._Image* %13, null, !dbg !4184
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !4185

if.then9:                                         ; preds = %if.end4
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !4186
  br label %return, !dbg !4186

if.end10:                                         ; preds = %if.end4
  %14 = load %struct._Image*, %struct._Image** %enhance_image, align 8, !dbg !4187
  %call11 = call i32 @SetImageStorageClass(%struct._Image* %14, i32 1), !dbg !4189
  %cmp12 = icmp eq i32 %call11, 0, !dbg !4190
  br i1 %cmp12, label %if.then13, label %if.end16, !dbg !4191

if.then13:                                        ; preds = %if.end10
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4192
  %16 = load %struct._Image*, %struct._Image** %enhance_image, align 8, !dbg !4194
  %exception14 = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 58, !dbg !4195
  call void @InheritException(%struct._ExceptionInfo* %15, %struct._ExceptionInfo* %exception14), !dbg !4196
  %17 = load %struct._Image*, %struct._Image** %enhance_image, align 8, !dbg !4197
  %call15 = call %struct._Image* @DestroyImage(%struct._Image* %17), !dbg !4198
  store %struct._Image* %call15, %struct._Image** %enhance_image, align 8, !dbg !4199
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !4200
  br label %return, !dbg !4200

if.end16:                                         ; preds = %if.end10
  store i32 1, i32* %status, align 4, !dbg !4201
  store i64 0, i64* %progress, align 8, !dbg !4202
  %18 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !4203
  %call17 = call i8* @ResetMagickMemory(i8* %18, i32 0, i64 56), !dbg !4204
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4205
  %20 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4206
  %call18 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %19, %struct._ExceptionInfo* %20), !dbg !4207
  store %struct._CacheView* %call18, %struct._CacheView** %image_view, align 8, !dbg !4208
  %21 = load %struct._Image*, %struct._Image** %enhance_image, align 8, !dbg !4209
  %22 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4210
  %call19 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %21, %struct._ExceptionInfo* %22), !dbg !4211
  store %struct._CacheView* %call19, %struct._CacheView** %enhance_view, align 8, !dbg !4212
  store i64 0, i64* %y, align 8, !dbg !4213
  br label %for.cond, !dbg !4215

for.cond:                                         ; preds = %for.inc3170, %if.end16
  %23 = load i64, i64* %y, align 8, !dbg !4216
  %24 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4218
  %rows20 = getelementptr inbounds %struct._Image, %struct._Image* %24, i32 0, i32 8, !dbg !4219
  %25 = load i64, i64* %rows20, align 8, !dbg !4219
  %cmp21 = icmp slt i64 %23, %25, !dbg !4220
  br i1 %cmp21, label %for.body, label %for.end3172, !dbg !4221

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !4222, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !4225, metadata !DIExpression()), !dbg !4226
  call void @llvm.dbg.declare(metadata i64* %x, metadata !4227, metadata !DIExpression()), !dbg !4228
  %26 = load i32, i32* %status, align 4, !dbg !4229
  %cmp22 = icmp eq i32 %26, 0, !dbg !4231
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !4232

if.then23:                                        ; preds = %for.body
  br label %for.inc3170, !dbg !4233

if.end24:                                         ; preds = %for.body
  %27 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !4234
  %28 = load i64, i64* %y, align 8, !dbg !4235
  %sub = sub nsw i64 %28, 2, !dbg !4236
  %29 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4237
  %columns25 = getelementptr inbounds %struct._Image, %struct._Image* %29, i32 0, i32 7, !dbg !4238
  %30 = load i64, i64* %columns25, align 8, !dbg !4238
  %add = add i64 %30, 4, !dbg !4239
  %31 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4240
  %call26 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %27, i64 -2, i64 %sub, i64 %add, i64 5, %struct._ExceptionInfo* %31), !dbg !4241
  store %struct._PixelPacket* %call26, %struct._PixelPacket** %p, align 8, !dbg !4242
  %32 = load %struct._CacheView*, %struct._CacheView** %enhance_view, align 8, !dbg !4243
  %33 = load i64, i64* %y, align 8, !dbg !4244
  %34 = load %struct._Image*, %struct._Image** %enhance_image, align 8, !dbg !4245
  %columns27 = getelementptr inbounds %struct._Image, %struct._Image* %34, i32 0, i32 7, !dbg !4246
  %35 = load i64, i64* %columns27, align 8, !dbg !4246
  %36 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4247
  %call28 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %32, i64 0, i64 %33, i64 %35, i64 1, %struct._ExceptionInfo* %36), !dbg !4248
  store %struct._PixelPacket* %call28, %struct._PixelPacket** %q, align 8, !dbg !4249
  %37 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4250
  %cmp29 = icmp eq %struct._PixelPacket* %37, null, !dbg !4252
  br i1 %cmp29, label %if.then32, label %lor.lhs.false30, !dbg !4253

lor.lhs.false30:                                  ; preds = %if.end24
  %38 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4254
  %cmp31 = icmp eq %struct._PixelPacket* %38, null, !dbg !4255
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !4256

if.then32:                                        ; preds = %lor.lhs.false30, %if.end24
  store i32 0, i32* %status, align 4, !dbg !4257
  br label %for.inc3170, !dbg !4259

if.end33:                                         ; preds = %lor.lhs.false30
  store i64 0, i64* %x, align 8, !dbg !4260
  br label %for.cond34, !dbg !4262

for.cond34:                                       ; preds = %for.inc, %if.end33
  %39 = load i64, i64* %x, align 8, !dbg !4263
  %40 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4265
  %columns35 = getelementptr inbounds %struct._Image, %struct._Image* %40, i32 0, i32 7, !dbg !4266
  %41 = load i64, i64* %columns35, align 8, !dbg !4266
  %cmp36 = icmp slt i64 %39, %41, !dbg !4267
  br i1 %cmp36, label %for.body37, label %for.end, !dbg !4268

for.body37:                                       ; preds = %for.cond34
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %aggregate, metadata !4269, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.declare(metadata float* %distance, metadata !4272, metadata !DIExpression()), !dbg !4273
  call void @llvm.dbg.declare(metadata float* %distance_squared, metadata !4274, metadata !DIExpression()), !dbg !4275
  call void @llvm.dbg.declare(metadata float* %mean, metadata !4276, metadata !DIExpression()), !dbg !4277
  call void @llvm.dbg.declare(metadata float* %total_weight, metadata !4278, metadata !DIExpression()), !dbg !4279
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %pixel, metadata !4280, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %r, metadata !4282, metadata !DIExpression()), !dbg !4283
  %42 = bitcast %struct._MagickPixelPacket* %aggregate to i8*, !dbg !4284
  %43 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !4284
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 56, i1 false), !dbg !4284
  store float 0.000000e+00, float* %total_weight, align 4, !dbg !4285
  %44 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4286
  %45 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4287
  %columns38 = getelementptr inbounds %struct._Image, %struct._Image* %45, i32 0, i32 7, !dbg !4288
  %46 = load i64, i64* %columns38, align 8, !dbg !4288
  %add39 = add i64 %46, 4, !dbg !4289
  %mul = mul i64 2, %add39, !dbg !4290
  %add.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %44, i64 %mul, !dbg !4291
  %add.ptr40 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr, i64 2, !dbg !4292
  store %struct._PixelPacket* %add.ptr40, %struct._PixelPacket** %r, align 8, !dbg !4293
  %47 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4294
  %48 = bitcast %struct._PixelPacket* %pixel to i8*, !dbg !4295
  %49 = bitcast %struct._PixelPacket* %47 to i8*, !dbg !4295
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %48, i8* align 2 %49, i64 8, i1 false), !dbg !4295
  %50 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4296
  store %struct._PixelPacket* %50, %struct._PixelPacket** %r, align 8, !dbg !4297
  %51 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4298
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %51, i32 0, i32 2, !dbg !4298
  %52 = load i16, i16* %red, align 2, !dbg !4298
  %conv = uitofp i16 %52 to float, !dbg !4298
  %red41 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4298
  %53 = load i16, i16* %red41, align 2, !dbg !4298
  %conv42 = zext i16 %53 to i32, !dbg !4298
  %conv43 = sitofp i32 %conv42 to float, !dbg !4298
  %add44 = fadd float %conv, %conv43, !dbg !4298
  %div = fdiv float %add44, 2.000000e+00, !dbg !4298
  store float %div, float* %mean, align 4, !dbg !4298
  %54 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4298
  %red45 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %54, i32 0, i32 2, !dbg !4298
  %55 = load i16, i16* %red45, align 2, !dbg !4298
  %conv46 = uitofp i16 %55 to float, !dbg !4298
  %red47 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4298
  %56 = load i16, i16* %red47, align 2, !dbg !4298
  %conv48 = uitofp i16 %56 to float, !dbg !4298
  %sub49 = fsub float %conv46, %conv48, !dbg !4298
  store float %sub49, float* %distance, align 4, !dbg !4298
  %57 = load float, float* %mean, align 4, !dbg !4298
  %conv50 = fpext float %57 to double, !dbg !4298
  %add51 = fadd double 1.310720e+05, %conv50, !dbg !4298
  %mul52 = fmul double 0x3EF0001000100010, %add51, !dbg !4298
  %58 = load float, float* %distance, align 4, !dbg !4298
  %conv53 = fpext float %58 to double, !dbg !4298
  %mul54 = fmul double %mul52, %conv53, !dbg !4298
  %59 = load float, float* %distance, align 4, !dbg !4298
  %conv55 = fpext float %59 to double, !dbg !4298
  %mul56 = fmul double %mul54, %conv55, !dbg !4298
  %conv57 = fptrunc double %mul56 to float, !dbg !4298
  store float %conv57, float* %distance_squared, align 4, !dbg !4298
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4298
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %60, i32 0, i32 1, !dbg !4298
  %61 = load i16, i16* %green, align 2, !dbg !4298
  %conv58 = uitofp i16 %61 to float, !dbg !4298
  %green59 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4298
  %62 = load i16, i16* %green59, align 2, !dbg !4298
  %conv60 = zext i16 %62 to i32, !dbg !4298
  %conv61 = sitofp i32 %conv60 to float, !dbg !4298
  %add62 = fadd float %conv58, %conv61, !dbg !4298
  %div63 = fdiv float %add62, 2.000000e+00, !dbg !4298
  store float %div63, float* %mean, align 4, !dbg !4298
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4298
  %green64 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %63, i32 0, i32 1, !dbg !4298
  %64 = load i16, i16* %green64, align 2, !dbg !4298
  %conv65 = uitofp i16 %64 to float, !dbg !4298
  %green66 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4298
  %65 = load i16, i16* %green66, align 2, !dbg !4298
  %conv67 = uitofp i16 %65 to float, !dbg !4298
  %sub68 = fsub float %conv65, %conv67, !dbg !4298
  store float %sub68, float* %distance, align 4, !dbg !4298
  %66 = load float, float* %distance, align 4, !dbg !4298
  %conv69 = fpext float %66 to double, !dbg !4298
  %mul70 = fmul double 4.000000e+00, %conv69, !dbg !4298
  %67 = load float, float* %distance, align 4, !dbg !4298
  %conv71 = fpext float %67 to double, !dbg !4298
  %mul72 = fmul double %mul70, %conv71, !dbg !4298
  %68 = load float, float* %distance_squared, align 4, !dbg !4298
  %conv73 = fpext float %68 to double, !dbg !4298
  %add74 = fadd double %conv73, %mul72, !dbg !4298
  %conv75 = fptrunc double %add74 to float, !dbg !4298
  store float %conv75, float* %distance_squared, align 4, !dbg !4298
  %69 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4298
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %69, i32 0, i32 0, !dbg !4298
  %70 = load i16, i16* %blue, align 2, !dbg !4298
  %conv76 = uitofp i16 %70 to float, !dbg !4298
  %blue77 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4298
  %71 = load i16, i16* %blue77, align 2, !dbg !4298
  %conv78 = zext i16 %71 to i32, !dbg !4298
  %conv79 = sitofp i32 %conv78 to float, !dbg !4298
  %add80 = fadd float %conv76, %conv79, !dbg !4298
  %div81 = fdiv float %add80, 2.000000e+00, !dbg !4298
  store float %div81, float* %mean, align 4, !dbg !4298
  %72 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4298
  %blue82 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %72, i32 0, i32 0, !dbg !4298
  %73 = load i16, i16* %blue82, align 2, !dbg !4298
  %conv83 = uitofp i16 %73 to float, !dbg !4298
  %blue84 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4298
  %74 = load i16, i16* %blue84, align 2, !dbg !4298
  %conv85 = uitofp i16 %74 to float, !dbg !4298
  %sub86 = fsub float %conv83, %conv85, !dbg !4298
  store float %sub86, float* %distance, align 4, !dbg !4298
  %75 = load float, float* %mean, align 4, !dbg !4298
  %conv87 = fpext float %75 to double, !dbg !4298
  %sub88 = fsub double 1.966070e+05, %conv87, !dbg !4298
  %mul89 = fmul double 0x3EF0001000100010, %sub88, !dbg !4298
  %76 = load float, float* %distance, align 4, !dbg !4298
  %conv90 = fpext float %76 to double, !dbg !4298
  %mul91 = fmul double %mul89, %conv90, !dbg !4298
  %77 = load float, float* %distance, align 4, !dbg !4298
  %conv92 = fpext float %77 to double, !dbg !4298
  %mul93 = fmul double %mul91, %conv92, !dbg !4298
  %78 = load float, float* %distance_squared, align 4, !dbg !4298
  %conv94 = fpext float %78 to double, !dbg !4298
  %add95 = fadd double %conv94, %mul93, !dbg !4298
  %conv96 = fptrunc double %add95 to float, !dbg !4298
  store float %conv96, float* %distance_squared, align 4, !dbg !4298
  %79 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4298
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %79, i32 0, i32 3, !dbg !4298
  %80 = load i16, i16* %opacity, align 2, !dbg !4298
  %conv97 = uitofp i16 %80 to float, !dbg !4298
  %opacity98 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4298
  %81 = load i16, i16* %opacity98, align 2, !dbg !4298
  %conv99 = zext i16 %81 to i32, !dbg !4298
  %conv100 = sitofp i32 %conv99 to float, !dbg !4298
  %add101 = fadd float %conv97, %conv100, !dbg !4298
  %div102 = fdiv float %add101, 2.000000e+00, !dbg !4298
  store float %div102, float* %mean, align 4, !dbg !4298
  %82 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4298
  %opacity103 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %82, i32 0, i32 3, !dbg !4298
  %83 = load i16, i16* %opacity103, align 2, !dbg !4298
  %conv104 = uitofp i16 %83 to float, !dbg !4298
  %opacity105 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4298
  %84 = load i16, i16* %opacity105, align 2, !dbg !4298
  %conv106 = uitofp i16 %84 to float, !dbg !4298
  %sub107 = fsub float %conv104, %conv106, !dbg !4298
  store float %sub107, float* %distance, align 4, !dbg !4298
  %85 = load float, float* %mean, align 4, !dbg !4298
  %conv108 = fpext float %85 to double, !dbg !4298
  %sub109 = fsub double 1.966070e+05, %conv108, !dbg !4298
  %mul110 = fmul double 0x3EF0001000100010, %sub109, !dbg !4298
  %86 = load float, float* %distance, align 4, !dbg !4298
  %conv111 = fpext float %86 to double, !dbg !4298
  %mul112 = fmul double %mul110, %conv111, !dbg !4298
  %87 = load float, float* %distance, align 4, !dbg !4298
  %conv113 = fpext float %87 to double, !dbg !4298
  %mul114 = fmul double %mul112, %conv113, !dbg !4298
  %88 = load float, float* %distance_squared, align 4, !dbg !4298
  %conv115 = fpext float %88 to double, !dbg !4298
  %add116 = fadd double %conv115, %mul114, !dbg !4298
  %conv117 = fptrunc double %add116 to float, !dbg !4298
  store float %conv117, float* %distance_squared, align 4, !dbg !4298
  %89 = load float, float* %distance_squared, align 4, !dbg !4299
  %cmp118 = fcmp olt float %89, 0x41A47AB860000000, !dbg !4299
  br i1 %cmp118, label %if.then120, label %if.end156, !dbg !4298

if.then120:                                       ; preds = %for.body37
  %90 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4301
  %red121 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %90, i32 0, i32 2, !dbg !4301
  %91 = load i16, i16* %red121, align 2, !dbg !4301
  %conv122 = zext i16 %91 to i32, !dbg !4301
  %conv123 = sitofp i32 %conv122 to double, !dbg !4301
  %mul124 = fmul double 5.000000e+00, %conv123, !dbg !4301
  %red125 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4301
  %92 = load float, float* %red125, align 8, !dbg !4301
  %conv126 = fpext float %92 to double, !dbg !4301
  %add127 = fadd double %conv126, %mul124, !dbg !4301
  %conv128 = fptrunc double %add127 to float, !dbg !4301
  store float %conv128, float* %red125, align 8, !dbg !4301
  %93 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4301
  %green129 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %93, i32 0, i32 1, !dbg !4301
  %94 = load i16, i16* %green129, align 2, !dbg !4301
  %conv130 = zext i16 %94 to i32, !dbg !4301
  %conv131 = sitofp i32 %conv130 to double, !dbg !4301
  %mul132 = fmul double 5.000000e+00, %conv131, !dbg !4301
  %green133 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4301
  %95 = load float, float* %green133, align 4, !dbg !4301
  %conv134 = fpext float %95 to double, !dbg !4301
  %add135 = fadd double %conv134, %mul132, !dbg !4301
  %conv136 = fptrunc double %add135 to float, !dbg !4301
  store float %conv136, float* %green133, align 4, !dbg !4301
  %96 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4301
  %blue137 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %96, i32 0, i32 0, !dbg !4301
  %97 = load i16, i16* %blue137, align 2, !dbg !4301
  %conv138 = zext i16 %97 to i32, !dbg !4301
  %conv139 = sitofp i32 %conv138 to double, !dbg !4301
  %mul140 = fmul double 5.000000e+00, %conv139, !dbg !4301
  %blue141 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4301
  %98 = load float, float* %blue141, align 8, !dbg !4301
  %conv142 = fpext float %98 to double, !dbg !4301
  %add143 = fadd double %conv142, %mul140, !dbg !4301
  %conv144 = fptrunc double %add143 to float, !dbg !4301
  store float %conv144, float* %blue141, align 8, !dbg !4301
  %99 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4301
  %opacity145 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %99, i32 0, i32 3, !dbg !4301
  %100 = load i16, i16* %opacity145, align 2, !dbg !4301
  %conv146 = zext i16 %100 to i32, !dbg !4301
  %conv147 = sitofp i32 %conv146 to double, !dbg !4301
  %mul148 = fmul double 5.000000e+00, %conv147, !dbg !4301
  %opacity149 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4301
  %101 = load float, float* %opacity149, align 4, !dbg !4301
  %conv150 = fpext float %101 to double, !dbg !4301
  %add151 = fadd double %conv150, %mul148, !dbg !4301
  %conv152 = fptrunc double %add151 to float, !dbg !4301
  store float %conv152, float* %opacity149, align 4, !dbg !4301
  %102 = load float, float* %total_weight, align 4, !dbg !4301
  %conv153 = fpext float %102 to double, !dbg !4301
  %add154 = fadd double %conv153, 5.000000e+00, !dbg !4301
  %conv155 = fptrunc double %add154 to float, !dbg !4301
  store float %conv155, float* %total_weight, align 4, !dbg !4301
  br label %if.end156, !dbg !4301

if.end156:                                        ; preds = %if.then120, %for.body37
  %103 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4298
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %103, i32 1, !dbg !4298
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %r, align 8, !dbg !4298
  %104 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4303
  %red157 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %104, i32 0, i32 2, !dbg !4303
  %105 = load i16, i16* %red157, align 2, !dbg !4303
  %conv158 = uitofp i16 %105 to float, !dbg !4303
  %red159 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4303
  %106 = load i16, i16* %red159, align 2, !dbg !4303
  %conv160 = zext i16 %106 to i32, !dbg !4303
  %conv161 = sitofp i32 %conv160 to float, !dbg !4303
  %add162 = fadd float %conv158, %conv161, !dbg !4303
  %div163 = fdiv float %add162, 2.000000e+00, !dbg !4303
  store float %div163, float* %mean, align 4, !dbg !4303
  %107 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4303
  %red164 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %107, i32 0, i32 2, !dbg !4303
  %108 = load i16, i16* %red164, align 2, !dbg !4303
  %conv165 = uitofp i16 %108 to float, !dbg !4303
  %red166 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4303
  %109 = load i16, i16* %red166, align 2, !dbg !4303
  %conv167 = uitofp i16 %109 to float, !dbg !4303
  %sub168 = fsub float %conv165, %conv167, !dbg !4303
  store float %sub168, float* %distance, align 4, !dbg !4303
  %110 = load float, float* %mean, align 4, !dbg !4303
  %conv169 = fpext float %110 to double, !dbg !4303
  %add170 = fadd double 1.310720e+05, %conv169, !dbg !4303
  %mul171 = fmul double 0x3EF0001000100010, %add170, !dbg !4303
  %111 = load float, float* %distance, align 4, !dbg !4303
  %conv172 = fpext float %111 to double, !dbg !4303
  %mul173 = fmul double %mul171, %conv172, !dbg !4303
  %112 = load float, float* %distance, align 4, !dbg !4303
  %conv174 = fpext float %112 to double, !dbg !4303
  %mul175 = fmul double %mul173, %conv174, !dbg !4303
  %conv176 = fptrunc double %mul175 to float, !dbg !4303
  store float %conv176, float* %distance_squared, align 4, !dbg !4303
  %113 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4303
  %green177 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %113, i32 0, i32 1, !dbg !4303
  %114 = load i16, i16* %green177, align 2, !dbg !4303
  %conv178 = uitofp i16 %114 to float, !dbg !4303
  %green179 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4303
  %115 = load i16, i16* %green179, align 2, !dbg !4303
  %conv180 = zext i16 %115 to i32, !dbg !4303
  %conv181 = sitofp i32 %conv180 to float, !dbg !4303
  %add182 = fadd float %conv178, %conv181, !dbg !4303
  %div183 = fdiv float %add182, 2.000000e+00, !dbg !4303
  store float %div183, float* %mean, align 4, !dbg !4303
  %116 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4303
  %green184 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %116, i32 0, i32 1, !dbg !4303
  %117 = load i16, i16* %green184, align 2, !dbg !4303
  %conv185 = uitofp i16 %117 to float, !dbg !4303
  %green186 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4303
  %118 = load i16, i16* %green186, align 2, !dbg !4303
  %conv187 = uitofp i16 %118 to float, !dbg !4303
  %sub188 = fsub float %conv185, %conv187, !dbg !4303
  store float %sub188, float* %distance, align 4, !dbg !4303
  %119 = load float, float* %distance, align 4, !dbg !4303
  %conv189 = fpext float %119 to double, !dbg !4303
  %mul190 = fmul double 4.000000e+00, %conv189, !dbg !4303
  %120 = load float, float* %distance, align 4, !dbg !4303
  %conv191 = fpext float %120 to double, !dbg !4303
  %mul192 = fmul double %mul190, %conv191, !dbg !4303
  %121 = load float, float* %distance_squared, align 4, !dbg !4303
  %conv193 = fpext float %121 to double, !dbg !4303
  %add194 = fadd double %conv193, %mul192, !dbg !4303
  %conv195 = fptrunc double %add194 to float, !dbg !4303
  store float %conv195, float* %distance_squared, align 4, !dbg !4303
  %122 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4303
  %blue196 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %122, i32 0, i32 0, !dbg !4303
  %123 = load i16, i16* %blue196, align 2, !dbg !4303
  %conv197 = uitofp i16 %123 to float, !dbg !4303
  %blue198 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4303
  %124 = load i16, i16* %blue198, align 2, !dbg !4303
  %conv199 = zext i16 %124 to i32, !dbg !4303
  %conv200 = sitofp i32 %conv199 to float, !dbg !4303
  %add201 = fadd float %conv197, %conv200, !dbg !4303
  %div202 = fdiv float %add201, 2.000000e+00, !dbg !4303
  store float %div202, float* %mean, align 4, !dbg !4303
  %125 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4303
  %blue203 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %125, i32 0, i32 0, !dbg !4303
  %126 = load i16, i16* %blue203, align 2, !dbg !4303
  %conv204 = uitofp i16 %126 to float, !dbg !4303
  %blue205 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4303
  %127 = load i16, i16* %blue205, align 2, !dbg !4303
  %conv206 = uitofp i16 %127 to float, !dbg !4303
  %sub207 = fsub float %conv204, %conv206, !dbg !4303
  store float %sub207, float* %distance, align 4, !dbg !4303
  %128 = load float, float* %mean, align 4, !dbg !4303
  %conv208 = fpext float %128 to double, !dbg !4303
  %sub209 = fsub double 1.966070e+05, %conv208, !dbg !4303
  %mul210 = fmul double 0x3EF0001000100010, %sub209, !dbg !4303
  %129 = load float, float* %distance, align 4, !dbg !4303
  %conv211 = fpext float %129 to double, !dbg !4303
  %mul212 = fmul double %mul210, %conv211, !dbg !4303
  %130 = load float, float* %distance, align 4, !dbg !4303
  %conv213 = fpext float %130 to double, !dbg !4303
  %mul214 = fmul double %mul212, %conv213, !dbg !4303
  %131 = load float, float* %distance_squared, align 4, !dbg !4303
  %conv215 = fpext float %131 to double, !dbg !4303
  %add216 = fadd double %conv215, %mul214, !dbg !4303
  %conv217 = fptrunc double %add216 to float, !dbg !4303
  store float %conv217, float* %distance_squared, align 4, !dbg !4303
  %132 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4303
  %opacity218 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %132, i32 0, i32 3, !dbg !4303
  %133 = load i16, i16* %opacity218, align 2, !dbg !4303
  %conv219 = uitofp i16 %133 to float, !dbg !4303
  %opacity220 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4303
  %134 = load i16, i16* %opacity220, align 2, !dbg !4303
  %conv221 = zext i16 %134 to i32, !dbg !4303
  %conv222 = sitofp i32 %conv221 to float, !dbg !4303
  %add223 = fadd float %conv219, %conv222, !dbg !4303
  %div224 = fdiv float %add223, 2.000000e+00, !dbg !4303
  store float %div224, float* %mean, align 4, !dbg !4303
  %135 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4303
  %opacity225 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %135, i32 0, i32 3, !dbg !4303
  %136 = load i16, i16* %opacity225, align 2, !dbg !4303
  %conv226 = uitofp i16 %136 to float, !dbg !4303
  %opacity227 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4303
  %137 = load i16, i16* %opacity227, align 2, !dbg !4303
  %conv228 = uitofp i16 %137 to float, !dbg !4303
  %sub229 = fsub float %conv226, %conv228, !dbg !4303
  store float %sub229, float* %distance, align 4, !dbg !4303
  %138 = load float, float* %mean, align 4, !dbg !4303
  %conv230 = fpext float %138 to double, !dbg !4303
  %sub231 = fsub double 1.966070e+05, %conv230, !dbg !4303
  %mul232 = fmul double 0x3EF0001000100010, %sub231, !dbg !4303
  %139 = load float, float* %distance, align 4, !dbg !4303
  %conv233 = fpext float %139 to double, !dbg !4303
  %mul234 = fmul double %mul232, %conv233, !dbg !4303
  %140 = load float, float* %distance, align 4, !dbg !4303
  %conv235 = fpext float %140 to double, !dbg !4303
  %mul236 = fmul double %mul234, %conv235, !dbg !4303
  %141 = load float, float* %distance_squared, align 4, !dbg !4303
  %conv237 = fpext float %141 to double, !dbg !4303
  %add238 = fadd double %conv237, %mul236, !dbg !4303
  %conv239 = fptrunc double %add238 to float, !dbg !4303
  store float %conv239, float* %distance_squared, align 4, !dbg !4303
  %142 = load float, float* %distance_squared, align 4, !dbg !4304
  %cmp240 = fcmp olt float %142, 0x41A47AB860000000, !dbg !4304
  br i1 %cmp240, label %if.then242, label %if.end278, !dbg !4303

if.then242:                                       ; preds = %if.end156
  %143 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4306
  %red243 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %143, i32 0, i32 2, !dbg !4306
  %144 = load i16, i16* %red243, align 2, !dbg !4306
  %conv244 = zext i16 %144 to i32, !dbg !4306
  %conv245 = sitofp i32 %conv244 to double, !dbg !4306
  %mul246 = fmul double 8.000000e+00, %conv245, !dbg !4306
  %red247 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4306
  %145 = load float, float* %red247, align 8, !dbg !4306
  %conv248 = fpext float %145 to double, !dbg !4306
  %add249 = fadd double %conv248, %mul246, !dbg !4306
  %conv250 = fptrunc double %add249 to float, !dbg !4306
  store float %conv250, float* %red247, align 8, !dbg !4306
  %146 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4306
  %green251 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %146, i32 0, i32 1, !dbg !4306
  %147 = load i16, i16* %green251, align 2, !dbg !4306
  %conv252 = zext i16 %147 to i32, !dbg !4306
  %conv253 = sitofp i32 %conv252 to double, !dbg !4306
  %mul254 = fmul double 8.000000e+00, %conv253, !dbg !4306
  %green255 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4306
  %148 = load float, float* %green255, align 4, !dbg !4306
  %conv256 = fpext float %148 to double, !dbg !4306
  %add257 = fadd double %conv256, %mul254, !dbg !4306
  %conv258 = fptrunc double %add257 to float, !dbg !4306
  store float %conv258, float* %green255, align 4, !dbg !4306
  %149 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4306
  %blue259 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %149, i32 0, i32 0, !dbg !4306
  %150 = load i16, i16* %blue259, align 2, !dbg !4306
  %conv260 = zext i16 %150 to i32, !dbg !4306
  %conv261 = sitofp i32 %conv260 to double, !dbg !4306
  %mul262 = fmul double 8.000000e+00, %conv261, !dbg !4306
  %blue263 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4306
  %151 = load float, float* %blue263, align 8, !dbg !4306
  %conv264 = fpext float %151 to double, !dbg !4306
  %add265 = fadd double %conv264, %mul262, !dbg !4306
  %conv266 = fptrunc double %add265 to float, !dbg !4306
  store float %conv266, float* %blue263, align 8, !dbg !4306
  %152 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4306
  %opacity267 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %152, i32 0, i32 3, !dbg !4306
  %153 = load i16, i16* %opacity267, align 2, !dbg !4306
  %conv268 = zext i16 %153 to i32, !dbg !4306
  %conv269 = sitofp i32 %conv268 to double, !dbg !4306
  %mul270 = fmul double 8.000000e+00, %conv269, !dbg !4306
  %opacity271 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4306
  %154 = load float, float* %opacity271, align 4, !dbg !4306
  %conv272 = fpext float %154 to double, !dbg !4306
  %add273 = fadd double %conv272, %mul270, !dbg !4306
  %conv274 = fptrunc double %add273 to float, !dbg !4306
  store float %conv274, float* %opacity271, align 4, !dbg !4306
  %155 = load float, float* %total_weight, align 4, !dbg !4306
  %conv275 = fpext float %155 to double, !dbg !4306
  %add276 = fadd double %conv275, 8.000000e+00, !dbg !4306
  %conv277 = fptrunc double %add276 to float, !dbg !4306
  store float %conv277, float* %total_weight, align 4, !dbg !4306
  br label %if.end278, !dbg !4306

if.end278:                                        ; preds = %if.then242, %if.end156
  %156 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4303
  %incdec.ptr279 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %156, i32 1, !dbg !4303
  store %struct._PixelPacket* %incdec.ptr279, %struct._PixelPacket** %r, align 8, !dbg !4303
  %157 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4308
  %red280 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %157, i32 0, i32 2, !dbg !4308
  %158 = load i16, i16* %red280, align 2, !dbg !4308
  %conv281 = uitofp i16 %158 to float, !dbg !4308
  %red282 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4308
  %159 = load i16, i16* %red282, align 2, !dbg !4308
  %conv283 = zext i16 %159 to i32, !dbg !4308
  %conv284 = sitofp i32 %conv283 to float, !dbg !4308
  %add285 = fadd float %conv281, %conv284, !dbg !4308
  %div286 = fdiv float %add285, 2.000000e+00, !dbg !4308
  store float %div286, float* %mean, align 4, !dbg !4308
  %160 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4308
  %red287 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %160, i32 0, i32 2, !dbg !4308
  %161 = load i16, i16* %red287, align 2, !dbg !4308
  %conv288 = uitofp i16 %161 to float, !dbg !4308
  %red289 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4308
  %162 = load i16, i16* %red289, align 2, !dbg !4308
  %conv290 = uitofp i16 %162 to float, !dbg !4308
  %sub291 = fsub float %conv288, %conv290, !dbg !4308
  store float %sub291, float* %distance, align 4, !dbg !4308
  %163 = load float, float* %mean, align 4, !dbg !4308
  %conv292 = fpext float %163 to double, !dbg !4308
  %add293 = fadd double 1.310720e+05, %conv292, !dbg !4308
  %mul294 = fmul double 0x3EF0001000100010, %add293, !dbg !4308
  %164 = load float, float* %distance, align 4, !dbg !4308
  %conv295 = fpext float %164 to double, !dbg !4308
  %mul296 = fmul double %mul294, %conv295, !dbg !4308
  %165 = load float, float* %distance, align 4, !dbg !4308
  %conv297 = fpext float %165 to double, !dbg !4308
  %mul298 = fmul double %mul296, %conv297, !dbg !4308
  %conv299 = fptrunc double %mul298 to float, !dbg !4308
  store float %conv299, float* %distance_squared, align 4, !dbg !4308
  %166 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4308
  %green300 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %166, i32 0, i32 1, !dbg !4308
  %167 = load i16, i16* %green300, align 2, !dbg !4308
  %conv301 = uitofp i16 %167 to float, !dbg !4308
  %green302 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4308
  %168 = load i16, i16* %green302, align 2, !dbg !4308
  %conv303 = zext i16 %168 to i32, !dbg !4308
  %conv304 = sitofp i32 %conv303 to float, !dbg !4308
  %add305 = fadd float %conv301, %conv304, !dbg !4308
  %div306 = fdiv float %add305, 2.000000e+00, !dbg !4308
  store float %div306, float* %mean, align 4, !dbg !4308
  %169 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4308
  %green307 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %169, i32 0, i32 1, !dbg !4308
  %170 = load i16, i16* %green307, align 2, !dbg !4308
  %conv308 = uitofp i16 %170 to float, !dbg !4308
  %green309 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4308
  %171 = load i16, i16* %green309, align 2, !dbg !4308
  %conv310 = uitofp i16 %171 to float, !dbg !4308
  %sub311 = fsub float %conv308, %conv310, !dbg !4308
  store float %sub311, float* %distance, align 4, !dbg !4308
  %172 = load float, float* %distance, align 4, !dbg !4308
  %conv312 = fpext float %172 to double, !dbg !4308
  %mul313 = fmul double 4.000000e+00, %conv312, !dbg !4308
  %173 = load float, float* %distance, align 4, !dbg !4308
  %conv314 = fpext float %173 to double, !dbg !4308
  %mul315 = fmul double %mul313, %conv314, !dbg !4308
  %174 = load float, float* %distance_squared, align 4, !dbg !4308
  %conv316 = fpext float %174 to double, !dbg !4308
  %add317 = fadd double %conv316, %mul315, !dbg !4308
  %conv318 = fptrunc double %add317 to float, !dbg !4308
  store float %conv318, float* %distance_squared, align 4, !dbg !4308
  %175 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4308
  %blue319 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %175, i32 0, i32 0, !dbg !4308
  %176 = load i16, i16* %blue319, align 2, !dbg !4308
  %conv320 = uitofp i16 %176 to float, !dbg !4308
  %blue321 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4308
  %177 = load i16, i16* %blue321, align 2, !dbg !4308
  %conv322 = zext i16 %177 to i32, !dbg !4308
  %conv323 = sitofp i32 %conv322 to float, !dbg !4308
  %add324 = fadd float %conv320, %conv323, !dbg !4308
  %div325 = fdiv float %add324, 2.000000e+00, !dbg !4308
  store float %div325, float* %mean, align 4, !dbg !4308
  %178 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4308
  %blue326 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %178, i32 0, i32 0, !dbg !4308
  %179 = load i16, i16* %blue326, align 2, !dbg !4308
  %conv327 = uitofp i16 %179 to float, !dbg !4308
  %blue328 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4308
  %180 = load i16, i16* %blue328, align 2, !dbg !4308
  %conv329 = uitofp i16 %180 to float, !dbg !4308
  %sub330 = fsub float %conv327, %conv329, !dbg !4308
  store float %sub330, float* %distance, align 4, !dbg !4308
  %181 = load float, float* %mean, align 4, !dbg !4308
  %conv331 = fpext float %181 to double, !dbg !4308
  %sub332 = fsub double 1.966070e+05, %conv331, !dbg !4308
  %mul333 = fmul double 0x3EF0001000100010, %sub332, !dbg !4308
  %182 = load float, float* %distance, align 4, !dbg !4308
  %conv334 = fpext float %182 to double, !dbg !4308
  %mul335 = fmul double %mul333, %conv334, !dbg !4308
  %183 = load float, float* %distance, align 4, !dbg !4308
  %conv336 = fpext float %183 to double, !dbg !4308
  %mul337 = fmul double %mul335, %conv336, !dbg !4308
  %184 = load float, float* %distance_squared, align 4, !dbg !4308
  %conv338 = fpext float %184 to double, !dbg !4308
  %add339 = fadd double %conv338, %mul337, !dbg !4308
  %conv340 = fptrunc double %add339 to float, !dbg !4308
  store float %conv340, float* %distance_squared, align 4, !dbg !4308
  %185 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4308
  %opacity341 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %185, i32 0, i32 3, !dbg !4308
  %186 = load i16, i16* %opacity341, align 2, !dbg !4308
  %conv342 = uitofp i16 %186 to float, !dbg !4308
  %opacity343 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4308
  %187 = load i16, i16* %opacity343, align 2, !dbg !4308
  %conv344 = zext i16 %187 to i32, !dbg !4308
  %conv345 = sitofp i32 %conv344 to float, !dbg !4308
  %add346 = fadd float %conv342, %conv345, !dbg !4308
  %div347 = fdiv float %add346, 2.000000e+00, !dbg !4308
  store float %div347, float* %mean, align 4, !dbg !4308
  %188 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4308
  %opacity348 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %188, i32 0, i32 3, !dbg !4308
  %189 = load i16, i16* %opacity348, align 2, !dbg !4308
  %conv349 = uitofp i16 %189 to float, !dbg !4308
  %opacity350 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4308
  %190 = load i16, i16* %opacity350, align 2, !dbg !4308
  %conv351 = uitofp i16 %190 to float, !dbg !4308
  %sub352 = fsub float %conv349, %conv351, !dbg !4308
  store float %sub352, float* %distance, align 4, !dbg !4308
  %191 = load float, float* %mean, align 4, !dbg !4308
  %conv353 = fpext float %191 to double, !dbg !4308
  %sub354 = fsub double 1.966070e+05, %conv353, !dbg !4308
  %mul355 = fmul double 0x3EF0001000100010, %sub354, !dbg !4308
  %192 = load float, float* %distance, align 4, !dbg !4308
  %conv356 = fpext float %192 to double, !dbg !4308
  %mul357 = fmul double %mul355, %conv356, !dbg !4308
  %193 = load float, float* %distance, align 4, !dbg !4308
  %conv358 = fpext float %193 to double, !dbg !4308
  %mul359 = fmul double %mul357, %conv358, !dbg !4308
  %194 = load float, float* %distance_squared, align 4, !dbg !4308
  %conv360 = fpext float %194 to double, !dbg !4308
  %add361 = fadd double %conv360, %mul359, !dbg !4308
  %conv362 = fptrunc double %add361 to float, !dbg !4308
  store float %conv362, float* %distance_squared, align 4, !dbg !4308
  %195 = load float, float* %distance_squared, align 4, !dbg !4309
  %cmp363 = fcmp olt float %195, 0x41A47AB860000000, !dbg !4309
  br i1 %cmp363, label %if.then365, label %if.end401, !dbg !4308

if.then365:                                       ; preds = %if.end278
  %196 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4311
  %red366 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %196, i32 0, i32 2, !dbg !4311
  %197 = load i16, i16* %red366, align 2, !dbg !4311
  %conv367 = zext i16 %197 to i32, !dbg !4311
  %conv368 = sitofp i32 %conv367 to double, !dbg !4311
  %mul369 = fmul double 1.000000e+01, %conv368, !dbg !4311
  %red370 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4311
  %198 = load float, float* %red370, align 8, !dbg !4311
  %conv371 = fpext float %198 to double, !dbg !4311
  %add372 = fadd double %conv371, %mul369, !dbg !4311
  %conv373 = fptrunc double %add372 to float, !dbg !4311
  store float %conv373, float* %red370, align 8, !dbg !4311
  %199 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4311
  %green374 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %199, i32 0, i32 1, !dbg !4311
  %200 = load i16, i16* %green374, align 2, !dbg !4311
  %conv375 = zext i16 %200 to i32, !dbg !4311
  %conv376 = sitofp i32 %conv375 to double, !dbg !4311
  %mul377 = fmul double 1.000000e+01, %conv376, !dbg !4311
  %green378 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4311
  %201 = load float, float* %green378, align 4, !dbg !4311
  %conv379 = fpext float %201 to double, !dbg !4311
  %add380 = fadd double %conv379, %mul377, !dbg !4311
  %conv381 = fptrunc double %add380 to float, !dbg !4311
  store float %conv381, float* %green378, align 4, !dbg !4311
  %202 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4311
  %blue382 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %202, i32 0, i32 0, !dbg !4311
  %203 = load i16, i16* %blue382, align 2, !dbg !4311
  %conv383 = zext i16 %203 to i32, !dbg !4311
  %conv384 = sitofp i32 %conv383 to double, !dbg !4311
  %mul385 = fmul double 1.000000e+01, %conv384, !dbg !4311
  %blue386 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4311
  %204 = load float, float* %blue386, align 8, !dbg !4311
  %conv387 = fpext float %204 to double, !dbg !4311
  %add388 = fadd double %conv387, %mul385, !dbg !4311
  %conv389 = fptrunc double %add388 to float, !dbg !4311
  store float %conv389, float* %blue386, align 8, !dbg !4311
  %205 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4311
  %opacity390 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %205, i32 0, i32 3, !dbg !4311
  %206 = load i16, i16* %opacity390, align 2, !dbg !4311
  %conv391 = zext i16 %206 to i32, !dbg !4311
  %conv392 = sitofp i32 %conv391 to double, !dbg !4311
  %mul393 = fmul double 1.000000e+01, %conv392, !dbg !4311
  %opacity394 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4311
  %207 = load float, float* %opacity394, align 4, !dbg !4311
  %conv395 = fpext float %207 to double, !dbg !4311
  %add396 = fadd double %conv395, %mul393, !dbg !4311
  %conv397 = fptrunc double %add396 to float, !dbg !4311
  store float %conv397, float* %opacity394, align 4, !dbg !4311
  %208 = load float, float* %total_weight, align 4, !dbg !4311
  %conv398 = fpext float %208 to double, !dbg !4311
  %add399 = fadd double %conv398, 1.000000e+01, !dbg !4311
  %conv400 = fptrunc double %add399 to float, !dbg !4311
  store float %conv400, float* %total_weight, align 4, !dbg !4311
  br label %if.end401, !dbg !4311

if.end401:                                        ; preds = %if.then365, %if.end278
  %209 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4308
  %incdec.ptr402 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %209, i32 1, !dbg !4308
  store %struct._PixelPacket* %incdec.ptr402, %struct._PixelPacket** %r, align 8, !dbg !4308
  %210 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4313
  %red403 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %210, i32 0, i32 2, !dbg !4313
  %211 = load i16, i16* %red403, align 2, !dbg !4313
  %conv404 = uitofp i16 %211 to float, !dbg !4313
  %red405 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4313
  %212 = load i16, i16* %red405, align 2, !dbg !4313
  %conv406 = zext i16 %212 to i32, !dbg !4313
  %conv407 = sitofp i32 %conv406 to float, !dbg !4313
  %add408 = fadd float %conv404, %conv407, !dbg !4313
  %div409 = fdiv float %add408, 2.000000e+00, !dbg !4313
  store float %div409, float* %mean, align 4, !dbg !4313
  %213 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4313
  %red410 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %213, i32 0, i32 2, !dbg !4313
  %214 = load i16, i16* %red410, align 2, !dbg !4313
  %conv411 = uitofp i16 %214 to float, !dbg !4313
  %red412 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4313
  %215 = load i16, i16* %red412, align 2, !dbg !4313
  %conv413 = uitofp i16 %215 to float, !dbg !4313
  %sub414 = fsub float %conv411, %conv413, !dbg !4313
  store float %sub414, float* %distance, align 4, !dbg !4313
  %216 = load float, float* %mean, align 4, !dbg !4313
  %conv415 = fpext float %216 to double, !dbg !4313
  %add416 = fadd double 1.310720e+05, %conv415, !dbg !4313
  %mul417 = fmul double 0x3EF0001000100010, %add416, !dbg !4313
  %217 = load float, float* %distance, align 4, !dbg !4313
  %conv418 = fpext float %217 to double, !dbg !4313
  %mul419 = fmul double %mul417, %conv418, !dbg !4313
  %218 = load float, float* %distance, align 4, !dbg !4313
  %conv420 = fpext float %218 to double, !dbg !4313
  %mul421 = fmul double %mul419, %conv420, !dbg !4313
  %conv422 = fptrunc double %mul421 to float, !dbg !4313
  store float %conv422, float* %distance_squared, align 4, !dbg !4313
  %219 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4313
  %green423 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %219, i32 0, i32 1, !dbg !4313
  %220 = load i16, i16* %green423, align 2, !dbg !4313
  %conv424 = uitofp i16 %220 to float, !dbg !4313
  %green425 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4313
  %221 = load i16, i16* %green425, align 2, !dbg !4313
  %conv426 = zext i16 %221 to i32, !dbg !4313
  %conv427 = sitofp i32 %conv426 to float, !dbg !4313
  %add428 = fadd float %conv424, %conv427, !dbg !4313
  %div429 = fdiv float %add428, 2.000000e+00, !dbg !4313
  store float %div429, float* %mean, align 4, !dbg !4313
  %222 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4313
  %green430 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %222, i32 0, i32 1, !dbg !4313
  %223 = load i16, i16* %green430, align 2, !dbg !4313
  %conv431 = uitofp i16 %223 to float, !dbg !4313
  %green432 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4313
  %224 = load i16, i16* %green432, align 2, !dbg !4313
  %conv433 = uitofp i16 %224 to float, !dbg !4313
  %sub434 = fsub float %conv431, %conv433, !dbg !4313
  store float %sub434, float* %distance, align 4, !dbg !4313
  %225 = load float, float* %distance, align 4, !dbg !4313
  %conv435 = fpext float %225 to double, !dbg !4313
  %mul436 = fmul double 4.000000e+00, %conv435, !dbg !4313
  %226 = load float, float* %distance, align 4, !dbg !4313
  %conv437 = fpext float %226 to double, !dbg !4313
  %mul438 = fmul double %mul436, %conv437, !dbg !4313
  %227 = load float, float* %distance_squared, align 4, !dbg !4313
  %conv439 = fpext float %227 to double, !dbg !4313
  %add440 = fadd double %conv439, %mul438, !dbg !4313
  %conv441 = fptrunc double %add440 to float, !dbg !4313
  store float %conv441, float* %distance_squared, align 4, !dbg !4313
  %228 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4313
  %blue442 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %228, i32 0, i32 0, !dbg !4313
  %229 = load i16, i16* %blue442, align 2, !dbg !4313
  %conv443 = uitofp i16 %229 to float, !dbg !4313
  %blue444 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4313
  %230 = load i16, i16* %blue444, align 2, !dbg !4313
  %conv445 = zext i16 %230 to i32, !dbg !4313
  %conv446 = sitofp i32 %conv445 to float, !dbg !4313
  %add447 = fadd float %conv443, %conv446, !dbg !4313
  %div448 = fdiv float %add447, 2.000000e+00, !dbg !4313
  store float %div448, float* %mean, align 4, !dbg !4313
  %231 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4313
  %blue449 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %231, i32 0, i32 0, !dbg !4313
  %232 = load i16, i16* %blue449, align 2, !dbg !4313
  %conv450 = uitofp i16 %232 to float, !dbg !4313
  %blue451 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4313
  %233 = load i16, i16* %blue451, align 2, !dbg !4313
  %conv452 = uitofp i16 %233 to float, !dbg !4313
  %sub453 = fsub float %conv450, %conv452, !dbg !4313
  store float %sub453, float* %distance, align 4, !dbg !4313
  %234 = load float, float* %mean, align 4, !dbg !4313
  %conv454 = fpext float %234 to double, !dbg !4313
  %sub455 = fsub double 1.966070e+05, %conv454, !dbg !4313
  %mul456 = fmul double 0x3EF0001000100010, %sub455, !dbg !4313
  %235 = load float, float* %distance, align 4, !dbg !4313
  %conv457 = fpext float %235 to double, !dbg !4313
  %mul458 = fmul double %mul456, %conv457, !dbg !4313
  %236 = load float, float* %distance, align 4, !dbg !4313
  %conv459 = fpext float %236 to double, !dbg !4313
  %mul460 = fmul double %mul458, %conv459, !dbg !4313
  %237 = load float, float* %distance_squared, align 4, !dbg !4313
  %conv461 = fpext float %237 to double, !dbg !4313
  %add462 = fadd double %conv461, %mul460, !dbg !4313
  %conv463 = fptrunc double %add462 to float, !dbg !4313
  store float %conv463, float* %distance_squared, align 4, !dbg !4313
  %238 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4313
  %opacity464 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %238, i32 0, i32 3, !dbg !4313
  %239 = load i16, i16* %opacity464, align 2, !dbg !4313
  %conv465 = uitofp i16 %239 to float, !dbg !4313
  %opacity466 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4313
  %240 = load i16, i16* %opacity466, align 2, !dbg !4313
  %conv467 = zext i16 %240 to i32, !dbg !4313
  %conv468 = sitofp i32 %conv467 to float, !dbg !4313
  %add469 = fadd float %conv465, %conv468, !dbg !4313
  %div470 = fdiv float %add469, 2.000000e+00, !dbg !4313
  store float %div470, float* %mean, align 4, !dbg !4313
  %241 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4313
  %opacity471 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %241, i32 0, i32 3, !dbg !4313
  %242 = load i16, i16* %opacity471, align 2, !dbg !4313
  %conv472 = uitofp i16 %242 to float, !dbg !4313
  %opacity473 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4313
  %243 = load i16, i16* %opacity473, align 2, !dbg !4313
  %conv474 = uitofp i16 %243 to float, !dbg !4313
  %sub475 = fsub float %conv472, %conv474, !dbg !4313
  store float %sub475, float* %distance, align 4, !dbg !4313
  %244 = load float, float* %mean, align 4, !dbg !4313
  %conv476 = fpext float %244 to double, !dbg !4313
  %sub477 = fsub double 1.966070e+05, %conv476, !dbg !4313
  %mul478 = fmul double 0x3EF0001000100010, %sub477, !dbg !4313
  %245 = load float, float* %distance, align 4, !dbg !4313
  %conv479 = fpext float %245 to double, !dbg !4313
  %mul480 = fmul double %mul478, %conv479, !dbg !4313
  %246 = load float, float* %distance, align 4, !dbg !4313
  %conv481 = fpext float %246 to double, !dbg !4313
  %mul482 = fmul double %mul480, %conv481, !dbg !4313
  %247 = load float, float* %distance_squared, align 4, !dbg !4313
  %conv483 = fpext float %247 to double, !dbg !4313
  %add484 = fadd double %conv483, %mul482, !dbg !4313
  %conv485 = fptrunc double %add484 to float, !dbg !4313
  store float %conv485, float* %distance_squared, align 4, !dbg !4313
  %248 = load float, float* %distance_squared, align 4, !dbg !4314
  %cmp486 = fcmp olt float %248, 0x41A47AB860000000, !dbg !4314
  br i1 %cmp486, label %if.then488, label %if.end524, !dbg !4313

if.then488:                                       ; preds = %if.end401
  %249 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4316
  %red489 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %249, i32 0, i32 2, !dbg !4316
  %250 = load i16, i16* %red489, align 2, !dbg !4316
  %conv490 = zext i16 %250 to i32, !dbg !4316
  %conv491 = sitofp i32 %conv490 to double, !dbg !4316
  %mul492 = fmul double 8.000000e+00, %conv491, !dbg !4316
  %red493 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4316
  %251 = load float, float* %red493, align 8, !dbg !4316
  %conv494 = fpext float %251 to double, !dbg !4316
  %add495 = fadd double %conv494, %mul492, !dbg !4316
  %conv496 = fptrunc double %add495 to float, !dbg !4316
  store float %conv496, float* %red493, align 8, !dbg !4316
  %252 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4316
  %green497 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %252, i32 0, i32 1, !dbg !4316
  %253 = load i16, i16* %green497, align 2, !dbg !4316
  %conv498 = zext i16 %253 to i32, !dbg !4316
  %conv499 = sitofp i32 %conv498 to double, !dbg !4316
  %mul500 = fmul double 8.000000e+00, %conv499, !dbg !4316
  %green501 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4316
  %254 = load float, float* %green501, align 4, !dbg !4316
  %conv502 = fpext float %254 to double, !dbg !4316
  %add503 = fadd double %conv502, %mul500, !dbg !4316
  %conv504 = fptrunc double %add503 to float, !dbg !4316
  store float %conv504, float* %green501, align 4, !dbg !4316
  %255 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4316
  %blue505 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %255, i32 0, i32 0, !dbg !4316
  %256 = load i16, i16* %blue505, align 2, !dbg !4316
  %conv506 = zext i16 %256 to i32, !dbg !4316
  %conv507 = sitofp i32 %conv506 to double, !dbg !4316
  %mul508 = fmul double 8.000000e+00, %conv507, !dbg !4316
  %blue509 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4316
  %257 = load float, float* %blue509, align 8, !dbg !4316
  %conv510 = fpext float %257 to double, !dbg !4316
  %add511 = fadd double %conv510, %mul508, !dbg !4316
  %conv512 = fptrunc double %add511 to float, !dbg !4316
  store float %conv512, float* %blue509, align 8, !dbg !4316
  %258 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4316
  %opacity513 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %258, i32 0, i32 3, !dbg !4316
  %259 = load i16, i16* %opacity513, align 2, !dbg !4316
  %conv514 = zext i16 %259 to i32, !dbg !4316
  %conv515 = sitofp i32 %conv514 to double, !dbg !4316
  %mul516 = fmul double 8.000000e+00, %conv515, !dbg !4316
  %opacity517 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4316
  %260 = load float, float* %opacity517, align 4, !dbg !4316
  %conv518 = fpext float %260 to double, !dbg !4316
  %add519 = fadd double %conv518, %mul516, !dbg !4316
  %conv520 = fptrunc double %add519 to float, !dbg !4316
  store float %conv520, float* %opacity517, align 4, !dbg !4316
  %261 = load float, float* %total_weight, align 4, !dbg !4316
  %conv521 = fpext float %261 to double, !dbg !4316
  %add522 = fadd double %conv521, 8.000000e+00, !dbg !4316
  %conv523 = fptrunc double %add522 to float, !dbg !4316
  store float %conv523, float* %total_weight, align 4, !dbg !4316
  br label %if.end524, !dbg !4316

if.end524:                                        ; preds = %if.then488, %if.end401
  %262 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4313
  %incdec.ptr525 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %262, i32 1, !dbg !4313
  store %struct._PixelPacket* %incdec.ptr525, %struct._PixelPacket** %r, align 8, !dbg !4313
  %263 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4318
  %red526 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %263, i32 0, i32 2, !dbg !4318
  %264 = load i16, i16* %red526, align 2, !dbg !4318
  %conv527 = uitofp i16 %264 to float, !dbg !4318
  %red528 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4318
  %265 = load i16, i16* %red528, align 2, !dbg !4318
  %conv529 = zext i16 %265 to i32, !dbg !4318
  %conv530 = sitofp i32 %conv529 to float, !dbg !4318
  %add531 = fadd float %conv527, %conv530, !dbg !4318
  %div532 = fdiv float %add531, 2.000000e+00, !dbg !4318
  store float %div532, float* %mean, align 4, !dbg !4318
  %266 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4318
  %red533 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %266, i32 0, i32 2, !dbg !4318
  %267 = load i16, i16* %red533, align 2, !dbg !4318
  %conv534 = uitofp i16 %267 to float, !dbg !4318
  %red535 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4318
  %268 = load i16, i16* %red535, align 2, !dbg !4318
  %conv536 = uitofp i16 %268 to float, !dbg !4318
  %sub537 = fsub float %conv534, %conv536, !dbg !4318
  store float %sub537, float* %distance, align 4, !dbg !4318
  %269 = load float, float* %mean, align 4, !dbg !4318
  %conv538 = fpext float %269 to double, !dbg !4318
  %add539 = fadd double 1.310720e+05, %conv538, !dbg !4318
  %mul540 = fmul double 0x3EF0001000100010, %add539, !dbg !4318
  %270 = load float, float* %distance, align 4, !dbg !4318
  %conv541 = fpext float %270 to double, !dbg !4318
  %mul542 = fmul double %mul540, %conv541, !dbg !4318
  %271 = load float, float* %distance, align 4, !dbg !4318
  %conv543 = fpext float %271 to double, !dbg !4318
  %mul544 = fmul double %mul542, %conv543, !dbg !4318
  %conv545 = fptrunc double %mul544 to float, !dbg !4318
  store float %conv545, float* %distance_squared, align 4, !dbg !4318
  %272 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4318
  %green546 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %272, i32 0, i32 1, !dbg !4318
  %273 = load i16, i16* %green546, align 2, !dbg !4318
  %conv547 = uitofp i16 %273 to float, !dbg !4318
  %green548 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4318
  %274 = load i16, i16* %green548, align 2, !dbg !4318
  %conv549 = zext i16 %274 to i32, !dbg !4318
  %conv550 = sitofp i32 %conv549 to float, !dbg !4318
  %add551 = fadd float %conv547, %conv550, !dbg !4318
  %div552 = fdiv float %add551, 2.000000e+00, !dbg !4318
  store float %div552, float* %mean, align 4, !dbg !4318
  %275 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4318
  %green553 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %275, i32 0, i32 1, !dbg !4318
  %276 = load i16, i16* %green553, align 2, !dbg !4318
  %conv554 = uitofp i16 %276 to float, !dbg !4318
  %green555 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4318
  %277 = load i16, i16* %green555, align 2, !dbg !4318
  %conv556 = uitofp i16 %277 to float, !dbg !4318
  %sub557 = fsub float %conv554, %conv556, !dbg !4318
  store float %sub557, float* %distance, align 4, !dbg !4318
  %278 = load float, float* %distance, align 4, !dbg !4318
  %conv558 = fpext float %278 to double, !dbg !4318
  %mul559 = fmul double 4.000000e+00, %conv558, !dbg !4318
  %279 = load float, float* %distance, align 4, !dbg !4318
  %conv560 = fpext float %279 to double, !dbg !4318
  %mul561 = fmul double %mul559, %conv560, !dbg !4318
  %280 = load float, float* %distance_squared, align 4, !dbg !4318
  %conv562 = fpext float %280 to double, !dbg !4318
  %add563 = fadd double %conv562, %mul561, !dbg !4318
  %conv564 = fptrunc double %add563 to float, !dbg !4318
  store float %conv564, float* %distance_squared, align 4, !dbg !4318
  %281 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4318
  %blue565 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %281, i32 0, i32 0, !dbg !4318
  %282 = load i16, i16* %blue565, align 2, !dbg !4318
  %conv566 = uitofp i16 %282 to float, !dbg !4318
  %blue567 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4318
  %283 = load i16, i16* %blue567, align 2, !dbg !4318
  %conv568 = zext i16 %283 to i32, !dbg !4318
  %conv569 = sitofp i32 %conv568 to float, !dbg !4318
  %add570 = fadd float %conv566, %conv569, !dbg !4318
  %div571 = fdiv float %add570, 2.000000e+00, !dbg !4318
  store float %div571, float* %mean, align 4, !dbg !4318
  %284 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4318
  %blue572 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %284, i32 0, i32 0, !dbg !4318
  %285 = load i16, i16* %blue572, align 2, !dbg !4318
  %conv573 = uitofp i16 %285 to float, !dbg !4318
  %blue574 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4318
  %286 = load i16, i16* %blue574, align 2, !dbg !4318
  %conv575 = uitofp i16 %286 to float, !dbg !4318
  %sub576 = fsub float %conv573, %conv575, !dbg !4318
  store float %sub576, float* %distance, align 4, !dbg !4318
  %287 = load float, float* %mean, align 4, !dbg !4318
  %conv577 = fpext float %287 to double, !dbg !4318
  %sub578 = fsub double 1.966070e+05, %conv577, !dbg !4318
  %mul579 = fmul double 0x3EF0001000100010, %sub578, !dbg !4318
  %288 = load float, float* %distance, align 4, !dbg !4318
  %conv580 = fpext float %288 to double, !dbg !4318
  %mul581 = fmul double %mul579, %conv580, !dbg !4318
  %289 = load float, float* %distance, align 4, !dbg !4318
  %conv582 = fpext float %289 to double, !dbg !4318
  %mul583 = fmul double %mul581, %conv582, !dbg !4318
  %290 = load float, float* %distance_squared, align 4, !dbg !4318
  %conv584 = fpext float %290 to double, !dbg !4318
  %add585 = fadd double %conv584, %mul583, !dbg !4318
  %conv586 = fptrunc double %add585 to float, !dbg !4318
  store float %conv586, float* %distance_squared, align 4, !dbg !4318
  %291 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4318
  %opacity587 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %291, i32 0, i32 3, !dbg !4318
  %292 = load i16, i16* %opacity587, align 2, !dbg !4318
  %conv588 = uitofp i16 %292 to float, !dbg !4318
  %opacity589 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4318
  %293 = load i16, i16* %opacity589, align 2, !dbg !4318
  %conv590 = zext i16 %293 to i32, !dbg !4318
  %conv591 = sitofp i32 %conv590 to float, !dbg !4318
  %add592 = fadd float %conv588, %conv591, !dbg !4318
  %div593 = fdiv float %add592, 2.000000e+00, !dbg !4318
  store float %div593, float* %mean, align 4, !dbg !4318
  %294 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4318
  %opacity594 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %294, i32 0, i32 3, !dbg !4318
  %295 = load i16, i16* %opacity594, align 2, !dbg !4318
  %conv595 = uitofp i16 %295 to float, !dbg !4318
  %opacity596 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4318
  %296 = load i16, i16* %opacity596, align 2, !dbg !4318
  %conv597 = uitofp i16 %296 to float, !dbg !4318
  %sub598 = fsub float %conv595, %conv597, !dbg !4318
  store float %sub598, float* %distance, align 4, !dbg !4318
  %297 = load float, float* %mean, align 4, !dbg !4318
  %conv599 = fpext float %297 to double, !dbg !4318
  %sub600 = fsub double 1.966070e+05, %conv599, !dbg !4318
  %mul601 = fmul double 0x3EF0001000100010, %sub600, !dbg !4318
  %298 = load float, float* %distance, align 4, !dbg !4318
  %conv602 = fpext float %298 to double, !dbg !4318
  %mul603 = fmul double %mul601, %conv602, !dbg !4318
  %299 = load float, float* %distance, align 4, !dbg !4318
  %conv604 = fpext float %299 to double, !dbg !4318
  %mul605 = fmul double %mul603, %conv604, !dbg !4318
  %300 = load float, float* %distance_squared, align 4, !dbg !4318
  %conv606 = fpext float %300 to double, !dbg !4318
  %add607 = fadd double %conv606, %mul605, !dbg !4318
  %conv608 = fptrunc double %add607 to float, !dbg !4318
  store float %conv608, float* %distance_squared, align 4, !dbg !4318
  %301 = load float, float* %distance_squared, align 4, !dbg !4319
  %cmp609 = fcmp olt float %301, 0x41A47AB860000000, !dbg !4319
  br i1 %cmp609, label %if.then611, label %if.end647, !dbg !4318

if.then611:                                       ; preds = %if.end524
  %302 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4321
  %red612 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %302, i32 0, i32 2, !dbg !4321
  %303 = load i16, i16* %red612, align 2, !dbg !4321
  %conv613 = zext i16 %303 to i32, !dbg !4321
  %conv614 = sitofp i32 %conv613 to double, !dbg !4321
  %mul615 = fmul double 5.000000e+00, %conv614, !dbg !4321
  %red616 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4321
  %304 = load float, float* %red616, align 8, !dbg !4321
  %conv617 = fpext float %304 to double, !dbg !4321
  %add618 = fadd double %conv617, %mul615, !dbg !4321
  %conv619 = fptrunc double %add618 to float, !dbg !4321
  store float %conv619, float* %red616, align 8, !dbg !4321
  %305 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4321
  %green620 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %305, i32 0, i32 1, !dbg !4321
  %306 = load i16, i16* %green620, align 2, !dbg !4321
  %conv621 = zext i16 %306 to i32, !dbg !4321
  %conv622 = sitofp i32 %conv621 to double, !dbg !4321
  %mul623 = fmul double 5.000000e+00, %conv622, !dbg !4321
  %green624 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4321
  %307 = load float, float* %green624, align 4, !dbg !4321
  %conv625 = fpext float %307 to double, !dbg !4321
  %add626 = fadd double %conv625, %mul623, !dbg !4321
  %conv627 = fptrunc double %add626 to float, !dbg !4321
  store float %conv627, float* %green624, align 4, !dbg !4321
  %308 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4321
  %blue628 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %308, i32 0, i32 0, !dbg !4321
  %309 = load i16, i16* %blue628, align 2, !dbg !4321
  %conv629 = zext i16 %309 to i32, !dbg !4321
  %conv630 = sitofp i32 %conv629 to double, !dbg !4321
  %mul631 = fmul double 5.000000e+00, %conv630, !dbg !4321
  %blue632 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4321
  %310 = load float, float* %blue632, align 8, !dbg !4321
  %conv633 = fpext float %310 to double, !dbg !4321
  %add634 = fadd double %conv633, %mul631, !dbg !4321
  %conv635 = fptrunc double %add634 to float, !dbg !4321
  store float %conv635, float* %blue632, align 8, !dbg !4321
  %311 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4321
  %opacity636 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %311, i32 0, i32 3, !dbg !4321
  %312 = load i16, i16* %opacity636, align 2, !dbg !4321
  %conv637 = zext i16 %312 to i32, !dbg !4321
  %conv638 = sitofp i32 %conv637 to double, !dbg !4321
  %mul639 = fmul double 5.000000e+00, %conv638, !dbg !4321
  %opacity640 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4321
  %313 = load float, float* %opacity640, align 4, !dbg !4321
  %conv641 = fpext float %313 to double, !dbg !4321
  %add642 = fadd double %conv641, %mul639, !dbg !4321
  %conv643 = fptrunc double %add642 to float, !dbg !4321
  store float %conv643, float* %opacity640, align 4, !dbg !4321
  %314 = load float, float* %total_weight, align 4, !dbg !4321
  %conv644 = fpext float %314 to double, !dbg !4321
  %add645 = fadd double %conv644, 5.000000e+00, !dbg !4321
  %conv646 = fptrunc double %add645 to float, !dbg !4321
  store float %conv646, float* %total_weight, align 4, !dbg !4321
  br label %if.end647, !dbg !4321

if.end647:                                        ; preds = %if.then611, %if.end524
  %315 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4318
  %incdec.ptr648 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %315, i32 1, !dbg !4318
  store %struct._PixelPacket* %incdec.ptr648, %struct._PixelPacket** %r, align 8, !dbg !4318
  %316 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4323
  %317 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4324
  %columns649 = getelementptr inbounds %struct._Image, %struct._Image* %317, i32 0, i32 7, !dbg !4325
  %318 = load i64, i64* %columns649, align 8, !dbg !4325
  %add650 = add i64 %318, 4, !dbg !4326
  %add.ptr651 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %316, i64 %add650, !dbg !4327
  store %struct._PixelPacket* %add.ptr651, %struct._PixelPacket** %r, align 8, !dbg !4328
  %319 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4329
  %red652 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %319, i32 0, i32 2, !dbg !4329
  %320 = load i16, i16* %red652, align 2, !dbg !4329
  %conv653 = uitofp i16 %320 to float, !dbg !4329
  %red654 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4329
  %321 = load i16, i16* %red654, align 2, !dbg !4329
  %conv655 = zext i16 %321 to i32, !dbg !4329
  %conv656 = sitofp i32 %conv655 to float, !dbg !4329
  %add657 = fadd float %conv653, %conv656, !dbg !4329
  %div658 = fdiv float %add657, 2.000000e+00, !dbg !4329
  store float %div658, float* %mean, align 4, !dbg !4329
  %322 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4329
  %red659 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %322, i32 0, i32 2, !dbg !4329
  %323 = load i16, i16* %red659, align 2, !dbg !4329
  %conv660 = uitofp i16 %323 to float, !dbg !4329
  %red661 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4329
  %324 = load i16, i16* %red661, align 2, !dbg !4329
  %conv662 = uitofp i16 %324 to float, !dbg !4329
  %sub663 = fsub float %conv660, %conv662, !dbg !4329
  store float %sub663, float* %distance, align 4, !dbg !4329
  %325 = load float, float* %mean, align 4, !dbg !4329
  %conv664 = fpext float %325 to double, !dbg !4329
  %add665 = fadd double 1.310720e+05, %conv664, !dbg !4329
  %mul666 = fmul double 0x3EF0001000100010, %add665, !dbg !4329
  %326 = load float, float* %distance, align 4, !dbg !4329
  %conv667 = fpext float %326 to double, !dbg !4329
  %mul668 = fmul double %mul666, %conv667, !dbg !4329
  %327 = load float, float* %distance, align 4, !dbg !4329
  %conv669 = fpext float %327 to double, !dbg !4329
  %mul670 = fmul double %mul668, %conv669, !dbg !4329
  %conv671 = fptrunc double %mul670 to float, !dbg !4329
  store float %conv671, float* %distance_squared, align 4, !dbg !4329
  %328 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4329
  %green672 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %328, i32 0, i32 1, !dbg !4329
  %329 = load i16, i16* %green672, align 2, !dbg !4329
  %conv673 = uitofp i16 %329 to float, !dbg !4329
  %green674 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4329
  %330 = load i16, i16* %green674, align 2, !dbg !4329
  %conv675 = zext i16 %330 to i32, !dbg !4329
  %conv676 = sitofp i32 %conv675 to float, !dbg !4329
  %add677 = fadd float %conv673, %conv676, !dbg !4329
  %div678 = fdiv float %add677, 2.000000e+00, !dbg !4329
  store float %div678, float* %mean, align 4, !dbg !4329
  %331 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4329
  %green679 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %331, i32 0, i32 1, !dbg !4329
  %332 = load i16, i16* %green679, align 2, !dbg !4329
  %conv680 = uitofp i16 %332 to float, !dbg !4329
  %green681 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4329
  %333 = load i16, i16* %green681, align 2, !dbg !4329
  %conv682 = uitofp i16 %333 to float, !dbg !4329
  %sub683 = fsub float %conv680, %conv682, !dbg !4329
  store float %sub683, float* %distance, align 4, !dbg !4329
  %334 = load float, float* %distance, align 4, !dbg !4329
  %conv684 = fpext float %334 to double, !dbg !4329
  %mul685 = fmul double 4.000000e+00, %conv684, !dbg !4329
  %335 = load float, float* %distance, align 4, !dbg !4329
  %conv686 = fpext float %335 to double, !dbg !4329
  %mul687 = fmul double %mul685, %conv686, !dbg !4329
  %336 = load float, float* %distance_squared, align 4, !dbg !4329
  %conv688 = fpext float %336 to double, !dbg !4329
  %add689 = fadd double %conv688, %mul687, !dbg !4329
  %conv690 = fptrunc double %add689 to float, !dbg !4329
  store float %conv690, float* %distance_squared, align 4, !dbg !4329
  %337 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4329
  %blue691 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %337, i32 0, i32 0, !dbg !4329
  %338 = load i16, i16* %blue691, align 2, !dbg !4329
  %conv692 = uitofp i16 %338 to float, !dbg !4329
  %blue693 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4329
  %339 = load i16, i16* %blue693, align 2, !dbg !4329
  %conv694 = zext i16 %339 to i32, !dbg !4329
  %conv695 = sitofp i32 %conv694 to float, !dbg !4329
  %add696 = fadd float %conv692, %conv695, !dbg !4329
  %div697 = fdiv float %add696, 2.000000e+00, !dbg !4329
  store float %div697, float* %mean, align 4, !dbg !4329
  %340 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4329
  %blue698 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %340, i32 0, i32 0, !dbg !4329
  %341 = load i16, i16* %blue698, align 2, !dbg !4329
  %conv699 = uitofp i16 %341 to float, !dbg !4329
  %blue700 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4329
  %342 = load i16, i16* %blue700, align 2, !dbg !4329
  %conv701 = uitofp i16 %342 to float, !dbg !4329
  %sub702 = fsub float %conv699, %conv701, !dbg !4329
  store float %sub702, float* %distance, align 4, !dbg !4329
  %343 = load float, float* %mean, align 4, !dbg !4329
  %conv703 = fpext float %343 to double, !dbg !4329
  %sub704 = fsub double 1.966070e+05, %conv703, !dbg !4329
  %mul705 = fmul double 0x3EF0001000100010, %sub704, !dbg !4329
  %344 = load float, float* %distance, align 4, !dbg !4329
  %conv706 = fpext float %344 to double, !dbg !4329
  %mul707 = fmul double %mul705, %conv706, !dbg !4329
  %345 = load float, float* %distance, align 4, !dbg !4329
  %conv708 = fpext float %345 to double, !dbg !4329
  %mul709 = fmul double %mul707, %conv708, !dbg !4329
  %346 = load float, float* %distance_squared, align 4, !dbg !4329
  %conv710 = fpext float %346 to double, !dbg !4329
  %add711 = fadd double %conv710, %mul709, !dbg !4329
  %conv712 = fptrunc double %add711 to float, !dbg !4329
  store float %conv712, float* %distance_squared, align 4, !dbg !4329
  %347 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4329
  %opacity713 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %347, i32 0, i32 3, !dbg !4329
  %348 = load i16, i16* %opacity713, align 2, !dbg !4329
  %conv714 = uitofp i16 %348 to float, !dbg !4329
  %opacity715 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4329
  %349 = load i16, i16* %opacity715, align 2, !dbg !4329
  %conv716 = zext i16 %349 to i32, !dbg !4329
  %conv717 = sitofp i32 %conv716 to float, !dbg !4329
  %add718 = fadd float %conv714, %conv717, !dbg !4329
  %div719 = fdiv float %add718, 2.000000e+00, !dbg !4329
  store float %div719, float* %mean, align 4, !dbg !4329
  %350 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4329
  %opacity720 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %350, i32 0, i32 3, !dbg !4329
  %351 = load i16, i16* %opacity720, align 2, !dbg !4329
  %conv721 = uitofp i16 %351 to float, !dbg !4329
  %opacity722 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4329
  %352 = load i16, i16* %opacity722, align 2, !dbg !4329
  %conv723 = uitofp i16 %352 to float, !dbg !4329
  %sub724 = fsub float %conv721, %conv723, !dbg !4329
  store float %sub724, float* %distance, align 4, !dbg !4329
  %353 = load float, float* %mean, align 4, !dbg !4329
  %conv725 = fpext float %353 to double, !dbg !4329
  %sub726 = fsub double 1.966070e+05, %conv725, !dbg !4329
  %mul727 = fmul double 0x3EF0001000100010, %sub726, !dbg !4329
  %354 = load float, float* %distance, align 4, !dbg !4329
  %conv728 = fpext float %354 to double, !dbg !4329
  %mul729 = fmul double %mul727, %conv728, !dbg !4329
  %355 = load float, float* %distance, align 4, !dbg !4329
  %conv730 = fpext float %355 to double, !dbg !4329
  %mul731 = fmul double %mul729, %conv730, !dbg !4329
  %356 = load float, float* %distance_squared, align 4, !dbg !4329
  %conv732 = fpext float %356 to double, !dbg !4329
  %add733 = fadd double %conv732, %mul731, !dbg !4329
  %conv734 = fptrunc double %add733 to float, !dbg !4329
  store float %conv734, float* %distance_squared, align 4, !dbg !4329
  %357 = load float, float* %distance_squared, align 4, !dbg !4330
  %cmp735 = fcmp olt float %357, 0x41A47AB860000000, !dbg !4330
  br i1 %cmp735, label %if.then737, label %if.end773, !dbg !4329

if.then737:                                       ; preds = %if.end647
  %358 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4332
  %red738 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %358, i32 0, i32 2, !dbg !4332
  %359 = load i16, i16* %red738, align 2, !dbg !4332
  %conv739 = zext i16 %359 to i32, !dbg !4332
  %conv740 = sitofp i32 %conv739 to double, !dbg !4332
  %mul741 = fmul double 8.000000e+00, %conv740, !dbg !4332
  %red742 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4332
  %360 = load float, float* %red742, align 8, !dbg !4332
  %conv743 = fpext float %360 to double, !dbg !4332
  %add744 = fadd double %conv743, %mul741, !dbg !4332
  %conv745 = fptrunc double %add744 to float, !dbg !4332
  store float %conv745, float* %red742, align 8, !dbg !4332
  %361 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4332
  %green746 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %361, i32 0, i32 1, !dbg !4332
  %362 = load i16, i16* %green746, align 2, !dbg !4332
  %conv747 = zext i16 %362 to i32, !dbg !4332
  %conv748 = sitofp i32 %conv747 to double, !dbg !4332
  %mul749 = fmul double 8.000000e+00, %conv748, !dbg !4332
  %green750 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4332
  %363 = load float, float* %green750, align 4, !dbg !4332
  %conv751 = fpext float %363 to double, !dbg !4332
  %add752 = fadd double %conv751, %mul749, !dbg !4332
  %conv753 = fptrunc double %add752 to float, !dbg !4332
  store float %conv753, float* %green750, align 4, !dbg !4332
  %364 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4332
  %blue754 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %364, i32 0, i32 0, !dbg !4332
  %365 = load i16, i16* %blue754, align 2, !dbg !4332
  %conv755 = zext i16 %365 to i32, !dbg !4332
  %conv756 = sitofp i32 %conv755 to double, !dbg !4332
  %mul757 = fmul double 8.000000e+00, %conv756, !dbg !4332
  %blue758 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4332
  %366 = load float, float* %blue758, align 8, !dbg !4332
  %conv759 = fpext float %366 to double, !dbg !4332
  %add760 = fadd double %conv759, %mul757, !dbg !4332
  %conv761 = fptrunc double %add760 to float, !dbg !4332
  store float %conv761, float* %blue758, align 8, !dbg !4332
  %367 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4332
  %opacity762 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %367, i32 0, i32 3, !dbg !4332
  %368 = load i16, i16* %opacity762, align 2, !dbg !4332
  %conv763 = zext i16 %368 to i32, !dbg !4332
  %conv764 = sitofp i32 %conv763 to double, !dbg !4332
  %mul765 = fmul double 8.000000e+00, %conv764, !dbg !4332
  %opacity766 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4332
  %369 = load float, float* %opacity766, align 4, !dbg !4332
  %conv767 = fpext float %369 to double, !dbg !4332
  %add768 = fadd double %conv767, %mul765, !dbg !4332
  %conv769 = fptrunc double %add768 to float, !dbg !4332
  store float %conv769, float* %opacity766, align 4, !dbg !4332
  %370 = load float, float* %total_weight, align 4, !dbg !4332
  %conv770 = fpext float %370 to double, !dbg !4332
  %add771 = fadd double %conv770, 8.000000e+00, !dbg !4332
  %conv772 = fptrunc double %add771 to float, !dbg !4332
  store float %conv772, float* %total_weight, align 4, !dbg !4332
  br label %if.end773, !dbg !4332

if.end773:                                        ; preds = %if.then737, %if.end647
  %371 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4329
  %incdec.ptr774 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %371, i32 1, !dbg !4329
  store %struct._PixelPacket* %incdec.ptr774, %struct._PixelPacket** %r, align 8, !dbg !4329
  %372 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4334
  %red775 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %372, i32 0, i32 2, !dbg !4334
  %373 = load i16, i16* %red775, align 2, !dbg !4334
  %conv776 = uitofp i16 %373 to float, !dbg !4334
  %red777 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4334
  %374 = load i16, i16* %red777, align 2, !dbg !4334
  %conv778 = zext i16 %374 to i32, !dbg !4334
  %conv779 = sitofp i32 %conv778 to float, !dbg !4334
  %add780 = fadd float %conv776, %conv779, !dbg !4334
  %div781 = fdiv float %add780, 2.000000e+00, !dbg !4334
  store float %div781, float* %mean, align 4, !dbg !4334
  %375 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4334
  %red782 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %375, i32 0, i32 2, !dbg !4334
  %376 = load i16, i16* %red782, align 2, !dbg !4334
  %conv783 = uitofp i16 %376 to float, !dbg !4334
  %red784 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4334
  %377 = load i16, i16* %red784, align 2, !dbg !4334
  %conv785 = uitofp i16 %377 to float, !dbg !4334
  %sub786 = fsub float %conv783, %conv785, !dbg !4334
  store float %sub786, float* %distance, align 4, !dbg !4334
  %378 = load float, float* %mean, align 4, !dbg !4334
  %conv787 = fpext float %378 to double, !dbg !4334
  %add788 = fadd double 1.310720e+05, %conv787, !dbg !4334
  %mul789 = fmul double 0x3EF0001000100010, %add788, !dbg !4334
  %379 = load float, float* %distance, align 4, !dbg !4334
  %conv790 = fpext float %379 to double, !dbg !4334
  %mul791 = fmul double %mul789, %conv790, !dbg !4334
  %380 = load float, float* %distance, align 4, !dbg !4334
  %conv792 = fpext float %380 to double, !dbg !4334
  %mul793 = fmul double %mul791, %conv792, !dbg !4334
  %conv794 = fptrunc double %mul793 to float, !dbg !4334
  store float %conv794, float* %distance_squared, align 4, !dbg !4334
  %381 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4334
  %green795 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %381, i32 0, i32 1, !dbg !4334
  %382 = load i16, i16* %green795, align 2, !dbg !4334
  %conv796 = uitofp i16 %382 to float, !dbg !4334
  %green797 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4334
  %383 = load i16, i16* %green797, align 2, !dbg !4334
  %conv798 = zext i16 %383 to i32, !dbg !4334
  %conv799 = sitofp i32 %conv798 to float, !dbg !4334
  %add800 = fadd float %conv796, %conv799, !dbg !4334
  %div801 = fdiv float %add800, 2.000000e+00, !dbg !4334
  store float %div801, float* %mean, align 4, !dbg !4334
  %384 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4334
  %green802 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %384, i32 0, i32 1, !dbg !4334
  %385 = load i16, i16* %green802, align 2, !dbg !4334
  %conv803 = uitofp i16 %385 to float, !dbg !4334
  %green804 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4334
  %386 = load i16, i16* %green804, align 2, !dbg !4334
  %conv805 = uitofp i16 %386 to float, !dbg !4334
  %sub806 = fsub float %conv803, %conv805, !dbg !4334
  store float %sub806, float* %distance, align 4, !dbg !4334
  %387 = load float, float* %distance, align 4, !dbg !4334
  %conv807 = fpext float %387 to double, !dbg !4334
  %mul808 = fmul double 4.000000e+00, %conv807, !dbg !4334
  %388 = load float, float* %distance, align 4, !dbg !4334
  %conv809 = fpext float %388 to double, !dbg !4334
  %mul810 = fmul double %mul808, %conv809, !dbg !4334
  %389 = load float, float* %distance_squared, align 4, !dbg !4334
  %conv811 = fpext float %389 to double, !dbg !4334
  %add812 = fadd double %conv811, %mul810, !dbg !4334
  %conv813 = fptrunc double %add812 to float, !dbg !4334
  store float %conv813, float* %distance_squared, align 4, !dbg !4334
  %390 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4334
  %blue814 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %390, i32 0, i32 0, !dbg !4334
  %391 = load i16, i16* %blue814, align 2, !dbg !4334
  %conv815 = uitofp i16 %391 to float, !dbg !4334
  %blue816 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4334
  %392 = load i16, i16* %blue816, align 2, !dbg !4334
  %conv817 = zext i16 %392 to i32, !dbg !4334
  %conv818 = sitofp i32 %conv817 to float, !dbg !4334
  %add819 = fadd float %conv815, %conv818, !dbg !4334
  %div820 = fdiv float %add819, 2.000000e+00, !dbg !4334
  store float %div820, float* %mean, align 4, !dbg !4334
  %393 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4334
  %blue821 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %393, i32 0, i32 0, !dbg !4334
  %394 = load i16, i16* %blue821, align 2, !dbg !4334
  %conv822 = uitofp i16 %394 to float, !dbg !4334
  %blue823 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4334
  %395 = load i16, i16* %blue823, align 2, !dbg !4334
  %conv824 = uitofp i16 %395 to float, !dbg !4334
  %sub825 = fsub float %conv822, %conv824, !dbg !4334
  store float %sub825, float* %distance, align 4, !dbg !4334
  %396 = load float, float* %mean, align 4, !dbg !4334
  %conv826 = fpext float %396 to double, !dbg !4334
  %sub827 = fsub double 1.966070e+05, %conv826, !dbg !4334
  %mul828 = fmul double 0x3EF0001000100010, %sub827, !dbg !4334
  %397 = load float, float* %distance, align 4, !dbg !4334
  %conv829 = fpext float %397 to double, !dbg !4334
  %mul830 = fmul double %mul828, %conv829, !dbg !4334
  %398 = load float, float* %distance, align 4, !dbg !4334
  %conv831 = fpext float %398 to double, !dbg !4334
  %mul832 = fmul double %mul830, %conv831, !dbg !4334
  %399 = load float, float* %distance_squared, align 4, !dbg !4334
  %conv833 = fpext float %399 to double, !dbg !4334
  %add834 = fadd double %conv833, %mul832, !dbg !4334
  %conv835 = fptrunc double %add834 to float, !dbg !4334
  store float %conv835, float* %distance_squared, align 4, !dbg !4334
  %400 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4334
  %opacity836 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %400, i32 0, i32 3, !dbg !4334
  %401 = load i16, i16* %opacity836, align 2, !dbg !4334
  %conv837 = uitofp i16 %401 to float, !dbg !4334
  %opacity838 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4334
  %402 = load i16, i16* %opacity838, align 2, !dbg !4334
  %conv839 = zext i16 %402 to i32, !dbg !4334
  %conv840 = sitofp i32 %conv839 to float, !dbg !4334
  %add841 = fadd float %conv837, %conv840, !dbg !4334
  %div842 = fdiv float %add841, 2.000000e+00, !dbg !4334
  store float %div842, float* %mean, align 4, !dbg !4334
  %403 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4334
  %opacity843 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %403, i32 0, i32 3, !dbg !4334
  %404 = load i16, i16* %opacity843, align 2, !dbg !4334
  %conv844 = uitofp i16 %404 to float, !dbg !4334
  %opacity845 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4334
  %405 = load i16, i16* %opacity845, align 2, !dbg !4334
  %conv846 = uitofp i16 %405 to float, !dbg !4334
  %sub847 = fsub float %conv844, %conv846, !dbg !4334
  store float %sub847, float* %distance, align 4, !dbg !4334
  %406 = load float, float* %mean, align 4, !dbg !4334
  %conv848 = fpext float %406 to double, !dbg !4334
  %sub849 = fsub double 1.966070e+05, %conv848, !dbg !4334
  %mul850 = fmul double 0x3EF0001000100010, %sub849, !dbg !4334
  %407 = load float, float* %distance, align 4, !dbg !4334
  %conv851 = fpext float %407 to double, !dbg !4334
  %mul852 = fmul double %mul850, %conv851, !dbg !4334
  %408 = load float, float* %distance, align 4, !dbg !4334
  %conv853 = fpext float %408 to double, !dbg !4334
  %mul854 = fmul double %mul852, %conv853, !dbg !4334
  %409 = load float, float* %distance_squared, align 4, !dbg !4334
  %conv855 = fpext float %409 to double, !dbg !4334
  %add856 = fadd double %conv855, %mul854, !dbg !4334
  %conv857 = fptrunc double %add856 to float, !dbg !4334
  store float %conv857, float* %distance_squared, align 4, !dbg !4334
  %410 = load float, float* %distance_squared, align 4, !dbg !4335
  %cmp858 = fcmp olt float %410, 0x41A47AB860000000, !dbg !4335
  br i1 %cmp858, label %if.then860, label %if.end896, !dbg !4334

if.then860:                                       ; preds = %if.end773
  %411 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4337
  %red861 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %411, i32 0, i32 2, !dbg !4337
  %412 = load i16, i16* %red861, align 2, !dbg !4337
  %conv862 = zext i16 %412 to i32, !dbg !4337
  %conv863 = sitofp i32 %conv862 to double, !dbg !4337
  %mul864 = fmul double 2.000000e+01, %conv863, !dbg !4337
  %red865 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4337
  %413 = load float, float* %red865, align 8, !dbg !4337
  %conv866 = fpext float %413 to double, !dbg !4337
  %add867 = fadd double %conv866, %mul864, !dbg !4337
  %conv868 = fptrunc double %add867 to float, !dbg !4337
  store float %conv868, float* %red865, align 8, !dbg !4337
  %414 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4337
  %green869 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %414, i32 0, i32 1, !dbg !4337
  %415 = load i16, i16* %green869, align 2, !dbg !4337
  %conv870 = zext i16 %415 to i32, !dbg !4337
  %conv871 = sitofp i32 %conv870 to double, !dbg !4337
  %mul872 = fmul double 2.000000e+01, %conv871, !dbg !4337
  %green873 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4337
  %416 = load float, float* %green873, align 4, !dbg !4337
  %conv874 = fpext float %416 to double, !dbg !4337
  %add875 = fadd double %conv874, %mul872, !dbg !4337
  %conv876 = fptrunc double %add875 to float, !dbg !4337
  store float %conv876, float* %green873, align 4, !dbg !4337
  %417 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4337
  %blue877 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %417, i32 0, i32 0, !dbg !4337
  %418 = load i16, i16* %blue877, align 2, !dbg !4337
  %conv878 = zext i16 %418 to i32, !dbg !4337
  %conv879 = sitofp i32 %conv878 to double, !dbg !4337
  %mul880 = fmul double 2.000000e+01, %conv879, !dbg !4337
  %blue881 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4337
  %419 = load float, float* %blue881, align 8, !dbg !4337
  %conv882 = fpext float %419 to double, !dbg !4337
  %add883 = fadd double %conv882, %mul880, !dbg !4337
  %conv884 = fptrunc double %add883 to float, !dbg !4337
  store float %conv884, float* %blue881, align 8, !dbg !4337
  %420 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4337
  %opacity885 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %420, i32 0, i32 3, !dbg !4337
  %421 = load i16, i16* %opacity885, align 2, !dbg !4337
  %conv886 = zext i16 %421 to i32, !dbg !4337
  %conv887 = sitofp i32 %conv886 to double, !dbg !4337
  %mul888 = fmul double 2.000000e+01, %conv887, !dbg !4337
  %opacity889 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4337
  %422 = load float, float* %opacity889, align 4, !dbg !4337
  %conv890 = fpext float %422 to double, !dbg !4337
  %add891 = fadd double %conv890, %mul888, !dbg !4337
  %conv892 = fptrunc double %add891 to float, !dbg !4337
  store float %conv892, float* %opacity889, align 4, !dbg !4337
  %423 = load float, float* %total_weight, align 4, !dbg !4337
  %conv893 = fpext float %423 to double, !dbg !4337
  %add894 = fadd double %conv893, 2.000000e+01, !dbg !4337
  %conv895 = fptrunc double %add894 to float, !dbg !4337
  store float %conv895, float* %total_weight, align 4, !dbg !4337
  br label %if.end896, !dbg !4337

if.end896:                                        ; preds = %if.then860, %if.end773
  %424 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4334
  %incdec.ptr897 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %424, i32 1, !dbg !4334
  store %struct._PixelPacket* %incdec.ptr897, %struct._PixelPacket** %r, align 8, !dbg !4334
  %425 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4339
  %red898 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %425, i32 0, i32 2, !dbg !4339
  %426 = load i16, i16* %red898, align 2, !dbg !4339
  %conv899 = uitofp i16 %426 to float, !dbg !4339
  %red900 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4339
  %427 = load i16, i16* %red900, align 2, !dbg !4339
  %conv901 = zext i16 %427 to i32, !dbg !4339
  %conv902 = sitofp i32 %conv901 to float, !dbg !4339
  %add903 = fadd float %conv899, %conv902, !dbg !4339
  %div904 = fdiv float %add903, 2.000000e+00, !dbg !4339
  store float %div904, float* %mean, align 4, !dbg !4339
  %428 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4339
  %red905 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %428, i32 0, i32 2, !dbg !4339
  %429 = load i16, i16* %red905, align 2, !dbg !4339
  %conv906 = uitofp i16 %429 to float, !dbg !4339
  %red907 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4339
  %430 = load i16, i16* %red907, align 2, !dbg !4339
  %conv908 = uitofp i16 %430 to float, !dbg !4339
  %sub909 = fsub float %conv906, %conv908, !dbg !4339
  store float %sub909, float* %distance, align 4, !dbg !4339
  %431 = load float, float* %mean, align 4, !dbg !4339
  %conv910 = fpext float %431 to double, !dbg !4339
  %add911 = fadd double 1.310720e+05, %conv910, !dbg !4339
  %mul912 = fmul double 0x3EF0001000100010, %add911, !dbg !4339
  %432 = load float, float* %distance, align 4, !dbg !4339
  %conv913 = fpext float %432 to double, !dbg !4339
  %mul914 = fmul double %mul912, %conv913, !dbg !4339
  %433 = load float, float* %distance, align 4, !dbg !4339
  %conv915 = fpext float %433 to double, !dbg !4339
  %mul916 = fmul double %mul914, %conv915, !dbg !4339
  %conv917 = fptrunc double %mul916 to float, !dbg !4339
  store float %conv917, float* %distance_squared, align 4, !dbg !4339
  %434 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4339
  %green918 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %434, i32 0, i32 1, !dbg !4339
  %435 = load i16, i16* %green918, align 2, !dbg !4339
  %conv919 = uitofp i16 %435 to float, !dbg !4339
  %green920 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4339
  %436 = load i16, i16* %green920, align 2, !dbg !4339
  %conv921 = zext i16 %436 to i32, !dbg !4339
  %conv922 = sitofp i32 %conv921 to float, !dbg !4339
  %add923 = fadd float %conv919, %conv922, !dbg !4339
  %div924 = fdiv float %add923, 2.000000e+00, !dbg !4339
  store float %div924, float* %mean, align 4, !dbg !4339
  %437 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4339
  %green925 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %437, i32 0, i32 1, !dbg !4339
  %438 = load i16, i16* %green925, align 2, !dbg !4339
  %conv926 = uitofp i16 %438 to float, !dbg !4339
  %green927 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4339
  %439 = load i16, i16* %green927, align 2, !dbg !4339
  %conv928 = uitofp i16 %439 to float, !dbg !4339
  %sub929 = fsub float %conv926, %conv928, !dbg !4339
  store float %sub929, float* %distance, align 4, !dbg !4339
  %440 = load float, float* %distance, align 4, !dbg !4339
  %conv930 = fpext float %440 to double, !dbg !4339
  %mul931 = fmul double 4.000000e+00, %conv930, !dbg !4339
  %441 = load float, float* %distance, align 4, !dbg !4339
  %conv932 = fpext float %441 to double, !dbg !4339
  %mul933 = fmul double %mul931, %conv932, !dbg !4339
  %442 = load float, float* %distance_squared, align 4, !dbg !4339
  %conv934 = fpext float %442 to double, !dbg !4339
  %add935 = fadd double %conv934, %mul933, !dbg !4339
  %conv936 = fptrunc double %add935 to float, !dbg !4339
  store float %conv936, float* %distance_squared, align 4, !dbg !4339
  %443 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4339
  %blue937 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %443, i32 0, i32 0, !dbg !4339
  %444 = load i16, i16* %blue937, align 2, !dbg !4339
  %conv938 = uitofp i16 %444 to float, !dbg !4339
  %blue939 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4339
  %445 = load i16, i16* %blue939, align 2, !dbg !4339
  %conv940 = zext i16 %445 to i32, !dbg !4339
  %conv941 = sitofp i32 %conv940 to float, !dbg !4339
  %add942 = fadd float %conv938, %conv941, !dbg !4339
  %div943 = fdiv float %add942, 2.000000e+00, !dbg !4339
  store float %div943, float* %mean, align 4, !dbg !4339
  %446 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4339
  %blue944 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %446, i32 0, i32 0, !dbg !4339
  %447 = load i16, i16* %blue944, align 2, !dbg !4339
  %conv945 = uitofp i16 %447 to float, !dbg !4339
  %blue946 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4339
  %448 = load i16, i16* %blue946, align 2, !dbg !4339
  %conv947 = uitofp i16 %448 to float, !dbg !4339
  %sub948 = fsub float %conv945, %conv947, !dbg !4339
  store float %sub948, float* %distance, align 4, !dbg !4339
  %449 = load float, float* %mean, align 4, !dbg !4339
  %conv949 = fpext float %449 to double, !dbg !4339
  %sub950 = fsub double 1.966070e+05, %conv949, !dbg !4339
  %mul951 = fmul double 0x3EF0001000100010, %sub950, !dbg !4339
  %450 = load float, float* %distance, align 4, !dbg !4339
  %conv952 = fpext float %450 to double, !dbg !4339
  %mul953 = fmul double %mul951, %conv952, !dbg !4339
  %451 = load float, float* %distance, align 4, !dbg !4339
  %conv954 = fpext float %451 to double, !dbg !4339
  %mul955 = fmul double %mul953, %conv954, !dbg !4339
  %452 = load float, float* %distance_squared, align 4, !dbg !4339
  %conv956 = fpext float %452 to double, !dbg !4339
  %add957 = fadd double %conv956, %mul955, !dbg !4339
  %conv958 = fptrunc double %add957 to float, !dbg !4339
  store float %conv958, float* %distance_squared, align 4, !dbg !4339
  %453 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4339
  %opacity959 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %453, i32 0, i32 3, !dbg !4339
  %454 = load i16, i16* %opacity959, align 2, !dbg !4339
  %conv960 = uitofp i16 %454 to float, !dbg !4339
  %opacity961 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4339
  %455 = load i16, i16* %opacity961, align 2, !dbg !4339
  %conv962 = zext i16 %455 to i32, !dbg !4339
  %conv963 = sitofp i32 %conv962 to float, !dbg !4339
  %add964 = fadd float %conv960, %conv963, !dbg !4339
  %div965 = fdiv float %add964, 2.000000e+00, !dbg !4339
  store float %div965, float* %mean, align 4, !dbg !4339
  %456 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4339
  %opacity966 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %456, i32 0, i32 3, !dbg !4339
  %457 = load i16, i16* %opacity966, align 2, !dbg !4339
  %conv967 = uitofp i16 %457 to float, !dbg !4339
  %opacity968 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4339
  %458 = load i16, i16* %opacity968, align 2, !dbg !4339
  %conv969 = uitofp i16 %458 to float, !dbg !4339
  %sub970 = fsub float %conv967, %conv969, !dbg !4339
  store float %sub970, float* %distance, align 4, !dbg !4339
  %459 = load float, float* %mean, align 4, !dbg !4339
  %conv971 = fpext float %459 to double, !dbg !4339
  %sub972 = fsub double 1.966070e+05, %conv971, !dbg !4339
  %mul973 = fmul double 0x3EF0001000100010, %sub972, !dbg !4339
  %460 = load float, float* %distance, align 4, !dbg !4339
  %conv974 = fpext float %460 to double, !dbg !4339
  %mul975 = fmul double %mul973, %conv974, !dbg !4339
  %461 = load float, float* %distance, align 4, !dbg !4339
  %conv976 = fpext float %461 to double, !dbg !4339
  %mul977 = fmul double %mul975, %conv976, !dbg !4339
  %462 = load float, float* %distance_squared, align 4, !dbg !4339
  %conv978 = fpext float %462 to double, !dbg !4339
  %add979 = fadd double %conv978, %mul977, !dbg !4339
  %conv980 = fptrunc double %add979 to float, !dbg !4339
  store float %conv980, float* %distance_squared, align 4, !dbg !4339
  %463 = load float, float* %distance_squared, align 4, !dbg !4340
  %cmp981 = fcmp olt float %463, 0x41A47AB860000000, !dbg !4340
  br i1 %cmp981, label %if.then983, label %if.end1019, !dbg !4339

if.then983:                                       ; preds = %if.end896
  %464 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4342
  %red984 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %464, i32 0, i32 2, !dbg !4342
  %465 = load i16, i16* %red984, align 2, !dbg !4342
  %conv985 = zext i16 %465 to i32, !dbg !4342
  %conv986 = sitofp i32 %conv985 to double, !dbg !4342
  %mul987 = fmul double 4.000000e+01, %conv986, !dbg !4342
  %red988 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4342
  %466 = load float, float* %red988, align 8, !dbg !4342
  %conv989 = fpext float %466 to double, !dbg !4342
  %add990 = fadd double %conv989, %mul987, !dbg !4342
  %conv991 = fptrunc double %add990 to float, !dbg !4342
  store float %conv991, float* %red988, align 8, !dbg !4342
  %467 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4342
  %green992 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %467, i32 0, i32 1, !dbg !4342
  %468 = load i16, i16* %green992, align 2, !dbg !4342
  %conv993 = zext i16 %468 to i32, !dbg !4342
  %conv994 = sitofp i32 %conv993 to double, !dbg !4342
  %mul995 = fmul double 4.000000e+01, %conv994, !dbg !4342
  %green996 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4342
  %469 = load float, float* %green996, align 4, !dbg !4342
  %conv997 = fpext float %469 to double, !dbg !4342
  %add998 = fadd double %conv997, %mul995, !dbg !4342
  %conv999 = fptrunc double %add998 to float, !dbg !4342
  store float %conv999, float* %green996, align 4, !dbg !4342
  %470 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4342
  %blue1000 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %470, i32 0, i32 0, !dbg !4342
  %471 = load i16, i16* %blue1000, align 2, !dbg !4342
  %conv1001 = zext i16 %471 to i32, !dbg !4342
  %conv1002 = sitofp i32 %conv1001 to double, !dbg !4342
  %mul1003 = fmul double 4.000000e+01, %conv1002, !dbg !4342
  %blue1004 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4342
  %472 = load float, float* %blue1004, align 8, !dbg !4342
  %conv1005 = fpext float %472 to double, !dbg !4342
  %add1006 = fadd double %conv1005, %mul1003, !dbg !4342
  %conv1007 = fptrunc double %add1006 to float, !dbg !4342
  store float %conv1007, float* %blue1004, align 8, !dbg !4342
  %473 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4342
  %opacity1008 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %473, i32 0, i32 3, !dbg !4342
  %474 = load i16, i16* %opacity1008, align 2, !dbg !4342
  %conv1009 = zext i16 %474 to i32, !dbg !4342
  %conv1010 = sitofp i32 %conv1009 to double, !dbg !4342
  %mul1011 = fmul double 4.000000e+01, %conv1010, !dbg !4342
  %opacity1012 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4342
  %475 = load float, float* %opacity1012, align 4, !dbg !4342
  %conv1013 = fpext float %475 to double, !dbg !4342
  %add1014 = fadd double %conv1013, %mul1011, !dbg !4342
  %conv1015 = fptrunc double %add1014 to float, !dbg !4342
  store float %conv1015, float* %opacity1012, align 4, !dbg !4342
  %476 = load float, float* %total_weight, align 4, !dbg !4342
  %conv1016 = fpext float %476 to double, !dbg !4342
  %add1017 = fadd double %conv1016, 4.000000e+01, !dbg !4342
  %conv1018 = fptrunc double %add1017 to float, !dbg !4342
  store float %conv1018, float* %total_weight, align 4, !dbg !4342
  br label %if.end1019, !dbg !4342

if.end1019:                                       ; preds = %if.then983, %if.end896
  %477 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4339
  %incdec.ptr1020 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %477, i32 1, !dbg !4339
  store %struct._PixelPacket* %incdec.ptr1020, %struct._PixelPacket** %r, align 8, !dbg !4339
  %478 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4344
  %red1021 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %478, i32 0, i32 2, !dbg !4344
  %479 = load i16, i16* %red1021, align 2, !dbg !4344
  %conv1022 = uitofp i16 %479 to float, !dbg !4344
  %red1023 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4344
  %480 = load i16, i16* %red1023, align 2, !dbg !4344
  %conv1024 = zext i16 %480 to i32, !dbg !4344
  %conv1025 = sitofp i32 %conv1024 to float, !dbg !4344
  %add1026 = fadd float %conv1022, %conv1025, !dbg !4344
  %div1027 = fdiv float %add1026, 2.000000e+00, !dbg !4344
  store float %div1027, float* %mean, align 4, !dbg !4344
  %481 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4344
  %red1028 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %481, i32 0, i32 2, !dbg !4344
  %482 = load i16, i16* %red1028, align 2, !dbg !4344
  %conv1029 = uitofp i16 %482 to float, !dbg !4344
  %red1030 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4344
  %483 = load i16, i16* %red1030, align 2, !dbg !4344
  %conv1031 = uitofp i16 %483 to float, !dbg !4344
  %sub1032 = fsub float %conv1029, %conv1031, !dbg !4344
  store float %sub1032, float* %distance, align 4, !dbg !4344
  %484 = load float, float* %mean, align 4, !dbg !4344
  %conv1033 = fpext float %484 to double, !dbg !4344
  %add1034 = fadd double 1.310720e+05, %conv1033, !dbg !4344
  %mul1035 = fmul double 0x3EF0001000100010, %add1034, !dbg !4344
  %485 = load float, float* %distance, align 4, !dbg !4344
  %conv1036 = fpext float %485 to double, !dbg !4344
  %mul1037 = fmul double %mul1035, %conv1036, !dbg !4344
  %486 = load float, float* %distance, align 4, !dbg !4344
  %conv1038 = fpext float %486 to double, !dbg !4344
  %mul1039 = fmul double %mul1037, %conv1038, !dbg !4344
  %conv1040 = fptrunc double %mul1039 to float, !dbg !4344
  store float %conv1040, float* %distance_squared, align 4, !dbg !4344
  %487 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4344
  %green1041 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %487, i32 0, i32 1, !dbg !4344
  %488 = load i16, i16* %green1041, align 2, !dbg !4344
  %conv1042 = uitofp i16 %488 to float, !dbg !4344
  %green1043 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4344
  %489 = load i16, i16* %green1043, align 2, !dbg !4344
  %conv1044 = zext i16 %489 to i32, !dbg !4344
  %conv1045 = sitofp i32 %conv1044 to float, !dbg !4344
  %add1046 = fadd float %conv1042, %conv1045, !dbg !4344
  %div1047 = fdiv float %add1046, 2.000000e+00, !dbg !4344
  store float %div1047, float* %mean, align 4, !dbg !4344
  %490 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4344
  %green1048 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %490, i32 0, i32 1, !dbg !4344
  %491 = load i16, i16* %green1048, align 2, !dbg !4344
  %conv1049 = uitofp i16 %491 to float, !dbg !4344
  %green1050 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4344
  %492 = load i16, i16* %green1050, align 2, !dbg !4344
  %conv1051 = uitofp i16 %492 to float, !dbg !4344
  %sub1052 = fsub float %conv1049, %conv1051, !dbg !4344
  store float %sub1052, float* %distance, align 4, !dbg !4344
  %493 = load float, float* %distance, align 4, !dbg !4344
  %conv1053 = fpext float %493 to double, !dbg !4344
  %mul1054 = fmul double 4.000000e+00, %conv1053, !dbg !4344
  %494 = load float, float* %distance, align 4, !dbg !4344
  %conv1055 = fpext float %494 to double, !dbg !4344
  %mul1056 = fmul double %mul1054, %conv1055, !dbg !4344
  %495 = load float, float* %distance_squared, align 4, !dbg !4344
  %conv1057 = fpext float %495 to double, !dbg !4344
  %add1058 = fadd double %conv1057, %mul1056, !dbg !4344
  %conv1059 = fptrunc double %add1058 to float, !dbg !4344
  store float %conv1059, float* %distance_squared, align 4, !dbg !4344
  %496 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4344
  %blue1060 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %496, i32 0, i32 0, !dbg !4344
  %497 = load i16, i16* %blue1060, align 2, !dbg !4344
  %conv1061 = uitofp i16 %497 to float, !dbg !4344
  %blue1062 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4344
  %498 = load i16, i16* %blue1062, align 2, !dbg !4344
  %conv1063 = zext i16 %498 to i32, !dbg !4344
  %conv1064 = sitofp i32 %conv1063 to float, !dbg !4344
  %add1065 = fadd float %conv1061, %conv1064, !dbg !4344
  %div1066 = fdiv float %add1065, 2.000000e+00, !dbg !4344
  store float %div1066, float* %mean, align 4, !dbg !4344
  %499 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4344
  %blue1067 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %499, i32 0, i32 0, !dbg !4344
  %500 = load i16, i16* %blue1067, align 2, !dbg !4344
  %conv1068 = uitofp i16 %500 to float, !dbg !4344
  %blue1069 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4344
  %501 = load i16, i16* %blue1069, align 2, !dbg !4344
  %conv1070 = uitofp i16 %501 to float, !dbg !4344
  %sub1071 = fsub float %conv1068, %conv1070, !dbg !4344
  store float %sub1071, float* %distance, align 4, !dbg !4344
  %502 = load float, float* %mean, align 4, !dbg !4344
  %conv1072 = fpext float %502 to double, !dbg !4344
  %sub1073 = fsub double 1.966070e+05, %conv1072, !dbg !4344
  %mul1074 = fmul double 0x3EF0001000100010, %sub1073, !dbg !4344
  %503 = load float, float* %distance, align 4, !dbg !4344
  %conv1075 = fpext float %503 to double, !dbg !4344
  %mul1076 = fmul double %mul1074, %conv1075, !dbg !4344
  %504 = load float, float* %distance, align 4, !dbg !4344
  %conv1077 = fpext float %504 to double, !dbg !4344
  %mul1078 = fmul double %mul1076, %conv1077, !dbg !4344
  %505 = load float, float* %distance_squared, align 4, !dbg !4344
  %conv1079 = fpext float %505 to double, !dbg !4344
  %add1080 = fadd double %conv1079, %mul1078, !dbg !4344
  %conv1081 = fptrunc double %add1080 to float, !dbg !4344
  store float %conv1081, float* %distance_squared, align 4, !dbg !4344
  %506 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4344
  %opacity1082 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %506, i32 0, i32 3, !dbg !4344
  %507 = load i16, i16* %opacity1082, align 2, !dbg !4344
  %conv1083 = uitofp i16 %507 to float, !dbg !4344
  %opacity1084 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4344
  %508 = load i16, i16* %opacity1084, align 2, !dbg !4344
  %conv1085 = zext i16 %508 to i32, !dbg !4344
  %conv1086 = sitofp i32 %conv1085 to float, !dbg !4344
  %add1087 = fadd float %conv1083, %conv1086, !dbg !4344
  %div1088 = fdiv float %add1087, 2.000000e+00, !dbg !4344
  store float %div1088, float* %mean, align 4, !dbg !4344
  %509 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4344
  %opacity1089 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %509, i32 0, i32 3, !dbg !4344
  %510 = load i16, i16* %opacity1089, align 2, !dbg !4344
  %conv1090 = uitofp i16 %510 to float, !dbg !4344
  %opacity1091 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4344
  %511 = load i16, i16* %opacity1091, align 2, !dbg !4344
  %conv1092 = uitofp i16 %511 to float, !dbg !4344
  %sub1093 = fsub float %conv1090, %conv1092, !dbg !4344
  store float %sub1093, float* %distance, align 4, !dbg !4344
  %512 = load float, float* %mean, align 4, !dbg !4344
  %conv1094 = fpext float %512 to double, !dbg !4344
  %sub1095 = fsub double 1.966070e+05, %conv1094, !dbg !4344
  %mul1096 = fmul double 0x3EF0001000100010, %sub1095, !dbg !4344
  %513 = load float, float* %distance, align 4, !dbg !4344
  %conv1097 = fpext float %513 to double, !dbg !4344
  %mul1098 = fmul double %mul1096, %conv1097, !dbg !4344
  %514 = load float, float* %distance, align 4, !dbg !4344
  %conv1099 = fpext float %514 to double, !dbg !4344
  %mul1100 = fmul double %mul1098, %conv1099, !dbg !4344
  %515 = load float, float* %distance_squared, align 4, !dbg !4344
  %conv1101 = fpext float %515 to double, !dbg !4344
  %add1102 = fadd double %conv1101, %mul1100, !dbg !4344
  %conv1103 = fptrunc double %add1102 to float, !dbg !4344
  store float %conv1103, float* %distance_squared, align 4, !dbg !4344
  %516 = load float, float* %distance_squared, align 4, !dbg !4345
  %cmp1104 = fcmp olt float %516, 0x41A47AB860000000, !dbg !4345
  br i1 %cmp1104, label %if.then1106, label %if.end1142, !dbg !4344

if.then1106:                                      ; preds = %if.end1019
  %517 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4347
  %red1107 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %517, i32 0, i32 2, !dbg !4347
  %518 = load i16, i16* %red1107, align 2, !dbg !4347
  %conv1108 = zext i16 %518 to i32, !dbg !4347
  %conv1109 = sitofp i32 %conv1108 to double, !dbg !4347
  %mul1110 = fmul double 2.000000e+01, %conv1109, !dbg !4347
  %red1111 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4347
  %519 = load float, float* %red1111, align 8, !dbg !4347
  %conv1112 = fpext float %519 to double, !dbg !4347
  %add1113 = fadd double %conv1112, %mul1110, !dbg !4347
  %conv1114 = fptrunc double %add1113 to float, !dbg !4347
  store float %conv1114, float* %red1111, align 8, !dbg !4347
  %520 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4347
  %green1115 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %520, i32 0, i32 1, !dbg !4347
  %521 = load i16, i16* %green1115, align 2, !dbg !4347
  %conv1116 = zext i16 %521 to i32, !dbg !4347
  %conv1117 = sitofp i32 %conv1116 to double, !dbg !4347
  %mul1118 = fmul double 2.000000e+01, %conv1117, !dbg !4347
  %green1119 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4347
  %522 = load float, float* %green1119, align 4, !dbg !4347
  %conv1120 = fpext float %522 to double, !dbg !4347
  %add1121 = fadd double %conv1120, %mul1118, !dbg !4347
  %conv1122 = fptrunc double %add1121 to float, !dbg !4347
  store float %conv1122, float* %green1119, align 4, !dbg !4347
  %523 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4347
  %blue1123 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %523, i32 0, i32 0, !dbg !4347
  %524 = load i16, i16* %blue1123, align 2, !dbg !4347
  %conv1124 = zext i16 %524 to i32, !dbg !4347
  %conv1125 = sitofp i32 %conv1124 to double, !dbg !4347
  %mul1126 = fmul double 2.000000e+01, %conv1125, !dbg !4347
  %blue1127 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4347
  %525 = load float, float* %blue1127, align 8, !dbg !4347
  %conv1128 = fpext float %525 to double, !dbg !4347
  %add1129 = fadd double %conv1128, %mul1126, !dbg !4347
  %conv1130 = fptrunc double %add1129 to float, !dbg !4347
  store float %conv1130, float* %blue1127, align 8, !dbg !4347
  %526 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4347
  %opacity1131 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %526, i32 0, i32 3, !dbg !4347
  %527 = load i16, i16* %opacity1131, align 2, !dbg !4347
  %conv1132 = zext i16 %527 to i32, !dbg !4347
  %conv1133 = sitofp i32 %conv1132 to double, !dbg !4347
  %mul1134 = fmul double 2.000000e+01, %conv1133, !dbg !4347
  %opacity1135 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4347
  %528 = load float, float* %opacity1135, align 4, !dbg !4347
  %conv1136 = fpext float %528 to double, !dbg !4347
  %add1137 = fadd double %conv1136, %mul1134, !dbg !4347
  %conv1138 = fptrunc double %add1137 to float, !dbg !4347
  store float %conv1138, float* %opacity1135, align 4, !dbg !4347
  %529 = load float, float* %total_weight, align 4, !dbg !4347
  %conv1139 = fpext float %529 to double, !dbg !4347
  %add1140 = fadd double %conv1139, 2.000000e+01, !dbg !4347
  %conv1141 = fptrunc double %add1140 to float, !dbg !4347
  store float %conv1141, float* %total_weight, align 4, !dbg !4347
  br label %if.end1142, !dbg !4347

if.end1142:                                       ; preds = %if.then1106, %if.end1019
  %530 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4344
  %incdec.ptr1143 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %530, i32 1, !dbg !4344
  store %struct._PixelPacket* %incdec.ptr1143, %struct._PixelPacket** %r, align 8, !dbg !4344
  %531 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4349
  %red1144 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %531, i32 0, i32 2, !dbg !4349
  %532 = load i16, i16* %red1144, align 2, !dbg !4349
  %conv1145 = uitofp i16 %532 to float, !dbg !4349
  %red1146 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4349
  %533 = load i16, i16* %red1146, align 2, !dbg !4349
  %conv1147 = zext i16 %533 to i32, !dbg !4349
  %conv1148 = sitofp i32 %conv1147 to float, !dbg !4349
  %add1149 = fadd float %conv1145, %conv1148, !dbg !4349
  %div1150 = fdiv float %add1149, 2.000000e+00, !dbg !4349
  store float %div1150, float* %mean, align 4, !dbg !4349
  %534 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4349
  %red1151 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %534, i32 0, i32 2, !dbg !4349
  %535 = load i16, i16* %red1151, align 2, !dbg !4349
  %conv1152 = uitofp i16 %535 to float, !dbg !4349
  %red1153 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4349
  %536 = load i16, i16* %red1153, align 2, !dbg !4349
  %conv1154 = uitofp i16 %536 to float, !dbg !4349
  %sub1155 = fsub float %conv1152, %conv1154, !dbg !4349
  store float %sub1155, float* %distance, align 4, !dbg !4349
  %537 = load float, float* %mean, align 4, !dbg !4349
  %conv1156 = fpext float %537 to double, !dbg !4349
  %add1157 = fadd double 1.310720e+05, %conv1156, !dbg !4349
  %mul1158 = fmul double 0x3EF0001000100010, %add1157, !dbg !4349
  %538 = load float, float* %distance, align 4, !dbg !4349
  %conv1159 = fpext float %538 to double, !dbg !4349
  %mul1160 = fmul double %mul1158, %conv1159, !dbg !4349
  %539 = load float, float* %distance, align 4, !dbg !4349
  %conv1161 = fpext float %539 to double, !dbg !4349
  %mul1162 = fmul double %mul1160, %conv1161, !dbg !4349
  %conv1163 = fptrunc double %mul1162 to float, !dbg !4349
  store float %conv1163, float* %distance_squared, align 4, !dbg !4349
  %540 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4349
  %green1164 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %540, i32 0, i32 1, !dbg !4349
  %541 = load i16, i16* %green1164, align 2, !dbg !4349
  %conv1165 = uitofp i16 %541 to float, !dbg !4349
  %green1166 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4349
  %542 = load i16, i16* %green1166, align 2, !dbg !4349
  %conv1167 = zext i16 %542 to i32, !dbg !4349
  %conv1168 = sitofp i32 %conv1167 to float, !dbg !4349
  %add1169 = fadd float %conv1165, %conv1168, !dbg !4349
  %div1170 = fdiv float %add1169, 2.000000e+00, !dbg !4349
  store float %div1170, float* %mean, align 4, !dbg !4349
  %543 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4349
  %green1171 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %543, i32 0, i32 1, !dbg !4349
  %544 = load i16, i16* %green1171, align 2, !dbg !4349
  %conv1172 = uitofp i16 %544 to float, !dbg !4349
  %green1173 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4349
  %545 = load i16, i16* %green1173, align 2, !dbg !4349
  %conv1174 = uitofp i16 %545 to float, !dbg !4349
  %sub1175 = fsub float %conv1172, %conv1174, !dbg !4349
  store float %sub1175, float* %distance, align 4, !dbg !4349
  %546 = load float, float* %distance, align 4, !dbg !4349
  %conv1176 = fpext float %546 to double, !dbg !4349
  %mul1177 = fmul double 4.000000e+00, %conv1176, !dbg !4349
  %547 = load float, float* %distance, align 4, !dbg !4349
  %conv1178 = fpext float %547 to double, !dbg !4349
  %mul1179 = fmul double %mul1177, %conv1178, !dbg !4349
  %548 = load float, float* %distance_squared, align 4, !dbg !4349
  %conv1180 = fpext float %548 to double, !dbg !4349
  %add1181 = fadd double %conv1180, %mul1179, !dbg !4349
  %conv1182 = fptrunc double %add1181 to float, !dbg !4349
  store float %conv1182, float* %distance_squared, align 4, !dbg !4349
  %549 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4349
  %blue1183 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %549, i32 0, i32 0, !dbg !4349
  %550 = load i16, i16* %blue1183, align 2, !dbg !4349
  %conv1184 = uitofp i16 %550 to float, !dbg !4349
  %blue1185 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4349
  %551 = load i16, i16* %blue1185, align 2, !dbg !4349
  %conv1186 = zext i16 %551 to i32, !dbg !4349
  %conv1187 = sitofp i32 %conv1186 to float, !dbg !4349
  %add1188 = fadd float %conv1184, %conv1187, !dbg !4349
  %div1189 = fdiv float %add1188, 2.000000e+00, !dbg !4349
  store float %div1189, float* %mean, align 4, !dbg !4349
  %552 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4349
  %blue1190 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %552, i32 0, i32 0, !dbg !4349
  %553 = load i16, i16* %blue1190, align 2, !dbg !4349
  %conv1191 = uitofp i16 %553 to float, !dbg !4349
  %blue1192 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4349
  %554 = load i16, i16* %blue1192, align 2, !dbg !4349
  %conv1193 = uitofp i16 %554 to float, !dbg !4349
  %sub1194 = fsub float %conv1191, %conv1193, !dbg !4349
  store float %sub1194, float* %distance, align 4, !dbg !4349
  %555 = load float, float* %mean, align 4, !dbg !4349
  %conv1195 = fpext float %555 to double, !dbg !4349
  %sub1196 = fsub double 1.966070e+05, %conv1195, !dbg !4349
  %mul1197 = fmul double 0x3EF0001000100010, %sub1196, !dbg !4349
  %556 = load float, float* %distance, align 4, !dbg !4349
  %conv1198 = fpext float %556 to double, !dbg !4349
  %mul1199 = fmul double %mul1197, %conv1198, !dbg !4349
  %557 = load float, float* %distance, align 4, !dbg !4349
  %conv1200 = fpext float %557 to double, !dbg !4349
  %mul1201 = fmul double %mul1199, %conv1200, !dbg !4349
  %558 = load float, float* %distance_squared, align 4, !dbg !4349
  %conv1202 = fpext float %558 to double, !dbg !4349
  %add1203 = fadd double %conv1202, %mul1201, !dbg !4349
  %conv1204 = fptrunc double %add1203 to float, !dbg !4349
  store float %conv1204, float* %distance_squared, align 4, !dbg !4349
  %559 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4349
  %opacity1205 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %559, i32 0, i32 3, !dbg !4349
  %560 = load i16, i16* %opacity1205, align 2, !dbg !4349
  %conv1206 = uitofp i16 %560 to float, !dbg !4349
  %opacity1207 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4349
  %561 = load i16, i16* %opacity1207, align 2, !dbg !4349
  %conv1208 = zext i16 %561 to i32, !dbg !4349
  %conv1209 = sitofp i32 %conv1208 to float, !dbg !4349
  %add1210 = fadd float %conv1206, %conv1209, !dbg !4349
  %div1211 = fdiv float %add1210, 2.000000e+00, !dbg !4349
  store float %div1211, float* %mean, align 4, !dbg !4349
  %562 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4349
  %opacity1212 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %562, i32 0, i32 3, !dbg !4349
  %563 = load i16, i16* %opacity1212, align 2, !dbg !4349
  %conv1213 = uitofp i16 %563 to float, !dbg !4349
  %opacity1214 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4349
  %564 = load i16, i16* %opacity1214, align 2, !dbg !4349
  %conv1215 = uitofp i16 %564 to float, !dbg !4349
  %sub1216 = fsub float %conv1213, %conv1215, !dbg !4349
  store float %sub1216, float* %distance, align 4, !dbg !4349
  %565 = load float, float* %mean, align 4, !dbg !4349
  %conv1217 = fpext float %565 to double, !dbg !4349
  %sub1218 = fsub double 1.966070e+05, %conv1217, !dbg !4349
  %mul1219 = fmul double 0x3EF0001000100010, %sub1218, !dbg !4349
  %566 = load float, float* %distance, align 4, !dbg !4349
  %conv1220 = fpext float %566 to double, !dbg !4349
  %mul1221 = fmul double %mul1219, %conv1220, !dbg !4349
  %567 = load float, float* %distance, align 4, !dbg !4349
  %conv1222 = fpext float %567 to double, !dbg !4349
  %mul1223 = fmul double %mul1221, %conv1222, !dbg !4349
  %568 = load float, float* %distance_squared, align 4, !dbg !4349
  %conv1224 = fpext float %568 to double, !dbg !4349
  %add1225 = fadd double %conv1224, %mul1223, !dbg !4349
  %conv1226 = fptrunc double %add1225 to float, !dbg !4349
  store float %conv1226, float* %distance_squared, align 4, !dbg !4349
  %569 = load float, float* %distance_squared, align 4, !dbg !4350
  %cmp1227 = fcmp olt float %569, 0x41A47AB860000000, !dbg !4350
  br i1 %cmp1227, label %if.then1229, label %if.end1265, !dbg !4349

if.then1229:                                      ; preds = %if.end1142
  %570 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4352
  %red1230 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %570, i32 0, i32 2, !dbg !4352
  %571 = load i16, i16* %red1230, align 2, !dbg !4352
  %conv1231 = zext i16 %571 to i32, !dbg !4352
  %conv1232 = sitofp i32 %conv1231 to double, !dbg !4352
  %mul1233 = fmul double 8.000000e+00, %conv1232, !dbg !4352
  %red1234 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4352
  %572 = load float, float* %red1234, align 8, !dbg !4352
  %conv1235 = fpext float %572 to double, !dbg !4352
  %add1236 = fadd double %conv1235, %mul1233, !dbg !4352
  %conv1237 = fptrunc double %add1236 to float, !dbg !4352
  store float %conv1237, float* %red1234, align 8, !dbg !4352
  %573 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4352
  %green1238 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %573, i32 0, i32 1, !dbg !4352
  %574 = load i16, i16* %green1238, align 2, !dbg !4352
  %conv1239 = zext i16 %574 to i32, !dbg !4352
  %conv1240 = sitofp i32 %conv1239 to double, !dbg !4352
  %mul1241 = fmul double 8.000000e+00, %conv1240, !dbg !4352
  %green1242 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4352
  %575 = load float, float* %green1242, align 4, !dbg !4352
  %conv1243 = fpext float %575 to double, !dbg !4352
  %add1244 = fadd double %conv1243, %mul1241, !dbg !4352
  %conv1245 = fptrunc double %add1244 to float, !dbg !4352
  store float %conv1245, float* %green1242, align 4, !dbg !4352
  %576 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4352
  %blue1246 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %576, i32 0, i32 0, !dbg !4352
  %577 = load i16, i16* %blue1246, align 2, !dbg !4352
  %conv1247 = zext i16 %577 to i32, !dbg !4352
  %conv1248 = sitofp i32 %conv1247 to double, !dbg !4352
  %mul1249 = fmul double 8.000000e+00, %conv1248, !dbg !4352
  %blue1250 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4352
  %578 = load float, float* %blue1250, align 8, !dbg !4352
  %conv1251 = fpext float %578 to double, !dbg !4352
  %add1252 = fadd double %conv1251, %mul1249, !dbg !4352
  %conv1253 = fptrunc double %add1252 to float, !dbg !4352
  store float %conv1253, float* %blue1250, align 8, !dbg !4352
  %579 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4352
  %opacity1254 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %579, i32 0, i32 3, !dbg !4352
  %580 = load i16, i16* %opacity1254, align 2, !dbg !4352
  %conv1255 = zext i16 %580 to i32, !dbg !4352
  %conv1256 = sitofp i32 %conv1255 to double, !dbg !4352
  %mul1257 = fmul double 8.000000e+00, %conv1256, !dbg !4352
  %opacity1258 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4352
  %581 = load float, float* %opacity1258, align 4, !dbg !4352
  %conv1259 = fpext float %581 to double, !dbg !4352
  %add1260 = fadd double %conv1259, %mul1257, !dbg !4352
  %conv1261 = fptrunc double %add1260 to float, !dbg !4352
  store float %conv1261, float* %opacity1258, align 4, !dbg !4352
  %582 = load float, float* %total_weight, align 4, !dbg !4352
  %conv1262 = fpext float %582 to double, !dbg !4352
  %add1263 = fadd double %conv1262, 8.000000e+00, !dbg !4352
  %conv1264 = fptrunc double %add1263 to float, !dbg !4352
  store float %conv1264, float* %total_weight, align 4, !dbg !4352
  br label %if.end1265, !dbg !4352

if.end1265:                                       ; preds = %if.then1229, %if.end1142
  %583 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4349
  %incdec.ptr1266 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %583, i32 1, !dbg !4349
  store %struct._PixelPacket* %incdec.ptr1266, %struct._PixelPacket** %r, align 8, !dbg !4349
  %584 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4354
  %585 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4355
  %columns1267 = getelementptr inbounds %struct._Image, %struct._Image* %585, i32 0, i32 7, !dbg !4356
  %586 = load i64, i64* %columns1267, align 8, !dbg !4356
  %add1268 = add i64 %586, 4, !dbg !4357
  %mul1269 = mul i64 2, %add1268, !dbg !4358
  %add.ptr1270 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %584, i64 %mul1269, !dbg !4359
  store %struct._PixelPacket* %add.ptr1270, %struct._PixelPacket** %r, align 8, !dbg !4360
  %587 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4361
  %red1271 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %587, i32 0, i32 2, !dbg !4361
  %588 = load i16, i16* %red1271, align 2, !dbg !4361
  %conv1272 = uitofp i16 %588 to float, !dbg !4361
  %red1273 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4361
  %589 = load i16, i16* %red1273, align 2, !dbg !4361
  %conv1274 = zext i16 %589 to i32, !dbg !4361
  %conv1275 = sitofp i32 %conv1274 to float, !dbg !4361
  %add1276 = fadd float %conv1272, %conv1275, !dbg !4361
  %div1277 = fdiv float %add1276, 2.000000e+00, !dbg !4361
  store float %div1277, float* %mean, align 4, !dbg !4361
  %590 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4361
  %red1278 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %590, i32 0, i32 2, !dbg !4361
  %591 = load i16, i16* %red1278, align 2, !dbg !4361
  %conv1279 = uitofp i16 %591 to float, !dbg !4361
  %red1280 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4361
  %592 = load i16, i16* %red1280, align 2, !dbg !4361
  %conv1281 = uitofp i16 %592 to float, !dbg !4361
  %sub1282 = fsub float %conv1279, %conv1281, !dbg !4361
  store float %sub1282, float* %distance, align 4, !dbg !4361
  %593 = load float, float* %mean, align 4, !dbg !4361
  %conv1283 = fpext float %593 to double, !dbg !4361
  %add1284 = fadd double 1.310720e+05, %conv1283, !dbg !4361
  %mul1285 = fmul double 0x3EF0001000100010, %add1284, !dbg !4361
  %594 = load float, float* %distance, align 4, !dbg !4361
  %conv1286 = fpext float %594 to double, !dbg !4361
  %mul1287 = fmul double %mul1285, %conv1286, !dbg !4361
  %595 = load float, float* %distance, align 4, !dbg !4361
  %conv1288 = fpext float %595 to double, !dbg !4361
  %mul1289 = fmul double %mul1287, %conv1288, !dbg !4361
  %conv1290 = fptrunc double %mul1289 to float, !dbg !4361
  store float %conv1290, float* %distance_squared, align 4, !dbg !4361
  %596 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4361
  %green1291 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %596, i32 0, i32 1, !dbg !4361
  %597 = load i16, i16* %green1291, align 2, !dbg !4361
  %conv1292 = uitofp i16 %597 to float, !dbg !4361
  %green1293 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4361
  %598 = load i16, i16* %green1293, align 2, !dbg !4361
  %conv1294 = zext i16 %598 to i32, !dbg !4361
  %conv1295 = sitofp i32 %conv1294 to float, !dbg !4361
  %add1296 = fadd float %conv1292, %conv1295, !dbg !4361
  %div1297 = fdiv float %add1296, 2.000000e+00, !dbg !4361
  store float %div1297, float* %mean, align 4, !dbg !4361
  %599 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4361
  %green1298 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %599, i32 0, i32 1, !dbg !4361
  %600 = load i16, i16* %green1298, align 2, !dbg !4361
  %conv1299 = uitofp i16 %600 to float, !dbg !4361
  %green1300 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4361
  %601 = load i16, i16* %green1300, align 2, !dbg !4361
  %conv1301 = uitofp i16 %601 to float, !dbg !4361
  %sub1302 = fsub float %conv1299, %conv1301, !dbg !4361
  store float %sub1302, float* %distance, align 4, !dbg !4361
  %602 = load float, float* %distance, align 4, !dbg !4361
  %conv1303 = fpext float %602 to double, !dbg !4361
  %mul1304 = fmul double 4.000000e+00, %conv1303, !dbg !4361
  %603 = load float, float* %distance, align 4, !dbg !4361
  %conv1305 = fpext float %603 to double, !dbg !4361
  %mul1306 = fmul double %mul1304, %conv1305, !dbg !4361
  %604 = load float, float* %distance_squared, align 4, !dbg !4361
  %conv1307 = fpext float %604 to double, !dbg !4361
  %add1308 = fadd double %conv1307, %mul1306, !dbg !4361
  %conv1309 = fptrunc double %add1308 to float, !dbg !4361
  store float %conv1309, float* %distance_squared, align 4, !dbg !4361
  %605 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4361
  %blue1310 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %605, i32 0, i32 0, !dbg !4361
  %606 = load i16, i16* %blue1310, align 2, !dbg !4361
  %conv1311 = uitofp i16 %606 to float, !dbg !4361
  %blue1312 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4361
  %607 = load i16, i16* %blue1312, align 2, !dbg !4361
  %conv1313 = zext i16 %607 to i32, !dbg !4361
  %conv1314 = sitofp i32 %conv1313 to float, !dbg !4361
  %add1315 = fadd float %conv1311, %conv1314, !dbg !4361
  %div1316 = fdiv float %add1315, 2.000000e+00, !dbg !4361
  store float %div1316, float* %mean, align 4, !dbg !4361
  %608 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4361
  %blue1317 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %608, i32 0, i32 0, !dbg !4361
  %609 = load i16, i16* %blue1317, align 2, !dbg !4361
  %conv1318 = uitofp i16 %609 to float, !dbg !4361
  %blue1319 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4361
  %610 = load i16, i16* %blue1319, align 2, !dbg !4361
  %conv1320 = uitofp i16 %610 to float, !dbg !4361
  %sub1321 = fsub float %conv1318, %conv1320, !dbg !4361
  store float %sub1321, float* %distance, align 4, !dbg !4361
  %611 = load float, float* %mean, align 4, !dbg !4361
  %conv1322 = fpext float %611 to double, !dbg !4361
  %sub1323 = fsub double 1.966070e+05, %conv1322, !dbg !4361
  %mul1324 = fmul double 0x3EF0001000100010, %sub1323, !dbg !4361
  %612 = load float, float* %distance, align 4, !dbg !4361
  %conv1325 = fpext float %612 to double, !dbg !4361
  %mul1326 = fmul double %mul1324, %conv1325, !dbg !4361
  %613 = load float, float* %distance, align 4, !dbg !4361
  %conv1327 = fpext float %613 to double, !dbg !4361
  %mul1328 = fmul double %mul1326, %conv1327, !dbg !4361
  %614 = load float, float* %distance_squared, align 4, !dbg !4361
  %conv1329 = fpext float %614 to double, !dbg !4361
  %add1330 = fadd double %conv1329, %mul1328, !dbg !4361
  %conv1331 = fptrunc double %add1330 to float, !dbg !4361
  store float %conv1331, float* %distance_squared, align 4, !dbg !4361
  %615 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4361
  %opacity1332 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %615, i32 0, i32 3, !dbg !4361
  %616 = load i16, i16* %opacity1332, align 2, !dbg !4361
  %conv1333 = uitofp i16 %616 to float, !dbg !4361
  %opacity1334 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4361
  %617 = load i16, i16* %opacity1334, align 2, !dbg !4361
  %conv1335 = zext i16 %617 to i32, !dbg !4361
  %conv1336 = sitofp i32 %conv1335 to float, !dbg !4361
  %add1337 = fadd float %conv1333, %conv1336, !dbg !4361
  %div1338 = fdiv float %add1337, 2.000000e+00, !dbg !4361
  store float %div1338, float* %mean, align 4, !dbg !4361
  %618 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4361
  %opacity1339 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %618, i32 0, i32 3, !dbg !4361
  %619 = load i16, i16* %opacity1339, align 2, !dbg !4361
  %conv1340 = uitofp i16 %619 to float, !dbg !4361
  %opacity1341 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4361
  %620 = load i16, i16* %opacity1341, align 2, !dbg !4361
  %conv1342 = uitofp i16 %620 to float, !dbg !4361
  %sub1343 = fsub float %conv1340, %conv1342, !dbg !4361
  store float %sub1343, float* %distance, align 4, !dbg !4361
  %621 = load float, float* %mean, align 4, !dbg !4361
  %conv1344 = fpext float %621 to double, !dbg !4361
  %sub1345 = fsub double 1.966070e+05, %conv1344, !dbg !4361
  %mul1346 = fmul double 0x3EF0001000100010, %sub1345, !dbg !4361
  %622 = load float, float* %distance, align 4, !dbg !4361
  %conv1347 = fpext float %622 to double, !dbg !4361
  %mul1348 = fmul double %mul1346, %conv1347, !dbg !4361
  %623 = load float, float* %distance, align 4, !dbg !4361
  %conv1349 = fpext float %623 to double, !dbg !4361
  %mul1350 = fmul double %mul1348, %conv1349, !dbg !4361
  %624 = load float, float* %distance_squared, align 4, !dbg !4361
  %conv1351 = fpext float %624 to double, !dbg !4361
  %add1352 = fadd double %conv1351, %mul1350, !dbg !4361
  %conv1353 = fptrunc double %add1352 to float, !dbg !4361
  store float %conv1353, float* %distance_squared, align 4, !dbg !4361
  %625 = load float, float* %distance_squared, align 4, !dbg !4362
  %cmp1354 = fcmp olt float %625, 0x41A47AB860000000, !dbg !4362
  br i1 %cmp1354, label %if.then1356, label %if.end1392, !dbg !4361

if.then1356:                                      ; preds = %if.end1265
  %626 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4364
  %red1357 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %626, i32 0, i32 2, !dbg !4364
  %627 = load i16, i16* %red1357, align 2, !dbg !4364
  %conv1358 = zext i16 %627 to i32, !dbg !4364
  %conv1359 = sitofp i32 %conv1358 to double, !dbg !4364
  %mul1360 = fmul double 1.000000e+01, %conv1359, !dbg !4364
  %red1361 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4364
  %628 = load float, float* %red1361, align 8, !dbg !4364
  %conv1362 = fpext float %628 to double, !dbg !4364
  %add1363 = fadd double %conv1362, %mul1360, !dbg !4364
  %conv1364 = fptrunc double %add1363 to float, !dbg !4364
  store float %conv1364, float* %red1361, align 8, !dbg !4364
  %629 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4364
  %green1365 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %629, i32 0, i32 1, !dbg !4364
  %630 = load i16, i16* %green1365, align 2, !dbg !4364
  %conv1366 = zext i16 %630 to i32, !dbg !4364
  %conv1367 = sitofp i32 %conv1366 to double, !dbg !4364
  %mul1368 = fmul double 1.000000e+01, %conv1367, !dbg !4364
  %green1369 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4364
  %631 = load float, float* %green1369, align 4, !dbg !4364
  %conv1370 = fpext float %631 to double, !dbg !4364
  %add1371 = fadd double %conv1370, %mul1368, !dbg !4364
  %conv1372 = fptrunc double %add1371 to float, !dbg !4364
  store float %conv1372, float* %green1369, align 4, !dbg !4364
  %632 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4364
  %blue1373 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %632, i32 0, i32 0, !dbg !4364
  %633 = load i16, i16* %blue1373, align 2, !dbg !4364
  %conv1374 = zext i16 %633 to i32, !dbg !4364
  %conv1375 = sitofp i32 %conv1374 to double, !dbg !4364
  %mul1376 = fmul double 1.000000e+01, %conv1375, !dbg !4364
  %blue1377 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4364
  %634 = load float, float* %blue1377, align 8, !dbg !4364
  %conv1378 = fpext float %634 to double, !dbg !4364
  %add1379 = fadd double %conv1378, %mul1376, !dbg !4364
  %conv1380 = fptrunc double %add1379 to float, !dbg !4364
  store float %conv1380, float* %blue1377, align 8, !dbg !4364
  %635 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4364
  %opacity1381 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %635, i32 0, i32 3, !dbg !4364
  %636 = load i16, i16* %opacity1381, align 2, !dbg !4364
  %conv1382 = zext i16 %636 to i32, !dbg !4364
  %conv1383 = sitofp i32 %conv1382 to double, !dbg !4364
  %mul1384 = fmul double 1.000000e+01, %conv1383, !dbg !4364
  %opacity1385 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4364
  %637 = load float, float* %opacity1385, align 4, !dbg !4364
  %conv1386 = fpext float %637 to double, !dbg !4364
  %add1387 = fadd double %conv1386, %mul1384, !dbg !4364
  %conv1388 = fptrunc double %add1387 to float, !dbg !4364
  store float %conv1388, float* %opacity1385, align 4, !dbg !4364
  %638 = load float, float* %total_weight, align 4, !dbg !4364
  %conv1389 = fpext float %638 to double, !dbg !4364
  %add1390 = fadd double %conv1389, 1.000000e+01, !dbg !4364
  %conv1391 = fptrunc double %add1390 to float, !dbg !4364
  store float %conv1391, float* %total_weight, align 4, !dbg !4364
  br label %if.end1392, !dbg !4364

if.end1392:                                       ; preds = %if.then1356, %if.end1265
  %639 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4361
  %incdec.ptr1393 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %639, i32 1, !dbg !4361
  store %struct._PixelPacket* %incdec.ptr1393, %struct._PixelPacket** %r, align 8, !dbg !4361
  %640 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4366
  %red1394 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %640, i32 0, i32 2, !dbg !4366
  %641 = load i16, i16* %red1394, align 2, !dbg !4366
  %conv1395 = uitofp i16 %641 to float, !dbg !4366
  %red1396 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4366
  %642 = load i16, i16* %red1396, align 2, !dbg !4366
  %conv1397 = zext i16 %642 to i32, !dbg !4366
  %conv1398 = sitofp i32 %conv1397 to float, !dbg !4366
  %add1399 = fadd float %conv1395, %conv1398, !dbg !4366
  %div1400 = fdiv float %add1399, 2.000000e+00, !dbg !4366
  store float %div1400, float* %mean, align 4, !dbg !4366
  %643 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4366
  %red1401 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %643, i32 0, i32 2, !dbg !4366
  %644 = load i16, i16* %red1401, align 2, !dbg !4366
  %conv1402 = uitofp i16 %644 to float, !dbg !4366
  %red1403 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4366
  %645 = load i16, i16* %red1403, align 2, !dbg !4366
  %conv1404 = uitofp i16 %645 to float, !dbg !4366
  %sub1405 = fsub float %conv1402, %conv1404, !dbg !4366
  store float %sub1405, float* %distance, align 4, !dbg !4366
  %646 = load float, float* %mean, align 4, !dbg !4366
  %conv1406 = fpext float %646 to double, !dbg !4366
  %add1407 = fadd double 1.310720e+05, %conv1406, !dbg !4366
  %mul1408 = fmul double 0x3EF0001000100010, %add1407, !dbg !4366
  %647 = load float, float* %distance, align 4, !dbg !4366
  %conv1409 = fpext float %647 to double, !dbg !4366
  %mul1410 = fmul double %mul1408, %conv1409, !dbg !4366
  %648 = load float, float* %distance, align 4, !dbg !4366
  %conv1411 = fpext float %648 to double, !dbg !4366
  %mul1412 = fmul double %mul1410, %conv1411, !dbg !4366
  %conv1413 = fptrunc double %mul1412 to float, !dbg !4366
  store float %conv1413, float* %distance_squared, align 4, !dbg !4366
  %649 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4366
  %green1414 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %649, i32 0, i32 1, !dbg !4366
  %650 = load i16, i16* %green1414, align 2, !dbg !4366
  %conv1415 = uitofp i16 %650 to float, !dbg !4366
  %green1416 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4366
  %651 = load i16, i16* %green1416, align 2, !dbg !4366
  %conv1417 = zext i16 %651 to i32, !dbg !4366
  %conv1418 = sitofp i32 %conv1417 to float, !dbg !4366
  %add1419 = fadd float %conv1415, %conv1418, !dbg !4366
  %div1420 = fdiv float %add1419, 2.000000e+00, !dbg !4366
  store float %div1420, float* %mean, align 4, !dbg !4366
  %652 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4366
  %green1421 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %652, i32 0, i32 1, !dbg !4366
  %653 = load i16, i16* %green1421, align 2, !dbg !4366
  %conv1422 = uitofp i16 %653 to float, !dbg !4366
  %green1423 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4366
  %654 = load i16, i16* %green1423, align 2, !dbg !4366
  %conv1424 = uitofp i16 %654 to float, !dbg !4366
  %sub1425 = fsub float %conv1422, %conv1424, !dbg !4366
  store float %sub1425, float* %distance, align 4, !dbg !4366
  %655 = load float, float* %distance, align 4, !dbg !4366
  %conv1426 = fpext float %655 to double, !dbg !4366
  %mul1427 = fmul double 4.000000e+00, %conv1426, !dbg !4366
  %656 = load float, float* %distance, align 4, !dbg !4366
  %conv1428 = fpext float %656 to double, !dbg !4366
  %mul1429 = fmul double %mul1427, %conv1428, !dbg !4366
  %657 = load float, float* %distance_squared, align 4, !dbg !4366
  %conv1430 = fpext float %657 to double, !dbg !4366
  %add1431 = fadd double %conv1430, %mul1429, !dbg !4366
  %conv1432 = fptrunc double %add1431 to float, !dbg !4366
  store float %conv1432, float* %distance_squared, align 4, !dbg !4366
  %658 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4366
  %blue1433 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %658, i32 0, i32 0, !dbg !4366
  %659 = load i16, i16* %blue1433, align 2, !dbg !4366
  %conv1434 = uitofp i16 %659 to float, !dbg !4366
  %blue1435 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4366
  %660 = load i16, i16* %blue1435, align 2, !dbg !4366
  %conv1436 = zext i16 %660 to i32, !dbg !4366
  %conv1437 = sitofp i32 %conv1436 to float, !dbg !4366
  %add1438 = fadd float %conv1434, %conv1437, !dbg !4366
  %div1439 = fdiv float %add1438, 2.000000e+00, !dbg !4366
  store float %div1439, float* %mean, align 4, !dbg !4366
  %661 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4366
  %blue1440 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %661, i32 0, i32 0, !dbg !4366
  %662 = load i16, i16* %blue1440, align 2, !dbg !4366
  %conv1441 = uitofp i16 %662 to float, !dbg !4366
  %blue1442 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4366
  %663 = load i16, i16* %blue1442, align 2, !dbg !4366
  %conv1443 = uitofp i16 %663 to float, !dbg !4366
  %sub1444 = fsub float %conv1441, %conv1443, !dbg !4366
  store float %sub1444, float* %distance, align 4, !dbg !4366
  %664 = load float, float* %mean, align 4, !dbg !4366
  %conv1445 = fpext float %664 to double, !dbg !4366
  %sub1446 = fsub double 1.966070e+05, %conv1445, !dbg !4366
  %mul1447 = fmul double 0x3EF0001000100010, %sub1446, !dbg !4366
  %665 = load float, float* %distance, align 4, !dbg !4366
  %conv1448 = fpext float %665 to double, !dbg !4366
  %mul1449 = fmul double %mul1447, %conv1448, !dbg !4366
  %666 = load float, float* %distance, align 4, !dbg !4366
  %conv1450 = fpext float %666 to double, !dbg !4366
  %mul1451 = fmul double %mul1449, %conv1450, !dbg !4366
  %667 = load float, float* %distance_squared, align 4, !dbg !4366
  %conv1452 = fpext float %667 to double, !dbg !4366
  %add1453 = fadd double %conv1452, %mul1451, !dbg !4366
  %conv1454 = fptrunc double %add1453 to float, !dbg !4366
  store float %conv1454, float* %distance_squared, align 4, !dbg !4366
  %668 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4366
  %opacity1455 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %668, i32 0, i32 3, !dbg !4366
  %669 = load i16, i16* %opacity1455, align 2, !dbg !4366
  %conv1456 = uitofp i16 %669 to float, !dbg !4366
  %opacity1457 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4366
  %670 = load i16, i16* %opacity1457, align 2, !dbg !4366
  %conv1458 = zext i16 %670 to i32, !dbg !4366
  %conv1459 = sitofp i32 %conv1458 to float, !dbg !4366
  %add1460 = fadd float %conv1456, %conv1459, !dbg !4366
  %div1461 = fdiv float %add1460, 2.000000e+00, !dbg !4366
  store float %div1461, float* %mean, align 4, !dbg !4366
  %671 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4366
  %opacity1462 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %671, i32 0, i32 3, !dbg !4366
  %672 = load i16, i16* %opacity1462, align 2, !dbg !4366
  %conv1463 = uitofp i16 %672 to float, !dbg !4366
  %opacity1464 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4366
  %673 = load i16, i16* %opacity1464, align 2, !dbg !4366
  %conv1465 = uitofp i16 %673 to float, !dbg !4366
  %sub1466 = fsub float %conv1463, %conv1465, !dbg !4366
  store float %sub1466, float* %distance, align 4, !dbg !4366
  %674 = load float, float* %mean, align 4, !dbg !4366
  %conv1467 = fpext float %674 to double, !dbg !4366
  %sub1468 = fsub double 1.966070e+05, %conv1467, !dbg !4366
  %mul1469 = fmul double 0x3EF0001000100010, %sub1468, !dbg !4366
  %675 = load float, float* %distance, align 4, !dbg !4366
  %conv1470 = fpext float %675 to double, !dbg !4366
  %mul1471 = fmul double %mul1469, %conv1470, !dbg !4366
  %676 = load float, float* %distance, align 4, !dbg !4366
  %conv1472 = fpext float %676 to double, !dbg !4366
  %mul1473 = fmul double %mul1471, %conv1472, !dbg !4366
  %677 = load float, float* %distance_squared, align 4, !dbg !4366
  %conv1474 = fpext float %677 to double, !dbg !4366
  %add1475 = fadd double %conv1474, %mul1473, !dbg !4366
  %conv1476 = fptrunc double %add1475 to float, !dbg !4366
  store float %conv1476, float* %distance_squared, align 4, !dbg !4366
  %678 = load float, float* %distance_squared, align 4, !dbg !4367
  %cmp1477 = fcmp olt float %678, 0x41A47AB860000000, !dbg !4367
  br i1 %cmp1477, label %if.then1479, label %if.end1515, !dbg !4366

if.then1479:                                      ; preds = %if.end1392
  %679 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4369
  %red1480 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %679, i32 0, i32 2, !dbg !4369
  %680 = load i16, i16* %red1480, align 2, !dbg !4369
  %conv1481 = zext i16 %680 to i32, !dbg !4369
  %conv1482 = sitofp i32 %conv1481 to double, !dbg !4369
  %mul1483 = fmul double 4.000000e+01, %conv1482, !dbg !4369
  %red1484 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4369
  %681 = load float, float* %red1484, align 8, !dbg !4369
  %conv1485 = fpext float %681 to double, !dbg !4369
  %add1486 = fadd double %conv1485, %mul1483, !dbg !4369
  %conv1487 = fptrunc double %add1486 to float, !dbg !4369
  store float %conv1487, float* %red1484, align 8, !dbg !4369
  %682 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4369
  %green1488 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %682, i32 0, i32 1, !dbg !4369
  %683 = load i16, i16* %green1488, align 2, !dbg !4369
  %conv1489 = zext i16 %683 to i32, !dbg !4369
  %conv1490 = sitofp i32 %conv1489 to double, !dbg !4369
  %mul1491 = fmul double 4.000000e+01, %conv1490, !dbg !4369
  %green1492 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4369
  %684 = load float, float* %green1492, align 4, !dbg !4369
  %conv1493 = fpext float %684 to double, !dbg !4369
  %add1494 = fadd double %conv1493, %mul1491, !dbg !4369
  %conv1495 = fptrunc double %add1494 to float, !dbg !4369
  store float %conv1495, float* %green1492, align 4, !dbg !4369
  %685 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4369
  %blue1496 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %685, i32 0, i32 0, !dbg !4369
  %686 = load i16, i16* %blue1496, align 2, !dbg !4369
  %conv1497 = zext i16 %686 to i32, !dbg !4369
  %conv1498 = sitofp i32 %conv1497 to double, !dbg !4369
  %mul1499 = fmul double 4.000000e+01, %conv1498, !dbg !4369
  %blue1500 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4369
  %687 = load float, float* %blue1500, align 8, !dbg !4369
  %conv1501 = fpext float %687 to double, !dbg !4369
  %add1502 = fadd double %conv1501, %mul1499, !dbg !4369
  %conv1503 = fptrunc double %add1502 to float, !dbg !4369
  store float %conv1503, float* %blue1500, align 8, !dbg !4369
  %688 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4369
  %opacity1504 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %688, i32 0, i32 3, !dbg !4369
  %689 = load i16, i16* %opacity1504, align 2, !dbg !4369
  %conv1505 = zext i16 %689 to i32, !dbg !4369
  %conv1506 = sitofp i32 %conv1505 to double, !dbg !4369
  %mul1507 = fmul double 4.000000e+01, %conv1506, !dbg !4369
  %opacity1508 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4369
  %690 = load float, float* %opacity1508, align 4, !dbg !4369
  %conv1509 = fpext float %690 to double, !dbg !4369
  %add1510 = fadd double %conv1509, %mul1507, !dbg !4369
  %conv1511 = fptrunc double %add1510 to float, !dbg !4369
  store float %conv1511, float* %opacity1508, align 4, !dbg !4369
  %691 = load float, float* %total_weight, align 4, !dbg !4369
  %conv1512 = fpext float %691 to double, !dbg !4369
  %add1513 = fadd double %conv1512, 4.000000e+01, !dbg !4369
  %conv1514 = fptrunc double %add1513 to float, !dbg !4369
  store float %conv1514, float* %total_weight, align 4, !dbg !4369
  br label %if.end1515, !dbg !4369

if.end1515:                                       ; preds = %if.then1479, %if.end1392
  %692 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4366
  %incdec.ptr1516 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %692, i32 1, !dbg !4366
  store %struct._PixelPacket* %incdec.ptr1516, %struct._PixelPacket** %r, align 8, !dbg !4366
  %693 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4371
  %red1517 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %693, i32 0, i32 2, !dbg !4371
  %694 = load i16, i16* %red1517, align 2, !dbg !4371
  %conv1518 = uitofp i16 %694 to float, !dbg !4371
  %red1519 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4371
  %695 = load i16, i16* %red1519, align 2, !dbg !4371
  %conv1520 = zext i16 %695 to i32, !dbg !4371
  %conv1521 = sitofp i32 %conv1520 to float, !dbg !4371
  %add1522 = fadd float %conv1518, %conv1521, !dbg !4371
  %div1523 = fdiv float %add1522, 2.000000e+00, !dbg !4371
  store float %div1523, float* %mean, align 4, !dbg !4371
  %696 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4371
  %red1524 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %696, i32 0, i32 2, !dbg !4371
  %697 = load i16, i16* %red1524, align 2, !dbg !4371
  %conv1525 = uitofp i16 %697 to float, !dbg !4371
  %red1526 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4371
  %698 = load i16, i16* %red1526, align 2, !dbg !4371
  %conv1527 = uitofp i16 %698 to float, !dbg !4371
  %sub1528 = fsub float %conv1525, %conv1527, !dbg !4371
  store float %sub1528, float* %distance, align 4, !dbg !4371
  %699 = load float, float* %mean, align 4, !dbg !4371
  %conv1529 = fpext float %699 to double, !dbg !4371
  %add1530 = fadd double 1.310720e+05, %conv1529, !dbg !4371
  %mul1531 = fmul double 0x3EF0001000100010, %add1530, !dbg !4371
  %700 = load float, float* %distance, align 4, !dbg !4371
  %conv1532 = fpext float %700 to double, !dbg !4371
  %mul1533 = fmul double %mul1531, %conv1532, !dbg !4371
  %701 = load float, float* %distance, align 4, !dbg !4371
  %conv1534 = fpext float %701 to double, !dbg !4371
  %mul1535 = fmul double %mul1533, %conv1534, !dbg !4371
  %conv1536 = fptrunc double %mul1535 to float, !dbg !4371
  store float %conv1536, float* %distance_squared, align 4, !dbg !4371
  %702 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4371
  %green1537 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %702, i32 0, i32 1, !dbg !4371
  %703 = load i16, i16* %green1537, align 2, !dbg !4371
  %conv1538 = uitofp i16 %703 to float, !dbg !4371
  %green1539 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4371
  %704 = load i16, i16* %green1539, align 2, !dbg !4371
  %conv1540 = zext i16 %704 to i32, !dbg !4371
  %conv1541 = sitofp i32 %conv1540 to float, !dbg !4371
  %add1542 = fadd float %conv1538, %conv1541, !dbg !4371
  %div1543 = fdiv float %add1542, 2.000000e+00, !dbg !4371
  store float %div1543, float* %mean, align 4, !dbg !4371
  %705 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4371
  %green1544 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %705, i32 0, i32 1, !dbg !4371
  %706 = load i16, i16* %green1544, align 2, !dbg !4371
  %conv1545 = uitofp i16 %706 to float, !dbg !4371
  %green1546 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4371
  %707 = load i16, i16* %green1546, align 2, !dbg !4371
  %conv1547 = uitofp i16 %707 to float, !dbg !4371
  %sub1548 = fsub float %conv1545, %conv1547, !dbg !4371
  store float %sub1548, float* %distance, align 4, !dbg !4371
  %708 = load float, float* %distance, align 4, !dbg !4371
  %conv1549 = fpext float %708 to double, !dbg !4371
  %mul1550 = fmul double 4.000000e+00, %conv1549, !dbg !4371
  %709 = load float, float* %distance, align 4, !dbg !4371
  %conv1551 = fpext float %709 to double, !dbg !4371
  %mul1552 = fmul double %mul1550, %conv1551, !dbg !4371
  %710 = load float, float* %distance_squared, align 4, !dbg !4371
  %conv1553 = fpext float %710 to double, !dbg !4371
  %add1554 = fadd double %conv1553, %mul1552, !dbg !4371
  %conv1555 = fptrunc double %add1554 to float, !dbg !4371
  store float %conv1555, float* %distance_squared, align 4, !dbg !4371
  %711 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4371
  %blue1556 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %711, i32 0, i32 0, !dbg !4371
  %712 = load i16, i16* %blue1556, align 2, !dbg !4371
  %conv1557 = uitofp i16 %712 to float, !dbg !4371
  %blue1558 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4371
  %713 = load i16, i16* %blue1558, align 2, !dbg !4371
  %conv1559 = zext i16 %713 to i32, !dbg !4371
  %conv1560 = sitofp i32 %conv1559 to float, !dbg !4371
  %add1561 = fadd float %conv1557, %conv1560, !dbg !4371
  %div1562 = fdiv float %add1561, 2.000000e+00, !dbg !4371
  store float %div1562, float* %mean, align 4, !dbg !4371
  %714 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4371
  %blue1563 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %714, i32 0, i32 0, !dbg !4371
  %715 = load i16, i16* %blue1563, align 2, !dbg !4371
  %conv1564 = uitofp i16 %715 to float, !dbg !4371
  %blue1565 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4371
  %716 = load i16, i16* %blue1565, align 2, !dbg !4371
  %conv1566 = uitofp i16 %716 to float, !dbg !4371
  %sub1567 = fsub float %conv1564, %conv1566, !dbg !4371
  store float %sub1567, float* %distance, align 4, !dbg !4371
  %717 = load float, float* %mean, align 4, !dbg !4371
  %conv1568 = fpext float %717 to double, !dbg !4371
  %sub1569 = fsub double 1.966070e+05, %conv1568, !dbg !4371
  %mul1570 = fmul double 0x3EF0001000100010, %sub1569, !dbg !4371
  %718 = load float, float* %distance, align 4, !dbg !4371
  %conv1571 = fpext float %718 to double, !dbg !4371
  %mul1572 = fmul double %mul1570, %conv1571, !dbg !4371
  %719 = load float, float* %distance, align 4, !dbg !4371
  %conv1573 = fpext float %719 to double, !dbg !4371
  %mul1574 = fmul double %mul1572, %conv1573, !dbg !4371
  %720 = load float, float* %distance_squared, align 4, !dbg !4371
  %conv1575 = fpext float %720 to double, !dbg !4371
  %add1576 = fadd double %conv1575, %mul1574, !dbg !4371
  %conv1577 = fptrunc double %add1576 to float, !dbg !4371
  store float %conv1577, float* %distance_squared, align 4, !dbg !4371
  %721 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4371
  %opacity1578 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %721, i32 0, i32 3, !dbg !4371
  %722 = load i16, i16* %opacity1578, align 2, !dbg !4371
  %conv1579 = uitofp i16 %722 to float, !dbg !4371
  %opacity1580 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4371
  %723 = load i16, i16* %opacity1580, align 2, !dbg !4371
  %conv1581 = zext i16 %723 to i32, !dbg !4371
  %conv1582 = sitofp i32 %conv1581 to float, !dbg !4371
  %add1583 = fadd float %conv1579, %conv1582, !dbg !4371
  %div1584 = fdiv float %add1583, 2.000000e+00, !dbg !4371
  store float %div1584, float* %mean, align 4, !dbg !4371
  %724 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4371
  %opacity1585 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %724, i32 0, i32 3, !dbg !4371
  %725 = load i16, i16* %opacity1585, align 2, !dbg !4371
  %conv1586 = uitofp i16 %725 to float, !dbg !4371
  %opacity1587 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4371
  %726 = load i16, i16* %opacity1587, align 2, !dbg !4371
  %conv1588 = uitofp i16 %726 to float, !dbg !4371
  %sub1589 = fsub float %conv1586, %conv1588, !dbg !4371
  store float %sub1589, float* %distance, align 4, !dbg !4371
  %727 = load float, float* %mean, align 4, !dbg !4371
  %conv1590 = fpext float %727 to double, !dbg !4371
  %sub1591 = fsub double 1.966070e+05, %conv1590, !dbg !4371
  %mul1592 = fmul double 0x3EF0001000100010, %sub1591, !dbg !4371
  %728 = load float, float* %distance, align 4, !dbg !4371
  %conv1593 = fpext float %728 to double, !dbg !4371
  %mul1594 = fmul double %mul1592, %conv1593, !dbg !4371
  %729 = load float, float* %distance, align 4, !dbg !4371
  %conv1595 = fpext float %729 to double, !dbg !4371
  %mul1596 = fmul double %mul1594, %conv1595, !dbg !4371
  %730 = load float, float* %distance_squared, align 4, !dbg !4371
  %conv1597 = fpext float %730 to double, !dbg !4371
  %add1598 = fadd double %conv1597, %mul1596, !dbg !4371
  %conv1599 = fptrunc double %add1598 to float, !dbg !4371
  store float %conv1599, float* %distance_squared, align 4, !dbg !4371
  %731 = load float, float* %distance_squared, align 4, !dbg !4372
  %cmp1600 = fcmp olt float %731, 0x41A47AB860000000, !dbg !4372
  br i1 %cmp1600, label %if.then1602, label %if.end1638, !dbg !4371

if.then1602:                                      ; preds = %if.end1515
  %732 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4374
  %red1603 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %732, i32 0, i32 2, !dbg !4374
  %733 = load i16, i16* %red1603, align 2, !dbg !4374
  %conv1604 = zext i16 %733 to i32, !dbg !4374
  %conv1605 = sitofp i32 %conv1604 to double, !dbg !4374
  %mul1606 = fmul double 8.000000e+01, %conv1605, !dbg !4374
  %red1607 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4374
  %734 = load float, float* %red1607, align 8, !dbg !4374
  %conv1608 = fpext float %734 to double, !dbg !4374
  %add1609 = fadd double %conv1608, %mul1606, !dbg !4374
  %conv1610 = fptrunc double %add1609 to float, !dbg !4374
  store float %conv1610, float* %red1607, align 8, !dbg !4374
  %735 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4374
  %green1611 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %735, i32 0, i32 1, !dbg !4374
  %736 = load i16, i16* %green1611, align 2, !dbg !4374
  %conv1612 = zext i16 %736 to i32, !dbg !4374
  %conv1613 = sitofp i32 %conv1612 to double, !dbg !4374
  %mul1614 = fmul double 8.000000e+01, %conv1613, !dbg !4374
  %green1615 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4374
  %737 = load float, float* %green1615, align 4, !dbg !4374
  %conv1616 = fpext float %737 to double, !dbg !4374
  %add1617 = fadd double %conv1616, %mul1614, !dbg !4374
  %conv1618 = fptrunc double %add1617 to float, !dbg !4374
  store float %conv1618, float* %green1615, align 4, !dbg !4374
  %738 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4374
  %blue1619 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %738, i32 0, i32 0, !dbg !4374
  %739 = load i16, i16* %blue1619, align 2, !dbg !4374
  %conv1620 = zext i16 %739 to i32, !dbg !4374
  %conv1621 = sitofp i32 %conv1620 to double, !dbg !4374
  %mul1622 = fmul double 8.000000e+01, %conv1621, !dbg !4374
  %blue1623 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4374
  %740 = load float, float* %blue1623, align 8, !dbg !4374
  %conv1624 = fpext float %740 to double, !dbg !4374
  %add1625 = fadd double %conv1624, %mul1622, !dbg !4374
  %conv1626 = fptrunc double %add1625 to float, !dbg !4374
  store float %conv1626, float* %blue1623, align 8, !dbg !4374
  %741 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4374
  %opacity1627 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %741, i32 0, i32 3, !dbg !4374
  %742 = load i16, i16* %opacity1627, align 2, !dbg !4374
  %conv1628 = zext i16 %742 to i32, !dbg !4374
  %conv1629 = sitofp i32 %conv1628 to double, !dbg !4374
  %mul1630 = fmul double 8.000000e+01, %conv1629, !dbg !4374
  %opacity1631 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4374
  %743 = load float, float* %opacity1631, align 4, !dbg !4374
  %conv1632 = fpext float %743 to double, !dbg !4374
  %add1633 = fadd double %conv1632, %mul1630, !dbg !4374
  %conv1634 = fptrunc double %add1633 to float, !dbg !4374
  store float %conv1634, float* %opacity1631, align 4, !dbg !4374
  %744 = load float, float* %total_weight, align 4, !dbg !4374
  %conv1635 = fpext float %744 to double, !dbg !4374
  %add1636 = fadd double %conv1635, 8.000000e+01, !dbg !4374
  %conv1637 = fptrunc double %add1636 to float, !dbg !4374
  store float %conv1637, float* %total_weight, align 4, !dbg !4374
  br label %if.end1638, !dbg !4374

if.end1638:                                       ; preds = %if.then1602, %if.end1515
  %745 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4371
  %incdec.ptr1639 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %745, i32 1, !dbg !4371
  store %struct._PixelPacket* %incdec.ptr1639, %struct._PixelPacket** %r, align 8, !dbg !4371
  %746 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4376
  %red1640 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %746, i32 0, i32 2, !dbg !4376
  %747 = load i16, i16* %red1640, align 2, !dbg !4376
  %conv1641 = uitofp i16 %747 to float, !dbg !4376
  %red1642 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4376
  %748 = load i16, i16* %red1642, align 2, !dbg !4376
  %conv1643 = zext i16 %748 to i32, !dbg !4376
  %conv1644 = sitofp i32 %conv1643 to float, !dbg !4376
  %add1645 = fadd float %conv1641, %conv1644, !dbg !4376
  %div1646 = fdiv float %add1645, 2.000000e+00, !dbg !4376
  store float %div1646, float* %mean, align 4, !dbg !4376
  %749 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4376
  %red1647 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %749, i32 0, i32 2, !dbg !4376
  %750 = load i16, i16* %red1647, align 2, !dbg !4376
  %conv1648 = uitofp i16 %750 to float, !dbg !4376
  %red1649 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4376
  %751 = load i16, i16* %red1649, align 2, !dbg !4376
  %conv1650 = uitofp i16 %751 to float, !dbg !4376
  %sub1651 = fsub float %conv1648, %conv1650, !dbg !4376
  store float %sub1651, float* %distance, align 4, !dbg !4376
  %752 = load float, float* %mean, align 4, !dbg !4376
  %conv1652 = fpext float %752 to double, !dbg !4376
  %add1653 = fadd double 1.310720e+05, %conv1652, !dbg !4376
  %mul1654 = fmul double 0x3EF0001000100010, %add1653, !dbg !4376
  %753 = load float, float* %distance, align 4, !dbg !4376
  %conv1655 = fpext float %753 to double, !dbg !4376
  %mul1656 = fmul double %mul1654, %conv1655, !dbg !4376
  %754 = load float, float* %distance, align 4, !dbg !4376
  %conv1657 = fpext float %754 to double, !dbg !4376
  %mul1658 = fmul double %mul1656, %conv1657, !dbg !4376
  %conv1659 = fptrunc double %mul1658 to float, !dbg !4376
  store float %conv1659, float* %distance_squared, align 4, !dbg !4376
  %755 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4376
  %green1660 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %755, i32 0, i32 1, !dbg !4376
  %756 = load i16, i16* %green1660, align 2, !dbg !4376
  %conv1661 = uitofp i16 %756 to float, !dbg !4376
  %green1662 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4376
  %757 = load i16, i16* %green1662, align 2, !dbg !4376
  %conv1663 = zext i16 %757 to i32, !dbg !4376
  %conv1664 = sitofp i32 %conv1663 to float, !dbg !4376
  %add1665 = fadd float %conv1661, %conv1664, !dbg !4376
  %div1666 = fdiv float %add1665, 2.000000e+00, !dbg !4376
  store float %div1666, float* %mean, align 4, !dbg !4376
  %758 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4376
  %green1667 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %758, i32 0, i32 1, !dbg !4376
  %759 = load i16, i16* %green1667, align 2, !dbg !4376
  %conv1668 = uitofp i16 %759 to float, !dbg !4376
  %green1669 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4376
  %760 = load i16, i16* %green1669, align 2, !dbg !4376
  %conv1670 = uitofp i16 %760 to float, !dbg !4376
  %sub1671 = fsub float %conv1668, %conv1670, !dbg !4376
  store float %sub1671, float* %distance, align 4, !dbg !4376
  %761 = load float, float* %distance, align 4, !dbg !4376
  %conv1672 = fpext float %761 to double, !dbg !4376
  %mul1673 = fmul double 4.000000e+00, %conv1672, !dbg !4376
  %762 = load float, float* %distance, align 4, !dbg !4376
  %conv1674 = fpext float %762 to double, !dbg !4376
  %mul1675 = fmul double %mul1673, %conv1674, !dbg !4376
  %763 = load float, float* %distance_squared, align 4, !dbg !4376
  %conv1676 = fpext float %763 to double, !dbg !4376
  %add1677 = fadd double %conv1676, %mul1675, !dbg !4376
  %conv1678 = fptrunc double %add1677 to float, !dbg !4376
  store float %conv1678, float* %distance_squared, align 4, !dbg !4376
  %764 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4376
  %blue1679 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %764, i32 0, i32 0, !dbg !4376
  %765 = load i16, i16* %blue1679, align 2, !dbg !4376
  %conv1680 = uitofp i16 %765 to float, !dbg !4376
  %blue1681 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4376
  %766 = load i16, i16* %blue1681, align 2, !dbg !4376
  %conv1682 = zext i16 %766 to i32, !dbg !4376
  %conv1683 = sitofp i32 %conv1682 to float, !dbg !4376
  %add1684 = fadd float %conv1680, %conv1683, !dbg !4376
  %div1685 = fdiv float %add1684, 2.000000e+00, !dbg !4376
  store float %div1685, float* %mean, align 4, !dbg !4376
  %767 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4376
  %blue1686 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %767, i32 0, i32 0, !dbg !4376
  %768 = load i16, i16* %blue1686, align 2, !dbg !4376
  %conv1687 = uitofp i16 %768 to float, !dbg !4376
  %blue1688 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4376
  %769 = load i16, i16* %blue1688, align 2, !dbg !4376
  %conv1689 = uitofp i16 %769 to float, !dbg !4376
  %sub1690 = fsub float %conv1687, %conv1689, !dbg !4376
  store float %sub1690, float* %distance, align 4, !dbg !4376
  %770 = load float, float* %mean, align 4, !dbg !4376
  %conv1691 = fpext float %770 to double, !dbg !4376
  %sub1692 = fsub double 1.966070e+05, %conv1691, !dbg !4376
  %mul1693 = fmul double 0x3EF0001000100010, %sub1692, !dbg !4376
  %771 = load float, float* %distance, align 4, !dbg !4376
  %conv1694 = fpext float %771 to double, !dbg !4376
  %mul1695 = fmul double %mul1693, %conv1694, !dbg !4376
  %772 = load float, float* %distance, align 4, !dbg !4376
  %conv1696 = fpext float %772 to double, !dbg !4376
  %mul1697 = fmul double %mul1695, %conv1696, !dbg !4376
  %773 = load float, float* %distance_squared, align 4, !dbg !4376
  %conv1698 = fpext float %773 to double, !dbg !4376
  %add1699 = fadd double %conv1698, %mul1697, !dbg !4376
  %conv1700 = fptrunc double %add1699 to float, !dbg !4376
  store float %conv1700, float* %distance_squared, align 4, !dbg !4376
  %774 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4376
  %opacity1701 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %774, i32 0, i32 3, !dbg !4376
  %775 = load i16, i16* %opacity1701, align 2, !dbg !4376
  %conv1702 = uitofp i16 %775 to float, !dbg !4376
  %opacity1703 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4376
  %776 = load i16, i16* %opacity1703, align 2, !dbg !4376
  %conv1704 = zext i16 %776 to i32, !dbg !4376
  %conv1705 = sitofp i32 %conv1704 to float, !dbg !4376
  %add1706 = fadd float %conv1702, %conv1705, !dbg !4376
  %div1707 = fdiv float %add1706, 2.000000e+00, !dbg !4376
  store float %div1707, float* %mean, align 4, !dbg !4376
  %777 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4376
  %opacity1708 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %777, i32 0, i32 3, !dbg !4376
  %778 = load i16, i16* %opacity1708, align 2, !dbg !4376
  %conv1709 = uitofp i16 %778 to float, !dbg !4376
  %opacity1710 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4376
  %779 = load i16, i16* %opacity1710, align 2, !dbg !4376
  %conv1711 = uitofp i16 %779 to float, !dbg !4376
  %sub1712 = fsub float %conv1709, %conv1711, !dbg !4376
  store float %sub1712, float* %distance, align 4, !dbg !4376
  %780 = load float, float* %mean, align 4, !dbg !4376
  %conv1713 = fpext float %780 to double, !dbg !4376
  %sub1714 = fsub double 1.966070e+05, %conv1713, !dbg !4376
  %mul1715 = fmul double 0x3EF0001000100010, %sub1714, !dbg !4376
  %781 = load float, float* %distance, align 4, !dbg !4376
  %conv1716 = fpext float %781 to double, !dbg !4376
  %mul1717 = fmul double %mul1715, %conv1716, !dbg !4376
  %782 = load float, float* %distance, align 4, !dbg !4376
  %conv1718 = fpext float %782 to double, !dbg !4376
  %mul1719 = fmul double %mul1717, %conv1718, !dbg !4376
  %783 = load float, float* %distance_squared, align 4, !dbg !4376
  %conv1720 = fpext float %783 to double, !dbg !4376
  %add1721 = fadd double %conv1720, %mul1719, !dbg !4376
  %conv1722 = fptrunc double %add1721 to float, !dbg !4376
  store float %conv1722, float* %distance_squared, align 4, !dbg !4376
  %784 = load float, float* %distance_squared, align 4, !dbg !4377
  %cmp1723 = fcmp olt float %784, 0x41A47AB860000000, !dbg !4377
  br i1 %cmp1723, label %if.then1725, label %if.end1761, !dbg !4376

if.then1725:                                      ; preds = %if.end1638
  %785 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4379
  %red1726 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %785, i32 0, i32 2, !dbg !4379
  %786 = load i16, i16* %red1726, align 2, !dbg !4379
  %conv1727 = zext i16 %786 to i32, !dbg !4379
  %conv1728 = sitofp i32 %conv1727 to double, !dbg !4379
  %mul1729 = fmul double 4.000000e+01, %conv1728, !dbg !4379
  %red1730 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4379
  %787 = load float, float* %red1730, align 8, !dbg !4379
  %conv1731 = fpext float %787 to double, !dbg !4379
  %add1732 = fadd double %conv1731, %mul1729, !dbg !4379
  %conv1733 = fptrunc double %add1732 to float, !dbg !4379
  store float %conv1733, float* %red1730, align 8, !dbg !4379
  %788 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4379
  %green1734 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %788, i32 0, i32 1, !dbg !4379
  %789 = load i16, i16* %green1734, align 2, !dbg !4379
  %conv1735 = zext i16 %789 to i32, !dbg !4379
  %conv1736 = sitofp i32 %conv1735 to double, !dbg !4379
  %mul1737 = fmul double 4.000000e+01, %conv1736, !dbg !4379
  %green1738 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4379
  %790 = load float, float* %green1738, align 4, !dbg !4379
  %conv1739 = fpext float %790 to double, !dbg !4379
  %add1740 = fadd double %conv1739, %mul1737, !dbg !4379
  %conv1741 = fptrunc double %add1740 to float, !dbg !4379
  store float %conv1741, float* %green1738, align 4, !dbg !4379
  %791 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4379
  %blue1742 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %791, i32 0, i32 0, !dbg !4379
  %792 = load i16, i16* %blue1742, align 2, !dbg !4379
  %conv1743 = zext i16 %792 to i32, !dbg !4379
  %conv1744 = sitofp i32 %conv1743 to double, !dbg !4379
  %mul1745 = fmul double 4.000000e+01, %conv1744, !dbg !4379
  %blue1746 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4379
  %793 = load float, float* %blue1746, align 8, !dbg !4379
  %conv1747 = fpext float %793 to double, !dbg !4379
  %add1748 = fadd double %conv1747, %mul1745, !dbg !4379
  %conv1749 = fptrunc double %add1748 to float, !dbg !4379
  store float %conv1749, float* %blue1746, align 8, !dbg !4379
  %794 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4379
  %opacity1750 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %794, i32 0, i32 3, !dbg !4379
  %795 = load i16, i16* %opacity1750, align 2, !dbg !4379
  %conv1751 = zext i16 %795 to i32, !dbg !4379
  %conv1752 = sitofp i32 %conv1751 to double, !dbg !4379
  %mul1753 = fmul double 4.000000e+01, %conv1752, !dbg !4379
  %opacity1754 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4379
  %796 = load float, float* %opacity1754, align 4, !dbg !4379
  %conv1755 = fpext float %796 to double, !dbg !4379
  %add1756 = fadd double %conv1755, %mul1753, !dbg !4379
  %conv1757 = fptrunc double %add1756 to float, !dbg !4379
  store float %conv1757, float* %opacity1754, align 4, !dbg !4379
  %797 = load float, float* %total_weight, align 4, !dbg !4379
  %conv1758 = fpext float %797 to double, !dbg !4379
  %add1759 = fadd double %conv1758, 4.000000e+01, !dbg !4379
  %conv1760 = fptrunc double %add1759 to float, !dbg !4379
  store float %conv1760, float* %total_weight, align 4, !dbg !4379
  br label %if.end1761, !dbg !4379

if.end1761:                                       ; preds = %if.then1725, %if.end1638
  %798 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4376
  %incdec.ptr1762 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %798, i32 1, !dbg !4376
  store %struct._PixelPacket* %incdec.ptr1762, %struct._PixelPacket** %r, align 8, !dbg !4376
  %799 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4381
  %red1763 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %799, i32 0, i32 2, !dbg !4381
  %800 = load i16, i16* %red1763, align 2, !dbg !4381
  %conv1764 = uitofp i16 %800 to float, !dbg !4381
  %red1765 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4381
  %801 = load i16, i16* %red1765, align 2, !dbg !4381
  %conv1766 = zext i16 %801 to i32, !dbg !4381
  %conv1767 = sitofp i32 %conv1766 to float, !dbg !4381
  %add1768 = fadd float %conv1764, %conv1767, !dbg !4381
  %div1769 = fdiv float %add1768, 2.000000e+00, !dbg !4381
  store float %div1769, float* %mean, align 4, !dbg !4381
  %802 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4381
  %red1770 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %802, i32 0, i32 2, !dbg !4381
  %803 = load i16, i16* %red1770, align 2, !dbg !4381
  %conv1771 = uitofp i16 %803 to float, !dbg !4381
  %red1772 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4381
  %804 = load i16, i16* %red1772, align 2, !dbg !4381
  %conv1773 = uitofp i16 %804 to float, !dbg !4381
  %sub1774 = fsub float %conv1771, %conv1773, !dbg !4381
  store float %sub1774, float* %distance, align 4, !dbg !4381
  %805 = load float, float* %mean, align 4, !dbg !4381
  %conv1775 = fpext float %805 to double, !dbg !4381
  %add1776 = fadd double 1.310720e+05, %conv1775, !dbg !4381
  %mul1777 = fmul double 0x3EF0001000100010, %add1776, !dbg !4381
  %806 = load float, float* %distance, align 4, !dbg !4381
  %conv1778 = fpext float %806 to double, !dbg !4381
  %mul1779 = fmul double %mul1777, %conv1778, !dbg !4381
  %807 = load float, float* %distance, align 4, !dbg !4381
  %conv1780 = fpext float %807 to double, !dbg !4381
  %mul1781 = fmul double %mul1779, %conv1780, !dbg !4381
  %conv1782 = fptrunc double %mul1781 to float, !dbg !4381
  store float %conv1782, float* %distance_squared, align 4, !dbg !4381
  %808 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4381
  %green1783 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %808, i32 0, i32 1, !dbg !4381
  %809 = load i16, i16* %green1783, align 2, !dbg !4381
  %conv1784 = uitofp i16 %809 to float, !dbg !4381
  %green1785 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4381
  %810 = load i16, i16* %green1785, align 2, !dbg !4381
  %conv1786 = zext i16 %810 to i32, !dbg !4381
  %conv1787 = sitofp i32 %conv1786 to float, !dbg !4381
  %add1788 = fadd float %conv1784, %conv1787, !dbg !4381
  %div1789 = fdiv float %add1788, 2.000000e+00, !dbg !4381
  store float %div1789, float* %mean, align 4, !dbg !4381
  %811 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4381
  %green1790 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %811, i32 0, i32 1, !dbg !4381
  %812 = load i16, i16* %green1790, align 2, !dbg !4381
  %conv1791 = uitofp i16 %812 to float, !dbg !4381
  %green1792 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4381
  %813 = load i16, i16* %green1792, align 2, !dbg !4381
  %conv1793 = uitofp i16 %813 to float, !dbg !4381
  %sub1794 = fsub float %conv1791, %conv1793, !dbg !4381
  store float %sub1794, float* %distance, align 4, !dbg !4381
  %814 = load float, float* %distance, align 4, !dbg !4381
  %conv1795 = fpext float %814 to double, !dbg !4381
  %mul1796 = fmul double 4.000000e+00, %conv1795, !dbg !4381
  %815 = load float, float* %distance, align 4, !dbg !4381
  %conv1797 = fpext float %815 to double, !dbg !4381
  %mul1798 = fmul double %mul1796, %conv1797, !dbg !4381
  %816 = load float, float* %distance_squared, align 4, !dbg !4381
  %conv1799 = fpext float %816 to double, !dbg !4381
  %add1800 = fadd double %conv1799, %mul1798, !dbg !4381
  %conv1801 = fptrunc double %add1800 to float, !dbg !4381
  store float %conv1801, float* %distance_squared, align 4, !dbg !4381
  %817 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4381
  %blue1802 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %817, i32 0, i32 0, !dbg !4381
  %818 = load i16, i16* %blue1802, align 2, !dbg !4381
  %conv1803 = uitofp i16 %818 to float, !dbg !4381
  %blue1804 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4381
  %819 = load i16, i16* %blue1804, align 2, !dbg !4381
  %conv1805 = zext i16 %819 to i32, !dbg !4381
  %conv1806 = sitofp i32 %conv1805 to float, !dbg !4381
  %add1807 = fadd float %conv1803, %conv1806, !dbg !4381
  %div1808 = fdiv float %add1807, 2.000000e+00, !dbg !4381
  store float %div1808, float* %mean, align 4, !dbg !4381
  %820 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4381
  %blue1809 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %820, i32 0, i32 0, !dbg !4381
  %821 = load i16, i16* %blue1809, align 2, !dbg !4381
  %conv1810 = uitofp i16 %821 to float, !dbg !4381
  %blue1811 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4381
  %822 = load i16, i16* %blue1811, align 2, !dbg !4381
  %conv1812 = uitofp i16 %822 to float, !dbg !4381
  %sub1813 = fsub float %conv1810, %conv1812, !dbg !4381
  store float %sub1813, float* %distance, align 4, !dbg !4381
  %823 = load float, float* %mean, align 4, !dbg !4381
  %conv1814 = fpext float %823 to double, !dbg !4381
  %sub1815 = fsub double 1.966070e+05, %conv1814, !dbg !4381
  %mul1816 = fmul double 0x3EF0001000100010, %sub1815, !dbg !4381
  %824 = load float, float* %distance, align 4, !dbg !4381
  %conv1817 = fpext float %824 to double, !dbg !4381
  %mul1818 = fmul double %mul1816, %conv1817, !dbg !4381
  %825 = load float, float* %distance, align 4, !dbg !4381
  %conv1819 = fpext float %825 to double, !dbg !4381
  %mul1820 = fmul double %mul1818, %conv1819, !dbg !4381
  %826 = load float, float* %distance_squared, align 4, !dbg !4381
  %conv1821 = fpext float %826 to double, !dbg !4381
  %add1822 = fadd double %conv1821, %mul1820, !dbg !4381
  %conv1823 = fptrunc double %add1822 to float, !dbg !4381
  store float %conv1823, float* %distance_squared, align 4, !dbg !4381
  %827 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4381
  %opacity1824 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %827, i32 0, i32 3, !dbg !4381
  %828 = load i16, i16* %opacity1824, align 2, !dbg !4381
  %conv1825 = uitofp i16 %828 to float, !dbg !4381
  %opacity1826 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4381
  %829 = load i16, i16* %opacity1826, align 2, !dbg !4381
  %conv1827 = zext i16 %829 to i32, !dbg !4381
  %conv1828 = sitofp i32 %conv1827 to float, !dbg !4381
  %add1829 = fadd float %conv1825, %conv1828, !dbg !4381
  %div1830 = fdiv float %add1829, 2.000000e+00, !dbg !4381
  store float %div1830, float* %mean, align 4, !dbg !4381
  %830 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4381
  %opacity1831 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %830, i32 0, i32 3, !dbg !4381
  %831 = load i16, i16* %opacity1831, align 2, !dbg !4381
  %conv1832 = uitofp i16 %831 to float, !dbg !4381
  %opacity1833 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4381
  %832 = load i16, i16* %opacity1833, align 2, !dbg !4381
  %conv1834 = uitofp i16 %832 to float, !dbg !4381
  %sub1835 = fsub float %conv1832, %conv1834, !dbg !4381
  store float %sub1835, float* %distance, align 4, !dbg !4381
  %833 = load float, float* %mean, align 4, !dbg !4381
  %conv1836 = fpext float %833 to double, !dbg !4381
  %sub1837 = fsub double 1.966070e+05, %conv1836, !dbg !4381
  %mul1838 = fmul double 0x3EF0001000100010, %sub1837, !dbg !4381
  %834 = load float, float* %distance, align 4, !dbg !4381
  %conv1839 = fpext float %834 to double, !dbg !4381
  %mul1840 = fmul double %mul1838, %conv1839, !dbg !4381
  %835 = load float, float* %distance, align 4, !dbg !4381
  %conv1841 = fpext float %835 to double, !dbg !4381
  %mul1842 = fmul double %mul1840, %conv1841, !dbg !4381
  %836 = load float, float* %distance_squared, align 4, !dbg !4381
  %conv1843 = fpext float %836 to double, !dbg !4381
  %add1844 = fadd double %conv1843, %mul1842, !dbg !4381
  %conv1845 = fptrunc double %add1844 to float, !dbg !4381
  store float %conv1845, float* %distance_squared, align 4, !dbg !4381
  %837 = load float, float* %distance_squared, align 4, !dbg !4382
  %cmp1846 = fcmp olt float %837, 0x41A47AB860000000, !dbg !4382
  br i1 %cmp1846, label %if.then1848, label %if.end1884, !dbg !4381

if.then1848:                                      ; preds = %if.end1761
  %838 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4384
  %red1849 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %838, i32 0, i32 2, !dbg !4384
  %839 = load i16, i16* %red1849, align 2, !dbg !4384
  %conv1850 = zext i16 %839 to i32, !dbg !4384
  %conv1851 = sitofp i32 %conv1850 to double, !dbg !4384
  %mul1852 = fmul double 1.000000e+01, %conv1851, !dbg !4384
  %red1853 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4384
  %840 = load float, float* %red1853, align 8, !dbg !4384
  %conv1854 = fpext float %840 to double, !dbg !4384
  %add1855 = fadd double %conv1854, %mul1852, !dbg !4384
  %conv1856 = fptrunc double %add1855 to float, !dbg !4384
  store float %conv1856, float* %red1853, align 8, !dbg !4384
  %841 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4384
  %green1857 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %841, i32 0, i32 1, !dbg !4384
  %842 = load i16, i16* %green1857, align 2, !dbg !4384
  %conv1858 = zext i16 %842 to i32, !dbg !4384
  %conv1859 = sitofp i32 %conv1858 to double, !dbg !4384
  %mul1860 = fmul double 1.000000e+01, %conv1859, !dbg !4384
  %green1861 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4384
  %843 = load float, float* %green1861, align 4, !dbg !4384
  %conv1862 = fpext float %843 to double, !dbg !4384
  %add1863 = fadd double %conv1862, %mul1860, !dbg !4384
  %conv1864 = fptrunc double %add1863 to float, !dbg !4384
  store float %conv1864, float* %green1861, align 4, !dbg !4384
  %844 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4384
  %blue1865 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %844, i32 0, i32 0, !dbg !4384
  %845 = load i16, i16* %blue1865, align 2, !dbg !4384
  %conv1866 = zext i16 %845 to i32, !dbg !4384
  %conv1867 = sitofp i32 %conv1866 to double, !dbg !4384
  %mul1868 = fmul double 1.000000e+01, %conv1867, !dbg !4384
  %blue1869 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4384
  %846 = load float, float* %blue1869, align 8, !dbg !4384
  %conv1870 = fpext float %846 to double, !dbg !4384
  %add1871 = fadd double %conv1870, %mul1868, !dbg !4384
  %conv1872 = fptrunc double %add1871 to float, !dbg !4384
  store float %conv1872, float* %blue1869, align 8, !dbg !4384
  %847 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4384
  %opacity1873 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %847, i32 0, i32 3, !dbg !4384
  %848 = load i16, i16* %opacity1873, align 2, !dbg !4384
  %conv1874 = zext i16 %848 to i32, !dbg !4384
  %conv1875 = sitofp i32 %conv1874 to double, !dbg !4384
  %mul1876 = fmul double 1.000000e+01, %conv1875, !dbg !4384
  %opacity1877 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4384
  %849 = load float, float* %opacity1877, align 4, !dbg !4384
  %conv1878 = fpext float %849 to double, !dbg !4384
  %add1879 = fadd double %conv1878, %mul1876, !dbg !4384
  %conv1880 = fptrunc double %add1879 to float, !dbg !4384
  store float %conv1880, float* %opacity1877, align 4, !dbg !4384
  %850 = load float, float* %total_weight, align 4, !dbg !4384
  %conv1881 = fpext float %850 to double, !dbg !4384
  %add1882 = fadd double %conv1881, 1.000000e+01, !dbg !4384
  %conv1883 = fptrunc double %add1882 to float, !dbg !4384
  store float %conv1883, float* %total_weight, align 4, !dbg !4384
  br label %if.end1884, !dbg !4384

if.end1884:                                       ; preds = %if.then1848, %if.end1761
  %851 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4381
  %incdec.ptr1885 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %851, i32 1, !dbg !4381
  store %struct._PixelPacket* %incdec.ptr1885, %struct._PixelPacket** %r, align 8, !dbg !4381
  %852 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4386
  %853 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4387
  %columns1886 = getelementptr inbounds %struct._Image, %struct._Image* %853, i32 0, i32 7, !dbg !4388
  %854 = load i64, i64* %columns1886, align 8, !dbg !4388
  %add1887 = add i64 %854, 4, !dbg !4389
  %mul1888 = mul i64 3, %add1887, !dbg !4390
  %add.ptr1889 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %852, i64 %mul1888, !dbg !4391
  store %struct._PixelPacket* %add.ptr1889, %struct._PixelPacket** %r, align 8, !dbg !4392
  %855 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4393
  %red1890 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %855, i32 0, i32 2, !dbg !4393
  %856 = load i16, i16* %red1890, align 2, !dbg !4393
  %conv1891 = uitofp i16 %856 to float, !dbg !4393
  %red1892 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4393
  %857 = load i16, i16* %red1892, align 2, !dbg !4393
  %conv1893 = zext i16 %857 to i32, !dbg !4393
  %conv1894 = sitofp i32 %conv1893 to float, !dbg !4393
  %add1895 = fadd float %conv1891, %conv1894, !dbg !4393
  %div1896 = fdiv float %add1895, 2.000000e+00, !dbg !4393
  store float %div1896, float* %mean, align 4, !dbg !4393
  %858 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4393
  %red1897 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %858, i32 0, i32 2, !dbg !4393
  %859 = load i16, i16* %red1897, align 2, !dbg !4393
  %conv1898 = uitofp i16 %859 to float, !dbg !4393
  %red1899 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4393
  %860 = load i16, i16* %red1899, align 2, !dbg !4393
  %conv1900 = uitofp i16 %860 to float, !dbg !4393
  %sub1901 = fsub float %conv1898, %conv1900, !dbg !4393
  store float %sub1901, float* %distance, align 4, !dbg !4393
  %861 = load float, float* %mean, align 4, !dbg !4393
  %conv1902 = fpext float %861 to double, !dbg !4393
  %add1903 = fadd double 1.310720e+05, %conv1902, !dbg !4393
  %mul1904 = fmul double 0x3EF0001000100010, %add1903, !dbg !4393
  %862 = load float, float* %distance, align 4, !dbg !4393
  %conv1905 = fpext float %862 to double, !dbg !4393
  %mul1906 = fmul double %mul1904, %conv1905, !dbg !4393
  %863 = load float, float* %distance, align 4, !dbg !4393
  %conv1907 = fpext float %863 to double, !dbg !4393
  %mul1908 = fmul double %mul1906, %conv1907, !dbg !4393
  %conv1909 = fptrunc double %mul1908 to float, !dbg !4393
  store float %conv1909, float* %distance_squared, align 4, !dbg !4393
  %864 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4393
  %green1910 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %864, i32 0, i32 1, !dbg !4393
  %865 = load i16, i16* %green1910, align 2, !dbg !4393
  %conv1911 = uitofp i16 %865 to float, !dbg !4393
  %green1912 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4393
  %866 = load i16, i16* %green1912, align 2, !dbg !4393
  %conv1913 = zext i16 %866 to i32, !dbg !4393
  %conv1914 = sitofp i32 %conv1913 to float, !dbg !4393
  %add1915 = fadd float %conv1911, %conv1914, !dbg !4393
  %div1916 = fdiv float %add1915, 2.000000e+00, !dbg !4393
  store float %div1916, float* %mean, align 4, !dbg !4393
  %867 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4393
  %green1917 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %867, i32 0, i32 1, !dbg !4393
  %868 = load i16, i16* %green1917, align 2, !dbg !4393
  %conv1918 = uitofp i16 %868 to float, !dbg !4393
  %green1919 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4393
  %869 = load i16, i16* %green1919, align 2, !dbg !4393
  %conv1920 = uitofp i16 %869 to float, !dbg !4393
  %sub1921 = fsub float %conv1918, %conv1920, !dbg !4393
  store float %sub1921, float* %distance, align 4, !dbg !4393
  %870 = load float, float* %distance, align 4, !dbg !4393
  %conv1922 = fpext float %870 to double, !dbg !4393
  %mul1923 = fmul double 4.000000e+00, %conv1922, !dbg !4393
  %871 = load float, float* %distance, align 4, !dbg !4393
  %conv1924 = fpext float %871 to double, !dbg !4393
  %mul1925 = fmul double %mul1923, %conv1924, !dbg !4393
  %872 = load float, float* %distance_squared, align 4, !dbg !4393
  %conv1926 = fpext float %872 to double, !dbg !4393
  %add1927 = fadd double %conv1926, %mul1925, !dbg !4393
  %conv1928 = fptrunc double %add1927 to float, !dbg !4393
  store float %conv1928, float* %distance_squared, align 4, !dbg !4393
  %873 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4393
  %blue1929 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %873, i32 0, i32 0, !dbg !4393
  %874 = load i16, i16* %blue1929, align 2, !dbg !4393
  %conv1930 = uitofp i16 %874 to float, !dbg !4393
  %blue1931 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4393
  %875 = load i16, i16* %blue1931, align 2, !dbg !4393
  %conv1932 = zext i16 %875 to i32, !dbg !4393
  %conv1933 = sitofp i32 %conv1932 to float, !dbg !4393
  %add1934 = fadd float %conv1930, %conv1933, !dbg !4393
  %div1935 = fdiv float %add1934, 2.000000e+00, !dbg !4393
  store float %div1935, float* %mean, align 4, !dbg !4393
  %876 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4393
  %blue1936 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %876, i32 0, i32 0, !dbg !4393
  %877 = load i16, i16* %blue1936, align 2, !dbg !4393
  %conv1937 = uitofp i16 %877 to float, !dbg !4393
  %blue1938 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4393
  %878 = load i16, i16* %blue1938, align 2, !dbg !4393
  %conv1939 = uitofp i16 %878 to float, !dbg !4393
  %sub1940 = fsub float %conv1937, %conv1939, !dbg !4393
  store float %sub1940, float* %distance, align 4, !dbg !4393
  %879 = load float, float* %mean, align 4, !dbg !4393
  %conv1941 = fpext float %879 to double, !dbg !4393
  %sub1942 = fsub double 1.966070e+05, %conv1941, !dbg !4393
  %mul1943 = fmul double 0x3EF0001000100010, %sub1942, !dbg !4393
  %880 = load float, float* %distance, align 4, !dbg !4393
  %conv1944 = fpext float %880 to double, !dbg !4393
  %mul1945 = fmul double %mul1943, %conv1944, !dbg !4393
  %881 = load float, float* %distance, align 4, !dbg !4393
  %conv1946 = fpext float %881 to double, !dbg !4393
  %mul1947 = fmul double %mul1945, %conv1946, !dbg !4393
  %882 = load float, float* %distance_squared, align 4, !dbg !4393
  %conv1948 = fpext float %882 to double, !dbg !4393
  %add1949 = fadd double %conv1948, %mul1947, !dbg !4393
  %conv1950 = fptrunc double %add1949 to float, !dbg !4393
  store float %conv1950, float* %distance_squared, align 4, !dbg !4393
  %883 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4393
  %opacity1951 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %883, i32 0, i32 3, !dbg !4393
  %884 = load i16, i16* %opacity1951, align 2, !dbg !4393
  %conv1952 = uitofp i16 %884 to float, !dbg !4393
  %opacity1953 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4393
  %885 = load i16, i16* %opacity1953, align 2, !dbg !4393
  %conv1954 = zext i16 %885 to i32, !dbg !4393
  %conv1955 = sitofp i32 %conv1954 to float, !dbg !4393
  %add1956 = fadd float %conv1952, %conv1955, !dbg !4393
  %div1957 = fdiv float %add1956, 2.000000e+00, !dbg !4393
  store float %div1957, float* %mean, align 4, !dbg !4393
  %886 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4393
  %opacity1958 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %886, i32 0, i32 3, !dbg !4393
  %887 = load i16, i16* %opacity1958, align 2, !dbg !4393
  %conv1959 = uitofp i16 %887 to float, !dbg !4393
  %opacity1960 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4393
  %888 = load i16, i16* %opacity1960, align 2, !dbg !4393
  %conv1961 = uitofp i16 %888 to float, !dbg !4393
  %sub1962 = fsub float %conv1959, %conv1961, !dbg !4393
  store float %sub1962, float* %distance, align 4, !dbg !4393
  %889 = load float, float* %mean, align 4, !dbg !4393
  %conv1963 = fpext float %889 to double, !dbg !4393
  %sub1964 = fsub double 1.966070e+05, %conv1963, !dbg !4393
  %mul1965 = fmul double 0x3EF0001000100010, %sub1964, !dbg !4393
  %890 = load float, float* %distance, align 4, !dbg !4393
  %conv1966 = fpext float %890 to double, !dbg !4393
  %mul1967 = fmul double %mul1965, %conv1966, !dbg !4393
  %891 = load float, float* %distance, align 4, !dbg !4393
  %conv1968 = fpext float %891 to double, !dbg !4393
  %mul1969 = fmul double %mul1967, %conv1968, !dbg !4393
  %892 = load float, float* %distance_squared, align 4, !dbg !4393
  %conv1970 = fpext float %892 to double, !dbg !4393
  %add1971 = fadd double %conv1970, %mul1969, !dbg !4393
  %conv1972 = fptrunc double %add1971 to float, !dbg !4393
  store float %conv1972, float* %distance_squared, align 4, !dbg !4393
  %893 = load float, float* %distance_squared, align 4, !dbg !4394
  %cmp1973 = fcmp olt float %893, 0x41A47AB860000000, !dbg !4394
  br i1 %cmp1973, label %if.then1975, label %if.end2011, !dbg !4393

if.then1975:                                      ; preds = %if.end1884
  %894 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4396
  %red1976 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %894, i32 0, i32 2, !dbg !4396
  %895 = load i16, i16* %red1976, align 2, !dbg !4396
  %conv1977 = zext i16 %895 to i32, !dbg !4396
  %conv1978 = sitofp i32 %conv1977 to double, !dbg !4396
  %mul1979 = fmul double 8.000000e+00, %conv1978, !dbg !4396
  %red1980 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4396
  %896 = load float, float* %red1980, align 8, !dbg !4396
  %conv1981 = fpext float %896 to double, !dbg !4396
  %add1982 = fadd double %conv1981, %mul1979, !dbg !4396
  %conv1983 = fptrunc double %add1982 to float, !dbg !4396
  store float %conv1983, float* %red1980, align 8, !dbg !4396
  %897 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4396
  %green1984 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %897, i32 0, i32 1, !dbg !4396
  %898 = load i16, i16* %green1984, align 2, !dbg !4396
  %conv1985 = zext i16 %898 to i32, !dbg !4396
  %conv1986 = sitofp i32 %conv1985 to double, !dbg !4396
  %mul1987 = fmul double 8.000000e+00, %conv1986, !dbg !4396
  %green1988 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4396
  %899 = load float, float* %green1988, align 4, !dbg !4396
  %conv1989 = fpext float %899 to double, !dbg !4396
  %add1990 = fadd double %conv1989, %mul1987, !dbg !4396
  %conv1991 = fptrunc double %add1990 to float, !dbg !4396
  store float %conv1991, float* %green1988, align 4, !dbg !4396
  %900 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4396
  %blue1992 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %900, i32 0, i32 0, !dbg !4396
  %901 = load i16, i16* %blue1992, align 2, !dbg !4396
  %conv1993 = zext i16 %901 to i32, !dbg !4396
  %conv1994 = sitofp i32 %conv1993 to double, !dbg !4396
  %mul1995 = fmul double 8.000000e+00, %conv1994, !dbg !4396
  %blue1996 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4396
  %902 = load float, float* %blue1996, align 8, !dbg !4396
  %conv1997 = fpext float %902 to double, !dbg !4396
  %add1998 = fadd double %conv1997, %mul1995, !dbg !4396
  %conv1999 = fptrunc double %add1998 to float, !dbg !4396
  store float %conv1999, float* %blue1996, align 8, !dbg !4396
  %903 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4396
  %opacity2000 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %903, i32 0, i32 3, !dbg !4396
  %904 = load i16, i16* %opacity2000, align 2, !dbg !4396
  %conv2001 = zext i16 %904 to i32, !dbg !4396
  %conv2002 = sitofp i32 %conv2001 to double, !dbg !4396
  %mul2003 = fmul double 8.000000e+00, %conv2002, !dbg !4396
  %opacity2004 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4396
  %905 = load float, float* %opacity2004, align 4, !dbg !4396
  %conv2005 = fpext float %905 to double, !dbg !4396
  %add2006 = fadd double %conv2005, %mul2003, !dbg !4396
  %conv2007 = fptrunc double %add2006 to float, !dbg !4396
  store float %conv2007, float* %opacity2004, align 4, !dbg !4396
  %906 = load float, float* %total_weight, align 4, !dbg !4396
  %conv2008 = fpext float %906 to double, !dbg !4396
  %add2009 = fadd double %conv2008, 8.000000e+00, !dbg !4396
  %conv2010 = fptrunc double %add2009 to float, !dbg !4396
  store float %conv2010, float* %total_weight, align 4, !dbg !4396
  br label %if.end2011, !dbg !4396

if.end2011:                                       ; preds = %if.then1975, %if.end1884
  %907 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4393
  %incdec.ptr2012 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %907, i32 1, !dbg !4393
  store %struct._PixelPacket* %incdec.ptr2012, %struct._PixelPacket** %r, align 8, !dbg !4393
  %908 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4398
  %red2013 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %908, i32 0, i32 2, !dbg !4398
  %909 = load i16, i16* %red2013, align 2, !dbg !4398
  %conv2014 = uitofp i16 %909 to float, !dbg !4398
  %red2015 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4398
  %910 = load i16, i16* %red2015, align 2, !dbg !4398
  %conv2016 = zext i16 %910 to i32, !dbg !4398
  %conv2017 = sitofp i32 %conv2016 to float, !dbg !4398
  %add2018 = fadd float %conv2014, %conv2017, !dbg !4398
  %div2019 = fdiv float %add2018, 2.000000e+00, !dbg !4398
  store float %div2019, float* %mean, align 4, !dbg !4398
  %911 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4398
  %red2020 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %911, i32 0, i32 2, !dbg !4398
  %912 = load i16, i16* %red2020, align 2, !dbg !4398
  %conv2021 = uitofp i16 %912 to float, !dbg !4398
  %red2022 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4398
  %913 = load i16, i16* %red2022, align 2, !dbg !4398
  %conv2023 = uitofp i16 %913 to float, !dbg !4398
  %sub2024 = fsub float %conv2021, %conv2023, !dbg !4398
  store float %sub2024, float* %distance, align 4, !dbg !4398
  %914 = load float, float* %mean, align 4, !dbg !4398
  %conv2025 = fpext float %914 to double, !dbg !4398
  %add2026 = fadd double 1.310720e+05, %conv2025, !dbg !4398
  %mul2027 = fmul double 0x3EF0001000100010, %add2026, !dbg !4398
  %915 = load float, float* %distance, align 4, !dbg !4398
  %conv2028 = fpext float %915 to double, !dbg !4398
  %mul2029 = fmul double %mul2027, %conv2028, !dbg !4398
  %916 = load float, float* %distance, align 4, !dbg !4398
  %conv2030 = fpext float %916 to double, !dbg !4398
  %mul2031 = fmul double %mul2029, %conv2030, !dbg !4398
  %conv2032 = fptrunc double %mul2031 to float, !dbg !4398
  store float %conv2032, float* %distance_squared, align 4, !dbg !4398
  %917 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4398
  %green2033 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %917, i32 0, i32 1, !dbg !4398
  %918 = load i16, i16* %green2033, align 2, !dbg !4398
  %conv2034 = uitofp i16 %918 to float, !dbg !4398
  %green2035 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4398
  %919 = load i16, i16* %green2035, align 2, !dbg !4398
  %conv2036 = zext i16 %919 to i32, !dbg !4398
  %conv2037 = sitofp i32 %conv2036 to float, !dbg !4398
  %add2038 = fadd float %conv2034, %conv2037, !dbg !4398
  %div2039 = fdiv float %add2038, 2.000000e+00, !dbg !4398
  store float %div2039, float* %mean, align 4, !dbg !4398
  %920 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4398
  %green2040 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %920, i32 0, i32 1, !dbg !4398
  %921 = load i16, i16* %green2040, align 2, !dbg !4398
  %conv2041 = uitofp i16 %921 to float, !dbg !4398
  %green2042 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4398
  %922 = load i16, i16* %green2042, align 2, !dbg !4398
  %conv2043 = uitofp i16 %922 to float, !dbg !4398
  %sub2044 = fsub float %conv2041, %conv2043, !dbg !4398
  store float %sub2044, float* %distance, align 4, !dbg !4398
  %923 = load float, float* %distance, align 4, !dbg !4398
  %conv2045 = fpext float %923 to double, !dbg !4398
  %mul2046 = fmul double 4.000000e+00, %conv2045, !dbg !4398
  %924 = load float, float* %distance, align 4, !dbg !4398
  %conv2047 = fpext float %924 to double, !dbg !4398
  %mul2048 = fmul double %mul2046, %conv2047, !dbg !4398
  %925 = load float, float* %distance_squared, align 4, !dbg !4398
  %conv2049 = fpext float %925 to double, !dbg !4398
  %add2050 = fadd double %conv2049, %mul2048, !dbg !4398
  %conv2051 = fptrunc double %add2050 to float, !dbg !4398
  store float %conv2051, float* %distance_squared, align 4, !dbg !4398
  %926 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4398
  %blue2052 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %926, i32 0, i32 0, !dbg !4398
  %927 = load i16, i16* %blue2052, align 2, !dbg !4398
  %conv2053 = uitofp i16 %927 to float, !dbg !4398
  %blue2054 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4398
  %928 = load i16, i16* %blue2054, align 2, !dbg !4398
  %conv2055 = zext i16 %928 to i32, !dbg !4398
  %conv2056 = sitofp i32 %conv2055 to float, !dbg !4398
  %add2057 = fadd float %conv2053, %conv2056, !dbg !4398
  %div2058 = fdiv float %add2057, 2.000000e+00, !dbg !4398
  store float %div2058, float* %mean, align 4, !dbg !4398
  %929 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4398
  %blue2059 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %929, i32 0, i32 0, !dbg !4398
  %930 = load i16, i16* %blue2059, align 2, !dbg !4398
  %conv2060 = uitofp i16 %930 to float, !dbg !4398
  %blue2061 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4398
  %931 = load i16, i16* %blue2061, align 2, !dbg !4398
  %conv2062 = uitofp i16 %931 to float, !dbg !4398
  %sub2063 = fsub float %conv2060, %conv2062, !dbg !4398
  store float %sub2063, float* %distance, align 4, !dbg !4398
  %932 = load float, float* %mean, align 4, !dbg !4398
  %conv2064 = fpext float %932 to double, !dbg !4398
  %sub2065 = fsub double 1.966070e+05, %conv2064, !dbg !4398
  %mul2066 = fmul double 0x3EF0001000100010, %sub2065, !dbg !4398
  %933 = load float, float* %distance, align 4, !dbg !4398
  %conv2067 = fpext float %933 to double, !dbg !4398
  %mul2068 = fmul double %mul2066, %conv2067, !dbg !4398
  %934 = load float, float* %distance, align 4, !dbg !4398
  %conv2069 = fpext float %934 to double, !dbg !4398
  %mul2070 = fmul double %mul2068, %conv2069, !dbg !4398
  %935 = load float, float* %distance_squared, align 4, !dbg !4398
  %conv2071 = fpext float %935 to double, !dbg !4398
  %add2072 = fadd double %conv2071, %mul2070, !dbg !4398
  %conv2073 = fptrunc double %add2072 to float, !dbg !4398
  store float %conv2073, float* %distance_squared, align 4, !dbg !4398
  %936 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4398
  %opacity2074 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %936, i32 0, i32 3, !dbg !4398
  %937 = load i16, i16* %opacity2074, align 2, !dbg !4398
  %conv2075 = uitofp i16 %937 to float, !dbg !4398
  %opacity2076 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4398
  %938 = load i16, i16* %opacity2076, align 2, !dbg !4398
  %conv2077 = zext i16 %938 to i32, !dbg !4398
  %conv2078 = sitofp i32 %conv2077 to float, !dbg !4398
  %add2079 = fadd float %conv2075, %conv2078, !dbg !4398
  %div2080 = fdiv float %add2079, 2.000000e+00, !dbg !4398
  store float %div2080, float* %mean, align 4, !dbg !4398
  %939 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4398
  %opacity2081 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %939, i32 0, i32 3, !dbg !4398
  %940 = load i16, i16* %opacity2081, align 2, !dbg !4398
  %conv2082 = uitofp i16 %940 to float, !dbg !4398
  %opacity2083 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4398
  %941 = load i16, i16* %opacity2083, align 2, !dbg !4398
  %conv2084 = uitofp i16 %941 to float, !dbg !4398
  %sub2085 = fsub float %conv2082, %conv2084, !dbg !4398
  store float %sub2085, float* %distance, align 4, !dbg !4398
  %942 = load float, float* %mean, align 4, !dbg !4398
  %conv2086 = fpext float %942 to double, !dbg !4398
  %sub2087 = fsub double 1.966070e+05, %conv2086, !dbg !4398
  %mul2088 = fmul double 0x3EF0001000100010, %sub2087, !dbg !4398
  %943 = load float, float* %distance, align 4, !dbg !4398
  %conv2089 = fpext float %943 to double, !dbg !4398
  %mul2090 = fmul double %mul2088, %conv2089, !dbg !4398
  %944 = load float, float* %distance, align 4, !dbg !4398
  %conv2091 = fpext float %944 to double, !dbg !4398
  %mul2092 = fmul double %mul2090, %conv2091, !dbg !4398
  %945 = load float, float* %distance_squared, align 4, !dbg !4398
  %conv2093 = fpext float %945 to double, !dbg !4398
  %add2094 = fadd double %conv2093, %mul2092, !dbg !4398
  %conv2095 = fptrunc double %add2094 to float, !dbg !4398
  store float %conv2095, float* %distance_squared, align 4, !dbg !4398
  %946 = load float, float* %distance_squared, align 4, !dbg !4399
  %cmp2096 = fcmp olt float %946, 0x41A47AB860000000, !dbg !4399
  br i1 %cmp2096, label %if.then2098, label %if.end2134, !dbg !4398

if.then2098:                                      ; preds = %if.end2011
  %947 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4401
  %red2099 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %947, i32 0, i32 2, !dbg !4401
  %948 = load i16, i16* %red2099, align 2, !dbg !4401
  %conv2100 = zext i16 %948 to i32, !dbg !4401
  %conv2101 = sitofp i32 %conv2100 to double, !dbg !4401
  %mul2102 = fmul double 2.000000e+01, %conv2101, !dbg !4401
  %red2103 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4401
  %949 = load float, float* %red2103, align 8, !dbg !4401
  %conv2104 = fpext float %949 to double, !dbg !4401
  %add2105 = fadd double %conv2104, %mul2102, !dbg !4401
  %conv2106 = fptrunc double %add2105 to float, !dbg !4401
  store float %conv2106, float* %red2103, align 8, !dbg !4401
  %950 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4401
  %green2107 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %950, i32 0, i32 1, !dbg !4401
  %951 = load i16, i16* %green2107, align 2, !dbg !4401
  %conv2108 = zext i16 %951 to i32, !dbg !4401
  %conv2109 = sitofp i32 %conv2108 to double, !dbg !4401
  %mul2110 = fmul double 2.000000e+01, %conv2109, !dbg !4401
  %green2111 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4401
  %952 = load float, float* %green2111, align 4, !dbg !4401
  %conv2112 = fpext float %952 to double, !dbg !4401
  %add2113 = fadd double %conv2112, %mul2110, !dbg !4401
  %conv2114 = fptrunc double %add2113 to float, !dbg !4401
  store float %conv2114, float* %green2111, align 4, !dbg !4401
  %953 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4401
  %blue2115 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %953, i32 0, i32 0, !dbg !4401
  %954 = load i16, i16* %blue2115, align 2, !dbg !4401
  %conv2116 = zext i16 %954 to i32, !dbg !4401
  %conv2117 = sitofp i32 %conv2116 to double, !dbg !4401
  %mul2118 = fmul double 2.000000e+01, %conv2117, !dbg !4401
  %blue2119 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4401
  %955 = load float, float* %blue2119, align 8, !dbg !4401
  %conv2120 = fpext float %955 to double, !dbg !4401
  %add2121 = fadd double %conv2120, %mul2118, !dbg !4401
  %conv2122 = fptrunc double %add2121 to float, !dbg !4401
  store float %conv2122, float* %blue2119, align 8, !dbg !4401
  %956 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4401
  %opacity2123 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %956, i32 0, i32 3, !dbg !4401
  %957 = load i16, i16* %opacity2123, align 2, !dbg !4401
  %conv2124 = zext i16 %957 to i32, !dbg !4401
  %conv2125 = sitofp i32 %conv2124 to double, !dbg !4401
  %mul2126 = fmul double 2.000000e+01, %conv2125, !dbg !4401
  %opacity2127 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4401
  %958 = load float, float* %opacity2127, align 4, !dbg !4401
  %conv2128 = fpext float %958 to double, !dbg !4401
  %add2129 = fadd double %conv2128, %mul2126, !dbg !4401
  %conv2130 = fptrunc double %add2129 to float, !dbg !4401
  store float %conv2130, float* %opacity2127, align 4, !dbg !4401
  %959 = load float, float* %total_weight, align 4, !dbg !4401
  %conv2131 = fpext float %959 to double, !dbg !4401
  %add2132 = fadd double %conv2131, 2.000000e+01, !dbg !4401
  %conv2133 = fptrunc double %add2132 to float, !dbg !4401
  store float %conv2133, float* %total_weight, align 4, !dbg !4401
  br label %if.end2134, !dbg !4401

if.end2134:                                       ; preds = %if.then2098, %if.end2011
  %960 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4398
  %incdec.ptr2135 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %960, i32 1, !dbg !4398
  store %struct._PixelPacket* %incdec.ptr2135, %struct._PixelPacket** %r, align 8, !dbg !4398
  %961 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4403
  %red2136 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %961, i32 0, i32 2, !dbg !4403
  %962 = load i16, i16* %red2136, align 2, !dbg !4403
  %conv2137 = uitofp i16 %962 to float, !dbg !4403
  %red2138 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4403
  %963 = load i16, i16* %red2138, align 2, !dbg !4403
  %conv2139 = zext i16 %963 to i32, !dbg !4403
  %conv2140 = sitofp i32 %conv2139 to float, !dbg !4403
  %add2141 = fadd float %conv2137, %conv2140, !dbg !4403
  %div2142 = fdiv float %add2141, 2.000000e+00, !dbg !4403
  store float %div2142, float* %mean, align 4, !dbg !4403
  %964 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4403
  %red2143 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %964, i32 0, i32 2, !dbg !4403
  %965 = load i16, i16* %red2143, align 2, !dbg !4403
  %conv2144 = uitofp i16 %965 to float, !dbg !4403
  %red2145 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4403
  %966 = load i16, i16* %red2145, align 2, !dbg !4403
  %conv2146 = uitofp i16 %966 to float, !dbg !4403
  %sub2147 = fsub float %conv2144, %conv2146, !dbg !4403
  store float %sub2147, float* %distance, align 4, !dbg !4403
  %967 = load float, float* %mean, align 4, !dbg !4403
  %conv2148 = fpext float %967 to double, !dbg !4403
  %add2149 = fadd double 1.310720e+05, %conv2148, !dbg !4403
  %mul2150 = fmul double 0x3EF0001000100010, %add2149, !dbg !4403
  %968 = load float, float* %distance, align 4, !dbg !4403
  %conv2151 = fpext float %968 to double, !dbg !4403
  %mul2152 = fmul double %mul2150, %conv2151, !dbg !4403
  %969 = load float, float* %distance, align 4, !dbg !4403
  %conv2153 = fpext float %969 to double, !dbg !4403
  %mul2154 = fmul double %mul2152, %conv2153, !dbg !4403
  %conv2155 = fptrunc double %mul2154 to float, !dbg !4403
  store float %conv2155, float* %distance_squared, align 4, !dbg !4403
  %970 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4403
  %green2156 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %970, i32 0, i32 1, !dbg !4403
  %971 = load i16, i16* %green2156, align 2, !dbg !4403
  %conv2157 = uitofp i16 %971 to float, !dbg !4403
  %green2158 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4403
  %972 = load i16, i16* %green2158, align 2, !dbg !4403
  %conv2159 = zext i16 %972 to i32, !dbg !4403
  %conv2160 = sitofp i32 %conv2159 to float, !dbg !4403
  %add2161 = fadd float %conv2157, %conv2160, !dbg !4403
  %div2162 = fdiv float %add2161, 2.000000e+00, !dbg !4403
  store float %div2162, float* %mean, align 4, !dbg !4403
  %973 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4403
  %green2163 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %973, i32 0, i32 1, !dbg !4403
  %974 = load i16, i16* %green2163, align 2, !dbg !4403
  %conv2164 = uitofp i16 %974 to float, !dbg !4403
  %green2165 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4403
  %975 = load i16, i16* %green2165, align 2, !dbg !4403
  %conv2166 = uitofp i16 %975 to float, !dbg !4403
  %sub2167 = fsub float %conv2164, %conv2166, !dbg !4403
  store float %sub2167, float* %distance, align 4, !dbg !4403
  %976 = load float, float* %distance, align 4, !dbg !4403
  %conv2168 = fpext float %976 to double, !dbg !4403
  %mul2169 = fmul double 4.000000e+00, %conv2168, !dbg !4403
  %977 = load float, float* %distance, align 4, !dbg !4403
  %conv2170 = fpext float %977 to double, !dbg !4403
  %mul2171 = fmul double %mul2169, %conv2170, !dbg !4403
  %978 = load float, float* %distance_squared, align 4, !dbg !4403
  %conv2172 = fpext float %978 to double, !dbg !4403
  %add2173 = fadd double %conv2172, %mul2171, !dbg !4403
  %conv2174 = fptrunc double %add2173 to float, !dbg !4403
  store float %conv2174, float* %distance_squared, align 4, !dbg !4403
  %979 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4403
  %blue2175 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %979, i32 0, i32 0, !dbg !4403
  %980 = load i16, i16* %blue2175, align 2, !dbg !4403
  %conv2176 = uitofp i16 %980 to float, !dbg !4403
  %blue2177 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4403
  %981 = load i16, i16* %blue2177, align 2, !dbg !4403
  %conv2178 = zext i16 %981 to i32, !dbg !4403
  %conv2179 = sitofp i32 %conv2178 to float, !dbg !4403
  %add2180 = fadd float %conv2176, %conv2179, !dbg !4403
  %div2181 = fdiv float %add2180, 2.000000e+00, !dbg !4403
  store float %div2181, float* %mean, align 4, !dbg !4403
  %982 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4403
  %blue2182 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %982, i32 0, i32 0, !dbg !4403
  %983 = load i16, i16* %blue2182, align 2, !dbg !4403
  %conv2183 = uitofp i16 %983 to float, !dbg !4403
  %blue2184 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4403
  %984 = load i16, i16* %blue2184, align 2, !dbg !4403
  %conv2185 = uitofp i16 %984 to float, !dbg !4403
  %sub2186 = fsub float %conv2183, %conv2185, !dbg !4403
  store float %sub2186, float* %distance, align 4, !dbg !4403
  %985 = load float, float* %mean, align 4, !dbg !4403
  %conv2187 = fpext float %985 to double, !dbg !4403
  %sub2188 = fsub double 1.966070e+05, %conv2187, !dbg !4403
  %mul2189 = fmul double 0x3EF0001000100010, %sub2188, !dbg !4403
  %986 = load float, float* %distance, align 4, !dbg !4403
  %conv2190 = fpext float %986 to double, !dbg !4403
  %mul2191 = fmul double %mul2189, %conv2190, !dbg !4403
  %987 = load float, float* %distance, align 4, !dbg !4403
  %conv2192 = fpext float %987 to double, !dbg !4403
  %mul2193 = fmul double %mul2191, %conv2192, !dbg !4403
  %988 = load float, float* %distance_squared, align 4, !dbg !4403
  %conv2194 = fpext float %988 to double, !dbg !4403
  %add2195 = fadd double %conv2194, %mul2193, !dbg !4403
  %conv2196 = fptrunc double %add2195 to float, !dbg !4403
  store float %conv2196, float* %distance_squared, align 4, !dbg !4403
  %989 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4403
  %opacity2197 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %989, i32 0, i32 3, !dbg !4403
  %990 = load i16, i16* %opacity2197, align 2, !dbg !4403
  %conv2198 = uitofp i16 %990 to float, !dbg !4403
  %opacity2199 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4403
  %991 = load i16, i16* %opacity2199, align 2, !dbg !4403
  %conv2200 = zext i16 %991 to i32, !dbg !4403
  %conv2201 = sitofp i32 %conv2200 to float, !dbg !4403
  %add2202 = fadd float %conv2198, %conv2201, !dbg !4403
  %div2203 = fdiv float %add2202, 2.000000e+00, !dbg !4403
  store float %div2203, float* %mean, align 4, !dbg !4403
  %992 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4403
  %opacity2204 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %992, i32 0, i32 3, !dbg !4403
  %993 = load i16, i16* %opacity2204, align 2, !dbg !4403
  %conv2205 = uitofp i16 %993 to float, !dbg !4403
  %opacity2206 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4403
  %994 = load i16, i16* %opacity2206, align 2, !dbg !4403
  %conv2207 = uitofp i16 %994 to float, !dbg !4403
  %sub2208 = fsub float %conv2205, %conv2207, !dbg !4403
  store float %sub2208, float* %distance, align 4, !dbg !4403
  %995 = load float, float* %mean, align 4, !dbg !4403
  %conv2209 = fpext float %995 to double, !dbg !4403
  %sub2210 = fsub double 1.966070e+05, %conv2209, !dbg !4403
  %mul2211 = fmul double 0x3EF0001000100010, %sub2210, !dbg !4403
  %996 = load float, float* %distance, align 4, !dbg !4403
  %conv2212 = fpext float %996 to double, !dbg !4403
  %mul2213 = fmul double %mul2211, %conv2212, !dbg !4403
  %997 = load float, float* %distance, align 4, !dbg !4403
  %conv2214 = fpext float %997 to double, !dbg !4403
  %mul2215 = fmul double %mul2213, %conv2214, !dbg !4403
  %998 = load float, float* %distance_squared, align 4, !dbg !4403
  %conv2216 = fpext float %998 to double, !dbg !4403
  %add2217 = fadd double %conv2216, %mul2215, !dbg !4403
  %conv2218 = fptrunc double %add2217 to float, !dbg !4403
  store float %conv2218, float* %distance_squared, align 4, !dbg !4403
  %999 = load float, float* %distance_squared, align 4, !dbg !4404
  %cmp2219 = fcmp olt float %999, 0x41A47AB860000000, !dbg !4404
  br i1 %cmp2219, label %if.then2221, label %if.end2257, !dbg !4403

if.then2221:                                      ; preds = %if.end2134
  %1000 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4406
  %red2222 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1000, i32 0, i32 2, !dbg !4406
  %1001 = load i16, i16* %red2222, align 2, !dbg !4406
  %conv2223 = zext i16 %1001 to i32, !dbg !4406
  %conv2224 = sitofp i32 %conv2223 to double, !dbg !4406
  %mul2225 = fmul double 4.000000e+01, %conv2224, !dbg !4406
  %red2226 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4406
  %1002 = load float, float* %red2226, align 8, !dbg !4406
  %conv2227 = fpext float %1002 to double, !dbg !4406
  %add2228 = fadd double %conv2227, %mul2225, !dbg !4406
  %conv2229 = fptrunc double %add2228 to float, !dbg !4406
  store float %conv2229, float* %red2226, align 8, !dbg !4406
  %1003 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4406
  %green2230 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1003, i32 0, i32 1, !dbg !4406
  %1004 = load i16, i16* %green2230, align 2, !dbg !4406
  %conv2231 = zext i16 %1004 to i32, !dbg !4406
  %conv2232 = sitofp i32 %conv2231 to double, !dbg !4406
  %mul2233 = fmul double 4.000000e+01, %conv2232, !dbg !4406
  %green2234 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4406
  %1005 = load float, float* %green2234, align 4, !dbg !4406
  %conv2235 = fpext float %1005 to double, !dbg !4406
  %add2236 = fadd double %conv2235, %mul2233, !dbg !4406
  %conv2237 = fptrunc double %add2236 to float, !dbg !4406
  store float %conv2237, float* %green2234, align 4, !dbg !4406
  %1006 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4406
  %blue2238 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1006, i32 0, i32 0, !dbg !4406
  %1007 = load i16, i16* %blue2238, align 2, !dbg !4406
  %conv2239 = zext i16 %1007 to i32, !dbg !4406
  %conv2240 = sitofp i32 %conv2239 to double, !dbg !4406
  %mul2241 = fmul double 4.000000e+01, %conv2240, !dbg !4406
  %blue2242 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4406
  %1008 = load float, float* %blue2242, align 8, !dbg !4406
  %conv2243 = fpext float %1008 to double, !dbg !4406
  %add2244 = fadd double %conv2243, %mul2241, !dbg !4406
  %conv2245 = fptrunc double %add2244 to float, !dbg !4406
  store float %conv2245, float* %blue2242, align 8, !dbg !4406
  %1009 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4406
  %opacity2246 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1009, i32 0, i32 3, !dbg !4406
  %1010 = load i16, i16* %opacity2246, align 2, !dbg !4406
  %conv2247 = zext i16 %1010 to i32, !dbg !4406
  %conv2248 = sitofp i32 %conv2247 to double, !dbg !4406
  %mul2249 = fmul double 4.000000e+01, %conv2248, !dbg !4406
  %opacity2250 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4406
  %1011 = load float, float* %opacity2250, align 4, !dbg !4406
  %conv2251 = fpext float %1011 to double, !dbg !4406
  %add2252 = fadd double %conv2251, %mul2249, !dbg !4406
  %conv2253 = fptrunc double %add2252 to float, !dbg !4406
  store float %conv2253, float* %opacity2250, align 4, !dbg !4406
  %1012 = load float, float* %total_weight, align 4, !dbg !4406
  %conv2254 = fpext float %1012 to double, !dbg !4406
  %add2255 = fadd double %conv2254, 4.000000e+01, !dbg !4406
  %conv2256 = fptrunc double %add2255 to float, !dbg !4406
  store float %conv2256, float* %total_weight, align 4, !dbg !4406
  br label %if.end2257, !dbg !4406

if.end2257:                                       ; preds = %if.then2221, %if.end2134
  %1013 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4403
  %incdec.ptr2258 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1013, i32 1, !dbg !4403
  store %struct._PixelPacket* %incdec.ptr2258, %struct._PixelPacket** %r, align 8, !dbg !4403
  %1014 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4408
  %red2259 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1014, i32 0, i32 2, !dbg !4408
  %1015 = load i16, i16* %red2259, align 2, !dbg !4408
  %conv2260 = uitofp i16 %1015 to float, !dbg !4408
  %red2261 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4408
  %1016 = load i16, i16* %red2261, align 2, !dbg !4408
  %conv2262 = zext i16 %1016 to i32, !dbg !4408
  %conv2263 = sitofp i32 %conv2262 to float, !dbg !4408
  %add2264 = fadd float %conv2260, %conv2263, !dbg !4408
  %div2265 = fdiv float %add2264, 2.000000e+00, !dbg !4408
  store float %div2265, float* %mean, align 4, !dbg !4408
  %1017 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4408
  %red2266 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1017, i32 0, i32 2, !dbg !4408
  %1018 = load i16, i16* %red2266, align 2, !dbg !4408
  %conv2267 = uitofp i16 %1018 to float, !dbg !4408
  %red2268 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4408
  %1019 = load i16, i16* %red2268, align 2, !dbg !4408
  %conv2269 = uitofp i16 %1019 to float, !dbg !4408
  %sub2270 = fsub float %conv2267, %conv2269, !dbg !4408
  store float %sub2270, float* %distance, align 4, !dbg !4408
  %1020 = load float, float* %mean, align 4, !dbg !4408
  %conv2271 = fpext float %1020 to double, !dbg !4408
  %add2272 = fadd double 1.310720e+05, %conv2271, !dbg !4408
  %mul2273 = fmul double 0x3EF0001000100010, %add2272, !dbg !4408
  %1021 = load float, float* %distance, align 4, !dbg !4408
  %conv2274 = fpext float %1021 to double, !dbg !4408
  %mul2275 = fmul double %mul2273, %conv2274, !dbg !4408
  %1022 = load float, float* %distance, align 4, !dbg !4408
  %conv2276 = fpext float %1022 to double, !dbg !4408
  %mul2277 = fmul double %mul2275, %conv2276, !dbg !4408
  %conv2278 = fptrunc double %mul2277 to float, !dbg !4408
  store float %conv2278, float* %distance_squared, align 4, !dbg !4408
  %1023 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4408
  %green2279 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1023, i32 0, i32 1, !dbg !4408
  %1024 = load i16, i16* %green2279, align 2, !dbg !4408
  %conv2280 = uitofp i16 %1024 to float, !dbg !4408
  %green2281 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4408
  %1025 = load i16, i16* %green2281, align 2, !dbg !4408
  %conv2282 = zext i16 %1025 to i32, !dbg !4408
  %conv2283 = sitofp i32 %conv2282 to float, !dbg !4408
  %add2284 = fadd float %conv2280, %conv2283, !dbg !4408
  %div2285 = fdiv float %add2284, 2.000000e+00, !dbg !4408
  store float %div2285, float* %mean, align 4, !dbg !4408
  %1026 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4408
  %green2286 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1026, i32 0, i32 1, !dbg !4408
  %1027 = load i16, i16* %green2286, align 2, !dbg !4408
  %conv2287 = uitofp i16 %1027 to float, !dbg !4408
  %green2288 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4408
  %1028 = load i16, i16* %green2288, align 2, !dbg !4408
  %conv2289 = uitofp i16 %1028 to float, !dbg !4408
  %sub2290 = fsub float %conv2287, %conv2289, !dbg !4408
  store float %sub2290, float* %distance, align 4, !dbg !4408
  %1029 = load float, float* %distance, align 4, !dbg !4408
  %conv2291 = fpext float %1029 to double, !dbg !4408
  %mul2292 = fmul double 4.000000e+00, %conv2291, !dbg !4408
  %1030 = load float, float* %distance, align 4, !dbg !4408
  %conv2293 = fpext float %1030 to double, !dbg !4408
  %mul2294 = fmul double %mul2292, %conv2293, !dbg !4408
  %1031 = load float, float* %distance_squared, align 4, !dbg !4408
  %conv2295 = fpext float %1031 to double, !dbg !4408
  %add2296 = fadd double %conv2295, %mul2294, !dbg !4408
  %conv2297 = fptrunc double %add2296 to float, !dbg !4408
  store float %conv2297, float* %distance_squared, align 4, !dbg !4408
  %1032 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4408
  %blue2298 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1032, i32 0, i32 0, !dbg !4408
  %1033 = load i16, i16* %blue2298, align 2, !dbg !4408
  %conv2299 = uitofp i16 %1033 to float, !dbg !4408
  %blue2300 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4408
  %1034 = load i16, i16* %blue2300, align 2, !dbg !4408
  %conv2301 = zext i16 %1034 to i32, !dbg !4408
  %conv2302 = sitofp i32 %conv2301 to float, !dbg !4408
  %add2303 = fadd float %conv2299, %conv2302, !dbg !4408
  %div2304 = fdiv float %add2303, 2.000000e+00, !dbg !4408
  store float %div2304, float* %mean, align 4, !dbg !4408
  %1035 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4408
  %blue2305 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1035, i32 0, i32 0, !dbg !4408
  %1036 = load i16, i16* %blue2305, align 2, !dbg !4408
  %conv2306 = uitofp i16 %1036 to float, !dbg !4408
  %blue2307 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4408
  %1037 = load i16, i16* %blue2307, align 2, !dbg !4408
  %conv2308 = uitofp i16 %1037 to float, !dbg !4408
  %sub2309 = fsub float %conv2306, %conv2308, !dbg !4408
  store float %sub2309, float* %distance, align 4, !dbg !4408
  %1038 = load float, float* %mean, align 4, !dbg !4408
  %conv2310 = fpext float %1038 to double, !dbg !4408
  %sub2311 = fsub double 1.966070e+05, %conv2310, !dbg !4408
  %mul2312 = fmul double 0x3EF0001000100010, %sub2311, !dbg !4408
  %1039 = load float, float* %distance, align 4, !dbg !4408
  %conv2313 = fpext float %1039 to double, !dbg !4408
  %mul2314 = fmul double %mul2312, %conv2313, !dbg !4408
  %1040 = load float, float* %distance, align 4, !dbg !4408
  %conv2315 = fpext float %1040 to double, !dbg !4408
  %mul2316 = fmul double %mul2314, %conv2315, !dbg !4408
  %1041 = load float, float* %distance_squared, align 4, !dbg !4408
  %conv2317 = fpext float %1041 to double, !dbg !4408
  %add2318 = fadd double %conv2317, %mul2316, !dbg !4408
  %conv2319 = fptrunc double %add2318 to float, !dbg !4408
  store float %conv2319, float* %distance_squared, align 4, !dbg !4408
  %1042 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4408
  %opacity2320 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1042, i32 0, i32 3, !dbg !4408
  %1043 = load i16, i16* %opacity2320, align 2, !dbg !4408
  %conv2321 = uitofp i16 %1043 to float, !dbg !4408
  %opacity2322 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4408
  %1044 = load i16, i16* %opacity2322, align 2, !dbg !4408
  %conv2323 = zext i16 %1044 to i32, !dbg !4408
  %conv2324 = sitofp i32 %conv2323 to float, !dbg !4408
  %add2325 = fadd float %conv2321, %conv2324, !dbg !4408
  %div2326 = fdiv float %add2325, 2.000000e+00, !dbg !4408
  store float %div2326, float* %mean, align 4, !dbg !4408
  %1045 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4408
  %opacity2327 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1045, i32 0, i32 3, !dbg !4408
  %1046 = load i16, i16* %opacity2327, align 2, !dbg !4408
  %conv2328 = uitofp i16 %1046 to float, !dbg !4408
  %opacity2329 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4408
  %1047 = load i16, i16* %opacity2329, align 2, !dbg !4408
  %conv2330 = uitofp i16 %1047 to float, !dbg !4408
  %sub2331 = fsub float %conv2328, %conv2330, !dbg !4408
  store float %sub2331, float* %distance, align 4, !dbg !4408
  %1048 = load float, float* %mean, align 4, !dbg !4408
  %conv2332 = fpext float %1048 to double, !dbg !4408
  %sub2333 = fsub double 1.966070e+05, %conv2332, !dbg !4408
  %mul2334 = fmul double 0x3EF0001000100010, %sub2333, !dbg !4408
  %1049 = load float, float* %distance, align 4, !dbg !4408
  %conv2335 = fpext float %1049 to double, !dbg !4408
  %mul2336 = fmul double %mul2334, %conv2335, !dbg !4408
  %1050 = load float, float* %distance, align 4, !dbg !4408
  %conv2337 = fpext float %1050 to double, !dbg !4408
  %mul2338 = fmul double %mul2336, %conv2337, !dbg !4408
  %1051 = load float, float* %distance_squared, align 4, !dbg !4408
  %conv2339 = fpext float %1051 to double, !dbg !4408
  %add2340 = fadd double %conv2339, %mul2338, !dbg !4408
  %conv2341 = fptrunc double %add2340 to float, !dbg !4408
  store float %conv2341, float* %distance_squared, align 4, !dbg !4408
  %1052 = load float, float* %distance_squared, align 4, !dbg !4409
  %cmp2342 = fcmp olt float %1052, 0x41A47AB860000000, !dbg !4409
  br i1 %cmp2342, label %if.then2344, label %if.end2380, !dbg !4408

if.then2344:                                      ; preds = %if.end2257
  %1053 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4411
  %red2345 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1053, i32 0, i32 2, !dbg !4411
  %1054 = load i16, i16* %red2345, align 2, !dbg !4411
  %conv2346 = zext i16 %1054 to i32, !dbg !4411
  %conv2347 = sitofp i32 %conv2346 to double, !dbg !4411
  %mul2348 = fmul double 2.000000e+01, %conv2347, !dbg !4411
  %red2349 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4411
  %1055 = load float, float* %red2349, align 8, !dbg !4411
  %conv2350 = fpext float %1055 to double, !dbg !4411
  %add2351 = fadd double %conv2350, %mul2348, !dbg !4411
  %conv2352 = fptrunc double %add2351 to float, !dbg !4411
  store float %conv2352, float* %red2349, align 8, !dbg !4411
  %1056 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4411
  %green2353 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1056, i32 0, i32 1, !dbg !4411
  %1057 = load i16, i16* %green2353, align 2, !dbg !4411
  %conv2354 = zext i16 %1057 to i32, !dbg !4411
  %conv2355 = sitofp i32 %conv2354 to double, !dbg !4411
  %mul2356 = fmul double 2.000000e+01, %conv2355, !dbg !4411
  %green2357 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4411
  %1058 = load float, float* %green2357, align 4, !dbg !4411
  %conv2358 = fpext float %1058 to double, !dbg !4411
  %add2359 = fadd double %conv2358, %mul2356, !dbg !4411
  %conv2360 = fptrunc double %add2359 to float, !dbg !4411
  store float %conv2360, float* %green2357, align 4, !dbg !4411
  %1059 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4411
  %blue2361 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1059, i32 0, i32 0, !dbg !4411
  %1060 = load i16, i16* %blue2361, align 2, !dbg !4411
  %conv2362 = zext i16 %1060 to i32, !dbg !4411
  %conv2363 = sitofp i32 %conv2362 to double, !dbg !4411
  %mul2364 = fmul double 2.000000e+01, %conv2363, !dbg !4411
  %blue2365 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4411
  %1061 = load float, float* %blue2365, align 8, !dbg !4411
  %conv2366 = fpext float %1061 to double, !dbg !4411
  %add2367 = fadd double %conv2366, %mul2364, !dbg !4411
  %conv2368 = fptrunc double %add2367 to float, !dbg !4411
  store float %conv2368, float* %blue2365, align 8, !dbg !4411
  %1062 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4411
  %opacity2369 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1062, i32 0, i32 3, !dbg !4411
  %1063 = load i16, i16* %opacity2369, align 2, !dbg !4411
  %conv2370 = zext i16 %1063 to i32, !dbg !4411
  %conv2371 = sitofp i32 %conv2370 to double, !dbg !4411
  %mul2372 = fmul double 2.000000e+01, %conv2371, !dbg !4411
  %opacity2373 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4411
  %1064 = load float, float* %opacity2373, align 4, !dbg !4411
  %conv2374 = fpext float %1064 to double, !dbg !4411
  %add2375 = fadd double %conv2374, %mul2372, !dbg !4411
  %conv2376 = fptrunc double %add2375 to float, !dbg !4411
  store float %conv2376, float* %opacity2373, align 4, !dbg !4411
  %1065 = load float, float* %total_weight, align 4, !dbg !4411
  %conv2377 = fpext float %1065 to double, !dbg !4411
  %add2378 = fadd double %conv2377, 2.000000e+01, !dbg !4411
  %conv2379 = fptrunc double %add2378 to float, !dbg !4411
  store float %conv2379, float* %total_weight, align 4, !dbg !4411
  br label %if.end2380, !dbg !4411

if.end2380:                                       ; preds = %if.then2344, %if.end2257
  %1066 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4408
  %incdec.ptr2381 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1066, i32 1, !dbg !4408
  store %struct._PixelPacket* %incdec.ptr2381, %struct._PixelPacket** %r, align 8, !dbg !4408
  %1067 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4413
  %red2382 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1067, i32 0, i32 2, !dbg !4413
  %1068 = load i16, i16* %red2382, align 2, !dbg !4413
  %conv2383 = uitofp i16 %1068 to float, !dbg !4413
  %red2384 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4413
  %1069 = load i16, i16* %red2384, align 2, !dbg !4413
  %conv2385 = zext i16 %1069 to i32, !dbg !4413
  %conv2386 = sitofp i32 %conv2385 to float, !dbg !4413
  %add2387 = fadd float %conv2383, %conv2386, !dbg !4413
  %div2388 = fdiv float %add2387, 2.000000e+00, !dbg !4413
  store float %div2388, float* %mean, align 4, !dbg !4413
  %1070 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4413
  %red2389 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1070, i32 0, i32 2, !dbg !4413
  %1071 = load i16, i16* %red2389, align 2, !dbg !4413
  %conv2390 = uitofp i16 %1071 to float, !dbg !4413
  %red2391 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4413
  %1072 = load i16, i16* %red2391, align 2, !dbg !4413
  %conv2392 = uitofp i16 %1072 to float, !dbg !4413
  %sub2393 = fsub float %conv2390, %conv2392, !dbg !4413
  store float %sub2393, float* %distance, align 4, !dbg !4413
  %1073 = load float, float* %mean, align 4, !dbg !4413
  %conv2394 = fpext float %1073 to double, !dbg !4413
  %add2395 = fadd double 1.310720e+05, %conv2394, !dbg !4413
  %mul2396 = fmul double 0x3EF0001000100010, %add2395, !dbg !4413
  %1074 = load float, float* %distance, align 4, !dbg !4413
  %conv2397 = fpext float %1074 to double, !dbg !4413
  %mul2398 = fmul double %mul2396, %conv2397, !dbg !4413
  %1075 = load float, float* %distance, align 4, !dbg !4413
  %conv2399 = fpext float %1075 to double, !dbg !4413
  %mul2400 = fmul double %mul2398, %conv2399, !dbg !4413
  %conv2401 = fptrunc double %mul2400 to float, !dbg !4413
  store float %conv2401, float* %distance_squared, align 4, !dbg !4413
  %1076 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4413
  %green2402 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1076, i32 0, i32 1, !dbg !4413
  %1077 = load i16, i16* %green2402, align 2, !dbg !4413
  %conv2403 = uitofp i16 %1077 to float, !dbg !4413
  %green2404 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4413
  %1078 = load i16, i16* %green2404, align 2, !dbg !4413
  %conv2405 = zext i16 %1078 to i32, !dbg !4413
  %conv2406 = sitofp i32 %conv2405 to float, !dbg !4413
  %add2407 = fadd float %conv2403, %conv2406, !dbg !4413
  %div2408 = fdiv float %add2407, 2.000000e+00, !dbg !4413
  store float %div2408, float* %mean, align 4, !dbg !4413
  %1079 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4413
  %green2409 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1079, i32 0, i32 1, !dbg !4413
  %1080 = load i16, i16* %green2409, align 2, !dbg !4413
  %conv2410 = uitofp i16 %1080 to float, !dbg !4413
  %green2411 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4413
  %1081 = load i16, i16* %green2411, align 2, !dbg !4413
  %conv2412 = uitofp i16 %1081 to float, !dbg !4413
  %sub2413 = fsub float %conv2410, %conv2412, !dbg !4413
  store float %sub2413, float* %distance, align 4, !dbg !4413
  %1082 = load float, float* %distance, align 4, !dbg !4413
  %conv2414 = fpext float %1082 to double, !dbg !4413
  %mul2415 = fmul double 4.000000e+00, %conv2414, !dbg !4413
  %1083 = load float, float* %distance, align 4, !dbg !4413
  %conv2416 = fpext float %1083 to double, !dbg !4413
  %mul2417 = fmul double %mul2415, %conv2416, !dbg !4413
  %1084 = load float, float* %distance_squared, align 4, !dbg !4413
  %conv2418 = fpext float %1084 to double, !dbg !4413
  %add2419 = fadd double %conv2418, %mul2417, !dbg !4413
  %conv2420 = fptrunc double %add2419 to float, !dbg !4413
  store float %conv2420, float* %distance_squared, align 4, !dbg !4413
  %1085 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4413
  %blue2421 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1085, i32 0, i32 0, !dbg !4413
  %1086 = load i16, i16* %blue2421, align 2, !dbg !4413
  %conv2422 = uitofp i16 %1086 to float, !dbg !4413
  %blue2423 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4413
  %1087 = load i16, i16* %blue2423, align 2, !dbg !4413
  %conv2424 = zext i16 %1087 to i32, !dbg !4413
  %conv2425 = sitofp i32 %conv2424 to float, !dbg !4413
  %add2426 = fadd float %conv2422, %conv2425, !dbg !4413
  %div2427 = fdiv float %add2426, 2.000000e+00, !dbg !4413
  store float %div2427, float* %mean, align 4, !dbg !4413
  %1088 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4413
  %blue2428 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1088, i32 0, i32 0, !dbg !4413
  %1089 = load i16, i16* %blue2428, align 2, !dbg !4413
  %conv2429 = uitofp i16 %1089 to float, !dbg !4413
  %blue2430 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4413
  %1090 = load i16, i16* %blue2430, align 2, !dbg !4413
  %conv2431 = uitofp i16 %1090 to float, !dbg !4413
  %sub2432 = fsub float %conv2429, %conv2431, !dbg !4413
  store float %sub2432, float* %distance, align 4, !dbg !4413
  %1091 = load float, float* %mean, align 4, !dbg !4413
  %conv2433 = fpext float %1091 to double, !dbg !4413
  %sub2434 = fsub double 1.966070e+05, %conv2433, !dbg !4413
  %mul2435 = fmul double 0x3EF0001000100010, %sub2434, !dbg !4413
  %1092 = load float, float* %distance, align 4, !dbg !4413
  %conv2436 = fpext float %1092 to double, !dbg !4413
  %mul2437 = fmul double %mul2435, %conv2436, !dbg !4413
  %1093 = load float, float* %distance, align 4, !dbg !4413
  %conv2438 = fpext float %1093 to double, !dbg !4413
  %mul2439 = fmul double %mul2437, %conv2438, !dbg !4413
  %1094 = load float, float* %distance_squared, align 4, !dbg !4413
  %conv2440 = fpext float %1094 to double, !dbg !4413
  %add2441 = fadd double %conv2440, %mul2439, !dbg !4413
  %conv2442 = fptrunc double %add2441 to float, !dbg !4413
  store float %conv2442, float* %distance_squared, align 4, !dbg !4413
  %1095 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4413
  %opacity2443 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1095, i32 0, i32 3, !dbg !4413
  %1096 = load i16, i16* %opacity2443, align 2, !dbg !4413
  %conv2444 = uitofp i16 %1096 to float, !dbg !4413
  %opacity2445 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4413
  %1097 = load i16, i16* %opacity2445, align 2, !dbg !4413
  %conv2446 = zext i16 %1097 to i32, !dbg !4413
  %conv2447 = sitofp i32 %conv2446 to float, !dbg !4413
  %add2448 = fadd float %conv2444, %conv2447, !dbg !4413
  %div2449 = fdiv float %add2448, 2.000000e+00, !dbg !4413
  store float %div2449, float* %mean, align 4, !dbg !4413
  %1098 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4413
  %opacity2450 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1098, i32 0, i32 3, !dbg !4413
  %1099 = load i16, i16* %opacity2450, align 2, !dbg !4413
  %conv2451 = uitofp i16 %1099 to float, !dbg !4413
  %opacity2452 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4413
  %1100 = load i16, i16* %opacity2452, align 2, !dbg !4413
  %conv2453 = uitofp i16 %1100 to float, !dbg !4413
  %sub2454 = fsub float %conv2451, %conv2453, !dbg !4413
  store float %sub2454, float* %distance, align 4, !dbg !4413
  %1101 = load float, float* %mean, align 4, !dbg !4413
  %conv2455 = fpext float %1101 to double, !dbg !4413
  %sub2456 = fsub double 1.966070e+05, %conv2455, !dbg !4413
  %mul2457 = fmul double 0x3EF0001000100010, %sub2456, !dbg !4413
  %1102 = load float, float* %distance, align 4, !dbg !4413
  %conv2458 = fpext float %1102 to double, !dbg !4413
  %mul2459 = fmul double %mul2457, %conv2458, !dbg !4413
  %1103 = load float, float* %distance, align 4, !dbg !4413
  %conv2460 = fpext float %1103 to double, !dbg !4413
  %mul2461 = fmul double %mul2459, %conv2460, !dbg !4413
  %1104 = load float, float* %distance_squared, align 4, !dbg !4413
  %conv2462 = fpext float %1104 to double, !dbg !4413
  %add2463 = fadd double %conv2462, %mul2461, !dbg !4413
  %conv2464 = fptrunc double %add2463 to float, !dbg !4413
  store float %conv2464, float* %distance_squared, align 4, !dbg !4413
  %1105 = load float, float* %distance_squared, align 4, !dbg !4414
  %cmp2465 = fcmp olt float %1105, 0x41A47AB860000000, !dbg !4414
  br i1 %cmp2465, label %if.then2467, label %if.end2503, !dbg !4413

if.then2467:                                      ; preds = %if.end2380
  %1106 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4416
  %red2468 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1106, i32 0, i32 2, !dbg !4416
  %1107 = load i16, i16* %red2468, align 2, !dbg !4416
  %conv2469 = zext i16 %1107 to i32, !dbg !4416
  %conv2470 = sitofp i32 %conv2469 to double, !dbg !4416
  %mul2471 = fmul double 8.000000e+00, %conv2470, !dbg !4416
  %red2472 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4416
  %1108 = load float, float* %red2472, align 8, !dbg !4416
  %conv2473 = fpext float %1108 to double, !dbg !4416
  %add2474 = fadd double %conv2473, %mul2471, !dbg !4416
  %conv2475 = fptrunc double %add2474 to float, !dbg !4416
  store float %conv2475, float* %red2472, align 8, !dbg !4416
  %1109 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4416
  %green2476 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1109, i32 0, i32 1, !dbg !4416
  %1110 = load i16, i16* %green2476, align 2, !dbg !4416
  %conv2477 = zext i16 %1110 to i32, !dbg !4416
  %conv2478 = sitofp i32 %conv2477 to double, !dbg !4416
  %mul2479 = fmul double 8.000000e+00, %conv2478, !dbg !4416
  %green2480 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4416
  %1111 = load float, float* %green2480, align 4, !dbg !4416
  %conv2481 = fpext float %1111 to double, !dbg !4416
  %add2482 = fadd double %conv2481, %mul2479, !dbg !4416
  %conv2483 = fptrunc double %add2482 to float, !dbg !4416
  store float %conv2483, float* %green2480, align 4, !dbg !4416
  %1112 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4416
  %blue2484 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1112, i32 0, i32 0, !dbg !4416
  %1113 = load i16, i16* %blue2484, align 2, !dbg !4416
  %conv2485 = zext i16 %1113 to i32, !dbg !4416
  %conv2486 = sitofp i32 %conv2485 to double, !dbg !4416
  %mul2487 = fmul double 8.000000e+00, %conv2486, !dbg !4416
  %blue2488 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4416
  %1114 = load float, float* %blue2488, align 8, !dbg !4416
  %conv2489 = fpext float %1114 to double, !dbg !4416
  %add2490 = fadd double %conv2489, %mul2487, !dbg !4416
  %conv2491 = fptrunc double %add2490 to float, !dbg !4416
  store float %conv2491, float* %blue2488, align 8, !dbg !4416
  %1115 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4416
  %opacity2492 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1115, i32 0, i32 3, !dbg !4416
  %1116 = load i16, i16* %opacity2492, align 2, !dbg !4416
  %conv2493 = zext i16 %1116 to i32, !dbg !4416
  %conv2494 = sitofp i32 %conv2493 to double, !dbg !4416
  %mul2495 = fmul double 8.000000e+00, %conv2494, !dbg !4416
  %opacity2496 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4416
  %1117 = load float, float* %opacity2496, align 4, !dbg !4416
  %conv2497 = fpext float %1117 to double, !dbg !4416
  %add2498 = fadd double %conv2497, %mul2495, !dbg !4416
  %conv2499 = fptrunc double %add2498 to float, !dbg !4416
  store float %conv2499, float* %opacity2496, align 4, !dbg !4416
  %1118 = load float, float* %total_weight, align 4, !dbg !4416
  %conv2500 = fpext float %1118 to double, !dbg !4416
  %add2501 = fadd double %conv2500, 8.000000e+00, !dbg !4416
  %conv2502 = fptrunc double %add2501 to float, !dbg !4416
  store float %conv2502, float* %total_weight, align 4, !dbg !4416
  br label %if.end2503, !dbg !4416

if.end2503:                                       ; preds = %if.then2467, %if.end2380
  %1119 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4413
  %incdec.ptr2504 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1119, i32 1, !dbg !4413
  store %struct._PixelPacket* %incdec.ptr2504, %struct._PixelPacket** %r, align 8, !dbg !4413
  %1120 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4418
  %1121 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4419
  %columns2505 = getelementptr inbounds %struct._Image, %struct._Image* %1121, i32 0, i32 7, !dbg !4420
  %1122 = load i64, i64* %columns2505, align 8, !dbg !4420
  %add2506 = add i64 %1122, 4, !dbg !4421
  %mul2507 = mul i64 4, %add2506, !dbg !4422
  %add.ptr2508 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1120, i64 %mul2507, !dbg !4423
  store %struct._PixelPacket* %add.ptr2508, %struct._PixelPacket** %r, align 8, !dbg !4424
  %1123 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4425
  %red2509 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1123, i32 0, i32 2, !dbg !4425
  %1124 = load i16, i16* %red2509, align 2, !dbg !4425
  %conv2510 = uitofp i16 %1124 to float, !dbg !4425
  %red2511 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4425
  %1125 = load i16, i16* %red2511, align 2, !dbg !4425
  %conv2512 = zext i16 %1125 to i32, !dbg !4425
  %conv2513 = sitofp i32 %conv2512 to float, !dbg !4425
  %add2514 = fadd float %conv2510, %conv2513, !dbg !4425
  %div2515 = fdiv float %add2514, 2.000000e+00, !dbg !4425
  store float %div2515, float* %mean, align 4, !dbg !4425
  %1126 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4425
  %red2516 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1126, i32 0, i32 2, !dbg !4425
  %1127 = load i16, i16* %red2516, align 2, !dbg !4425
  %conv2517 = uitofp i16 %1127 to float, !dbg !4425
  %red2518 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4425
  %1128 = load i16, i16* %red2518, align 2, !dbg !4425
  %conv2519 = uitofp i16 %1128 to float, !dbg !4425
  %sub2520 = fsub float %conv2517, %conv2519, !dbg !4425
  store float %sub2520, float* %distance, align 4, !dbg !4425
  %1129 = load float, float* %mean, align 4, !dbg !4425
  %conv2521 = fpext float %1129 to double, !dbg !4425
  %add2522 = fadd double 1.310720e+05, %conv2521, !dbg !4425
  %mul2523 = fmul double 0x3EF0001000100010, %add2522, !dbg !4425
  %1130 = load float, float* %distance, align 4, !dbg !4425
  %conv2524 = fpext float %1130 to double, !dbg !4425
  %mul2525 = fmul double %mul2523, %conv2524, !dbg !4425
  %1131 = load float, float* %distance, align 4, !dbg !4425
  %conv2526 = fpext float %1131 to double, !dbg !4425
  %mul2527 = fmul double %mul2525, %conv2526, !dbg !4425
  %conv2528 = fptrunc double %mul2527 to float, !dbg !4425
  store float %conv2528, float* %distance_squared, align 4, !dbg !4425
  %1132 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4425
  %green2529 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1132, i32 0, i32 1, !dbg !4425
  %1133 = load i16, i16* %green2529, align 2, !dbg !4425
  %conv2530 = uitofp i16 %1133 to float, !dbg !4425
  %green2531 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4425
  %1134 = load i16, i16* %green2531, align 2, !dbg !4425
  %conv2532 = zext i16 %1134 to i32, !dbg !4425
  %conv2533 = sitofp i32 %conv2532 to float, !dbg !4425
  %add2534 = fadd float %conv2530, %conv2533, !dbg !4425
  %div2535 = fdiv float %add2534, 2.000000e+00, !dbg !4425
  store float %div2535, float* %mean, align 4, !dbg !4425
  %1135 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4425
  %green2536 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1135, i32 0, i32 1, !dbg !4425
  %1136 = load i16, i16* %green2536, align 2, !dbg !4425
  %conv2537 = uitofp i16 %1136 to float, !dbg !4425
  %green2538 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4425
  %1137 = load i16, i16* %green2538, align 2, !dbg !4425
  %conv2539 = uitofp i16 %1137 to float, !dbg !4425
  %sub2540 = fsub float %conv2537, %conv2539, !dbg !4425
  store float %sub2540, float* %distance, align 4, !dbg !4425
  %1138 = load float, float* %distance, align 4, !dbg !4425
  %conv2541 = fpext float %1138 to double, !dbg !4425
  %mul2542 = fmul double 4.000000e+00, %conv2541, !dbg !4425
  %1139 = load float, float* %distance, align 4, !dbg !4425
  %conv2543 = fpext float %1139 to double, !dbg !4425
  %mul2544 = fmul double %mul2542, %conv2543, !dbg !4425
  %1140 = load float, float* %distance_squared, align 4, !dbg !4425
  %conv2545 = fpext float %1140 to double, !dbg !4425
  %add2546 = fadd double %conv2545, %mul2544, !dbg !4425
  %conv2547 = fptrunc double %add2546 to float, !dbg !4425
  store float %conv2547, float* %distance_squared, align 4, !dbg !4425
  %1141 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4425
  %blue2548 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1141, i32 0, i32 0, !dbg !4425
  %1142 = load i16, i16* %blue2548, align 2, !dbg !4425
  %conv2549 = uitofp i16 %1142 to float, !dbg !4425
  %blue2550 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4425
  %1143 = load i16, i16* %blue2550, align 2, !dbg !4425
  %conv2551 = zext i16 %1143 to i32, !dbg !4425
  %conv2552 = sitofp i32 %conv2551 to float, !dbg !4425
  %add2553 = fadd float %conv2549, %conv2552, !dbg !4425
  %div2554 = fdiv float %add2553, 2.000000e+00, !dbg !4425
  store float %div2554, float* %mean, align 4, !dbg !4425
  %1144 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4425
  %blue2555 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1144, i32 0, i32 0, !dbg !4425
  %1145 = load i16, i16* %blue2555, align 2, !dbg !4425
  %conv2556 = uitofp i16 %1145 to float, !dbg !4425
  %blue2557 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4425
  %1146 = load i16, i16* %blue2557, align 2, !dbg !4425
  %conv2558 = uitofp i16 %1146 to float, !dbg !4425
  %sub2559 = fsub float %conv2556, %conv2558, !dbg !4425
  store float %sub2559, float* %distance, align 4, !dbg !4425
  %1147 = load float, float* %mean, align 4, !dbg !4425
  %conv2560 = fpext float %1147 to double, !dbg !4425
  %sub2561 = fsub double 1.966070e+05, %conv2560, !dbg !4425
  %mul2562 = fmul double 0x3EF0001000100010, %sub2561, !dbg !4425
  %1148 = load float, float* %distance, align 4, !dbg !4425
  %conv2563 = fpext float %1148 to double, !dbg !4425
  %mul2564 = fmul double %mul2562, %conv2563, !dbg !4425
  %1149 = load float, float* %distance, align 4, !dbg !4425
  %conv2565 = fpext float %1149 to double, !dbg !4425
  %mul2566 = fmul double %mul2564, %conv2565, !dbg !4425
  %1150 = load float, float* %distance_squared, align 4, !dbg !4425
  %conv2567 = fpext float %1150 to double, !dbg !4425
  %add2568 = fadd double %conv2567, %mul2566, !dbg !4425
  %conv2569 = fptrunc double %add2568 to float, !dbg !4425
  store float %conv2569, float* %distance_squared, align 4, !dbg !4425
  %1151 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4425
  %opacity2570 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1151, i32 0, i32 3, !dbg !4425
  %1152 = load i16, i16* %opacity2570, align 2, !dbg !4425
  %conv2571 = uitofp i16 %1152 to float, !dbg !4425
  %opacity2572 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4425
  %1153 = load i16, i16* %opacity2572, align 2, !dbg !4425
  %conv2573 = zext i16 %1153 to i32, !dbg !4425
  %conv2574 = sitofp i32 %conv2573 to float, !dbg !4425
  %add2575 = fadd float %conv2571, %conv2574, !dbg !4425
  %div2576 = fdiv float %add2575, 2.000000e+00, !dbg !4425
  store float %div2576, float* %mean, align 4, !dbg !4425
  %1154 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4425
  %opacity2577 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1154, i32 0, i32 3, !dbg !4425
  %1155 = load i16, i16* %opacity2577, align 2, !dbg !4425
  %conv2578 = uitofp i16 %1155 to float, !dbg !4425
  %opacity2579 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4425
  %1156 = load i16, i16* %opacity2579, align 2, !dbg !4425
  %conv2580 = uitofp i16 %1156 to float, !dbg !4425
  %sub2581 = fsub float %conv2578, %conv2580, !dbg !4425
  store float %sub2581, float* %distance, align 4, !dbg !4425
  %1157 = load float, float* %mean, align 4, !dbg !4425
  %conv2582 = fpext float %1157 to double, !dbg !4425
  %sub2583 = fsub double 1.966070e+05, %conv2582, !dbg !4425
  %mul2584 = fmul double 0x3EF0001000100010, %sub2583, !dbg !4425
  %1158 = load float, float* %distance, align 4, !dbg !4425
  %conv2585 = fpext float %1158 to double, !dbg !4425
  %mul2586 = fmul double %mul2584, %conv2585, !dbg !4425
  %1159 = load float, float* %distance, align 4, !dbg !4425
  %conv2587 = fpext float %1159 to double, !dbg !4425
  %mul2588 = fmul double %mul2586, %conv2587, !dbg !4425
  %1160 = load float, float* %distance_squared, align 4, !dbg !4425
  %conv2589 = fpext float %1160 to double, !dbg !4425
  %add2590 = fadd double %conv2589, %mul2588, !dbg !4425
  %conv2591 = fptrunc double %add2590 to float, !dbg !4425
  store float %conv2591, float* %distance_squared, align 4, !dbg !4425
  %1161 = load float, float* %distance_squared, align 4, !dbg !4426
  %cmp2592 = fcmp olt float %1161, 0x41A47AB860000000, !dbg !4426
  br i1 %cmp2592, label %if.then2594, label %if.end2630, !dbg !4425

if.then2594:                                      ; preds = %if.end2503
  %1162 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4428
  %red2595 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1162, i32 0, i32 2, !dbg !4428
  %1163 = load i16, i16* %red2595, align 2, !dbg !4428
  %conv2596 = zext i16 %1163 to i32, !dbg !4428
  %conv2597 = sitofp i32 %conv2596 to double, !dbg !4428
  %mul2598 = fmul double 5.000000e+00, %conv2597, !dbg !4428
  %red2599 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4428
  %1164 = load float, float* %red2599, align 8, !dbg !4428
  %conv2600 = fpext float %1164 to double, !dbg !4428
  %add2601 = fadd double %conv2600, %mul2598, !dbg !4428
  %conv2602 = fptrunc double %add2601 to float, !dbg !4428
  store float %conv2602, float* %red2599, align 8, !dbg !4428
  %1165 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4428
  %green2603 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1165, i32 0, i32 1, !dbg !4428
  %1166 = load i16, i16* %green2603, align 2, !dbg !4428
  %conv2604 = zext i16 %1166 to i32, !dbg !4428
  %conv2605 = sitofp i32 %conv2604 to double, !dbg !4428
  %mul2606 = fmul double 5.000000e+00, %conv2605, !dbg !4428
  %green2607 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4428
  %1167 = load float, float* %green2607, align 4, !dbg !4428
  %conv2608 = fpext float %1167 to double, !dbg !4428
  %add2609 = fadd double %conv2608, %mul2606, !dbg !4428
  %conv2610 = fptrunc double %add2609 to float, !dbg !4428
  store float %conv2610, float* %green2607, align 4, !dbg !4428
  %1168 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4428
  %blue2611 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1168, i32 0, i32 0, !dbg !4428
  %1169 = load i16, i16* %blue2611, align 2, !dbg !4428
  %conv2612 = zext i16 %1169 to i32, !dbg !4428
  %conv2613 = sitofp i32 %conv2612 to double, !dbg !4428
  %mul2614 = fmul double 5.000000e+00, %conv2613, !dbg !4428
  %blue2615 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4428
  %1170 = load float, float* %blue2615, align 8, !dbg !4428
  %conv2616 = fpext float %1170 to double, !dbg !4428
  %add2617 = fadd double %conv2616, %mul2614, !dbg !4428
  %conv2618 = fptrunc double %add2617 to float, !dbg !4428
  store float %conv2618, float* %blue2615, align 8, !dbg !4428
  %1171 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4428
  %opacity2619 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1171, i32 0, i32 3, !dbg !4428
  %1172 = load i16, i16* %opacity2619, align 2, !dbg !4428
  %conv2620 = zext i16 %1172 to i32, !dbg !4428
  %conv2621 = sitofp i32 %conv2620 to double, !dbg !4428
  %mul2622 = fmul double 5.000000e+00, %conv2621, !dbg !4428
  %opacity2623 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4428
  %1173 = load float, float* %opacity2623, align 4, !dbg !4428
  %conv2624 = fpext float %1173 to double, !dbg !4428
  %add2625 = fadd double %conv2624, %mul2622, !dbg !4428
  %conv2626 = fptrunc double %add2625 to float, !dbg !4428
  store float %conv2626, float* %opacity2623, align 4, !dbg !4428
  %1174 = load float, float* %total_weight, align 4, !dbg !4428
  %conv2627 = fpext float %1174 to double, !dbg !4428
  %add2628 = fadd double %conv2627, 5.000000e+00, !dbg !4428
  %conv2629 = fptrunc double %add2628 to float, !dbg !4428
  store float %conv2629, float* %total_weight, align 4, !dbg !4428
  br label %if.end2630, !dbg !4428

if.end2630:                                       ; preds = %if.then2594, %if.end2503
  %1175 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4425
  %incdec.ptr2631 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1175, i32 1, !dbg !4425
  store %struct._PixelPacket* %incdec.ptr2631, %struct._PixelPacket** %r, align 8, !dbg !4425
  %1176 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4430
  %red2632 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1176, i32 0, i32 2, !dbg !4430
  %1177 = load i16, i16* %red2632, align 2, !dbg !4430
  %conv2633 = uitofp i16 %1177 to float, !dbg !4430
  %red2634 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4430
  %1178 = load i16, i16* %red2634, align 2, !dbg !4430
  %conv2635 = zext i16 %1178 to i32, !dbg !4430
  %conv2636 = sitofp i32 %conv2635 to float, !dbg !4430
  %add2637 = fadd float %conv2633, %conv2636, !dbg !4430
  %div2638 = fdiv float %add2637, 2.000000e+00, !dbg !4430
  store float %div2638, float* %mean, align 4, !dbg !4430
  %1179 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4430
  %red2639 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1179, i32 0, i32 2, !dbg !4430
  %1180 = load i16, i16* %red2639, align 2, !dbg !4430
  %conv2640 = uitofp i16 %1180 to float, !dbg !4430
  %red2641 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4430
  %1181 = load i16, i16* %red2641, align 2, !dbg !4430
  %conv2642 = uitofp i16 %1181 to float, !dbg !4430
  %sub2643 = fsub float %conv2640, %conv2642, !dbg !4430
  store float %sub2643, float* %distance, align 4, !dbg !4430
  %1182 = load float, float* %mean, align 4, !dbg !4430
  %conv2644 = fpext float %1182 to double, !dbg !4430
  %add2645 = fadd double 1.310720e+05, %conv2644, !dbg !4430
  %mul2646 = fmul double 0x3EF0001000100010, %add2645, !dbg !4430
  %1183 = load float, float* %distance, align 4, !dbg !4430
  %conv2647 = fpext float %1183 to double, !dbg !4430
  %mul2648 = fmul double %mul2646, %conv2647, !dbg !4430
  %1184 = load float, float* %distance, align 4, !dbg !4430
  %conv2649 = fpext float %1184 to double, !dbg !4430
  %mul2650 = fmul double %mul2648, %conv2649, !dbg !4430
  %conv2651 = fptrunc double %mul2650 to float, !dbg !4430
  store float %conv2651, float* %distance_squared, align 4, !dbg !4430
  %1185 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4430
  %green2652 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1185, i32 0, i32 1, !dbg !4430
  %1186 = load i16, i16* %green2652, align 2, !dbg !4430
  %conv2653 = uitofp i16 %1186 to float, !dbg !4430
  %green2654 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4430
  %1187 = load i16, i16* %green2654, align 2, !dbg !4430
  %conv2655 = zext i16 %1187 to i32, !dbg !4430
  %conv2656 = sitofp i32 %conv2655 to float, !dbg !4430
  %add2657 = fadd float %conv2653, %conv2656, !dbg !4430
  %div2658 = fdiv float %add2657, 2.000000e+00, !dbg !4430
  store float %div2658, float* %mean, align 4, !dbg !4430
  %1188 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4430
  %green2659 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1188, i32 0, i32 1, !dbg !4430
  %1189 = load i16, i16* %green2659, align 2, !dbg !4430
  %conv2660 = uitofp i16 %1189 to float, !dbg !4430
  %green2661 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4430
  %1190 = load i16, i16* %green2661, align 2, !dbg !4430
  %conv2662 = uitofp i16 %1190 to float, !dbg !4430
  %sub2663 = fsub float %conv2660, %conv2662, !dbg !4430
  store float %sub2663, float* %distance, align 4, !dbg !4430
  %1191 = load float, float* %distance, align 4, !dbg !4430
  %conv2664 = fpext float %1191 to double, !dbg !4430
  %mul2665 = fmul double 4.000000e+00, %conv2664, !dbg !4430
  %1192 = load float, float* %distance, align 4, !dbg !4430
  %conv2666 = fpext float %1192 to double, !dbg !4430
  %mul2667 = fmul double %mul2665, %conv2666, !dbg !4430
  %1193 = load float, float* %distance_squared, align 4, !dbg !4430
  %conv2668 = fpext float %1193 to double, !dbg !4430
  %add2669 = fadd double %conv2668, %mul2667, !dbg !4430
  %conv2670 = fptrunc double %add2669 to float, !dbg !4430
  store float %conv2670, float* %distance_squared, align 4, !dbg !4430
  %1194 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4430
  %blue2671 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1194, i32 0, i32 0, !dbg !4430
  %1195 = load i16, i16* %blue2671, align 2, !dbg !4430
  %conv2672 = uitofp i16 %1195 to float, !dbg !4430
  %blue2673 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4430
  %1196 = load i16, i16* %blue2673, align 2, !dbg !4430
  %conv2674 = zext i16 %1196 to i32, !dbg !4430
  %conv2675 = sitofp i32 %conv2674 to float, !dbg !4430
  %add2676 = fadd float %conv2672, %conv2675, !dbg !4430
  %div2677 = fdiv float %add2676, 2.000000e+00, !dbg !4430
  store float %div2677, float* %mean, align 4, !dbg !4430
  %1197 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4430
  %blue2678 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1197, i32 0, i32 0, !dbg !4430
  %1198 = load i16, i16* %blue2678, align 2, !dbg !4430
  %conv2679 = uitofp i16 %1198 to float, !dbg !4430
  %blue2680 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4430
  %1199 = load i16, i16* %blue2680, align 2, !dbg !4430
  %conv2681 = uitofp i16 %1199 to float, !dbg !4430
  %sub2682 = fsub float %conv2679, %conv2681, !dbg !4430
  store float %sub2682, float* %distance, align 4, !dbg !4430
  %1200 = load float, float* %mean, align 4, !dbg !4430
  %conv2683 = fpext float %1200 to double, !dbg !4430
  %sub2684 = fsub double 1.966070e+05, %conv2683, !dbg !4430
  %mul2685 = fmul double 0x3EF0001000100010, %sub2684, !dbg !4430
  %1201 = load float, float* %distance, align 4, !dbg !4430
  %conv2686 = fpext float %1201 to double, !dbg !4430
  %mul2687 = fmul double %mul2685, %conv2686, !dbg !4430
  %1202 = load float, float* %distance, align 4, !dbg !4430
  %conv2688 = fpext float %1202 to double, !dbg !4430
  %mul2689 = fmul double %mul2687, %conv2688, !dbg !4430
  %1203 = load float, float* %distance_squared, align 4, !dbg !4430
  %conv2690 = fpext float %1203 to double, !dbg !4430
  %add2691 = fadd double %conv2690, %mul2689, !dbg !4430
  %conv2692 = fptrunc double %add2691 to float, !dbg !4430
  store float %conv2692, float* %distance_squared, align 4, !dbg !4430
  %1204 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4430
  %opacity2693 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1204, i32 0, i32 3, !dbg !4430
  %1205 = load i16, i16* %opacity2693, align 2, !dbg !4430
  %conv2694 = uitofp i16 %1205 to float, !dbg !4430
  %opacity2695 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4430
  %1206 = load i16, i16* %opacity2695, align 2, !dbg !4430
  %conv2696 = zext i16 %1206 to i32, !dbg !4430
  %conv2697 = sitofp i32 %conv2696 to float, !dbg !4430
  %add2698 = fadd float %conv2694, %conv2697, !dbg !4430
  %div2699 = fdiv float %add2698, 2.000000e+00, !dbg !4430
  store float %div2699, float* %mean, align 4, !dbg !4430
  %1207 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4430
  %opacity2700 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1207, i32 0, i32 3, !dbg !4430
  %1208 = load i16, i16* %opacity2700, align 2, !dbg !4430
  %conv2701 = uitofp i16 %1208 to float, !dbg !4430
  %opacity2702 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4430
  %1209 = load i16, i16* %opacity2702, align 2, !dbg !4430
  %conv2703 = uitofp i16 %1209 to float, !dbg !4430
  %sub2704 = fsub float %conv2701, %conv2703, !dbg !4430
  store float %sub2704, float* %distance, align 4, !dbg !4430
  %1210 = load float, float* %mean, align 4, !dbg !4430
  %conv2705 = fpext float %1210 to double, !dbg !4430
  %sub2706 = fsub double 1.966070e+05, %conv2705, !dbg !4430
  %mul2707 = fmul double 0x3EF0001000100010, %sub2706, !dbg !4430
  %1211 = load float, float* %distance, align 4, !dbg !4430
  %conv2708 = fpext float %1211 to double, !dbg !4430
  %mul2709 = fmul double %mul2707, %conv2708, !dbg !4430
  %1212 = load float, float* %distance, align 4, !dbg !4430
  %conv2710 = fpext float %1212 to double, !dbg !4430
  %mul2711 = fmul double %mul2709, %conv2710, !dbg !4430
  %1213 = load float, float* %distance_squared, align 4, !dbg !4430
  %conv2712 = fpext float %1213 to double, !dbg !4430
  %add2713 = fadd double %conv2712, %mul2711, !dbg !4430
  %conv2714 = fptrunc double %add2713 to float, !dbg !4430
  store float %conv2714, float* %distance_squared, align 4, !dbg !4430
  %1214 = load float, float* %distance_squared, align 4, !dbg !4431
  %cmp2715 = fcmp olt float %1214, 0x41A47AB860000000, !dbg !4431
  br i1 %cmp2715, label %if.then2717, label %if.end2753, !dbg !4430

if.then2717:                                      ; preds = %if.end2630
  %1215 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4433
  %red2718 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1215, i32 0, i32 2, !dbg !4433
  %1216 = load i16, i16* %red2718, align 2, !dbg !4433
  %conv2719 = zext i16 %1216 to i32, !dbg !4433
  %conv2720 = sitofp i32 %conv2719 to double, !dbg !4433
  %mul2721 = fmul double 8.000000e+00, %conv2720, !dbg !4433
  %red2722 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4433
  %1217 = load float, float* %red2722, align 8, !dbg !4433
  %conv2723 = fpext float %1217 to double, !dbg !4433
  %add2724 = fadd double %conv2723, %mul2721, !dbg !4433
  %conv2725 = fptrunc double %add2724 to float, !dbg !4433
  store float %conv2725, float* %red2722, align 8, !dbg !4433
  %1218 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4433
  %green2726 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1218, i32 0, i32 1, !dbg !4433
  %1219 = load i16, i16* %green2726, align 2, !dbg !4433
  %conv2727 = zext i16 %1219 to i32, !dbg !4433
  %conv2728 = sitofp i32 %conv2727 to double, !dbg !4433
  %mul2729 = fmul double 8.000000e+00, %conv2728, !dbg !4433
  %green2730 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4433
  %1220 = load float, float* %green2730, align 4, !dbg !4433
  %conv2731 = fpext float %1220 to double, !dbg !4433
  %add2732 = fadd double %conv2731, %mul2729, !dbg !4433
  %conv2733 = fptrunc double %add2732 to float, !dbg !4433
  store float %conv2733, float* %green2730, align 4, !dbg !4433
  %1221 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4433
  %blue2734 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1221, i32 0, i32 0, !dbg !4433
  %1222 = load i16, i16* %blue2734, align 2, !dbg !4433
  %conv2735 = zext i16 %1222 to i32, !dbg !4433
  %conv2736 = sitofp i32 %conv2735 to double, !dbg !4433
  %mul2737 = fmul double 8.000000e+00, %conv2736, !dbg !4433
  %blue2738 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4433
  %1223 = load float, float* %blue2738, align 8, !dbg !4433
  %conv2739 = fpext float %1223 to double, !dbg !4433
  %add2740 = fadd double %conv2739, %mul2737, !dbg !4433
  %conv2741 = fptrunc double %add2740 to float, !dbg !4433
  store float %conv2741, float* %blue2738, align 8, !dbg !4433
  %1224 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4433
  %opacity2742 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1224, i32 0, i32 3, !dbg !4433
  %1225 = load i16, i16* %opacity2742, align 2, !dbg !4433
  %conv2743 = zext i16 %1225 to i32, !dbg !4433
  %conv2744 = sitofp i32 %conv2743 to double, !dbg !4433
  %mul2745 = fmul double 8.000000e+00, %conv2744, !dbg !4433
  %opacity2746 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4433
  %1226 = load float, float* %opacity2746, align 4, !dbg !4433
  %conv2747 = fpext float %1226 to double, !dbg !4433
  %add2748 = fadd double %conv2747, %mul2745, !dbg !4433
  %conv2749 = fptrunc double %add2748 to float, !dbg !4433
  store float %conv2749, float* %opacity2746, align 4, !dbg !4433
  %1227 = load float, float* %total_weight, align 4, !dbg !4433
  %conv2750 = fpext float %1227 to double, !dbg !4433
  %add2751 = fadd double %conv2750, 8.000000e+00, !dbg !4433
  %conv2752 = fptrunc double %add2751 to float, !dbg !4433
  store float %conv2752, float* %total_weight, align 4, !dbg !4433
  br label %if.end2753, !dbg !4433

if.end2753:                                       ; preds = %if.then2717, %if.end2630
  %1228 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4430
  %incdec.ptr2754 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1228, i32 1, !dbg !4430
  store %struct._PixelPacket* %incdec.ptr2754, %struct._PixelPacket** %r, align 8, !dbg !4430
  %1229 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4435
  %red2755 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1229, i32 0, i32 2, !dbg !4435
  %1230 = load i16, i16* %red2755, align 2, !dbg !4435
  %conv2756 = uitofp i16 %1230 to float, !dbg !4435
  %red2757 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4435
  %1231 = load i16, i16* %red2757, align 2, !dbg !4435
  %conv2758 = zext i16 %1231 to i32, !dbg !4435
  %conv2759 = sitofp i32 %conv2758 to float, !dbg !4435
  %add2760 = fadd float %conv2756, %conv2759, !dbg !4435
  %div2761 = fdiv float %add2760, 2.000000e+00, !dbg !4435
  store float %div2761, float* %mean, align 4, !dbg !4435
  %1232 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4435
  %red2762 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1232, i32 0, i32 2, !dbg !4435
  %1233 = load i16, i16* %red2762, align 2, !dbg !4435
  %conv2763 = uitofp i16 %1233 to float, !dbg !4435
  %red2764 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4435
  %1234 = load i16, i16* %red2764, align 2, !dbg !4435
  %conv2765 = uitofp i16 %1234 to float, !dbg !4435
  %sub2766 = fsub float %conv2763, %conv2765, !dbg !4435
  store float %sub2766, float* %distance, align 4, !dbg !4435
  %1235 = load float, float* %mean, align 4, !dbg !4435
  %conv2767 = fpext float %1235 to double, !dbg !4435
  %add2768 = fadd double 1.310720e+05, %conv2767, !dbg !4435
  %mul2769 = fmul double 0x3EF0001000100010, %add2768, !dbg !4435
  %1236 = load float, float* %distance, align 4, !dbg !4435
  %conv2770 = fpext float %1236 to double, !dbg !4435
  %mul2771 = fmul double %mul2769, %conv2770, !dbg !4435
  %1237 = load float, float* %distance, align 4, !dbg !4435
  %conv2772 = fpext float %1237 to double, !dbg !4435
  %mul2773 = fmul double %mul2771, %conv2772, !dbg !4435
  %conv2774 = fptrunc double %mul2773 to float, !dbg !4435
  store float %conv2774, float* %distance_squared, align 4, !dbg !4435
  %1238 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4435
  %green2775 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1238, i32 0, i32 1, !dbg !4435
  %1239 = load i16, i16* %green2775, align 2, !dbg !4435
  %conv2776 = uitofp i16 %1239 to float, !dbg !4435
  %green2777 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4435
  %1240 = load i16, i16* %green2777, align 2, !dbg !4435
  %conv2778 = zext i16 %1240 to i32, !dbg !4435
  %conv2779 = sitofp i32 %conv2778 to float, !dbg !4435
  %add2780 = fadd float %conv2776, %conv2779, !dbg !4435
  %div2781 = fdiv float %add2780, 2.000000e+00, !dbg !4435
  store float %div2781, float* %mean, align 4, !dbg !4435
  %1241 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4435
  %green2782 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1241, i32 0, i32 1, !dbg !4435
  %1242 = load i16, i16* %green2782, align 2, !dbg !4435
  %conv2783 = uitofp i16 %1242 to float, !dbg !4435
  %green2784 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4435
  %1243 = load i16, i16* %green2784, align 2, !dbg !4435
  %conv2785 = uitofp i16 %1243 to float, !dbg !4435
  %sub2786 = fsub float %conv2783, %conv2785, !dbg !4435
  store float %sub2786, float* %distance, align 4, !dbg !4435
  %1244 = load float, float* %distance, align 4, !dbg !4435
  %conv2787 = fpext float %1244 to double, !dbg !4435
  %mul2788 = fmul double 4.000000e+00, %conv2787, !dbg !4435
  %1245 = load float, float* %distance, align 4, !dbg !4435
  %conv2789 = fpext float %1245 to double, !dbg !4435
  %mul2790 = fmul double %mul2788, %conv2789, !dbg !4435
  %1246 = load float, float* %distance_squared, align 4, !dbg !4435
  %conv2791 = fpext float %1246 to double, !dbg !4435
  %add2792 = fadd double %conv2791, %mul2790, !dbg !4435
  %conv2793 = fptrunc double %add2792 to float, !dbg !4435
  store float %conv2793, float* %distance_squared, align 4, !dbg !4435
  %1247 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4435
  %blue2794 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1247, i32 0, i32 0, !dbg !4435
  %1248 = load i16, i16* %blue2794, align 2, !dbg !4435
  %conv2795 = uitofp i16 %1248 to float, !dbg !4435
  %blue2796 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4435
  %1249 = load i16, i16* %blue2796, align 2, !dbg !4435
  %conv2797 = zext i16 %1249 to i32, !dbg !4435
  %conv2798 = sitofp i32 %conv2797 to float, !dbg !4435
  %add2799 = fadd float %conv2795, %conv2798, !dbg !4435
  %div2800 = fdiv float %add2799, 2.000000e+00, !dbg !4435
  store float %div2800, float* %mean, align 4, !dbg !4435
  %1250 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4435
  %blue2801 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1250, i32 0, i32 0, !dbg !4435
  %1251 = load i16, i16* %blue2801, align 2, !dbg !4435
  %conv2802 = uitofp i16 %1251 to float, !dbg !4435
  %blue2803 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4435
  %1252 = load i16, i16* %blue2803, align 2, !dbg !4435
  %conv2804 = uitofp i16 %1252 to float, !dbg !4435
  %sub2805 = fsub float %conv2802, %conv2804, !dbg !4435
  store float %sub2805, float* %distance, align 4, !dbg !4435
  %1253 = load float, float* %mean, align 4, !dbg !4435
  %conv2806 = fpext float %1253 to double, !dbg !4435
  %sub2807 = fsub double 1.966070e+05, %conv2806, !dbg !4435
  %mul2808 = fmul double 0x3EF0001000100010, %sub2807, !dbg !4435
  %1254 = load float, float* %distance, align 4, !dbg !4435
  %conv2809 = fpext float %1254 to double, !dbg !4435
  %mul2810 = fmul double %mul2808, %conv2809, !dbg !4435
  %1255 = load float, float* %distance, align 4, !dbg !4435
  %conv2811 = fpext float %1255 to double, !dbg !4435
  %mul2812 = fmul double %mul2810, %conv2811, !dbg !4435
  %1256 = load float, float* %distance_squared, align 4, !dbg !4435
  %conv2813 = fpext float %1256 to double, !dbg !4435
  %add2814 = fadd double %conv2813, %mul2812, !dbg !4435
  %conv2815 = fptrunc double %add2814 to float, !dbg !4435
  store float %conv2815, float* %distance_squared, align 4, !dbg !4435
  %1257 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4435
  %opacity2816 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1257, i32 0, i32 3, !dbg !4435
  %1258 = load i16, i16* %opacity2816, align 2, !dbg !4435
  %conv2817 = uitofp i16 %1258 to float, !dbg !4435
  %opacity2818 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4435
  %1259 = load i16, i16* %opacity2818, align 2, !dbg !4435
  %conv2819 = zext i16 %1259 to i32, !dbg !4435
  %conv2820 = sitofp i32 %conv2819 to float, !dbg !4435
  %add2821 = fadd float %conv2817, %conv2820, !dbg !4435
  %div2822 = fdiv float %add2821, 2.000000e+00, !dbg !4435
  store float %div2822, float* %mean, align 4, !dbg !4435
  %1260 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4435
  %opacity2823 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1260, i32 0, i32 3, !dbg !4435
  %1261 = load i16, i16* %opacity2823, align 2, !dbg !4435
  %conv2824 = uitofp i16 %1261 to float, !dbg !4435
  %opacity2825 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4435
  %1262 = load i16, i16* %opacity2825, align 2, !dbg !4435
  %conv2826 = uitofp i16 %1262 to float, !dbg !4435
  %sub2827 = fsub float %conv2824, %conv2826, !dbg !4435
  store float %sub2827, float* %distance, align 4, !dbg !4435
  %1263 = load float, float* %mean, align 4, !dbg !4435
  %conv2828 = fpext float %1263 to double, !dbg !4435
  %sub2829 = fsub double 1.966070e+05, %conv2828, !dbg !4435
  %mul2830 = fmul double 0x3EF0001000100010, %sub2829, !dbg !4435
  %1264 = load float, float* %distance, align 4, !dbg !4435
  %conv2831 = fpext float %1264 to double, !dbg !4435
  %mul2832 = fmul double %mul2830, %conv2831, !dbg !4435
  %1265 = load float, float* %distance, align 4, !dbg !4435
  %conv2833 = fpext float %1265 to double, !dbg !4435
  %mul2834 = fmul double %mul2832, %conv2833, !dbg !4435
  %1266 = load float, float* %distance_squared, align 4, !dbg !4435
  %conv2835 = fpext float %1266 to double, !dbg !4435
  %add2836 = fadd double %conv2835, %mul2834, !dbg !4435
  %conv2837 = fptrunc double %add2836 to float, !dbg !4435
  store float %conv2837, float* %distance_squared, align 4, !dbg !4435
  %1267 = load float, float* %distance_squared, align 4, !dbg !4436
  %cmp2838 = fcmp olt float %1267, 0x41A47AB860000000, !dbg !4436
  br i1 %cmp2838, label %if.then2840, label %if.end2876, !dbg !4435

if.then2840:                                      ; preds = %if.end2753
  %1268 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4438
  %red2841 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1268, i32 0, i32 2, !dbg !4438
  %1269 = load i16, i16* %red2841, align 2, !dbg !4438
  %conv2842 = zext i16 %1269 to i32, !dbg !4438
  %conv2843 = sitofp i32 %conv2842 to double, !dbg !4438
  %mul2844 = fmul double 1.000000e+01, %conv2843, !dbg !4438
  %red2845 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4438
  %1270 = load float, float* %red2845, align 8, !dbg !4438
  %conv2846 = fpext float %1270 to double, !dbg !4438
  %add2847 = fadd double %conv2846, %mul2844, !dbg !4438
  %conv2848 = fptrunc double %add2847 to float, !dbg !4438
  store float %conv2848, float* %red2845, align 8, !dbg !4438
  %1271 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4438
  %green2849 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1271, i32 0, i32 1, !dbg !4438
  %1272 = load i16, i16* %green2849, align 2, !dbg !4438
  %conv2850 = zext i16 %1272 to i32, !dbg !4438
  %conv2851 = sitofp i32 %conv2850 to double, !dbg !4438
  %mul2852 = fmul double 1.000000e+01, %conv2851, !dbg !4438
  %green2853 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4438
  %1273 = load float, float* %green2853, align 4, !dbg !4438
  %conv2854 = fpext float %1273 to double, !dbg !4438
  %add2855 = fadd double %conv2854, %mul2852, !dbg !4438
  %conv2856 = fptrunc double %add2855 to float, !dbg !4438
  store float %conv2856, float* %green2853, align 4, !dbg !4438
  %1274 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4438
  %blue2857 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1274, i32 0, i32 0, !dbg !4438
  %1275 = load i16, i16* %blue2857, align 2, !dbg !4438
  %conv2858 = zext i16 %1275 to i32, !dbg !4438
  %conv2859 = sitofp i32 %conv2858 to double, !dbg !4438
  %mul2860 = fmul double 1.000000e+01, %conv2859, !dbg !4438
  %blue2861 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4438
  %1276 = load float, float* %blue2861, align 8, !dbg !4438
  %conv2862 = fpext float %1276 to double, !dbg !4438
  %add2863 = fadd double %conv2862, %mul2860, !dbg !4438
  %conv2864 = fptrunc double %add2863 to float, !dbg !4438
  store float %conv2864, float* %blue2861, align 8, !dbg !4438
  %1277 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4438
  %opacity2865 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1277, i32 0, i32 3, !dbg !4438
  %1278 = load i16, i16* %opacity2865, align 2, !dbg !4438
  %conv2866 = zext i16 %1278 to i32, !dbg !4438
  %conv2867 = sitofp i32 %conv2866 to double, !dbg !4438
  %mul2868 = fmul double 1.000000e+01, %conv2867, !dbg !4438
  %opacity2869 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4438
  %1279 = load float, float* %opacity2869, align 4, !dbg !4438
  %conv2870 = fpext float %1279 to double, !dbg !4438
  %add2871 = fadd double %conv2870, %mul2868, !dbg !4438
  %conv2872 = fptrunc double %add2871 to float, !dbg !4438
  store float %conv2872, float* %opacity2869, align 4, !dbg !4438
  %1280 = load float, float* %total_weight, align 4, !dbg !4438
  %conv2873 = fpext float %1280 to double, !dbg !4438
  %add2874 = fadd double %conv2873, 1.000000e+01, !dbg !4438
  %conv2875 = fptrunc double %add2874 to float, !dbg !4438
  store float %conv2875, float* %total_weight, align 4, !dbg !4438
  br label %if.end2876, !dbg !4438

if.end2876:                                       ; preds = %if.then2840, %if.end2753
  %1281 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4435
  %incdec.ptr2877 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1281, i32 1, !dbg !4435
  store %struct._PixelPacket* %incdec.ptr2877, %struct._PixelPacket** %r, align 8, !dbg !4435
  %1282 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4440
  %red2878 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1282, i32 0, i32 2, !dbg !4440
  %1283 = load i16, i16* %red2878, align 2, !dbg !4440
  %conv2879 = uitofp i16 %1283 to float, !dbg !4440
  %red2880 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4440
  %1284 = load i16, i16* %red2880, align 2, !dbg !4440
  %conv2881 = zext i16 %1284 to i32, !dbg !4440
  %conv2882 = sitofp i32 %conv2881 to float, !dbg !4440
  %add2883 = fadd float %conv2879, %conv2882, !dbg !4440
  %div2884 = fdiv float %add2883, 2.000000e+00, !dbg !4440
  store float %div2884, float* %mean, align 4, !dbg !4440
  %1285 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4440
  %red2885 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1285, i32 0, i32 2, !dbg !4440
  %1286 = load i16, i16* %red2885, align 2, !dbg !4440
  %conv2886 = uitofp i16 %1286 to float, !dbg !4440
  %red2887 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4440
  %1287 = load i16, i16* %red2887, align 2, !dbg !4440
  %conv2888 = uitofp i16 %1287 to float, !dbg !4440
  %sub2889 = fsub float %conv2886, %conv2888, !dbg !4440
  store float %sub2889, float* %distance, align 4, !dbg !4440
  %1288 = load float, float* %mean, align 4, !dbg !4440
  %conv2890 = fpext float %1288 to double, !dbg !4440
  %add2891 = fadd double 1.310720e+05, %conv2890, !dbg !4440
  %mul2892 = fmul double 0x3EF0001000100010, %add2891, !dbg !4440
  %1289 = load float, float* %distance, align 4, !dbg !4440
  %conv2893 = fpext float %1289 to double, !dbg !4440
  %mul2894 = fmul double %mul2892, %conv2893, !dbg !4440
  %1290 = load float, float* %distance, align 4, !dbg !4440
  %conv2895 = fpext float %1290 to double, !dbg !4440
  %mul2896 = fmul double %mul2894, %conv2895, !dbg !4440
  %conv2897 = fptrunc double %mul2896 to float, !dbg !4440
  store float %conv2897, float* %distance_squared, align 4, !dbg !4440
  %1291 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4440
  %green2898 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1291, i32 0, i32 1, !dbg !4440
  %1292 = load i16, i16* %green2898, align 2, !dbg !4440
  %conv2899 = uitofp i16 %1292 to float, !dbg !4440
  %green2900 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4440
  %1293 = load i16, i16* %green2900, align 2, !dbg !4440
  %conv2901 = zext i16 %1293 to i32, !dbg !4440
  %conv2902 = sitofp i32 %conv2901 to float, !dbg !4440
  %add2903 = fadd float %conv2899, %conv2902, !dbg !4440
  %div2904 = fdiv float %add2903, 2.000000e+00, !dbg !4440
  store float %div2904, float* %mean, align 4, !dbg !4440
  %1294 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4440
  %green2905 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1294, i32 0, i32 1, !dbg !4440
  %1295 = load i16, i16* %green2905, align 2, !dbg !4440
  %conv2906 = uitofp i16 %1295 to float, !dbg !4440
  %green2907 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4440
  %1296 = load i16, i16* %green2907, align 2, !dbg !4440
  %conv2908 = uitofp i16 %1296 to float, !dbg !4440
  %sub2909 = fsub float %conv2906, %conv2908, !dbg !4440
  store float %sub2909, float* %distance, align 4, !dbg !4440
  %1297 = load float, float* %distance, align 4, !dbg !4440
  %conv2910 = fpext float %1297 to double, !dbg !4440
  %mul2911 = fmul double 4.000000e+00, %conv2910, !dbg !4440
  %1298 = load float, float* %distance, align 4, !dbg !4440
  %conv2912 = fpext float %1298 to double, !dbg !4440
  %mul2913 = fmul double %mul2911, %conv2912, !dbg !4440
  %1299 = load float, float* %distance_squared, align 4, !dbg !4440
  %conv2914 = fpext float %1299 to double, !dbg !4440
  %add2915 = fadd double %conv2914, %mul2913, !dbg !4440
  %conv2916 = fptrunc double %add2915 to float, !dbg !4440
  store float %conv2916, float* %distance_squared, align 4, !dbg !4440
  %1300 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4440
  %blue2917 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1300, i32 0, i32 0, !dbg !4440
  %1301 = load i16, i16* %blue2917, align 2, !dbg !4440
  %conv2918 = uitofp i16 %1301 to float, !dbg !4440
  %blue2919 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4440
  %1302 = load i16, i16* %blue2919, align 2, !dbg !4440
  %conv2920 = zext i16 %1302 to i32, !dbg !4440
  %conv2921 = sitofp i32 %conv2920 to float, !dbg !4440
  %add2922 = fadd float %conv2918, %conv2921, !dbg !4440
  %div2923 = fdiv float %add2922, 2.000000e+00, !dbg !4440
  store float %div2923, float* %mean, align 4, !dbg !4440
  %1303 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4440
  %blue2924 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1303, i32 0, i32 0, !dbg !4440
  %1304 = load i16, i16* %blue2924, align 2, !dbg !4440
  %conv2925 = uitofp i16 %1304 to float, !dbg !4440
  %blue2926 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4440
  %1305 = load i16, i16* %blue2926, align 2, !dbg !4440
  %conv2927 = uitofp i16 %1305 to float, !dbg !4440
  %sub2928 = fsub float %conv2925, %conv2927, !dbg !4440
  store float %sub2928, float* %distance, align 4, !dbg !4440
  %1306 = load float, float* %mean, align 4, !dbg !4440
  %conv2929 = fpext float %1306 to double, !dbg !4440
  %sub2930 = fsub double 1.966070e+05, %conv2929, !dbg !4440
  %mul2931 = fmul double 0x3EF0001000100010, %sub2930, !dbg !4440
  %1307 = load float, float* %distance, align 4, !dbg !4440
  %conv2932 = fpext float %1307 to double, !dbg !4440
  %mul2933 = fmul double %mul2931, %conv2932, !dbg !4440
  %1308 = load float, float* %distance, align 4, !dbg !4440
  %conv2934 = fpext float %1308 to double, !dbg !4440
  %mul2935 = fmul double %mul2933, %conv2934, !dbg !4440
  %1309 = load float, float* %distance_squared, align 4, !dbg !4440
  %conv2936 = fpext float %1309 to double, !dbg !4440
  %add2937 = fadd double %conv2936, %mul2935, !dbg !4440
  %conv2938 = fptrunc double %add2937 to float, !dbg !4440
  store float %conv2938, float* %distance_squared, align 4, !dbg !4440
  %1310 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4440
  %opacity2939 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1310, i32 0, i32 3, !dbg !4440
  %1311 = load i16, i16* %opacity2939, align 2, !dbg !4440
  %conv2940 = uitofp i16 %1311 to float, !dbg !4440
  %opacity2941 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4440
  %1312 = load i16, i16* %opacity2941, align 2, !dbg !4440
  %conv2942 = zext i16 %1312 to i32, !dbg !4440
  %conv2943 = sitofp i32 %conv2942 to float, !dbg !4440
  %add2944 = fadd float %conv2940, %conv2943, !dbg !4440
  %div2945 = fdiv float %add2944, 2.000000e+00, !dbg !4440
  store float %div2945, float* %mean, align 4, !dbg !4440
  %1313 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4440
  %opacity2946 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1313, i32 0, i32 3, !dbg !4440
  %1314 = load i16, i16* %opacity2946, align 2, !dbg !4440
  %conv2947 = uitofp i16 %1314 to float, !dbg !4440
  %opacity2948 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4440
  %1315 = load i16, i16* %opacity2948, align 2, !dbg !4440
  %conv2949 = uitofp i16 %1315 to float, !dbg !4440
  %sub2950 = fsub float %conv2947, %conv2949, !dbg !4440
  store float %sub2950, float* %distance, align 4, !dbg !4440
  %1316 = load float, float* %mean, align 4, !dbg !4440
  %conv2951 = fpext float %1316 to double, !dbg !4440
  %sub2952 = fsub double 1.966070e+05, %conv2951, !dbg !4440
  %mul2953 = fmul double 0x3EF0001000100010, %sub2952, !dbg !4440
  %1317 = load float, float* %distance, align 4, !dbg !4440
  %conv2954 = fpext float %1317 to double, !dbg !4440
  %mul2955 = fmul double %mul2953, %conv2954, !dbg !4440
  %1318 = load float, float* %distance, align 4, !dbg !4440
  %conv2956 = fpext float %1318 to double, !dbg !4440
  %mul2957 = fmul double %mul2955, %conv2956, !dbg !4440
  %1319 = load float, float* %distance_squared, align 4, !dbg !4440
  %conv2958 = fpext float %1319 to double, !dbg !4440
  %add2959 = fadd double %conv2958, %mul2957, !dbg !4440
  %conv2960 = fptrunc double %add2959 to float, !dbg !4440
  store float %conv2960, float* %distance_squared, align 4, !dbg !4440
  %1320 = load float, float* %distance_squared, align 4, !dbg !4441
  %cmp2961 = fcmp olt float %1320, 0x41A47AB860000000, !dbg !4441
  br i1 %cmp2961, label %if.then2963, label %if.end2999, !dbg !4440

if.then2963:                                      ; preds = %if.end2876
  %1321 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4443
  %red2964 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1321, i32 0, i32 2, !dbg !4443
  %1322 = load i16, i16* %red2964, align 2, !dbg !4443
  %conv2965 = zext i16 %1322 to i32, !dbg !4443
  %conv2966 = sitofp i32 %conv2965 to double, !dbg !4443
  %mul2967 = fmul double 8.000000e+00, %conv2966, !dbg !4443
  %red2968 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4443
  %1323 = load float, float* %red2968, align 8, !dbg !4443
  %conv2969 = fpext float %1323 to double, !dbg !4443
  %add2970 = fadd double %conv2969, %mul2967, !dbg !4443
  %conv2971 = fptrunc double %add2970 to float, !dbg !4443
  store float %conv2971, float* %red2968, align 8, !dbg !4443
  %1324 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4443
  %green2972 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1324, i32 0, i32 1, !dbg !4443
  %1325 = load i16, i16* %green2972, align 2, !dbg !4443
  %conv2973 = zext i16 %1325 to i32, !dbg !4443
  %conv2974 = sitofp i32 %conv2973 to double, !dbg !4443
  %mul2975 = fmul double 8.000000e+00, %conv2974, !dbg !4443
  %green2976 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4443
  %1326 = load float, float* %green2976, align 4, !dbg !4443
  %conv2977 = fpext float %1326 to double, !dbg !4443
  %add2978 = fadd double %conv2977, %mul2975, !dbg !4443
  %conv2979 = fptrunc double %add2978 to float, !dbg !4443
  store float %conv2979, float* %green2976, align 4, !dbg !4443
  %1327 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4443
  %blue2980 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1327, i32 0, i32 0, !dbg !4443
  %1328 = load i16, i16* %blue2980, align 2, !dbg !4443
  %conv2981 = zext i16 %1328 to i32, !dbg !4443
  %conv2982 = sitofp i32 %conv2981 to double, !dbg !4443
  %mul2983 = fmul double 8.000000e+00, %conv2982, !dbg !4443
  %blue2984 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4443
  %1329 = load float, float* %blue2984, align 8, !dbg !4443
  %conv2985 = fpext float %1329 to double, !dbg !4443
  %add2986 = fadd double %conv2985, %mul2983, !dbg !4443
  %conv2987 = fptrunc double %add2986 to float, !dbg !4443
  store float %conv2987, float* %blue2984, align 8, !dbg !4443
  %1330 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4443
  %opacity2988 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1330, i32 0, i32 3, !dbg !4443
  %1331 = load i16, i16* %opacity2988, align 2, !dbg !4443
  %conv2989 = zext i16 %1331 to i32, !dbg !4443
  %conv2990 = sitofp i32 %conv2989 to double, !dbg !4443
  %mul2991 = fmul double 8.000000e+00, %conv2990, !dbg !4443
  %opacity2992 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4443
  %1332 = load float, float* %opacity2992, align 4, !dbg !4443
  %conv2993 = fpext float %1332 to double, !dbg !4443
  %add2994 = fadd double %conv2993, %mul2991, !dbg !4443
  %conv2995 = fptrunc double %add2994 to float, !dbg !4443
  store float %conv2995, float* %opacity2992, align 4, !dbg !4443
  %1333 = load float, float* %total_weight, align 4, !dbg !4443
  %conv2996 = fpext float %1333 to double, !dbg !4443
  %add2997 = fadd double %conv2996, 8.000000e+00, !dbg !4443
  %conv2998 = fptrunc double %add2997 to float, !dbg !4443
  store float %conv2998, float* %total_weight, align 4, !dbg !4443
  br label %if.end2999, !dbg !4443

if.end2999:                                       ; preds = %if.then2963, %if.end2876
  %1334 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4440
  %incdec.ptr3000 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1334, i32 1, !dbg !4440
  store %struct._PixelPacket* %incdec.ptr3000, %struct._PixelPacket** %r, align 8, !dbg !4440
  %1335 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4445
  %red3001 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1335, i32 0, i32 2, !dbg !4445
  %1336 = load i16, i16* %red3001, align 2, !dbg !4445
  %conv3002 = uitofp i16 %1336 to float, !dbg !4445
  %red3003 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4445
  %1337 = load i16, i16* %red3003, align 2, !dbg !4445
  %conv3004 = zext i16 %1337 to i32, !dbg !4445
  %conv3005 = sitofp i32 %conv3004 to float, !dbg !4445
  %add3006 = fadd float %conv3002, %conv3005, !dbg !4445
  %div3007 = fdiv float %add3006, 2.000000e+00, !dbg !4445
  store float %div3007, float* %mean, align 4, !dbg !4445
  %1338 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4445
  %red3008 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1338, i32 0, i32 2, !dbg !4445
  %1339 = load i16, i16* %red3008, align 2, !dbg !4445
  %conv3009 = uitofp i16 %1339 to float, !dbg !4445
  %red3010 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 2, !dbg !4445
  %1340 = load i16, i16* %red3010, align 2, !dbg !4445
  %conv3011 = uitofp i16 %1340 to float, !dbg !4445
  %sub3012 = fsub float %conv3009, %conv3011, !dbg !4445
  store float %sub3012, float* %distance, align 4, !dbg !4445
  %1341 = load float, float* %mean, align 4, !dbg !4445
  %conv3013 = fpext float %1341 to double, !dbg !4445
  %add3014 = fadd double 1.310720e+05, %conv3013, !dbg !4445
  %mul3015 = fmul double 0x3EF0001000100010, %add3014, !dbg !4445
  %1342 = load float, float* %distance, align 4, !dbg !4445
  %conv3016 = fpext float %1342 to double, !dbg !4445
  %mul3017 = fmul double %mul3015, %conv3016, !dbg !4445
  %1343 = load float, float* %distance, align 4, !dbg !4445
  %conv3018 = fpext float %1343 to double, !dbg !4445
  %mul3019 = fmul double %mul3017, %conv3018, !dbg !4445
  %conv3020 = fptrunc double %mul3019 to float, !dbg !4445
  store float %conv3020, float* %distance_squared, align 4, !dbg !4445
  %1344 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4445
  %green3021 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1344, i32 0, i32 1, !dbg !4445
  %1345 = load i16, i16* %green3021, align 2, !dbg !4445
  %conv3022 = uitofp i16 %1345 to float, !dbg !4445
  %green3023 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4445
  %1346 = load i16, i16* %green3023, align 2, !dbg !4445
  %conv3024 = zext i16 %1346 to i32, !dbg !4445
  %conv3025 = sitofp i32 %conv3024 to float, !dbg !4445
  %add3026 = fadd float %conv3022, %conv3025, !dbg !4445
  %div3027 = fdiv float %add3026, 2.000000e+00, !dbg !4445
  store float %div3027, float* %mean, align 4, !dbg !4445
  %1347 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4445
  %green3028 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1347, i32 0, i32 1, !dbg !4445
  %1348 = load i16, i16* %green3028, align 2, !dbg !4445
  %conv3029 = uitofp i16 %1348 to float, !dbg !4445
  %green3030 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 1, !dbg !4445
  %1349 = load i16, i16* %green3030, align 2, !dbg !4445
  %conv3031 = uitofp i16 %1349 to float, !dbg !4445
  %sub3032 = fsub float %conv3029, %conv3031, !dbg !4445
  store float %sub3032, float* %distance, align 4, !dbg !4445
  %1350 = load float, float* %distance, align 4, !dbg !4445
  %conv3033 = fpext float %1350 to double, !dbg !4445
  %mul3034 = fmul double 4.000000e+00, %conv3033, !dbg !4445
  %1351 = load float, float* %distance, align 4, !dbg !4445
  %conv3035 = fpext float %1351 to double, !dbg !4445
  %mul3036 = fmul double %mul3034, %conv3035, !dbg !4445
  %1352 = load float, float* %distance_squared, align 4, !dbg !4445
  %conv3037 = fpext float %1352 to double, !dbg !4445
  %add3038 = fadd double %conv3037, %mul3036, !dbg !4445
  %conv3039 = fptrunc double %add3038 to float, !dbg !4445
  store float %conv3039, float* %distance_squared, align 4, !dbg !4445
  %1353 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4445
  %blue3040 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1353, i32 0, i32 0, !dbg !4445
  %1354 = load i16, i16* %blue3040, align 2, !dbg !4445
  %conv3041 = uitofp i16 %1354 to float, !dbg !4445
  %blue3042 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4445
  %1355 = load i16, i16* %blue3042, align 2, !dbg !4445
  %conv3043 = zext i16 %1355 to i32, !dbg !4445
  %conv3044 = sitofp i32 %conv3043 to float, !dbg !4445
  %add3045 = fadd float %conv3041, %conv3044, !dbg !4445
  %div3046 = fdiv float %add3045, 2.000000e+00, !dbg !4445
  store float %div3046, float* %mean, align 4, !dbg !4445
  %1356 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4445
  %blue3047 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1356, i32 0, i32 0, !dbg !4445
  %1357 = load i16, i16* %blue3047, align 2, !dbg !4445
  %conv3048 = uitofp i16 %1357 to float, !dbg !4445
  %blue3049 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 0, !dbg !4445
  %1358 = load i16, i16* %blue3049, align 2, !dbg !4445
  %conv3050 = uitofp i16 %1358 to float, !dbg !4445
  %sub3051 = fsub float %conv3048, %conv3050, !dbg !4445
  store float %sub3051, float* %distance, align 4, !dbg !4445
  %1359 = load float, float* %mean, align 4, !dbg !4445
  %conv3052 = fpext float %1359 to double, !dbg !4445
  %sub3053 = fsub double 1.966070e+05, %conv3052, !dbg !4445
  %mul3054 = fmul double 0x3EF0001000100010, %sub3053, !dbg !4445
  %1360 = load float, float* %distance, align 4, !dbg !4445
  %conv3055 = fpext float %1360 to double, !dbg !4445
  %mul3056 = fmul double %mul3054, %conv3055, !dbg !4445
  %1361 = load float, float* %distance, align 4, !dbg !4445
  %conv3057 = fpext float %1361 to double, !dbg !4445
  %mul3058 = fmul double %mul3056, %conv3057, !dbg !4445
  %1362 = load float, float* %distance_squared, align 4, !dbg !4445
  %conv3059 = fpext float %1362 to double, !dbg !4445
  %add3060 = fadd double %conv3059, %mul3058, !dbg !4445
  %conv3061 = fptrunc double %add3060 to float, !dbg !4445
  store float %conv3061, float* %distance_squared, align 4, !dbg !4445
  %1363 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4445
  %opacity3062 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1363, i32 0, i32 3, !dbg !4445
  %1364 = load i16, i16* %opacity3062, align 2, !dbg !4445
  %conv3063 = uitofp i16 %1364 to float, !dbg !4445
  %opacity3064 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4445
  %1365 = load i16, i16* %opacity3064, align 2, !dbg !4445
  %conv3065 = zext i16 %1365 to i32, !dbg !4445
  %conv3066 = sitofp i32 %conv3065 to float, !dbg !4445
  %add3067 = fadd float %conv3063, %conv3066, !dbg !4445
  %div3068 = fdiv float %add3067, 2.000000e+00, !dbg !4445
  store float %div3068, float* %mean, align 4, !dbg !4445
  %1366 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4445
  %opacity3069 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1366, i32 0, i32 3, !dbg !4445
  %1367 = load i16, i16* %opacity3069, align 2, !dbg !4445
  %conv3070 = uitofp i16 %1367 to float, !dbg !4445
  %opacity3071 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !4445
  %1368 = load i16, i16* %opacity3071, align 2, !dbg !4445
  %conv3072 = uitofp i16 %1368 to float, !dbg !4445
  %sub3073 = fsub float %conv3070, %conv3072, !dbg !4445
  store float %sub3073, float* %distance, align 4, !dbg !4445
  %1369 = load float, float* %mean, align 4, !dbg !4445
  %conv3074 = fpext float %1369 to double, !dbg !4445
  %sub3075 = fsub double 1.966070e+05, %conv3074, !dbg !4445
  %mul3076 = fmul double 0x3EF0001000100010, %sub3075, !dbg !4445
  %1370 = load float, float* %distance, align 4, !dbg !4445
  %conv3077 = fpext float %1370 to double, !dbg !4445
  %mul3078 = fmul double %mul3076, %conv3077, !dbg !4445
  %1371 = load float, float* %distance, align 4, !dbg !4445
  %conv3079 = fpext float %1371 to double, !dbg !4445
  %mul3080 = fmul double %mul3078, %conv3079, !dbg !4445
  %1372 = load float, float* %distance_squared, align 4, !dbg !4445
  %conv3081 = fpext float %1372 to double, !dbg !4445
  %add3082 = fadd double %conv3081, %mul3080, !dbg !4445
  %conv3083 = fptrunc double %add3082 to float, !dbg !4445
  store float %conv3083, float* %distance_squared, align 4, !dbg !4445
  %1373 = load float, float* %distance_squared, align 4, !dbg !4446
  %cmp3084 = fcmp olt float %1373, 0x41A47AB860000000, !dbg !4446
  br i1 %cmp3084, label %if.then3086, label %if.end3122, !dbg !4445

if.then3086:                                      ; preds = %if.end2999
  %1374 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4448
  %red3087 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1374, i32 0, i32 2, !dbg !4448
  %1375 = load i16, i16* %red3087, align 2, !dbg !4448
  %conv3088 = zext i16 %1375 to i32, !dbg !4448
  %conv3089 = sitofp i32 %conv3088 to double, !dbg !4448
  %mul3090 = fmul double 5.000000e+00, %conv3089, !dbg !4448
  %red3091 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4448
  %1376 = load float, float* %red3091, align 8, !dbg !4448
  %conv3092 = fpext float %1376 to double, !dbg !4448
  %add3093 = fadd double %conv3092, %mul3090, !dbg !4448
  %conv3094 = fptrunc double %add3093 to float, !dbg !4448
  store float %conv3094, float* %red3091, align 8, !dbg !4448
  %1377 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4448
  %green3095 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1377, i32 0, i32 1, !dbg !4448
  %1378 = load i16, i16* %green3095, align 2, !dbg !4448
  %conv3096 = zext i16 %1378 to i32, !dbg !4448
  %conv3097 = sitofp i32 %conv3096 to double, !dbg !4448
  %mul3098 = fmul double 5.000000e+00, %conv3097, !dbg !4448
  %green3099 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4448
  %1379 = load float, float* %green3099, align 4, !dbg !4448
  %conv3100 = fpext float %1379 to double, !dbg !4448
  %add3101 = fadd double %conv3100, %mul3098, !dbg !4448
  %conv3102 = fptrunc double %add3101 to float, !dbg !4448
  store float %conv3102, float* %green3099, align 4, !dbg !4448
  %1380 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4448
  %blue3103 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1380, i32 0, i32 0, !dbg !4448
  %1381 = load i16, i16* %blue3103, align 2, !dbg !4448
  %conv3104 = zext i16 %1381 to i32, !dbg !4448
  %conv3105 = sitofp i32 %conv3104 to double, !dbg !4448
  %mul3106 = fmul double 5.000000e+00, %conv3105, !dbg !4448
  %blue3107 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4448
  %1382 = load float, float* %blue3107, align 8, !dbg !4448
  %conv3108 = fpext float %1382 to double, !dbg !4448
  %add3109 = fadd double %conv3108, %mul3106, !dbg !4448
  %conv3110 = fptrunc double %add3109 to float, !dbg !4448
  store float %conv3110, float* %blue3107, align 8, !dbg !4448
  %1383 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4448
  %opacity3111 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1383, i32 0, i32 3, !dbg !4448
  %1384 = load i16, i16* %opacity3111, align 2, !dbg !4448
  %conv3112 = zext i16 %1384 to i32, !dbg !4448
  %conv3113 = sitofp i32 %conv3112 to double, !dbg !4448
  %mul3114 = fmul double 5.000000e+00, %conv3113, !dbg !4448
  %opacity3115 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4448
  %1385 = load float, float* %opacity3115, align 4, !dbg !4448
  %conv3116 = fpext float %1385 to double, !dbg !4448
  %add3117 = fadd double %conv3116, %mul3114, !dbg !4448
  %conv3118 = fptrunc double %add3117 to float, !dbg !4448
  store float %conv3118, float* %opacity3115, align 4, !dbg !4448
  %1386 = load float, float* %total_weight, align 4, !dbg !4448
  %conv3119 = fpext float %1386 to double, !dbg !4448
  %add3120 = fadd double %conv3119, 5.000000e+00, !dbg !4448
  %conv3121 = fptrunc double %add3120 to float, !dbg !4448
  store float %conv3121, float* %total_weight, align 4, !dbg !4448
  br label %if.end3122, !dbg !4448

if.end3122:                                       ; preds = %if.then3086, %if.end2999
  %1387 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !4445
  %incdec.ptr3123 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1387, i32 1, !dbg !4445
  store %struct._PixelPacket* %incdec.ptr3123, %struct._PixelPacket** %r, align 8, !dbg !4445
  %red3124 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 5, !dbg !4450
  %1388 = load float, float* %red3124, align 8, !dbg !4450
  %1389 = load float, float* %total_weight, align 4, !dbg !4450
  %div3125 = fdiv float %1389, 2.000000e+00, !dbg !4450
  %add3126 = fadd float %1388, %div3125, !dbg !4450
  %sub3127 = fsub float %add3126, 1.000000e+00, !dbg !4450
  %1390 = load float, float* %total_weight, align 4, !dbg !4450
  %div3128 = fdiv float %sub3127, %1390, !dbg !4450
  %conv3129 = fptoui float %div3128 to i16, !dbg !4450
  %1391 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4450
  %red3130 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1391, i32 0, i32 2, !dbg !4450
  store i16 %conv3129, i16* %red3130, align 2, !dbg !4450
  %green3131 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 6, !dbg !4451
  %1392 = load float, float* %green3131, align 4, !dbg !4451
  %1393 = load float, float* %total_weight, align 4, !dbg !4451
  %div3132 = fdiv float %1393, 2.000000e+00, !dbg !4451
  %add3133 = fadd float %1392, %div3132, !dbg !4451
  %sub3134 = fsub float %add3133, 1.000000e+00, !dbg !4451
  %1394 = load float, float* %total_weight, align 4, !dbg !4451
  %div3135 = fdiv float %sub3134, %1394, !dbg !4451
  %conv3136 = fptoui float %div3135 to i16, !dbg !4451
  %1395 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4451
  %green3137 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1395, i32 0, i32 1, !dbg !4451
  store i16 %conv3136, i16* %green3137, align 2, !dbg !4451
  %blue3138 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 7, !dbg !4452
  %1396 = load float, float* %blue3138, align 8, !dbg !4452
  %1397 = load float, float* %total_weight, align 4, !dbg !4452
  %div3139 = fdiv float %1397, 2.000000e+00, !dbg !4452
  %add3140 = fadd float %1396, %div3139, !dbg !4452
  %sub3141 = fsub float %add3140, 1.000000e+00, !dbg !4452
  %1398 = load float, float* %total_weight, align 4, !dbg !4452
  %div3142 = fdiv float %sub3141, %1398, !dbg !4452
  %conv3143 = fptoui float %div3142 to i16, !dbg !4452
  %1399 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4452
  %blue3144 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1399, i32 0, i32 0, !dbg !4452
  store i16 %conv3143, i16* %blue3144, align 2, !dbg !4452
  %opacity3145 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %aggregate, i32 0, i32 8, !dbg !4453
  %1400 = load float, float* %opacity3145, align 4, !dbg !4453
  %1401 = load float, float* %total_weight, align 4, !dbg !4453
  %div3146 = fdiv float %1401, 2.000000e+00, !dbg !4453
  %add3147 = fadd float %1400, %div3146, !dbg !4453
  %sub3148 = fsub float %add3147, 1.000000e+00, !dbg !4453
  %1402 = load float, float* %total_weight, align 4, !dbg !4453
  %div3149 = fdiv float %sub3148, %1402, !dbg !4453
  %conv3150 = fptoui float %div3149 to i16, !dbg !4453
  %1403 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4453
  %opacity3151 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1403, i32 0, i32 3, !dbg !4453
  store i16 %conv3150, i16* %opacity3151, align 2, !dbg !4453
  %1404 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4454
  %incdec.ptr3152 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1404, i32 1, !dbg !4454
  store %struct._PixelPacket* %incdec.ptr3152, %struct._PixelPacket** %p, align 8, !dbg !4454
  %1405 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !4455
  %incdec.ptr3153 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1405, i32 1, !dbg !4455
  store %struct._PixelPacket* %incdec.ptr3153, %struct._PixelPacket** %q, align 8, !dbg !4455
  br label %for.inc, !dbg !4456

for.inc:                                          ; preds = %if.end3122
  %1406 = load i64, i64* %x, align 8, !dbg !4457
  %inc = add nsw i64 %1406, 1, !dbg !4457
  store i64 %inc, i64* %x, align 8, !dbg !4457
  br label %for.cond34, !dbg !4458, !llvm.loop !4459

for.end:                                          ; preds = %for.cond34
  %1407 = load %struct._CacheView*, %struct._CacheView** %enhance_view, align 8, !dbg !4461
  %1408 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4463
  %call3154 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %1407, %struct._ExceptionInfo* %1408), !dbg !4464
  %cmp3155 = icmp eq i32 %call3154, 0, !dbg !4465
  br i1 %cmp3155, label %if.then3157, label %if.end3158, !dbg !4466

if.then3157:                                      ; preds = %for.end
  store i32 0, i32* %status, align 4, !dbg !4467
  br label %if.end3158, !dbg !4468

if.end3158:                                       ; preds = %if.then3157, %for.end
  %1409 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4469
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %1409, i32 0, i32 47, !dbg !4471
  %1410 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !4471
  %cmp3159 = icmp ne i32 (i8*, i64, i64, i8*)* %1410, null, !dbg !4472
  br i1 %cmp3159, label %if.then3161, label %if.end3169, !dbg !4473

if.then3161:                                      ; preds = %if.end3158
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !4474, metadata !DIExpression()), !dbg !4476
  %1411 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4477
  %1412 = load i64, i64* %progress, align 8, !dbg !4478
  %inc3162 = add nsw i64 %1412, 1, !dbg !4478
  store i64 %inc3162, i64* %progress, align 8, !dbg !4478
  %1413 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4479
  %rows3163 = getelementptr inbounds %struct._Image, %struct._Image* %1413, i32 0, i32 8, !dbg !4480
  %1414 = load i64, i64* %rows3163, align 8, !dbg !4480
  %call3164 = call i32 @SetImageProgress(%struct._Image* %1411, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0), i64 %1412, i64 %1414), !dbg !4481
  store i32 %call3164, i32* %proceed, align 4, !dbg !4482
  %1415 = load i32, i32* %proceed, align 4, !dbg !4483
  %cmp3165 = icmp eq i32 %1415, 0, !dbg !4485
  br i1 %cmp3165, label %if.then3167, label %if.end3168, !dbg !4486

if.then3167:                                      ; preds = %if.then3161
  store i32 0, i32* %status, align 4, !dbg !4487
  br label %if.end3168, !dbg !4488

if.end3168:                                       ; preds = %if.then3167, %if.then3161
  br label %if.end3169, !dbg !4489

if.end3169:                                       ; preds = %if.end3168, %if.end3158
  br label %for.inc3170, !dbg !4490

for.inc3170:                                      ; preds = %if.end3169, %if.then32, %if.then23
  %1416 = load i64, i64* %y, align 8, !dbg !4491
  %inc3171 = add nsw i64 %1416, 1, !dbg !4491
  store i64 %inc3171, i64* %y, align 8, !dbg !4491
  br label %for.cond, !dbg !4492, !llvm.loop !4493

for.end3172:                                      ; preds = %for.cond
  %1417 = load %struct._CacheView*, %struct._CacheView** %enhance_view, align 8, !dbg !4495
  %call3173 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %1417), !dbg !4496
  store %struct._CacheView* %call3173, %struct._CacheView** %enhance_view, align 8, !dbg !4497
  %1418 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !4498
  %call3174 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %1418), !dbg !4499
  store %struct._CacheView* %call3174, %struct._CacheView** %image_view, align 8, !dbg !4500
  %1419 = load i32, i32* %status, align 4, !dbg !4501
  %cmp3175 = icmp eq i32 %1419, 0, !dbg !4503
  br i1 %cmp3175, label %if.then3177, label %if.end3179, !dbg !4504

if.then3177:                                      ; preds = %for.end3172
  %1420 = load %struct._Image*, %struct._Image** %enhance_image, align 8, !dbg !4505
  %call3178 = call %struct._Image* @DestroyImage(%struct._Image* %1420), !dbg !4506
  store %struct._Image* %call3178, %struct._Image** %enhance_image, align 8, !dbg !4507
  br label %if.end3179, !dbg !4508

if.end3179:                                       ; preds = %if.then3177, %for.end3172
  %1421 = load %struct._Image*, %struct._Image** %enhance_image, align 8, !dbg !4509
  store %struct._Image* %1421, %struct._Image** %retval, align 8, !dbg !4510
  br label %return, !dbg !4510

return:                                           ; preds = %if.end3179, %if.then13, %if.then9, %if.then3
  %1422 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !4511
  ret %struct._Image* %1422, !dbg !4511
}

declare dso_local %struct._Image* @CloneImage(%struct._Image*, i64, i64, i32, %struct._ExceptionInfo*) #3

declare dso_local void @InheritException(%struct._ExceptionInfo*, %struct._ExceptionInfo*) #3

declare dso_local %struct._Image* @DestroyImage(%struct._Image*) #3

declare dso_local %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @EqualizeImage(%struct._Image* %image) #0 !dbg !4512 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4513, metadata !DIExpression()), !dbg !4514
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4515
  %call = call i32 @EqualizeImageChannel(%struct._Image* %0, i32 134217719), !dbg !4516
  ret i32 %call, !dbg !4517
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @EqualizeImageChannel(%struct._Image* %image, i32 %channel) #0 !dbg !4518 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %image_view = alloca %struct._CacheView*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %black = alloca %struct._MagickPixelPacket, align 8
  %histogram = alloca %struct._MagickPixelPacket*, align 8
  %intensity = alloca %struct._MagickPixelPacket, align 8
  %map = alloca %struct._MagickPixelPacket*, align 8
  %white = alloca %struct._MagickPixelPacket, align 8
  %equalize_map = alloca %struct._QuantumPixelPacket*, align 8
  %i = alloca i64, align 8
  %y = alloca i64, align 8
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %intensity49 = alloca float, align 4
  %indexes476 = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x477 = alloca i64, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4519, metadata !DIExpression()), !dbg !4520
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !4521, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !4523, metadata !DIExpression()), !dbg !4524
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !4525, metadata !DIExpression()), !dbg !4526
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4527, metadata !DIExpression()), !dbg !4528
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !4529, metadata !DIExpression()), !dbg !4530
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %black, metadata !4531, metadata !DIExpression()), !dbg !4532
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %histogram, metadata !4533, metadata !DIExpression()), !dbg !4534
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %intensity, metadata !4535, metadata !DIExpression()), !dbg !4536
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %map, metadata !4537, metadata !DIExpression()), !dbg !4538
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %white, metadata !4539, metadata !DIExpression()), !dbg !4540
  call void @llvm.dbg.declare(metadata %struct._QuantumPixelPacket** %equalize_map, metadata !4541, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4543, metadata !DIExpression()), !dbg !4544
  call void @llvm.dbg.declare(metadata i64* %y, metadata !4545, metadata !DIExpression()), !dbg !4546
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4547
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !4549
  %1 = load i32, i32* %debug, align 8, !dbg !4549
  %cmp = icmp ne i32 %1, 0, !dbg !4550
  br i1 %cmp, label %if.then, label %if.end, !dbg !4551

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4552
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !4553
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !4552
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1805, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4554
  br label %if.end, !dbg !4555

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4556
  %4 = load i32, i32* %channel.addr, align 4, !dbg !4557
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4558
  %exception1 = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 58, !dbg !4559
  %call2 = call i32 @AccelerateEqualizeImage(%struct._Image* %3, i32 %4, %struct._ExceptionInfo* %exception1), !dbg !4560
  store i32 %call2, i32* %status, align 4, !dbg !4561
  %6 = load i32, i32* %status, align 4, !dbg !4562
  %cmp3 = icmp ne i32 %6, 0, !dbg !4564
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !4565

if.then4:                                         ; preds = %if.end
  %7 = load i32, i32* %status, align 4, !dbg !4566
  store i32 %7, i32* %retval, align 4, !dbg !4567
  br label %return, !dbg !4567

if.end5:                                          ; preds = %if.end
  %call6 = call i8* @AcquireQuantumMemory(i64 65536, i64 10) #7, !dbg !4568
  %8 = bitcast i8* %call6 to %struct._QuantumPixelPacket*, !dbg !4569
  store %struct._QuantumPixelPacket* %8, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !4570
  %call7 = call i8* @AcquireQuantumMemory(i64 65536, i64 56) #7, !dbg !4571
  %9 = bitcast i8* %call7 to %struct._MagickPixelPacket*, !dbg !4572
  store %struct._MagickPixelPacket* %9, %struct._MagickPixelPacket** %histogram, align 8, !dbg !4573
  %call8 = call i8* @AcquireQuantumMemory(i64 65536, i64 56) #7, !dbg !4574
  %10 = bitcast i8* %call8 to %struct._MagickPixelPacket*, !dbg !4575
  store %struct._MagickPixelPacket* %10, %struct._MagickPixelPacket** %map, align 8, !dbg !4576
  %11 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !4577
  %cmp9 = icmp eq %struct._QuantumPixelPacket* %11, null, !dbg !4579
  br i1 %cmp9, label %if.then13, label %lor.lhs.false, !dbg !4580

lor.lhs.false:                                    ; preds = %if.end5
  %12 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !4581
  %cmp10 = icmp eq %struct._MagickPixelPacket* %12, null, !dbg !4582
  br i1 %cmp10, label %if.then13, label %lor.lhs.false11, !dbg !4583

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %13 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %map, align 8, !dbg !4584
  %cmp12 = icmp eq %struct._MagickPixelPacket* %13, null, !dbg !4585
  br i1 %cmp12, label %if.then13, label %if.end33, !dbg !4586

if.then13:                                        ; preds = %lor.lhs.false11, %lor.lhs.false, %if.end5
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %map, align 8, !dbg !4587
  %cmp14 = icmp ne %struct._MagickPixelPacket* %14, null, !dbg !4590
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !4591

if.then15:                                        ; preds = %if.then13
  %15 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %map, align 8, !dbg !4592
  %16 = bitcast %struct._MagickPixelPacket* %15 to i8*, !dbg !4592
  %call16 = call i8* @RelinquishMagickMemory(i8* %16), !dbg !4593
  %17 = bitcast i8* %call16 to %struct._MagickPixelPacket*, !dbg !4594
  store %struct._MagickPixelPacket* %17, %struct._MagickPixelPacket** %map, align 8, !dbg !4595
  br label %if.end17, !dbg !4596

if.end17:                                         ; preds = %if.then15, %if.then13
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !4597
  %cmp18 = icmp ne %struct._MagickPixelPacket* %18, null, !dbg !4599
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !4600

if.then19:                                        ; preds = %if.end17
  %19 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !4601
  %20 = bitcast %struct._MagickPixelPacket* %19 to i8*, !dbg !4601
  %call20 = call i8* @RelinquishMagickMemory(i8* %20), !dbg !4602
  %21 = bitcast i8* %call20 to %struct._MagickPixelPacket*, !dbg !4603
  store %struct._MagickPixelPacket* %21, %struct._MagickPixelPacket** %histogram, align 8, !dbg !4604
  br label %if.end21, !dbg !4605

if.end21:                                         ; preds = %if.then19, %if.end17
  %22 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !4606
  %cmp22 = icmp ne %struct._QuantumPixelPacket* %22, null, !dbg !4608
  br i1 %cmp22, label %if.then23, label %if.end25, !dbg !4609

if.then23:                                        ; preds = %if.end21
  %23 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !4610
  %24 = bitcast %struct._QuantumPixelPacket* %23 to i8*, !dbg !4610
  %call24 = call i8* @RelinquishMagickMemory(i8* %24), !dbg !4611
  %25 = bitcast i8* %call24 to %struct._QuantumPixelPacket*, !dbg !4612
  store %struct._QuantumPixelPacket* %25, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !4613
  br label %if.end25, !dbg !4614

if.end25:                                         ; preds = %if.then23, %if.end21
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4615
  %cmp26 = icmp ne %struct._Image* %26, null, !dbg !4615
  br i1 %cmp26, label %if.then27, label %if.end32, !dbg !4618

if.then27:                                        ; preds = %if.end25
  %27 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4615
  %exception28 = getelementptr inbounds %struct._Image, %struct._Image* %27, i32 0, i32 58, !dbg !4615
  %28 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4615
  %filename29 = getelementptr inbounds %struct._Image, %struct._Image* %28, i32 0, i32 53, !dbg !4615
  %arraydecay30 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename29, i64 0, i64 0, !dbg !4615
  %call31 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception28, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1832, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay30), !dbg !4615
  br label %if.end32, !dbg !4615

if.end32:                                         ; preds = %if.then27, %if.end25
  store i32 0, i32* %retval, align 4, !dbg !4618
  br label %return, !dbg !4618

if.end33:                                         ; preds = %lor.lhs.false11
  %29 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !4619
  %30 = bitcast %struct._MagickPixelPacket* %29 to i8*, !dbg !4619
  %call34 = call i8* @ResetMagickMemory(i8* %30, i32 0, i64 3670016), !dbg !4620
  %31 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4621
  %exception35 = getelementptr inbounds %struct._Image, %struct._Image* %31, i32 0, i32 58, !dbg !4622
  store %struct._ExceptionInfo* %exception35, %struct._ExceptionInfo** %exception, align 8, !dbg !4623
  %32 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4624
  %33 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4625
  %call36 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %32, %struct._ExceptionInfo* %33), !dbg !4626
  store %struct._CacheView* %call36, %struct._CacheView** %image_view, align 8, !dbg !4627
  store i64 0, i64* %y, align 8, !dbg !4628
  br label %for.cond, !dbg !4630

for.cond:                                         ; preds = %for.inc112, %if.end33
  %34 = load i64, i64* %y, align 8, !dbg !4631
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4633
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %35, i32 0, i32 8, !dbg !4634
  %36 = load i64, i64* %rows, align 8, !dbg !4634
  %cmp37 = icmp slt i64 %34, %36, !dbg !4635
  br i1 %cmp37, label %for.body, label %for.end114, !dbg !4636

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !4637, metadata !DIExpression()), !dbg !4640
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !4641, metadata !DIExpression()), !dbg !4642
  call void @llvm.dbg.declare(metadata i64* %x, metadata !4643, metadata !DIExpression()), !dbg !4644
  %37 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !4645
  %38 = load i64, i64* %y, align 8, !dbg !4646
  %39 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4647
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %39, i32 0, i32 7, !dbg !4648
  %40 = load i64, i64* %columns, align 8, !dbg !4648
  %41 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4649
  %call38 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %37, i64 0, i64 %38, i64 %40, i64 1, %struct._ExceptionInfo* %41), !dbg !4650
  store %struct._PixelPacket* %call38, %struct._PixelPacket** %p, align 8, !dbg !4651
  %42 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4652
  %cmp39 = icmp eq %struct._PixelPacket* %42, null, !dbg !4654
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !4655

if.then40:                                        ; preds = %for.body
  br label %for.end114, !dbg !4656

if.end41:                                         ; preds = %for.body
  %43 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !4657
  %call42 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %43), !dbg !4658
  store i16* %call42, i16** %indexes, align 8, !dbg !4659
  %44 = load i32, i32* %channel.addr, align 4, !dbg !4660
  %and = and i32 %44, 256, !dbg !4662
  %cmp43 = icmp ne i32 %and, 0, !dbg !4663
  br i1 %cmp43, label %if.then44, label %if.else, !dbg !4664

if.then44:                                        ; preds = %if.end41
  store i64 0, i64* %x, align 8, !dbg !4665
  br label %for.cond45, !dbg !4667

for.cond45:                                       ; preds = %for.inc, %if.then44
  %45 = load i64, i64* %x, align 8, !dbg !4668
  %46 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4670
  %columns46 = getelementptr inbounds %struct._Image, %struct._Image* %46, i32 0, i32 7, !dbg !4671
  %47 = load i64, i64* %columns46, align 8, !dbg !4671
  %cmp47 = icmp slt i64 %45, %47, !dbg !4672
  br i1 %cmp47, label %for.body48, label %for.end, !dbg !4673

for.body48:                                       ; preds = %for.cond45
  call void @llvm.dbg.declare(metadata float* %intensity49, metadata !4674, metadata !DIExpression()), !dbg !4676
  %48 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4677
  %49 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4678
  %call50 = call float @GetPixelIntensity(%struct._Image* %48, %struct._PixelPacket* %49), !dbg !4679
  store float %call50, float* %intensity49, align 4, !dbg !4676
  %50 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !4680
  %51 = load float, float* %intensity49, align 4, !dbg !4681
  %call51 = call zeroext i16 @ClampToQuantum(float %51), !dbg !4682
  %call52 = call i32 @ScaleQuantumToMap(i16 zeroext %call51), !dbg !4683
  %idxprom = zext i32 %call52 to i64, !dbg !4680
  %arrayidx = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %50, i64 %idxprom, !dbg !4680
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx, i32 0, i32 5, !dbg !4684
  %52 = load float, float* %red, align 8, !dbg !4685
  %inc = fadd float %52, 1.000000e+00, !dbg !4685
  store float %inc, float* %red, align 8, !dbg !4685
  %53 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4686
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %53, i32 1, !dbg !4686
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p, align 8, !dbg !4686
  br label %for.inc, !dbg !4687

for.inc:                                          ; preds = %for.body48
  %54 = load i64, i64* %x, align 8, !dbg !4688
  %inc53 = add nsw i64 %54, 1, !dbg !4688
  store i64 %inc53, i64* %x, align 8, !dbg !4688
  br label %for.cond45, !dbg !4689, !llvm.loop !4690

for.end:                                          ; preds = %for.cond45
  br label %if.end111, !dbg !4691

if.else:                                          ; preds = %if.end41
  store i64 0, i64* %x, align 8, !dbg !4692
  br label %for.cond54, !dbg !4694

for.cond54:                                       ; preds = %for.inc108, %if.else
  %55 = load i64, i64* %x, align 8, !dbg !4695
  %56 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4697
  %columns55 = getelementptr inbounds %struct._Image, %struct._Image* %56, i32 0, i32 7, !dbg !4698
  %57 = load i64, i64* %columns55, align 8, !dbg !4698
  %cmp56 = icmp slt i64 %55, %57, !dbg !4699
  br i1 %cmp56, label %for.body57, label %for.end110, !dbg !4700

for.body57:                                       ; preds = %for.cond54
  %58 = load i32, i32* %channel.addr, align 4, !dbg !4701
  %and58 = and i32 %58, 1, !dbg !4704
  %cmp59 = icmp ne i32 %and58, 0, !dbg !4705
  br i1 %cmp59, label %if.then60, label %if.end67, !dbg !4706

if.then60:                                        ; preds = %for.body57
  %59 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !4707
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4708
  %red61 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %60, i32 0, i32 2, !dbg !4708
  %61 = load i16, i16* %red61, align 2, !dbg !4708
  %call62 = call i32 @ScaleQuantumToMap(i16 zeroext %61), !dbg !4709
  %idxprom63 = zext i32 %call62 to i64, !dbg !4707
  %arrayidx64 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %59, i64 %idxprom63, !dbg !4707
  %red65 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx64, i32 0, i32 5, !dbg !4710
  %62 = load float, float* %red65, align 8, !dbg !4711
  %inc66 = fadd float %62, 1.000000e+00, !dbg !4711
  store float %inc66, float* %red65, align 8, !dbg !4711
  br label %if.end67, !dbg !4707

if.end67:                                         ; preds = %if.then60, %for.body57
  %63 = load i32, i32* %channel.addr, align 4, !dbg !4712
  %and68 = and i32 %63, 2, !dbg !4714
  %cmp69 = icmp ne i32 %and68, 0, !dbg !4715
  br i1 %cmp69, label %if.then70, label %if.end76, !dbg !4716

if.then70:                                        ; preds = %if.end67
  %64 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !4717
  %65 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4718
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %65, i32 0, i32 1, !dbg !4718
  %66 = load i16, i16* %green, align 2, !dbg !4718
  %call71 = call i32 @ScaleQuantumToMap(i16 zeroext %66), !dbg !4719
  %idxprom72 = zext i32 %call71 to i64, !dbg !4717
  %arrayidx73 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %64, i64 %idxprom72, !dbg !4717
  %green74 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx73, i32 0, i32 6, !dbg !4720
  %67 = load float, float* %green74, align 4, !dbg !4721
  %inc75 = fadd float %67, 1.000000e+00, !dbg !4721
  store float %inc75, float* %green74, align 4, !dbg !4721
  br label %if.end76, !dbg !4717

if.end76:                                         ; preds = %if.then70, %if.end67
  %68 = load i32, i32* %channel.addr, align 4, !dbg !4722
  %and77 = and i32 %68, 4, !dbg !4724
  %cmp78 = icmp ne i32 %and77, 0, !dbg !4725
  br i1 %cmp78, label %if.then79, label %if.end85, !dbg !4726

if.then79:                                        ; preds = %if.end76
  %69 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !4727
  %70 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4728
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %70, i32 0, i32 0, !dbg !4728
  %71 = load i16, i16* %blue, align 2, !dbg !4728
  %call80 = call i32 @ScaleQuantumToMap(i16 zeroext %71), !dbg !4729
  %idxprom81 = zext i32 %call80 to i64, !dbg !4727
  %arrayidx82 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %69, i64 %idxprom81, !dbg !4727
  %blue83 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx82, i32 0, i32 7, !dbg !4730
  %72 = load float, float* %blue83, align 8, !dbg !4731
  %inc84 = fadd float %72, 1.000000e+00, !dbg !4731
  store float %inc84, float* %blue83, align 8, !dbg !4731
  br label %if.end85, !dbg !4727

if.end85:                                         ; preds = %if.then79, %if.end76
  %73 = load i32, i32* %channel.addr, align 4, !dbg !4732
  %and86 = and i32 %73, 8, !dbg !4734
  %cmp87 = icmp ne i32 %and86, 0, !dbg !4735
  br i1 %cmp87, label %if.then88, label %if.end94, !dbg !4736

if.then88:                                        ; preds = %if.end85
  %74 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !4737
  %75 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4738
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %75, i32 0, i32 3, !dbg !4738
  %76 = load i16, i16* %opacity, align 2, !dbg !4738
  %call89 = call i32 @ScaleQuantumToMap(i16 zeroext %76), !dbg !4739
  %idxprom90 = zext i32 %call89 to i64, !dbg !4737
  %arrayidx91 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %74, i64 %idxprom90, !dbg !4737
  %opacity92 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx91, i32 0, i32 8, !dbg !4740
  %77 = load float, float* %opacity92, align 4, !dbg !4741
  %inc93 = fadd float %77, 1.000000e+00, !dbg !4741
  store float %inc93, float* %opacity92, align 4, !dbg !4741
  br label %if.end94, !dbg !4737

if.end94:                                         ; preds = %if.then88, %if.end85
  %78 = load i32, i32* %channel.addr, align 4, !dbg !4742
  %and95 = and i32 %78, 32, !dbg !4744
  %cmp96 = icmp ne i32 %and95, 0, !dbg !4745
  br i1 %cmp96, label %land.lhs.true, label %if.end106, !dbg !4746

land.lhs.true:                                    ; preds = %if.end94
  %79 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4747
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %79, i32 0, i32 1, !dbg !4748
  %80 = load i32, i32* %colorspace, align 4, !dbg !4748
  %cmp97 = icmp eq i32 %80, 12, !dbg !4749
  br i1 %cmp97, label %if.then98, label %if.end106, !dbg !4750

if.then98:                                        ; preds = %land.lhs.true
  %81 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !4751
  %82 = load i16*, i16** %indexes, align 8, !dbg !4752
  %83 = load i64, i64* %x, align 8, !dbg !4752
  %add.ptr = getelementptr inbounds i16, i16* %82, i64 %83, !dbg !4752
  %cmp99 = icmp eq i16* %add.ptr, null, !dbg !4752
  br i1 %cmp99, label %cond.true, label %cond.false, !dbg !4752

cond.true:                                        ; preds = %if.then98
  br label %cond.end, !dbg !4752

cond.false:                                       ; preds = %if.then98
  %84 = load i16*, i16** %indexes, align 8, !dbg !4752
  %85 = load i64, i64* %x, align 8, !dbg !4752
  %add.ptr100 = getelementptr inbounds i16, i16* %84, i64 %85, !dbg !4752
  %86 = load i16, i16* %add.ptr100, align 2, !dbg !4752
  %conv = zext i16 %86 to i32, !dbg !4752
  br label %cond.end, !dbg !4752

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv, %cond.false ], !dbg !4752
  %conv101 = trunc i32 %cond to i16, !dbg !4752
  %call102 = call i32 @ScaleQuantumToMap(i16 zeroext %conv101), !dbg !4753
  %idxprom103 = zext i32 %call102 to i64, !dbg !4751
  %arrayidx104 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %81, i64 %idxprom103, !dbg !4751
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx104, i32 0, i32 9, !dbg !4754
  %87 = load float, float* %index, align 8, !dbg !4755
  %inc105 = fadd float %87, 1.000000e+00, !dbg !4755
  store float %inc105, float* %index, align 8, !dbg !4755
  br label %if.end106, !dbg !4751

if.end106:                                        ; preds = %cond.end, %land.lhs.true, %if.end94
  %88 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4756
  %incdec.ptr107 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %88, i32 1, !dbg !4756
  store %struct._PixelPacket* %incdec.ptr107, %struct._PixelPacket** %p, align 8, !dbg !4756
  br label %for.inc108, !dbg !4757

for.inc108:                                       ; preds = %if.end106
  %89 = load i64, i64* %x, align 8, !dbg !4758
  %inc109 = add nsw i64 %89, 1, !dbg !4758
  store i64 %inc109, i64* %x, align 8, !dbg !4758
  br label %for.cond54, !dbg !4759, !llvm.loop !4760

for.end110:                                       ; preds = %for.cond54
  br label %if.end111

if.end111:                                        ; preds = %for.end110, %for.end
  br label %for.inc112, !dbg !4762

for.inc112:                                       ; preds = %if.end111
  %90 = load i64, i64* %y, align 8, !dbg !4763
  %inc113 = add nsw i64 %90, 1, !dbg !4763
  store i64 %inc113, i64* %y, align 8, !dbg !4763
  br label %for.cond, !dbg !4764, !llvm.loop !4765

for.end114:                                       ; preds = %if.then40, %for.cond
  %91 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !4767
  %call115 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %91), !dbg !4768
  store %struct._CacheView* %call115, %struct._CacheView** %image_view, align 8, !dbg !4769
  %92 = bitcast %struct._MagickPixelPacket* %intensity to i8*, !dbg !4770
  %call116 = call i8* @ResetMagickMemory(i8* %92, i32 0, i64 56), !dbg !4771
  store i64 0, i64* %i, align 8, !dbg !4772
  br label %for.cond117, !dbg !4774

for.cond117:                                      ; preds = %for.inc180, %for.end114
  %93 = load i64, i64* %i, align 8, !dbg !4775
  %cmp118 = icmp sle i64 %93, 65535, !dbg !4777
  br i1 %cmp118, label %for.body120, label %for.end182, !dbg !4778

for.body120:                                      ; preds = %for.cond117
  %94 = load i32, i32* %channel.addr, align 4, !dbg !4779
  %and121 = and i32 %94, 256, !dbg !4782
  %cmp122 = icmp ne i32 %and121, 0, !dbg !4783
  br i1 %cmp122, label %if.then124, label %if.end129, !dbg !4784

if.then124:                                       ; preds = %for.body120
  %95 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !4785
  %96 = load i64, i64* %i, align 8, !dbg !4787
  %arrayidx125 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %95, i64 %96, !dbg !4785
  %red126 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx125, i32 0, i32 5, !dbg !4788
  %97 = load float, float* %red126, align 8, !dbg !4788
  %red127 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %intensity, i32 0, i32 5, !dbg !4789
  %98 = load float, float* %red127, align 8, !dbg !4790
  %add = fadd float %98, %97, !dbg !4790
  store float %add, float* %red127, align 8, !dbg !4790
  %99 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %map, align 8, !dbg !4791
  %100 = load i64, i64* %i, align 8, !dbg !4792
  %arrayidx128 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %99, i64 %100, !dbg !4791
  %101 = bitcast %struct._MagickPixelPacket* %arrayidx128 to i8*, !dbg !4793
  %102 = bitcast %struct._MagickPixelPacket* %intensity to i8*, !dbg !4793
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %102, i64 56, i1 false), !dbg !4793
  br label %for.inc180, !dbg !4794

if.end129:                                        ; preds = %for.body120
  %103 = load i32, i32* %channel.addr, align 4, !dbg !4795
  %and130 = and i32 %103, 1, !dbg !4797
  %cmp131 = icmp ne i32 %and130, 0, !dbg !4798
  br i1 %cmp131, label %if.then133, label %if.end138, !dbg !4799

if.then133:                                       ; preds = %if.end129
  %104 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !4800
  %105 = load i64, i64* %i, align 8, !dbg !4801
  %arrayidx134 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %104, i64 %105, !dbg !4800
  %red135 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx134, i32 0, i32 5, !dbg !4802
  %106 = load float, float* %red135, align 8, !dbg !4802
  %red136 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %intensity, i32 0, i32 5, !dbg !4803
  %107 = load float, float* %red136, align 8, !dbg !4804
  %add137 = fadd float %107, %106, !dbg !4804
  store float %add137, float* %red136, align 8, !dbg !4804
  br label %if.end138, !dbg !4805

if.end138:                                        ; preds = %if.then133, %if.end129
  %108 = load i32, i32* %channel.addr, align 4, !dbg !4806
  %and139 = and i32 %108, 2, !dbg !4808
  %cmp140 = icmp ne i32 %and139, 0, !dbg !4809
  br i1 %cmp140, label %if.then142, label %if.end147, !dbg !4810

if.then142:                                       ; preds = %if.end138
  %109 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !4811
  %110 = load i64, i64* %i, align 8, !dbg !4812
  %arrayidx143 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %109, i64 %110, !dbg !4811
  %green144 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx143, i32 0, i32 6, !dbg !4813
  %111 = load float, float* %green144, align 4, !dbg !4813
  %green145 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %intensity, i32 0, i32 6, !dbg !4814
  %112 = load float, float* %green145, align 4, !dbg !4815
  %add146 = fadd float %112, %111, !dbg !4815
  store float %add146, float* %green145, align 4, !dbg !4815
  br label %if.end147, !dbg !4816

if.end147:                                        ; preds = %if.then142, %if.end138
  %113 = load i32, i32* %channel.addr, align 4, !dbg !4817
  %and148 = and i32 %113, 4, !dbg !4819
  %cmp149 = icmp ne i32 %and148, 0, !dbg !4820
  br i1 %cmp149, label %if.then151, label %if.end156, !dbg !4821

if.then151:                                       ; preds = %if.end147
  %114 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !4822
  %115 = load i64, i64* %i, align 8, !dbg !4823
  %arrayidx152 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %114, i64 %115, !dbg !4822
  %blue153 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx152, i32 0, i32 7, !dbg !4824
  %116 = load float, float* %blue153, align 8, !dbg !4824
  %blue154 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %intensity, i32 0, i32 7, !dbg !4825
  %117 = load float, float* %blue154, align 8, !dbg !4826
  %add155 = fadd float %117, %116, !dbg !4826
  store float %add155, float* %blue154, align 8, !dbg !4826
  br label %if.end156, !dbg !4827

if.end156:                                        ; preds = %if.then151, %if.end147
  %118 = load i32, i32* %channel.addr, align 4, !dbg !4828
  %and157 = and i32 %118, 8, !dbg !4830
  %cmp158 = icmp ne i32 %and157, 0, !dbg !4831
  br i1 %cmp158, label %if.then160, label %if.end165, !dbg !4832

if.then160:                                       ; preds = %if.end156
  %119 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !4833
  %120 = load i64, i64* %i, align 8, !dbg !4834
  %arrayidx161 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %119, i64 %120, !dbg !4833
  %opacity162 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx161, i32 0, i32 8, !dbg !4835
  %121 = load float, float* %opacity162, align 4, !dbg !4835
  %opacity163 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %intensity, i32 0, i32 8, !dbg !4836
  %122 = load float, float* %opacity163, align 4, !dbg !4837
  %add164 = fadd float %122, %121, !dbg !4837
  store float %add164, float* %opacity163, align 4, !dbg !4837
  br label %if.end165, !dbg !4838

if.end165:                                        ; preds = %if.then160, %if.end156
  %123 = load i32, i32* %channel.addr, align 4, !dbg !4839
  %and166 = and i32 %123, 32, !dbg !4841
  %cmp167 = icmp ne i32 %and166, 0, !dbg !4842
  br i1 %cmp167, label %land.lhs.true169, label %if.end178, !dbg !4843

land.lhs.true169:                                 ; preds = %if.end165
  %124 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4844
  %colorspace170 = getelementptr inbounds %struct._Image, %struct._Image* %124, i32 0, i32 1, !dbg !4845
  %125 = load i32, i32* %colorspace170, align 4, !dbg !4845
  %cmp171 = icmp eq i32 %125, 12, !dbg !4846
  br i1 %cmp171, label %if.then173, label %if.end178, !dbg !4847

if.then173:                                       ; preds = %land.lhs.true169
  %126 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !4848
  %127 = load i64, i64* %i, align 8, !dbg !4849
  %arrayidx174 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %126, i64 %127, !dbg !4848
  %index175 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx174, i32 0, i32 9, !dbg !4850
  %128 = load float, float* %index175, align 8, !dbg !4850
  %index176 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %intensity, i32 0, i32 9, !dbg !4851
  %129 = load float, float* %index176, align 8, !dbg !4852
  %add177 = fadd float %129, %128, !dbg !4852
  store float %add177, float* %index176, align 8, !dbg !4852
  br label %if.end178, !dbg !4853

if.end178:                                        ; preds = %if.then173, %land.lhs.true169, %if.end165
  %130 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %map, align 8, !dbg !4854
  %131 = load i64, i64* %i, align 8, !dbg !4855
  %arrayidx179 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %130, i64 %131, !dbg !4854
  %132 = bitcast %struct._MagickPixelPacket* %arrayidx179 to i8*, !dbg !4856
  %133 = bitcast %struct._MagickPixelPacket* %intensity to i8*, !dbg !4856
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %133, i64 56, i1 false), !dbg !4856
  br label %for.inc180, !dbg !4857

for.inc180:                                       ; preds = %if.end178, %if.then124
  %134 = load i64, i64* %i, align 8, !dbg !4858
  %inc181 = add nsw i64 %134, 1, !dbg !4858
  store i64 %inc181, i64* %i, align 8, !dbg !4858
  br label %for.cond117, !dbg !4859, !llvm.loop !4860

for.end182:                                       ; preds = %for.cond117
  %135 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %map, align 8, !dbg !4862
  %arrayidx183 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %135, i64 0, !dbg !4862
  %136 = bitcast %struct._MagickPixelPacket* %black to i8*, !dbg !4862
  %137 = bitcast %struct._MagickPixelPacket* %arrayidx183 to i8*, !dbg !4862
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* align 8 %137, i64 56, i1 false), !dbg !4862
  %138 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %map, align 8, !dbg !4863
  %arrayidx184 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %138, i64 65535, !dbg !4863
  %139 = bitcast %struct._MagickPixelPacket* %white to i8*, !dbg !4863
  %140 = bitcast %struct._MagickPixelPacket* %arrayidx184 to i8*, !dbg !4863
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %140, i64 56, i1 false), !dbg !4863
  %141 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !4864
  %142 = bitcast %struct._QuantumPixelPacket* %141 to i8*, !dbg !4864
  %call185 = call i8* @ResetMagickMemory(i8* %142, i32 0, i64 655360), !dbg !4865
  store i64 0, i64* %i, align 8, !dbg !4866
  br label %for.cond186, !dbg !4868

for.cond186:                                      ; preds = %for.inc324, %for.end182
  %143 = load i64, i64* %i, align 8, !dbg !4869
  %cmp187 = icmp sle i64 %143, 65535, !dbg !4871
  br i1 %cmp187, label %for.body189, label %for.end326, !dbg !4872

for.body189:                                      ; preds = %for.cond186
  %144 = load i32, i32* %channel.addr, align 4, !dbg !4873
  %and190 = and i32 %144, 256, !dbg !4876
  %cmp191 = icmp ne i32 %and190, 0, !dbg !4877
  br i1 %cmp191, label %if.then193, label %if.end209, !dbg !4878

if.then193:                                       ; preds = %for.body189
  %red194 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 5, !dbg !4879
  %145 = load float, float* %red194, align 8, !dbg !4879
  %red195 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 5, !dbg !4882
  %146 = load float, float* %red195, align 8, !dbg !4882
  %cmp196 = fcmp une float %145, %146, !dbg !4883
  br i1 %cmp196, label %if.then198, label %if.end208, !dbg !4884

if.then198:                                       ; preds = %if.then193
  %147 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %map, align 8, !dbg !4885
  %148 = load i64, i64* %i, align 8, !dbg !4886
  %arrayidx199 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %147, i64 %148, !dbg !4885
  %red200 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx199, i32 0, i32 5, !dbg !4887
  %149 = load float, float* %red200, align 8, !dbg !4887
  %red201 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 5, !dbg !4888
  %150 = load float, float* %red201, align 8, !dbg !4888
  %sub = fsub float %149, %150, !dbg !4889
  %mul = fmul float 6.553500e+04, %sub, !dbg !4890
  %red202 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 5, !dbg !4891
  %151 = load float, float* %red202, align 8, !dbg !4891
  %red203 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 5, !dbg !4892
  %152 = load float, float* %red203, align 8, !dbg !4892
  %sub204 = fsub float %151, %152, !dbg !4893
  %div = fdiv float %mul, %sub204, !dbg !4894
  %call205 = call zeroext i16 @ScaleMapToQuantum(float %div), !dbg !4895
  %153 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !4896
  %154 = load i64, i64* %i, align 8, !dbg !4897
  %arrayidx206 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %153, i64 %154, !dbg !4896
  %red207 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx206, i32 0, i32 0, !dbg !4898
  store i16 %call205, i16* %red207, align 2, !dbg !4899
  br label %if.end208, !dbg !4896

if.end208:                                        ; preds = %if.then198, %if.then193
  br label %for.inc324, !dbg !4900

if.end209:                                        ; preds = %for.body189
  %155 = load i32, i32* %channel.addr, align 4, !dbg !4901
  %and210 = and i32 %155, 1, !dbg !4903
  %cmp211 = icmp ne i32 %and210, 0, !dbg !4904
  br i1 %cmp211, label %land.lhs.true213, label %if.end231, !dbg !4905

land.lhs.true213:                                 ; preds = %if.end209
  %red214 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 5, !dbg !4906
  %156 = load float, float* %red214, align 8, !dbg !4906
  %red215 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 5, !dbg !4907
  %157 = load float, float* %red215, align 8, !dbg !4907
  %cmp216 = fcmp une float %156, %157, !dbg !4908
  br i1 %cmp216, label %if.then218, label %if.end231, !dbg !4909

if.then218:                                       ; preds = %land.lhs.true213
  %158 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %map, align 8, !dbg !4910
  %159 = load i64, i64* %i, align 8, !dbg !4911
  %arrayidx219 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %158, i64 %159, !dbg !4910
  %red220 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx219, i32 0, i32 5, !dbg !4912
  %160 = load float, float* %red220, align 8, !dbg !4912
  %red221 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 5, !dbg !4913
  %161 = load float, float* %red221, align 8, !dbg !4913
  %sub222 = fsub float %160, %161, !dbg !4914
  %mul223 = fmul float 6.553500e+04, %sub222, !dbg !4915
  %red224 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 5, !dbg !4916
  %162 = load float, float* %red224, align 8, !dbg !4916
  %red225 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 5, !dbg !4917
  %163 = load float, float* %red225, align 8, !dbg !4917
  %sub226 = fsub float %162, %163, !dbg !4918
  %div227 = fdiv float %mul223, %sub226, !dbg !4919
  %call228 = call zeroext i16 @ScaleMapToQuantum(float %div227), !dbg !4920
  %164 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !4921
  %165 = load i64, i64* %i, align 8, !dbg !4922
  %arrayidx229 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %164, i64 %165, !dbg !4921
  %red230 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx229, i32 0, i32 0, !dbg !4923
  store i16 %call228, i16* %red230, align 2, !dbg !4924
  br label %if.end231, !dbg !4921

if.end231:                                        ; preds = %if.then218, %land.lhs.true213, %if.end209
  %166 = load i32, i32* %channel.addr, align 4, !dbg !4925
  %and232 = and i32 %166, 2, !dbg !4927
  %cmp233 = icmp ne i32 %and232, 0, !dbg !4928
  br i1 %cmp233, label %land.lhs.true235, label %if.end253, !dbg !4929

land.lhs.true235:                                 ; preds = %if.end231
  %green236 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 6, !dbg !4930
  %167 = load float, float* %green236, align 4, !dbg !4930
  %green237 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 6, !dbg !4931
  %168 = load float, float* %green237, align 4, !dbg !4931
  %cmp238 = fcmp une float %167, %168, !dbg !4932
  br i1 %cmp238, label %if.then240, label %if.end253, !dbg !4933

if.then240:                                       ; preds = %land.lhs.true235
  %169 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %map, align 8, !dbg !4934
  %170 = load i64, i64* %i, align 8, !dbg !4935
  %arrayidx241 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %169, i64 %170, !dbg !4934
  %green242 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx241, i32 0, i32 6, !dbg !4936
  %171 = load float, float* %green242, align 4, !dbg !4936
  %green243 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 6, !dbg !4937
  %172 = load float, float* %green243, align 4, !dbg !4937
  %sub244 = fsub float %171, %172, !dbg !4938
  %mul245 = fmul float 6.553500e+04, %sub244, !dbg !4939
  %green246 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 6, !dbg !4940
  %173 = load float, float* %green246, align 4, !dbg !4940
  %green247 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 6, !dbg !4941
  %174 = load float, float* %green247, align 4, !dbg !4941
  %sub248 = fsub float %173, %174, !dbg !4942
  %div249 = fdiv float %mul245, %sub248, !dbg !4943
  %call250 = call zeroext i16 @ScaleMapToQuantum(float %div249), !dbg !4944
  %175 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !4945
  %176 = load i64, i64* %i, align 8, !dbg !4946
  %arrayidx251 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %175, i64 %176, !dbg !4945
  %green252 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx251, i32 0, i32 1, !dbg !4947
  store i16 %call250, i16* %green252, align 2, !dbg !4948
  br label %if.end253, !dbg !4945

if.end253:                                        ; preds = %if.then240, %land.lhs.true235, %if.end231
  %177 = load i32, i32* %channel.addr, align 4, !dbg !4949
  %and254 = and i32 %177, 4, !dbg !4951
  %cmp255 = icmp ne i32 %and254, 0, !dbg !4952
  br i1 %cmp255, label %land.lhs.true257, label %if.end275, !dbg !4953

land.lhs.true257:                                 ; preds = %if.end253
  %blue258 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 7, !dbg !4954
  %178 = load float, float* %blue258, align 8, !dbg !4954
  %blue259 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 7, !dbg !4955
  %179 = load float, float* %blue259, align 8, !dbg !4955
  %cmp260 = fcmp une float %178, %179, !dbg !4956
  br i1 %cmp260, label %if.then262, label %if.end275, !dbg !4957

if.then262:                                       ; preds = %land.lhs.true257
  %180 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %map, align 8, !dbg !4958
  %181 = load i64, i64* %i, align 8, !dbg !4959
  %arrayidx263 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %180, i64 %181, !dbg !4958
  %blue264 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx263, i32 0, i32 7, !dbg !4960
  %182 = load float, float* %blue264, align 8, !dbg !4960
  %blue265 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 7, !dbg !4961
  %183 = load float, float* %blue265, align 8, !dbg !4961
  %sub266 = fsub float %182, %183, !dbg !4962
  %mul267 = fmul float 6.553500e+04, %sub266, !dbg !4963
  %blue268 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 7, !dbg !4964
  %184 = load float, float* %blue268, align 8, !dbg !4964
  %blue269 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 7, !dbg !4965
  %185 = load float, float* %blue269, align 8, !dbg !4965
  %sub270 = fsub float %184, %185, !dbg !4966
  %div271 = fdiv float %mul267, %sub270, !dbg !4967
  %call272 = call zeroext i16 @ScaleMapToQuantum(float %div271), !dbg !4968
  %186 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !4969
  %187 = load i64, i64* %i, align 8, !dbg !4970
  %arrayidx273 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %186, i64 %187, !dbg !4969
  %blue274 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx273, i32 0, i32 2, !dbg !4971
  store i16 %call272, i16* %blue274, align 2, !dbg !4972
  br label %if.end275, !dbg !4969

if.end275:                                        ; preds = %if.then262, %land.lhs.true257, %if.end253
  %188 = load i32, i32* %channel.addr, align 4, !dbg !4973
  %and276 = and i32 %188, 8, !dbg !4975
  %cmp277 = icmp ne i32 %and276, 0, !dbg !4976
  br i1 %cmp277, label %land.lhs.true279, label %if.end297, !dbg !4977

land.lhs.true279:                                 ; preds = %if.end275
  %opacity280 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 8, !dbg !4978
  %189 = load float, float* %opacity280, align 4, !dbg !4978
  %opacity281 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 8, !dbg !4979
  %190 = load float, float* %opacity281, align 4, !dbg !4979
  %cmp282 = fcmp une float %189, %190, !dbg !4980
  br i1 %cmp282, label %if.then284, label %if.end297, !dbg !4981

if.then284:                                       ; preds = %land.lhs.true279
  %191 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %map, align 8, !dbg !4982
  %192 = load i64, i64* %i, align 8, !dbg !4983
  %arrayidx285 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %191, i64 %192, !dbg !4982
  %opacity286 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx285, i32 0, i32 8, !dbg !4984
  %193 = load float, float* %opacity286, align 4, !dbg !4984
  %opacity287 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 8, !dbg !4985
  %194 = load float, float* %opacity287, align 4, !dbg !4985
  %sub288 = fsub float %193, %194, !dbg !4986
  %mul289 = fmul float 6.553500e+04, %sub288, !dbg !4987
  %opacity290 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 8, !dbg !4988
  %195 = load float, float* %opacity290, align 4, !dbg !4988
  %opacity291 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 8, !dbg !4989
  %196 = load float, float* %opacity291, align 4, !dbg !4989
  %sub292 = fsub float %195, %196, !dbg !4990
  %div293 = fdiv float %mul289, %sub292, !dbg !4991
  %call294 = call zeroext i16 @ScaleMapToQuantum(float %div293), !dbg !4992
  %197 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !4993
  %198 = load i64, i64* %i, align 8, !dbg !4994
  %arrayidx295 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %197, i64 %198, !dbg !4993
  %opacity296 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx295, i32 0, i32 3, !dbg !4995
  store i16 %call294, i16* %opacity296, align 2, !dbg !4996
  br label %if.end297, !dbg !4993

if.end297:                                        ; preds = %if.then284, %land.lhs.true279, %if.end275
  %199 = load i32, i32* %channel.addr, align 4, !dbg !4997
  %and298 = and i32 %199, 32, !dbg !4999
  %cmp299 = icmp ne i32 %and298, 0, !dbg !5000
  br i1 %cmp299, label %land.lhs.true301, label %if.end323, !dbg !5001

land.lhs.true301:                                 ; preds = %if.end297
  %200 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5002
  %colorspace302 = getelementptr inbounds %struct._Image, %struct._Image* %200, i32 0, i32 1, !dbg !5003
  %201 = load i32, i32* %colorspace302, align 4, !dbg !5003
  %cmp303 = icmp eq i32 %201, 12, !dbg !5004
  br i1 %cmp303, label %land.lhs.true305, label %if.end323, !dbg !5005

land.lhs.true305:                                 ; preds = %land.lhs.true301
  %index306 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 9, !dbg !5006
  %202 = load float, float* %index306, align 8, !dbg !5006
  %index307 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 9, !dbg !5007
  %203 = load float, float* %index307, align 8, !dbg !5007
  %cmp308 = fcmp une float %202, %203, !dbg !5008
  br i1 %cmp308, label %if.then310, label %if.end323, !dbg !5009

if.then310:                                       ; preds = %land.lhs.true305
  %204 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %map, align 8, !dbg !5010
  %205 = load i64, i64* %i, align 8, !dbg !5011
  %arrayidx311 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %204, i64 %205, !dbg !5010
  %index312 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx311, i32 0, i32 9, !dbg !5012
  %206 = load float, float* %index312, align 8, !dbg !5012
  %index313 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 9, !dbg !5013
  %207 = load float, float* %index313, align 8, !dbg !5013
  %sub314 = fsub float %206, %207, !dbg !5014
  %mul315 = fmul float 6.553500e+04, %sub314, !dbg !5015
  %index316 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 9, !dbg !5016
  %208 = load float, float* %index316, align 8, !dbg !5016
  %index317 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 9, !dbg !5017
  %209 = load float, float* %index317, align 8, !dbg !5017
  %sub318 = fsub float %208, %209, !dbg !5018
  %div319 = fdiv float %mul315, %sub318, !dbg !5019
  %call320 = call zeroext i16 @ScaleMapToQuantum(float %div319), !dbg !5020
  %210 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !5021
  %211 = load i64, i64* %i, align 8, !dbg !5022
  %arrayidx321 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %210, i64 %211, !dbg !5021
  %index322 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx321, i32 0, i32 4, !dbg !5023
  store i16 %call320, i16* %index322, align 2, !dbg !5024
  br label %if.end323, !dbg !5021

if.end323:                                        ; preds = %if.then310, %land.lhs.true305, %land.lhs.true301, %if.end297
  br label %for.inc324, !dbg !5025

for.inc324:                                       ; preds = %if.end323, %if.end208
  %212 = load i64, i64* %i, align 8, !dbg !5026
  %inc325 = add nsw i64 %212, 1, !dbg !5026
  store i64 %inc325, i64* %i, align 8, !dbg !5026
  br label %for.cond186, !dbg !5027, !llvm.loop !5028

for.end326:                                       ; preds = %for.cond186
  %213 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %histogram, align 8, !dbg !5030
  %214 = bitcast %struct._MagickPixelPacket* %213 to i8*, !dbg !5030
  %call327 = call i8* @RelinquishMagickMemory(i8* %214), !dbg !5031
  %215 = bitcast i8* %call327 to %struct._MagickPixelPacket*, !dbg !5032
  store %struct._MagickPixelPacket* %215, %struct._MagickPixelPacket** %histogram, align 8, !dbg !5033
  %216 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %map, align 8, !dbg !5034
  %217 = bitcast %struct._MagickPixelPacket* %216 to i8*, !dbg !5034
  %call328 = call i8* @RelinquishMagickMemory(i8* %217), !dbg !5035
  %218 = bitcast i8* %call328 to %struct._MagickPixelPacket*, !dbg !5036
  store %struct._MagickPixelPacket* %218, %struct._MagickPixelPacket** %map, align 8, !dbg !5037
  %219 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5038
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %219, i32 0, i32 0, !dbg !5040
  %220 = load i32, i32* %storage_class, align 8, !dbg !5040
  %cmp329 = icmp eq i32 %220, 2, !dbg !5041
  br i1 %cmp329, label %if.then331, label %if.end469, !dbg !5042

if.then331:                                       ; preds = %for.end326
  store i64 0, i64* %i, align 8, !dbg !5043
  br label %for.cond332, !dbg !5046

for.cond332:                                      ; preds = %for.inc466, %if.then331
  %221 = load i64, i64* %i, align 8, !dbg !5047
  %222 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5049
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %222, i32 0, i32 10, !dbg !5050
  %223 = load i64, i64* %colors, align 8, !dbg !5050
  %cmp333 = icmp slt i64 %221, %223, !dbg !5051
  br i1 %cmp333, label %for.body335, label %for.end468, !dbg !5052

for.body335:                                      ; preds = %for.cond332
  %224 = load i32, i32* %channel.addr, align 4, !dbg !5053
  %and336 = and i32 %224, 256, !dbg !5056
  %cmp337 = icmp ne i32 %and336, 0, !dbg !5057
  br i1 %cmp337, label %if.then339, label %if.end385, !dbg !5058

if.then339:                                       ; preds = %for.body335
  %red340 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 5, !dbg !5059
  %225 = load float, float* %red340, align 8, !dbg !5059
  %red341 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 5, !dbg !5062
  %226 = load float, float* %red341, align 8, !dbg !5062
  %cmp342 = fcmp une float %225, %226, !dbg !5063
  br i1 %cmp342, label %if.then344, label %if.end384, !dbg !5064

if.then344:                                       ; preds = %if.then339
  %227 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !5065
  %228 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5067
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %228, i32 0, i32 11, !dbg !5068
  %229 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !5068
  %230 = load i64, i64* %i, align 8, !dbg !5069
  %arrayidx345 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %229, i64 %230, !dbg !5067
  %red346 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx345, i32 0, i32 2, !dbg !5070
  %231 = load i16, i16* %red346, align 2, !dbg !5070
  %call347 = call i32 @ScaleQuantumToMap(i16 zeroext %231), !dbg !5071
  %idxprom348 = zext i32 %call347 to i64, !dbg !5065
  %arrayidx349 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %227, i64 %idxprom348, !dbg !5065
  %red350 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx349, i32 0, i32 0, !dbg !5072
  %232 = load i16, i16* %red350, align 2, !dbg !5072
  %233 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5073
  %colormap351 = getelementptr inbounds %struct._Image, %struct._Image* %233, i32 0, i32 11, !dbg !5074
  %234 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap351, align 8, !dbg !5074
  %235 = load i64, i64* %i, align 8, !dbg !5075
  %arrayidx352 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %234, i64 %235, !dbg !5073
  %red353 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx352, i32 0, i32 2, !dbg !5076
  store i16 %232, i16* %red353, align 2, !dbg !5077
  %236 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !5078
  %237 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5079
  %colormap354 = getelementptr inbounds %struct._Image, %struct._Image* %237, i32 0, i32 11, !dbg !5080
  %238 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap354, align 8, !dbg !5080
  %239 = load i64, i64* %i, align 8, !dbg !5081
  %arrayidx355 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %238, i64 %239, !dbg !5079
  %green356 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx355, i32 0, i32 1, !dbg !5082
  %240 = load i16, i16* %green356, align 2, !dbg !5082
  %call357 = call i32 @ScaleQuantumToMap(i16 zeroext %240), !dbg !5083
  %idxprom358 = zext i32 %call357 to i64, !dbg !5078
  %arrayidx359 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %236, i64 %idxprom358, !dbg !5078
  %red360 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx359, i32 0, i32 0, !dbg !5084
  %241 = load i16, i16* %red360, align 2, !dbg !5084
  %242 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5085
  %colormap361 = getelementptr inbounds %struct._Image, %struct._Image* %242, i32 0, i32 11, !dbg !5086
  %243 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap361, align 8, !dbg !5086
  %244 = load i64, i64* %i, align 8, !dbg !5087
  %arrayidx362 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %243, i64 %244, !dbg !5085
  %green363 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx362, i32 0, i32 1, !dbg !5088
  store i16 %241, i16* %green363, align 2, !dbg !5089
  %245 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !5090
  %246 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5091
  %colormap364 = getelementptr inbounds %struct._Image, %struct._Image* %246, i32 0, i32 11, !dbg !5092
  %247 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap364, align 8, !dbg !5092
  %248 = load i64, i64* %i, align 8, !dbg !5093
  %arrayidx365 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %247, i64 %248, !dbg !5091
  %blue366 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx365, i32 0, i32 0, !dbg !5094
  %249 = load i16, i16* %blue366, align 2, !dbg !5094
  %call367 = call i32 @ScaleQuantumToMap(i16 zeroext %249), !dbg !5095
  %idxprom368 = zext i32 %call367 to i64, !dbg !5090
  %arrayidx369 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %245, i64 %idxprom368, !dbg !5090
  %red370 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx369, i32 0, i32 0, !dbg !5096
  %250 = load i16, i16* %red370, align 2, !dbg !5096
  %251 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5097
  %colormap371 = getelementptr inbounds %struct._Image, %struct._Image* %251, i32 0, i32 11, !dbg !5098
  %252 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap371, align 8, !dbg !5098
  %253 = load i64, i64* %i, align 8, !dbg !5099
  %arrayidx372 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %252, i64 %253, !dbg !5097
  %blue373 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx372, i32 0, i32 0, !dbg !5100
  store i16 %250, i16* %blue373, align 2, !dbg !5101
  %254 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !5102
  %255 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5103
  %colormap374 = getelementptr inbounds %struct._Image, %struct._Image* %255, i32 0, i32 11, !dbg !5104
  %256 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap374, align 8, !dbg !5104
  %257 = load i64, i64* %i, align 8, !dbg !5105
  %arrayidx375 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %256, i64 %257, !dbg !5103
  %opacity376 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx375, i32 0, i32 3, !dbg !5106
  %258 = load i16, i16* %opacity376, align 2, !dbg !5106
  %call377 = call i32 @ScaleQuantumToMap(i16 zeroext %258), !dbg !5107
  %idxprom378 = zext i32 %call377 to i64, !dbg !5102
  %arrayidx379 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %254, i64 %idxprom378, !dbg !5102
  %red380 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx379, i32 0, i32 0, !dbg !5108
  %259 = load i16, i16* %red380, align 2, !dbg !5108
  %260 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5109
  %colormap381 = getelementptr inbounds %struct._Image, %struct._Image* %260, i32 0, i32 11, !dbg !5110
  %261 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap381, align 8, !dbg !5110
  %262 = load i64, i64* %i, align 8, !dbg !5111
  %arrayidx382 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %261, i64 %262, !dbg !5109
  %opacity383 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx382, i32 0, i32 3, !dbg !5112
  store i16 %259, i16* %opacity383, align 2, !dbg !5113
  br label %if.end384, !dbg !5114

if.end384:                                        ; preds = %if.then344, %if.then339
  br label %for.inc466, !dbg !5115

if.end385:                                        ; preds = %for.body335
  %263 = load i32, i32* %channel.addr, align 4, !dbg !5116
  %and386 = and i32 %263, 1, !dbg !5118
  %cmp387 = icmp ne i32 %and386, 0, !dbg !5119
  br i1 %cmp387, label %land.lhs.true389, label %if.end405, !dbg !5120

land.lhs.true389:                                 ; preds = %if.end385
  %red390 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 5, !dbg !5121
  %264 = load float, float* %red390, align 8, !dbg !5121
  %red391 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 5, !dbg !5122
  %265 = load float, float* %red391, align 8, !dbg !5122
  %cmp392 = fcmp une float %264, %265, !dbg !5123
  br i1 %cmp392, label %if.then394, label %if.end405, !dbg !5124

if.then394:                                       ; preds = %land.lhs.true389
  %266 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !5125
  %267 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5126
  %colormap395 = getelementptr inbounds %struct._Image, %struct._Image* %267, i32 0, i32 11, !dbg !5127
  %268 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap395, align 8, !dbg !5127
  %269 = load i64, i64* %i, align 8, !dbg !5128
  %arrayidx396 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %268, i64 %269, !dbg !5126
  %red397 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx396, i32 0, i32 2, !dbg !5129
  %270 = load i16, i16* %red397, align 2, !dbg !5129
  %call398 = call i32 @ScaleQuantumToMap(i16 zeroext %270), !dbg !5130
  %idxprom399 = zext i32 %call398 to i64, !dbg !5125
  %arrayidx400 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %266, i64 %idxprom399, !dbg !5125
  %red401 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx400, i32 0, i32 0, !dbg !5131
  %271 = load i16, i16* %red401, align 2, !dbg !5131
  %272 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5132
  %colormap402 = getelementptr inbounds %struct._Image, %struct._Image* %272, i32 0, i32 11, !dbg !5133
  %273 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap402, align 8, !dbg !5133
  %274 = load i64, i64* %i, align 8, !dbg !5134
  %arrayidx403 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %273, i64 %274, !dbg !5132
  %red404 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx403, i32 0, i32 2, !dbg !5135
  store i16 %271, i16* %red404, align 2, !dbg !5136
  br label %if.end405, !dbg !5132

if.end405:                                        ; preds = %if.then394, %land.lhs.true389, %if.end385
  %275 = load i32, i32* %channel.addr, align 4, !dbg !5137
  %and406 = and i32 %275, 2, !dbg !5139
  %cmp407 = icmp ne i32 %and406, 0, !dbg !5140
  br i1 %cmp407, label %land.lhs.true409, label %if.end425, !dbg !5141

land.lhs.true409:                                 ; preds = %if.end405
  %green410 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 6, !dbg !5142
  %276 = load float, float* %green410, align 4, !dbg !5142
  %green411 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 6, !dbg !5143
  %277 = load float, float* %green411, align 4, !dbg !5143
  %cmp412 = fcmp une float %276, %277, !dbg !5144
  br i1 %cmp412, label %if.then414, label %if.end425, !dbg !5145

if.then414:                                       ; preds = %land.lhs.true409
  %278 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !5146
  %279 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5147
  %colormap415 = getelementptr inbounds %struct._Image, %struct._Image* %279, i32 0, i32 11, !dbg !5148
  %280 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap415, align 8, !dbg !5148
  %281 = load i64, i64* %i, align 8, !dbg !5149
  %arrayidx416 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %280, i64 %281, !dbg !5147
  %green417 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx416, i32 0, i32 1, !dbg !5150
  %282 = load i16, i16* %green417, align 2, !dbg !5150
  %call418 = call i32 @ScaleQuantumToMap(i16 zeroext %282), !dbg !5151
  %idxprom419 = zext i32 %call418 to i64, !dbg !5146
  %arrayidx420 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %278, i64 %idxprom419, !dbg !5146
  %green421 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx420, i32 0, i32 1, !dbg !5152
  %283 = load i16, i16* %green421, align 2, !dbg !5152
  %284 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5153
  %colormap422 = getelementptr inbounds %struct._Image, %struct._Image* %284, i32 0, i32 11, !dbg !5154
  %285 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap422, align 8, !dbg !5154
  %286 = load i64, i64* %i, align 8, !dbg !5155
  %arrayidx423 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %285, i64 %286, !dbg !5153
  %green424 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx423, i32 0, i32 1, !dbg !5156
  store i16 %283, i16* %green424, align 2, !dbg !5157
  br label %if.end425, !dbg !5153

if.end425:                                        ; preds = %if.then414, %land.lhs.true409, %if.end405
  %287 = load i32, i32* %channel.addr, align 4, !dbg !5158
  %and426 = and i32 %287, 4, !dbg !5160
  %cmp427 = icmp ne i32 %and426, 0, !dbg !5161
  br i1 %cmp427, label %land.lhs.true429, label %if.end445, !dbg !5162

land.lhs.true429:                                 ; preds = %if.end425
  %blue430 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 7, !dbg !5163
  %288 = load float, float* %blue430, align 8, !dbg !5163
  %blue431 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 7, !dbg !5164
  %289 = load float, float* %blue431, align 8, !dbg !5164
  %cmp432 = fcmp une float %288, %289, !dbg !5165
  br i1 %cmp432, label %if.then434, label %if.end445, !dbg !5166

if.then434:                                       ; preds = %land.lhs.true429
  %290 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !5167
  %291 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5168
  %colormap435 = getelementptr inbounds %struct._Image, %struct._Image* %291, i32 0, i32 11, !dbg !5169
  %292 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap435, align 8, !dbg !5169
  %293 = load i64, i64* %i, align 8, !dbg !5170
  %arrayidx436 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %292, i64 %293, !dbg !5168
  %blue437 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx436, i32 0, i32 0, !dbg !5171
  %294 = load i16, i16* %blue437, align 2, !dbg !5171
  %call438 = call i32 @ScaleQuantumToMap(i16 zeroext %294), !dbg !5172
  %idxprom439 = zext i32 %call438 to i64, !dbg !5167
  %arrayidx440 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %290, i64 %idxprom439, !dbg !5167
  %blue441 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx440, i32 0, i32 2, !dbg !5173
  %295 = load i16, i16* %blue441, align 2, !dbg !5173
  %296 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5174
  %colormap442 = getelementptr inbounds %struct._Image, %struct._Image* %296, i32 0, i32 11, !dbg !5175
  %297 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap442, align 8, !dbg !5175
  %298 = load i64, i64* %i, align 8, !dbg !5176
  %arrayidx443 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %297, i64 %298, !dbg !5174
  %blue444 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx443, i32 0, i32 0, !dbg !5177
  store i16 %295, i16* %blue444, align 2, !dbg !5178
  br label %if.end445, !dbg !5174

if.end445:                                        ; preds = %if.then434, %land.lhs.true429, %if.end425
  %299 = load i32, i32* %channel.addr, align 4, !dbg !5179
  %and446 = and i32 %299, 8, !dbg !5181
  %cmp447 = icmp ne i32 %and446, 0, !dbg !5182
  br i1 %cmp447, label %land.lhs.true449, label %if.end465, !dbg !5183

land.lhs.true449:                                 ; preds = %if.end445
  %opacity450 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 8, !dbg !5184
  %300 = load float, float* %opacity450, align 4, !dbg !5184
  %opacity451 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 8, !dbg !5185
  %301 = load float, float* %opacity451, align 4, !dbg !5185
  %cmp452 = fcmp une float %300, %301, !dbg !5186
  br i1 %cmp452, label %if.then454, label %if.end465, !dbg !5187

if.then454:                                       ; preds = %land.lhs.true449
  %302 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !5188
  %303 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5189
  %colormap455 = getelementptr inbounds %struct._Image, %struct._Image* %303, i32 0, i32 11, !dbg !5190
  %304 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap455, align 8, !dbg !5190
  %305 = load i64, i64* %i, align 8, !dbg !5191
  %arrayidx456 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %304, i64 %305, !dbg !5189
  %opacity457 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx456, i32 0, i32 3, !dbg !5192
  %306 = load i16, i16* %opacity457, align 2, !dbg !5192
  %call458 = call i32 @ScaleQuantumToMap(i16 zeroext %306), !dbg !5193
  %idxprom459 = zext i32 %call458 to i64, !dbg !5188
  %arrayidx460 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %302, i64 %idxprom459, !dbg !5188
  %opacity461 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx460, i32 0, i32 3, !dbg !5194
  %307 = load i16, i16* %opacity461, align 2, !dbg !5194
  %308 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5195
  %colormap462 = getelementptr inbounds %struct._Image, %struct._Image* %308, i32 0, i32 11, !dbg !5196
  %309 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap462, align 8, !dbg !5196
  %310 = load i64, i64* %i, align 8, !dbg !5197
  %arrayidx463 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %309, i64 %310, !dbg !5195
  %opacity464 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx463, i32 0, i32 3, !dbg !5198
  store i16 %307, i16* %opacity464, align 2, !dbg !5199
  br label %if.end465, !dbg !5195

if.end465:                                        ; preds = %if.then454, %land.lhs.true449, %if.end445
  br label %for.inc466, !dbg !5200

for.inc466:                                       ; preds = %if.end465, %if.end384
  %311 = load i64, i64* %i, align 8, !dbg !5201
  %inc467 = add nsw i64 %311, 1, !dbg !5201
  store i64 %inc467, i64* %i, align 8, !dbg !5201
  br label %for.cond332, !dbg !5202, !llvm.loop !5203

for.end468:                                       ; preds = %for.cond332
  br label %if.end469, !dbg !5205

if.end469:                                        ; preds = %for.end468, %for.end326
  store i32 1, i32* %status, align 4, !dbg !5206
  store i64 0, i64* %progress, align 8, !dbg !5207
  %312 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5208
  %313 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5209
  %call470 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %312, %struct._ExceptionInfo* %313), !dbg !5210
  store %struct._CacheView* %call470, %struct._CacheView** %image_view, align 8, !dbg !5211
  store i64 0, i64* %y, align 8, !dbg !5212
  br label %for.cond471, !dbg !5214

for.cond471:                                      ; preds = %for.inc673, %if.end469
  %314 = load i64, i64* %y, align 8, !dbg !5215
  %315 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5217
  %rows472 = getelementptr inbounds %struct._Image, %struct._Image* %315, i32 0, i32 8, !dbg !5218
  %316 = load i64, i64* %rows472, align 8, !dbg !5218
  %cmp473 = icmp slt i64 %314, %316, !dbg !5219
  br i1 %cmp473, label %for.body475, label %for.end675, !dbg !5220

for.body475:                                      ; preds = %for.cond471
  call void @llvm.dbg.declare(metadata i16** %indexes476, metadata !5221, metadata !DIExpression()), !dbg !5223
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !5224, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.declare(metadata i64* %x477, metadata !5226, metadata !DIExpression()), !dbg !5227
  %317 = load i32, i32* %status, align 4, !dbg !5228
  %cmp478 = icmp eq i32 %317, 0, !dbg !5230
  br i1 %cmp478, label %if.then480, label %if.end481, !dbg !5231

if.then480:                                       ; preds = %for.body475
  br label %for.inc673, !dbg !5232

if.end481:                                        ; preds = %for.body475
  %318 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5233
  %319 = load i64, i64* %y, align 8, !dbg !5234
  %320 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5235
  %columns482 = getelementptr inbounds %struct._Image, %struct._Image* %320, i32 0, i32 7, !dbg !5236
  %321 = load i64, i64* %columns482, align 8, !dbg !5236
  %322 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5237
  %call483 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %318, i64 0, i64 %319, i64 %321, i64 1, %struct._ExceptionInfo* %322), !dbg !5238
  store %struct._PixelPacket* %call483, %struct._PixelPacket** %q, align 8, !dbg !5239
  %323 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5240
  %cmp484 = icmp eq %struct._PixelPacket* %323, null, !dbg !5242
  br i1 %cmp484, label %if.then486, label %if.end487, !dbg !5243

if.then486:                                       ; preds = %if.end481
  store i32 0, i32* %status, align 4, !dbg !5244
  br label %for.inc673, !dbg !5246

if.end487:                                        ; preds = %if.end481
  %324 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5247
  %call488 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %324), !dbg !5248
  store i16* %call488, i16** %indexes476, align 8, !dbg !5249
  store i64 0, i64* %x477, align 8, !dbg !5250
  br label %for.cond489, !dbg !5252

for.cond489:                                      ; preds = %for.inc654, %if.end487
  %325 = load i64, i64* %x477, align 8, !dbg !5253
  %326 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5255
  %columns490 = getelementptr inbounds %struct._Image, %struct._Image* %326, i32 0, i32 7, !dbg !5256
  %327 = load i64, i64* %columns490, align 8, !dbg !5256
  %cmp491 = icmp slt i64 %325, %327, !dbg !5257
  br i1 %cmp491, label %for.body493, label %for.end656, !dbg !5258

for.body493:                                      ; preds = %for.cond489
  %328 = load i32, i32* %channel.addr, align 4, !dbg !5259
  %and494 = and i32 %328, 256, !dbg !5262
  %cmp495 = icmp ne i32 %and494, 0, !dbg !5263
  br i1 %cmp495, label %if.then497, label %if.end554, !dbg !5264

if.then497:                                       ; preds = %for.body493
  %red498 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 5, !dbg !5265
  %329 = load float, float* %red498, align 8, !dbg !5265
  %red499 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 5, !dbg !5268
  %330 = load float, float* %red499, align 8, !dbg !5268
  %cmp500 = fcmp une float %329, %330, !dbg !5269
  br i1 %cmp500, label %if.then502, label %if.end552, !dbg !5270

if.then502:                                       ; preds = %if.then497
  %331 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !5271
  %332 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5271
  %red503 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %332, i32 0, i32 2, !dbg !5271
  %333 = load i16, i16* %red503, align 2, !dbg !5271
  %call504 = call i32 @ScaleQuantumToMap(i16 zeroext %333), !dbg !5271
  %idxprom505 = zext i32 %call504 to i64, !dbg !5271
  %arrayidx506 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %331, i64 %idxprom505, !dbg !5271
  %red507 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx506, i32 0, i32 0, !dbg !5271
  %334 = load i16, i16* %red507, align 2, !dbg !5271
  %335 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5271
  %red508 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %335, i32 0, i32 2, !dbg !5271
  store i16 %334, i16* %red508, align 2, !dbg !5271
  %336 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !5273
  %337 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5273
  %green509 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %337, i32 0, i32 1, !dbg !5273
  %338 = load i16, i16* %green509, align 2, !dbg !5273
  %call510 = call i32 @ScaleQuantumToMap(i16 zeroext %338), !dbg !5273
  %idxprom511 = zext i32 %call510 to i64, !dbg !5273
  %arrayidx512 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %336, i64 %idxprom511, !dbg !5273
  %red513 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx512, i32 0, i32 0, !dbg !5273
  %339 = load i16, i16* %red513, align 2, !dbg !5273
  %340 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5273
  %green514 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %340, i32 0, i32 1, !dbg !5273
  store i16 %339, i16* %green514, align 2, !dbg !5273
  %341 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !5274
  %342 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5274
  %blue515 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %342, i32 0, i32 0, !dbg !5274
  %343 = load i16, i16* %blue515, align 2, !dbg !5274
  %call516 = call i32 @ScaleQuantumToMap(i16 zeroext %343), !dbg !5274
  %idxprom517 = zext i32 %call516 to i64, !dbg !5274
  %arrayidx518 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %341, i64 %idxprom517, !dbg !5274
  %red519 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx518, i32 0, i32 0, !dbg !5274
  %344 = load i16, i16* %red519, align 2, !dbg !5274
  %345 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5274
  %blue520 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %345, i32 0, i32 0, !dbg !5274
  store i16 %344, i16* %blue520, align 2, !dbg !5274
  %346 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !5275
  %347 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5275
  %opacity521 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %347, i32 0, i32 3, !dbg !5275
  %348 = load i16, i16* %opacity521, align 2, !dbg !5275
  %call522 = call i32 @ScaleQuantumToMap(i16 zeroext %348), !dbg !5275
  %idxprom523 = zext i32 %call522 to i64, !dbg !5275
  %arrayidx524 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %346, i64 %idxprom523, !dbg !5275
  %red525 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx524, i32 0, i32 0, !dbg !5275
  %349 = load i16, i16* %red525, align 2, !dbg !5275
  %350 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5275
  %opacity526 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %350, i32 0, i32 3, !dbg !5275
  store i16 %349, i16* %opacity526, align 2, !dbg !5275
  %351 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5276
  %colorspace527 = getelementptr inbounds %struct._Image, %struct._Image* %351, i32 0, i32 1, !dbg !5278
  %352 = load i32, i32* %colorspace527, align 4, !dbg !5278
  %cmp528 = icmp eq i32 %352, 12, !dbg !5279
  br i1 %cmp528, label %if.then530, label %if.end551, !dbg !5280

if.then530:                                       ; preds = %if.then502
  %353 = load i16*, i16** %indexes476, align 8, !dbg !5281
  %354 = load i64, i64* %x477, align 8, !dbg !5281
  %add.ptr531 = getelementptr inbounds i16, i16* %353, i64 %354, !dbg !5281
  %cmp532 = icmp ne i16* %add.ptr531, null, !dbg !5281
  br i1 %cmp532, label %if.then534, label %if.end550, !dbg !5284

if.then534:                                       ; preds = %if.then530
  %355 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !5281
  %356 = load i16*, i16** %indexes476, align 8, !dbg !5281
  %357 = load i64, i64* %x477, align 8, !dbg !5281
  %add.ptr535 = getelementptr inbounds i16, i16* %356, i64 %357, !dbg !5281
  %cmp536 = icmp eq i16* %add.ptr535, null, !dbg !5281
  br i1 %cmp536, label %cond.true538, label %cond.false539, !dbg !5281

cond.true538:                                     ; preds = %if.then534
  br label %cond.end542, !dbg !5281

cond.false539:                                    ; preds = %if.then534
  %358 = load i16*, i16** %indexes476, align 8, !dbg !5281
  %359 = load i64, i64* %x477, align 8, !dbg !5281
  %add.ptr540 = getelementptr inbounds i16, i16* %358, i64 %359, !dbg !5281
  %360 = load i16, i16* %add.ptr540, align 2, !dbg !5281
  %conv541 = zext i16 %360 to i32, !dbg !5281
  br label %cond.end542, !dbg !5281

cond.end542:                                      ; preds = %cond.false539, %cond.true538
  %cond543 = phi i32 [ 0, %cond.true538 ], [ %conv541, %cond.false539 ], !dbg !5281
  %conv544 = trunc i32 %cond543 to i16, !dbg !5281
  %call545 = call i32 @ScaleQuantumToMap(i16 zeroext %conv544), !dbg !5281
  %idxprom546 = zext i32 %call545 to i64, !dbg !5281
  %arrayidx547 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %355, i64 %idxprom546, !dbg !5281
  %red548 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx547, i32 0, i32 0, !dbg !5281
  %361 = load i16, i16* %red548, align 2, !dbg !5281
  %362 = load i16*, i16** %indexes476, align 8, !dbg !5281
  %363 = load i64, i64* %x477, align 8, !dbg !5281
  %add.ptr549 = getelementptr inbounds i16, i16* %362, i64 %363, !dbg !5281
  store i16 %361, i16* %add.ptr549, align 2, !dbg !5281
  br label %if.end550, !dbg !5281

if.end550:                                        ; preds = %cond.end542, %if.then530
  br label %if.end551, !dbg !5284

if.end551:                                        ; preds = %if.end550, %if.then502
  br label %if.end552, !dbg !5285

if.end552:                                        ; preds = %if.end551, %if.then497
  %364 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5286
  %incdec.ptr553 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %364, i32 1, !dbg !5286
  store %struct._PixelPacket* %incdec.ptr553, %struct._PixelPacket** %q, align 8, !dbg !5286
  br label %for.inc654, !dbg !5287

if.end554:                                        ; preds = %for.body493
  %365 = load i32, i32* %channel.addr, align 4, !dbg !5288
  %and555 = and i32 %365, 1, !dbg !5290
  %cmp556 = icmp ne i32 %and555, 0, !dbg !5291
  br i1 %cmp556, label %land.lhs.true558, label %if.end570, !dbg !5292

land.lhs.true558:                                 ; preds = %if.end554
  %red559 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 5, !dbg !5293
  %366 = load float, float* %red559, align 8, !dbg !5293
  %red560 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 5, !dbg !5294
  %367 = load float, float* %red560, align 8, !dbg !5294
  %cmp561 = fcmp une float %366, %367, !dbg !5295
  br i1 %cmp561, label %if.then563, label %if.end570, !dbg !5296

if.then563:                                       ; preds = %land.lhs.true558
  %368 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !5297
  %369 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5297
  %red564 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %369, i32 0, i32 2, !dbg !5297
  %370 = load i16, i16* %red564, align 2, !dbg !5297
  %call565 = call i32 @ScaleQuantumToMap(i16 zeroext %370), !dbg !5297
  %idxprom566 = zext i32 %call565 to i64, !dbg !5297
  %arrayidx567 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %368, i64 %idxprom566, !dbg !5297
  %red568 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx567, i32 0, i32 0, !dbg !5297
  %371 = load i16, i16* %red568, align 2, !dbg !5297
  %372 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5297
  %red569 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %372, i32 0, i32 2, !dbg !5297
  store i16 %371, i16* %red569, align 2, !dbg !5297
  br label %if.end570, !dbg !5297

if.end570:                                        ; preds = %if.then563, %land.lhs.true558, %if.end554
  %373 = load i32, i32* %channel.addr, align 4, !dbg !5298
  %and571 = and i32 %373, 2, !dbg !5300
  %cmp572 = icmp ne i32 %and571, 0, !dbg !5301
  br i1 %cmp572, label %land.lhs.true574, label %if.end586, !dbg !5302

land.lhs.true574:                                 ; preds = %if.end570
  %green575 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 6, !dbg !5303
  %374 = load float, float* %green575, align 4, !dbg !5303
  %green576 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 6, !dbg !5304
  %375 = load float, float* %green576, align 4, !dbg !5304
  %cmp577 = fcmp une float %374, %375, !dbg !5305
  br i1 %cmp577, label %if.then579, label %if.end586, !dbg !5306

if.then579:                                       ; preds = %land.lhs.true574
  %376 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !5307
  %377 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5307
  %green580 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %377, i32 0, i32 1, !dbg !5307
  %378 = load i16, i16* %green580, align 2, !dbg !5307
  %call581 = call i32 @ScaleQuantumToMap(i16 zeroext %378), !dbg !5307
  %idxprom582 = zext i32 %call581 to i64, !dbg !5307
  %arrayidx583 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %376, i64 %idxprom582, !dbg !5307
  %green584 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx583, i32 0, i32 1, !dbg !5307
  %379 = load i16, i16* %green584, align 2, !dbg !5307
  %380 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5307
  %green585 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %380, i32 0, i32 1, !dbg !5307
  store i16 %379, i16* %green585, align 2, !dbg !5307
  br label %if.end586, !dbg !5307

if.end586:                                        ; preds = %if.then579, %land.lhs.true574, %if.end570
  %381 = load i32, i32* %channel.addr, align 4, !dbg !5308
  %and587 = and i32 %381, 4, !dbg !5310
  %cmp588 = icmp ne i32 %and587, 0, !dbg !5311
  br i1 %cmp588, label %land.lhs.true590, label %if.end602, !dbg !5312

land.lhs.true590:                                 ; preds = %if.end586
  %blue591 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 7, !dbg !5313
  %382 = load float, float* %blue591, align 8, !dbg !5313
  %blue592 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 7, !dbg !5314
  %383 = load float, float* %blue592, align 8, !dbg !5314
  %cmp593 = fcmp une float %382, %383, !dbg !5315
  br i1 %cmp593, label %if.then595, label %if.end602, !dbg !5316

if.then595:                                       ; preds = %land.lhs.true590
  %384 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !5317
  %385 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5317
  %blue596 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %385, i32 0, i32 0, !dbg !5317
  %386 = load i16, i16* %blue596, align 2, !dbg !5317
  %call597 = call i32 @ScaleQuantumToMap(i16 zeroext %386), !dbg !5317
  %idxprom598 = zext i32 %call597 to i64, !dbg !5317
  %arrayidx599 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %384, i64 %idxprom598, !dbg !5317
  %blue600 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx599, i32 0, i32 2, !dbg !5317
  %387 = load i16, i16* %blue600, align 2, !dbg !5317
  %388 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5317
  %blue601 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %388, i32 0, i32 0, !dbg !5317
  store i16 %387, i16* %blue601, align 2, !dbg !5317
  br label %if.end602, !dbg !5317

if.end602:                                        ; preds = %if.then595, %land.lhs.true590, %if.end586
  %389 = load i32, i32* %channel.addr, align 4, !dbg !5318
  %and603 = and i32 %389, 8, !dbg !5320
  %cmp604 = icmp ne i32 %and603, 0, !dbg !5321
  br i1 %cmp604, label %land.lhs.true606, label %if.end618, !dbg !5322

land.lhs.true606:                                 ; preds = %if.end602
  %opacity607 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 8, !dbg !5323
  %390 = load float, float* %opacity607, align 4, !dbg !5323
  %opacity608 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 8, !dbg !5324
  %391 = load float, float* %opacity608, align 4, !dbg !5324
  %cmp609 = fcmp une float %390, %391, !dbg !5325
  br i1 %cmp609, label %if.then611, label %if.end618, !dbg !5326

if.then611:                                       ; preds = %land.lhs.true606
  %392 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !5327
  %393 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5327
  %opacity612 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %393, i32 0, i32 3, !dbg !5327
  %394 = load i16, i16* %opacity612, align 2, !dbg !5327
  %call613 = call i32 @ScaleQuantumToMap(i16 zeroext %394), !dbg !5327
  %idxprom614 = zext i32 %call613 to i64, !dbg !5327
  %arrayidx615 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %392, i64 %idxprom614, !dbg !5327
  %opacity616 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx615, i32 0, i32 3, !dbg !5327
  %395 = load i16, i16* %opacity616, align 2, !dbg !5327
  %396 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5327
  %opacity617 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %396, i32 0, i32 3, !dbg !5327
  store i16 %395, i16* %opacity617, align 2, !dbg !5327
  br label %if.end618, !dbg !5327

if.end618:                                        ; preds = %if.then611, %land.lhs.true606, %if.end602
  %397 = load i32, i32* %channel.addr, align 4, !dbg !5328
  %and619 = and i32 %397, 32, !dbg !5330
  %cmp620 = icmp ne i32 %and619, 0, !dbg !5331
  br i1 %cmp620, label %land.lhs.true622, label %if.end652, !dbg !5332

land.lhs.true622:                                 ; preds = %if.end618
  %398 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5333
  %colorspace623 = getelementptr inbounds %struct._Image, %struct._Image* %398, i32 0, i32 1, !dbg !5334
  %399 = load i32, i32* %colorspace623, align 4, !dbg !5334
  %cmp624 = icmp eq i32 %399, 12, !dbg !5335
  br i1 %cmp624, label %land.lhs.true626, label %if.end652, !dbg !5336

land.lhs.true626:                                 ; preds = %land.lhs.true622
  %index627 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %white, i32 0, i32 9, !dbg !5337
  %400 = load float, float* %index627, align 8, !dbg !5337
  %index628 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %black, i32 0, i32 9, !dbg !5338
  %401 = load float, float* %index628, align 8, !dbg !5338
  %cmp629 = fcmp une float %400, %401, !dbg !5339
  br i1 %cmp629, label %if.then631, label %if.end652, !dbg !5340

if.then631:                                       ; preds = %land.lhs.true626
  %402 = load i16*, i16** %indexes476, align 8, !dbg !5341
  %403 = load i64, i64* %x477, align 8, !dbg !5341
  %add.ptr632 = getelementptr inbounds i16, i16* %402, i64 %403, !dbg !5341
  %cmp633 = icmp ne i16* %add.ptr632, null, !dbg !5341
  br i1 %cmp633, label %if.then635, label %if.end651, !dbg !5344

if.then635:                                       ; preds = %if.then631
  %404 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !5341
  %405 = load i16*, i16** %indexes476, align 8, !dbg !5341
  %406 = load i64, i64* %x477, align 8, !dbg !5341
  %add.ptr636 = getelementptr inbounds i16, i16* %405, i64 %406, !dbg !5341
  %cmp637 = icmp eq i16* %add.ptr636, null, !dbg !5341
  br i1 %cmp637, label %cond.true639, label %cond.false640, !dbg !5341

cond.true639:                                     ; preds = %if.then635
  br label %cond.end643, !dbg !5341

cond.false640:                                    ; preds = %if.then635
  %407 = load i16*, i16** %indexes476, align 8, !dbg !5341
  %408 = load i64, i64* %x477, align 8, !dbg !5341
  %add.ptr641 = getelementptr inbounds i16, i16* %407, i64 %408, !dbg !5341
  %409 = load i16, i16* %add.ptr641, align 2, !dbg !5341
  %conv642 = zext i16 %409 to i32, !dbg !5341
  br label %cond.end643, !dbg !5341

cond.end643:                                      ; preds = %cond.false640, %cond.true639
  %cond644 = phi i32 [ 0, %cond.true639 ], [ %conv642, %cond.false640 ], !dbg !5341
  %conv645 = trunc i32 %cond644 to i16, !dbg !5341
  %call646 = call i32 @ScaleQuantumToMap(i16 zeroext %conv645), !dbg !5341
  %idxprom647 = zext i32 %call646 to i64, !dbg !5341
  %arrayidx648 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %404, i64 %idxprom647, !dbg !5341
  %index649 = getelementptr inbounds %struct._QuantumPixelPacket, %struct._QuantumPixelPacket* %arrayidx648, i32 0, i32 4, !dbg !5341
  %410 = load i16, i16* %index649, align 2, !dbg !5341
  %411 = load i16*, i16** %indexes476, align 8, !dbg !5341
  %412 = load i64, i64* %x477, align 8, !dbg !5341
  %add.ptr650 = getelementptr inbounds i16, i16* %411, i64 %412, !dbg !5341
  store i16 %410, i16* %add.ptr650, align 2, !dbg !5341
  br label %if.end651, !dbg !5341

if.end651:                                        ; preds = %cond.end643, %if.then631
  br label %if.end652, !dbg !5344

if.end652:                                        ; preds = %if.end651, %land.lhs.true626, %land.lhs.true622, %if.end618
  %413 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5345
  %incdec.ptr653 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %413, i32 1, !dbg !5345
  store %struct._PixelPacket* %incdec.ptr653, %struct._PixelPacket** %q, align 8, !dbg !5345
  br label %for.inc654, !dbg !5346

for.inc654:                                       ; preds = %if.end652, %if.end552
  %414 = load i64, i64* %x477, align 8, !dbg !5347
  %inc655 = add nsw i64 %414, 1, !dbg !5347
  store i64 %inc655, i64* %x477, align 8, !dbg !5347
  br label %for.cond489, !dbg !5348, !llvm.loop !5349

for.end656:                                       ; preds = %for.cond489
  %415 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5351
  %416 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5353
  %call657 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %415, %struct._ExceptionInfo* %416), !dbg !5354
  %cmp658 = icmp eq i32 %call657, 0, !dbg !5355
  br i1 %cmp658, label %if.then660, label %if.end661, !dbg !5356

if.then660:                                       ; preds = %for.end656
  store i32 0, i32* %status, align 4, !dbg !5357
  br label %if.end661, !dbg !5358

if.end661:                                        ; preds = %if.then660, %for.end656
  %417 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5359
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %417, i32 0, i32 47, !dbg !5361
  %418 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !5361
  %cmp662 = icmp ne i32 (i8*, i64, i64, i8*)* %418, null, !dbg !5362
  br i1 %cmp662, label %if.then664, label %if.end672, !dbg !5363

if.then664:                                       ; preds = %if.end661
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !5364, metadata !DIExpression()), !dbg !5366
  %419 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5367
  %420 = load i64, i64* %progress, align 8, !dbg !5368
  %inc665 = add nsw i64 %420, 1, !dbg !5368
  store i64 %inc665, i64* %progress, align 8, !dbg !5368
  %421 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5369
  %rows666 = getelementptr inbounds %struct._Image, %struct._Image* %421, i32 0, i32 8, !dbg !5370
  %422 = load i64, i64* %rows666, align 8, !dbg !5370
  %call667 = call i32 @SetImageProgress(%struct._Image* %419, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i64 0, i64 0), i64 %420, i64 %422), !dbg !5371
  store i32 %call667, i32* %proceed, align 4, !dbg !5372
  %423 = load i32, i32* %proceed, align 4, !dbg !5373
  %cmp668 = icmp eq i32 %423, 0, !dbg !5375
  br i1 %cmp668, label %if.then670, label %if.end671, !dbg !5376

if.then670:                                       ; preds = %if.then664
  store i32 0, i32* %status, align 4, !dbg !5377
  br label %if.end671, !dbg !5378

if.end671:                                        ; preds = %if.then670, %if.then664
  br label %if.end672, !dbg !5379

if.end672:                                        ; preds = %if.end671, %if.end661
  br label %for.inc673, !dbg !5380

for.inc673:                                       ; preds = %if.end672, %if.then486, %if.then480
  %424 = load i64, i64* %y, align 8, !dbg !5381
  %inc674 = add nsw i64 %424, 1, !dbg !5381
  store i64 %inc674, i64* %y, align 8, !dbg !5381
  br label %for.cond471, !dbg !5382, !llvm.loop !5383

for.end675:                                       ; preds = %for.cond471
  %425 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5385
  %call676 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %425), !dbg !5386
  store %struct._CacheView* %call676, %struct._CacheView** %image_view, align 8, !dbg !5387
  %426 = load %struct._QuantumPixelPacket*, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !5388
  %427 = bitcast %struct._QuantumPixelPacket* %426 to i8*, !dbg !5388
  %call677 = call i8* @RelinquishMagickMemory(i8* %427), !dbg !5389
  %428 = bitcast i8* %call677 to %struct._QuantumPixelPacket*, !dbg !5390
  store %struct._QuantumPixelPacket* %428, %struct._QuantumPixelPacket** %equalize_map, align 8, !dbg !5391
  %429 = load i32, i32* %status, align 4, !dbg !5392
  store i32 %429, i32* %retval, align 4, !dbg !5393
  br label %return, !dbg !5393

return:                                           ; preds = %for.end675, %if.end32, %if.then4
  %430 = load i32, i32* %retval, align 4, !dbg !5394
  ret i32 %430, !dbg !5394
}

declare dso_local i32 @AccelerateEqualizeImage(%struct._Image*, i32, %struct._ExceptionInfo*) #3

declare dso_local %struct._CacheView* @AcquireVirtualCacheView(%struct._Image*, %struct._ExceptionInfo*) #3

declare dso_local i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @GammaImage(%struct._Image* %image, i8* %level) #0 !dbg !5395 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %level.addr = alloca i8*, align 8
  %geometry_info = alloca %struct._GeometryInfo, align 8
  %gamma = alloca %struct._MagickPixelPacket, align 8
  %flags = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !5396, metadata !DIExpression()), !dbg !5397
  store i8* %level, i8** %level.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %level.addr, metadata !5398, metadata !DIExpression()), !dbg !5399
  call void @llvm.dbg.declare(metadata %struct._GeometryInfo* %geometry_info, metadata !5400, metadata !DIExpression()), !dbg !5401
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %gamma, metadata !5402, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !5404, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5406, metadata !DIExpression()), !dbg !5407
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5408
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !5410
  %1 = load i32, i32* %debug, align 8, !dbg !5410
  %cmp = icmp ne i32 %1, 0, !dbg !5411
  br i1 %cmp, label %if.then, label %if.end, !dbg !5412

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5413
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !5414
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !5413
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2122, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5415
  br label %if.end, !dbg !5416

if.end:                                           ; preds = %if.then, %entry
  %3 = load i8*, i8** %level.addr, align 8, !dbg !5417
  %cmp1 = icmp eq i8* %3, null, !dbg !5419
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !5420

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5421
  br label %return, !dbg !5421

if.end3:                                          ; preds = %if.end
  %4 = load i8*, i8** %level.addr, align 8, !dbg !5422
  %call4 = call i32 @ParseGeometry(i8* %4, %struct._GeometryInfo* %geometry_info), !dbg !5423
  store i32 %call4, i32* %flags, align 4, !dbg !5424
  %rho = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 0, !dbg !5425
  %5 = load double, double* %rho, align 8, !dbg !5425
  %conv = fptrunc double %5 to float, !dbg !5426
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %gamma, i32 0, i32 5, !dbg !5427
  store float %conv, float* %red, align 8, !dbg !5428
  %sigma = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 1, !dbg !5429
  %6 = load double, double* %sigma, align 8, !dbg !5429
  %conv5 = fptrunc double %6 to float, !dbg !5430
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %gamma, i32 0, i32 6, !dbg !5431
  store float %conv5, float* %green, align 4, !dbg !5432
  %7 = load i32, i32* %flags, align 4, !dbg !5433
  %and = and i32 %7, 8, !dbg !5435
  %cmp6 = icmp eq i32 %and, 0, !dbg !5436
  br i1 %cmp6, label %if.then8, label %if.end11, !dbg !5437

if.then8:                                         ; preds = %if.end3
  %red9 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %gamma, i32 0, i32 5, !dbg !5438
  %8 = load float, float* %red9, align 8, !dbg !5438
  %green10 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %gamma, i32 0, i32 6, !dbg !5439
  store float %8, float* %green10, align 4, !dbg !5440
  br label %if.end11, !dbg !5441

if.end11:                                         ; preds = %if.then8, %if.end3
  %xi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 2, !dbg !5442
  %9 = load double, double* %xi, align 8, !dbg !5442
  %conv12 = fptrunc double %9 to float, !dbg !5443
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %gamma, i32 0, i32 7, !dbg !5444
  store float %conv12, float* %blue, align 8, !dbg !5445
  %10 = load i32, i32* %flags, align 4, !dbg !5446
  %and13 = and i32 %10, 1, !dbg !5448
  %cmp14 = icmp eq i32 %and13, 0, !dbg !5449
  br i1 %cmp14, label %if.then16, label %if.end19, !dbg !5450

if.then16:                                        ; preds = %if.end11
  %red17 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %gamma, i32 0, i32 5, !dbg !5451
  %11 = load float, float* %red17, align 8, !dbg !5451
  %blue18 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %gamma, i32 0, i32 7, !dbg !5452
  store float %11, float* %blue18, align 8, !dbg !5453
  br label %if.end19, !dbg !5454

if.end19:                                         ; preds = %if.then16, %if.end11
  %red20 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %gamma, i32 0, i32 5, !dbg !5455
  %12 = load float, float* %red20, align 8, !dbg !5455
  %conv21 = fpext float %12 to double, !dbg !5457
  %cmp22 = fcmp oeq double %conv21, 1.000000e+00, !dbg !5458
  br i1 %cmp22, label %land.lhs.true, label %if.end34, !dbg !5459

land.lhs.true:                                    ; preds = %if.end19
  %green24 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %gamma, i32 0, i32 6, !dbg !5460
  %13 = load float, float* %green24, align 4, !dbg !5460
  %conv25 = fpext float %13 to double, !dbg !5461
  %cmp26 = fcmp oeq double %conv25, 1.000000e+00, !dbg !5462
  br i1 %cmp26, label %land.lhs.true28, label %if.end34, !dbg !5463

land.lhs.true28:                                  ; preds = %land.lhs.true
  %blue29 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %gamma, i32 0, i32 7, !dbg !5464
  %14 = load float, float* %blue29, align 8, !dbg !5464
  %conv30 = fpext float %14 to double, !dbg !5465
  %cmp31 = fcmp oeq double %conv30, 1.000000e+00, !dbg !5466
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !5467

if.then33:                                        ; preds = %land.lhs.true28
  store i32 1, i32* %retval, align 4, !dbg !5468
  br label %return, !dbg !5468

if.end34:                                         ; preds = %land.lhs.true28, %land.lhs.true, %if.end19
  %red35 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %gamma, i32 0, i32 5, !dbg !5469
  %15 = load float, float* %red35, align 8, !dbg !5469
  %green36 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %gamma, i32 0, i32 6, !dbg !5471
  %16 = load float, float* %green36, align 4, !dbg !5471
  %cmp37 = fcmp oeq float %15, %16, !dbg !5472
  br i1 %cmp37, label %land.lhs.true39, label %if.else, !dbg !5473

land.lhs.true39:                                  ; preds = %if.end34
  %green40 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %gamma, i32 0, i32 6, !dbg !5474
  %17 = load float, float* %green40, align 4, !dbg !5474
  %blue41 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %gamma, i32 0, i32 7, !dbg !5475
  %18 = load float, float* %blue41, align 8, !dbg !5475
  %cmp42 = fcmp oeq float %17, %18, !dbg !5476
  br i1 %cmp42, label %if.then44, label %if.else, !dbg !5477

if.then44:                                        ; preds = %land.lhs.true39
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5478
  %red45 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %gamma, i32 0, i32 5, !dbg !5479
  %20 = load float, float* %red45, align 8, !dbg !5479
  %conv46 = fpext float %20 to double, !dbg !5480
  %call47 = call i32 @GammaImageChannel(%struct._Image* %19, i32 7, double %conv46), !dbg !5481
  store i32 %call47, i32* %status, align 4, !dbg !5482
  br label %if.end59, !dbg !5483

if.else:                                          ; preds = %land.lhs.true39, %if.end34
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5484
  %red48 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %gamma, i32 0, i32 5, !dbg !5486
  %22 = load float, float* %red48, align 8, !dbg !5486
  %conv49 = fpext float %22 to double, !dbg !5487
  %call50 = call i32 @GammaImageChannel(%struct._Image* %21, i32 1, double %conv49), !dbg !5488
  store i32 %call50, i32* %status, align 4, !dbg !5489
  %23 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5490
  %green51 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %gamma, i32 0, i32 6, !dbg !5491
  %24 = load float, float* %green51, align 4, !dbg !5491
  %conv52 = fpext float %24 to double, !dbg !5492
  %call53 = call i32 @GammaImageChannel(%struct._Image* %23, i32 2, double %conv52), !dbg !5493
  %25 = load i32, i32* %status, align 4, !dbg !5494
  %and54 = and i32 %25, %call53, !dbg !5494
  store i32 %and54, i32* %status, align 4, !dbg !5494
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5495
  %blue55 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %gamma, i32 0, i32 7, !dbg !5496
  %27 = load float, float* %blue55, align 8, !dbg !5496
  %conv56 = fpext float %27 to double, !dbg !5497
  %call57 = call i32 @GammaImageChannel(%struct._Image* %26, i32 4, double %conv56), !dbg !5498
  %28 = load i32, i32* %status, align 4, !dbg !5499
  %and58 = and i32 %28, %call57, !dbg !5499
  store i32 %and58, i32* %status, align 4, !dbg !5499
  br label %if.end59

if.end59:                                         ; preds = %if.else, %if.then44
  %29 = load i32, i32* %status, align 4, !dbg !5500
  %cmp60 = icmp ne i32 %29, 0, !dbg !5501
  %30 = zext i1 %cmp60 to i64, !dbg !5500
  %cond = select i1 %cmp60, i32 1, i32 0, !dbg !5500
  store i32 %cond, i32* %retval, align 4, !dbg !5502
  br label %return, !dbg !5502

return:                                           ; preds = %if.end59, %if.then33, %if.then2
  %31 = load i32, i32* %retval, align 4, !dbg !5503
  ret i32 %31, !dbg !5503
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @GammaImageChannel(%struct._Image* %image, i32 %channel, double %gamma) #0 !dbg !5504 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %gamma.addr = alloca double, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %gamma_map = alloca i16*, align 8
  %i = alloca i64, align 8
  %y = alloca i64, align 8
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !5507, metadata !DIExpression()), !dbg !5508
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !5509, metadata !DIExpression()), !dbg !5510
  store double %gamma, double* %gamma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %gamma.addr, metadata !5511, metadata !DIExpression()), !dbg !5512
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !5513, metadata !DIExpression()), !dbg !5514
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !5515, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5517, metadata !DIExpression()), !dbg !5518
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !5519, metadata !DIExpression()), !dbg !5520
  call void @llvm.dbg.declare(metadata i16** %gamma_map, metadata !5521, metadata !DIExpression()), !dbg !5522
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5523, metadata !DIExpression()), !dbg !5524
  call void @llvm.dbg.declare(metadata i64* %y, metadata !5525, metadata !DIExpression()), !dbg !5526
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5527
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !5529
  %1 = load i32, i32* %debug, align 8, !dbg !5529
  %cmp = icmp ne i32 %1, 0, !dbg !5530
  br i1 %cmp, label %if.then, label %if.end, !dbg !5531

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5532
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !5533
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !5532
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2179, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5534
  br label %if.end, !dbg !5535

if.end:                                           ; preds = %if.then, %entry
  %3 = load double, double* %gamma.addr, align 8, !dbg !5536
  %cmp1 = fcmp oeq double %3, 1.000000e+00, !dbg !5538
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !5539

if.then2:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !5540
  br label %return, !dbg !5540

if.end3:                                          ; preds = %if.end
  %call4 = call i8* @AcquireQuantumMemory(i64 65536, i64 2) #7, !dbg !5541
  %4 = bitcast i8* %call4 to i16*, !dbg !5542
  store i16* %4, i16** %gamma_map, align 8, !dbg !5543
  %5 = load i16*, i16** %gamma_map, align 8, !dbg !5544
  %cmp5 = icmp eq i16* %5, null, !dbg !5546
  br i1 %cmp5, label %if.then6, label %if.end14, !dbg !5547

if.then6:                                         ; preds = %if.end3
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5548
  %cmp7 = icmp ne %struct._Image* %6, null, !dbg !5548
  br i1 %cmp7, label %if.then8, label %if.end13, !dbg !5551

if.then8:                                         ; preds = %if.then6
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5548
  %exception9 = getelementptr inbounds %struct._Image, %struct._Image* %7, i32 0, i32 58, !dbg !5548
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5548
  %filename10 = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 53, !dbg !5548
  %arraydecay11 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename10, i64 0, i64 0, !dbg !5548
  %call12 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception9, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2185, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay11), !dbg !5548
  br label %if.end13, !dbg !5548

if.end13:                                         ; preds = %if.then8, %if.then6
  store i32 0, i32* %retval, align 4, !dbg !5551
  br label %return, !dbg !5551

if.end14:                                         ; preds = %if.end3
  %9 = load i16*, i16** %gamma_map, align 8, !dbg !5552
  %10 = bitcast i16* %9 to i8*, !dbg !5552
  %call15 = call i8* @ResetMagickMemory(i8* %10, i32 0, i64 131072), !dbg !5553
  %11 = load double, double* %gamma.addr, align 8, !dbg !5554
  %cmp16 = fcmp une double %11, 0.000000e+00, !dbg !5556
  br i1 %cmp16, label %if.then17, label %if.end25, !dbg !5557

if.then17:                                        ; preds = %if.end14
  store i64 0, i64* %i, align 8, !dbg !5558
  br label %for.cond, !dbg !5560

for.cond:                                         ; preds = %for.inc, %if.then17
  %12 = load i64, i64* %i, align 8, !dbg !5561
  %cmp18 = icmp sle i64 %12, 65535, !dbg !5563
  br i1 %cmp18, label %for.body, label %for.end, !dbg !5564

for.body:                                         ; preds = %for.cond
  %13 = load i64, i64* %i, align 8, !dbg !5565
  %conv = sitofp i64 %13 to double, !dbg !5566
  %div = fdiv double %conv, 6.553500e+04, !dbg !5567
  %14 = load double, double* %gamma.addr, align 8, !dbg !5568
  %div19 = fdiv double 1.000000e+00, %14, !dbg !5569
  %call20 = call double @pow(double %div, double %div19) #6, !dbg !5570
  %mul = fmul double 6.553500e+04, %call20, !dbg !5571
  %conv21 = fptrunc double %mul to float, !dbg !5572
  %call22 = call zeroext i16 @ScaleMapToQuantum(float %conv21), !dbg !5573
  %conv23 = uitofp i16 %call22 to float, !dbg !5574
  %call24 = call zeroext i16 @ClampToQuantum(float %conv23), !dbg !5575
  %15 = load i16*, i16** %gamma_map, align 8, !dbg !5576
  %16 = load i64, i64* %i, align 8, !dbg !5577
  %arrayidx = getelementptr inbounds i16, i16* %15, i64 %16, !dbg !5576
  store i16 %call24, i16* %arrayidx, align 2, !dbg !5578
  br label %for.inc, !dbg !5576

for.inc:                                          ; preds = %for.body
  %17 = load i64, i64* %i, align 8, !dbg !5579
  %inc = add nsw i64 %17, 1, !dbg !5579
  store i64 %inc, i64* %i, align 8, !dbg !5579
  br label %for.cond, !dbg !5580, !llvm.loop !5581

for.end:                                          ; preds = %for.cond
  br label %if.end25, !dbg !5582

if.end25:                                         ; preds = %for.end, %if.end14
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5583
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 0, !dbg !5585
  %19 = load i32, i32* %storage_class, align 8, !dbg !5585
  %cmp26 = icmp eq i32 %19, 2, !dbg !5586
  br i1 %cmp26, label %if.then28, label %if.end103, !dbg !5587

if.then28:                                        ; preds = %if.end25
  store i64 0, i64* %i, align 8, !dbg !5588
  br label %for.cond29, !dbg !5591

for.cond29:                                       ; preds = %for.inc100, %if.then28
  %20 = load i64, i64* %i, align 8, !dbg !5592
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5594
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 10, !dbg !5595
  %22 = load i64, i64* %colors, align 8, !dbg !5595
  %cmp30 = icmp slt i64 %20, %22, !dbg !5596
  br i1 %cmp30, label %for.body32, label %for.end102, !dbg !5597

for.body32:                                       ; preds = %for.cond29
  %23 = load i32, i32* %channel.addr, align 4, !dbg !5598
  %and = and i32 %23, 1, !dbg !5601
  %cmp33 = icmp ne i32 %and, 0, !dbg !5602
  br i1 %cmp33, label %if.then35, label %if.end42, !dbg !5603

if.then35:                                        ; preds = %for.body32
  %24 = load i16*, i16** %gamma_map, align 8, !dbg !5604
  %25 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5605
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 11, !dbg !5606
  %26 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !5606
  %27 = load i64, i64* %i, align 8, !dbg !5607
  %arrayidx36 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %26, i64 %27, !dbg !5605
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx36, i32 0, i32 2, !dbg !5608
  %28 = load i16, i16* %red, align 2, !dbg !5608
  %call37 = call i32 @ScaleQuantumToMap(i16 zeroext %28), !dbg !5609
  %idxprom = zext i32 %call37 to i64, !dbg !5604
  %arrayidx38 = getelementptr inbounds i16, i16* %24, i64 %idxprom, !dbg !5604
  %29 = load i16, i16* %arrayidx38, align 2, !dbg !5604
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5610
  %colormap39 = getelementptr inbounds %struct._Image, %struct._Image* %30, i32 0, i32 11, !dbg !5611
  %31 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap39, align 8, !dbg !5611
  %32 = load i64, i64* %i, align 8, !dbg !5612
  %arrayidx40 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %31, i64 %32, !dbg !5610
  %red41 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx40, i32 0, i32 2, !dbg !5613
  store i16 %29, i16* %red41, align 2, !dbg !5614
  br label %if.end42, !dbg !5610

if.end42:                                         ; preds = %if.then35, %for.body32
  %33 = load i32, i32* %channel.addr, align 4, !dbg !5615
  %and43 = and i32 %33, 2, !dbg !5617
  %cmp44 = icmp ne i32 %and43, 0, !dbg !5618
  br i1 %cmp44, label %if.then46, label %if.end55, !dbg !5619

if.then46:                                        ; preds = %if.end42
  %34 = load i16*, i16** %gamma_map, align 8, !dbg !5620
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5621
  %colormap47 = getelementptr inbounds %struct._Image, %struct._Image* %35, i32 0, i32 11, !dbg !5622
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap47, align 8, !dbg !5622
  %37 = load i64, i64* %i, align 8, !dbg !5623
  %arrayidx48 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i64 %37, !dbg !5621
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx48, i32 0, i32 1, !dbg !5624
  %38 = load i16, i16* %green, align 2, !dbg !5624
  %call49 = call i32 @ScaleQuantumToMap(i16 zeroext %38), !dbg !5625
  %idxprom50 = zext i32 %call49 to i64, !dbg !5620
  %arrayidx51 = getelementptr inbounds i16, i16* %34, i64 %idxprom50, !dbg !5620
  %39 = load i16, i16* %arrayidx51, align 2, !dbg !5620
  %40 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5626
  %colormap52 = getelementptr inbounds %struct._Image, %struct._Image* %40, i32 0, i32 11, !dbg !5627
  %41 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap52, align 8, !dbg !5627
  %42 = load i64, i64* %i, align 8, !dbg !5628
  %arrayidx53 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %41, i64 %42, !dbg !5626
  %green54 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx53, i32 0, i32 1, !dbg !5629
  store i16 %39, i16* %green54, align 2, !dbg !5630
  br label %if.end55, !dbg !5626

if.end55:                                         ; preds = %if.then46, %if.end42
  %43 = load i32, i32* %channel.addr, align 4, !dbg !5631
  %and56 = and i32 %43, 4, !dbg !5633
  %cmp57 = icmp ne i32 %and56, 0, !dbg !5634
  br i1 %cmp57, label %if.then59, label %if.end68, !dbg !5635

if.then59:                                        ; preds = %if.end55
  %44 = load i16*, i16** %gamma_map, align 8, !dbg !5636
  %45 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5637
  %colormap60 = getelementptr inbounds %struct._Image, %struct._Image* %45, i32 0, i32 11, !dbg !5638
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap60, align 8, !dbg !5638
  %47 = load i64, i64* %i, align 8, !dbg !5639
  %arrayidx61 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %46, i64 %47, !dbg !5637
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx61, i32 0, i32 0, !dbg !5640
  %48 = load i16, i16* %blue, align 2, !dbg !5640
  %call62 = call i32 @ScaleQuantumToMap(i16 zeroext %48), !dbg !5641
  %idxprom63 = zext i32 %call62 to i64, !dbg !5636
  %arrayidx64 = getelementptr inbounds i16, i16* %44, i64 %idxprom63, !dbg !5636
  %49 = load i16, i16* %arrayidx64, align 2, !dbg !5636
  %50 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5642
  %colormap65 = getelementptr inbounds %struct._Image, %struct._Image* %50, i32 0, i32 11, !dbg !5643
  %51 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap65, align 8, !dbg !5643
  %52 = load i64, i64* %i, align 8, !dbg !5644
  %arrayidx66 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %51, i64 %52, !dbg !5642
  %blue67 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx66, i32 0, i32 0, !dbg !5645
  store i16 %49, i16* %blue67, align 2, !dbg !5646
  br label %if.end68, !dbg !5642

if.end68:                                         ; preds = %if.then59, %if.end55
  %53 = load i32, i32* %channel.addr, align 4, !dbg !5647
  %and69 = and i32 %53, 8, !dbg !5649
  %cmp70 = icmp ne i32 %and69, 0, !dbg !5650
  br i1 %cmp70, label %if.then72, label %if.end99, !dbg !5651

if.then72:                                        ; preds = %if.end68
  %54 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5652
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %54, i32 0, i32 6, !dbg !5655
  %55 = load i32, i32* %matte, align 8, !dbg !5655
  %cmp73 = icmp eq i32 %55, 0, !dbg !5656
  br i1 %cmp73, label %if.then75, label %if.else, !dbg !5657

if.then75:                                        ; preds = %if.then72
  %56 = load i16*, i16** %gamma_map, align 8, !dbg !5658
  %57 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5659
  %colormap76 = getelementptr inbounds %struct._Image, %struct._Image* %57, i32 0, i32 11, !dbg !5660
  %58 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap76, align 8, !dbg !5660
  %59 = load i64, i64* %i, align 8, !dbg !5661
  %arrayidx77 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %58, i64 %59, !dbg !5659
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx77, i32 0, i32 3, !dbg !5662
  %60 = load i16, i16* %opacity, align 2, !dbg !5662
  %call78 = call i32 @ScaleQuantumToMap(i16 zeroext %60), !dbg !5663
  %idxprom79 = zext i32 %call78 to i64, !dbg !5658
  %arrayidx80 = getelementptr inbounds i16, i16* %56, i64 %idxprom79, !dbg !5658
  %61 = load i16, i16* %arrayidx80, align 2, !dbg !5658
  %62 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5664
  %colormap81 = getelementptr inbounds %struct._Image, %struct._Image* %62, i32 0, i32 11, !dbg !5665
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap81, align 8, !dbg !5665
  %64 = load i64, i64* %i, align 8, !dbg !5666
  %arrayidx82 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %63, i64 %64, !dbg !5664
  %opacity83 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx82, i32 0, i32 3, !dbg !5667
  store i16 %61, i16* %opacity83, align 2, !dbg !5668
  br label %if.end98, !dbg !5664

if.else:                                          ; preds = %if.then72
  %65 = load i16*, i16** %gamma_map, align 8, !dbg !5669
  %66 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5670
  %colormap84 = getelementptr inbounds %struct._Image, %struct._Image* %66, i32 0, i32 11, !dbg !5671
  %67 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap84, align 8, !dbg !5671
  %68 = load i64, i64* %i, align 8, !dbg !5672
  %arrayidx85 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %67, i64 %68, !dbg !5670
  %opacity86 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx85, i32 0, i32 3, !dbg !5673
  %69 = load i16, i16* %opacity86, align 2, !dbg !5673
  %conv87 = zext i16 %69 to i32, !dbg !5670
  %sub = sub nsw i32 65535, %conv87, !dbg !5674
  %conv88 = trunc i32 %sub to i16, !dbg !5675
  %call89 = call i32 @ScaleQuantumToMap(i16 zeroext %conv88), !dbg !5676
  %idxprom90 = zext i32 %call89 to i64, !dbg !5669
  %arrayidx91 = getelementptr inbounds i16, i16* %65, i64 %idxprom90, !dbg !5669
  %70 = load i16, i16* %arrayidx91, align 2, !dbg !5669
  %conv92 = zext i16 %70 to i32, !dbg !5669
  %sub93 = sub nsw i32 65535, %conv92, !dbg !5677
  %conv94 = trunc i32 %sub93 to i16, !dbg !5678
  %71 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5679
  %colormap95 = getelementptr inbounds %struct._Image, %struct._Image* %71, i32 0, i32 11, !dbg !5680
  %72 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap95, align 8, !dbg !5680
  %73 = load i64, i64* %i, align 8, !dbg !5681
  %arrayidx96 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %72, i64 %73, !dbg !5679
  %opacity97 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx96, i32 0, i32 3, !dbg !5682
  store i16 %conv94, i16* %opacity97, align 2, !dbg !5683
  br label %if.end98

if.end98:                                         ; preds = %if.else, %if.then75
  br label %if.end99, !dbg !5684

if.end99:                                         ; preds = %if.end98, %if.end68
  br label %for.inc100, !dbg !5685

for.inc100:                                       ; preds = %if.end99
  %74 = load i64, i64* %i, align 8, !dbg !5686
  %inc101 = add nsw i64 %74, 1, !dbg !5686
  store i64 %inc101, i64* %i, align 8, !dbg !5686
  br label %for.cond29, !dbg !5687, !llvm.loop !5688

for.end102:                                       ; preds = %for.cond29
  br label %if.end103, !dbg !5690

if.end103:                                        ; preds = %for.end102, %if.end25
  store i32 1, i32* %status, align 4, !dbg !5691
  store i64 0, i64* %progress, align 8, !dbg !5692
  %75 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5693
  %exception104 = getelementptr inbounds %struct._Image, %struct._Image* %75, i32 0, i32 58, !dbg !5694
  store %struct._ExceptionInfo* %exception104, %struct._ExceptionInfo** %exception, align 8, !dbg !5695
  %76 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5696
  %77 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5697
  %call105 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %76, %struct._ExceptionInfo* %77), !dbg !5698
  store %struct._CacheView* %call105, %struct._CacheView** %image_view, align 8, !dbg !5699
  store i64 0, i64* %y, align 8, !dbg !5700
  br label %for.cond106, !dbg !5702

for.cond106:                                      ; preds = %for.inc251, %if.end103
  %78 = load i64, i64* %y, align 8, !dbg !5703
  %79 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5705
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %79, i32 0, i32 8, !dbg !5706
  %80 = load i64, i64* %rows, align 8, !dbg !5706
  %cmp107 = icmp slt i64 %78, %80, !dbg !5707
  br i1 %cmp107, label %for.body109, label %for.end253, !dbg !5708

for.body109:                                      ; preds = %for.cond106
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !5709, metadata !DIExpression()), !dbg !5711
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !5712, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.declare(metadata i64* %x, metadata !5714, metadata !DIExpression()), !dbg !5715
  %81 = load i32, i32* %status, align 4, !dbg !5716
  %cmp110 = icmp eq i32 %81, 0, !dbg !5718
  br i1 %cmp110, label %if.then112, label %if.end113, !dbg !5719

if.then112:                                       ; preds = %for.body109
  br label %for.inc251, !dbg !5720

if.end113:                                        ; preds = %for.body109
  %82 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5721
  %83 = load i64, i64* %y, align 8, !dbg !5722
  %84 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5723
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %84, i32 0, i32 7, !dbg !5724
  %85 = load i64, i64* %columns, align 8, !dbg !5724
  %86 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5725
  %call114 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %82, i64 0, i64 %83, i64 %85, i64 1, %struct._ExceptionInfo* %86), !dbg !5726
  store %struct._PixelPacket* %call114, %struct._PixelPacket** %q, align 8, !dbg !5727
  %87 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5728
  %cmp115 = icmp eq %struct._PixelPacket* %87, null, !dbg !5730
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !5731

if.then117:                                       ; preds = %if.end113
  store i32 0, i32* %status, align 4, !dbg !5732
  br label %for.inc251, !dbg !5734

if.end118:                                        ; preds = %if.end113
  %88 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5735
  %call119 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %88), !dbg !5736
  store i16* %call119, i16** %indexes, align 8, !dbg !5737
  store i64 0, i64* %x, align 8, !dbg !5738
  br label %for.cond120, !dbg !5740

for.cond120:                                      ; preds = %for.inc203, %if.end118
  %89 = load i64, i64* %x, align 8, !dbg !5741
  %90 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5743
  %columns121 = getelementptr inbounds %struct._Image, %struct._Image* %90, i32 0, i32 7, !dbg !5744
  %91 = load i64, i64* %columns121, align 8, !dbg !5744
  %cmp122 = icmp slt i64 %89, %91, !dbg !5745
  br i1 %cmp122, label %for.body124, label %for.end205, !dbg !5746

for.body124:                                      ; preds = %for.cond120
  %92 = load i32, i32* %channel.addr, align 4, !dbg !5747
  %and125 = and i32 %92, 256, !dbg !5750
  %cmp126 = icmp ne i32 %and125, 0, !dbg !5751
  br i1 %cmp126, label %if.then128, label %if.else144, !dbg !5752

if.then128:                                       ; preds = %for.body124
  %93 = load i16*, i16** %gamma_map, align 8, !dbg !5753
  %94 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5753
  %red129 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %94, i32 0, i32 2, !dbg !5753
  %95 = load i16, i16* %red129, align 2, !dbg !5753
  %call130 = call i32 @ScaleQuantumToMap(i16 zeroext %95), !dbg !5753
  %idxprom131 = zext i32 %call130 to i64, !dbg !5753
  %arrayidx132 = getelementptr inbounds i16, i16* %93, i64 %idxprom131, !dbg !5753
  %96 = load i16, i16* %arrayidx132, align 2, !dbg !5753
  %97 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5753
  %red133 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %97, i32 0, i32 2, !dbg !5753
  store i16 %96, i16* %red133, align 2, !dbg !5753
  %98 = load i16*, i16** %gamma_map, align 8, !dbg !5755
  %99 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5755
  %green134 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %99, i32 0, i32 1, !dbg !5755
  %100 = load i16, i16* %green134, align 2, !dbg !5755
  %call135 = call i32 @ScaleQuantumToMap(i16 zeroext %100), !dbg !5755
  %idxprom136 = zext i32 %call135 to i64, !dbg !5755
  %arrayidx137 = getelementptr inbounds i16, i16* %98, i64 %idxprom136, !dbg !5755
  %101 = load i16, i16* %arrayidx137, align 2, !dbg !5755
  %102 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5755
  %green138 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %102, i32 0, i32 1, !dbg !5755
  store i16 %101, i16* %green138, align 2, !dbg !5755
  %103 = load i16*, i16** %gamma_map, align 8, !dbg !5756
  %104 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5756
  %blue139 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %104, i32 0, i32 0, !dbg !5756
  %105 = load i16, i16* %blue139, align 2, !dbg !5756
  %call140 = call i32 @ScaleQuantumToMap(i16 zeroext %105), !dbg !5756
  %idxprom141 = zext i32 %call140 to i64, !dbg !5756
  %arrayidx142 = getelementptr inbounds i16, i16* %103, i64 %idxprom141, !dbg !5756
  %106 = load i16, i16* %arrayidx142, align 2, !dbg !5756
  %107 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5756
  %blue143 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %107, i32 0, i32 0, !dbg !5756
  store i16 %106, i16* %blue143, align 2, !dbg !5756
  br label %if.end202, !dbg !5757

if.else144:                                       ; preds = %for.body124
  %108 = load i32, i32* %channel.addr, align 4, !dbg !5758
  %and145 = and i32 %108, 1, !dbg !5761
  %cmp146 = icmp ne i32 %and145, 0, !dbg !5762
  br i1 %cmp146, label %if.then148, label %if.end154, !dbg !5763

if.then148:                                       ; preds = %if.else144
  %109 = load i16*, i16** %gamma_map, align 8, !dbg !5764
  %110 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5764
  %red149 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %110, i32 0, i32 2, !dbg !5764
  %111 = load i16, i16* %red149, align 2, !dbg !5764
  %call150 = call i32 @ScaleQuantumToMap(i16 zeroext %111), !dbg !5764
  %idxprom151 = zext i32 %call150 to i64, !dbg !5764
  %arrayidx152 = getelementptr inbounds i16, i16* %109, i64 %idxprom151, !dbg !5764
  %112 = load i16, i16* %arrayidx152, align 2, !dbg !5764
  %113 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5764
  %red153 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %113, i32 0, i32 2, !dbg !5764
  store i16 %112, i16* %red153, align 2, !dbg !5764
  br label %if.end154, !dbg !5764

if.end154:                                        ; preds = %if.then148, %if.else144
  %114 = load i32, i32* %channel.addr, align 4, !dbg !5765
  %and155 = and i32 %114, 2, !dbg !5767
  %cmp156 = icmp ne i32 %and155, 0, !dbg !5768
  br i1 %cmp156, label %if.then158, label %if.end164, !dbg !5769

if.then158:                                       ; preds = %if.end154
  %115 = load i16*, i16** %gamma_map, align 8, !dbg !5770
  %116 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5770
  %green159 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %116, i32 0, i32 1, !dbg !5770
  %117 = load i16, i16* %green159, align 2, !dbg !5770
  %call160 = call i32 @ScaleQuantumToMap(i16 zeroext %117), !dbg !5770
  %idxprom161 = zext i32 %call160 to i64, !dbg !5770
  %arrayidx162 = getelementptr inbounds i16, i16* %115, i64 %idxprom161, !dbg !5770
  %118 = load i16, i16* %arrayidx162, align 2, !dbg !5770
  %119 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5770
  %green163 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %119, i32 0, i32 1, !dbg !5770
  store i16 %118, i16* %green163, align 2, !dbg !5770
  br label %if.end164, !dbg !5770

if.end164:                                        ; preds = %if.then158, %if.end154
  %120 = load i32, i32* %channel.addr, align 4, !dbg !5771
  %and165 = and i32 %120, 4, !dbg !5773
  %cmp166 = icmp ne i32 %and165, 0, !dbg !5774
  br i1 %cmp166, label %if.then168, label %if.end174, !dbg !5775

if.then168:                                       ; preds = %if.end164
  %121 = load i16*, i16** %gamma_map, align 8, !dbg !5776
  %122 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5776
  %blue169 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %122, i32 0, i32 0, !dbg !5776
  %123 = load i16, i16* %blue169, align 2, !dbg !5776
  %call170 = call i32 @ScaleQuantumToMap(i16 zeroext %123), !dbg !5776
  %idxprom171 = zext i32 %call170 to i64, !dbg !5776
  %arrayidx172 = getelementptr inbounds i16, i16* %121, i64 %idxprom171, !dbg !5776
  %124 = load i16, i16* %arrayidx172, align 2, !dbg !5776
  %125 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5776
  %blue173 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %125, i32 0, i32 0, !dbg !5776
  store i16 %124, i16* %blue173, align 2, !dbg !5776
  br label %if.end174, !dbg !5776

if.end174:                                        ; preds = %if.then168, %if.end164
  %126 = load i32, i32* %channel.addr, align 4, !dbg !5777
  %and175 = and i32 %126, 8, !dbg !5779
  %cmp176 = icmp ne i32 %and175, 0, !dbg !5780
  br i1 %cmp176, label %if.then178, label %if.end201, !dbg !5781

if.then178:                                       ; preds = %if.end174
  %127 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5782
  %matte179 = getelementptr inbounds %struct._Image, %struct._Image* %127, i32 0, i32 6, !dbg !5785
  %128 = load i32, i32* %matte179, align 8, !dbg !5785
  %cmp180 = icmp eq i32 %128, 0, !dbg !5786
  br i1 %cmp180, label %if.then182, label %if.else188, !dbg !5787

if.then182:                                       ; preds = %if.then178
  %129 = load i16*, i16** %gamma_map, align 8, !dbg !5788
  %130 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5788
  %opacity183 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %130, i32 0, i32 3, !dbg !5788
  %131 = load i16, i16* %opacity183, align 2, !dbg !5788
  %call184 = call i32 @ScaleQuantumToMap(i16 zeroext %131), !dbg !5788
  %idxprom185 = zext i32 %call184 to i64, !dbg !5788
  %arrayidx186 = getelementptr inbounds i16, i16* %129, i64 %idxprom185, !dbg !5788
  %132 = load i16, i16* %arrayidx186, align 2, !dbg !5788
  %133 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5788
  %opacity187 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %133, i32 0, i32 3, !dbg !5788
  store i16 %132, i16* %opacity187, align 2, !dbg !5788
  br label %if.end200, !dbg !5788

if.else188:                                       ; preds = %if.then178
  %134 = load i16*, i16** %gamma_map, align 8, !dbg !5789
  %135 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5789
  %opacity189 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %135, i32 0, i32 3, !dbg !5789
  %136 = load i16, i16* %opacity189, align 2, !dbg !5789
  %conv190 = zext i16 %136 to i32, !dbg !5789
  %sub191 = sub nsw i32 65535, %conv190, !dbg !5789
  %conv192 = trunc i32 %sub191 to i16, !dbg !5789
  %call193 = call i32 @ScaleQuantumToMap(i16 zeroext %conv192), !dbg !5789
  %idxprom194 = zext i32 %call193 to i64, !dbg !5789
  %arrayidx195 = getelementptr inbounds i16, i16* %134, i64 %idxprom194, !dbg !5789
  %137 = load i16, i16* %arrayidx195, align 2, !dbg !5789
  %conv196 = zext i16 %137 to i32, !dbg !5789
  %sub197 = sub nsw i32 65535, %conv196, !dbg !5789
  %conv198 = trunc i32 %sub197 to i16, !dbg !5789
  %138 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5789
  %opacity199 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %138, i32 0, i32 3, !dbg !5789
  store i16 %conv198, i16* %opacity199, align 2, !dbg !5789
  br label %if.end200

if.end200:                                        ; preds = %if.else188, %if.then182
  br label %if.end201, !dbg !5790

if.end201:                                        ; preds = %if.end200, %if.end174
  br label %if.end202

if.end202:                                        ; preds = %if.end201, %if.then128
  %139 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5791
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %139, i32 1, !dbg !5791
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !5791
  br label %for.inc203, !dbg !5792

for.inc203:                                       ; preds = %if.end202
  %140 = load i64, i64* %x, align 8, !dbg !5793
  %inc204 = add nsw i64 %140, 1, !dbg !5793
  store i64 %inc204, i64* %x, align 8, !dbg !5793
  br label %for.cond120, !dbg !5794, !llvm.loop !5795

for.end205:                                       ; preds = %for.cond120
  %141 = load i32, i32* %channel.addr, align 4, !dbg !5797
  %and206 = and i32 %141, 32, !dbg !5799
  %cmp207 = icmp ne i32 %and206, 0, !dbg !5800
  br i1 %cmp207, label %land.lhs.true, label %if.end234, !dbg !5801

land.lhs.true:                                    ; preds = %for.end205
  %142 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5802
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %142, i32 0, i32 1, !dbg !5803
  %143 = load i32, i32* %colorspace, align 4, !dbg !5803
  %cmp209 = icmp eq i32 %143, 12, !dbg !5804
  br i1 %cmp209, label %if.then211, label %if.end234, !dbg !5805

if.then211:                                       ; preds = %land.lhs.true
  store i64 0, i64* %x, align 8, !dbg !5806
  br label %for.cond212, !dbg !5808

for.cond212:                                      ; preds = %for.inc231, %if.then211
  %144 = load i64, i64* %x, align 8, !dbg !5809
  %145 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5811
  %columns213 = getelementptr inbounds %struct._Image, %struct._Image* %145, i32 0, i32 7, !dbg !5812
  %146 = load i64, i64* %columns213, align 8, !dbg !5812
  %cmp214 = icmp slt i64 %144, %146, !dbg !5813
  br i1 %cmp214, label %for.body216, label %for.end233, !dbg !5814

for.body216:                                      ; preds = %for.cond212
  %147 = load i16*, i16** %indexes, align 8, !dbg !5815
  %148 = load i64, i64* %x, align 8, !dbg !5815
  %add.ptr = getelementptr inbounds i16, i16* %147, i64 %148, !dbg !5815
  %cmp217 = icmp ne i16* %add.ptr, null, !dbg !5815
  br i1 %cmp217, label %if.then219, label %if.end230, !dbg !5818

if.then219:                                       ; preds = %for.body216
  %149 = load i16*, i16** %gamma_map, align 8, !dbg !5815
  %150 = load i16*, i16** %indexes, align 8, !dbg !5815
  %151 = load i64, i64* %x, align 8, !dbg !5815
  %add.ptr220 = getelementptr inbounds i16, i16* %150, i64 %151, !dbg !5815
  %cmp221 = icmp eq i16* %add.ptr220, null, !dbg !5815
  br i1 %cmp221, label %cond.true, label %cond.false, !dbg !5815

cond.true:                                        ; preds = %if.then219
  br label %cond.end, !dbg !5815

cond.false:                                       ; preds = %if.then219
  %152 = load i16*, i16** %indexes, align 8, !dbg !5815
  %153 = load i64, i64* %x, align 8, !dbg !5815
  %add.ptr223 = getelementptr inbounds i16, i16* %152, i64 %153, !dbg !5815
  %154 = load i16, i16* %add.ptr223, align 2, !dbg !5815
  %conv224 = zext i16 %154 to i32, !dbg !5815
  br label %cond.end, !dbg !5815

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv224, %cond.false ], !dbg !5815
  %conv225 = trunc i32 %cond to i16, !dbg !5815
  %call226 = call i32 @ScaleQuantumToMap(i16 zeroext %conv225), !dbg !5815
  %idxprom227 = zext i32 %call226 to i64, !dbg !5815
  %arrayidx228 = getelementptr inbounds i16, i16* %149, i64 %idxprom227, !dbg !5815
  %155 = load i16, i16* %arrayidx228, align 2, !dbg !5815
  %156 = load i16*, i16** %indexes, align 8, !dbg !5815
  %157 = load i64, i64* %x, align 8, !dbg !5815
  %add.ptr229 = getelementptr inbounds i16, i16* %156, i64 %157, !dbg !5815
  store i16 %155, i16* %add.ptr229, align 2, !dbg !5815
  br label %if.end230, !dbg !5815

if.end230:                                        ; preds = %cond.end, %for.body216
  br label %for.inc231, !dbg !5818

for.inc231:                                       ; preds = %if.end230
  %158 = load i64, i64* %x, align 8, !dbg !5819
  %inc232 = add nsw i64 %158, 1, !dbg !5819
  store i64 %inc232, i64* %x, align 8, !dbg !5819
  br label %for.cond212, !dbg !5820, !llvm.loop !5821

for.end233:                                       ; preds = %for.cond212
  br label %if.end234, !dbg !5822

if.end234:                                        ; preds = %for.end233, %land.lhs.true, %for.end205
  %159 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5823
  %160 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5825
  %call235 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %159, %struct._ExceptionInfo* %160), !dbg !5826
  %cmp236 = icmp eq i32 %call235, 0, !dbg !5827
  br i1 %cmp236, label %if.then238, label %if.end239, !dbg !5828

if.then238:                                       ; preds = %if.end234
  store i32 0, i32* %status, align 4, !dbg !5829
  br label %if.end239, !dbg !5830

if.end239:                                        ; preds = %if.then238, %if.end234
  %161 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5831
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %161, i32 0, i32 47, !dbg !5833
  %162 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !5833
  %cmp240 = icmp ne i32 (i8*, i64, i64, i8*)* %162, null, !dbg !5834
  br i1 %cmp240, label %if.then242, label %if.end250, !dbg !5835

if.then242:                                       ; preds = %if.end239
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !5836, metadata !DIExpression()), !dbg !5838
  %163 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5839
  %164 = load i64, i64* %progress, align 8, !dbg !5840
  %inc243 = add nsw i64 %164, 1, !dbg !5840
  store i64 %inc243, i64* %progress, align 8, !dbg !5840
  %165 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5841
  %rows244 = getelementptr inbounds %struct._Image, %struct._Image* %165, i32 0, i32 8, !dbg !5842
  %166 = load i64, i64* %rows244, align 8, !dbg !5842
  %call245 = call i32 @SetImageProgress(%struct._Image* %163, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29, i64 0, i64 0), i64 %164, i64 %166), !dbg !5843
  store i32 %call245, i32* %proceed, align 4, !dbg !5844
  %167 = load i32, i32* %proceed, align 4, !dbg !5845
  %cmp246 = icmp eq i32 %167, 0, !dbg !5847
  br i1 %cmp246, label %if.then248, label %if.end249, !dbg !5848

if.then248:                                       ; preds = %if.then242
  store i32 0, i32* %status, align 4, !dbg !5849
  br label %if.end249, !dbg !5850

if.end249:                                        ; preds = %if.then248, %if.then242
  br label %if.end250, !dbg !5851

if.end250:                                        ; preds = %if.end249, %if.end239
  br label %for.inc251, !dbg !5852

for.inc251:                                       ; preds = %if.end250, %if.then117, %if.then112
  %168 = load i64, i64* %y, align 8, !dbg !5853
  %inc252 = add nsw i64 %168, 1, !dbg !5853
  store i64 %inc252, i64* %y, align 8, !dbg !5853
  br label %for.cond106, !dbg !5854, !llvm.loop !5855

for.end253:                                       ; preds = %for.cond106
  %169 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5857
  %call254 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %169), !dbg !5858
  store %struct._CacheView* %call254, %struct._CacheView** %image_view, align 8, !dbg !5859
  %170 = load i16*, i16** %gamma_map, align 8, !dbg !5860
  %171 = bitcast i16* %170 to i8*, !dbg !5860
  %call255 = call i8* @RelinquishMagickMemory(i8* %171), !dbg !5861
  %172 = bitcast i8* %call255 to i16*, !dbg !5862
  store i16* %172, i16** %gamma_map, align 8, !dbg !5863
  %173 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5864
  %gamma256 = getelementptr inbounds %struct._Image, %struct._Image* %173, i32 0, i32 15, !dbg !5866
  %174 = load double, double* %gamma256, align 8, !dbg !5866
  %cmp257 = fcmp une double %174, 0.000000e+00, !dbg !5867
  br i1 %cmp257, label %if.then259, label %if.end262, !dbg !5868

if.then259:                                       ; preds = %for.end253
  %175 = load double, double* %gamma.addr, align 8, !dbg !5869
  %176 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5870
  %gamma260 = getelementptr inbounds %struct._Image, %struct._Image* %176, i32 0, i32 15, !dbg !5871
  %177 = load double, double* %gamma260, align 8, !dbg !5872
  %mul261 = fmul double %177, %175, !dbg !5872
  store double %mul261, double* %gamma260, align 8, !dbg !5872
  br label %if.end262, !dbg !5870

if.end262:                                        ; preds = %if.then259, %for.end253
  %178 = load i32, i32* %status, align 4, !dbg !5873
  store i32 %178, i32* %retval, align 4, !dbg !5874
  br label %return, !dbg !5874

return:                                           ; preds = %if.end262, %if.end13, %if.then2
  %179 = load i32, i32* %retval, align 4, !dbg !5875
  ret i32 %179, !dbg !5875
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @GrayscaleImage(%struct._Image* %image, i32 %method) #0 !dbg !5876 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %method.addr = alloca i32, align 4
  %image_view = alloca %struct._CacheView*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %y = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %blue = alloca float, align 4
  %green = alloca float, align 4
  %intensity = alloca float, align 4
  %red = alloca float, align 4
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !5880, metadata !DIExpression()), !dbg !5881
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !5882, metadata !DIExpression()), !dbg !5883
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !5884, metadata !DIExpression()), !dbg !5885
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !5886, metadata !DIExpression()), !dbg !5887
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5888, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !5890, metadata !DIExpression()), !dbg !5891
  call void @llvm.dbg.declare(metadata i64* %y, metadata !5892, metadata !DIExpression()), !dbg !5893
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5894
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !5896
  %1 = load i32, i32* %debug, align 8, !dbg !5896
  %cmp = icmp ne i32 %1, 0, !dbg !5897
  br i1 %cmp, label %if.then, label %if.end, !dbg !5898

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5899
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !5900
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !5899
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2426, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !5901
  br label %if.end, !dbg !5902

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5903
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 0, !dbg !5905
  %4 = load i32, i32* %storage_class, align 8, !dbg !5905
  %cmp1 = icmp eq i32 %4, 2, !dbg !5906
  br i1 %cmp1, label %if.then2, label %if.end11, !dbg !5907

if.then2:                                         ; preds = %if.end
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5908
  %call3 = call i32 @SyncImage(%struct._Image* %5), !dbg !5911
  %cmp4 = icmp eq i32 %call3, 0, !dbg !5912
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !5913

if.then5:                                         ; preds = %if.then2
  store i32 0, i32* %retval, align 4, !dbg !5914
  br label %return, !dbg !5914

if.end6:                                          ; preds = %if.then2
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5915
  %call7 = call i32 @SetImageStorageClass(%struct._Image* %6, i32 1), !dbg !5917
  %cmp8 = icmp eq i32 %call7, 0, !dbg !5918
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !5919

if.then9:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !5920
  br label %return, !dbg !5920

if.end10:                                         ; preds = %if.end6
  br label %if.end11, !dbg !5921

if.end11:                                         ; preds = %if.end10, %if.end
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5922
  %8 = load i32, i32* %method.addr, align 4, !dbg !5923
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5924
  %exception12 = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 58, !dbg !5925
  %call13 = call i32 @AccelerateGrayscaleImage(%struct._Image* %7, i32 %8, %struct._ExceptionInfo* %exception12), !dbg !5926
  store i32 %call13, i32* %status, align 4, !dbg !5927
  %10 = load i32, i32* %status, align 4, !dbg !5928
  %cmp14 = icmp eq i32 %10, 1, !dbg !5930
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !5931

if.then15:                                        ; preds = %if.end11
  %11 = load i32, i32* %status, align 4, !dbg !5932
  store i32 %11, i32* %retval, align 4, !dbg !5933
  br label %return, !dbg !5933

if.end16:                                         ; preds = %if.end11
  store i32 1, i32* %status, align 4, !dbg !5934
  store i64 0, i64* %progress, align 8, !dbg !5935
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5936
  %exception17 = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 58, !dbg !5937
  store %struct._ExceptionInfo* %exception17, %struct._ExceptionInfo** %exception, align 8, !dbg !5938
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5939
  %14 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5940
  %call18 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %13, %struct._ExceptionInfo* %14), !dbg !5941
  store %struct._CacheView* %call18, %struct._CacheView** %image_view, align 8, !dbg !5942
  store i64 0, i64* %y, align 8, !dbg !5943
  br label %for.cond, !dbg !5945

for.cond:                                         ; preds = %for.inc167, %if.end16
  %15 = load i64, i64* %y, align 8, !dbg !5946
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5948
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 8, !dbg !5949
  %17 = load i64, i64* %rows, align 8, !dbg !5949
  %cmp19 = icmp slt i64 %15, %17, !dbg !5950
  br i1 %cmp19, label %for.body, label %for.end169, !dbg !5951

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !5952, metadata !DIExpression()), !dbg !5954
  call void @llvm.dbg.declare(metadata i64* %x, metadata !5955, metadata !DIExpression()), !dbg !5956
  %18 = load i32, i32* %status, align 4, !dbg !5957
  %cmp20 = icmp eq i32 %18, 0, !dbg !5959
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !5960

if.then21:                                        ; preds = %for.body
  br label %for.inc167, !dbg !5961

if.end22:                                         ; preds = %for.body
  %19 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5962
  %20 = load i64, i64* %y, align 8, !dbg !5963
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5964
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 7, !dbg !5965
  %22 = load i64, i64* %columns, align 8, !dbg !5965
  %23 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5966
  %call23 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %19, i64 0, i64 %20, i64 %22, i64 1, %struct._ExceptionInfo* %23), !dbg !5967
  store %struct._PixelPacket* %call23, %struct._PixelPacket** %q, align 8, !dbg !5968
  %24 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5969
  %cmp24 = icmp eq %struct._PixelPacket* %24, null, !dbg !5971
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !5972

if.then25:                                        ; preds = %if.end22
  store i32 0, i32* %status, align 4, !dbg !5973
  br label %for.inc167, !dbg !5975

if.end26:                                         ; preds = %if.end22
  store i64 0, i64* %x, align 8, !dbg !5976
  br label %for.cond27, !dbg !5978

for.cond27:                                       ; preds = %for.inc, %if.end26
  %25 = load i64, i64* %x, align 8, !dbg !5979
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5981
  %columns28 = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 7, !dbg !5982
  %27 = load i64, i64* %columns28, align 8, !dbg !5982
  %cmp29 = icmp slt i64 %25, %27, !dbg !5983
  br i1 %cmp29, label %for.body30, label %for.end, !dbg !5984

for.body30:                                       ; preds = %for.cond27
  call void @llvm.dbg.declare(metadata float* %blue, metadata !5985, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.declare(metadata float* %green, metadata !5988, metadata !DIExpression()), !dbg !5989
  call void @llvm.dbg.declare(metadata float* %intensity, metadata !5990, metadata !DIExpression()), !dbg !5991
  call void @llvm.dbg.declare(metadata float* %red, metadata !5992, metadata !DIExpression()), !dbg !5993
  %28 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5994
  %red31 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %28, i32 0, i32 2, !dbg !5995
  %29 = load i16, i16* %red31, align 2, !dbg !5995
  %conv = uitofp i16 %29 to float, !dbg !5996
  store float %conv, float* %red, align 4, !dbg !5997
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !5998
  %green32 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i32 0, i32 1, !dbg !5999
  %31 = load i16, i16* %green32, align 2, !dbg !5999
  %conv33 = uitofp i16 %31 to float, !dbg !6000
  store float %conv33, float* %green, align 4, !dbg !6001
  %32 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6002
  %blue34 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %32, i32 0, i32 0, !dbg !6003
  %33 = load i16, i16* %blue34, align 2, !dbg !6003
  %conv35 = uitofp i16 %33 to float, !dbg !6004
  store float %conv35, float* %blue, align 4, !dbg !6005
  store float 0.000000e+00, float* %intensity, align 4, !dbg !6006
  %34 = load i32, i32* %method.addr, align 4, !dbg !6007
  switch i32 %34, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb39
    i32 3, label %sw.bb42
    i32 9, label %sw.bb51
    i32 4, label %sw.bb62
    i32 5, label %sw.bb79
    i32 6, label %sw.bb97
    i32 7, label %sw.bb115
    i32 8, label %sw.bb133
  ], !dbg !6008

sw.bb:                                            ; preds = %for.body30
  %35 = load float, float* %red, align 4, !dbg !6009
  %36 = load float, float* %green, align 4, !dbg !6012
  %add = fadd float %35, %36, !dbg !6013
  %37 = load float, float* %blue, align 4, !dbg !6014
  %add36 = fadd float %add, %37, !dbg !6015
  %conv37 = fpext float %add36 to double, !dbg !6016
  %div = fdiv double %conv37, 3.000000e+00, !dbg !6017
  %conv38 = fptrunc double %div to float, !dbg !6016
  store float %conv38, float* %intensity, align 4, !dbg !6018
  br label %sw.epilog, !dbg !6019

sw.bb39:                                          ; preds = %for.body30
  %38 = load float, float* %red, align 4, !dbg !6020
  %39 = load float, float* %green, align 4, !dbg !6022
  %call40 = call float @MagickMax(float %38, float %39), !dbg !6023
  %40 = load float, float* %blue, align 4, !dbg !6024
  %call41 = call float @MagickMax(float %call40, float %40), !dbg !6025
  store float %call41, float* %intensity, align 4, !dbg !6026
  br label %sw.epilog, !dbg !6027

sw.bb42:                                          ; preds = %for.body30
  %41 = load float, float* %red, align 4, !dbg !6028
  %42 = load float, float* %green, align 4, !dbg !6030
  %call43 = call float @MagickMin(float %41, float %42), !dbg !6031
  %43 = load float, float* %blue, align 4, !dbg !6032
  %call44 = call float @MagickMin(float %call43, float %43), !dbg !6033
  %44 = load float, float* %red, align 4, !dbg !6034
  %45 = load float, float* %green, align 4, !dbg !6035
  %call45 = call float @MagickMax(float %44, float %45), !dbg !6036
  %46 = load float, float* %blue, align 4, !dbg !6037
  %call46 = call float @MagickMax(float %call45, float %46), !dbg !6038
  %add47 = fadd float %call44, %call46, !dbg !6039
  %conv48 = fpext float %add47 to double, !dbg !6040
  %div49 = fdiv double %conv48, 2.000000e+00, !dbg !6041
  %conv50 = fptrunc double %div49 to float, !dbg !6040
  store float %conv50, float* %intensity, align 4, !dbg !6042
  br label %sw.epilog, !dbg !6043

sw.bb51:                                          ; preds = %for.body30
  %47 = load float, float* %red, align 4, !dbg !6044
  %conv52 = fpext float %47 to double, !dbg !6046
  %48 = load float, float* %red, align 4, !dbg !6047
  %conv53 = fpext float %48 to double, !dbg !6047
  %mul = fmul double %conv52, %conv53, !dbg !6048
  %49 = load float, float* %green, align 4, !dbg !6049
  %50 = load float, float* %green, align 4, !dbg !6050
  %mul54 = fmul float %49, %50, !dbg !6051
  %conv55 = fpext float %mul54 to double, !dbg !6049
  %add56 = fadd double %mul, %conv55, !dbg !6052
  %51 = load float, float* %blue, align 4, !dbg !6053
  %52 = load float, float* %blue, align 4, !dbg !6054
  %mul57 = fmul float %51, %52, !dbg !6055
  %conv58 = fpext float %mul57 to double, !dbg !6053
  %add59 = fadd double %add56, %conv58, !dbg !6056
  %div60 = fdiv double %add59, 1.966050e+05, !dbg !6057
  %conv61 = fptrunc double %div60 to float, !dbg !6058
  store float %conv61, float* %intensity, align 4, !dbg !6059
  br label %sw.epilog, !dbg !6060

sw.bb62:                                          ; preds = %for.body30
  %53 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6061
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %53, i32 0, i32 1, !dbg !6064
  %54 = load i32, i32* %colorspace, align 4, !dbg !6064
  %cmp63 = icmp eq i32 %54, 1, !dbg !6065
  br i1 %cmp63, label %if.then65, label %if.end69, !dbg !6066

if.then65:                                        ; preds = %sw.bb62
  %55 = load float, float* %red, align 4, !dbg !6067
  %call66 = call float @EncodePixelGamma(float %55), !dbg !6069
  store float %call66, float* %red, align 4, !dbg !6070
  %56 = load float, float* %green, align 4, !dbg !6071
  %call67 = call float @EncodePixelGamma(float %56), !dbg !6072
  store float %call67, float* %green, align 4, !dbg !6073
  %57 = load float, float* %blue, align 4, !dbg !6074
  %call68 = call float @EncodePixelGamma(float %57), !dbg !6075
  store float %call68, float* %blue, align 4, !dbg !6076
  br label %if.end69, !dbg !6077

if.end69:                                         ; preds = %if.then65, %sw.bb62
  %58 = load float, float* %red, align 4, !dbg !6078
  %conv70 = fpext float %58 to double, !dbg !6078
  %mul71 = fmul double 2.988390e-01, %conv70, !dbg !6079
  %59 = load float, float* %green, align 4, !dbg !6080
  %conv72 = fpext float %59 to double, !dbg !6080
  %mul73 = fmul double 5.868110e-01, %conv72, !dbg !6081
  %add74 = fadd double %mul71, %mul73, !dbg !6082
  %60 = load float, float* %blue, align 4, !dbg !6083
  %conv75 = fpext float %60 to double, !dbg !6083
  %mul76 = fmul double 1.143500e-01, %conv75, !dbg !6084
  %add77 = fadd double %add74, %mul76, !dbg !6085
  %conv78 = fptrunc double %add77 to float, !dbg !6086
  store float %conv78, float* %intensity, align 4, !dbg !6087
  br label %sw.epilog, !dbg !6088

sw.bb79:                                          ; preds = %for.body30
  %61 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6089
  %colorspace80 = getelementptr inbounds %struct._Image, %struct._Image* %61, i32 0, i32 1, !dbg !6092
  %62 = load i32, i32* %colorspace80, align 4, !dbg !6092
  %cmp81 = icmp eq i32 %62, 13, !dbg !6093
  br i1 %cmp81, label %if.then83, label %if.end87, !dbg !6094

if.then83:                                        ; preds = %sw.bb79
  %63 = load float, float* %red, align 4, !dbg !6095
  %call84 = call float @DecodePixelGamma(float %63), !dbg !6097
  store float %call84, float* %red, align 4, !dbg !6098
  %64 = load float, float* %green, align 4, !dbg !6099
  %call85 = call float @DecodePixelGamma(float %64), !dbg !6100
  store float %call85, float* %green, align 4, !dbg !6101
  %65 = load float, float* %blue, align 4, !dbg !6102
  %call86 = call float @DecodePixelGamma(float %65), !dbg !6103
  store float %call86, float* %blue, align 4, !dbg !6104
  br label %if.end87, !dbg !6105

if.end87:                                         ; preds = %if.then83, %sw.bb79
  %66 = load float, float* %red, align 4, !dbg !6106
  %conv88 = fpext float %66 to double, !dbg !6106
  %mul89 = fmul double 2.988390e-01, %conv88, !dbg !6107
  %67 = load float, float* %green, align 4, !dbg !6108
  %conv90 = fpext float %67 to double, !dbg !6108
  %mul91 = fmul double 5.868110e-01, %conv90, !dbg !6109
  %add92 = fadd double %mul89, %mul91, !dbg !6110
  %68 = load float, float* %blue, align 4, !dbg !6111
  %conv93 = fpext float %68 to double, !dbg !6111
  %mul94 = fmul double 1.143500e-01, %conv93, !dbg !6112
  %add95 = fadd double %add92, %mul94, !dbg !6113
  %conv96 = fptrunc double %add95 to float, !dbg !6114
  store float %conv96, float* %intensity, align 4, !dbg !6115
  br label %sw.epilog, !dbg !6116

sw.bb97:                                          ; preds = %for.body30
  br label %sw.default, !dbg !6117

sw.default:                                       ; preds = %for.body30, %sw.bb97
  %69 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6118
  %colorspace98 = getelementptr inbounds %struct._Image, %struct._Image* %69, i32 0, i32 1, !dbg !6121
  %70 = load i32, i32* %colorspace98, align 4, !dbg !6121
  %cmp99 = icmp eq i32 %70, 1, !dbg !6122
  br i1 %cmp99, label %if.then101, label %if.end105, !dbg !6123

if.then101:                                       ; preds = %sw.default
  %71 = load float, float* %red, align 4, !dbg !6124
  %call102 = call float @EncodePixelGamma(float %71), !dbg !6126
  store float %call102, float* %red, align 4, !dbg !6127
  %72 = load float, float* %green, align 4, !dbg !6128
  %call103 = call float @EncodePixelGamma(float %72), !dbg !6129
  store float %call103, float* %green, align 4, !dbg !6130
  %73 = load float, float* %blue, align 4, !dbg !6131
  %call104 = call float @EncodePixelGamma(float %73), !dbg !6132
  store float %call104, float* %blue, align 4, !dbg !6133
  br label %if.end105, !dbg !6134

if.end105:                                        ; preds = %if.then101, %sw.default
  %74 = load float, float* %red, align 4, !dbg !6135
  %conv106 = fpext float %74 to double, !dbg !6135
  %mul107 = fmul double 2.126560e-01, %conv106, !dbg !6136
  %75 = load float, float* %green, align 4, !dbg !6137
  %conv108 = fpext float %75 to double, !dbg !6137
  %mul109 = fmul double 0x3FE6E29307AF20EA, %conv108, !dbg !6138
  %add110 = fadd double %mul107, %mul109, !dbg !6139
  %76 = load float, float* %blue, align 4, !dbg !6140
  %conv111 = fpext float %76 to double, !dbg !6140
  %mul112 = fmul double 7.218600e-02, %conv111, !dbg !6141
  %add113 = fadd double %add110, %mul112, !dbg !6142
  %conv114 = fptrunc double %add113 to float, !dbg !6143
  store float %conv114, float* %intensity, align 4, !dbg !6144
  br label %sw.epilog, !dbg !6145

sw.bb115:                                         ; preds = %for.body30
  %77 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6146
  %colorspace116 = getelementptr inbounds %struct._Image, %struct._Image* %77, i32 0, i32 1, !dbg !6149
  %78 = load i32, i32* %colorspace116, align 4, !dbg !6149
  %cmp117 = icmp eq i32 %78, 13, !dbg !6150
  br i1 %cmp117, label %if.then119, label %if.end123, !dbg !6151

if.then119:                                       ; preds = %sw.bb115
  %79 = load float, float* %red, align 4, !dbg !6152
  %call120 = call float @DecodePixelGamma(float %79), !dbg !6154
  store float %call120, float* %red, align 4, !dbg !6155
  %80 = load float, float* %green, align 4, !dbg !6156
  %call121 = call float @DecodePixelGamma(float %80), !dbg !6157
  store float %call121, float* %green, align 4, !dbg !6158
  %81 = load float, float* %blue, align 4, !dbg !6159
  %call122 = call float @DecodePixelGamma(float %81), !dbg !6160
  store float %call122, float* %blue, align 4, !dbg !6161
  br label %if.end123, !dbg !6162

if.end123:                                        ; preds = %if.then119, %sw.bb115
  %82 = load float, float* %red, align 4, !dbg !6163
  %conv124 = fpext float %82 to double, !dbg !6163
  %mul125 = fmul double 2.126560e-01, %conv124, !dbg !6164
  %83 = load float, float* %green, align 4, !dbg !6165
  %conv126 = fpext float %83 to double, !dbg !6165
  %mul127 = fmul double 0x3FE6E29307AF20EA, %conv126, !dbg !6166
  %add128 = fadd double %mul125, %mul127, !dbg !6167
  %84 = load float, float* %blue, align 4, !dbg !6168
  %conv129 = fpext float %84 to double, !dbg !6168
  %mul130 = fmul double 7.218600e-02, %conv129, !dbg !6169
  %add131 = fadd double %add128, %mul130, !dbg !6170
  %conv132 = fptrunc double %add131 to float, !dbg !6171
  store float %conv132, float* %intensity, align 4, !dbg !6172
  br label %sw.epilog, !dbg !6173

sw.bb133:                                         ; preds = %for.body30
  %85 = load float, float* %red, align 4, !dbg !6174
  %conv134 = fpext float %85 to double, !dbg !6176
  %86 = load float, float* %red, align 4, !dbg !6177
  %conv135 = fpext float %86 to double, !dbg !6177
  %mul136 = fmul double %conv134, %conv135, !dbg !6178
  %87 = load float, float* %green, align 4, !dbg !6179
  %88 = load float, float* %green, align 4, !dbg !6180
  %mul137 = fmul float %87, %88, !dbg !6181
  %conv138 = fpext float %mul137 to double, !dbg !6179
  %add139 = fadd double %mul136, %conv138, !dbg !6182
  %89 = load float, float* %blue, align 4, !dbg !6183
  %90 = load float, float* %blue, align 4, !dbg !6184
  %mul140 = fmul float %89, %90, !dbg !6185
  %conv141 = fpext float %mul140 to double, !dbg !6183
  %add142 = fadd double %add139, %conv141, !dbg !6186
  %call143 = call double @sqrt(double %add142) #6, !dbg !6187
  %call144 = call double @sqrt(double 3.000000e+00) #6, !dbg !6188
  %div145 = fdiv double %call143, %call144, !dbg !6189
  %conv146 = fptrunc double %div145 to float, !dbg !6190
  store float %conv146, float* %intensity, align 4, !dbg !6191
  br label %sw.epilog, !dbg !6192

sw.epilog:                                        ; preds = %sw.bb133, %if.end123, %if.end105, %if.end87, %if.end69, %sw.bb51, %sw.bb42, %sw.bb39, %sw.bb
  %91 = load float, float* %intensity, align 4, !dbg !6193
  %call147 = call zeroext i16 @ClampToQuantum(float %91), !dbg !6193
  %92 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6193
  %blue148 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %92, i32 0, i32 0, !dbg !6193
  store i16 %call147, i16* %blue148, align 2, !dbg !6193
  %93 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6193
  %green149 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %93, i32 0, i32 1, !dbg !6193
  store i16 %call147, i16* %green149, align 2, !dbg !6193
  %94 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6193
  %red150 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %94, i32 0, i32 2, !dbg !6193
  store i16 %call147, i16* %red150, align 2, !dbg !6193
  %95 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6194
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %95, i32 1, !dbg !6194
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !6194
  br label %for.inc, !dbg !6195

for.inc:                                          ; preds = %sw.epilog
  %96 = load i64, i64* %x, align 8, !dbg !6196
  %inc = add nsw i64 %96, 1, !dbg !6196
  store i64 %inc, i64* %x, align 8, !dbg !6196
  br label %for.cond27, !dbg !6197, !llvm.loop !6198

for.end:                                          ; preds = %for.cond27
  %97 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !6200
  %98 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6202
  %call151 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %97, %struct._ExceptionInfo* %98), !dbg !6203
  %cmp152 = icmp eq i32 %call151, 0, !dbg !6204
  br i1 %cmp152, label %if.then154, label %if.end155, !dbg !6205

if.then154:                                       ; preds = %for.end
  store i32 0, i32* %status, align 4, !dbg !6206
  br label %if.end155, !dbg !6207

if.end155:                                        ; preds = %if.then154, %for.end
  %99 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6208
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %99, i32 0, i32 47, !dbg !6210
  %100 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !6210
  %cmp156 = icmp ne i32 (i8*, i64, i64, i8*)* %100, null, !dbg !6211
  br i1 %cmp156, label %if.then158, label %if.end166, !dbg !6212

if.then158:                                       ; preds = %if.end155
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !6213, metadata !DIExpression()), !dbg !6215
  %101 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6216
  %102 = load i64, i64* %progress, align 8, !dbg !6217
  %inc159 = add nsw i64 %102, 1, !dbg !6217
  store i64 %inc159, i64* %progress, align 8, !dbg !6217
  %103 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6218
  %rows160 = getelementptr inbounds %struct._Image, %struct._Image* %103, i32 0, i32 8, !dbg !6219
  %104 = load i64, i64* %rows160, align 8, !dbg !6219
  %call161 = call i32 @SetImageProgress(%struct._Image* %101, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i64 0, i64 0), i64 %102, i64 %104), !dbg !6220
  store i32 %call161, i32* %proceed, align 4, !dbg !6221
  %105 = load i32, i32* %proceed, align 4, !dbg !6222
  %cmp162 = icmp eq i32 %105, 0, !dbg !6224
  br i1 %cmp162, label %if.then164, label %if.end165, !dbg !6225

if.then164:                                       ; preds = %if.then158
  store i32 0, i32* %status, align 4, !dbg !6226
  br label %if.end165, !dbg !6227

if.end165:                                        ; preds = %if.then164, %if.then158
  br label %if.end166, !dbg !6228

if.end166:                                        ; preds = %if.end165, %if.end155
  br label %for.inc167, !dbg !6229

for.inc167:                                       ; preds = %if.end166, %if.then25, %if.then21
  %106 = load i64, i64* %y, align 8, !dbg !6230
  %inc168 = add nsw i64 %106, 1, !dbg !6230
  store i64 %inc168, i64* %y, align 8, !dbg !6230
  br label %for.cond, !dbg !6231, !llvm.loop !6232

for.end169:                                       ; preds = %for.cond
  %107 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !6234
  %call170 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %107), !dbg !6235
  store %struct._CacheView* %call170, %struct._CacheView** %image_view, align 8, !dbg !6236
  %108 = load i32, i32* %method.addr, align 4, !dbg !6237
  %109 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6238
  %intensity171 = getelementptr inbounds %struct._Image, %struct._Image* %109, i32 0, i32 83, !dbg !6239
  store i32 %108, i32* %intensity171, align 8, !dbg !6240
  %110 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6241
  %type = getelementptr inbounds %struct._Image, %struct._Image* %110, i32 0, i32 77, !dbg !6242
  store i32 2, i32* %type, align 8, !dbg !6243
  %111 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6244
  %call172 = call i32 @SetImageColorspace(%struct._Image* %111, i32 2), !dbg !6245
  store i32 %call172, i32* %retval, align 4, !dbg !6246
  br label %return, !dbg !6246

return:                                           ; preds = %for.end169, %if.then15, %if.then9, %if.then5
  %112 = load i32, i32* %retval, align 4, !dbg !6247
  ret i32 %112, !dbg !6247
}

declare dso_local i32 @SyncImage(%struct._Image*) #3

declare dso_local i32 @AccelerateGrayscaleImage(%struct._Image*, i32, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define internal float @MagickMax(float %x, float %y) #0 !dbg !6248 {
entry:
  %retval = alloca float, align 4
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !6251, metadata !DIExpression()), !dbg !6252
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !6253, metadata !DIExpression()), !dbg !6254
  %0 = load float, float* %x.addr, align 4, !dbg !6255
  %1 = load float, float* %y.addr, align 4, !dbg !6257
  %cmp = fcmp ogt float %0, %1, !dbg !6258
  br i1 %cmp, label %if.then, label %if.end, !dbg !6259

if.then:                                          ; preds = %entry
  %2 = load float, float* %x.addr, align 4, !dbg !6260
  store float %2, float* %retval, align 4, !dbg !6261
  br label %return, !dbg !6261

if.end:                                           ; preds = %entry
  %3 = load float, float* %y.addr, align 4, !dbg !6262
  store float %3, float* %retval, align 4, !dbg !6263
  br label %return, !dbg !6263

return:                                           ; preds = %if.end, %if.then
  %4 = load float, float* %retval, align 4, !dbg !6264
  ret float %4, !dbg !6264
}

; Function Attrs: noinline nounwind uwtable
define internal float @MagickMin(float %x, float %y) #0 !dbg !6265 {
entry:
  %retval = alloca float, align 4
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !6266, metadata !DIExpression()), !dbg !6267
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !6268, metadata !DIExpression()), !dbg !6269
  %0 = load float, float* %x.addr, align 4, !dbg !6270
  %1 = load float, float* %y.addr, align 4, !dbg !6272
  %cmp = fcmp olt float %0, %1, !dbg !6273
  br i1 %cmp, label %if.then, label %if.end, !dbg !6274

if.then:                                          ; preds = %entry
  %2 = load float, float* %x.addr, align 4, !dbg !6275
  store float %2, float* %retval, align 4, !dbg !6276
  br label %return, !dbg !6276

if.end:                                           ; preds = %entry
  %3 = load float, float* %y.addr, align 4, !dbg !6277
  store float %3, float* %retval, align 4, !dbg !6278
  br label %return, !dbg !6278

return:                                           ; preds = %if.end, %if.then
  %4 = load float, float* %retval, align 4, !dbg !6279
  ret float %4, !dbg !6279
}

declare dso_local float @EncodePixelGamma(float) #3

declare dso_local float @DecodePixelGamma(float) #3

; Function Attrs: nounwind
declare dso_local double @sqrt(double) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @HaldClutImage(%struct._Image* %image, %struct._Image* %hald_image) #0 !dbg !6280 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %hald_image.addr = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6281, metadata !DIExpression()), !dbg !6282
  store %struct._Image* %hald_image, %struct._Image** %hald_image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %hald_image.addr, metadata !6283, metadata !DIExpression()), !dbg !6284
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6285
  %1 = load %struct._Image*, %struct._Image** %hald_image.addr, align 8, !dbg !6286
  %call = call i32 @HaldClutImageChannel(%struct._Image* %0, i32 134217719, %struct._Image* %1), !dbg !6287
  ret i32 %call, !dbg !6288
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @HaldClutImageChannel(%struct._Image* %image, i32 %channel, %struct._Image* %hald_image) #0 !dbg !6289 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %hald_image.addr = alloca %struct._Image*, align 8
  %hald_view = alloca %struct._CacheView*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %width = alloca double, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %zero = alloca %struct._MagickPixelPacket, align 8
  %cube_size = alloca i64, align 8
  %length = alloca i64, align 8
  %level = alloca i64, align 8
  %y = alloca i64, align 8
  %offset = alloca double, align 8
  %point = alloca %struct._HaldInfo, align 4
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %pixel1 = alloca %struct._MagickPixelPacket, align 8
  %pixel2 = alloca %struct._MagickPixelPacket, align 8
  %pixel3 = alloca %struct._MagickPixelPacket, align 8
  %pixel4 = alloca %struct._MagickPixelPacket, align 8
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6290, metadata !DIExpression()), !dbg !6291
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !6292, metadata !DIExpression()), !dbg !6293
  store %struct._Image* %hald_image, %struct._Image** %hald_image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %hald_image.addr, metadata !6294, metadata !DIExpression()), !dbg !6295
  call void @llvm.dbg.declare(metadata %struct._CacheView** %hald_view, metadata !6296, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !6298, metadata !DIExpression()), !dbg !6299
  call void @llvm.dbg.declare(metadata double* %width, metadata !6300, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !6302, metadata !DIExpression()), !dbg !6303
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6304, metadata !DIExpression()), !dbg !6305
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !6306, metadata !DIExpression()), !dbg !6307
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %zero, metadata !6308, metadata !DIExpression()), !dbg !6309
  call void @llvm.dbg.declare(metadata i64* %cube_size, metadata !6310, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.declare(metadata i64* %length, metadata !6312, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.declare(metadata i64* %level, metadata !6314, metadata !DIExpression()), !dbg !6315
  call void @llvm.dbg.declare(metadata i64* %y, metadata !6316, metadata !DIExpression()), !dbg !6317
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6318
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !6320
  %1 = load i32, i32* %debug, align 8, !dbg !6320
  %cmp = icmp ne i32 %1, 0, !dbg !6321
  br i1 %cmp, label %if.then, label %if.end, !dbg !6322

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6323
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !6324
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !6323
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2663, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6325
  br label %if.end, !dbg !6326

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6327
  %call1 = call i32 @SetImageStorageClass(%struct._Image* %3, i32 1), !dbg !6329
  %cmp2 = icmp eq i32 %call1, 0, !dbg !6330
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !6331

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6332
  br label %return, !dbg !6332

if.end4:                                          ; preds = %if.end
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6333
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 1, !dbg !6335
  %5 = load i32, i32* %colorspace, align 4, !dbg !6335
  %call5 = call i32 @IsGrayColorspace(i32 %5), !dbg !6336
  %cmp6 = icmp ne i32 %call5, 0, !dbg !6337
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !6338

if.then7:                                         ; preds = %if.end4
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6339
  %call8 = call i32 @SetImageColorspace(%struct._Image* %6, i32 13), !dbg !6340
  br label %if.end9, !dbg !6341

if.end9:                                          ; preds = %if.then7, %if.end4
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6342
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %7, i32 0, i32 6, !dbg !6344
  %8 = load i32, i32* %matte, align 8, !dbg !6344
  %cmp10 = icmp eq i32 %8, 0, !dbg !6345
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !6346

if.then11:                                        ; preds = %if.end9
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6347
  %call12 = call i32 @SetImageAlphaChannel(%struct._Image* %9, i32 6), !dbg !6348
  br label %if.end13, !dbg !6349

if.end13:                                         ; preds = %if.then11, %if.end9
  store i32 1, i32* %status, align 4, !dbg !6350
  store i64 0, i64* %progress, align 8, !dbg !6351
  %10 = load %struct._Image*, %struct._Image** %hald_image.addr, align 8, !dbg !6352
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 7, !dbg !6353
  %11 = load i64, i64* %columns, align 8, !dbg !6353
  %conv = uitofp i64 %11 to float, !dbg !6354
  %12 = load %struct._Image*, %struct._Image** %hald_image.addr, align 8, !dbg !6355
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 8, !dbg !6356
  %13 = load i64, i64* %rows, align 8, !dbg !6356
  %conv14 = uitofp i64 %13 to float, !dbg !6357
  %call15 = call float @MagickMin(float %conv, float %conv14), !dbg !6358
  %conv16 = fptoui float %call15 to i64, !dbg !6359
  store i64 %conv16, i64* %length, align 8, !dbg !6360
  store i64 2, i64* %level, align 8, !dbg !6361
  br label %for.cond, !dbg !6363

for.cond:                                         ; preds = %for.inc, %if.end13
  %14 = load i64, i64* %level, align 8, !dbg !6364
  %15 = load i64, i64* %level, align 8, !dbg !6366
  %mul = mul i64 %14, %15, !dbg !6367
  %16 = load i64, i64* %level, align 8, !dbg !6368
  %mul17 = mul i64 %mul, %16, !dbg !6369
  %17 = load i64, i64* %length, align 8, !dbg !6370
  %cmp18 = icmp ult i64 %mul17, %17, !dbg !6371
  br i1 %cmp18, label %for.body, label %for.end, !dbg !6372

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !6372

for.inc:                                          ; preds = %for.body
  %18 = load i64, i64* %level, align 8, !dbg !6373
  %inc = add i64 %18, 1, !dbg !6373
  store i64 %inc, i64* %level, align 8, !dbg !6373
  br label %for.cond, !dbg !6374, !llvm.loop !6375

for.end:                                          ; preds = %for.cond
  %19 = load i64, i64* %level, align 8, !dbg !6377
  %20 = load i64, i64* %level, align 8, !dbg !6378
  %mul20 = mul i64 %20, %19, !dbg !6378
  store i64 %mul20, i64* %level, align 8, !dbg !6378
  %21 = load i64, i64* %level, align 8, !dbg !6379
  %22 = load i64, i64* %level, align 8, !dbg !6380
  %mul21 = mul i64 %21, %22, !dbg !6381
  store i64 %mul21, i64* %cube_size, align 8, !dbg !6382
  %23 = load %struct._Image*, %struct._Image** %hald_image.addr, align 8, !dbg !6383
  %columns22 = getelementptr inbounds %struct._Image, %struct._Image* %23, i32 0, i32 7, !dbg !6384
  %24 = load i64, i64* %columns22, align 8, !dbg !6384
  %conv23 = uitofp i64 %24 to double, !dbg !6385
  store double %conv23, double* %width, align 8, !dbg !6386
  %25 = load %struct._Image*, %struct._Image** %hald_image.addr, align 8, !dbg !6387
  call void @GetMagickPixelPacket(%struct._Image* %25, %struct._MagickPixelPacket* %zero), !dbg !6388
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6389
  %exception24 = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 58, !dbg !6390
  store %struct._ExceptionInfo* %exception24, %struct._ExceptionInfo** %exception, align 8, !dbg !6391
  %27 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6392
  %28 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6393
  %call25 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %27, %struct._ExceptionInfo* %28), !dbg !6394
  store %struct._CacheView* %call25, %struct._CacheView** %image_view, align 8, !dbg !6395
  %29 = load %struct._Image*, %struct._Image** %hald_image.addr, align 8, !dbg !6396
  %30 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6397
  %call26 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %29, %struct._ExceptionInfo* %30), !dbg !6398
  store %struct._CacheView* %call26, %struct._CacheView** %hald_view, align 8, !dbg !6399
  store i64 0, i64* %y, align 8, !dbg !6400
  br label %for.cond27, !dbg !6402

for.cond27:                                       ; preds = %for.inc196, %for.end
  %31 = load i64, i64* %y, align 8, !dbg !6403
  %32 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6405
  %rows28 = getelementptr inbounds %struct._Image, %struct._Image* %32, i32 0, i32 8, !dbg !6406
  %33 = load i64, i64* %rows28, align 8, !dbg !6406
  %cmp29 = icmp slt i64 %31, %33, !dbg !6407
  br i1 %cmp29, label %for.body31, label %for.end198, !dbg !6408

for.body31:                                       ; preds = %for.cond27
  call void @llvm.dbg.declare(metadata double* %offset, metadata !6409, metadata !DIExpression()), !dbg !6411
  call void @llvm.dbg.declare(metadata %struct._HaldInfo* %point, metadata !6412, metadata !DIExpression()), !dbg !6419
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !6420, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel1, metadata !6422, metadata !DIExpression()), !dbg !6423
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel2, metadata !6424, metadata !DIExpression()), !dbg !6425
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel3, metadata !6426, metadata !DIExpression()), !dbg !6427
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel4, metadata !6428, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !6430, metadata !DIExpression()), !dbg !6431
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !6432, metadata !DIExpression()), !dbg !6433
  call void @llvm.dbg.declare(metadata i64* %x, metadata !6434, metadata !DIExpression()), !dbg !6435
  %34 = load i32, i32* %status, align 4, !dbg !6436
  %cmp32 = icmp eq i32 %34, 0, !dbg !6438
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !6439

if.then34:                                        ; preds = %for.body31
  br label %for.inc196, !dbg !6440

if.end35:                                         ; preds = %for.body31
  %35 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !6441
  %36 = load i64, i64* %y, align 8, !dbg !6442
  %37 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6443
  %columns36 = getelementptr inbounds %struct._Image, %struct._Image* %37, i32 0, i32 7, !dbg !6444
  %38 = load i64, i64* %columns36, align 8, !dbg !6444
  %39 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6445
  %call37 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %35, i64 0, i64 %36, i64 %38, i64 1, %struct._ExceptionInfo* %39), !dbg !6446
  store %struct._PixelPacket* %call37, %struct._PixelPacket** %q, align 8, !dbg !6447
  %40 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6448
  %cmp38 = icmp eq %struct._PixelPacket* %40, null, !dbg !6450
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !6451

if.then40:                                        ; preds = %if.end35
  store i32 0, i32* %status, align 4, !dbg !6452
  br label %for.inc196, !dbg !6454

if.end41:                                         ; preds = %if.end35
  %41 = load %struct._CacheView*, %struct._CacheView** %hald_view, align 8, !dbg !6455
  %call42 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %41), !dbg !6456
  store i16* %call42, i16** %indexes, align 8, !dbg !6457
  %42 = bitcast %struct._MagickPixelPacket* %pixel to i8*, !dbg !6458
  %43 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !6458
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 56, i1 false), !dbg !6458
  %44 = bitcast %struct._MagickPixelPacket* %pixel1 to i8*, !dbg !6459
  %45 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !6459
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 56, i1 false), !dbg !6459
  %46 = bitcast %struct._MagickPixelPacket* %pixel2 to i8*, !dbg !6460
  %47 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !6460
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 56, i1 false), !dbg !6460
  %48 = bitcast %struct._MagickPixelPacket* %pixel3 to i8*, !dbg !6461
  %49 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !6461
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 56, i1 false), !dbg !6461
  %50 = bitcast %struct._MagickPixelPacket* %pixel4 to i8*, !dbg !6462
  %51 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !6462
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 56, i1 false), !dbg !6462
  store i64 0, i64* %x, align 8, !dbg !6463
  br label %for.cond43, !dbg !6465

for.cond43:                                       ; preds = %for.inc177, %if.end41
  %52 = load i64, i64* %x, align 8, !dbg !6466
  %53 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6468
  %columns44 = getelementptr inbounds %struct._Image, %struct._Image* %53, i32 0, i32 7, !dbg !6469
  %54 = load i64, i64* %columns44, align 8, !dbg !6469
  %cmp45 = icmp slt i64 %52, %54, !dbg !6470
  br i1 %cmp45, label %for.body47, label %for.end179, !dbg !6471

for.body47:                                       ; preds = %for.cond43
  %55 = load i64, i64* %level, align 8, !dbg !6472
  %conv48 = uitofp i64 %55 to double, !dbg !6472
  %sub = fsub double %conv48, 1.000000e+00, !dbg !6474
  %mul49 = fmul double 0x3EF0001000100010, %sub, !dbg !6475
  %56 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6476
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %56, i32 0, i32 2, !dbg !6476
  %57 = load i16, i16* %red, align 2, !dbg !6476
  %conv50 = zext i16 %57 to i32, !dbg !6476
  %conv51 = sitofp i32 %conv50 to double, !dbg !6476
  %mul52 = fmul double %mul49, %conv51, !dbg !6477
  %conv53 = fptrunc double %mul52 to float, !dbg !6478
  %x54 = getelementptr inbounds %struct._HaldInfo, %struct._HaldInfo* %point, i32 0, i32 0, !dbg !6479
  store float %conv53, float* %x54, align 4, !dbg !6480
  %58 = load i64, i64* %level, align 8, !dbg !6481
  %conv55 = uitofp i64 %58 to double, !dbg !6481
  %sub56 = fsub double %conv55, 1.000000e+00, !dbg !6482
  %mul57 = fmul double 0x3EF0001000100010, %sub56, !dbg !6483
  %59 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6484
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %59, i32 0, i32 1, !dbg !6484
  %60 = load i16, i16* %green, align 2, !dbg !6484
  %conv58 = zext i16 %60 to i32, !dbg !6484
  %conv59 = sitofp i32 %conv58 to double, !dbg !6484
  %mul60 = fmul double %mul57, %conv59, !dbg !6485
  %conv61 = fptrunc double %mul60 to float, !dbg !6486
  %y62 = getelementptr inbounds %struct._HaldInfo, %struct._HaldInfo* %point, i32 0, i32 1, !dbg !6487
  store float %conv61, float* %y62, align 4, !dbg !6488
  %61 = load i64, i64* %level, align 8, !dbg !6489
  %conv63 = uitofp i64 %61 to double, !dbg !6489
  %sub64 = fsub double %conv63, 1.000000e+00, !dbg !6490
  %mul65 = fmul double 0x3EF0001000100010, %sub64, !dbg !6491
  %62 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6492
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %62, i32 0, i32 0, !dbg !6492
  %63 = load i16, i16* %blue, align 2, !dbg !6492
  %conv66 = zext i16 %63 to i32, !dbg !6492
  %conv67 = sitofp i32 %conv66 to double, !dbg !6492
  %mul68 = fmul double %mul65, %conv67, !dbg !6493
  %conv69 = fptrunc double %mul68 to float, !dbg !6494
  %z = getelementptr inbounds %struct._HaldInfo, %struct._HaldInfo* %point, i32 0, i32 2, !dbg !6495
  store float %conv69, float* %z, align 4, !dbg !6496
  %x70 = getelementptr inbounds %struct._HaldInfo, %struct._HaldInfo* %point, i32 0, i32 0, !dbg !6497
  %64 = load float, float* %x70, align 4, !dbg !6497
  %conv71 = fpext float %64 to double, !dbg !6498
  %65 = load i64, i64* %level, align 8, !dbg !6499
  %conv72 = uitofp i64 %65 to double, !dbg !6499
  %y73 = getelementptr inbounds %struct._HaldInfo, %struct._HaldInfo* %point, i32 0, i32 1, !dbg !6500
  %66 = load float, float* %y73, align 4, !dbg !6500
  %conv74 = fpext float %66 to double, !dbg !6501
  %67 = call double @llvm.floor.f64(double %conv74), !dbg !6502
  %mul75 = fmul double %conv72, %67, !dbg !6503
  %add = fadd double %conv71, %mul75, !dbg !6504
  %68 = load i64, i64* %cube_size, align 8, !dbg !6505
  %conv76 = uitofp i64 %68 to double, !dbg !6505
  %z77 = getelementptr inbounds %struct._HaldInfo, %struct._HaldInfo* %point, i32 0, i32 2, !dbg !6506
  %69 = load float, float* %z77, align 4, !dbg !6506
  %conv78 = fpext float %69 to double, !dbg !6507
  %70 = call double @llvm.floor.f64(double %conv78), !dbg !6508
  %mul79 = fmul double %conv76, %70, !dbg !6509
  %add80 = fadd double %add, %mul79, !dbg !6510
  store double %add80, double* %offset, align 8, !dbg !6511
  %x81 = getelementptr inbounds %struct._HaldInfo, %struct._HaldInfo* %point, i32 0, i32 0, !dbg !6512
  %71 = load float, float* %x81, align 4, !dbg !6512
  %conv82 = fpext float %71 to double, !dbg !6513
  %72 = call double @llvm.floor.f64(double %conv82), !dbg !6514
  %x83 = getelementptr inbounds %struct._HaldInfo, %struct._HaldInfo* %point, i32 0, i32 0, !dbg !6515
  %73 = load float, float* %x83, align 4, !dbg !6516
  %conv84 = fpext float %73 to double, !dbg !6516
  %sub85 = fsub double %conv84, %72, !dbg !6516
  %conv86 = fptrunc double %sub85 to float, !dbg !6516
  store float %conv86, float* %x83, align 4, !dbg !6516
  %y87 = getelementptr inbounds %struct._HaldInfo, %struct._HaldInfo* %point, i32 0, i32 1, !dbg !6517
  %74 = load float, float* %y87, align 4, !dbg !6517
  %conv88 = fpext float %74 to double, !dbg !6518
  %75 = call double @llvm.floor.f64(double %conv88), !dbg !6519
  %y89 = getelementptr inbounds %struct._HaldInfo, %struct._HaldInfo* %point, i32 0, i32 1, !dbg !6520
  %76 = load float, float* %y89, align 4, !dbg !6521
  %conv90 = fpext float %76 to double, !dbg !6521
  %sub91 = fsub double %conv90, %75, !dbg !6521
  %conv92 = fptrunc double %sub91 to float, !dbg !6521
  store float %conv92, float* %y89, align 4, !dbg !6521
  %z93 = getelementptr inbounds %struct._HaldInfo, %struct._HaldInfo* %point, i32 0, i32 2, !dbg !6522
  %77 = load float, float* %z93, align 4, !dbg !6522
  %conv94 = fpext float %77 to double, !dbg !6523
  %78 = call double @llvm.floor.f64(double %conv94), !dbg !6524
  %z95 = getelementptr inbounds %struct._HaldInfo, %struct._HaldInfo* %point, i32 0, i32 2, !dbg !6525
  %79 = load float, float* %z95, align 4, !dbg !6526
  %conv96 = fpext float %79 to double, !dbg !6526
  %sub97 = fsub double %conv96, %78, !dbg !6526
  %conv98 = fptrunc double %sub97 to float, !dbg !6526
  store float %conv98, float* %z95, align 4, !dbg !6526
  %80 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6527
  %81 = load %struct._CacheView*, %struct._CacheView** %hald_view, align 8, !dbg !6528
  %82 = load double, double* %offset, align 8, !dbg !6529
  %83 = load double, double* %width, align 8, !dbg !6530
  %call99 = call double @fmod(double %82, double %83) #6, !dbg !6531
  %84 = load double, double* %offset, align 8, !dbg !6532
  %85 = load double, double* %width, align 8, !dbg !6533
  %div = fdiv double %84, %85, !dbg !6534
  %86 = call double @llvm.floor.f64(double %div), !dbg !6535
  %87 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6536
  %call100 = call i32 @InterpolateMagickPixelPacket(%struct._Image* %80, %struct._CacheView* %81, i32 0, double %call99, double %86, %struct._MagickPixelPacket* %pixel1, %struct._ExceptionInfo* %87), !dbg !6537
  %88 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6538
  %89 = load %struct._CacheView*, %struct._CacheView** %hald_view, align 8, !dbg !6539
  %90 = load double, double* %offset, align 8, !dbg !6540
  %91 = load i64, i64* %level, align 8, !dbg !6541
  %conv101 = uitofp i64 %91 to double, !dbg !6541
  %add102 = fadd double %90, %conv101, !dbg !6542
  %92 = load double, double* %width, align 8, !dbg !6543
  %call103 = call double @fmod(double %add102, double %92) #6, !dbg !6544
  %93 = load double, double* %offset, align 8, !dbg !6545
  %94 = load i64, i64* %level, align 8, !dbg !6546
  %conv104 = uitofp i64 %94 to double, !dbg !6546
  %add105 = fadd double %93, %conv104, !dbg !6547
  %95 = load double, double* %width, align 8, !dbg !6548
  %div106 = fdiv double %add105, %95, !dbg !6549
  %96 = call double @llvm.floor.f64(double %div106), !dbg !6550
  %97 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6551
  %call107 = call i32 @InterpolateMagickPixelPacket(%struct._Image* %88, %struct._CacheView* %89, i32 0, double %call103, double %96, %struct._MagickPixelPacket* %pixel2, %struct._ExceptionInfo* %97), !dbg !6552
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel1, i32 0, i32 8, !dbg !6553
  %98 = load float, float* %opacity, align 4, !dbg !6553
  %opacity108 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel2, i32 0, i32 8, !dbg !6554
  %99 = load float, float* %opacity108, align 4, !dbg !6554
  %y109 = getelementptr inbounds %struct._HaldInfo, %struct._HaldInfo* %point, i32 0, i32 1, !dbg !6555
  %100 = load float, float* %y109, align 4, !dbg !6555
  call void @MagickPixelCompositeAreaBlend(%struct._MagickPixelPacket* %pixel1, float %98, %struct._MagickPixelPacket* %pixel2, float %99, float %100, %struct._MagickPixelPacket* %pixel3), !dbg !6556
  %101 = load i64, i64* %cube_size, align 8, !dbg !6557
  %conv110 = uitofp i64 %101 to double, !dbg !6557
  %102 = load double, double* %offset, align 8, !dbg !6558
  %add111 = fadd double %102, %conv110, !dbg !6558
  store double %add111, double* %offset, align 8, !dbg !6558
  %103 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6559
  %104 = load %struct._CacheView*, %struct._CacheView** %hald_view, align 8, !dbg !6560
  %105 = load double, double* %offset, align 8, !dbg !6561
  %106 = load double, double* %width, align 8, !dbg !6562
  %call112 = call double @fmod(double %105, double %106) #6, !dbg !6563
  %107 = load double, double* %offset, align 8, !dbg !6564
  %108 = load double, double* %width, align 8, !dbg !6565
  %div113 = fdiv double %107, %108, !dbg !6566
  %109 = call double @llvm.floor.f64(double %div113), !dbg !6567
  %110 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6568
  %call114 = call i32 @InterpolateMagickPixelPacket(%struct._Image* %103, %struct._CacheView* %104, i32 0, double %call112, double %109, %struct._MagickPixelPacket* %pixel1, %struct._ExceptionInfo* %110), !dbg !6569
  %111 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6570
  %112 = load %struct._CacheView*, %struct._CacheView** %hald_view, align 8, !dbg !6571
  %113 = load double, double* %offset, align 8, !dbg !6572
  %114 = load i64, i64* %level, align 8, !dbg !6573
  %conv115 = uitofp i64 %114 to double, !dbg !6573
  %add116 = fadd double %113, %conv115, !dbg !6574
  %115 = load double, double* %width, align 8, !dbg !6575
  %call117 = call double @fmod(double %add116, double %115) #6, !dbg !6576
  %116 = load double, double* %offset, align 8, !dbg !6577
  %117 = load i64, i64* %level, align 8, !dbg !6578
  %conv118 = uitofp i64 %117 to double, !dbg !6578
  %add119 = fadd double %116, %conv118, !dbg !6579
  %118 = load double, double* %width, align 8, !dbg !6580
  %div120 = fdiv double %add119, %118, !dbg !6581
  %119 = call double @llvm.floor.f64(double %div120), !dbg !6582
  %120 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6583
  %call121 = call i32 @InterpolateMagickPixelPacket(%struct._Image* %111, %struct._CacheView* %112, i32 0, double %call117, double %119, %struct._MagickPixelPacket* %pixel2, %struct._ExceptionInfo* %120), !dbg !6584
  %opacity122 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel1, i32 0, i32 8, !dbg !6585
  %121 = load float, float* %opacity122, align 4, !dbg !6585
  %opacity123 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel2, i32 0, i32 8, !dbg !6586
  %122 = load float, float* %opacity123, align 4, !dbg !6586
  %y124 = getelementptr inbounds %struct._HaldInfo, %struct._HaldInfo* %point, i32 0, i32 1, !dbg !6587
  %123 = load float, float* %y124, align 4, !dbg !6587
  call void @MagickPixelCompositeAreaBlend(%struct._MagickPixelPacket* %pixel1, float %121, %struct._MagickPixelPacket* %pixel2, float %122, float %123, %struct._MagickPixelPacket* %pixel4), !dbg !6588
  %opacity125 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel3, i32 0, i32 8, !dbg !6589
  %124 = load float, float* %opacity125, align 4, !dbg !6589
  %opacity126 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel4, i32 0, i32 8, !dbg !6590
  %125 = load float, float* %opacity126, align 4, !dbg !6590
  %z127 = getelementptr inbounds %struct._HaldInfo, %struct._HaldInfo* %point, i32 0, i32 2, !dbg !6591
  %126 = load float, float* %z127, align 4, !dbg !6591
  call void @MagickPixelCompositeAreaBlend(%struct._MagickPixelPacket* %pixel3, float %124, %struct._MagickPixelPacket* %pixel4, float %125, float %126, %struct._MagickPixelPacket* %pixel), !dbg !6592
  %127 = load i32, i32* %channel.addr, align 4, !dbg !6593
  %and = and i32 %127, 1, !dbg !6595
  %cmp128 = icmp ne i32 %and, 0, !dbg !6596
  br i1 %cmp128, label %if.then130, label %if.end134, !dbg !6597

if.then130:                                       ; preds = %for.body47
  %red131 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !6598
  %128 = load float, float* %red131, align 8, !dbg !6598
  %call132 = call zeroext i16 @ClampToQuantum(float %128), !dbg !6598
  %129 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6598
  %red133 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %129, i32 0, i32 2, !dbg !6598
  store i16 %call132, i16* %red133, align 2, !dbg !6598
  br label %if.end134, !dbg !6598

if.end134:                                        ; preds = %if.then130, %for.body47
  %130 = load i32, i32* %channel.addr, align 4, !dbg !6599
  %and135 = and i32 %130, 2, !dbg !6601
  %cmp136 = icmp ne i32 %and135, 0, !dbg !6602
  br i1 %cmp136, label %if.then138, label %if.end142, !dbg !6603

if.then138:                                       ; preds = %if.end134
  %green139 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !6604
  %131 = load float, float* %green139, align 4, !dbg !6604
  %call140 = call zeroext i16 @ClampToQuantum(float %131), !dbg !6604
  %132 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6604
  %green141 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %132, i32 0, i32 1, !dbg !6604
  store i16 %call140, i16* %green141, align 2, !dbg !6604
  br label %if.end142, !dbg !6604

if.end142:                                        ; preds = %if.then138, %if.end134
  %133 = load i32, i32* %channel.addr, align 4, !dbg !6605
  %and143 = and i32 %133, 4, !dbg !6607
  %cmp144 = icmp ne i32 %and143, 0, !dbg !6608
  br i1 %cmp144, label %if.then146, label %if.end150, !dbg !6609

if.then146:                                       ; preds = %if.end142
  %blue147 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !6610
  %134 = load float, float* %blue147, align 8, !dbg !6610
  %call148 = call zeroext i16 @ClampToQuantum(float %134), !dbg !6610
  %135 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6610
  %blue149 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %135, i32 0, i32 0, !dbg !6610
  store i16 %call148, i16* %blue149, align 2, !dbg !6610
  br label %if.end150, !dbg !6610

if.end150:                                        ; preds = %if.then146, %if.end142
  %136 = load i32, i32* %channel.addr, align 4, !dbg !6611
  %and151 = and i32 %136, 8, !dbg !6613
  %cmp152 = icmp ne i32 %and151, 0, !dbg !6614
  br i1 %cmp152, label %land.lhs.true, label %if.end161, !dbg !6615

land.lhs.true:                                    ; preds = %if.end150
  %137 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6616
  %matte154 = getelementptr inbounds %struct._Image, %struct._Image* %137, i32 0, i32 6, !dbg !6617
  %138 = load i32, i32* %matte154, align 8, !dbg !6617
  %cmp155 = icmp ne i32 %138, 0, !dbg !6618
  br i1 %cmp155, label %if.then157, label %if.end161, !dbg !6619

if.then157:                                       ; preds = %land.lhs.true
  %opacity158 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !6620
  %139 = load float, float* %opacity158, align 4, !dbg !6620
  %call159 = call zeroext i16 @ClampToQuantum(float %139), !dbg !6620
  %140 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6620
  %opacity160 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %140, i32 0, i32 3, !dbg !6620
  store i16 %call159, i16* %opacity160, align 2, !dbg !6620
  br label %if.end161, !dbg !6620

if.end161:                                        ; preds = %if.then157, %land.lhs.true, %if.end150
  %141 = load i32, i32* %channel.addr, align 4, !dbg !6621
  %and162 = and i32 %141, 32, !dbg !6623
  %cmp163 = icmp ne i32 %and162, 0, !dbg !6624
  br i1 %cmp163, label %land.lhs.true165, label %if.end176, !dbg !6625

land.lhs.true165:                                 ; preds = %if.end161
  %142 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6626
  %colorspace166 = getelementptr inbounds %struct._Image, %struct._Image* %142, i32 0, i32 1, !dbg !6627
  %143 = load i32, i32* %colorspace166, align 4, !dbg !6627
  %cmp167 = icmp eq i32 %143, 12, !dbg !6628
  br i1 %cmp167, label %if.then169, label %if.end176, !dbg !6629

if.then169:                                       ; preds = %land.lhs.true165
  %144 = load i16*, i16** %indexes, align 8, !dbg !6630
  %145 = load i64, i64* %x, align 8, !dbg !6630
  %add.ptr = getelementptr inbounds i16, i16* %144, i64 %145, !dbg !6630
  %cmp170 = icmp ne i16* %add.ptr, null, !dbg !6630
  br i1 %cmp170, label %if.then172, label %if.end175, !dbg !6633

if.then172:                                       ; preds = %if.then169
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !6630
  %146 = load float, float* %index, align 8, !dbg !6630
  %call173 = call zeroext i16 @ClampToQuantum(float %146), !dbg !6630
  %147 = load i16*, i16** %indexes, align 8, !dbg !6630
  %148 = load i64, i64* %x, align 8, !dbg !6630
  %add.ptr174 = getelementptr inbounds i16, i16* %147, i64 %148, !dbg !6630
  store i16 %call173, i16* %add.ptr174, align 2, !dbg !6630
  br label %if.end175, !dbg !6630

if.end175:                                        ; preds = %if.then172, %if.then169
  br label %if.end176, !dbg !6633

if.end176:                                        ; preds = %if.end175, %land.lhs.true165, %if.end161
  %149 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6634
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %149, i32 1, !dbg !6634
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !6634
  br label %for.inc177, !dbg !6635

for.inc177:                                       ; preds = %if.end176
  %150 = load i64, i64* %x, align 8, !dbg !6636
  %inc178 = add nsw i64 %150, 1, !dbg !6636
  store i64 %inc178, i64* %x, align 8, !dbg !6636
  br label %for.cond43, !dbg !6637, !llvm.loop !6638

for.end179:                                       ; preds = %for.cond43
  %151 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !6640
  %152 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6642
  %call180 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %151, %struct._ExceptionInfo* %152), !dbg !6643
  %cmp181 = icmp eq i32 %call180, 0, !dbg !6644
  br i1 %cmp181, label %if.then183, label %if.end184, !dbg !6645

if.then183:                                       ; preds = %for.end179
  store i32 0, i32* %status, align 4, !dbg !6646
  br label %if.end184, !dbg !6647

if.end184:                                        ; preds = %if.then183, %for.end179
  %153 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6648
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %153, i32 0, i32 47, !dbg !6650
  %154 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !6650
  %cmp185 = icmp ne i32 (i8*, i64, i64, i8*)* %154, null, !dbg !6651
  br i1 %cmp185, label %if.then187, label %if.end195, !dbg !6652

if.then187:                                       ; preds = %if.end184
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !6653, metadata !DIExpression()), !dbg !6655
  %155 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6656
  %156 = load i64, i64* %progress, align 8, !dbg !6657
  %inc188 = add nsw i64 %156, 1, !dbg !6657
  store i64 %inc188, i64* %progress, align 8, !dbg !6657
  %157 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6658
  %rows189 = getelementptr inbounds %struct._Image, %struct._Image* %157, i32 0, i32 8, !dbg !6659
  %158 = load i64, i64* %rows189, align 8, !dbg !6659
  %call190 = call i32 @SetImageProgress(%struct._Image* %155, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i64 0, i64 0), i64 %156, i64 %158), !dbg !6660
  store i32 %call190, i32* %proceed, align 4, !dbg !6661
  %159 = load i32, i32* %proceed, align 4, !dbg !6662
  %cmp191 = icmp eq i32 %159, 0, !dbg !6664
  br i1 %cmp191, label %if.then193, label %if.end194, !dbg !6665

if.then193:                                       ; preds = %if.then187
  store i32 0, i32* %status, align 4, !dbg !6666
  br label %if.end194, !dbg !6667

if.end194:                                        ; preds = %if.then193, %if.then187
  br label %if.end195, !dbg !6668

if.end195:                                        ; preds = %if.end194, %if.end184
  br label %for.inc196, !dbg !6669

for.inc196:                                       ; preds = %if.end195, %if.then40, %if.then34
  %160 = load i64, i64* %y, align 8, !dbg !6670
  %inc197 = add nsw i64 %160, 1, !dbg !6670
  store i64 %inc197, i64* %y, align 8, !dbg !6670
  br label %for.cond27, !dbg !6671, !llvm.loop !6672

for.end198:                                       ; preds = %for.cond27
  %161 = load %struct._CacheView*, %struct._CacheView** %hald_view, align 8, !dbg !6674
  %call199 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %161), !dbg !6675
  store %struct._CacheView* %call199, %struct._CacheView** %hald_view, align 8, !dbg !6676
  %162 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !6677
  %call200 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %162), !dbg !6678
  store %struct._CacheView* %call200, %struct._CacheView** %image_view, align 8, !dbg !6679
  %163 = load i32, i32* %status, align 4, !dbg !6680
  store i32 %163, i32* %retval, align 4, !dbg !6681
  br label %return, !dbg !6681

return:                                           ; preds = %for.end198, %if.then3
  %164 = load i32, i32* %retval, align 4, !dbg !6682
  ret i32 %164, !dbg !6682
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

; Function Attrs: nounwind
declare dso_local double @fmod(double, double) #2

; Function Attrs: noinline nounwind uwtable
define internal void @MagickPixelCompositeAreaBlend(%struct._MagickPixelPacket* %p, float %alpha, %struct._MagickPixelPacket* %q, float %beta, float %area, %struct._MagickPixelPacket* %composite) #0 !dbg !6683 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %alpha.addr = alloca float, align 4
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %beta.addr = alloca float, align 4
  %area.addr = alloca float, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !6687, metadata !DIExpression()), !dbg !6688
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !6689, metadata !DIExpression()), !dbg !6690
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !6691, metadata !DIExpression()), !dbg !6692
  store float %beta, float* %beta.addr, align 4
  call void @llvm.dbg.declare(metadata float* %beta.addr, metadata !6693, metadata !DIExpression()), !dbg !6694
  store float %area, float* %area.addr, align 4
  call void @llvm.dbg.declare(metadata float* %area.addr, metadata !6695, metadata !DIExpression()), !dbg !6696
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !6697, metadata !DIExpression()), !dbg !6698
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !6699
  %1 = load float, float* %area.addr, align 4, !dbg !6700
  %conv = fpext float %1 to double, !dbg !6700
  %sub = fsub double 1.000000e+00, %conv, !dbg !6701
  %2 = load float, float* %alpha.addr, align 4, !dbg !6702
  %sub1 = fsub float 6.553500e+04, %2, !dbg !6703
  %conv2 = fpext float %sub1 to double, !dbg !6704
  %mul = fmul double %sub, %conv2, !dbg !6705
  %sub3 = fsub double 6.553500e+04, %mul, !dbg !6706
  %conv4 = fptrunc double %sub3 to float, !dbg !6707
  %3 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !6708
  %4 = load float, float* %area.addr, align 4, !dbg !6709
  %5 = load float, float* %beta.addr, align 4, !dbg !6710
  %sub5 = fsub float 6.553500e+04, %5, !dbg !6711
  %mul6 = fmul float %4, %sub5, !dbg !6712
  %sub7 = fsub float 6.553500e+04, %mul6, !dbg !6713
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !6714
  call void @MagickPixelCompositePlus(%struct._MagickPixelPacket* %0, float %conv4, %struct._MagickPixelPacket* %3, float %sub7, %struct._MagickPixelPacket* %6), !dbg !6715
  ret void, !dbg !6716
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @LevelImage(%struct._Image* %image, i8* %levels) #0 !dbg !6717 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %levels.addr = alloca i8*, align 8
  %black_point = alloca double, align 8
  %gamma = alloca double, align 8
  %white_point = alloca double, align 8
  %geometry_info = alloca %struct._GeometryInfo, align 8
  %status = alloca i32, align 4
  %flags = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6718, metadata !DIExpression()), !dbg !6719
  store i8* %levels, i8** %levels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %levels.addr, metadata !6720, metadata !DIExpression()), !dbg !6721
  call void @llvm.dbg.declare(metadata double* %black_point, metadata !6722, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !6724, metadata !DIExpression()), !dbg !6725
  call void @llvm.dbg.declare(metadata double* %white_point, metadata !6726, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.declare(metadata %struct._GeometryInfo* %geometry_info, metadata !6728, metadata !DIExpression()), !dbg !6729
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6730, metadata !DIExpression()), !dbg !6731
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !6732, metadata !DIExpression()), !dbg !6733
  %0 = load i8*, i8** %levels.addr, align 8, !dbg !6734
  %cmp = icmp eq i8* %0, null, !dbg !6736
  br i1 %cmp, label %if.then, label %if.end, !dbg !6737

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6738
  br label %return, !dbg !6738

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %levels.addr, align 8, !dbg !6739
  %call = call i32 @ParseGeometry(i8* %1, %struct._GeometryInfo* %geometry_info), !dbg !6740
  store i32 %call, i32* %flags, align 4, !dbg !6741
  %rho = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 0, !dbg !6742
  %2 = load double, double* %rho, align 8, !dbg !6742
  store double %2, double* %black_point, align 8, !dbg !6743
  store double 6.553500e+04, double* %white_point, align 8, !dbg !6744
  %3 = load i32, i32* %flags, align 4, !dbg !6745
  %and = and i32 %3, 8, !dbg !6747
  %cmp1 = icmp ne i32 %and, 0, !dbg !6748
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6749

if.then2:                                         ; preds = %if.end
  %sigma = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 1, !dbg !6750
  %4 = load double, double* %sigma, align 8, !dbg !6750
  store double %4, double* %white_point, align 8, !dbg !6751
  br label %if.end3, !dbg !6752

if.end3:                                          ; preds = %if.then2, %if.end
  store double 1.000000e+00, double* %gamma, align 8, !dbg !6753
  %5 = load i32, i32* %flags, align 4, !dbg !6754
  %and4 = and i32 %5, 1, !dbg !6756
  %cmp5 = icmp ne i32 %and4, 0, !dbg !6757
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !6758

if.then6:                                         ; preds = %if.end3
  %xi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 2, !dbg !6759
  %6 = load double, double* %xi, align 8, !dbg !6759
  store double %6, double* %gamma, align 8, !dbg !6760
  br label %if.end7, !dbg !6761

if.end7:                                          ; preds = %if.then6, %if.end3
  %7 = load i32, i32* %flags, align 4, !dbg !6762
  %and8 = and i32 %7, 4096, !dbg !6764
  %cmp9 = icmp ne i32 %and8, 0, !dbg !6765
  br i1 %cmp9, label %if.then10, label %if.end20, !dbg !6766

if.then10:                                        ; preds = %if.end7
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6767
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 7, !dbg !6769
  %9 = load i64, i64* %columns, align 8, !dbg !6769
  %conv = uitofp i64 %9 to double, !dbg !6770
  %10 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6771
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 8, !dbg !6772
  %11 = load i64, i64* %rows, align 8, !dbg !6772
  %conv11 = uitofp i64 %11 to double, !dbg !6771
  %mul = fmul double %conv, %conv11, !dbg !6773
  %div = fdiv double %mul, 1.000000e+02, !dbg !6774
  %12 = load double, double* %black_point, align 8, !dbg !6775
  %mul12 = fmul double %12, %div, !dbg !6775
  store double %mul12, double* %black_point, align 8, !dbg !6775
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6776
  %columns13 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 7, !dbg !6777
  %14 = load i64, i64* %columns13, align 8, !dbg !6777
  %conv14 = uitofp i64 %14 to double, !dbg !6778
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6779
  %rows15 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 8, !dbg !6780
  %16 = load i64, i64* %rows15, align 8, !dbg !6780
  %conv16 = uitofp i64 %16 to double, !dbg !6779
  %mul17 = fmul double %conv14, %conv16, !dbg !6781
  %div18 = fdiv double %mul17, 1.000000e+02, !dbg !6782
  %17 = load double, double* %white_point, align 8, !dbg !6783
  %mul19 = fmul double %17, %div18, !dbg !6783
  store double %mul19, double* %white_point, align 8, !dbg !6783
  br label %if.end20, !dbg !6784

if.end20:                                         ; preds = %if.then10, %if.end7
  %18 = load i32, i32* %flags, align 4, !dbg !6785
  %and21 = and i32 %18, 8, !dbg !6787
  %cmp22 = icmp eq i32 %and21, 0, !dbg !6788
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !6789

if.then24:                                        ; preds = %if.end20
  %19 = load double, double* %black_point, align 8, !dbg !6790
  %sub = fsub double 6.553500e+04, %19, !dbg !6791
  store double %sub, double* %white_point, align 8, !dbg !6792
  br label %if.end25, !dbg !6793

if.end25:                                         ; preds = %if.then24, %if.end20
  %20 = load i32, i32* %flags, align 4, !dbg !6794
  %and26 = and i32 %20, 8192, !dbg !6796
  %cmp27 = icmp eq i32 %and26, 0, !dbg !6797
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !6798

if.then29:                                        ; preds = %if.end25
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6799
  %22 = load double, double* %black_point, align 8, !dbg !6800
  %23 = load double, double* %white_point, align 8, !dbg !6801
  %24 = load double, double* %gamma, align 8, !dbg !6802
  %call30 = call i32 @LevelImageChannel(%struct._Image* %21, i32 134217719, double %22, double %23, double %24), !dbg !6803
  store i32 %call30, i32* %status, align 4, !dbg !6804
  br label %if.end32, !dbg !6805

if.else:                                          ; preds = %if.end25
  %25 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6806
  %26 = load double, double* %black_point, align 8, !dbg !6807
  %27 = load double, double* %white_point, align 8, !dbg !6808
  %28 = load double, double* %gamma, align 8, !dbg !6809
  %call31 = call i32 @LevelizeImage(%struct._Image* %25, double %26, double %27, double %28), !dbg !6810
  store i32 %call31, i32* %status, align 4, !dbg !6811
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then29
  %29 = load i32, i32* %status, align 4, !dbg !6812
  store i32 %29, i32* %retval, align 4, !dbg !6813
  br label %return, !dbg !6813

return:                                           ; preds = %if.end32, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !6814
  ret i32 %30, !dbg !6814
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @LevelizeImage(%struct._Image* %image, double %black_point, double %white_point, double %gamma) #0 !dbg !6815 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %black_point.addr = alloca double, align 8
  %white_point.addr = alloca double, align 8
  %gamma.addr = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6818, metadata !DIExpression()), !dbg !6819
  store double %black_point, double* %black_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %black_point.addr, metadata !6820, metadata !DIExpression()), !dbg !6821
  store double %white_point, double* %white_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %white_point.addr, metadata !6822, metadata !DIExpression()), !dbg !6823
  store double %gamma, double* %gamma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %gamma.addr, metadata !6824, metadata !DIExpression()), !dbg !6825
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6826, metadata !DIExpression()), !dbg !6827
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6828
  %1 = load double, double* %black_point.addr, align 8, !dbg !6829
  %2 = load double, double* %white_point.addr, align 8, !dbg !6830
  %3 = load double, double* %gamma.addr, align 8, !dbg !6831
  %call = call i32 @LevelizeImageChannel(%struct._Image* %0, i32 134217719, double %1, double %2, double %3), !dbg !6832
  store i32 %call, i32* %status, align 4, !dbg !6833
  %4 = load i32, i32* %status, align 4, !dbg !6834
  ret i32 %4, !dbg !6835
}

; Function Attrs: noinline nounwind uwtable
define internal double @LevelPixel(double %black_point, double %white_point, double %gamma, float %pixel) #0 !dbg !6836 {
entry:
  %black_point.addr = alloca double, align 8
  %white_point.addr = alloca double, align 8
  %gamma.addr = alloca double, align 8
  %pixel.addr = alloca float, align 4
  %level_pixel = alloca double, align 8
  %scale = alloca double, align 8
  store double %black_point, double* %black_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %black_point.addr, metadata !6839, metadata !DIExpression()), !dbg !6840
  store double %white_point, double* %white_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %white_point.addr, metadata !6841, metadata !DIExpression()), !dbg !6842
  store double %gamma, double* %gamma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %gamma.addr, metadata !6843, metadata !DIExpression()), !dbg !6844
  store float %pixel, float* %pixel.addr, align 4
  call void @llvm.dbg.declare(metadata float* %pixel.addr, metadata !6845, metadata !DIExpression()), !dbg !6846
  call void @llvm.dbg.declare(metadata double* %level_pixel, metadata !6847, metadata !DIExpression()), !dbg !6848
  call void @llvm.dbg.declare(metadata double* %scale, metadata !6849, metadata !DIExpression()), !dbg !6850
  %0 = load double, double* %white_point.addr, align 8, !dbg !6851
  %1 = load double, double* %black_point.addr, align 8, !dbg !6852
  %cmp = fcmp une double %0, %1, !dbg !6853
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6854

cond.true:                                        ; preds = %entry
  %2 = load double, double* %white_point.addr, align 8, !dbg !6855
  %3 = load double, double* %black_point.addr, align 8, !dbg !6856
  %sub = fsub double %2, %3, !dbg !6857
  %div = fdiv double 1.000000e+00, %sub, !dbg !6858
  br label %cond.end, !dbg !6854

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6854

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %div, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !6854
  store double %cond, double* %scale, align 8, !dbg !6859
  %4 = load double, double* %scale, align 8, !dbg !6860
  %5 = load float, float* %pixel.addr, align 4, !dbg !6861
  %conv = fpext float %5 to double, !dbg !6862
  %6 = load double, double* %black_point.addr, align 8, !dbg !6863
  %sub1 = fsub double %conv, %6, !dbg !6864
  %mul = fmul double %4, %sub1, !dbg !6865
  %7 = load double, double* %gamma.addr, align 8, !dbg !6866
  %div2 = fdiv double 1.000000e+00, %7, !dbg !6867
  %call = call double @gamma_pow(double %mul, double %div2), !dbg !6868
  %mul3 = fmul double 6.553500e+04, %call, !dbg !6869
  store double %mul3, double* %level_pixel, align 8, !dbg !6870
  %8 = load double, double* %level_pixel, align 8, !dbg !6871
  ret double %8, !dbg !6872
}

declare dso_local i32 @ClampImage(%struct._Image*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @LevelizeImageChannel(%struct._Image* %image, i32 %channel, double %black_point, double %white_point, double %gamma) #0 !dbg !6873 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %black_point.addr = alloca double, align 8
  %white_point.addr = alloca double, align 8
  %gamma.addr = alloca double, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %i = alloca i64, align 8
  %y = alloca i64, align 8
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6874, metadata !DIExpression()), !dbg !6875
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !6876, metadata !DIExpression()), !dbg !6877
  store double %black_point, double* %black_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %black_point.addr, metadata !6878, metadata !DIExpression()), !dbg !6879
  store double %white_point, double* %white_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %white_point.addr, metadata !6880, metadata !DIExpression()), !dbg !6881
  store double %gamma, double* %gamma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %gamma.addr, metadata !6882, metadata !DIExpression()), !dbg !6883
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !6884, metadata !DIExpression()), !dbg !6885
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !6886, metadata !DIExpression()), !dbg !6887
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6888, metadata !DIExpression()), !dbg !6889
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !6890, metadata !DIExpression()), !dbg !6891
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6892, metadata !DIExpression()), !dbg !6893
  call void @llvm.dbg.declare(metadata i64* %y, metadata !6894, metadata !DIExpression()), !dbg !6895
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6896
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !6898
  %1 = load i32, i32* %debug, align 8, !dbg !6898
  %cmp = icmp ne i32 %1, 0, !dbg !6899
  br i1 %cmp, label %if.then, label %if.end, !dbg !6900

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6901
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !6902
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !6901
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3141, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !6903
  br label %if.end, !dbg !6904

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6905
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 0, !dbg !6907
  %4 = load i32, i32* %storage_class, align 8, !dbg !6907
  %cmp1 = icmp eq i32 %4, 2, !dbg !6908
  br i1 %cmp1, label %if.then2, label %if.end84, !dbg !6909

if.then2:                                         ; preds = %if.end
  store i64 0, i64* %i, align 8, !dbg !6910
  br label %for.cond, !dbg !6912

for.cond:                                         ; preds = %for.inc, %if.then2
  %5 = load i64, i64* %i, align 8, !dbg !6913
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6915
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 10, !dbg !6916
  %7 = load i64, i64* %colors, align 8, !dbg !6916
  %cmp3 = icmp slt i64 %5, %7, !dbg !6917
  br i1 %cmp3, label %for.body, label %for.end, !dbg !6918

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %channel.addr, align 4, !dbg !6919
  %and = and i32 %8, 1, !dbg !6922
  %cmp4 = icmp ne i32 %and, 0, !dbg !6923
  br i1 %cmp4, label %if.then5, label %if.end16, !dbg !6924

if.then5:                                         ; preds = %for.body
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6925
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 11, !dbg !6925
  %10 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !6925
  %11 = load i64, i64* %i, align 8, !dbg !6925
  %arrayidx = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %10, i64 %11, !dbg !6925
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx, i32 0, i32 2, !dbg !6925
  %12 = load i16, i16* %red, align 2, !dbg !6925
  %conv = zext i16 %12 to i32, !dbg !6925
  %conv6 = sitofp i32 %conv to double, !dbg !6925
  %mul = fmul double 0x3EF0001000100010, %conv6, !dbg !6925
  %13 = load double, double* %gamma.addr, align 8, !dbg !6925
  %call7 = call double @gamma_pow(double %mul, double %13), !dbg !6925
  %conv8 = fptrunc double %call7 to float, !dbg !6925
  %conv9 = fpext float %conv8 to double, !dbg !6925
  %14 = load double, double* %white_point.addr, align 8, !dbg !6925
  %15 = load double, double* %black_point.addr, align 8, !dbg !6925
  %sub = fsub double %14, %15, !dbg !6925
  %mul10 = fmul double %conv9, %sub, !dbg !6925
  %16 = load double, double* %black_point.addr, align 8, !dbg !6925
  %add = fadd double %mul10, %16, !dbg !6925
  %conv11 = fptrunc double %add to float, !dbg !6925
  %call12 = call zeroext i16 @ClampToQuantum(float %conv11), !dbg !6925
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6926
  %colormap13 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 11, !dbg !6927
  %18 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap13, align 8, !dbg !6927
  %19 = load i64, i64* %i, align 8, !dbg !6928
  %arrayidx14 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %18, i64 %19, !dbg !6926
  %red15 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx14, i32 0, i32 2, !dbg !6929
  store i16 %call12, i16* %red15, align 2, !dbg !6930
  br label %if.end16, !dbg !6926

if.end16:                                         ; preds = %if.then5, %for.body
  %20 = load i32, i32* %channel.addr, align 4, !dbg !6931
  %and17 = and i32 %20, 2, !dbg !6933
  %cmp18 = icmp ne i32 %and17, 0, !dbg !6934
  br i1 %cmp18, label %if.then20, label %if.end37, !dbg !6935

if.then20:                                        ; preds = %if.end16
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6936
  %colormap21 = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 11, !dbg !6936
  %22 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap21, align 8, !dbg !6936
  %23 = load i64, i64* %i, align 8, !dbg !6936
  %arrayidx22 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %22, i64 %23, !dbg !6936
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx22, i32 0, i32 1, !dbg !6936
  %24 = load i16, i16* %green, align 2, !dbg !6936
  %conv23 = zext i16 %24 to i32, !dbg !6936
  %conv24 = sitofp i32 %conv23 to double, !dbg !6936
  %mul25 = fmul double 0x3EF0001000100010, %conv24, !dbg !6936
  %25 = load double, double* %gamma.addr, align 8, !dbg !6936
  %call26 = call double @gamma_pow(double %mul25, double %25), !dbg !6936
  %conv27 = fptrunc double %call26 to float, !dbg !6936
  %conv28 = fpext float %conv27 to double, !dbg !6936
  %26 = load double, double* %white_point.addr, align 8, !dbg !6936
  %27 = load double, double* %black_point.addr, align 8, !dbg !6936
  %sub29 = fsub double %26, %27, !dbg !6936
  %mul30 = fmul double %conv28, %sub29, !dbg !6936
  %28 = load double, double* %black_point.addr, align 8, !dbg !6936
  %add31 = fadd double %mul30, %28, !dbg !6936
  %conv32 = fptrunc double %add31 to float, !dbg !6936
  %call33 = call zeroext i16 @ClampToQuantum(float %conv32), !dbg !6936
  %29 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6937
  %colormap34 = getelementptr inbounds %struct._Image, %struct._Image* %29, i32 0, i32 11, !dbg !6938
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap34, align 8, !dbg !6938
  %31 = load i64, i64* %i, align 8, !dbg !6939
  %arrayidx35 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i64 %31, !dbg !6937
  %green36 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx35, i32 0, i32 1, !dbg !6940
  store i16 %call33, i16* %green36, align 2, !dbg !6941
  br label %if.end37, !dbg !6937

if.end37:                                         ; preds = %if.then20, %if.end16
  %32 = load i32, i32* %channel.addr, align 4, !dbg !6942
  %and38 = and i32 %32, 4, !dbg !6944
  %cmp39 = icmp ne i32 %and38, 0, !dbg !6945
  br i1 %cmp39, label %if.then41, label %if.end58, !dbg !6946

if.then41:                                        ; preds = %if.end37
  %33 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6947
  %colormap42 = getelementptr inbounds %struct._Image, %struct._Image* %33, i32 0, i32 11, !dbg !6947
  %34 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap42, align 8, !dbg !6947
  %35 = load i64, i64* %i, align 8, !dbg !6947
  %arrayidx43 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %34, i64 %35, !dbg !6947
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx43, i32 0, i32 0, !dbg !6947
  %36 = load i16, i16* %blue, align 2, !dbg !6947
  %conv44 = zext i16 %36 to i32, !dbg !6947
  %conv45 = sitofp i32 %conv44 to double, !dbg !6947
  %mul46 = fmul double 0x3EF0001000100010, %conv45, !dbg !6947
  %37 = load double, double* %gamma.addr, align 8, !dbg !6947
  %call47 = call double @gamma_pow(double %mul46, double %37), !dbg !6947
  %conv48 = fptrunc double %call47 to float, !dbg !6947
  %conv49 = fpext float %conv48 to double, !dbg !6947
  %38 = load double, double* %white_point.addr, align 8, !dbg !6947
  %39 = load double, double* %black_point.addr, align 8, !dbg !6947
  %sub50 = fsub double %38, %39, !dbg !6947
  %mul51 = fmul double %conv49, %sub50, !dbg !6947
  %40 = load double, double* %black_point.addr, align 8, !dbg !6947
  %add52 = fadd double %mul51, %40, !dbg !6947
  %conv53 = fptrunc double %add52 to float, !dbg !6947
  %call54 = call zeroext i16 @ClampToQuantum(float %conv53), !dbg !6947
  %41 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6948
  %colormap55 = getelementptr inbounds %struct._Image, %struct._Image* %41, i32 0, i32 11, !dbg !6949
  %42 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap55, align 8, !dbg !6949
  %43 = load i64, i64* %i, align 8, !dbg !6950
  %arrayidx56 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %42, i64 %43, !dbg !6948
  %blue57 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx56, i32 0, i32 0, !dbg !6951
  store i16 %call54, i16* %blue57, align 2, !dbg !6952
  br label %if.end58, !dbg !6948

if.end58:                                         ; preds = %if.then41, %if.end37
  %44 = load i32, i32* %channel.addr, align 4, !dbg !6953
  %and59 = and i32 %44, 8, !dbg !6955
  %cmp60 = icmp ne i32 %and59, 0, !dbg !6956
  br i1 %cmp60, label %if.then62, label %if.end83, !dbg !6957

if.then62:                                        ; preds = %if.end58
  %45 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6958
  %colormap63 = getelementptr inbounds %struct._Image, %struct._Image* %45, i32 0, i32 11, !dbg !6958
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap63, align 8, !dbg !6958
  %47 = load i64, i64* %i, align 8, !dbg !6958
  %arrayidx64 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %46, i64 %47, !dbg !6958
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx64, i32 0, i32 3, !dbg !6958
  %48 = load i16, i16* %opacity, align 2, !dbg !6958
  %conv65 = zext i16 %48 to i32, !dbg !6958
  %sub66 = sub nsw i32 65535, %conv65, !dbg !6958
  %conv67 = sitofp i32 %sub66 to double, !dbg !6958
  %mul68 = fmul double 0x3EF0001000100010, %conv67, !dbg !6958
  %49 = load double, double* %gamma.addr, align 8, !dbg !6958
  %call69 = call double @gamma_pow(double %mul68, double %49), !dbg !6958
  %conv70 = fptrunc double %call69 to float, !dbg !6958
  %conv71 = fpext float %conv70 to double, !dbg !6958
  %50 = load double, double* %white_point.addr, align 8, !dbg !6958
  %51 = load double, double* %black_point.addr, align 8, !dbg !6958
  %sub72 = fsub double %50, %51, !dbg !6958
  %mul73 = fmul double %conv71, %sub72, !dbg !6958
  %52 = load double, double* %black_point.addr, align 8, !dbg !6958
  %add74 = fadd double %mul73, %52, !dbg !6958
  %conv75 = fptrunc double %add74 to float, !dbg !6958
  %call76 = call zeroext i16 @ClampToQuantum(float %conv75), !dbg !6958
  %conv77 = zext i16 %call76 to i32, !dbg !6958
  %sub78 = sub nsw i32 65535, %conv77, !dbg !6959
  %conv79 = trunc i32 %sub78 to i16, !dbg !6960
  %53 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6961
  %colormap80 = getelementptr inbounds %struct._Image, %struct._Image* %53, i32 0, i32 11, !dbg !6962
  %54 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap80, align 8, !dbg !6962
  %55 = load i64, i64* %i, align 8, !dbg !6963
  %arrayidx81 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %54, i64 %55, !dbg !6961
  %opacity82 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx81, i32 0, i32 3, !dbg !6964
  store i16 %conv79, i16* %opacity82, align 2, !dbg !6965
  br label %if.end83, !dbg !6961

if.end83:                                         ; preds = %if.then62, %if.end58
  br label %for.inc, !dbg !6966

for.inc:                                          ; preds = %if.end83
  %56 = load i64, i64* %i, align 8, !dbg !6967
  %inc = add nsw i64 %56, 1, !dbg !6967
  store i64 %inc, i64* %i, align 8, !dbg !6967
  br label %for.cond, !dbg !6968, !llvm.loop !6969

for.end:                                          ; preds = %for.cond
  br label %if.end84, !dbg !6970

if.end84:                                         ; preds = %for.end, %if.end
  store i32 1, i32* %status, align 4, !dbg !6971
  store i64 0, i64* %progress, align 8, !dbg !6972
  %57 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6973
  %exception85 = getelementptr inbounds %struct._Image, %struct._Image* %57, i32 0, i32 58, !dbg !6974
  store %struct._ExceptionInfo* %exception85, %struct._ExceptionInfo** %exception, align 8, !dbg !6975
  %58 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6976
  %59 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6977
  %call86 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %58, %struct._ExceptionInfo* %59), !dbg !6978
  store %struct._CacheView* %call86, %struct._CacheView** %image_view, align 8, !dbg !6979
  store i64 0, i64* %y, align 8, !dbg !6980
  br label %for.cond87, !dbg !6982

for.cond87:                                       ; preds = %for.inc231, %if.end84
  %60 = load i64, i64* %y, align 8, !dbg !6983
  %61 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6985
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %61, i32 0, i32 8, !dbg !6986
  %62 = load i64, i64* %rows, align 8, !dbg !6986
  %cmp88 = icmp slt i64 %60, %62, !dbg !6987
  br i1 %cmp88, label %for.body90, label %for.end233, !dbg !6988

for.body90:                                       ; preds = %for.cond87
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !6989, metadata !DIExpression()), !dbg !6991
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !6992, metadata !DIExpression()), !dbg !6993
  call void @llvm.dbg.declare(metadata i64* %x, metadata !6994, metadata !DIExpression()), !dbg !6995
  %63 = load i32, i32* %status, align 4, !dbg !6996
  %cmp91 = icmp eq i32 %63, 0, !dbg !6998
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !6999

if.then93:                                        ; preds = %for.body90
  br label %for.inc231, !dbg !7000

if.end94:                                         ; preds = %for.body90
  %64 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !7001
  %65 = load i64, i64* %y, align 8, !dbg !7002
  %66 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7003
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %66, i32 0, i32 7, !dbg !7004
  %67 = load i64, i64* %columns, align 8, !dbg !7004
  %68 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7005
  %call95 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %64, i64 0, i64 %65, i64 %67, i64 1, %struct._ExceptionInfo* %68), !dbg !7006
  store %struct._PixelPacket* %call95, %struct._PixelPacket** %q, align 8, !dbg !7007
  %69 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7008
  %cmp96 = icmp eq %struct._PixelPacket* %69, null, !dbg !7010
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !7011

if.then98:                                        ; preds = %if.end94
  store i32 0, i32* %status, align 4, !dbg !7012
  br label %for.inc231, !dbg !7014

if.end99:                                         ; preds = %if.end94
  %70 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !7015
  %call100 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %70), !dbg !7016
  store i16* %call100, i16** %indexes, align 8, !dbg !7017
  store i64 0, i64* %x, align 8, !dbg !7018
  br label %for.cond101, !dbg !7020

for.cond101:                                      ; preds = %for.inc212, %if.end99
  %71 = load i64, i64* %x, align 8, !dbg !7021
  %72 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7023
  %columns102 = getelementptr inbounds %struct._Image, %struct._Image* %72, i32 0, i32 7, !dbg !7024
  %73 = load i64, i64* %columns102, align 8, !dbg !7024
  %cmp103 = icmp slt i64 %71, %73, !dbg !7025
  br i1 %cmp103, label %for.body105, label %for.end214, !dbg !7026

for.body105:                                      ; preds = %for.cond101
  %74 = load i32, i32* %channel.addr, align 4, !dbg !7027
  %and106 = and i32 %74, 1, !dbg !7030
  %cmp107 = icmp ne i32 %and106, 0, !dbg !7031
  br i1 %cmp107, label %if.then109, label %if.end123, !dbg !7032

if.then109:                                       ; preds = %for.body105
  %75 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7033
  %red110 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %75, i32 0, i32 2, !dbg !7033
  %76 = load i16, i16* %red110, align 2, !dbg !7033
  %conv111 = zext i16 %76 to i32, !dbg !7033
  %conv112 = sitofp i32 %conv111 to double, !dbg !7033
  %mul113 = fmul double 0x3EF0001000100010, %conv112, !dbg !7033
  %77 = load double, double* %gamma.addr, align 8, !dbg !7033
  %call114 = call double @gamma_pow(double %mul113, double %77), !dbg !7033
  %conv115 = fptrunc double %call114 to float, !dbg !7033
  %conv116 = fpext float %conv115 to double, !dbg !7033
  %78 = load double, double* %white_point.addr, align 8, !dbg !7033
  %79 = load double, double* %black_point.addr, align 8, !dbg !7033
  %sub117 = fsub double %78, %79, !dbg !7033
  %mul118 = fmul double %conv116, %sub117, !dbg !7033
  %80 = load double, double* %black_point.addr, align 8, !dbg !7033
  %add119 = fadd double %mul118, %80, !dbg !7033
  %conv120 = fptrunc double %add119 to float, !dbg !7033
  %call121 = call zeroext i16 @ClampToQuantum(float %conv120), !dbg !7033
  %81 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7033
  %red122 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %81, i32 0, i32 2, !dbg !7033
  store i16 %call121, i16* %red122, align 2, !dbg !7033
  br label %if.end123, !dbg !7033

if.end123:                                        ; preds = %if.then109, %for.body105
  %82 = load i32, i32* %channel.addr, align 4, !dbg !7034
  %and124 = and i32 %82, 2, !dbg !7036
  %cmp125 = icmp ne i32 %and124, 0, !dbg !7037
  br i1 %cmp125, label %if.then127, label %if.end141, !dbg !7038

if.then127:                                       ; preds = %if.end123
  %83 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7039
  %green128 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %83, i32 0, i32 1, !dbg !7039
  %84 = load i16, i16* %green128, align 2, !dbg !7039
  %conv129 = zext i16 %84 to i32, !dbg !7039
  %conv130 = sitofp i32 %conv129 to double, !dbg !7039
  %mul131 = fmul double 0x3EF0001000100010, %conv130, !dbg !7039
  %85 = load double, double* %gamma.addr, align 8, !dbg !7039
  %call132 = call double @gamma_pow(double %mul131, double %85), !dbg !7039
  %conv133 = fptrunc double %call132 to float, !dbg !7039
  %conv134 = fpext float %conv133 to double, !dbg !7039
  %86 = load double, double* %white_point.addr, align 8, !dbg !7039
  %87 = load double, double* %black_point.addr, align 8, !dbg !7039
  %sub135 = fsub double %86, %87, !dbg !7039
  %mul136 = fmul double %conv134, %sub135, !dbg !7039
  %88 = load double, double* %black_point.addr, align 8, !dbg !7039
  %add137 = fadd double %mul136, %88, !dbg !7039
  %conv138 = fptrunc double %add137 to float, !dbg !7039
  %call139 = call zeroext i16 @ClampToQuantum(float %conv138), !dbg !7039
  %89 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7039
  %green140 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %89, i32 0, i32 1, !dbg !7039
  store i16 %call139, i16* %green140, align 2, !dbg !7039
  br label %if.end141, !dbg !7039

if.end141:                                        ; preds = %if.then127, %if.end123
  %90 = load i32, i32* %channel.addr, align 4, !dbg !7040
  %and142 = and i32 %90, 4, !dbg !7042
  %cmp143 = icmp ne i32 %and142, 0, !dbg !7043
  br i1 %cmp143, label %if.then145, label %if.end159, !dbg !7044

if.then145:                                       ; preds = %if.end141
  %91 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7045
  %blue146 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %91, i32 0, i32 0, !dbg !7045
  %92 = load i16, i16* %blue146, align 2, !dbg !7045
  %conv147 = zext i16 %92 to i32, !dbg !7045
  %conv148 = sitofp i32 %conv147 to double, !dbg !7045
  %mul149 = fmul double 0x3EF0001000100010, %conv148, !dbg !7045
  %93 = load double, double* %gamma.addr, align 8, !dbg !7045
  %call150 = call double @gamma_pow(double %mul149, double %93), !dbg !7045
  %conv151 = fptrunc double %call150 to float, !dbg !7045
  %conv152 = fpext float %conv151 to double, !dbg !7045
  %94 = load double, double* %white_point.addr, align 8, !dbg !7045
  %95 = load double, double* %black_point.addr, align 8, !dbg !7045
  %sub153 = fsub double %94, %95, !dbg !7045
  %mul154 = fmul double %conv152, %sub153, !dbg !7045
  %96 = load double, double* %black_point.addr, align 8, !dbg !7045
  %add155 = fadd double %mul154, %96, !dbg !7045
  %conv156 = fptrunc double %add155 to float, !dbg !7045
  %call157 = call zeroext i16 @ClampToQuantum(float %conv156), !dbg !7045
  %97 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7045
  %blue158 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %97, i32 0, i32 0, !dbg !7045
  store i16 %call157, i16* %blue158, align 2, !dbg !7045
  br label %if.end159, !dbg !7045

if.end159:                                        ; preds = %if.then145, %if.end141
  %98 = load i32, i32* %channel.addr, align 4, !dbg !7046
  %and160 = and i32 %98, 8, !dbg !7048
  %cmp161 = icmp ne i32 %and160, 0, !dbg !7049
  br i1 %cmp161, label %land.lhs.true, label %if.end183, !dbg !7050

land.lhs.true:                                    ; preds = %if.end159
  %99 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7051
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %99, i32 0, i32 6, !dbg !7052
  %100 = load i32, i32* %matte, align 8, !dbg !7052
  %cmp163 = icmp ne i32 %100, 0, !dbg !7053
  br i1 %cmp163, label %if.then165, label %if.end183, !dbg !7054

if.then165:                                       ; preds = %land.lhs.true
  %101 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7055
  %opacity166 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %101, i32 0, i32 3, !dbg !7055
  %102 = load i16, i16* %opacity166, align 2, !dbg !7055
  %conv167 = zext i16 %102 to i32, !dbg !7055
  %sub168 = sub nsw i32 65535, %conv167, !dbg !7055
  %conv169 = sitofp i32 %sub168 to double, !dbg !7055
  %mul170 = fmul double 0x3EF0001000100010, %conv169, !dbg !7055
  %103 = load double, double* %gamma.addr, align 8, !dbg !7055
  %call171 = call double @gamma_pow(double %mul170, double %103), !dbg !7055
  %conv172 = fptrunc double %call171 to float, !dbg !7055
  %conv173 = fpext float %conv172 to double, !dbg !7055
  %104 = load double, double* %white_point.addr, align 8, !dbg !7055
  %105 = load double, double* %black_point.addr, align 8, !dbg !7055
  %sub174 = fsub double %104, %105, !dbg !7055
  %mul175 = fmul double %conv173, %sub174, !dbg !7055
  %106 = load double, double* %black_point.addr, align 8, !dbg !7055
  %add176 = fadd double %mul175, %106, !dbg !7055
  %conv177 = fptrunc double %add176 to float, !dbg !7055
  %call178 = call zeroext i16 @ClampToQuantum(float %conv177), !dbg !7055
  %conv179 = zext i16 %call178 to i32, !dbg !7055
  %sub180 = sub nsw i32 65535, %conv179, !dbg !7055
  %conv181 = trunc i32 %sub180 to i16, !dbg !7055
  %107 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7055
  %opacity182 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %107, i32 0, i32 3, !dbg !7055
  store i16 %conv181, i16* %opacity182, align 2, !dbg !7055
  br label %if.end183, !dbg !7055

if.end183:                                        ; preds = %if.then165, %land.lhs.true, %if.end159
  %108 = load i32, i32* %channel.addr, align 4, !dbg !7056
  %and184 = and i32 %108, 32, !dbg !7058
  %cmp185 = icmp ne i32 %and184, 0, !dbg !7059
  br i1 %cmp185, label %land.lhs.true187, label %if.end211, !dbg !7060

land.lhs.true187:                                 ; preds = %if.end183
  %109 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7061
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %109, i32 0, i32 1, !dbg !7062
  %110 = load i32, i32* %colorspace, align 4, !dbg !7062
  %cmp188 = icmp eq i32 %110, 12, !dbg !7063
  br i1 %cmp188, label %if.then190, label %if.end211, !dbg !7064

if.then190:                                       ; preds = %land.lhs.true187
  %111 = load i16*, i16** %indexes, align 8, !dbg !7065
  %112 = load i64, i64* %x, align 8, !dbg !7065
  %add.ptr = getelementptr inbounds i16, i16* %111, i64 %112, !dbg !7065
  %cmp191 = icmp ne i16* %add.ptr, null, !dbg !7065
  br i1 %cmp191, label %if.then193, label %if.end210, !dbg !7068

if.then193:                                       ; preds = %if.then190
  %113 = load i16*, i16** %indexes, align 8, !dbg !7065
  %114 = load i64, i64* %x, align 8, !dbg !7065
  %add.ptr194 = getelementptr inbounds i16, i16* %113, i64 %114, !dbg !7065
  %cmp195 = icmp eq i16* %add.ptr194, null, !dbg !7065
  br i1 %cmp195, label %cond.true, label %cond.false, !dbg !7065

cond.true:                                        ; preds = %if.then193
  br label %cond.end, !dbg !7065

cond.false:                                       ; preds = %if.then193
  %115 = load i16*, i16** %indexes, align 8, !dbg !7065
  %116 = load i64, i64* %x, align 8, !dbg !7065
  %add.ptr197 = getelementptr inbounds i16, i16* %115, i64 %116, !dbg !7065
  %117 = load i16, i16* %add.ptr197, align 2, !dbg !7065
  %conv198 = zext i16 %117 to i32, !dbg !7065
  br label %cond.end, !dbg !7065

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv198, %cond.false ], !dbg !7065
  %conv199 = sitofp i32 %cond to double, !dbg !7065
  %mul200 = fmul double 0x3EF0001000100010, %conv199, !dbg !7065
  %118 = load double, double* %gamma.addr, align 8, !dbg !7065
  %call201 = call double @gamma_pow(double %mul200, double %118), !dbg !7065
  %conv202 = fptrunc double %call201 to float, !dbg !7065
  %conv203 = fpext float %conv202 to double, !dbg !7065
  %119 = load double, double* %white_point.addr, align 8, !dbg !7065
  %120 = load double, double* %black_point.addr, align 8, !dbg !7065
  %sub204 = fsub double %119, %120, !dbg !7065
  %mul205 = fmul double %conv203, %sub204, !dbg !7065
  %121 = load double, double* %black_point.addr, align 8, !dbg !7065
  %add206 = fadd double %mul205, %121, !dbg !7065
  %conv207 = fptrunc double %add206 to float, !dbg !7065
  %call208 = call zeroext i16 @ClampToQuantum(float %conv207), !dbg !7065
  %122 = load i16*, i16** %indexes, align 8, !dbg !7065
  %123 = load i64, i64* %x, align 8, !dbg !7065
  %add.ptr209 = getelementptr inbounds i16, i16* %122, i64 %123, !dbg !7065
  store i16 %call208, i16* %add.ptr209, align 2, !dbg !7065
  br label %if.end210, !dbg !7065

if.end210:                                        ; preds = %cond.end, %if.then190
  br label %if.end211, !dbg !7068

if.end211:                                        ; preds = %if.end210, %land.lhs.true187, %if.end183
  %124 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7069
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %124, i32 1, !dbg !7069
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !7069
  br label %for.inc212, !dbg !7070

for.inc212:                                       ; preds = %if.end211
  %125 = load i64, i64* %x, align 8, !dbg !7071
  %inc213 = add nsw i64 %125, 1, !dbg !7071
  store i64 %inc213, i64* %x, align 8, !dbg !7071
  br label %for.cond101, !dbg !7072, !llvm.loop !7073

for.end214:                                       ; preds = %for.cond101
  %126 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !7075
  %127 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7077
  %call215 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %126, %struct._ExceptionInfo* %127), !dbg !7078
  %cmp216 = icmp eq i32 %call215, 0, !dbg !7079
  br i1 %cmp216, label %if.then218, label %if.end219, !dbg !7080

if.then218:                                       ; preds = %for.end214
  store i32 0, i32* %status, align 4, !dbg !7081
  br label %if.end219, !dbg !7082

if.end219:                                        ; preds = %if.then218, %for.end214
  %128 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7083
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %128, i32 0, i32 47, !dbg !7085
  %129 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !7085
  %cmp220 = icmp ne i32 (i8*, i64, i64, i8*)* %129, null, !dbg !7086
  br i1 %cmp220, label %if.then222, label %if.end230, !dbg !7087

if.then222:                                       ; preds = %if.end219
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !7088, metadata !DIExpression()), !dbg !7090
  %130 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7091
  %131 = load i64, i64* %progress, align 8, !dbg !7092
  %inc223 = add nsw i64 %131, 1, !dbg !7092
  store i64 %inc223, i64* %progress, align 8, !dbg !7092
  %132 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7093
  %rows224 = getelementptr inbounds %struct._Image, %struct._Image* %132, i32 0, i32 8, !dbg !7094
  %133 = load i64, i64* %rows224, align 8, !dbg !7094
  %call225 = call i32 @SetImageProgress(%struct._Image* %130, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i64 0, i64 0), i64 %131, i64 %133), !dbg !7095
  store i32 %call225, i32* %proceed, align 4, !dbg !7096
  %134 = load i32, i32* %proceed, align 4, !dbg !7097
  %cmp226 = icmp eq i32 %134, 0, !dbg !7099
  br i1 %cmp226, label %if.then228, label %if.end229, !dbg !7100

if.then228:                                       ; preds = %if.then222
  store i32 0, i32* %status, align 4, !dbg !7101
  br label %if.end229, !dbg !7102

if.end229:                                        ; preds = %if.then228, %if.then222
  br label %if.end230, !dbg !7103

if.end230:                                        ; preds = %if.end229, %if.end219
  br label %for.inc231, !dbg !7104

for.inc231:                                       ; preds = %if.end230, %if.then98, %if.then93
  %135 = load i64, i64* %y, align 8, !dbg !7105
  %inc232 = add nsw i64 %135, 1, !dbg !7105
  store i64 %inc232, i64* %y, align 8, !dbg !7105
  br label %for.cond87, !dbg !7106, !llvm.loop !7107

for.end233:                                       ; preds = %for.cond87
  %136 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !7109
  %call234 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %136), !dbg !7110
  store %struct._CacheView* %call234, %struct._CacheView** %image_view, align 8, !dbg !7111
  %137 = load i32, i32* %status, align 4, !dbg !7112
  ret i32 %137, !dbg !7113
}

; Function Attrs: noinline nounwind uwtable
define internal double @gamma_pow(double %value, double %gamma) #0 !dbg !7114 {
entry:
  %value.addr = alloca double, align 8
  %gamma.addr = alloca double, align 8
  store double %value, double* %value.addr, align 8
  call void @llvm.dbg.declare(metadata double* %value.addr, metadata !7117, metadata !DIExpression()), !dbg !7118
  store double %gamma, double* %gamma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %gamma.addr, metadata !7119, metadata !DIExpression()), !dbg !7120
  %0 = load double, double* %value.addr, align 8, !dbg !7121
  %cmp = fcmp olt double %0, 0.000000e+00, !dbg !7122
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7121

cond.true:                                        ; preds = %entry
  %1 = load double, double* %value.addr, align 8, !dbg !7123
  br label %cond.end, !dbg !7121

cond.false:                                       ; preds = %entry
  %2 = load double, double* %value.addr, align 8, !dbg !7124
  %3 = load double, double* %gamma.addr, align 8, !dbg !7125
  %call = call double @pow(double %2, double %3) #6, !dbg !7126
  br label %cond.end, !dbg !7121

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %1, %cond.true ], [ %call, %cond.false ], !dbg !7121
  ret double %cond, !dbg !7127
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @LevelColorsImage(%struct._Image* %image, %struct._MagickPixelPacket* %black_color, %struct._MagickPixelPacket* %white_color, i32 %invert) #0 !dbg !7128 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %black_color.addr = alloca %struct._MagickPixelPacket*, align 8
  %white_color.addr = alloca %struct._MagickPixelPacket*, align 8
  %invert.addr = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7131, metadata !DIExpression()), !dbg !7132
  store %struct._MagickPixelPacket* %black_color, %struct._MagickPixelPacket** %black_color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %black_color.addr, metadata !7133, metadata !DIExpression()), !dbg !7134
  store %struct._MagickPixelPacket* %white_color, %struct._MagickPixelPacket** %white_color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %white_color.addr, metadata !7135, metadata !DIExpression()), !dbg !7136
  store i32 %invert, i32* %invert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %invert.addr, metadata !7137, metadata !DIExpression()), !dbg !7138
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7139, metadata !DIExpression()), !dbg !7140
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7141
  %1 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %black_color.addr, align 8, !dbg !7142
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %white_color.addr, align 8, !dbg !7143
  %3 = load i32, i32* %invert.addr, align 4, !dbg !7144
  %call = call i32 @LevelColorsImageChannel(%struct._Image* %0, i32 134217719, %struct._MagickPixelPacket* %1, %struct._MagickPixelPacket* %2, i32 %3), !dbg !7145
  store i32 %call, i32* %status, align 4, !dbg !7146
  %4 = load i32, i32* %status, align 4, !dbg !7147
  ret i32 %4, !dbg !7148
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @LevelColorsImageChannel(%struct._Image* %image, i32 %channel, %struct._MagickPixelPacket* %black_color, %struct._MagickPixelPacket* %white_color, i32 %invert) #0 !dbg !7149 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %black_color.addr = alloca %struct._MagickPixelPacket*, align 8
  %white_color.addr = alloca %struct._MagickPixelPacket*, align 8
  %invert.addr = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7152, metadata !DIExpression()), !dbg !7153
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !7154, metadata !DIExpression()), !dbg !7155
  store %struct._MagickPixelPacket* %black_color, %struct._MagickPixelPacket** %black_color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %black_color.addr, metadata !7156, metadata !DIExpression()), !dbg !7157
  store %struct._MagickPixelPacket* %white_color, %struct._MagickPixelPacket** %white_color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %white_color.addr, metadata !7158, metadata !DIExpression()), !dbg !7159
  store i32 %invert, i32* %invert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %invert.addr, metadata !7160, metadata !DIExpression()), !dbg !7161
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7162, metadata !DIExpression()), !dbg !7163
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7164
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !7166
  %1 = load i32, i32* %debug, align 8, !dbg !7166
  %cmp = icmp ne i32 %1, 0, !dbg !7167
  br i1 %cmp, label %if.then, label %if.end, !dbg !7168

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7169
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !7170
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !7169
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3294, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7171
  br label %if.end, !dbg !7172

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7173
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 1, !dbg !7175
  %4 = load i32, i32* %colorspace, align 4, !dbg !7175
  %call1 = call i32 @IsGrayColorspace(i32 %4), !dbg !7176
  %cmp2 = icmp ne i32 %call1, 0, !dbg !7177
  br i1 %cmp2, label %land.lhs.true, label %if.end11, !dbg !7178

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %black_color.addr, align 8, !dbg !7179
  %colorspace3 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %5, i32 0, i32 1, !dbg !7180
  %6 = load i32, i32* %colorspace3, align 4, !dbg !7180
  %call4 = call i32 @IsGrayColorspace(i32 %6), !dbg !7181
  %cmp5 = icmp eq i32 %call4, 0, !dbg !7182
  br i1 %cmp5, label %if.then9, label %lor.lhs.false, !dbg !7183

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %white_color.addr, align 8, !dbg !7184
  %colorspace6 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %7, i32 0, i32 1, !dbg !7185
  %8 = load i32, i32* %colorspace6, align 4, !dbg !7185
  %call7 = call i32 @IsGrayColorspace(i32 %8), !dbg !7186
  %cmp8 = icmp eq i32 %call7, 0, !dbg !7187
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !7188

if.then9:                                         ; preds = %lor.lhs.false, %land.lhs.true
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7189
  %call10 = call i32 @SetImageColorspace(%struct._Image* %9, i32 13), !dbg !7190
  br label %if.end11, !dbg !7191

if.end11:                                         ; preds = %if.then9, %lor.lhs.false, %if.end
  store i32 1, i32* %status, align 4, !dbg !7192
  %10 = load i32, i32* %invert.addr, align 4, !dbg !7193
  %cmp12 = icmp eq i32 %10, 0, !dbg !7195
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !7196

if.then13:                                        ; preds = %if.end11
  %11 = load i32, i32* %channel.addr, align 4, !dbg !7197
  %and = and i32 %11, 1, !dbg !7200
  %cmp14 = icmp ne i32 %and, 0, !dbg !7201
  br i1 %cmp14, label %if.then15, label %if.end20, !dbg !7202

if.then15:                                        ; preds = %if.then13
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7203
  %13 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %black_color.addr, align 8, !dbg !7204
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %13, i32 0, i32 5, !dbg !7205
  %14 = load float, float* %red, align 8, !dbg !7205
  %conv = fpext float %14 to double, !dbg !7204
  %15 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %white_color.addr, align 8, !dbg !7206
  %red16 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %15, i32 0, i32 5, !dbg !7207
  %16 = load float, float* %red16, align 8, !dbg !7207
  %conv17 = fpext float %16 to double, !dbg !7206
  %call18 = call i32 @LevelImageChannel(%struct._Image* %12, i32 1, double %conv, double %conv17, double 1.000000e+00), !dbg !7208
  %17 = load i32, i32* %status, align 4, !dbg !7209
  %and19 = and i32 %17, %call18, !dbg !7209
  store i32 %and19, i32* %status, align 4, !dbg !7209
  br label %if.end20, !dbg !7210

if.end20:                                         ; preds = %if.then15, %if.then13
  %18 = load i32, i32* %channel.addr, align 4, !dbg !7211
  %and21 = and i32 %18, 2, !dbg !7213
  %cmp22 = icmp ne i32 %and21, 0, !dbg !7214
  br i1 %cmp22, label %if.then24, label %if.end30, !dbg !7215

if.then24:                                        ; preds = %if.end20
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7216
  %20 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %black_color.addr, align 8, !dbg !7217
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %20, i32 0, i32 6, !dbg !7218
  %21 = load float, float* %green, align 4, !dbg !7218
  %conv25 = fpext float %21 to double, !dbg !7217
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %white_color.addr, align 8, !dbg !7219
  %green26 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 6, !dbg !7220
  %23 = load float, float* %green26, align 4, !dbg !7220
  %conv27 = fpext float %23 to double, !dbg !7219
  %call28 = call i32 @LevelImageChannel(%struct._Image* %19, i32 2, double %conv25, double %conv27, double 1.000000e+00), !dbg !7221
  %24 = load i32, i32* %status, align 4, !dbg !7222
  %and29 = and i32 %24, %call28, !dbg !7222
  store i32 %and29, i32* %status, align 4, !dbg !7222
  br label %if.end30, !dbg !7223

if.end30:                                         ; preds = %if.then24, %if.end20
  %25 = load i32, i32* %channel.addr, align 4, !dbg !7224
  %and31 = and i32 %25, 4, !dbg !7226
  %cmp32 = icmp ne i32 %and31, 0, !dbg !7227
  br i1 %cmp32, label %if.then34, label %if.end40, !dbg !7228

if.then34:                                        ; preds = %if.end30
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7229
  %27 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %black_color.addr, align 8, !dbg !7230
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %27, i32 0, i32 7, !dbg !7231
  %28 = load float, float* %blue, align 8, !dbg !7231
  %conv35 = fpext float %28 to double, !dbg !7230
  %29 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %white_color.addr, align 8, !dbg !7232
  %blue36 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %29, i32 0, i32 7, !dbg !7233
  %30 = load float, float* %blue36, align 8, !dbg !7233
  %conv37 = fpext float %30 to double, !dbg !7232
  %call38 = call i32 @LevelImageChannel(%struct._Image* %26, i32 4, double %conv35, double %conv37, double 1.000000e+00), !dbg !7234
  %31 = load i32, i32* %status, align 4, !dbg !7235
  %and39 = and i32 %31, %call38, !dbg !7235
  store i32 %and39, i32* %status, align 4, !dbg !7235
  br label %if.end40, !dbg !7236

if.end40:                                         ; preds = %if.then34, %if.end30
  %32 = load i32, i32* %channel.addr, align 4, !dbg !7237
  %and41 = and i32 %32, 8, !dbg !7239
  %cmp42 = icmp ne i32 %and41, 0, !dbg !7240
  br i1 %cmp42, label %land.lhs.true44, label %if.end53, !dbg !7241

land.lhs.true44:                                  ; preds = %if.end40
  %33 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7242
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %33, i32 0, i32 6, !dbg !7243
  %34 = load i32, i32* %matte, align 8, !dbg !7243
  %cmp45 = icmp ne i32 %34, 0, !dbg !7244
  br i1 %cmp45, label %if.then47, label %if.end53, !dbg !7245

if.then47:                                        ; preds = %land.lhs.true44
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7246
  %36 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %black_color.addr, align 8, !dbg !7247
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %36, i32 0, i32 8, !dbg !7248
  %37 = load float, float* %opacity, align 4, !dbg !7248
  %conv48 = fpext float %37 to double, !dbg !7247
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %white_color.addr, align 8, !dbg !7249
  %opacity49 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 8, !dbg !7250
  %39 = load float, float* %opacity49, align 4, !dbg !7250
  %conv50 = fpext float %39 to double, !dbg !7249
  %call51 = call i32 @LevelImageChannel(%struct._Image* %35, i32 8, double %conv48, double %conv50, double 1.000000e+00), !dbg !7251
  %40 = load i32, i32* %status, align 4, !dbg !7252
  %and52 = and i32 %40, %call51, !dbg !7252
  store i32 %and52, i32* %status, align 4, !dbg !7252
  br label %if.end53, !dbg !7253

if.end53:                                         ; preds = %if.then47, %land.lhs.true44, %if.end40
  %41 = load i32, i32* %channel.addr, align 4, !dbg !7254
  %and54 = and i32 %41, 32, !dbg !7256
  %cmp55 = icmp ne i32 %and54, 0, !dbg !7257
  br i1 %cmp55, label %land.lhs.true57, label %if.end67, !dbg !7258

land.lhs.true57:                                  ; preds = %if.end53
  %42 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7259
  %colorspace58 = getelementptr inbounds %struct._Image, %struct._Image* %42, i32 0, i32 1, !dbg !7260
  %43 = load i32, i32* %colorspace58, align 4, !dbg !7260
  %cmp59 = icmp eq i32 %43, 12, !dbg !7261
  br i1 %cmp59, label %if.then61, label %if.end67, !dbg !7262

if.then61:                                        ; preds = %land.lhs.true57
  %44 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7263
  %45 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %black_color.addr, align 8, !dbg !7264
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %45, i32 0, i32 9, !dbg !7265
  %46 = load float, float* %index, align 8, !dbg !7265
  %conv62 = fpext float %46 to double, !dbg !7264
  %47 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %white_color.addr, align 8, !dbg !7266
  %index63 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %47, i32 0, i32 9, !dbg !7267
  %48 = load float, float* %index63, align 8, !dbg !7267
  %conv64 = fpext float %48 to double, !dbg !7266
  %call65 = call i32 @LevelImageChannel(%struct._Image* %44, i32 32, double %conv62, double %conv64, double 1.000000e+00), !dbg !7268
  %49 = load i32, i32* %status, align 4, !dbg !7269
  %and66 = and i32 %49, %call65, !dbg !7269
  store i32 %and66, i32* %status, align 4, !dbg !7269
  br label %if.end67, !dbg !7270

if.end67:                                         ; preds = %if.then61, %land.lhs.true57, %if.end53
  br label %if.end131, !dbg !7271

if.else:                                          ; preds = %if.end11
  %50 = load i32, i32* %channel.addr, align 4, !dbg !7272
  %and68 = and i32 %50, 1, !dbg !7275
  %cmp69 = icmp ne i32 %and68, 0, !dbg !7276
  br i1 %cmp69, label %if.then71, label %if.end78, !dbg !7277

if.then71:                                        ; preds = %if.else
  %51 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7278
  %52 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %black_color.addr, align 8, !dbg !7279
  %red72 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %52, i32 0, i32 5, !dbg !7280
  %53 = load float, float* %red72, align 8, !dbg !7280
  %conv73 = fpext float %53 to double, !dbg !7279
  %54 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %white_color.addr, align 8, !dbg !7281
  %red74 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %54, i32 0, i32 5, !dbg !7282
  %55 = load float, float* %red74, align 8, !dbg !7282
  %conv75 = fpext float %55 to double, !dbg !7281
  %call76 = call i32 @LevelizeImageChannel(%struct._Image* %51, i32 1, double %conv73, double %conv75, double 1.000000e+00), !dbg !7283
  %56 = load i32, i32* %status, align 4, !dbg !7284
  %and77 = and i32 %56, %call76, !dbg !7284
  store i32 %and77, i32* %status, align 4, !dbg !7284
  br label %if.end78, !dbg !7285

if.end78:                                         ; preds = %if.then71, %if.else
  %57 = load i32, i32* %channel.addr, align 4, !dbg !7286
  %and79 = and i32 %57, 2, !dbg !7288
  %cmp80 = icmp ne i32 %and79, 0, !dbg !7289
  br i1 %cmp80, label %if.then82, label %if.end89, !dbg !7290

if.then82:                                        ; preds = %if.end78
  %58 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7291
  %59 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %black_color.addr, align 8, !dbg !7292
  %green83 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %59, i32 0, i32 6, !dbg !7293
  %60 = load float, float* %green83, align 4, !dbg !7293
  %conv84 = fpext float %60 to double, !dbg !7292
  %61 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %white_color.addr, align 8, !dbg !7294
  %green85 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %61, i32 0, i32 6, !dbg !7295
  %62 = load float, float* %green85, align 4, !dbg !7295
  %conv86 = fpext float %62 to double, !dbg !7294
  %call87 = call i32 @LevelizeImageChannel(%struct._Image* %58, i32 2, double %conv84, double %conv86, double 1.000000e+00), !dbg !7296
  %63 = load i32, i32* %status, align 4, !dbg !7297
  %and88 = and i32 %63, %call87, !dbg !7297
  store i32 %and88, i32* %status, align 4, !dbg !7297
  br label %if.end89, !dbg !7298

if.end89:                                         ; preds = %if.then82, %if.end78
  %64 = load i32, i32* %channel.addr, align 4, !dbg !7299
  %and90 = and i32 %64, 4, !dbg !7301
  %cmp91 = icmp ne i32 %and90, 0, !dbg !7302
  br i1 %cmp91, label %if.then93, label %if.end100, !dbg !7303

if.then93:                                        ; preds = %if.end89
  %65 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7304
  %66 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %black_color.addr, align 8, !dbg !7305
  %blue94 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %66, i32 0, i32 7, !dbg !7306
  %67 = load float, float* %blue94, align 8, !dbg !7306
  %conv95 = fpext float %67 to double, !dbg !7305
  %68 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %white_color.addr, align 8, !dbg !7307
  %blue96 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %68, i32 0, i32 7, !dbg !7308
  %69 = load float, float* %blue96, align 8, !dbg !7308
  %conv97 = fpext float %69 to double, !dbg !7307
  %call98 = call i32 @LevelizeImageChannel(%struct._Image* %65, i32 4, double %conv95, double %conv97, double 1.000000e+00), !dbg !7309
  %70 = load i32, i32* %status, align 4, !dbg !7310
  %and99 = and i32 %70, %call98, !dbg !7310
  store i32 %and99, i32* %status, align 4, !dbg !7310
  br label %if.end100, !dbg !7311

if.end100:                                        ; preds = %if.then93, %if.end89
  %71 = load i32, i32* %channel.addr, align 4, !dbg !7312
  %and101 = and i32 %71, 8, !dbg !7314
  %cmp102 = icmp ne i32 %and101, 0, !dbg !7315
  br i1 %cmp102, label %land.lhs.true104, label %if.end115, !dbg !7316

land.lhs.true104:                                 ; preds = %if.end100
  %72 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7317
  %matte105 = getelementptr inbounds %struct._Image, %struct._Image* %72, i32 0, i32 6, !dbg !7318
  %73 = load i32, i32* %matte105, align 8, !dbg !7318
  %cmp106 = icmp ne i32 %73, 0, !dbg !7319
  br i1 %cmp106, label %if.then108, label %if.end115, !dbg !7320

if.then108:                                       ; preds = %land.lhs.true104
  %74 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7321
  %75 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %black_color.addr, align 8, !dbg !7322
  %opacity109 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %75, i32 0, i32 8, !dbg !7323
  %76 = load float, float* %opacity109, align 4, !dbg !7323
  %conv110 = fpext float %76 to double, !dbg !7322
  %77 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %white_color.addr, align 8, !dbg !7324
  %opacity111 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %77, i32 0, i32 8, !dbg !7325
  %78 = load float, float* %opacity111, align 4, !dbg !7325
  %conv112 = fpext float %78 to double, !dbg !7324
  %call113 = call i32 @LevelizeImageChannel(%struct._Image* %74, i32 8, double %conv110, double %conv112, double 1.000000e+00), !dbg !7326
  %79 = load i32, i32* %status, align 4, !dbg !7327
  %and114 = and i32 %79, %call113, !dbg !7327
  store i32 %and114, i32* %status, align 4, !dbg !7327
  br label %if.end115, !dbg !7328

if.end115:                                        ; preds = %if.then108, %land.lhs.true104, %if.end100
  %80 = load i32, i32* %channel.addr, align 4, !dbg !7329
  %and116 = and i32 %80, 32, !dbg !7331
  %cmp117 = icmp ne i32 %and116, 0, !dbg !7332
  br i1 %cmp117, label %land.lhs.true119, label %if.end130, !dbg !7333

land.lhs.true119:                                 ; preds = %if.end115
  %81 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7334
  %colorspace120 = getelementptr inbounds %struct._Image, %struct._Image* %81, i32 0, i32 1, !dbg !7335
  %82 = load i32, i32* %colorspace120, align 4, !dbg !7335
  %cmp121 = icmp eq i32 %82, 12, !dbg !7336
  br i1 %cmp121, label %if.then123, label %if.end130, !dbg !7337

if.then123:                                       ; preds = %land.lhs.true119
  %83 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7338
  %84 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %black_color.addr, align 8, !dbg !7339
  %index124 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %84, i32 0, i32 9, !dbg !7340
  %85 = load float, float* %index124, align 8, !dbg !7340
  %conv125 = fpext float %85 to double, !dbg !7339
  %86 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %white_color.addr, align 8, !dbg !7341
  %index126 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %86, i32 0, i32 9, !dbg !7342
  %87 = load float, float* %index126, align 8, !dbg !7342
  %conv127 = fpext float %87 to double, !dbg !7341
  %call128 = call i32 @LevelizeImageChannel(%struct._Image* %83, i32 32, double %conv125, double %conv127, double 1.000000e+00), !dbg !7343
  %88 = load i32, i32* %status, align 4, !dbg !7344
  %and129 = and i32 %88, %call128, !dbg !7344
  store i32 %and129, i32* %status, align 4, !dbg !7344
  br label %if.end130, !dbg !7345

if.end130:                                        ; preds = %if.then123, %land.lhs.true119, %if.end115
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.end67
  %89 = load i32, i32* %status, align 4, !dbg !7346
  %cmp132 = icmp eq i32 %89, 0, !dbg !7347
  %90 = zext i1 %cmp132 to i64, !dbg !7346
  %cond = select i1 %cmp132, i32 0, i32 1, !dbg !7346
  ret i32 %cond, !dbg !7348
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @LinearStretchImage(%struct._Image* %image, double %black_point, double %white_point) #0 !dbg !7349 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %black_point.addr = alloca double, align 8
  %white_point.addr = alloca double, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  %histogram = alloca float*, align 8
  %intensity = alloca float, align 4
  %black = alloca i64, align 8
  %white = alloca i64, align 8
  %y = alloca i64, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7350, metadata !DIExpression()), !dbg !7351
  store double %black_point, double* %black_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %black_point.addr, metadata !7352, metadata !DIExpression()), !dbg !7353
  store double %white_point, double* %white_point.addr, align 8
  call void @llvm.dbg.declare(metadata double* %white_point.addr, metadata !7354, metadata !DIExpression()), !dbg !7355
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !7356, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7358, metadata !DIExpression()), !dbg !7359
  call void @llvm.dbg.declare(metadata float** %histogram, metadata !7360, metadata !DIExpression()), !dbg !7361
  call void @llvm.dbg.declare(metadata float* %intensity, metadata !7362, metadata !DIExpression()), !dbg !7363
  call void @llvm.dbg.declare(metadata i64* %black, metadata !7364, metadata !DIExpression()), !dbg !7365
  call void @llvm.dbg.declare(metadata i64* %white, metadata !7366, metadata !DIExpression()), !dbg !7367
  call void @llvm.dbg.declare(metadata i64* %y, metadata !7368, metadata !DIExpression()), !dbg !7369
  %call = call i8* @AcquireQuantumMemory(i64 65536, i64 4) #7, !dbg !7370
  %0 = bitcast i8* %call to float*, !dbg !7371
  store float* %0, float** %histogram, align 8, !dbg !7372
  %1 = load float*, float** %histogram, align 8, !dbg !7373
  %cmp = icmp eq float* %1, null, !dbg !7375
  br i1 %cmp, label %if.then, label %if.end5, !dbg !7376

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7377
  %cmp1 = icmp ne %struct._Image* %2, null, !dbg !7377
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !7380

if.then2:                                         ; preds = %if.then
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7377
  %exception3 = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 58, !dbg !7377
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7377
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 53, !dbg !7377
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !7377
  %call4 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3400, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay), !dbg !7377
  br label %if.end, !dbg !7377

if.end:                                           ; preds = %if.then2, %if.then
  store i32 0, i32* %retval, align 4, !dbg !7380
  br label %return, !dbg !7380

if.end5:                                          ; preds = %entry
  %5 = load float*, float** %histogram, align 8, !dbg !7381
  %6 = bitcast float* %5 to i8*, !dbg !7381
  %call6 = call i8* @ResetMagickMemory(i8* %6, i32 0, i64 262144), !dbg !7382
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7383
  %exception7 = getelementptr inbounds %struct._Image, %struct._Image* %7, i32 0, i32 58, !dbg !7384
  store %struct._ExceptionInfo* %exception7, %struct._ExceptionInfo** %exception, align 8, !dbg !7385
  store i64 0, i64* %y, align 8, !dbg !7386
  br label %for.cond, !dbg !7388

for.cond:                                         ; preds = %for.inc20, %if.end5
  %8 = load i64, i64* %y, align 8, !dbg !7389
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7391
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 8, !dbg !7392
  %10 = load i64, i64* %rows, align 8, !dbg !7392
  %cmp8 = icmp slt i64 %8, %10, !dbg !7393
  br i1 %cmp8, label %for.body, label %for.end22, !dbg !7394

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !7395, metadata !DIExpression()), !dbg !7397
  call void @llvm.dbg.declare(metadata i64* %x, metadata !7398, metadata !DIExpression()), !dbg !7399
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7400
  %12 = load i64, i64* %y, align 8, !dbg !7401
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7402
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 7, !dbg !7403
  %14 = load i64, i64* %columns, align 8, !dbg !7403
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7404
  %call9 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %11, i64 0, i64 %12, i64 %14, i64 1, %struct._ExceptionInfo* %15), !dbg !7405
  store %struct._PixelPacket* %call9, %struct._PixelPacket** %p, align 8, !dbg !7406
  %16 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7407
  %cmp10 = icmp eq %struct._PixelPacket* %16, null, !dbg !7409
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !7410

if.then11:                                        ; preds = %for.body
  br label %for.end22, !dbg !7411

if.end12:                                         ; preds = %for.body
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7412
  %columns13 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 7, !dbg !7414
  %18 = load i64, i64* %columns13, align 8, !dbg !7414
  %sub = sub nsw i64 %18, 1, !dbg !7415
  store i64 %sub, i64* %x, align 8, !dbg !7416
  br label %for.cond14, !dbg !7417

for.cond14:                                       ; preds = %for.inc, %if.end12
  %19 = load i64, i64* %x, align 8, !dbg !7418
  %cmp15 = icmp sge i64 %19, 0, !dbg !7420
  br i1 %cmp15, label %for.body16, label %for.end, !dbg !7421

for.body16:                                       ; preds = %for.cond14
  %20 = load float*, float** %histogram, align 8, !dbg !7422
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7424
  %22 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7425
  %call17 = call float @GetPixelIntensity(%struct._Image* %21, %struct._PixelPacket* %22), !dbg !7426
  %call18 = call zeroext i16 @ClampToQuantum(float %call17), !dbg !7427
  %call19 = call i32 @ScaleQuantumToMap(i16 zeroext %call18), !dbg !7428
  %idxprom = zext i32 %call19 to i64, !dbg !7422
  %arrayidx = getelementptr inbounds float, float* %20, i64 %idxprom, !dbg !7422
  %23 = load float, float* %arrayidx, align 4, !dbg !7429
  %inc = fadd float %23, 1.000000e+00, !dbg !7429
  store float %inc, float* %arrayidx, align 4, !dbg !7429
  %24 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7430
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %24, i32 1, !dbg !7430
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p, align 8, !dbg !7430
  br label %for.inc, !dbg !7431

for.inc:                                          ; preds = %for.body16
  %25 = load i64, i64* %x, align 8, !dbg !7432
  %dec = add nsw i64 %25, -1, !dbg !7432
  store i64 %dec, i64* %x, align 8, !dbg !7432
  br label %for.cond14, !dbg !7433, !llvm.loop !7434

for.end:                                          ; preds = %for.cond14
  br label %for.inc20, !dbg !7436

for.inc20:                                        ; preds = %for.end
  %26 = load i64, i64* %y, align 8, !dbg !7437
  %inc21 = add nsw i64 %26, 1, !dbg !7437
  store i64 %inc21, i64* %y, align 8, !dbg !7437
  br label %for.cond, !dbg !7438, !llvm.loop !7439

for.end22:                                        ; preds = %if.then11, %for.cond
  store float 0.000000e+00, float* %intensity, align 4, !dbg !7441
  store i64 0, i64* %black, align 8, !dbg !7442
  br label %for.cond23, !dbg !7444

for.cond23:                                       ; preds = %for.inc31, %for.end22
  %27 = load i64, i64* %black, align 8, !dbg !7445
  %cmp24 = icmp slt i64 %27, 65535, !dbg !7447
  br i1 %cmp24, label %for.body25, label %for.end33, !dbg !7448

for.body25:                                       ; preds = %for.cond23
  %28 = load float*, float** %histogram, align 8, !dbg !7449
  %29 = load i64, i64* %black, align 8, !dbg !7451
  %arrayidx26 = getelementptr inbounds float, float* %28, i64 %29, !dbg !7449
  %30 = load float, float* %arrayidx26, align 4, !dbg !7449
  %31 = load float, float* %intensity, align 4, !dbg !7452
  %add = fadd float %31, %30, !dbg !7452
  store float %add, float* %intensity, align 4, !dbg !7452
  %32 = load float, float* %intensity, align 4, !dbg !7453
  %conv = fpext float %32 to double, !dbg !7453
  %33 = load double, double* %black_point.addr, align 8, !dbg !7455
  %cmp27 = fcmp oge double %conv, %33, !dbg !7456
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !7457

if.then29:                                        ; preds = %for.body25
  br label %for.end33, !dbg !7458

if.end30:                                         ; preds = %for.body25
  br label %for.inc31, !dbg !7459

for.inc31:                                        ; preds = %if.end30
  %34 = load i64, i64* %black, align 8, !dbg !7460
  %inc32 = add nsw i64 %34, 1, !dbg !7460
  store i64 %inc32, i64* %black, align 8, !dbg !7460
  br label %for.cond23, !dbg !7461, !llvm.loop !7462

for.end33:                                        ; preds = %if.then29, %for.cond23
  store float 0.000000e+00, float* %intensity, align 4, !dbg !7464
  store i64 65535, i64* %white, align 8, !dbg !7465
  br label %for.cond34, !dbg !7467

for.cond34:                                       ; preds = %for.inc45, %for.end33
  %35 = load i64, i64* %white, align 8, !dbg !7468
  %cmp35 = icmp ne i64 %35, 0, !dbg !7470
  br i1 %cmp35, label %for.body37, label %for.end47, !dbg !7471

for.body37:                                       ; preds = %for.cond34
  %36 = load float*, float** %histogram, align 8, !dbg !7472
  %37 = load i64, i64* %white, align 8, !dbg !7474
  %arrayidx38 = getelementptr inbounds float, float* %36, i64 %37, !dbg !7472
  %38 = load float, float* %arrayidx38, align 4, !dbg !7472
  %39 = load float, float* %intensity, align 4, !dbg !7475
  %add39 = fadd float %39, %38, !dbg !7475
  store float %add39, float* %intensity, align 4, !dbg !7475
  %40 = load float, float* %intensity, align 4, !dbg !7476
  %conv40 = fpext float %40 to double, !dbg !7476
  %41 = load double, double* %white_point.addr, align 8, !dbg !7478
  %cmp41 = fcmp oge double %conv40, %41, !dbg !7479
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !7480

if.then43:                                        ; preds = %for.body37
  br label %for.end47, !dbg !7481

if.end44:                                         ; preds = %for.body37
  br label %for.inc45, !dbg !7482

for.inc45:                                        ; preds = %if.end44
  %42 = load i64, i64* %white, align 8, !dbg !7483
  %dec46 = add nsw i64 %42, -1, !dbg !7483
  store i64 %dec46, i64* %white, align 8, !dbg !7483
  br label %for.cond34, !dbg !7484, !llvm.loop !7485

for.end47:                                        ; preds = %if.then43, %for.cond34
  %43 = load float*, float** %histogram, align 8, !dbg !7487
  %44 = bitcast float* %43 to i8*, !dbg !7487
  %call48 = call i8* @RelinquishMagickMemory(i8* %44), !dbg !7488
  %45 = bitcast i8* %call48 to float*, !dbg !7489
  store float* %45, float** %histogram, align 8, !dbg !7490
  %46 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7491
  %47 = load i64, i64* %black, align 8, !dbg !7492
  %conv49 = sitofp i64 %47 to double, !dbg !7493
  %48 = load i64, i64* %white, align 8, !dbg !7494
  %conv50 = sitofp i64 %48 to double, !dbg !7495
  %call51 = call i32 @LevelImageChannel(%struct._Image* %46, i32 134217719, double %conv49, double %conv50, double 1.000000e+00), !dbg !7496
  store i32 %call51, i32* %status, align 4, !dbg !7497
  %49 = load i32, i32* %status, align 4, !dbg !7498
  store i32 %49, i32* %retval, align 4, !dbg !7499
  br label %return, !dbg !7499

return:                                           ; preds = %for.end47, %if.end
  %50 = load i32, i32* %retval, align 4, !dbg !7500
  ret i32 %50, !dbg !7500
}

declare dso_local %struct._PixelPacket* @GetVirtualPixels(%struct._Image*, i64, i64, i64, i64, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ModulateImage(%struct._Image* %image, i8* %modulate) #0 !dbg !7501 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %modulate.addr = alloca i8*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %colorspace = alloca i32, align 4
  %artifact = alloca i8*, align 8
  %percent_brightness = alloca double, align 8
  %percent_hue = alloca double, align 8
  %percent_saturation = alloca double, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %geometry_info = alloca %struct._GeometryInfo, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %flags = alloca i32, align 4
  %i = alloca i64, align 8
  %y = alloca i64, align 8
  %blue = alloca i16, align 2
  %green = alloca i16, align 2
  %red = alloca i16, align 2
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %blue79 = alloca i16, align 2
  %green80 = alloca i16, align 2
  %red81 = alloca i16, align 2
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7502, metadata !DIExpression()), !dbg !7503
  store i8* %modulate, i8** %modulate.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %modulate.addr, metadata !7504, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !7506, metadata !DIExpression()), !dbg !7507
  call void @llvm.dbg.declare(metadata i32* %colorspace, metadata !7508, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.declare(metadata i8** %artifact, metadata !7510, metadata !DIExpression()), !dbg !7511
  call void @llvm.dbg.declare(metadata double* %percent_brightness, metadata !7512, metadata !DIExpression()), !dbg !7513
  call void @llvm.dbg.declare(metadata double* %percent_hue, metadata !7514, metadata !DIExpression()), !dbg !7515
  call void @llvm.dbg.declare(metadata double* %percent_saturation, metadata !7516, metadata !DIExpression()), !dbg !7517
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !7518, metadata !DIExpression()), !dbg !7519
  call void @llvm.dbg.declare(metadata %struct._GeometryInfo* %geometry_info, metadata !7520, metadata !DIExpression()), !dbg !7521
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7522, metadata !DIExpression()), !dbg !7523
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !7524, metadata !DIExpression()), !dbg !7525
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !7526, metadata !DIExpression()), !dbg !7527
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7528, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.declare(metadata i64* %y, metadata !7530, metadata !DIExpression()), !dbg !7531
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7532
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !7534
  %1 = load i32, i32* %debug, align 8, !dbg !7534
  %cmp = icmp ne i32 %1, 0, !dbg !7535
  br i1 %cmp, label %if.then, label %if.end, !dbg !7536

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7537
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !7538
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !7537
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3728, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7539
  br label %if.end, !dbg !7540

if.end:                                           ; preds = %if.then, %entry
  %3 = load i8*, i8** %modulate.addr, align 8, !dbg !7541
  %cmp1 = icmp eq i8* %3, null, !dbg !7543
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !7544

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7545
  br label %return, !dbg !7545

if.end3:                                          ; preds = %if.end
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7546
  %colorspace4 = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 1, !dbg !7548
  %5 = load i32, i32* %colorspace4, align 4, !dbg !7548
  %call5 = call i32 @IssRGBCompatibleColorspace(i32 %5), !dbg !7549
  %cmp6 = icmp eq i32 %call5, 0, !dbg !7550
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !7551

if.then7:                                         ; preds = %if.end3
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7552
  %call8 = call i32 @SetImageColorspace(%struct._Image* %6, i32 13), !dbg !7553
  br label %if.end9, !dbg !7554

if.end9:                                          ; preds = %if.then7, %if.end3
  %7 = load i8*, i8** %modulate.addr, align 8, !dbg !7555
  %call10 = call i32 @ParseGeometry(i8* %7, %struct._GeometryInfo* %geometry_info), !dbg !7556
  store i32 %call10, i32* %flags, align 4, !dbg !7557
  %rho = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 0, !dbg !7558
  %8 = load double, double* %rho, align 8, !dbg !7558
  store double %8, double* %percent_brightness, align 8, !dbg !7559
  %sigma = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 1, !dbg !7560
  %9 = load double, double* %sigma, align 8, !dbg !7560
  store double %9, double* %percent_saturation, align 8, !dbg !7561
  %10 = load i32, i32* %flags, align 4, !dbg !7562
  %and = and i32 %10, 8, !dbg !7564
  %cmp11 = icmp eq i32 %and, 0, !dbg !7565
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !7566

if.then12:                                        ; preds = %if.end9
  store double 1.000000e+02, double* %percent_saturation, align 8, !dbg !7567
  br label %if.end13, !dbg !7568

if.end13:                                         ; preds = %if.then12, %if.end9
  %xi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 2, !dbg !7569
  %11 = load double, double* %xi, align 8, !dbg !7569
  store double %11, double* %percent_hue, align 8, !dbg !7570
  %12 = load i32, i32* %flags, align 4, !dbg !7571
  %and14 = and i32 %12, 1, !dbg !7573
  %cmp15 = icmp eq i32 %and14, 0, !dbg !7574
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !7575

if.then16:                                        ; preds = %if.end13
  store double 1.000000e+02, double* %percent_hue, align 8, !dbg !7576
  br label %if.end17, !dbg !7577

if.end17:                                         ; preds = %if.then16, %if.end13
  store i32 0, i32* %colorspace, align 4, !dbg !7578
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7579
  %call18 = call i8* @GetImageArtifact(%struct._Image* %13, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.33, i64 0, i64 0)), !dbg !7580
  store i8* %call18, i8** %artifact, align 8, !dbg !7581
  %14 = load i8*, i8** %artifact, align 8, !dbg !7582
  %cmp19 = icmp ne i8* %14, null, !dbg !7584
  br i1 %cmp19, label %if.then20, label %if.end22, !dbg !7585

if.then20:                                        ; preds = %if.end17
  %15 = load i8*, i8** %artifact, align 8, !dbg !7586
  %call21 = call i64 @ParseCommandOption(i32 9, i32 0, i8* %15), !dbg !7587
  %conv = trunc i64 %call21 to i32, !dbg !7588
  store i32 %conv, i32* %colorspace, align 4, !dbg !7589
  br label %if.end22, !dbg !7590

if.end22:                                         ; preds = %if.then20, %if.end17
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7591
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 0, !dbg !7593
  %17 = load i32, i32* %storage_class, align 8, !dbg !7593
  %cmp23 = icmp eq i32 %17, 2, !dbg !7594
  br i1 %cmp23, label %if.then25, label %if.end52, !dbg !7595

if.then25:                                        ; preds = %if.end22
  store i64 0, i64* %i, align 8, !dbg !7596
  br label %for.cond, !dbg !7598

for.cond:                                         ; preds = %for.inc, %if.then25
  %18 = load i64, i64* %i, align 8, !dbg !7599
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7601
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 10, !dbg !7602
  %20 = load i64, i64* %colors, align 8, !dbg !7602
  %cmp26 = icmp slt i64 %18, %20, !dbg !7603
  br i1 %cmp26, label %for.body, label %for.end, !dbg !7604

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16* %blue, metadata !7605, metadata !DIExpression()), !dbg !7607
  call void @llvm.dbg.declare(metadata i16* %green, metadata !7608, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.declare(metadata i16* %red, metadata !7610, metadata !DIExpression()), !dbg !7611
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7612
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 11, !dbg !7613
  %22 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !7613
  %23 = load i64, i64* %i, align 8, !dbg !7614
  %arrayidx = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %22, i64 %23, !dbg !7612
  %red28 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx, i32 0, i32 2, !dbg !7615
  %24 = load i16, i16* %red28, align 2, !dbg !7615
  store i16 %24, i16* %red, align 2, !dbg !7616
  %25 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7617
  %colormap29 = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 11, !dbg !7618
  %26 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap29, align 8, !dbg !7618
  %27 = load i64, i64* %i, align 8, !dbg !7619
  %arrayidx30 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %26, i64 %27, !dbg !7617
  %green31 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx30, i32 0, i32 1, !dbg !7620
  %28 = load i16, i16* %green31, align 2, !dbg !7620
  store i16 %28, i16* %green, align 2, !dbg !7621
  %29 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7622
  %colormap32 = getelementptr inbounds %struct._Image, %struct._Image* %29, i32 0, i32 11, !dbg !7623
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap32, align 8, !dbg !7623
  %31 = load i64, i64* %i, align 8, !dbg !7624
  %arrayidx33 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i64 %31, !dbg !7622
  %blue34 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx33, i32 0, i32 0, !dbg !7625
  %32 = load i16, i16* %blue34, align 2, !dbg !7625
  store i16 %32, i16* %blue, align 2, !dbg !7626
  %33 = load i32, i32* %colorspace, align 4, !dbg !7627
  switch i32 %33, label %sw.default [
    i32 24, label %sw.bb
    i32 32, label %sw.bb35
    i32 14, label %sw.bb36
    i32 30, label %sw.bb37
    i32 15, label %sw.bb38
    i32 31, label %sw.bb39
    i32 16, label %sw.bb40
    i32 27, label %sw.bb41
    i32 25, label %sw.bb41
    i32 28, label %sw.bb42
  ], !dbg !7628

sw.bb:                                            ; preds = %for.body
  %34 = load double, double* %percent_hue, align 8, !dbg !7629
  %35 = load double, double* %percent_saturation, align 8, !dbg !7632
  %36 = load double, double* %percent_brightness, align 8, !dbg !7633
  call void @ModulateHCL(double %34, double %35, double %36, i16* %red, i16* %green, i16* %blue), !dbg !7634
  br label %sw.epilog, !dbg !7635

sw.bb35:                                          ; preds = %for.body
  %37 = load double, double* %percent_hue, align 8, !dbg !7636
  %38 = load double, double* %percent_saturation, align 8, !dbg !7638
  %39 = load double, double* %percent_brightness, align 8, !dbg !7639
  call void @ModulateHCLp(double %37, double %38, double %39, i16* %red, i16* %green, i16* %blue), !dbg !7640
  br label %sw.epilog, !dbg !7641

sw.bb36:                                          ; preds = %for.body
  %40 = load double, double* %percent_hue, align 8, !dbg !7642
  %41 = load double, double* %percent_saturation, align 8, !dbg !7644
  %42 = load double, double* %percent_brightness, align 8, !dbg !7645
  call void @ModulateHSB(double %40, double %41, double %42, i16* %red, i16* %green, i16* %blue), !dbg !7646
  br label %sw.epilog, !dbg !7647

sw.bb37:                                          ; preds = %for.body
  %43 = load double, double* %percent_hue, align 8, !dbg !7648
  %44 = load double, double* %percent_saturation, align 8, !dbg !7650
  %45 = load double, double* %percent_brightness, align 8, !dbg !7651
  call void @ModulateHSI(double %43, double %44, double %45, i16* %red, i16* %green, i16* %blue), !dbg !7652
  br label %sw.epilog, !dbg !7653

sw.bb38:                                          ; preds = %for.body
  br label %sw.default, !dbg !7654

sw.default:                                       ; preds = %for.body, %sw.bb38
  %46 = load double, double* %percent_hue, align 8, !dbg !7655
  %47 = load double, double* %percent_saturation, align 8, !dbg !7657
  %48 = load double, double* %percent_brightness, align 8, !dbg !7658
  call void @ModulateHSL(double %46, double %47, double %48, i16* %red, i16* %green, i16* %blue), !dbg !7659
  br label %sw.epilog, !dbg !7660

sw.bb39:                                          ; preds = %for.body
  %49 = load double, double* %percent_hue, align 8, !dbg !7661
  %50 = load double, double* %percent_saturation, align 8, !dbg !7663
  %51 = load double, double* %percent_brightness, align 8, !dbg !7664
  call void @ModulateHSV(double %49, double %50, double %51, i16* %red, i16* %green, i16* %blue), !dbg !7665
  br label %sw.epilog, !dbg !7666

sw.bb40:                                          ; preds = %for.body
  %52 = load double, double* %percent_hue, align 8, !dbg !7667
  %53 = load double, double* %percent_saturation, align 8, !dbg !7669
  %54 = load double, double* %percent_brightness, align 8, !dbg !7670
  call void @ModulateHWB(double %52, double %53, double %54, i16* %red, i16* %green, i16* %blue), !dbg !7671
  br label %sw.epilog, !dbg !7672

sw.bb41:                                          ; preds = %for.body, %for.body
  %55 = load double, double* %percent_brightness, align 8, !dbg !7673
  %56 = load double, double* %percent_saturation, align 8, !dbg !7675
  %57 = load double, double* %percent_hue, align 8, !dbg !7676
  call void @ModulateLCHab(double %55, double %56, double %57, i16* %red, i16* %green, i16* %blue), !dbg !7677
  br label %sw.epilog, !dbg !7678

sw.bb42:                                          ; preds = %for.body
  %58 = load double, double* %percent_brightness, align 8, !dbg !7679
  %59 = load double, double* %percent_saturation, align 8, !dbg !7681
  %60 = load double, double* %percent_hue, align 8, !dbg !7682
  call void @ModulateLCHuv(double %58, double %59, double %60, i16* %red, i16* %green, i16* %blue), !dbg !7683
  br label %sw.epilog, !dbg !7684

sw.epilog:                                        ; preds = %sw.bb42, %sw.bb41, %sw.bb40, %sw.bb39, %sw.default, %sw.bb37, %sw.bb36, %sw.bb35, %sw.bb
  %61 = load i16, i16* %red, align 2, !dbg !7685
  %62 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7686
  %colormap43 = getelementptr inbounds %struct._Image, %struct._Image* %62, i32 0, i32 11, !dbg !7687
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap43, align 8, !dbg !7687
  %64 = load i64, i64* %i, align 8, !dbg !7688
  %arrayidx44 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %63, i64 %64, !dbg !7686
  %red45 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx44, i32 0, i32 2, !dbg !7689
  store i16 %61, i16* %red45, align 2, !dbg !7690
  %65 = load i16, i16* %green, align 2, !dbg !7691
  %66 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7692
  %colormap46 = getelementptr inbounds %struct._Image, %struct._Image* %66, i32 0, i32 11, !dbg !7693
  %67 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap46, align 8, !dbg !7693
  %68 = load i64, i64* %i, align 8, !dbg !7694
  %arrayidx47 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %67, i64 %68, !dbg !7692
  %green48 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx47, i32 0, i32 1, !dbg !7695
  store i16 %65, i16* %green48, align 2, !dbg !7696
  %69 = load i16, i16* %blue, align 2, !dbg !7697
  %70 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7698
  %colormap49 = getelementptr inbounds %struct._Image, %struct._Image* %70, i32 0, i32 11, !dbg !7699
  %71 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap49, align 8, !dbg !7699
  %72 = load i64, i64* %i, align 8, !dbg !7700
  %arrayidx50 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %71, i64 %72, !dbg !7698
  %blue51 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx50, i32 0, i32 0, !dbg !7701
  store i16 %69, i16* %blue51, align 2, !dbg !7702
  br label %for.inc, !dbg !7703

for.inc:                                          ; preds = %sw.epilog
  %73 = load i64, i64* %i, align 8, !dbg !7704
  %inc = add nsw i64 %73, 1, !dbg !7704
  store i64 %inc, i64* %i, align 8, !dbg !7704
  br label %for.cond, !dbg !7705, !llvm.loop !7706

for.end:                                          ; preds = %for.cond
  br label %if.end52, !dbg !7707

if.end52:                                         ; preds = %for.end, %if.end22
  %74 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7708
  %75 = load double, double* %percent_brightness, align 8, !dbg !7709
  %76 = load double, double* %percent_hue, align 8, !dbg !7710
  %77 = load double, double* %percent_saturation, align 8, !dbg !7711
  %78 = load i32, i32* %colorspace, align 4, !dbg !7712
  %79 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7713
  %exception53 = getelementptr inbounds %struct._Image, %struct._Image* %79, i32 0, i32 58, !dbg !7714
  %call54 = call i32 @AccelerateModulateImage(%struct._Image* %74, double %75, double %76, double %77, i32 %78, %struct._ExceptionInfo* %exception53), !dbg !7715
  store i32 %call54, i32* %status, align 4, !dbg !7716
  %80 = load i32, i32* %status, align 4, !dbg !7717
  %cmp55 = icmp ne i32 %80, 0, !dbg !7719
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !7720

if.then57:                                        ; preds = %if.end52
  %81 = load i32, i32* %status, align 4, !dbg !7721
  store i32 %81, i32* %retval, align 4, !dbg !7722
  br label %return, !dbg !7722

if.end58:                                         ; preds = %if.end52
  store i32 1, i32* %status, align 4, !dbg !7723
  store i64 0, i64* %progress, align 8, !dbg !7724
  %82 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7725
  %exception59 = getelementptr inbounds %struct._Image, %struct._Image* %82, i32 0, i32 58, !dbg !7726
  store %struct._ExceptionInfo* %exception59, %struct._ExceptionInfo** %exception, align 8, !dbg !7727
  %83 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7728
  %84 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7729
  %call60 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %83, %struct._ExceptionInfo* %84), !dbg !7730
  store %struct._CacheView* %call60, %struct._CacheView** %image_view, align 8, !dbg !7731
  store i64 0, i64* %y, align 8, !dbg !7732
  br label %for.cond61, !dbg !7734

for.cond61:                                       ; preds = %for.inc117, %if.end58
  %85 = load i64, i64* %y, align 8, !dbg !7735
  %86 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7737
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %86, i32 0, i32 8, !dbg !7738
  %87 = load i64, i64* %rows, align 8, !dbg !7738
  %cmp62 = icmp slt i64 %85, %87, !dbg !7739
  br i1 %cmp62, label %for.body64, label %for.end119, !dbg !7740

for.body64:                                       ; preds = %for.cond61
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !7741, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.declare(metadata i64* %x, metadata !7744, metadata !DIExpression()), !dbg !7745
  %88 = load i32, i32* %status, align 4, !dbg !7746
  %cmp65 = icmp eq i32 %88, 0, !dbg !7748
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !7749

if.then67:                                        ; preds = %for.body64
  br label %for.inc117, !dbg !7750

if.end68:                                         ; preds = %for.body64
  %89 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !7751
  %90 = load i64, i64* %y, align 8, !dbg !7752
  %91 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7753
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %91, i32 0, i32 7, !dbg !7754
  %92 = load i64, i64* %columns, align 8, !dbg !7754
  %93 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7755
  %call69 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %89, i64 0, i64 %90, i64 %92, i64 1, %struct._ExceptionInfo* %93), !dbg !7756
  store %struct._PixelPacket* %call69, %struct._PixelPacket** %q, align 8, !dbg !7757
  %94 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7758
  %cmp70 = icmp eq %struct._PixelPacket* %94, null, !dbg !7760
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !7761

if.then72:                                        ; preds = %if.end68
  store i32 0, i32* %status, align 4, !dbg !7762
  br label %for.inc117, !dbg !7764

if.end73:                                         ; preds = %if.end68
  store i64 0, i64* %x, align 8, !dbg !7765
  br label %for.cond74, !dbg !7767

for.cond74:                                       ; preds = %for.inc98, %if.end73
  %95 = load i64, i64* %x, align 8, !dbg !7768
  %96 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7770
  %columns75 = getelementptr inbounds %struct._Image, %struct._Image* %96, i32 0, i32 7, !dbg !7771
  %97 = load i64, i64* %columns75, align 8, !dbg !7771
  %cmp76 = icmp slt i64 %95, %97, !dbg !7772
  br i1 %cmp76, label %for.body78, label %for.end100, !dbg !7773

for.body78:                                       ; preds = %for.cond74
  call void @llvm.dbg.declare(metadata i16* %blue79, metadata !7774, metadata !DIExpression()), !dbg !7776
  call void @llvm.dbg.declare(metadata i16* %green80, metadata !7777, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.declare(metadata i16* %red81, metadata !7779, metadata !DIExpression()), !dbg !7780
  %98 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7781
  %red82 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %98, i32 0, i32 2, !dbg !7781
  %99 = load i16, i16* %red82, align 2, !dbg !7781
  store i16 %99, i16* %red81, align 2, !dbg !7782
  %100 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7783
  %green83 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %100, i32 0, i32 1, !dbg !7783
  %101 = load i16, i16* %green83, align 2, !dbg !7783
  store i16 %101, i16* %green80, align 2, !dbg !7784
  %102 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7785
  %blue84 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %102, i32 0, i32 0, !dbg !7785
  %103 = load i16, i16* %blue84, align 2, !dbg !7785
  store i16 %103, i16* %blue79, align 2, !dbg !7786
  %104 = load i32, i32* %colorspace, align 4, !dbg !7787
  switch i32 %104, label %sw.default89 [
    i32 24, label %sw.bb85
    i32 32, label %sw.bb86
    i32 14, label %sw.bb87
    i32 15, label %sw.bb88
    i32 31, label %sw.bb90
    i32 16, label %sw.bb91
    i32 27, label %sw.bb92
    i32 25, label %sw.bb93
    i32 28, label %sw.bb93
  ], !dbg !7788

sw.bb85:                                          ; preds = %for.body78
  %105 = load double, double* %percent_hue, align 8, !dbg !7789
  %106 = load double, double* %percent_saturation, align 8, !dbg !7792
  %107 = load double, double* %percent_brightness, align 8, !dbg !7793
  call void @ModulateHCL(double %105, double %106, double %107, i16* %red81, i16* %green80, i16* %blue79), !dbg !7794
  br label %sw.epilog94, !dbg !7795

sw.bb86:                                          ; preds = %for.body78
  %108 = load double, double* %percent_hue, align 8, !dbg !7796
  %109 = load double, double* %percent_saturation, align 8, !dbg !7798
  %110 = load double, double* %percent_brightness, align 8, !dbg !7799
  call void @ModulateHCLp(double %108, double %109, double %110, i16* %red81, i16* %green80, i16* %blue79), !dbg !7800
  br label %sw.epilog94, !dbg !7801

sw.bb87:                                          ; preds = %for.body78
  %111 = load double, double* %percent_hue, align 8, !dbg !7802
  %112 = load double, double* %percent_saturation, align 8, !dbg !7804
  %113 = load double, double* %percent_brightness, align 8, !dbg !7805
  call void @ModulateHSB(double %111, double %112, double %113, i16* %red81, i16* %green80, i16* %blue79), !dbg !7806
  br label %sw.epilog94, !dbg !7807

sw.bb88:                                          ; preds = %for.body78
  br label %sw.default89, !dbg !7808

sw.default89:                                     ; preds = %for.body78, %sw.bb88
  %114 = load double, double* %percent_hue, align 8, !dbg !7809
  %115 = load double, double* %percent_saturation, align 8, !dbg !7811
  %116 = load double, double* %percent_brightness, align 8, !dbg !7812
  call void @ModulateHSL(double %114, double %115, double %116, i16* %red81, i16* %green80, i16* %blue79), !dbg !7813
  br label %sw.epilog94, !dbg !7814

sw.bb90:                                          ; preds = %for.body78
  %117 = load double, double* %percent_hue, align 8, !dbg !7815
  %118 = load double, double* %percent_saturation, align 8, !dbg !7817
  %119 = load double, double* %percent_brightness, align 8, !dbg !7818
  call void @ModulateHSV(double %117, double %118, double %119, i16* %red81, i16* %green80, i16* %blue79), !dbg !7819
  br label %sw.epilog94, !dbg !7820

sw.bb91:                                          ; preds = %for.body78
  %120 = load double, double* %percent_hue, align 8, !dbg !7821
  %121 = load double, double* %percent_saturation, align 8, !dbg !7823
  %122 = load double, double* %percent_brightness, align 8, !dbg !7824
  call void @ModulateHWB(double %120, double %121, double %122, i16* %red81, i16* %green80, i16* %blue79), !dbg !7825
  br label %sw.epilog94, !dbg !7826

sw.bb92:                                          ; preds = %for.body78
  %123 = load double, double* %percent_brightness, align 8, !dbg !7827
  %124 = load double, double* %percent_saturation, align 8, !dbg !7829
  %125 = load double, double* %percent_hue, align 8, !dbg !7830
  call void @ModulateLCHab(double %123, double %124, double %125, i16* %red81, i16* %green80, i16* %blue79), !dbg !7831
  br label %sw.epilog94, !dbg !7832

sw.bb93:                                          ; preds = %for.body78, %for.body78
  %126 = load double, double* %percent_brightness, align 8, !dbg !7833
  %127 = load double, double* %percent_saturation, align 8, !dbg !7835
  %128 = load double, double* %percent_hue, align 8, !dbg !7836
  call void @ModulateLCHuv(double %126, double %127, double %128, i16* %red81, i16* %green80, i16* %blue79), !dbg !7837
  br label %sw.epilog94, !dbg !7838

sw.epilog94:                                      ; preds = %sw.bb93, %sw.bb92, %sw.bb91, %sw.bb90, %sw.default89, %sw.bb87, %sw.bb86, %sw.bb85
  %129 = load i16, i16* %red81, align 2, !dbg !7839
  %130 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7839
  %red95 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %130, i32 0, i32 2, !dbg !7839
  store i16 %129, i16* %red95, align 2, !dbg !7839
  %131 = load i16, i16* %green80, align 2, !dbg !7840
  %132 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7840
  %green96 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %132, i32 0, i32 1, !dbg !7840
  store i16 %131, i16* %green96, align 2, !dbg !7840
  %133 = load i16, i16* %blue79, align 2, !dbg !7841
  %134 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7841
  %blue97 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %134, i32 0, i32 0, !dbg !7841
  store i16 %133, i16* %blue97, align 2, !dbg !7841
  %135 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7842
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %135, i32 1, !dbg !7842
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !7842
  br label %for.inc98, !dbg !7843

for.inc98:                                        ; preds = %sw.epilog94
  %136 = load i64, i64* %x, align 8, !dbg !7844
  %inc99 = add nsw i64 %136, 1, !dbg !7844
  store i64 %inc99, i64* %x, align 8, !dbg !7844
  br label %for.cond74, !dbg !7845, !llvm.loop !7846

for.end100:                                       ; preds = %for.cond74
  %137 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !7848
  %138 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !7850
  %call101 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %137, %struct._ExceptionInfo* %138), !dbg !7851
  %cmp102 = icmp eq i32 %call101, 0, !dbg !7852
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !7853

if.then104:                                       ; preds = %for.end100
  store i32 0, i32* %status, align 4, !dbg !7854
  br label %if.end105, !dbg !7855

if.end105:                                        ; preds = %if.then104, %for.end100
  %139 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7856
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %139, i32 0, i32 47, !dbg !7858
  %140 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !7858
  %cmp106 = icmp ne i32 (i8*, i64, i64, i8*)* %140, null, !dbg !7859
  br i1 %cmp106, label %if.then108, label %if.end116, !dbg !7860

if.then108:                                       ; preds = %if.end105
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !7861, metadata !DIExpression()), !dbg !7863
  %141 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7864
  %142 = load i64, i64* %progress, align 8, !dbg !7865
  %inc109 = add nsw i64 %142, 1, !dbg !7865
  store i64 %inc109, i64* %progress, align 8, !dbg !7865
  %143 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7866
  %rows110 = getelementptr inbounds %struct._Image, %struct._Image* %143, i32 0, i32 8, !dbg !7867
  %144 = load i64, i64* %rows110, align 8, !dbg !7867
  %call111 = call i32 @SetImageProgress(%struct._Image* %141, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i64 0, i64 0), i64 %142, i64 %144), !dbg !7868
  store i32 %call111, i32* %proceed, align 4, !dbg !7869
  %145 = load i32, i32* %proceed, align 4, !dbg !7870
  %cmp112 = icmp eq i32 %145, 0, !dbg !7872
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !7873

if.then114:                                       ; preds = %if.then108
  store i32 0, i32* %status, align 4, !dbg !7874
  br label %if.end115, !dbg !7875

if.end115:                                        ; preds = %if.then114, %if.then108
  br label %if.end116, !dbg !7876

if.end116:                                        ; preds = %if.end115, %if.end105
  br label %for.inc117, !dbg !7877

for.inc117:                                       ; preds = %if.end116, %if.then72, %if.then67
  %146 = load i64, i64* %y, align 8, !dbg !7878
  %inc118 = add nsw i64 %146, 1, !dbg !7878
  store i64 %inc118, i64* %y, align 8, !dbg !7878
  br label %for.cond61, !dbg !7879, !llvm.loop !7880

for.end119:                                       ; preds = %for.cond61
  %147 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !7882
  %call120 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %147), !dbg !7883
  store %struct._CacheView* %call120, %struct._CacheView** %image_view, align 8, !dbg !7884
  %148 = load i32, i32* %status, align 4, !dbg !7885
  store i32 %148, i32* %retval, align 4, !dbg !7886
  br label %return, !dbg !7886

return:                                           ; preds = %for.end119, %if.then57, %if.then2
  %149 = load i32, i32* %retval, align 4, !dbg !7887
  ret i32 %149, !dbg !7887
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @IssRGBCompatibleColorspace(i32 %colorspace) #0 !dbg !7888 {
entry:
  %retval = alloca i32, align 4
  %colorspace.addr = alloca i32, align 4
  store i32 %colorspace, i32* %colorspace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colorspace.addr, metadata !7889, metadata !DIExpression()), !dbg !7890
  %0 = load i32, i32* %colorspace.addr, align 4, !dbg !7891
  %cmp = icmp eq i32 %0, 13, !dbg !7893
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7894

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %colorspace.addr, align 4, !dbg !7895
  %cmp1 = icmp eq i32 %1, 1, !dbg !7896
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !7897

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %colorspace.addr, align 4, !dbg !7898
  %cmp3 = icmp eq i32 %2, 29, !dbg !7899
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !7900

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %3 = load i32, i32* %colorspace.addr, align 4, !dbg !7901
  %cmp5 = icmp eq i32 %3, 3, !dbg !7902
  br i1 %cmp5, label %if.then, label %lor.lhs.false6, !dbg !7903

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %4 = load i32, i32* %colorspace.addr, align 4, !dbg !7904
  %call = call i32 @IsGrayColorspace(i32 %4), !dbg !7905
  %cmp7 = icmp ne i32 %call, 0, !dbg !7906
  br i1 %cmp7, label %if.then, label %if.end, !dbg !7907

if.then:                                          ; preds = %lor.lhs.false6, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !7908
  br label %return, !dbg !7908

if.end:                                           ; preds = %lor.lhs.false6
  store i32 0, i32* %retval, align 4, !dbg !7909
  br label %return, !dbg !7909

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !7910
  ret i32 %5, !dbg !7910
}

declare dso_local i8* @GetImageArtifact(%struct._Image*, i8*) #3

declare dso_local i64 @ParseCommandOption(i32, i32, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ModulateHCL(double %percent_hue, double %percent_chroma, double %percent_luma, i16* %red, i16* %green, i16* %blue) #0 !dbg !7911 {
entry:
  %percent_hue.addr = alloca double, align 8
  %percent_chroma.addr = alloca double, align 8
  %percent_luma.addr = alloca double, align 8
  %red.addr = alloca i16*, align 8
  %green.addr = alloca i16*, align 8
  %blue.addr = alloca i16*, align 8
  %hue = alloca double, align 8
  %luma = alloca double, align 8
  %chroma = alloca double, align 8
  store double %percent_hue, double* %percent_hue.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_hue.addr, metadata !7914, metadata !DIExpression()), !dbg !7915
  store double %percent_chroma, double* %percent_chroma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_chroma.addr, metadata !7916, metadata !DIExpression()), !dbg !7917
  store double %percent_luma, double* %percent_luma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_luma.addr, metadata !7918, metadata !DIExpression()), !dbg !7919
  store i16* %red, i16** %red.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %red.addr, metadata !7920, metadata !DIExpression()), !dbg !7921
  store i16* %green, i16** %green.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %green.addr, metadata !7922, metadata !DIExpression()), !dbg !7923
  store i16* %blue, i16** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %blue.addr, metadata !7924, metadata !DIExpression()), !dbg !7925
  call void @llvm.dbg.declare(metadata double* %hue, metadata !7926, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.declare(metadata double* %luma, metadata !7928, metadata !DIExpression()), !dbg !7929
  call void @llvm.dbg.declare(metadata double* %chroma, metadata !7930, metadata !DIExpression()), !dbg !7931
  %0 = load i16*, i16** %red.addr, align 8, !dbg !7932
  %1 = load i16, i16* %0, align 2, !dbg !7933
  %2 = load i16*, i16** %green.addr, align 8, !dbg !7934
  %3 = load i16, i16* %2, align 2, !dbg !7935
  %4 = load i16*, i16** %blue.addr, align 8, !dbg !7936
  %5 = load i16, i16* %4, align 2, !dbg !7937
  call void @ConvertRGBToHCL(i16 zeroext %1, i16 zeroext %3, i16 zeroext %5, double* %hue, double* %chroma, double* %luma), !dbg !7938
  %6 = load double, double* %percent_hue.addr, align 8, !dbg !7939
  %mul = fmul double 1.000000e-02, %6, !dbg !7940
  %sub = fsub double %mul, 1.000000e+00, !dbg !7941
  %mul1 = fmul double 5.000000e-01, %sub, !dbg !7942
  %7 = load double, double* %hue, align 8, !dbg !7943
  %add = fadd double %7, %mul1, !dbg !7943
  store double %add, double* %hue, align 8, !dbg !7943
  br label %while.cond, !dbg !7944

while.cond:                                       ; preds = %while.body, %entry
  %8 = load double, double* %hue, align 8, !dbg !7945
  %cmp = fcmp olt double %8, 0.000000e+00, !dbg !7946
  br i1 %cmp, label %while.body, label %while.end, !dbg !7944

while.body:                                       ; preds = %while.cond
  %9 = load double, double* %hue, align 8, !dbg !7947
  %add2 = fadd double %9, 1.000000e+00, !dbg !7947
  store double %add2, double* %hue, align 8, !dbg !7947
  br label %while.cond, !dbg !7944, !llvm.loop !7948

while.end:                                        ; preds = %while.cond
  br label %while.cond3, !dbg !7950

while.cond3:                                      ; preds = %while.body5, %while.end
  %10 = load double, double* %hue, align 8, !dbg !7951
  %cmp4 = fcmp ogt double %10, 1.000000e+00, !dbg !7952
  br i1 %cmp4, label %while.body5, label %while.end7, !dbg !7950

while.body5:                                      ; preds = %while.cond3
  %11 = load double, double* %hue, align 8, !dbg !7953
  %sub6 = fsub double %11, 1.000000e+00, !dbg !7953
  store double %sub6, double* %hue, align 8, !dbg !7953
  br label %while.cond3, !dbg !7950, !llvm.loop !7954

while.end7:                                       ; preds = %while.cond3
  %12 = load double, double* %percent_chroma.addr, align 8, !dbg !7956
  %mul8 = fmul double 1.000000e-02, %12, !dbg !7957
  %13 = load double, double* %chroma, align 8, !dbg !7958
  %mul9 = fmul double %13, %mul8, !dbg !7958
  store double %mul9, double* %chroma, align 8, !dbg !7958
  %14 = load double, double* %percent_luma.addr, align 8, !dbg !7959
  %mul10 = fmul double 1.000000e-02, %14, !dbg !7960
  %15 = load double, double* %luma, align 8, !dbg !7961
  %mul11 = fmul double %15, %mul10, !dbg !7961
  store double %mul11, double* %luma, align 8, !dbg !7961
  %16 = load double, double* %hue, align 8, !dbg !7962
  %17 = load double, double* %chroma, align 8, !dbg !7963
  %18 = load double, double* %luma, align 8, !dbg !7964
  %19 = load i16*, i16** %red.addr, align 8, !dbg !7965
  %20 = load i16*, i16** %green.addr, align 8, !dbg !7966
  %21 = load i16*, i16** %blue.addr, align 8, !dbg !7967
  call void @ConvertHCLToRGB(double %16, double %17, double %18, i16* %19, i16* %20, i16* %21), !dbg !7968
  ret void, !dbg !7969
}

; Function Attrs: noinline nounwind uwtable
define internal void @ModulateHCLp(double %percent_hue, double %percent_chroma, double %percent_luma, i16* %red, i16* %green, i16* %blue) #0 !dbg !7970 {
entry:
  %percent_hue.addr = alloca double, align 8
  %percent_chroma.addr = alloca double, align 8
  %percent_luma.addr = alloca double, align 8
  %red.addr = alloca i16*, align 8
  %green.addr = alloca i16*, align 8
  %blue.addr = alloca i16*, align 8
  %hue = alloca double, align 8
  %luma = alloca double, align 8
  %chroma = alloca double, align 8
  store double %percent_hue, double* %percent_hue.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_hue.addr, metadata !7971, metadata !DIExpression()), !dbg !7972
  store double %percent_chroma, double* %percent_chroma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_chroma.addr, metadata !7973, metadata !DIExpression()), !dbg !7974
  store double %percent_luma, double* %percent_luma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_luma.addr, metadata !7975, metadata !DIExpression()), !dbg !7976
  store i16* %red, i16** %red.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %red.addr, metadata !7977, metadata !DIExpression()), !dbg !7978
  store i16* %green, i16** %green.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %green.addr, metadata !7979, metadata !DIExpression()), !dbg !7980
  store i16* %blue, i16** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %blue.addr, metadata !7981, metadata !DIExpression()), !dbg !7982
  call void @llvm.dbg.declare(metadata double* %hue, metadata !7983, metadata !DIExpression()), !dbg !7984
  call void @llvm.dbg.declare(metadata double* %luma, metadata !7985, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.declare(metadata double* %chroma, metadata !7987, metadata !DIExpression()), !dbg !7988
  %0 = load i16*, i16** %red.addr, align 8, !dbg !7989
  %1 = load i16, i16* %0, align 2, !dbg !7990
  %2 = load i16*, i16** %green.addr, align 8, !dbg !7991
  %3 = load i16, i16* %2, align 2, !dbg !7992
  %4 = load i16*, i16** %blue.addr, align 8, !dbg !7993
  %5 = load i16, i16* %4, align 2, !dbg !7994
  call void @ConvertRGBToHCLp(i16 zeroext %1, i16 zeroext %3, i16 zeroext %5, double* %hue, double* %chroma, double* %luma), !dbg !7995
  %6 = load double, double* %percent_hue.addr, align 8, !dbg !7996
  %mul = fmul double 1.000000e-02, %6, !dbg !7997
  %sub = fsub double %mul, 1.000000e+00, !dbg !7998
  %mul1 = fmul double 5.000000e-01, %sub, !dbg !7999
  %7 = load double, double* %hue, align 8, !dbg !8000
  %add = fadd double %7, %mul1, !dbg !8000
  store double %add, double* %hue, align 8, !dbg !8000
  br label %while.cond, !dbg !8001

while.cond:                                       ; preds = %while.body, %entry
  %8 = load double, double* %hue, align 8, !dbg !8002
  %cmp = fcmp olt double %8, 0.000000e+00, !dbg !8003
  br i1 %cmp, label %while.body, label %while.end, !dbg !8001

while.body:                                       ; preds = %while.cond
  %9 = load double, double* %hue, align 8, !dbg !8004
  %add2 = fadd double %9, 1.000000e+00, !dbg !8004
  store double %add2, double* %hue, align 8, !dbg !8004
  br label %while.cond, !dbg !8001, !llvm.loop !8005

while.end:                                        ; preds = %while.cond
  br label %while.cond3, !dbg !8007

while.cond3:                                      ; preds = %while.body5, %while.end
  %10 = load double, double* %hue, align 8, !dbg !8008
  %cmp4 = fcmp ogt double %10, 1.000000e+00, !dbg !8009
  br i1 %cmp4, label %while.body5, label %while.end7, !dbg !8007

while.body5:                                      ; preds = %while.cond3
  %11 = load double, double* %hue, align 8, !dbg !8010
  %sub6 = fsub double %11, 1.000000e+00, !dbg !8010
  store double %sub6, double* %hue, align 8, !dbg !8010
  br label %while.cond3, !dbg !8007, !llvm.loop !8011

while.end7:                                       ; preds = %while.cond3
  %12 = load double, double* %percent_chroma.addr, align 8, !dbg !8013
  %mul8 = fmul double 1.000000e-02, %12, !dbg !8014
  %13 = load double, double* %chroma, align 8, !dbg !8015
  %mul9 = fmul double %13, %mul8, !dbg !8015
  store double %mul9, double* %chroma, align 8, !dbg !8015
  %14 = load double, double* %percent_luma.addr, align 8, !dbg !8016
  %mul10 = fmul double 1.000000e-02, %14, !dbg !8017
  %15 = load double, double* %luma, align 8, !dbg !8018
  %mul11 = fmul double %15, %mul10, !dbg !8018
  store double %mul11, double* %luma, align 8, !dbg !8018
  %16 = load double, double* %hue, align 8, !dbg !8019
  %17 = load double, double* %chroma, align 8, !dbg !8020
  %18 = load double, double* %luma, align 8, !dbg !8021
  %19 = load i16*, i16** %red.addr, align 8, !dbg !8022
  %20 = load i16*, i16** %green.addr, align 8, !dbg !8023
  %21 = load i16*, i16** %blue.addr, align 8, !dbg !8024
  call void @ConvertHCLpToRGB(double %16, double %17, double %18, i16* %19, i16* %20, i16* %21), !dbg !8025
  ret void, !dbg !8026
}

; Function Attrs: noinline nounwind uwtable
define internal void @ModulateHSB(double %percent_hue, double %percent_saturation, double %percent_brightness, i16* %red, i16* %green, i16* %blue) #0 !dbg !8027 {
entry:
  %percent_hue.addr = alloca double, align 8
  %percent_saturation.addr = alloca double, align 8
  %percent_brightness.addr = alloca double, align 8
  %red.addr = alloca i16*, align 8
  %green.addr = alloca i16*, align 8
  %blue.addr = alloca i16*, align 8
  %brightness = alloca double, align 8
  %hue = alloca double, align 8
  %saturation = alloca double, align 8
  store double %percent_hue, double* %percent_hue.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_hue.addr, metadata !8028, metadata !DIExpression()), !dbg !8029
  store double %percent_saturation, double* %percent_saturation.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_saturation.addr, metadata !8030, metadata !DIExpression()), !dbg !8031
  store double %percent_brightness, double* %percent_brightness.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_brightness.addr, metadata !8032, metadata !DIExpression()), !dbg !8033
  store i16* %red, i16** %red.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %red.addr, metadata !8034, metadata !DIExpression()), !dbg !8035
  store i16* %green, i16** %green.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %green.addr, metadata !8036, metadata !DIExpression()), !dbg !8037
  store i16* %blue, i16** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %blue.addr, metadata !8038, metadata !DIExpression()), !dbg !8039
  call void @llvm.dbg.declare(metadata double* %brightness, metadata !8040, metadata !DIExpression()), !dbg !8041
  call void @llvm.dbg.declare(metadata double* %hue, metadata !8042, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.declare(metadata double* %saturation, metadata !8044, metadata !DIExpression()), !dbg !8045
  %0 = load i16*, i16** %red.addr, align 8, !dbg !8046
  %1 = load i16, i16* %0, align 2, !dbg !8047
  %2 = load i16*, i16** %green.addr, align 8, !dbg !8048
  %3 = load i16, i16* %2, align 2, !dbg !8049
  %4 = load i16*, i16** %blue.addr, align 8, !dbg !8050
  %5 = load i16, i16* %4, align 2, !dbg !8051
  call void @ConvertRGBToHSB(i16 zeroext %1, i16 zeroext %3, i16 zeroext %5, double* %hue, double* %saturation, double* %brightness), !dbg !8052
  %6 = load double, double* %percent_hue.addr, align 8, !dbg !8053
  %mul = fmul double 1.000000e-02, %6, !dbg !8054
  %sub = fsub double %mul, 1.000000e+00, !dbg !8055
  %mul1 = fmul double 5.000000e-01, %sub, !dbg !8056
  %7 = load double, double* %hue, align 8, !dbg !8057
  %add = fadd double %7, %mul1, !dbg !8057
  store double %add, double* %hue, align 8, !dbg !8057
  br label %while.cond, !dbg !8058

while.cond:                                       ; preds = %while.body, %entry
  %8 = load double, double* %hue, align 8, !dbg !8059
  %cmp = fcmp olt double %8, 0.000000e+00, !dbg !8060
  br i1 %cmp, label %while.body, label %while.end, !dbg !8058

while.body:                                       ; preds = %while.cond
  %9 = load double, double* %hue, align 8, !dbg !8061
  %add2 = fadd double %9, 1.000000e+00, !dbg !8061
  store double %add2, double* %hue, align 8, !dbg !8061
  br label %while.cond, !dbg !8058, !llvm.loop !8062

while.end:                                        ; preds = %while.cond
  br label %while.cond3, !dbg !8064

while.cond3:                                      ; preds = %while.body5, %while.end
  %10 = load double, double* %hue, align 8, !dbg !8065
  %cmp4 = fcmp ogt double %10, 1.000000e+00, !dbg !8066
  br i1 %cmp4, label %while.body5, label %while.end7, !dbg !8064

while.body5:                                      ; preds = %while.cond3
  %11 = load double, double* %hue, align 8, !dbg !8067
  %sub6 = fsub double %11, 1.000000e+00, !dbg !8067
  store double %sub6, double* %hue, align 8, !dbg !8067
  br label %while.cond3, !dbg !8064, !llvm.loop !8068

while.end7:                                       ; preds = %while.cond3
  %12 = load double, double* %percent_saturation.addr, align 8, !dbg !8070
  %mul8 = fmul double 1.000000e-02, %12, !dbg !8071
  %13 = load double, double* %saturation, align 8, !dbg !8072
  %mul9 = fmul double %13, %mul8, !dbg !8072
  store double %mul9, double* %saturation, align 8, !dbg !8072
  %14 = load double, double* %percent_brightness.addr, align 8, !dbg !8073
  %mul10 = fmul double 1.000000e-02, %14, !dbg !8074
  %15 = load double, double* %brightness, align 8, !dbg !8075
  %mul11 = fmul double %15, %mul10, !dbg !8075
  store double %mul11, double* %brightness, align 8, !dbg !8075
  %16 = load double, double* %hue, align 8, !dbg !8076
  %17 = load double, double* %saturation, align 8, !dbg !8077
  %18 = load double, double* %brightness, align 8, !dbg !8078
  %19 = load i16*, i16** %red.addr, align 8, !dbg !8079
  %20 = load i16*, i16** %green.addr, align 8, !dbg !8080
  %21 = load i16*, i16** %blue.addr, align 8, !dbg !8081
  call void @ConvertHSBToRGB(double %16, double %17, double %18, i16* %19, i16* %20, i16* %21), !dbg !8082
  ret void, !dbg !8083
}

; Function Attrs: noinline nounwind uwtable
define internal void @ModulateHSI(double %percent_hue, double %percent_saturation, double %percent_intensity, i16* %red, i16* %green, i16* %blue) #0 !dbg !8084 {
entry:
  %percent_hue.addr = alloca double, align 8
  %percent_saturation.addr = alloca double, align 8
  %percent_intensity.addr = alloca double, align 8
  %red.addr = alloca i16*, align 8
  %green.addr = alloca i16*, align 8
  %blue.addr = alloca i16*, align 8
  %intensity = alloca double, align 8
  %hue = alloca double, align 8
  %saturation = alloca double, align 8
  store double %percent_hue, double* %percent_hue.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_hue.addr, metadata !8085, metadata !DIExpression()), !dbg !8086
  store double %percent_saturation, double* %percent_saturation.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_saturation.addr, metadata !8087, metadata !DIExpression()), !dbg !8088
  store double %percent_intensity, double* %percent_intensity.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_intensity.addr, metadata !8089, metadata !DIExpression()), !dbg !8090
  store i16* %red, i16** %red.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %red.addr, metadata !8091, metadata !DIExpression()), !dbg !8092
  store i16* %green, i16** %green.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %green.addr, metadata !8093, metadata !DIExpression()), !dbg !8094
  store i16* %blue, i16** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %blue.addr, metadata !8095, metadata !DIExpression()), !dbg !8096
  call void @llvm.dbg.declare(metadata double* %intensity, metadata !8097, metadata !DIExpression()), !dbg !8098
  call void @llvm.dbg.declare(metadata double* %hue, metadata !8099, metadata !DIExpression()), !dbg !8100
  call void @llvm.dbg.declare(metadata double* %saturation, metadata !8101, metadata !DIExpression()), !dbg !8102
  %0 = load i16*, i16** %red.addr, align 8, !dbg !8103
  %1 = load i16, i16* %0, align 2, !dbg !8104
  %2 = load i16*, i16** %green.addr, align 8, !dbg !8105
  %3 = load i16, i16* %2, align 2, !dbg !8106
  %4 = load i16*, i16** %blue.addr, align 8, !dbg !8107
  %5 = load i16, i16* %4, align 2, !dbg !8108
  call void @ConvertRGBToHSI(i16 zeroext %1, i16 zeroext %3, i16 zeroext %5, double* %hue, double* %saturation, double* %intensity), !dbg !8109
  %6 = load double, double* %percent_hue.addr, align 8, !dbg !8110
  %mul = fmul double 1.000000e-02, %6, !dbg !8111
  %sub = fsub double %mul, 1.000000e+00, !dbg !8112
  %mul1 = fmul double 5.000000e-01, %sub, !dbg !8113
  %7 = load double, double* %hue, align 8, !dbg !8114
  %add = fadd double %7, %mul1, !dbg !8114
  store double %add, double* %hue, align 8, !dbg !8114
  br label %while.cond, !dbg !8115

while.cond:                                       ; preds = %while.body, %entry
  %8 = load double, double* %hue, align 8, !dbg !8116
  %cmp = fcmp olt double %8, 0.000000e+00, !dbg !8117
  br i1 %cmp, label %while.body, label %while.end, !dbg !8115

while.body:                                       ; preds = %while.cond
  %9 = load double, double* %hue, align 8, !dbg !8118
  %add2 = fadd double %9, 1.000000e+00, !dbg !8118
  store double %add2, double* %hue, align 8, !dbg !8118
  br label %while.cond, !dbg !8115, !llvm.loop !8119

while.end:                                        ; preds = %while.cond
  br label %while.cond3, !dbg !8121

while.cond3:                                      ; preds = %while.body5, %while.end
  %10 = load double, double* %hue, align 8, !dbg !8122
  %cmp4 = fcmp ogt double %10, 1.000000e+00, !dbg !8123
  br i1 %cmp4, label %while.body5, label %while.end7, !dbg !8121

while.body5:                                      ; preds = %while.cond3
  %11 = load double, double* %hue, align 8, !dbg !8124
  %sub6 = fsub double %11, 1.000000e+00, !dbg !8124
  store double %sub6, double* %hue, align 8, !dbg !8124
  br label %while.cond3, !dbg !8121, !llvm.loop !8125

while.end7:                                       ; preds = %while.cond3
  %12 = load double, double* %percent_saturation.addr, align 8, !dbg !8127
  %mul8 = fmul double 1.000000e-02, %12, !dbg !8128
  %13 = load double, double* %saturation, align 8, !dbg !8129
  %mul9 = fmul double %13, %mul8, !dbg !8129
  store double %mul9, double* %saturation, align 8, !dbg !8129
  %14 = load double, double* %percent_intensity.addr, align 8, !dbg !8130
  %mul10 = fmul double 1.000000e-02, %14, !dbg !8131
  %15 = load double, double* %intensity, align 8, !dbg !8132
  %mul11 = fmul double %15, %mul10, !dbg !8132
  store double %mul11, double* %intensity, align 8, !dbg !8132
  %16 = load double, double* %hue, align 8, !dbg !8133
  %17 = load double, double* %saturation, align 8, !dbg !8134
  %18 = load double, double* %intensity, align 8, !dbg !8135
  %19 = load i16*, i16** %red.addr, align 8, !dbg !8136
  %20 = load i16*, i16** %green.addr, align 8, !dbg !8137
  %21 = load i16*, i16** %blue.addr, align 8, !dbg !8138
  call void @ConvertHSIToRGB(double %16, double %17, double %18, i16* %19, i16* %20, i16* %21), !dbg !8139
  ret void, !dbg !8140
}

; Function Attrs: noinline nounwind uwtable
define internal void @ModulateHSL(double %percent_hue, double %percent_saturation, double %percent_lightness, i16* %red, i16* %green, i16* %blue) #0 !dbg !8141 {
entry:
  %percent_hue.addr = alloca double, align 8
  %percent_saturation.addr = alloca double, align 8
  %percent_lightness.addr = alloca double, align 8
  %red.addr = alloca i16*, align 8
  %green.addr = alloca i16*, align 8
  %blue.addr = alloca i16*, align 8
  %hue = alloca double, align 8
  %lightness = alloca double, align 8
  %saturation = alloca double, align 8
  store double %percent_hue, double* %percent_hue.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_hue.addr, metadata !8142, metadata !DIExpression()), !dbg !8143
  store double %percent_saturation, double* %percent_saturation.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_saturation.addr, metadata !8144, metadata !DIExpression()), !dbg !8145
  store double %percent_lightness, double* %percent_lightness.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_lightness.addr, metadata !8146, metadata !DIExpression()), !dbg !8147
  store i16* %red, i16** %red.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %red.addr, metadata !8148, metadata !DIExpression()), !dbg !8149
  store i16* %green, i16** %green.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %green.addr, metadata !8150, metadata !DIExpression()), !dbg !8151
  store i16* %blue, i16** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %blue.addr, metadata !8152, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.declare(metadata double* %hue, metadata !8154, metadata !DIExpression()), !dbg !8155
  call void @llvm.dbg.declare(metadata double* %lightness, metadata !8156, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.declare(metadata double* %saturation, metadata !8158, metadata !DIExpression()), !dbg !8159
  %0 = load i16*, i16** %red.addr, align 8, !dbg !8160
  %1 = load i16, i16* %0, align 2, !dbg !8161
  %2 = load i16*, i16** %green.addr, align 8, !dbg !8162
  %3 = load i16, i16* %2, align 2, !dbg !8163
  %4 = load i16*, i16** %blue.addr, align 8, !dbg !8164
  %5 = load i16, i16* %4, align 2, !dbg !8165
  call void @ConvertRGBToHSL(i16 zeroext %1, i16 zeroext %3, i16 zeroext %5, double* %hue, double* %saturation, double* %lightness), !dbg !8166
  %6 = load double, double* %percent_hue.addr, align 8, !dbg !8167
  %mul = fmul double 1.000000e-02, %6, !dbg !8168
  %sub = fsub double %mul, 1.000000e+00, !dbg !8169
  %mul1 = fmul double 5.000000e-01, %sub, !dbg !8170
  %7 = load double, double* %hue, align 8, !dbg !8171
  %add = fadd double %7, %mul1, !dbg !8171
  store double %add, double* %hue, align 8, !dbg !8171
  br label %while.cond, !dbg !8172

while.cond:                                       ; preds = %while.body, %entry
  %8 = load double, double* %hue, align 8, !dbg !8173
  %cmp = fcmp olt double %8, 0.000000e+00, !dbg !8174
  br i1 %cmp, label %while.body, label %while.end, !dbg !8172

while.body:                                       ; preds = %while.cond
  %9 = load double, double* %hue, align 8, !dbg !8175
  %add2 = fadd double %9, 1.000000e+00, !dbg !8175
  store double %add2, double* %hue, align 8, !dbg !8175
  br label %while.cond, !dbg !8172, !llvm.loop !8176

while.end:                                        ; preds = %while.cond
  br label %while.cond3, !dbg !8178

while.cond3:                                      ; preds = %while.body5, %while.end
  %10 = load double, double* %hue, align 8, !dbg !8179
  %cmp4 = fcmp oge double %10, 1.000000e+00, !dbg !8180
  br i1 %cmp4, label %while.body5, label %while.end7, !dbg !8178

while.body5:                                      ; preds = %while.cond3
  %11 = load double, double* %hue, align 8, !dbg !8181
  %sub6 = fsub double %11, 1.000000e+00, !dbg !8181
  store double %sub6, double* %hue, align 8, !dbg !8181
  br label %while.cond3, !dbg !8178, !llvm.loop !8182

while.end7:                                       ; preds = %while.cond3
  %12 = load double, double* %percent_saturation.addr, align 8, !dbg !8184
  %mul8 = fmul double 1.000000e-02, %12, !dbg !8185
  %13 = load double, double* %saturation, align 8, !dbg !8186
  %mul9 = fmul double %13, %mul8, !dbg !8186
  store double %mul9, double* %saturation, align 8, !dbg !8186
  %14 = load double, double* %percent_lightness.addr, align 8, !dbg !8187
  %mul10 = fmul double 1.000000e-02, %14, !dbg !8188
  %15 = load double, double* %lightness, align 8, !dbg !8189
  %mul11 = fmul double %15, %mul10, !dbg !8189
  store double %mul11, double* %lightness, align 8, !dbg !8189
  %16 = load double, double* %hue, align 8, !dbg !8190
  %17 = load double, double* %saturation, align 8, !dbg !8191
  %18 = load double, double* %lightness, align 8, !dbg !8192
  %19 = load i16*, i16** %red.addr, align 8, !dbg !8193
  %20 = load i16*, i16** %green.addr, align 8, !dbg !8194
  %21 = load i16*, i16** %blue.addr, align 8, !dbg !8195
  call void @ConvertHSLToRGB(double %16, double %17, double %18, i16* %19, i16* %20, i16* %21), !dbg !8196
  ret void, !dbg !8197
}

; Function Attrs: noinline nounwind uwtable
define internal void @ModulateHSV(double %percent_hue, double %percent_saturation, double %percent_value, i16* %red, i16* %green, i16* %blue) #0 !dbg !8198 {
entry:
  %percent_hue.addr = alloca double, align 8
  %percent_saturation.addr = alloca double, align 8
  %percent_value.addr = alloca double, align 8
  %red.addr = alloca i16*, align 8
  %green.addr = alloca i16*, align 8
  %blue.addr = alloca i16*, align 8
  %hue = alloca double, align 8
  %saturation = alloca double, align 8
  %value = alloca double, align 8
  store double %percent_hue, double* %percent_hue.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_hue.addr, metadata !8199, metadata !DIExpression()), !dbg !8200
  store double %percent_saturation, double* %percent_saturation.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_saturation.addr, metadata !8201, metadata !DIExpression()), !dbg !8202
  store double %percent_value, double* %percent_value.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_value.addr, metadata !8203, metadata !DIExpression()), !dbg !8204
  store i16* %red, i16** %red.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %red.addr, metadata !8205, metadata !DIExpression()), !dbg !8206
  store i16* %green, i16** %green.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %green.addr, metadata !8207, metadata !DIExpression()), !dbg !8208
  store i16* %blue, i16** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %blue.addr, metadata !8209, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.declare(metadata double* %hue, metadata !8211, metadata !DIExpression()), !dbg !8212
  call void @llvm.dbg.declare(metadata double* %saturation, metadata !8213, metadata !DIExpression()), !dbg !8214
  call void @llvm.dbg.declare(metadata double* %value, metadata !8215, metadata !DIExpression()), !dbg !8216
  %0 = load i16*, i16** %red.addr, align 8, !dbg !8217
  %1 = load i16, i16* %0, align 2, !dbg !8218
  %2 = load i16*, i16** %green.addr, align 8, !dbg !8219
  %3 = load i16, i16* %2, align 2, !dbg !8220
  %4 = load i16*, i16** %blue.addr, align 8, !dbg !8221
  %5 = load i16, i16* %4, align 2, !dbg !8222
  call void @ConvertRGBToHSV(i16 zeroext %1, i16 zeroext %3, i16 zeroext %5, double* %hue, double* %saturation, double* %value), !dbg !8223
  %6 = load double, double* %percent_hue.addr, align 8, !dbg !8224
  %mul = fmul double 1.000000e-02, %6, !dbg !8225
  %sub = fsub double %mul, 1.000000e+00, !dbg !8226
  %mul1 = fmul double 5.000000e-01, %sub, !dbg !8227
  %7 = load double, double* %hue, align 8, !dbg !8228
  %add = fadd double %7, %mul1, !dbg !8228
  store double %add, double* %hue, align 8, !dbg !8228
  br label %while.cond, !dbg !8229

while.cond:                                       ; preds = %while.body, %entry
  %8 = load double, double* %hue, align 8, !dbg !8230
  %cmp = fcmp olt double %8, 0.000000e+00, !dbg !8231
  br i1 %cmp, label %while.body, label %while.end, !dbg !8229

while.body:                                       ; preds = %while.cond
  %9 = load double, double* %hue, align 8, !dbg !8232
  %add2 = fadd double %9, 1.000000e+00, !dbg !8232
  store double %add2, double* %hue, align 8, !dbg !8232
  br label %while.cond, !dbg !8229, !llvm.loop !8233

while.end:                                        ; preds = %while.cond
  br label %while.cond3, !dbg !8235

while.cond3:                                      ; preds = %while.body5, %while.end
  %10 = load double, double* %hue, align 8, !dbg !8236
  %cmp4 = fcmp oge double %10, 1.000000e+00, !dbg !8237
  br i1 %cmp4, label %while.body5, label %while.end7, !dbg !8235

while.body5:                                      ; preds = %while.cond3
  %11 = load double, double* %hue, align 8, !dbg !8238
  %sub6 = fsub double %11, 1.000000e+00, !dbg !8238
  store double %sub6, double* %hue, align 8, !dbg !8238
  br label %while.cond3, !dbg !8235, !llvm.loop !8239

while.end7:                                       ; preds = %while.cond3
  %12 = load double, double* %percent_saturation.addr, align 8, !dbg !8241
  %mul8 = fmul double 1.000000e-02, %12, !dbg !8242
  %13 = load double, double* %saturation, align 8, !dbg !8243
  %mul9 = fmul double %13, %mul8, !dbg !8243
  store double %mul9, double* %saturation, align 8, !dbg !8243
  %14 = load double, double* %percent_value.addr, align 8, !dbg !8244
  %mul10 = fmul double 1.000000e-02, %14, !dbg !8245
  %15 = load double, double* %value, align 8, !dbg !8246
  %mul11 = fmul double %15, %mul10, !dbg !8246
  store double %mul11, double* %value, align 8, !dbg !8246
  %16 = load double, double* %hue, align 8, !dbg !8247
  %17 = load double, double* %saturation, align 8, !dbg !8248
  %18 = load double, double* %value, align 8, !dbg !8249
  %19 = load i16*, i16** %red.addr, align 8, !dbg !8250
  %20 = load i16*, i16** %green.addr, align 8, !dbg !8251
  %21 = load i16*, i16** %blue.addr, align 8, !dbg !8252
  call void @ConvertHSVToRGB(double %16, double %17, double %18, i16* %19, i16* %20, i16* %21), !dbg !8253
  ret void, !dbg !8254
}

; Function Attrs: noinline nounwind uwtable
define internal void @ModulateHWB(double %percent_hue, double %percent_whiteness, double %percent_blackness, i16* %red, i16* %green, i16* %blue) #0 !dbg !8255 {
entry:
  %percent_hue.addr = alloca double, align 8
  %percent_whiteness.addr = alloca double, align 8
  %percent_blackness.addr = alloca double, align 8
  %red.addr = alloca i16*, align 8
  %green.addr = alloca i16*, align 8
  %blue.addr = alloca i16*, align 8
  %blackness = alloca double, align 8
  %hue = alloca double, align 8
  %whiteness = alloca double, align 8
  store double %percent_hue, double* %percent_hue.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_hue.addr, metadata !8256, metadata !DIExpression()), !dbg !8257
  store double %percent_whiteness, double* %percent_whiteness.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_whiteness.addr, metadata !8258, metadata !DIExpression()), !dbg !8259
  store double %percent_blackness, double* %percent_blackness.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_blackness.addr, metadata !8260, metadata !DIExpression()), !dbg !8261
  store i16* %red, i16** %red.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %red.addr, metadata !8262, metadata !DIExpression()), !dbg !8263
  store i16* %green, i16** %green.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %green.addr, metadata !8264, metadata !DIExpression()), !dbg !8265
  store i16* %blue, i16** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %blue.addr, metadata !8266, metadata !DIExpression()), !dbg !8267
  call void @llvm.dbg.declare(metadata double* %blackness, metadata !8268, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.declare(metadata double* %hue, metadata !8270, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.declare(metadata double* %whiteness, metadata !8272, metadata !DIExpression()), !dbg !8273
  %0 = load i16*, i16** %red.addr, align 8, !dbg !8274
  %1 = load i16, i16* %0, align 2, !dbg !8275
  %2 = load i16*, i16** %green.addr, align 8, !dbg !8276
  %3 = load i16, i16* %2, align 2, !dbg !8277
  %4 = load i16*, i16** %blue.addr, align 8, !dbg !8278
  %5 = load i16, i16* %4, align 2, !dbg !8279
  call void @ConvertRGBToHWB(i16 zeroext %1, i16 zeroext %3, i16 zeroext %5, double* %hue, double* %whiteness, double* %blackness), !dbg !8280
  %6 = load double, double* %percent_hue.addr, align 8, !dbg !8281
  %mul = fmul double 1.000000e-02, %6, !dbg !8282
  %sub = fsub double %mul, 1.000000e+00, !dbg !8283
  %mul1 = fmul double 5.000000e-01, %sub, !dbg !8284
  %7 = load double, double* %hue, align 8, !dbg !8285
  %add = fadd double %7, %mul1, !dbg !8285
  store double %add, double* %hue, align 8, !dbg !8285
  br label %while.cond, !dbg !8286

while.cond:                                       ; preds = %while.body, %entry
  %8 = load double, double* %hue, align 8, !dbg !8287
  %cmp = fcmp olt double %8, 0.000000e+00, !dbg !8288
  br i1 %cmp, label %while.body, label %while.end, !dbg !8286

while.body:                                       ; preds = %while.cond
  %9 = load double, double* %hue, align 8, !dbg !8289
  %add2 = fadd double %9, 1.000000e+00, !dbg !8289
  store double %add2, double* %hue, align 8, !dbg !8289
  br label %while.cond, !dbg !8286, !llvm.loop !8290

while.end:                                        ; preds = %while.cond
  br label %while.cond3, !dbg !8292

while.cond3:                                      ; preds = %while.body5, %while.end
  %10 = load double, double* %hue, align 8, !dbg !8293
  %cmp4 = fcmp oge double %10, 1.000000e+00, !dbg !8294
  br i1 %cmp4, label %while.body5, label %while.end7, !dbg !8292

while.body5:                                      ; preds = %while.cond3
  %11 = load double, double* %hue, align 8, !dbg !8295
  %sub6 = fsub double %11, 1.000000e+00, !dbg !8295
  store double %sub6, double* %hue, align 8, !dbg !8295
  br label %while.cond3, !dbg !8292, !llvm.loop !8296

while.end7:                                       ; preds = %while.cond3
  %12 = load double, double* %percent_blackness.addr, align 8, !dbg !8298
  %mul8 = fmul double 1.000000e-02, %12, !dbg !8299
  %13 = load double, double* %blackness, align 8, !dbg !8300
  %mul9 = fmul double %13, %mul8, !dbg !8300
  store double %mul9, double* %blackness, align 8, !dbg !8300
  %14 = load double, double* %percent_whiteness.addr, align 8, !dbg !8301
  %mul10 = fmul double 1.000000e-02, %14, !dbg !8302
  %15 = load double, double* %whiteness, align 8, !dbg !8303
  %mul11 = fmul double %15, %mul10, !dbg !8303
  store double %mul11, double* %whiteness, align 8, !dbg !8303
  %16 = load double, double* %hue, align 8, !dbg !8304
  %17 = load double, double* %whiteness, align 8, !dbg !8305
  %18 = load double, double* %blackness, align 8, !dbg !8306
  %19 = load i16*, i16** %red.addr, align 8, !dbg !8307
  %20 = load i16*, i16** %green.addr, align 8, !dbg !8308
  %21 = load i16*, i16** %blue.addr, align 8, !dbg !8309
  call void @ConvertHWBToRGB(double %16, double %17, double %18, i16* %19, i16* %20, i16* %21), !dbg !8310
  ret void, !dbg !8311
}

; Function Attrs: noinline nounwind uwtable
define internal void @ModulateLCHab(double %percent_luma, double %percent_chroma, double %percent_hue, i16* %red, i16* %green, i16* %blue) #0 !dbg !8312 {
entry:
  %percent_luma.addr = alloca double, align 8
  %percent_chroma.addr = alloca double, align 8
  %percent_hue.addr = alloca double, align 8
  %red.addr = alloca i16*, align 8
  %green.addr = alloca i16*, align 8
  %blue.addr = alloca i16*, align 8
  %hue = alloca double, align 8
  %luma = alloca double, align 8
  %chroma = alloca double, align 8
  store double %percent_luma, double* %percent_luma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_luma.addr, metadata !8313, metadata !DIExpression()), !dbg !8314
  store double %percent_chroma, double* %percent_chroma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_chroma.addr, metadata !8315, metadata !DIExpression()), !dbg !8316
  store double %percent_hue, double* %percent_hue.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_hue.addr, metadata !8317, metadata !DIExpression()), !dbg !8318
  store i16* %red, i16** %red.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %red.addr, metadata !8319, metadata !DIExpression()), !dbg !8320
  store i16* %green, i16** %green.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %green.addr, metadata !8321, metadata !DIExpression()), !dbg !8322
  store i16* %blue, i16** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %blue.addr, metadata !8323, metadata !DIExpression()), !dbg !8324
  call void @llvm.dbg.declare(metadata double* %hue, metadata !8325, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.declare(metadata double* %luma, metadata !8327, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.declare(metadata double* %chroma, metadata !8329, metadata !DIExpression()), !dbg !8330
  %0 = load i16*, i16** %red.addr, align 8, !dbg !8331
  %1 = load i16, i16* %0, align 2, !dbg !8332
  %2 = load i16*, i16** %green.addr, align 8, !dbg !8333
  %3 = load i16, i16* %2, align 2, !dbg !8334
  %4 = load i16*, i16** %blue.addr, align 8, !dbg !8335
  %5 = load i16, i16* %4, align 2, !dbg !8336
  call void @ConvertRGBToLCHab(i16 zeroext %1, i16 zeroext %3, i16 zeroext %5, double* %luma, double* %chroma, double* %hue), !dbg !8337
  %6 = load double, double* %percent_luma.addr, align 8, !dbg !8338
  %mul = fmul double 1.000000e-02, %6, !dbg !8339
  %7 = load double, double* %luma, align 8, !dbg !8340
  %mul1 = fmul double %7, %mul, !dbg !8340
  store double %mul1, double* %luma, align 8, !dbg !8340
  %8 = load double, double* %percent_chroma.addr, align 8, !dbg !8341
  %mul2 = fmul double 1.000000e-02, %8, !dbg !8342
  %9 = load double, double* %chroma, align 8, !dbg !8343
  %mul3 = fmul double %9, %mul2, !dbg !8343
  store double %mul3, double* %chroma, align 8, !dbg !8343
  %10 = load double, double* %percent_hue.addr, align 8, !dbg !8344
  %mul4 = fmul double 1.000000e-02, %10, !dbg !8345
  %sub = fsub double %mul4, 1.000000e+00, !dbg !8346
  %mul5 = fmul double 5.000000e-01, %sub, !dbg !8347
  %11 = load double, double* %hue, align 8, !dbg !8348
  %add = fadd double %11, %mul5, !dbg !8348
  store double %add, double* %hue, align 8, !dbg !8348
  br label %while.cond, !dbg !8349

while.cond:                                       ; preds = %while.body, %entry
  %12 = load double, double* %hue, align 8, !dbg !8350
  %cmp = fcmp olt double %12, 0.000000e+00, !dbg !8351
  br i1 %cmp, label %while.body, label %while.end, !dbg !8349

while.body:                                       ; preds = %while.cond
  %13 = load double, double* %hue, align 8, !dbg !8352
  %add6 = fadd double %13, 1.000000e+00, !dbg !8352
  store double %add6, double* %hue, align 8, !dbg !8352
  br label %while.cond, !dbg !8349, !llvm.loop !8353

while.end:                                        ; preds = %while.cond
  br label %while.cond7, !dbg !8355

while.cond7:                                      ; preds = %while.body9, %while.end
  %14 = load double, double* %hue, align 8, !dbg !8356
  %cmp8 = fcmp oge double %14, 1.000000e+00, !dbg !8357
  br i1 %cmp8, label %while.body9, label %while.end11, !dbg !8355

while.body9:                                      ; preds = %while.cond7
  %15 = load double, double* %hue, align 8, !dbg !8358
  %sub10 = fsub double %15, 1.000000e+00, !dbg !8358
  store double %sub10, double* %hue, align 8, !dbg !8358
  br label %while.cond7, !dbg !8355, !llvm.loop !8359

while.end11:                                      ; preds = %while.cond7
  %16 = load double, double* %luma, align 8, !dbg !8361
  %17 = load double, double* %chroma, align 8, !dbg !8362
  %18 = load double, double* %hue, align 8, !dbg !8363
  %19 = load i16*, i16** %red.addr, align 8, !dbg !8364
  %20 = load i16*, i16** %green.addr, align 8, !dbg !8365
  %21 = load i16*, i16** %blue.addr, align 8, !dbg !8366
  call void @ConvertLCHabToRGB(double %16, double %17, double %18, i16* %19, i16* %20, i16* %21), !dbg !8367
  ret void, !dbg !8368
}

; Function Attrs: noinline nounwind uwtable
define internal void @ModulateLCHuv(double %percent_luma, double %percent_chroma, double %percent_hue, i16* %red, i16* %green, i16* %blue) #0 !dbg !8369 {
entry:
  %percent_luma.addr = alloca double, align 8
  %percent_chroma.addr = alloca double, align 8
  %percent_hue.addr = alloca double, align 8
  %red.addr = alloca i16*, align 8
  %green.addr = alloca i16*, align 8
  %blue.addr = alloca i16*, align 8
  %hue = alloca double, align 8
  %luma = alloca double, align 8
  %chroma = alloca double, align 8
  store double %percent_luma, double* %percent_luma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_luma.addr, metadata !8370, metadata !DIExpression()), !dbg !8371
  store double %percent_chroma, double* %percent_chroma.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_chroma.addr, metadata !8372, metadata !DIExpression()), !dbg !8373
  store double %percent_hue, double* %percent_hue.addr, align 8
  call void @llvm.dbg.declare(metadata double* %percent_hue.addr, metadata !8374, metadata !DIExpression()), !dbg !8375
  store i16* %red, i16** %red.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %red.addr, metadata !8376, metadata !DIExpression()), !dbg !8377
  store i16* %green, i16** %green.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %green.addr, metadata !8378, metadata !DIExpression()), !dbg !8379
  store i16* %blue, i16** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %blue.addr, metadata !8380, metadata !DIExpression()), !dbg !8381
  call void @llvm.dbg.declare(metadata double* %hue, metadata !8382, metadata !DIExpression()), !dbg !8383
  call void @llvm.dbg.declare(metadata double* %luma, metadata !8384, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.declare(metadata double* %chroma, metadata !8386, metadata !DIExpression()), !dbg !8387
  %0 = load i16*, i16** %red.addr, align 8, !dbg !8388
  %1 = load i16, i16* %0, align 2, !dbg !8389
  %2 = load i16*, i16** %green.addr, align 8, !dbg !8390
  %3 = load i16, i16* %2, align 2, !dbg !8391
  %4 = load i16*, i16** %blue.addr, align 8, !dbg !8392
  %5 = load i16, i16* %4, align 2, !dbg !8393
  call void @ConvertRGBToLCHuv(i16 zeroext %1, i16 zeroext %3, i16 zeroext %5, double* %luma, double* %chroma, double* %hue), !dbg !8394
  %6 = load double, double* %percent_luma.addr, align 8, !dbg !8395
  %mul = fmul double 1.000000e-02, %6, !dbg !8396
  %7 = load double, double* %luma, align 8, !dbg !8397
  %mul1 = fmul double %7, %mul, !dbg !8397
  store double %mul1, double* %luma, align 8, !dbg !8397
  %8 = load double, double* %percent_chroma.addr, align 8, !dbg !8398
  %mul2 = fmul double 1.000000e-02, %8, !dbg !8399
  %9 = load double, double* %chroma, align 8, !dbg !8400
  %mul3 = fmul double %9, %mul2, !dbg !8400
  store double %mul3, double* %chroma, align 8, !dbg !8400
  %10 = load double, double* %percent_hue.addr, align 8, !dbg !8401
  %mul4 = fmul double 1.000000e-02, %10, !dbg !8402
  %sub = fsub double %mul4, 1.000000e+00, !dbg !8403
  %mul5 = fmul double 5.000000e-01, %sub, !dbg !8404
  %11 = load double, double* %hue, align 8, !dbg !8405
  %add = fadd double %11, %mul5, !dbg !8405
  store double %add, double* %hue, align 8, !dbg !8405
  br label %while.cond, !dbg !8406

while.cond:                                       ; preds = %while.body, %entry
  %12 = load double, double* %hue, align 8, !dbg !8407
  %cmp = fcmp olt double %12, 0.000000e+00, !dbg !8408
  br i1 %cmp, label %while.body, label %while.end, !dbg !8406

while.body:                                       ; preds = %while.cond
  %13 = load double, double* %hue, align 8, !dbg !8409
  %add6 = fadd double %13, 1.000000e+00, !dbg !8409
  store double %add6, double* %hue, align 8, !dbg !8409
  br label %while.cond, !dbg !8406, !llvm.loop !8410

while.end:                                        ; preds = %while.cond
  br label %while.cond7, !dbg !8412

while.cond7:                                      ; preds = %while.body9, %while.end
  %14 = load double, double* %hue, align 8, !dbg !8413
  %cmp8 = fcmp oge double %14, 1.000000e+00, !dbg !8414
  br i1 %cmp8, label %while.body9, label %while.end11, !dbg !8412

while.body9:                                      ; preds = %while.cond7
  %15 = load double, double* %hue, align 8, !dbg !8415
  %sub10 = fsub double %15, 1.000000e+00, !dbg !8415
  store double %sub10, double* %hue, align 8, !dbg !8415
  br label %while.cond7, !dbg !8412, !llvm.loop !8416

while.end11:                                      ; preds = %while.cond7
  %16 = load double, double* %luma, align 8, !dbg !8418
  %17 = load double, double* %chroma, align 8, !dbg !8419
  %18 = load double, double* %hue, align 8, !dbg !8420
  %19 = load i16*, i16** %red.addr, align 8, !dbg !8421
  %20 = load i16*, i16** %green.addr, align 8, !dbg !8422
  %21 = load i16*, i16** %blue.addr, align 8, !dbg !8423
  call void @ConvertLCHuvToRGB(double %16, double %17, double %18, i16* %19, i16* %20, i16* %21), !dbg !8424
  ret void, !dbg !8425
}

declare dso_local i32 @AccelerateModulateImage(%struct._Image*, double, double, double, i32, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @NegateImage(%struct._Image* %image, i32 %grayscale) #0 !dbg !8426 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %grayscale.addr = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8427, metadata !DIExpression()), !dbg !8428
  store i32 %grayscale, i32* %grayscale.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %grayscale.addr, metadata !8429, metadata !DIExpression()), !dbg !8430
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8431, metadata !DIExpression()), !dbg !8432
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8433
  %1 = load i32, i32* %grayscale.addr, align 4, !dbg !8434
  %call = call i32 @NegateImageChannel(%struct._Image* %0, i32 134217719, i32 %1), !dbg !8435
  store i32 %call, i32* %status, align 4, !dbg !8436
  %2 = load i32, i32* %status, align 4, !dbg !8437
  ret i32 %2, !dbg !8438
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @NegateImageChannel(%struct._Image* %image, i32 %channel, i32 %grayscale) #0 !dbg !8439 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %grayscale.addr = alloca i32, align 4
  %image_view = alloca %struct._CacheView*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %i = alloca i64, align 8
  %y = alloca i64, align 8
  %sync = alloca i32, align 4
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %proceed = alloca i32, align 4
  %indexes197 = alloca i16*, align 8
  %q198 = alloca %struct._PixelPacket*, align 8
  %x199 = alloca i64, align 8
  %proceed343 = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8442, metadata !DIExpression()), !dbg !8443
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !8444, metadata !DIExpression()), !dbg !8445
  store i32 %grayscale, i32* %grayscale.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %grayscale.addr, metadata !8446, metadata !DIExpression()), !dbg !8447
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !8448, metadata !DIExpression()), !dbg !8449
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !8450, metadata !DIExpression()), !dbg !8451
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8452, metadata !DIExpression()), !dbg !8453
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !8454, metadata !DIExpression()), !dbg !8455
  call void @llvm.dbg.declare(metadata i64* %i, metadata !8456, metadata !DIExpression()), !dbg !8457
  call void @llvm.dbg.declare(metadata i64* %y, metadata !8458, metadata !DIExpression()), !dbg !8459
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8460
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !8462
  %1 = load i32, i32* %debug, align 8, !dbg !8462
  %cmp = icmp ne i32 %1, 0, !dbg !8463
  br i1 %cmp, label %if.then, label %if.end, !dbg !8464

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8465
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !8466
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !8465
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4011, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !8467
  br label %if.end, !dbg !8468

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8469
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 0, !dbg !8471
  %4 = load i32, i32* %storage_class, align 8, !dbg !8471
  %cmp1 = icmp eq i32 %4, 2, !dbg !8472
  br i1 %cmp1, label %if.then2, label %if.end63, !dbg !8473

if.then2:                                         ; preds = %if.end
  store i64 0, i64* %i, align 8, !dbg !8474
  br label %for.cond, !dbg !8477

for.cond:                                         ; preds = %for.inc, %if.then2
  %5 = load i64, i64* %i, align 8, !dbg !8478
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8480
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 10, !dbg !8481
  %7 = load i64, i64* %colors, align 8, !dbg !8481
  %cmp3 = icmp slt i64 %5, %7, !dbg !8482
  br i1 %cmp3, label %for.body, label %for.end, !dbg !8483

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %grayscale.addr, align 4, !dbg !8484
  %cmp4 = icmp ne i32 %8, 0, !dbg !8487
  br i1 %cmp4, label %if.then5, label %if.end22, !dbg !8488

if.then5:                                         ; preds = %for.body
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8489
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 11, !dbg !8491
  %10 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !8491
  %11 = load i64, i64* %i, align 8, !dbg !8492
  %arrayidx = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %10, i64 %11, !dbg !8489
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx, i32 0, i32 2, !dbg !8493
  %12 = load i16, i16* %red, align 2, !dbg !8493
  %conv = zext i16 %12 to i32, !dbg !8489
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8494
  %colormap6 = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 11, !dbg !8495
  %14 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap6, align 8, !dbg !8495
  %15 = load i64, i64* %i, align 8, !dbg !8496
  %arrayidx7 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %14, i64 %15, !dbg !8494
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx7, i32 0, i32 1, !dbg !8497
  %16 = load i16, i16* %green, align 2, !dbg !8497
  %conv8 = zext i16 %16 to i32, !dbg !8494
  %cmp9 = icmp ne i32 %conv, %conv8, !dbg !8498
  br i1 %cmp9, label %if.then20, label %lor.lhs.false, !dbg !8499

lor.lhs.false:                                    ; preds = %if.then5
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8500
  %colormap11 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 11, !dbg !8501
  %18 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap11, align 8, !dbg !8501
  %19 = load i64, i64* %i, align 8, !dbg !8502
  %arrayidx12 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %18, i64 %19, !dbg !8500
  %green13 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx12, i32 0, i32 1, !dbg !8503
  %20 = load i16, i16* %green13, align 2, !dbg !8503
  %conv14 = zext i16 %20 to i32, !dbg !8500
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8504
  %colormap15 = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 11, !dbg !8505
  %22 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap15, align 8, !dbg !8505
  %23 = load i64, i64* %i, align 8, !dbg !8506
  %arrayidx16 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %22, i64 %23, !dbg !8504
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx16, i32 0, i32 0, !dbg !8507
  %24 = load i16, i16* %blue, align 2, !dbg !8507
  %conv17 = zext i16 %24 to i32, !dbg !8504
  %cmp18 = icmp ne i32 %conv14, %conv17, !dbg !8508
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !8509

if.then20:                                        ; preds = %lor.lhs.false, %if.then5
  br label %for.inc, !dbg !8510

if.end21:                                         ; preds = %lor.lhs.false
  br label %if.end22, !dbg !8511

if.end22:                                         ; preds = %if.end21, %for.body
  %25 = load i32, i32* %channel.addr, align 4, !dbg !8512
  %and = and i32 %25, 1, !dbg !8514
  %cmp23 = icmp ne i32 %and, 0, !dbg !8515
  br i1 %cmp23, label %if.then25, label %if.end34, !dbg !8516

if.then25:                                        ; preds = %if.end22
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8517
  %colormap26 = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 11, !dbg !8518
  %27 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap26, align 8, !dbg !8518
  %28 = load i64, i64* %i, align 8, !dbg !8519
  %arrayidx27 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %27, i64 %28, !dbg !8517
  %red28 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx27, i32 0, i32 2, !dbg !8520
  %29 = load i16, i16* %red28, align 2, !dbg !8520
  %conv29 = zext i16 %29 to i32, !dbg !8517
  %sub = sub nsw i32 65535, %conv29, !dbg !8521
  %conv30 = trunc i32 %sub to i16, !dbg !8522
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8523
  %colormap31 = getelementptr inbounds %struct._Image, %struct._Image* %30, i32 0, i32 11, !dbg !8524
  %31 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap31, align 8, !dbg !8524
  %32 = load i64, i64* %i, align 8, !dbg !8525
  %arrayidx32 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %31, i64 %32, !dbg !8523
  %red33 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx32, i32 0, i32 2, !dbg !8526
  store i16 %conv30, i16* %red33, align 2, !dbg !8527
  br label %if.end34, !dbg !8523

if.end34:                                         ; preds = %if.then25, %if.end22
  %33 = load i32, i32* %channel.addr, align 4, !dbg !8528
  %and35 = and i32 %33, 2, !dbg !8530
  %cmp36 = icmp ne i32 %and35, 0, !dbg !8531
  br i1 %cmp36, label %if.then38, label %if.end48, !dbg !8532

if.then38:                                        ; preds = %if.end34
  %34 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8533
  %colormap39 = getelementptr inbounds %struct._Image, %struct._Image* %34, i32 0, i32 11, !dbg !8534
  %35 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap39, align 8, !dbg !8534
  %36 = load i64, i64* %i, align 8, !dbg !8535
  %arrayidx40 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %35, i64 %36, !dbg !8533
  %green41 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx40, i32 0, i32 1, !dbg !8536
  %37 = load i16, i16* %green41, align 2, !dbg !8536
  %conv42 = zext i16 %37 to i32, !dbg !8533
  %sub43 = sub nsw i32 65535, %conv42, !dbg !8537
  %conv44 = trunc i32 %sub43 to i16, !dbg !8538
  %38 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8539
  %colormap45 = getelementptr inbounds %struct._Image, %struct._Image* %38, i32 0, i32 11, !dbg !8540
  %39 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap45, align 8, !dbg !8540
  %40 = load i64, i64* %i, align 8, !dbg !8541
  %arrayidx46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %39, i64 %40, !dbg !8539
  %green47 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx46, i32 0, i32 1, !dbg !8542
  store i16 %conv44, i16* %green47, align 2, !dbg !8543
  br label %if.end48, !dbg !8539

if.end48:                                         ; preds = %if.then38, %if.end34
  %41 = load i32, i32* %channel.addr, align 4, !dbg !8544
  %and49 = and i32 %41, 4, !dbg !8546
  %cmp50 = icmp ne i32 %and49, 0, !dbg !8547
  br i1 %cmp50, label %if.then52, label %if.end62, !dbg !8548

if.then52:                                        ; preds = %if.end48
  %42 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8549
  %colormap53 = getelementptr inbounds %struct._Image, %struct._Image* %42, i32 0, i32 11, !dbg !8550
  %43 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap53, align 8, !dbg !8550
  %44 = load i64, i64* %i, align 8, !dbg !8551
  %arrayidx54 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %43, i64 %44, !dbg !8549
  %blue55 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx54, i32 0, i32 0, !dbg !8552
  %45 = load i16, i16* %blue55, align 2, !dbg !8552
  %conv56 = zext i16 %45 to i32, !dbg !8549
  %sub57 = sub nsw i32 65535, %conv56, !dbg !8553
  %conv58 = trunc i32 %sub57 to i16, !dbg !8554
  %46 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8555
  %colormap59 = getelementptr inbounds %struct._Image, %struct._Image* %46, i32 0, i32 11, !dbg !8556
  %47 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap59, align 8, !dbg !8556
  %48 = load i64, i64* %i, align 8, !dbg !8557
  %arrayidx60 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %47, i64 %48, !dbg !8555
  %blue61 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx60, i32 0, i32 0, !dbg !8558
  store i16 %conv58, i16* %blue61, align 2, !dbg !8559
  br label %if.end62, !dbg !8555

if.end62:                                         ; preds = %if.then52, %if.end48
  br label %for.inc, !dbg !8560

for.inc:                                          ; preds = %if.end62, %if.then20
  %49 = load i64, i64* %i, align 8, !dbg !8561
  %inc = add nsw i64 %49, 1, !dbg !8561
  store i64 %inc, i64* %i, align 8, !dbg !8561
  br label %for.cond, !dbg !8562, !llvm.loop !8563

for.end:                                          ; preds = %for.cond
  br label %if.end63, !dbg !8565

if.end63:                                         ; preds = %for.end, %if.end
  %50 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8566
  %51 = load i32, i32* %channel.addr, align 4, !dbg !8567
  %52 = load i32, i32* %grayscale.addr, align 4, !dbg !8568
  %53 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8569
  %exception64 = getelementptr inbounds %struct._Image, %struct._Image* %53, i32 0, i32 58, !dbg !8570
  %call65 = call i32 @AccelerateNegateImageChannel(%struct._Image* %50, i32 %51, i32 %52, %struct._ExceptionInfo* %exception64), !dbg !8571
  store i32 %call65, i32* %status, align 4, !dbg !8572
  %54 = load i32, i32* %status, align 4, !dbg !8573
  %cmp66 = icmp eq i32 %54, 1, !dbg !8575
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !8576

if.then68:                                        ; preds = %if.end63
  %55 = load i32, i32* %status, align 4, !dbg !8577
  store i32 %55, i32* %retval, align 4, !dbg !8578
  br label %return, !dbg !8578

if.end69:                                         ; preds = %if.end63
  store i32 1, i32* %status, align 4, !dbg !8579
  store i64 0, i64* %progress, align 8, !dbg !8580
  %56 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8581
  %exception70 = getelementptr inbounds %struct._Image, %struct._Image* %56, i32 0, i32 58, !dbg !8582
  store %struct._ExceptionInfo* %exception70, %struct._ExceptionInfo** %exception, align 8, !dbg !8583
  %57 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8584
  %58 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8585
  %call71 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %57, %struct._ExceptionInfo* %58), !dbg !8586
  store %struct._CacheView* %call71, %struct._CacheView** %image_view, align 8, !dbg !8587
  %59 = load i32, i32* %grayscale.addr, align 4, !dbg !8588
  %cmp72 = icmp ne i32 %59, 0, !dbg !8590
  br i1 %cmp72, label %if.then74, label %if.end191, !dbg !8591

if.then74:                                        ; preds = %if.end69
  store i64 0, i64* %y, align 8, !dbg !8592
  br label %for.cond75, !dbg !8595

for.cond75:                                       ; preds = %for.inc187, %if.then74
  %60 = load i64, i64* %y, align 8, !dbg !8596
  %61 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8598
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %61, i32 0, i32 8, !dbg !8599
  %62 = load i64, i64* %rows, align 8, !dbg !8599
  %cmp76 = icmp slt i64 %60, %62, !dbg !8600
  br i1 %cmp76, label %for.body78, label %for.end189, !dbg !8601

for.body78:                                       ; preds = %for.cond75
  call void @llvm.dbg.declare(metadata i32* %sync, metadata !8602, metadata !DIExpression()), !dbg !8604
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !8605, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !8607, metadata !DIExpression()), !dbg !8608
  call void @llvm.dbg.declare(metadata i64* %x, metadata !8609, metadata !DIExpression()), !dbg !8610
  %63 = load i32, i32* %status, align 4, !dbg !8611
  %cmp79 = icmp eq i32 %63, 0, !dbg !8613
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !8614

if.then81:                                        ; preds = %for.body78
  br label %for.inc187, !dbg !8615

if.end82:                                         ; preds = %for.body78
  %64 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !8616
  %65 = load i64, i64* %y, align 8, !dbg !8617
  %66 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8618
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %66, i32 0, i32 7, !dbg !8619
  %67 = load i64, i64* %columns, align 8, !dbg !8619
  %68 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8620
  %call83 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %64, i64 0, i64 %65, i64 %67, i64 1, %struct._ExceptionInfo* %68), !dbg !8621
  store %struct._PixelPacket* %call83, %struct._PixelPacket** %q, align 8, !dbg !8622
  %69 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8623
  %cmp84 = icmp eq %struct._PixelPacket* %69, null, !dbg !8625
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !8626

if.then86:                                        ; preds = %if.end82
  store i32 0, i32* %status, align 4, !dbg !8627
  br label %for.inc187, !dbg !8629

if.end87:                                         ; preds = %if.end82
  %70 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !8630
  %call88 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %70), !dbg !8631
  store i16* %call88, i16** %indexes, align 8, !dbg !8632
  store i64 0, i64* %x, align 8, !dbg !8633
  br label %for.cond89, !dbg !8635

for.cond89:                                       ; preds = %for.inc168, %if.end87
  %71 = load i64, i64* %x, align 8, !dbg !8636
  %72 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8638
  %columns90 = getelementptr inbounds %struct._Image, %struct._Image* %72, i32 0, i32 7, !dbg !8639
  %73 = load i64, i64* %columns90, align 8, !dbg !8639
  %cmp91 = icmp slt i64 %71, %73, !dbg !8640
  br i1 %cmp91, label %for.body93, label %for.end170, !dbg !8641

for.body93:                                       ; preds = %for.cond89
  %74 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8642
  %red94 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %74, i32 0, i32 2, !dbg !8642
  %75 = load i16, i16* %red94, align 2, !dbg !8642
  %conv95 = zext i16 %75 to i32, !dbg !8642
  %76 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8645
  %green96 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %76, i32 0, i32 1, !dbg !8645
  %77 = load i16, i16* %green96, align 2, !dbg !8645
  %conv97 = zext i16 %77 to i32, !dbg !8645
  %cmp98 = icmp ne i32 %conv95, %conv97, !dbg !8646
  br i1 %cmp98, label %if.then107, label %lor.lhs.false100, !dbg !8647

lor.lhs.false100:                                 ; preds = %for.body93
  %78 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8648
  %green101 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %78, i32 0, i32 1, !dbg !8648
  %79 = load i16, i16* %green101, align 2, !dbg !8648
  %conv102 = zext i16 %79 to i32, !dbg !8648
  %80 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8649
  %blue103 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %80, i32 0, i32 0, !dbg !8649
  %81 = load i16, i16* %blue103, align 2, !dbg !8649
  %conv104 = zext i16 %81 to i32, !dbg !8649
  %cmp105 = icmp ne i32 %conv102, %conv104, !dbg !8650
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !8651

if.then107:                                       ; preds = %lor.lhs.false100, %for.body93
  %82 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8652
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %82, i32 1, !dbg !8652
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !8652
  br label %for.inc168, !dbg !8654

if.end108:                                        ; preds = %lor.lhs.false100
  %83 = load i32, i32* %channel.addr, align 4, !dbg !8655
  %and109 = and i32 %83, 1, !dbg !8657
  %cmp110 = icmp ne i32 %and109, 0, !dbg !8658
  br i1 %cmp110, label %if.then112, label %if.end118, !dbg !8659

if.then112:                                       ; preds = %if.end108
  %84 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8660
  %red113 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %84, i32 0, i32 2, !dbg !8660
  %85 = load i16, i16* %red113, align 2, !dbg !8660
  %conv114 = zext i16 %85 to i32, !dbg !8660
  %sub115 = sub nsw i32 65535, %conv114, !dbg !8660
  %conv116 = trunc i32 %sub115 to i16, !dbg !8660
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8660
  %red117 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %86, i32 0, i32 2, !dbg !8660
  store i16 %conv116, i16* %red117, align 2, !dbg !8660
  br label %if.end118, !dbg !8660

if.end118:                                        ; preds = %if.then112, %if.end108
  %87 = load i32, i32* %channel.addr, align 4, !dbg !8661
  %and119 = and i32 %87, 2, !dbg !8663
  %cmp120 = icmp ne i32 %and119, 0, !dbg !8664
  br i1 %cmp120, label %if.then122, label %if.end128, !dbg !8665

if.then122:                                       ; preds = %if.end118
  %88 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8666
  %green123 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %88, i32 0, i32 1, !dbg !8666
  %89 = load i16, i16* %green123, align 2, !dbg !8666
  %conv124 = zext i16 %89 to i32, !dbg !8666
  %sub125 = sub nsw i32 65535, %conv124, !dbg !8666
  %conv126 = trunc i32 %sub125 to i16, !dbg !8666
  %90 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8666
  %green127 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %90, i32 0, i32 1, !dbg !8666
  store i16 %conv126, i16* %green127, align 2, !dbg !8666
  br label %if.end128, !dbg !8666

if.end128:                                        ; preds = %if.then122, %if.end118
  %91 = load i32, i32* %channel.addr, align 4, !dbg !8667
  %and129 = and i32 %91, 4, !dbg !8669
  %cmp130 = icmp ne i32 %and129, 0, !dbg !8670
  br i1 %cmp130, label %if.then132, label %if.end138, !dbg !8671

if.then132:                                       ; preds = %if.end128
  %92 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8672
  %blue133 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %92, i32 0, i32 0, !dbg !8672
  %93 = load i16, i16* %blue133, align 2, !dbg !8672
  %conv134 = zext i16 %93 to i32, !dbg !8672
  %sub135 = sub nsw i32 65535, %conv134, !dbg !8672
  %conv136 = trunc i32 %sub135 to i16, !dbg !8672
  %94 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8672
  %blue137 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %94, i32 0, i32 0, !dbg !8672
  store i16 %conv136, i16* %blue137, align 2, !dbg !8672
  br label %if.end138, !dbg !8672

if.end138:                                        ; preds = %if.then132, %if.end128
  %95 = load i32, i32* %channel.addr, align 4, !dbg !8673
  %and139 = and i32 %95, 8, !dbg !8675
  %cmp140 = icmp ne i32 %and139, 0, !dbg !8676
  br i1 %cmp140, label %if.then142, label %if.end147, !dbg !8677

if.then142:                                       ; preds = %if.end138
  %96 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8678
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %96, i32 0, i32 3, !dbg !8678
  %97 = load i16, i16* %opacity, align 2, !dbg !8678
  %conv143 = zext i16 %97 to i32, !dbg !8678
  %sub144 = sub nsw i32 65535, %conv143, !dbg !8678
  %conv145 = trunc i32 %sub144 to i16, !dbg !8678
  %98 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8678
  %opacity146 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %98, i32 0, i32 3, !dbg !8678
  store i16 %conv145, i16* %opacity146, align 2, !dbg !8678
  br label %if.end147, !dbg !8678

if.end147:                                        ; preds = %if.then142, %if.end138
  %99 = load i32, i32* %channel.addr, align 4, !dbg !8679
  %and148 = and i32 %99, 32, !dbg !8681
  %cmp149 = icmp ne i32 %and148, 0, !dbg !8682
  br i1 %cmp149, label %land.lhs.true, label %if.end166, !dbg !8683

land.lhs.true:                                    ; preds = %if.end147
  %100 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8684
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %100, i32 0, i32 1, !dbg !8685
  %101 = load i32, i32* %colorspace, align 4, !dbg !8685
  %cmp151 = icmp eq i32 %101, 12, !dbg !8686
  br i1 %cmp151, label %if.then153, label %if.end166, !dbg !8687

if.then153:                                       ; preds = %land.lhs.true
  %102 = load i16*, i16** %indexes, align 8, !dbg !8688
  %103 = load i64, i64* %x, align 8, !dbg !8688
  %add.ptr = getelementptr inbounds i16, i16* %102, i64 %103, !dbg !8688
  %cmp154 = icmp ne i16* %add.ptr, null, !dbg !8688
  br i1 %cmp154, label %if.then156, label %if.end165, !dbg !8691

if.then156:                                       ; preds = %if.then153
  %104 = load i16*, i16** %indexes, align 8, !dbg !8688
  %105 = load i64, i64* %x, align 8, !dbg !8688
  %add.ptr157 = getelementptr inbounds i16, i16* %104, i64 %105, !dbg !8688
  %cmp158 = icmp eq i16* %add.ptr157, null, !dbg !8688
  br i1 %cmp158, label %cond.true, label %cond.false, !dbg !8688

cond.true:                                        ; preds = %if.then156
  br label %cond.end, !dbg !8688

cond.false:                                       ; preds = %if.then156
  %106 = load i16*, i16** %indexes, align 8, !dbg !8688
  %107 = load i64, i64* %x, align 8, !dbg !8688
  %add.ptr160 = getelementptr inbounds i16, i16* %106, i64 %107, !dbg !8688
  %108 = load i16, i16* %add.ptr160, align 2, !dbg !8688
  %conv161 = zext i16 %108 to i32, !dbg !8688
  br label %cond.end, !dbg !8688

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv161, %cond.false ], !dbg !8688
  %sub162 = sub nsw i32 65535, %cond, !dbg !8688
  %conv163 = trunc i32 %sub162 to i16, !dbg !8688
  %109 = load i16*, i16** %indexes, align 8, !dbg !8688
  %110 = load i64, i64* %x, align 8, !dbg !8688
  %add.ptr164 = getelementptr inbounds i16, i16* %109, i64 %110, !dbg !8688
  store i16 %conv163, i16* %add.ptr164, align 2, !dbg !8688
  br label %if.end165, !dbg !8688

if.end165:                                        ; preds = %cond.end, %if.then153
  br label %if.end166, !dbg !8691

if.end166:                                        ; preds = %if.end165, %land.lhs.true, %if.end147
  %111 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8692
  %incdec.ptr167 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %111, i32 1, !dbg !8692
  store %struct._PixelPacket* %incdec.ptr167, %struct._PixelPacket** %q, align 8, !dbg !8692
  br label %for.inc168, !dbg !8693

for.inc168:                                       ; preds = %if.end166, %if.then107
  %112 = load i64, i64* %x, align 8, !dbg !8694
  %inc169 = add nsw i64 %112, 1, !dbg !8694
  store i64 %inc169, i64* %x, align 8, !dbg !8694
  br label %for.cond89, !dbg !8695, !llvm.loop !8696

for.end170:                                       ; preds = %for.cond89
  %113 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !8698
  %114 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8699
  %call171 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %113, %struct._ExceptionInfo* %114), !dbg !8700
  store i32 %call171, i32* %sync, align 4, !dbg !8701
  %115 = load i32, i32* %sync, align 4, !dbg !8702
  %cmp172 = icmp eq i32 %115, 0, !dbg !8704
  br i1 %cmp172, label %if.then174, label %if.end175, !dbg !8705

if.then174:                                       ; preds = %for.end170
  store i32 0, i32* %status, align 4, !dbg !8706
  br label %if.end175, !dbg !8707

if.end175:                                        ; preds = %if.then174, %for.end170
  %116 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8708
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %116, i32 0, i32 47, !dbg !8710
  %117 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !8710
  %cmp176 = icmp ne i32 (i8*, i64, i64, i8*)* %117, null, !dbg !8711
  br i1 %cmp176, label %if.then178, label %if.end186, !dbg !8712

if.then178:                                       ; preds = %if.end175
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !8713, metadata !DIExpression()), !dbg !8715
  %118 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8716
  %119 = load i64, i64* %progress, align 8, !dbg !8717
  %inc179 = add nsw i64 %119, 1, !dbg !8717
  store i64 %inc179, i64* %progress, align 8, !dbg !8717
  %120 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8718
  %rows180 = getelementptr inbounds %struct._Image, %struct._Image* %120, i32 0, i32 8, !dbg !8719
  %121 = load i64, i64* %rows180, align 8, !dbg !8719
  %call181 = call i32 @SetImageProgress(%struct._Image* %118, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i64 %119, i64 %121), !dbg !8720
  store i32 %call181, i32* %proceed, align 4, !dbg !8721
  %122 = load i32, i32* %proceed, align 4, !dbg !8722
  %cmp182 = icmp eq i32 %122, 0, !dbg !8724
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !8725

if.then184:                                       ; preds = %if.then178
  store i32 0, i32* %status, align 4, !dbg !8726
  br label %if.end185, !dbg !8727

if.end185:                                        ; preds = %if.then184, %if.then178
  br label %if.end186, !dbg !8728

if.end186:                                        ; preds = %if.end185, %if.end175
  br label %for.inc187, !dbg !8729

for.inc187:                                       ; preds = %if.end186, %if.then86, %if.then81
  %123 = load i64, i64* %y, align 8, !dbg !8730
  %inc188 = add nsw i64 %123, 1, !dbg !8730
  store i64 %inc188, i64* %y, align 8, !dbg !8730
  br label %for.cond75, !dbg !8731, !llvm.loop !8732

for.end189:                                       ; preds = %for.cond75
  %124 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !8734
  %call190 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %124), !dbg !8735
  store %struct._CacheView* %call190, %struct._CacheView** %image_view, align 8, !dbg !8736
  store i32 1, i32* %retval, align 4, !dbg !8737
  br label %return, !dbg !8737

if.end191:                                        ; preds = %if.end69
  store i64 0, i64* %y, align 8, !dbg !8738
  br label %for.cond192, !dbg !8740

for.cond192:                                      ; preds = %for.inc352, %if.end191
  %125 = load i64, i64* %y, align 8, !dbg !8741
  %126 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8743
  %rows193 = getelementptr inbounds %struct._Image, %struct._Image* %126, i32 0, i32 8, !dbg !8744
  %127 = load i64, i64* %rows193, align 8, !dbg !8744
  %cmp194 = icmp slt i64 %125, %127, !dbg !8745
  br i1 %cmp194, label %for.body196, label %for.end354, !dbg !8746

for.body196:                                      ; preds = %for.cond192
  call void @llvm.dbg.declare(metadata i16** %indexes197, metadata !8747, metadata !DIExpression()), !dbg !8749
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q198, metadata !8750, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.declare(metadata i64* %x199, metadata !8752, metadata !DIExpression()), !dbg !8753
  %128 = load i32, i32* %status, align 4, !dbg !8754
  %cmp200 = icmp eq i32 %128, 0, !dbg !8756
  br i1 %cmp200, label %if.then202, label %if.end203, !dbg !8757

if.then202:                                       ; preds = %for.body196
  br label %for.inc352, !dbg !8758

if.end203:                                        ; preds = %for.body196
  %129 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !8759
  %130 = load i64, i64* %y, align 8, !dbg !8760
  %131 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8761
  %columns204 = getelementptr inbounds %struct._Image, %struct._Image* %131, i32 0, i32 7, !dbg !8762
  %132 = load i64, i64* %columns204, align 8, !dbg !8762
  %133 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8763
  %call205 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %129, i64 0, i64 %130, i64 %132, i64 1, %struct._ExceptionInfo* %133), !dbg !8764
  store %struct._PixelPacket* %call205, %struct._PixelPacket** %q198, align 8, !dbg !8765
  %134 = load %struct._PixelPacket*, %struct._PixelPacket** %q198, align 8, !dbg !8766
  %cmp206 = icmp eq %struct._PixelPacket* %134, null, !dbg !8768
  br i1 %cmp206, label %if.then208, label %if.end209, !dbg !8769

if.then208:                                       ; preds = %if.end203
  store i32 0, i32* %status, align 4, !dbg !8770
  br label %for.inc352, !dbg !8772

if.end209:                                        ; preds = %if.end203
  %135 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !8773
  %call210 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %135), !dbg !8774
  store i16* %call210, i16** %indexes197, align 8, !dbg !8775
  %136 = load i32, i32* %channel.addr, align 4, !dbg !8776
  %cmp211 = icmp eq i32 %136, 134217719, !dbg !8778
  br i1 %cmp211, label %if.then213, label %if.else, !dbg !8779

if.then213:                                       ; preds = %if.end209
  store i64 0, i64* %x199, align 8, !dbg !8780
  br label %for.cond214, !dbg !8782

for.cond214:                                      ; preds = %for.inc240, %if.then213
  %137 = load i64, i64* %x199, align 8, !dbg !8783
  %138 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8785
  %columns215 = getelementptr inbounds %struct._Image, %struct._Image* %138, i32 0, i32 7, !dbg !8786
  %139 = load i64, i64* %columns215, align 8, !dbg !8786
  %cmp216 = icmp slt i64 %137, %139, !dbg !8787
  br i1 %cmp216, label %for.body218, label %for.end242, !dbg !8788

for.body218:                                      ; preds = %for.cond214
  %140 = load %struct._PixelPacket*, %struct._PixelPacket** %q198, align 8, !dbg !8789
  %141 = load i64, i64* %x199, align 8, !dbg !8789
  %add.ptr219 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %140, i64 %141, !dbg !8789
  %red220 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr219, i32 0, i32 2, !dbg !8789
  %142 = load i16, i16* %red220, align 2, !dbg !8789
  %conv221 = zext i16 %142 to i32, !dbg !8789
  %sub222 = sub nsw i32 65535, %conv221, !dbg !8789
  %conv223 = trunc i32 %sub222 to i16, !dbg !8789
  %143 = load %struct._PixelPacket*, %struct._PixelPacket** %q198, align 8, !dbg !8789
  %144 = load i64, i64* %x199, align 8, !dbg !8789
  %add.ptr224 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %143, i64 %144, !dbg !8789
  %red225 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr224, i32 0, i32 2, !dbg !8789
  store i16 %conv223, i16* %red225, align 2, !dbg !8789
  %145 = load %struct._PixelPacket*, %struct._PixelPacket** %q198, align 8, !dbg !8791
  %146 = load i64, i64* %x199, align 8, !dbg !8791
  %add.ptr226 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %145, i64 %146, !dbg !8791
  %green227 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr226, i32 0, i32 1, !dbg !8791
  %147 = load i16, i16* %green227, align 2, !dbg !8791
  %conv228 = zext i16 %147 to i32, !dbg !8791
  %sub229 = sub nsw i32 65535, %conv228, !dbg !8791
  %conv230 = trunc i32 %sub229 to i16, !dbg !8791
  %148 = load %struct._PixelPacket*, %struct._PixelPacket** %q198, align 8, !dbg !8791
  %149 = load i64, i64* %x199, align 8, !dbg !8791
  %add.ptr231 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %148, i64 %149, !dbg !8791
  %green232 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr231, i32 0, i32 1, !dbg !8791
  store i16 %conv230, i16* %green232, align 2, !dbg !8791
  %150 = load %struct._PixelPacket*, %struct._PixelPacket** %q198, align 8, !dbg !8792
  %151 = load i64, i64* %x199, align 8, !dbg !8792
  %add.ptr233 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %150, i64 %151, !dbg !8792
  %blue234 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr233, i32 0, i32 0, !dbg !8792
  %152 = load i16, i16* %blue234, align 2, !dbg !8792
  %conv235 = zext i16 %152 to i32, !dbg !8792
  %sub236 = sub nsw i32 65535, %conv235, !dbg !8792
  %conv237 = trunc i32 %sub236 to i16, !dbg !8792
  %153 = load %struct._PixelPacket*, %struct._PixelPacket** %q198, align 8, !dbg !8792
  %154 = load i64, i64* %x199, align 8, !dbg !8792
  %add.ptr238 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %153, i64 %154, !dbg !8792
  %blue239 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr238, i32 0, i32 0, !dbg !8792
  store i16 %conv237, i16* %blue239, align 2, !dbg !8792
  br label %for.inc240, !dbg !8793

for.inc240:                                       ; preds = %for.body218
  %155 = load i64, i64* %x199, align 8, !dbg !8794
  %inc241 = add nsw i64 %155, 1, !dbg !8794
  store i64 %inc241, i64* %x199, align 8, !dbg !8794
  br label %for.cond214, !dbg !8795, !llvm.loop !8796

for.end242:                                       ; preds = %for.cond214
  br label %if.end299, !dbg !8797

if.else:                                          ; preds = %if.end209
  store i64 0, i64* %x199, align 8, !dbg !8798
  br label %for.cond243, !dbg !8800

for.cond243:                                      ; preds = %for.inc296, %if.else
  %156 = load i64, i64* %x199, align 8, !dbg !8801
  %157 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8803
  %columns244 = getelementptr inbounds %struct._Image, %struct._Image* %157, i32 0, i32 7, !dbg !8804
  %158 = load i64, i64* %columns244, align 8, !dbg !8804
  %cmp245 = icmp slt i64 %156, %158, !dbg !8805
  br i1 %cmp245, label %for.body247, label %for.end298, !dbg !8806

for.body247:                                      ; preds = %for.cond243
  %159 = load i32, i32* %channel.addr, align 4, !dbg !8807
  %and248 = and i32 %159, 1, !dbg !8810
  %cmp249 = icmp ne i32 %and248, 0, !dbg !8811
  br i1 %cmp249, label %if.then251, label %if.end259, !dbg !8812

if.then251:                                       ; preds = %for.body247
  %160 = load %struct._PixelPacket*, %struct._PixelPacket** %q198, align 8, !dbg !8813
  %161 = load i64, i64* %x199, align 8, !dbg !8813
  %add.ptr252 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %160, i64 %161, !dbg !8813
  %red253 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr252, i32 0, i32 2, !dbg !8813
  %162 = load i16, i16* %red253, align 2, !dbg !8813
  %conv254 = zext i16 %162 to i32, !dbg !8813
  %sub255 = sub nsw i32 65535, %conv254, !dbg !8813
  %conv256 = trunc i32 %sub255 to i16, !dbg !8813
  %163 = load %struct._PixelPacket*, %struct._PixelPacket** %q198, align 8, !dbg !8813
  %164 = load i64, i64* %x199, align 8, !dbg !8813
  %add.ptr257 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %163, i64 %164, !dbg !8813
  %red258 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr257, i32 0, i32 2, !dbg !8813
  store i16 %conv256, i16* %red258, align 2, !dbg !8813
  br label %if.end259, !dbg !8813

if.end259:                                        ; preds = %if.then251, %for.body247
  %165 = load i32, i32* %channel.addr, align 4, !dbg !8814
  %and260 = and i32 %165, 2, !dbg !8816
  %cmp261 = icmp ne i32 %and260, 0, !dbg !8817
  br i1 %cmp261, label %if.then263, label %if.end271, !dbg !8818

if.then263:                                       ; preds = %if.end259
  %166 = load %struct._PixelPacket*, %struct._PixelPacket** %q198, align 8, !dbg !8819
  %167 = load i64, i64* %x199, align 8, !dbg !8819
  %add.ptr264 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %166, i64 %167, !dbg !8819
  %green265 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr264, i32 0, i32 1, !dbg !8819
  %168 = load i16, i16* %green265, align 2, !dbg !8819
  %conv266 = zext i16 %168 to i32, !dbg !8819
  %sub267 = sub nsw i32 65535, %conv266, !dbg !8819
  %conv268 = trunc i32 %sub267 to i16, !dbg !8819
  %169 = load %struct._PixelPacket*, %struct._PixelPacket** %q198, align 8, !dbg !8819
  %170 = load i64, i64* %x199, align 8, !dbg !8819
  %add.ptr269 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %169, i64 %170, !dbg !8819
  %green270 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr269, i32 0, i32 1, !dbg !8819
  store i16 %conv268, i16* %green270, align 2, !dbg !8819
  br label %if.end271, !dbg !8819

if.end271:                                        ; preds = %if.then263, %if.end259
  %171 = load i32, i32* %channel.addr, align 4, !dbg !8820
  %and272 = and i32 %171, 4, !dbg !8822
  %cmp273 = icmp ne i32 %and272, 0, !dbg !8823
  br i1 %cmp273, label %if.then275, label %if.end283, !dbg !8824

if.then275:                                       ; preds = %if.end271
  %172 = load %struct._PixelPacket*, %struct._PixelPacket** %q198, align 8, !dbg !8825
  %173 = load i64, i64* %x199, align 8, !dbg !8825
  %add.ptr276 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %172, i64 %173, !dbg !8825
  %blue277 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr276, i32 0, i32 0, !dbg !8825
  %174 = load i16, i16* %blue277, align 2, !dbg !8825
  %conv278 = zext i16 %174 to i32, !dbg !8825
  %sub279 = sub nsw i32 65535, %conv278, !dbg !8825
  %conv280 = trunc i32 %sub279 to i16, !dbg !8825
  %175 = load %struct._PixelPacket*, %struct._PixelPacket** %q198, align 8, !dbg !8825
  %176 = load i64, i64* %x199, align 8, !dbg !8825
  %add.ptr281 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %175, i64 %176, !dbg !8825
  %blue282 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr281, i32 0, i32 0, !dbg !8825
  store i16 %conv280, i16* %blue282, align 2, !dbg !8825
  br label %if.end283, !dbg !8825

if.end283:                                        ; preds = %if.then275, %if.end271
  %177 = load i32, i32* %channel.addr, align 4, !dbg !8826
  %and284 = and i32 %177, 8, !dbg !8828
  %cmp285 = icmp ne i32 %and284, 0, !dbg !8829
  br i1 %cmp285, label %if.then287, label %if.end295, !dbg !8830

if.then287:                                       ; preds = %if.end283
  %178 = load %struct._PixelPacket*, %struct._PixelPacket** %q198, align 8, !dbg !8831
  %179 = load i64, i64* %x199, align 8, !dbg !8831
  %add.ptr288 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %178, i64 %179, !dbg !8831
  %opacity289 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr288, i32 0, i32 3, !dbg !8831
  %180 = load i16, i16* %opacity289, align 2, !dbg !8831
  %conv290 = zext i16 %180 to i32, !dbg !8831
  %sub291 = sub nsw i32 65535, %conv290, !dbg !8831
  %conv292 = trunc i32 %sub291 to i16, !dbg !8831
  %181 = load %struct._PixelPacket*, %struct._PixelPacket** %q198, align 8, !dbg !8831
  %182 = load i64, i64* %x199, align 8, !dbg !8831
  %add.ptr293 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %181, i64 %182, !dbg !8831
  %opacity294 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr293, i32 0, i32 3, !dbg !8831
  store i16 %conv292, i16* %opacity294, align 2, !dbg !8831
  br label %if.end295, !dbg !8831

if.end295:                                        ; preds = %if.then287, %if.end283
  br label %for.inc296, !dbg !8832

for.inc296:                                       ; preds = %if.end295
  %183 = load i64, i64* %x199, align 8, !dbg !8833
  %inc297 = add nsw i64 %183, 1, !dbg !8833
  store i64 %inc297, i64* %x199, align 8, !dbg !8833
  br label %for.cond243, !dbg !8834, !llvm.loop !8835

for.end298:                                       ; preds = %for.cond243
  br label %if.end299

if.end299:                                        ; preds = %for.end298, %for.end242
  %184 = load i32, i32* %channel.addr, align 4, !dbg !8837
  %and300 = and i32 %184, 32, !dbg !8839
  %cmp301 = icmp ne i32 %and300, 0, !dbg !8840
  br i1 %cmp301, label %land.lhs.true303, label %if.end333, !dbg !8841

land.lhs.true303:                                 ; preds = %if.end299
  %185 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8842
  %colorspace304 = getelementptr inbounds %struct._Image, %struct._Image* %185, i32 0, i32 1, !dbg !8843
  %186 = load i32, i32* %colorspace304, align 4, !dbg !8843
  %cmp305 = icmp eq i32 %186, 12, !dbg !8844
  br i1 %cmp305, label %if.then307, label %if.end333, !dbg !8845

if.then307:                                       ; preds = %land.lhs.true303
  store i64 0, i64* %x199, align 8, !dbg !8846
  br label %for.cond308, !dbg !8848

for.cond308:                                      ; preds = %for.inc330, %if.then307
  %187 = load i64, i64* %x199, align 8, !dbg !8849
  %188 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8851
  %columns309 = getelementptr inbounds %struct._Image, %struct._Image* %188, i32 0, i32 7, !dbg !8852
  %189 = load i64, i64* %columns309, align 8, !dbg !8852
  %cmp310 = icmp slt i64 %187, %189, !dbg !8853
  br i1 %cmp310, label %for.body312, label %for.end332, !dbg !8854

for.body312:                                      ; preds = %for.cond308
  %190 = load i16*, i16** %indexes197, align 8, !dbg !8855
  %191 = load i64, i64* %x199, align 8, !dbg !8855
  %add.ptr313 = getelementptr inbounds i16, i16* %190, i64 %191, !dbg !8855
  %cmp314 = icmp ne i16* %add.ptr313, null, !dbg !8855
  br i1 %cmp314, label %if.then316, label %if.end329, !dbg !8858

if.then316:                                       ; preds = %for.body312
  %192 = load i16*, i16** %indexes197, align 8, !dbg !8855
  %193 = load i64, i64* %x199, align 8, !dbg !8855
  %add.ptr317 = getelementptr inbounds i16, i16* %192, i64 %193, !dbg !8855
  %cmp318 = icmp eq i16* %add.ptr317, null, !dbg !8855
  br i1 %cmp318, label %cond.true320, label %cond.false321, !dbg !8855

cond.true320:                                     ; preds = %if.then316
  br label %cond.end324, !dbg !8855

cond.false321:                                    ; preds = %if.then316
  %194 = load i16*, i16** %indexes197, align 8, !dbg !8855
  %195 = load i64, i64* %x199, align 8, !dbg !8855
  %add.ptr322 = getelementptr inbounds i16, i16* %194, i64 %195, !dbg !8855
  %196 = load i16, i16* %add.ptr322, align 2, !dbg !8855
  %conv323 = zext i16 %196 to i32, !dbg !8855
  br label %cond.end324, !dbg !8855

cond.end324:                                      ; preds = %cond.false321, %cond.true320
  %cond325 = phi i32 [ 0, %cond.true320 ], [ %conv323, %cond.false321 ], !dbg !8855
  %sub326 = sub nsw i32 65535, %cond325, !dbg !8855
  %conv327 = trunc i32 %sub326 to i16, !dbg !8855
  %197 = load i16*, i16** %indexes197, align 8, !dbg !8855
  %198 = load i64, i64* %x199, align 8, !dbg !8855
  %add.ptr328 = getelementptr inbounds i16, i16* %197, i64 %198, !dbg !8855
  store i16 %conv327, i16* %add.ptr328, align 2, !dbg !8855
  br label %if.end329, !dbg !8855

if.end329:                                        ; preds = %cond.end324, %for.body312
  br label %for.inc330, !dbg !8858

for.inc330:                                       ; preds = %if.end329
  %199 = load i64, i64* %x199, align 8, !dbg !8859
  %inc331 = add nsw i64 %199, 1, !dbg !8859
  store i64 %inc331, i64* %x199, align 8, !dbg !8859
  br label %for.cond308, !dbg !8860, !llvm.loop !8861

for.end332:                                       ; preds = %for.cond308
  br label %if.end333, !dbg !8862

if.end333:                                        ; preds = %for.end332, %land.lhs.true303, %if.end299
  %200 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !8863
  %201 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !8865
  %call334 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %200, %struct._ExceptionInfo* %201), !dbg !8866
  %cmp335 = icmp eq i32 %call334, 0, !dbg !8867
  br i1 %cmp335, label %if.then337, label %if.end338, !dbg !8868

if.then337:                                       ; preds = %if.end333
  store i32 0, i32* %status, align 4, !dbg !8869
  br label %if.end338, !dbg !8870

if.end338:                                        ; preds = %if.then337, %if.end333
  %202 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8871
  %progress_monitor339 = getelementptr inbounds %struct._Image, %struct._Image* %202, i32 0, i32 47, !dbg !8873
  %203 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor339, align 8, !dbg !8873
  %cmp340 = icmp ne i32 (i8*, i64, i64, i8*)* %203, null, !dbg !8874
  br i1 %cmp340, label %if.then342, label %if.end351, !dbg !8875

if.then342:                                       ; preds = %if.end338
  call void @llvm.dbg.declare(metadata i32* %proceed343, metadata !8876, metadata !DIExpression()), !dbg !8878
  %204 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8879
  %205 = load i64, i64* %progress, align 8, !dbg !8880
  %inc344 = add nsw i64 %205, 1, !dbg !8880
  store i64 %inc344, i64* %progress, align 8, !dbg !8880
  %206 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8881
  %rows345 = getelementptr inbounds %struct._Image, %struct._Image* %206, i32 0, i32 8, !dbg !8882
  %207 = load i64, i64* %rows345, align 8, !dbg !8882
  %call346 = call i32 @SetImageProgress(%struct._Image* %204, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i64 %205, i64 %207), !dbg !8883
  store i32 %call346, i32* %proceed343, align 4, !dbg !8884
  %208 = load i32, i32* %proceed343, align 4, !dbg !8885
  %cmp347 = icmp eq i32 %208, 0, !dbg !8887
  br i1 %cmp347, label %if.then349, label %if.end350, !dbg !8888

if.then349:                                       ; preds = %if.then342
  store i32 0, i32* %status, align 4, !dbg !8889
  br label %if.end350, !dbg !8890

if.end350:                                        ; preds = %if.then349, %if.then342
  br label %if.end351, !dbg !8891

if.end351:                                        ; preds = %if.end350, %if.end338
  br label %for.inc352, !dbg !8892

for.inc352:                                       ; preds = %if.end351, %if.then208, %if.then202
  %209 = load i64, i64* %y, align 8, !dbg !8893
  %inc353 = add nsw i64 %209, 1, !dbg !8893
  store i64 %inc353, i64* %y, align 8, !dbg !8893
  br label %for.cond192, !dbg !8894, !llvm.loop !8895

for.end354:                                       ; preds = %for.cond192
  %210 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !8897
  %call355 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %210), !dbg !8898
  store %struct._CacheView* %call355, %struct._CacheView** %image_view, align 8, !dbg !8899
  %211 = load i32, i32* %status, align 4, !dbg !8900
  store i32 %211, i32* %retval, align 4, !dbg !8901
  br label %return, !dbg !8901

return:                                           ; preds = %for.end354, %for.end189, %if.then68
  %212 = load i32, i32* %retval, align 4, !dbg !8902
  ret i32 %212, !dbg !8902
}

declare dso_local i32 @AccelerateNegateImageChannel(%struct._Image*, i32, i32, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @NormalizeImage(%struct._Image* %image) #0 !dbg !8903 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8904, metadata !DIExpression()), !dbg !8905
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8906, metadata !DIExpression()), !dbg !8907
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8908
  %call = call i32 @NormalizeImageChannel(%struct._Image* %0, i32 134217719), !dbg !8909
  store i32 %call, i32* %status, align 4, !dbg !8910
  %1 = load i32, i32* %status, align 4, !dbg !8911
  ret i32 %1, !dbg !8912
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @NormalizeImageChannel(%struct._Image* %image, i32 %channel) #0 !dbg !8913 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %black_point = alloca double, align 8
  %white_point = alloca double, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8914, metadata !DIExpression()), !dbg !8915
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !8916, metadata !DIExpression()), !dbg !8917
  call void @llvm.dbg.declare(metadata double* %black_point, metadata !8918, metadata !DIExpression()), !dbg !8919
  call void @llvm.dbg.declare(metadata double* %white_point, metadata !8920, metadata !DIExpression()), !dbg !8921
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8922
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 7, !dbg !8923
  %1 = load i64, i64* %columns, align 8, !dbg !8923
  %conv = uitofp i64 %1 to double, !dbg !8924
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8925
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 8, !dbg !8926
  %3 = load i64, i64* %rows, align 8, !dbg !8926
  %conv1 = uitofp i64 %3 to double, !dbg !8925
  %mul = fmul double %conv, %conv1, !dbg !8927
  %mul2 = fmul double %mul, 1.500000e-03, !dbg !8928
  store double %mul2, double* %black_point, align 8, !dbg !8929
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8930
  %columns3 = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 7, !dbg !8931
  %5 = load i64, i64* %columns3, align 8, !dbg !8931
  %conv4 = uitofp i64 %5 to double, !dbg !8932
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8933
  %rows5 = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 8, !dbg !8934
  %7 = load i64, i64* %rows5, align 8, !dbg !8934
  %conv6 = uitofp i64 %7 to double, !dbg !8933
  %mul7 = fmul double %conv4, %conv6, !dbg !8935
  %mul8 = fmul double %mul7, 9.995000e-01, !dbg !8936
  store double %mul8, double* %white_point, align 8, !dbg !8937
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8938
  %9 = load i32, i32* %channel.addr, align 4, !dbg !8939
  %10 = load double, double* %black_point, align 8, !dbg !8940
  %11 = load double, double* %white_point, align 8, !dbg !8941
  %call = call i32 @ContrastStretchImageChannel(%struct._Image* %8, i32 %9, double %10, double %11), !dbg !8942
  ret i32 %call, !dbg !8943
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @SigmoidalContrastImage(%struct._Image* %image, i32 %sharpen, i8* %levels) #0 !dbg !8944 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %sharpen.addr = alloca i32, align 4
  %levels.addr = alloca i8*, align 8
  %geometry_info = alloca %struct._GeometryInfo, align 8
  %status = alloca i32, align 4
  %flags = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8947, metadata !DIExpression()), !dbg !8948
  store i32 %sharpen, i32* %sharpen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sharpen.addr, metadata !8949, metadata !DIExpression()), !dbg !8950
  store i8* %levels, i8** %levels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %levels.addr, metadata !8951, metadata !DIExpression()), !dbg !8952
  call void @llvm.dbg.declare(metadata %struct._GeometryInfo* %geometry_info, metadata !8953, metadata !DIExpression()), !dbg !8954
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8955, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !8957, metadata !DIExpression()), !dbg !8958
  %0 = load i8*, i8** %levels.addr, align 8, !dbg !8959
  %call = call i32 @ParseGeometry(i8* %0, %struct._GeometryInfo* %geometry_info), !dbg !8960
  store i32 %call, i32* %flags, align 4, !dbg !8961
  %1 = load i32, i32* %flags, align 4, !dbg !8962
  %and = and i32 %1, 8, !dbg !8964
  %cmp = icmp eq i32 %and, 0, !dbg !8965
  br i1 %cmp, label %if.then, label %if.end, !dbg !8966

if.then:                                          ; preds = %entry
  %sigma = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 1, !dbg !8967
  store double 3.276750e+04, double* %sigma, align 8, !dbg !8968
  br label %if.end, !dbg !8969

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %flags, align 4, !dbg !8970
  %and1 = and i32 %2, 4096, !dbg !8972
  %cmp2 = icmp ne i32 %and1, 0, !dbg !8973
  br i1 %cmp2, label %if.then3, label %if.end6, !dbg !8974

if.then3:                                         ; preds = %if.end
  %sigma4 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 1, !dbg !8975
  %3 = load double, double* %sigma4, align 8, !dbg !8975
  %mul = fmul double 6.553500e+04, %3, !dbg !8976
  %div = fdiv double %mul, 1.000000e+02, !dbg !8977
  %sigma5 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 1, !dbg !8978
  store double %div, double* %sigma5, align 8, !dbg !8979
  br label %if.end6, !dbg !8980

if.end6:                                          ; preds = %if.then3, %if.end
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8981
  %5 = load i32, i32* %sharpen.addr, align 4, !dbg !8982
  %rho = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 0, !dbg !8983
  %6 = load double, double* %rho, align 8, !dbg !8983
  %sigma7 = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 1, !dbg !8984
  %7 = load double, double* %sigma7, align 8, !dbg !8984
  %call8 = call i32 @SigmoidalContrastImageChannel(%struct._Image* %4, i32 134217719, i32 %5, double %6, double %7), !dbg !8985
  store i32 %call8, i32* %status, align 4, !dbg !8986
  %8 = load i32, i32* %status, align 4, !dbg !8987
  ret i32 %8, !dbg !8988
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @SigmoidalContrastImageChannel(%struct._Image* %image, i32 %channel, i32 %sharpen, double %contrast, double %midpoint) #0 !dbg !8989 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %sharpen.addr = alloca i32, align 4
  %contrast.addr = alloca double, align 8
  %midpoint.addr = alloca double, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %sigmoidal_map = alloca float*, align 8
  %i = alloca i64, align 8
  %y = alloca i64, align 8
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8992, metadata !DIExpression()), !dbg !8993
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !8994, metadata !DIExpression()), !dbg !8995
  store i32 %sharpen, i32* %sharpen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sharpen.addr, metadata !8996, metadata !DIExpression()), !dbg !8997
  store double %contrast, double* %contrast.addr, align 8
  call void @llvm.dbg.declare(metadata double* %contrast.addr, metadata !8998, metadata !DIExpression()), !dbg !8999
  store double %midpoint, double* %midpoint.addr, align 8
  call void @llvm.dbg.declare(metadata double* %midpoint.addr, metadata !9000, metadata !DIExpression()), !dbg !9001
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !9002, metadata !DIExpression()), !dbg !9003
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !9004, metadata !DIExpression()), !dbg !9005
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9006, metadata !DIExpression()), !dbg !9007
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !9008, metadata !DIExpression()), !dbg !9009
  call void @llvm.dbg.declare(metadata float** %sigmoidal_map, metadata !9010, metadata !DIExpression()), !dbg !9011
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9012, metadata !DIExpression()), !dbg !9013
  call void @llvm.dbg.declare(metadata i64* %y, metadata !9014, metadata !DIExpression()), !dbg !9015
  %0 = load double, double* %contrast.addr, align 8, !dbg !9016
  %cmp = fcmp olt double %0, 1.000000e-15, !dbg !9018
  br i1 %cmp, label %if.then, label %if.end, !dbg !9019

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !9020
  br label %return, !dbg !9020

if.end:                                           ; preds = %entry
  %1 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9021
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %1, i32 0, i32 59, !dbg !9023
  %2 = load i32, i32* %debug, align 8, !dbg !9023
  %cmp1 = icmp ne i32 %2, 0, !dbg !9024
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !9025

if.then2:                                         ; preds = %if.end
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9026
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !9027
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !9026
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4423, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !9028
  br label %if.end3, !dbg !9029

if.end3:                                          ; preds = %if.then2, %if.end
  %call4 = call i8* @AcquireQuantumMemory(i64 65536, i64 4) #7, !dbg !9030
  %4 = bitcast i8* %call4 to float*, !dbg !9031
  store float* %4, float** %sigmoidal_map, align 8, !dbg !9032
  %5 = load float*, float** %sigmoidal_map, align 8, !dbg !9033
  %cmp5 = icmp eq float* %5, null, !dbg !9035
  br i1 %cmp5, label %if.then6, label %if.end14, !dbg !9036

if.then6:                                         ; preds = %if.end3
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9037
  %cmp7 = icmp ne %struct._Image* %6, null, !dbg !9037
  br i1 %cmp7, label %if.then8, label %if.end13, !dbg !9040

if.then8:                                         ; preds = %if.then6
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9037
  %exception9 = getelementptr inbounds %struct._Image, %struct._Image* %7, i32 0, i32 58, !dbg !9037
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9037
  %filename10 = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 53, !dbg !9037
  %arraydecay11 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename10, i64 0, i64 0, !dbg !9037
  %call12 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception9, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4428, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay11), !dbg !9037
  br label %if.end13, !dbg !9037

if.end13:                                         ; preds = %if.then8, %if.then6
  store i32 0, i32* %retval, align 4, !dbg !9040
  br label %return, !dbg !9040

if.end14:                                         ; preds = %if.end3
  %9 = load float*, float** %sigmoidal_map, align 8, !dbg !9041
  %10 = bitcast float* %9 to i8*, !dbg !9041
  %call15 = call i8* @ResetMagickMemory(i8* %10, i32 0, i64 262144), !dbg !9042
  %11 = load i32, i32* %sharpen.addr, align 4, !dbg !9043
  %cmp16 = icmp ne i32 %11, 0, !dbg !9045
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !9046

if.then17:                                        ; preds = %if.end14
  store i64 0, i64* %i, align 8, !dbg !9047
  br label %for.cond, !dbg !9049

for.cond:                                         ; preds = %for.inc, %if.then17
  %12 = load i64, i64* %i, align 8, !dbg !9050
  %cmp18 = icmp sle i64 %12, 65535, !dbg !9052
  br i1 %cmp18, label %for.body, label %for.end, !dbg !9053

for.body:                                         ; preds = %for.cond
  %13 = load double, double* %contrast.addr, align 8, !dbg !9054
  %mul = fmul double 5.000000e-01, %13, !dbg !9054
  %14 = load i64, i64* %i, align 8, !dbg !9054
  %conv = sitofp i64 %14 to double, !dbg !9054
  %div = fdiv double %conv, 6.553500e+04, !dbg !9054
  %15 = load double, double* %midpoint.addr, align 8, !dbg !9054
  %mul19 = fmul double 0x3EF0001000100010, %15, !dbg !9054
  %sub = fsub double %div, %mul19, !dbg !9054
  %mul20 = fmul double %mul, %sub, !dbg !9054
  %call21 = call double @tanh(double %mul20) #6, !dbg !9054
  %16 = load double, double* %contrast.addr, align 8, !dbg !9054
  %mul22 = fmul double 5.000000e-01, %16, !dbg !9054
  %17 = load double, double* %midpoint.addr, align 8, !dbg !9054
  %mul23 = fmul double 0x3EF0001000100010, %17, !dbg !9054
  %sub24 = fsub double 0.000000e+00, %mul23, !dbg !9054
  %mul25 = fmul double %mul22, %sub24, !dbg !9054
  %call26 = call double @tanh(double %mul25) #6, !dbg !9054
  %sub27 = fsub double %call21, %call26, !dbg !9054
  %18 = load double, double* %contrast.addr, align 8, !dbg !9054
  %mul28 = fmul double 5.000000e-01, %18, !dbg !9054
  %19 = load double, double* %midpoint.addr, align 8, !dbg !9054
  %mul29 = fmul double 0x3EF0001000100010, %19, !dbg !9054
  %sub30 = fsub double 1.000000e+00, %mul29, !dbg !9054
  %mul31 = fmul double %mul28, %sub30, !dbg !9054
  %call32 = call double @tanh(double %mul31) #6, !dbg !9054
  %20 = load double, double* %contrast.addr, align 8, !dbg !9054
  %mul33 = fmul double 5.000000e-01, %20, !dbg !9054
  %21 = load double, double* %midpoint.addr, align 8, !dbg !9054
  %mul34 = fmul double 0x3EF0001000100010, %21, !dbg !9054
  %sub35 = fsub double 0.000000e+00, %mul34, !dbg !9054
  %mul36 = fmul double %mul33, %sub35, !dbg !9054
  %call37 = call double @tanh(double %mul36) #6, !dbg !9054
  %sub38 = fsub double %call32, %call37, !dbg !9054
  %div39 = fdiv double %sub27, %sub38, !dbg !9054
  %mul40 = fmul double 6.553500e+04, %div39, !dbg !9055
  %conv41 = fptrunc double %mul40 to float, !dbg !9056
  %call42 = call zeroext i16 @ScaleMapToQuantum(float %conv41), !dbg !9057
  %conv43 = uitofp i16 %call42 to float, !dbg !9058
  %22 = load float*, float** %sigmoidal_map, align 8, !dbg !9059
  %23 = load i64, i64* %i, align 8, !dbg !9060
  %arrayidx = getelementptr inbounds float, float* %22, i64 %23, !dbg !9059
  store float %conv43, float* %arrayidx, align 4, !dbg !9061
  br label %for.inc, !dbg !9059

for.inc:                                          ; preds = %for.body
  %24 = load i64, i64* %i, align 8, !dbg !9062
  %inc = add nsw i64 %24, 1, !dbg !9062
  store i64 %inc, i64* %i, align 8, !dbg !9062
  br label %for.cond, !dbg !9063, !llvm.loop !9064

for.end:                                          ; preds = %for.cond
  br label %if.end60, !dbg !9065

if.else:                                          ; preds = %if.end14
  store i64 0, i64* %i, align 8, !dbg !9066
  br label %for.cond44, !dbg !9068

for.cond44:                                       ; preds = %for.inc57, %if.else
  %25 = load i64, i64* %i, align 8, !dbg !9069
  %cmp45 = icmp sle i64 %25, 65535, !dbg !9071
  br i1 %cmp45, label %for.body47, label %for.end59, !dbg !9072

for.body47:                                       ; preds = %for.cond44
  %26 = load double, double* %contrast.addr, align 8, !dbg !9073
  %27 = load double, double* %midpoint.addr, align 8, !dbg !9074
  %mul48 = fmul double 0x3EF0001000100010, %27, !dbg !9075
  %28 = load i64, i64* %i, align 8, !dbg !9076
  %conv49 = sitofp i64 %28 to double, !dbg !9077
  %div50 = fdiv double %conv49, 6.553500e+04, !dbg !9078
  %call51 = call double @InverseScaledSigmoidal(double %26, double %mul48, double %div50), !dbg !9079
  %mul52 = fmul double 6.553500e+04, %call51, !dbg !9080
  %conv53 = fptrunc double %mul52 to float, !dbg !9081
  %call54 = call zeroext i16 @ScaleMapToQuantum(float %conv53), !dbg !9082
  %conv55 = uitofp i16 %call54 to float, !dbg !9083
  %29 = load float*, float** %sigmoidal_map, align 8, !dbg !9084
  %30 = load i64, i64* %i, align 8, !dbg !9085
  %arrayidx56 = getelementptr inbounds float, float* %29, i64 %30, !dbg !9084
  store float %conv55, float* %arrayidx56, align 4, !dbg !9086
  br label %for.inc57, !dbg !9084

for.inc57:                                        ; preds = %for.body47
  %31 = load i64, i64* %i, align 8, !dbg !9087
  %inc58 = add nsw i64 %31, 1, !dbg !9087
  store i64 %inc58, i64* %i, align 8, !dbg !9087
  br label %for.cond44, !dbg !9088, !llvm.loop !9089

for.end59:                                        ; preds = %for.cond44
  br label %if.end60

if.end60:                                         ; preds = %for.end59, %for.end
  %32 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9091
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %32, i32 0, i32 0, !dbg !9093
  %33 = load i32, i32* %storage_class, align 8, !dbg !9093
  %cmp61 = icmp eq i32 %33, 2, !dbg !9094
  br i1 %cmp61, label %if.then63, label %if.end124, !dbg !9095

if.then63:                                        ; preds = %if.end60
  store i64 0, i64* %i, align 8, !dbg !9096
  br label %for.cond64, !dbg !9098

for.cond64:                                       ; preds = %for.inc121, %if.then63
  %34 = load i64, i64* %i, align 8, !dbg !9099
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9101
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %35, i32 0, i32 10, !dbg !9102
  %36 = load i64, i64* %colors, align 8, !dbg !9102
  %cmp65 = icmp slt i64 %34, %36, !dbg !9103
  br i1 %cmp65, label %for.body67, label %for.end123, !dbg !9104

for.body67:                                       ; preds = %for.cond64
  %37 = load i32, i32* %channel.addr, align 4, !dbg !9105
  %and = and i32 %37, 1, !dbg !9108
  %cmp68 = icmp ne i32 %and, 0, !dbg !9109
  br i1 %cmp68, label %if.then70, label %if.end78, !dbg !9110

if.then70:                                        ; preds = %for.body67
  %38 = load float*, float** %sigmoidal_map, align 8, !dbg !9111
  %39 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9112
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %39, i32 0, i32 11, !dbg !9113
  %40 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !9113
  %41 = load i64, i64* %i, align 8, !dbg !9114
  %arrayidx71 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %40, i64 %41, !dbg !9112
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx71, i32 0, i32 2, !dbg !9115
  %42 = load i16, i16* %red, align 2, !dbg !9115
  %call72 = call i32 @ScaleQuantumToMap(i16 zeroext %42), !dbg !9116
  %idxprom = zext i32 %call72 to i64, !dbg !9111
  %arrayidx73 = getelementptr inbounds float, float* %38, i64 %idxprom, !dbg !9111
  %43 = load float, float* %arrayidx73, align 4, !dbg !9111
  %call74 = call zeroext i16 @ClampToQuantum(float %43), !dbg !9117
  %44 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9118
  %colormap75 = getelementptr inbounds %struct._Image, %struct._Image* %44, i32 0, i32 11, !dbg !9119
  %45 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap75, align 8, !dbg !9119
  %46 = load i64, i64* %i, align 8, !dbg !9120
  %arrayidx76 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %45, i64 %46, !dbg !9118
  %red77 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx76, i32 0, i32 2, !dbg !9121
  store i16 %call74, i16* %red77, align 2, !dbg !9122
  br label %if.end78, !dbg !9118

if.end78:                                         ; preds = %if.then70, %for.body67
  %47 = load i32, i32* %channel.addr, align 4, !dbg !9123
  %and79 = and i32 %47, 2, !dbg !9125
  %cmp80 = icmp ne i32 %and79, 0, !dbg !9126
  br i1 %cmp80, label %if.then82, label %if.end92, !dbg !9127

if.then82:                                        ; preds = %if.end78
  %48 = load float*, float** %sigmoidal_map, align 8, !dbg !9128
  %49 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9129
  %colormap83 = getelementptr inbounds %struct._Image, %struct._Image* %49, i32 0, i32 11, !dbg !9130
  %50 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap83, align 8, !dbg !9130
  %51 = load i64, i64* %i, align 8, !dbg !9131
  %arrayidx84 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %50, i64 %51, !dbg !9129
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx84, i32 0, i32 1, !dbg !9132
  %52 = load i16, i16* %green, align 2, !dbg !9132
  %call85 = call i32 @ScaleQuantumToMap(i16 zeroext %52), !dbg !9133
  %idxprom86 = zext i32 %call85 to i64, !dbg !9128
  %arrayidx87 = getelementptr inbounds float, float* %48, i64 %idxprom86, !dbg !9128
  %53 = load float, float* %arrayidx87, align 4, !dbg !9128
  %call88 = call zeroext i16 @ClampToQuantum(float %53), !dbg !9134
  %54 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9135
  %colormap89 = getelementptr inbounds %struct._Image, %struct._Image* %54, i32 0, i32 11, !dbg !9136
  %55 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap89, align 8, !dbg !9136
  %56 = load i64, i64* %i, align 8, !dbg !9137
  %arrayidx90 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %55, i64 %56, !dbg !9135
  %green91 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx90, i32 0, i32 1, !dbg !9138
  store i16 %call88, i16* %green91, align 2, !dbg !9139
  br label %if.end92, !dbg !9135

if.end92:                                         ; preds = %if.then82, %if.end78
  %57 = load i32, i32* %channel.addr, align 4, !dbg !9140
  %and93 = and i32 %57, 4, !dbg !9142
  %cmp94 = icmp ne i32 %and93, 0, !dbg !9143
  br i1 %cmp94, label %if.then96, label %if.end106, !dbg !9144

if.then96:                                        ; preds = %if.end92
  %58 = load float*, float** %sigmoidal_map, align 8, !dbg !9145
  %59 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9146
  %colormap97 = getelementptr inbounds %struct._Image, %struct._Image* %59, i32 0, i32 11, !dbg !9147
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap97, align 8, !dbg !9147
  %61 = load i64, i64* %i, align 8, !dbg !9148
  %arrayidx98 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %60, i64 %61, !dbg !9146
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx98, i32 0, i32 0, !dbg !9149
  %62 = load i16, i16* %blue, align 2, !dbg !9149
  %call99 = call i32 @ScaleQuantumToMap(i16 zeroext %62), !dbg !9150
  %idxprom100 = zext i32 %call99 to i64, !dbg !9145
  %arrayidx101 = getelementptr inbounds float, float* %58, i64 %idxprom100, !dbg !9145
  %63 = load float, float* %arrayidx101, align 4, !dbg !9145
  %call102 = call zeroext i16 @ClampToQuantum(float %63), !dbg !9151
  %64 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9152
  %colormap103 = getelementptr inbounds %struct._Image, %struct._Image* %64, i32 0, i32 11, !dbg !9153
  %65 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap103, align 8, !dbg !9153
  %66 = load i64, i64* %i, align 8, !dbg !9154
  %arrayidx104 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %65, i64 %66, !dbg !9152
  %blue105 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx104, i32 0, i32 0, !dbg !9155
  store i16 %call102, i16* %blue105, align 2, !dbg !9156
  br label %if.end106, !dbg !9152

if.end106:                                        ; preds = %if.then96, %if.end92
  %67 = load i32, i32* %channel.addr, align 4, !dbg !9157
  %and107 = and i32 %67, 8, !dbg !9159
  %cmp108 = icmp ne i32 %and107, 0, !dbg !9160
  br i1 %cmp108, label %if.then110, label %if.end120, !dbg !9161

if.then110:                                       ; preds = %if.end106
  %68 = load float*, float** %sigmoidal_map, align 8, !dbg !9162
  %69 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9163
  %colormap111 = getelementptr inbounds %struct._Image, %struct._Image* %69, i32 0, i32 11, !dbg !9164
  %70 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap111, align 8, !dbg !9164
  %71 = load i64, i64* %i, align 8, !dbg !9165
  %arrayidx112 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %70, i64 %71, !dbg !9163
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx112, i32 0, i32 3, !dbg !9166
  %72 = load i16, i16* %opacity, align 2, !dbg !9166
  %call113 = call i32 @ScaleQuantumToMap(i16 zeroext %72), !dbg !9167
  %idxprom114 = zext i32 %call113 to i64, !dbg !9162
  %arrayidx115 = getelementptr inbounds float, float* %68, i64 %idxprom114, !dbg !9162
  %73 = load float, float* %arrayidx115, align 4, !dbg !9162
  %call116 = call zeroext i16 @ClampToQuantum(float %73), !dbg !9168
  %74 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9169
  %colormap117 = getelementptr inbounds %struct._Image, %struct._Image* %74, i32 0, i32 11, !dbg !9170
  %75 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap117, align 8, !dbg !9170
  %76 = load i64, i64* %i, align 8, !dbg !9171
  %arrayidx118 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %75, i64 %76, !dbg !9169
  %opacity119 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx118, i32 0, i32 3, !dbg !9172
  store i16 %call116, i16* %opacity119, align 2, !dbg !9173
  br label %if.end120, !dbg !9169

if.end120:                                        ; preds = %if.then110, %if.end106
  br label %for.inc121, !dbg !9174

for.inc121:                                       ; preds = %if.end120
  %77 = load i64, i64* %i, align 8, !dbg !9175
  %inc122 = add nsw i64 %77, 1, !dbg !9175
  store i64 %inc122, i64* %i, align 8, !dbg !9175
  br label %for.cond64, !dbg !9176, !llvm.loop !9177

for.end123:                                       ; preds = %for.cond64
  br label %if.end124, !dbg !9178

if.end124:                                        ; preds = %for.end123, %if.end60
  store i32 1, i32* %status, align 4, !dbg !9179
  store i64 0, i64* %progress, align 8, !dbg !9180
  %78 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9181
  %exception125 = getelementptr inbounds %struct._Image, %struct._Image* %78, i32 0, i32 58, !dbg !9182
  store %struct._ExceptionInfo* %exception125, %struct._ExceptionInfo** %exception, align 8, !dbg !9183
  %79 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9184
  %80 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9185
  %call126 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %79, %struct._ExceptionInfo* %80), !dbg !9186
  store %struct._CacheView* %call126, %struct._CacheView** %image_view, align 8, !dbg !9187
  store i64 0, i64* %y, align 8, !dbg !9188
  br label %for.cond127, !dbg !9190

for.cond127:                                      ; preds = %for.inc231, %if.end124
  %81 = load i64, i64* %y, align 8, !dbg !9191
  %82 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9193
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %82, i32 0, i32 8, !dbg !9194
  %83 = load i64, i64* %rows, align 8, !dbg !9194
  %cmp128 = icmp slt i64 %81, %83, !dbg !9195
  br i1 %cmp128, label %for.body130, label %for.end233, !dbg !9196

for.body130:                                      ; preds = %for.cond127
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !9197, metadata !DIExpression()), !dbg !9199
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !9200, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.declare(metadata i64* %x, metadata !9202, metadata !DIExpression()), !dbg !9203
  %84 = load i32, i32* %status, align 4, !dbg !9204
  %cmp131 = icmp eq i32 %84, 0, !dbg !9206
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !9207

if.then133:                                       ; preds = %for.body130
  br label %for.inc231, !dbg !9208

if.end134:                                        ; preds = %for.body130
  %85 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9209
  %86 = load i64, i64* %y, align 8, !dbg !9210
  %87 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9211
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %87, i32 0, i32 7, !dbg !9212
  %88 = load i64, i64* %columns, align 8, !dbg !9212
  %89 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9213
  %call135 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %85, i64 0, i64 %86, i64 %88, i64 1, %struct._ExceptionInfo* %89), !dbg !9214
  store %struct._PixelPacket* %call135, %struct._PixelPacket** %q, align 8, !dbg !9215
  %90 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9216
  %cmp136 = icmp eq %struct._PixelPacket* %90, null, !dbg !9218
  br i1 %cmp136, label %if.then138, label %if.end139, !dbg !9219

if.then138:                                       ; preds = %if.end134
  store i32 0, i32* %status, align 4, !dbg !9220
  br label %for.inc231, !dbg !9222

if.end139:                                        ; preds = %if.end134
  %91 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9223
  %call140 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %91), !dbg !9224
  store i16* %call140, i16** %indexes, align 8, !dbg !9225
  store i64 0, i64* %x, align 8, !dbg !9226
  br label %for.cond141, !dbg !9228

for.cond141:                                      ; preds = %for.inc212, %if.end139
  %92 = load i64, i64* %x, align 8, !dbg !9229
  %93 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9231
  %columns142 = getelementptr inbounds %struct._Image, %struct._Image* %93, i32 0, i32 7, !dbg !9232
  %94 = load i64, i64* %columns142, align 8, !dbg !9232
  %cmp143 = icmp slt i64 %92, %94, !dbg !9233
  br i1 %cmp143, label %for.body145, label %for.end214, !dbg !9234

for.body145:                                      ; preds = %for.cond141
  %95 = load i32, i32* %channel.addr, align 4, !dbg !9235
  %and146 = and i32 %95, 1, !dbg !9238
  %cmp147 = icmp ne i32 %and146, 0, !dbg !9239
  br i1 %cmp147, label %if.then149, label %if.end156, !dbg !9240

if.then149:                                       ; preds = %for.body145
  %96 = load float*, float** %sigmoidal_map, align 8, !dbg !9241
  %97 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9241
  %red150 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %97, i32 0, i32 2, !dbg !9241
  %98 = load i16, i16* %red150, align 2, !dbg !9241
  %call151 = call i32 @ScaleQuantumToMap(i16 zeroext %98), !dbg !9241
  %idxprom152 = zext i32 %call151 to i64, !dbg !9241
  %arrayidx153 = getelementptr inbounds float, float* %96, i64 %idxprom152, !dbg !9241
  %99 = load float, float* %arrayidx153, align 4, !dbg !9241
  %call154 = call zeroext i16 @ClampToQuantum(float %99), !dbg !9241
  %100 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9241
  %red155 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %100, i32 0, i32 2, !dbg !9241
  store i16 %call154, i16* %red155, align 2, !dbg !9241
  br label %if.end156, !dbg !9241

if.end156:                                        ; preds = %if.then149, %for.body145
  %101 = load i32, i32* %channel.addr, align 4, !dbg !9242
  %and157 = and i32 %101, 2, !dbg !9244
  %cmp158 = icmp ne i32 %and157, 0, !dbg !9245
  br i1 %cmp158, label %if.then160, label %if.end167, !dbg !9246

if.then160:                                       ; preds = %if.end156
  %102 = load float*, float** %sigmoidal_map, align 8, !dbg !9247
  %103 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9247
  %green161 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %103, i32 0, i32 1, !dbg !9247
  %104 = load i16, i16* %green161, align 2, !dbg !9247
  %call162 = call i32 @ScaleQuantumToMap(i16 zeroext %104), !dbg !9247
  %idxprom163 = zext i32 %call162 to i64, !dbg !9247
  %arrayidx164 = getelementptr inbounds float, float* %102, i64 %idxprom163, !dbg !9247
  %105 = load float, float* %arrayidx164, align 4, !dbg !9247
  %call165 = call zeroext i16 @ClampToQuantum(float %105), !dbg !9247
  %106 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9247
  %green166 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %106, i32 0, i32 1, !dbg !9247
  store i16 %call165, i16* %green166, align 2, !dbg !9247
  br label %if.end167, !dbg !9247

if.end167:                                        ; preds = %if.then160, %if.end156
  %107 = load i32, i32* %channel.addr, align 4, !dbg !9248
  %and168 = and i32 %107, 4, !dbg !9250
  %cmp169 = icmp ne i32 %and168, 0, !dbg !9251
  br i1 %cmp169, label %if.then171, label %if.end178, !dbg !9252

if.then171:                                       ; preds = %if.end167
  %108 = load float*, float** %sigmoidal_map, align 8, !dbg !9253
  %109 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9253
  %blue172 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %109, i32 0, i32 0, !dbg !9253
  %110 = load i16, i16* %blue172, align 2, !dbg !9253
  %call173 = call i32 @ScaleQuantumToMap(i16 zeroext %110), !dbg !9253
  %idxprom174 = zext i32 %call173 to i64, !dbg !9253
  %arrayidx175 = getelementptr inbounds float, float* %108, i64 %idxprom174, !dbg !9253
  %111 = load float, float* %arrayidx175, align 4, !dbg !9253
  %call176 = call zeroext i16 @ClampToQuantum(float %111), !dbg !9253
  %112 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9253
  %blue177 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %112, i32 0, i32 0, !dbg !9253
  store i16 %call176, i16* %blue177, align 2, !dbg !9253
  br label %if.end178, !dbg !9253

if.end178:                                        ; preds = %if.then171, %if.end167
  %113 = load i32, i32* %channel.addr, align 4, !dbg !9254
  %and179 = and i32 %113, 8, !dbg !9256
  %cmp180 = icmp ne i32 %and179, 0, !dbg !9257
  br i1 %cmp180, label %if.then182, label %if.end189, !dbg !9258

if.then182:                                       ; preds = %if.end178
  %114 = load float*, float** %sigmoidal_map, align 8, !dbg !9259
  %115 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9259
  %opacity183 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %115, i32 0, i32 3, !dbg !9259
  %116 = load i16, i16* %opacity183, align 2, !dbg !9259
  %call184 = call i32 @ScaleQuantumToMap(i16 zeroext %116), !dbg !9259
  %idxprom185 = zext i32 %call184 to i64, !dbg !9259
  %arrayidx186 = getelementptr inbounds float, float* %114, i64 %idxprom185, !dbg !9259
  %117 = load float, float* %arrayidx186, align 4, !dbg !9259
  %call187 = call zeroext i16 @ClampToQuantum(float %117), !dbg !9259
  %118 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9259
  %opacity188 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %118, i32 0, i32 3, !dbg !9259
  store i16 %call187, i16* %opacity188, align 2, !dbg !9259
  br label %if.end189, !dbg !9259

if.end189:                                        ; preds = %if.then182, %if.end178
  %119 = load i32, i32* %channel.addr, align 4, !dbg !9260
  %and190 = and i32 %119, 32, !dbg !9262
  %cmp191 = icmp ne i32 %and190, 0, !dbg !9263
  br i1 %cmp191, label %land.lhs.true, label %if.end211, !dbg !9264

land.lhs.true:                                    ; preds = %if.end189
  %120 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9265
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %120, i32 0, i32 1, !dbg !9266
  %121 = load i32, i32* %colorspace, align 4, !dbg !9266
  %cmp193 = icmp eq i32 %121, 12, !dbg !9267
  br i1 %cmp193, label %if.then195, label %if.end211, !dbg !9268

if.then195:                                       ; preds = %land.lhs.true
  %122 = load i16*, i16** %indexes, align 8, !dbg !9269
  %123 = load i64, i64* %x, align 8, !dbg !9269
  %add.ptr = getelementptr inbounds i16, i16* %122, i64 %123, !dbg !9269
  %cmp196 = icmp ne i16* %add.ptr, null, !dbg !9269
  br i1 %cmp196, label %if.then198, label %if.end210, !dbg !9272

if.then198:                                       ; preds = %if.then195
  %124 = load float*, float** %sigmoidal_map, align 8, !dbg !9269
  %125 = load i16*, i16** %indexes, align 8, !dbg !9269
  %126 = load i64, i64* %x, align 8, !dbg !9269
  %add.ptr199 = getelementptr inbounds i16, i16* %125, i64 %126, !dbg !9269
  %cmp200 = icmp eq i16* %add.ptr199, null, !dbg !9269
  br i1 %cmp200, label %cond.true, label %cond.false, !dbg !9269

cond.true:                                        ; preds = %if.then198
  br label %cond.end, !dbg !9269

cond.false:                                       ; preds = %if.then198
  %127 = load i16*, i16** %indexes, align 8, !dbg !9269
  %128 = load i64, i64* %x, align 8, !dbg !9269
  %add.ptr202 = getelementptr inbounds i16, i16* %127, i64 %128, !dbg !9269
  %129 = load i16, i16* %add.ptr202, align 2, !dbg !9269
  %conv203 = zext i16 %129 to i32, !dbg !9269
  br label %cond.end, !dbg !9269

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv203, %cond.false ], !dbg !9269
  %conv204 = trunc i32 %cond to i16, !dbg !9269
  %call205 = call i32 @ScaleQuantumToMap(i16 zeroext %conv204), !dbg !9269
  %idxprom206 = zext i32 %call205 to i64, !dbg !9269
  %arrayidx207 = getelementptr inbounds float, float* %124, i64 %idxprom206, !dbg !9269
  %130 = load float, float* %arrayidx207, align 4, !dbg !9269
  %call208 = call zeroext i16 @ClampToQuantum(float %130), !dbg !9269
  %131 = load i16*, i16** %indexes, align 8, !dbg !9269
  %132 = load i64, i64* %x, align 8, !dbg !9269
  %add.ptr209 = getelementptr inbounds i16, i16* %131, i64 %132, !dbg !9269
  store i16 %call208, i16* %add.ptr209, align 2, !dbg !9269
  br label %if.end210, !dbg !9269

if.end210:                                        ; preds = %cond.end, %if.then195
  br label %if.end211, !dbg !9272

if.end211:                                        ; preds = %if.end210, %land.lhs.true, %if.end189
  %133 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9273
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %133, i32 1, !dbg !9273
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !9273
  br label %for.inc212, !dbg !9274

for.inc212:                                       ; preds = %if.end211
  %134 = load i64, i64* %x, align 8, !dbg !9275
  %inc213 = add nsw i64 %134, 1, !dbg !9275
  store i64 %inc213, i64* %x, align 8, !dbg !9275
  br label %for.cond141, !dbg !9276, !llvm.loop !9277

for.end214:                                       ; preds = %for.cond141
  %135 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9279
  %136 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9281
  %call215 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %135, %struct._ExceptionInfo* %136), !dbg !9282
  %cmp216 = icmp eq i32 %call215, 0, !dbg !9283
  br i1 %cmp216, label %if.then218, label %if.end219, !dbg !9284

if.then218:                                       ; preds = %for.end214
  store i32 0, i32* %status, align 4, !dbg !9285
  br label %if.end219, !dbg !9286

if.end219:                                        ; preds = %if.then218, %for.end214
  %137 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9287
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %137, i32 0, i32 47, !dbg !9289
  %138 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !9289
  %cmp220 = icmp ne i32 (i8*, i64, i64, i8*)* %138, null, !dbg !9290
  br i1 %cmp220, label %if.then222, label %if.end230, !dbg !9291

if.then222:                                       ; preds = %if.end219
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !9292, metadata !DIExpression()), !dbg !9294
  %139 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9295
  %140 = load i64, i64* %progress, align 8, !dbg !9296
  %inc223 = add nsw i64 %140, 1, !dbg !9296
  store i64 %inc223, i64* %progress, align 8, !dbg !9296
  %141 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9297
  %rows224 = getelementptr inbounds %struct._Image, %struct._Image* %141, i32 0, i32 8, !dbg !9298
  %142 = load i64, i64* %rows224, align 8, !dbg !9298
  %call225 = call i32 @SetImageProgress(%struct._Image* %139, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i64 0, i64 0), i64 %140, i64 %142), !dbg !9299
  store i32 %call225, i32* %proceed, align 4, !dbg !9300
  %143 = load i32, i32* %proceed, align 4, !dbg !9301
  %cmp226 = icmp eq i32 %143, 0, !dbg !9303
  br i1 %cmp226, label %if.then228, label %if.end229, !dbg !9304

if.then228:                                       ; preds = %if.then222
  store i32 0, i32* %status, align 4, !dbg !9305
  br label %if.end229, !dbg !9306

if.end229:                                        ; preds = %if.then228, %if.then222
  br label %if.end230, !dbg !9307

if.end230:                                        ; preds = %if.end229, %if.end219
  br label %for.inc231, !dbg !9308

for.inc231:                                       ; preds = %if.end230, %if.then138, %if.then133
  %144 = load i64, i64* %y, align 8, !dbg !9309
  %inc232 = add nsw i64 %144, 1, !dbg !9309
  store i64 %inc232, i64* %y, align 8, !dbg !9309
  br label %for.cond127, !dbg !9310, !llvm.loop !9311

for.end233:                                       ; preds = %for.cond127
  %145 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9313
  %call234 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %145), !dbg !9314
  store %struct._CacheView* %call234, %struct._CacheView** %image_view, align 8, !dbg !9315
  %146 = load float*, float** %sigmoidal_map, align 8, !dbg !9316
  %147 = bitcast float* %146 to i8*, !dbg !9316
  %call235 = call i8* @RelinquishMagickMemory(i8* %147), !dbg !9317
  %148 = bitcast i8* %call235 to float*, !dbg !9318
  store float* %148, float** %sigmoidal_map, align 8, !dbg !9319
  %149 = load i32, i32* %status, align 4, !dbg !9320
  store i32 %149, i32* %retval, align 4, !dbg !9321
  br label %return, !dbg !9321

return:                                           ; preds = %for.end233, %if.end13, %if.then
  %150 = load i32, i32* %retval, align 4, !dbg !9322
  ret i32 %150, !dbg !9322
}

; Function Attrs: nounwind
declare dso_local double @tanh(double) #2

; Function Attrs: noinline nounwind uwtable
define internal double @InverseScaledSigmoidal(double %a, double %b, double %x) #0 !dbg !9323 {
entry:
  %a.addr = alloca double, align 8
  %b.addr = alloca double, align 8
  %x.addr = alloca double, align 8
  %sig0 = alloca double, align 8
  %sig1 = alloca double, align 8
  %argument = alloca double, align 8
  %clamped = alloca double, align 8
  store double %a, double* %a.addr, align 8
  call void @llvm.dbg.declare(metadata double* %a.addr, metadata !9326, metadata !DIExpression()), !dbg !9327
  store double %b, double* %b.addr, align 8
  call void @llvm.dbg.declare(metadata double* %b.addr, metadata !9328, metadata !DIExpression()), !dbg !9329
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !9330, metadata !DIExpression()), !dbg !9331
  call void @llvm.dbg.declare(metadata double* %sig0, metadata !9332, metadata !DIExpression()), !dbg !9333
  %0 = load double, double* %a.addr, align 8, !dbg !9334
  %mul = fmul double 5.000000e-01, %0, !dbg !9334
  %1 = load double, double* %b.addr, align 8, !dbg !9334
  %sub = fsub double 0.000000e+00, %1, !dbg !9334
  %mul1 = fmul double %mul, %sub, !dbg !9334
  %call = call double @tanh(double %mul1) #6, !dbg !9334
  store double %call, double* %sig0, align 8, !dbg !9333
  call void @llvm.dbg.declare(metadata double* %sig1, metadata !9335, metadata !DIExpression()), !dbg !9336
  %2 = load double, double* %a.addr, align 8, !dbg !9337
  %mul2 = fmul double 5.000000e-01, %2, !dbg !9337
  %3 = load double, double* %b.addr, align 8, !dbg !9337
  %sub3 = fsub double 1.000000e+00, %3, !dbg !9337
  %mul4 = fmul double %mul2, %sub3, !dbg !9337
  %call5 = call double @tanh(double %mul4) #6, !dbg !9337
  store double %call5, double* %sig1, align 8, !dbg !9336
  call void @llvm.dbg.declare(metadata double* %argument, metadata !9338, metadata !DIExpression()), !dbg !9339
  %4 = load double, double* %sig1, align 8, !dbg !9340
  %5 = load double, double* %sig0, align 8, !dbg !9341
  %sub6 = fsub double %4, %5, !dbg !9342
  %6 = load double, double* %x.addr, align 8, !dbg !9343
  %mul7 = fmul double %sub6, %6, !dbg !9344
  %7 = load double, double* %sig0, align 8, !dbg !9345
  %add = fadd double %mul7, %7, !dbg !9346
  store double %add, double* %argument, align 8, !dbg !9339
  call void @llvm.dbg.declare(metadata double* %clamped, metadata !9347, metadata !DIExpression()), !dbg !9348
  %8 = load double, double* %argument, align 8, !dbg !9349
  %cmp = fcmp olt double %8, 0xBFEFFFFFFFFFFFF7, !dbg !9350
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9349

cond.true:                                        ; preds = %entry
  br label %cond.end11, !dbg !9349

cond.false:                                       ; preds = %entry
  %9 = load double, double* %argument, align 8, !dbg !9351
  %cmp8 = fcmp ogt double %9, 0x3FEFFFFFFFFFFFF7, !dbg !9352
  br i1 %cmp8, label %cond.true9, label %cond.false10, !dbg !9351

cond.true9:                                       ; preds = %cond.false
  br label %cond.end, !dbg !9351

cond.false10:                                     ; preds = %cond.false
  %10 = load double, double* %argument, align 8, !dbg !9353
  br label %cond.end, !dbg !9351

cond.end:                                         ; preds = %cond.false10, %cond.true9
  %cond = phi double [ 0x3FEFFFFFFFFFFFF7, %cond.true9 ], [ %10, %cond.false10 ], !dbg !9351
  br label %cond.end11, !dbg !9349

cond.end11:                                       ; preds = %cond.end, %cond.true
  %cond12 = phi double [ 0xBFEFFFFFFFFFFFF7, %cond.true ], [ %cond, %cond.end ], !dbg !9349
  store double %cond12, double* %clamped, align 8, !dbg !9348
  %11 = load double, double* %b.addr, align 8, !dbg !9354
  %12 = load double, double* %a.addr, align 8, !dbg !9355
  %div = fdiv double 2.000000e+00, %12, !dbg !9356
  %13 = load double, double* %clamped, align 8, !dbg !9357
  %call13 = call double @atanh(double %13) #6, !dbg !9358
  %mul14 = fmul double %div, %call13, !dbg !9359
  %add15 = fadd double %11, %mul14, !dbg !9360
  ret double %add15, !dbg !9361
}

declare dso_local double @InterpretLocaleValue(i8*, i8**) #3

declare dso_local i64 @FormatLocaleString(i8*, i64, i8*, ...) #3

declare dso_local void @ConvertRGBToHSB(i16 zeroext, i16 zeroext, i16 zeroext, double*, double*, double*) #3

; Function Attrs: nounwind
declare dso_local double @sin(double) #2

declare dso_local void @ConvertHSBToRGB(double, double, double, i16*, i16*, i16*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @MagickPixelCompositePlus(%struct._MagickPixelPacket* %p, float %alpha, %struct._MagickPixelPacket* %q, float %beta, %struct._MagickPixelPacket* %composite) #0 !dbg !9362 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %alpha.addr = alloca float, align 4
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %beta.addr = alloca float, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %gamma = alloca double, align 8
  %Da = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !9365, metadata !DIExpression()), !dbg !9366
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !9367, metadata !DIExpression()), !dbg !9368
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !9369, metadata !DIExpression()), !dbg !9370
  store float %beta, float* %beta.addr, align 4
  call void @llvm.dbg.declare(metadata float* %beta.addr, metadata !9371, metadata !DIExpression()), !dbg !9372
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !9373, metadata !DIExpression()), !dbg !9374
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !9375, metadata !DIExpression()), !dbg !9376
  call void @llvm.dbg.declare(metadata float* %Da, metadata !9377, metadata !DIExpression()), !dbg !9378
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !9379, metadata !DIExpression()), !dbg !9380
  %0 = load float, float* %alpha.addr, align 4, !dbg !9381
  %conv = fpext float %0 to double, !dbg !9381
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !9382
  %sub = fsub double 1.000000e+00, %mul, !dbg !9383
  %conv1 = fptrunc double %sub to float, !dbg !9384
  store float %conv1, float* %Sa, align 4, !dbg !9385
  %1 = load float, float* %beta.addr, align 4, !dbg !9386
  %conv2 = fpext float %1 to double, !dbg !9386
  %mul3 = fmul double 0x3EF0001000100010, %conv2, !dbg !9387
  %sub4 = fsub double 1.000000e+00, %mul3, !dbg !9388
  %conv5 = fptrunc double %sub4 to float, !dbg !9389
  store float %conv5, float* %Da, align 4, !dbg !9390
  %2 = load float, float* %Sa, align 4, !dbg !9391
  %3 = load float, float* %Da, align 4, !dbg !9392
  %add = fadd float %2, %3, !dbg !9393
  %call = call float @RoundToUnity(float %add), !dbg !9394
  %conv6 = fpext float %call to double, !dbg !9394
  store double %conv6, double* %gamma, align 8, !dbg !9395
  %4 = load double, double* %gamma, align 8, !dbg !9396
  %sub7 = fsub double 1.000000e+00, %4, !dbg !9397
  %mul8 = fmul double 6.553500e+04, %sub7, !dbg !9398
  %conv9 = fptrunc double %mul8 to float, !dbg !9399
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !9400
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %5, i32 0, i32 8, !dbg !9401
  store float %conv9, float* %opacity, align 4, !dbg !9402
  %6 = load double, double* %gamma, align 8, !dbg !9403
  %call10 = call double @PerceptibleReciprocal(double %6), !dbg !9404
  store double %call10, double* %gamma, align 8, !dbg !9405
  %7 = load double, double* %gamma, align 8, !dbg !9406
  %8 = load float, float* %Sa, align 4, !dbg !9407
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !9408
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 5, !dbg !9409
  %10 = load float, float* %red, align 8, !dbg !9409
  %mul11 = fmul float %8, %10, !dbg !9410
  %11 = load float, float* %Da, align 4, !dbg !9411
  %12 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !9412
  %red12 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %12, i32 0, i32 5, !dbg !9413
  %13 = load float, float* %red12, align 8, !dbg !9413
  %mul13 = fmul float %11, %13, !dbg !9414
  %add14 = fadd float %mul11, %mul13, !dbg !9415
  %conv15 = fpext float %add14 to double, !dbg !9416
  %mul16 = fmul double %7, %conv15, !dbg !9417
  %conv17 = fptrunc double %mul16 to float, !dbg !9406
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !9418
  %red18 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 5, !dbg !9419
  store float %conv17, float* %red18, align 8, !dbg !9420
  %15 = load double, double* %gamma, align 8, !dbg !9421
  %16 = load float, float* %Sa, align 4, !dbg !9422
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !9423
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %17, i32 0, i32 6, !dbg !9424
  %18 = load float, float* %green, align 4, !dbg !9424
  %mul19 = fmul float %16, %18, !dbg !9425
  %19 = load float, float* %Da, align 4, !dbg !9426
  %20 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !9427
  %green20 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %20, i32 0, i32 6, !dbg !9428
  %21 = load float, float* %green20, align 4, !dbg !9428
  %mul21 = fmul float %19, %21, !dbg !9429
  %add22 = fadd float %mul19, %mul21, !dbg !9430
  %conv23 = fpext float %add22 to double, !dbg !9431
  %mul24 = fmul double %15, %conv23, !dbg !9432
  %conv25 = fptrunc double %mul24 to float, !dbg !9421
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !9433
  %green26 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 6, !dbg !9434
  store float %conv25, float* %green26, align 4, !dbg !9435
  %23 = load double, double* %gamma, align 8, !dbg !9436
  %24 = load float, float* %Sa, align 4, !dbg !9437
  %25 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !9438
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %25, i32 0, i32 7, !dbg !9439
  %26 = load float, float* %blue, align 8, !dbg !9439
  %mul27 = fmul float %24, %26, !dbg !9440
  %27 = load float, float* %Da, align 4, !dbg !9441
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !9442
  %blue28 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 7, !dbg !9443
  %29 = load float, float* %blue28, align 8, !dbg !9443
  %mul29 = fmul float %27, %29, !dbg !9444
  %add30 = fadd float %mul27, %mul29, !dbg !9445
  %conv31 = fpext float %add30 to double, !dbg !9446
  %mul32 = fmul double %23, %conv31, !dbg !9447
  %conv33 = fptrunc double %mul32 to float, !dbg !9436
  %30 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !9448
  %blue34 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %30, i32 0, i32 7, !dbg !9449
  store float %conv33, float* %blue34, align 8, !dbg !9450
  %31 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !9451
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %31, i32 0, i32 1, !dbg !9453
  %32 = load i32, i32* %colorspace, align 4, !dbg !9453
  %cmp = icmp eq i32 %32, 12, !dbg !9454
  br i1 %cmp, label %if.then, label %if.end, !dbg !9455

if.then:                                          ; preds = %entry
  %33 = load double, double* %gamma, align 8, !dbg !9456
  %34 = load float, float* %Sa, align 4, !dbg !9457
  %35 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !9458
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %35, i32 0, i32 9, !dbg !9459
  %36 = load float, float* %index, align 8, !dbg !9459
  %mul36 = fmul float %34, %36, !dbg !9460
  %37 = load float, float* %Da, align 4, !dbg !9461
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !9462
  %index37 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 9, !dbg !9463
  %39 = load float, float* %index37, align 8, !dbg !9463
  %mul38 = fmul float %37, %39, !dbg !9464
  %add39 = fadd float %mul36, %mul38, !dbg !9465
  %conv40 = fpext float %add39 to double, !dbg !9466
  %mul41 = fmul double %33, %conv40, !dbg !9467
  %conv42 = fptrunc double %mul41 to float, !dbg !9456
  %40 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !9468
  %index43 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %40, i32 0, i32 9, !dbg !9469
  store float %conv42, float* %index43, align 8, !dbg !9470
  br label %if.end, !dbg !9468

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9471
}

; Function Attrs: noinline nounwind uwtable
define internal float @RoundToUnity(float %value) #0 !dbg !9472 {
entry:
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !9475, metadata !DIExpression()), !dbg !9476
  %0 = load float, float* %value.addr, align 4, !dbg !9477
  %conv = fpext float %0 to double, !dbg !9477
  %cmp = fcmp olt double %conv, 0.000000e+00, !dbg !9478
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9477

cond.true:                                        ; preds = %entry
  br label %cond.end8, !dbg !9477

cond.false:                                       ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !9479
  %conv2 = fpext float %1 to double, !dbg !9479
  %cmp3 = fcmp ogt double %conv2, 1.000000e+00, !dbg !9480
  br i1 %cmp3, label %cond.true5, label %cond.false6, !dbg !9481

cond.true5:                                       ; preds = %cond.false
  br label %cond.end, !dbg !9481

cond.false6:                                      ; preds = %cond.false
  %2 = load float, float* %value.addr, align 4, !dbg !9482
  %conv7 = fpext float %2 to double, !dbg !9482
  br label %cond.end, !dbg !9481

cond.end:                                         ; preds = %cond.false6, %cond.true5
  %cond = phi double [ 1.000000e+00, %cond.true5 ], [ %conv7, %cond.false6 ], !dbg !9481
  br label %cond.end8, !dbg !9477

cond.end8:                                        ; preds = %cond.end, %cond.true
  %cond9 = phi double [ 0.000000e+00, %cond.true ], [ %cond, %cond.end ], !dbg !9477
  %conv10 = fptrunc double %cond9 to float, !dbg !9483
  ret float %conv10, !dbg !9484
}

; Function Attrs: noinline nounwind uwtable
define internal double @PerceptibleReciprocal(double %x) #0 !dbg !9485 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  %sign = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !9488, metadata !DIExpression()), !dbg !9489
  call void @llvm.dbg.declare(metadata double* %sign, metadata !9490, metadata !DIExpression()), !dbg !9491
  %0 = load double, double* %x.addr, align 8, !dbg !9492
  %cmp = fcmp olt double %0, 0.000000e+00, !dbg !9493
  %1 = zext i1 %cmp to i64, !dbg !9492
  %cond = select i1 %cmp, double -1.000000e+00, double 1.000000e+00, !dbg !9492
  store double %cond, double* %sign, align 8, !dbg !9494
  %2 = load double, double* %sign, align 8, !dbg !9495
  %3 = load double, double* %x.addr, align 8, !dbg !9497
  %mul = fmul double %2, %3, !dbg !9498
  %cmp1 = fcmp oge double %mul, 1.000000e-15, !dbg !9499
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9500

if.then:                                          ; preds = %entry
  %4 = load double, double* %x.addr, align 8, !dbg !9501
  %div = fdiv double 1.000000e+00, %4, !dbg !9502
  store double %div, double* %retval, align 8, !dbg !9503
  br label %return, !dbg !9503

if.end:                                           ; preds = %entry
  %5 = load double, double* %sign, align 8, !dbg !9504
  %div2 = fdiv double %5, 1.000000e-15, !dbg !9505
  store double %div2, double* %retval, align 8, !dbg !9506
  br label %return, !dbg !9506

return:                                           ; preds = %if.end, %if.then
  %6 = load double, double* %retval, align 8, !dbg !9507
  ret double %6, !dbg !9507
}

declare dso_local void @ConvertRGBToHCL(i16 zeroext, i16 zeroext, i16 zeroext, double*, double*, double*) #3

declare dso_local void @ConvertHCLToRGB(double, double, double, i16*, i16*, i16*) #3

declare dso_local void @ConvertRGBToHCLp(i16 zeroext, i16 zeroext, i16 zeroext, double*, double*, double*) #3

declare dso_local void @ConvertHCLpToRGB(double, double, double, i16*, i16*, i16*) #3

declare dso_local void @ConvertRGBToHSI(i16 zeroext, i16 zeroext, i16 zeroext, double*, double*, double*) #3

declare dso_local void @ConvertHSIToRGB(double, double, double, i16*, i16*, i16*) #3

declare dso_local void @ConvertRGBToHSL(i16 zeroext, i16 zeroext, i16 zeroext, double*, double*, double*) #3

declare dso_local void @ConvertHSLToRGB(double, double, double, i16*, i16*, i16*) #3

declare dso_local void @ConvertRGBToHSV(i16 zeroext, i16 zeroext, i16 zeroext, double*, double*, double*) #3

declare dso_local void @ConvertHSVToRGB(double, double, double, i16*, i16*, i16*) #3

declare dso_local void @ConvertRGBToHWB(i16 zeroext, i16 zeroext, i16 zeroext, double*, double*, double*) #3

declare dso_local void @ConvertHWBToRGB(double, double, double, i16*, i16*, i16*) #3

declare dso_local void @ConvertRGBToLCHab(i16 zeroext, i16 zeroext, i16 zeroext, double*, double*, double*) #3

declare dso_local void @ConvertLCHabToRGB(double, double, double, i16*, i16*, i16*) #3

declare dso_local void @ConvertRGBToLCHuv(i16 zeroext, i16 zeroext, i16 zeroext, double*, double*, double*) #3

declare dso_local void @ConvertLCHuvToRGB(double, double, double, i16*, i16*, i16*) #3

; Function Attrs: nounwind
declare dso_local double @atanh(double) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind }
attributes #7 = { allocsize(0,1) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!803, !804, !805}
!llvm.ident = !{!806}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !542, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "magick/enhance.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !9, !14, !51, !76, !88, !96, !101, !136, !146, !152, !167, !238, !246, !252, !325, !342, !356, !368, !390, !415, !423, !438, !466}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 211, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "./magick/magick-type.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8}
!7 = !DIEnumerator(name: "MagickFalse", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "MagickTrue", value: 1, isUnsigned: true)
!9 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 204, baseType: !5, size: 32, elements: !10)
!10 = !{!11, !12, !13}
!11 = !DIEnumerator(name: "UndefinedClass", value: 0, isUnsigned: true)
!12 = !DIEnumerator(name: "DirectClass", value: 1, isUnsigned: true)
!13 = !DIEnumerator(name: "PseudoClass", value: 2, isUnsigned: true)
!14 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 25, baseType: !5, size: 32, elements: !16)
!15 = !DIFile(filename: "./magick/colorspace.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!16 = !{!17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50}
!17 = !DIEnumerator(name: "UndefinedColorspace", value: 0, isUnsigned: true)
!18 = !DIEnumerator(name: "RGBColorspace", value: 1, isUnsigned: true)
!19 = !DIEnumerator(name: "GRAYColorspace", value: 2, isUnsigned: true)
!20 = !DIEnumerator(name: "TransparentColorspace", value: 3, isUnsigned: true)
!21 = !DIEnumerator(name: "OHTAColorspace", value: 4, isUnsigned: true)
!22 = !DIEnumerator(name: "LabColorspace", value: 5, isUnsigned: true)
!23 = !DIEnumerator(name: "XYZColorspace", value: 6, isUnsigned: true)
!24 = !DIEnumerator(name: "YCbCrColorspace", value: 7, isUnsigned: true)
!25 = !DIEnumerator(name: "YCCColorspace", value: 8, isUnsigned: true)
!26 = !DIEnumerator(name: "YIQColorspace", value: 9, isUnsigned: true)
!27 = !DIEnumerator(name: "YPbPrColorspace", value: 10, isUnsigned: true)
!28 = !DIEnumerator(name: "YUVColorspace", value: 11, isUnsigned: true)
!29 = !DIEnumerator(name: "CMYKColorspace", value: 12, isUnsigned: true)
!30 = !DIEnumerator(name: "sRGBColorspace", value: 13, isUnsigned: true)
!31 = !DIEnumerator(name: "HSBColorspace", value: 14, isUnsigned: true)
!32 = !DIEnumerator(name: "HSLColorspace", value: 15, isUnsigned: true)
!33 = !DIEnumerator(name: "HWBColorspace", value: 16, isUnsigned: true)
!34 = !DIEnumerator(name: "Rec601LumaColorspace", value: 17, isUnsigned: true)
!35 = !DIEnumerator(name: "Rec601YCbCrColorspace", value: 18, isUnsigned: true)
!36 = !DIEnumerator(name: "Rec709LumaColorspace", value: 19, isUnsigned: true)
!37 = !DIEnumerator(name: "Rec709YCbCrColorspace", value: 20, isUnsigned: true)
!38 = !DIEnumerator(name: "LogColorspace", value: 21, isUnsigned: true)
!39 = !DIEnumerator(name: "CMYColorspace", value: 22, isUnsigned: true)
!40 = !DIEnumerator(name: "LuvColorspace", value: 23, isUnsigned: true)
!41 = !DIEnumerator(name: "HCLColorspace", value: 24, isUnsigned: true)
!42 = !DIEnumerator(name: "LCHColorspace", value: 25, isUnsigned: true)
!43 = !DIEnumerator(name: "LMSColorspace", value: 26, isUnsigned: true)
!44 = !DIEnumerator(name: "LCHabColorspace", value: 27, isUnsigned: true)
!45 = !DIEnumerator(name: "LCHuvColorspace", value: 28, isUnsigned: true)
!46 = !DIEnumerator(name: "scRGBColorspace", value: 29, isUnsigned: true)
!47 = !DIEnumerator(name: "HSIColorspace", value: 30, isUnsigned: true)
!48 = !DIEnumerator(name: "HSVColorspace", value: 31, isUnsigned: true)
!49 = !DIEnumerator(name: "HCLpColorspace", value: 32, isUnsigned: true)
!50 = !DIEnumerator(name: "YDbDrColorspace", value: 33, isUnsigned: true)
!51 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !52, line: 25, baseType: !5, size: 32, elements: !53)
!52 = !DIFile(filename: "./magick/compress.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!53 = !{!54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75}
!54 = !DIEnumerator(name: "UndefinedCompression", value: 0, isUnsigned: true)
!55 = !DIEnumerator(name: "NoCompression", value: 1, isUnsigned: true)
!56 = !DIEnumerator(name: "BZipCompression", value: 2, isUnsigned: true)
!57 = !DIEnumerator(name: "DXT1Compression", value: 3, isUnsigned: true)
!58 = !DIEnumerator(name: "DXT3Compression", value: 4, isUnsigned: true)
!59 = !DIEnumerator(name: "DXT5Compression", value: 5, isUnsigned: true)
!60 = !DIEnumerator(name: "FaxCompression", value: 6, isUnsigned: true)
!61 = !DIEnumerator(name: "Group4Compression", value: 7, isUnsigned: true)
!62 = !DIEnumerator(name: "JPEGCompression", value: 8, isUnsigned: true)
!63 = !DIEnumerator(name: "JPEG2000Compression", value: 9, isUnsigned: true)
!64 = !DIEnumerator(name: "LosslessJPEGCompression", value: 10, isUnsigned: true)
!65 = !DIEnumerator(name: "LZWCompression", value: 11, isUnsigned: true)
!66 = !DIEnumerator(name: "RLECompression", value: 12, isUnsigned: true)
!67 = !DIEnumerator(name: "ZipCompression", value: 13, isUnsigned: true)
!68 = !DIEnumerator(name: "ZipSCompression", value: 14, isUnsigned: true)
!69 = !DIEnumerator(name: "PizCompression", value: 15, isUnsigned: true)
!70 = !DIEnumerator(name: "Pxr24Compression", value: 16, isUnsigned: true)
!71 = !DIEnumerator(name: "B44Compression", value: 17, isUnsigned: true)
!72 = !DIEnumerator(name: "B44ACompression", value: 18, isUnsigned: true)
!73 = !DIEnumerator(name: "LZMACompression", value: 19, isUnsigned: true)
!74 = !DIEnumerator(name: "JBIG1Compression", value: 20, isUnsigned: true)
!75 = !DIEnumerator(name: "JBIG2Compression", value: 21, isUnsigned: true)
!76 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !77, line: 75, baseType: !5, size: 32, elements: !78)
!77 = !DIFile(filename: "./magick/image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!78 = !{!79, !80, !81, !82, !83, !84, !85, !86, !87}
!79 = !DIEnumerator(name: "UndefinedOrientation", value: 0, isUnsigned: true)
!80 = !DIEnumerator(name: "TopLeftOrientation", value: 1, isUnsigned: true)
!81 = !DIEnumerator(name: "TopRightOrientation", value: 2, isUnsigned: true)
!82 = !DIEnumerator(name: "BottomRightOrientation", value: 3, isUnsigned: true)
!83 = !DIEnumerator(name: "BottomLeftOrientation", value: 4, isUnsigned: true)
!84 = !DIEnumerator(name: "LeftTopOrientation", value: 5, isUnsigned: true)
!85 = !DIEnumerator(name: "RightTopOrientation", value: 6, isUnsigned: true)
!86 = !DIEnumerator(name: "RightBottomOrientation", value: 7, isUnsigned: true)
!87 = !DIEnumerator(name: "LeftBottomOrientation", value: 8, isUnsigned: true)
!88 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !89, line: 42, baseType: !5, size: 32, elements: !90)
!89 = !DIFile(filename: "./magick/profile.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!90 = !{!91, !92, !93, !94, !95}
!91 = !DIEnumerator(name: "UndefinedIntent", value: 0, isUnsigned: true)
!92 = !DIEnumerator(name: "SaturationIntent", value: 1, isUnsigned: true)
!93 = !DIEnumerator(name: "PerceptualIntent", value: 2, isUnsigned: true)
!94 = !DIEnumerator(name: "AbsoluteIntent", value: 3, isUnsigned: true)
!95 = !DIEnumerator(name: "RelativeIntent", value: 4, isUnsigned: true)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !77, line: 88, baseType: !5, size: 32, elements: !97)
!97 = !{!98, !99, !100}
!98 = !DIEnumerator(name: "UndefinedResolution", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "PixelsPerInchResolution", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "PixelsPerCentimeterResolution", value: 2, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !102, line: 32, baseType: !5, size: 32, elements: !103)
!102 = !DIFile(filename: "./magick/resample.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!103 = !{!104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135}
!104 = !DIEnumerator(name: "UndefinedFilter", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "PointFilter", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "BoxFilter", value: 2, isUnsigned: true)
!107 = !DIEnumerator(name: "TriangleFilter", value: 3, isUnsigned: true)
!108 = !DIEnumerator(name: "HermiteFilter", value: 4, isUnsigned: true)
!109 = !DIEnumerator(name: "HanningFilter", value: 5, isUnsigned: true)
!110 = !DIEnumerator(name: "HammingFilter", value: 6, isUnsigned: true)
!111 = !DIEnumerator(name: "BlackmanFilter", value: 7, isUnsigned: true)
!112 = !DIEnumerator(name: "GaussianFilter", value: 8, isUnsigned: true)
!113 = !DIEnumerator(name: "QuadraticFilter", value: 9, isUnsigned: true)
!114 = !DIEnumerator(name: "CubicFilter", value: 10, isUnsigned: true)
!115 = !DIEnumerator(name: "CatromFilter", value: 11, isUnsigned: true)
!116 = !DIEnumerator(name: "MitchellFilter", value: 12, isUnsigned: true)
!117 = !DIEnumerator(name: "JincFilter", value: 13, isUnsigned: true)
!118 = !DIEnumerator(name: "SincFilter", value: 14, isUnsigned: true)
!119 = !DIEnumerator(name: "SincFastFilter", value: 15, isUnsigned: true)
!120 = !DIEnumerator(name: "KaiserFilter", value: 16, isUnsigned: true)
!121 = !DIEnumerator(name: "WelshFilter", value: 17, isUnsigned: true)
!122 = !DIEnumerator(name: "ParzenFilter", value: 18, isUnsigned: true)
!123 = !DIEnumerator(name: "BohmanFilter", value: 19, isUnsigned: true)
!124 = !DIEnumerator(name: "BartlettFilter", value: 20, isUnsigned: true)
!125 = !DIEnumerator(name: "LagrangeFilter", value: 21, isUnsigned: true)
!126 = !DIEnumerator(name: "LanczosFilter", value: 22, isUnsigned: true)
!127 = !DIEnumerator(name: "LanczosSharpFilter", value: 23, isUnsigned: true)
!128 = !DIEnumerator(name: "Lanczos2Filter", value: 24, isUnsigned: true)
!129 = !DIEnumerator(name: "Lanczos2SharpFilter", value: 25, isUnsigned: true)
!130 = !DIEnumerator(name: "RobidouxFilter", value: 26, isUnsigned: true)
!131 = !DIEnumerator(name: "RobidouxSharpFilter", value: 27, isUnsigned: true)
!132 = !DIEnumerator(name: "CosineFilter", value: 28, isUnsigned: true)
!133 = !DIEnumerator(name: "SplineFilter", value: 29, isUnsigned: true)
!134 = !DIEnumerator(name: "LanczosRadiusFilter", value: 30, isUnsigned: true)
!135 = !DIEnumerator(name: "SentinelFilter", value: 31, isUnsigned: true)
!136 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !77, line: 63, baseType: !5, size: 32, elements: !137)
!137 = !{!138, !139, !140, !141, !142, !143, !144, !145}
!138 = !DIEnumerator(name: "UndefinedInterlace", value: 0, isUnsigned: true)
!139 = !DIEnumerator(name: "NoInterlace", value: 1, isUnsigned: true)
!140 = !DIEnumerator(name: "LineInterlace", value: 2, isUnsigned: true)
!141 = !DIEnumerator(name: "PlaneInterlace", value: 3, isUnsigned: true)
!142 = !DIEnumerator(name: "PartitionInterlace", value: 4, isUnsigned: true)
!143 = !DIEnumerator(name: "GIFInterlace", value: 5, isUnsigned: true)
!144 = !DIEnumerator(name: "JPEGInterlace", value: 6, isUnsigned: true)
!145 = !DIEnumerator(name: "PNGInterlace", value: 7, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !147, line: 30, baseType: !5, size: 32, elements: !148)
!147 = !DIFile(filename: "./magick/quantum.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!148 = !{!149, !150, !151}
!149 = !DIEnumerator(name: "UndefinedEndian", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "LSBEndian", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "MSBEndian", value: 2, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !153, line: 77, baseType: !5, size: 32, elements: !154)
!153 = !DIFile(filename: "./magick/geometry.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!154 = !{!155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166}
!155 = !DIEnumerator(name: "UndefinedGravity", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "ForgetGravity", value: 0, isUnsigned: true)
!157 = !DIEnumerator(name: "NorthWestGravity", value: 1, isUnsigned: true)
!158 = !DIEnumerator(name: "NorthGravity", value: 2, isUnsigned: true)
!159 = !DIEnumerator(name: "NorthEastGravity", value: 3, isUnsigned: true)
!160 = !DIEnumerator(name: "WestGravity", value: 4, isUnsigned: true)
!161 = !DIEnumerator(name: "CenterGravity", value: 5, isUnsigned: true)
!162 = !DIEnumerator(name: "EastGravity", value: 6, isUnsigned: true)
!163 = !DIEnumerator(name: "SouthWestGravity", value: 7, isUnsigned: true)
!164 = !DIEnumerator(name: "SouthGravity", value: 8, isUnsigned: true)
!165 = !DIEnumerator(name: "SouthEastGravity", value: 9, isUnsigned: true)
!166 = !DIEnumerator(name: "StaticGravity", value: 10, isUnsigned: true)
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !168, line: 25, baseType: !5, size: 32, elements: !169)
!168 = !DIFile(filename: "./magick/composite.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!169 = !{!170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237}
!170 = !DIEnumerator(name: "UndefinedCompositeOp", value: 0, isUnsigned: true)
!171 = !DIEnumerator(name: "NoCompositeOp", value: 1, isUnsigned: true)
!172 = !DIEnumerator(name: "ModulusAddCompositeOp", value: 2, isUnsigned: true)
!173 = !DIEnumerator(name: "AtopCompositeOp", value: 3, isUnsigned: true)
!174 = !DIEnumerator(name: "BlendCompositeOp", value: 4, isUnsigned: true)
!175 = !DIEnumerator(name: "BumpmapCompositeOp", value: 5, isUnsigned: true)
!176 = !DIEnumerator(name: "ChangeMaskCompositeOp", value: 6, isUnsigned: true)
!177 = !DIEnumerator(name: "ClearCompositeOp", value: 7, isUnsigned: true)
!178 = !DIEnumerator(name: "ColorBurnCompositeOp", value: 8, isUnsigned: true)
!179 = !DIEnumerator(name: "ColorDodgeCompositeOp", value: 9, isUnsigned: true)
!180 = !DIEnumerator(name: "ColorizeCompositeOp", value: 10, isUnsigned: true)
!181 = !DIEnumerator(name: "CopyBlackCompositeOp", value: 11, isUnsigned: true)
!182 = !DIEnumerator(name: "CopyBlueCompositeOp", value: 12, isUnsigned: true)
!183 = !DIEnumerator(name: "CopyCompositeOp", value: 13, isUnsigned: true)
!184 = !DIEnumerator(name: "CopyCyanCompositeOp", value: 14, isUnsigned: true)
!185 = !DIEnumerator(name: "CopyGreenCompositeOp", value: 15, isUnsigned: true)
!186 = !DIEnumerator(name: "CopyMagentaCompositeOp", value: 16, isUnsigned: true)
!187 = !DIEnumerator(name: "CopyOpacityCompositeOp", value: 17, isUnsigned: true)
!188 = !DIEnumerator(name: "CopyRedCompositeOp", value: 18, isUnsigned: true)
!189 = !DIEnumerator(name: "CopyYellowCompositeOp", value: 19, isUnsigned: true)
!190 = !DIEnumerator(name: "DarkenCompositeOp", value: 20, isUnsigned: true)
!191 = !DIEnumerator(name: "DstAtopCompositeOp", value: 21, isUnsigned: true)
!192 = !DIEnumerator(name: "DstCompositeOp", value: 22, isUnsigned: true)
!193 = !DIEnumerator(name: "DstInCompositeOp", value: 23, isUnsigned: true)
!194 = !DIEnumerator(name: "DstOutCompositeOp", value: 24, isUnsigned: true)
!195 = !DIEnumerator(name: "DstOverCompositeOp", value: 25, isUnsigned: true)
!196 = !DIEnumerator(name: "DifferenceCompositeOp", value: 26, isUnsigned: true)
!197 = !DIEnumerator(name: "DisplaceCompositeOp", value: 27, isUnsigned: true)
!198 = !DIEnumerator(name: "DissolveCompositeOp", value: 28, isUnsigned: true)
!199 = !DIEnumerator(name: "ExclusionCompositeOp", value: 29, isUnsigned: true)
!200 = !DIEnumerator(name: "HardLightCompositeOp", value: 30, isUnsigned: true)
!201 = !DIEnumerator(name: "HueCompositeOp", value: 31, isUnsigned: true)
!202 = !DIEnumerator(name: "InCompositeOp", value: 32, isUnsigned: true)
!203 = !DIEnumerator(name: "LightenCompositeOp", value: 33, isUnsigned: true)
!204 = !DIEnumerator(name: "LinearLightCompositeOp", value: 34, isUnsigned: true)
!205 = !DIEnumerator(name: "LuminizeCompositeOp", value: 35, isUnsigned: true)
!206 = !DIEnumerator(name: "MinusDstCompositeOp", value: 36, isUnsigned: true)
!207 = !DIEnumerator(name: "ModulateCompositeOp", value: 37, isUnsigned: true)
!208 = !DIEnumerator(name: "MultiplyCompositeOp", value: 38, isUnsigned: true)
!209 = !DIEnumerator(name: "OutCompositeOp", value: 39, isUnsigned: true)
!210 = !DIEnumerator(name: "OverCompositeOp", value: 40, isUnsigned: true)
!211 = !DIEnumerator(name: "OverlayCompositeOp", value: 41, isUnsigned: true)
!212 = !DIEnumerator(name: "PlusCompositeOp", value: 42, isUnsigned: true)
!213 = !DIEnumerator(name: "ReplaceCompositeOp", value: 43, isUnsigned: true)
!214 = !DIEnumerator(name: "SaturateCompositeOp", value: 44, isUnsigned: true)
!215 = !DIEnumerator(name: "ScreenCompositeOp", value: 45, isUnsigned: true)
!216 = !DIEnumerator(name: "SoftLightCompositeOp", value: 46, isUnsigned: true)
!217 = !DIEnumerator(name: "SrcAtopCompositeOp", value: 47, isUnsigned: true)
!218 = !DIEnumerator(name: "SrcCompositeOp", value: 48, isUnsigned: true)
!219 = !DIEnumerator(name: "SrcInCompositeOp", value: 49, isUnsigned: true)
!220 = !DIEnumerator(name: "SrcOutCompositeOp", value: 50, isUnsigned: true)
!221 = !DIEnumerator(name: "SrcOverCompositeOp", value: 51, isUnsigned: true)
!222 = !DIEnumerator(name: "ModulusSubtractCompositeOp", value: 52, isUnsigned: true)
!223 = !DIEnumerator(name: "ThresholdCompositeOp", value: 53, isUnsigned: true)
!224 = !DIEnumerator(name: "XorCompositeOp", value: 54, isUnsigned: true)
!225 = !DIEnumerator(name: "DivideDstCompositeOp", value: 55, isUnsigned: true)
!226 = !DIEnumerator(name: "DistortCompositeOp", value: 56, isUnsigned: true)
!227 = !DIEnumerator(name: "BlurCompositeOp", value: 57, isUnsigned: true)
!228 = !DIEnumerator(name: "PegtopLightCompositeOp", value: 58, isUnsigned: true)
!229 = !DIEnumerator(name: "VividLightCompositeOp", value: 59, isUnsigned: true)
!230 = !DIEnumerator(name: "PinLightCompositeOp", value: 60, isUnsigned: true)
!231 = !DIEnumerator(name: "LinearDodgeCompositeOp", value: 61, isUnsigned: true)
!232 = !DIEnumerator(name: "LinearBurnCompositeOp", value: 62, isUnsigned: true)
!233 = !DIEnumerator(name: "MathematicsCompositeOp", value: 63, isUnsigned: true)
!234 = !DIEnumerator(name: "DivideSrcCompositeOp", value: 64, isUnsigned: true)
!235 = !DIEnumerator(name: "MinusSrcCompositeOp", value: 65, isUnsigned: true)
!236 = !DIEnumerator(name: "DarkenIntensityCompositeOp", value: 66, isUnsigned: true)
!237 = !DIEnumerator(name: "LightenIntensityCompositeOp", value: 67, isUnsigned: true)
!238 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !239, line: 25, baseType: !5, size: 32, elements: !240)
!239 = !DIFile(filename: "./magick/layer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!240 = !{!241, !242, !243, !244, !245}
!241 = !DIEnumerator(name: "UnrecognizedDispose", value: 0, isUnsigned: true)
!242 = !DIEnumerator(name: "UndefinedDispose", value: 0, isUnsigned: true)
!243 = !DIEnumerator(name: "NoneDispose", value: 1, isUnsigned: true)
!244 = !DIEnumerator(name: "BackgroundDispose", value: 2, isUnsigned: true)
!245 = !DIEnumerator(name: "PreviousDispose", value: 3, isUnsigned: true)
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !247, line: 25, baseType: !5, size: 32, elements: !248)
!247 = !DIFile(filename: "./magick/timer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!248 = !{!249, !250, !251}
!249 = !DIEnumerator(name: "UndefinedTimerState", value: 0, isUnsigned: true)
!250 = !DIEnumerator(name: "StoppedTimerState", value: 1, isUnsigned: true)
!251 = !DIEnumerator(name: "RunningTimerState", value: 2, isUnsigned: true)
!252 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !253, line: 28, baseType: !5, size: 32, elements: !254)
!253 = !DIFile(filename: "./magick/exception.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!254 = !{!255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324}
!255 = !DIEnumerator(name: "UndefinedException", value: 0, isUnsigned: true)
!256 = !DIEnumerator(name: "WarningException", value: 300, isUnsigned: true)
!257 = !DIEnumerator(name: "ResourceLimitWarning", value: 300, isUnsigned: true)
!258 = !DIEnumerator(name: "TypeWarning", value: 305, isUnsigned: true)
!259 = !DIEnumerator(name: "OptionWarning", value: 310, isUnsigned: true)
!260 = !DIEnumerator(name: "DelegateWarning", value: 315, isUnsigned: true)
!261 = !DIEnumerator(name: "MissingDelegateWarning", value: 320, isUnsigned: true)
!262 = !DIEnumerator(name: "CorruptImageWarning", value: 325, isUnsigned: true)
!263 = !DIEnumerator(name: "FileOpenWarning", value: 330, isUnsigned: true)
!264 = !DIEnumerator(name: "BlobWarning", value: 335, isUnsigned: true)
!265 = !DIEnumerator(name: "StreamWarning", value: 340, isUnsigned: true)
!266 = !DIEnumerator(name: "CacheWarning", value: 345, isUnsigned: true)
!267 = !DIEnumerator(name: "CoderWarning", value: 350, isUnsigned: true)
!268 = !DIEnumerator(name: "FilterWarning", value: 352, isUnsigned: true)
!269 = !DIEnumerator(name: "ModuleWarning", value: 355, isUnsigned: true)
!270 = !DIEnumerator(name: "DrawWarning", value: 360, isUnsigned: true)
!271 = !DIEnumerator(name: "ImageWarning", value: 365, isUnsigned: true)
!272 = !DIEnumerator(name: "WandWarning", value: 370, isUnsigned: true)
!273 = !DIEnumerator(name: "RandomWarning", value: 375, isUnsigned: true)
!274 = !DIEnumerator(name: "XServerWarning", value: 380, isUnsigned: true)
!275 = !DIEnumerator(name: "MonitorWarning", value: 385, isUnsigned: true)
!276 = !DIEnumerator(name: "RegistryWarning", value: 390, isUnsigned: true)
!277 = !DIEnumerator(name: "ConfigureWarning", value: 395, isUnsigned: true)
!278 = !DIEnumerator(name: "PolicyWarning", value: 399, isUnsigned: true)
!279 = !DIEnumerator(name: "ErrorException", value: 400, isUnsigned: true)
!280 = !DIEnumerator(name: "ResourceLimitError", value: 400, isUnsigned: true)
!281 = !DIEnumerator(name: "TypeError", value: 405, isUnsigned: true)
!282 = !DIEnumerator(name: "OptionError", value: 410, isUnsigned: true)
!283 = !DIEnumerator(name: "DelegateError", value: 415, isUnsigned: true)
!284 = !DIEnumerator(name: "MissingDelegateError", value: 420, isUnsigned: true)
!285 = !DIEnumerator(name: "CorruptImageError", value: 425, isUnsigned: true)
!286 = !DIEnumerator(name: "FileOpenError", value: 430, isUnsigned: true)
!287 = !DIEnumerator(name: "BlobError", value: 435, isUnsigned: true)
!288 = !DIEnumerator(name: "StreamError", value: 440, isUnsigned: true)
!289 = !DIEnumerator(name: "CacheError", value: 445, isUnsigned: true)
!290 = !DIEnumerator(name: "CoderError", value: 450, isUnsigned: true)
!291 = !DIEnumerator(name: "FilterError", value: 452, isUnsigned: true)
!292 = !DIEnumerator(name: "ModuleError", value: 455, isUnsigned: true)
!293 = !DIEnumerator(name: "DrawError", value: 460, isUnsigned: true)
!294 = !DIEnumerator(name: "ImageError", value: 465, isUnsigned: true)
!295 = !DIEnumerator(name: "WandError", value: 470, isUnsigned: true)
!296 = !DIEnumerator(name: "RandomError", value: 475, isUnsigned: true)
!297 = !DIEnumerator(name: "XServerError", value: 480, isUnsigned: true)
!298 = !DIEnumerator(name: "MonitorError", value: 485, isUnsigned: true)
!299 = !DIEnumerator(name: "RegistryError", value: 490, isUnsigned: true)
!300 = !DIEnumerator(name: "ConfigureError", value: 495, isUnsigned: true)
!301 = !DIEnumerator(name: "PolicyError", value: 499, isUnsigned: true)
!302 = !DIEnumerator(name: "FatalErrorException", value: 700, isUnsigned: true)
!303 = !DIEnumerator(name: "ResourceLimitFatalError", value: 700, isUnsigned: true)
!304 = !DIEnumerator(name: "TypeFatalError", value: 705, isUnsigned: true)
!305 = !DIEnumerator(name: "OptionFatalError", value: 710, isUnsigned: true)
!306 = !DIEnumerator(name: "DelegateFatalError", value: 715, isUnsigned: true)
!307 = !DIEnumerator(name: "MissingDelegateFatalError", value: 720, isUnsigned: true)
!308 = !DIEnumerator(name: "CorruptImageFatalError", value: 725, isUnsigned: true)
!309 = !DIEnumerator(name: "FileOpenFatalError", value: 730, isUnsigned: true)
!310 = !DIEnumerator(name: "BlobFatalError", value: 735, isUnsigned: true)
!311 = !DIEnumerator(name: "StreamFatalError", value: 740, isUnsigned: true)
!312 = !DIEnumerator(name: "CacheFatalError", value: 745, isUnsigned: true)
!313 = !DIEnumerator(name: "CoderFatalError", value: 750, isUnsigned: true)
!314 = !DIEnumerator(name: "FilterFatalError", value: 752, isUnsigned: true)
!315 = !DIEnumerator(name: "ModuleFatalError", value: 755, isUnsigned: true)
!316 = !DIEnumerator(name: "DrawFatalError", value: 760, isUnsigned: true)
!317 = !DIEnumerator(name: "ImageFatalError", value: 765, isUnsigned: true)
!318 = !DIEnumerator(name: "WandFatalError", value: 770, isUnsigned: true)
!319 = !DIEnumerator(name: "RandomFatalError", value: 775, isUnsigned: true)
!320 = !DIEnumerator(name: "XServerFatalError", value: 780, isUnsigned: true)
!321 = !DIEnumerator(name: "MonitorFatalError", value: 785, isUnsigned: true)
!322 = !DIEnumerator(name: "RegistryFatalError", value: 790, isUnsigned: true)
!323 = !DIEnumerator(name: "ConfigureFatalError", value: 795, isUnsigned: true)
!324 = !DIEnumerator(name: "PolicyFatalError", value: 799, isUnsigned: true)
!325 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !326, line: 31, baseType: !5, size: 32, elements: !327)
!326 = !DIFile(filename: "./magick/pixel.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!327 = !{!328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341}
!328 = !DIEnumerator(name: "UndefinedInterpolatePixel", value: 0, isUnsigned: true)
!329 = !DIEnumerator(name: "AverageInterpolatePixel", value: 1, isUnsigned: true)
!330 = !DIEnumerator(name: "BicubicInterpolatePixel", value: 2, isUnsigned: true)
!331 = !DIEnumerator(name: "BilinearInterpolatePixel", value: 3, isUnsigned: true)
!332 = !DIEnumerator(name: "FilterInterpolatePixel", value: 4, isUnsigned: true)
!333 = !DIEnumerator(name: "IntegerInterpolatePixel", value: 5, isUnsigned: true)
!334 = !DIEnumerator(name: "MeshInterpolatePixel", value: 6, isUnsigned: true)
!335 = !DIEnumerator(name: "NearestNeighborInterpolatePixel", value: 7, isUnsigned: true)
!336 = !DIEnumerator(name: "SplineInterpolatePixel", value: 8, isUnsigned: true)
!337 = !DIEnumerator(name: "Average9InterpolatePixel", value: 9, isUnsigned: true)
!338 = !DIEnumerator(name: "Average16InterpolatePixel", value: 10, isUnsigned: true)
!339 = !DIEnumerator(name: "BlendInterpolatePixel", value: 11, isUnsigned: true)
!340 = !DIEnumerator(name: "BackgroundInterpolatePixel", value: 12, isUnsigned: true)
!341 = !DIEnumerator(name: "CatromInterpolatePixel", value: 13, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !77, line: 47, baseType: !5, size: 32, elements: !343)
!343 = !{!344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355}
!344 = !DIEnumerator(name: "UndefinedType", value: 0, isUnsigned: true)
!345 = !DIEnumerator(name: "BilevelType", value: 1, isUnsigned: true)
!346 = !DIEnumerator(name: "GrayscaleType", value: 2, isUnsigned: true)
!347 = !DIEnumerator(name: "GrayscaleMatteType", value: 3, isUnsigned: true)
!348 = !DIEnumerator(name: "PaletteType", value: 4, isUnsigned: true)
!349 = !DIEnumerator(name: "PaletteMatteType", value: 5, isUnsigned: true)
!350 = !DIEnumerator(name: "TrueColorType", value: 6, isUnsigned: true)
!351 = !DIEnumerator(name: "TrueColorMatteType", value: 7, isUnsigned: true)
!352 = !DIEnumerator(name: "ColorSeparationType", value: 8, isUnsigned: true)
!353 = !DIEnumerator(name: "ColorSeparationMatteType", value: 9, isUnsigned: true)
!354 = !DIEnumerator(name: "OptimizeType", value: 10, isUnsigned: true)
!355 = !DIEnumerator(name: "PaletteBilevelMatteType", value: 11, isUnsigned: true)
!356 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !326, line: 67, baseType: !5, size: 32, elements: !357)
!357 = !{!358, !359, !360, !361, !362, !363, !364, !365, !366, !367}
!358 = !DIEnumerator(name: "UndefinedPixelIntensityMethod", value: 0, isUnsigned: true)
!359 = !DIEnumerator(name: "AveragePixelIntensityMethod", value: 1, isUnsigned: true)
!360 = !DIEnumerator(name: "BrightnessPixelIntensityMethod", value: 2, isUnsigned: true)
!361 = !DIEnumerator(name: "LightnessPixelIntensityMethod", value: 3, isUnsigned: true)
!362 = !DIEnumerator(name: "Rec601LumaPixelIntensityMethod", value: 4, isUnsigned: true)
!363 = !DIEnumerator(name: "Rec601LuminancePixelIntensityMethod", value: 5, isUnsigned: true)
!364 = !DIEnumerator(name: "Rec709LumaPixelIntensityMethod", value: 6, isUnsigned: true)
!365 = !DIEnumerator(name: "Rec709LuminancePixelIntensityMethod", value: 7, isUnsigned: true)
!366 = !DIEnumerator(name: "RMSPixelIntensityMethod", value: 8, isUnsigned: true)
!367 = !DIEnumerator(name: "MSPixelIntensityMethod", value: 9, isUnsigned: true)
!368 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 177, baseType: !5, size: 32, elements: !369)
!369 = !{!370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389}
!370 = !DIEnumerator(name: "UndefinedChannel", value: 0, isUnsigned: true)
!371 = !DIEnumerator(name: "RedChannel", value: 1, isUnsigned: true)
!372 = !DIEnumerator(name: "GrayChannel", value: 1, isUnsigned: true)
!373 = !DIEnumerator(name: "CyanChannel", value: 1, isUnsigned: true)
!374 = !DIEnumerator(name: "GreenChannel", value: 2, isUnsigned: true)
!375 = !DIEnumerator(name: "MagentaChannel", value: 2, isUnsigned: true)
!376 = !DIEnumerator(name: "BlueChannel", value: 4, isUnsigned: true)
!377 = !DIEnumerator(name: "YellowChannel", value: 4, isUnsigned: true)
!378 = !DIEnumerator(name: "AlphaChannel", value: 8, isUnsigned: true)
!379 = !DIEnumerator(name: "OpacityChannel", value: 8, isUnsigned: true)
!380 = !DIEnumerator(name: "MatteChannel", value: 8, isUnsigned: true)
!381 = !DIEnumerator(name: "BlackChannel", value: 32, isUnsigned: true)
!382 = !DIEnumerator(name: "IndexChannel", value: 32, isUnsigned: true)
!383 = !DIEnumerator(name: "CompositeChannels", value: 47, isUnsigned: true)
!384 = !DIEnumerator(name: "AllChannels", value: 134217727, isUnsigned: true)
!385 = !DIEnumerator(name: "TrueAlphaChannel", value: 64, isUnsigned: true)
!386 = !DIEnumerator(name: "RGBChannels", value: 128, isUnsigned: true)
!387 = !DIEnumerator(name: "GrayChannels", value: 128, isUnsigned: true)
!388 = !DIEnumerator(name: "SyncChannels", value: 256, isUnsigned: true)
!389 = !DIEnumerator(name: "DefaultChannels", value: 134217719, isUnsigned: true)
!390 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !391, line: 34, baseType: !5, size: 32, elements: !392)
!391 = !DIFile(filename: "./magick/log.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!392 = !{!393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414}
!393 = !DIEnumerator(name: "UndefinedEvents", value: 0, isUnsigned: true)
!394 = !DIEnumerator(name: "NoEvents", value: 0, isUnsigned: true)
!395 = !DIEnumerator(name: "TraceEvent", value: 1, isUnsigned: true)
!396 = !DIEnumerator(name: "AnnotateEvent", value: 2, isUnsigned: true)
!397 = !DIEnumerator(name: "BlobEvent", value: 4, isUnsigned: true)
!398 = !DIEnumerator(name: "CacheEvent", value: 8, isUnsigned: true)
!399 = !DIEnumerator(name: "CoderEvent", value: 16, isUnsigned: true)
!400 = !DIEnumerator(name: "ConfigureEvent", value: 32, isUnsigned: true)
!401 = !DIEnumerator(name: "DeprecateEvent", value: 64, isUnsigned: true)
!402 = !DIEnumerator(name: "DrawEvent", value: 128, isUnsigned: true)
!403 = !DIEnumerator(name: "ExceptionEvent", value: 256, isUnsigned: true)
!404 = !DIEnumerator(name: "ImageEvent", value: 512, isUnsigned: true)
!405 = !DIEnumerator(name: "LocaleEvent", value: 1024, isUnsigned: true)
!406 = !DIEnumerator(name: "ModuleEvent", value: 2048, isUnsigned: true)
!407 = !DIEnumerator(name: "PolicyEvent", value: 4096, isUnsigned: true)
!408 = !DIEnumerator(name: "ResourceEvent", value: 8192, isUnsigned: true)
!409 = !DIEnumerator(name: "TransformEvent", value: 16384, isUnsigned: true)
!410 = !DIEnumerator(name: "UserEvent", value: 36864, isUnsigned: true)
!411 = !DIEnumerator(name: "WandEvent", value: 65536, isUnsigned: true)
!412 = !DIEnumerator(name: "X11Event", value: 131072, isUnsigned: true)
!413 = !DIEnumerator(name: "AccelerateEvent", value: 262144, isUnsigned: true)
!414 = !DIEnumerator(name: "AllEvents", value: 2147483647, isUnsigned: true)
!415 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !416, line: 104, baseType: !5, size: 32, elements: !417)
!416 = !DIFile(filename: "./magick/statistic.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!417 = !{!418, !419, !420, !421, !422}
!418 = !DIEnumerator(name: "UndefinedFunction", value: 0, isUnsigned: true)
!419 = !DIEnumerator(name: "PolynomialFunction", value: 1, isUnsigned: true)
!420 = !DIEnumerator(name: "SinusoidFunction", value: 2, isUnsigned: true)
!421 = !DIEnumerator(name: "ArcsinFunction", value: 3, isUnsigned: true)
!422 = !DIEnumerator(name: "ArctanFunction", value: 4, isUnsigned: true)
!423 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !77, line: 30, baseType: !5, size: 32, elements: !424)
!424 = !{!425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437}
!425 = !DIEnumerator(name: "UndefinedAlphaChannel", value: 0, isUnsigned: true)
!426 = !DIEnumerator(name: "ActivateAlphaChannel", value: 1, isUnsigned: true)
!427 = !DIEnumerator(name: "BackgroundAlphaChannel", value: 2, isUnsigned: true)
!428 = !DIEnumerator(name: "CopyAlphaChannel", value: 3, isUnsigned: true)
!429 = !DIEnumerator(name: "DeactivateAlphaChannel", value: 4, isUnsigned: true)
!430 = !DIEnumerator(name: "ExtractAlphaChannel", value: 5, isUnsigned: true)
!431 = !DIEnumerator(name: "OpaqueAlphaChannel", value: 6, isUnsigned: true)
!432 = !DIEnumerator(name: "ResetAlphaChannel", value: 7, isUnsigned: true)
!433 = !DIEnumerator(name: "SetAlphaChannel", value: 8, isUnsigned: true)
!434 = !DIEnumerator(name: "ShapeAlphaChannel", value: 9, isUnsigned: true)
!435 = !DIEnumerator(name: "TransparentAlphaChannel", value: 10, isUnsigned: true)
!436 = !DIEnumerator(name: "FlattenAlphaChannel", value: 11, isUnsigned: true)
!437 = !DIEnumerator(name: "RemoveAlphaChannel", value: 12, isUnsigned: true)
!438 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !153, line: 25, baseType: !5, size: 32, elements: !439)
!439 = !{!440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465}
!440 = !DIEnumerator(name: "NoValue", value: 0, isUnsigned: true)
!441 = !DIEnumerator(name: "XValue", value: 1, isUnsigned: true)
!442 = !DIEnumerator(name: "XiValue", value: 1, isUnsigned: true)
!443 = !DIEnumerator(name: "YValue", value: 2, isUnsigned: true)
!444 = !DIEnumerator(name: "PsiValue", value: 2, isUnsigned: true)
!445 = !DIEnumerator(name: "WidthValue", value: 4, isUnsigned: true)
!446 = !DIEnumerator(name: "RhoValue", value: 4, isUnsigned: true)
!447 = !DIEnumerator(name: "HeightValue", value: 8, isUnsigned: true)
!448 = !DIEnumerator(name: "SigmaValue", value: 8, isUnsigned: true)
!449 = !DIEnumerator(name: "ChiValue", value: 16, isUnsigned: true)
!450 = !DIEnumerator(name: "XiNegative", value: 32, isUnsigned: true)
!451 = !DIEnumerator(name: "XNegative", value: 32, isUnsigned: true)
!452 = !DIEnumerator(name: "PsiNegative", value: 64, isUnsigned: true)
!453 = !DIEnumerator(name: "YNegative", value: 64, isUnsigned: true)
!454 = !DIEnumerator(name: "ChiNegative", value: 128, isUnsigned: true)
!455 = !DIEnumerator(name: "PercentValue", value: 4096, isUnsigned: true)
!456 = !DIEnumerator(name: "AspectValue", value: 8192, isUnsigned: true)
!457 = !DIEnumerator(name: "NormalizeValue", value: 8192, isUnsigned: true)
!458 = !DIEnumerator(name: "LessValue", value: 16384, isUnsigned: true)
!459 = !DIEnumerator(name: "GreaterValue", value: 32768, isUnsigned: true)
!460 = !DIEnumerator(name: "MinimumValue", value: 65536, isUnsigned: true)
!461 = !DIEnumerator(name: "CorrelateNormalizeValue", value: 65536, isUnsigned: true)
!462 = !DIEnumerator(name: "AreaValue", value: 131072, isUnsigned: true)
!463 = !DIEnumerator(name: "DecimalValue", value: 262144, isUnsigned: true)
!464 = !DIEnumerator(name: "SeparatorValue", value: 524288, isUnsigned: true)
!465 = !DIEnumerator(name: "AllValues", value: 2147483647, isUnsigned: true)
!466 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !467, line: 25, baseType: !468, size: 32, elements: !469)
!467 = !DIFile(filename: "./magick/option.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!468 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!469 = !{!470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541}
!470 = !DIEnumerator(name: "MagickUndefinedOptions", value: -1)
!471 = !DIEnumerator(name: "MagickAlignOptions", value: 0)
!472 = !DIEnumerator(name: "MagickAlphaOptions", value: 1)
!473 = !DIEnumerator(name: "MagickBooleanOptions", value: 2)
!474 = !DIEnumerator(name: "MagickCacheOptions", value: 3)
!475 = !DIEnumerator(name: "MagickChannelOptions", value: 4)
!476 = !DIEnumerator(name: "MagickClassOptions", value: 5)
!477 = !DIEnumerator(name: "MagickClipPathOptions", value: 6)
!478 = !DIEnumerator(name: "MagickCoderOptions", value: 7)
!479 = !DIEnumerator(name: "MagickColorOptions", value: 8)
!480 = !DIEnumerator(name: "MagickColorspaceOptions", value: 9)
!481 = !DIEnumerator(name: "MagickCommandOptions", value: 10)
!482 = !DIEnumerator(name: "MagickComposeOptions", value: 11)
!483 = !DIEnumerator(name: "MagickCompressOptions", value: 12)
!484 = !DIEnumerator(name: "MagickConfigureOptions", value: 13)
!485 = !DIEnumerator(name: "MagickDataTypeOptions", value: 14)
!486 = !DIEnumerator(name: "MagickDebugOptions", value: 15)
!487 = !DIEnumerator(name: "MagickDecorateOptions", value: 16)
!488 = !DIEnumerator(name: "MagickDelegateOptions", value: 17)
!489 = !DIEnumerator(name: "MagickDirectionOptions", value: 18)
!490 = !DIEnumerator(name: "MagickDisposeOptions", value: 19)
!491 = !DIEnumerator(name: "MagickDistortOptions", value: 20)
!492 = !DIEnumerator(name: "MagickDitherOptions", value: 21)
!493 = !DIEnumerator(name: "MagickEndianOptions", value: 22)
!494 = !DIEnumerator(name: "MagickEvaluateOptions", value: 23)
!495 = !DIEnumerator(name: "MagickFillRuleOptions", value: 24)
!496 = !DIEnumerator(name: "MagickFilterOptions", value: 25)
!497 = !DIEnumerator(name: "MagickFontOptions", value: 26)
!498 = !DIEnumerator(name: "MagickFontsOptions", value: 27)
!499 = !DIEnumerator(name: "MagickFormatOptions", value: 28)
!500 = !DIEnumerator(name: "MagickFunctionOptions", value: 29)
!501 = !DIEnumerator(name: "MagickGravityOptions", value: 30)
!502 = !DIEnumerator(name: "MagickIntentOptions", value: 31)
!503 = !DIEnumerator(name: "MagickInterlaceOptions", value: 32)
!504 = !DIEnumerator(name: "MagickInterpolateOptions", value: 33)
!505 = !DIEnumerator(name: "MagickKernelOptions", value: 34)
!506 = !DIEnumerator(name: "MagickLayerOptions", value: 35)
!507 = !DIEnumerator(name: "MagickLineCapOptions", value: 36)
!508 = !DIEnumerator(name: "MagickLineJoinOptions", value: 37)
!509 = !DIEnumerator(name: "MagickListOptions", value: 38)
!510 = !DIEnumerator(name: "MagickLocaleOptions", value: 39)
!511 = !DIEnumerator(name: "MagickLogEventOptions", value: 40)
!512 = !DIEnumerator(name: "MagickLogOptions", value: 41)
!513 = !DIEnumerator(name: "MagickMagicOptions", value: 42)
!514 = !DIEnumerator(name: "MagickMethodOptions", value: 43)
!515 = !DIEnumerator(name: "MagickMetricOptions", value: 44)
!516 = !DIEnumerator(name: "MagickMimeOptions", value: 45)
!517 = !DIEnumerator(name: "MagickModeOptions", value: 46)
!518 = !DIEnumerator(name: "MagickModuleOptions", value: 47)
!519 = !DIEnumerator(name: "MagickMorphologyOptions", value: 48)
!520 = !DIEnumerator(name: "MagickNoiseOptions", value: 49)
!521 = !DIEnumerator(name: "MagickOrientationOptions", value: 50)
!522 = !DIEnumerator(name: "MagickPixelIntensityOptions", value: 51)
!523 = !DIEnumerator(name: "MagickPolicyOptions", value: 52)
!524 = !DIEnumerator(name: "MagickPolicyDomainOptions", value: 53)
!525 = !DIEnumerator(name: "MagickPolicyRightsOptions", value: 54)
!526 = !DIEnumerator(name: "MagickPreviewOptions", value: 55)
!527 = !DIEnumerator(name: "MagickPrimitiveOptions", value: 56)
!528 = !DIEnumerator(name: "MagickQuantumFormatOptions", value: 57)
!529 = !DIEnumerator(name: "MagickResolutionOptions", value: 58)
!530 = !DIEnumerator(name: "MagickResourceOptions", value: 59)
!531 = !DIEnumerator(name: "MagickSparseColorOptions", value: 60)
!532 = !DIEnumerator(name: "MagickStatisticOptions", value: 61)
!533 = !DIEnumerator(name: "MagickStorageOptions", value: 62)
!534 = !DIEnumerator(name: "MagickStretchOptions", value: 63)
!535 = !DIEnumerator(name: "MagickStyleOptions", value: 64)
!536 = !DIEnumerator(name: "MagickThresholdOptions", value: 65)
!537 = !DIEnumerator(name: "MagickTypeOptions", value: 66)
!538 = !DIEnumerator(name: "MagickValidateOptions", value: 67)
!539 = !DIEnumerator(name: "MagickVirtualPixelOptions", value: 68)
!540 = !DIEnumerator(name: "MagickComplexOptions", value: 69)
!541 = !DIEnumerator(name: "MagickIntensityOptions", value: 70)
!542 = !{!543, !544, !546, !547, !550, !551, !555, !557, !565, !615, !769, !679, !771, !785, !786, !787, !556, !789, !798, !468, !800, !801, !576, !802, !572, !5}
!543 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "Quantum", file: !4, line: 93, baseType: !545)
!545 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!546 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !549)
!549 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "XMLTreeInfo", file: !553, line: 29, baseType: !554)
!553 = !DIFile(filename: "./magick/xml-tree.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!554 = !DICompositeType(tag: DW_TAG_structure_type, name: "_XMLTreeInfo", file: !553, line: 28, flags: DIFlagFwdDecl)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelPacket", file: !326, line: 148, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PixelPacket", file: !326, line: 131, size: 64, elements: !560)
!560 = !{!561, !562, !563, !564}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !559, file: !326, line: 143, baseType: !544, size: 16)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !559, file: !326, line: 144, baseType: !544, size: 16, offset: 16)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !559, file: !326, line: 145, baseType: !544, size: 16, offset: 32)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !559, file: !326, line: 146, baseType: !544, size: 16, offset: 48)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !4, line: 221, baseType: !567)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Image", file: !77, line: 150, size: 105920, elements: !568)
!568 = !{!569, !571, !573, !575, !578, !580, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !606, !608, !609, !611, !612, !613, !614, !620, !621, !622, !630, !631, !632, !633, !634, !635, !637, !639, !641, !643, !645, !647, !649, !650, !651, !652, !653, !654, !655, !663, !678, !690, !691, !692, !693, !697, !701, !705, !706, !707, !708, !709, !726, !727, !729, !730, !740, !741, !743, !744, !745, !746, !747, !748, !750, !751, !752, !753, !754, !755, !756, !758, !759, !760, !761, !762, !766, !768}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !567, file: !77, line: 153, baseType: !570, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClassType", file: !4, line: 209, baseType: !9)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !567, file: !77, line: 156, baseType: !572, size: 32, offset: 32)
!572 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorspaceType", file: !15, line: 61, baseType: !14)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !567, file: !77, line: 159, baseType: !574, size: 32, offset: 64)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompressionType", file: !52, line: 49, baseType: !51)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !567, file: !77, line: 162, baseType: !576, size: 64, offset: 128)
!576 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !577, line: 46, baseType: !546)
!577 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!578 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !567, file: !77, line: 165, baseType: !579, size: 32, offset: 192)
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "OrientationType", file: !77, line: 86, baseType: !76)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "taint", scope: !567, file: !77, line: 168, baseType: !581, size: 32, offset: 224)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickBooleanType", file: !4, line: 215, baseType: !3)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !567, file: !77, line: 169, baseType: !581, size: 32, offset: 256)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "columns", scope: !567, file: !77, line: 172, baseType: !576, size: 64, offset: 320)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "rows", scope: !567, file: !77, line: 173, baseType: !576, size: 64, offset: 384)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !567, file: !77, line: 174, baseType: !576, size: 64, offset: 448)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !567, file: !77, line: 175, baseType: !576, size: 64, offset: 512)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !567, file: !77, line: 178, baseType: !557, size: 64, offset: 576)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !567, file: !77, line: 179, baseType: !558, size: 64, offset: 640)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !567, file: !77, line: 180, baseType: !558, size: 64, offset: 704)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !567, file: !77, line: 181, baseType: !558, size: 64, offset: 768)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !567, file: !77, line: 184, baseType: !543, size: 64, offset: 832)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "chromaticity", scope: !567, file: !77, line: 187, baseType: !593, size: 768, offset: 896)
!593 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChromaticityInfo", file: !77, line: 128, baseType: !594)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ChromaticityInfo", file: !77, line: 121, size: 768, elements: !595)
!595 = !{!596, !603, !604, !605}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "red_primary", scope: !594, file: !77, line: 124, baseType: !597, size: 192)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "PrimaryInfo", file: !77, line: 101, baseType: !598)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PrimaryInfo", file: !77, line: 95, size: 192, elements: !599)
!599 = !{!600, !601, !602}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !598, file: !77, line: 98, baseType: !543, size: 64)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !598, file: !77, line: 99, baseType: !543, size: 64, offset: 64)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !598, file: !77, line: 100, baseType: !543, size: 64, offset: 128)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "green_primary", scope: !594, file: !77, line: 125, baseType: !597, size: 192, offset: 192)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "blue_primary", scope: !594, file: !77, line: 126, baseType: !597, size: 192, offset: 384)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "white_point", scope: !594, file: !77, line: 127, baseType: !597, size: 192, offset: 576)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "rendering_intent", scope: !567, file: !77, line: 190, baseType: !607, size: 32, offset: 1664)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderingIntent", file: !89, line: 49, baseType: !88)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !567, file: !77, line: 193, baseType: !550, size: 64, offset: 1728)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !567, file: !77, line: 196, baseType: !610, size: 32, offset: 1792)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "ResolutionType", file: !77, line: 93, baseType: !96)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "montage", scope: !567, file: !77, line: 199, baseType: !556, size: 64, offset: 1856)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "directory", scope: !567, file: !77, line: 200, baseType: !556, size: 64, offset: 1920)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !567, file: !77, line: 201, baseType: !556, size: 64, offset: 1984)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !567, file: !77, line: 204, baseType: !615, size: 64, offset: 2048)
!615 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !616, line: 77, baseType: !617)
!616 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !618, line: 193, baseType: !619)
!618 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!619 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !567, file: !77, line: 207, baseType: !543, size: 64, offset: 2112)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !567, file: !77, line: 208, baseType: !543, size: 64, offset: 2176)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !567, file: !77, line: 211, baseType: !623, size: 256, offset: 2240)
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "RectangleInfo", file: !153, line: 130, baseType: !624)
!624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_RectangleInfo", file: !153, line: 121, size: 256, elements: !625)
!625 = !{!626, !627, !628, !629}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !624, file: !153, line: 124, baseType: !576, size: 64)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !624, file: !153, line: 125, baseType: !576, size: 64, offset: 64)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !624, file: !153, line: 128, baseType: !615, size: 64, offset: 128)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !624, file: !153, line: 129, baseType: !615, size: 64, offset: 192)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "extract_info", scope: !567, file: !77, line: 212, baseType: !623, size: 256, offset: 2496)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "tile_info", scope: !567, file: !77, line: 213, baseType: !623, size: 256, offset: 2752)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !567, file: !77, line: 216, baseType: !543, size: 64, offset: 3008)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "blur", scope: !567, file: !77, line: 217, baseType: !543, size: 64, offset: 3072)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !567, file: !77, line: 218, baseType: !543, size: 64, offset: 3136)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !567, file: !77, line: 221, baseType: !636, size: 32, offset: 3200)
!636 = !DIDerivedType(tag: DW_TAG_typedef, name: "FilterTypes", file: !102, line: 66, baseType: !101)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !567, file: !77, line: 224, baseType: !638, size: 32, offset: 3232)
!638 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterlaceType", file: !77, line: 73, baseType: !136)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !567, file: !77, line: 227, baseType: !640, size: 32, offset: 3264)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "EndianType", file: !147, line: 35, baseType: !146)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !567, file: !77, line: 230, baseType: !642, size: 32, offset: 3296)
!642 = !DIDerivedType(tag: DW_TAG_typedef, name: "GravityType", file: !153, line: 91, baseType: !152)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "compose", scope: !567, file: !77, line: 233, baseType: !644, size: 32, offset: 3328)
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompositeOperator", file: !168, line: 99, baseType: !167)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "dispose", scope: !567, file: !77, line: 236, baseType: !646, size: 32, offset: 3360)
!646 = !DIDerivedType(tag: DW_TAG_typedef, name: "DisposeType", file: !239, line: 32, baseType: !238)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "clip_mask", scope: !567, file: !77, line: 239, baseType: !648, size: 64, offset: 3392)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !567, file: !77, line: 242, baseType: !576, size: 64, offset: 3456)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !567, file: !77, line: 243, baseType: !576, size: 64, offset: 3520)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_second", scope: !567, file: !77, line: 246, baseType: !615, size: 64, offset: 3584)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !567, file: !77, line: 249, baseType: !576, size: 64, offset: 3648)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "total_colors", scope: !567, file: !77, line: 250, baseType: !576, size: 64, offset: 3712)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "start_loop", scope: !567, file: !77, line: 253, baseType: !615, size: 64, offset: 3776)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !567, file: !77, line: 256, baseType: !656, size: 192, offset: 3840)
!656 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorInfo", file: !657, line: 68, baseType: !658)
!657 = !DIFile(filename: "./magick/color.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ErrorInfo", file: !657, line: 62, size: 192, elements: !659)
!659 = !{!660, !661, !662}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "mean_error_per_pixel", scope: !658, file: !657, line: 65, baseType: !543, size: 64)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_mean_error", scope: !658, file: !657, line: 66, baseType: !543, size: 64, offset: 64)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_maximum_error", scope: !658, file: !657, line: 67, baseType: !543, size: 64, offset: 128)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !567, file: !77, line: 259, baseType: !664, size: 512, offset: 4032)
!664 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerInfo", file: !247, line: 51, baseType: !665)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_TimerInfo", file: !247, line: 40, size: 512, elements: !666)
!666 = !{!667, !674, !675, !677}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !665, file: !247, line: 43, baseType: !668, size: 192)
!668 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer", file: !247, line: 38, baseType: !669)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Timer", file: !247, line: 32, size: 192, elements: !670)
!670 = !{!671, !672, !673}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !669, file: !247, line: 35, baseType: !543, size: 64)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !669, file: !247, line: 36, baseType: !543, size: 64, offset: 64)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !669, file: !247, line: 37, baseType: !543, size: 64, offset: 128)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "elapsed", scope: !665, file: !247, line: 44, baseType: !668, size: 192, offset: 192)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !665, file: !247, line: 47, baseType: !676, size: 32, offset: 384)
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerState", file: !247, line: 30, baseType: !246)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !665, file: !247, line: 50, baseType: !576, size: 64, offset: 448)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "progress_monitor", scope: !567, file: !77, line: 262, baseType: !679, size: 64, offset: 4544)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickProgressMonitor", file: !680, line: 26, baseType: !681)
!680 = !DIFile(filename: "./magick/monitor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DISubroutineType(types: !683)
!683 = !{!581, !547, !684, !687, !550}
!684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !685)
!685 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickOffsetType", file: !4, line: 150, baseType: !686)
!686 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !688)
!688 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickSizeType", file: !4, line: 151, baseType: !689)
!689 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !567, file: !77, line: 265, baseType: !550, size: 64, offset: 4608)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !567, file: !77, line: 266, baseType: !550, size: 64, offset: 4672)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !567, file: !77, line: 267, baseType: !550, size: 64, offset: 4736)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "ascii85", scope: !567, file: !77, line: 270, baseType: !694, size: 64, offset: 4800)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ascii85Info", file: !52, line: 52, baseType: !696)
!696 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Ascii85Info", file: !52, line: 51, flags: DIFlagFwdDecl)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !567, file: !77, line: 273, baseType: !698, size: 64, offset: 4864)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlobInfo", file: !4, line: 217, baseType: !700)
!700 = !DICompositeType(tag: DW_TAG_structure_type, name: "_BlobInfo", file: !4, line: 217, flags: DIFlagFwdDecl)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !567, file: !77, line: 276, baseType: !702, size: 32768, offset: 4928)
!702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !549, size: 32768, elements: !703)
!703 = !{!704}
!704 = !DISubrange(count: 4096)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "magick_filename", scope: !567, file: !77, line: 277, baseType: !702, size: 32768, offset: 37696)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !567, file: !77, line: 278, baseType: !702, size: 32768, offset: 70464)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "magick_columns", scope: !567, file: !77, line: 281, baseType: !576, size: 64, offset: 103232)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "magick_rows", scope: !567, file: !77, line: 282, baseType: !576, size: 64, offset: 103296)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "exception", scope: !567, file: !77, line: 285, baseType: !710, size: 448, offset: 103360)
!710 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionInfo", file: !4, line: 219, baseType: !711)
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ExceptionInfo", file: !253, line: 102, size: 448, elements: !712)
!712 = !{!713, !715, !716, !717, !718, !719, !720, !725}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "severity", scope: !711, file: !253, line: 105, baseType: !714, size: 32)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionType", file: !253, line: 100, baseType: !252)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "error_number", scope: !711, file: !253, line: 108, baseType: !468, size: 32, offset: 32)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !711, file: !253, line: 111, baseType: !556, size: 64, offset: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !711, file: !253, line: 112, baseType: !556, size: 64, offset: 128)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "exceptions", scope: !711, file: !253, line: 115, baseType: !550, size: 64, offset: 192)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "relinquish", scope: !711, file: !253, line: 118, baseType: !581, size: 32, offset: 256)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !711, file: !253, line: 121, baseType: !721, size: 64, offset: 320)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = !DIDerivedType(tag: DW_TAG_typedef, name: "SemaphoreInfo", file: !723, line: 26, baseType: !724)
!723 = !DIFile(filename: "./magick/semaphore.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!724 = !DICompositeType(tag: DW_TAG_structure_type, name: "SemaphoreInfo", file: !723, line: 25, flags: DIFlagFwdDecl)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !711, file: !253, line: 124, baseType: !576, size: 64, offset: 384)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !567, file: !77, line: 288, baseType: !581, size: 32, offset: 103808)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "reference_count", scope: !567, file: !77, line: 291, baseType: !728, size: 64, offset: 103872)
!728 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !615)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !567, file: !77, line: 294, baseType: !721, size: 64, offset: 103936)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "color_profile", scope: !567, file: !77, line: 297, baseType: !731, size: 256, offset: 104000)
!731 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProfileInfo", file: !89, line: 40, baseType: !732)
!732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ProfileInfo", file: !89, line: 27, size: 256, elements: !733)
!733 = !{!734, !735, !736, !739}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !732, file: !89, line: 30, baseType: !556, size: 64)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !732, file: !89, line: 33, baseType: !576, size: 64, offset: 64)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !732, file: !89, line: 36, baseType: !737, size: 64, offset: 128)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !732, file: !89, line: 39, baseType: !576, size: 64, offset: 192)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "iptc_profile", scope: !567, file: !77, line: 298, baseType: !731, size: 256, offset: 104256)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profile", scope: !567, file: !77, line: 299, baseType: !742, size: 64, offset: 104512)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profiles", scope: !567, file: !77, line: 302, baseType: !576, size: 64, offset: 104576)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !567, file: !77, line: 305, baseType: !576, size: 64, offset: 104640)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !567, file: !77, line: 308, baseType: !648, size: 64, offset: 104704)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !567, file: !77, line: 309, baseType: !648, size: 64, offset: 104768)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !567, file: !77, line: 310, baseType: !648, size: 64, offset: 104832)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate", scope: !567, file: !77, line: 313, baseType: !749, size: 32, offset: 104896)
!749 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterpolatePixelMethod", file: !326, line: 47, baseType: !325)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "black_point_compensation", scope: !567, file: !77, line: 316, baseType: !581, size: 32, offset: 104928)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_color", scope: !567, file: !77, line: 319, baseType: !558, size: 64, offset: 104960)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !567, file: !77, line: 322, baseType: !648, size: 64, offset: 105024)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "tile_offset", scope: !567, file: !77, line: 325, baseType: !623, size: 256, offset: 105088)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !567, file: !77, line: 328, baseType: !550, size: 64, offset: 105344)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "artifacts", scope: !567, file: !77, line: 329, baseType: !550, size: 64, offset: 105408)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !567, file: !77, line: 332, baseType: !757, size: 32, offset: 105472)
!757 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageType", file: !77, line: 61, baseType: !342)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !567, file: !77, line: 335, baseType: !581, size: 32, offset: 105504)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !567, file: !77, line: 338, baseType: !688, size: 64, offset: 105536)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !567, file: !77, line: 341, baseType: !581, size: 32, offset: 105600)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !567, file: !77, line: 344, baseType: !576, size: 64, offset: 105664)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !567, file: !77, line: 347, baseType: !763, size: 64, offset: 105728)
!763 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !764, line: 7, baseType: !765)
!764 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!765 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !618, line: 160, baseType: !619)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "intensity", scope: !567, file: !77, line: 350, baseType: !767, size: 32, offset: 105792)
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelIntensityMethod", file: !326, line: 79, baseType: !356)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !567, file: !77, line: 353, baseType: !576, size: 64, offset: 105856)
!769 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickRealType", file: !4, line: 78, baseType: !770)
!770 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickPixelPacket", file: !326, line: 127, baseType: !773)
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_MagickPixelPacket", file: !326, line: 104, size: 448, elements: !774)
!774 = !{!775, !776, !777, !778, !779, !780, !781, !782, !783, !784}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !773, file: !326, line: 107, baseType: !570, size: 32)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !773, file: !326, line: 110, baseType: !572, size: 32, offset: 32)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !773, file: !326, line: 113, baseType: !581, size: 32, offset: 64)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !773, file: !326, line: 116, baseType: !543, size: 64, offset: 128)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !773, file: !326, line: 119, baseType: !576, size: 64, offset: 192)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !773, file: !326, line: 122, baseType: !769, size: 32, offset: 256)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !773, file: !326, line: 123, baseType: !769, size: 32, offset: 288)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !773, file: !326, line: 124, baseType: !769, size: 32, offset: 320)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !773, file: !326, line: 125, baseType: !769, size: 32, offset: 352)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !773, file: !326, line: 126, baseType: !769, size: 32, offset: 384)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndexPacket", file: !326, line: 129, baseType: !544)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !786)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantumPixelPacket", file: !326, line: 158, baseType: !791)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_QuantumPixelPacket", file: !326, line: 150, size: 80, elements: !792)
!792 = !{!793, !794, !795, !796, !797}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !791, file: !326, line: 153, baseType: !544, size: 16)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !791, file: !326, line: 154, baseType: !544, size: 16, offset: 16)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !791, file: !326, line: 155, baseType: !544, size: 16, offset: 32)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !791, file: !326, line: 156, baseType: !544, size: 16, offset: 48)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !791, file: !326, line: 157, baseType: !544, size: 16, offset: 64)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !558)
!800 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelType", file: !4, line: 202, baseType: !368)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!803 = !{i32 7, !"Dwarf Version", i32 4}
!804 = !{i32 2, !"Debug Info Version", i32 3}
!805 = !{i32 1, !"wchar_size", i32 4}
!806 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!807 = distinct !DISubprogram(name: "AutoGammaImage", scope: !1, file: !1, line: 115, type: !808, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!808 = !DISubroutineType(types: !809)
!809 = !{!581, !565}
!810 = !{}
!811 = !DILocalVariable(name: "image", arg: 1, scope: !807, file: !1, line: 115, type: !565)
!812 = !DILocation(line: 115, column: 54, scope: !807)
!813 = !DILocation(line: 117, column: 32, scope: !807)
!814 = !DILocation(line: 117, column: 10, scope: !807)
!815 = !DILocation(line: 117, column: 3, scope: !807)
!816 = distinct !DISubprogram(name: "AutoGammaImageChannel", scope: !1, file: !1, line: 120, type: !817, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!817 = !DISubroutineType(types: !818)
!818 = !{!581, !565, !819}
!819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !800)
!820 = !DILocalVariable(name: "image", arg: 1, scope: !816, file: !1, line: 120, type: !565)
!821 = !DILocation(line: 120, column: 61, scope: !816)
!822 = !DILocalVariable(name: "channel", arg: 2, scope: !816, file: !1, line: 121, type: !819)
!823 = !DILocation(line: 121, column: 21, scope: !816)
!824 = !DILocalVariable(name: "gamma", scope: !816, file: !1, line: 124, type: !543)
!825 = !DILocation(line: 124, column: 5, scope: !816)
!826 = !DILocalVariable(name: "mean", scope: !816, file: !1, line: 125, type: !543)
!827 = !DILocation(line: 125, column: 5, scope: !816)
!828 = !DILocalVariable(name: "logmean", scope: !816, file: !1, line: 126, type: !543)
!829 = !DILocation(line: 126, column: 5, scope: !816)
!830 = !DILocalVariable(name: "sans", scope: !816, file: !1, line: 127, type: !543)
!831 = !DILocation(line: 127, column: 5, scope: !816)
!832 = !DILocalVariable(name: "status", scope: !816, file: !1, line: 130, type: !833)
!833 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickStatusType", file: !4, line: 147, baseType: !5)
!834 = !DILocation(line: 130, column: 5, scope: !816)
!835 = !DILocation(line: 132, column: 11, scope: !816)
!836 = !DILocation(line: 132, column: 10, scope: !816)
!837 = !DILocation(line: 133, column: 8, scope: !838)
!838 = distinct !DILexicalBlock(scope: !816, file: !1, line: 133, column: 7)
!839 = !DILocation(line: 133, column: 16, scope: !838)
!840 = !DILocation(line: 133, column: 32, scope: !838)
!841 = !DILocation(line: 133, column: 7, scope: !816)
!842 = !DILocation(line: 138, column: 34, scope: !843)
!843 = distinct !DILexicalBlock(scope: !838, file: !1, line: 134, column: 5)
!844 = !DILocation(line: 138, column: 40, scope: !843)
!845 = !DILocation(line: 138, column: 61, scope: !843)
!846 = !DILocation(line: 138, column: 68, scope: !843)
!847 = !DILocation(line: 138, column: 14, scope: !843)
!848 = !DILocation(line: 139, column: 17, scope: !843)
!849 = !DILocation(line: 139, column: 21, scope: !843)
!850 = !DILocation(line: 139, column: 13, scope: !843)
!851 = !DILocation(line: 139, column: 36, scope: !843)
!852 = !DILocation(line: 139, column: 35, scope: !843)
!853 = !DILocation(line: 139, column: 12, scope: !843)
!854 = !DILocation(line: 140, column: 32, scope: !843)
!855 = !DILocation(line: 140, column: 38, scope: !843)
!856 = !DILocation(line: 140, column: 72, scope: !843)
!857 = !DILocation(line: 140, column: 14, scope: !843)
!858 = !DILocation(line: 140, column: 7, scope: !843)
!859 = !DILocation(line: 145, column: 10, scope: !816)
!860 = !DILocation(line: 146, column: 8, scope: !861)
!861 = distinct !DILexicalBlock(scope: !816, file: !1, line: 146, column: 7)
!862 = !DILocation(line: 146, column: 16, scope: !861)
!863 = !DILocation(line: 146, column: 30, scope: !861)
!864 = !DILocation(line: 146, column: 7, scope: !816)
!865 = !DILocation(line: 148, column: 34, scope: !866)
!866 = distinct !DILexicalBlock(scope: !861, file: !1, line: 147, column: 5)
!867 = !DILocation(line: 149, column: 10, scope: !866)
!868 = !DILocation(line: 149, column: 17, scope: !866)
!869 = !DILocation(line: 148, column: 14, scope: !866)
!870 = !DILocation(line: 150, column: 17, scope: !866)
!871 = !DILocation(line: 150, column: 21, scope: !866)
!872 = !DILocation(line: 150, column: 13, scope: !866)
!873 = !DILocation(line: 150, column: 36, scope: !866)
!874 = !DILocation(line: 150, column: 35, scope: !866)
!875 = !DILocation(line: 150, column: 12, scope: !866)
!876 = !DILocation(line: 151, column: 33, scope: !866)
!877 = !DILocation(line: 152, column: 9, scope: !866)
!878 = !DILocation(line: 151, column: 15, scope: !866)
!879 = !DILocation(line: 151, column: 13, scope: !866)
!880 = !DILocation(line: 153, column: 5, scope: !866)
!881 = !DILocation(line: 154, column: 8, scope: !882)
!882 = distinct !DILexicalBlock(scope: !816, file: !1, line: 154, column: 7)
!883 = !DILocation(line: 154, column: 16, scope: !882)
!884 = !DILocation(line: 154, column: 32, scope: !882)
!885 = !DILocation(line: 154, column: 7, scope: !816)
!886 = !DILocation(line: 156, column: 34, scope: !887)
!887 = distinct !DILexicalBlock(scope: !882, file: !1, line: 155, column: 5)
!888 = !DILocation(line: 157, column: 10, scope: !887)
!889 = !DILocation(line: 157, column: 17, scope: !887)
!890 = !DILocation(line: 156, column: 14, scope: !887)
!891 = !DILocation(line: 158, column: 17, scope: !887)
!892 = !DILocation(line: 158, column: 21, scope: !887)
!893 = !DILocation(line: 158, column: 13, scope: !887)
!894 = !DILocation(line: 158, column: 36, scope: !887)
!895 = !DILocation(line: 158, column: 35, scope: !887)
!896 = !DILocation(line: 158, column: 12, scope: !887)
!897 = !DILocation(line: 159, column: 33, scope: !887)
!898 = !DILocation(line: 160, column: 9, scope: !887)
!899 = !DILocation(line: 159, column: 15, scope: !887)
!900 = !DILocation(line: 159, column: 13, scope: !887)
!901 = !DILocation(line: 161, column: 5, scope: !887)
!902 = !DILocation(line: 162, column: 8, scope: !903)
!903 = distinct !DILexicalBlock(scope: !816, file: !1, line: 162, column: 7)
!904 = !DILocation(line: 162, column: 16, scope: !903)
!905 = !DILocation(line: 162, column: 31, scope: !903)
!906 = !DILocation(line: 162, column: 7, scope: !816)
!907 = !DILocation(line: 164, column: 34, scope: !908)
!908 = distinct !DILexicalBlock(scope: !903, file: !1, line: 163, column: 5)
!909 = !DILocation(line: 165, column: 10, scope: !908)
!910 = !DILocation(line: 165, column: 17, scope: !908)
!911 = !DILocation(line: 164, column: 14, scope: !908)
!912 = !DILocation(line: 166, column: 17, scope: !908)
!913 = !DILocation(line: 166, column: 21, scope: !908)
!914 = !DILocation(line: 166, column: 13, scope: !908)
!915 = !DILocation(line: 166, column: 36, scope: !908)
!916 = !DILocation(line: 166, column: 35, scope: !908)
!917 = !DILocation(line: 166, column: 12, scope: !908)
!918 = !DILocation(line: 167, column: 33, scope: !908)
!919 = !DILocation(line: 168, column: 9, scope: !908)
!920 = !DILocation(line: 167, column: 15, scope: !908)
!921 = !DILocation(line: 167, column: 13, scope: !908)
!922 = !DILocation(line: 169, column: 5, scope: !908)
!923 = !DILocation(line: 170, column: 9, scope: !924)
!924 = distinct !DILexicalBlock(scope: !816, file: !1, line: 170, column: 7)
!925 = !DILocation(line: 170, column: 17, scope: !924)
!926 = !DILocation(line: 170, column: 35, scope: !924)
!927 = !DILocation(line: 170, column: 41, scope: !924)
!928 = !DILocation(line: 171, column: 8, scope: !924)
!929 = !DILocation(line: 171, column: 15, scope: !924)
!930 = !DILocation(line: 171, column: 21, scope: !924)
!931 = !DILocation(line: 170, column: 7, scope: !816)
!932 = !DILocation(line: 173, column: 34, scope: !933)
!933 = distinct !DILexicalBlock(scope: !924, file: !1, line: 172, column: 5)
!934 = !DILocation(line: 174, column: 10, scope: !933)
!935 = !DILocation(line: 174, column: 17, scope: !933)
!936 = !DILocation(line: 173, column: 14, scope: !933)
!937 = !DILocation(line: 175, column: 17, scope: !933)
!938 = !DILocation(line: 175, column: 21, scope: !933)
!939 = !DILocation(line: 175, column: 13, scope: !933)
!940 = !DILocation(line: 175, column: 36, scope: !933)
!941 = !DILocation(line: 175, column: 35, scope: !933)
!942 = !DILocation(line: 175, column: 12, scope: !933)
!943 = !DILocation(line: 176, column: 33, scope: !933)
!944 = !DILocation(line: 177, column: 9, scope: !933)
!945 = !DILocation(line: 176, column: 15, scope: !933)
!946 = !DILocation(line: 176, column: 13, scope: !933)
!947 = !DILocation(line: 178, column: 5, scope: !933)
!948 = !DILocation(line: 179, column: 9, scope: !949)
!949 = distinct !DILexicalBlock(scope: !816, file: !1, line: 179, column: 7)
!950 = !DILocation(line: 179, column: 17, scope: !949)
!951 = !DILocation(line: 179, column: 33, scope: !949)
!952 = !DILocation(line: 179, column: 39, scope: !949)
!953 = !DILocation(line: 180, column: 8, scope: !949)
!954 = !DILocation(line: 180, column: 15, scope: !949)
!955 = !DILocation(line: 180, column: 26, scope: !949)
!956 = !DILocation(line: 179, column: 7, scope: !816)
!957 = !DILocation(line: 182, column: 34, scope: !958)
!958 = distinct !DILexicalBlock(scope: !949, file: !1, line: 181, column: 5)
!959 = !DILocation(line: 183, column: 10, scope: !958)
!960 = !DILocation(line: 183, column: 17, scope: !958)
!961 = !DILocation(line: 182, column: 14, scope: !958)
!962 = !DILocation(line: 184, column: 17, scope: !958)
!963 = !DILocation(line: 184, column: 21, scope: !958)
!964 = !DILocation(line: 184, column: 13, scope: !958)
!965 = !DILocation(line: 184, column: 36, scope: !958)
!966 = !DILocation(line: 184, column: 35, scope: !958)
!967 = !DILocation(line: 184, column: 12, scope: !958)
!968 = !DILocation(line: 185, column: 33, scope: !958)
!969 = !DILocation(line: 186, column: 9, scope: !958)
!970 = !DILocation(line: 185, column: 15, scope: !958)
!971 = !DILocation(line: 185, column: 13, scope: !958)
!972 = !DILocation(line: 187, column: 5, scope: !958)
!973 = !DILocation(line: 188, column: 10, scope: !816)
!974 = !DILocation(line: 188, column: 17, scope: !816)
!975 = !DILocation(line: 188, column: 3, scope: !816)
!976 = !DILocation(line: 189, column: 1, scope: !816)
!977 = distinct !DISubprogram(name: "LevelImageChannel", scope: !1, file: !1, line: 2931, type: !978, scopeLine: 2934, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!978 = !DISubroutineType(types: !979)
!979 = !{!581, !565, !819, !980, !980, !980}
!980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !543)
!981 = !DILocalVariable(name: "image", arg: 1, scope: !977, file: !1, line: 2931, type: !565)
!982 = !DILocation(line: 2931, column: 57, scope: !977)
!983 = !DILocalVariable(name: "channel", arg: 2, scope: !977, file: !1, line: 2932, type: !819)
!984 = !DILocation(line: 2932, column: 21, scope: !977)
!985 = !DILocalVariable(name: "black_point", arg: 3, scope: !977, file: !1, line: 2932, type: !980)
!986 = !DILocation(line: 2932, column: 42, scope: !977)
!987 = !DILocalVariable(name: "white_point", arg: 4, scope: !977, file: !1, line: 2932, type: !980)
!988 = !DILocation(line: 2932, column: 67, scope: !977)
!989 = !DILocalVariable(name: "gamma", arg: 5, scope: !977, file: !1, line: 2933, type: !980)
!990 = !DILocation(line: 2933, column: 16, scope: !977)
!991 = !DILocalVariable(name: "image_view", scope: !977, file: !1, line: 2938, type: !992)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!993 = !DIDerivedType(tag: DW_TAG_typedef, name: "CacheView", file: !994, line: 50, baseType: !995)
!994 = !DIFile(filename: "./magick/cache-view.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!995 = !DICompositeType(tag: DW_TAG_structure_type, name: "_CacheView", file: !326, line: 160, flags: DIFlagFwdDecl)
!996 = !DILocation(line: 2938, column: 6, scope: !977)
!997 = !DILocalVariable(name: "exception", scope: !977, file: !1, line: 2941, type: !998)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!999 = !DILocation(line: 2941, column: 6, scope: !977)
!1000 = !DILocalVariable(name: "status", scope: !977, file: !1, line: 2944, type: !581)
!1001 = !DILocation(line: 2944, column: 5, scope: !977)
!1002 = !DILocalVariable(name: "progress", scope: !977, file: !1, line: 2947, type: !685)
!1003 = !DILocation(line: 2947, column: 5, scope: !977)
!1004 = !DILocalVariable(name: "i", scope: !977, file: !1, line: 2950, type: !615)
!1005 = !DILocation(line: 2950, column: 5, scope: !977)
!1006 = !DILocalVariable(name: "y", scope: !977, file: !1, line: 2953, type: !615)
!1007 = !DILocation(line: 2953, column: 5, scope: !977)
!1008 = !DILocation(line: 2960, column: 7, scope: !1009)
!1009 = distinct !DILexicalBlock(scope: !977, file: !1, line: 2960, column: 7)
!1010 = !DILocation(line: 2960, column: 14, scope: !1009)
!1011 = !DILocation(line: 2960, column: 20, scope: !1009)
!1012 = !DILocation(line: 2960, column: 7, scope: !977)
!1013 = !DILocation(line: 2961, column: 61, scope: !1009)
!1014 = !DILocation(line: 2961, column: 68, scope: !1009)
!1015 = !DILocation(line: 2961, column: 12, scope: !1009)
!1016 = !DILocation(line: 2961, column: 5, scope: !1009)
!1017 = !DILocation(line: 2962, column: 7, scope: !1018)
!1018 = distinct !DILexicalBlock(scope: !977, file: !1, line: 2962, column: 7)
!1019 = !DILocation(line: 2962, column: 14, scope: !1018)
!1020 = !DILocation(line: 2962, column: 28, scope: !1018)
!1021 = !DILocation(line: 2962, column: 7, scope: !977)
!1022 = !DILocation(line: 2963, column: 11, scope: !1023)
!1023 = distinct !DILexicalBlock(scope: !1018, file: !1, line: 2963, column: 5)
!1024 = !DILocation(line: 2963, column: 10, scope: !1023)
!1025 = !DILocation(line: 2963, column: 15, scope: !1026)
!1026 = distinct !DILexicalBlock(scope: !1023, file: !1, line: 2963, column: 5)
!1027 = !DILocation(line: 2963, column: 29, scope: !1026)
!1028 = !DILocation(line: 2963, column: 36, scope: !1026)
!1029 = !DILocation(line: 2963, column: 17, scope: !1026)
!1030 = !DILocation(line: 2963, column: 5, scope: !1023)
!1031 = !DILocation(line: 2968, column: 12, scope: !1032)
!1032 = distinct !DILexicalBlock(scope: !1033, file: !1, line: 2968, column: 11)
!1033 = distinct !DILexicalBlock(scope: !1026, file: !1, line: 2964, column: 5)
!1034 = !DILocation(line: 2968, column: 20, scope: !1032)
!1035 = !DILocation(line: 2968, column: 34, scope: !1032)
!1036 = !DILocation(line: 2968, column: 11, scope: !1033)
!1037 = !DILocation(line: 2969, column: 68, scope: !1032)
!1038 = !DILocation(line: 2970, column: 11, scope: !1032)
!1039 = !DILocation(line: 2970, column: 23, scope: !1032)
!1040 = !DILocation(line: 2970, column: 46, scope: !1032)
!1041 = !DILocation(line: 2970, column: 53, scope: !1032)
!1042 = !DILocation(line: 2970, column: 62, scope: !1032)
!1043 = !DILocation(line: 2970, column: 65, scope: !1032)
!1044 = !DILocation(line: 2970, column: 29, scope: !1032)
!1045 = !DILocation(line: 2969, column: 57, scope: !1032)
!1046 = !DILocation(line: 2969, column: 42, scope: !1032)
!1047 = !DILocation(line: 2969, column: 9, scope: !1032)
!1048 = !DILocation(line: 2969, column: 16, scope: !1032)
!1049 = !DILocation(line: 2969, column: 25, scope: !1032)
!1050 = !DILocation(line: 2969, column: 28, scope: !1032)
!1051 = !DILocation(line: 2969, column: 31, scope: !1032)
!1052 = !DILocation(line: 2971, column: 12, scope: !1053)
!1053 = distinct !DILexicalBlock(scope: !1033, file: !1, line: 2971, column: 11)
!1054 = !DILocation(line: 2971, column: 20, scope: !1053)
!1055 = !DILocation(line: 2971, column: 36, scope: !1053)
!1056 = !DILocation(line: 2971, column: 11, scope: !1033)
!1057 = !DILocation(line: 2973, column: 11, scope: !1053)
!1058 = !DILocation(line: 2973, column: 23, scope: !1053)
!1059 = !DILocation(line: 2973, column: 35, scope: !1053)
!1060 = !DILocation(line: 2974, column: 11, scope: !1053)
!1061 = !DILocation(line: 2974, column: 18, scope: !1053)
!1062 = !DILocation(line: 2974, column: 27, scope: !1053)
!1063 = !DILocation(line: 2974, column: 30, scope: !1053)
!1064 = !DILocation(line: 2973, column: 41, scope: !1053)
!1065 = !DILocation(line: 2972, column: 59, scope: !1053)
!1066 = !DILocation(line: 2972, column: 44, scope: !1053)
!1067 = !DILocation(line: 2972, column: 9, scope: !1053)
!1068 = !DILocation(line: 2972, column: 16, scope: !1053)
!1069 = !DILocation(line: 2972, column: 25, scope: !1053)
!1070 = !DILocation(line: 2972, column: 28, scope: !1053)
!1071 = !DILocation(line: 2972, column: 33, scope: !1053)
!1072 = !DILocation(line: 2975, column: 12, scope: !1073)
!1073 = distinct !DILexicalBlock(scope: !1033, file: !1, line: 2975, column: 11)
!1074 = !DILocation(line: 2975, column: 20, scope: !1073)
!1075 = !DILocation(line: 2975, column: 35, scope: !1073)
!1076 = !DILocation(line: 2975, column: 11, scope: !1033)
!1077 = !DILocation(line: 2976, column: 69, scope: !1073)
!1078 = !DILocation(line: 2977, column: 11, scope: !1073)
!1079 = !DILocation(line: 2977, column: 23, scope: !1073)
!1080 = !DILocation(line: 2977, column: 46, scope: !1073)
!1081 = !DILocation(line: 2977, column: 53, scope: !1073)
!1082 = !DILocation(line: 2977, column: 62, scope: !1073)
!1083 = !DILocation(line: 2977, column: 65, scope: !1073)
!1084 = !DILocation(line: 2977, column: 29, scope: !1073)
!1085 = !DILocation(line: 2976, column: 58, scope: !1073)
!1086 = !DILocation(line: 2976, column: 43, scope: !1073)
!1087 = !DILocation(line: 2976, column: 9, scope: !1073)
!1088 = !DILocation(line: 2976, column: 16, scope: !1073)
!1089 = !DILocation(line: 2976, column: 25, scope: !1073)
!1090 = !DILocation(line: 2976, column: 28, scope: !1073)
!1091 = !DILocation(line: 2976, column: 32, scope: !1073)
!1092 = !DILocation(line: 2978, column: 12, scope: !1093)
!1093 = distinct !DILexicalBlock(scope: !1033, file: !1, line: 2978, column: 11)
!1094 = !DILocation(line: 2978, column: 20, scope: !1093)
!1095 = !DILocation(line: 2978, column: 38, scope: !1093)
!1096 = !DILocation(line: 2978, column: 11, scope: !1033)
!1097 = !DILocation(line: 2980, column: 37, scope: !1093)
!1098 = !DILocation(line: 2980, column: 49, scope: !1093)
!1099 = !DILocation(line: 2980, column: 61, scope: !1093)
!1100 = !DILocation(line: 2981, column: 42, scope: !1093)
!1101 = !DILocation(line: 2981, column: 49, scope: !1093)
!1102 = !DILocation(line: 2981, column: 58, scope: !1093)
!1103 = !DILocation(line: 2981, column: 61, scope: !1093)
!1104 = !DILocation(line: 2981, column: 41, scope: !1093)
!1105 = !DILocation(line: 2981, column: 11, scope: !1093)
!1106 = !DILocation(line: 2980, column: 26, scope: !1093)
!1107 = !DILocation(line: 2980, column: 11, scope: !1093)
!1108 = !DILocation(line: 2979, column: 60, scope: !1093)
!1109 = !DILocation(line: 2979, column: 59, scope: !1093)
!1110 = !DILocation(line: 2979, column: 36, scope: !1093)
!1111 = !DILocation(line: 2979, column: 9, scope: !1093)
!1112 = !DILocation(line: 2979, column: 16, scope: !1093)
!1113 = !DILocation(line: 2979, column: 25, scope: !1093)
!1114 = !DILocation(line: 2979, column: 28, scope: !1093)
!1115 = !DILocation(line: 2979, column: 35, scope: !1093)
!1116 = !DILocation(line: 2982, column: 5, scope: !1033)
!1117 = !DILocation(line: 2963, column: 45, scope: !1026)
!1118 = !DILocation(line: 2963, column: 5, scope: !1026)
!1119 = distinct !{!1119, !1030, !1120}
!1120 = !DILocation(line: 2982, column: 5, scope: !1023)
!1121 = !DILocation(line: 2986, column: 9, scope: !977)
!1122 = !DILocation(line: 2987, column: 11, scope: !977)
!1123 = !DILocation(line: 2988, column: 15, scope: !977)
!1124 = !DILocation(line: 2988, column: 22, scope: !977)
!1125 = !DILocation(line: 2988, column: 12, scope: !977)
!1126 = !DILocation(line: 2989, column: 40, scope: !977)
!1127 = !DILocation(line: 2989, column: 46, scope: !977)
!1128 = !DILocation(line: 2989, column: 14, scope: !977)
!1129 = !DILocation(line: 2989, column: 13, scope: !977)
!1130 = !DILocation(line: 2994, column: 9, scope: !1131)
!1131 = distinct !DILexicalBlock(scope: !977, file: !1, line: 2994, column: 3)
!1132 = !DILocation(line: 2994, column: 8, scope: !1131)
!1133 = !DILocation(line: 2994, column: 13, scope: !1134)
!1134 = distinct !DILexicalBlock(scope: !1131, file: !1, line: 2994, column: 3)
!1135 = !DILocation(line: 2994, column: 27, scope: !1134)
!1136 = !DILocation(line: 2994, column: 34, scope: !1134)
!1137 = !DILocation(line: 2994, column: 15, scope: !1134)
!1138 = !DILocation(line: 2994, column: 3, scope: !1131)
!1139 = !DILocalVariable(name: "indexes", scope: !1140, file: !1, line: 2997, type: !1141)
!1140 = distinct !DILexicalBlock(scope: !1134, file: !1, line: 2995, column: 3)
!1141 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !785)
!1142 = !DILocation(line: 2997, column: 17, scope: !1140)
!1143 = !DILocalVariable(name: "q", scope: !1140, file: !1, line: 3000, type: !1144)
!1144 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !557)
!1145 = !DILocation(line: 3000, column: 17, scope: !1140)
!1146 = !DILocalVariable(name: "x", scope: !1140, file: !1, line: 3003, type: !615)
!1147 = !DILocation(line: 3003, column: 7, scope: !1140)
!1148 = !DILocation(line: 3005, column: 9, scope: !1149)
!1149 = distinct !DILexicalBlock(scope: !1140, file: !1, line: 3005, column: 9)
!1150 = !DILocation(line: 3005, column: 16, scope: !1149)
!1151 = !DILocation(line: 3005, column: 9, scope: !1140)
!1152 = !DILocation(line: 3006, column: 7, scope: !1149)
!1153 = !DILocation(line: 3007, column: 35, scope: !1140)
!1154 = !DILocation(line: 3007, column: 48, scope: !1140)
!1155 = !DILocation(line: 3007, column: 50, scope: !1140)
!1156 = !DILocation(line: 3007, column: 57, scope: !1140)
!1157 = !DILocation(line: 3007, column: 67, scope: !1140)
!1158 = !DILocation(line: 3007, column: 7, scope: !1140)
!1159 = !DILocation(line: 3007, column: 6, scope: !1140)
!1160 = !DILocation(line: 3008, column: 9, scope: !1161)
!1161 = distinct !DILexicalBlock(scope: !1140, file: !1, line: 3008, column: 9)
!1162 = !DILocation(line: 3008, column: 11, scope: !1161)
!1163 = !DILocation(line: 3008, column: 9, scope: !1140)
!1164 = !DILocation(line: 3010, column: 15, scope: !1165)
!1165 = distinct !DILexicalBlock(scope: !1161, file: !1, line: 3009, column: 7)
!1166 = !DILocation(line: 3011, column: 9, scope: !1165)
!1167 = !DILocation(line: 3013, column: 45, scope: !1140)
!1168 = !DILocation(line: 3013, column: 13, scope: !1140)
!1169 = !DILocation(line: 3013, column: 12, scope: !1140)
!1170 = !DILocation(line: 3014, column: 11, scope: !1171)
!1171 = distinct !DILexicalBlock(scope: !1140, file: !1, line: 3014, column: 5)
!1172 = !DILocation(line: 3014, column: 10, scope: !1171)
!1173 = !DILocation(line: 3014, column: 15, scope: !1174)
!1174 = distinct !DILexicalBlock(scope: !1171, file: !1, line: 3014, column: 5)
!1175 = !DILocation(line: 3014, column: 29, scope: !1174)
!1176 = !DILocation(line: 3014, column: 36, scope: !1174)
!1177 = !DILocation(line: 3014, column: 17, scope: !1174)
!1178 = !DILocation(line: 3014, column: 5, scope: !1171)
!1179 = !DILocation(line: 3016, column: 12, scope: !1180)
!1180 = distinct !DILexicalBlock(scope: !1181, file: !1, line: 3016, column: 11)
!1181 = distinct !DILexicalBlock(scope: !1174, file: !1, line: 3015, column: 5)
!1182 = !DILocation(line: 3016, column: 20, scope: !1180)
!1183 = !DILocation(line: 3016, column: 34, scope: !1180)
!1184 = !DILocation(line: 3016, column: 11, scope: !1181)
!1185 = !DILocation(line: 3017, column: 9, scope: !1180)
!1186 = !DILocation(line: 3019, column: 12, scope: !1187)
!1187 = distinct !DILexicalBlock(scope: !1181, file: !1, line: 3019, column: 11)
!1188 = !DILocation(line: 3019, column: 20, scope: !1187)
!1189 = !DILocation(line: 3019, column: 36, scope: !1187)
!1190 = !DILocation(line: 3019, column: 11, scope: !1181)
!1191 = !DILocation(line: 3020, column: 9, scope: !1187)
!1192 = !DILocation(line: 3022, column: 12, scope: !1193)
!1193 = distinct !DILexicalBlock(scope: !1181, file: !1, line: 3022, column: 11)
!1194 = !DILocation(line: 3022, column: 20, scope: !1193)
!1195 = !DILocation(line: 3022, column: 35, scope: !1193)
!1196 = !DILocation(line: 3022, column: 11, scope: !1181)
!1197 = !DILocation(line: 3023, column: 9, scope: !1193)
!1198 = !DILocation(line: 3025, column: 13, scope: !1199)
!1199 = distinct !DILexicalBlock(scope: !1181, file: !1, line: 3025, column: 11)
!1200 = !DILocation(line: 3025, column: 21, scope: !1199)
!1201 = !DILocation(line: 3025, column: 39, scope: !1199)
!1202 = !DILocation(line: 3025, column: 45, scope: !1199)
!1203 = !DILocation(line: 3026, column: 12, scope: !1199)
!1204 = !DILocation(line: 3026, column: 19, scope: !1199)
!1205 = !DILocation(line: 3026, column: 25, scope: !1199)
!1206 = !DILocation(line: 3025, column: 11, scope: !1181)
!1207 = !DILocation(line: 3027, column: 9, scope: !1199)
!1208 = !DILocation(line: 3029, column: 13, scope: !1209)
!1209 = distinct !DILexicalBlock(scope: !1181, file: !1, line: 3029, column: 11)
!1210 = !DILocation(line: 3029, column: 21, scope: !1209)
!1211 = !DILocation(line: 3029, column: 37, scope: !1209)
!1212 = !DILocation(line: 3029, column: 43, scope: !1209)
!1213 = !DILocation(line: 3030, column: 12, scope: !1209)
!1214 = !DILocation(line: 3030, column: 19, scope: !1209)
!1215 = !DILocation(line: 3030, column: 30, scope: !1209)
!1216 = !DILocation(line: 3029, column: 11, scope: !1181)
!1217 = !DILocation(line: 3031, column: 9, scope: !1218)
!1218 = distinct !DILexicalBlock(scope: !1219, file: !1, line: 3031, column: 9)
!1219 = distinct !DILexicalBlock(scope: !1209, file: !1, line: 3031, column: 9)
!1220 = !DILocation(line: 3031, column: 9, scope: !1219)
!1221 = !DILocation(line: 3033, column: 8, scope: !1181)
!1222 = !DILocation(line: 3034, column: 5, scope: !1181)
!1223 = !DILocation(line: 3014, column: 46, scope: !1174)
!1224 = !DILocation(line: 3014, column: 5, scope: !1174)
!1225 = distinct !{!1225, !1178, !1226}
!1226 = !DILocation(line: 3034, column: 5, scope: !1171)
!1227 = !DILocation(line: 3035, column: 38, scope: !1228)
!1228 = distinct !DILexicalBlock(scope: !1140, file: !1, line: 3035, column: 9)
!1229 = !DILocation(line: 3035, column: 49, scope: !1228)
!1230 = !DILocation(line: 3035, column: 9, scope: !1228)
!1231 = !DILocation(line: 3035, column: 60, scope: !1228)
!1232 = !DILocation(line: 3035, column: 9, scope: !1140)
!1233 = !DILocation(line: 3036, column: 13, scope: !1228)
!1234 = !DILocation(line: 3036, column: 7, scope: !1228)
!1235 = !DILocation(line: 3037, column: 9, scope: !1236)
!1236 = distinct !DILexicalBlock(scope: !1140, file: !1, line: 3037, column: 9)
!1237 = !DILocation(line: 3037, column: 16, scope: !1236)
!1238 = !DILocation(line: 3037, column: 33, scope: !1236)
!1239 = !DILocation(line: 3037, column: 9, scope: !1140)
!1240 = !DILocalVariable(name: "proceed", scope: !1241, file: !1, line: 3040, type: !581)
!1241 = distinct !DILexicalBlock(scope: !1236, file: !1, line: 3038, column: 7)
!1242 = !DILocation(line: 3040, column: 11, scope: !1241)
!1243 = !DILocation(line: 3045, column: 34, scope: !1241)
!1244 = !DILocation(line: 3045, column: 62, scope: !1241)
!1245 = !DILocation(line: 3045, column: 65, scope: !1241)
!1246 = !DILocation(line: 3045, column: 72, scope: !1241)
!1247 = !DILocation(line: 3045, column: 17, scope: !1241)
!1248 = !DILocation(line: 3045, column: 16, scope: !1241)
!1249 = !DILocation(line: 3046, column: 13, scope: !1250)
!1250 = distinct !DILexicalBlock(scope: !1241, file: !1, line: 3046, column: 13)
!1251 = !DILocation(line: 3046, column: 21, scope: !1250)
!1252 = !DILocation(line: 3046, column: 13, scope: !1241)
!1253 = !DILocation(line: 3047, column: 17, scope: !1250)
!1254 = !DILocation(line: 3047, column: 11, scope: !1250)
!1255 = !DILocation(line: 3048, column: 7, scope: !1241)
!1256 = !DILocation(line: 3049, column: 3, scope: !1140)
!1257 = !DILocation(line: 2994, column: 41, scope: !1134)
!1258 = !DILocation(line: 2994, column: 3, scope: !1134)
!1259 = distinct !{!1259, !1138, !1260}
!1260 = !DILocation(line: 3049, column: 3, scope: !1131)
!1261 = !DILocation(line: 3050, column: 31, scope: !977)
!1262 = !DILocation(line: 3050, column: 14, scope: !977)
!1263 = !DILocation(line: 3050, column: 13, scope: !977)
!1264 = !DILocation(line: 3051, column: 21, scope: !977)
!1265 = !DILocation(line: 3051, column: 10, scope: !977)
!1266 = !DILocation(line: 3052, column: 10, scope: !977)
!1267 = !DILocation(line: 3052, column: 3, scope: !977)
!1268 = distinct !DISubprogram(name: "AutoLevelImage", scope: !1, file: !1, line: 221, type: !808, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!1269 = !DILocalVariable(name: "image", arg: 1, scope: !1268, file: !1, line: 221, type: !565)
!1270 = !DILocation(line: 221, column: 54, scope: !1268)
!1271 = !DILocation(line: 223, column: 32, scope: !1268)
!1272 = !DILocation(line: 223, column: 10, scope: !1268)
!1273 = !DILocation(line: 223, column: 3, scope: !1268)
!1274 = distinct !DISubprogram(name: "AutoLevelImageChannel", scope: !1, file: !1, line: 226, type: !817, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!1275 = !DILocalVariable(name: "image", arg: 1, scope: !1274, file: !1, line: 226, type: !565)
!1276 = !DILocation(line: 226, column: 61, scope: !1274)
!1277 = !DILocalVariable(name: "channel", arg: 2, scope: !1274, file: !1, line: 227, type: !819)
!1278 = !DILocation(line: 227, column: 21, scope: !1274)
!1279 = !DILocation(line: 232, column: 29, scope: !1274)
!1280 = !DILocation(line: 232, column: 35, scope: !1274)
!1281 = !DILocation(line: 232, column: 10, scope: !1274)
!1282 = !DILocation(line: 232, column: 3, scope: !1274)
!1283 = distinct !DISubprogram(name: "BrightnessContrastImage", scope: !1, file: !1, line: 270, type: !1284, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{!581, !565, !980, !980}
!1286 = !DILocalVariable(name: "image", arg: 1, scope: !1283, file: !1, line: 270, type: !565)
!1287 = !DILocation(line: 270, column: 63, scope: !1283)
!1288 = !DILocalVariable(name: "brightness", arg: 2, scope: !1283, file: !1, line: 271, type: !980)
!1289 = !DILocation(line: 271, column: 16, scope: !1283)
!1290 = !DILocalVariable(name: "contrast", arg: 3, scope: !1283, file: !1, line: 271, type: !980)
!1291 = !DILocation(line: 271, column: 40, scope: !1283)
!1292 = !DILocalVariable(name: "status", scope: !1283, file: !1, line: 274, type: !581)
!1293 = !DILocation(line: 274, column: 5, scope: !1283)
!1294 = !DILocation(line: 276, column: 41, scope: !1283)
!1295 = !DILocation(line: 276, column: 63, scope: !1283)
!1296 = !DILocation(line: 277, column: 5, scope: !1283)
!1297 = !DILocation(line: 276, column: 10, scope: !1283)
!1298 = !DILocation(line: 276, column: 9, scope: !1283)
!1299 = !DILocation(line: 278, column: 10, scope: !1283)
!1300 = !DILocation(line: 278, column: 3, scope: !1283)
!1301 = distinct !DISubprogram(name: "BrightnessContrastImageChannel", scope: !1, file: !1, line: 281, type: !1302, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{!581, !565, !819, !980, !980}
!1304 = !DILocalVariable(name: "image", arg: 1, scope: !1301, file: !1, line: 281, type: !565)
!1305 = !DILocation(line: 281, column: 70, scope: !1301)
!1306 = !DILocalVariable(name: "channel", arg: 2, scope: !1301, file: !1, line: 282, type: !819)
!1307 = !DILocation(line: 282, column: 21, scope: !1301)
!1308 = !DILocalVariable(name: "brightness", arg: 3, scope: !1301, file: !1, line: 282, type: !980)
!1309 = !DILocation(line: 282, column: 42, scope: !1301)
!1310 = !DILocalVariable(name: "contrast", arg: 4, scope: !1301, file: !1, line: 282, type: !980)
!1311 = !DILocation(line: 282, column: 66, scope: !1301)
!1312 = !DILocalVariable(name: "alpha", scope: !1301, file: !1, line: 287, type: !543)
!1313 = !DILocation(line: 287, column: 5, scope: !1301)
!1314 = !DILocalVariable(name: "intercept", scope: !1301, file: !1, line: 288, type: !543)
!1315 = !DILocation(line: 288, column: 5, scope: !1301)
!1316 = !DILocalVariable(name: "coefficients", scope: !1301, file: !1, line: 289, type: !1317)
!1317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !543, size: 128, elements: !1318)
!1318 = !{!1319}
!1319 = !DISubrange(count: 2)
!1320 = !DILocation(line: 289, column: 5, scope: !1301)
!1321 = !DILocalVariable(name: "slope", scope: !1301, file: !1, line: 290, type: !543)
!1322 = !DILocation(line: 290, column: 5, scope: !1301)
!1323 = !DILocalVariable(name: "status", scope: !1301, file: !1, line: 293, type: !581)
!1324 = !DILocation(line: 293, column: 5, scope: !1301)
!1325 = !DILocation(line: 300, column: 7, scope: !1326)
!1326 = distinct !DILexicalBlock(scope: !1301, file: !1, line: 300, column: 7)
!1327 = !DILocation(line: 300, column: 14, scope: !1326)
!1328 = !DILocation(line: 300, column: 20, scope: !1326)
!1329 = !DILocation(line: 300, column: 7, scope: !1301)
!1330 = !DILocation(line: 301, column: 61, scope: !1326)
!1331 = !DILocation(line: 301, column: 68, scope: !1326)
!1332 = !DILocation(line: 301, column: 12, scope: !1326)
!1333 = !DILocation(line: 301, column: 5, scope: !1326)
!1334 = !DILocation(line: 302, column: 9, scope: !1301)
!1335 = !DILocation(line: 302, column: 8, scope: !1301)
!1336 = !DILocation(line: 303, column: 33, scope: !1301)
!1337 = !DILocation(line: 303, column: 38, scope: !1301)
!1338 = !DILocation(line: 303, column: 44, scope: !1301)
!1339 = !DILocation(line: 303, column: 31, scope: !1301)
!1340 = !DILocation(line: 303, column: 49, scope: !1301)
!1341 = !DILocation(line: 303, column: 9, scope: !1301)
!1342 = !DILocation(line: 303, column: 8, scope: !1301)
!1343 = !DILocation(line: 304, column: 7, scope: !1344)
!1344 = distinct !DILexicalBlock(scope: !1301, file: !1, line: 304, column: 7)
!1345 = !DILocation(line: 304, column: 13, scope: !1344)
!1346 = !DILocation(line: 304, column: 7, scope: !1301)
!1347 = !DILocation(line: 305, column: 10, scope: !1344)
!1348 = !DILocation(line: 305, column: 5, scope: !1344)
!1349 = !DILocation(line: 306, column: 13, scope: !1301)
!1350 = !DILocation(line: 306, column: 23, scope: !1301)
!1351 = !DILocation(line: 306, column: 36, scope: !1301)
!1352 = !DILocation(line: 306, column: 35, scope: !1301)
!1353 = !DILocation(line: 306, column: 47, scope: !1301)
!1354 = !DILocation(line: 306, column: 60, scope: !1301)
!1355 = !DILocation(line: 306, column: 59, scope: !1301)
!1356 = !DILocation(line: 306, column: 54, scope: !1301)
!1357 = !DILocation(line: 306, column: 29, scope: !1301)
!1358 = !DILocation(line: 306, column: 12, scope: !1301)
!1359 = !DILocation(line: 307, column: 19, scope: !1301)
!1360 = !DILocation(line: 307, column: 3, scope: !1301)
!1361 = !DILocation(line: 307, column: 18, scope: !1301)
!1362 = !DILocation(line: 308, column: 19, scope: !1301)
!1363 = !DILocation(line: 308, column: 3, scope: !1301)
!1364 = !DILocation(line: 308, column: 18, scope: !1301)
!1365 = !DILocation(line: 309, column: 31, scope: !1301)
!1366 = !DILocation(line: 309, column: 37, scope: !1301)
!1367 = !DILocation(line: 309, column: 66, scope: !1301)
!1368 = !DILocation(line: 310, column: 6, scope: !1301)
!1369 = !DILocation(line: 310, column: 13, scope: !1301)
!1370 = !DILocation(line: 309, column: 10, scope: !1301)
!1371 = !DILocation(line: 309, column: 9, scope: !1301)
!1372 = !DILocation(line: 311, column: 10, scope: !1301)
!1373 = !DILocation(line: 311, column: 3, scope: !1301)
!1374 = distinct !DISubprogram(name: "ColorDecisionListImage", scope: !1, file: !1, line: 357, type: !1375, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!1375 = !DISubroutineType(types: !1376)
!1376 = !{!581, !565, !547}
!1377 = !DILocalVariable(name: "image", arg: 1, scope: !1374, file: !1, line: 357, type: !565)
!1378 = !DILocation(line: 357, column: 62, scope: !1374)
!1379 = !DILocalVariable(name: "color_correction_collection", arg: 2, scope: !1374, file: !1, line: 358, type: !547)
!1380 = !DILocation(line: 358, column: 15, scope: !1374)
!1381 = !DILocalVariable(name: "image_view", scope: !1374, file: !1, line: 382, type: !992)
!1382 = !DILocation(line: 382, column: 6, scope: !1374)
!1383 = !DILocalVariable(name: "token", scope: !1374, file: !1, line: 385, type: !702)
!1384 = !DILocation(line: 385, column: 5, scope: !1374)
!1385 = !DILocalVariable(name: "color_correction", scope: !1374, file: !1, line: 388, type: !1386)
!1386 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorCorrection", scope: !1374, file: !1, line: 379, baseType: !1387)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ColorCorrection", scope: !1374, file: !1, line: 370, size: 640, elements: !1388)
!1388 = !{!1389, !1396, !1397, !1398}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !1387, file: !1, line: 373, baseType: !1390, size: 192)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "Correction", scope: !1374, file: !1, line: 368, baseType: !1391)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Correction", scope: !1374, file: !1, line: 362, size: 192, elements: !1392)
!1392 = !{!1393, !1394, !1395}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "slope", scope: !1391, file: !1, line: 365, baseType: !543, size: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1391, file: !1, line: 366, baseType: !543, size: 64, offset: 64)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !1391, file: !1, line: 367, baseType: !543, size: 64, offset: 128)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !1387, file: !1, line: 374, baseType: !1390, size: 192, offset: 192)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !1387, file: !1, line: 375, baseType: !1390, size: 192, offset: 384)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !1387, file: !1, line: 378, baseType: !543, size: 64, offset: 576)
!1399 = !DILocation(line: 388, column: 5, scope: !1374)
!1400 = !DILocalVariable(name: "content", scope: !1374, file: !1, line: 391, type: !547)
!1401 = !DILocation(line: 391, column: 6, scope: !1374)
!1402 = !DILocalVariable(name: "p", scope: !1374, file: !1, line: 392, type: !547)
!1403 = !DILocation(line: 392, column: 6, scope: !1374)
!1404 = !DILocalVariable(name: "exception", scope: !1374, file: !1, line: 395, type: !998)
!1405 = !DILocation(line: 395, column: 6, scope: !1374)
!1406 = !DILocalVariable(name: "status", scope: !1374, file: !1, line: 398, type: !581)
!1407 = !DILocation(line: 398, column: 5, scope: !1374)
!1408 = !DILocalVariable(name: "progress", scope: !1374, file: !1, line: 401, type: !685)
!1409 = !DILocation(line: 401, column: 5, scope: !1374)
!1410 = !DILocalVariable(name: "cdl_map", scope: !1374, file: !1, line: 404, type: !557)
!1411 = !DILocation(line: 404, column: 6, scope: !1374)
!1412 = !DILocalVariable(name: "i", scope: !1374, file: !1, line: 407, type: !615)
!1413 = !DILocation(line: 407, column: 5, scope: !1374)
!1414 = !DILocalVariable(name: "y", scope: !1374, file: !1, line: 410, type: !615)
!1415 = !DILocation(line: 410, column: 5, scope: !1374)
!1416 = !DILocalVariable(name: "cc", scope: !1374, file: !1, line: 413, type: !551)
!1417 = !DILocation(line: 413, column: 6, scope: !1374)
!1418 = !DILocalVariable(name: "ccc", scope: !1374, file: !1, line: 414, type: !551)
!1419 = !DILocation(line: 414, column: 6, scope: !1374)
!1420 = !DILocalVariable(name: "sat", scope: !1374, file: !1, line: 415, type: !551)
!1421 = !DILocation(line: 415, column: 6, scope: !1374)
!1422 = !DILocalVariable(name: "sop", scope: !1374, file: !1, line: 416, type: !551)
!1423 = !DILocation(line: 416, column: 6, scope: !1374)
!1424 = !DILocation(line: 423, column: 7, scope: !1425)
!1425 = distinct !DILexicalBlock(scope: !1374, file: !1, line: 423, column: 7)
!1426 = !DILocation(line: 423, column: 14, scope: !1425)
!1427 = !DILocation(line: 423, column: 20, scope: !1425)
!1428 = !DILocation(line: 423, column: 7, scope: !1374)
!1429 = !DILocation(line: 424, column: 61, scope: !1425)
!1430 = !DILocation(line: 424, column: 68, scope: !1425)
!1431 = !DILocation(line: 424, column: 12, scope: !1425)
!1432 = !DILocation(line: 424, column: 5, scope: !1425)
!1433 = !DILocation(line: 425, column: 7, scope: !1434)
!1434 = distinct !DILexicalBlock(scope: !1374, file: !1, line: 425, column: 7)
!1435 = !DILocation(line: 425, column: 35, scope: !1434)
!1436 = !DILocation(line: 425, column: 7, scope: !1374)
!1437 = !DILocation(line: 426, column: 5, scope: !1434)
!1438 = !DILocation(line: 427, column: 33, scope: !1374)
!1439 = !DILocation(line: 427, column: 62, scope: !1374)
!1440 = !DILocation(line: 427, column: 69, scope: !1374)
!1441 = !DILocation(line: 427, column: 7, scope: !1374)
!1442 = !DILocation(line: 427, column: 6, scope: !1374)
!1443 = !DILocation(line: 428, column: 7, scope: !1444)
!1444 = distinct !DILexicalBlock(scope: !1374, file: !1, line: 428, column: 7)
!1445 = !DILocation(line: 428, column: 11, scope: !1444)
!1446 = !DILocation(line: 428, column: 7, scope: !1374)
!1447 = !DILocation(line: 429, column: 5, scope: !1444)
!1448 = !DILocation(line: 430, column: 22, scope: !1374)
!1449 = !DILocation(line: 430, column: 6, scope: !1374)
!1450 = !DILocation(line: 430, column: 5, scope: !1374)
!1451 = !DILocation(line: 431, column: 7, scope: !1452)
!1452 = distinct !DILexicalBlock(scope: !1374, file: !1, line: 431, column: 7)
!1453 = !DILocation(line: 431, column: 10, scope: !1452)
!1454 = !DILocation(line: 431, column: 7, scope: !1374)
!1455 = !DILocation(line: 433, column: 26, scope: !1456)
!1456 = distinct !DILexicalBlock(scope: !1452, file: !1, line: 432, column: 5)
!1457 = !DILocation(line: 433, column: 11, scope: !1456)
!1458 = !DILocation(line: 433, column: 10, scope: !1456)
!1459 = !DILocation(line: 434, column: 7, scope: !1456)
!1460 = !DILocation(line: 436, column: 20, scope: !1374)
!1461 = !DILocation(line: 436, column: 24, scope: !1374)
!1462 = !DILocation(line: 436, column: 29, scope: !1374)
!1463 = !DILocation(line: 437, column: 20, scope: !1374)
!1464 = !DILocation(line: 437, column: 24, scope: !1374)
!1465 = !DILocation(line: 437, column: 30, scope: !1374)
!1466 = !DILocation(line: 438, column: 20, scope: !1374)
!1467 = !DILocation(line: 438, column: 24, scope: !1374)
!1468 = !DILocation(line: 438, column: 29, scope: !1374)
!1469 = !DILocation(line: 439, column: 20, scope: !1374)
!1470 = !DILocation(line: 439, column: 26, scope: !1374)
!1471 = !DILocation(line: 439, column: 31, scope: !1374)
!1472 = !DILocation(line: 440, column: 20, scope: !1374)
!1473 = !DILocation(line: 440, column: 26, scope: !1374)
!1474 = !DILocation(line: 440, column: 32, scope: !1374)
!1475 = !DILocation(line: 441, column: 20, scope: !1374)
!1476 = !DILocation(line: 441, column: 26, scope: !1374)
!1477 = !DILocation(line: 441, column: 31, scope: !1374)
!1478 = !DILocation(line: 442, column: 20, scope: !1374)
!1479 = !DILocation(line: 442, column: 25, scope: !1374)
!1480 = !DILocation(line: 442, column: 30, scope: !1374)
!1481 = !DILocation(line: 443, column: 20, scope: !1374)
!1482 = !DILocation(line: 443, column: 25, scope: !1374)
!1483 = !DILocation(line: 443, column: 31, scope: !1374)
!1484 = !DILocation(line: 444, column: 20, scope: !1374)
!1485 = !DILocation(line: 444, column: 25, scope: !1374)
!1486 = !DILocation(line: 444, column: 30, scope: !1374)
!1487 = !DILocation(line: 445, column: 20, scope: !1374)
!1488 = !DILocation(line: 445, column: 30, scope: !1374)
!1489 = !DILocation(line: 446, column: 23, scope: !1374)
!1490 = !DILocation(line: 446, column: 7, scope: !1374)
!1491 = !DILocation(line: 446, column: 6, scope: !1374)
!1492 = !DILocation(line: 447, column: 7, scope: !1493)
!1493 = distinct !DILexicalBlock(scope: !1374, file: !1, line: 447, column: 7)
!1494 = !DILocation(line: 447, column: 11, scope: !1493)
!1495 = !DILocation(line: 447, column: 7, scope: !1374)
!1496 = !DILocalVariable(name: "offset", scope: !1497, file: !1, line: 450, type: !551)
!1497 = distinct !DILexicalBlock(scope: !1493, file: !1, line: 448, column: 5)
!1498 = !DILocation(line: 450, column: 10, scope: !1497)
!1499 = !DILocalVariable(name: "power", scope: !1497, file: !1, line: 451, type: !551)
!1500 = !DILocation(line: 451, column: 10, scope: !1497)
!1501 = !DILocalVariable(name: "slope", scope: !1497, file: !1, line: 452, type: !551)
!1502 = !DILocation(line: 452, column: 10, scope: !1497)
!1503 = !DILocation(line: 454, column: 29, scope: !1497)
!1504 = !DILocation(line: 454, column: 13, scope: !1497)
!1505 = !DILocation(line: 454, column: 12, scope: !1497)
!1506 = !DILocation(line: 455, column: 11, scope: !1507)
!1507 = distinct !DILexicalBlock(scope: !1497, file: !1, line: 455, column: 11)
!1508 = !DILocation(line: 455, column: 17, scope: !1507)
!1509 = !DILocation(line: 455, column: 11, scope: !1497)
!1510 = !DILocation(line: 457, column: 37, scope: !1511)
!1511 = distinct !DILexicalBlock(scope: !1507, file: !1, line: 456, column: 9)
!1512 = !DILocation(line: 457, column: 19, scope: !1511)
!1513 = !DILocation(line: 457, column: 18, scope: !1511)
!1514 = !DILocation(line: 458, column: 28, scope: !1511)
!1515 = !DILocation(line: 458, column: 12, scope: !1511)
!1516 = !DILocation(line: 459, column: 17, scope: !1517)
!1517 = distinct !DILexicalBlock(scope: !1511, file: !1, line: 459, column: 11)
!1518 = !DILocation(line: 459, column: 16, scope: !1517)
!1519 = !DILocation(line: 459, column: 23, scope: !1520)
!1520 = distinct !DILexicalBlock(scope: !1517, file: !1, line: 459, column: 11)
!1521 = !DILocation(line: 459, column: 22, scope: !1520)
!1522 = !DILocation(line: 459, column: 25, scope: !1520)
!1523 = !DILocation(line: 459, column: 34, scope: !1520)
!1524 = !DILocation(line: 459, column: 38, scope: !1520)
!1525 = !DILocation(line: 459, column: 40, scope: !1520)
!1526 = !DILocation(line: 0, scope: !1520)
!1527 = !DILocation(line: 459, column: 11, scope: !1517)
!1528 = !DILocation(line: 461, column: 28, scope: !1529)
!1529 = distinct !DILexicalBlock(scope: !1520, file: !1, line: 460, column: 11)
!1530 = !DILocation(line: 461, column: 33, scope: !1529)
!1531 = !DILocation(line: 461, column: 13, scope: !1529)
!1532 = !DILocation(line: 462, column: 17, scope: !1533)
!1533 = distinct !DILexicalBlock(scope: !1529, file: !1, line: 462, column: 17)
!1534 = !DILocation(line: 462, column: 24, scope: !1533)
!1535 = !DILocation(line: 462, column: 17, scope: !1529)
!1536 = !DILocation(line: 463, column: 30, scope: !1533)
!1537 = !DILocation(line: 463, column: 35, scope: !1533)
!1538 = !DILocation(line: 463, column: 15, scope: !1533)
!1539 = !DILocation(line: 464, column: 21, scope: !1529)
!1540 = !DILocation(line: 464, column: 13, scope: !1529)
!1541 = !DILocation(line: 468, column: 59, scope: !1542)
!1542 = distinct !DILexicalBlock(scope: !1543, file: !1, line: 467, column: 15)
!1543 = distinct !DILexicalBlock(scope: !1529, file: !1, line: 465, column: 13)
!1544 = !DILocation(line: 468, column: 44, scope: !1542)
!1545 = !DILocation(line: 468, column: 34, scope: !1542)
!1546 = !DILocation(line: 468, column: 38, scope: !1542)
!1547 = !DILocation(line: 468, column: 43, scope: !1542)
!1548 = !DILocation(line: 469, column: 17, scope: !1542)
!1549 = !DILocation(line: 473, column: 61, scope: !1550)
!1550 = distinct !DILexicalBlock(scope: !1543, file: !1, line: 472, column: 15)
!1551 = !DILocation(line: 473, column: 46, scope: !1550)
!1552 = !DILocation(line: 473, column: 34, scope: !1550)
!1553 = !DILocation(line: 473, column: 40, scope: !1550)
!1554 = !DILocation(line: 473, column: 45, scope: !1550)
!1555 = !DILocation(line: 475, column: 17, scope: !1550)
!1556 = !DILocation(line: 479, column: 60, scope: !1557)
!1557 = distinct !DILexicalBlock(scope: !1543, file: !1, line: 478, column: 15)
!1558 = !DILocation(line: 479, column: 45, scope: !1557)
!1559 = !DILocation(line: 479, column: 34, scope: !1557)
!1560 = !DILocation(line: 479, column: 39, scope: !1557)
!1561 = !DILocation(line: 479, column: 44, scope: !1557)
!1562 = !DILocation(line: 481, column: 17, scope: !1557)
!1563 = !DILocation(line: 484, column: 11, scope: !1529)
!1564 = !DILocation(line: 459, column: 47, scope: !1520)
!1565 = !DILocation(line: 459, column: 11, scope: !1520)
!1566 = distinct !{!1566, !1527, !1567}
!1567 = !DILocation(line: 484, column: 11, scope: !1517)
!1568 = !DILocation(line: 485, column: 9, scope: !1511)
!1569 = !DILocation(line: 486, column: 30, scope: !1497)
!1570 = !DILocation(line: 486, column: 14, scope: !1497)
!1571 = !DILocation(line: 486, column: 13, scope: !1497)
!1572 = !DILocation(line: 487, column: 11, scope: !1573)
!1573 = distinct !DILexicalBlock(scope: !1497, file: !1, line: 487, column: 11)
!1574 = !DILocation(line: 487, column: 18, scope: !1573)
!1575 = !DILocation(line: 487, column: 11, scope: !1497)
!1576 = !DILocation(line: 489, column: 37, scope: !1577)
!1577 = distinct !DILexicalBlock(scope: !1573, file: !1, line: 488, column: 9)
!1578 = !DILocation(line: 489, column: 19, scope: !1577)
!1579 = !DILocation(line: 489, column: 18, scope: !1577)
!1580 = !DILocation(line: 490, column: 28, scope: !1577)
!1581 = !DILocation(line: 490, column: 12, scope: !1577)
!1582 = !DILocation(line: 491, column: 17, scope: !1583)
!1583 = distinct !DILexicalBlock(scope: !1577, file: !1, line: 491, column: 11)
!1584 = !DILocation(line: 491, column: 16, scope: !1583)
!1585 = !DILocation(line: 491, column: 23, scope: !1586)
!1586 = distinct !DILexicalBlock(scope: !1583, file: !1, line: 491, column: 11)
!1587 = !DILocation(line: 491, column: 22, scope: !1586)
!1588 = !DILocation(line: 491, column: 25, scope: !1586)
!1589 = !DILocation(line: 491, column: 34, scope: !1586)
!1590 = !DILocation(line: 491, column: 38, scope: !1586)
!1591 = !DILocation(line: 491, column: 40, scope: !1586)
!1592 = !DILocation(line: 0, scope: !1586)
!1593 = !DILocation(line: 491, column: 11, scope: !1583)
!1594 = !DILocation(line: 493, column: 28, scope: !1595)
!1595 = distinct !DILexicalBlock(scope: !1586, file: !1, line: 492, column: 11)
!1596 = !DILocation(line: 493, column: 33, scope: !1595)
!1597 = !DILocation(line: 493, column: 13, scope: !1595)
!1598 = !DILocation(line: 494, column: 17, scope: !1599)
!1599 = distinct !DILexicalBlock(scope: !1595, file: !1, line: 494, column: 17)
!1600 = !DILocation(line: 494, column: 24, scope: !1599)
!1601 = !DILocation(line: 494, column: 17, scope: !1595)
!1602 = !DILocation(line: 495, column: 30, scope: !1599)
!1603 = !DILocation(line: 495, column: 35, scope: !1599)
!1604 = !DILocation(line: 495, column: 15, scope: !1599)
!1605 = !DILocation(line: 496, column: 21, scope: !1595)
!1606 = !DILocation(line: 496, column: 13, scope: !1595)
!1607 = !DILocation(line: 500, column: 60, scope: !1608)
!1608 = distinct !DILexicalBlock(scope: !1609, file: !1, line: 499, column: 15)
!1609 = distinct !DILexicalBlock(scope: !1595, file: !1, line: 497, column: 13)
!1610 = !DILocation(line: 500, column: 45, scope: !1608)
!1611 = !DILocation(line: 500, column: 34, scope: !1608)
!1612 = !DILocation(line: 500, column: 38, scope: !1608)
!1613 = !DILocation(line: 500, column: 44, scope: !1608)
!1614 = !DILocation(line: 502, column: 17, scope: !1608)
!1615 = !DILocation(line: 506, column: 62, scope: !1616)
!1616 = distinct !DILexicalBlock(scope: !1609, file: !1, line: 505, column: 15)
!1617 = !DILocation(line: 506, column: 47, scope: !1616)
!1618 = !DILocation(line: 506, column: 34, scope: !1616)
!1619 = !DILocation(line: 506, column: 40, scope: !1616)
!1620 = !DILocation(line: 506, column: 46, scope: !1616)
!1621 = !DILocation(line: 508, column: 17, scope: !1616)
!1622 = !DILocation(line: 512, column: 61, scope: !1623)
!1623 = distinct !DILexicalBlock(scope: !1609, file: !1, line: 511, column: 15)
!1624 = !DILocation(line: 512, column: 46, scope: !1623)
!1625 = !DILocation(line: 512, column: 34, scope: !1623)
!1626 = !DILocation(line: 512, column: 39, scope: !1623)
!1627 = !DILocation(line: 512, column: 45, scope: !1623)
!1628 = !DILocation(line: 514, column: 17, scope: !1623)
!1629 = !DILocation(line: 517, column: 11, scope: !1595)
!1630 = !DILocation(line: 491, column: 47, scope: !1586)
!1631 = !DILocation(line: 491, column: 11, scope: !1586)
!1632 = distinct !{!1632, !1593, !1633}
!1633 = !DILocation(line: 517, column: 11, scope: !1583)
!1634 = !DILocation(line: 518, column: 9, scope: !1577)
!1635 = !DILocation(line: 519, column: 29, scope: !1497)
!1636 = !DILocation(line: 519, column: 13, scope: !1497)
!1637 = !DILocation(line: 519, column: 12, scope: !1497)
!1638 = !DILocation(line: 520, column: 11, scope: !1639)
!1639 = distinct !DILexicalBlock(scope: !1497, file: !1, line: 520, column: 11)
!1640 = !DILocation(line: 520, column: 17, scope: !1639)
!1641 = !DILocation(line: 520, column: 11, scope: !1497)
!1642 = !DILocation(line: 522, column: 37, scope: !1643)
!1643 = distinct !DILexicalBlock(scope: !1639, file: !1, line: 521, column: 9)
!1644 = !DILocation(line: 522, column: 19, scope: !1643)
!1645 = !DILocation(line: 522, column: 18, scope: !1643)
!1646 = !DILocation(line: 523, column: 28, scope: !1643)
!1647 = !DILocation(line: 523, column: 12, scope: !1643)
!1648 = !DILocation(line: 524, column: 17, scope: !1649)
!1649 = distinct !DILexicalBlock(scope: !1643, file: !1, line: 524, column: 11)
!1650 = !DILocation(line: 524, column: 16, scope: !1649)
!1651 = !DILocation(line: 524, column: 23, scope: !1652)
!1652 = distinct !DILexicalBlock(scope: !1649, file: !1, line: 524, column: 11)
!1653 = !DILocation(line: 524, column: 22, scope: !1652)
!1654 = !DILocation(line: 524, column: 25, scope: !1652)
!1655 = !DILocation(line: 524, column: 34, scope: !1652)
!1656 = !DILocation(line: 524, column: 38, scope: !1652)
!1657 = !DILocation(line: 524, column: 40, scope: !1652)
!1658 = !DILocation(line: 0, scope: !1652)
!1659 = !DILocation(line: 524, column: 11, scope: !1649)
!1660 = !DILocation(line: 526, column: 28, scope: !1661)
!1661 = distinct !DILexicalBlock(scope: !1652, file: !1, line: 525, column: 11)
!1662 = !DILocation(line: 526, column: 33, scope: !1661)
!1663 = !DILocation(line: 526, column: 13, scope: !1661)
!1664 = !DILocation(line: 527, column: 17, scope: !1665)
!1665 = distinct !DILexicalBlock(scope: !1661, file: !1, line: 527, column: 17)
!1666 = !DILocation(line: 527, column: 24, scope: !1665)
!1667 = !DILocation(line: 527, column: 17, scope: !1661)
!1668 = !DILocation(line: 528, column: 30, scope: !1665)
!1669 = !DILocation(line: 528, column: 35, scope: !1665)
!1670 = !DILocation(line: 528, column: 15, scope: !1665)
!1671 = !DILocation(line: 529, column: 21, scope: !1661)
!1672 = !DILocation(line: 529, column: 13, scope: !1661)
!1673 = !DILocation(line: 533, column: 59, scope: !1674)
!1674 = distinct !DILexicalBlock(scope: !1675, file: !1, line: 532, column: 15)
!1675 = distinct !DILexicalBlock(scope: !1661, file: !1, line: 530, column: 13)
!1676 = !DILocation(line: 533, column: 44, scope: !1674)
!1677 = !DILocation(line: 533, column: 34, scope: !1674)
!1678 = !DILocation(line: 533, column: 38, scope: !1674)
!1679 = !DILocation(line: 533, column: 43, scope: !1674)
!1680 = !DILocation(line: 534, column: 17, scope: !1674)
!1681 = !DILocation(line: 538, column: 61, scope: !1682)
!1682 = distinct !DILexicalBlock(scope: !1675, file: !1, line: 537, column: 15)
!1683 = !DILocation(line: 538, column: 46, scope: !1682)
!1684 = !DILocation(line: 538, column: 34, scope: !1682)
!1685 = !DILocation(line: 538, column: 40, scope: !1682)
!1686 = !DILocation(line: 538, column: 45, scope: !1682)
!1687 = !DILocation(line: 540, column: 17, scope: !1682)
!1688 = !DILocation(line: 544, column: 60, scope: !1689)
!1689 = distinct !DILexicalBlock(scope: !1675, file: !1, line: 543, column: 15)
!1690 = !DILocation(line: 544, column: 45, scope: !1689)
!1691 = !DILocation(line: 544, column: 34, scope: !1689)
!1692 = !DILocation(line: 544, column: 39, scope: !1689)
!1693 = !DILocation(line: 544, column: 44, scope: !1689)
!1694 = !DILocation(line: 546, column: 17, scope: !1689)
!1695 = !DILocation(line: 549, column: 11, scope: !1661)
!1696 = !DILocation(line: 524, column: 47, scope: !1652)
!1697 = !DILocation(line: 524, column: 11, scope: !1652)
!1698 = distinct !{!1698, !1659, !1699}
!1699 = !DILocation(line: 549, column: 11, scope: !1649)
!1700 = !DILocation(line: 550, column: 9, scope: !1643)
!1701 = !DILocation(line: 551, column: 5, scope: !1497)
!1702 = !DILocation(line: 552, column: 23, scope: !1374)
!1703 = !DILocation(line: 552, column: 7, scope: !1374)
!1704 = !DILocation(line: 552, column: 6, scope: !1374)
!1705 = !DILocation(line: 553, column: 7, scope: !1706)
!1706 = distinct !DILexicalBlock(scope: !1374, file: !1, line: 553, column: 7)
!1707 = !DILocation(line: 553, column: 11, scope: !1706)
!1708 = !DILocation(line: 553, column: 7, scope: !1374)
!1709 = !DILocalVariable(name: "saturation", scope: !1710, file: !1, line: 556, type: !551)
!1710 = distinct !DILexicalBlock(scope: !1706, file: !1, line: 554, column: 5)
!1711 = !DILocation(line: 556, column: 10, scope: !1710)
!1712 = !DILocation(line: 558, column: 34, scope: !1710)
!1713 = !DILocation(line: 558, column: 18, scope: !1710)
!1714 = !DILocation(line: 558, column: 17, scope: !1710)
!1715 = !DILocation(line: 559, column: 11, scope: !1716)
!1716 = distinct !DILexicalBlock(scope: !1710, file: !1, line: 559, column: 11)
!1717 = !DILocation(line: 559, column: 22, scope: !1716)
!1718 = !DILocation(line: 559, column: 11, scope: !1710)
!1719 = !DILocation(line: 561, column: 37, scope: !1720)
!1720 = distinct !DILexicalBlock(scope: !1716, file: !1, line: 560, column: 9)
!1721 = !DILocation(line: 561, column: 19, scope: !1720)
!1722 = !DILocation(line: 561, column: 18, scope: !1720)
!1723 = !DILocation(line: 562, column: 28, scope: !1720)
!1724 = !DILocation(line: 562, column: 12, scope: !1720)
!1725 = !DILocation(line: 563, column: 26, scope: !1720)
!1726 = !DILocation(line: 563, column: 31, scope: !1720)
!1727 = !DILocation(line: 563, column: 11, scope: !1720)
!1728 = !DILocation(line: 564, column: 54, scope: !1720)
!1729 = !DILocation(line: 564, column: 39, scope: !1720)
!1730 = !DILocation(line: 564, column: 28, scope: !1720)
!1731 = !DILocation(line: 564, column: 38, scope: !1720)
!1732 = !DILocation(line: 565, column: 9, scope: !1720)
!1733 = !DILocation(line: 566, column: 5, scope: !1710)
!1734 = !DILocation(line: 567, column: 22, scope: !1374)
!1735 = !DILocation(line: 567, column: 7, scope: !1374)
!1736 = !DILocation(line: 567, column: 6, scope: !1374)
!1737 = !DILocation(line: 568, column: 7, scope: !1738)
!1738 = distinct !DILexicalBlock(scope: !1374, file: !1, line: 568, column: 7)
!1739 = !DILocation(line: 568, column: 14, scope: !1738)
!1740 = !DILocation(line: 568, column: 20, scope: !1738)
!1741 = !DILocation(line: 568, column: 7, scope: !1374)
!1742 = !DILocation(line: 570, column: 14, scope: !1743)
!1743 = distinct !DILexicalBlock(scope: !1738, file: !1, line: 569, column: 5)
!1744 = !DILocation(line: 573, column: 61, scope: !1743)
!1745 = !DILocation(line: 573, column: 65, scope: !1743)
!1746 = !DILocation(line: 572, column: 14, scope: !1743)
!1747 = !DILocation(line: 575, column: 62, scope: !1743)
!1748 = !DILocation(line: 575, column: 66, scope: !1743)
!1749 = !DILocation(line: 574, column: 14, scope: !1743)
!1750 = !DILocation(line: 577, column: 61, scope: !1743)
!1751 = !DILocation(line: 577, column: 65, scope: !1743)
!1752 = !DILocation(line: 576, column: 14, scope: !1743)
!1753 = !DILocation(line: 579, column: 63, scope: !1743)
!1754 = !DILocation(line: 579, column: 69, scope: !1743)
!1755 = !DILocation(line: 578, column: 14, scope: !1743)
!1756 = !DILocation(line: 581, column: 64, scope: !1743)
!1757 = !DILocation(line: 581, column: 70, scope: !1743)
!1758 = !DILocation(line: 580, column: 14, scope: !1743)
!1759 = !DILocation(line: 583, column: 63, scope: !1743)
!1760 = !DILocation(line: 583, column: 69, scope: !1743)
!1761 = !DILocation(line: 582, column: 14, scope: !1743)
!1762 = !DILocation(line: 585, column: 62, scope: !1743)
!1763 = !DILocation(line: 585, column: 67, scope: !1743)
!1764 = !DILocation(line: 584, column: 14, scope: !1743)
!1765 = !DILocation(line: 587, column: 63, scope: !1743)
!1766 = !DILocation(line: 587, column: 68, scope: !1743)
!1767 = !DILocation(line: 586, column: 14, scope: !1743)
!1768 = !DILocation(line: 589, column: 62, scope: !1743)
!1769 = !DILocation(line: 589, column: 67, scope: !1743)
!1770 = !DILocation(line: 588, column: 14, scope: !1743)
!1771 = !DILocation(line: 591, column: 62, scope: !1743)
!1772 = !DILocation(line: 590, column: 14, scope: !1743)
!1773 = !DILocation(line: 592, column: 5, scope: !1743)
!1774 = !DILocation(line: 593, column: 27, scope: !1374)
!1775 = !DILocation(line: 593, column: 11, scope: !1374)
!1776 = !DILocation(line: 593, column: 10, scope: !1374)
!1777 = !DILocation(line: 594, column: 7, scope: !1778)
!1778 = distinct !DILexicalBlock(scope: !1374, file: !1, line: 594, column: 7)
!1779 = !DILocation(line: 594, column: 15, scope: !1778)
!1780 = !DILocation(line: 594, column: 7, scope: !1374)
!1781 = !DILocation(line: 595, column: 5, scope: !1782)
!1782 = distinct !DILexicalBlock(scope: !1783, file: !1, line: 595, column: 5)
!1783 = distinct !DILexicalBlock(scope: !1778, file: !1, line: 595, column: 5)
!1784 = !DILocation(line: 595, column: 5, scope: !1783)
!1785 = !DILocation(line: 597, column: 9, scope: !1786)
!1786 = distinct !DILexicalBlock(scope: !1374, file: !1, line: 597, column: 3)
!1787 = !DILocation(line: 597, column: 8, scope: !1786)
!1788 = !DILocation(line: 597, column: 13, scope: !1789)
!1789 = distinct !DILexicalBlock(scope: !1786, file: !1, line: 597, column: 3)
!1790 = !DILocation(line: 597, column: 15, scope: !1789)
!1791 = !DILocation(line: 597, column: 3, scope: !1786)
!1792 = !DILocation(line: 600, column: 53, scope: !1793)
!1793 = distinct !DILexicalBlock(scope: !1789, file: !1, line: 598, column: 3)
!1794 = !DILocation(line: 600, column: 57, scope: !1793)
!1795 = !DILocation(line: 600, column: 63, scope: !1793)
!1796 = !DILocation(line: 600, column: 62, scope: !1793)
!1797 = !DILocation(line: 600, column: 64, scope: !1793)
!1798 = !DILocation(line: 601, column: 24, scope: !1793)
!1799 = !DILocation(line: 601, column: 28, scope: !1793)
!1800 = !DILocation(line: 600, column: 71, scope: !1793)
!1801 = !DILocation(line: 601, column: 52, scope: !1793)
!1802 = !DILocation(line: 601, column: 56, scope: !1793)
!1803 = !DILocation(line: 600, column: 32, scope: !1793)
!1804 = !DILocation(line: 600, column: 30, scope: !1793)
!1805 = !DILocation(line: 599, column: 70, scope: !1793)
!1806 = !DILocation(line: 599, column: 52, scope: !1793)
!1807 = !DILocation(line: 599, column: 35, scope: !1793)
!1808 = !DILocation(line: 599, column: 20, scope: !1793)
!1809 = !DILocation(line: 599, column: 5, scope: !1793)
!1810 = !DILocation(line: 599, column: 13, scope: !1793)
!1811 = !DILocation(line: 599, column: 16, scope: !1793)
!1812 = !DILocation(line: 599, column: 19, scope: !1793)
!1813 = !DILocation(line: 603, column: 53, scope: !1793)
!1814 = !DILocation(line: 603, column: 59, scope: !1793)
!1815 = !DILocation(line: 603, column: 65, scope: !1793)
!1816 = !DILocation(line: 603, column: 64, scope: !1793)
!1817 = !DILocation(line: 603, column: 66, scope: !1793)
!1818 = !DILocation(line: 604, column: 24, scope: !1793)
!1819 = !DILocation(line: 604, column: 30, scope: !1793)
!1820 = !DILocation(line: 603, column: 73, scope: !1793)
!1821 = !DILocation(line: 604, column: 54, scope: !1793)
!1822 = !DILocation(line: 604, column: 60, scope: !1793)
!1823 = !DILocation(line: 603, column: 32, scope: !1793)
!1824 = !DILocation(line: 603, column: 30, scope: !1793)
!1825 = !DILocation(line: 602, column: 72, scope: !1793)
!1826 = !DILocation(line: 602, column: 54, scope: !1793)
!1827 = !DILocation(line: 602, column: 37, scope: !1793)
!1828 = !DILocation(line: 602, column: 22, scope: !1793)
!1829 = !DILocation(line: 602, column: 5, scope: !1793)
!1830 = !DILocation(line: 602, column: 13, scope: !1793)
!1831 = !DILocation(line: 602, column: 16, scope: !1793)
!1832 = !DILocation(line: 602, column: 21, scope: !1793)
!1833 = !DILocation(line: 606, column: 53, scope: !1793)
!1834 = !DILocation(line: 606, column: 58, scope: !1793)
!1835 = !DILocation(line: 606, column: 64, scope: !1793)
!1836 = !DILocation(line: 606, column: 63, scope: !1793)
!1837 = !DILocation(line: 606, column: 65, scope: !1793)
!1838 = !DILocation(line: 607, column: 24, scope: !1793)
!1839 = !DILocation(line: 607, column: 29, scope: !1793)
!1840 = !DILocation(line: 606, column: 72, scope: !1793)
!1841 = !DILocation(line: 607, column: 53, scope: !1793)
!1842 = !DILocation(line: 607, column: 58, scope: !1793)
!1843 = !DILocation(line: 606, column: 32, scope: !1793)
!1844 = !DILocation(line: 606, column: 30, scope: !1793)
!1845 = !DILocation(line: 605, column: 71, scope: !1793)
!1846 = !DILocation(line: 605, column: 53, scope: !1793)
!1847 = !DILocation(line: 605, column: 36, scope: !1793)
!1848 = !DILocation(line: 605, column: 21, scope: !1793)
!1849 = !DILocation(line: 605, column: 5, scope: !1793)
!1850 = !DILocation(line: 605, column: 13, scope: !1793)
!1851 = !DILocation(line: 605, column: 16, scope: !1793)
!1852 = !DILocation(line: 605, column: 20, scope: !1793)
!1853 = !DILocation(line: 608, column: 3, scope: !1793)
!1854 = !DILocation(line: 597, column: 37, scope: !1789)
!1855 = !DILocation(line: 597, column: 3, scope: !1789)
!1856 = distinct !{!1856, !1791, !1857}
!1857 = !DILocation(line: 608, column: 3, scope: !1786)
!1858 = !DILocation(line: 609, column: 7, scope: !1859)
!1859 = distinct !DILexicalBlock(scope: !1374, file: !1, line: 609, column: 7)
!1860 = !DILocation(line: 609, column: 14, scope: !1859)
!1861 = !DILocation(line: 609, column: 28, scope: !1859)
!1862 = !DILocation(line: 609, column: 7, scope: !1374)
!1863 = !DILocation(line: 614, column: 13, scope: !1864)
!1864 = distinct !DILexicalBlock(scope: !1865, file: !1, line: 614, column: 7)
!1865 = distinct !DILexicalBlock(scope: !1859, file: !1, line: 610, column: 5)
!1866 = !DILocation(line: 614, column: 12, scope: !1864)
!1867 = !DILocation(line: 614, column: 17, scope: !1868)
!1868 = distinct !DILexicalBlock(scope: !1864, file: !1, line: 614, column: 7)
!1869 = !DILocation(line: 614, column: 31, scope: !1868)
!1870 = !DILocation(line: 614, column: 38, scope: !1868)
!1871 = !DILocation(line: 614, column: 19, scope: !1868)
!1872 = !DILocation(line: 614, column: 7, scope: !1864)
!1873 = !DILocalVariable(name: "luma", scope: !1874, file: !1, line: 617, type: !543)
!1874 = distinct !DILexicalBlock(scope: !1868, file: !1, line: 615, column: 7)
!1875 = !DILocation(line: 617, column: 11, scope: !1874)
!1876 = !DILocation(line: 619, column: 23, scope: !1874)
!1877 = !DILocation(line: 619, column: 30, scope: !1874)
!1878 = !DILocation(line: 619, column: 39, scope: !1874)
!1879 = !DILocation(line: 619, column: 42, scope: !1874)
!1880 = !DILocation(line: 619, column: 22, scope: !1874)
!1881 = !DILocation(line: 619, column: 55, scope: !1874)
!1882 = !DILocation(line: 619, column: 62, scope: !1874)
!1883 = !DILocation(line: 619, column: 71, scope: !1874)
!1884 = !DILocation(line: 619, column: 74, scope: !1874)
!1885 = !DILocation(line: 619, column: 54, scope: !1874)
!1886 = !DILocation(line: 619, column: 45, scope: !1874)
!1887 = !DILocation(line: 620, column: 20, scope: !1874)
!1888 = !DILocation(line: 620, column: 27, scope: !1874)
!1889 = !DILocation(line: 620, column: 36, scope: !1874)
!1890 = !DILocation(line: 620, column: 39, scope: !1874)
!1891 = !DILocation(line: 620, column: 19, scope: !1874)
!1892 = !DILocation(line: 619, column: 79, scope: !1874)
!1893 = !DILocation(line: 619, column: 13, scope: !1874)
!1894 = !DILocation(line: 621, column: 47, scope: !1874)
!1895 = !DILocation(line: 621, column: 69, scope: !1874)
!1896 = !DILocation(line: 622, column: 11, scope: !1874)
!1897 = !DILocation(line: 622, column: 37, scope: !1874)
!1898 = !DILocation(line: 622, column: 44, scope: !1874)
!1899 = !DILocation(line: 622, column: 53, scope: !1874)
!1900 = !DILocation(line: 622, column: 56, scope: !1874)
!1901 = !DILocation(line: 622, column: 19, scope: !1874)
!1902 = !DILocation(line: 622, column: 62, scope: !1874)
!1903 = !DILocation(line: 621, column: 79, scope: !1874)
!1904 = !DILocation(line: 621, column: 51, scope: !1874)
!1905 = !DILocation(line: 622, column: 66, scope: !1874)
!1906 = !DILocation(line: 622, column: 65, scope: !1874)
!1907 = !DILocation(line: 621, column: 32, scope: !1874)
!1908 = !DILocation(line: 621, column: 9, scope: !1874)
!1909 = !DILocation(line: 621, column: 16, scope: !1874)
!1910 = !DILocation(line: 621, column: 25, scope: !1874)
!1911 = !DILocation(line: 621, column: 28, scope: !1874)
!1912 = !DILocation(line: 621, column: 31, scope: !1874)
!1913 = !DILocation(line: 623, column: 49, scope: !1874)
!1914 = !DILocation(line: 624, column: 28, scope: !1874)
!1915 = !DILocation(line: 624, column: 39, scope: !1874)
!1916 = !DILocation(line: 625, column: 11, scope: !1874)
!1917 = !DILocation(line: 625, column: 18, scope: !1874)
!1918 = !DILocation(line: 625, column: 27, scope: !1874)
!1919 = !DILocation(line: 625, column: 30, scope: !1874)
!1920 = !DILocation(line: 624, column: 47, scope: !1874)
!1921 = !DILocation(line: 625, column: 38, scope: !1874)
!1922 = !DILocation(line: 624, column: 38, scope: !1874)
!1923 = !DILocation(line: 623, column: 53, scope: !1874)
!1924 = !DILocation(line: 625, column: 44, scope: !1874)
!1925 = !DILocation(line: 625, column: 43, scope: !1874)
!1926 = !DILocation(line: 623, column: 34, scope: !1874)
!1927 = !DILocation(line: 623, column: 9, scope: !1874)
!1928 = !DILocation(line: 623, column: 16, scope: !1874)
!1929 = !DILocation(line: 623, column: 25, scope: !1874)
!1930 = !DILocation(line: 623, column: 28, scope: !1874)
!1931 = !DILocation(line: 623, column: 33, scope: !1874)
!1932 = !DILocation(line: 626, column: 48, scope: !1874)
!1933 = !DILocation(line: 626, column: 70, scope: !1874)
!1934 = !DILocation(line: 627, column: 11, scope: !1874)
!1935 = !DILocation(line: 627, column: 37, scope: !1874)
!1936 = !DILocation(line: 627, column: 44, scope: !1874)
!1937 = !DILocation(line: 627, column: 53, scope: !1874)
!1938 = !DILocation(line: 627, column: 56, scope: !1874)
!1939 = !DILocation(line: 627, column: 19, scope: !1874)
!1940 = !DILocation(line: 627, column: 63, scope: !1874)
!1941 = !DILocation(line: 626, column: 80, scope: !1874)
!1942 = !DILocation(line: 626, column: 52, scope: !1874)
!1943 = !DILocation(line: 627, column: 68, scope: !1874)
!1944 = !DILocation(line: 627, column: 67, scope: !1874)
!1945 = !DILocation(line: 626, column: 33, scope: !1874)
!1946 = !DILocation(line: 626, column: 9, scope: !1874)
!1947 = !DILocation(line: 626, column: 16, scope: !1874)
!1948 = !DILocation(line: 626, column: 25, scope: !1874)
!1949 = !DILocation(line: 626, column: 28, scope: !1874)
!1950 = !DILocation(line: 626, column: 32, scope: !1874)
!1951 = !DILocation(line: 628, column: 7, scope: !1874)
!1952 = !DILocation(line: 614, column: 47, scope: !1868)
!1953 = !DILocation(line: 614, column: 7, scope: !1868)
!1954 = distinct !{!1954, !1872, !1955}
!1955 = !DILocation(line: 628, column: 7, scope: !1864)
!1956 = !DILocation(line: 629, column: 5, scope: !1865)
!1957 = !DILocation(line: 633, column: 9, scope: !1374)
!1958 = !DILocation(line: 634, column: 11, scope: !1374)
!1959 = !DILocation(line: 635, column: 15, scope: !1374)
!1960 = !DILocation(line: 635, column: 22, scope: !1374)
!1961 = !DILocation(line: 635, column: 12, scope: !1374)
!1962 = !DILocation(line: 636, column: 40, scope: !1374)
!1963 = !DILocation(line: 636, column: 46, scope: !1374)
!1964 = !DILocation(line: 636, column: 14, scope: !1374)
!1965 = !DILocation(line: 636, column: 13, scope: !1374)
!1966 = !DILocation(line: 641, column: 9, scope: !1967)
!1967 = distinct !DILexicalBlock(scope: !1374, file: !1, line: 641, column: 3)
!1968 = !DILocation(line: 641, column: 8, scope: !1967)
!1969 = !DILocation(line: 641, column: 13, scope: !1970)
!1970 = distinct !DILexicalBlock(scope: !1967, file: !1, line: 641, column: 3)
!1971 = !DILocation(line: 641, column: 27, scope: !1970)
!1972 = !DILocation(line: 641, column: 34, scope: !1970)
!1973 = !DILocation(line: 641, column: 15, scope: !1970)
!1974 = !DILocation(line: 641, column: 3, scope: !1967)
!1975 = !DILocalVariable(name: "luma", scope: !1976, file: !1, line: 644, type: !543)
!1976 = distinct !DILexicalBlock(scope: !1970, file: !1, line: 642, column: 3)
!1977 = !DILocation(line: 644, column: 7, scope: !1976)
!1978 = !DILocalVariable(name: "q", scope: !1976, file: !1, line: 647, type: !1144)
!1979 = !DILocation(line: 647, column: 17, scope: !1976)
!1980 = !DILocalVariable(name: "x", scope: !1976, file: !1, line: 650, type: !615)
!1981 = !DILocation(line: 650, column: 7, scope: !1976)
!1982 = !DILocation(line: 652, column: 9, scope: !1983)
!1983 = distinct !DILexicalBlock(scope: !1976, file: !1, line: 652, column: 9)
!1984 = !DILocation(line: 652, column: 16, scope: !1983)
!1985 = !DILocation(line: 652, column: 9, scope: !1976)
!1986 = !DILocation(line: 653, column: 7, scope: !1983)
!1987 = !DILocation(line: 654, column: 35, scope: !1976)
!1988 = !DILocation(line: 654, column: 48, scope: !1976)
!1989 = !DILocation(line: 654, column: 50, scope: !1976)
!1990 = !DILocation(line: 654, column: 57, scope: !1976)
!1991 = !DILocation(line: 654, column: 67, scope: !1976)
!1992 = !DILocation(line: 654, column: 7, scope: !1976)
!1993 = !DILocation(line: 654, column: 6, scope: !1976)
!1994 = !DILocation(line: 655, column: 9, scope: !1995)
!1995 = distinct !DILexicalBlock(scope: !1976, file: !1, line: 655, column: 9)
!1996 = !DILocation(line: 655, column: 11, scope: !1995)
!1997 = !DILocation(line: 655, column: 9, scope: !1976)
!1998 = !DILocation(line: 657, column: 15, scope: !1999)
!1999 = distinct !DILexicalBlock(scope: !1995, file: !1, line: 656, column: 7)
!2000 = !DILocation(line: 658, column: 9, scope: !1999)
!2001 = !DILocation(line: 660, column: 11, scope: !2002)
!2002 = distinct !DILexicalBlock(scope: !1976, file: !1, line: 660, column: 5)
!2003 = !DILocation(line: 660, column: 10, scope: !2002)
!2004 = !DILocation(line: 660, column: 15, scope: !2005)
!2005 = distinct !DILexicalBlock(scope: !2002, file: !1, line: 660, column: 5)
!2006 = !DILocation(line: 660, column: 29, scope: !2005)
!2007 = !DILocation(line: 660, column: 36, scope: !2005)
!2008 = !DILocation(line: 660, column: 17, scope: !2005)
!2009 = !DILocation(line: 660, column: 5, scope: !2002)
!2010 = !DILocation(line: 662, column: 21, scope: !2011)
!2011 = distinct !DILexicalBlock(scope: !2005, file: !1, line: 661, column: 5)
!2012 = !DILocation(line: 662, column: 20, scope: !2011)
!2013 = !DILocation(line: 662, column: 45, scope: !2011)
!2014 = !DILocation(line: 662, column: 44, scope: !2011)
!2015 = !DILocation(line: 662, column: 35, scope: !2011)
!2016 = !DILocation(line: 663, column: 18, scope: !2011)
!2017 = !DILocation(line: 663, column: 17, scope: !2011)
!2018 = !DILocation(line: 662, column: 61, scope: !2011)
!2019 = !DILocation(line: 662, column: 11, scope: !2011)
!2020 = !DILocation(line: 664, column: 7, scope: !2011)
!2021 = !DILocation(line: 666, column: 7, scope: !2011)
!2022 = !DILocation(line: 668, column: 7, scope: !2011)
!2023 = !DILocation(line: 670, column: 8, scope: !2011)
!2024 = !DILocation(line: 671, column: 5, scope: !2011)
!2025 = !DILocation(line: 660, column: 46, scope: !2005)
!2026 = !DILocation(line: 660, column: 5, scope: !2005)
!2027 = distinct !{!2027, !2009, !2028}
!2028 = !DILocation(line: 671, column: 5, scope: !2002)
!2029 = !DILocation(line: 672, column: 38, scope: !2030)
!2030 = distinct !DILexicalBlock(scope: !1976, file: !1, line: 672, column: 9)
!2031 = !DILocation(line: 672, column: 49, scope: !2030)
!2032 = !DILocation(line: 672, column: 9, scope: !2030)
!2033 = !DILocation(line: 672, column: 60, scope: !2030)
!2034 = !DILocation(line: 672, column: 9, scope: !1976)
!2035 = !DILocation(line: 673, column: 13, scope: !2030)
!2036 = !DILocation(line: 673, column: 7, scope: !2030)
!2037 = !DILocation(line: 674, column: 9, scope: !2038)
!2038 = distinct !DILexicalBlock(scope: !1976, file: !1, line: 674, column: 9)
!2039 = !DILocation(line: 674, column: 16, scope: !2038)
!2040 = !DILocation(line: 674, column: 33, scope: !2038)
!2041 = !DILocation(line: 674, column: 9, scope: !1976)
!2042 = !DILocalVariable(name: "proceed", scope: !2043, file: !1, line: 677, type: !581)
!2043 = distinct !DILexicalBlock(scope: !2038, file: !1, line: 675, column: 7)
!2044 = !DILocation(line: 677, column: 11, scope: !2043)
!2045 = !DILocation(line: 682, column: 34, scope: !2043)
!2046 = !DILocation(line: 683, column: 19, scope: !2043)
!2047 = !DILocation(line: 683, column: 22, scope: !2043)
!2048 = !DILocation(line: 683, column: 29, scope: !2043)
!2049 = !DILocation(line: 682, column: 17, scope: !2043)
!2050 = !DILocation(line: 682, column: 16, scope: !2043)
!2051 = !DILocation(line: 684, column: 13, scope: !2052)
!2052 = distinct !DILexicalBlock(scope: !2043, file: !1, line: 684, column: 13)
!2053 = !DILocation(line: 684, column: 21, scope: !2052)
!2054 = !DILocation(line: 684, column: 13, scope: !2043)
!2055 = !DILocation(line: 685, column: 17, scope: !2052)
!2056 = !DILocation(line: 685, column: 11, scope: !2052)
!2057 = !DILocation(line: 686, column: 7, scope: !2043)
!2058 = !DILocation(line: 687, column: 3, scope: !1976)
!2059 = !DILocation(line: 641, column: 41, scope: !1970)
!2060 = !DILocation(line: 641, column: 3, scope: !1970)
!2061 = distinct !{!2061, !1974, !2062}
!2062 = !DILocation(line: 687, column: 3, scope: !1967)
!2063 = !DILocation(line: 688, column: 31, scope: !1374)
!2064 = !DILocation(line: 688, column: 14, scope: !1374)
!2065 = !DILocation(line: 688, column: 13, scope: !1374)
!2066 = !DILocation(line: 689, column: 50, scope: !1374)
!2067 = !DILocation(line: 689, column: 27, scope: !1374)
!2068 = !DILocation(line: 689, column: 11, scope: !1374)
!2069 = !DILocation(line: 689, column: 10, scope: !1374)
!2070 = !DILocation(line: 690, column: 10, scope: !1374)
!2071 = !DILocation(line: 690, column: 3, scope: !1374)
!2072 = !DILocation(line: 691, column: 1, scope: !1374)
!2073 = distinct !DISubprogram(name: "StringToDouble", scope: !2074, file: !2074, line: 42, type: !2075, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!2074 = !DIFile(filename: "./magick/string-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2075 = !DISubroutineType(types: !2076)
!2076 = !{!543, !2077, !2078}
!2077 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !547)
!2078 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !555)
!2079 = !DILocalVariable(name: "string", arg: 1, scope: !2073, file: !2074, line: 42, type: !2077)
!2080 = !DILocation(line: 42, column: 58, scope: !2073)
!2081 = !DILocalVariable(name: "sentinal", arg: 2, scope: !2073, file: !2074, line: 43, type: !2078)
!2082 = !DILocation(line: 43, column: 19, scope: !2073)
!2083 = !DILocation(line: 45, column: 31, scope: !2073)
!2084 = !DILocation(line: 45, column: 38, scope: !2073)
!2085 = !DILocation(line: 45, column: 10, scope: !2073)
!2086 = !DILocation(line: 45, column: 3, scope: !2073)
!2087 = distinct !DISubprogram(name: "ClampToQuantum", scope: !147, file: !147, line: 87, type: !2088, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!2088 = !DISubroutineType(types: !2089)
!2089 = !{!544, !2090}
!2090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !769)
!2091 = !DILocalVariable(name: "value", arg: 1, scope: !2087, file: !147, line: 87, type: !2090)
!2092 = !DILocation(line: 87, column: 59, scope: !2087)
!2093 = !DILocation(line: 92, column: 7, scope: !2094)
!2094 = distinct !DILexicalBlock(scope: !2087, file: !147, line: 92, column: 7)
!2095 = !DILocation(line: 92, column: 13, scope: !2094)
!2096 = !DILocation(line: 92, column: 7, scope: !2087)
!2097 = !DILocation(line: 93, column: 5, scope: !2094)
!2098 = !DILocation(line: 94, column: 7, scope: !2099)
!2099 = distinct !DILexicalBlock(scope: !2087, file: !147, line: 94, column: 7)
!2100 = !DILocation(line: 94, column: 13, scope: !2099)
!2101 = !DILocation(line: 94, column: 7, scope: !2087)
!2102 = !DILocation(line: 95, column: 5, scope: !2099)
!2103 = !DILocation(line: 96, column: 21, scope: !2087)
!2104 = !DILocation(line: 96, column: 26, scope: !2087)
!2105 = !DILocation(line: 96, column: 10, scope: !2087)
!2106 = !DILocation(line: 96, column: 3, scope: !2087)
!2107 = !DILocation(line: 98, column: 1, scope: !2087)
!2108 = distinct !DISubprogram(name: "ScaleMapToQuantum", scope: !2109, file: !2109, line: 382, type: !2088, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!2109 = !DIFile(filename: "./magick/quantum-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2110 = !DILocalVariable(name: "value", arg: 1, scope: !2108, file: !2109, line: 382, type: !2090)
!2111 = !DILocation(line: 382, column: 62, scope: !2108)
!2112 = !DILocation(line: 384, column: 7, scope: !2113)
!2113 = distinct !DILexicalBlock(scope: !2108, file: !2109, line: 384, column: 7)
!2114 = !DILocation(line: 384, column: 13, scope: !2113)
!2115 = !DILocation(line: 384, column: 7, scope: !2108)
!2116 = !DILocation(line: 385, column: 5, scope: !2113)
!2117 = !DILocation(line: 386, column: 7, scope: !2118)
!2118 = distinct !DILexicalBlock(scope: !2108, file: !2109, line: 386, column: 7)
!2119 = !DILocation(line: 386, column: 13, scope: !2118)
!2120 = !DILocation(line: 386, column: 7, scope: !2108)
!2121 = !DILocation(line: 387, column: 5, scope: !2118)
!2122 = !DILocation(line: 389, column: 21, scope: !2108)
!2123 = !DILocation(line: 389, column: 26, scope: !2108)
!2124 = !DILocation(line: 389, column: 10, scope: !2108)
!2125 = !DILocation(line: 389, column: 3, scope: !2108)
!2126 = !DILocation(line: 393, column: 1, scope: !2108)
!2127 = distinct !DISubprogram(name: "ScaleQuantumToMap", scope: !2109, file: !2109, line: 408, type: !2128, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!2128 = !DISubroutineType(types: !2129)
!2129 = !{!5, !2130}
!2130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !544)
!2131 = !DILocalVariable(name: "quantum", arg: 1, scope: !2127, file: !2109, line: 408, type: !2130)
!2132 = !DILocation(line: 408, column: 60, scope: !2127)
!2133 = !DILocation(line: 410, column: 7, scope: !2134)
!2134 = distinct !DILexicalBlock(scope: !2127, file: !2109, line: 410, column: 7)
!2135 = !DILocation(line: 410, column: 15, scope: !2134)
!2136 = !DILocation(line: 410, column: 7, scope: !2127)
!2137 = !DILocation(line: 411, column: 5, scope: !2134)
!2138 = !DILocation(line: 413, column: 25, scope: !2127)
!2139 = !DILocation(line: 413, column: 10, scope: !2127)
!2140 = !DILocation(line: 413, column: 3, scope: !2127)
!2141 = !DILocation(line: 419, column: 1, scope: !2127)
!2142 = distinct !DISubprogram(name: "SetImageProgress", scope: !2143, file: !2143, line: 27, type: !2144, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!2143 = !DIFile(filename: "./magick/monitor-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2144 = !DISubroutineType(types: !2145)
!2145 = !{!581, !2146, !547, !684, !687}
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !566)
!2148 = !DILocalVariable(name: "image", arg: 1, scope: !2142, file: !2143, line: 27, type: !2146)
!2149 = !DILocation(line: 27, column: 63, scope: !2142)
!2150 = !DILocalVariable(name: "tag", arg: 2, scope: !2142, file: !2143, line: 28, type: !547)
!2151 = !DILocation(line: 28, column: 15, scope: !2142)
!2152 = !DILocalVariable(name: "offset", arg: 3, scope: !2142, file: !2143, line: 28, type: !684)
!2153 = !DILocation(line: 28, column: 42, scope: !2142)
!2154 = !DILocalVariable(name: "extent", arg: 4, scope: !2142, file: !2143, line: 28, type: !687)
!2155 = !DILocation(line: 28, column: 70, scope: !2142)
!2156 = !DILocalVariable(name: "message", scope: !2142, file: !2143, line: 31, type: !702)
!2157 = !DILocation(line: 31, column: 5, scope: !2142)
!2158 = !DILocation(line: 33, column: 7, scope: !2159)
!2159 = distinct !DILexicalBlock(scope: !2142, file: !2143, line: 33, column: 7)
!2160 = !DILocation(line: 33, column: 14, scope: !2159)
!2161 = !DILocation(line: 33, column: 31, scope: !2159)
!2162 = !DILocation(line: 33, column: 7, scope: !2142)
!2163 = !DILocation(line: 34, column: 5, scope: !2159)
!2164 = !DILocation(line: 35, column: 29, scope: !2142)
!2165 = !DILocation(line: 35, column: 59, scope: !2142)
!2166 = !DILocation(line: 35, column: 63, scope: !2142)
!2167 = !DILocation(line: 35, column: 70, scope: !2142)
!2168 = !DILocation(line: 35, column: 10, scope: !2142)
!2169 = !DILocation(line: 36, column: 10, scope: !2142)
!2170 = !DILocation(line: 36, column: 17, scope: !2142)
!2171 = !DILocation(line: 36, column: 34, scope: !2142)
!2172 = !DILocation(line: 36, column: 42, scope: !2142)
!2173 = !DILocation(line: 36, column: 49, scope: !2142)
!2174 = !DILocation(line: 36, column: 56, scope: !2142)
!2175 = !DILocation(line: 36, column: 63, scope: !2142)
!2176 = !DILocation(line: 36, column: 3, scope: !2142)
!2177 = !DILocation(line: 37, column: 1, scope: !2142)
!2178 = distinct !DISubprogram(name: "ClutImage", scope: !1, file: !1, line: 738, type: !2179, scopeLine: 739, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!2179 = !DISubroutineType(types: !2180)
!2180 = !{!581, !565, !2146}
!2181 = !DILocalVariable(name: "image", arg: 1, scope: !2178, file: !1, line: 738, type: !565)
!2182 = !DILocation(line: 738, column: 49, scope: !2178)
!2183 = !DILocalVariable(name: "clut_image", arg: 2, scope: !2178, file: !1, line: 738, type: !2146)
!2184 = !DILocation(line: 738, column: 68, scope: !2178)
!2185 = !DILocation(line: 740, column: 27, scope: !2178)
!2186 = !DILocation(line: 740, column: 49, scope: !2178)
!2187 = !DILocation(line: 740, column: 10, scope: !2178)
!2188 = !DILocation(line: 740, column: 3, scope: !2178)
!2189 = distinct !DISubprogram(name: "ClutImageChannel", scope: !1, file: !1, line: 743, type: !2190, scopeLine: 745, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!2190 = !DISubroutineType(types: !2191)
!2191 = !{!581, !565, !819, !2146}
!2192 = !DILocalVariable(name: "image", arg: 1, scope: !2189, file: !1, line: 743, type: !565)
!2193 = !DILocation(line: 743, column: 56, scope: !2189)
!2194 = !DILocalVariable(name: "channel", arg: 2, scope: !2189, file: !1, line: 744, type: !819)
!2195 = !DILocation(line: 744, column: 21, scope: !2189)
!2196 = !DILocalVariable(name: "clut_image", arg: 3, scope: !2189, file: !1, line: 744, type: !2146)
!2197 = !DILocation(line: 744, column: 42, scope: !2189)
!2198 = !DILocalVariable(name: "clut_view", scope: !2189, file: !1, line: 749, type: !992)
!2199 = !DILocation(line: 749, column: 6, scope: !2189)
!2200 = !DILocalVariable(name: "image_view", scope: !2189, file: !1, line: 750, type: !992)
!2201 = !DILocation(line: 750, column: 6, scope: !2189)
!2202 = !DILocalVariable(name: "exception", scope: !2189, file: !1, line: 753, type: !998)
!2203 = !DILocation(line: 753, column: 6, scope: !2189)
!2204 = !DILocalVariable(name: "status", scope: !2189, file: !1, line: 756, type: !581)
!2205 = !DILocation(line: 756, column: 5, scope: !2189)
!2206 = !DILocalVariable(name: "progress", scope: !2189, file: !1, line: 759, type: !685)
!2207 = !DILocation(line: 759, column: 5, scope: !2189)
!2208 = !DILocalVariable(name: "clut_map", scope: !2189, file: !1, line: 762, type: !771)
!2209 = !DILocation(line: 762, column: 6, scope: !2189)
!2210 = !DILocalVariable(name: "i", scope: !2189, file: !1, line: 765, type: !615)
!2211 = !DILocation(line: 765, column: 5, scope: !2189)
!2212 = !DILocalVariable(name: "adjust", scope: !2189, file: !1, line: 768, type: !615)
!2213 = !DILocation(line: 768, column: 5, scope: !2189)
!2214 = !DILocalVariable(name: "y", scope: !2189, file: !1, line: 769, type: !615)
!2215 = !DILocation(line: 769, column: 5, scope: !2189)
!2216 = !DILocation(line: 773, column: 7, scope: !2217)
!2217 = distinct !DILexicalBlock(scope: !2189, file: !1, line: 773, column: 7)
!2218 = !DILocation(line: 773, column: 14, scope: !2217)
!2219 = !DILocation(line: 773, column: 20, scope: !2217)
!2220 = !DILocation(line: 773, column: 7, scope: !2189)
!2221 = !DILocation(line: 774, column: 61, scope: !2217)
!2222 = !DILocation(line: 774, column: 68, scope: !2217)
!2223 = !DILocation(line: 774, column: 12, scope: !2217)
!2224 = !DILocation(line: 774, column: 5, scope: !2217)
!2225 = !DILocation(line: 777, column: 28, scope: !2226)
!2226 = distinct !DILexicalBlock(scope: !2189, file: !1, line: 777, column: 7)
!2227 = !DILocation(line: 777, column: 7, scope: !2226)
!2228 = !DILocation(line: 777, column: 47, scope: !2226)
!2229 = !DILocation(line: 777, column: 7, scope: !2189)
!2230 = !DILocation(line: 778, column: 5, scope: !2226)
!2231 = !DILocation(line: 779, column: 25, scope: !2232)
!2232 = distinct !DILexicalBlock(scope: !2189, file: !1, line: 779, column: 7)
!2233 = !DILocation(line: 779, column: 32, scope: !2232)
!2234 = !DILocation(line: 779, column: 8, scope: !2232)
!2235 = !DILocation(line: 779, column: 44, scope: !2232)
!2236 = !DILocation(line: 779, column: 60, scope: !2232)
!2237 = !DILocation(line: 780, column: 25, scope: !2232)
!2238 = !DILocation(line: 780, column: 37, scope: !2232)
!2239 = !DILocation(line: 780, column: 8, scope: !2232)
!2240 = !DILocation(line: 780, column: 49, scope: !2232)
!2241 = !DILocation(line: 779, column: 7, scope: !2189)
!2242 = !DILocation(line: 781, column: 31, scope: !2232)
!2243 = !DILocation(line: 781, column: 12, scope: !2232)
!2244 = !DILocation(line: 781, column: 5, scope: !2232)
!2245 = !DILocation(line: 782, column: 34, scope: !2189)
!2246 = !DILocation(line: 782, column: 12, scope: !2189)
!2247 = !DILocation(line: 782, column: 11, scope: !2189)
!2248 = !DILocation(line: 784, column: 7, scope: !2249)
!2249 = distinct !DILexicalBlock(scope: !2189, file: !1, line: 784, column: 7)
!2250 = !DILocation(line: 784, column: 16, scope: !2249)
!2251 = !DILocation(line: 784, column: 7, scope: !2189)
!2252 = !DILocation(line: 785, column: 5, scope: !2253)
!2253 = distinct !DILexicalBlock(scope: !2254, file: !1, line: 785, column: 5)
!2254 = distinct !DILexicalBlock(scope: !2249, file: !1, line: 785, column: 5)
!2255 = !DILocation(line: 785, column: 5, scope: !2254)
!2256 = !DILocation(line: 790, column: 9, scope: !2189)
!2257 = !DILocation(line: 791, column: 11, scope: !2189)
!2258 = !DILocation(line: 792, column: 21, scope: !2189)
!2259 = !DILocation(line: 792, column: 33, scope: !2189)
!2260 = !DILocation(line: 792, column: 45, scope: !2189)
!2261 = !DILocation(line: 792, column: 10, scope: !2189)
!2262 = !DILocation(line: 792, column: 9, scope: !2189)
!2263 = !DILocation(line: 793, column: 15, scope: !2189)
!2264 = !DILocation(line: 793, column: 22, scope: !2189)
!2265 = !DILocation(line: 793, column: 12, scope: !2189)
!2266 = !DILocation(line: 794, column: 39, scope: !2189)
!2267 = !DILocation(line: 794, column: 50, scope: !2189)
!2268 = !DILocation(line: 794, column: 13, scope: !2189)
!2269 = !DILocation(line: 794, column: 12, scope: !2189)
!2270 = !DILocation(line: 795, column: 9, scope: !2271)
!2271 = distinct !DILexicalBlock(scope: !2189, file: !1, line: 795, column: 3)
!2272 = !DILocation(line: 795, column: 8, scope: !2271)
!2273 = !DILocation(line: 795, column: 13, scope: !2274)
!2274 = distinct !DILexicalBlock(scope: !2271, file: !1, line: 795, column: 3)
!2275 = !DILocation(line: 795, column: 15, scope: !2274)
!2276 = !DILocation(line: 795, column: 3, scope: !2271)
!2277 = !DILocation(line: 797, column: 26, scope: !2278)
!2278 = distinct !DILexicalBlock(scope: !2274, file: !1, line: 796, column: 3)
!2279 = !DILocation(line: 797, column: 37, scope: !2278)
!2280 = !DILocation(line: 797, column: 46, scope: !2278)
!2281 = !DILocation(line: 797, column: 45, scope: !2278)
!2282 = !DILocation(line: 797, column: 5, scope: !2278)
!2283 = !DILocation(line: 798, column: 41, scope: !2278)
!2284 = !DILocation(line: 798, column: 52, scope: !2278)
!2285 = !DILocation(line: 799, column: 46, scope: !2278)
!2286 = !DILocation(line: 799, column: 45, scope: !2278)
!2287 = !DILocation(line: 799, column: 49, scope: !2278)
!2288 = !DILocation(line: 799, column: 61, scope: !2278)
!2289 = !DILocation(line: 799, column: 69, scope: !2278)
!2290 = !DILocation(line: 799, column: 68, scope: !2278)
!2291 = !DILocation(line: 799, column: 48, scope: !2278)
!2292 = !DILocation(line: 799, column: 47, scope: !2278)
!2293 = !DILocation(line: 800, column: 20, scope: !2278)
!2294 = !DILocation(line: 800, column: 19, scope: !2278)
!2295 = !DILocation(line: 800, column: 23, scope: !2278)
!2296 = !DILocation(line: 800, column: 35, scope: !2278)
!2297 = !DILocation(line: 800, column: 40, scope: !2278)
!2298 = !DILocation(line: 800, column: 39, scope: !2278)
!2299 = !DILocation(line: 800, column: 22, scope: !2278)
!2300 = !DILocation(line: 800, column: 21, scope: !2278)
!2301 = !DILocation(line: 800, column: 48, scope: !2278)
!2302 = !DILocation(line: 800, column: 57, scope: !2278)
!2303 = !DILocation(line: 800, column: 56, scope: !2278)
!2304 = !DILocation(line: 800, column: 59, scope: !2278)
!2305 = !DILocation(line: 798, column: 12, scope: !2278)
!2306 = !DILocation(line: 801, column: 3, scope: !2278)
!2307 = !DILocation(line: 795, column: 37, scope: !2274)
!2308 = !DILocation(line: 795, column: 3, scope: !2274)
!2309 = distinct !{!2309, !2276, !2310}
!2310 = !DILocation(line: 801, column: 3, scope: !2271)
!2311 = !DILocation(line: 802, column: 30, scope: !2189)
!2312 = !DILocation(line: 802, column: 13, scope: !2189)
!2313 = !DILocation(line: 802, column: 12, scope: !2189)
!2314 = !DILocation(line: 803, column: 40, scope: !2189)
!2315 = !DILocation(line: 803, column: 46, scope: !2189)
!2316 = !DILocation(line: 803, column: 14, scope: !2189)
!2317 = !DILocation(line: 803, column: 13, scope: !2189)
!2318 = !DILocation(line: 808, column: 9, scope: !2319)
!2319 = distinct !DILexicalBlock(scope: !2189, file: !1, line: 808, column: 3)
!2320 = !DILocation(line: 808, column: 8, scope: !2319)
!2321 = !DILocation(line: 808, column: 13, scope: !2322)
!2322 = distinct !DILexicalBlock(scope: !2319, file: !1, line: 808, column: 3)
!2323 = !DILocation(line: 808, column: 27, scope: !2322)
!2324 = !DILocation(line: 808, column: 34, scope: !2322)
!2325 = !DILocation(line: 808, column: 15, scope: !2322)
!2326 = !DILocation(line: 808, column: 3, scope: !2319)
!2327 = !DILocalVariable(name: "pixel", scope: !2328, file: !1, line: 811, type: !772)
!2328 = distinct !DILexicalBlock(scope: !2322, file: !1, line: 809, column: 3)
!2329 = !DILocation(line: 811, column: 7, scope: !2328)
!2330 = !DILocalVariable(name: "indexes", scope: !2328, file: !1, line: 814, type: !1141)
!2331 = !DILocation(line: 814, column: 17, scope: !2328)
!2332 = !DILocalVariable(name: "q", scope: !2328, file: !1, line: 817, type: !1144)
!2333 = !DILocation(line: 817, column: 17, scope: !2328)
!2334 = !DILocalVariable(name: "x", scope: !2328, file: !1, line: 820, type: !615)
!2335 = !DILocation(line: 820, column: 7, scope: !2328)
!2336 = !DILocation(line: 822, column: 9, scope: !2337)
!2337 = distinct !DILexicalBlock(scope: !2328, file: !1, line: 822, column: 9)
!2338 = !DILocation(line: 822, column: 16, scope: !2337)
!2339 = !DILocation(line: 822, column: 9, scope: !2328)
!2340 = !DILocation(line: 823, column: 7, scope: !2337)
!2341 = !DILocation(line: 824, column: 35, scope: !2328)
!2342 = !DILocation(line: 824, column: 48, scope: !2328)
!2343 = !DILocation(line: 824, column: 50, scope: !2328)
!2344 = !DILocation(line: 824, column: 57, scope: !2328)
!2345 = !DILocation(line: 824, column: 67, scope: !2328)
!2346 = !DILocation(line: 824, column: 7, scope: !2328)
!2347 = !DILocation(line: 824, column: 6, scope: !2328)
!2348 = !DILocation(line: 825, column: 9, scope: !2349)
!2349 = distinct !DILexicalBlock(scope: !2328, file: !1, line: 825, column: 9)
!2350 = !DILocation(line: 825, column: 11, scope: !2349)
!2351 = !DILocation(line: 825, column: 9, scope: !2328)
!2352 = !DILocation(line: 827, column: 15, scope: !2353)
!2353 = distinct !DILexicalBlock(scope: !2349, file: !1, line: 826, column: 7)
!2354 = !DILocation(line: 828, column: 9, scope: !2353)
!2355 = !DILocation(line: 830, column: 45, scope: !2328)
!2356 = !DILocation(line: 830, column: 13, scope: !2328)
!2357 = !DILocation(line: 830, column: 12, scope: !2328)
!2358 = !DILocation(line: 831, column: 26, scope: !2328)
!2359 = !DILocation(line: 831, column: 5, scope: !2328)
!2360 = !DILocation(line: 832, column: 11, scope: !2361)
!2361 = distinct !DILexicalBlock(scope: !2328, file: !1, line: 832, column: 5)
!2362 = !DILocation(line: 832, column: 10, scope: !2361)
!2363 = !DILocation(line: 832, column: 15, scope: !2364)
!2364 = distinct !DILexicalBlock(scope: !2361, file: !1, line: 832, column: 5)
!2365 = !DILocation(line: 832, column: 29, scope: !2364)
!2366 = !DILocation(line: 832, column: 36, scope: !2364)
!2367 = !DILocation(line: 832, column: 17, scope: !2364)
!2368 = !DILocation(line: 832, column: 5, scope: !2361)
!2369 = !DILocation(line: 834, column: 28, scope: !2370)
!2370 = distinct !DILexicalBlock(scope: !2364, file: !1, line: 833, column: 5)
!2371 = !DILocation(line: 834, column: 34, scope: !2370)
!2372 = !DILocation(line: 834, column: 36, scope: !2370)
!2373 = !DILocation(line: 834, column: 44, scope: !2370)
!2374 = !DILocation(line: 834, column: 43, scope: !2370)
!2375 = !DILocation(line: 834, column: 7, scope: !2370)
!2376 = !DILocation(line: 835, column: 12, scope: !2377)
!2377 = distinct !DILexicalBlock(scope: !2370, file: !1, line: 835, column: 11)
!2378 = !DILocation(line: 835, column: 20, scope: !2377)
!2379 = !DILocation(line: 835, column: 34, scope: !2377)
!2380 = !DILocation(line: 835, column: 11, scope: !2370)
!2381 = !DILocation(line: 836, column: 9, scope: !2377)
!2382 = !DILocation(line: 838, column: 12, scope: !2383)
!2383 = distinct !DILexicalBlock(scope: !2370, file: !1, line: 838, column: 11)
!2384 = !DILocation(line: 838, column: 20, scope: !2383)
!2385 = !DILocation(line: 838, column: 36, scope: !2383)
!2386 = !DILocation(line: 838, column: 11, scope: !2370)
!2387 = !DILocation(line: 839, column: 9, scope: !2383)
!2388 = !DILocation(line: 841, column: 12, scope: !2389)
!2389 = distinct !DILexicalBlock(scope: !2370, file: !1, line: 841, column: 11)
!2390 = !DILocation(line: 841, column: 20, scope: !2389)
!2391 = !DILocation(line: 841, column: 35, scope: !2389)
!2392 = !DILocation(line: 841, column: 11, scope: !2370)
!2393 = !DILocation(line: 842, column: 9, scope: !2389)
!2394 = !DILocation(line: 844, column: 12, scope: !2395)
!2395 = distinct !DILexicalBlock(scope: !2370, file: !1, line: 844, column: 11)
!2396 = !DILocation(line: 844, column: 20, scope: !2395)
!2397 = !DILocation(line: 844, column: 38, scope: !2395)
!2398 = !DILocation(line: 844, column: 11, scope: !2370)
!2399 = !DILocation(line: 846, column: 15, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !2401, file: !1, line: 846, column: 15)
!2401 = distinct !DILexicalBlock(scope: !2395, file: !1, line: 845, column: 9)
!2402 = !DILocation(line: 846, column: 27, scope: !2400)
!2403 = !DILocation(line: 846, column: 33, scope: !2400)
!2404 = !DILocation(line: 846, column: 15, scope: !2401)
!2405 = !DILocation(line: 847, column: 13, scope: !2400)
!2406 = !DILocation(line: 850, column: 17, scope: !2407)
!2407 = distinct !DILexicalBlock(scope: !2400, file: !1, line: 850, column: 17)
!2408 = !DILocation(line: 850, column: 24, scope: !2407)
!2409 = !DILocation(line: 850, column: 30, scope: !2407)
!2410 = !DILocation(line: 850, column: 17, scope: !2400)
!2411 = !DILocation(line: 851, column: 15, scope: !2407)
!2412 = !DILocation(line: 854, column: 15, scope: !2407)
!2413 = !DILocation(line: 856, column: 9, scope: !2401)
!2414 = !DILocation(line: 857, column: 13, scope: !2415)
!2415 = distinct !DILexicalBlock(scope: !2370, file: !1, line: 857, column: 11)
!2416 = !DILocation(line: 857, column: 21, scope: !2415)
!2417 = !DILocation(line: 857, column: 37, scope: !2415)
!2418 = !DILocation(line: 857, column: 43, scope: !2415)
!2419 = !DILocation(line: 858, column: 12, scope: !2415)
!2420 = !DILocation(line: 858, column: 19, scope: !2415)
!2421 = !DILocation(line: 858, column: 30, scope: !2415)
!2422 = !DILocation(line: 857, column: 11, scope: !2370)
!2423 = !DILocation(line: 859, column: 9, scope: !2424)
!2424 = distinct !DILexicalBlock(scope: !2425, file: !1, line: 859, column: 9)
!2425 = distinct !DILexicalBlock(scope: !2415, file: !1, line: 859, column: 9)
!2426 = !DILocation(line: 859, column: 9, scope: !2425)
!2427 = !DILocation(line: 861, column: 8, scope: !2370)
!2428 = !DILocation(line: 862, column: 5, scope: !2370)
!2429 = !DILocation(line: 832, column: 46, scope: !2364)
!2430 = !DILocation(line: 832, column: 5, scope: !2364)
!2431 = distinct !{!2431, !2368, !2432}
!2432 = !DILocation(line: 862, column: 5, scope: !2361)
!2433 = !DILocation(line: 863, column: 38, scope: !2434)
!2434 = distinct !DILexicalBlock(scope: !2328, file: !1, line: 863, column: 9)
!2435 = !DILocation(line: 863, column: 49, scope: !2434)
!2436 = !DILocation(line: 863, column: 9, scope: !2434)
!2437 = !DILocation(line: 863, column: 60, scope: !2434)
!2438 = !DILocation(line: 863, column: 9, scope: !2328)
!2439 = !DILocation(line: 864, column: 13, scope: !2434)
!2440 = !DILocation(line: 864, column: 7, scope: !2434)
!2441 = !DILocation(line: 865, column: 9, scope: !2442)
!2442 = distinct !DILexicalBlock(scope: !2328, file: !1, line: 865, column: 9)
!2443 = !DILocation(line: 865, column: 16, scope: !2442)
!2444 = !DILocation(line: 865, column: 33, scope: !2442)
!2445 = !DILocation(line: 865, column: 9, scope: !2328)
!2446 = !DILocalVariable(name: "proceed", scope: !2447, file: !1, line: 868, type: !581)
!2447 = distinct !DILexicalBlock(scope: !2442, file: !1, line: 866, column: 7)
!2448 = !DILocation(line: 868, column: 11, scope: !2447)
!2449 = !DILocation(line: 873, column: 34, scope: !2447)
!2450 = !DILocation(line: 873, column: 61, scope: !2447)
!2451 = !DILocation(line: 873, column: 64, scope: !2447)
!2452 = !DILocation(line: 873, column: 71, scope: !2447)
!2453 = !DILocation(line: 873, column: 17, scope: !2447)
!2454 = !DILocation(line: 873, column: 16, scope: !2447)
!2455 = !DILocation(line: 874, column: 13, scope: !2456)
!2456 = distinct !DILexicalBlock(scope: !2447, file: !1, line: 874, column: 13)
!2457 = !DILocation(line: 874, column: 21, scope: !2456)
!2458 = !DILocation(line: 874, column: 13, scope: !2447)
!2459 = !DILocation(line: 875, column: 17, scope: !2456)
!2460 = !DILocation(line: 875, column: 11, scope: !2456)
!2461 = !DILocation(line: 876, column: 7, scope: !2447)
!2462 = !DILocation(line: 877, column: 3, scope: !2328)
!2463 = !DILocation(line: 808, column: 41, scope: !2322)
!2464 = !DILocation(line: 808, column: 3, scope: !2322)
!2465 = distinct !{!2465, !2326, !2466}
!2466 = !DILocation(line: 877, column: 3, scope: !2319)
!2467 = !DILocation(line: 878, column: 31, scope: !2189)
!2468 = !DILocation(line: 878, column: 14, scope: !2189)
!2469 = !DILocation(line: 878, column: 13, scope: !2189)
!2470 = !DILocation(line: 879, column: 57, scope: !2189)
!2471 = !DILocation(line: 879, column: 34, scope: !2189)
!2472 = !DILocation(line: 879, column: 12, scope: !2189)
!2473 = !DILocation(line: 879, column: 11, scope: !2189)
!2474 = !DILocation(line: 880, column: 8, scope: !2475)
!2475 = distinct !DILexicalBlock(scope: !2189, file: !1, line: 880, column: 7)
!2476 = !DILocation(line: 880, column: 20, scope: !2475)
!2477 = !DILocation(line: 880, column: 26, scope: !2475)
!2478 = !DILocation(line: 880, column: 42, scope: !2475)
!2479 = !DILocation(line: 880, column: 47, scope: !2475)
!2480 = !DILocation(line: 880, column: 55, scope: !2475)
!2481 = !DILocation(line: 880, column: 73, scope: !2475)
!2482 = !DILocation(line: 880, column: 7, scope: !2189)
!2483 = !DILocation(line: 881, column: 33, scope: !2475)
!2484 = !DILocation(line: 881, column: 12, scope: !2475)
!2485 = !DILocation(line: 881, column: 5, scope: !2475)
!2486 = !DILocation(line: 882, column: 10, scope: !2189)
!2487 = !DILocation(line: 882, column: 3, scope: !2189)
!2488 = !DILocation(line: 883, column: 1, scope: !2189)
!2489 = distinct !DISubprogram(name: "IsGrayColorspace", scope: !2490, file: !2490, line: 85, type: !2491, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!2490 = !DIFile(filename: "./magick/colorspace-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2491 = !DISubroutineType(types: !2492)
!2492 = !{!581, !2493}
!2493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !572)
!2494 = !DILocalVariable(name: "colorspace", arg: 1, scope: !2489, file: !2490, line: 86, type: !2493)
!2495 = !DILocation(line: 86, column: 24, scope: !2489)
!2496 = !DILocation(line: 88, column: 8, scope: !2497)
!2497 = distinct !DILexicalBlock(scope: !2489, file: !2490, line: 88, column: 7)
!2498 = !DILocation(line: 88, column: 19, scope: !2497)
!2499 = !DILocation(line: 88, column: 38, scope: !2497)
!2500 = !DILocation(line: 88, column: 42, scope: !2497)
!2501 = !DILocation(line: 88, column: 53, scope: !2497)
!2502 = !DILocation(line: 88, column: 78, scope: !2497)
!2503 = !DILocation(line: 89, column: 8, scope: !2497)
!2504 = !DILocation(line: 89, column: 19, scope: !2497)
!2505 = !DILocation(line: 88, column: 7, scope: !2489)
!2506 = !DILocation(line: 90, column: 5, scope: !2497)
!2507 = !DILocation(line: 91, column: 3, scope: !2489)
!2508 = !DILocation(line: 92, column: 1, scope: !2489)
!2509 = distinct !DISubprogram(name: "SetMagickPixelPacket", scope: !2510, file: !2510, line: 92, type: !2511, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!2510 = !DIFile(filename: "./magick/pixel-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2511 = !DISubroutineType(types: !2512)
!2512 = !{null, !2146, !798, !787, !771}
!2513 = !DILocalVariable(name: "image", arg: 1, scope: !2509, file: !2510, line: 92, type: !2146)
!2514 = !DILocation(line: 92, column: 54, scope: !2509)
!2515 = !DILocalVariable(name: "color", arg: 2, scope: !2509, file: !2510, line: 93, type: !798)
!2516 = !DILocation(line: 93, column: 22, scope: !2509)
!2517 = !DILocalVariable(name: "index", arg: 3, scope: !2509, file: !2510, line: 93, type: !787)
!2518 = !DILocation(line: 93, column: 47, scope: !2509)
!2519 = !DILocalVariable(name: "pixel", arg: 4, scope: !2509, file: !2510, line: 93, type: !771)
!2520 = !DILocation(line: 93, column: 72, scope: !2509)
!2521 = !DILocation(line: 95, column: 31, scope: !2509)
!2522 = !DILocation(line: 95, column: 14, scope: !2509)
!2523 = !DILocation(line: 95, column: 3, scope: !2509)
!2524 = !DILocation(line: 95, column: 10, scope: !2509)
!2525 = !DILocation(line: 95, column: 13, scope: !2509)
!2526 = !DILocation(line: 96, column: 33, scope: !2509)
!2527 = !DILocation(line: 96, column: 16, scope: !2509)
!2528 = !DILocation(line: 96, column: 3, scope: !2509)
!2529 = !DILocation(line: 96, column: 10, scope: !2509)
!2530 = !DILocation(line: 96, column: 15, scope: !2509)
!2531 = !DILocation(line: 97, column: 32, scope: !2509)
!2532 = !DILocation(line: 97, column: 15, scope: !2509)
!2533 = !DILocation(line: 97, column: 3, scope: !2509)
!2534 = !DILocation(line: 97, column: 10, scope: !2509)
!2535 = !DILocation(line: 97, column: 14, scope: !2509)
!2536 = !DILocation(line: 98, column: 35, scope: !2509)
!2537 = !DILocation(line: 98, column: 18, scope: !2509)
!2538 = !DILocation(line: 98, column: 3, scope: !2509)
!2539 = !DILocation(line: 98, column: 10, scope: !2509)
!2540 = !DILocation(line: 98, column: 17, scope: !2509)
!2541 = !DILocation(line: 99, column: 8, scope: !2542)
!2542 = distinct !DILexicalBlock(scope: !2509, file: !2510, line: 99, column: 7)
!2543 = !DILocation(line: 99, column: 15, scope: !2542)
!2544 = !DILocation(line: 99, column: 26, scope: !2542)
!2545 = !DILocation(line: 99, column: 45, scope: !2542)
!2546 = !DILocation(line: 100, column: 8, scope: !2542)
!2547 = !DILocation(line: 100, column: 14, scope: !2542)
!2548 = !DILocation(line: 99, column: 7, scope: !2509)
!2549 = !DILocation(line: 101, column: 35, scope: !2542)
!2550 = !DILocation(line: 101, column: 18, scope: !2542)
!2551 = !DILocation(line: 101, column: 5, scope: !2542)
!2552 = !DILocation(line: 101, column: 12, scope: !2542)
!2553 = !DILocation(line: 101, column: 17, scope: !2542)
!2554 = !DILocation(line: 102, column: 1, scope: !2509)
!2555 = distinct !DISubprogram(name: "MagickPixelIntensityToQuantum", scope: !2556, file: !2556, line: 95, type: !2557, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!2556 = !DIFile(filename: "./magick/color-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2557 = !DISubroutineType(types: !2558)
!2558 = !{!544, !2559}
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 64)
!2560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !772)
!2561 = !DILocalVariable(name: "pixel", arg: 1, scope: !2555, file: !2556, line: 96, type: !2559)
!2562 = !DILocation(line: 96, column: 28, scope: !2555)
!2563 = !DILocation(line: 98, column: 7, scope: !2564)
!2564 = distinct !DILexicalBlock(scope: !2555, file: !2556, line: 98, column: 7)
!2565 = !DILocation(line: 98, column: 14, scope: !2564)
!2566 = !DILocation(line: 98, column: 25, scope: !2564)
!2567 = !DILocation(line: 98, column: 7, scope: !2555)
!2568 = !DILocation(line: 99, column: 27, scope: !2564)
!2569 = !DILocation(line: 99, column: 34, scope: !2564)
!2570 = !DILocation(line: 99, column: 12, scope: !2564)
!2571 = !DILocation(line: 99, column: 5, scope: !2564)
!2572 = !DILocation(line: 100, column: 34, scope: !2555)
!2573 = !DILocation(line: 100, column: 41, scope: !2555)
!2574 = !DILocation(line: 100, column: 33, scope: !2555)
!2575 = !DILocation(line: 100, column: 54, scope: !2555)
!2576 = !DILocation(line: 100, column: 61, scope: !2555)
!2577 = !DILocation(line: 100, column: 53, scope: !2555)
!2578 = !DILocation(line: 100, column: 44, scope: !2555)
!2579 = !DILocation(line: 101, column: 14, scope: !2555)
!2580 = !DILocation(line: 101, column: 21, scope: !2555)
!2581 = !DILocation(line: 101, column: 13, scope: !2555)
!2582 = !DILocation(line: 100, column: 66, scope: !2555)
!2583 = !DILocation(line: 100, column: 25, scope: !2555)
!2584 = !DILocation(line: 100, column: 10, scope: !2555)
!2585 = !DILocation(line: 100, column: 3, scope: !2555)
!2586 = !DILocation(line: 102, column: 1, scope: !2555)
!2587 = distinct !DISubprogram(name: "MagickPixelIntensity", scope: !2556, file: !2556, line: 87, type: !2588, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!2588 = !DISubroutineType(types: !2589)
!2589 = !{!769, !2559}
!2590 = !DILocalVariable(name: "pixel", arg: 1, scope: !2587, file: !2556, line: 88, type: !2559)
!2591 = !DILocation(line: 88, column: 28, scope: !2587)
!2592 = !DILocation(line: 90, column: 7, scope: !2593)
!2593 = distinct !DILexicalBlock(scope: !2587, file: !2556, line: 90, column: 7)
!2594 = !DILocation(line: 90, column: 14, scope: !2593)
!2595 = !DILocation(line: 90, column: 25, scope: !2593)
!2596 = !DILocation(line: 90, column: 7, scope: !2587)
!2597 = !DILocation(line: 91, column: 12, scope: !2593)
!2598 = !DILocation(line: 91, column: 19, scope: !2593)
!2599 = !DILocation(line: 91, column: 5, scope: !2593)
!2600 = !DILocation(line: 92, column: 19, scope: !2587)
!2601 = !DILocation(line: 92, column: 26, scope: !2587)
!2602 = !DILocation(line: 92, column: 18, scope: !2587)
!2603 = !DILocation(line: 92, column: 39, scope: !2587)
!2604 = !DILocation(line: 92, column: 46, scope: !2587)
!2605 = !DILocation(line: 92, column: 38, scope: !2587)
!2606 = !DILocation(line: 92, column: 29, scope: !2587)
!2607 = !DILocation(line: 92, column: 61, scope: !2587)
!2608 = !DILocation(line: 92, column: 68, scope: !2587)
!2609 = !DILocation(line: 92, column: 60, scope: !2587)
!2610 = !DILocation(line: 92, column: 51, scope: !2587)
!2611 = !DILocation(line: 92, column: 9, scope: !2587)
!2612 = !DILocation(line: 92, column: 3, scope: !2587)
!2613 = !DILocation(line: 93, column: 1, scope: !2587)
!2614 = distinct !DISubprogram(name: "ContrastImage", scope: !1, file: !1, line: 940, type: !2615, scopeLine: 942, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!2615 = !DISubroutineType(types: !2616)
!2616 = !{!581, !565, !2617}
!2617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !581)
!2618 = !DILocalVariable(name: "image", arg: 1, scope: !2614, file: !1, line: 940, type: !565)
!2619 = !DILocation(line: 940, column: 53, scope: !2614)
!2620 = !DILocalVariable(name: "sharpen", arg: 2, scope: !2614, file: !1, line: 941, type: !2617)
!2621 = !DILocation(line: 941, column: 27, scope: !2614)
!2622 = !DILocalVariable(name: "image_view", scope: !2614, file: !1, line: 946, type: !992)
!2623 = !DILocation(line: 946, column: 6, scope: !2614)
!2624 = !DILocalVariable(name: "exception", scope: !2614, file: !1, line: 949, type: !998)
!2625 = !DILocation(line: 949, column: 6, scope: !2614)
!2626 = !DILocalVariable(name: "sign", scope: !2614, file: !1, line: 952, type: !468)
!2627 = !DILocation(line: 952, column: 5, scope: !2614)
!2628 = !DILocalVariable(name: "status", scope: !2614, file: !1, line: 955, type: !581)
!2629 = !DILocation(line: 955, column: 5, scope: !2614)
!2630 = !DILocalVariable(name: "progress", scope: !2614, file: !1, line: 958, type: !685)
!2631 = !DILocation(line: 958, column: 5, scope: !2614)
!2632 = !DILocalVariable(name: "i", scope: !2614, file: !1, line: 961, type: !615)
!2633 = !DILocation(line: 961, column: 5, scope: !2614)
!2634 = !DILocalVariable(name: "y", scope: !2614, file: !1, line: 964, type: !615)
!2635 = !DILocation(line: 964, column: 5, scope: !2614)
!2636 = !DILocation(line: 967, column: 7, scope: !2637)
!2637 = distinct !DILexicalBlock(scope: !2614, file: !1, line: 967, column: 7)
!2638 = !DILocation(line: 967, column: 14, scope: !2637)
!2639 = !DILocation(line: 967, column: 20, scope: !2637)
!2640 = !DILocation(line: 967, column: 7, scope: !2614)
!2641 = !DILocation(line: 968, column: 61, scope: !2637)
!2642 = !DILocation(line: 968, column: 68, scope: !2637)
!2643 = !DILocation(line: 968, column: 12, scope: !2637)
!2644 = !DILocation(line: 968, column: 5, scope: !2637)
!2645 = !DILocation(line: 969, column: 8, scope: !2614)
!2646 = !DILocation(line: 969, column: 16, scope: !2614)
!2647 = !DILocation(line: 969, column: 7, scope: !2614)
!2648 = !DILocation(line: 970, column: 7, scope: !2649)
!2649 = distinct !DILexicalBlock(scope: !2614, file: !1, line: 970, column: 7)
!2650 = !DILocation(line: 970, column: 14, scope: !2649)
!2651 = !DILocation(line: 970, column: 28, scope: !2649)
!2652 = !DILocation(line: 970, column: 7, scope: !2614)
!2653 = !DILocation(line: 975, column: 13, scope: !2654)
!2654 = distinct !DILexicalBlock(scope: !2655, file: !1, line: 975, column: 7)
!2655 = distinct !DILexicalBlock(scope: !2649, file: !1, line: 971, column: 5)
!2656 = !DILocation(line: 975, column: 12, scope: !2654)
!2657 = !DILocation(line: 975, column: 17, scope: !2658)
!2658 = distinct !DILexicalBlock(scope: !2654, file: !1, line: 975, column: 7)
!2659 = !DILocation(line: 975, column: 31, scope: !2658)
!2660 = !DILocation(line: 975, column: 38, scope: !2658)
!2661 = !DILocation(line: 975, column: 19, scope: !2658)
!2662 = !DILocation(line: 975, column: 7, scope: !2654)
!2663 = !DILocation(line: 976, column: 18, scope: !2658)
!2664 = !DILocation(line: 976, column: 24, scope: !2658)
!2665 = !DILocation(line: 976, column: 31, scope: !2658)
!2666 = !DILocation(line: 976, column: 40, scope: !2658)
!2667 = !DILocation(line: 976, column: 43, scope: !2658)
!2668 = !DILocation(line: 976, column: 48, scope: !2658)
!2669 = !DILocation(line: 976, column: 55, scope: !2658)
!2670 = !DILocation(line: 976, column: 64, scope: !2658)
!2671 = !DILocation(line: 976, column: 67, scope: !2658)
!2672 = !DILocation(line: 977, column: 12, scope: !2658)
!2673 = !DILocation(line: 977, column: 19, scope: !2658)
!2674 = !DILocation(line: 977, column: 28, scope: !2658)
!2675 = !DILocation(line: 977, column: 31, scope: !2658)
!2676 = !DILocation(line: 976, column: 9, scope: !2658)
!2677 = !DILocation(line: 975, column: 47, scope: !2658)
!2678 = !DILocation(line: 975, column: 7, scope: !2658)
!2679 = distinct !{!2679, !2662, !2680}
!2680 = !DILocation(line: 977, column: 35, scope: !2654)
!2681 = !DILocation(line: 978, column: 5, scope: !2655)
!2682 = !DILocation(line: 983, column: 36, scope: !2614)
!2683 = !DILocation(line: 983, column: 43, scope: !2614)
!2684 = !DILocation(line: 983, column: 53, scope: !2614)
!2685 = !DILocation(line: 983, column: 60, scope: !2614)
!2686 = !DILocation(line: 983, column: 12, scope: !2614)
!2687 = !DILocation(line: 983, column: 10, scope: !2614)
!2688 = !DILocation(line: 984, column: 7, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2614, file: !1, line: 984, column: 7)
!2690 = !DILocation(line: 984, column: 14, scope: !2689)
!2691 = !DILocation(line: 984, column: 7, scope: !2614)
!2692 = !DILocation(line: 985, column: 12, scope: !2689)
!2693 = !DILocation(line: 985, column: 5, scope: !2689)
!2694 = !DILocation(line: 987, column: 9, scope: !2614)
!2695 = !DILocation(line: 988, column: 11, scope: !2614)
!2696 = !DILocation(line: 989, column: 15, scope: !2614)
!2697 = !DILocation(line: 989, column: 22, scope: !2614)
!2698 = !DILocation(line: 989, column: 12, scope: !2614)
!2699 = !DILocation(line: 990, column: 40, scope: !2614)
!2700 = !DILocation(line: 990, column: 46, scope: !2614)
!2701 = !DILocation(line: 990, column: 14, scope: !2614)
!2702 = !DILocation(line: 990, column: 13, scope: !2614)
!2703 = !DILocation(line: 995, column: 9, scope: !2704)
!2704 = distinct !DILexicalBlock(scope: !2614, file: !1, line: 995, column: 3)
!2705 = !DILocation(line: 995, column: 8, scope: !2704)
!2706 = !DILocation(line: 995, column: 13, scope: !2707)
!2707 = distinct !DILexicalBlock(scope: !2704, file: !1, line: 995, column: 3)
!2708 = !DILocation(line: 995, column: 27, scope: !2707)
!2709 = !DILocation(line: 995, column: 34, scope: !2707)
!2710 = !DILocation(line: 995, column: 15, scope: !2707)
!2711 = !DILocation(line: 995, column: 3, scope: !2704)
!2712 = !DILocalVariable(name: "blue", scope: !2713, file: !1, line: 998, type: !544)
!2713 = distinct !DILexicalBlock(scope: !2707, file: !1, line: 996, column: 3)
!2714 = !DILocation(line: 998, column: 7, scope: !2713)
!2715 = !DILocalVariable(name: "green", scope: !2713, file: !1, line: 999, type: !544)
!2716 = !DILocation(line: 999, column: 7, scope: !2713)
!2717 = !DILocalVariable(name: "red", scope: !2713, file: !1, line: 1000, type: !544)
!2718 = !DILocation(line: 1000, column: 7, scope: !2713)
!2719 = !DILocalVariable(name: "q", scope: !2713, file: !1, line: 1003, type: !1144)
!2720 = !DILocation(line: 1003, column: 17, scope: !2713)
!2721 = !DILocalVariable(name: "x", scope: !2713, file: !1, line: 1006, type: !615)
!2722 = !DILocation(line: 1006, column: 7, scope: !2713)
!2723 = !DILocation(line: 1008, column: 9, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !2713, file: !1, line: 1008, column: 9)
!2725 = !DILocation(line: 1008, column: 16, scope: !2724)
!2726 = !DILocation(line: 1008, column: 9, scope: !2713)
!2727 = !DILocation(line: 1009, column: 7, scope: !2724)
!2728 = !DILocation(line: 1010, column: 35, scope: !2713)
!2729 = !DILocation(line: 1010, column: 48, scope: !2713)
!2730 = !DILocation(line: 1010, column: 50, scope: !2713)
!2731 = !DILocation(line: 1010, column: 57, scope: !2713)
!2732 = !DILocation(line: 1010, column: 67, scope: !2713)
!2733 = !DILocation(line: 1010, column: 7, scope: !2713)
!2734 = !DILocation(line: 1010, column: 6, scope: !2713)
!2735 = !DILocation(line: 1011, column: 9, scope: !2736)
!2736 = distinct !DILexicalBlock(scope: !2713, file: !1, line: 1011, column: 9)
!2737 = !DILocation(line: 1011, column: 11, scope: !2736)
!2738 = !DILocation(line: 1011, column: 9, scope: !2713)
!2739 = !DILocation(line: 1013, column: 15, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2736, file: !1, line: 1012, column: 7)
!2741 = !DILocation(line: 1014, column: 9, scope: !2740)
!2742 = !DILocation(line: 1016, column: 11, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !2713, file: !1, line: 1016, column: 5)
!2744 = !DILocation(line: 1016, column: 10, scope: !2743)
!2745 = !DILocation(line: 1016, column: 15, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2743, file: !1, line: 1016, column: 5)
!2747 = !DILocation(line: 1016, column: 29, scope: !2746)
!2748 = !DILocation(line: 1016, column: 36, scope: !2746)
!2749 = !DILocation(line: 1016, column: 17, scope: !2746)
!2750 = !DILocation(line: 1016, column: 5, scope: !2743)
!2751 = !DILocation(line: 1018, column: 11, scope: !2752)
!2752 = distinct !DILexicalBlock(scope: !2746, file: !1, line: 1017, column: 5)
!2753 = !DILocation(line: 1018, column: 10, scope: !2752)
!2754 = !DILocation(line: 1019, column: 13, scope: !2752)
!2755 = !DILocation(line: 1019, column: 12, scope: !2752)
!2756 = !DILocation(line: 1020, column: 12, scope: !2752)
!2757 = !DILocation(line: 1020, column: 11, scope: !2752)
!2758 = !DILocation(line: 1021, column: 16, scope: !2752)
!2759 = !DILocation(line: 1021, column: 7, scope: !2752)
!2760 = !DILocation(line: 1022, column: 7, scope: !2752)
!2761 = !DILocation(line: 1023, column: 7, scope: !2752)
!2762 = !DILocation(line: 1024, column: 7, scope: !2752)
!2763 = !DILocation(line: 1025, column: 8, scope: !2752)
!2764 = !DILocation(line: 1026, column: 5, scope: !2752)
!2765 = !DILocation(line: 1016, column: 46, scope: !2746)
!2766 = !DILocation(line: 1016, column: 5, scope: !2746)
!2767 = distinct !{!2767, !2750, !2768}
!2768 = !DILocation(line: 1026, column: 5, scope: !2743)
!2769 = !DILocation(line: 1027, column: 38, scope: !2770)
!2770 = distinct !DILexicalBlock(scope: !2713, file: !1, line: 1027, column: 9)
!2771 = !DILocation(line: 1027, column: 49, scope: !2770)
!2772 = !DILocation(line: 1027, column: 9, scope: !2770)
!2773 = !DILocation(line: 1027, column: 60, scope: !2770)
!2774 = !DILocation(line: 1027, column: 9, scope: !2713)
!2775 = !DILocation(line: 1028, column: 13, scope: !2770)
!2776 = !DILocation(line: 1028, column: 7, scope: !2770)
!2777 = !DILocation(line: 1029, column: 9, scope: !2778)
!2778 = distinct !DILexicalBlock(scope: !2713, file: !1, line: 1029, column: 9)
!2779 = !DILocation(line: 1029, column: 16, scope: !2778)
!2780 = !DILocation(line: 1029, column: 33, scope: !2778)
!2781 = !DILocation(line: 1029, column: 9, scope: !2713)
!2782 = !DILocalVariable(name: "proceed", scope: !2783, file: !1, line: 1032, type: !581)
!2783 = distinct !DILexicalBlock(scope: !2778, file: !1, line: 1030, column: 7)
!2784 = !DILocation(line: 1032, column: 11, scope: !2783)
!2785 = !DILocation(line: 1037, column: 34, scope: !2783)
!2786 = !DILocation(line: 1037, column: 65, scope: !2783)
!2787 = !DILocation(line: 1037, column: 68, scope: !2783)
!2788 = !DILocation(line: 1037, column: 75, scope: !2783)
!2789 = !DILocation(line: 1037, column: 17, scope: !2783)
!2790 = !DILocation(line: 1037, column: 16, scope: !2783)
!2791 = !DILocation(line: 1038, column: 13, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !2783, file: !1, line: 1038, column: 13)
!2793 = !DILocation(line: 1038, column: 21, scope: !2792)
!2794 = !DILocation(line: 1038, column: 13, scope: !2783)
!2795 = !DILocation(line: 1039, column: 17, scope: !2792)
!2796 = !DILocation(line: 1039, column: 11, scope: !2792)
!2797 = !DILocation(line: 1040, column: 7, scope: !2783)
!2798 = !DILocation(line: 1041, column: 3, scope: !2713)
!2799 = !DILocation(line: 995, column: 41, scope: !2707)
!2800 = !DILocation(line: 995, column: 3, scope: !2707)
!2801 = distinct !{!2801, !2711, !2802}
!2802 = !DILocation(line: 1041, column: 3, scope: !2704)
!2803 = !DILocation(line: 1042, column: 31, scope: !2614)
!2804 = !DILocation(line: 1042, column: 14, scope: !2614)
!2805 = !DILocation(line: 1042, column: 13, scope: !2614)
!2806 = !DILocation(line: 1043, column: 10, scope: !2614)
!2807 = !DILocation(line: 1043, column: 3, scope: !2614)
!2808 = !DILocation(line: 1044, column: 1, scope: !2614)
!2809 = distinct !DISubprogram(name: "Contrast", scope: !1, file: !1, line: 913, type: !2810, scopeLine: 914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!2810 = !DISubroutineType(types: !2811)
!2811 = !{null, !2812, !801, !801, !801}
!2812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !468)
!2813 = !DILocalVariable(name: "sign", arg: 1, scope: !2809, file: !1, line: 913, type: !2812)
!2814 = !DILocation(line: 913, column: 32, scope: !2809)
!2815 = !DILocalVariable(name: "red", arg: 2, scope: !2809, file: !1, line: 913, type: !801)
!2816 = !DILocation(line: 913, column: 46, scope: !2809)
!2817 = !DILocalVariable(name: "green", arg: 3, scope: !2809, file: !1, line: 913, type: !801)
!2818 = !DILocation(line: 913, column: 59, scope: !2809)
!2819 = !DILocalVariable(name: "blue", arg: 4, scope: !2809, file: !1, line: 913, type: !801)
!2820 = !DILocation(line: 913, column: 74, scope: !2809)
!2821 = !DILocalVariable(name: "brightness", scope: !2809, file: !1, line: 916, type: !543)
!2822 = !DILocation(line: 916, column: 5, scope: !2809)
!2823 = !DILocalVariable(name: "hue", scope: !2809, file: !1, line: 917, type: !543)
!2824 = !DILocation(line: 917, column: 5, scope: !2809)
!2825 = !DILocalVariable(name: "saturation", scope: !2809, file: !1, line: 918, type: !543)
!2826 = !DILocation(line: 918, column: 5, scope: !2809)
!2827 = !DILocation(line: 926, column: 6, scope: !2809)
!2828 = !DILocation(line: 927, column: 13, scope: !2809)
!2829 = !DILocation(line: 928, column: 13, scope: !2809)
!2830 = !DILocation(line: 929, column: 20, scope: !2809)
!2831 = !DILocation(line: 929, column: 19, scope: !2809)
!2832 = !DILocation(line: 929, column: 25, scope: !2809)
!2833 = !DILocation(line: 929, column: 24, scope: !2809)
!2834 = !DILocation(line: 929, column: 32, scope: !2809)
!2835 = !DILocation(line: 929, column: 31, scope: !2809)
!2836 = !DILocation(line: 929, column: 3, scope: !2809)
!2837 = !DILocation(line: 930, column: 19, scope: !2809)
!2838 = !DILocation(line: 930, column: 18, scope: !2809)
!2839 = !DILocation(line: 930, column: 54, scope: !2809)
!2840 = !DILocation(line: 930, column: 64, scope: !2809)
!2841 = !DILocation(line: 930, column: 52, scope: !2809)
!2842 = !DILocation(line: 930, column: 30, scope: !2809)
!2843 = !DILocation(line: 930, column: 71, scope: !2809)
!2844 = !DILocation(line: 930, column: 28, scope: !2809)
!2845 = !DILocation(line: 931, column: 5, scope: !2809)
!2846 = !DILocation(line: 930, column: 76, scope: !2809)
!2847 = !DILocation(line: 930, column: 23, scope: !2809)
!2848 = !DILocation(line: 930, column: 13, scope: !2809)
!2849 = !DILocation(line: 932, column: 7, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2809, file: !1, line: 932, column: 7)
!2851 = !DILocation(line: 932, column: 18, scope: !2850)
!2852 = !DILocation(line: 932, column: 7, scope: !2809)
!2853 = !DILocation(line: 933, column: 15, scope: !2850)
!2854 = !DILocation(line: 933, column: 5, scope: !2850)
!2855 = !DILocation(line: 935, column: 9, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2850, file: !1, line: 935, column: 9)
!2857 = !DILocation(line: 935, column: 20, scope: !2856)
!2858 = !DILocation(line: 935, column: 9, scope: !2850)
!2859 = !DILocation(line: 936, column: 17, scope: !2856)
!2860 = !DILocation(line: 936, column: 7, scope: !2856)
!2861 = !DILocation(line: 937, column: 19, scope: !2809)
!2862 = !DILocation(line: 937, column: 23, scope: !2809)
!2863 = !DILocation(line: 937, column: 34, scope: !2809)
!2864 = !DILocation(line: 937, column: 45, scope: !2809)
!2865 = !DILocation(line: 937, column: 49, scope: !2809)
!2866 = !DILocation(line: 937, column: 55, scope: !2809)
!2867 = !DILocation(line: 937, column: 3, scope: !2809)
!2868 = !DILocation(line: 938, column: 1, scope: !2809)
!2869 = distinct !DISubprogram(name: "ContrastStretchImage", scope: !1, file: !1, line: 1087, type: !1375, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!2870 = !DILocalVariable(name: "image", arg: 1, scope: !2869, file: !1, line: 1087, type: !565)
!2871 = !DILocation(line: 1087, column: 60, scope: !2869)
!2872 = !DILocalVariable(name: "levels", arg: 2, scope: !2869, file: !1, line: 1088, type: !547)
!2873 = !DILocation(line: 1088, column: 15, scope: !2869)
!2874 = !DILocalVariable(name: "black_point", scope: !2869, file: !1, line: 1091, type: !543)
!2875 = !DILocation(line: 1091, column: 5, scope: !2869)
!2876 = !DILocalVariable(name: "white_point", scope: !2869, file: !1, line: 1092, type: !543)
!2877 = !DILocation(line: 1092, column: 5, scope: !2869)
!2878 = !DILocalVariable(name: "geometry_info", scope: !2869, file: !1, line: 1095, type: !2879)
!2879 = !DIDerivedType(tag: DW_TAG_typedef, name: "GeometryInfo", file: !153, line: 112, baseType: !2880)
!2880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GeometryInfo", file: !153, line: 104, size: 320, elements: !2881)
!2881 = !{!2882, !2883, !2884, !2885, !2886}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "rho", scope: !2880, file: !153, line: 107, baseType: !543, size: 64)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "sigma", scope: !2880, file: !153, line: 108, baseType: !543, size: 64, offset: 64)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "xi", scope: !2880, file: !153, line: 109, baseType: !543, size: 64, offset: 128)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "psi", scope: !2880, file: !153, line: 110, baseType: !543, size: 64, offset: 192)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "chi", scope: !2880, file: !153, line: 111, baseType: !543, size: 64, offset: 256)
!2887 = !DILocation(line: 1095, column: 5, scope: !2869)
!2888 = !DILocalVariable(name: "status", scope: !2869, file: !1, line: 1098, type: !581)
!2889 = !DILocation(line: 1098, column: 5, scope: !2869)
!2890 = !DILocalVariable(name: "flags", scope: !2869, file: !1, line: 1101, type: !833)
!2891 = !DILocation(line: 1101, column: 5, scope: !2869)
!2892 = !DILocation(line: 1106, column: 7, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !2869, file: !1, line: 1106, column: 7)
!2894 = !DILocation(line: 1106, column: 14, scope: !2893)
!2895 = !DILocation(line: 1106, column: 7, scope: !2869)
!2896 = !DILocation(line: 1107, column: 5, scope: !2893)
!2897 = !DILocation(line: 1108, column: 23, scope: !2869)
!2898 = !DILocation(line: 1108, column: 9, scope: !2869)
!2899 = !DILocation(line: 1108, column: 8, scope: !2869)
!2900 = !DILocation(line: 1109, column: 29, scope: !2869)
!2901 = !DILocation(line: 1109, column: 14, scope: !2869)
!2902 = !DILocation(line: 1110, column: 24, scope: !2869)
!2903 = !DILocation(line: 1110, column: 31, scope: !2869)
!2904 = !DILocation(line: 1110, column: 15, scope: !2869)
!2905 = !DILocation(line: 1110, column: 39, scope: !2869)
!2906 = !DILocation(line: 1110, column: 46, scope: !2869)
!2907 = !DILocation(line: 1110, column: 38, scope: !2869)
!2908 = !DILocation(line: 1110, column: 14, scope: !2869)
!2909 = !DILocation(line: 1111, column: 8, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2869, file: !1, line: 1111, column: 7)
!2911 = !DILocation(line: 1111, column: 14, scope: !2910)
!2912 = !DILocation(line: 1111, column: 28, scope: !2910)
!2913 = !DILocation(line: 1111, column: 7, scope: !2869)
!2914 = !DILocation(line: 1112, column: 31, scope: !2910)
!2915 = !DILocation(line: 1112, column: 16, scope: !2910)
!2916 = !DILocation(line: 1112, column: 5, scope: !2910)
!2917 = !DILocation(line: 1113, column: 8, scope: !2918)
!2918 = distinct !DILexicalBlock(scope: !2869, file: !1, line: 1113, column: 7)
!2919 = !DILocation(line: 1113, column: 14, scope: !2918)
!2920 = !DILocation(line: 1113, column: 30, scope: !2918)
!2921 = !DILocation(line: 1113, column: 7, scope: !2869)
!2922 = !DILocation(line: 1115, column: 18, scope: !2923)
!2923 = distinct !DILexicalBlock(scope: !2918, file: !1, line: 1114, column: 5)
!2924 = !DILocation(line: 1116, column: 18, scope: !2923)
!2925 = !DILocation(line: 1117, column: 5, scope: !2923)
!2926 = !DILocation(line: 1118, column: 8, scope: !2927)
!2927 = distinct !DILexicalBlock(scope: !2869, file: !1, line: 1118, column: 7)
!2928 = !DILocation(line: 1118, column: 14, scope: !2927)
!2929 = !DILocation(line: 1118, column: 28, scope: !2927)
!2930 = !DILocation(line: 1118, column: 7, scope: !2869)
!2931 = !DILocation(line: 1119, column: 26, scope: !2927)
!2932 = !DILocation(line: 1119, column: 33, scope: !2927)
!2933 = !DILocation(line: 1119, column: 17, scope: !2927)
!2934 = !DILocation(line: 1119, column: 41, scope: !2927)
!2935 = !DILocation(line: 1119, column: 48, scope: !2927)
!2936 = !DILocation(line: 1119, column: 40, scope: !2927)
!2937 = !DILocation(line: 1119, column: 53, scope: !2927)
!2938 = !DILocation(line: 1119, column: 52, scope: !2927)
!2939 = !DILocation(line: 1119, column: 16, scope: !2927)
!2940 = !DILocation(line: 1119, column: 5, scope: !2927)
!2941 = !DILocation(line: 1120, column: 38, scope: !2869)
!2942 = !DILocation(line: 1120, column: 60, scope: !2869)
!2943 = !DILocation(line: 1121, column: 5, scope: !2869)
!2944 = !DILocation(line: 1120, column: 10, scope: !2869)
!2945 = !DILocation(line: 1120, column: 9, scope: !2869)
!2946 = !DILocation(line: 1122, column: 10, scope: !2869)
!2947 = !DILocation(line: 1122, column: 3, scope: !2869)
!2948 = !DILocation(line: 1123, column: 1, scope: !2869)
!2949 = distinct !DISubprogram(name: "ContrastStretchImageChannel", scope: !1, file: !1, line: 1125, type: !1302, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!2950 = !DILocalVariable(name: "image", arg: 1, scope: !2949, file: !1, line: 1125, type: !565)
!2951 = !DILocation(line: 1125, column: 67, scope: !2949)
!2952 = !DILocalVariable(name: "channel", arg: 2, scope: !2949, file: !1, line: 1126, type: !819)
!2953 = !DILocation(line: 1126, column: 21, scope: !2949)
!2954 = !DILocalVariable(name: "black_point", arg: 3, scope: !2949, file: !1, line: 1126, type: !980)
!2955 = !DILocation(line: 1126, column: 42, scope: !2949)
!2956 = !DILocalVariable(name: "white_point", arg: 4, scope: !2949, file: !1, line: 1126, type: !980)
!2957 = !DILocation(line: 1126, column: 67, scope: !2949)
!2958 = !DILocalVariable(name: "image_view", scope: !2949, file: !1, line: 1132, type: !992)
!2959 = !DILocation(line: 1132, column: 6, scope: !2949)
!2960 = !DILocalVariable(name: "intensity", scope: !2949, file: !1, line: 1135, type: !543)
!2961 = !DILocation(line: 1135, column: 5, scope: !2949)
!2962 = !DILocalVariable(name: "exception", scope: !2949, file: !1, line: 1138, type: !998)
!2963 = !DILocation(line: 1138, column: 6, scope: !2949)
!2964 = !DILocalVariable(name: "status", scope: !2949, file: !1, line: 1141, type: !581)
!2965 = !DILocation(line: 1141, column: 5, scope: !2949)
!2966 = !DILocalVariable(name: "progress", scope: !2949, file: !1, line: 1144, type: !685)
!2967 = !DILocation(line: 1144, column: 5, scope: !2949)
!2968 = !DILocalVariable(name: "black", scope: !2949, file: !1, line: 1147, type: !772)
!2969 = !DILocation(line: 1147, column: 5, scope: !2949)
!2970 = !DILocalVariable(name: "histogram", scope: !2949, file: !1, line: 1148, type: !771)
!2971 = !DILocation(line: 1148, column: 6, scope: !2949)
!2972 = !DILocalVariable(name: "white", scope: !2949, file: !1, line: 1149, type: !772)
!2973 = !DILocation(line: 1149, column: 5, scope: !2949)
!2974 = !DILocalVariable(name: "stretch_map", scope: !2949, file: !1, line: 1152, type: !789)
!2975 = !DILocation(line: 1152, column: 6, scope: !2949)
!2976 = !DILocalVariable(name: "i", scope: !2949, file: !1, line: 1155, type: !615)
!2977 = !DILocation(line: 1155, column: 5, scope: !2949)
!2978 = !DILocalVariable(name: "y", scope: !2949, file: !1, line: 1158, type: !615)
!2979 = !DILocation(line: 1158, column: 5, scope: !2949)
!2980 = !DILocation(line: 1165, column: 7, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2949, file: !1, line: 1165, column: 7)
!2982 = !DILocation(line: 1165, column: 14, scope: !2981)
!2983 = !DILocation(line: 1165, column: 20, scope: !2981)
!2984 = !DILocation(line: 1165, column: 7, scope: !2949)
!2985 = !DILocation(line: 1166, column: 61, scope: !2981)
!2986 = !DILocation(line: 1166, column: 68, scope: !2981)
!2987 = !DILocation(line: 1166, column: 12, scope: !2981)
!2988 = !DILocation(line: 1166, column: 5, scope: !2981)
!2989 = !DILocation(line: 1169, column: 50, scope: !2949)
!2990 = !DILocation(line: 1169, column: 57, scope: !2949)
!2991 = !DILocation(line: 1169, column: 66, scope: !2949)
!2992 = !DILocation(line: 1169, column: 79, scope: !2949)
!2993 = !DILocation(line: 1169, column: 93, scope: !2949)
!2994 = !DILocation(line: 1169, column: 100, scope: !2949)
!2995 = !DILocation(line: 1169, column: 12, scope: !2949)
!2996 = !DILocation(line: 1169, column: 10, scope: !2949)
!2997 = !DILocation(line: 1170, column: 7, scope: !2998)
!2998 = distinct !DILexicalBlock(scope: !2949, file: !1, line: 1170, column: 7)
!2999 = !DILocation(line: 1170, column: 14, scope: !2998)
!3000 = !DILocation(line: 1170, column: 7, scope: !2949)
!3001 = !DILocation(line: 1171, column: 12, scope: !2998)
!3002 = !DILocation(line: 1171, column: 5, scope: !2998)
!3003 = !DILocation(line: 1173, column: 35, scope: !2949)
!3004 = !DILocation(line: 1173, column: 13, scope: !2949)
!3005 = !DILocation(line: 1173, column: 12, scope: !2949)
!3006 = !DILocation(line: 1175, column: 38, scope: !2949)
!3007 = !DILocation(line: 1175, column: 15, scope: !2949)
!3008 = !DILocation(line: 1175, column: 14, scope: !2949)
!3009 = !DILocation(line: 1177, column: 8, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !2949, file: !1, line: 1177, column: 7)
!3011 = !DILocation(line: 1177, column: 18, scope: !3010)
!3012 = !DILocation(line: 1177, column: 49, scope: !3010)
!3013 = !DILocation(line: 1178, column: 8, scope: !3010)
!3014 = !DILocation(line: 1178, column: 20, scope: !3010)
!3015 = !DILocation(line: 1177, column: 7, scope: !2949)
!3016 = !DILocation(line: 1179, column: 5, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3018, file: !1, line: 1179, column: 5)
!3018 = distinct !DILexicalBlock(scope: !3010, file: !1, line: 1179, column: 5)
!3019 = !DILocation(line: 1179, column: 5, scope: !3018)
!3020 = !DILocation(line: 1184, column: 15, scope: !2949)
!3021 = !DILocation(line: 1184, column: 22, scope: !2949)
!3022 = !DILocation(line: 1184, column: 12, scope: !2949)
!3023 = !DILocation(line: 1185, column: 19, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !2949, file: !1, line: 1185, column: 7)
!3025 = !DILocation(line: 1185, column: 25, scope: !3024)
!3026 = !DILocation(line: 1185, column: 7, scope: !3024)
!3027 = !DILocation(line: 1185, column: 36, scope: !3024)
!3028 = !DILocation(line: 1185, column: 7, scope: !2949)
!3029 = !DILocation(line: 1186, column: 31, scope: !3024)
!3030 = !DILocation(line: 1186, column: 12, scope: !3024)
!3031 = !DILocation(line: 1186, column: 5, scope: !3024)
!3032 = !DILocation(line: 1187, column: 9, scope: !2949)
!3033 = !DILocation(line: 1188, column: 28, scope: !2949)
!3034 = !DILocation(line: 1188, column: 10, scope: !2949)
!3035 = !DILocation(line: 1189, column: 40, scope: !2949)
!3036 = !DILocation(line: 1189, column: 46, scope: !2949)
!3037 = !DILocation(line: 1189, column: 14, scope: !2949)
!3038 = !DILocation(line: 1189, column: 13, scope: !2949)
!3039 = !DILocation(line: 1190, column: 9, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !2949, file: !1, line: 1190, column: 3)
!3041 = !DILocation(line: 1190, column: 8, scope: !3040)
!3042 = !DILocation(line: 1190, column: 13, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !3040, file: !1, line: 1190, column: 3)
!3044 = !DILocation(line: 1190, column: 27, scope: !3043)
!3045 = !DILocation(line: 1190, column: 34, scope: !3043)
!3046 = !DILocation(line: 1190, column: 15, scope: !3043)
!3047 = !DILocation(line: 1190, column: 3, scope: !3040)
!3048 = !DILocalVariable(name: "p", scope: !3049, file: !1, line: 1193, type: !3050)
!3049 = distinct !DILexicalBlock(scope: !3043, file: !1, line: 1191, column: 3)
!3050 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !798)
!3051 = !DILocation(line: 1193, column: 17, scope: !3049)
!3052 = !DILocalVariable(name: "indexes", scope: !3049, file: !1, line: 1196, type: !1141)
!3053 = !DILocation(line: 1196, column: 17, scope: !3049)
!3054 = !DILocalVariable(name: "x", scope: !3049, file: !1, line: 1199, type: !615)
!3055 = !DILocation(line: 1199, column: 7, scope: !3049)
!3056 = !DILocation(line: 1201, column: 9, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !3049, file: !1, line: 1201, column: 9)
!3058 = !DILocation(line: 1201, column: 16, scope: !3057)
!3059 = !DILocation(line: 1201, column: 9, scope: !3049)
!3060 = !DILocation(line: 1202, column: 7, scope: !3057)
!3061 = !DILocation(line: 1203, column: 33, scope: !3049)
!3062 = !DILocation(line: 1203, column: 46, scope: !3049)
!3063 = !DILocation(line: 1203, column: 48, scope: !3049)
!3064 = !DILocation(line: 1203, column: 55, scope: !3049)
!3065 = !DILocation(line: 1203, column: 65, scope: !3049)
!3066 = !DILocation(line: 1203, column: 7, scope: !3049)
!3067 = !DILocation(line: 1203, column: 6, scope: !3049)
!3068 = !DILocation(line: 1204, column: 9, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !3049, file: !1, line: 1204, column: 9)
!3070 = !DILocation(line: 1204, column: 11, scope: !3069)
!3071 = !DILocation(line: 1204, column: 9, scope: !3049)
!3072 = !DILocation(line: 1206, column: 15, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !3069, file: !1, line: 1205, column: 7)
!3074 = !DILocation(line: 1207, column: 9, scope: !3073)
!3075 = !DILocation(line: 1209, column: 45, scope: !3049)
!3076 = !DILocation(line: 1209, column: 13, scope: !3049)
!3077 = !DILocation(line: 1209, column: 12, scope: !3049)
!3078 = !DILocation(line: 1210, column: 10, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !3049, file: !1, line: 1210, column: 9)
!3080 = !DILocation(line: 1210, column: 18, scope: !3079)
!3081 = !DILocation(line: 1210, column: 34, scope: !3079)
!3082 = !DILocation(line: 1210, column: 9, scope: !3049)
!3083 = !DILocation(line: 1211, column: 13, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !3079, file: !1, line: 1211, column: 7)
!3085 = !DILocation(line: 1211, column: 12, scope: !3084)
!3086 = !DILocation(line: 1211, column: 17, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3084, file: !1, line: 1211, column: 7)
!3088 = !DILocation(line: 1211, column: 31, scope: !3087)
!3089 = !DILocation(line: 1211, column: 38, scope: !3087)
!3090 = !DILocation(line: 1211, column: 19, scope: !3087)
!3091 = !DILocation(line: 1211, column: 7, scope: !3084)
!3092 = !DILocalVariable(name: "intensity", scope: !3093, file: !1, line: 1214, type: !544)
!3093 = distinct !DILexicalBlock(scope: !3087, file: !1, line: 1212, column: 7)
!3094 = !DILocation(line: 1214, column: 11, scope: !3093)
!3095 = !DILocation(line: 1216, column: 52, scope: !3093)
!3096 = !DILocation(line: 1216, column: 58, scope: !3093)
!3097 = !DILocation(line: 1216, column: 34, scope: !3093)
!3098 = !DILocation(line: 1216, column: 19, scope: !3093)
!3099 = !DILocation(line: 1216, column: 18, scope: !3093)
!3100 = !DILocation(line: 1217, column: 9, scope: !3093)
!3101 = !DILocation(line: 1217, column: 37, scope: !3093)
!3102 = !DILocation(line: 1217, column: 19, scope: !3093)
!3103 = !DILocation(line: 1217, column: 49, scope: !3093)
!3104 = !DILocation(line: 1217, column: 52, scope: !3093)
!3105 = !DILocation(line: 1218, column: 9, scope: !3093)
!3106 = !DILocation(line: 1218, column: 37, scope: !3093)
!3107 = !DILocation(line: 1218, column: 19, scope: !3093)
!3108 = !DILocation(line: 1218, column: 49, scope: !3093)
!3109 = !DILocation(line: 1218, column: 54, scope: !3093)
!3110 = !DILocation(line: 1219, column: 9, scope: !3093)
!3111 = !DILocation(line: 1219, column: 37, scope: !3093)
!3112 = !DILocation(line: 1219, column: 19, scope: !3093)
!3113 = !DILocation(line: 1219, column: 49, scope: !3093)
!3114 = !DILocation(line: 1219, column: 53, scope: !3093)
!3115 = !DILocation(line: 1220, column: 9, scope: !3093)
!3116 = !DILocation(line: 1220, column: 37, scope: !3093)
!3117 = !DILocation(line: 1220, column: 19, scope: !3093)
!3118 = !DILocation(line: 1220, column: 49, scope: !3093)
!3119 = !DILocation(line: 1220, column: 54, scope: !3093)
!3120 = !DILocation(line: 1221, column: 10, scope: !3093)
!3121 = !DILocation(line: 1222, column: 7, scope: !3093)
!3122 = !DILocation(line: 1211, column: 48, scope: !3087)
!3123 = !DILocation(line: 1211, column: 7, scope: !3087)
!3124 = distinct !{!3124, !3091, !3125}
!3125 = !DILocation(line: 1222, column: 7, scope: !3084)
!3126 = !DILocation(line: 1224, column: 13, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3079, file: !1, line: 1224, column: 7)
!3128 = !DILocation(line: 1224, column: 12, scope: !3127)
!3129 = !DILocation(line: 1224, column: 17, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !3127, file: !1, line: 1224, column: 7)
!3131 = !DILocation(line: 1224, column: 31, scope: !3130)
!3132 = !DILocation(line: 1224, column: 38, scope: !3130)
!3133 = !DILocation(line: 1224, column: 19, scope: !3130)
!3134 = !DILocation(line: 1224, column: 7, scope: !3127)
!3135 = !DILocation(line: 1226, column: 14, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3137, file: !1, line: 1226, column: 13)
!3137 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 1225, column: 7)
!3138 = !DILocation(line: 1226, column: 22, scope: !3136)
!3139 = !DILocation(line: 1226, column: 36, scope: !3136)
!3140 = !DILocation(line: 1226, column: 13, scope: !3137)
!3141 = !DILocation(line: 1227, column: 11, scope: !3136)
!3142 = !DILocation(line: 1227, column: 39, scope: !3136)
!3143 = !DILocation(line: 1227, column: 21, scope: !3136)
!3144 = !DILocation(line: 1227, column: 56, scope: !3136)
!3145 = !DILocation(line: 1227, column: 59, scope: !3136)
!3146 = !DILocation(line: 1228, column: 14, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3137, file: !1, line: 1228, column: 13)
!3148 = !DILocation(line: 1228, column: 22, scope: !3147)
!3149 = !DILocation(line: 1228, column: 38, scope: !3147)
!3150 = !DILocation(line: 1228, column: 13, scope: !3137)
!3151 = !DILocation(line: 1229, column: 11, scope: !3147)
!3152 = !DILocation(line: 1229, column: 39, scope: !3147)
!3153 = !DILocation(line: 1229, column: 21, scope: !3147)
!3154 = !DILocation(line: 1229, column: 58, scope: !3147)
!3155 = !DILocation(line: 1229, column: 63, scope: !3147)
!3156 = !DILocation(line: 1230, column: 14, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3137, file: !1, line: 1230, column: 13)
!3158 = !DILocation(line: 1230, column: 22, scope: !3157)
!3159 = !DILocation(line: 1230, column: 37, scope: !3157)
!3160 = !DILocation(line: 1230, column: 13, scope: !3137)
!3161 = !DILocation(line: 1231, column: 11, scope: !3157)
!3162 = !DILocation(line: 1231, column: 39, scope: !3157)
!3163 = !DILocation(line: 1231, column: 21, scope: !3157)
!3164 = !DILocation(line: 1231, column: 57, scope: !3157)
!3165 = !DILocation(line: 1231, column: 61, scope: !3157)
!3166 = !DILocation(line: 1232, column: 14, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !3137, file: !1, line: 1232, column: 13)
!3168 = !DILocation(line: 1232, column: 22, scope: !3167)
!3169 = !DILocation(line: 1232, column: 40, scope: !3167)
!3170 = !DILocation(line: 1232, column: 13, scope: !3137)
!3171 = !DILocation(line: 1233, column: 11, scope: !3167)
!3172 = !DILocation(line: 1233, column: 39, scope: !3167)
!3173 = !DILocation(line: 1233, column: 21, scope: !3167)
!3174 = !DILocation(line: 1233, column: 60, scope: !3167)
!3175 = !DILocation(line: 1233, column: 67, scope: !3167)
!3176 = !DILocation(line: 1234, column: 15, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3137, file: !1, line: 1234, column: 13)
!3178 = !DILocation(line: 1234, column: 23, scope: !3177)
!3179 = !DILocation(line: 1234, column: 39, scope: !3177)
!3180 = !DILocation(line: 1234, column: 45, scope: !3177)
!3181 = !DILocation(line: 1235, column: 14, scope: !3177)
!3182 = !DILocation(line: 1235, column: 21, scope: !3177)
!3183 = !DILocation(line: 1235, column: 32, scope: !3177)
!3184 = !DILocation(line: 1234, column: 13, scope: !3137)
!3185 = !DILocation(line: 1236, column: 11, scope: !3177)
!3186 = !DILocation(line: 1236, column: 39, scope: !3177)
!3187 = !DILocation(line: 1236, column: 21, scope: !3177)
!3188 = !DILocation(line: 1236, column: 66, scope: !3177)
!3189 = !DILocation(line: 1236, column: 71, scope: !3177)
!3190 = !DILocation(line: 1237, column: 10, scope: !3137)
!3191 = !DILocation(line: 1238, column: 7, scope: !3137)
!3192 = !DILocation(line: 1224, column: 48, scope: !3130)
!3193 = !DILocation(line: 1224, column: 7, scope: !3130)
!3194 = distinct !{!3194, !3134, !3195}
!3195 = !DILocation(line: 1238, column: 7, scope: !3127)
!3196 = !DILocation(line: 1239, column: 3, scope: !3049)
!3197 = !DILocation(line: 1190, column: 41, scope: !3043)
!3198 = !DILocation(line: 1190, column: 3, scope: !3043)
!3199 = distinct !{!3199, !3047, !3200}
!3200 = !DILocation(line: 1239, column: 3, scope: !3040)
!3201 = !DILocation(line: 1243, column: 9, scope: !2949)
!3202 = !DILocation(line: 1243, column: 12, scope: !2949)
!3203 = !DILocation(line: 1244, column: 13, scope: !2949)
!3204 = !DILocation(line: 1244, column: 9, scope: !2949)
!3205 = !DILocation(line: 1244, column: 12, scope: !2949)
!3206 = !DILocation(line: 1245, column: 8, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !2949, file: !1, line: 1245, column: 7)
!3208 = !DILocation(line: 1245, column: 16, scope: !3207)
!3209 = !DILocation(line: 1245, column: 30, scope: !3207)
!3210 = !DILocation(line: 1245, column: 7, scope: !2949)
!3211 = !DILocation(line: 1247, column: 16, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3207, file: !1, line: 1246, column: 5)
!3213 = !DILocation(line: 1248, column: 13, scope: !3214)
!3214 = distinct !DILexicalBlock(scope: !3212, file: !1, line: 1248, column: 7)
!3215 = !DILocation(line: 1248, column: 12, scope: !3214)
!3216 = !DILocation(line: 1248, column: 17, scope: !3217)
!3217 = distinct !DILexicalBlock(scope: !3214, file: !1, line: 1248, column: 7)
!3218 = !DILocation(line: 1248, column: 19, scope: !3217)
!3219 = !DILocation(line: 1248, column: 7, scope: !3214)
!3220 = !DILocation(line: 1250, column: 20, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3217, file: !1, line: 1249, column: 7)
!3222 = !DILocation(line: 1250, column: 30, scope: !3221)
!3223 = !DILocation(line: 1250, column: 33, scope: !3221)
!3224 = !DILocation(line: 1250, column: 18, scope: !3221)
!3225 = !DILocation(line: 1251, column: 13, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3221, file: !1, line: 1251, column: 13)
!3227 = !DILocation(line: 1251, column: 25, scope: !3226)
!3228 = !DILocation(line: 1251, column: 23, scope: !3226)
!3229 = !DILocation(line: 1251, column: 13, scope: !3221)
!3230 = !DILocation(line: 1252, column: 11, scope: !3226)
!3231 = !DILocation(line: 1253, column: 7, scope: !3221)
!3232 = !DILocation(line: 1248, column: 41, scope: !3217)
!3233 = !DILocation(line: 1248, column: 7, scope: !3217)
!3234 = distinct !{!3234, !3219, !3235}
!3235 = !DILocation(line: 1253, column: 7, scope: !3214)
!3236 = !DILocation(line: 1254, column: 34, scope: !3212)
!3237 = !DILocation(line: 1254, column: 17, scope: !3212)
!3238 = !DILocation(line: 1254, column: 13, scope: !3212)
!3239 = !DILocation(line: 1254, column: 16, scope: !3212)
!3240 = !DILocation(line: 1255, column: 16, scope: !3212)
!3241 = !DILocation(line: 1256, column: 13, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !3212, file: !1, line: 1256, column: 7)
!3243 = !DILocation(line: 1256, column: 12, scope: !3242)
!3244 = !DILocation(line: 1256, column: 32, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3242, file: !1, line: 1256, column: 7)
!3246 = !DILocation(line: 1256, column: 34, scope: !3245)
!3247 = !DILocation(line: 1256, column: 7, scope: !3242)
!3248 = !DILocation(line: 1258, column: 20, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3245, file: !1, line: 1257, column: 7)
!3250 = !DILocation(line: 1258, column: 30, scope: !3249)
!3251 = !DILocation(line: 1258, column: 33, scope: !3249)
!3252 = !DILocation(line: 1258, column: 18, scope: !3249)
!3253 = !DILocation(line: 1259, column: 13, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3249, file: !1, line: 1259, column: 13)
!3255 = !DILocation(line: 1259, column: 35, scope: !3254)
!3256 = !DILocation(line: 1259, column: 42, scope: !3254)
!3257 = !DILocation(line: 1259, column: 26, scope: !3254)
!3258 = !DILocation(line: 1259, column: 50, scope: !3254)
!3259 = !DILocation(line: 1259, column: 57, scope: !3254)
!3260 = !DILocation(line: 1259, column: 49, scope: !3254)
!3261 = !DILocation(line: 1259, column: 62, scope: !3254)
!3262 = !DILocation(line: 1259, column: 61, scope: !3254)
!3263 = !DILocation(line: 1259, column: 23, scope: !3254)
!3264 = !DILocation(line: 1259, column: 13, scope: !3249)
!3265 = !DILocation(line: 1260, column: 11, scope: !3254)
!3266 = !DILocation(line: 1261, column: 7, scope: !3249)
!3267 = !DILocation(line: 1256, column: 41, scope: !3245)
!3268 = !DILocation(line: 1256, column: 7, scope: !3245)
!3269 = distinct !{!3269, !3247, !3270}
!3270 = !DILocation(line: 1261, column: 7, scope: !3242)
!3271 = !DILocation(line: 1262, column: 34, scope: !3212)
!3272 = !DILocation(line: 1262, column: 17, scope: !3212)
!3273 = !DILocation(line: 1262, column: 13, scope: !3212)
!3274 = !DILocation(line: 1262, column: 16, scope: !3212)
!3275 = !DILocation(line: 1263, column: 5, scope: !3212)
!3276 = !DILocation(line: 1264, column: 9, scope: !2949)
!3277 = !DILocation(line: 1264, column: 14, scope: !2949)
!3278 = !DILocation(line: 1265, column: 15, scope: !2949)
!3279 = !DILocation(line: 1265, column: 9, scope: !2949)
!3280 = !DILocation(line: 1265, column: 14, scope: !2949)
!3281 = !DILocation(line: 1266, column: 8, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !2949, file: !1, line: 1266, column: 7)
!3283 = !DILocation(line: 1266, column: 16, scope: !3282)
!3284 = !DILocation(line: 1266, column: 32, scope: !3282)
!3285 = !DILocation(line: 1266, column: 7, scope: !2949)
!3286 = !DILocation(line: 1268, column: 16, scope: !3287)
!3287 = distinct !DILexicalBlock(scope: !3282, file: !1, line: 1267, column: 5)
!3288 = !DILocation(line: 1269, column: 13, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3287, file: !1, line: 1269, column: 7)
!3290 = !DILocation(line: 1269, column: 12, scope: !3289)
!3291 = !DILocation(line: 1269, column: 17, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !3289, file: !1, line: 1269, column: 7)
!3293 = !DILocation(line: 1269, column: 19, scope: !3292)
!3294 = !DILocation(line: 1269, column: 7, scope: !3289)
!3295 = !DILocation(line: 1271, column: 20, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3292, file: !1, line: 1270, column: 7)
!3297 = !DILocation(line: 1271, column: 30, scope: !3296)
!3298 = !DILocation(line: 1271, column: 33, scope: !3296)
!3299 = !DILocation(line: 1271, column: 18, scope: !3296)
!3300 = !DILocation(line: 1272, column: 13, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3296, file: !1, line: 1272, column: 13)
!3302 = !DILocation(line: 1272, column: 25, scope: !3301)
!3303 = !DILocation(line: 1272, column: 23, scope: !3301)
!3304 = !DILocation(line: 1272, column: 13, scope: !3296)
!3305 = !DILocation(line: 1273, column: 11, scope: !3301)
!3306 = !DILocation(line: 1274, column: 7, scope: !3296)
!3307 = !DILocation(line: 1269, column: 41, scope: !3292)
!3308 = !DILocation(line: 1269, column: 7, scope: !3292)
!3309 = distinct !{!3309, !3294, !3310}
!3310 = !DILocation(line: 1274, column: 7, scope: !3289)
!3311 = !DILocation(line: 1275, column: 36, scope: !3287)
!3312 = !DILocation(line: 1275, column: 19, scope: !3287)
!3313 = !DILocation(line: 1275, column: 13, scope: !3287)
!3314 = !DILocation(line: 1275, column: 18, scope: !3287)
!3315 = !DILocation(line: 1276, column: 16, scope: !3287)
!3316 = !DILocation(line: 1277, column: 13, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3287, file: !1, line: 1277, column: 7)
!3318 = !DILocation(line: 1277, column: 12, scope: !3317)
!3319 = !DILocation(line: 1277, column: 32, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3317, file: !1, line: 1277, column: 7)
!3321 = !DILocation(line: 1277, column: 34, scope: !3320)
!3322 = !DILocation(line: 1277, column: 7, scope: !3317)
!3323 = !DILocation(line: 1279, column: 20, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3320, file: !1, line: 1278, column: 7)
!3325 = !DILocation(line: 1279, column: 30, scope: !3324)
!3326 = !DILocation(line: 1279, column: 33, scope: !3324)
!3327 = !DILocation(line: 1279, column: 18, scope: !3324)
!3328 = !DILocation(line: 1280, column: 13, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3324, file: !1, line: 1280, column: 13)
!3330 = !DILocation(line: 1280, column: 35, scope: !3329)
!3331 = !DILocation(line: 1280, column: 42, scope: !3329)
!3332 = !DILocation(line: 1280, column: 26, scope: !3329)
!3333 = !DILocation(line: 1280, column: 50, scope: !3329)
!3334 = !DILocation(line: 1280, column: 57, scope: !3329)
!3335 = !DILocation(line: 1280, column: 49, scope: !3329)
!3336 = !DILocation(line: 1280, column: 62, scope: !3329)
!3337 = !DILocation(line: 1280, column: 61, scope: !3329)
!3338 = !DILocation(line: 1280, column: 23, scope: !3329)
!3339 = !DILocation(line: 1280, column: 13, scope: !3324)
!3340 = !DILocation(line: 1281, column: 11, scope: !3329)
!3341 = !DILocation(line: 1282, column: 7, scope: !3324)
!3342 = !DILocation(line: 1277, column: 41, scope: !3320)
!3343 = !DILocation(line: 1277, column: 7, scope: !3320)
!3344 = distinct !{!3344, !3322, !3345}
!3345 = !DILocation(line: 1282, column: 7, scope: !3317)
!3346 = !DILocation(line: 1283, column: 36, scope: !3287)
!3347 = !DILocation(line: 1283, column: 19, scope: !3287)
!3348 = !DILocation(line: 1283, column: 13, scope: !3287)
!3349 = !DILocation(line: 1283, column: 18, scope: !3287)
!3350 = !DILocation(line: 1284, column: 5, scope: !3287)
!3351 = !DILocation(line: 1285, column: 9, scope: !2949)
!3352 = !DILocation(line: 1285, column: 13, scope: !2949)
!3353 = !DILocation(line: 1286, column: 14, scope: !2949)
!3354 = !DILocation(line: 1286, column: 9, scope: !2949)
!3355 = !DILocation(line: 1286, column: 13, scope: !2949)
!3356 = !DILocation(line: 1287, column: 8, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !2949, file: !1, line: 1287, column: 7)
!3358 = !DILocation(line: 1287, column: 16, scope: !3357)
!3359 = !DILocation(line: 1287, column: 31, scope: !3357)
!3360 = !DILocation(line: 1287, column: 7, scope: !2949)
!3361 = !DILocation(line: 1289, column: 16, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3357, file: !1, line: 1288, column: 5)
!3363 = !DILocation(line: 1290, column: 13, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3362, file: !1, line: 1290, column: 7)
!3365 = !DILocation(line: 1290, column: 12, scope: !3364)
!3366 = !DILocation(line: 1290, column: 17, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3364, file: !1, line: 1290, column: 7)
!3368 = !DILocation(line: 1290, column: 19, scope: !3367)
!3369 = !DILocation(line: 1290, column: 7, scope: !3364)
!3370 = !DILocation(line: 1292, column: 20, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3367, file: !1, line: 1291, column: 7)
!3372 = !DILocation(line: 1292, column: 30, scope: !3371)
!3373 = !DILocation(line: 1292, column: 33, scope: !3371)
!3374 = !DILocation(line: 1292, column: 18, scope: !3371)
!3375 = !DILocation(line: 1293, column: 13, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3371, file: !1, line: 1293, column: 13)
!3377 = !DILocation(line: 1293, column: 25, scope: !3376)
!3378 = !DILocation(line: 1293, column: 23, scope: !3376)
!3379 = !DILocation(line: 1293, column: 13, scope: !3371)
!3380 = !DILocation(line: 1294, column: 11, scope: !3376)
!3381 = !DILocation(line: 1295, column: 7, scope: !3371)
!3382 = !DILocation(line: 1290, column: 41, scope: !3367)
!3383 = !DILocation(line: 1290, column: 7, scope: !3367)
!3384 = distinct !{!3384, !3369, !3385}
!3385 = !DILocation(line: 1295, column: 7, scope: !3364)
!3386 = !DILocation(line: 1296, column: 35, scope: !3362)
!3387 = !DILocation(line: 1296, column: 18, scope: !3362)
!3388 = !DILocation(line: 1296, column: 13, scope: !3362)
!3389 = !DILocation(line: 1296, column: 17, scope: !3362)
!3390 = !DILocation(line: 1297, column: 16, scope: !3362)
!3391 = !DILocation(line: 1298, column: 13, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3362, file: !1, line: 1298, column: 7)
!3393 = !DILocation(line: 1298, column: 12, scope: !3392)
!3394 = !DILocation(line: 1298, column: 32, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3392, file: !1, line: 1298, column: 7)
!3396 = !DILocation(line: 1298, column: 34, scope: !3395)
!3397 = !DILocation(line: 1298, column: 7, scope: !3392)
!3398 = !DILocation(line: 1300, column: 20, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3395, file: !1, line: 1299, column: 7)
!3400 = !DILocation(line: 1300, column: 30, scope: !3399)
!3401 = !DILocation(line: 1300, column: 33, scope: !3399)
!3402 = !DILocation(line: 1300, column: 18, scope: !3399)
!3403 = !DILocation(line: 1301, column: 13, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3399, file: !1, line: 1301, column: 13)
!3405 = !DILocation(line: 1301, column: 35, scope: !3404)
!3406 = !DILocation(line: 1301, column: 42, scope: !3404)
!3407 = !DILocation(line: 1301, column: 26, scope: !3404)
!3408 = !DILocation(line: 1301, column: 50, scope: !3404)
!3409 = !DILocation(line: 1301, column: 57, scope: !3404)
!3410 = !DILocation(line: 1301, column: 49, scope: !3404)
!3411 = !DILocation(line: 1301, column: 62, scope: !3404)
!3412 = !DILocation(line: 1301, column: 61, scope: !3404)
!3413 = !DILocation(line: 1301, column: 23, scope: !3404)
!3414 = !DILocation(line: 1301, column: 13, scope: !3399)
!3415 = !DILocation(line: 1302, column: 11, scope: !3404)
!3416 = !DILocation(line: 1303, column: 7, scope: !3399)
!3417 = !DILocation(line: 1298, column: 41, scope: !3395)
!3418 = !DILocation(line: 1298, column: 7, scope: !3395)
!3419 = distinct !{!3419, !3397, !3420}
!3420 = !DILocation(line: 1303, column: 7, scope: !3392)
!3421 = !DILocation(line: 1304, column: 35, scope: !3362)
!3422 = !DILocation(line: 1304, column: 18, scope: !3362)
!3423 = !DILocation(line: 1304, column: 13, scope: !3362)
!3424 = !DILocation(line: 1304, column: 17, scope: !3362)
!3425 = !DILocation(line: 1305, column: 5, scope: !3362)
!3426 = !DILocation(line: 1306, column: 9, scope: !2949)
!3427 = !DILocation(line: 1306, column: 16, scope: !2949)
!3428 = !DILocation(line: 1307, column: 17, scope: !2949)
!3429 = !DILocation(line: 1307, column: 9, scope: !2949)
!3430 = !DILocation(line: 1307, column: 16, scope: !2949)
!3431 = !DILocation(line: 1308, column: 8, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !2949, file: !1, line: 1308, column: 7)
!3433 = !DILocation(line: 1308, column: 16, scope: !3432)
!3434 = !DILocation(line: 1308, column: 34, scope: !3432)
!3435 = !DILocation(line: 1308, column: 7, scope: !2949)
!3436 = !DILocation(line: 1310, column: 16, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3432, file: !1, line: 1309, column: 5)
!3438 = !DILocation(line: 1311, column: 13, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3437, file: !1, line: 1311, column: 7)
!3440 = !DILocation(line: 1311, column: 12, scope: !3439)
!3441 = !DILocation(line: 1311, column: 17, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3439, file: !1, line: 1311, column: 7)
!3443 = !DILocation(line: 1311, column: 19, scope: !3442)
!3444 = !DILocation(line: 1311, column: 7, scope: !3439)
!3445 = !DILocation(line: 1313, column: 20, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3442, file: !1, line: 1312, column: 7)
!3447 = !DILocation(line: 1313, column: 30, scope: !3446)
!3448 = !DILocation(line: 1313, column: 33, scope: !3446)
!3449 = !DILocation(line: 1313, column: 18, scope: !3446)
!3450 = !DILocation(line: 1314, column: 13, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3446, file: !1, line: 1314, column: 13)
!3452 = !DILocation(line: 1314, column: 25, scope: !3451)
!3453 = !DILocation(line: 1314, column: 23, scope: !3451)
!3454 = !DILocation(line: 1314, column: 13, scope: !3446)
!3455 = !DILocation(line: 1315, column: 11, scope: !3451)
!3456 = !DILocation(line: 1316, column: 7, scope: !3446)
!3457 = !DILocation(line: 1311, column: 41, scope: !3442)
!3458 = !DILocation(line: 1311, column: 7, scope: !3442)
!3459 = distinct !{!3459, !3444, !3460}
!3460 = !DILocation(line: 1316, column: 7, scope: !3439)
!3461 = !DILocation(line: 1317, column: 38, scope: !3437)
!3462 = !DILocation(line: 1317, column: 21, scope: !3437)
!3463 = !DILocation(line: 1317, column: 13, scope: !3437)
!3464 = !DILocation(line: 1317, column: 20, scope: !3437)
!3465 = !DILocation(line: 1318, column: 16, scope: !3437)
!3466 = !DILocation(line: 1319, column: 13, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3437, file: !1, line: 1319, column: 7)
!3468 = !DILocation(line: 1319, column: 12, scope: !3467)
!3469 = !DILocation(line: 1319, column: 32, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3467, file: !1, line: 1319, column: 7)
!3471 = !DILocation(line: 1319, column: 34, scope: !3470)
!3472 = !DILocation(line: 1319, column: 7, scope: !3467)
!3473 = !DILocation(line: 1321, column: 20, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3470, file: !1, line: 1320, column: 7)
!3475 = !DILocation(line: 1321, column: 30, scope: !3474)
!3476 = !DILocation(line: 1321, column: 33, scope: !3474)
!3477 = !DILocation(line: 1321, column: 18, scope: !3474)
!3478 = !DILocation(line: 1322, column: 13, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3474, file: !1, line: 1322, column: 13)
!3480 = !DILocation(line: 1322, column: 35, scope: !3479)
!3481 = !DILocation(line: 1322, column: 42, scope: !3479)
!3482 = !DILocation(line: 1322, column: 26, scope: !3479)
!3483 = !DILocation(line: 1322, column: 50, scope: !3479)
!3484 = !DILocation(line: 1322, column: 57, scope: !3479)
!3485 = !DILocation(line: 1322, column: 49, scope: !3479)
!3486 = !DILocation(line: 1322, column: 62, scope: !3479)
!3487 = !DILocation(line: 1322, column: 61, scope: !3479)
!3488 = !DILocation(line: 1322, column: 23, scope: !3479)
!3489 = !DILocation(line: 1322, column: 13, scope: !3474)
!3490 = !DILocation(line: 1323, column: 11, scope: !3479)
!3491 = !DILocation(line: 1324, column: 7, scope: !3474)
!3492 = !DILocation(line: 1319, column: 41, scope: !3470)
!3493 = !DILocation(line: 1319, column: 7, scope: !3470)
!3494 = distinct !{!3494, !3472, !3495}
!3495 = !DILocation(line: 1324, column: 7, scope: !3467)
!3496 = !DILocation(line: 1325, column: 38, scope: !3437)
!3497 = !DILocation(line: 1325, column: 21, scope: !3437)
!3498 = !DILocation(line: 1325, column: 13, scope: !3437)
!3499 = !DILocation(line: 1325, column: 20, scope: !3437)
!3500 = !DILocation(line: 1326, column: 5, scope: !3437)
!3501 = !DILocation(line: 1327, column: 9, scope: !2949)
!3502 = !DILocation(line: 1327, column: 14, scope: !2949)
!3503 = !DILocation(line: 1328, column: 15, scope: !2949)
!3504 = !DILocation(line: 1328, column: 9, scope: !2949)
!3505 = !DILocation(line: 1328, column: 14, scope: !2949)
!3506 = !DILocation(line: 1329, column: 9, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !2949, file: !1, line: 1329, column: 7)
!3508 = !DILocation(line: 1329, column: 17, scope: !3507)
!3509 = !DILocation(line: 1329, column: 33, scope: !3507)
!3510 = !DILocation(line: 1329, column: 39, scope: !3507)
!3511 = !DILocation(line: 1329, column: 43, scope: !3507)
!3512 = !DILocation(line: 1329, column: 50, scope: !3507)
!3513 = !DILocation(line: 1329, column: 61, scope: !3507)
!3514 = !DILocation(line: 1329, column: 7, scope: !2949)
!3515 = !DILocation(line: 1331, column: 16, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3507, file: !1, line: 1330, column: 5)
!3517 = !DILocation(line: 1332, column: 13, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3516, file: !1, line: 1332, column: 7)
!3519 = !DILocation(line: 1332, column: 12, scope: !3518)
!3520 = !DILocation(line: 1332, column: 17, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3518, file: !1, line: 1332, column: 7)
!3522 = !DILocation(line: 1332, column: 19, scope: !3521)
!3523 = !DILocation(line: 1332, column: 7, scope: !3518)
!3524 = !DILocation(line: 1334, column: 20, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3521, file: !1, line: 1333, column: 7)
!3526 = !DILocation(line: 1334, column: 30, scope: !3525)
!3527 = !DILocation(line: 1334, column: 33, scope: !3525)
!3528 = !DILocation(line: 1334, column: 18, scope: !3525)
!3529 = !DILocation(line: 1335, column: 13, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3525, file: !1, line: 1335, column: 13)
!3531 = !DILocation(line: 1335, column: 25, scope: !3530)
!3532 = !DILocation(line: 1335, column: 23, scope: !3530)
!3533 = !DILocation(line: 1335, column: 13, scope: !3525)
!3534 = !DILocation(line: 1336, column: 11, scope: !3530)
!3535 = !DILocation(line: 1337, column: 7, scope: !3525)
!3536 = !DILocation(line: 1332, column: 41, scope: !3521)
!3537 = !DILocation(line: 1332, column: 7, scope: !3521)
!3538 = distinct !{!3538, !3523, !3539}
!3539 = !DILocation(line: 1337, column: 7, scope: !3518)
!3540 = !DILocation(line: 1338, column: 36, scope: !3516)
!3541 = !DILocation(line: 1338, column: 19, scope: !3516)
!3542 = !DILocation(line: 1338, column: 13, scope: !3516)
!3543 = !DILocation(line: 1338, column: 18, scope: !3516)
!3544 = !DILocation(line: 1339, column: 16, scope: !3516)
!3545 = !DILocation(line: 1340, column: 13, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3516, file: !1, line: 1340, column: 7)
!3547 = !DILocation(line: 1340, column: 12, scope: !3546)
!3548 = !DILocation(line: 1340, column: 32, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3546, file: !1, line: 1340, column: 7)
!3550 = !DILocation(line: 1340, column: 34, scope: !3549)
!3551 = !DILocation(line: 1340, column: 7, scope: !3546)
!3552 = !DILocation(line: 1342, column: 20, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3549, file: !1, line: 1341, column: 7)
!3554 = !DILocation(line: 1342, column: 30, scope: !3553)
!3555 = !DILocation(line: 1342, column: 33, scope: !3553)
!3556 = !DILocation(line: 1342, column: 18, scope: !3553)
!3557 = !DILocation(line: 1343, column: 13, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3553, file: !1, line: 1343, column: 13)
!3559 = !DILocation(line: 1343, column: 35, scope: !3558)
!3560 = !DILocation(line: 1343, column: 42, scope: !3558)
!3561 = !DILocation(line: 1343, column: 26, scope: !3558)
!3562 = !DILocation(line: 1343, column: 50, scope: !3558)
!3563 = !DILocation(line: 1343, column: 57, scope: !3558)
!3564 = !DILocation(line: 1343, column: 49, scope: !3558)
!3565 = !DILocation(line: 1343, column: 62, scope: !3558)
!3566 = !DILocation(line: 1343, column: 61, scope: !3558)
!3567 = !DILocation(line: 1343, column: 23, scope: !3558)
!3568 = !DILocation(line: 1343, column: 13, scope: !3553)
!3569 = !DILocation(line: 1344, column: 11, scope: !3558)
!3570 = !DILocation(line: 1345, column: 7, scope: !3553)
!3571 = !DILocation(line: 1340, column: 41, scope: !3549)
!3572 = !DILocation(line: 1340, column: 7, scope: !3549)
!3573 = distinct !{!3573, !3551, !3574}
!3574 = !DILocation(line: 1345, column: 7, scope: !3546)
!3575 = !DILocation(line: 1346, column: 36, scope: !3516)
!3576 = !DILocation(line: 1346, column: 19, scope: !3516)
!3577 = !DILocation(line: 1346, column: 13, scope: !3516)
!3578 = !DILocation(line: 1346, column: 18, scope: !3516)
!3579 = !DILocation(line: 1347, column: 5, scope: !3516)
!3580 = !DILocation(line: 1348, column: 58, scope: !2949)
!3581 = !DILocation(line: 1348, column: 35, scope: !2949)
!3582 = !DILocation(line: 1348, column: 13, scope: !2949)
!3583 = !DILocation(line: 1348, column: 12, scope: !2949)
!3584 = !DILocation(line: 1352, column: 28, scope: !2949)
!3585 = !DILocation(line: 1352, column: 10, scope: !2949)
!3586 = !DILocation(line: 1353, column: 9, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !2949, file: !1, line: 1353, column: 3)
!3588 = !DILocation(line: 1353, column: 8, scope: !3587)
!3589 = !DILocation(line: 1353, column: 13, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3587, file: !1, line: 1353, column: 3)
!3591 = !DILocation(line: 1353, column: 15, scope: !3590)
!3592 = !DILocation(line: 1353, column: 3, scope: !3587)
!3593 = !DILocation(line: 1355, column: 10, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !1, line: 1355, column: 9)
!3595 = distinct !DILexicalBlock(scope: !3590, file: !1, line: 1354, column: 3)
!3596 = !DILocation(line: 1355, column: 18, scope: !3594)
!3597 = !DILocation(line: 1355, column: 32, scope: !3594)
!3598 = !DILocation(line: 1355, column: 9, scope: !3595)
!3599 = !DILocation(line: 1357, column: 13, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3601, file: !1, line: 1357, column: 13)
!3601 = distinct !DILexicalBlock(scope: !3594, file: !1, line: 1356, column: 7)
!3602 = !DILocation(line: 1357, column: 33, scope: !3600)
!3603 = !DILocation(line: 1357, column: 17, scope: !3600)
!3604 = !DILocation(line: 1357, column: 15, scope: !3600)
!3605 = !DILocation(line: 1357, column: 13, scope: !3601)
!3606 = !DILocation(line: 1358, column: 11, scope: !3600)
!3607 = !DILocation(line: 1358, column: 23, scope: !3600)
!3608 = !DILocation(line: 1358, column: 26, scope: !3600)
!3609 = !DILocation(line: 1358, column: 29, scope: !3600)
!3610 = !DILocation(line: 1360, column: 15, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3600, file: !1, line: 1360, column: 15)
!3612 = !DILocation(line: 1360, column: 35, scope: !3611)
!3613 = !DILocation(line: 1360, column: 19, scope: !3611)
!3614 = !DILocation(line: 1360, column: 17, scope: !3611)
!3615 = !DILocation(line: 1360, column: 15, scope: !3600)
!3616 = !DILocation(line: 1361, column: 13, scope: !3611)
!3617 = !DILocation(line: 1361, column: 25, scope: !3611)
!3618 = !DILocation(line: 1361, column: 28, scope: !3611)
!3619 = !DILocation(line: 1361, column: 31, scope: !3611)
!3620 = !DILocation(line: 1363, column: 23, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3611, file: !1, line: 1363, column: 17)
!3622 = !DILocation(line: 1363, column: 36, scope: !3621)
!3623 = !DILocation(line: 1363, column: 27, scope: !3621)
!3624 = !DILocation(line: 1363, column: 17, scope: !3611)
!3625 = !DILocation(line: 1365, column: 18, scope: !3621)
!3626 = !DILocation(line: 1365, column: 26, scope: !3621)
!3627 = !DILocation(line: 1365, column: 19, scope: !3621)
!3628 = !DILocation(line: 1364, column: 76, scope: !3621)
!3629 = !DILocation(line: 1365, column: 38, scope: !3621)
!3630 = !DILocation(line: 1365, column: 48, scope: !3621)
!3631 = !DILocation(line: 1365, column: 41, scope: !3621)
!3632 = !DILocation(line: 1365, column: 30, scope: !3621)
!3633 = !DILocation(line: 1364, column: 34, scope: !3621)
!3634 = !DILocation(line: 1364, column: 15, scope: !3621)
!3635 = !DILocation(line: 1364, column: 27, scope: !3621)
!3636 = !DILocation(line: 1364, column: 30, scope: !3621)
!3637 = !DILocation(line: 1364, column: 33, scope: !3621)
!3638 = !DILocation(line: 1366, column: 7, scope: !3601)
!3639 = !DILocation(line: 1367, column: 10, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3595, file: !1, line: 1367, column: 9)
!3641 = !DILocation(line: 1367, column: 18, scope: !3640)
!3642 = !DILocation(line: 1367, column: 34, scope: !3640)
!3643 = !DILocation(line: 1367, column: 9, scope: !3595)
!3644 = !DILocation(line: 1369, column: 13, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3646, file: !1, line: 1369, column: 13)
!3646 = distinct !DILexicalBlock(scope: !3640, file: !1, line: 1368, column: 7)
!3647 = !DILocation(line: 1369, column: 33, scope: !3645)
!3648 = !DILocation(line: 1369, column: 17, scope: !3645)
!3649 = !DILocation(line: 1369, column: 15, scope: !3645)
!3650 = !DILocation(line: 1369, column: 13, scope: !3646)
!3651 = !DILocation(line: 1370, column: 11, scope: !3645)
!3652 = !DILocation(line: 1370, column: 23, scope: !3645)
!3653 = !DILocation(line: 1370, column: 26, scope: !3645)
!3654 = !DILocation(line: 1370, column: 31, scope: !3645)
!3655 = !DILocation(line: 1372, column: 15, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3645, file: !1, line: 1372, column: 15)
!3657 = !DILocation(line: 1372, column: 35, scope: !3656)
!3658 = !DILocation(line: 1372, column: 19, scope: !3656)
!3659 = !DILocation(line: 1372, column: 17, scope: !3656)
!3660 = !DILocation(line: 1372, column: 15, scope: !3645)
!3661 = !DILocation(line: 1373, column: 13, scope: !3656)
!3662 = !DILocation(line: 1373, column: 25, scope: !3656)
!3663 = !DILocation(line: 1373, column: 28, scope: !3656)
!3664 = !DILocation(line: 1373, column: 33, scope: !3656)
!3665 = !DILocation(line: 1375, column: 23, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3656, file: !1, line: 1375, column: 17)
!3667 = !DILocation(line: 1375, column: 38, scope: !3666)
!3668 = !DILocation(line: 1375, column: 29, scope: !3666)
!3669 = !DILocation(line: 1375, column: 17, scope: !3656)
!3670 = !DILocation(line: 1377, column: 18, scope: !3666)
!3671 = !DILocation(line: 1377, column: 26, scope: !3666)
!3672 = !DILocation(line: 1377, column: 19, scope: !3666)
!3673 = !DILocation(line: 1376, column: 78, scope: !3666)
!3674 = !DILocation(line: 1377, column: 40, scope: !3666)
!3675 = !DILocation(line: 1377, column: 52, scope: !3666)
!3676 = !DILocation(line: 1377, column: 45, scope: !3666)
!3677 = !DILocation(line: 1377, column: 32, scope: !3666)
!3678 = !DILocation(line: 1376, column: 36, scope: !3666)
!3679 = !DILocation(line: 1376, column: 15, scope: !3666)
!3680 = !DILocation(line: 1376, column: 27, scope: !3666)
!3681 = !DILocation(line: 1376, column: 30, scope: !3666)
!3682 = !DILocation(line: 1376, column: 35, scope: !3666)
!3683 = !DILocation(line: 1378, column: 7, scope: !3646)
!3684 = !DILocation(line: 1379, column: 10, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3595, file: !1, line: 1379, column: 9)
!3686 = !DILocation(line: 1379, column: 18, scope: !3685)
!3687 = !DILocation(line: 1379, column: 33, scope: !3685)
!3688 = !DILocation(line: 1379, column: 9, scope: !3595)
!3689 = !DILocation(line: 1381, column: 13, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3691, file: !1, line: 1381, column: 13)
!3691 = distinct !DILexicalBlock(scope: !3685, file: !1, line: 1380, column: 7)
!3692 = !DILocation(line: 1381, column: 33, scope: !3690)
!3693 = !DILocation(line: 1381, column: 17, scope: !3690)
!3694 = !DILocation(line: 1381, column: 15, scope: !3690)
!3695 = !DILocation(line: 1381, column: 13, scope: !3691)
!3696 = !DILocation(line: 1382, column: 11, scope: !3690)
!3697 = !DILocation(line: 1382, column: 23, scope: !3690)
!3698 = !DILocation(line: 1382, column: 26, scope: !3690)
!3699 = !DILocation(line: 1382, column: 30, scope: !3690)
!3700 = !DILocation(line: 1384, column: 15, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3690, file: !1, line: 1384, column: 15)
!3702 = !DILocation(line: 1384, column: 35, scope: !3701)
!3703 = !DILocation(line: 1384, column: 19, scope: !3701)
!3704 = !DILocation(line: 1384, column: 17, scope: !3701)
!3705 = !DILocation(line: 1384, column: 15, scope: !3690)
!3706 = !DILocation(line: 1385, column: 13, scope: !3701)
!3707 = !DILocation(line: 1385, column: 25, scope: !3701)
!3708 = !DILocation(line: 1385, column: 28, scope: !3701)
!3709 = !DILocation(line: 1385, column: 32, scope: !3701)
!3710 = !DILocation(line: 1387, column: 23, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3701, file: !1, line: 1387, column: 17)
!3712 = !DILocation(line: 1387, column: 37, scope: !3711)
!3713 = !DILocation(line: 1387, column: 28, scope: !3711)
!3714 = !DILocation(line: 1387, column: 17, scope: !3701)
!3715 = !DILocation(line: 1389, column: 18, scope: !3711)
!3716 = !DILocation(line: 1389, column: 26, scope: !3711)
!3717 = !DILocation(line: 1389, column: 19, scope: !3711)
!3718 = !DILocation(line: 1388, column: 77, scope: !3711)
!3719 = !DILocation(line: 1389, column: 39, scope: !3711)
!3720 = !DILocation(line: 1389, column: 50, scope: !3711)
!3721 = !DILocation(line: 1389, column: 43, scope: !3711)
!3722 = !DILocation(line: 1389, column: 31, scope: !3711)
!3723 = !DILocation(line: 1388, column: 35, scope: !3711)
!3724 = !DILocation(line: 1388, column: 15, scope: !3711)
!3725 = !DILocation(line: 1388, column: 27, scope: !3711)
!3726 = !DILocation(line: 1388, column: 30, scope: !3711)
!3727 = !DILocation(line: 1388, column: 34, scope: !3711)
!3728 = !DILocation(line: 1390, column: 7, scope: !3691)
!3729 = !DILocation(line: 1391, column: 10, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3595, file: !1, line: 1391, column: 9)
!3731 = !DILocation(line: 1391, column: 18, scope: !3730)
!3732 = !DILocation(line: 1391, column: 36, scope: !3730)
!3733 = !DILocation(line: 1391, column: 9, scope: !3595)
!3734 = !DILocation(line: 1393, column: 13, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3736, file: !1, line: 1393, column: 13)
!3736 = distinct !DILexicalBlock(scope: !3730, file: !1, line: 1392, column: 7)
!3737 = !DILocation(line: 1393, column: 33, scope: !3735)
!3738 = !DILocation(line: 1393, column: 17, scope: !3735)
!3739 = !DILocation(line: 1393, column: 15, scope: !3735)
!3740 = !DILocation(line: 1393, column: 13, scope: !3736)
!3741 = !DILocation(line: 1394, column: 11, scope: !3735)
!3742 = !DILocation(line: 1394, column: 23, scope: !3735)
!3743 = !DILocation(line: 1394, column: 26, scope: !3735)
!3744 = !DILocation(line: 1394, column: 33, scope: !3735)
!3745 = !DILocation(line: 1396, column: 15, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3735, file: !1, line: 1396, column: 15)
!3747 = !DILocation(line: 1396, column: 35, scope: !3746)
!3748 = !DILocation(line: 1396, column: 19, scope: !3746)
!3749 = !DILocation(line: 1396, column: 17, scope: !3746)
!3750 = !DILocation(line: 1396, column: 15, scope: !3735)
!3751 = !DILocation(line: 1397, column: 13, scope: !3746)
!3752 = !DILocation(line: 1397, column: 25, scope: !3746)
!3753 = !DILocation(line: 1397, column: 28, scope: !3746)
!3754 = !DILocation(line: 1397, column: 35, scope: !3746)
!3755 = !DILocation(line: 1399, column: 23, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3746, file: !1, line: 1399, column: 17)
!3757 = !DILocation(line: 1399, column: 40, scope: !3756)
!3758 = !DILocation(line: 1399, column: 31, scope: !3756)
!3759 = !DILocation(line: 1399, column: 17, scope: !3746)
!3760 = !DILocation(line: 1401, column: 18, scope: !3756)
!3761 = !DILocation(line: 1401, column: 26, scope: !3756)
!3762 = !DILocation(line: 1401, column: 19, scope: !3756)
!3763 = !DILocation(line: 1400, column: 80, scope: !3756)
!3764 = !DILocation(line: 1401, column: 42, scope: !3756)
!3765 = !DILocation(line: 1401, column: 56, scope: !3756)
!3766 = !DILocation(line: 1401, column: 49, scope: !3756)
!3767 = !DILocation(line: 1401, column: 34, scope: !3756)
!3768 = !DILocation(line: 1400, column: 38, scope: !3756)
!3769 = !DILocation(line: 1400, column: 15, scope: !3756)
!3770 = !DILocation(line: 1400, column: 27, scope: !3756)
!3771 = !DILocation(line: 1400, column: 30, scope: !3756)
!3772 = !DILocation(line: 1400, column: 37, scope: !3756)
!3773 = !DILocation(line: 1402, column: 7, scope: !3736)
!3774 = !DILocation(line: 1403, column: 11, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3595, file: !1, line: 1403, column: 9)
!3776 = !DILocation(line: 1403, column: 19, scope: !3775)
!3777 = !DILocation(line: 1403, column: 35, scope: !3775)
!3778 = !DILocation(line: 1403, column: 41, scope: !3775)
!3779 = !DILocation(line: 1404, column: 10, scope: !3775)
!3780 = !DILocation(line: 1404, column: 17, scope: !3775)
!3781 = !DILocation(line: 1404, column: 28, scope: !3775)
!3782 = !DILocation(line: 1403, column: 9, scope: !3595)
!3783 = !DILocation(line: 1406, column: 13, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3785, file: !1, line: 1406, column: 13)
!3785 = distinct !DILexicalBlock(scope: !3775, file: !1, line: 1405, column: 7)
!3786 = !DILocation(line: 1406, column: 33, scope: !3784)
!3787 = !DILocation(line: 1406, column: 17, scope: !3784)
!3788 = !DILocation(line: 1406, column: 15, scope: !3784)
!3789 = !DILocation(line: 1406, column: 13, scope: !3785)
!3790 = !DILocation(line: 1407, column: 11, scope: !3784)
!3791 = !DILocation(line: 1407, column: 23, scope: !3784)
!3792 = !DILocation(line: 1407, column: 26, scope: !3784)
!3793 = !DILocation(line: 1407, column: 31, scope: !3784)
!3794 = !DILocation(line: 1409, column: 15, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3784, file: !1, line: 1409, column: 15)
!3796 = !DILocation(line: 1409, column: 35, scope: !3795)
!3797 = !DILocation(line: 1409, column: 19, scope: !3795)
!3798 = !DILocation(line: 1409, column: 17, scope: !3795)
!3799 = !DILocation(line: 1409, column: 15, scope: !3784)
!3800 = !DILocation(line: 1410, column: 13, scope: !3795)
!3801 = !DILocation(line: 1410, column: 25, scope: !3795)
!3802 = !DILocation(line: 1410, column: 28, scope: !3795)
!3803 = !DILocation(line: 1410, column: 33, scope: !3795)
!3804 = !DILocation(line: 1412, column: 23, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3795, file: !1, line: 1412, column: 17)
!3806 = !DILocation(line: 1412, column: 38, scope: !3805)
!3807 = !DILocation(line: 1412, column: 29, scope: !3805)
!3808 = !DILocation(line: 1412, column: 17, scope: !3795)
!3809 = !DILocation(line: 1414, column: 18, scope: !3805)
!3810 = !DILocation(line: 1414, column: 26, scope: !3805)
!3811 = !DILocation(line: 1414, column: 19, scope: !3805)
!3812 = !DILocation(line: 1413, column: 78, scope: !3805)
!3813 = !DILocation(line: 1414, column: 40, scope: !3805)
!3814 = !DILocation(line: 1414, column: 52, scope: !3805)
!3815 = !DILocation(line: 1414, column: 45, scope: !3805)
!3816 = !DILocation(line: 1414, column: 32, scope: !3805)
!3817 = !DILocation(line: 1413, column: 36, scope: !3805)
!3818 = !DILocation(line: 1413, column: 15, scope: !3805)
!3819 = !DILocation(line: 1413, column: 27, scope: !3805)
!3820 = !DILocation(line: 1413, column: 30, scope: !3805)
!3821 = !DILocation(line: 1413, column: 35, scope: !3805)
!3822 = !DILocation(line: 1415, column: 7, scope: !3785)
!3823 = !DILocation(line: 1416, column: 3, scope: !3595)
!3824 = !DILocation(line: 1353, column: 37, scope: !3590)
!3825 = !DILocation(line: 1353, column: 3, scope: !3590)
!3826 = distinct !{!3826, !3592, !3827}
!3827 = !DILocation(line: 1416, column: 3, scope: !3587)
!3828 = !DILocation(line: 1420, column: 9, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !2949, file: !1, line: 1420, column: 7)
!3830 = !DILocation(line: 1420, column: 17, scope: !3829)
!3831 = !DILocation(line: 1420, column: 35, scope: !3829)
!3832 = !DILocation(line: 1420, column: 41, scope: !3829)
!3833 = !DILocation(line: 1420, column: 47, scope: !3829)
!3834 = !DILocation(line: 1420, column: 55, scope: !3829)
!3835 = !DILocation(line: 1420, column: 71, scope: !3829)
!3836 = !DILocation(line: 1420, column: 77, scope: !3829)
!3837 = !DILocation(line: 1421, column: 8, scope: !3829)
!3838 = !DILocation(line: 1421, column: 15, scope: !3829)
!3839 = !DILocation(line: 1421, column: 26, scope: !3829)
!3840 = !DILocation(line: 1420, column: 7, scope: !2949)
!3841 = !DILocation(line: 1422, column: 5, scope: !3829)
!3842 = !DILocation(line: 1422, column: 12, scope: !3829)
!3843 = !DILocation(line: 1422, column: 25, scope: !3829)
!3844 = !DILocation(line: 1423, column: 7, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !2949, file: !1, line: 1423, column: 7)
!3846 = !DILocation(line: 1423, column: 14, scope: !3845)
!3847 = !DILocation(line: 1423, column: 28, scope: !3845)
!3848 = !DILocation(line: 1423, column: 7, scope: !2949)
!3849 = !DILocation(line: 1428, column: 13, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3851, file: !1, line: 1428, column: 7)
!3851 = distinct !DILexicalBlock(scope: !3845, file: !1, line: 1424, column: 5)
!3852 = !DILocation(line: 1428, column: 12, scope: !3850)
!3853 = !DILocation(line: 1428, column: 17, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3850, file: !1, line: 1428, column: 7)
!3855 = !DILocation(line: 1428, column: 31, scope: !3854)
!3856 = !DILocation(line: 1428, column: 38, scope: !3854)
!3857 = !DILocation(line: 1428, column: 19, scope: !3854)
!3858 = !DILocation(line: 1428, column: 7, scope: !3850)
!3859 = !DILocation(line: 1430, column: 14, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !1, line: 1430, column: 13)
!3861 = distinct !DILexicalBlock(scope: !3854, file: !1, line: 1429, column: 7)
!3862 = !DILocation(line: 1430, column: 22, scope: !3860)
!3863 = !DILocation(line: 1430, column: 36, scope: !3860)
!3864 = !DILocation(line: 1430, column: 13, scope: !3861)
!3865 = !DILocation(line: 1432, column: 23, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3867, file: !1, line: 1432, column: 17)
!3867 = distinct !DILexicalBlock(scope: !3860, file: !1, line: 1431, column: 11)
!3868 = !DILocation(line: 1432, column: 36, scope: !3866)
!3869 = !DILocation(line: 1432, column: 27, scope: !3866)
!3870 = !DILocation(line: 1432, column: 17, scope: !3867)
!3871 = !DILocation(line: 1433, column: 38, scope: !3866)
!3872 = !DILocation(line: 1434, column: 35, scope: !3866)
!3873 = !DILocation(line: 1434, column: 42, scope: !3866)
!3874 = !DILocation(line: 1434, column: 51, scope: !3866)
!3875 = !DILocation(line: 1434, column: 54, scope: !3866)
!3876 = !DILocation(line: 1434, column: 17, scope: !3866)
!3877 = !DILocation(line: 1434, column: 60, scope: !3866)
!3878 = !DILocation(line: 1433, column: 15, scope: !3866)
!3879 = !DILocation(line: 1433, column: 22, scope: !3866)
!3880 = !DILocation(line: 1433, column: 31, scope: !3866)
!3881 = !DILocation(line: 1433, column: 34, scope: !3866)
!3882 = !DILocation(line: 1433, column: 37, scope: !3866)
!3883 = !DILocation(line: 1435, column: 11, scope: !3867)
!3884 = !DILocation(line: 1436, column: 14, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3861, file: !1, line: 1436, column: 13)
!3886 = !DILocation(line: 1436, column: 22, scope: !3885)
!3887 = !DILocation(line: 1436, column: 38, scope: !3885)
!3888 = !DILocation(line: 1436, column: 13, scope: !3861)
!3889 = !DILocation(line: 1438, column: 23, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3891, file: !1, line: 1438, column: 17)
!3891 = distinct !DILexicalBlock(scope: !3885, file: !1, line: 1437, column: 11)
!3892 = !DILocation(line: 1438, column: 38, scope: !3890)
!3893 = !DILocation(line: 1438, column: 29, scope: !3890)
!3894 = !DILocation(line: 1438, column: 17, scope: !3891)
!3895 = !DILocation(line: 1439, column: 40, scope: !3890)
!3896 = !DILocation(line: 1440, column: 35, scope: !3890)
!3897 = !DILocation(line: 1440, column: 42, scope: !3890)
!3898 = !DILocation(line: 1440, column: 51, scope: !3890)
!3899 = !DILocation(line: 1440, column: 54, scope: !3890)
!3900 = !DILocation(line: 1440, column: 17, scope: !3890)
!3901 = !DILocation(line: 1440, column: 62, scope: !3890)
!3902 = !DILocation(line: 1439, column: 15, scope: !3890)
!3903 = !DILocation(line: 1439, column: 22, scope: !3890)
!3904 = !DILocation(line: 1439, column: 31, scope: !3890)
!3905 = !DILocation(line: 1439, column: 34, scope: !3890)
!3906 = !DILocation(line: 1439, column: 39, scope: !3890)
!3907 = !DILocation(line: 1441, column: 11, scope: !3891)
!3908 = !DILocation(line: 1442, column: 14, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3861, file: !1, line: 1442, column: 13)
!3910 = !DILocation(line: 1442, column: 22, scope: !3909)
!3911 = !DILocation(line: 1442, column: 37, scope: !3909)
!3912 = !DILocation(line: 1442, column: 13, scope: !3861)
!3913 = !DILocation(line: 1444, column: 23, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3915, file: !1, line: 1444, column: 17)
!3915 = distinct !DILexicalBlock(scope: !3909, file: !1, line: 1443, column: 11)
!3916 = !DILocation(line: 1444, column: 37, scope: !3914)
!3917 = !DILocation(line: 1444, column: 28, scope: !3914)
!3918 = !DILocation(line: 1444, column: 17, scope: !3915)
!3919 = !DILocation(line: 1445, column: 39, scope: !3914)
!3920 = !DILocation(line: 1446, column: 35, scope: !3914)
!3921 = !DILocation(line: 1446, column: 42, scope: !3914)
!3922 = !DILocation(line: 1446, column: 51, scope: !3914)
!3923 = !DILocation(line: 1446, column: 54, scope: !3914)
!3924 = !DILocation(line: 1446, column: 17, scope: !3914)
!3925 = !DILocation(line: 1446, column: 61, scope: !3914)
!3926 = !DILocation(line: 1445, column: 15, scope: !3914)
!3927 = !DILocation(line: 1445, column: 22, scope: !3914)
!3928 = !DILocation(line: 1445, column: 31, scope: !3914)
!3929 = !DILocation(line: 1445, column: 34, scope: !3914)
!3930 = !DILocation(line: 1445, column: 38, scope: !3914)
!3931 = !DILocation(line: 1447, column: 11, scope: !3915)
!3932 = !DILocation(line: 1448, column: 14, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3861, file: !1, line: 1448, column: 13)
!3934 = !DILocation(line: 1448, column: 22, scope: !3933)
!3935 = !DILocation(line: 1448, column: 40, scope: !3933)
!3936 = !DILocation(line: 1448, column: 13, scope: !3861)
!3937 = !DILocation(line: 1450, column: 23, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3939, file: !1, line: 1450, column: 17)
!3939 = distinct !DILexicalBlock(scope: !3933, file: !1, line: 1449, column: 11)
!3940 = !DILocation(line: 1450, column: 40, scope: !3938)
!3941 = !DILocation(line: 1450, column: 31, scope: !3938)
!3942 = !DILocation(line: 1450, column: 17, scope: !3939)
!3943 = !DILocation(line: 1451, column: 42, scope: !3938)
!3944 = !DILocation(line: 1452, column: 35, scope: !3938)
!3945 = !DILocation(line: 1452, column: 42, scope: !3938)
!3946 = !DILocation(line: 1452, column: 51, scope: !3938)
!3947 = !DILocation(line: 1452, column: 54, scope: !3938)
!3948 = !DILocation(line: 1452, column: 17, scope: !3938)
!3949 = !DILocation(line: 1452, column: 64, scope: !3938)
!3950 = !DILocation(line: 1451, column: 15, scope: !3938)
!3951 = !DILocation(line: 1451, column: 22, scope: !3938)
!3952 = !DILocation(line: 1451, column: 31, scope: !3938)
!3953 = !DILocation(line: 1451, column: 34, scope: !3938)
!3954 = !DILocation(line: 1451, column: 41, scope: !3938)
!3955 = !DILocation(line: 1453, column: 11, scope: !3939)
!3956 = !DILocation(line: 1454, column: 7, scope: !3861)
!3957 = !DILocation(line: 1428, column: 47, scope: !3854)
!3958 = !DILocation(line: 1428, column: 7, scope: !3854)
!3959 = distinct !{!3959, !3858, !3960}
!3960 = !DILocation(line: 1454, column: 7, scope: !3850)
!3961 = !DILocation(line: 1455, column: 5, scope: !3851)
!3962 = !DILocation(line: 1459, column: 9, scope: !2949)
!3963 = !DILocation(line: 1460, column: 11, scope: !2949)
!3964 = !DILocation(line: 1465, column: 9, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !2949, file: !1, line: 1465, column: 3)
!3966 = !DILocation(line: 1465, column: 8, scope: !3965)
!3967 = !DILocation(line: 1465, column: 13, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3965, file: !1, line: 1465, column: 3)
!3969 = !DILocation(line: 1465, column: 27, scope: !3968)
!3970 = !DILocation(line: 1465, column: 34, scope: !3968)
!3971 = !DILocation(line: 1465, column: 15, scope: !3968)
!3972 = !DILocation(line: 1465, column: 3, scope: !3965)
!3973 = !DILocalVariable(name: "indexes", scope: !3974, file: !1, line: 1468, type: !1141)
!3974 = distinct !DILexicalBlock(scope: !3968, file: !1, line: 1466, column: 3)
!3975 = !DILocation(line: 1468, column: 17, scope: !3974)
!3976 = !DILocalVariable(name: "q", scope: !3974, file: !1, line: 1471, type: !1144)
!3977 = !DILocation(line: 1471, column: 17, scope: !3974)
!3978 = !DILocalVariable(name: "x", scope: !3974, file: !1, line: 1474, type: !615)
!3979 = !DILocation(line: 1474, column: 7, scope: !3974)
!3980 = !DILocation(line: 1476, column: 9, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3974, file: !1, line: 1476, column: 9)
!3982 = !DILocation(line: 1476, column: 16, scope: !3981)
!3983 = !DILocation(line: 1476, column: 9, scope: !3974)
!3984 = !DILocation(line: 1477, column: 7, scope: !3981)
!3985 = !DILocation(line: 1478, column: 35, scope: !3974)
!3986 = !DILocation(line: 1478, column: 48, scope: !3974)
!3987 = !DILocation(line: 1478, column: 50, scope: !3974)
!3988 = !DILocation(line: 1478, column: 57, scope: !3974)
!3989 = !DILocation(line: 1478, column: 67, scope: !3974)
!3990 = !DILocation(line: 1478, column: 7, scope: !3974)
!3991 = !DILocation(line: 1478, column: 6, scope: !3974)
!3992 = !DILocation(line: 1479, column: 9, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3974, file: !1, line: 1479, column: 9)
!3994 = !DILocation(line: 1479, column: 11, scope: !3993)
!3995 = !DILocation(line: 1479, column: 9, scope: !3974)
!3996 = !DILocation(line: 1481, column: 15, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3993, file: !1, line: 1480, column: 7)
!3998 = !DILocation(line: 1482, column: 9, scope: !3997)
!3999 = !DILocation(line: 1484, column: 45, scope: !3974)
!4000 = !DILocation(line: 1484, column: 13, scope: !3974)
!4001 = !DILocation(line: 1484, column: 12, scope: !3974)
!4002 = !DILocation(line: 1485, column: 11, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3974, file: !1, line: 1485, column: 5)
!4004 = !DILocation(line: 1485, column: 10, scope: !4003)
!4005 = !DILocation(line: 1485, column: 15, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !4003, file: !1, line: 1485, column: 5)
!4007 = !DILocation(line: 1485, column: 29, scope: !4006)
!4008 = !DILocation(line: 1485, column: 36, scope: !4006)
!4009 = !DILocation(line: 1485, column: 17, scope: !4006)
!4010 = !DILocation(line: 1485, column: 5, scope: !4003)
!4011 = !DILocation(line: 1487, column: 12, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4013, file: !1, line: 1487, column: 11)
!4013 = distinct !DILexicalBlock(scope: !4006, file: !1, line: 1486, column: 5)
!4014 = !DILocation(line: 1487, column: 20, scope: !4012)
!4015 = !DILocation(line: 1487, column: 34, scope: !4012)
!4016 = !DILocation(line: 1487, column: 11, scope: !4013)
!4017 = !DILocation(line: 1489, column: 21, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4019, file: !1, line: 1489, column: 15)
!4019 = distinct !DILexicalBlock(scope: !4012, file: !1, line: 1488, column: 9)
!4020 = !DILocation(line: 1489, column: 34, scope: !4018)
!4021 = !DILocation(line: 1489, column: 25, scope: !4018)
!4022 = !DILocation(line: 1489, column: 15, scope: !4019)
!4023 = !DILocation(line: 1490, column: 13, scope: !4018)
!4024 = !DILocation(line: 1492, column: 9, scope: !4019)
!4025 = !DILocation(line: 1493, column: 12, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !4013, file: !1, line: 1493, column: 11)
!4027 = !DILocation(line: 1493, column: 20, scope: !4026)
!4028 = !DILocation(line: 1493, column: 36, scope: !4026)
!4029 = !DILocation(line: 1493, column: 11, scope: !4013)
!4030 = !DILocation(line: 1495, column: 21, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4032, file: !1, line: 1495, column: 15)
!4032 = distinct !DILexicalBlock(scope: !4026, file: !1, line: 1494, column: 9)
!4033 = !DILocation(line: 1495, column: 36, scope: !4031)
!4034 = !DILocation(line: 1495, column: 27, scope: !4031)
!4035 = !DILocation(line: 1495, column: 15, scope: !4032)
!4036 = !DILocation(line: 1496, column: 13, scope: !4031)
!4037 = !DILocation(line: 1498, column: 9, scope: !4032)
!4038 = !DILocation(line: 1499, column: 12, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4013, file: !1, line: 1499, column: 11)
!4040 = !DILocation(line: 1499, column: 20, scope: !4039)
!4041 = !DILocation(line: 1499, column: 35, scope: !4039)
!4042 = !DILocation(line: 1499, column: 11, scope: !4013)
!4043 = !DILocation(line: 1501, column: 21, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4045, file: !1, line: 1501, column: 15)
!4045 = distinct !DILexicalBlock(scope: !4039, file: !1, line: 1500, column: 9)
!4046 = !DILocation(line: 1501, column: 35, scope: !4044)
!4047 = !DILocation(line: 1501, column: 26, scope: !4044)
!4048 = !DILocation(line: 1501, column: 15, scope: !4045)
!4049 = !DILocation(line: 1502, column: 13, scope: !4044)
!4050 = !DILocation(line: 1504, column: 9, scope: !4045)
!4051 = !DILocation(line: 1505, column: 12, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4013, file: !1, line: 1505, column: 11)
!4053 = !DILocation(line: 1505, column: 20, scope: !4052)
!4054 = !DILocation(line: 1505, column: 38, scope: !4052)
!4055 = !DILocation(line: 1505, column: 11, scope: !4013)
!4056 = !DILocation(line: 1507, column: 21, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4058, file: !1, line: 1507, column: 15)
!4058 = distinct !DILexicalBlock(scope: !4052, file: !1, line: 1506, column: 9)
!4059 = !DILocation(line: 1507, column: 38, scope: !4057)
!4060 = !DILocation(line: 1507, column: 29, scope: !4057)
!4061 = !DILocation(line: 1507, column: 15, scope: !4058)
!4062 = !DILocation(line: 1508, column: 13, scope: !4057)
!4063 = !DILocation(line: 1510, column: 9, scope: !4058)
!4064 = !DILocation(line: 1511, column: 13, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4013, file: !1, line: 1511, column: 11)
!4066 = !DILocation(line: 1511, column: 21, scope: !4065)
!4067 = !DILocation(line: 1511, column: 37, scope: !4065)
!4068 = !DILocation(line: 1511, column: 43, scope: !4065)
!4069 = !DILocation(line: 1512, column: 12, scope: !4065)
!4070 = !DILocation(line: 1512, column: 19, scope: !4065)
!4071 = !DILocation(line: 1512, column: 30, scope: !4065)
!4072 = !DILocation(line: 1511, column: 11, scope: !4013)
!4073 = !DILocation(line: 1514, column: 21, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4075, file: !1, line: 1514, column: 15)
!4075 = distinct !DILexicalBlock(scope: !4065, file: !1, line: 1513, column: 9)
!4076 = !DILocation(line: 1514, column: 36, scope: !4074)
!4077 = !DILocation(line: 1514, column: 27, scope: !4074)
!4078 = !DILocation(line: 1514, column: 15, scope: !4075)
!4079 = !DILocation(line: 1515, column: 13, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4081, file: !1, line: 1515, column: 13)
!4081 = distinct !DILexicalBlock(scope: !4074, file: !1, line: 1515, column: 13)
!4082 = !DILocation(line: 1515, column: 13, scope: !4081)
!4083 = !DILocation(line: 1517, column: 9, scope: !4075)
!4084 = !DILocation(line: 1518, column: 8, scope: !4013)
!4085 = !DILocation(line: 1519, column: 5, scope: !4013)
!4086 = !DILocation(line: 1485, column: 46, scope: !4006)
!4087 = !DILocation(line: 1485, column: 5, scope: !4006)
!4088 = distinct !{!4088, !4010, !4089}
!4089 = !DILocation(line: 1519, column: 5, scope: !4003)
!4090 = !DILocation(line: 1520, column: 38, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !3974, file: !1, line: 1520, column: 9)
!4092 = !DILocation(line: 1520, column: 49, scope: !4091)
!4093 = !DILocation(line: 1520, column: 9, scope: !4091)
!4094 = !DILocation(line: 1520, column: 60, scope: !4091)
!4095 = !DILocation(line: 1520, column: 9, scope: !3974)
!4096 = !DILocation(line: 1521, column: 13, scope: !4091)
!4097 = !DILocation(line: 1521, column: 7, scope: !4091)
!4098 = !DILocation(line: 1522, column: 9, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !3974, file: !1, line: 1522, column: 9)
!4100 = !DILocation(line: 1522, column: 16, scope: !4099)
!4101 = !DILocation(line: 1522, column: 33, scope: !4099)
!4102 = !DILocation(line: 1522, column: 9, scope: !3974)
!4103 = !DILocalVariable(name: "proceed", scope: !4104, file: !1, line: 1525, type: !581)
!4104 = distinct !DILexicalBlock(scope: !4099, file: !1, line: 1523, column: 7)
!4105 = !DILocation(line: 1525, column: 11, scope: !4104)
!4106 = !DILocation(line: 1530, column: 34, scope: !4104)
!4107 = !DILocation(line: 1530, column: 72, scope: !4104)
!4108 = !DILocation(line: 1531, column: 11, scope: !4104)
!4109 = !DILocation(line: 1531, column: 18, scope: !4104)
!4110 = !DILocation(line: 1530, column: 17, scope: !4104)
!4111 = !DILocation(line: 1530, column: 16, scope: !4104)
!4112 = !DILocation(line: 1532, column: 13, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4104, file: !1, line: 1532, column: 13)
!4114 = !DILocation(line: 1532, column: 21, scope: !4113)
!4115 = !DILocation(line: 1532, column: 13, scope: !4104)
!4116 = !DILocation(line: 1533, column: 17, scope: !4113)
!4117 = !DILocation(line: 1533, column: 11, scope: !4113)
!4118 = !DILocation(line: 1534, column: 7, scope: !4104)
!4119 = !DILocation(line: 1535, column: 3, scope: !3974)
!4120 = !DILocation(line: 1465, column: 41, scope: !3968)
!4121 = !DILocation(line: 1465, column: 3, scope: !3968)
!4122 = distinct !{!4122, !3972, !4123}
!4123 = !DILocation(line: 1535, column: 3, scope: !3965)
!4124 = !DILocation(line: 1536, column: 31, scope: !2949)
!4125 = !DILocation(line: 1536, column: 14, scope: !2949)
!4126 = !DILocation(line: 1536, column: 13, scope: !2949)
!4127 = !DILocation(line: 1537, column: 61, scope: !2949)
!4128 = !DILocation(line: 1537, column: 38, scope: !2949)
!4129 = !DILocation(line: 1537, column: 15, scope: !2949)
!4130 = !DILocation(line: 1537, column: 14, scope: !2949)
!4131 = !DILocation(line: 1538, column: 10, scope: !2949)
!4132 = !DILocation(line: 1538, column: 3, scope: !2949)
!4133 = !DILocation(line: 1539, column: 1, scope: !2949)
!4134 = distinct !DISubprogram(name: "EnhanceImage", scope: !1, file: !1, line: 1566, type: !4135, scopeLine: 1567, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!4135 = !DISubroutineType(types: !4136)
!4136 = !{!565, !2146, !998}
!4137 = !DILocalVariable(name: "image", arg: 1, scope: !4134, file: !1, line: 1566, type: !2146)
!4138 = !DILocation(line: 1566, column: 47, scope: !4134)
!4139 = !DILocalVariable(name: "exception", arg: 2, scope: !4134, file: !1, line: 1566, type: !998)
!4140 = !DILocation(line: 1566, column: 68, scope: !4134)
!4141 = !DILocalVariable(name: "enhance_view", scope: !4134, file: !1, line: 1597, type: !992)
!4142 = !DILocation(line: 1597, column: 6, scope: !4134)
!4143 = !DILocalVariable(name: "image_view", scope: !4134, file: !1, line: 1598, type: !992)
!4144 = !DILocation(line: 1598, column: 6, scope: !4134)
!4145 = !DILocalVariable(name: "enhance_image", scope: !4134, file: !1, line: 1601, type: !565)
!4146 = !DILocation(line: 1601, column: 6, scope: !4134)
!4147 = !DILocalVariable(name: "status", scope: !4134, file: !1, line: 1604, type: !581)
!4148 = !DILocation(line: 1604, column: 5, scope: !4134)
!4149 = !DILocalVariable(name: "progress", scope: !4134, file: !1, line: 1607, type: !685)
!4150 = !DILocation(line: 1607, column: 5, scope: !4134)
!4151 = !DILocalVariable(name: "zero", scope: !4134, file: !1, line: 1610, type: !772)
!4152 = !DILocation(line: 1610, column: 5, scope: !4134)
!4153 = !DILocalVariable(name: "y", scope: !4134, file: !1, line: 1613, type: !615)
!4154 = !DILocation(line: 1613, column: 5, scope: !4134)
!4155 = !DILocation(line: 1620, column: 7, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4134, file: !1, line: 1620, column: 7)
!4157 = !DILocation(line: 1620, column: 14, scope: !4156)
!4158 = !DILocation(line: 1620, column: 20, scope: !4156)
!4159 = !DILocation(line: 1620, column: 7, scope: !4134)
!4160 = !DILocation(line: 1621, column: 61, scope: !4156)
!4161 = !DILocation(line: 1621, column: 68, scope: !4156)
!4162 = !DILocation(line: 1621, column: 12, scope: !4156)
!4163 = !DILocation(line: 1621, column: 5, scope: !4156)
!4164 = !DILocation(line: 1624, column: 8, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4134, file: !1, line: 1624, column: 7)
!4166 = !DILocation(line: 1624, column: 15, scope: !4165)
!4167 = !DILocation(line: 1624, column: 23, scope: !4165)
!4168 = !DILocation(line: 1624, column: 28, scope: !4165)
!4169 = !DILocation(line: 1624, column: 32, scope: !4165)
!4170 = !DILocation(line: 1624, column: 39, scope: !4165)
!4171 = !DILocation(line: 1624, column: 44, scope: !4165)
!4172 = !DILocation(line: 1624, column: 7, scope: !4134)
!4173 = !DILocation(line: 1625, column: 5, scope: !4165)
!4174 = !DILocation(line: 1626, column: 28, scope: !4134)
!4175 = !DILocation(line: 1626, column: 34, scope: !4134)
!4176 = !DILocation(line: 1626, column: 41, scope: !4134)
!4177 = !DILocation(line: 1626, column: 49, scope: !4134)
!4178 = !DILocation(line: 1626, column: 56, scope: !4134)
!4179 = !DILocation(line: 1627, column: 5, scope: !4134)
!4180 = !DILocation(line: 1626, column: 17, scope: !4134)
!4181 = !DILocation(line: 1626, column: 16, scope: !4134)
!4182 = !DILocation(line: 1628, column: 7, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4134, file: !1, line: 1628, column: 7)
!4184 = !DILocation(line: 1628, column: 21, scope: !4183)
!4185 = !DILocation(line: 1628, column: 7, scope: !4134)
!4186 = !DILocation(line: 1629, column: 5, scope: !4183)
!4187 = !DILocation(line: 1630, column: 28, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4134, file: !1, line: 1630, column: 7)
!4189 = !DILocation(line: 1630, column: 7, scope: !4188)
!4190 = !DILocation(line: 1630, column: 55, scope: !4188)
!4191 = !DILocation(line: 1630, column: 7, scope: !4134)
!4192 = !DILocation(line: 1632, column: 24, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4188, file: !1, line: 1631, column: 5)
!4194 = !DILocation(line: 1632, column: 35, scope: !4193)
!4195 = !DILocation(line: 1632, column: 50, scope: !4193)
!4196 = !DILocation(line: 1632, column: 7, scope: !4193)
!4197 = !DILocation(line: 1633, column: 34, scope: !4193)
!4198 = !DILocation(line: 1633, column: 21, scope: !4193)
!4199 = !DILocation(line: 1633, column: 20, scope: !4193)
!4200 = !DILocation(line: 1634, column: 7, scope: !4193)
!4201 = !DILocation(line: 1639, column: 9, scope: !4134)
!4202 = !DILocation(line: 1640, column: 11, scope: !4134)
!4203 = !DILocation(line: 1641, column: 28, scope: !4134)
!4204 = !DILocation(line: 1641, column: 10, scope: !4134)
!4205 = !DILocation(line: 1642, column: 40, scope: !4134)
!4206 = !DILocation(line: 1642, column: 46, scope: !4134)
!4207 = !DILocation(line: 1642, column: 14, scope: !4134)
!4208 = !DILocation(line: 1642, column: 13, scope: !4134)
!4209 = !DILocation(line: 1643, column: 42, scope: !4134)
!4210 = !DILocation(line: 1643, column: 56, scope: !4134)
!4211 = !DILocation(line: 1643, column: 16, scope: !4134)
!4212 = !DILocation(line: 1643, column: 15, scope: !4134)
!4213 = !DILocation(line: 1648, column: 9, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4134, file: !1, line: 1648, column: 3)
!4215 = !DILocation(line: 1648, column: 8, scope: !4214)
!4216 = !DILocation(line: 1648, column: 13, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4214, file: !1, line: 1648, column: 3)
!4218 = !DILocation(line: 1648, column: 27, scope: !4217)
!4219 = !DILocation(line: 1648, column: 34, scope: !4217)
!4220 = !DILocation(line: 1648, column: 15, scope: !4217)
!4221 = !DILocation(line: 1648, column: 3, scope: !4214)
!4222 = !DILocalVariable(name: "p", scope: !4223, file: !1, line: 1651, type: !3050)
!4223 = distinct !DILexicalBlock(scope: !4217, file: !1, line: 1649, column: 3)
!4224 = !DILocation(line: 1651, column: 17, scope: !4223)
!4225 = !DILocalVariable(name: "q", scope: !4223, file: !1, line: 1654, type: !1144)
!4226 = !DILocation(line: 1654, column: 17, scope: !4223)
!4227 = !DILocalVariable(name: "x", scope: !4223, file: !1, line: 1657, type: !615)
!4228 = !DILocation(line: 1657, column: 7, scope: !4223)
!4229 = !DILocation(line: 1662, column: 9, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4223, file: !1, line: 1662, column: 9)
!4231 = !DILocation(line: 1662, column: 16, scope: !4230)
!4232 = !DILocation(line: 1662, column: 9, scope: !4223)
!4233 = !DILocation(line: 1663, column: 7, scope: !4230)
!4234 = !DILocation(line: 1664, column: 33, scope: !4223)
!4235 = !DILocation(line: 1664, column: 47, scope: !4223)
!4236 = !DILocation(line: 1664, column: 48, scope: !4223)
!4237 = !DILocation(line: 1664, column: 51, scope: !4223)
!4238 = !DILocation(line: 1664, column: 58, scope: !4223)
!4239 = !DILocation(line: 1664, column: 65, scope: !4223)
!4240 = !DILocation(line: 1664, column: 70, scope: !4223)
!4241 = !DILocation(line: 1664, column: 7, scope: !4223)
!4242 = !DILocation(line: 1664, column: 6, scope: !4223)
!4243 = !DILocation(line: 1665, column: 37, scope: !4223)
!4244 = !DILocation(line: 1665, column: 52, scope: !4223)
!4245 = !DILocation(line: 1665, column: 54, scope: !4223)
!4246 = !DILocation(line: 1665, column: 69, scope: !4223)
!4247 = !DILocation(line: 1666, column: 7, scope: !4223)
!4248 = !DILocation(line: 1665, column: 7, scope: !4223)
!4249 = !DILocation(line: 1665, column: 6, scope: !4223)
!4250 = !DILocation(line: 1667, column: 10, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4223, file: !1, line: 1667, column: 9)
!4252 = !DILocation(line: 1667, column: 12, scope: !4251)
!4253 = !DILocation(line: 1667, column: 43, scope: !4251)
!4254 = !DILocation(line: 1667, column: 47, scope: !4251)
!4255 = !DILocation(line: 1667, column: 49, scope: !4251)
!4256 = !DILocation(line: 1667, column: 9, scope: !4223)
!4257 = !DILocation(line: 1669, column: 15, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4251, file: !1, line: 1668, column: 7)
!4259 = !DILocation(line: 1670, column: 9, scope: !4258)
!4260 = !DILocation(line: 1672, column: 11, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4223, file: !1, line: 1672, column: 5)
!4262 = !DILocation(line: 1672, column: 10, scope: !4261)
!4263 = !DILocation(line: 1672, column: 15, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4261, file: !1, line: 1672, column: 5)
!4265 = !DILocation(line: 1672, column: 29, scope: !4264)
!4266 = !DILocation(line: 1672, column: 36, scope: !4264)
!4267 = !DILocation(line: 1672, column: 17, scope: !4264)
!4268 = !DILocation(line: 1672, column: 5, scope: !4261)
!4269 = !DILocalVariable(name: "aggregate", scope: !4270, file: !1, line: 1675, type: !772)
!4270 = distinct !DILexicalBlock(scope: !4264, file: !1, line: 1673, column: 5)
!4271 = !DILocation(line: 1675, column: 9, scope: !4270)
!4272 = !DILocalVariable(name: "distance", scope: !4270, file: !1, line: 1678, type: !769)
!4273 = !DILocation(line: 1678, column: 9, scope: !4270)
!4274 = !DILocalVariable(name: "distance_squared", scope: !4270, file: !1, line: 1679, type: !769)
!4275 = !DILocation(line: 1679, column: 9, scope: !4270)
!4276 = !DILocalVariable(name: "mean", scope: !4270, file: !1, line: 1680, type: !769)
!4277 = !DILocation(line: 1680, column: 9, scope: !4270)
!4278 = !DILocalVariable(name: "total_weight", scope: !4270, file: !1, line: 1681, type: !769)
!4279 = !DILocation(line: 1681, column: 9, scope: !4270)
!4280 = !DILocalVariable(name: "pixel", scope: !4270, file: !1, line: 1684, type: !558)
!4281 = !DILocation(line: 1684, column: 9, scope: !4270)
!4282 = !DILocalVariable(name: "r", scope: !4270, file: !1, line: 1687, type: !3050)
!4283 = !DILocation(line: 1687, column: 19, scope: !4270)
!4284 = !DILocation(line: 1692, column: 17, scope: !4270)
!4285 = !DILocation(line: 1693, column: 19, scope: !4270)
!4286 = !DILocation(line: 1694, column: 9, scope: !4270)
!4287 = !DILocation(line: 1694, column: 14, scope: !4270)
!4288 = !DILocation(line: 1694, column: 21, scope: !4270)
!4289 = !DILocation(line: 1694, column: 28, scope: !4270)
!4290 = !DILocation(line: 1694, column: 12, scope: !4270)
!4291 = !DILocation(line: 1694, column: 10, scope: !4270)
!4292 = !DILocation(line: 1694, column: 31, scope: !4270)
!4293 = !DILocation(line: 1694, column: 8, scope: !4270)
!4294 = !DILocation(line: 1695, column: 15, scope: !4270)
!4295 = !DILocation(line: 1695, column: 14, scope: !4270)
!4296 = !DILocation(line: 1696, column: 9, scope: !4270)
!4297 = !DILocation(line: 1696, column: 8, scope: !4270)
!4298 = !DILocation(line: 1697, column: 7, scope: !4270)
!4299 = !DILocation(line: 1697, column: 7, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1697, column: 7)
!4301 = !DILocation(line: 1697, column: 7, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4300, file: !1, line: 1697, column: 7)
!4303 = !DILocation(line: 1697, column: 21, scope: !4270)
!4304 = !DILocation(line: 1697, column: 21, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1697, column: 21)
!4306 = !DILocation(line: 1697, column: 21, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4305, file: !1, line: 1697, column: 21)
!4308 = !DILocation(line: 1697, column: 35, scope: !4270)
!4309 = !DILocation(line: 1697, column: 35, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1697, column: 35)
!4311 = !DILocation(line: 1697, column: 35, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4310, file: !1, line: 1697, column: 35)
!4313 = !DILocation(line: 1697, column: 50, scope: !4270)
!4314 = !DILocation(line: 1697, column: 50, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1697, column: 50)
!4316 = !DILocation(line: 1697, column: 50, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4315, file: !1, line: 1697, column: 50)
!4318 = !DILocation(line: 1697, column: 64, scope: !4270)
!4319 = !DILocation(line: 1697, column: 64, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1697, column: 64)
!4321 = !DILocation(line: 1697, column: 64, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4320, file: !1, line: 1697, column: 64)
!4323 = !DILocation(line: 1698, column: 9, scope: !4270)
!4324 = !DILocation(line: 1698, column: 12, scope: !4270)
!4325 = !DILocation(line: 1698, column: 19, scope: !4270)
!4326 = !DILocation(line: 1698, column: 26, scope: !4270)
!4327 = !DILocation(line: 1698, column: 10, scope: !4270)
!4328 = !DILocation(line: 1698, column: 8, scope: !4270)
!4329 = !DILocation(line: 1699, column: 7, scope: !4270)
!4330 = !DILocation(line: 1699, column: 7, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1699, column: 7)
!4332 = !DILocation(line: 1699, column: 7, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4331, file: !1, line: 1699, column: 7)
!4334 = !DILocation(line: 1699, column: 21, scope: !4270)
!4335 = !DILocation(line: 1699, column: 21, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1699, column: 21)
!4337 = !DILocation(line: 1699, column: 21, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4336, file: !1, line: 1699, column: 21)
!4339 = !DILocation(line: 1699, column: 36, scope: !4270)
!4340 = !DILocation(line: 1699, column: 36, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1699, column: 36)
!4342 = !DILocation(line: 1699, column: 36, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4341, file: !1, line: 1699, column: 36)
!4344 = !DILocation(line: 1699, column: 51, scope: !4270)
!4345 = !DILocation(line: 1699, column: 51, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1699, column: 51)
!4347 = !DILocation(line: 1699, column: 51, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4346, file: !1, line: 1699, column: 51)
!4349 = !DILocation(line: 1699, column: 66, scope: !4270)
!4350 = !DILocation(line: 1699, column: 66, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1699, column: 66)
!4352 = !DILocation(line: 1699, column: 66, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4351, file: !1, line: 1699, column: 66)
!4354 = !DILocation(line: 1700, column: 9, scope: !4270)
!4355 = !DILocation(line: 1700, column: 14, scope: !4270)
!4356 = !DILocation(line: 1700, column: 21, scope: !4270)
!4357 = !DILocation(line: 1700, column: 28, scope: !4270)
!4358 = !DILocation(line: 1700, column: 12, scope: !4270)
!4359 = !DILocation(line: 1700, column: 10, scope: !4270)
!4360 = !DILocation(line: 1700, column: 8, scope: !4270)
!4361 = !DILocation(line: 1701, column: 7, scope: !4270)
!4362 = !DILocation(line: 1701, column: 7, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1701, column: 7)
!4364 = !DILocation(line: 1701, column: 7, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4363, file: !1, line: 1701, column: 7)
!4366 = !DILocation(line: 1701, column: 22, scope: !4270)
!4367 = !DILocation(line: 1701, column: 22, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1701, column: 22)
!4369 = !DILocation(line: 1701, column: 22, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4368, file: !1, line: 1701, column: 22)
!4371 = !DILocation(line: 1701, column: 37, scope: !4270)
!4372 = !DILocation(line: 1701, column: 37, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1701, column: 37)
!4374 = !DILocation(line: 1701, column: 37, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4373, file: !1, line: 1701, column: 37)
!4376 = !DILocation(line: 1701, column: 52, scope: !4270)
!4377 = !DILocation(line: 1701, column: 52, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1701, column: 52)
!4379 = !DILocation(line: 1701, column: 52, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !4378, file: !1, line: 1701, column: 52)
!4381 = !DILocation(line: 1701, column: 67, scope: !4270)
!4382 = !DILocation(line: 1701, column: 67, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1701, column: 67)
!4384 = !DILocation(line: 1701, column: 67, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4383, file: !1, line: 1701, column: 67)
!4386 = !DILocation(line: 1702, column: 9, scope: !4270)
!4387 = !DILocation(line: 1702, column: 14, scope: !4270)
!4388 = !DILocation(line: 1702, column: 21, scope: !4270)
!4389 = !DILocation(line: 1702, column: 28, scope: !4270)
!4390 = !DILocation(line: 1702, column: 12, scope: !4270)
!4391 = !DILocation(line: 1702, column: 10, scope: !4270)
!4392 = !DILocation(line: 1702, column: 8, scope: !4270)
!4393 = !DILocation(line: 1703, column: 7, scope: !4270)
!4394 = !DILocation(line: 1703, column: 7, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1703, column: 7)
!4396 = !DILocation(line: 1703, column: 7, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4395, file: !1, line: 1703, column: 7)
!4398 = !DILocation(line: 1703, column: 21, scope: !4270)
!4399 = !DILocation(line: 1703, column: 21, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1703, column: 21)
!4401 = !DILocation(line: 1703, column: 21, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4400, file: !1, line: 1703, column: 21)
!4403 = !DILocation(line: 1703, column: 36, scope: !4270)
!4404 = !DILocation(line: 1703, column: 36, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1703, column: 36)
!4406 = !DILocation(line: 1703, column: 36, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4405, file: !1, line: 1703, column: 36)
!4408 = !DILocation(line: 1703, column: 51, scope: !4270)
!4409 = !DILocation(line: 1703, column: 51, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1703, column: 51)
!4411 = !DILocation(line: 1703, column: 51, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4410, file: !1, line: 1703, column: 51)
!4413 = !DILocation(line: 1703, column: 66, scope: !4270)
!4414 = !DILocation(line: 1703, column: 66, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1703, column: 66)
!4416 = !DILocation(line: 1703, column: 66, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4415, file: !1, line: 1703, column: 66)
!4418 = !DILocation(line: 1704, column: 9, scope: !4270)
!4419 = !DILocation(line: 1704, column: 14, scope: !4270)
!4420 = !DILocation(line: 1704, column: 21, scope: !4270)
!4421 = !DILocation(line: 1704, column: 28, scope: !4270)
!4422 = !DILocation(line: 1704, column: 12, scope: !4270)
!4423 = !DILocation(line: 1704, column: 10, scope: !4270)
!4424 = !DILocation(line: 1704, column: 8, scope: !4270)
!4425 = !DILocation(line: 1705, column: 7, scope: !4270)
!4426 = !DILocation(line: 1705, column: 7, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1705, column: 7)
!4428 = !DILocation(line: 1705, column: 7, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4427, file: !1, line: 1705, column: 7)
!4430 = !DILocation(line: 1705, column: 21, scope: !4270)
!4431 = !DILocation(line: 1705, column: 21, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1705, column: 21)
!4433 = !DILocation(line: 1705, column: 21, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4432, file: !1, line: 1705, column: 21)
!4435 = !DILocation(line: 1705, column: 35, scope: !4270)
!4436 = !DILocation(line: 1705, column: 35, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1705, column: 35)
!4438 = !DILocation(line: 1705, column: 35, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4437, file: !1, line: 1705, column: 35)
!4440 = !DILocation(line: 1705, column: 50, scope: !4270)
!4441 = !DILocation(line: 1705, column: 50, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1705, column: 50)
!4443 = !DILocation(line: 1705, column: 50, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4442, file: !1, line: 1705, column: 50)
!4445 = !DILocation(line: 1705, column: 64, scope: !4270)
!4446 = !DILocation(line: 1705, column: 64, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4270, file: !1, line: 1705, column: 64)
!4448 = !DILocation(line: 1705, column: 64, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4447, file: !1, line: 1705, column: 64)
!4450 = !DILocation(line: 1706, column: 7, scope: !4270)
!4451 = !DILocation(line: 1707, column: 7, scope: !4270)
!4452 = !DILocation(line: 1709, column: 7, scope: !4270)
!4453 = !DILocation(line: 1710, column: 7, scope: !4270)
!4454 = !DILocation(line: 1712, column: 8, scope: !4270)
!4455 = !DILocation(line: 1713, column: 8, scope: !4270)
!4456 = !DILocation(line: 1714, column: 5, scope: !4270)
!4457 = !DILocation(line: 1672, column: 46, scope: !4264)
!4458 = !DILocation(line: 1672, column: 5, scope: !4264)
!4459 = distinct !{!4459, !4268, !4460}
!4460 = !DILocation(line: 1714, column: 5, scope: !4261)
!4461 = !DILocation(line: 1715, column: 38, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4223, file: !1, line: 1715, column: 9)
!4463 = !DILocation(line: 1715, column: 51, scope: !4462)
!4464 = !DILocation(line: 1715, column: 9, scope: !4462)
!4465 = !DILocation(line: 1715, column: 62, scope: !4462)
!4466 = !DILocation(line: 1715, column: 9, scope: !4223)
!4467 = !DILocation(line: 1716, column: 13, scope: !4462)
!4468 = !DILocation(line: 1716, column: 7, scope: !4462)
!4469 = !DILocation(line: 1717, column: 9, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4223, file: !1, line: 1717, column: 9)
!4471 = !DILocation(line: 1717, column: 16, scope: !4470)
!4472 = !DILocation(line: 1717, column: 33, scope: !4470)
!4473 = !DILocation(line: 1717, column: 9, scope: !4223)
!4474 = !DILocalVariable(name: "proceed", scope: !4475, file: !1, line: 1720, type: !581)
!4475 = distinct !DILexicalBlock(scope: !4470, file: !1, line: 1718, column: 7)
!4476 = !DILocation(line: 1720, column: 11, scope: !4475)
!4477 = !DILocation(line: 1725, column: 34, scope: !4475)
!4478 = !DILocation(line: 1725, column: 64, scope: !4475)
!4479 = !DILocation(line: 1725, column: 67, scope: !4475)
!4480 = !DILocation(line: 1725, column: 74, scope: !4475)
!4481 = !DILocation(line: 1725, column: 17, scope: !4475)
!4482 = !DILocation(line: 1725, column: 16, scope: !4475)
!4483 = !DILocation(line: 1726, column: 13, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4475, file: !1, line: 1726, column: 13)
!4485 = !DILocation(line: 1726, column: 21, scope: !4484)
!4486 = !DILocation(line: 1726, column: 13, scope: !4475)
!4487 = !DILocation(line: 1727, column: 17, scope: !4484)
!4488 = !DILocation(line: 1727, column: 11, scope: !4484)
!4489 = !DILocation(line: 1728, column: 7, scope: !4475)
!4490 = !DILocation(line: 1729, column: 3, scope: !4223)
!4491 = !DILocation(line: 1648, column: 41, scope: !4217)
!4492 = !DILocation(line: 1648, column: 3, scope: !4217)
!4493 = distinct !{!4493, !4221, !4494}
!4494 = !DILocation(line: 1729, column: 3, scope: !4214)
!4495 = !DILocation(line: 1730, column: 33, scope: !4134)
!4496 = !DILocation(line: 1730, column: 16, scope: !4134)
!4497 = !DILocation(line: 1730, column: 15, scope: !4134)
!4498 = !DILocation(line: 1731, column: 31, scope: !4134)
!4499 = !DILocation(line: 1731, column: 14, scope: !4134)
!4500 = !DILocation(line: 1731, column: 13, scope: !4134)
!4501 = !DILocation(line: 1732, column: 7, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4134, file: !1, line: 1732, column: 7)
!4503 = !DILocation(line: 1732, column: 14, scope: !4502)
!4504 = !DILocation(line: 1732, column: 7, scope: !4134)
!4505 = !DILocation(line: 1733, column: 32, scope: !4502)
!4506 = !DILocation(line: 1733, column: 19, scope: !4502)
!4507 = !DILocation(line: 1733, column: 18, scope: !4502)
!4508 = !DILocation(line: 1733, column: 5, scope: !4502)
!4509 = !DILocation(line: 1734, column: 10, scope: !4134)
!4510 = !DILocation(line: 1734, column: 3, scope: !4134)
!4511 = !DILocation(line: 1735, column: 1, scope: !4134)
!4512 = distinct !DISubprogram(name: "EqualizeImage", scope: !1, file: !1, line: 1764, type: !808, scopeLine: 1765, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!4513 = !DILocalVariable(name: "image", arg: 1, scope: !4512, file: !1, line: 1764, type: !565)
!4514 = !DILocation(line: 1764, column: 53, scope: !4512)
!4515 = !DILocation(line: 1766, column: 31, scope: !4512)
!4516 = !DILocation(line: 1766, column: 10, scope: !4512)
!4517 = !DILocation(line: 1766, column: 3, scope: !4512)
!4518 = distinct !DISubprogram(name: "EqualizeImageChannel", scope: !1, file: !1, line: 1769, type: !817, scopeLine: 1771, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!4519 = !DILocalVariable(name: "image", arg: 1, scope: !4518, file: !1, line: 1769, type: !565)
!4520 = !DILocation(line: 1769, column: 60, scope: !4518)
!4521 = !DILocalVariable(name: "channel", arg: 2, scope: !4518, file: !1, line: 1770, type: !819)
!4522 = !DILocation(line: 1770, column: 21, scope: !4518)
!4523 = !DILocalVariable(name: "image_view", scope: !4518, file: !1, line: 1775, type: !992)
!4524 = !DILocation(line: 1775, column: 6, scope: !4518)
!4525 = !DILocalVariable(name: "exception", scope: !4518, file: !1, line: 1778, type: !998)
!4526 = !DILocation(line: 1778, column: 6, scope: !4518)
!4527 = !DILocalVariable(name: "status", scope: !4518, file: !1, line: 1781, type: !581)
!4528 = !DILocation(line: 1781, column: 5, scope: !4518)
!4529 = !DILocalVariable(name: "progress", scope: !4518, file: !1, line: 1784, type: !685)
!4530 = !DILocation(line: 1784, column: 5, scope: !4518)
!4531 = !DILocalVariable(name: "black", scope: !4518, file: !1, line: 1787, type: !772)
!4532 = !DILocation(line: 1787, column: 5, scope: !4518)
!4533 = !DILocalVariable(name: "histogram", scope: !4518, file: !1, line: 1788, type: !771)
!4534 = !DILocation(line: 1788, column: 6, scope: !4518)
!4535 = !DILocalVariable(name: "intensity", scope: !4518, file: !1, line: 1789, type: !772)
!4536 = !DILocation(line: 1789, column: 5, scope: !4518)
!4537 = !DILocalVariable(name: "map", scope: !4518, file: !1, line: 1790, type: !771)
!4538 = !DILocation(line: 1790, column: 6, scope: !4518)
!4539 = !DILocalVariable(name: "white", scope: !4518, file: !1, line: 1791, type: !772)
!4540 = !DILocation(line: 1791, column: 5, scope: !4518)
!4541 = !DILocalVariable(name: "equalize_map", scope: !4518, file: !1, line: 1794, type: !789)
!4542 = !DILocation(line: 1794, column: 6, scope: !4518)
!4543 = !DILocalVariable(name: "i", scope: !4518, file: !1, line: 1797, type: !615)
!4544 = !DILocation(line: 1797, column: 5, scope: !4518)
!4545 = !DILocalVariable(name: "y", scope: !4518, file: !1, line: 1800, type: !615)
!4546 = !DILocation(line: 1800, column: 5, scope: !4518)
!4547 = !DILocation(line: 1804, column: 7, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4518, file: !1, line: 1804, column: 7)
!4549 = !DILocation(line: 1804, column: 14, scope: !4548)
!4550 = !DILocation(line: 1804, column: 20, scope: !4548)
!4551 = !DILocation(line: 1804, column: 7, scope: !4518)
!4552 = !DILocation(line: 1805, column: 61, scope: !4548)
!4553 = !DILocation(line: 1805, column: 68, scope: !4548)
!4554 = !DILocation(line: 1805, column: 12, scope: !4548)
!4555 = !DILocation(line: 1805, column: 5, scope: !4548)
!4556 = !DILocation(line: 1808, column: 36, scope: !4518)
!4557 = !DILocation(line: 1808, column: 43, scope: !4518)
!4558 = !DILocation(line: 1808, column: 53, scope: !4518)
!4559 = !DILocation(line: 1808, column: 60, scope: !4518)
!4560 = !DILocation(line: 1808, column: 12, scope: !4518)
!4561 = !DILocation(line: 1808, column: 10, scope: !4518)
!4562 = !DILocation(line: 1809, column: 7, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4518, file: !1, line: 1809, column: 7)
!4564 = !DILocation(line: 1809, column: 14, scope: !4563)
!4565 = !DILocation(line: 1809, column: 7, scope: !4518)
!4566 = !DILocation(line: 1810, column: 12, scope: !4563)
!4567 = !DILocation(line: 1810, column: 5, scope: !4563)
!4568 = !DILocation(line: 1815, column: 39, scope: !4518)
!4569 = !DILocation(line: 1815, column: 16, scope: !4518)
!4570 = !DILocation(line: 1815, column: 15, scope: !4518)
!4571 = !DILocation(line: 1817, column: 35, scope: !4518)
!4572 = !DILocation(line: 1817, column: 13, scope: !4518)
!4573 = !DILocation(line: 1817, column: 12, scope: !4518)
!4574 = !DILocation(line: 1819, column: 29, scope: !4518)
!4575 = !DILocation(line: 1819, column: 7, scope: !4518)
!4576 = !DILocation(line: 1819, column: 6, scope: !4518)
!4577 = !DILocation(line: 1820, column: 8, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4518, file: !1, line: 1820, column: 7)
!4579 = !DILocation(line: 1820, column: 21, scope: !4578)
!4580 = !DILocation(line: 1820, column: 53, scope: !4578)
!4581 = !DILocation(line: 1821, column: 8, scope: !4578)
!4582 = !DILocation(line: 1821, column: 18, scope: !4578)
!4583 = !DILocation(line: 1821, column: 49, scope: !4578)
!4584 = !DILocation(line: 1822, column: 8, scope: !4578)
!4585 = !DILocation(line: 1822, column: 12, scope: !4578)
!4586 = !DILocation(line: 1820, column: 7, scope: !4518)
!4587 = !DILocation(line: 1824, column: 11, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4589, file: !1, line: 1824, column: 11)
!4589 = distinct !DILexicalBlock(scope: !4578, file: !1, line: 1823, column: 5)
!4590 = !DILocation(line: 1824, column: 15, scope: !4588)
!4591 = !DILocation(line: 1824, column: 11, scope: !4589)
!4592 = !DILocation(line: 1825, column: 58, scope: !4588)
!4593 = !DILocation(line: 1825, column: 35, scope: !4588)
!4594 = !DILocation(line: 1825, column: 13, scope: !4588)
!4595 = !DILocation(line: 1825, column: 12, scope: !4588)
!4596 = !DILocation(line: 1825, column: 9, scope: !4588)
!4597 = !DILocation(line: 1826, column: 11, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4589, file: !1, line: 1826, column: 11)
!4599 = !DILocation(line: 1826, column: 21, scope: !4598)
!4600 = !DILocation(line: 1826, column: 11, scope: !4589)
!4601 = !DILocation(line: 1827, column: 64, scope: !4598)
!4602 = !DILocation(line: 1827, column: 41, scope: !4598)
!4603 = !DILocation(line: 1827, column: 19, scope: !4598)
!4604 = !DILocation(line: 1827, column: 18, scope: !4598)
!4605 = !DILocation(line: 1827, column: 9, scope: !4598)
!4606 = !DILocation(line: 1828, column: 11, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4589, file: !1, line: 1828, column: 11)
!4608 = !DILocation(line: 1828, column: 24, scope: !4607)
!4609 = !DILocation(line: 1828, column: 11, scope: !4589)
!4610 = !DILocation(line: 1830, column: 11, scope: !4607)
!4611 = !DILocation(line: 1829, column: 45, scope: !4607)
!4612 = !DILocation(line: 1829, column: 22, scope: !4607)
!4613 = !DILocation(line: 1829, column: 21, scope: !4607)
!4614 = !DILocation(line: 1829, column: 9, scope: !4607)
!4615 = !DILocation(line: 1831, column: 7, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4617, file: !1, line: 1831, column: 7)
!4617 = distinct !DILexicalBlock(scope: !4589, file: !1, line: 1831, column: 7)
!4618 = !DILocation(line: 1831, column: 7, scope: !4617)
!4619 = !DILocation(line: 1837, column: 28, scope: !4518)
!4620 = !DILocation(line: 1837, column: 10, scope: !4518)
!4621 = !DILocation(line: 1838, column: 15, scope: !4518)
!4622 = !DILocation(line: 1838, column: 22, scope: !4518)
!4623 = !DILocation(line: 1838, column: 12, scope: !4518)
!4624 = !DILocation(line: 1839, column: 38, scope: !4518)
!4625 = !DILocation(line: 1839, column: 44, scope: !4518)
!4626 = !DILocation(line: 1839, column: 14, scope: !4518)
!4627 = !DILocation(line: 1839, column: 13, scope: !4518)
!4628 = !DILocation(line: 1840, column: 9, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4518, file: !1, line: 1840, column: 3)
!4630 = !DILocation(line: 1840, column: 8, scope: !4629)
!4631 = !DILocation(line: 1840, column: 13, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4629, file: !1, line: 1840, column: 3)
!4633 = !DILocation(line: 1840, column: 27, scope: !4632)
!4634 = !DILocation(line: 1840, column: 34, scope: !4632)
!4635 = !DILocation(line: 1840, column: 15, scope: !4632)
!4636 = !DILocation(line: 1840, column: 3, scope: !4629)
!4637 = !DILocalVariable(name: "indexes", scope: !4638, file: !1, line: 1843, type: !4639)
!4638 = distinct !DILexicalBlock(scope: !4632, file: !1, line: 1841, column: 3)
!4639 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !787)
!4640 = !DILocation(line: 1843, column: 17, scope: !4638)
!4641 = !DILocalVariable(name: "p", scope: !4638, file: !1, line: 1846, type: !3050)
!4642 = !DILocation(line: 1846, column: 17, scope: !4638)
!4643 = !DILocalVariable(name: "x", scope: !4638, file: !1, line: 1849, type: !615)
!4644 = !DILocation(line: 1849, column: 7, scope: !4638)
!4645 = !DILocation(line: 1851, column: 33, scope: !4638)
!4646 = !DILocation(line: 1851, column: 46, scope: !4638)
!4647 = !DILocation(line: 1851, column: 48, scope: !4638)
!4648 = !DILocation(line: 1851, column: 55, scope: !4638)
!4649 = !DILocation(line: 1851, column: 65, scope: !4638)
!4650 = !DILocation(line: 1851, column: 7, scope: !4638)
!4651 = !DILocation(line: 1851, column: 6, scope: !4638)
!4652 = !DILocation(line: 1852, column: 9, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4638, file: !1, line: 1852, column: 9)
!4654 = !DILocation(line: 1852, column: 11, scope: !4653)
!4655 = !DILocation(line: 1852, column: 9, scope: !4638)
!4656 = !DILocation(line: 1853, column: 7, scope: !4653)
!4657 = !DILocation(line: 1854, column: 43, scope: !4638)
!4658 = !DILocation(line: 1854, column: 13, scope: !4638)
!4659 = !DILocation(line: 1854, column: 12, scope: !4638)
!4660 = !DILocation(line: 1855, column: 10, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4638, file: !1, line: 1855, column: 9)
!4662 = !DILocation(line: 1855, column: 18, scope: !4661)
!4663 = !DILocation(line: 1855, column: 34, scope: !4661)
!4664 = !DILocation(line: 1855, column: 9, scope: !4638)
!4665 = !DILocation(line: 1856, column: 13, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4661, file: !1, line: 1856, column: 7)
!4667 = !DILocation(line: 1856, column: 12, scope: !4666)
!4668 = !DILocation(line: 1856, column: 17, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4666, file: !1, line: 1856, column: 7)
!4670 = !DILocation(line: 1856, column: 31, scope: !4669)
!4671 = !DILocation(line: 1856, column: 38, scope: !4669)
!4672 = !DILocation(line: 1856, column: 19, scope: !4669)
!4673 = !DILocation(line: 1856, column: 7, scope: !4666)
!4674 = !DILocalVariable(name: "intensity", scope: !4675, file: !1, line: 1858, type: !769)
!4675 = distinct !DILexicalBlock(scope: !4669, file: !1, line: 1857, column: 7)
!4676 = !DILocation(line: 1858, column: 24, scope: !4675)
!4677 = !DILocation(line: 1858, column: 52, scope: !4675)
!4678 = !DILocation(line: 1858, column: 58, scope: !4675)
!4679 = !DILocation(line: 1858, column: 34, scope: !4675)
!4680 = !DILocation(line: 1859, column: 9, scope: !4675)
!4681 = !DILocation(line: 1859, column: 52, scope: !4675)
!4682 = !DILocation(line: 1859, column: 37, scope: !4675)
!4683 = !DILocation(line: 1859, column: 19, scope: !4675)
!4684 = !DILocation(line: 1859, column: 65, scope: !4675)
!4685 = !DILocation(line: 1859, column: 68, scope: !4675)
!4686 = !DILocation(line: 1860, column: 10, scope: !4675)
!4687 = !DILocation(line: 1861, column: 7, scope: !4675)
!4688 = !DILocation(line: 1856, column: 48, scope: !4669)
!4689 = !DILocation(line: 1856, column: 7, scope: !4669)
!4690 = distinct !{!4690, !4673, !4691}
!4691 = !DILocation(line: 1861, column: 7, scope: !4666)
!4692 = !DILocation(line: 1863, column: 13, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4661, file: !1, line: 1863, column: 7)
!4694 = !DILocation(line: 1863, column: 12, scope: !4693)
!4695 = !DILocation(line: 1863, column: 17, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4693, file: !1, line: 1863, column: 7)
!4697 = !DILocation(line: 1863, column: 31, scope: !4696)
!4698 = !DILocation(line: 1863, column: 38, scope: !4696)
!4699 = !DILocation(line: 1863, column: 19, scope: !4696)
!4700 = !DILocation(line: 1863, column: 7, scope: !4693)
!4701 = !DILocation(line: 1865, column: 14, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4703, file: !1, line: 1865, column: 13)
!4703 = distinct !DILexicalBlock(scope: !4696, file: !1, line: 1864, column: 7)
!4704 = !DILocation(line: 1865, column: 22, scope: !4702)
!4705 = !DILocation(line: 1865, column: 36, scope: !4702)
!4706 = !DILocation(line: 1865, column: 13, scope: !4703)
!4707 = !DILocation(line: 1866, column: 11, scope: !4702)
!4708 = !DILocation(line: 1866, column: 39, scope: !4702)
!4709 = !DILocation(line: 1866, column: 21, scope: !4702)
!4710 = !DILocation(line: 1866, column: 56, scope: !4702)
!4711 = !DILocation(line: 1866, column: 59, scope: !4702)
!4712 = !DILocation(line: 1867, column: 14, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4703, file: !1, line: 1867, column: 13)
!4714 = !DILocation(line: 1867, column: 22, scope: !4713)
!4715 = !DILocation(line: 1867, column: 38, scope: !4713)
!4716 = !DILocation(line: 1867, column: 13, scope: !4703)
!4717 = !DILocation(line: 1868, column: 11, scope: !4713)
!4718 = !DILocation(line: 1868, column: 39, scope: !4713)
!4719 = !DILocation(line: 1868, column: 21, scope: !4713)
!4720 = !DILocation(line: 1868, column: 58, scope: !4713)
!4721 = !DILocation(line: 1868, column: 63, scope: !4713)
!4722 = !DILocation(line: 1869, column: 14, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4703, file: !1, line: 1869, column: 13)
!4724 = !DILocation(line: 1869, column: 22, scope: !4723)
!4725 = !DILocation(line: 1869, column: 37, scope: !4723)
!4726 = !DILocation(line: 1869, column: 13, scope: !4703)
!4727 = !DILocation(line: 1870, column: 11, scope: !4723)
!4728 = !DILocation(line: 1870, column: 39, scope: !4723)
!4729 = !DILocation(line: 1870, column: 21, scope: !4723)
!4730 = !DILocation(line: 1870, column: 57, scope: !4723)
!4731 = !DILocation(line: 1870, column: 61, scope: !4723)
!4732 = !DILocation(line: 1871, column: 14, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4703, file: !1, line: 1871, column: 13)
!4734 = !DILocation(line: 1871, column: 22, scope: !4733)
!4735 = !DILocation(line: 1871, column: 40, scope: !4733)
!4736 = !DILocation(line: 1871, column: 13, scope: !4703)
!4737 = !DILocation(line: 1872, column: 11, scope: !4733)
!4738 = !DILocation(line: 1872, column: 39, scope: !4733)
!4739 = !DILocation(line: 1872, column: 21, scope: !4733)
!4740 = !DILocation(line: 1872, column: 60, scope: !4733)
!4741 = !DILocation(line: 1872, column: 67, scope: !4733)
!4742 = !DILocation(line: 1873, column: 15, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4703, file: !1, line: 1873, column: 13)
!4744 = !DILocation(line: 1873, column: 23, scope: !4743)
!4745 = !DILocation(line: 1873, column: 39, scope: !4743)
!4746 = !DILocation(line: 1873, column: 45, scope: !4743)
!4747 = !DILocation(line: 1874, column: 14, scope: !4743)
!4748 = !DILocation(line: 1874, column: 21, scope: !4743)
!4749 = !DILocation(line: 1874, column: 32, scope: !4743)
!4750 = !DILocation(line: 1873, column: 13, scope: !4703)
!4751 = !DILocation(line: 1875, column: 11, scope: !4743)
!4752 = !DILocation(line: 1875, column: 39, scope: !4743)
!4753 = !DILocation(line: 1875, column: 21, scope: !4743)
!4754 = !DILocation(line: 1875, column: 66, scope: !4743)
!4755 = !DILocation(line: 1875, column: 71, scope: !4743)
!4756 = !DILocation(line: 1876, column: 10, scope: !4703)
!4757 = !DILocation(line: 1877, column: 7, scope: !4703)
!4758 = !DILocation(line: 1863, column: 48, scope: !4696)
!4759 = !DILocation(line: 1863, column: 7, scope: !4696)
!4760 = distinct !{!4760, !4700, !4761}
!4761 = !DILocation(line: 1877, column: 7, scope: !4693)
!4762 = !DILocation(line: 1878, column: 3, scope: !4638)
!4763 = !DILocation(line: 1840, column: 41, scope: !4632)
!4764 = !DILocation(line: 1840, column: 3, scope: !4632)
!4765 = distinct !{!4765, !4636, !4766}
!4766 = !DILocation(line: 1878, column: 3, scope: !4629)
!4767 = !DILocation(line: 1879, column: 31, scope: !4518)
!4768 = !DILocation(line: 1879, column: 14, scope: !4518)
!4769 = !DILocation(line: 1879, column: 13, scope: !4518)
!4770 = !DILocation(line: 1883, column: 28, scope: !4518)
!4771 = !DILocation(line: 1883, column: 10, scope: !4518)
!4772 = !DILocation(line: 1884, column: 9, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4518, file: !1, line: 1884, column: 3)
!4774 = !DILocation(line: 1884, column: 8, scope: !4773)
!4775 = !DILocation(line: 1884, column: 13, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4773, file: !1, line: 1884, column: 3)
!4777 = !DILocation(line: 1884, column: 15, scope: !4776)
!4778 = !DILocation(line: 1884, column: 3, scope: !4773)
!4779 = !DILocation(line: 1886, column: 10, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4781, file: !1, line: 1886, column: 9)
!4781 = distinct !DILexicalBlock(scope: !4776, file: !1, line: 1885, column: 3)
!4782 = !DILocation(line: 1886, column: 18, scope: !4780)
!4783 = !DILocation(line: 1886, column: 34, scope: !4780)
!4784 = !DILocation(line: 1886, column: 9, scope: !4781)
!4785 = !DILocation(line: 1888, column: 24, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4780, file: !1, line: 1887, column: 7)
!4787 = !DILocation(line: 1888, column: 34, scope: !4786)
!4788 = !DILocation(line: 1888, column: 37, scope: !4786)
!4789 = !DILocation(line: 1888, column: 19, scope: !4786)
!4790 = !DILocation(line: 1888, column: 22, scope: !4786)
!4791 = !DILocation(line: 1889, column: 9, scope: !4786)
!4792 = !DILocation(line: 1889, column: 13, scope: !4786)
!4793 = !DILocation(line: 1889, column: 16, scope: !4786)
!4794 = !DILocation(line: 1890, column: 9, scope: !4786)
!4795 = !DILocation(line: 1892, column: 10, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4781, file: !1, line: 1892, column: 9)
!4797 = !DILocation(line: 1892, column: 18, scope: !4796)
!4798 = !DILocation(line: 1892, column: 32, scope: !4796)
!4799 = !DILocation(line: 1892, column: 9, scope: !4781)
!4800 = !DILocation(line: 1893, column: 22, scope: !4796)
!4801 = !DILocation(line: 1893, column: 32, scope: !4796)
!4802 = !DILocation(line: 1893, column: 35, scope: !4796)
!4803 = !DILocation(line: 1893, column: 17, scope: !4796)
!4804 = !DILocation(line: 1893, column: 20, scope: !4796)
!4805 = !DILocation(line: 1893, column: 7, scope: !4796)
!4806 = !DILocation(line: 1894, column: 10, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4781, file: !1, line: 1894, column: 9)
!4808 = !DILocation(line: 1894, column: 18, scope: !4807)
!4809 = !DILocation(line: 1894, column: 34, scope: !4807)
!4810 = !DILocation(line: 1894, column: 9, scope: !4781)
!4811 = !DILocation(line: 1895, column: 24, scope: !4807)
!4812 = !DILocation(line: 1895, column: 34, scope: !4807)
!4813 = !DILocation(line: 1895, column: 37, scope: !4807)
!4814 = !DILocation(line: 1895, column: 17, scope: !4807)
!4815 = !DILocation(line: 1895, column: 22, scope: !4807)
!4816 = !DILocation(line: 1895, column: 7, scope: !4807)
!4817 = !DILocation(line: 1896, column: 10, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4781, file: !1, line: 1896, column: 9)
!4819 = !DILocation(line: 1896, column: 18, scope: !4818)
!4820 = !DILocation(line: 1896, column: 33, scope: !4818)
!4821 = !DILocation(line: 1896, column: 9, scope: !4781)
!4822 = !DILocation(line: 1897, column: 23, scope: !4818)
!4823 = !DILocation(line: 1897, column: 33, scope: !4818)
!4824 = !DILocation(line: 1897, column: 36, scope: !4818)
!4825 = !DILocation(line: 1897, column: 17, scope: !4818)
!4826 = !DILocation(line: 1897, column: 21, scope: !4818)
!4827 = !DILocation(line: 1897, column: 7, scope: !4818)
!4828 = !DILocation(line: 1898, column: 10, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4781, file: !1, line: 1898, column: 9)
!4830 = !DILocation(line: 1898, column: 18, scope: !4829)
!4831 = !DILocation(line: 1898, column: 36, scope: !4829)
!4832 = !DILocation(line: 1898, column: 9, scope: !4781)
!4833 = !DILocation(line: 1899, column: 26, scope: !4829)
!4834 = !DILocation(line: 1899, column: 36, scope: !4829)
!4835 = !DILocation(line: 1899, column: 39, scope: !4829)
!4836 = !DILocation(line: 1899, column: 17, scope: !4829)
!4837 = !DILocation(line: 1899, column: 24, scope: !4829)
!4838 = !DILocation(line: 1899, column: 7, scope: !4829)
!4839 = !DILocation(line: 1900, column: 11, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4781, file: !1, line: 1900, column: 9)
!4841 = !DILocation(line: 1900, column: 19, scope: !4840)
!4842 = !DILocation(line: 1900, column: 35, scope: !4840)
!4843 = !DILocation(line: 1900, column: 41, scope: !4840)
!4844 = !DILocation(line: 1901, column: 10, scope: !4840)
!4845 = !DILocation(line: 1901, column: 17, scope: !4840)
!4846 = !DILocation(line: 1901, column: 28, scope: !4840)
!4847 = !DILocation(line: 1900, column: 9, scope: !4781)
!4848 = !DILocation(line: 1902, column: 24, scope: !4840)
!4849 = !DILocation(line: 1902, column: 34, scope: !4840)
!4850 = !DILocation(line: 1902, column: 37, scope: !4840)
!4851 = !DILocation(line: 1902, column: 17, scope: !4840)
!4852 = !DILocation(line: 1902, column: 22, scope: !4840)
!4853 = !DILocation(line: 1902, column: 7, scope: !4840)
!4854 = !DILocation(line: 1903, column: 5, scope: !4781)
!4855 = !DILocation(line: 1903, column: 9, scope: !4781)
!4856 = !DILocation(line: 1903, column: 12, scope: !4781)
!4857 = !DILocation(line: 1904, column: 3, scope: !4781)
!4858 = !DILocation(line: 1884, column: 37, scope: !4776)
!4859 = !DILocation(line: 1884, column: 3, scope: !4776)
!4860 = distinct !{!4860, !4778, !4861}
!4861 = !DILocation(line: 1904, column: 3, scope: !4773)
!4862 = !DILocation(line: 1905, column: 9, scope: !4518)
!4863 = !DILocation(line: 1906, column: 9, scope: !4518)
!4864 = !DILocation(line: 1907, column: 28, scope: !4518)
!4865 = !DILocation(line: 1907, column: 10, scope: !4518)
!4866 = !DILocation(line: 1908, column: 9, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4518, file: !1, line: 1908, column: 3)
!4868 = !DILocation(line: 1908, column: 8, scope: !4867)
!4869 = !DILocation(line: 1908, column: 13, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4867, file: !1, line: 1908, column: 3)
!4871 = !DILocation(line: 1908, column: 15, scope: !4870)
!4872 = !DILocation(line: 1908, column: 3, scope: !4867)
!4873 = !DILocation(line: 1910, column: 10, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4875, file: !1, line: 1910, column: 9)
!4875 = distinct !DILexicalBlock(scope: !4870, file: !1, line: 1909, column: 3)
!4876 = !DILocation(line: 1910, column: 18, scope: !4874)
!4877 = !DILocation(line: 1910, column: 34, scope: !4874)
!4878 = !DILocation(line: 1910, column: 9, scope: !4875)
!4879 = !DILocation(line: 1912, column: 19, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4881, file: !1, line: 1912, column: 13)
!4881 = distinct !DILexicalBlock(scope: !4874, file: !1, line: 1911, column: 7)
!4882 = !DILocation(line: 1912, column: 32, scope: !4880)
!4883 = !DILocation(line: 1912, column: 23, scope: !4880)
!4884 = !DILocation(line: 1912, column: 13, scope: !4881)
!4885 = !DILocation(line: 1914, column: 14, scope: !4880)
!4886 = !DILocation(line: 1914, column: 18, scope: !4880)
!4887 = !DILocation(line: 1914, column: 21, scope: !4880)
!4888 = !DILocation(line: 1914, column: 31, scope: !4880)
!4889 = !DILocation(line: 1914, column: 24, scope: !4880)
!4890 = !DILocation(line: 1913, column: 74, scope: !4880)
!4891 = !DILocation(line: 1914, column: 44, scope: !4880)
!4892 = !DILocation(line: 1914, column: 54, scope: !4880)
!4893 = !DILocation(line: 1914, column: 47, scope: !4880)
!4894 = !DILocation(line: 1914, column: 36, scope: !4880)
!4895 = !DILocation(line: 1913, column: 31, scope: !4880)
!4896 = !DILocation(line: 1913, column: 11, scope: !4880)
!4897 = !DILocation(line: 1913, column: 24, scope: !4880)
!4898 = !DILocation(line: 1913, column: 27, scope: !4880)
!4899 = !DILocation(line: 1913, column: 30, scope: !4880)
!4900 = !DILocation(line: 1915, column: 9, scope: !4881)
!4901 = !DILocation(line: 1917, column: 11, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4875, file: !1, line: 1917, column: 9)
!4903 = !DILocation(line: 1917, column: 19, scope: !4902)
!4904 = !DILocation(line: 1917, column: 33, scope: !4902)
!4905 = !DILocation(line: 1917, column: 39, scope: !4902)
!4906 = !DILocation(line: 1917, column: 49, scope: !4902)
!4907 = !DILocation(line: 1917, column: 62, scope: !4902)
!4908 = !DILocation(line: 1917, column: 53, scope: !4902)
!4909 = !DILocation(line: 1917, column: 9, scope: !4875)
!4910 = !DILocation(line: 1919, column: 10, scope: !4902)
!4911 = !DILocation(line: 1919, column: 14, scope: !4902)
!4912 = !DILocation(line: 1919, column: 17, scope: !4902)
!4913 = !DILocation(line: 1919, column: 27, scope: !4902)
!4914 = !DILocation(line: 1919, column: 20, scope: !4902)
!4915 = !DILocation(line: 1918, column: 70, scope: !4902)
!4916 = !DILocation(line: 1919, column: 40, scope: !4902)
!4917 = !DILocation(line: 1919, column: 50, scope: !4902)
!4918 = !DILocation(line: 1919, column: 43, scope: !4902)
!4919 = !DILocation(line: 1919, column: 32, scope: !4902)
!4920 = !DILocation(line: 1918, column: 27, scope: !4902)
!4921 = !DILocation(line: 1918, column: 7, scope: !4902)
!4922 = !DILocation(line: 1918, column: 20, scope: !4902)
!4923 = !DILocation(line: 1918, column: 23, scope: !4902)
!4924 = !DILocation(line: 1918, column: 26, scope: !4902)
!4925 = !DILocation(line: 1920, column: 11, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4875, file: !1, line: 1920, column: 9)
!4927 = !DILocation(line: 1920, column: 19, scope: !4926)
!4928 = !DILocation(line: 1920, column: 35, scope: !4926)
!4929 = !DILocation(line: 1920, column: 41, scope: !4926)
!4930 = !DILocation(line: 1920, column: 51, scope: !4926)
!4931 = !DILocation(line: 1920, column: 66, scope: !4926)
!4932 = !DILocation(line: 1920, column: 57, scope: !4926)
!4933 = !DILocation(line: 1920, column: 9, scope: !4875)
!4934 = !DILocation(line: 1922, column: 10, scope: !4926)
!4935 = !DILocation(line: 1922, column: 14, scope: !4926)
!4936 = !DILocation(line: 1922, column: 17, scope: !4926)
!4937 = !DILocation(line: 1922, column: 29, scope: !4926)
!4938 = !DILocation(line: 1922, column: 22, scope: !4926)
!4939 = !DILocation(line: 1921, column: 72, scope: !4926)
!4940 = !DILocation(line: 1922, column: 44, scope: !4926)
!4941 = !DILocation(line: 1922, column: 56, scope: !4926)
!4942 = !DILocation(line: 1922, column: 49, scope: !4926)
!4943 = !DILocation(line: 1922, column: 36, scope: !4926)
!4944 = !DILocation(line: 1921, column: 29, scope: !4926)
!4945 = !DILocation(line: 1921, column: 7, scope: !4926)
!4946 = !DILocation(line: 1921, column: 20, scope: !4926)
!4947 = !DILocation(line: 1921, column: 23, scope: !4926)
!4948 = !DILocation(line: 1921, column: 28, scope: !4926)
!4949 = !DILocation(line: 1923, column: 11, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4875, file: !1, line: 1923, column: 9)
!4951 = !DILocation(line: 1923, column: 19, scope: !4950)
!4952 = !DILocation(line: 1923, column: 34, scope: !4950)
!4953 = !DILocation(line: 1923, column: 40, scope: !4950)
!4954 = !DILocation(line: 1923, column: 50, scope: !4950)
!4955 = !DILocation(line: 1923, column: 64, scope: !4950)
!4956 = !DILocation(line: 1923, column: 55, scope: !4950)
!4957 = !DILocation(line: 1923, column: 9, scope: !4875)
!4958 = !DILocation(line: 1925, column: 10, scope: !4950)
!4959 = !DILocation(line: 1925, column: 14, scope: !4950)
!4960 = !DILocation(line: 1925, column: 17, scope: !4950)
!4961 = !DILocation(line: 1925, column: 28, scope: !4950)
!4962 = !DILocation(line: 1925, column: 21, scope: !4950)
!4963 = !DILocation(line: 1924, column: 71, scope: !4950)
!4964 = !DILocation(line: 1925, column: 42, scope: !4950)
!4965 = !DILocation(line: 1925, column: 53, scope: !4950)
!4966 = !DILocation(line: 1925, column: 46, scope: !4950)
!4967 = !DILocation(line: 1925, column: 34, scope: !4950)
!4968 = !DILocation(line: 1924, column: 28, scope: !4950)
!4969 = !DILocation(line: 1924, column: 7, scope: !4950)
!4970 = !DILocation(line: 1924, column: 20, scope: !4950)
!4971 = !DILocation(line: 1924, column: 23, scope: !4950)
!4972 = !DILocation(line: 1924, column: 27, scope: !4950)
!4973 = !DILocation(line: 1926, column: 11, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4875, file: !1, line: 1926, column: 9)
!4975 = !DILocation(line: 1926, column: 19, scope: !4974)
!4976 = !DILocation(line: 1926, column: 37, scope: !4974)
!4977 = !DILocation(line: 1926, column: 43, scope: !4974)
!4978 = !DILocation(line: 1926, column: 53, scope: !4974)
!4979 = !DILocation(line: 1926, column: 70, scope: !4974)
!4980 = !DILocation(line: 1926, column: 61, scope: !4974)
!4981 = !DILocation(line: 1926, column: 9, scope: !4875)
!4982 = !DILocation(line: 1928, column: 10, scope: !4974)
!4983 = !DILocation(line: 1928, column: 14, scope: !4974)
!4984 = !DILocation(line: 1928, column: 17, scope: !4974)
!4985 = !DILocation(line: 1928, column: 31, scope: !4974)
!4986 = !DILocation(line: 1928, column: 24, scope: !4974)
!4987 = !DILocation(line: 1927, column: 74, scope: !4974)
!4988 = !DILocation(line: 1928, column: 48, scope: !4974)
!4989 = !DILocation(line: 1928, column: 62, scope: !4974)
!4990 = !DILocation(line: 1928, column: 55, scope: !4974)
!4991 = !DILocation(line: 1928, column: 40, scope: !4974)
!4992 = !DILocation(line: 1927, column: 31, scope: !4974)
!4993 = !DILocation(line: 1927, column: 7, scope: !4974)
!4994 = !DILocation(line: 1927, column: 20, scope: !4974)
!4995 = !DILocation(line: 1927, column: 23, scope: !4974)
!4996 = !DILocation(line: 1927, column: 30, scope: !4974)
!4997 = !DILocation(line: 1929, column: 12, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4875, file: !1, line: 1929, column: 9)
!4999 = !DILocation(line: 1929, column: 20, scope: !4998)
!5000 = !DILocation(line: 1929, column: 36, scope: !4998)
!5001 = !DILocation(line: 1929, column: 42, scope: !4998)
!5002 = !DILocation(line: 1930, column: 10, scope: !4998)
!5003 = !DILocation(line: 1930, column: 17, scope: !4998)
!5004 = !DILocation(line: 1930, column: 28, scope: !4998)
!5005 = !DILocation(line: 1930, column: 48, scope: !4998)
!5006 = !DILocation(line: 1931, column: 16, scope: !4998)
!5007 = !DILocation(line: 1931, column: 31, scope: !4998)
!5008 = !DILocation(line: 1931, column: 22, scope: !4998)
!5009 = !DILocation(line: 1929, column: 9, scope: !4875)
!5010 = !DILocation(line: 1933, column: 10, scope: !4998)
!5011 = !DILocation(line: 1933, column: 14, scope: !4998)
!5012 = !DILocation(line: 1933, column: 17, scope: !4998)
!5013 = !DILocation(line: 1933, column: 29, scope: !4998)
!5014 = !DILocation(line: 1933, column: 22, scope: !4998)
!5015 = !DILocation(line: 1932, column: 72, scope: !4998)
!5016 = !DILocation(line: 1933, column: 44, scope: !4998)
!5017 = !DILocation(line: 1933, column: 56, scope: !4998)
!5018 = !DILocation(line: 1933, column: 49, scope: !4998)
!5019 = !DILocation(line: 1933, column: 36, scope: !4998)
!5020 = !DILocation(line: 1932, column: 29, scope: !4998)
!5021 = !DILocation(line: 1932, column: 7, scope: !4998)
!5022 = !DILocation(line: 1932, column: 20, scope: !4998)
!5023 = !DILocation(line: 1932, column: 23, scope: !4998)
!5024 = !DILocation(line: 1932, column: 28, scope: !4998)
!5025 = !DILocation(line: 1934, column: 3, scope: !4875)
!5026 = !DILocation(line: 1908, column: 37, scope: !4870)
!5027 = !DILocation(line: 1908, column: 3, scope: !4870)
!5028 = distinct !{!5028, !4872, !5029}
!5029 = !DILocation(line: 1934, column: 3, scope: !4867)
!5030 = !DILocation(line: 1935, column: 58, scope: !4518)
!5031 = !DILocation(line: 1935, column: 35, scope: !4518)
!5032 = !DILocation(line: 1935, column: 13, scope: !4518)
!5033 = !DILocation(line: 1935, column: 12, scope: !4518)
!5034 = !DILocation(line: 1936, column: 52, scope: !4518)
!5035 = !DILocation(line: 1936, column: 29, scope: !4518)
!5036 = !DILocation(line: 1936, column: 7, scope: !4518)
!5037 = !DILocation(line: 1936, column: 6, scope: !4518)
!5038 = !DILocation(line: 1937, column: 7, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !4518, file: !1, line: 1937, column: 7)
!5040 = !DILocation(line: 1937, column: 14, scope: !5039)
!5041 = !DILocation(line: 1937, column: 28, scope: !5039)
!5042 = !DILocation(line: 1937, column: 7, scope: !4518)
!5043 = !DILocation(line: 1942, column: 13, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5045, file: !1, line: 1942, column: 7)
!5045 = distinct !DILexicalBlock(scope: !5039, file: !1, line: 1938, column: 5)
!5046 = !DILocation(line: 1942, column: 12, scope: !5044)
!5047 = !DILocation(line: 1942, column: 17, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5044, file: !1, line: 1942, column: 7)
!5049 = !DILocation(line: 1942, column: 31, scope: !5048)
!5050 = !DILocation(line: 1942, column: 38, scope: !5048)
!5051 = !DILocation(line: 1942, column: 19, scope: !5048)
!5052 = !DILocation(line: 1942, column: 7, scope: !5044)
!5053 = !DILocation(line: 1944, column: 14, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5055, file: !1, line: 1944, column: 13)
!5055 = distinct !DILexicalBlock(scope: !5048, file: !1, line: 1943, column: 7)
!5056 = !DILocation(line: 1944, column: 22, scope: !5054)
!5057 = !DILocation(line: 1944, column: 38, scope: !5054)
!5058 = !DILocation(line: 1944, column: 13, scope: !5055)
!5059 = !DILocation(line: 1946, column: 23, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5061, file: !1, line: 1946, column: 17)
!5061 = distinct !DILexicalBlock(scope: !5054, file: !1, line: 1945, column: 11)
!5062 = !DILocation(line: 1946, column: 36, scope: !5060)
!5063 = !DILocation(line: 1946, column: 27, scope: !5060)
!5064 = !DILocation(line: 1946, column: 17, scope: !5061)
!5065 = !DILocation(line: 1948, column: 40, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5060, file: !1, line: 1947, column: 15)
!5067 = !DILocation(line: 1949, column: 37, scope: !5066)
!5068 = !DILocation(line: 1949, column: 44, scope: !5066)
!5069 = !DILocation(line: 1949, column: 53, scope: !5066)
!5070 = !DILocation(line: 1949, column: 56, scope: !5066)
!5071 = !DILocation(line: 1949, column: 19, scope: !5066)
!5072 = !DILocation(line: 1949, column: 62, scope: !5066)
!5073 = !DILocation(line: 1948, column: 17, scope: !5066)
!5074 = !DILocation(line: 1948, column: 24, scope: !5066)
!5075 = !DILocation(line: 1948, column: 33, scope: !5066)
!5076 = !DILocation(line: 1948, column: 36, scope: !5066)
!5077 = !DILocation(line: 1948, column: 39, scope: !5066)
!5078 = !DILocation(line: 1950, column: 42, scope: !5066)
!5079 = !DILocation(line: 1951, column: 37, scope: !5066)
!5080 = !DILocation(line: 1951, column: 44, scope: !5066)
!5081 = !DILocation(line: 1951, column: 53, scope: !5066)
!5082 = !DILocation(line: 1951, column: 56, scope: !5066)
!5083 = !DILocation(line: 1951, column: 19, scope: !5066)
!5084 = !DILocation(line: 1951, column: 64, scope: !5066)
!5085 = !DILocation(line: 1950, column: 17, scope: !5066)
!5086 = !DILocation(line: 1950, column: 24, scope: !5066)
!5087 = !DILocation(line: 1950, column: 33, scope: !5066)
!5088 = !DILocation(line: 1950, column: 36, scope: !5066)
!5089 = !DILocation(line: 1950, column: 41, scope: !5066)
!5090 = !DILocation(line: 1952, column: 41, scope: !5066)
!5091 = !DILocation(line: 1953, column: 37, scope: !5066)
!5092 = !DILocation(line: 1953, column: 44, scope: !5066)
!5093 = !DILocation(line: 1953, column: 53, scope: !5066)
!5094 = !DILocation(line: 1953, column: 56, scope: !5066)
!5095 = !DILocation(line: 1953, column: 19, scope: !5066)
!5096 = !DILocation(line: 1953, column: 63, scope: !5066)
!5097 = !DILocation(line: 1952, column: 17, scope: !5066)
!5098 = !DILocation(line: 1952, column: 24, scope: !5066)
!5099 = !DILocation(line: 1952, column: 33, scope: !5066)
!5100 = !DILocation(line: 1952, column: 36, scope: !5066)
!5101 = !DILocation(line: 1952, column: 40, scope: !5066)
!5102 = !DILocation(line: 1954, column: 44, scope: !5066)
!5103 = !DILocation(line: 1955, column: 37, scope: !5066)
!5104 = !DILocation(line: 1955, column: 44, scope: !5066)
!5105 = !DILocation(line: 1955, column: 53, scope: !5066)
!5106 = !DILocation(line: 1955, column: 56, scope: !5066)
!5107 = !DILocation(line: 1955, column: 19, scope: !5066)
!5108 = !DILocation(line: 1955, column: 66, scope: !5066)
!5109 = !DILocation(line: 1954, column: 17, scope: !5066)
!5110 = !DILocation(line: 1954, column: 24, scope: !5066)
!5111 = !DILocation(line: 1954, column: 33, scope: !5066)
!5112 = !DILocation(line: 1954, column: 36, scope: !5066)
!5113 = !DILocation(line: 1954, column: 43, scope: !5066)
!5114 = !DILocation(line: 1956, column: 15, scope: !5066)
!5115 = !DILocation(line: 1957, column: 13, scope: !5061)
!5116 = !DILocation(line: 1959, column: 15, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5055, file: !1, line: 1959, column: 13)
!5118 = !DILocation(line: 1959, column: 23, scope: !5117)
!5119 = !DILocation(line: 1959, column: 37, scope: !5117)
!5120 = !DILocation(line: 1959, column: 43, scope: !5117)
!5121 = !DILocation(line: 1959, column: 53, scope: !5117)
!5122 = !DILocation(line: 1959, column: 66, scope: !5117)
!5123 = !DILocation(line: 1959, column: 57, scope: !5117)
!5124 = !DILocation(line: 1959, column: 13, scope: !5055)
!5125 = !DILocation(line: 1960, column: 34, scope: !5117)
!5126 = !DILocation(line: 1961, column: 31, scope: !5117)
!5127 = !DILocation(line: 1961, column: 38, scope: !5117)
!5128 = !DILocation(line: 1961, column: 47, scope: !5117)
!5129 = !DILocation(line: 1961, column: 50, scope: !5117)
!5130 = !DILocation(line: 1961, column: 13, scope: !5117)
!5131 = !DILocation(line: 1961, column: 56, scope: !5117)
!5132 = !DILocation(line: 1960, column: 11, scope: !5117)
!5133 = !DILocation(line: 1960, column: 18, scope: !5117)
!5134 = !DILocation(line: 1960, column: 27, scope: !5117)
!5135 = !DILocation(line: 1960, column: 30, scope: !5117)
!5136 = !DILocation(line: 1960, column: 33, scope: !5117)
!5137 = !DILocation(line: 1962, column: 15, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5055, file: !1, line: 1962, column: 13)
!5139 = !DILocation(line: 1962, column: 23, scope: !5138)
!5140 = !DILocation(line: 1962, column: 39, scope: !5138)
!5141 = !DILocation(line: 1962, column: 45, scope: !5138)
!5142 = !DILocation(line: 1962, column: 55, scope: !5138)
!5143 = !DILocation(line: 1962, column: 70, scope: !5138)
!5144 = !DILocation(line: 1962, column: 61, scope: !5138)
!5145 = !DILocation(line: 1962, column: 13, scope: !5055)
!5146 = !DILocation(line: 1963, column: 36, scope: !5138)
!5147 = !DILocation(line: 1964, column: 31, scope: !5138)
!5148 = !DILocation(line: 1964, column: 38, scope: !5138)
!5149 = !DILocation(line: 1964, column: 47, scope: !5138)
!5150 = !DILocation(line: 1964, column: 50, scope: !5138)
!5151 = !DILocation(line: 1964, column: 13, scope: !5138)
!5152 = !DILocation(line: 1964, column: 58, scope: !5138)
!5153 = !DILocation(line: 1963, column: 11, scope: !5138)
!5154 = !DILocation(line: 1963, column: 18, scope: !5138)
!5155 = !DILocation(line: 1963, column: 27, scope: !5138)
!5156 = !DILocation(line: 1963, column: 30, scope: !5138)
!5157 = !DILocation(line: 1963, column: 35, scope: !5138)
!5158 = !DILocation(line: 1965, column: 15, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5055, file: !1, line: 1965, column: 13)
!5160 = !DILocation(line: 1965, column: 23, scope: !5159)
!5161 = !DILocation(line: 1965, column: 38, scope: !5159)
!5162 = !DILocation(line: 1965, column: 44, scope: !5159)
!5163 = !DILocation(line: 1965, column: 54, scope: !5159)
!5164 = !DILocation(line: 1965, column: 68, scope: !5159)
!5165 = !DILocation(line: 1965, column: 59, scope: !5159)
!5166 = !DILocation(line: 1965, column: 13, scope: !5055)
!5167 = !DILocation(line: 1966, column: 35, scope: !5159)
!5168 = !DILocation(line: 1967, column: 31, scope: !5159)
!5169 = !DILocation(line: 1967, column: 38, scope: !5159)
!5170 = !DILocation(line: 1967, column: 47, scope: !5159)
!5171 = !DILocation(line: 1967, column: 50, scope: !5159)
!5172 = !DILocation(line: 1967, column: 13, scope: !5159)
!5173 = !DILocation(line: 1967, column: 57, scope: !5159)
!5174 = !DILocation(line: 1966, column: 11, scope: !5159)
!5175 = !DILocation(line: 1966, column: 18, scope: !5159)
!5176 = !DILocation(line: 1966, column: 27, scope: !5159)
!5177 = !DILocation(line: 1966, column: 30, scope: !5159)
!5178 = !DILocation(line: 1966, column: 34, scope: !5159)
!5179 = !DILocation(line: 1968, column: 15, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5055, file: !1, line: 1968, column: 13)
!5181 = !DILocation(line: 1968, column: 23, scope: !5180)
!5182 = !DILocation(line: 1968, column: 41, scope: !5180)
!5183 = !DILocation(line: 1968, column: 47, scope: !5180)
!5184 = !DILocation(line: 1969, column: 20, scope: !5180)
!5185 = !DILocation(line: 1969, column: 37, scope: !5180)
!5186 = !DILocation(line: 1969, column: 28, scope: !5180)
!5187 = !DILocation(line: 1968, column: 13, scope: !5055)
!5188 = !DILocation(line: 1970, column: 38, scope: !5180)
!5189 = !DILocation(line: 1971, column: 31, scope: !5180)
!5190 = !DILocation(line: 1971, column: 38, scope: !5180)
!5191 = !DILocation(line: 1971, column: 47, scope: !5180)
!5192 = !DILocation(line: 1971, column: 50, scope: !5180)
!5193 = !DILocation(line: 1971, column: 13, scope: !5180)
!5194 = !DILocation(line: 1971, column: 60, scope: !5180)
!5195 = !DILocation(line: 1970, column: 11, scope: !5180)
!5196 = !DILocation(line: 1970, column: 18, scope: !5180)
!5197 = !DILocation(line: 1970, column: 27, scope: !5180)
!5198 = !DILocation(line: 1970, column: 30, scope: !5180)
!5199 = !DILocation(line: 1970, column: 37, scope: !5180)
!5200 = !DILocation(line: 1972, column: 7, scope: !5055)
!5201 = !DILocation(line: 1942, column: 47, scope: !5048)
!5202 = !DILocation(line: 1942, column: 7, scope: !5048)
!5203 = distinct !{!5203, !5052, !5204}
!5204 = !DILocation(line: 1972, column: 7, scope: !5044)
!5205 = !DILocation(line: 1973, column: 5, scope: !5045)
!5206 = !DILocation(line: 1977, column: 9, scope: !4518)
!5207 = !DILocation(line: 1978, column: 11, scope: !4518)
!5208 = !DILocation(line: 1979, column: 40, scope: !4518)
!5209 = !DILocation(line: 1979, column: 46, scope: !4518)
!5210 = !DILocation(line: 1979, column: 14, scope: !4518)
!5211 = !DILocation(line: 1979, column: 13, scope: !4518)
!5212 = !DILocation(line: 1984, column: 9, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !4518, file: !1, line: 1984, column: 3)
!5214 = !DILocation(line: 1984, column: 8, scope: !5213)
!5215 = !DILocation(line: 1984, column: 13, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5213, file: !1, line: 1984, column: 3)
!5217 = !DILocation(line: 1984, column: 27, scope: !5216)
!5218 = !DILocation(line: 1984, column: 34, scope: !5216)
!5219 = !DILocation(line: 1984, column: 15, scope: !5216)
!5220 = !DILocation(line: 1984, column: 3, scope: !5213)
!5221 = !DILocalVariable(name: "indexes", scope: !5222, file: !1, line: 1987, type: !1141)
!5222 = distinct !DILexicalBlock(scope: !5216, file: !1, line: 1985, column: 3)
!5223 = !DILocation(line: 1987, column: 17, scope: !5222)
!5224 = !DILocalVariable(name: "q", scope: !5222, file: !1, line: 1990, type: !1144)
!5225 = !DILocation(line: 1990, column: 17, scope: !5222)
!5226 = !DILocalVariable(name: "x", scope: !5222, file: !1, line: 1993, type: !615)
!5227 = !DILocation(line: 1993, column: 7, scope: !5222)
!5228 = !DILocation(line: 1995, column: 9, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5222, file: !1, line: 1995, column: 9)
!5230 = !DILocation(line: 1995, column: 16, scope: !5229)
!5231 = !DILocation(line: 1995, column: 9, scope: !5222)
!5232 = !DILocation(line: 1996, column: 7, scope: !5229)
!5233 = !DILocation(line: 1997, column: 35, scope: !5222)
!5234 = !DILocation(line: 1997, column: 48, scope: !5222)
!5235 = !DILocation(line: 1997, column: 50, scope: !5222)
!5236 = !DILocation(line: 1997, column: 57, scope: !5222)
!5237 = !DILocation(line: 1997, column: 67, scope: !5222)
!5238 = !DILocation(line: 1997, column: 7, scope: !5222)
!5239 = !DILocation(line: 1997, column: 6, scope: !5222)
!5240 = !DILocation(line: 1998, column: 9, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5222, file: !1, line: 1998, column: 9)
!5242 = !DILocation(line: 1998, column: 11, scope: !5241)
!5243 = !DILocation(line: 1998, column: 9, scope: !5222)
!5244 = !DILocation(line: 2000, column: 15, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5241, file: !1, line: 1999, column: 7)
!5246 = !DILocation(line: 2001, column: 9, scope: !5245)
!5247 = !DILocation(line: 2003, column: 45, scope: !5222)
!5248 = !DILocation(line: 2003, column: 13, scope: !5222)
!5249 = !DILocation(line: 2003, column: 12, scope: !5222)
!5250 = !DILocation(line: 2004, column: 11, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5222, file: !1, line: 2004, column: 5)
!5252 = !DILocation(line: 2004, column: 10, scope: !5251)
!5253 = !DILocation(line: 2004, column: 15, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5251, file: !1, line: 2004, column: 5)
!5255 = !DILocation(line: 2004, column: 29, scope: !5254)
!5256 = !DILocation(line: 2004, column: 36, scope: !5254)
!5257 = !DILocation(line: 2004, column: 17, scope: !5254)
!5258 = !DILocation(line: 2004, column: 5, scope: !5251)
!5259 = !DILocation(line: 2006, column: 12, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5261, file: !1, line: 2006, column: 11)
!5261 = distinct !DILexicalBlock(scope: !5254, file: !1, line: 2005, column: 5)
!5262 = !DILocation(line: 2006, column: 20, scope: !5260)
!5263 = !DILocation(line: 2006, column: 36, scope: !5260)
!5264 = !DILocation(line: 2006, column: 11, scope: !5261)
!5265 = !DILocation(line: 2008, column: 21, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5267, file: !1, line: 2008, column: 15)
!5267 = distinct !DILexicalBlock(scope: !5260, file: !1, line: 2007, column: 9)
!5268 = !DILocation(line: 2008, column: 34, scope: !5266)
!5269 = !DILocation(line: 2008, column: 25, scope: !5266)
!5270 = !DILocation(line: 2008, column: 15, scope: !5267)
!5271 = !DILocation(line: 2010, column: 15, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5266, file: !1, line: 2009, column: 13)
!5273 = !DILocation(line: 2012, column: 15, scope: !5272)
!5274 = !DILocation(line: 2014, column: 15, scope: !5272)
!5275 = !DILocation(line: 2016, column: 15, scope: !5272)
!5276 = !DILocation(line: 2018, column: 19, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5272, file: !1, line: 2018, column: 19)
!5278 = !DILocation(line: 2018, column: 26, scope: !5277)
!5279 = !DILocation(line: 2018, column: 37, scope: !5277)
!5280 = !DILocation(line: 2018, column: 19, scope: !5272)
!5281 = !DILocation(line: 2019, column: 17, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5283, file: !1, line: 2019, column: 17)
!5283 = distinct !DILexicalBlock(scope: !5277, file: !1, line: 2019, column: 17)
!5284 = !DILocation(line: 2019, column: 17, scope: !5283)
!5285 = !DILocation(line: 2021, column: 13, scope: !5272)
!5286 = !DILocation(line: 2022, column: 12, scope: !5267)
!5287 = !DILocation(line: 2023, column: 11, scope: !5267)
!5288 = !DILocation(line: 2025, column: 13, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5261, file: !1, line: 2025, column: 11)
!5290 = !DILocation(line: 2025, column: 21, scope: !5289)
!5291 = !DILocation(line: 2025, column: 35, scope: !5289)
!5292 = !DILocation(line: 2025, column: 41, scope: !5289)
!5293 = !DILocation(line: 2025, column: 51, scope: !5289)
!5294 = !DILocation(line: 2025, column: 64, scope: !5289)
!5295 = !DILocation(line: 2025, column: 55, scope: !5289)
!5296 = !DILocation(line: 2025, column: 11, scope: !5261)
!5297 = !DILocation(line: 2026, column: 9, scope: !5289)
!5298 = !DILocation(line: 2028, column: 13, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5261, file: !1, line: 2028, column: 11)
!5300 = !DILocation(line: 2028, column: 21, scope: !5299)
!5301 = !DILocation(line: 2028, column: 37, scope: !5299)
!5302 = !DILocation(line: 2028, column: 43, scope: !5299)
!5303 = !DILocation(line: 2028, column: 53, scope: !5299)
!5304 = !DILocation(line: 2028, column: 68, scope: !5299)
!5305 = !DILocation(line: 2028, column: 59, scope: !5299)
!5306 = !DILocation(line: 2028, column: 11, scope: !5261)
!5307 = !DILocation(line: 2029, column: 9, scope: !5299)
!5308 = !DILocation(line: 2031, column: 13, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5261, file: !1, line: 2031, column: 11)
!5310 = !DILocation(line: 2031, column: 21, scope: !5309)
!5311 = !DILocation(line: 2031, column: 36, scope: !5309)
!5312 = !DILocation(line: 2031, column: 42, scope: !5309)
!5313 = !DILocation(line: 2031, column: 52, scope: !5309)
!5314 = !DILocation(line: 2031, column: 66, scope: !5309)
!5315 = !DILocation(line: 2031, column: 57, scope: !5309)
!5316 = !DILocation(line: 2031, column: 11, scope: !5261)
!5317 = !DILocation(line: 2032, column: 9, scope: !5309)
!5318 = !DILocation(line: 2034, column: 13, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5261, file: !1, line: 2034, column: 11)
!5320 = !DILocation(line: 2034, column: 21, scope: !5319)
!5321 = !DILocation(line: 2034, column: 39, scope: !5319)
!5322 = !DILocation(line: 2034, column: 45, scope: !5319)
!5323 = !DILocation(line: 2034, column: 55, scope: !5319)
!5324 = !DILocation(line: 2034, column: 72, scope: !5319)
!5325 = !DILocation(line: 2034, column: 63, scope: !5319)
!5326 = !DILocation(line: 2034, column: 11, scope: !5261)
!5327 = !DILocation(line: 2035, column: 9, scope: !5319)
!5328 = !DILocation(line: 2037, column: 14, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5261, file: !1, line: 2037, column: 11)
!5330 = !DILocation(line: 2037, column: 22, scope: !5329)
!5331 = !DILocation(line: 2037, column: 38, scope: !5329)
!5332 = !DILocation(line: 2037, column: 44, scope: !5329)
!5333 = !DILocation(line: 2038, column: 12, scope: !5329)
!5334 = !DILocation(line: 2038, column: 19, scope: !5329)
!5335 = !DILocation(line: 2038, column: 30, scope: !5329)
!5336 = !DILocation(line: 2038, column: 50, scope: !5329)
!5337 = !DILocation(line: 2039, column: 18, scope: !5329)
!5338 = !DILocation(line: 2039, column: 33, scope: !5329)
!5339 = !DILocation(line: 2039, column: 24, scope: !5329)
!5340 = !DILocation(line: 2037, column: 11, scope: !5261)
!5341 = !DILocation(line: 2040, column: 9, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5343, file: !1, line: 2040, column: 9)
!5343 = distinct !DILexicalBlock(scope: !5329, file: !1, line: 2040, column: 9)
!5344 = !DILocation(line: 2040, column: 9, scope: !5343)
!5345 = !DILocation(line: 2042, column: 8, scope: !5261)
!5346 = !DILocation(line: 2043, column: 5, scope: !5261)
!5347 = !DILocation(line: 2004, column: 46, scope: !5254)
!5348 = !DILocation(line: 2004, column: 5, scope: !5254)
!5349 = distinct !{!5349, !5258, !5350}
!5350 = !DILocation(line: 2043, column: 5, scope: !5251)
!5351 = !DILocation(line: 2044, column: 38, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5222, file: !1, line: 2044, column: 9)
!5353 = !DILocation(line: 2044, column: 49, scope: !5352)
!5354 = !DILocation(line: 2044, column: 9, scope: !5352)
!5355 = !DILocation(line: 2044, column: 60, scope: !5352)
!5356 = !DILocation(line: 2044, column: 9, scope: !5222)
!5357 = !DILocation(line: 2045, column: 13, scope: !5352)
!5358 = !DILocation(line: 2045, column: 7, scope: !5352)
!5359 = !DILocation(line: 2046, column: 9, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5222, file: !1, line: 2046, column: 9)
!5361 = !DILocation(line: 2046, column: 16, scope: !5360)
!5362 = !DILocation(line: 2046, column: 33, scope: !5360)
!5363 = !DILocation(line: 2046, column: 9, scope: !5222)
!5364 = !DILocalVariable(name: "proceed", scope: !5365, file: !1, line: 2049, type: !581)
!5365 = distinct !DILexicalBlock(scope: !5360, file: !1, line: 2047, column: 7)
!5366 = !DILocation(line: 2049, column: 11, scope: !5365)
!5367 = !DILocation(line: 2054, column: 34, scope: !5365)
!5368 = !DILocation(line: 2054, column: 65, scope: !5365)
!5369 = !DILocation(line: 2054, column: 68, scope: !5365)
!5370 = !DILocation(line: 2054, column: 75, scope: !5365)
!5371 = !DILocation(line: 2054, column: 17, scope: !5365)
!5372 = !DILocation(line: 2054, column: 16, scope: !5365)
!5373 = !DILocation(line: 2055, column: 13, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5365, file: !1, line: 2055, column: 13)
!5375 = !DILocation(line: 2055, column: 21, scope: !5374)
!5376 = !DILocation(line: 2055, column: 13, scope: !5365)
!5377 = !DILocation(line: 2056, column: 17, scope: !5374)
!5378 = !DILocation(line: 2056, column: 11, scope: !5374)
!5379 = !DILocation(line: 2057, column: 7, scope: !5365)
!5380 = !DILocation(line: 2058, column: 3, scope: !5222)
!5381 = !DILocation(line: 1984, column: 41, scope: !5216)
!5382 = !DILocation(line: 1984, column: 3, scope: !5216)
!5383 = distinct !{!5383, !5220, !5384}
!5384 = !DILocation(line: 2058, column: 3, scope: !5213)
!5385 = !DILocation(line: 2059, column: 31, scope: !4518)
!5386 = !DILocation(line: 2059, column: 14, scope: !4518)
!5387 = !DILocation(line: 2059, column: 13, scope: !4518)
!5388 = !DILocation(line: 2060, column: 62, scope: !4518)
!5389 = !DILocation(line: 2060, column: 39, scope: !4518)
!5390 = !DILocation(line: 2060, column: 16, scope: !4518)
!5391 = !DILocation(line: 2060, column: 15, scope: !4518)
!5392 = !DILocation(line: 2061, column: 10, scope: !4518)
!5393 = !DILocation(line: 2061, column: 3, scope: !4518)
!5394 = !DILocation(line: 2062, column: 1, scope: !4518)
!5395 = distinct !DISubprogram(name: "GammaImage", scope: !1, file: !1, line: 2107, type: !1375, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!5396 = !DILocalVariable(name: "image", arg: 1, scope: !5395, file: !1, line: 2107, type: !565)
!5397 = !DILocation(line: 2107, column: 50, scope: !5395)
!5398 = !DILocalVariable(name: "level", arg: 2, scope: !5395, file: !1, line: 2107, type: !547)
!5399 = !DILocation(line: 2107, column: 68, scope: !5395)
!5400 = !DILocalVariable(name: "geometry_info", scope: !5395, file: !1, line: 2110, type: !2879)
!5401 = !DILocation(line: 2110, column: 5, scope: !5395)
!5402 = !DILocalVariable(name: "gamma", scope: !5395, file: !1, line: 2113, type: !772)
!5403 = !DILocation(line: 2113, column: 5, scope: !5395)
!5404 = !DILocalVariable(name: "flags", scope: !5395, file: !1, line: 2116, type: !833)
!5405 = !DILocation(line: 2116, column: 5, scope: !5395)
!5406 = !DILocalVariable(name: "status", scope: !5395, file: !1, line: 2117, type: !833)
!5407 = !DILocation(line: 2117, column: 5, scope: !5395)
!5408 = !DILocation(line: 2121, column: 7, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5395, file: !1, line: 2121, column: 7)
!5410 = !DILocation(line: 2121, column: 14, scope: !5409)
!5411 = !DILocation(line: 2121, column: 20, scope: !5409)
!5412 = !DILocation(line: 2121, column: 7, scope: !5395)
!5413 = !DILocation(line: 2122, column: 61, scope: !5409)
!5414 = !DILocation(line: 2122, column: 68, scope: !5409)
!5415 = !DILocation(line: 2122, column: 12, scope: !5409)
!5416 = !DILocation(line: 2122, column: 5, scope: !5409)
!5417 = !DILocation(line: 2123, column: 7, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5395, file: !1, line: 2123, column: 7)
!5419 = !DILocation(line: 2123, column: 13, scope: !5418)
!5420 = !DILocation(line: 2123, column: 7, scope: !5395)
!5421 = !DILocation(line: 2124, column: 5, scope: !5418)
!5422 = !DILocation(line: 2125, column: 23, scope: !5395)
!5423 = !DILocation(line: 2125, column: 9, scope: !5395)
!5424 = !DILocation(line: 2125, column: 8, scope: !5395)
!5425 = !DILocation(line: 2126, column: 27, scope: !5395)
!5426 = !DILocation(line: 2126, column: 13, scope: !5395)
!5427 = !DILocation(line: 2126, column: 9, scope: !5395)
!5428 = !DILocation(line: 2126, column: 12, scope: !5395)
!5429 = !DILocation(line: 2127, column: 29, scope: !5395)
!5430 = !DILocation(line: 2127, column: 15, scope: !5395)
!5431 = !DILocation(line: 2127, column: 9, scope: !5395)
!5432 = !DILocation(line: 2127, column: 14, scope: !5395)
!5433 = !DILocation(line: 2128, column: 8, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5395, file: !1, line: 2128, column: 7)
!5435 = !DILocation(line: 2128, column: 14, scope: !5434)
!5436 = !DILocation(line: 2128, column: 28, scope: !5434)
!5437 = !DILocation(line: 2128, column: 7, scope: !5395)
!5438 = !DILocation(line: 2129, column: 23, scope: !5434)
!5439 = !DILocation(line: 2129, column: 11, scope: !5434)
!5440 = !DILocation(line: 2129, column: 16, scope: !5434)
!5441 = !DILocation(line: 2129, column: 5, scope: !5434)
!5442 = !DILocation(line: 2130, column: 28, scope: !5395)
!5443 = !DILocation(line: 2130, column: 14, scope: !5395)
!5444 = !DILocation(line: 2130, column: 9, scope: !5395)
!5445 = !DILocation(line: 2130, column: 13, scope: !5395)
!5446 = !DILocation(line: 2131, column: 8, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5395, file: !1, line: 2131, column: 7)
!5448 = !DILocation(line: 2131, column: 14, scope: !5447)
!5449 = !DILocation(line: 2131, column: 25, scope: !5447)
!5450 = !DILocation(line: 2131, column: 7, scope: !5395)
!5451 = !DILocation(line: 2132, column: 22, scope: !5447)
!5452 = !DILocation(line: 2132, column: 11, scope: !5447)
!5453 = !DILocation(line: 2132, column: 15, scope: !5447)
!5454 = !DILocation(line: 2132, column: 5, scope: !5447)
!5455 = !DILocation(line: 2133, column: 14, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5395, file: !1, line: 2133, column: 7)
!5457 = !DILocation(line: 2133, column: 8, scope: !5456)
!5458 = !DILocation(line: 2133, column: 18, scope: !5456)
!5459 = !DILocation(line: 2133, column: 26, scope: !5456)
!5460 = !DILocation(line: 2133, column: 36, scope: !5456)
!5461 = !DILocation(line: 2133, column: 30, scope: !5456)
!5462 = !DILocation(line: 2133, column: 42, scope: !5456)
!5463 = !DILocation(line: 2133, column: 50, scope: !5456)
!5464 = !DILocation(line: 2133, column: 60, scope: !5456)
!5465 = !DILocation(line: 2133, column: 54, scope: !5456)
!5466 = !DILocation(line: 2133, column: 65, scope: !5456)
!5467 = !DILocation(line: 2133, column: 7, scope: !5395)
!5468 = !DILocation(line: 2134, column: 5, scope: !5456)
!5469 = !DILocation(line: 2135, column: 14, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5395, file: !1, line: 2135, column: 7)
!5471 = !DILocation(line: 2135, column: 27, scope: !5470)
!5472 = !DILocation(line: 2135, column: 18, scope: !5470)
!5473 = !DILocation(line: 2135, column: 34, scope: !5470)
!5474 = !DILocation(line: 2135, column: 44, scope: !5470)
!5475 = !DILocation(line: 2135, column: 59, scope: !5470)
!5476 = !DILocation(line: 2135, column: 50, scope: !5470)
!5477 = !DILocation(line: 2135, column: 7, scope: !5395)
!5478 = !DILocation(line: 2136, column: 30, scope: !5470)
!5479 = !DILocation(line: 2137, column: 35, scope: !5470)
!5480 = !DILocation(line: 2137, column: 20, scope: !5470)
!5481 = !DILocation(line: 2136, column: 12, scope: !5470)
!5482 = !DILocation(line: 2136, column: 11, scope: !5470)
!5483 = !DILocation(line: 2136, column: 5, scope: !5470)
!5484 = !DILocation(line: 2140, column: 32, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5470, file: !1, line: 2139, column: 5)
!5486 = !DILocation(line: 2140, column: 64, scope: !5485)
!5487 = !DILocation(line: 2140, column: 49, scope: !5485)
!5488 = !DILocation(line: 2140, column: 14, scope: !5485)
!5489 = !DILocation(line: 2140, column: 13, scope: !5485)
!5490 = !DILocation(line: 2141, column: 33, scope: !5485)
!5491 = !DILocation(line: 2141, column: 67, scope: !5485)
!5492 = !DILocation(line: 2141, column: 52, scope: !5485)
!5493 = !DILocation(line: 2141, column: 15, scope: !5485)
!5494 = !DILocation(line: 2141, column: 13, scope: !5485)
!5495 = !DILocation(line: 2142, column: 33, scope: !5485)
!5496 = !DILocation(line: 2142, column: 66, scope: !5485)
!5497 = !DILocation(line: 2142, column: 51, scope: !5485)
!5498 = !DILocation(line: 2142, column: 15, scope: !5485)
!5499 = !DILocation(line: 2142, column: 13, scope: !5485)
!5500 = !DILocation(line: 2144, column: 10, scope: !5395)
!5501 = !DILocation(line: 2144, column: 17, scope: !5395)
!5502 = !DILocation(line: 2144, column: 3, scope: !5395)
!5503 = !DILocation(line: 2145, column: 1, scope: !5395)
!5504 = distinct !DISubprogram(name: "GammaImageChannel", scope: !1, file: !1, line: 2147, type: !5505, scopeLine: 2149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!5505 = !DISubroutineType(types: !5506)
!5506 = !{!581, !565, !819, !980}
!5507 = !DILocalVariable(name: "image", arg: 1, scope: !5504, file: !1, line: 2147, type: !565)
!5508 = !DILocation(line: 2147, column: 57, scope: !5504)
!5509 = !DILocalVariable(name: "channel", arg: 2, scope: !5504, file: !1, line: 2148, type: !819)
!5510 = !DILocation(line: 2148, column: 21, scope: !5504)
!5511 = !DILocalVariable(name: "gamma", arg: 3, scope: !5504, file: !1, line: 2148, type: !980)
!5512 = !DILocation(line: 2148, column: 42, scope: !5504)
!5513 = !DILocalVariable(name: "image_view", scope: !5504, file: !1, line: 2153, type: !992)
!5514 = !DILocation(line: 2153, column: 6, scope: !5504)
!5515 = !DILocalVariable(name: "exception", scope: !5504, file: !1, line: 2156, type: !998)
!5516 = !DILocation(line: 2156, column: 6, scope: !5504)
!5517 = !DILocalVariable(name: "status", scope: !5504, file: !1, line: 2159, type: !581)
!5518 = !DILocation(line: 2159, column: 5, scope: !5504)
!5519 = !DILocalVariable(name: "progress", scope: !5504, file: !1, line: 2162, type: !685)
!5520 = !DILocation(line: 2162, column: 5, scope: !5504)
!5521 = !DILocalVariable(name: "gamma_map", scope: !5504, file: !1, line: 2165, type: !801)
!5522 = !DILocation(line: 2165, column: 6, scope: !5504)
!5523 = !DILocalVariable(name: "i", scope: !5504, file: !1, line: 2168, type: !615)
!5524 = !DILocation(line: 2168, column: 5, scope: !5504)
!5525 = !DILocalVariable(name: "y", scope: !5504, file: !1, line: 2171, type: !615)
!5526 = !DILocation(line: 2171, column: 5, scope: !5504)
!5527 = !DILocation(line: 2178, column: 7, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5504, file: !1, line: 2178, column: 7)
!5529 = !DILocation(line: 2178, column: 14, scope: !5528)
!5530 = !DILocation(line: 2178, column: 20, scope: !5528)
!5531 = !DILocation(line: 2178, column: 7, scope: !5504)
!5532 = !DILocation(line: 2179, column: 61, scope: !5528)
!5533 = !DILocation(line: 2179, column: 68, scope: !5528)
!5534 = !DILocation(line: 2179, column: 12, scope: !5528)
!5535 = !DILocation(line: 2179, column: 5, scope: !5528)
!5536 = !DILocation(line: 2180, column: 7, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5504, file: !1, line: 2180, column: 7)
!5538 = !DILocation(line: 2180, column: 13, scope: !5537)
!5539 = !DILocation(line: 2180, column: 7, scope: !5504)
!5540 = !DILocation(line: 2181, column: 5, scope: !5537)
!5541 = !DILocation(line: 2182, column: 25, scope: !5504)
!5542 = !DILocation(line: 2182, column: 13, scope: !5504)
!5543 = !DILocation(line: 2182, column: 12, scope: !5504)
!5544 = !DILocation(line: 2183, column: 7, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5504, file: !1, line: 2183, column: 7)
!5546 = !DILocation(line: 2183, column: 17, scope: !5545)
!5547 = !DILocation(line: 2183, column: 7, scope: !5504)
!5548 = !DILocation(line: 2184, column: 5, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5550, file: !1, line: 2184, column: 5)
!5550 = distinct !DILexicalBlock(scope: !5545, file: !1, line: 2184, column: 5)
!5551 = !DILocation(line: 2184, column: 5, scope: !5550)
!5552 = !DILocation(line: 2186, column: 28, scope: !5504)
!5553 = !DILocation(line: 2186, column: 10, scope: !5504)
!5554 = !DILocation(line: 2187, column: 7, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5504, file: !1, line: 2187, column: 7)
!5556 = !DILocation(line: 2187, column: 13, scope: !5555)
!5557 = !DILocation(line: 2187, column: 7, scope: !5504)
!5558 = !DILocation(line: 2188, column: 11, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5555, file: !1, line: 2188, column: 5)
!5560 = !DILocation(line: 2188, column: 10, scope: !5559)
!5561 = !DILocation(line: 2188, column: 15, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5559, file: !1, line: 2188, column: 5)
!5563 = !DILocation(line: 2188, column: 17, scope: !5562)
!5564 = !DILocation(line: 2188, column: 5, scope: !5559)
!5565 = !DILocation(line: 2190, column: 46, scope: !5562)
!5566 = !DILocation(line: 2190, column: 37, scope: !5562)
!5567 = !DILocation(line: 2190, column: 47, scope: !5562)
!5568 = !DILocation(line: 2190, column: 59, scope: !5562)
!5569 = !DILocation(line: 2190, column: 58, scope: !5562)
!5570 = !DILocation(line: 2190, column: 33, scope: !5562)
!5571 = !DILocation(line: 2190, column: 32, scope: !5562)
!5572 = !DILocation(line: 2189, column: 70, scope: !5562)
!5573 = !DILocation(line: 2189, column: 52, scope: !5562)
!5574 = !DILocation(line: 2189, column: 35, scope: !5562)
!5575 = !DILocation(line: 2189, column: 20, scope: !5562)
!5576 = !DILocation(line: 2189, column: 7, scope: !5562)
!5577 = !DILocation(line: 2189, column: 17, scope: !5562)
!5578 = !DILocation(line: 2189, column: 19, scope: !5562)
!5579 = !DILocation(line: 2188, column: 39, scope: !5562)
!5580 = !DILocation(line: 2188, column: 5, scope: !5562)
!5581 = distinct !{!5581, !5564, !5582}
!5582 = !DILocation(line: 2190, column: 67, scope: !5559)
!5583 = !DILocation(line: 2191, column: 7, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5504, file: !1, line: 2191, column: 7)
!5585 = !DILocation(line: 2191, column: 14, scope: !5584)
!5586 = !DILocation(line: 2191, column: 28, scope: !5584)
!5587 = !DILocation(line: 2191, column: 7, scope: !5504)
!5588 = !DILocation(line: 2196, column: 13, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5590, file: !1, line: 2196, column: 7)
!5590 = distinct !DILexicalBlock(scope: !5584, file: !1, line: 2192, column: 5)
!5591 = !DILocation(line: 2196, column: 12, scope: !5589)
!5592 = !DILocation(line: 2196, column: 17, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5589, file: !1, line: 2196, column: 7)
!5594 = !DILocation(line: 2196, column: 31, scope: !5593)
!5595 = !DILocation(line: 2196, column: 38, scope: !5593)
!5596 = !DILocation(line: 2196, column: 19, scope: !5593)
!5597 = !DILocation(line: 2196, column: 7, scope: !5589)
!5598 = !DILocation(line: 2199, column: 14, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5600, file: !1, line: 2199, column: 13)
!5600 = distinct !DILexicalBlock(scope: !5593, file: !1, line: 2197, column: 7)
!5601 = !DILocation(line: 2199, column: 22, scope: !5599)
!5602 = !DILocation(line: 2199, column: 36, scope: !5599)
!5603 = !DILocation(line: 2199, column: 13, scope: !5600)
!5604 = !DILocation(line: 2200, column: 34, scope: !5599)
!5605 = !DILocation(line: 2201, column: 13, scope: !5599)
!5606 = !DILocation(line: 2201, column: 20, scope: !5599)
!5607 = !DILocation(line: 2201, column: 29, scope: !5599)
!5608 = !DILocation(line: 2201, column: 32, scope: !5599)
!5609 = !DILocation(line: 2200, column: 44, scope: !5599)
!5610 = !DILocation(line: 2200, column: 11, scope: !5599)
!5611 = !DILocation(line: 2200, column: 18, scope: !5599)
!5612 = !DILocation(line: 2200, column: 27, scope: !5599)
!5613 = !DILocation(line: 2200, column: 30, scope: !5599)
!5614 = !DILocation(line: 2200, column: 33, scope: !5599)
!5615 = !DILocation(line: 2202, column: 14, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5600, file: !1, line: 2202, column: 13)
!5617 = !DILocation(line: 2202, column: 22, scope: !5616)
!5618 = !DILocation(line: 2202, column: 38, scope: !5616)
!5619 = !DILocation(line: 2202, column: 13, scope: !5600)
!5620 = !DILocation(line: 2203, column: 36, scope: !5616)
!5621 = !DILocation(line: 2204, column: 13, scope: !5616)
!5622 = !DILocation(line: 2204, column: 20, scope: !5616)
!5623 = !DILocation(line: 2204, column: 29, scope: !5616)
!5624 = !DILocation(line: 2204, column: 32, scope: !5616)
!5625 = !DILocation(line: 2203, column: 46, scope: !5616)
!5626 = !DILocation(line: 2203, column: 11, scope: !5616)
!5627 = !DILocation(line: 2203, column: 18, scope: !5616)
!5628 = !DILocation(line: 2203, column: 27, scope: !5616)
!5629 = !DILocation(line: 2203, column: 30, scope: !5616)
!5630 = !DILocation(line: 2203, column: 35, scope: !5616)
!5631 = !DILocation(line: 2205, column: 14, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5600, file: !1, line: 2205, column: 13)
!5633 = !DILocation(line: 2205, column: 22, scope: !5632)
!5634 = !DILocation(line: 2205, column: 37, scope: !5632)
!5635 = !DILocation(line: 2205, column: 13, scope: !5600)
!5636 = !DILocation(line: 2206, column: 35, scope: !5632)
!5637 = !DILocation(line: 2207, column: 13, scope: !5632)
!5638 = !DILocation(line: 2207, column: 20, scope: !5632)
!5639 = !DILocation(line: 2207, column: 29, scope: !5632)
!5640 = !DILocation(line: 2207, column: 32, scope: !5632)
!5641 = !DILocation(line: 2206, column: 45, scope: !5632)
!5642 = !DILocation(line: 2206, column: 11, scope: !5632)
!5643 = !DILocation(line: 2206, column: 18, scope: !5632)
!5644 = !DILocation(line: 2206, column: 27, scope: !5632)
!5645 = !DILocation(line: 2206, column: 30, scope: !5632)
!5646 = !DILocation(line: 2206, column: 34, scope: !5632)
!5647 = !DILocation(line: 2208, column: 14, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5600, file: !1, line: 2208, column: 13)
!5649 = !DILocation(line: 2208, column: 22, scope: !5648)
!5650 = !DILocation(line: 2208, column: 40, scope: !5648)
!5651 = !DILocation(line: 2208, column: 13, scope: !5600)
!5652 = !DILocation(line: 2210, column: 17, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5654, file: !1, line: 2210, column: 17)
!5654 = distinct !DILexicalBlock(scope: !5648, file: !1, line: 2209, column: 11)
!5655 = !DILocation(line: 2210, column: 24, scope: !5653)
!5656 = !DILocation(line: 2210, column: 30, scope: !5653)
!5657 = !DILocation(line: 2210, column: 17, scope: !5654)
!5658 = !DILocation(line: 2211, column: 42, scope: !5653)
!5659 = !DILocation(line: 2212, column: 17, scope: !5653)
!5660 = !DILocation(line: 2212, column: 24, scope: !5653)
!5661 = !DILocation(line: 2212, column: 33, scope: !5653)
!5662 = !DILocation(line: 2212, column: 36, scope: !5653)
!5663 = !DILocation(line: 2211, column: 52, scope: !5653)
!5664 = !DILocation(line: 2211, column: 15, scope: !5653)
!5665 = !DILocation(line: 2211, column: 22, scope: !5653)
!5666 = !DILocation(line: 2211, column: 31, scope: !5653)
!5667 = !DILocation(line: 2211, column: 34, scope: !5653)
!5668 = !DILocation(line: 2211, column: 41, scope: !5653)
!5669 = !DILocation(line: 2214, column: 55, scope: !5653)
!5670 = !DILocation(line: 2216, column: 17, scope: !5653)
!5671 = !DILocation(line: 2216, column: 24, scope: !5653)
!5672 = !DILocation(line: 2216, column: 33, scope: !5653)
!5673 = !DILocation(line: 2216, column: 36, scope: !5653)
!5674 = !DILocation(line: 2215, column: 58, scope: !5653)
!5675 = !DILocation(line: 2215, column: 35, scope: !5653)
!5676 = !DILocation(line: 2215, column: 17, scope: !5653)
!5677 = !DILocation(line: 2214, column: 54, scope: !5653)
!5678 = !DILocation(line: 2214, column: 42, scope: !5653)
!5679 = !DILocation(line: 2214, column: 15, scope: !5653)
!5680 = !DILocation(line: 2214, column: 22, scope: !5653)
!5681 = !DILocation(line: 2214, column: 31, scope: !5653)
!5682 = !DILocation(line: 2214, column: 34, scope: !5653)
!5683 = !DILocation(line: 2214, column: 41, scope: !5653)
!5684 = !DILocation(line: 2217, column: 11, scope: !5654)
!5685 = !DILocation(line: 2239, column: 7, scope: !5600)
!5686 = !DILocation(line: 2196, column: 47, scope: !5593)
!5687 = !DILocation(line: 2196, column: 7, scope: !5593)
!5688 = distinct !{!5688, !5597, !5689}
!5689 = !DILocation(line: 2239, column: 7, scope: !5589)
!5690 = !DILocation(line: 2240, column: 5, scope: !5590)
!5691 = !DILocation(line: 2244, column: 9, scope: !5504)
!5692 = !DILocation(line: 2245, column: 11, scope: !5504)
!5693 = !DILocation(line: 2246, column: 15, scope: !5504)
!5694 = !DILocation(line: 2246, column: 22, scope: !5504)
!5695 = !DILocation(line: 2246, column: 12, scope: !5504)
!5696 = !DILocation(line: 2247, column: 40, scope: !5504)
!5697 = !DILocation(line: 2247, column: 46, scope: !5504)
!5698 = !DILocation(line: 2247, column: 14, scope: !5504)
!5699 = !DILocation(line: 2247, column: 13, scope: !5504)
!5700 = !DILocation(line: 2252, column: 9, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5504, file: !1, line: 2252, column: 3)
!5702 = !DILocation(line: 2252, column: 8, scope: !5701)
!5703 = !DILocation(line: 2252, column: 13, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5701, file: !1, line: 2252, column: 3)
!5705 = !DILocation(line: 2252, column: 27, scope: !5704)
!5706 = !DILocation(line: 2252, column: 34, scope: !5704)
!5707 = !DILocation(line: 2252, column: 15, scope: !5704)
!5708 = !DILocation(line: 2252, column: 3, scope: !5701)
!5709 = !DILocalVariable(name: "indexes", scope: !5710, file: !1, line: 2255, type: !1141)
!5710 = distinct !DILexicalBlock(scope: !5704, file: !1, line: 2253, column: 3)
!5711 = !DILocation(line: 2255, column: 17, scope: !5710)
!5712 = !DILocalVariable(name: "q", scope: !5710, file: !1, line: 2258, type: !1144)
!5713 = !DILocation(line: 2258, column: 17, scope: !5710)
!5714 = !DILocalVariable(name: "x", scope: !5710, file: !1, line: 2261, type: !615)
!5715 = !DILocation(line: 2261, column: 7, scope: !5710)
!5716 = !DILocation(line: 2263, column: 9, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5710, file: !1, line: 2263, column: 9)
!5718 = !DILocation(line: 2263, column: 16, scope: !5717)
!5719 = !DILocation(line: 2263, column: 9, scope: !5710)
!5720 = !DILocation(line: 2264, column: 7, scope: !5717)
!5721 = !DILocation(line: 2265, column: 35, scope: !5710)
!5722 = !DILocation(line: 2265, column: 48, scope: !5710)
!5723 = !DILocation(line: 2265, column: 50, scope: !5710)
!5724 = !DILocation(line: 2265, column: 57, scope: !5710)
!5725 = !DILocation(line: 2265, column: 67, scope: !5710)
!5726 = !DILocation(line: 2265, column: 7, scope: !5710)
!5727 = !DILocation(line: 2265, column: 6, scope: !5710)
!5728 = !DILocation(line: 2266, column: 9, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5710, file: !1, line: 2266, column: 9)
!5730 = !DILocation(line: 2266, column: 11, scope: !5729)
!5731 = !DILocation(line: 2266, column: 9, scope: !5710)
!5732 = !DILocation(line: 2268, column: 15, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5729, file: !1, line: 2267, column: 7)
!5734 = !DILocation(line: 2269, column: 9, scope: !5733)
!5735 = !DILocation(line: 2271, column: 45, scope: !5710)
!5736 = !DILocation(line: 2271, column: 13, scope: !5710)
!5737 = !DILocation(line: 2271, column: 12, scope: !5710)
!5738 = !DILocation(line: 2272, column: 11, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5710, file: !1, line: 2272, column: 5)
!5740 = !DILocation(line: 2272, column: 10, scope: !5739)
!5741 = !DILocation(line: 2272, column: 15, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5739, file: !1, line: 2272, column: 5)
!5743 = !DILocation(line: 2272, column: 29, scope: !5742)
!5744 = !DILocation(line: 2272, column: 36, scope: !5742)
!5745 = !DILocation(line: 2272, column: 17, scope: !5742)
!5746 = !DILocation(line: 2272, column: 5, scope: !5739)
!5747 = !DILocation(line: 2275, column: 12, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5749, file: !1, line: 2275, column: 11)
!5749 = distinct !DILexicalBlock(scope: !5742, file: !1, line: 2273, column: 5)
!5750 = !DILocation(line: 2275, column: 20, scope: !5748)
!5751 = !DILocation(line: 2275, column: 36, scope: !5748)
!5752 = !DILocation(line: 2275, column: 11, scope: !5749)
!5753 = !DILocation(line: 2277, column: 11, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5748, file: !1, line: 2276, column: 9)
!5755 = !DILocation(line: 2278, column: 11, scope: !5754)
!5756 = !DILocation(line: 2279, column: 11, scope: !5754)
!5757 = !DILocation(line: 2280, column: 9, scope: !5754)
!5758 = !DILocation(line: 2283, column: 16, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5760, file: !1, line: 2283, column: 15)
!5760 = distinct !DILexicalBlock(scope: !5748, file: !1, line: 2282, column: 9)
!5761 = !DILocation(line: 2283, column: 24, scope: !5759)
!5762 = !DILocation(line: 2283, column: 38, scope: !5759)
!5763 = !DILocation(line: 2283, column: 15, scope: !5760)
!5764 = !DILocation(line: 2284, column: 13, scope: !5759)
!5765 = !DILocation(line: 2285, column: 16, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5760, file: !1, line: 2285, column: 15)
!5767 = !DILocation(line: 2285, column: 24, scope: !5766)
!5768 = !DILocation(line: 2285, column: 40, scope: !5766)
!5769 = !DILocation(line: 2285, column: 15, scope: !5760)
!5770 = !DILocation(line: 2286, column: 13, scope: !5766)
!5771 = !DILocation(line: 2287, column: 16, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5760, file: !1, line: 2287, column: 15)
!5773 = !DILocation(line: 2287, column: 24, scope: !5772)
!5774 = !DILocation(line: 2287, column: 39, scope: !5772)
!5775 = !DILocation(line: 2287, column: 15, scope: !5760)
!5776 = !DILocation(line: 2288, column: 13, scope: !5772)
!5777 = !DILocation(line: 2289, column: 16, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5760, file: !1, line: 2289, column: 15)
!5779 = !DILocation(line: 2289, column: 24, scope: !5778)
!5780 = !DILocation(line: 2289, column: 42, scope: !5778)
!5781 = !DILocation(line: 2289, column: 15, scope: !5760)
!5782 = !DILocation(line: 2291, column: 19, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5784, file: !1, line: 2291, column: 19)
!5784 = distinct !DILexicalBlock(scope: !5778, file: !1, line: 2290, column: 13)
!5785 = !DILocation(line: 2291, column: 26, scope: !5783)
!5786 = !DILocation(line: 2291, column: 32, scope: !5783)
!5787 = !DILocation(line: 2291, column: 19, scope: !5784)
!5788 = !DILocation(line: 2292, column: 17, scope: !5783)
!5789 = !DILocation(line: 2295, column: 17, scope: !5783)
!5790 = !DILocation(line: 2297, column: 13, scope: !5784)
!5791 = !DILocation(line: 2331, column: 8, scope: !5749)
!5792 = !DILocation(line: 2332, column: 5, scope: !5749)
!5793 = !DILocation(line: 2272, column: 46, scope: !5742)
!5794 = !DILocation(line: 2272, column: 5, scope: !5742)
!5795 = distinct !{!5795, !5746, !5796}
!5796 = !DILocation(line: 2332, column: 5, scope: !5739)
!5797 = !DILocation(line: 2333, column: 11, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5710, file: !1, line: 2333, column: 9)
!5799 = !DILocation(line: 2333, column: 19, scope: !5798)
!5800 = !DILocation(line: 2333, column: 35, scope: !5798)
!5801 = !DILocation(line: 2333, column: 41, scope: !5798)
!5802 = !DILocation(line: 2334, column: 10, scope: !5798)
!5803 = !DILocation(line: 2334, column: 17, scope: !5798)
!5804 = !DILocation(line: 2334, column: 28, scope: !5798)
!5805 = !DILocation(line: 2333, column: 9, scope: !5710)
!5806 = !DILocation(line: 2335, column: 13, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5798, file: !1, line: 2335, column: 7)
!5808 = !DILocation(line: 2335, column: 12, scope: !5807)
!5809 = !DILocation(line: 2335, column: 17, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5807, file: !1, line: 2335, column: 7)
!5811 = !DILocation(line: 2335, column: 31, scope: !5810)
!5812 = !DILocation(line: 2335, column: 38, scope: !5810)
!5813 = !DILocation(line: 2335, column: 19, scope: !5810)
!5814 = !DILocation(line: 2335, column: 7, scope: !5807)
!5815 = !DILocation(line: 2336, column: 9, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5817, file: !1, line: 2336, column: 9)
!5817 = distinct !DILexicalBlock(scope: !5810, file: !1, line: 2336, column: 9)
!5818 = !DILocation(line: 2336, column: 9, scope: !5817)
!5819 = !DILocation(line: 2335, column: 48, scope: !5810)
!5820 = !DILocation(line: 2335, column: 7, scope: !5810)
!5821 = distinct !{!5821, !5814, !5822}
!5822 = !DILocation(line: 2336, column: 9, scope: !5807)
!5823 = !DILocation(line: 2338, column: 38, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5710, file: !1, line: 2338, column: 9)
!5825 = !DILocation(line: 2338, column: 49, scope: !5824)
!5826 = !DILocation(line: 2338, column: 9, scope: !5824)
!5827 = !DILocation(line: 2338, column: 60, scope: !5824)
!5828 = !DILocation(line: 2338, column: 9, scope: !5710)
!5829 = !DILocation(line: 2339, column: 13, scope: !5824)
!5830 = !DILocation(line: 2339, column: 7, scope: !5824)
!5831 = !DILocation(line: 2340, column: 9, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5710, file: !1, line: 2340, column: 9)
!5833 = !DILocation(line: 2340, column: 16, scope: !5832)
!5834 = !DILocation(line: 2340, column: 33, scope: !5832)
!5835 = !DILocation(line: 2340, column: 9, scope: !5710)
!5836 = !DILocalVariable(name: "proceed", scope: !5837, file: !1, line: 2343, type: !581)
!5837 = distinct !DILexicalBlock(scope: !5832, file: !1, line: 2341, column: 7)
!5838 = !DILocation(line: 2343, column: 11, scope: !5837)
!5839 = !DILocation(line: 2348, column: 34, scope: !5837)
!5840 = !DILocation(line: 2348, column: 69, scope: !5837)
!5841 = !DILocation(line: 2349, column: 11, scope: !5837)
!5842 = !DILocation(line: 2349, column: 18, scope: !5837)
!5843 = !DILocation(line: 2348, column: 17, scope: !5837)
!5844 = !DILocation(line: 2348, column: 16, scope: !5837)
!5845 = !DILocation(line: 2350, column: 13, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5837, file: !1, line: 2350, column: 13)
!5847 = !DILocation(line: 2350, column: 21, scope: !5846)
!5848 = !DILocation(line: 2350, column: 13, scope: !5837)
!5849 = !DILocation(line: 2351, column: 17, scope: !5846)
!5850 = !DILocation(line: 2351, column: 11, scope: !5846)
!5851 = !DILocation(line: 2352, column: 7, scope: !5837)
!5852 = !DILocation(line: 2353, column: 3, scope: !5710)
!5853 = !DILocation(line: 2252, column: 41, scope: !5704)
!5854 = !DILocation(line: 2252, column: 3, scope: !5704)
!5855 = distinct !{!5855, !5708, !5856}
!5856 = !DILocation(line: 2353, column: 3, scope: !5701)
!5857 = !DILocation(line: 2354, column: 31, scope: !5504)
!5858 = !DILocation(line: 2354, column: 14, scope: !5504)
!5859 = !DILocation(line: 2354, column: 13, scope: !5504)
!5860 = !DILocation(line: 2355, column: 48, scope: !5504)
!5861 = !DILocation(line: 2355, column: 25, scope: !5504)
!5862 = !DILocation(line: 2355, column: 13, scope: !5504)
!5863 = !DILocation(line: 2355, column: 12, scope: !5504)
!5864 = !DILocation(line: 2356, column: 7, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5504, file: !1, line: 2356, column: 7)
!5866 = !DILocation(line: 2356, column: 14, scope: !5865)
!5867 = !DILocation(line: 2356, column: 20, scope: !5865)
!5868 = !DILocation(line: 2356, column: 7, scope: !5504)
!5869 = !DILocation(line: 2357, column: 19, scope: !5865)
!5870 = !DILocation(line: 2357, column: 5, scope: !5865)
!5871 = !DILocation(line: 2357, column: 12, scope: !5865)
!5872 = !DILocation(line: 2357, column: 17, scope: !5865)
!5873 = !DILocation(line: 2358, column: 10, scope: !5504)
!5874 = !DILocation(line: 2358, column: 3, scope: !5504)
!5875 = !DILocation(line: 2359, column: 1, scope: !5504)
!5876 = distinct !DISubprogram(name: "GrayscaleImage", scope: !1, file: !1, line: 2403, type: !5877, scopeLine: 2405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!5877 = !DISubroutineType(types: !5878)
!5878 = !{!581, !565, !5879}
!5879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !767)
!5880 = !DILocalVariable(name: "image", arg: 1, scope: !5876, file: !1, line: 2403, type: !565)
!5881 = !DILocation(line: 2403, column: 54, scope: !5876)
!5882 = !DILocalVariable(name: "method", arg: 2, scope: !5876, file: !1, line: 2404, type: !5879)
!5883 = !DILocation(line: 2404, column: 30, scope: !5876)
!5884 = !DILocalVariable(name: "image_view", scope: !5876, file: !1, line: 2409, type: !992)
!5885 = !DILocation(line: 2409, column: 6, scope: !5876)
!5886 = !DILocalVariable(name: "exception", scope: !5876, file: !1, line: 2412, type: !998)
!5887 = !DILocation(line: 2412, column: 6, scope: !5876)
!5888 = !DILocalVariable(name: "status", scope: !5876, file: !1, line: 2415, type: !581)
!5889 = !DILocation(line: 2415, column: 5, scope: !5876)
!5890 = !DILocalVariable(name: "progress", scope: !5876, file: !1, line: 2418, type: !685)
!5891 = !DILocation(line: 2418, column: 5, scope: !5876)
!5892 = !DILocalVariable(name: "y", scope: !5876, file: !1, line: 2421, type: !615)
!5893 = !DILocation(line: 2421, column: 5, scope: !5876)
!5894 = !DILocation(line: 2425, column: 7, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5876, file: !1, line: 2425, column: 7)
!5896 = !DILocation(line: 2425, column: 14, scope: !5895)
!5897 = !DILocation(line: 2425, column: 20, scope: !5895)
!5898 = !DILocation(line: 2425, column: 7, scope: !5876)
!5899 = !DILocation(line: 2426, column: 61, scope: !5895)
!5900 = !DILocation(line: 2426, column: 68, scope: !5895)
!5901 = !DILocation(line: 2426, column: 12, scope: !5895)
!5902 = !DILocation(line: 2426, column: 5, scope: !5895)
!5903 = !DILocation(line: 2427, column: 7, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5876, file: !1, line: 2427, column: 7)
!5905 = !DILocation(line: 2427, column: 14, scope: !5904)
!5906 = !DILocation(line: 2427, column: 28, scope: !5904)
!5907 = !DILocation(line: 2427, column: 7, scope: !5876)
!5908 = !DILocation(line: 2429, column: 21, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5910, file: !1, line: 2429, column: 11)
!5910 = distinct !DILexicalBlock(scope: !5904, file: !1, line: 2428, column: 5)
!5911 = !DILocation(line: 2429, column: 11, scope: !5909)
!5912 = !DILocation(line: 2429, column: 28, scope: !5909)
!5913 = !DILocation(line: 2429, column: 11, scope: !5910)
!5914 = !DILocation(line: 2430, column: 9, scope: !5909)
!5915 = !DILocation(line: 2431, column: 32, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5910, file: !1, line: 2431, column: 11)
!5917 = !DILocation(line: 2431, column: 11, scope: !5916)
!5918 = !DILocation(line: 2431, column: 51, scope: !5916)
!5919 = !DILocation(line: 2431, column: 11, scope: !5910)
!5920 = !DILocation(line: 2432, column: 9, scope: !5916)
!5921 = !DILocation(line: 2433, column: 5, scope: !5910)
!5922 = !DILocation(line: 2440, column: 37, scope: !5876)
!5923 = !DILocation(line: 2440, column: 44, scope: !5876)
!5924 = !DILocation(line: 2440, column: 53, scope: !5876)
!5925 = !DILocation(line: 2440, column: 60, scope: !5876)
!5926 = !DILocation(line: 2440, column: 12, scope: !5876)
!5927 = !DILocation(line: 2440, column: 10, scope: !5876)
!5928 = !DILocation(line: 2441, column: 7, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5876, file: !1, line: 2441, column: 7)
!5930 = !DILocation(line: 2441, column: 14, scope: !5929)
!5931 = !DILocation(line: 2441, column: 7, scope: !5876)
!5932 = !DILocation(line: 2442, column: 12, scope: !5929)
!5933 = !DILocation(line: 2442, column: 5, scope: !5929)
!5934 = !DILocation(line: 2444, column: 9, scope: !5876)
!5935 = !DILocation(line: 2445, column: 11, scope: !5876)
!5936 = !DILocation(line: 2446, column: 15, scope: !5876)
!5937 = !DILocation(line: 2446, column: 22, scope: !5876)
!5938 = !DILocation(line: 2446, column: 12, scope: !5876)
!5939 = !DILocation(line: 2447, column: 40, scope: !5876)
!5940 = !DILocation(line: 2447, column: 46, scope: !5876)
!5941 = !DILocation(line: 2447, column: 14, scope: !5876)
!5942 = !DILocation(line: 2447, column: 13, scope: !5876)
!5943 = !DILocation(line: 2452, column: 9, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5876, file: !1, line: 2452, column: 3)
!5945 = !DILocation(line: 2452, column: 8, scope: !5944)
!5946 = !DILocation(line: 2452, column: 13, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5944, file: !1, line: 2452, column: 3)
!5948 = !DILocation(line: 2452, column: 27, scope: !5947)
!5949 = !DILocation(line: 2452, column: 34, scope: !5947)
!5950 = !DILocation(line: 2452, column: 15, scope: !5947)
!5951 = !DILocation(line: 2452, column: 3, scope: !5944)
!5952 = !DILocalVariable(name: "q", scope: !5953, file: !1, line: 2455, type: !1144)
!5953 = distinct !DILexicalBlock(scope: !5947, file: !1, line: 2453, column: 3)
!5954 = !DILocation(line: 2455, column: 17, scope: !5953)
!5955 = !DILocalVariable(name: "x", scope: !5953, file: !1, line: 2458, type: !615)
!5956 = !DILocation(line: 2458, column: 7, scope: !5953)
!5957 = !DILocation(line: 2460, column: 9, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5953, file: !1, line: 2460, column: 9)
!5959 = !DILocation(line: 2460, column: 16, scope: !5958)
!5960 = !DILocation(line: 2460, column: 9, scope: !5953)
!5961 = !DILocation(line: 2461, column: 7, scope: !5958)
!5962 = !DILocation(line: 2462, column: 35, scope: !5953)
!5963 = !DILocation(line: 2462, column: 48, scope: !5953)
!5964 = !DILocation(line: 2462, column: 50, scope: !5953)
!5965 = !DILocation(line: 2462, column: 57, scope: !5953)
!5966 = !DILocation(line: 2462, column: 67, scope: !5953)
!5967 = !DILocation(line: 2462, column: 7, scope: !5953)
!5968 = !DILocation(line: 2462, column: 6, scope: !5953)
!5969 = !DILocation(line: 2463, column: 9, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5953, file: !1, line: 2463, column: 9)
!5971 = !DILocation(line: 2463, column: 11, scope: !5970)
!5972 = !DILocation(line: 2463, column: 9, scope: !5953)
!5973 = !DILocation(line: 2465, column: 15, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5970, file: !1, line: 2464, column: 7)
!5975 = !DILocation(line: 2466, column: 9, scope: !5974)
!5976 = !DILocation(line: 2468, column: 11, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5953, file: !1, line: 2468, column: 5)
!5978 = !DILocation(line: 2468, column: 10, scope: !5977)
!5979 = !DILocation(line: 2468, column: 15, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5977, file: !1, line: 2468, column: 5)
!5981 = !DILocation(line: 2468, column: 29, scope: !5980)
!5982 = !DILocation(line: 2468, column: 36, scope: !5980)
!5983 = !DILocation(line: 2468, column: 17, scope: !5980)
!5984 = !DILocation(line: 2468, column: 5, scope: !5977)
!5985 = !DILocalVariable(name: "blue", scope: !5986, file: !1, line: 2471, type: !769)
!5986 = distinct !DILexicalBlock(scope: !5980, file: !1, line: 2469, column: 5)
!5987 = !DILocation(line: 2471, column: 9, scope: !5986)
!5988 = !DILocalVariable(name: "green", scope: !5986, file: !1, line: 2472, type: !769)
!5989 = !DILocation(line: 2472, column: 9, scope: !5986)
!5990 = !DILocalVariable(name: "intensity", scope: !5986, file: !1, line: 2473, type: !769)
!5991 = !DILocation(line: 2473, column: 9, scope: !5986)
!5992 = !DILocalVariable(name: "red", scope: !5986, file: !1, line: 2474, type: !769)
!5993 = !DILocation(line: 2474, column: 9, scope: !5986)
!5994 = !DILocation(line: 2476, column: 28, scope: !5986)
!5995 = !DILocation(line: 2476, column: 31, scope: !5986)
!5996 = !DILocation(line: 2476, column: 11, scope: !5986)
!5997 = !DILocation(line: 2476, column: 10, scope: !5986)
!5998 = !DILocation(line: 2477, column: 30, scope: !5986)
!5999 = !DILocation(line: 2477, column: 33, scope: !5986)
!6000 = !DILocation(line: 2477, column: 13, scope: !5986)
!6001 = !DILocation(line: 2477, column: 12, scope: !5986)
!6002 = !DILocation(line: 2478, column: 29, scope: !5986)
!6003 = !DILocation(line: 2478, column: 32, scope: !5986)
!6004 = !DILocation(line: 2478, column: 12, scope: !5986)
!6005 = !DILocation(line: 2478, column: 11, scope: !5986)
!6006 = !DILocation(line: 2479, column: 16, scope: !5986)
!6007 = !DILocation(line: 2480, column: 15, scope: !5986)
!6008 = !DILocation(line: 2480, column: 7, scope: !5986)
!6009 = !DILocation(line: 2484, column: 22, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6011, file: !1, line: 2483, column: 9)
!6011 = distinct !DILexicalBlock(scope: !5986, file: !1, line: 2481, column: 7)
!6012 = !DILocation(line: 2484, column: 26, scope: !6010)
!6013 = !DILocation(line: 2484, column: 25, scope: !6010)
!6014 = !DILocation(line: 2484, column: 32, scope: !6010)
!6015 = !DILocation(line: 2484, column: 31, scope: !6010)
!6016 = !DILocation(line: 2484, column: 21, scope: !6010)
!6017 = !DILocation(line: 2484, column: 37, scope: !6010)
!6018 = !DILocation(line: 2484, column: 20, scope: !6010)
!6019 = !DILocation(line: 2485, column: 11, scope: !6010)
!6020 = !DILocation(line: 2489, column: 41, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6011, file: !1, line: 2488, column: 9)
!6022 = !DILocation(line: 2489, column: 45, scope: !6021)
!6023 = !DILocation(line: 2489, column: 31, scope: !6021)
!6024 = !DILocation(line: 2489, column: 52, scope: !6021)
!6025 = !DILocation(line: 2489, column: 21, scope: !6021)
!6026 = !DILocation(line: 2489, column: 20, scope: !6021)
!6027 = !DILocation(line: 2490, column: 11, scope: !6021)
!6028 = !DILocation(line: 2494, column: 42, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6011, file: !1, line: 2493, column: 9)
!6030 = !DILocation(line: 2494, column: 46, scope: !6029)
!6031 = !DILocation(line: 2494, column: 32, scope: !6029)
!6032 = !DILocation(line: 2494, column: 53, scope: !6029)
!6033 = !DILocation(line: 2494, column: 22, scope: !6029)
!6034 = !DILocation(line: 2495, column: 33, scope: !6029)
!6035 = !DILocation(line: 2495, column: 37, scope: !6029)
!6036 = !DILocation(line: 2495, column: 23, scope: !6029)
!6037 = !DILocation(line: 2495, column: 44, scope: !6029)
!6038 = !DILocation(line: 2495, column: 13, scope: !6029)
!6039 = !DILocation(line: 2494, column: 58, scope: !6029)
!6040 = !DILocation(line: 2494, column: 21, scope: !6029)
!6041 = !DILocation(line: 2495, column: 50, scope: !6029)
!6042 = !DILocation(line: 2494, column: 20, scope: !6029)
!6043 = !DILocation(line: 2496, column: 11, scope: !6029)
!6044 = !DILocation(line: 2500, column: 49, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6011, file: !1, line: 2499, column: 9)
!6046 = !DILocation(line: 2500, column: 40, scope: !6045)
!6047 = !DILocation(line: 2500, column: 53, scope: !6045)
!6048 = !DILocation(line: 2500, column: 52, scope: !6045)
!6049 = !DILocation(line: 2500, column: 57, scope: !6045)
!6050 = !DILocation(line: 2500, column: 63, scope: !6045)
!6051 = !DILocation(line: 2500, column: 62, scope: !6045)
!6052 = !DILocation(line: 2500, column: 56, scope: !6045)
!6053 = !DILocation(line: 2501, column: 13, scope: !6045)
!6054 = !DILocation(line: 2501, column: 18, scope: !6045)
!6055 = !DILocation(line: 2501, column: 17, scope: !6045)
!6056 = !DILocation(line: 2500, column: 68, scope: !6045)
!6057 = !DILocation(line: 2501, column: 23, scope: !6045)
!6058 = !DILocation(line: 2500, column: 21, scope: !6045)
!6059 = !DILocation(line: 2500, column: 20, scope: !6045)
!6060 = !DILocation(line: 2502, column: 11, scope: !6045)
!6061 = !DILocation(line: 2506, column: 15, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6063, file: !1, line: 2506, column: 15)
!6063 = distinct !DILexicalBlock(scope: !6011, file: !1, line: 2505, column: 9)
!6064 = !DILocation(line: 2506, column: 22, scope: !6062)
!6065 = !DILocation(line: 2506, column: 33, scope: !6062)
!6066 = !DILocation(line: 2506, column: 15, scope: !6063)
!6067 = !DILocation(line: 2508, column: 36, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6062, file: !1, line: 2507, column: 13)
!6069 = !DILocation(line: 2508, column: 19, scope: !6068)
!6070 = !DILocation(line: 2508, column: 18, scope: !6068)
!6071 = !DILocation(line: 2509, column: 38, scope: !6068)
!6072 = !DILocation(line: 2509, column: 21, scope: !6068)
!6073 = !DILocation(line: 2509, column: 20, scope: !6068)
!6074 = !DILocation(line: 2510, column: 37, scope: !6068)
!6075 = !DILocation(line: 2510, column: 20, scope: !6068)
!6076 = !DILocation(line: 2510, column: 19, scope: !6068)
!6077 = !DILocation(line: 2511, column: 13, scope: !6068)
!6078 = !DILocation(line: 2512, column: 30, scope: !6063)
!6079 = !DILocation(line: 2512, column: 29, scope: !6063)
!6080 = !DILocation(line: 2512, column: 43, scope: !6063)
!6081 = !DILocation(line: 2512, column: 42, scope: !6063)
!6082 = !DILocation(line: 2512, column: 33, scope: !6063)
!6083 = !DILocation(line: 2512, column: 58, scope: !6063)
!6084 = !DILocation(line: 2512, column: 57, scope: !6063)
!6085 = !DILocation(line: 2512, column: 48, scope: !6063)
!6086 = !DILocation(line: 2512, column: 21, scope: !6063)
!6087 = !DILocation(line: 2512, column: 20, scope: !6063)
!6088 = !DILocation(line: 2513, column: 11, scope: !6063)
!6089 = !DILocation(line: 2517, column: 15, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6091, file: !1, line: 2517, column: 15)
!6091 = distinct !DILexicalBlock(scope: !6011, file: !1, line: 2516, column: 9)
!6092 = !DILocation(line: 2517, column: 22, scope: !6090)
!6093 = !DILocation(line: 2517, column: 33, scope: !6090)
!6094 = !DILocation(line: 2517, column: 15, scope: !6091)
!6095 = !DILocation(line: 2519, column: 36, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6090, file: !1, line: 2518, column: 13)
!6097 = !DILocation(line: 2519, column: 19, scope: !6096)
!6098 = !DILocation(line: 2519, column: 18, scope: !6096)
!6099 = !DILocation(line: 2520, column: 38, scope: !6096)
!6100 = !DILocation(line: 2520, column: 21, scope: !6096)
!6101 = !DILocation(line: 2520, column: 20, scope: !6096)
!6102 = !DILocation(line: 2521, column: 37, scope: !6096)
!6103 = !DILocation(line: 2521, column: 20, scope: !6096)
!6104 = !DILocation(line: 2521, column: 19, scope: !6096)
!6105 = !DILocation(line: 2522, column: 13, scope: !6096)
!6106 = !DILocation(line: 2523, column: 30, scope: !6091)
!6107 = !DILocation(line: 2523, column: 29, scope: !6091)
!6108 = !DILocation(line: 2523, column: 43, scope: !6091)
!6109 = !DILocation(line: 2523, column: 42, scope: !6091)
!6110 = !DILocation(line: 2523, column: 33, scope: !6091)
!6111 = !DILocation(line: 2523, column: 58, scope: !6091)
!6112 = !DILocation(line: 2523, column: 57, scope: !6091)
!6113 = !DILocation(line: 2523, column: 48, scope: !6091)
!6114 = !DILocation(line: 2523, column: 21, scope: !6091)
!6115 = !DILocation(line: 2523, column: 20, scope: !6091)
!6116 = !DILocation(line: 2524, column: 11, scope: !6091)
!6117 = !DILocation(line: 2525, column: 9, scope: !6091)
!6118 = !DILocation(line: 2529, column: 15, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6120, file: !1, line: 2529, column: 15)
!6120 = distinct !DILexicalBlock(scope: !6011, file: !1, line: 2528, column: 9)
!6121 = !DILocation(line: 2529, column: 22, scope: !6119)
!6122 = !DILocation(line: 2529, column: 33, scope: !6119)
!6123 = !DILocation(line: 2529, column: 15, scope: !6120)
!6124 = !DILocation(line: 2531, column: 36, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6119, file: !1, line: 2530, column: 13)
!6126 = !DILocation(line: 2531, column: 19, scope: !6125)
!6127 = !DILocation(line: 2531, column: 18, scope: !6125)
!6128 = !DILocation(line: 2532, column: 38, scope: !6125)
!6129 = !DILocation(line: 2532, column: 21, scope: !6125)
!6130 = !DILocation(line: 2532, column: 20, scope: !6125)
!6131 = !DILocation(line: 2533, column: 37, scope: !6125)
!6132 = !DILocation(line: 2533, column: 20, scope: !6125)
!6133 = !DILocation(line: 2533, column: 19, scope: !6125)
!6134 = !DILocation(line: 2534, column: 13, scope: !6125)
!6135 = !DILocation(line: 2535, column: 30, scope: !6120)
!6136 = !DILocation(line: 2535, column: 29, scope: !6120)
!6137 = !DILocation(line: 2535, column: 43, scope: !6120)
!6138 = !DILocation(line: 2535, column: 42, scope: !6120)
!6139 = !DILocation(line: 2535, column: 33, scope: !6120)
!6140 = !DILocation(line: 2535, column: 58, scope: !6120)
!6141 = !DILocation(line: 2535, column: 57, scope: !6120)
!6142 = !DILocation(line: 2535, column: 48, scope: !6120)
!6143 = !DILocation(line: 2535, column: 21, scope: !6120)
!6144 = !DILocation(line: 2535, column: 20, scope: !6120)
!6145 = !DILocation(line: 2536, column: 11, scope: !6120)
!6146 = !DILocation(line: 2540, column: 15, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6148, file: !1, line: 2540, column: 15)
!6148 = distinct !DILexicalBlock(scope: !6011, file: !1, line: 2539, column: 9)
!6149 = !DILocation(line: 2540, column: 22, scope: !6147)
!6150 = !DILocation(line: 2540, column: 33, scope: !6147)
!6151 = !DILocation(line: 2540, column: 15, scope: !6148)
!6152 = !DILocation(line: 2542, column: 36, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6147, file: !1, line: 2541, column: 13)
!6154 = !DILocation(line: 2542, column: 19, scope: !6153)
!6155 = !DILocation(line: 2542, column: 18, scope: !6153)
!6156 = !DILocation(line: 2543, column: 38, scope: !6153)
!6157 = !DILocation(line: 2543, column: 21, scope: !6153)
!6158 = !DILocation(line: 2543, column: 20, scope: !6153)
!6159 = !DILocation(line: 2544, column: 37, scope: !6153)
!6160 = !DILocation(line: 2544, column: 20, scope: !6153)
!6161 = !DILocation(line: 2544, column: 19, scope: !6153)
!6162 = !DILocation(line: 2545, column: 13, scope: !6153)
!6163 = !DILocation(line: 2546, column: 30, scope: !6148)
!6164 = !DILocation(line: 2546, column: 29, scope: !6148)
!6165 = !DILocation(line: 2546, column: 43, scope: !6148)
!6166 = !DILocation(line: 2546, column: 42, scope: !6148)
!6167 = !DILocation(line: 2546, column: 33, scope: !6148)
!6168 = !DILocation(line: 2546, column: 58, scope: !6148)
!6169 = !DILocation(line: 2546, column: 57, scope: !6148)
!6170 = !DILocation(line: 2546, column: 48, scope: !6148)
!6171 = !DILocation(line: 2546, column: 21, scope: !6148)
!6172 = !DILocation(line: 2546, column: 20, scope: !6148)
!6173 = !DILocation(line: 2547, column: 11, scope: !6148)
!6174 = !DILocation(line: 2551, column: 53, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6011, file: !1, line: 2550, column: 9)
!6176 = !DILocation(line: 2551, column: 44, scope: !6175)
!6177 = !DILocation(line: 2551, column: 57, scope: !6175)
!6178 = !DILocation(line: 2551, column: 56, scope: !6175)
!6179 = !DILocation(line: 2551, column: 61, scope: !6175)
!6180 = !DILocation(line: 2551, column: 67, scope: !6175)
!6181 = !DILocation(line: 2551, column: 66, scope: !6175)
!6182 = !DILocation(line: 2551, column: 60, scope: !6175)
!6183 = !DILocation(line: 2552, column: 13, scope: !6175)
!6184 = !DILocation(line: 2552, column: 18, scope: !6175)
!6185 = !DILocation(line: 2552, column: 17, scope: !6175)
!6186 = !DILocation(line: 2551, column: 72, scope: !6175)
!6187 = !DILocation(line: 2551, column: 39, scope: !6175)
!6188 = !DILocation(line: 2552, column: 24, scope: !6175)
!6189 = !DILocation(line: 2552, column: 23, scope: !6175)
!6190 = !DILocation(line: 2551, column: 21, scope: !6175)
!6191 = !DILocation(line: 2551, column: 20, scope: !6175)
!6192 = !DILocation(line: 2553, column: 11, scope: !6175)
!6193 = !DILocation(line: 2556, column: 7, scope: !5986)
!6194 = !DILocation(line: 2557, column: 8, scope: !5986)
!6195 = !DILocation(line: 2558, column: 5, scope: !5986)
!6196 = !DILocation(line: 2468, column: 46, scope: !5980)
!6197 = !DILocation(line: 2468, column: 5, scope: !5980)
!6198 = distinct !{!6198, !5984, !6199}
!6199 = !DILocation(line: 2558, column: 5, scope: !5977)
!6200 = !DILocation(line: 2559, column: 38, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !5953, file: !1, line: 2559, column: 9)
!6202 = !DILocation(line: 2559, column: 49, scope: !6201)
!6203 = !DILocation(line: 2559, column: 9, scope: !6201)
!6204 = !DILocation(line: 2559, column: 60, scope: !6201)
!6205 = !DILocation(line: 2559, column: 9, scope: !5953)
!6206 = !DILocation(line: 2560, column: 13, scope: !6201)
!6207 = !DILocation(line: 2560, column: 7, scope: !6201)
!6208 = !DILocation(line: 2561, column: 9, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !5953, file: !1, line: 2561, column: 9)
!6210 = !DILocation(line: 2561, column: 16, scope: !6209)
!6211 = !DILocation(line: 2561, column: 33, scope: !6209)
!6212 = !DILocation(line: 2561, column: 9, scope: !5953)
!6213 = !DILocalVariable(name: "proceed", scope: !6214, file: !1, line: 2564, type: !581)
!6214 = distinct !DILexicalBlock(scope: !6209, file: !1, line: 2562, column: 7)
!6215 = !DILocation(line: 2564, column: 11, scope: !6214)
!6216 = !DILocation(line: 2569, column: 34, scope: !6214)
!6217 = !DILocation(line: 2569, column: 66, scope: !6214)
!6218 = !DILocation(line: 2570, column: 11, scope: !6214)
!6219 = !DILocation(line: 2570, column: 18, scope: !6214)
!6220 = !DILocation(line: 2569, column: 17, scope: !6214)
!6221 = !DILocation(line: 2569, column: 16, scope: !6214)
!6222 = !DILocation(line: 2571, column: 13, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6214, file: !1, line: 2571, column: 13)
!6224 = !DILocation(line: 2571, column: 21, scope: !6223)
!6225 = !DILocation(line: 2571, column: 13, scope: !6214)
!6226 = !DILocation(line: 2572, column: 17, scope: !6223)
!6227 = !DILocation(line: 2572, column: 11, scope: !6223)
!6228 = !DILocation(line: 2573, column: 7, scope: !6214)
!6229 = !DILocation(line: 2574, column: 3, scope: !5953)
!6230 = !DILocation(line: 2452, column: 41, scope: !5947)
!6231 = !DILocation(line: 2452, column: 3, scope: !5947)
!6232 = distinct !{!6232, !5951, !6233}
!6233 = !DILocation(line: 2574, column: 3, scope: !5944)
!6234 = !DILocation(line: 2575, column: 31, scope: !5876)
!6235 = !DILocation(line: 2575, column: 14, scope: !5876)
!6236 = !DILocation(line: 2575, column: 13, scope: !5876)
!6237 = !DILocation(line: 2576, column: 20, scope: !5876)
!6238 = !DILocation(line: 2576, column: 3, scope: !5876)
!6239 = !DILocation(line: 2576, column: 10, scope: !5876)
!6240 = !DILocation(line: 2576, column: 19, scope: !5876)
!6241 = !DILocation(line: 2577, column: 3, scope: !5876)
!6242 = !DILocation(line: 2577, column: 10, scope: !5876)
!6243 = !DILocation(line: 2577, column: 14, scope: !5876)
!6244 = !DILocation(line: 2578, column: 29, scope: !5876)
!6245 = !DILocation(line: 2578, column: 10, scope: !5876)
!6246 = !DILocation(line: 2578, column: 3, scope: !5876)
!6247 = !DILocation(line: 2579, column: 1, scope: !5876)
!6248 = distinct !DISubprogram(name: "MagickMax", scope: !1, file: !1, line: 2387, type: !6249, scopeLine: 2389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!6249 = !DISubroutineType(types: !6250)
!6250 = !{!769, !2090, !2090}
!6251 = !DILocalVariable(name: "x", arg: 1, scope: !6248, file: !1, line: 2387, type: !2090)
!6252 = !DILocation(line: 2387, column: 61, scope: !6248)
!6253 = !DILocalVariable(name: "y", arg: 2, scope: !6248, file: !1, line: 2388, type: !2090)
!6254 = !DILocation(line: 2388, column: 24, scope: !6248)
!6255 = !DILocation(line: 2390, column: 7, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6248, file: !1, line: 2390, column: 7)
!6257 = !DILocation(line: 2390, column: 11, scope: !6256)
!6258 = !DILocation(line: 2390, column: 9, scope: !6256)
!6259 = !DILocation(line: 2390, column: 7, scope: !6248)
!6260 = !DILocation(line: 2391, column: 12, scope: !6256)
!6261 = !DILocation(line: 2391, column: 5, scope: !6256)
!6262 = !DILocation(line: 2392, column: 10, scope: !6248)
!6263 = !DILocation(line: 2392, column: 3, scope: !6248)
!6264 = !DILocation(line: 2393, column: 1, scope: !6248)
!6265 = distinct !DISubprogram(name: "MagickMin", scope: !1, file: !1, line: 2395, type: !6249, scopeLine: 2397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!6266 = !DILocalVariable(name: "x", arg: 1, scope: !6265, file: !1, line: 2395, type: !2090)
!6267 = !DILocation(line: 2395, column: 61, scope: !6265)
!6268 = !DILocalVariable(name: "y", arg: 2, scope: !6265, file: !1, line: 2396, type: !2090)
!6269 = !DILocation(line: 2396, column: 24, scope: !6265)
!6270 = !DILocation(line: 2398, column: 7, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6265, file: !1, line: 2398, column: 7)
!6272 = !DILocation(line: 2398, column: 11, scope: !6271)
!6273 = !DILocation(line: 2398, column: 9, scope: !6271)
!6274 = !DILocation(line: 2398, column: 7, scope: !6265)
!6275 = !DILocation(line: 2399, column: 12, scope: !6271)
!6276 = !DILocation(line: 2399, column: 5, scope: !6271)
!6277 = !DILocation(line: 2400, column: 10, scope: !6265)
!6278 = !DILocation(line: 2400, column: 3, scope: !6265)
!6279 = !DILocation(line: 2401, column: 1, scope: !6265)
!6280 = distinct !DISubprogram(name: "HaldClutImage", scope: !1, file: !1, line: 2614, type: !2179, scopeLine: 2616, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!6281 = !DILocalVariable(name: "image", arg: 1, scope: !6280, file: !1, line: 2614, type: !565)
!6282 = !DILocation(line: 2614, column: 53, scope: !6280)
!6283 = !DILocalVariable(name: "hald_image", arg: 2, scope: !6280, file: !1, line: 2615, type: !2146)
!6284 = !DILocation(line: 2615, column: 16, scope: !6280)
!6285 = !DILocation(line: 2617, column: 31, scope: !6280)
!6286 = !DILocation(line: 2617, column: 53, scope: !6280)
!6287 = !DILocation(line: 2617, column: 10, scope: !6280)
!6288 = !DILocation(line: 2617, column: 3, scope: !6280)
!6289 = distinct !DISubprogram(name: "HaldClutImageChannel", scope: !1, file: !1, line: 2620, type: !2190, scopeLine: 2622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!6290 = !DILocalVariable(name: "image", arg: 1, scope: !6289, file: !1, line: 2620, type: !565)
!6291 = !DILocation(line: 2620, column: 60, scope: !6289)
!6292 = !DILocalVariable(name: "channel", arg: 2, scope: !6289, file: !1, line: 2621, type: !819)
!6293 = !DILocation(line: 2621, column: 21, scope: !6289)
!6294 = !DILocalVariable(name: "hald_image", arg: 3, scope: !6289, file: !1, line: 2621, type: !2146)
!6295 = !DILocation(line: 2621, column: 42, scope: !6289)
!6296 = !DILocalVariable(name: "hald_view", scope: !6289, file: !1, line: 2634, type: !992)
!6297 = !DILocation(line: 2634, column: 6, scope: !6289)
!6298 = !DILocalVariable(name: "image_view", scope: !6289, file: !1, line: 2635, type: !992)
!6299 = !DILocation(line: 2635, column: 6, scope: !6289)
!6300 = !DILocalVariable(name: "width", scope: !6289, file: !1, line: 2638, type: !543)
!6301 = !DILocation(line: 2638, column: 5, scope: !6289)
!6302 = !DILocalVariable(name: "exception", scope: !6289, file: !1, line: 2641, type: !998)
!6303 = !DILocation(line: 2641, column: 6, scope: !6289)
!6304 = !DILocalVariable(name: "status", scope: !6289, file: !1, line: 2644, type: !581)
!6305 = !DILocation(line: 2644, column: 5, scope: !6289)
!6306 = !DILocalVariable(name: "progress", scope: !6289, file: !1, line: 2647, type: !685)
!6307 = !DILocation(line: 2647, column: 5, scope: !6289)
!6308 = !DILocalVariable(name: "zero", scope: !6289, file: !1, line: 2650, type: !772)
!6309 = !DILocation(line: 2650, column: 5, scope: !6289)
!6310 = !DILocalVariable(name: "cube_size", scope: !6289, file: !1, line: 2653, type: !576)
!6311 = !DILocation(line: 2653, column: 5, scope: !6289)
!6312 = !DILocalVariable(name: "length", scope: !6289, file: !1, line: 2654, type: !576)
!6313 = !DILocation(line: 2654, column: 5, scope: !6289)
!6314 = !DILocalVariable(name: "level", scope: !6289, file: !1, line: 2655, type: !576)
!6315 = !DILocation(line: 2655, column: 5, scope: !6289)
!6316 = !DILocalVariable(name: "y", scope: !6289, file: !1, line: 2658, type: !615)
!6317 = !DILocation(line: 2658, column: 5, scope: !6289)
!6318 = !DILocation(line: 2662, column: 7, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6289, file: !1, line: 2662, column: 7)
!6320 = !DILocation(line: 2662, column: 14, scope: !6319)
!6321 = !DILocation(line: 2662, column: 20, scope: !6319)
!6322 = !DILocation(line: 2662, column: 7, scope: !6289)
!6323 = !DILocation(line: 2663, column: 61, scope: !6319)
!6324 = !DILocation(line: 2663, column: 68, scope: !6319)
!6325 = !DILocation(line: 2663, column: 12, scope: !6319)
!6326 = !DILocation(line: 2663, column: 5, scope: !6319)
!6327 = !DILocation(line: 2666, column: 28, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6289, file: !1, line: 2666, column: 7)
!6329 = !DILocation(line: 2666, column: 7, scope: !6328)
!6330 = !DILocation(line: 2666, column: 47, scope: !6328)
!6331 = !DILocation(line: 2666, column: 7, scope: !6289)
!6332 = !DILocation(line: 2667, column: 5, scope: !6328)
!6333 = !DILocation(line: 2668, column: 24, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6289, file: !1, line: 2668, column: 7)
!6335 = !DILocation(line: 2668, column: 31, scope: !6334)
!6336 = !DILocation(line: 2668, column: 7, scope: !6334)
!6337 = !DILocation(line: 2668, column: 43, scope: !6334)
!6338 = !DILocation(line: 2668, column: 7, scope: !6289)
!6339 = !DILocation(line: 2669, column: 31, scope: !6334)
!6340 = !DILocation(line: 2669, column: 12, scope: !6334)
!6341 = !DILocation(line: 2669, column: 5, scope: !6334)
!6342 = !DILocation(line: 2670, column: 7, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6289, file: !1, line: 2670, column: 7)
!6344 = !DILocation(line: 2670, column: 14, scope: !6343)
!6345 = !DILocation(line: 2670, column: 20, scope: !6343)
!6346 = !DILocation(line: 2670, column: 7, scope: !6289)
!6347 = !DILocation(line: 2671, column: 33, scope: !6343)
!6348 = !DILocation(line: 2671, column: 12, scope: !6343)
!6349 = !DILocation(line: 2671, column: 5, scope: !6343)
!6350 = !DILocation(line: 2675, column: 9, scope: !6289)
!6351 = !DILocation(line: 2676, column: 11, scope: !6289)
!6352 = !DILocation(line: 2677, column: 46, scope: !6289)
!6353 = !DILocation(line: 2677, column: 58, scope: !6289)
!6354 = !DILocation(line: 2677, column: 29, scope: !6289)
!6355 = !DILocation(line: 2678, column: 22, scope: !6289)
!6356 = !DILocation(line: 2678, column: 34, scope: !6289)
!6357 = !DILocation(line: 2678, column: 5, scope: !6289)
!6358 = !DILocation(line: 2677, column: 19, scope: !6289)
!6359 = !DILocation(line: 2677, column: 10, scope: !6289)
!6360 = !DILocation(line: 2677, column: 9, scope: !6289)
!6361 = !DILocation(line: 2679, column: 13, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6289, file: !1, line: 2679, column: 3)
!6363 = !DILocation(line: 2679, column: 8, scope: !6362)
!6364 = !DILocation(line: 2679, column: 18, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6362, file: !1, line: 2679, column: 3)
!6366 = !DILocation(line: 2679, column: 24, scope: !6365)
!6367 = !DILocation(line: 2679, column: 23, scope: !6365)
!6368 = !DILocation(line: 2679, column: 30, scope: !6365)
!6369 = !DILocation(line: 2679, column: 29, scope: !6365)
!6370 = !DILocation(line: 2679, column: 39, scope: !6365)
!6371 = !DILocation(line: 2679, column: 37, scope: !6365)
!6372 = !DILocation(line: 2679, column: 3, scope: !6362)
!6373 = !DILocation(line: 2679, column: 52, scope: !6365)
!6374 = !DILocation(line: 2679, column: 3, scope: !6365)
!6375 = distinct !{!6375, !6372, !6376}
!6376 = !DILocation(line: 2679, column: 56, scope: !6362)
!6377 = !DILocation(line: 2680, column: 10, scope: !6289)
!6378 = !DILocation(line: 2680, column: 8, scope: !6289)
!6379 = !DILocation(line: 2681, column: 13, scope: !6289)
!6380 = !DILocation(line: 2681, column: 19, scope: !6289)
!6381 = !DILocation(line: 2681, column: 18, scope: !6289)
!6382 = !DILocation(line: 2681, column: 12, scope: !6289)
!6383 = !DILocation(line: 2682, column: 18, scope: !6289)
!6384 = !DILocation(line: 2682, column: 30, scope: !6289)
!6385 = !DILocation(line: 2682, column: 9, scope: !6289)
!6386 = !DILocation(line: 2682, column: 8, scope: !6289)
!6387 = !DILocation(line: 2683, column: 24, scope: !6289)
!6388 = !DILocation(line: 2683, column: 3, scope: !6289)
!6389 = !DILocation(line: 2684, column: 15, scope: !6289)
!6390 = !DILocation(line: 2684, column: 22, scope: !6289)
!6391 = !DILocation(line: 2684, column: 12, scope: !6289)
!6392 = !DILocation(line: 2685, column: 40, scope: !6289)
!6393 = !DILocation(line: 2685, column: 46, scope: !6289)
!6394 = !DILocation(line: 2685, column: 14, scope: !6289)
!6395 = !DILocation(line: 2685, column: 13, scope: !6289)
!6396 = !DILocation(line: 2686, column: 39, scope: !6289)
!6397 = !DILocation(line: 2686, column: 50, scope: !6289)
!6398 = !DILocation(line: 2686, column: 13, scope: !6289)
!6399 = !DILocation(line: 2686, column: 12, scope: !6289)
!6400 = !DILocation(line: 2691, column: 9, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6289, file: !1, line: 2691, column: 3)
!6402 = !DILocation(line: 2691, column: 8, scope: !6401)
!6403 = !DILocation(line: 2691, column: 13, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6401, file: !1, line: 2691, column: 3)
!6405 = !DILocation(line: 2691, column: 27, scope: !6404)
!6406 = !DILocation(line: 2691, column: 34, scope: !6404)
!6407 = !DILocation(line: 2691, column: 15, scope: !6404)
!6408 = !DILocation(line: 2691, column: 3, scope: !6401)
!6409 = !DILocalVariable(name: "offset", scope: !6410, file: !1, line: 2694, type: !543)
!6410 = distinct !DILexicalBlock(scope: !6404, file: !1, line: 2692, column: 3)
!6411 = !DILocation(line: 2694, column: 7, scope: !6410)
!6412 = !DILocalVariable(name: "point", scope: !6410, file: !1, line: 2697, type: !6413)
!6413 = !DIDerivedType(tag: DW_TAG_typedef, name: "HaldInfo", scope: !6289, file: !1, line: 2631, baseType: !6414)
!6414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_HaldInfo", scope: !6289, file: !1, line: 2625, size: 96, elements: !6415)
!6415 = !{!6416, !6417, !6418}
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !6414, file: !1, line: 2628, baseType: !769, size: 32)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !6414, file: !1, line: 2629, baseType: !769, size: 32, offset: 32)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !6414, file: !1, line: 2630, baseType: !769, size: 32, offset: 64)
!6419 = !DILocation(line: 2697, column: 7, scope: !6410)
!6420 = !DILocalVariable(name: "pixel", scope: !6410, file: !1, line: 2700, type: !772)
!6421 = !DILocation(line: 2700, column: 7, scope: !6410)
!6422 = !DILocalVariable(name: "pixel1", scope: !6410, file: !1, line: 2701, type: !772)
!6423 = !DILocation(line: 2701, column: 7, scope: !6410)
!6424 = !DILocalVariable(name: "pixel2", scope: !6410, file: !1, line: 2702, type: !772)
!6425 = !DILocation(line: 2702, column: 7, scope: !6410)
!6426 = !DILocalVariable(name: "pixel3", scope: !6410, file: !1, line: 2703, type: !772)
!6427 = !DILocation(line: 2703, column: 7, scope: !6410)
!6428 = !DILocalVariable(name: "pixel4", scope: !6410, file: !1, line: 2704, type: !772)
!6429 = !DILocation(line: 2704, column: 7, scope: !6410)
!6430 = !DILocalVariable(name: "indexes", scope: !6410, file: !1, line: 2707, type: !1141)
!6431 = !DILocation(line: 2707, column: 17, scope: !6410)
!6432 = !DILocalVariable(name: "q", scope: !6410, file: !1, line: 2710, type: !1144)
!6433 = !DILocation(line: 2710, column: 17, scope: !6410)
!6434 = !DILocalVariable(name: "x", scope: !6410, file: !1, line: 2713, type: !615)
!6435 = !DILocation(line: 2713, column: 7, scope: !6410)
!6436 = !DILocation(line: 2715, column: 9, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6410, file: !1, line: 2715, column: 9)
!6438 = !DILocation(line: 2715, column: 16, scope: !6437)
!6439 = !DILocation(line: 2715, column: 9, scope: !6410)
!6440 = !DILocation(line: 2716, column: 7, scope: !6437)
!6441 = !DILocation(line: 2717, column: 35, scope: !6410)
!6442 = !DILocation(line: 2717, column: 48, scope: !6410)
!6443 = !DILocation(line: 2717, column: 50, scope: !6410)
!6444 = !DILocation(line: 2717, column: 57, scope: !6410)
!6445 = !DILocation(line: 2717, column: 67, scope: !6410)
!6446 = !DILocation(line: 2717, column: 7, scope: !6410)
!6447 = !DILocation(line: 2717, column: 6, scope: !6410)
!6448 = !DILocation(line: 2718, column: 9, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6410, file: !1, line: 2718, column: 9)
!6450 = !DILocation(line: 2718, column: 11, scope: !6449)
!6451 = !DILocation(line: 2718, column: 9, scope: !6410)
!6452 = !DILocation(line: 2720, column: 15, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6449, file: !1, line: 2719, column: 7)
!6454 = !DILocation(line: 2721, column: 9, scope: !6453)
!6455 = !DILocation(line: 2723, column: 45, scope: !6410)
!6456 = !DILocation(line: 2723, column: 13, scope: !6410)
!6457 = !DILocation(line: 2723, column: 12, scope: !6410)
!6458 = !DILocation(line: 2724, column: 11, scope: !6410)
!6459 = !DILocation(line: 2725, column: 12, scope: !6410)
!6460 = !DILocation(line: 2726, column: 12, scope: !6410)
!6461 = !DILocation(line: 2727, column: 12, scope: !6410)
!6462 = !DILocation(line: 2728, column: 12, scope: !6410)
!6463 = !DILocation(line: 2729, column: 11, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6410, file: !1, line: 2729, column: 5)
!6465 = !DILocation(line: 2729, column: 10, scope: !6464)
!6466 = !DILocation(line: 2729, column: 15, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6464, file: !1, line: 2729, column: 5)
!6468 = !DILocation(line: 2729, column: 29, scope: !6467)
!6469 = !DILocation(line: 2729, column: 36, scope: !6467)
!6470 = !DILocation(line: 2729, column: 17, scope: !6467)
!6471 = !DILocation(line: 2729, column: 5, scope: !6464)
!6472 = !DILocation(line: 2731, column: 29, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6467, file: !1, line: 2730, column: 5)
!6474 = !DILocation(line: 2731, column: 34, scope: !6473)
!6475 = !DILocation(line: 2731, column: 27, scope: !6473)
!6476 = !DILocation(line: 2731, column: 40, scope: !6473)
!6477 = !DILocation(line: 2731, column: 39, scope: !6473)
!6478 = !DILocation(line: 2731, column: 15, scope: !6473)
!6479 = !DILocation(line: 2731, column: 13, scope: !6473)
!6480 = !DILocation(line: 2731, column: 14, scope: !6473)
!6481 = !DILocation(line: 2732, column: 29, scope: !6473)
!6482 = !DILocation(line: 2732, column: 34, scope: !6473)
!6483 = !DILocation(line: 2732, column: 27, scope: !6473)
!6484 = !DILocation(line: 2732, column: 40, scope: !6473)
!6485 = !DILocation(line: 2732, column: 39, scope: !6473)
!6486 = !DILocation(line: 2732, column: 15, scope: !6473)
!6487 = !DILocation(line: 2732, column: 13, scope: !6473)
!6488 = !DILocation(line: 2732, column: 14, scope: !6473)
!6489 = !DILocation(line: 2733, column: 29, scope: !6473)
!6490 = !DILocation(line: 2733, column: 34, scope: !6473)
!6491 = !DILocation(line: 2733, column: 27, scope: !6473)
!6492 = !DILocation(line: 2733, column: 40, scope: !6473)
!6493 = !DILocation(line: 2733, column: 39, scope: !6473)
!6494 = !DILocation(line: 2733, column: 15, scope: !6473)
!6495 = !DILocation(line: 2733, column: 13, scope: !6473)
!6496 = !DILocation(line: 2733, column: 14, scope: !6473)
!6497 = !DILocation(line: 2734, column: 30, scope: !6473)
!6498 = !DILocation(line: 2734, column: 24, scope: !6473)
!6499 = !DILocation(line: 2734, column: 32, scope: !6473)
!6500 = !DILocation(line: 2734, column: 50, scope: !6473)
!6501 = !DILocation(line: 2734, column: 44, scope: !6473)
!6502 = !DILocation(line: 2734, column: 38, scope: !6473)
!6503 = !DILocation(line: 2734, column: 37, scope: !6473)
!6504 = !DILocation(line: 2734, column: 31, scope: !6473)
!6505 = !DILocation(line: 2734, column: 53, scope: !6473)
!6506 = !DILocation(line: 2734, column: 75, scope: !6473)
!6507 = !DILocation(line: 2734, column: 69, scope: !6473)
!6508 = !DILocation(line: 2734, column: 63, scope: !6473)
!6509 = !DILocation(line: 2734, column: 62, scope: !6473)
!6510 = !DILocation(line: 2734, column: 52, scope: !6473)
!6511 = !DILocation(line: 2734, column: 13, scope: !6473)
!6512 = !DILocation(line: 2735, column: 28, scope: !6473)
!6513 = !DILocation(line: 2735, column: 22, scope: !6473)
!6514 = !DILocation(line: 2735, column: 16, scope: !6473)
!6515 = !DILocation(line: 2735, column: 13, scope: !6473)
!6516 = !DILocation(line: 2735, column: 14, scope: !6473)
!6517 = !DILocation(line: 2736, column: 28, scope: !6473)
!6518 = !DILocation(line: 2736, column: 22, scope: !6473)
!6519 = !DILocation(line: 2736, column: 16, scope: !6473)
!6520 = !DILocation(line: 2736, column: 13, scope: !6473)
!6521 = !DILocation(line: 2736, column: 14, scope: !6473)
!6522 = !DILocation(line: 2737, column: 28, scope: !6473)
!6523 = !DILocation(line: 2737, column: 22, scope: !6473)
!6524 = !DILocation(line: 2737, column: 16, scope: !6473)
!6525 = !DILocation(line: 2737, column: 13, scope: !6473)
!6526 = !DILocation(line: 2737, column: 14, scope: !6473)
!6527 = !DILocation(line: 2738, column: 43, scope: !6473)
!6528 = !DILocation(line: 2738, column: 49, scope: !6473)
!6529 = !DILocation(line: 2739, column: 40, scope: !6473)
!6530 = !DILocation(line: 2739, column: 47, scope: !6473)
!6531 = !DILocation(line: 2739, column: 35, scope: !6473)
!6532 = !DILocation(line: 2739, column: 60, scope: !6473)
!6533 = !DILocation(line: 2739, column: 67, scope: !6473)
!6534 = !DILocation(line: 2739, column: 66, scope: !6473)
!6535 = !DILocation(line: 2739, column: 54, scope: !6473)
!6536 = !DILocation(line: 2740, column: 17, scope: !6473)
!6537 = !DILocation(line: 2738, column: 14, scope: !6473)
!6538 = !DILocation(line: 2741, column: 43, scope: !6473)
!6539 = !DILocation(line: 2741, column: 49, scope: !6473)
!6540 = !DILocation(line: 2742, column: 40, scope: !6473)
!6541 = !DILocation(line: 2742, column: 47, scope: !6473)
!6542 = !DILocation(line: 2742, column: 46, scope: !6473)
!6543 = !DILocation(line: 2742, column: 53, scope: !6473)
!6544 = !DILocation(line: 2742, column: 35, scope: !6473)
!6545 = !DILocation(line: 2742, column: 67, scope: !6473)
!6546 = !DILocation(line: 2742, column: 74, scope: !6473)
!6547 = !DILocation(line: 2742, column: 73, scope: !6473)
!6548 = !DILocation(line: 2743, column: 9, scope: !6473)
!6549 = !DILocation(line: 2742, column: 80, scope: !6473)
!6550 = !DILocation(line: 2742, column: 60, scope: !6473)
!6551 = !DILocation(line: 2743, column: 24, scope: !6473)
!6552 = !DILocation(line: 2741, column: 14, scope: !6473)
!6553 = !DILocation(line: 2744, column: 52, scope: !6473)
!6554 = !DILocation(line: 2745, column: 16, scope: !6473)
!6555 = !DILocation(line: 2745, column: 30, scope: !6473)
!6556 = !DILocation(line: 2744, column: 7, scope: !6473)
!6557 = !DILocation(line: 2746, column: 15, scope: !6473)
!6558 = !DILocation(line: 2746, column: 13, scope: !6473)
!6559 = !DILocation(line: 2747, column: 43, scope: !6473)
!6560 = !DILocation(line: 2747, column: 49, scope: !6473)
!6561 = !DILocation(line: 2748, column: 40, scope: !6473)
!6562 = !DILocation(line: 2748, column: 47, scope: !6473)
!6563 = !DILocation(line: 2748, column: 35, scope: !6473)
!6564 = !DILocation(line: 2748, column: 60, scope: !6473)
!6565 = !DILocation(line: 2748, column: 67, scope: !6473)
!6566 = !DILocation(line: 2748, column: 66, scope: !6473)
!6567 = !DILocation(line: 2748, column: 54, scope: !6473)
!6568 = !DILocation(line: 2749, column: 17, scope: !6473)
!6569 = !DILocation(line: 2747, column: 14, scope: !6473)
!6570 = !DILocation(line: 2750, column: 43, scope: !6473)
!6571 = !DILocation(line: 2750, column: 49, scope: !6473)
!6572 = !DILocation(line: 2751, column: 40, scope: !6473)
!6573 = !DILocation(line: 2751, column: 47, scope: !6473)
!6574 = !DILocation(line: 2751, column: 46, scope: !6473)
!6575 = !DILocation(line: 2751, column: 53, scope: !6473)
!6576 = !DILocation(line: 2751, column: 35, scope: !6473)
!6577 = !DILocation(line: 2751, column: 67, scope: !6473)
!6578 = !DILocation(line: 2751, column: 74, scope: !6473)
!6579 = !DILocation(line: 2751, column: 73, scope: !6473)
!6580 = !DILocation(line: 2752, column: 9, scope: !6473)
!6581 = !DILocation(line: 2751, column: 80, scope: !6473)
!6582 = !DILocation(line: 2751, column: 60, scope: !6473)
!6583 = !DILocation(line: 2752, column: 24, scope: !6473)
!6584 = !DILocation(line: 2750, column: 14, scope: !6473)
!6585 = !DILocation(line: 2753, column: 52, scope: !6473)
!6586 = !DILocation(line: 2754, column: 16, scope: !6473)
!6587 = !DILocation(line: 2754, column: 30, scope: !6473)
!6588 = !DILocation(line: 2753, column: 7, scope: !6473)
!6589 = !DILocation(line: 2755, column: 52, scope: !6473)
!6590 = !DILocation(line: 2756, column: 16, scope: !6473)
!6591 = !DILocation(line: 2756, column: 30, scope: !6473)
!6592 = !DILocation(line: 2755, column: 7, scope: !6473)
!6593 = !DILocation(line: 2757, column: 12, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6473, file: !1, line: 2757, column: 11)
!6595 = !DILocation(line: 2757, column: 20, scope: !6594)
!6596 = !DILocation(line: 2757, column: 34, scope: !6594)
!6597 = !DILocation(line: 2757, column: 11, scope: !6473)
!6598 = !DILocation(line: 2758, column: 9, scope: !6594)
!6599 = !DILocation(line: 2759, column: 12, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6473, file: !1, line: 2759, column: 11)
!6601 = !DILocation(line: 2759, column: 20, scope: !6600)
!6602 = !DILocation(line: 2759, column: 36, scope: !6600)
!6603 = !DILocation(line: 2759, column: 11, scope: !6473)
!6604 = !DILocation(line: 2760, column: 9, scope: !6600)
!6605 = !DILocation(line: 2761, column: 12, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6473, file: !1, line: 2761, column: 11)
!6607 = !DILocation(line: 2761, column: 20, scope: !6606)
!6608 = !DILocation(line: 2761, column: 35, scope: !6606)
!6609 = !DILocation(line: 2761, column: 11, scope: !6473)
!6610 = !DILocation(line: 2762, column: 9, scope: !6606)
!6611 = !DILocation(line: 2763, column: 13, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6473, file: !1, line: 2763, column: 11)
!6613 = !DILocation(line: 2763, column: 21, scope: !6612)
!6614 = !DILocation(line: 2763, column: 39, scope: !6612)
!6615 = !DILocation(line: 2763, column: 45, scope: !6612)
!6616 = !DILocation(line: 2763, column: 49, scope: !6612)
!6617 = !DILocation(line: 2763, column: 56, scope: !6612)
!6618 = !DILocation(line: 2763, column: 62, scope: !6612)
!6619 = !DILocation(line: 2763, column: 11, scope: !6473)
!6620 = !DILocation(line: 2764, column: 9, scope: !6612)
!6621 = !DILocation(line: 2765, column: 13, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6473, file: !1, line: 2765, column: 11)
!6623 = !DILocation(line: 2765, column: 21, scope: !6622)
!6624 = !DILocation(line: 2765, column: 37, scope: !6622)
!6625 = !DILocation(line: 2765, column: 43, scope: !6622)
!6626 = !DILocation(line: 2766, column: 12, scope: !6622)
!6627 = !DILocation(line: 2766, column: 19, scope: !6622)
!6628 = !DILocation(line: 2766, column: 30, scope: !6622)
!6629 = !DILocation(line: 2765, column: 11, scope: !6473)
!6630 = !DILocation(line: 2767, column: 9, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6632, file: !1, line: 2767, column: 9)
!6632 = distinct !DILexicalBlock(scope: !6622, file: !1, line: 2767, column: 9)
!6633 = !DILocation(line: 2767, column: 9, scope: !6632)
!6634 = !DILocation(line: 2768, column: 8, scope: !6473)
!6635 = !DILocation(line: 2769, column: 5, scope: !6473)
!6636 = !DILocation(line: 2729, column: 46, scope: !6467)
!6637 = !DILocation(line: 2729, column: 5, scope: !6467)
!6638 = distinct !{!6638, !6471, !6639}
!6639 = !DILocation(line: 2769, column: 5, scope: !6464)
!6640 = !DILocation(line: 2770, column: 38, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6410, file: !1, line: 2770, column: 9)
!6642 = !DILocation(line: 2770, column: 49, scope: !6641)
!6643 = !DILocation(line: 2770, column: 9, scope: !6641)
!6644 = !DILocation(line: 2770, column: 60, scope: !6641)
!6645 = !DILocation(line: 2770, column: 9, scope: !6410)
!6646 = !DILocation(line: 2771, column: 13, scope: !6641)
!6647 = !DILocation(line: 2771, column: 7, scope: !6641)
!6648 = !DILocation(line: 2772, column: 9, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6410, file: !1, line: 2772, column: 9)
!6650 = !DILocation(line: 2772, column: 16, scope: !6649)
!6651 = !DILocation(line: 2772, column: 33, scope: !6649)
!6652 = !DILocation(line: 2772, column: 9, scope: !6410)
!6653 = !DILocalVariable(name: "proceed", scope: !6654, file: !1, line: 2775, type: !581)
!6654 = distinct !DILexicalBlock(scope: !6649, file: !1, line: 2773, column: 7)
!6655 = !DILocation(line: 2775, column: 11, scope: !6654)
!6656 = !DILocation(line: 2780, column: 34, scope: !6654)
!6657 = !DILocation(line: 2780, column: 65, scope: !6654)
!6658 = !DILocation(line: 2780, column: 68, scope: !6654)
!6659 = !DILocation(line: 2780, column: 75, scope: !6654)
!6660 = !DILocation(line: 2780, column: 17, scope: !6654)
!6661 = !DILocation(line: 2780, column: 16, scope: !6654)
!6662 = !DILocation(line: 2781, column: 13, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6654, file: !1, line: 2781, column: 13)
!6664 = !DILocation(line: 2781, column: 21, scope: !6663)
!6665 = !DILocation(line: 2781, column: 13, scope: !6654)
!6666 = !DILocation(line: 2782, column: 17, scope: !6663)
!6667 = !DILocation(line: 2782, column: 11, scope: !6663)
!6668 = !DILocation(line: 2783, column: 7, scope: !6654)
!6669 = !DILocation(line: 2784, column: 3, scope: !6410)
!6670 = !DILocation(line: 2691, column: 41, scope: !6404)
!6671 = !DILocation(line: 2691, column: 3, scope: !6404)
!6672 = distinct !{!6672, !6408, !6673}
!6673 = !DILocation(line: 2784, column: 3, scope: !6401)
!6674 = !DILocation(line: 2785, column: 30, scope: !6289)
!6675 = !DILocation(line: 2785, column: 13, scope: !6289)
!6676 = !DILocation(line: 2785, column: 12, scope: !6289)
!6677 = !DILocation(line: 2786, column: 31, scope: !6289)
!6678 = !DILocation(line: 2786, column: 14, scope: !6289)
!6679 = !DILocation(line: 2786, column: 13, scope: !6289)
!6680 = !DILocation(line: 2787, column: 10, scope: !6289)
!6681 = !DILocation(line: 2787, column: 3, scope: !6289)
!6682 = !DILocation(line: 2788, column: 1, scope: !6289)
!6683 = distinct !DISubprogram(name: "MagickPixelCompositeAreaBlend", scope: !6684, file: !6684, line: 155, type: !6685, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!6684 = !DIFile(filename: "./magick/composite-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!6685 = !DISubroutineType(types: !6686)
!6686 = !{null, !2559, !2090, !2559, !2090, !2090, !771}
!6687 = !DILocalVariable(name: "p", arg: 1, scope: !6683, file: !6684, line: 155, type: !2559)
!6688 = !DILocation(line: 155, column: 75, scope: !6683)
!6689 = !DILocalVariable(name: "alpha", arg: 2, scope: !6683, file: !6684, line: 156, type: !2090)
!6690 = !DILocation(line: 156, column: 24, scope: !6683)
!6691 = !DILocalVariable(name: "q", arg: 3, scope: !6683, file: !6684, line: 156, type: !2559)
!6692 = !DILocation(line: 156, column: 55, scope: !6683)
!6693 = !DILocalVariable(name: "beta", arg: 4, scope: !6683, file: !6684, line: 157, type: !2090)
!6694 = !DILocation(line: 157, column: 24, scope: !6683)
!6695 = !DILocalVariable(name: "area", arg: 5, scope: !6683, file: !6684, line: 157, type: !2090)
!6696 = !DILocation(line: 157, column: 50, scope: !6683)
!6697 = !DILocalVariable(name: "composite", arg: 6, scope: !6683, file: !6684, line: 158, type: !771)
!6698 = !DILocation(line: 158, column: 22, scope: !6683)
!6699 = !DILocation(line: 160, column: 28, scope: !6683)
!6700 = !DILocation(line: 160, column: 65, scope: !6683)
!6701 = !DILocation(line: 160, column: 64, scope: !6683)
!6702 = !DILocation(line: 161, column: 19, scope: !6683)
!6703 = !DILocation(line: 161, column: 18, scope: !6683)
!6704 = !DILocation(line: 161, column: 5, scope: !6683)
!6705 = !DILocation(line: 160, column: 70, scope: !6683)
!6706 = !DILocation(line: 160, column: 59, scope: !6683)
!6707 = !DILocation(line: 160, column: 30, scope: !6683)
!6708 = !DILocation(line: 161, column: 26, scope: !6683)
!6709 = !DILocation(line: 161, column: 59, scope: !6683)
!6710 = !DILocation(line: 162, column: 5, scope: !6683)
!6711 = !DILocation(line: 161, column: 77, scope: !6683)
!6712 = !DILocation(line: 161, column: 63, scope: !6683)
!6713 = !DILocation(line: 161, column: 58, scope: !6683)
!6714 = !DILocation(line: 162, column: 12, scope: !6683)
!6715 = !DILocation(line: 160, column: 3, scope: !6683)
!6716 = !DILocation(line: 163, column: 1, scope: !6683)
!6717 = distinct !DISubprogram(name: "LevelImage", scope: !1, file: !1, line: 2831, type: !1375, scopeLine: 2832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!6718 = !DILocalVariable(name: "image", arg: 1, scope: !6717, file: !1, line: 2831, type: !565)
!6719 = !DILocation(line: 2831, column: 50, scope: !6717)
!6720 = !DILocalVariable(name: "levels", arg: 2, scope: !6717, file: !1, line: 2831, type: !547)
!6721 = !DILocation(line: 2831, column: 68, scope: !6717)
!6722 = !DILocalVariable(name: "black_point", scope: !6717, file: !1, line: 2834, type: !543)
!6723 = !DILocation(line: 2834, column: 5, scope: !6717)
!6724 = !DILocalVariable(name: "gamma", scope: !6717, file: !1, line: 2835, type: !543)
!6725 = !DILocation(line: 2835, column: 5, scope: !6717)
!6726 = !DILocalVariable(name: "white_point", scope: !6717, file: !1, line: 2836, type: !543)
!6727 = !DILocation(line: 2836, column: 5, scope: !6717)
!6728 = !DILocalVariable(name: "geometry_info", scope: !6717, file: !1, line: 2839, type: !2879)
!6729 = !DILocation(line: 2839, column: 5, scope: !6717)
!6730 = !DILocalVariable(name: "status", scope: !6717, file: !1, line: 2842, type: !581)
!6731 = !DILocation(line: 2842, column: 5, scope: !6717)
!6732 = !DILocalVariable(name: "flags", scope: !6717, file: !1, line: 2845, type: !833)
!6733 = !DILocation(line: 2845, column: 5, scope: !6717)
!6734 = !DILocation(line: 2850, column: 7, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6717, file: !1, line: 2850, column: 7)
!6736 = !DILocation(line: 2850, column: 14, scope: !6735)
!6737 = !DILocation(line: 2850, column: 7, scope: !6717)
!6738 = !DILocation(line: 2851, column: 5, scope: !6735)
!6739 = !DILocation(line: 2852, column: 23, scope: !6717)
!6740 = !DILocation(line: 2852, column: 9, scope: !6717)
!6741 = !DILocation(line: 2852, column: 8, scope: !6717)
!6742 = !DILocation(line: 2853, column: 29, scope: !6717)
!6743 = !DILocation(line: 2853, column: 14, scope: !6717)
!6744 = !DILocation(line: 2854, column: 14, scope: !6717)
!6745 = !DILocation(line: 2855, column: 8, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6717, file: !1, line: 2855, column: 7)
!6747 = !DILocation(line: 2855, column: 14, scope: !6746)
!6748 = !DILocation(line: 2855, column: 28, scope: !6746)
!6749 = !DILocation(line: 2855, column: 7, scope: !6717)
!6750 = !DILocation(line: 2856, column: 31, scope: !6746)
!6751 = !DILocation(line: 2856, column: 16, scope: !6746)
!6752 = !DILocation(line: 2856, column: 5, scope: !6746)
!6753 = !DILocation(line: 2857, column: 8, scope: !6717)
!6754 = !DILocation(line: 2858, column: 8, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6717, file: !1, line: 2858, column: 7)
!6756 = !DILocation(line: 2858, column: 14, scope: !6755)
!6757 = !DILocation(line: 2858, column: 25, scope: !6755)
!6758 = !DILocation(line: 2858, column: 7, scope: !6717)
!6759 = !DILocation(line: 2859, column: 25, scope: !6755)
!6760 = !DILocation(line: 2859, column: 10, scope: !6755)
!6761 = !DILocation(line: 2859, column: 5, scope: !6755)
!6762 = !DILocation(line: 2860, column: 8, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6717, file: !1, line: 2860, column: 7)
!6764 = !DILocation(line: 2860, column: 14, scope: !6763)
!6765 = !DILocation(line: 2860, column: 30, scope: !6763)
!6766 = !DILocation(line: 2860, column: 7, scope: !6717)
!6767 = !DILocation(line: 2862, column: 29, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6763, file: !1, line: 2861, column: 5)
!6769 = !DILocation(line: 2862, column: 36, scope: !6768)
!6770 = !DILocation(line: 2862, column: 20, scope: !6768)
!6771 = !DILocation(line: 2862, column: 44, scope: !6768)
!6772 = !DILocation(line: 2862, column: 51, scope: !6768)
!6773 = !DILocation(line: 2862, column: 43, scope: !6768)
!6774 = !DILocation(line: 2862, column: 55, scope: !6768)
!6775 = !DILocation(line: 2862, column: 18, scope: !6768)
!6776 = !DILocation(line: 2863, column: 29, scope: !6768)
!6777 = !DILocation(line: 2863, column: 36, scope: !6768)
!6778 = !DILocation(line: 2863, column: 20, scope: !6768)
!6779 = !DILocation(line: 2863, column: 44, scope: !6768)
!6780 = !DILocation(line: 2863, column: 51, scope: !6768)
!6781 = !DILocation(line: 2863, column: 43, scope: !6768)
!6782 = !DILocation(line: 2863, column: 55, scope: !6768)
!6783 = !DILocation(line: 2863, column: 18, scope: !6768)
!6784 = !DILocation(line: 2864, column: 5, scope: !6768)
!6785 = !DILocation(line: 2865, column: 8, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6717, file: !1, line: 2865, column: 7)
!6787 = !DILocation(line: 2865, column: 14, scope: !6786)
!6788 = !DILocation(line: 2865, column: 28, scope: !6786)
!6789 = !DILocation(line: 2865, column: 7, scope: !6717)
!6790 = !DILocation(line: 2866, column: 39, scope: !6786)
!6791 = !DILocation(line: 2866, column: 38, scope: !6786)
!6792 = !DILocation(line: 2866, column: 16, scope: !6786)
!6793 = !DILocation(line: 2866, column: 5, scope: !6786)
!6794 = !DILocation(line: 2867, column: 8, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6717, file: !1, line: 2867, column: 7)
!6796 = !DILocation(line: 2867, column: 14, scope: !6795)
!6797 = !DILocation(line: 2867, column: 30, scope: !6795)
!6798 = !DILocation(line: 2867, column: 7, scope: !6717)
!6799 = !DILocation(line: 2868, column: 30, scope: !6795)
!6800 = !DILocation(line: 2868, column: 52, scope: !6795)
!6801 = !DILocation(line: 2868, column: 64, scope: !6795)
!6802 = !DILocation(line: 2869, column: 7, scope: !6795)
!6803 = !DILocation(line: 2868, column: 12, scope: !6795)
!6804 = !DILocation(line: 2868, column: 11, scope: !6795)
!6805 = !DILocation(line: 2868, column: 5, scope: !6795)
!6806 = !DILocation(line: 2871, column: 26, scope: !6795)
!6807 = !DILocation(line: 2871, column: 32, scope: !6795)
!6808 = !DILocation(line: 2871, column: 44, scope: !6795)
!6809 = !DILocation(line: 2871, column: 56, scope: !6795)
!6810 = !DILocation(line: 2871, column: 12, scope: !6795)
!6811 = !DILocation(line: 2871, column: 11, scope: !6795)
!6812 = !DILocation(line: 2872, column: 10, scope: !6717)
!6813 = !DILocation(line: 2872, column: 3, scope: !6717)
!6814 = !DILocation(line: 2873, column: 1, scope: !6717)
!6815 = distinct !DISubprogram(name: "LevelizeImage", scope: !1, file: !1, line: 3098, type: !6816, scopeLine: 3100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!6816 = !DISubroutineType(types: !6817)
!6817 = !{!581, !565, !980, !980, !980}
!6818 = !DILocalVariable(name: "image", arg: 1, scope: !6815, file: !1, line: 3098, type: !565)
!6819 = !DILocation(line: 3098, column: 53, scope: !6815)
!6820 = !DILocalVariable(name: "black_point", arg: 2, scope: !6815, file: !1, line: 3099, type: !980)
!6821 = !DILocation(line: 3099, column: 16, scope: !6815)
!6822 = !DILocalVariable(name: "white_point", arg: 3, scope: !6815, file: !1, line: 3099, type: !980)
!6823 = !DILocation(line: 3099, column: 41, scope: !6815)
!6824 = !DILocalVariable(name: "gamma", arg: 4, scope: !6815, file: !1, line: 3099, type: !980)
!6825 = !DILocation(line: 3099, column: 66, scope: !6815)
!6826 = !DILocalVariable(name: "status", scope: !6815, file: !1, line: 3102, type: !581)
!6827 = !DILocation(line: 3102, column: 5, scope: !6815)
!6828 = !DILocation(line: 3104, column: 31, scope: !6815)
!6829 = !DILocation(line: 3104, column: 53, scope: !6815)
!6830 = !DILocation(line: 3104, column: 65, scope: !6815)
!6831 = !DILocation(line: 3105, column: 5, scope: !6815)
!6832 = !DILocation(line: 3104, column: 10, scope: !6815)
!6833 = !DILocation(line: 3104, column: 9, scope: !6815)
!6834 = !DILocation(line: 3106, column: 10, scope: !6815)
!6835 = !DILocation(line: 3106, column: 3, scope: !6815)
!6836 = distinct !DISubprogram(name: "LevelPixel", scope: !1, file: !1, line: 2918, type: !6837, scopeLine: 2920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!6837 = !DISubroutineType(types: !6838)
!6838 = !{!543, !980, !980, !980, !2090}
!6839 = !DILocalVariable(name: "black_point", arg: 1, scope: !6836, file: !1, line: 2918, type: !980)
!6840 = !DILocation(line: 2918, column: 46, scope: !6836)
!6841 = !DILocalVariable(name: "white_point", arg: 2, scope: !6836, file: !1, line: 2919, type: !980)
!6842 = !DILocation(line: 2919, column: 16, scope: !6836)
!6843 = !DILocalVariable(name: "gamma", arg: 3, scope: !6836, file: !1, line: 2919, type: !980)
!6844 = !DILocation(line: 2919, column: 41, scope: !6836)
!6845 = !DILocalVariable(name: "pixel", arg: 4, scope: !6836, file: !1, line: 2919, type: !2090)
!6846 = !DILocation(line: 2919, column: 68, scope: !6836)
!6847 = !DILocalVariable(name: "level_pixel", scope: !6836, file: !1, line: 2922, type: !543)
!6848 = !DILocation(line: 2922, column: 5, scope: !6836)
!6849 = !DILocalVariable(name: "scale", scope: !6836, file: !1, line: 2923, type: !543)
!6850 = !DILocation(line: 2923, column: 5, scope: !6836)
!6851 = !DILocation(line: 2925, column: 10, scope: !6836)
!6852 = !DILocation(line: 2925, column: 25, scope: !6836)
!6853 = !DILocation(line: 2925, column: 22, scope: !6836)
!6854 = !DILocation(line: 2925, column: 9, scope: !6836)
!6855 = !DILocation(line: 2925, column: 45, scope: !6836)
!6856 = !DILocation(line: 2925, column: 57, scope: !6836)
!6857 = !DILocation(line: 2925, column: 56, scope: !6836)
!6858 = !DILocation(line: 2925, column: 43, scope: !6836)
!6859 = !DILocation(line: 2925, column: 8, scope: !6836)
!6860 = !DILocation(line: 2926, column: 38, scope: !6836)
!6861 = !DILocation(line: 2926, column: 54, scope: !6836)
!6862 = !DILocation(line: 2926, column: 45, scope: !6836)
!6863 = !DILocation(line: 2926, column: 60, scope: !6836)
!6864 = !DILocation(line: 2926, column: 59, scope: !6836)
!6865 = !DILocation(line: 2926, column: 43, scope: !6836)
!6866 = !DILocation(line: 2927, column: 5, scope: !6836)
!6867 = !DILocation(line: 2926, column: 76, scope: !6836)
!6868 = !DILocation(line: 2926, column: 28, scope: !6836)
!6869 = !DILocation(line: 2926, column: 27, scope: !6836)
!6870 = !DILocation(line: 2926, column: 14, scope: !6836)
!6871 = !DILocation(line: 2928, column: 10, scope: !6836)
!6872 = !DILocation(line: 2928, column: 3, scope: !6836)
!6873 = distinct !DISubprogram(name: "LevelizeImageChannel", scope: !1, file: !1, line: 3109, type: !978, scopeLine: 3112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!6874 = !DILocalVariable(name: "image", arg: 1, scope: !6873, file: !1, line: 3109, type: !565)
!6875 = !DILocation(line: 3109, column: 60, scope: !6873)
!6876 = !DILocalVariable(name: "channel", arg: 2, scope: !6873, file: !1, line: 3110, type: !819)
!6877 = !DILocation(line: 3110, column: 21, scope: !6873)
!6878 = !DILocalVariable(name: "black_point", arg: 3, scope: !6873, file: !1, line: 3110, type: !980)
!6879 = !DILocation(line: 3110, column: 42, scope: !6873)
!6880 = !DILocalVariable(name: "white_point", arg: 4, scope: !6873, file: !1, line: 3110, type: !980)
!6881 = !DILocation(line: 3110, column: 67, scope: !6873)
!6882 = !DILocalVariable(name: "gamma", arg: 5, scope: !6873, file: !1, line: 3111, type: !980)
!6883 = !DILocation(line: 3111, column: 16, scope: !6873)
!6884 = !DILocalVariable(name: "image_view", scope: !6873, file: !1, line: 3118, type: !992)
!6885 = !DILocation(line: 3118, column: 6, scope: !6873)
!6886 = !DILocalVariable(name: "exception", scope: !6873, file: !1, line: 3121, type: !998)
!6887 = !DILocation(line: 3121, column: 6, scope: !6873)
!6888 = !DILocalVariable(name: "status", scope: !6873, file: !1, line: 3124, type: !581)
!6889 = !DILocation(line: 3124, column: 5, scope: !6873)
!6890 = !DILocalVariable(name: "progress", scope: !6873, file: !1, line: 3127, type: !685)
!6891 = !DILocation(line: 3127, column: 5, scope: !6873)
!6892 = !DILocalVariable(name: "i", scope: !6873, file: !1, line: 3130, type: !615)
!6893 = !DILocation(line: 3130, column: 5, scope: !6873)
!6894 = !DILocalVariable(name: "y", scope: !6873, file: !1, line: 3133, type: !615)
!6895 = !DILocation(line: 3133, column: 5, scope: !6873)
!6896 = !DILocation(line: 3140, column: 7, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6873, file: !1, line: 3140, column: 7)
!6898 = !DILocation(line: 3140, column: 14, scope: !6897)
!6899 = !DILocation(line: 3140, column: 20, scope: !6897)
!6900 = !DILocation(line: 3140, column: 7, scope: !6873)
!6901 = !DILocation(line: 3141, column: 61, scope: !6897)
!6902 = !DILocation(line: 3141, column: 68, scope: !6897)
!6903 = !DILocation(line: 3141, column: 12, scope: !6897)
!6904 = !DILocation(line: 3141, column: 5, scope: !6897)
!6905 = !DILocation(line: 3142, column: 7, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6873, file: !1, line: 3142, column: 7)
!6907 = !DILocation(line: 3142, column: 14, scope: !6906)
!6908 = !DILocation(line: 3142, column: 28, scope: !6906)
!6909 = !DILocation(line: 3142, column: 7, scope: !6873)
!6910 = !DILocation(line: 3143, column: 11, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6906, file: !1, line: 3143, column: 5)
!6912 = !DILocation(line: 3143, column: 10, scope: !6911)
!6913 = !DILocation(line: 3143, column: 15, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6911, file: !1, line: 3143, column: 5)
!6915 = !DILocation(line: 3143, column: 29, scope: !6914)
!6916 = !DILocation(line: 3143, column: 36, scope: !6914)
!6917 = !DILocation(line: 3143, column: 17, scope: !6914)
!6918 = !DILocation(line: 3143, column: 5, scope: !6911)
!6919 = !DILocation(line: 3148, column: 12, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6921, file: !1, line: 3148, column: 11)
!6921 = distinct !DILexicalBlock(scope: !6914, file: !1, line: 3144, column: 5)
!6922 = !DILocation(line: 3148, column: 20, scope: !6920)
!6923 = !DILocation(line: 3148, column: 34, scope: !6920)
!6924 = !DILocation(line: 3148, column: 11, scope: !6921)
!6925 = !DILocation(line: 3149, column: 32, scope: !6920)
!6926 = !DILocation(line: 3149, column: 9, scope: !6920)
!6927 = !DILocation(line: 3149, column: 16, scope: !6920)
!6928 = !DILocation(line: 3149, column: 25, scope: !6920)
!6929 = !DILocation(line: 3149, column: 28, scope: !6920)
!6930 = !DILocation(line: 3149, column: 31, scope: !6920)
!6931 = !DILocation(line: 3150, column: 12, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6921, file: !1, line: 3150, column: 11)
!6933 = !DILocation(line: 3150, column: 20, scope: !6932)
!6934 = !DILocation(line: 3150, column: 36, scope: !6932)
!6935 = !DILocation(line: 3150, column: 11, scope: !6921)
!6936 = !DILocation(line: 3151, column: 34, scope: !6932)
!6937 = !DILocation(line: 3151, column: 9, scope: !6932)
!6938 = !DILocation(line: 3151, column: 16, scope: !6932)
!6939 = !DILocation(line: 3151, column: 25, scope: !6932)
!6940 = !DILocation(line: 3151, column: 28, scope: !6932)
!6941 = !DILocation(line: 3151, column: 33, scope: !6932)
!6942 = !DILocation(line: 3152, column: 12, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6921, file: !1, line: 3152, column: 11)
!6944 = !DILocation(line: 3152, column: 20, scope: !6943)
!6945 = !DILocation(line: 3152, column: 35, scope: !6943)
!6946 = !DILocation(line: 3152, column: 11, scope: !6921)
!6947 = !DILocation(line: 3153, column: 33, scope: !6943)
!6948 = !DILocation(line: 3153, column: 9, scope: !6943)
!6949 = !DILocation(line: 3153, column: 16, scope: !6943)
!6950 = !DILocation(line: 3153, column: 25, scope: !6943)
!6951 = !DILocation(line: 3153, column: 28, scope: !6943)
!6952 = !DILocation(line: 3153, column: 32, scope: !6943)
!6953 = !DILocation(line: 3154, column: 12, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6921, file: !1, line: 3154, column: 11)
!6955 = !DILocation(line: 3154, column: 20, scope: !6954)
!6956 = !DILocation(line: 3154, column: 38, scope: !6954)
!6957 = !DILocation(line: 3154, column: 11, scope: !6921)
!6958 = !DILocation(line: 3155, column: 60, scope: !6954)
!6959 = !DILocation(line: 3155, column: 59, scope: !6954)
!6960 = !DILocation(line: 3155, column: 36, scope: !6954)
!6961 = !DILocation(line: 3155, column: 9, scope: !6954)
!6962 = !DILocation(line: 3155, column: 16, scope: !6954)
!6963 = !DILocation(line: 3155, column: 25, scope: !6954)
!6964 = !DILocation(line: 3155, column: 28, scope: !6954)
!6965 = !DILocation(line: 3155, column: 35, scope: !6954)
!6966 = !DILocation(line: 3157, column: 5, scope: !6921)
!6967 = !DILocation(line: 3143, column: 45, scope: !6914)
!6968 = !DILocation(line: 3143, column: 5, scope: !6914)
!6969 = distinct !{!6969, !6918, !6970}
!6970 = !DILocation(line: 3157, column: 5, scope: !6911)
!6971 = !DILocation(line: 3161, column: 9, scope: !6873)
!6972 = !DILocation(line: 3162, column: 11, scope: !6873)
!6973 = !DILocation(line: 3163, column: 15, scope: !6873)
!6974 = !DILocation(line: 3163, column: 22, scope: !6873)
!6975 = !DILocation(line: 3163, column: 12, scope: !6873)
!6976 = !DILocation(line: 3164, column: 40, scope: !6873)
!6977 = !DILocation(line: 3164, column: 46, scope: !6873)
!6978 = !DILocation(line: 3164, column: 14, scope: !6873)
!6979 = !DILocation(line: 3164, column: 13, scope: !6873)
!6980 = !DILocation(line: 3169, column: 9, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6873, file: !1, line: 3169, column: 3)
!6982 = !DILocation(line: 3169, column: 8, scope: !6981)
!6983 = !DILocation(line: 3169, column: 13, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6981, file: !1, line: 3169, column: 3)
!6985 = !DILocation(line: 3169, column: 27, scope: !6984)
!6986 = !DILocation(line: 3169, column: 34, scope: !6984)
!6987 = !DILocation(line: 3169, column: 15, scope: !6984)
!6988 = !DILocation(line: 3169, column: 3, scope: !6981)
!6989 = !DILocalVariable(name: "indexes", scope: !6990, file: !1, line: 3172, type: !1141)
!6990 = distinct !DILexicalBlock(scope: !6984, file: !1, line: 3170, column: 3)
!6991 = !DILocation(line: 3172, column: 17, scope: !6990)
!6992 = !DILocalVariable(name: "q", scope: !6990, file: !1, line: 3175, type: !1144)
!6993 = !DILocation(line: 3175, column: 17, scope: !6990)
!6994 = !DILocalVariable(name: "x", scope: !6990, file: !1, line: 3178, type: !615)
!6995 = !DILocation(line: 3178, column: 7, scope: !6990)
!6996 = !DILocation(line: 3180, column: 9, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6990, file: !1, line: 3180, column: 9)
!6998 = !DILocation(line: 3180, column: 16, scope: !6997)
!6999 = !DILocation(line: 3180, column: 9, scope: !6990)
!7000 = !DILocation(line: 3181, column: 7, scope: !6997)
!7001 = !DILocation(line: 3182, column: 35, scope: !6990)
!7002 = !DILocation(line: 3182, column: 48, scope: !6990)
!7003 = !DILocation(line: 3182, column: 50, scope: !6990)
!7004 = !DILocation(line: 3182, column: 57, scope: !6990)
!7005 = !DILocation(line: 3182, column: 67, scope: !6990)
!7006 = !DILocation(line: 3182, column: 7, scope: !6990)
!7007 = !DILocation(line: 3182, column: 6, scope: !6990)
!7008 = !DILocation(line: 3183, column: 9, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !6990, file: !1, line: 3183, column: 9)
!7010 = !DILocation(line: 3183, column: 11, scope: !7009)
!7011 = !DILocation(line: 3183, column: 9, scope: !6990)
!7012 = !DILocation(line: 3185, column: 15, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7009, file: !1, line: 3184, column: 7)
!7014 = !DILocation(line: 3186, column: 9, scope: !7013)
!7015 = !DILocation(line: 3188, column: 45, scope: !6990)
!7016 = !DILocation(line: 3188, column: 13, scope: !6990)
!7017 = !DILocation(line: 3188, column: 12, scope: !6990)
!7018 = !DILocation(line: 3189, column: 11, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !6990, file: !1, line: 3189, column: 5)
!7020 = !DILocation(line: 3189, column: 10, scope: !7019)
!7021 = !DILocation(line: 3189, column: 15, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7019, file: !1, line: 3189, column: 5)
!7023 = !DILocation(line: 3189, column: 29, scope: !7022)
!7024 = !DILocation(line: 3189, column: 36, scope: !7022)
!7025 = !DILocation(line: 3189, column: 17, scope: !7022)
!7026 = !DILocation(line: 3189, column: 5, scope: !7019)
!7027 = !DILocation(line: 3191, column: 12, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7029, file: !1, line: 3191, column: 11)
!7029 = distinct !DILexicalBlock(scope: !7022, file: !1, line: 3190, column: 5)
!7030 = !DILocation(line: 3191, column: 20, scope: !7028)
!7031 = !DILocation(line: 3191, column: 34, scope: !7028)
!7032 = !DILocation(line: 3191, column: 11, scope: !7029)
!7033 = !DILocation(line: 3192, column: 9, scope: !7028)
!7034 = !DILocation(line: 3193, column: 12, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7029, file: !1, line: 3193, column: 11)
!7036 = !DILocation(line: 3193, column: 20, scope: !7035)
!7037 = !DILocation(line: 3193, column: 36, scope: !7035)
!7038 = !DILocation(line: 3193, column: 11, scope: !7029)
!7039 = !DILocation(line: 3194, column: 9, scope: !7035)
!7040 = !DILocation(line: 3195, column: 12, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7029, file: !1, line: 3195, column: 11)
!7042 = !DILocation(line: 3195, column: 20, scope: !7041)
!7043 = !DILocation(line: 3195, column: 35, scope: !7041)
!7044 = !DILocation(line: 3195, column: 11, scope: !7029)
!7045 = !DILocation(line: 3196, column: 9, scope: !7041)
!7046 = !DILocation(line: 3197, column: 13, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7029, file: !1, line: 3197, column: 11)
!7048 = !DILocation(line: 3197, column: 21, scope: !7047)
!7049 = !DILocation(line: 3197, column: 39, scope: !7047)
!7050 = !DILocation(line: 3197, column: 45, scope: !7047)
!7051 = !DILocation(line: 3198, column: 12, scope: !7047)
!7052 = !DILocation(line: 3198, column: 19, scope: !7047)
!7053 = !DILocation(line: 3198, column: 25, scope: !7047)
!7054 = !DILocation(line: 3197, column: 11, scope: !7029)
!7055 = !DILocation(line: 3199, column: 9, scope: !7047)
!7056 = !DILocation(line: 3200, column: 13, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7029, file: !1, line: 3200, column: 11)
!7058 = !DILocation(line: 3200, column: 21, scope: !7057)
!7059 = !DILocation(line: 3200, column: 37, scope: !7057)
!7060 = !DILocation(line: 3200, column: 43, scope: !7057)
!7061 = !DILocation(line: 3201, column: 12, scope: !7057)
!7062 = !DILocation(line: 3201, column: 19, scope: !7057)
!7063 = !DILocation(line: 3201, column: 30, scope: !7057)
!7064 = !DILocation(line: 3200, column: 11, scope: !7029)
!7065 = !DILocation(line: 3202, column: 9, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7067, file: !1, line: 3202, column: 9)
!7067 = distinct !DILexicalBlock(scope: !7057, file: !1, line: 3202, column: 9)
!7068 = !DILocation(line: 3202, column: 9, scope: !7067)
!7069 = !DILocation(line: 3203, column: 8, scope: !7029)
!7070 = !DILocation(line: 3204, column: 5, scope: !7029)
!7071 = !DILocation(line: 3189, column: 46, scope: !7022)
!7072 = !DILocation(line: 3189, column: 5, scope: !7022)
!7073 = distinct !{!7073, !7026, !7074}
!7074 = !DILocation(line: 3204, column: 5, scope: !7019)
!7075 = !DILocation(line: 3205, column: 38, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !6990, file: !1, line: 3205, column: 9)
!7077 = !DILocation(line: 3205, column: 49, scope: !7076)
!7078 = !DILocation(line: 3205, column: 9, scope: !7076)
!7079 = !DILocation(line: 3205, column: 60, scope: !7076)
!7080 = !DILocation(line: 3205, column: 9, scope: !6990)
!7081 = !DILocation(line: 3206, column: 13, scope: !7076)
!7082 = !DILocation(line: 3206, column: 7, scope: !7076)
!7083 = !DILocation(line: 3207, column: 9, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !6990, file: !1, line: 3207, column: 9)
!7085 = !DILocation(line: 3207, column: 16, scope: !7084)
!7086 = !DILocation(line: 3207, column: 33, scope: !7084)
!7087 = !DILocation(line: 3207, column: 9, scope: !6990)
!7088 = !DILocalVariable(name: "proceed", scope: !7089, file: !1, line: 3210, type: !581)
!7089 = distinct !DILexicalBlock(scope: !7084, file: !1, line: 3208, column: 7)
!7090 = !DILocation(line: 3210, column: 11, scope: !7089)
!7091 = !DILocation(line: 3215, column: 34, scope: !7089)
!7092 = !DILocation(line: 3215, column: 65, scope: !7089)
!7093 = !DILocation(line: 3215, column: 68, scope: !7089)
!7094 = !DILocation(line: 3215, column: 75, scope: !7089)
!7095 = !DILocation(line: 3215, column: 17, scope: !7089)
!7096 = !DILocation(line: 3215, column: 16, scope: !7089)
!7097 = !DILocation(line: 3216, column: 13, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7089, file: !1, line: 3216, column: 13)
!7099 = !DILocation(line: 3216, column: 21, scope: !7098)
!7100 = !DILocation(line: 3216, column: 13, scope: !7089)
!7101 = !DILocation(line: 3217, column: 17, scope: !7098)
!7102 = !DILocation(line: 3217, column: 11, scope: !7098)
!7103 = !DILocation(line: 3218, column: 7, scope: !7089)
!7104 = !DILocation(line: 3219, column: 3, scope: !6990)
!7105 = !DILocation(line: 3169, column: 41, scope: !6984)
!7106 = !DILocation(line: 3169, column: 3, scope: !6984)
!7107 = distinct !{!7107, !6988, !7108}
!7108 = !DILocation(line: 3219, column: 3, scope: !6981)
!7109 = !DILocation(line: 3220, column: 31, scope: !6873)
!7110 = !DILocation(line: 3220, column: 14, scope: !6873)
!7111 = !DILocation(line: 3220, column: 13, scope: !6873)
!7112 = !DILocation(line: 3221, column: 10, scope: !6873)
!7113 = !DILocation(line: 3221, column: 3, scope: !6873)
!7114 = distinct !DISubprogram(name: "gamma_pow", scope: !1, file: !1, line: 2102, type: !7115, scopeLine: 2103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!7115 = !DISubroutineType(types: !7116)
!7116 = !{!543, !980, !980}
!7117 = !DILocalVariable(name: "value", arg: 1, scope: !7114, file: !1, line: 2102, type: !980)
!7118 = !DILocation(line: 2102, column: 45, scope: !7114)
!7119 = !DILocalVariable(name: "gamma", arg: 2, scope: !7114, file: !1, line: 2102, type: !980)
!7120 = !DILocation(line: 2102, column: 64, scope: !7114)
!7121 = !DILocation(line: 2104, column: 10, scope: !7114)
!7122 = !DILocation(line: 2104, column: 16, scope: !7114)
!7123 = !DILocation(line: 2104, column: 24, scope: !7114)
!7124 = !DILocation(line: 2104, column: 36, scope: !7114)
!7125 = !DILocation(line: 2104, column: 42, scope: !7114)
!7126 = !DILocation(line: 2104, column: 32, scope: !7114)
!7127 = !DILocation(line: 2104, column: 3, scope: !7114)
!7128 = distinct !DISubprogram(name: "LevelColorsImage", scope: !1, file: !1, line: 3269, type: !7129, scopeLine: 3272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!7129 = !DISubroutineType(types: !7130)
!7130 = !{!581, !565, !2559, !2559, !2617}
!7131 = !DILocalVariable(name: "image", arg: 1, scope: !7128, file: !1, line: 3269, type: !565)
!7132 = !DILocation(line: 3269, column: 56, scope: !7128)
!7133 = !DILocalVariable(name: "black_color", arg: 2, scope: !7128, file: !1, line: 3270, type: !2559)
!7134 = !DILocation(line: 3270, column: 28, scope: !7128)
!7135 = !DILocalVariable(name: "white_color", arg: 3, scope: !7128, file: !1, line: 3270, type: !2559)
!7136 = !DILocation(line: 3270, column: 65, scope: !7128)
!7137 = !DILocalVariable(name: "invert", arg: 4, scope: !7128, file: !1, line: 3271, type: !2617)
!7138 = !DILocation(line: 3271, column: 27, scope: !7128)
!7139 = !DILocalVariable(name: "status", scope: !7128, file: !1, line: 3274, type: !581)
!7140 = !DILocation(line: 3274, column: 5, scope: !7128)
!7141 = !DILocation(line: 3276, column: 34, scope: !7128)
!7142 = !DILocation(line: 3276, column: 56, scope: !7128)
!7143 = !DILocation(line: 3276, column: 68, scope: !7128)
!7144 = !DILocation(line: 3277, column: 5, scope: !7128)
!7145 = !DILocation(line: 3276, column: 10, scope: !7128)
!7146 = !DILocation(line: 3276, column: 9, scope: !7128)
!7147 = !DILocation(line: 3278, column: 10, scope: !7128)
!7148 = !DILocation(line: 3278, column: 3, scope: !7128)
!7149 = distinct !DISubprogram(name: "LevelColorsImageChannel", scope: !1, file: !1, line: 3281, type: !7150, scopeLine: 3284, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!7150 = !DISubroutineType(types: !7151)
!7151 = !{!581, !565, !819, !2559, !2559, !2617}
!7152 = !DILocalVariable(name: "image", arg: 1, scope: !7149, file: !1, line: 3281, type: !565)
!7153 = !DILocation(line: 3281, column: 63, scope: !7149)
!7154 = !DILocalVariable(name: "channel", arg: 2, scope: !7149, file: !1, line: 3282, type: !819)
!7155 = !DILocation(line: 3282, column: 21, scope: !7149)
!7156 = !DILocalVariable(name: "black_color", arg: 3, scope: !7149, file: !1, line: 3282, type: !2559)
!7157 = !DILocation(line: 3282, column: 54, scope: !7149)
!7158 = !DILocalVariable(name: "white_color", arg: 4, scope: !7149, file: !1, line: 3283, type: !2559)
!7159 = !DILocation(line: 3283, column: 28, scope: !7149)
!7160 = !DILocalVariable(name: "invert", arg: 5, scope: !7149, file: !1, line: 3283, type: !2617)
!7161 = !DILocation(line: 3283, column: 64, scope: !7149)
!7162 = !DILocalVariable(name: "status", scope: !7149, file: !1, line: 3286, type: !833)
!7163 = !DILocation(line: 3286, column: 5, scope: !7149)
!7164 = !DILocation(line: 3293, column: 7, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7149, file: !1, line: 3293, column: 7)
!7166 = !DILocation(line: 3293, column: 14, scope: !7165)
!7167 = !DILocation(line: 3293, column: 20, scope: !7165)
!7168 = !DILocation(line: 3293, column: 7, scope: !7149)
!7169 = !DILocation(line: 3294, column: 61, scope: !7165)
!7170 = !DILocation(line: 3294, column: 68, scope: !7165)
!7171 = !DILocation(line: 3294, column: 12, scope: !7165)
!7172 = !DILocation(line: 3294, column: 5, scope: !7165)
!7173 = !DILocation(line: 3295, column: 25, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7149, file: !1, line: 3295, column: 7)
!7175 = !DILocation(line: 3295, column: 32, scope: !7174)
!7176 = !DILocation(line: 3295, column: 8, scope: !7174)
!7177 = !DILocation(line: 3295, column: 44, scope: !7174)
!7178 = !DILocation(line: 3295, column: 60, scope: !7174)
!7179 = !DILocation(line: 3296, column: 26, scope: !7174)
!7180 = !DILocation(line: 3296, column: 39, scope: !7174)
!7181 = !DILocation(line: 3296, column: 9, scope: !7174)
!7182 = !DILocation(line: 3296, column: 51, scope: !7174)
!7183 = !DILocation(line: 3296, column: 67, scope: !7174)
!7184 = !DILocation(line: 3297, column: 26, scope: !7174)
!7185 = !DILocation(line: 3297, column: 39, scope: !7174)
!7186 = !DILocation(line: 3297, column: 9, scope: !7174)
!7187 = !DILocation(line: 3297, column: 51, scope: !7174)
!7188 = !DILocation(line: 3295, column: 7, scope: !7149)
!7189 = !DILocation(line: 3298, column: 31, scope: !7174)
!7190 = !DILocation(line: 3298, column: 12, scope: !7174)
!7191 = !DILocation(line: 3298, column: 5, scope: !7174)
!7192 = !DILocation(line: 3299, column: 9, scope: !7149)
!7193 = !DILocation(line: 3300, column: 7, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7149, file: !1, line: 3300, column: 7)
!7195 = !DILocation(line: 3300, column: 14, scope: !7194)
!7196 = !DILocation(line: 3300, column: 7, scope: !7149)
!7197 = !DILocation(line: 3302, column: 12, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7199, file: !1, line: 3302, column: 11)
!7199 = distinct !DILexicalBlock(scope: !7194, file: !1, line: 3301, column: 5)
!7200 = !DILocation(line: 3302, column: 20, scope: !7198)
!7201 = !DILocation(line: 3302, column: 34, scope: !7198)
!7202 = !DILocation(line: 3302, column: 11, scope: !7199)
!7203 = !DILocation(line: 3303, column: 35, scope: !7198)
!7204 = !DILocation(line: 3303, column: 52, scope: !7198)
!7205 = !DILocation(line: 3303, column: 65, scope: !7198)
!7206 = !DILocation(line: 3304, column: 11, scope: !7198)
!7207 = !DILocation(line: 3304, column: 24, scope: !7198)
!7208 = !DILocation(line: 3303, column: 17, scope: !7198)
!7209 = !DILocation(line: 3303, column: 15, scope: !7198)
!7210 = !DILocation(line: 3303, column: 9, scope: !7198)
!7211 = !DILocation(line: 3305, column: 12, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7199, file: !1, line: 3305, column: 11)
!7213 = !DILocation(line: 3305, column: 20, scope: !7212)
!7214 = !DILocation(line: 3305, column: 36, scope: !7212)
!7215 = !DILocation(line: 3305, column: 11, scope: !7199)
!7216 = !DILocation(line: 3306, column: 35, scope: !7212)
!7217 = !DILocation(line: 3306, column: 54, scope: !7212)
!7218 = !DILocation(line: 3306, column: 67, scope: !7212)
!7219 = !DILocation(line: 3307, column: 11, scope: !7212)
!7220 = !DILocation(line: 3307, column: 24, scope: !7212)
!7221 = !DILocation(line: 3306, column: 17, scope: !7212)
!7222 = !DILocation(line: 3306, column: 15, scope: !7212)
!7223 = !DILocation(line: 3306, column: 9, scope: !7212)
!7224 = !DILocation(line: 3308, column: 12, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7199, file: !1, line: 3308, column: 11)
!7226 = !DILocation(line: 3308, column: 20, scope: !7225)
!7227 = !DILocation(line: 3308, column: 35, scope: !7225)
!7228 = !DILocation(line: 3308, column: 11, scope: !7199)
!7229 = !DILocation(line: 3309, column: 35, scope: !7225)
!7230 = !DILocation(line: 3309, column: 53, scope: !7225)
!7231 = !DILocation(line: 3309, column: 66, scope: !7225)
!7232 = !DILocation(line: 3310, column: 11, scope: !7225)
!7233 = !DILocation(line: 3310, column: 24, scope: !7225)
!7234 = !DILocation(line: 3309, column: 17, scope: !7225)
!7235 = !DILocation(line: 3309, column: 15, scope: !7225)
!7236 = !DILocation(line: 3309, column: 9, scope: !7225)
!7237 = !DILocation(line: 3311, column: 13, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7199, file: !1, line: 3311, column: 11)
!7239 = !DILocation(line: 3311, column: 21, scope: !7238)
!7240 = !DILocation(line: 3311, column: 39, scope: !7238)
!7241 = !DILocation(line: 3311, column: 45, scope: !7238)
!7242 = !DILocation(line: 3312, column: 12, scope: !7238)
!7243 = !DILocation(line: 3312, column: 19, scope: !7238)
!7244 = !DILocation(line: 3312, column: 25, scope: !7238)
!7245 = !DILocation(line: 3311, column: 11, scope: !7199)
!7246 = !DILocation(line: 3313, column: 35, scope: !7238)
!7247 = !DILocation(line: 3313, column: 56, scope: !7238)
!7248 = !DILocation(line: 3313, column: 69, scope: !7238)
!7249 = !DILocation(line: 3314, column: 11, scope: !7238)
!7250 = !DILocation(line: 3314, column: 24, scope: !7238)
!7251 = !DILocation(line: 3313, column: 17, scope: !7238)
!7252 = !DILocation(line: 3313, column: 15, scope: !7238)
!7253 = !DILocation(line: 3313, column: 9, scope: !7238)
!7254 = !DILocation(line: 3315, column: 13, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7199, file: !1, line: 3315, column: 11)
!7256 = !DILocation(line: 3315, column: 21, scope: !7255)
!7257 = !DILocation(line: 3315, column: 37, scope: !7255)
!7258 = !DILocation(line: 3315, column: 43, scope: !7255)
!7259 = !DILocation(line: 3316, column: 12, scope: !7255)
!7260 = !DILocation(line: 3316, column: 19, scope: !7255)
!7261 = !DILocation(line: 3316, column: 30, scope: !7255)
!7262 = !DILocation(line: 3315, column: 11, scope: !7199)
!7263 = !DILocation(line: 3317, column: 35, scope: !7255)
!7264 = !DILocation(line: 3317, column: 54, scope: !7255)
!7265 = !DILocation(line: 3317, column: 67, scope: !7255)
!7266 = !DILocation(line: 3318, column: 11, scope: !7255)
!7267 = !DILocation(line: 3318, column: 24, scope: !7255)
!7268 = !DILocation(line: 3317, column: 17, scope: !7255)
!7269 = !DILocation(line: 3317, column: 15, scope: !7255)
!7270 = !DILocation(line: 3317, column: 9, scope: !7255)
!7271 = !DILocation(line: 3319, column: 5, scope: !7199)
!7272 = !DILocation(line: 3322, column: 12, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7274, file: !1, line: 3322, column: 11)
!7274 = distinct !DILexicalBlock(scope: !7194, file: !1, line: 3321, column: 5)
!7275 = !DILocation(line: 3322, column: 20, scope: !7273)
!7276 = !DILocation(line: 3322, column: 34, scope: !7273)
!7277 = !DILocation(line: 3322, column: 11, scope: !7274)
!7278 = !DILocation(line: 3323, column: 38, scope: !7273)
!7279 = !DILocation(line: 3323, column: 55, scope: !7273)
!7280 = !DILocation(line: 3323, column: 68, scope: !7273)
!7281 = !DILocation(line: 3324, column: 11, scope: !7273)
!7282 = !DILocation(line: 3324, column: 24, scope: !7273)
!7283 = !DILocation(line: 3323, column: 17, scope: !7273)
!7284 = !DILocation(line: 3323, column: 15, scope: !7273)
!7285 = !DILocation(line: 3323, column: 9, scope: !7273)
!7286 = !DILocation(line: 3325, column: 12, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7274, file: !1, line: 3325, column: 11)
!7288 = !DILocation(line: 3325, column: 20, scope: !7287)
!7289 = !DILocation(line: 3325, column: 36, scope: !7287)
!7290 = !DILocation(line: 3325, column: 11, scope: !7274)
!7291 = !DILocation(line: 3326, column: 38, scope: !7287)
!7292 = !DILocation(line: 3326, column: 57, scope: !7287)
!7293 = !DILocation(line: 3326, column: 70, scope: !7287)
!7294 = !DILocation(line: 3327, column: 11, scope: !7287)
!7295 = !DILocation(line: 3327, column: 24, scope: !7287)
!7296 = !DILocation(line: 3326, column: 17, scope: !7287)
!7297 = !DILocation(line: 3326, column: 15, scope: !7287)
!7298 = !DILocation(line: 3326, column: 9, scope: !7287)
!7299 = !DILocation(line: 3328, column: 12, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7274, file: !1, line: 3328, column: 11)
!7301 = !DILocation(line: 3328, column: 20, scope: !7300)
!7302 = !DILocation(line: 3328, column: 35, scope: !7300)
!7303 = !DILocation(line: 3328, column: 11, scope: !7274)
!7304 = !DILocation(line: 3329, column: 38, scope: !7300)
!7305 = !DILocation(line: 3329, column: 56, scope: !7300)
!7306 = !DILocation(line: 3329, column: 69, scope: !7300)
!7307 = !DILocation(line: 3330, column: 11, scope: !7300)
!7308 = !DILocation(line: 3330, column: 24, scope: !7300)
!7309 = !DILocation(line: 3329, column: 17, scope: !7300)
!7310 = !DILocation(line: 3329, column: 15, scope: !7300)
!7311 = !DILocation(line: 3329, column: 9, scope: !7300)
!7312 = !DILocation(line: 3331, column: 13, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7274, file: !1, line: 3331, column: 11)
!7314 = !DILocation(line: 3331, column: 21, scope: !7313)
!7315 = !DILocation(line: 3331, column: 39, scope: !7313)
!7316 = !DILocation(line: 3331, column: 45, scope: !7313)
!7317 = !DILocation(line: 3332, column: 12, scope: !7313)
!7318 = !DILocation(line: 3332, column: 19, scope: !7313)
!7319 = !DILocation(line: 3332, column: 25, scope: !7313)
!7320 = !DILocation(line: 3331, column: 11, scope: !7274)
!7321 = !DILocation(line: 3333, column: 38, scope: !7313)
!7322 = !DILocation(line: 3333, column: 59, scope: !7313)
!7323 = !DILocation(line: 3333, column: 72, scope: !7313)
!7324 = !DILocation(line: 3334, column: 11, scope: !7313)
!7325 = !DILocation(line: 3334, column: 24, scope: !7313)
!7326 = !DILocation(line: 3333, column: 17, scope: !7313)
!7327 = !DILocation(line: 3333, column: 15, scope: !7313)
!7328 = !DILocation(line: 3333, column: 9, scope: !7313)
!7329 = !DILocation(line: 3335, column: 13, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7274, file: !1, line: 3335, column: 11)
!7331 = !DILocation(line: 3335, column: 21, scope: !7330)
!7332 = !DILocation(line: 3335, column: 37, scope: !7330)
!7333 = !DILocation(line: 3335, column: 43, scope: !7330)
!7334 = !DILocation(line: 3336, column: 12, scope: !7330)
!7335 = !DILocation(line: 3336, column: 19, scope: !7330)
!7336 = !DILocation(line: 3336, column: 30, scope: !7330)
!7337 = !DILocation(line: 3335, column: 11, scope: !7274)
!7338 = !DILocation(line: 3337, column: 38, scope: !7330)
!7339 = !DILocation(line: 3337, column: 57, scope: !7330)
!7340 = !DILocation(line: 3337, column: 70, scope: !7330)
!7341 = !DILocation(line: 3338, column: 11, scope: !7330)
!7342 = !DILocation(line: 3338, column: 24, scope: !7330)
!7343 = !DILocation(line: 3337, column: 17, scope: !7330)
!7344 = !DILocation(line: 3337, column: 15, scope: !7330)
!7345 = !DILocation(line: 3337, column: 9, scope: !7330)
!7346 = !DILocation(line: 3340, column: 10, scope: !7149)
!7347 = !DILocation(line: 3340, column: 17, scope: !7149)
!7348 = !DILocation(line: 3340, column: 3, scope: !7149)
!7349 = distinct !DISubprogram(name: "LinearStretchImage", scope: !1, file: !1, line: 3371, type: !1284, scopeLine: 3373, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!7350 = !DILocalVariable(name: "image", arg: 1, scope: !7349, file: !1, line: 3371, type: !565)
!7351 = !DILocation(line: 3371, column: 58, scope: !7349)
!7352 = !DILocalVariable(name: "black_point", arg: 2, scope: !7349, file: !1, line: 3372, type: !980)
!7353 = !DILocation(line: 3372, column: 16, scope: !7349)
!7354 = !DILocalVariable(name: "white_point", arg: 3, scope: !7349, file: !1, line: 3372, type: !980)
!7355 = !DILocation(line: 3372, column: 41, scope: !7349)
!7356 = !DILocalVariable(name: "exception", scope: !7349, file: !1, line: 3377, type: !998)
!7357 = !DILocation(line: 3377, column: 6, scope: !7349)
!7358 = !DILocalVariable(name: "status", scope: !7349, file: !1, line: 3380, type: !581)
!7359 = !DILocation(line: 3380, column: 5, scope: !7349)
!7360 = !DILocalVariable(name: "histogram", scope: !7349, file: !1, line: 3383, type: !802)
!7361 = !DILocation(line: 3383, column: 6, scope: !7349)
!7362 = !DILocalVariable(name: "intensity", scope: !7349, file: !1, line: 3384, type: !769)
!7363 = !DILocation(line: 3384, column: 5, scope: !7349)
!7364 = !DILocalVariable(name: "black", scope: !7349, file: !1, line: 3387, type: !615)
!7365 = !DILocation(line: 3387, column: 5, scope: !7349)
!7366 = !DILocalVariable(name: "white", scope: !7349, file: !1, line: 3388, type: !615)
!7367 = !DILocation(line: 3388, column: 5, scope: !7349)
!7368 = !DILocalVariable(name: "y", scope: !7349, file: !1, line: 3389, type: !615)
!7369 = !DILocation(line: 3389, column: 5, scope: !7349)
!7370 = !DILocation(line: 3396, column: 32, scope: !7349)
!7371 = !DILocation(line: 3396, column: 13, scope: !7349)
!7372 = !DILocation(line: 3396, column: 12, scope: !7349)
!7373 = !DILocation(line: 3398, column: 7, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7349, file: !1, line: 3398, column: 7)
!7375 = !DILocation(line: 3398, column: 17, scope: !7374)
!7376 = !DILocation(line: 3398, column: 7, scope: !7349)
!7377 = !DILocation(line: 3399, column: 5, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7379, file: !1, line: 3399, column: 5)
!7379 = distinct !DILexicalBlock(scope: !7374, file: !1, line: 3399, column: 5)
!7380 = !DILocation(line: 3399, column: 5, scope: !7379)
!7381 = !DILocation(line: 3404, column: 28, scope: !7349)
!7382 = !DILocation(line: 3404, column: 10, scope: !7349)
!7383 = !DILocation(line: 3405, column: 15, scope: !7349)
!7384 = !DILocation(line: 3405, column: 22, scope: !7349)
!7385 = !DILocation(line: 3405, column: 12, scope: !7349)
!7386 = !DILocation(line: 3406, column: 9, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7349, file: !1, line: 3406, column: 3)
!7388 = !DILocation(line: 3406, column: 8, scope: !7387)
!7389 = !DILocation(line: 3406, column: 13, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7387, file: !1, line: 3406, column: 3)
!7391 = !DILocation(line: 3406, column: 27, scope: !7390)
!7392 = !DILocation(line: 3406, column: 34, scope: !7390)
!7393 = !DILocation(line: 3406, column: 15, scope: !7390)
!7394 = !DILocation(line: 3406, column: 3, scope: !7387)
!7395 = !DILocalVariable(name: "p", scope: !7396, file: !1, line: 3409, type: !3050)
!7396 = distinct !DILexicalBlock(scope: !7390, file: !1, line: 3407, column: 3)
!7397 = !DILocation(line: 3409, column: 17, scope: !7396)
!7398 = !DILocalVariable(name: "x", scope: !7396, file: !1, line: 3412, type: !615)
!7399 = !DILocation(line: 3412, column: 7, scope: !7396)
!7400 = !DILocation(line: 3414, column: 24, scope: !7396)
!7401 = !DILocation(line: 3414, column: 32, scope: !7396)
!7402 = !DILocation(line: 3414, column: 34, scope: !7396)
!7403 = !DILocation(line: 3414, column: 41, scope: !7396)
!7404 = !DILocation(line: 3414, column: 51, scope: !7396)
!7405 = !DILocation(line: 3414, column: 7, scope: !7396)
!7406 = !DILocation(line: 3414, column: 6, scope: !7396)
!7407 = !DILocation(line: 3415, column: 9, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7396, file: !1, line: 3415, column: 9)
!7409 = !DILocation(line: 3415, column: 11, scope: !7408)
!7410 = !DILocation(line: 3415, column: 9, scope: !7396)
!7411 = !DILocation(line: 3416, column: 7, scope: !7408)
!7412 = !DILocation(line: 3417, column: 22, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7396, file: !1, line: 3417, column: 5)
!7414 = !DILocation(line: 3417, column: 29, scope: !7413)
!7415 = !DILocation(line: 3417, column: 36, scope: !7413)
!7416 = !DILocation(line: 3417, column: 11, scope: !7413)
!7417 = !DILocation(line: 3417, column: 10, scope: !7413)
!7418 = !DILocation(line: 3417, column: 40, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7413, file: !1, line: 3417, column: 5)
!7420 = !DILocation(line: 3417, column: 42, scope: !7419)
!7421 = !DILocation(line: 3417, column: 5, scope: !7413)
!7422 = !DILocation(line: 3419, column: 7, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7419, file: !1, line: 3418, column: 5)
!7424 = !DILocation(line: 3419, column: 68, scope: !7423)
!7425 = !DILocation(line: 3419, column: 74, scope: !7423)
!7426 = !DILocation(line: 3419, column: 50, scope: !7423)
!7427 = !DILocation(line: 3419, column: 35, scope: !7423)
!7428 = !DILocation(line: 3419, column: 17, scope: !7423)
!7429 = !DILocation(line: 3419, column: 79, scope: !7423)
!7430 = !DILocation(line: 3420, column: 8, scope: !7423)
!7431 = !DILocation(line: 3421, column: 5, scope: !7423)
!7432 = !DILocation(line: 3417, column: 49, scope: !7419)
!7433 = !DILocation(line: 3417, column: 5, scope: !7419)
!7434 = distinct !{!7434, !7421, !7435}
!7435 = !DILocation(line: 3421, column: 5, scope: !7413)
!7436 = !DILocation(line: 3422, column: 3, scope: !7396)
!7437 = !DILocation(line: 3406, column: 41, scope: !7390)
!7438 = !DILocation(line: 3406, column: 3, scope: !7390)
!7439 = distinct !{!7439, !7394, !7440}
!7440 = !DILocation(line: 3422, column: 3, scope: !7387)
!7441 = !DILocation(line: 3426, column: 12, scope: !7349)
!7442 = !DILocation(line: 3427, column: 13, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7349, file: !1, line: 3427, column: 3)
!7444 = !DILocation(line: 3427, column: 8, scope: !7443)
!7445 = !DILocation(line: 3427, column: 17, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7443, file: !1, line: 3427, column: 3)
!7447 = !DILocation(line: 3427, column: 23, scope: !7446)
!7448 = !DILocation(line: 3427, column: 3, scope: !7443)
!7449 = !DILocation(line: 3429, column: 16, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7446, file: !1, line: 3428, column: 3)
!7451 = !DILocation(line: 3429, column: 26, scope: !7450)
!7452 = !DILocation(line: 3429, column: 14, scope: !7450)
!7453 = !DILocation(line: 3430, column: 9, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7450, file: !1, line: 3430, column: 9)
!7455 = !DILocation(line: 3430, column: 22, scope: !7454)
!7456 = !DILocation(line: 3430, column: 19, scope: !7454)
!7457 = !DILocation(line: 3430, column: 9, scope: !7450)
!7458 = !DILocation(line: 3431, column: 7, scope: !7454)
!7459 = !DILocation(line: 3432, column: 3, scope: !7450)
!7460 = !DILocation(line: 3427, column: 48, scope: !7446)
!7461 = !DILocation(line: 3427, column: 3, scope: !7446)
!7462 = distinct !{!7462, !7448, !7463}
!7463 = !DILocation(line: 3432, column: 3, scope: !7443)
!7464 = !DILocation(line: 3433, column: 12, scope: !7349)
!7465 = !DILocation(line: 3434, column: 13, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7349, file: !1, line: 3434, column: 3)
!7467 = !DILocation(line: 3434, column: 8, scope: !7466)
!7468 = !DILocation(line: 3434, column: 32, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7466, file: !1, line: 3434, column: 3)
!7470 = !DILocation(line: 3434, column: 38, scope: !7469)
!7471 = !DILocation(line: 3434, column: 3, scope: !7466)
!7472 = !DILocation(line: 3436, column: 16, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7469, file: !1, line: 3435, column: 3)
!7474 = !DILocation(line: 3436, column: 26, scope: !7473)
!7475 = !DILocation(line: 3436, column: 14, scope: !7473)
!7476 = !DILocation(line: 3437, column: 9, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7473, file: !1, line: 3437, column: 9)
!7478 = !DILocation(line: 3437, column: 22, scope: !7477)
!7479 = !DILocation(line: 3437, column: 19, scope: !7477)
!7480 = !DILocation(line: 3437, column: 9, scope: !7473)
!7481 = !DILocation(line: 3438, column: 7, scope: !7477)
!7482 = !DILocation(line: 3439, column: 3, scope: !7473)
!7483 = !DILocation(line: 3434, column: 49, scope: !7469)
!7484 = !DILocation(line: 3434, column: 3, scope: !7469)
!7485 = distinct !{!7485, !7471, !7486}
!7486 = !DILocation(line: 3439, column: 3, scope: !7466)
!7487 = !DILocation(line: 3440, column: 55, scope: !7349)
!7488 = !DILocation(line: 3440, column: 32, scope: !7349)
!7489 = !DILocation(line: 3440, column: 13, scope: !7349)
!7490 = !DILocation(line: 3440, column: 12, scope: !7349)
!7491 = !DILocation(line: 3441, column: 28, scope: !7349)
!7492 = !DILocation(line: 3441, column: 59, scope: !7349)
!7493 = !DILocation(line: 3441, column: 50, scope: !7349)
!7494 = !DILocation(line: 3441, column: 74, scope: !7349)
!7495 = !DILocation(line: 3441, column: 65, scope: !7349)
!7496 = !DILocation(line: 3441, column: 10, scope: !7349)
!7497 = !DILocation(line: 3441, column: 9, scope: !7349)
!7498 = !DILocation(line: 3443, column: 10, scope: !7349)
!7499 = !DILocation(line: 3443, column: 3, scope: !7349)
!7500 = !DILocation(line: 3444, column: 1, scope: !7349)
!7501 = distinct !DISubprogram(name: "ModulateImage", scope: !1, file: !1, line: 3683, type: !1375, scopeLine: 3684, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!7502 = !DILocalVariable(name: "image", arg: 1, scope: !7501, file: !1, line: 3683, type: !565)
!7503 = !DILocation(line: 3683, column: 53, scope: !7501)
!7504 = !DILocalVariable(name: "modulate", arg: 2, scope: !7501, file: !1, line: 3683, type: !547)
!7505 = !DILocation(line: 3683, column: 71, scope: !7501)
!7506 = !DILocalVariable(name: "image_view", scope: !7501, file: !1, line: 3688, type: !992)
!7507 = !DILocation(line: 3688, column: 6, scope: !7501)
!7508 = !DILocalVariable(name: "colorspace", scope: !7501, file: !1, line: 3691, type: !572)
!7509 = !DILocation(line: 3691, column: 5, scope: !7501)
!7510 = !DILocalVariable(name: "artifact", scope: !7501, file: !1, line: 3694, type: !547)
!7511 = !DILocation(line: 3694, column: 6, scope: !7501)
!7512 = !DILocalVariable(name: "percent_brightness", scope: !7501, file: !1, line: 3697, type: !543)
!7513 = !DILocation(line: 3697, column: 5, scope: !7501)
!7514 = !DILocalVariable(name: "percent_hue", scope: !7501, file: !1, line: 3698, type: !543)
!7515 = !DILocation(line: 3698, column: 5, scope: !7501)
!7516 = !DILocalVariable(name: "percent_saturation", scope: !7501, file: !1, line: 3699, type: !543)
!7517 = !DILocation(line: 3699, column: 5, scope: !7501)
!7518 = !DILocalVariable(name: "exception", scope: !7501, file: !1, line: 3702, type: !998)
!7519 = !DILocation(line: 3702, column: 6, scope: !7501)
!7520 = !DILocalVariable(name: "geometry_info", scope: !7501, file: !1, line: 3705, type: !2879)
!7521 = !DILocation(line: 3705, column: 5, scope: !7501)
!7522 = !DILocalVariable(name: "status", scope: !7501, file: !1, line: 3708, type: !581)
!7523 = !DILocation(line: 3708, column: 5, scope: !7501)
!7524 = !DILocalVariable(name: "progress", scope: !7501, file: !1, line: 3711, type: !685)
!7525 = !DILocation(line: 3711, column: 5, scope: !7501)
!7526 = !DILocalVariable(name: "flags", scope: !7501, file: !1, line: 3714, type: !833)
!7527 = !DILocation(line: 3714, column: 5, scope: !7501)
!7528 = !DILocalVariable(name: "i", scope: !7501, file: !1, line: 3717, type: !615)
!7529 = !DILocation(line: 3717, column: 5, scope: !7501)
!7530 = !DILocalVariable(name: "y", scope: !7501, file: !1, line: 3720, type: !615)
!7531 = !DILocation(line: 3720, column: 5, scope: !7501)
!7532 = !DILocation(line: 3727, column: 7, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7501, file: !1, line: 3727, column: 7)
!7534 = !DILocation(line: 3727, column: 14, scope: !7533)
!7535 = !DILocation(line: 3727, column: 20, scope: !7533)
!7536 = !DILocation(line: 3727, column: 7, scope: !7501)
!7537 = !DILocation(line: 3728, column: 61, scope: !7533)
!7538 = !DILocation(line: 3728, column: 68, scope: !7533)
!7539 = !DILocation(line: 3728, column: 12, scope: !7533)
!7540 = !DILocation(line: 3728, column: 5, scope: !7533)
!7541 = !DILocation(line: 3729, column: 7, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7501, file: !1, line: 3729, column: 7)
!7543 = !DILocation(line: 3729, column: 16, scope: !7542)
!7544 = !DILocation(line: 3729, column: 7, scope: !7501)
!7545 = !DILocation(line: 3730, column: 5, scope: !7542)
!7546 = !DILocation(line: 3731, column: 34, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7501, file: !1, line: 3731, column: 7)
!7548 = !DILocation(line: 3731, column: 41, scope: !7547)
!7549 = !DILocation(line: 3731, column: 7, scope: !7547)
!7550 = !DILocation(line: 3731, column: 53, scope: !7547)
!7551 = !DILocation(line: 3731, column: 7, scope: !7501)
!7552 = !DILocation(line: 3732, column: 31, scope: !7547)
!7553 = !DILocation(line: 3732, column: 12, scope: !7547)
!7554 = !DILocation(line: 3732, column: 5, scope: !7547)
!7555 = !DILocation(line: 3733, column: 23, scope: !7501)
!7556 = !DILocation(line: 3733, column: 9, scope: !7501)
!7557 = !DILocation(line: 3733, column: 8, scope: !7501)
!7558 = !DILocation(line: 3734, column: 36, scope: !7501)
!7559 = !DILocation(line: 3734, column: 21, scope: !7501)
!7560 = !DILocation(line: 3735, column: 36, scope: !7501)
!7561 = !DILocation(line: 3735, column: 21, scope: !7501)
!7562 = !DILocation(line: 3736, column: 8, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7501, file: !1, line: 3736, column: 7)
!7564 = !DILocation(line: 3736, column: 14, scope: !7563)
!7565 = !DILocation(line: 3736, column: 28, scope: !7563)
!7566 = !DILocation(line: 3736, column: 7, scope: !7501)
!7567 = !DILocation(line: 3737, column: 23, scope: !7563)
!7568 = !DILocation(line: 3737, column: 5, scope: !7563)
!7569 = !DILocation(line: 3738, column: 29, scope: !7501)
!7570 = !DILocation(line: 3738, column: 14, scope: !7501)
!7571 = !DILocation(line: 3739, column: 8, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7501, file: !1, line: 3739, column: 7)
!7573 = !DILocation(line: 3739, column: 14, scope: !7572)
!7574 = !DILocation(line: 3739, column: 25, scope: !7572)
!7575 = !DILocation(line: 3739, column: 7, scope: !7501)
!7576 = !DILocation(line: 3740, column: 16, scope: !7572)
!7577 = !DILocation(line: 3740, column: 5, scope: !7572)
!7578 = !DILocation(line: 3741, column: 13, scope: !7501)
!7579 = !DILocation(line: 3742, column: 29, scope: !7501)
!7580 = !DILocation(line: 3742, column: 12, scope: !7501)
!7581 = !DILocation(line: 3742, column: 11, scope: !7501)
!7582 = !DILocation(line: 3743, column: 7, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7501, file: !1, line: 3743, column: 7)
!7584 = !DILocation(line: 3743, column: 16, scope: !7583)
!7585 = !DILocation(line: 3743, column: 7, scope: !7501)
!7586 = !DILocation(line: 3745, column: 19, scope: !7583)
!7587 = !DILocation(line: 3744, column: 33, scope: !7583)
!7588 = !DILocation(line: 3744, column: 16, scope: !7583)
!7589 = !DILocation(line: 3744, column: 15, scope: !7583)
!7590 = !DILocation(line: 3744, column: 5, scope: !7583)
!7591 = !DILocation(line: 3746, column: 7, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7501, file: !1, line: 3746, column: 7)
!7593 = !DILocation(line: 3746, column: 14, scope: !7592)
!7594 = !DILocation(line: 3746, column: 28, scope: !7592)
!7595 = !DILocation(line: 3746, column: 7, scope: !7501)
!7596 = !DILocation(line: 3747, column: 11, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7592, file: !1, line: 3747, column: 5)
!7598 = !DILocation(line: 3747, column: 10, scope: !7597)
!7599 = !DILocation(line: 3747, column: 15, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7597, file: !1, line: 3747, column: 5)
!7601 = !DILocation(line: 3747, column: 29, scope: !7600)
!7602 = !DILocation(line: 3747, column: 36, scope: !7600)
!7603 = !DILocation(line: 3747, column: 17, scope: !7600)
!7604 = !DILocation(line: 3747, column: 5, scope: !7597)
!7605 = !DILocalVariable(name: "blue", scope: !7606, file: !1, line: 3750, type: !544)
!7606 = distinct !DILexicalBlock(scope: !7600, file: !1, line: 3748, column: 5)
!7607 = !DILocation(line: 3750, column: 9, scope: !7606)
!7608 = !DILocalVariable(name: "green", scope: !7606, file: !1, line: 3751, type: !544)
!7609 = !DILocation(line: 3751, column: 9, scope: !7606)
!7610 = !DILocalVariable(name: "red", scope: !7606, file: !1, line: 3752, type: !544)
!7611 = !DILocation(line: 3752, column: 9, scope: !7606)
!7612 = !DILocation(line: 3757, column: 11, scope: !7606)
!7613 = !DILocation(line: 3757, column: 18, scope: !7606)
!7614 = !DILocation(line: 3757, column: 27, scope: !7606)
!7615 = !DILocation(line: 3757, column: 30, scope: !7606)
!7616 = !DILocation(line: 3757, column: 10, scope: !7606)
!7617 = !DILocation(line: 3758, column: 13, scope: !7606)
!7618 = !DILocation(line: 3758, column: 20, scope: !7606)
!7619 = !DILocation(line: 3758, column: 29, scope: !7606)
!7620 = !DILocation(line: 3758, column: 32, scope: !7606)
!7621 = !DILocation(line: 3758, column: 12, scope: !7606)
!7622 = !DILocation(line: 3759, column: 12, scope: !7606)
!7623 = !DILocation(line: 3759, column: 19, scope: !7606)
!7624 = !DILocation(line: 3759, column: 28, scope: !7606)
!7625 = !DILocation(line: 3759, column: 31, scope: !7606)
!7626 = !DILocation(line: 3759, column: 11, scope: !7606)
!7627 = !DILocation(line: 3760, column: 15, scope: !7606)
!7628 = !DILocation(line: 3760, column: 7, scope: !7606)
!7629 = !DILocation(line: 3764, column: 23, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7631, file: !1, line: 3763, column: 9)
!7631 = distinct !DILexicalBlock(scope: !7606, file: !1, line: 3761, column: 7)
!7632 = !DILocation(line: 3764, column: 35, scope: !7630)
!7633 = !DILocation(line: 3764, column: 54, scope: !7630)
!7634 = !DILocation(line: 3764, column: 11, scope: !7630)
!7635 = !DILocation(line: 3766, column: 11, scope: !7630)
!7636 = !DILocation(line: 3770, column: 24, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7631, file: !1, line: 3769, column: 9)
!7638 = !DILocation(line: 3770, column: 36, scope: !7637)
!7639 = !DILocation(line: 3770, column: 55, scope: !7637)
!7640 = !DILocation(line: 3770, column: 11, scope: !7637)
!7641 = !DILocation(line: 3772, column: 11, scope: !7637)
!7642 = !DILocation(line: 3776, column: 23, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7631, file: !1, line: 3775, column: 9)
!7644 = !DILocation(line: 3776, column: 35, scope: !7643)
!7645 = !DILocation(line: 3776, column: 54, scope: !7643)
!7646 = !DILocation(line: 3776, column: 11, scope: !7643)
!7647 = !DILocation(line: 3778, column: 11, scope: !7643)
!7648 = !DILocation(line: 3782, column: 23, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7631, file: !1, line: 3781, column: 9)
!7650 = !DILocation(line: 3782, column: 35, scope: !7649)
!7651 = !DILocation(line: 3782, column: 54, scope: !7649)
!7652 = !DILocation(line: 3782, column: 11, scope: !7649)
!7653 = !DILocation(line: 3784, column: 11, scope: !7649)
!7654 = !DILocation(line: 3785, column: 9, scope: !7649)
!7655 = !DILocation(line: 3789, column: 23, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7631, file: !1, line: 3788, column: 9)
!7657 = !DILocation(line: 3789, column: 35, scope: !7656)
!7658 = !DILocation(line: 3789, column: 54, scope: !7656)
!7659 = !DILocation(line: 3789, column: 11, scope: !7656)
!7660 = !DILocation(line: 3791, column: 11, scope: !7656)
!7661 = !DILocation(line: 3795, column: 23, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7631, file: !1, line: 3794, column: 9)
!7663 = !DILocation(line: 3795, column: 35, scope: !7662)
!7664 = !DILocation(line: 3795, column: 54, scope: !7662)
!7665 = !DILocation(line: 3795, column: 11, scope: !7662)
!7666 = !DILocation(line: 3797, column: 11, scope: !7662)
!7667 = !DILocation(line: 3801, column: 23, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7631, file: !1, line: 3800, column: 9)
!7669 = !DILocation(line: 3801, column: 35, scope: !7668)
!7670 = !DILocation(line: 3801, column: 54, scope: !7668)
!7671 = !DILocation(line: 3801, column: 11, scope: !7668)
!7672 = !DILocation(line: 3803, column: 11, scope: !7668)
!7673 = !DILocation(line: 3808, column: 25, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7631, file: !1, line: 3807, column: 9)
!7675 = !DILocation(line: 3808, column: 44, scope: !7674)
!7676 = !DILocation(line: 3808, column: 63, scope: !7674)
!7677 = !DILocation(line: 3808, column: 11, scope: !7674)
!7678 = !DILocation(line: 3810, column: 11, scope: !7674)
!7679 = !DILocation(line: 3814, column: 25, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7631, file: !1, line: 3813, column: 9)
!7681 = !DILocation(line: 3814, column: 44, scope: !7680)
!7682 = !DILocation(line: 3814, column: 63, scope: !7680)
!7683 = !DILocation(line: 3814, column: 11, scope: !7680)
!7684 = !DILocation(line: 3816, column: 11, scope: !7680)
!7685 = !DILocation(line: 3819, column: 30, scope: !7606)
!7686 = !DILocation(line: 3819, column: 7, scope: !7606)
!7687 = !DILocation(line: 3819, column: 14, scope: !7606)
!7688 = !DILocation(line: 3819, column: 23, scope: !7606)
!7689 = !DILocation(line: 3819, column: 26, scope: !7606)
!7690 = !DILocation(line: 3819, column: 29, scope: !7606)
!7691 = !DILocation(line: 3820, column: 32, scope: !7606)
!7692 = !DILocation(line: 3820, column: 7, scope: !7606)
!7693 = !DILocation(line: 3820, column: 14, scope: !7606)
!7694 = !DILocation(line: 3820, column: 23, scope: !7606)
!7695 = !DILocation(line: 3820, column: 26, scope: !7606)
!7696 = !DILocation(line: 3820, column: 31, scope: !7606)
!7697 = !DILocation(line: 3821, column: 31, scope: !7606)
!7698 = !DILocation(line: 3821, column: 7, scope: !7606)
!7699 = !DILocation(line: 3821, column: 14, scope: !7606)
!7700 = !DILocation(line: 3821, column: 23, scope: !7606)
!7701 = !DILocation(line: 3821, column: 26, scope: !7606)
!7702 = !DILocation(line: 3821, column: 30, scope: !7606)
!7703 = !DILocation(line: 3822, column: 5, scope: !7606)
!7704 = !DILocation(line: 3747, column: 45, scope: !7600)
!7705 = !DILocation(line: 3747, column: 5, scope: !7600)
!7706 = distinct !{!7706, !7604, !7707}
!7707 = !DILocation(line: 3822, column: 5, scope: !7597)
!7708 = !DILocation(line: 3829, column: 36, scope: !7501)
!7709 = !DILocation(line: 3829, column: 43, scope: !7501)
!7710 = !DILocation(line: 3829, column: 63, scope: !7501)
!7711 = !DILocation(line: 3829, column: 76, scope: !7501)
!7712 = !DILocation(line: 3829, column: 96, scope: !7501)
!7713 = !DILocation(line: 3829, column: 109, scope: !7501)
!7714 = !DILocation(line: 3829, column: 116, scope: !7501)
!7715 = !DILocation(line: 3829, column: 12, scope: !7501)
!7716 = !DILocation(line: 3829, column: 10, scope: !7501)
!7717 = !DILocation(line: 3830, column: 7, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7501, file: !1, line: 3830, column: 7)
!7719 = !DILocation(line: 3830, column: 14, scope: !7718)
!7720 = !DILocation(line: 3830, column: 7, scope: !7501)
!7721 = !DILocation(line: 3831, column: 12, scope: !7718)
!7722 = !DILocation(line: 3831, column: 5, scope: !7718)
!7723 = !DILocation(line: 3833, column: 9, scope: !7501)
!7724 = !DILocation(line: 3834, column: 11, scope: !7501)
!7725 = !DILocation(line: 3835, column: 15, scope: !7501)
!7726 = !DILocation(line: 3835, column: 22, scope: !7501)
!7727 = !DILocation(line: 3835, column: 12, scope: !7501)
!7728 = !DILocation(line: 3836, column: 40, scope: !7501)
!7729 = !DILocation(line: 3836, column: 46, scope: !7501)
!7730 = !DILocation(line: 3836, column: 14, scope: !7501)
!7731 = !DILocation(line: 3836, column: 13, scope: !7501)
!7732 = !DILocation(line: 3841, column: 9, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7501, file: !1, line: 3841, column: 3)
!7734 = !DILocation(line: 3841, column: 8, scope: !7733)
!7735 = !DILocation(line: 3841, column: 13, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7733, file: !1, line: 3841, column: 3)
!7737 = !DILocation(line: 3841, column: 27, scope: !7736)
!7738 = !DILocation(line: 3841, column: 34, scope: !7736)
!7739 = !DILocation(line: 3841, column: 15, scope: !7736)
!7740 = !DILocation(line: 3841, column: 3, scope: !7733)
!7741 = !DILocalVariable(name: "q", scope: !7742, file: !1, line: 3844, type: !1144)
!7742 = distinct !DILexicalBlock(scope: !7736, file: !1, line: 3842, column: 3)
!7743 = !DILocation(line: 3844, column: 17, scope: !7742)
!7744 = !DILocalVariable(name: "x", scope: !7742, file: !1, line: 3847, type: !615)
!7745 = !DILocation(line: 3847, column: 7, scope: !7742)
!7746 = !DILocation(line: 3849, column: 9, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7742, file: !1, line: 3849, column: 9)
!7748 = !DILocation(line: 3849, column: 16, scope: !7747)
!7749 = !DILocation(line: 3849, column: 9, scope: !7742)
!7750 = !DILocation(line: 3850, column: 7, scope: !7747)
!7751 = !DILocation(line: 3851, column: 35, scope: !7742)
!7752 = !DILocation(line: 3851, column: 48, scope: !7742)
!7753 = !DILocation(line: 3851, column: 50, scope: !7742)
!7754 = !DILocation(line: 3851, column: 57, scope: !7742)
!7755 = !DILocation(line: 3851, column: 67, scope: !7742)
!7756 = !DILocation(line: 3851, column: 7, scope: !7742)
!7757 = !DILocation(line: 3851, column: 6, scope: !7742)
!7758 = !DILocation(line: 3852, column: 9, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7742, file: !1, line: 3852, column: 9)
!7760 = !DILocation(line: 3852, column: 11, scope: !7759)
!7761 = !DILocation(line: 3852, column: 9, scope: !7742)
!7762 = !DILocation(line: 3854, column: 15, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7759, file: !1, line: 3853, column: 7)
!7764 = !DILocation(line: 3855, column: 9, scope: !7763)
!7765 = !DILocation(line: 3857, column: 11, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7742, file: !1, line: 3857, column: 5)
!7767 = !DILocation(line: 3857, column: 10, scope: !7766)
!7768 = !DILocation(line: 3857, column: 15, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7766, file: !1, line: 3857, column: 5)
!7770 = !DILocation(line: 3857, column: 29, scope: !7769)
!7771 = !DILocation(line: 3857, column: 36, scope: !7769)
!7772 = !DILocation(line: 3857, column: 17, scope: !7769)
!7773 = !DILocation(line: 3857, column: 5, scope: !7766)
!7774 = !DILocalVariable(name: "blue", scope: !7775, file: !1, line: 3860, type: !544)
!7775 = distinct !DILexicalBlock(scope: !7769, file: !1, line: 3858, column: 5)
!7776 = !DILocation(line: 3860, column: 9, scope: !7775)
!7777 = !DILocalVariable(name: "green", scope: !7775, file: !1, line: 3861, type: !544)
!7778 = !DILocation(line: 3861, column: 9, scope: !7775)
!7779 = !DILocalVariable(name: "red", scope: !7775, file: !1, line: 3862, type: !544)
!7780 = !DILocation(line: 3862, column: 9, scope: !7775)
!7781 = !DILocation(line: 3864, column: 11, scope: !7775)
!7782 = !DILocation(line: 3864, column: 10, scope: !7775)
!7783 = !DILocation(line: 3865, column: 13, scope: !7775)
!7784 = !DILocation(line: 3865, column: 12, scope: !7775)
!7785 = !DILocation(line: 3866, column: 12, scope: !7775)
!7786 = !DILocation(line: 3866, column: 11, scope: !7775)
!7787 = !DILocation(line: 3867, column: 15, scope: !7775)
!7788 = !DILocation(line: 3867, column: 7, scope: !7775)
!7789 = !DILocation(line: 3871, column: 23, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7791, file: !1, line: 3870, column: 9)
!7791 = distinct !DILexicalBlock(scope: !7775, file: !1, line: 3868, column: 7)
!7792 = !DILocation(line: 3871, column: 35, scope: !7790)
!7793 = !DILocation(line: 3871, column: 54, scope: !7790)
!7794 = !DILocation(line: 3871, column: 11, scope: !7790)
!7795 = !DILocation(line: 3873, column: 11, scope: !7790)
!7796 = !DILocation(line: 3877, column: 24, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7791, file: !1, line: 3876, column: 9)
!7798 = !DILocation(line: 3877, column: 36, scope: !7797)
!7799 = !DILocation(line: 3877, column: 55, scope: !7797)
!7800 = !DILocation(line: 3877, column: 11, scope: !7797)
!7801 = !DILocation(line: 3879, column: 11, scope: !7797)
!7802 = !DILocation(line: 3883, column: 23, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7791, file: !1, line: 3882, column: 9)
!7804 = !DILocation(line: 3883, column: 35, scope: !7803)
!7805 = !DILocation(line: 3883, column: 54, scope: !7803)
!7806 = !DILocation(line: 3883, column: 11, scope: !7803)
!7807 = !DILocation(line: 3885, column: 11, scope: !7803)
!7808 = !DILocation(line: 3886, column: 9, scope: !7803)
!7809 = !DILocation(line: 3890, column: 23, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7791, file: !1, line: 3889, column: 9)
!7811 = !DILocation(line: 3890, column: 35, scope: !7810)
!7812 = !DILocation(line: 3890, column: 54, scope: !7810)
!7813 = !DILocation(line: 3890, column: 11, scope: !7810)
!7814 = !DILocation(line: 3892, column: 11, scope: !7810)
!7815 = !DILocation(line: 3896, column: 23, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7791, file: !1, line: 3895, column: 9)
!7817 = !DILocation(line: 3896, column: 35, scope: !7816)
!7818 = !DILocation(line: 3896, column: 54, scope: !7816)
!7819 = !DILocation(line: 3896, column: 11, scope: !7816)
!7820 = !DILocation(line: 3898, column: 11, scope: !7816)
!7821 = !DILocation(line: 3902, column: 23, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7791, file: !1, line: 3901, column: 9)
!7823 = !DILocation(line: 3902, column: 35, scope: !7822)
!7824 = !DILocation(line: 3902, column: 54, scope: !7822)
!7825 = !DILocation(line: 3902, column: 11, scope: !7822)
!7826 = !DILocation(line: 3904, column: 11, scope: !7822)
!7827 = !DILocation(line: 3908, column: 25, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7791, file: !1, line: 3907, column: 9)
!7829 = !DILocation(line: 3908, column: 44, scope: !7828)
!7830 = !DILocation(line: 3908, column: 63, scope: !7828)
!7831 = !DILocation(line: 3908, column: 11, scope: !7828)
!7832 = !DILocation(line: 3910, column: 11, scope: !7828)
!7833 = !DILocation(line: 3915, column: 25, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !7791, file: !1, line: 3914, column: 9)
!7835 = !DILocation(line: 3915, column: 44, scope: !7834)
!7836 = !DILocation(line: 3915, column: 63, scope: !7834)
!7837 = !DILocation(line: 3915, column: 11, scope: !7834)
!7838 = !DILocation(line: 3917, column: 11, scope: !7834)
!7839 = !DILocation(line: 3920, column: 7, scope: !7775)
!7840 = !DILocation(line: 3921, column: 7, scope: !7775)
!7841 = !DILocation(line: 3922, column: 7, scope: !7775)
!7842 = !DILocation(line: 3923, column: 8, scope: !7775)
!7843 = !DILocation(line: 3924, column: 5, scope: !7775)
!7844 = !DILocation(line: 3857, column: 46, scope: !7769)
!7845 = !DILocation(line: 3857, column: 5, scope: !7769)
!7846 = distinct !{!7846, !7773, !7847}
!7847 = !DILocation(line: 3924, column: 5, scope: !7766)
!7848 = !DILocation(line: 3925, column: 38, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7742, file: !1, line: 3925, column: 9)
!7850 = !DILocation(line: 3925, column: 49, scope: !7849)
!7851 = !DILocation(line: 3925, column: 9, scope: !7849)
!7852 = !DILocation(line: 3925, column: 60, scope: !7849)
!7853 = !DILocation(line: 3925, column: 9, scope: !7742)
!7854 = !DILocation(line: 3926, column: 13, scope: !7849)
!7855 = !DILocation(line: 3926, column: 7, scope: !7849)
!7856 = !DILocation(line: 3927, column: 9, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7742, file: !1, line: 3927, column: 9)
!7858 = !DILocation(line: 3927, column: 16, scope: !7857)
!7859 = !DILocation(line: 3927, column: 33, scope: !7857)
!7860 = !DILocation(line: 3927, column: 9, scope: !7742)
!7861 = !DILocalVariable(name: "proceed", scope: !7862, file: !1, line: 3930, type: !581)
!7862 = distinct !DILexicalBlock(scope: !7857, file: !1, line: 3928, column: 7)
!7863 = !DILocation(line: 3930, column: 11, scope: !7862)
!7864 = !DILocation(line: 3935, column: 34, scope: !7862)
!7865 = !DILocation(line: 3935, column: 65, scope: !7862)
!7866 = !DILocation(line: 3935, column: 68, scope: !7862)
!7867 = !DILocation(line: 3935, column: 75, scope: !7862)
!7868 = !DILocation(line: 3935, column: 17, scope: !7862)
!7869 = !DILocation(line: 3935, column: 16, scope: !7862)
!7870 = !DILocation(line: 3936, column: 13, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7862, file: !1, line: 3936, column: 13)
!7872 = !DILocation(line: 3936, column: 21, scope: !7871)
!7873 = !DILocation(line: 3936, column: 13, scope: !7862)
!7874 = !DILocation(line: 3937, column: 17, scope: !7871)
!7875 = !DILocation(line: 3937, column: 11, scope: !7871)
!7876 = !DILocation(line: 3938, column: 7, scope: !7862)
!7877 = !DILocation(line: 3939, column: 3, scope: !7742)
!7878 = !DILocation(line: 3841, column: 41, scope: !7736)
!7879 = !DILocation(line: 3841, column: 3, scope: !7736)
!7880 = distinct !{!7880, !7740, !7881}
!7881 = !DILocation(line: 3939, column: 3, scope: !7733)
!7882 = !DILocation(line: 3940, column: 31, scope: !7501)
!7883 = !DILocation(line: 3940, column: 14, scope: !7501)
!7884 = !DILocation(line: 3940, column: 13, scope: !7501)
!7885 = !DILocation(line: 3941, column: 10, scope: !7501)
!7886 = !DILocation(line: 3941, column: 3, scope: !7501)
!7887 = !DILocation(line: 3942, column: 1, scope: !7501)
!7888 = distinct !DISubprogram(name: "IssRGBCompatibleColorspace", scope: !2490, file: !2490, line: 109, type: !2491, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!7889 = !DILocalVariable(name: "colorspace", arg: 1, scope: !7888, file: !2490, line: 110, type: !2493)
!7890 = !DILocation(line: 110, column: 24, scope: !7888)
!7891 = !DILocation(line: 112, column: 8, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7888, file: !2490, line: 112, column: 7)
!7893 = !DILocation(line: 112, column: 19, scope: !7892)
!7894 = !DILocation(line: 112, column: 38, scope: !7892)
!7895 = !DILocation(line: 112, column: 42, scope: !7892)
!7896 = !DILocation(line: 112, column: 53, scope: !7892)
!7897 = !DILocation(line: 112, column: 71, scope: !7892)
!7898 = !DILocation(line: 113, column: 8, scope: !7892)
!7899 = !DILocation(line: 113, column: 19, scope: !7892)
!7900 = !DILocation(line: 113, column: 39, scope: !7892)
!7901 = !DILocation(line: 114, column: 8, scope: !7892)
!7902 = !DILocation(line: 114, column: 19, scope: !7892)
!7903 = !DILocation(line: 114, column: 45, scope: !7892)
!7904 = !DILocation(line: 115, column: 25, scope: !7892)
!7905 = !DILocation(line: 115, column: 8, scope: !7892)
!7906 = !DILocation(line: 115, column: 37, scope: !7892)
!7907 = !DILocation(line: 112, column: 7, scope: !7888)
!7908 = !DILocation(line: 116, column: 5, scope: !7892)
!7909 = !DILocation(line: 117, column: 3, scope: !7888)
!7910 = !DILocation(line: 118, column: 1, scope: !7888)
!7911 = distinct !DISubprogram(name: "ModulateHCL", scope: !1, file: !1, line: 3476, type: !7912, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!7912 = !DISubroutineType(types: !7913)
!7913 = !{null, !980, !980, !980, !801, !801, !801}
!7914 = !DILocalVariable(name: "percent_hue", arg: 1, scope: !7911, file: !1, line: 3476, type: !980)
!7915 = !DILocation(line: 3476, column: 45, scope: !7911)
!7916 = !DILocalVariable(name: "percent_chroma", arg: 2, scope: !7911, file: !1, line: 3477, type: !980)
!7917 = !DILocation(line: 3477, column: 16, scope: !7911)
!7918 = !DILocalVariable(name: "percent_luma", arg: 3, scope: !7911, file: !1, line: 3477, type: !980)
!7919 = !DILocation(line: 3477, column: 44, scope: !7911)
!7920 = !DILocalVariable(name: "red", arg: 4, scope: !7911, file: !1, line: 3477, type: !801)
!7921 = !DILocation(line: 3477, column: 66, scope: !7911)
!7922 = !DILocalVariable(name: "green", arg: 5, scope: !7911, file: !1, line: 3478, type: !801)
!7923 = !DILocation(line: 3478, column: 12, scope: !7911)
!7924 = !DILocalVariable(name: "blue", arg: 6, scope: !7911, file: !1, line: 3478, type: !801)
!7925 = !DILocation(line: 3478, column: 27, scope: !7911)
!7926 = !DILocalVariable(name: "hue", scope: !7911, file: !1, line: 3481, type: !543)
!7927 = !DILocation(line: 3481, column: 5, scope: !7911)
!7928 = !DILocalVariable(name: "luma", scope: !7911, file: !1, line: 3482, type: !543)
!7929 = !DILocation(line: 3482, column: 5, scope: !7911)
!7930 = !DILocalVariable(name: "chroma", scope: !7911, file: !1, line: 3483, type: !543)
!7931 = !DILocation(line: 3483, column: 5, scope: !7911)
!7932 = !DILocation(line: 3488, column: 20, scope: !7911)
!7933 = !DILocation(line: 3488, column: 19, scope: !7911)
!7934 = !DILocation(line: 3488, column: 25, scope: !7911)
!7935 = !DILocation(line: 3488, column: 24, scope: !7911)
!7936 = !DILocation(line: 3488, column: 32, scope: !7911)
!7937 = !DILocation(line: 3488, column: 31, scope: !7911)
!7938 = !DILocation(line: 3488, column: 3, scope: !7911)
!7939 = !DILocation(line: 3489, column: 18, scope: !7911)
!7940 = !DILocation(line: 3489, column: 17, scope: !7911)
!7941 = !DILocation(line: 3489, column: 29, scope: !7911)
!7942 = !DILocation(line: 3489, column: 11, scope: !7911)
!7943 = !DILocation(line: 3489, column: 6, scope: !7911)
!7944 = !DILocation(line: 3490, column: 3, scope: !7911)
!7945 = !DILocation(line: 3490, column: 10, scope: !7911)
!7946 = !DILocation(line: 3490, column: 14, scope: !7911)
!7947 = !DILocation(line: 3491, column: 8, scope: !7911)
!7948 = distinct !{!7948, !7944, !7949}
!7949 = !DILocation(line: 3491, column: 10, scope: !7911)
!7950 = !DILocation(line: 3492, column: 3, scope: !7911)
!7951 = !DILocation(line: 3492, column: 10, scope: !7911)
!7952 = !DILocation(line: 3492, column: 14, scope: !7911)
!7953 = !DILocation(line: 3493, column: 8, scope: !7911)
!7954 = distinct !{!7954, !7950, !7955}
!7955 = !DILocation(line: 3493, column: 10, scope: !7911)
!7956 = !DILocation(line: 3494, column: 16, scope: !7911)
!7957 = !DILocation(line: 3494, column: 15, scope: !7911)
!7958 = !DILocation(line: 3494, column: 9, scope: !7911)
!7959 = !DILocation(line: 3495, column: 14, scope: !7911)
!7960 = !DILocation(line: 3495, column: 13, scope: !7911)
!7961 = !DILocation(line: 3495, column: 7, scope: !7911)
!7962 = !DILocation(line: 3496, column: 19, scope: !7911)
!7963 = !DILocation(line: 3496, column: 23, scope: !7911)
!7964 = !DILocation(line: 3496, column: 30, scope: !7911)
!7965 = !DILocation(line: 3496, column: 35, scope: !7911)
!7966 = !DILocation(line: 3496, column: 39, scope: !7911)
!7967 = !DILocation(line: 3496, column: 45, scope: !7911)
!7968 = !DILocation(line: 3496, column: 3, scope: !7911)
!7969 = !DILocation(line: 3497, column: 1, scope: !7911)
!7970 = distinct !DISubprogram(name: "ModulateHCLp", scope: !1, file: !1, line: 3499, type: !7912, scopeLine: 3502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!7971 = !DILocalVariable(name: "percent_hue", arg: 1, scope: !7970, file: !1, line: 3499, type: !980)
!7972 = !DILocation(line: 3499, column: 46, scope: !7970)
!7973 = !DILocalVariable(name: "percent_chroma", arg: 2, scope: !7970, file: !1, line: 3500, type: !980)
!7974 = !DILocation(line: 3500, column: 16, scope: !7970)
!7975 = !DILocalVariable(name: "percent_luma", arg: 3, scope: !7970, file: !1, line: 3500, type: !980)
!7976 = !DILocation(line: 3500, column: 44, scope: !7970)
!7977 = !DILocalVariable(name: "red", arg: 4, scope: !7970, file: !1, line: 3500, type: !801)
!7978 = !DILocation(line: 3500, column: 66, scope: !7970)
!7979 = !DILocalVariable(name: "green", arg: 5, scope: !7970, file: !1, line: 3501, type: !801)
!7980 = !DILocation(line: 3501, column: 12, scope: !7970)
!7981 = !DILocalVariable(name: "blue", arg: 6, scope: !7970, file: !1, line: 3501, type: !801)
!7982 = !DILocation(line: 3501, column: 27, scope: !7970)
!7983 = !DILocalVariable(name: "hue", scope: !7970, file: !1, line: 3504, type: !543)
!7984 = !DILocation(line: 3504, column: 5, scope: !7970)
!7985 = !DILocalVariable(name: "luma", scope: !7970, file: !1, line: 3505, type: !543)
!7986 = !DILocation(line: 3505, column: 5, scope: !7970)
!7987 = !DILocalVariable(name: "chroma", scope: !7970, file: !1, line: 3506, type: !543)
!7988 = !DILocation(line: 3506, column: 5, scope: !7970)
!7989 = !DILocation(line: 3511, column: 21, scope: !7970)
!7990 = !DILocation(line: 3511, column: 20, scope: !7970)
!7991 = !DILocation(line: 3511, column: 26, scope: !7970)
!7992 = !DILocation(line: 3511, column: 25, scope: !7970)
!7993 = !DILocation(line: 3511, column: 33, scope: !7970)
!7994 = !DILocation(line: 3511, column: 32, scope: !7970)
!7995 = !DILocation(line: 3511, column: 3, scope: !7970)
!7996 = !DILocation(line: 3512, column: 18, scope: !7970)
!7997 = !DILocation(line: 3512, column: 17, scope: !7970)
!7998 = !DILocation(line: 3512, column: 29, scope: !7970)
!7999 = !DILocation(line: 3512, column: 11, scope: !7970)
!8000 = !DILocation(line: 3512, column: 6, scope: !7970)
!8001 = !DILocation(line: 3513, column: 3, scope: !7970)
!8002 = !DILocation(line: 3513, column: 10, scope: !7970)
!8003 = !DILocation(line: 3513, column: 14, scope: !7970)
!8004 = !DILocation(line: 3514, column: 8, scope: !7970)
!8005 = distinct !{!8005, !8001, !8006}
!8006 = !DILocation(line: 3514, column: 10, scope: !7970)
!8007 = !DILocation(line: 3515, column: 3, scope: !7970)
!8008 = !DILocation(line: 3515, column: 10, scope: !7970)
!8009 = !DILocation(line: 3515, column: 14, scope: !7970)
!8010 = !DILocation(line: 3516, column: 8, scope: !7970)
!8011 = distinct !{!8011, !8007, !8012}
!8012 = !DILocation(line: 3516, column: 10, scope: !7970)
!8013 = !DILocation(line: 3517, column: 16, scope: !7970)
!8014 = !DILocation(line: 3517, column: 15, scope: !7970)
!8015 = !DILocation(line: 3517, column: 9, scope: !7970)
!8016 = !DILocation(line: 3518, column: 14, scope: !7970)
!8017 = !DILocation(line: 3518, column: 13, scope: !7970)
!8018 = !DILocation(line: 3518, column: 7, scope: !7970)
!8019 = !DILocation(line: 3519, column: 20, scope: !7970)
!8020 = !DILocation(line: 3519, column: 24, scope: !7970)
!8021 = !DILocation(line: 3519, column: 31, scope: !7970)
!8022 = !DILocation(line: 3519, column: 36, scope: !7970)
!8023 = !DILocation(line: 3519, column: 40, scope: !7970)
!8024 = !DILocation(line: 3519, column: 46, scope: !7970)
!8025 = !DILocation(line: 3519, column: 3, scope: !7970)
!8026 = !DILocation(line: 3520, column: 1, scope: !7970)
!8027 = distinct !DISubprogram(name: "ModulateHSB", scope: !1, file: !1, line: 3522, type: !7912, scopeLine: 3525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!8028 = !DILocalVariable(name: "percent_hue", arg: 1, scope: !8027, file: !1, line: 3522, type: !980)
!8029 = !DILocation(line: 3522, column: 45, scope: !8027)
!8030 = !DILocalVariable(name: "percent_saturation", arg: 2, scope: !8027, file: !1, line: 3523, type: !980)
!8031 = !DILocation(line: 3523, column: 16, scope: !8027)
!8032 = !DILocalVariable(name: "percent_brightness", arg: 3, scope: !8027, file: !1, line: 3523, type: !980)
!8033 = !DILocation(line: 3523, column: 48, scope: !8027)
!8034 = !DILocalVariable(name: "red", arg: 4, scope: !8027, file: !1, line: 3524, type: !801)
!8035 = !DILocation(line: 3524, column: 12, scope: !8027)
!8036 = !DILocalVariable(name: "green", arg: 5, scope: !8027, file: !1, line: 3524, type: !801)
!8037 = !DILocation(line: 3524, column: 25, scope: !8027)
!8038 = !DILocalVariable(name: "blue", arg: 6, scope: !8027, file: !1, line: 3524, type: !801)
!8039 = !DILocation(line: 3524, column: 40, scope: !8027)
!8040 = !DILocalVariable(name: "brightness", scope: !8027, file: !1, line: 3527, type: !543)
!8041 = !DILocation(line: 3527, column: 5, scope: !8027)
!8042 = !DILocalVariable(name: "hue", scope: !8027, file: !1, line: 3528, type: !543)
!8043 = !DILocation(line: 3528, column: 5, scope: !8027)
!8044 = !DILocalVariable(name: "saturation", scope: !8027, file: !1, line: 3529, type: !543)
!8045 = !DILocation(line: 3529, column: 5, scope: !8027)
!8046 = !DILocation(line: 3534, column: 20, scope: !8027)
!8047 = !DILocation(line: 3534, column: 19, scope: !8027)
!8048 = !DILocation(line: 3534, column: 25, scope: !8027)
!8049 = !DILocation(line: 3534, column: 24, scope: !8027)
!8050 = !DILocation(line: 3534, column: 32, scope: !8027)
!8051 = !DILocation(line: 3534, column: 31, scope: !8027)
!8052 = !DILocation(line: 3534, column: 3, scope: !8027)
!8053 = !DILocation(line: 3535, column: 18, scope: !8027)
!8054 = !DILocation(line: 3535, column: 17, scope: !8027)
!8055 = !DILocation(line: 3535, column: 29, scope: !8027)
!8056 = !DILocation(line: 3535, column: 11, scope: !8027)
!8057 = !DILocation(line: 3535, column: 6, scope: !8027)
!8058 = !DILocation(line: 3536, column: 3, scope: !8027)
!8059 = !DILocation(line: 3536, column: 10, scope: !8027)
!8060 = !DILocation(line: 3536, column: 14, scope: !8027)
!8061 = !DILocation(line: 3537, column: 8, scope: !8027)
!8062 = distinct !{!8062, !8058, !8063}
!8063 = !DILocation(line: 3537, column: 10, scope: !8027)
!8064 = !DILocation(line: 3538, column: 3, scope: !8027)
!8065 = !DILocation(line: 3538, column: 10, scope: !8027)
!8066 = !DILocation(line: 3538, column: 14, scope: !8027)
!8067 = !DILocation(line: 3539, column: 8, scope: !8027)
!8068 = distinct !{!8068, !8064, !8069}
!8069 = !DILocation(line: 3539, column: 10, scope: !8027)
!8070 = !DILocation(line: 3540, column: 20, scope: !8027)
!8071 = !DILocation(line: 3540, column: 19, scope: !8027)
!8072 = !DILocation(line: 3540, column: 13, scope: !8027)
!8073 = !DILocation(line: 3541, column: 20, scope: !8027)
!8074 = !DILocation(line: 3541, column: 19, scope: !8027)
!8075 = !DILocation(line: 3541, column: 13, scope: !8027)
!8076 = !DILocation(line: 3542, column: 19, scope: !8027)
!8077 = !DILocation(line: 3542, column: 23, scope: !8027)
!8078 = !DILocation(line: 3542, column: 34, scope: !8027)
!8079 = !DILocation(line: 3542, column: 45, scope: !8027)
!8080 = !DILocation(line: 3542, column: 49, scope: !8027)
!8081 = !DILocation(line: 3542, column: 55, scope: !8027)
!8082 = !DILocation(line: 3542, column: 3, scope: !8027)
!8083 = !DILocation(line: 3543, column: 1, scope: !8027)
!8084 = distinct !DISubprogram(name: "ModulateHSI", scope: !1, file: !1, line: 3545, type: !7912, scopeLine: 3548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!8085 = !DILocalVariable(name: "percent_hue", arg: 1, scope: !8084, file: !1, line: 3545, type: !980)
!8086 = !DILocation(line: 3545, column: 45, scope: !8084)
!8087 = !DILocalVariable(name: "percent_saturation", arg: 2, scope: !8084, file: !1, line: 3546, type: !980)
!8088 = !DILocation(line: 3546, column: 16, scope: !8084)
!8089 = !DILocalVariable(name: "percent_intensity", arg: 3, scope: !8084, file: !1, line: 3546, type: !980)
!8090 = !DILocation(line: 3546, column: 48, scope: !8084)
!8091 = !DILocalVariable(name: "red", arg: 4, scope: !8084, file: !1, line: 3547, type: !801)
!8092 = !DILocation(line: 3547, column: 12, scope: !8084)
!8093 = !DILocalVariable(name: "green", arg: 5, scope: !8084, file: !1, line: 3547, type: !801)
!8094 = !DILocation(line: 3547, column: 25, scope: !8084)
!8095 = !DILocalVariable(name: "blue", arg: 6, scope: !8084, file: !1, line: 3547, type: !801)
!8096 = !DILocation(line: 3547, column: 40, scope: !8084)
!8097 = !DILocalVariable(name: "intensity", scope: !8084, file: !1, line: 3550, type: !543)
!8098 = !DILocation(line: 3550, column: 5, scope: !8084)
!8099 = !DILocalVariable(name: "hue", scope: !8084, file: !1, line: 3551, type: !543)
!8100 = !DILocation(line: 3551, column: 5, scope: !8084)
!8101 = !DILocalVariable(name: "saturation", scope: !8084, file: !1, line: 3552, type: !543)
!8102 = !DILocation(line: 3552, column: 5, scope: !8084)
!8103 = !DILocation(line: 3557, column: 20, scope: !8084)
!8104 = !DILocation(line: 3557, column: 19, scope: !8084)
!8105 = !DILocation(line: 3557, column: 25, scope: !8084)
!8106 = !DILocation(line: 3557, column: 24, scope: !8084)
!8107 = !DILocation(line: 3557, column: 32, scope: !8084)
!8108 = !DILocation(line: 3557, column: 31, scope: !8084)
!8109 = !DILocation(line: 3557, column: 3, scope: !8084)
!8110 = !DILocation(line: 3558, column: 18, scope: !8084)
!8111 = !DILocation(line: 3558, column: 17, scope: !8084)
!8112 = !DILocation(line: 3558, column: 29, scope: !8084)
!8113 = !DILocation(line: 3558, column: 11, scope: !8084)
!8114 = !DILocation(line: 3558, column: 6, scope: !8084)
!8115 = !DILocation(line: 3559, column: 3, scope: !8084)
!8116 = !DILocation(line: 3559, column: 10, scope: !8084)
!8117 = !DILocation(line: 3559, column: 14, scope: !8084)
!8118 = !DILocation(line: 3560, column: 8, scope: !8084)
!8119 = distinct !{!8119, !8115, !8120}
!8120 = !DILocation(line: 3560, column: 10, scope: !8084)
!8121 = !DILocation(line: 3561, column: 3, scope: !8084)
!8122 = !DILocation(line: 3561, column: 10, scope: !8084)
!8123 = !DILocation(line: 3561, column: 14, scope: !8084)
!8124 = !DILocation(line: 3562, column: 8, scope: !8084)
!8125 = distinct !{!8125, !8121, !8126}
!8126 = !DILocation(line: 3562, column: 10, scope: !8084)
!8127 = !DILocation(line: 3563, column: 20, scope: !8084)
!8128 = !DILocation(line: 3563, column: 19, scope: !8084)
!8129 = !DILocation(line: 3563, column: 13, scope: !8084)
!8130 = !DILocation(line: 3564, column: 19, scope: !8084)
!8131 = !DILocation(line: 3564, column: 18, scope: !8084)
!8132 = !DILocation(line: 3564, column: 12, scope: !8084)
!8133 = !DILocation(line: 3565, column: 19, scope: !8084)
!8134 = !DILocation(line: 3565, column: 23, scope: !8084)
!8135 = !DILocation(line: 3565, column: 34, scope: !8084)
!8136 = !DILocation(line: 3565, column: 44, scope: !8084)
!8137 = !DILocation(line: 3565, column: 48, scope: !8084)
!8138 = !DILocation(line: 3565, column: 54, scope: !8084)
!8139 = !DILocation(line: 3565, column: 3, scope: !8084)
!8140 = !DILocation(line: 3566, column: 1, scope: !8084)
!8141 = distinct !DISubprogram(name: "ModulateHSL", scope: !1, file: !1, line: 3568, type: !7912, scopeLine: 3571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!8142 = !DILocalVariable(name: "percent_hue", arg: 1, scope: !8141, file: !1, line: 3568, type: !980)
!8143 = !DILocation(line: 3568, column: 45, scope: !8141)
!8144 = !DILocalVariable(name: "percent_saturation", arg: 2, scope: !8141, file: !1, line: 3569, type: !980)
!8145 = !DILocation(line: 3569, column: 16, scope: !8141)
!8146 = !DILocalVariable(name: "percent_lightness", arg: 3, scope: !8141, file: !1, line: 3569, type: !980)
!8147 = !DILocation(line: 3569, column: 48, scope: !8141)
!8148 = !DILocalVariable(name: "red", arg: 4, scope: !8141, file: !1, line: 3570, type: !801)
!8149 = !DILocation(line: 3570, column: 12, scope: !8141)
!8150 = !DILocalVariable(name: "green", arg: 5, scope: !8141, file: !1, line: 3570, type: !801)
!8151 = !DILocation(line: 3570, column: 25, scope: !8141)
!8152 = !DILocalVariable(name: "blue", arg: 6, scope: !8141, file: !1, line: 3570, type: !801)
!8153 = !DILocation(line: 3570, column: 40, scope: !8141)
!8154 = !DILocalVariable(name: "hue", scope: !8141, file: !1, line: 3573, type: !543)
!8155 = !DILocation(line: 3573, column: 5, scope: !8141)
!8156 = !DILocalVariable(name: "lightness", scope: !8141, file: !1, line: 3574, type: !543)
!8157 = !DILocation(line: 3574, column: 5, scope: !8141)
!8158 = !DILocalVariable(name: "saturation", scope: !8141, file: !1, line: 3575, type: !543)
!8159 = !DILocation(line: 3575, column: 5, scope: !8141)
!8160 = !DILocation(line: 3580, column: 20, scope: !8141)
!8161 = !DILocation(line: 3580, column: 19, scope: !8141)
!8162 = !DILocation(line: 3580, column: 25, scope: !8141)
!8163 = !DILocation(line: 3580, column: 24, scope: !8141)
!8164 = !DILocation(line: 3580, column: 32, scope: !8141)
!8165 = !DILocation(line: 3580, column: 31, scope: !8141)
!8166 = !DILocation(line: 3580, column: 3, scope: !8141)
!8167 = !DILocation(line: 3581, column: 18, scope: !8141)
!8168 = !DILocation(line: 3581, column: 17, scope: !8141)
!8169 = !DILocation(line: 3581, column: 29, scope: !8141)
!8170 = !DILocation(line: 3581, column: 11, scope: !8141)
!8171 = !DILocation(line: 3581, column: 6, scope: !8141)
!8172 = !DILocation(line: 3582, column: 3, scope: !8141)
!8173 = !DILocation(line: 3582, column: 10, scope: !8141)
!8174 = !DILocation(line: 3582, column: 14, scope: !8141)
!8175 = !DILocation(line: 3583, column: 8, scope: !8141)
!8176 = distinct !{!8176, !8172, !8177}
!8177 = !DILocation(line: 3583, column: 10, scope: !8141)
!8178 = !DILocation(line: 3584, column: 3, scope: !8141)
!8179 = !DILocation(line: 3584, column: 10, scope: !8141)
!8180 = !DILocation(line: 3584, column: 14, scope: !8141)
!8181 = !DILocation(line: 3585, column: 8, scope: !8141)
!8182 = distinct !{!8182, !8178, !8183}
!8183 = !DILocation(line: 3585, column: 10, scope: !8141)
!8184 = !DILocation(line: 3586, column: 20, scope: !8141)
!8185 = !DILocation(line: 3586, column: 19, scope: !8141)
!8186 = !DILocation(line: 3586, column: 13, scope: !8141)
!8187 = !DILocation(line: 3587, column: 19, scope: !8141)
!8188 = !DILocation(line: 3587, column: 18, scope: !8141)
!8189 = !DILocation(line: 3587, column: 12, scope: !8141)
!8190 = !DILocation(line: 3588, column: 19, scope: !8141)
!8191 = !DILocation(line: 3588, column: 23, scope: !8141)
!8192 = !DILocation(line: 3588, column: 34, scope: !8141)
!8193 = !DILocation(line: 3588, column: 44, scope: !8141)
!8194 = !DILocation(line: 3588, column: 48, scope: !8141)
!8195 = !DILocation(line: 3588, column: 54, scope: !8141)
!8196 = !DILocation(line: 3588, column: 3, scope: !8141)
!8197 = !DILocation(line: 3589, column: 1, scope: !8141)
!8198 = distinct !DISubprogram(name: "ModulateHSV", scope: !1, file: !1, line: 3591, type: !7912, scopeLine: 3594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!8199 = !DILocalVariable(name: "percent_hue", arg: 1, scope: !8198, file: !1, line: 3591, type: !980)
!8200 = !DILocation(line: 3591, column: 45, scope: !8198)
!8201 = !DILocalVariable(name: "percent_saturation", arg: 2, scope: !8198, file: !1, line: 3592, type: !980)
!8202 = !DILocation(line: 3592, column: 16, scope: !8198)
!8203 = !DILocalVariable(name: "percent_value", arg: 3, scope: !8198, file: !1, line: 3592, type: !980)
!8204 = !DILocation(line: 3592, column: 48, scope: !8198)
!8205 = !DILocalVariable(name: "red", arg: 4, scope: !8198, file: !1, line: 3592, type: !801)
!8206 = !DILocation(line: 3592, column: 71, scope: !8198)
!8207 = !DILocalVariable(name: "green", arg: 5, scope: !8198, file: !1, line: 3593, type: !801)
!8208 = !DILocation(line: 3593, column: 12, scope: !8198)
!8209 = !DILocalVariable(name: "blue", arg: 6, scope: !8198, file: !1, line: 3593, type: !801)
!8210 = !DILocation(line: 3593, column: 27, scope: !8198)
!8211 = !DILocalVariable(name: "hue", scope: !8198, file: !1, line: 3596, type: !543)
!8212 = !DILocation(line: 3596, column: 5, scope: !8198)
!8213 = !DILocalVariable(name: "saturation", scope: !8198, file: !1, line: 3597, type: !543)
!8214 = !DILocation(line: 3597, column: 5, scope: !8198)
!8215 = !DILocalVariable(name: "value", scope: !8198, file: !1, line: 3598, type: !543)
!8216 = !DILocation(line: 3598, column: 5, scope: !8198)
!8217 = !DILocation(line: 3603, column: 20, scope: !8198)
!8218 = !DILocation(line: 3603, column: 19, scope: !8198)
!8219 = !DILocation(line: 3603, column: 25, scope: !8198)
!8220 = !DILocation(line: 3603, column: 24, scope: !8198)
!8221 = !DILocation(line: 3603, column: 32, scope: !8198)
!8222 = !DILocation(line: 3603, column: 31, scope: !8198)
!8223 = !DILocation(line: 3603, column: 3, scope: !8198)
!8224 = !DILocation(line: 3604, column: 18, scope: !8198)
!8225 = !DILocation(line: 3604, column: 17, scope: !8198)
!8226 = !DILocation(line: 3604, column: 29, scope: !8198)
!8227 = !DILocation(line: 3604, column: 11, scope: !8198)
!8228 = !DILocation(line: 3604, column: 6, scope: !8198)
!8229 = !DILocation(line: 3605, column: 3, scope: !8198)
!8230 = !DILocation(line: 3605, column: 10, scope: !8198)
!8231 = !DILocation(line: 3605, column: 14, scope: !8198)
!8232 = !DILocation(line: 3606, column: 8, scope: !8198)
!8233 = distinct !{!8233, !8229, !8234}
!8234 = !DILocation(line: 3606, column: 10, scope: !8198)
!8235 = !DILocation(line: 3607, column: 3, scope: !8198)
!8236 = !DILocation(line: 3607, column: 10, scope: !8198)
!8237 = !DILocation(line: 3607, column: 14, scope: !8198)
!8238 = !DILocation(line: 3608, column: 8, scope: !8198)
!8239 = distinct !{!8239, !8235, !8240}
!8240 = !DILocation(line: 3608, column: 10, scope: !8198)
!8241 = !DILocation(line: 3609, column: 20, scope: !8198)
!8242 = !DILocation(line: 3609, column: 19, scope: !8198)
!8243 = !DILocation(line: 3609, column: 13, scope: !8198)
!8244 = !DILocation(line: 3610, column: 15, scope: !8198)
!8245 = !DILocation(line: 3610, column: 14, scope: !8198)
!8246 = !DILocation(line: 3610, column: 8, scope: !8198)
!8247 = !DILocation(line: 3611, column: 19, scope: !8198)
!8248 = !DILocation(line: 3611, column: 23, scope: !8198)
!8249 = !DILocation(line: 3611, column: 34, scope: !8198)
!8250 = !DILocation(line: 3611, column: 40, scope: !8198)
!8251 = !DILocation(line: 3611, column: 44, scope: !8198)
!8252 = !DILocation(line: 3611, column: 50, scope: !8198)
!8253 = !DILocation(line: 3611, column: 3, scope: !8198)
!8254 = !DILocation(line: 3612, column: 1, scope: !8198)
!8255 = distinct !DISubprogram(name: "ModulateHWB", scope: !1, file: !1, line: 3614, type: !7912, scopeLine: 3617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!8256 = !DILocalVariable(name: "percent_hue", arg: 1, scope: !8255, file: !1, line: 3614, type: !980)
!8257 = !DILocation(line: 3614, column: 45, scope: !8255)
!8258 = !DILocalVariable(name: "percent_whiteness", arg: 2, scope: !8255, file: !1, line: 3615, type: !980)
!8259 = !DILocation(line: 3615, column: 16, scope: !8255)
!8260 = !DILocalVariable(name: "percent_blackness", arg: 3, scope: !8255, file: !1, line: 3615, type: !980)
!8261 = !DILocation(line: 3615, column: 47, scope: !8255)
!8262 = !DILocalVariable(name: "red", arg: 4, scope: !8255, file: !1, line: 3615, type: !801)
!8263 = !DILocation(line: 3615, column: 74, scope: !8255)
!8264 = !DILocalVariable(name: "green", arg: 5, scope: !8255, file: !1, line: 3616, type: !801)
!8265 = !DILocation(line: 3616, column: 12, scope: !8255)
!8266 = !DILocalVariable(name: "blue", arg: 6, scope: !8255, file: !1, line: 3616, type: !801)
!8267 = !DILocation(line: 3616, column: 27, scope: !8255)
!8268 = !DILocalVariable(name: "blackness", scope: !8255, file: !1, line: 3619, type: !543)
!8269 = !DILocation(line: 3619, column: 5, scope: !8255)
!8270 = !DILocalVariable(name: "hue", scope: !8255, file: !1, line: 3620, type: !543)
!8271 = !DILocation(line: 3620, column: 5, scope: !8255)
!8272 = !DILocalVariable(name: "whiteness", scope: !8255, file: !1, line: 3621, type: !543)
!8273 = !DILocation(line: 3621, column: 5, scope: !8255)
!8274 = !DILocation(line: 3626, column: 20, scope: !8255)
!8275 = !DILocation(line: 3626, column: 19, scope: !8255)
!8276 = !DILocation(line: 3626, column: 25, scope: !8255)
!8277 = !DILocation(line: 3626, column: 24, scope: !8255)
!8278 = !DILocation(line: 3626, column: 32, scope: !8255)
!8279 = !DILocation(line: 3626, column: 31, scope: !8255)
!8280 = !DILocation(line: 3626, column: 3, scope: !8255)
!8281 = !DILocation(line: 3627, column: 18, scope: !8255)
!8282 = !DILocation(line: 3627, column: 17, scope: !8255)
!8283 = !DILocation(line: 3627, column: 29, scope: !8255)
!8284 = !DILocation(line: 3627, column: 11, scope: !8255)
!8285 = !DILocation(line: 3627, column: 6, scope: !8255)
!8286 = !DILocation(line: 3628, column: 3, scope: !8255)
!8287 = !DILocation(line: 3628, column: 10, scope: !8255)
!8288 = !DILocation(line: 3628, column: 14, scope: !8255)
!8289 = !DILocation(line: 3629, column: 8, scope: !8255)
!8290 = distinct !{!8290, !8286, !8291}
!8291 = !DILocation(line: 3629, column: 10, scope: !8255)
!8292 = !DILocation(line: 3630, column: 3, scope: !8255)
!8293 = !DILocation(line: 3630, column: 10, scope: !8255)
!8294 = !DILocation(line: 3630, column: 14, scope: !8255)
!8295 = !DILocation(line: 3631, column: 8, scope: !8255)
!8296 = distinct !{!8296, !8292, !8297}
!8297 = !DILocation(line: 3631, column: 10, scope: !8255)
!8298 = !DILocation(line: 3632, column: 19, scope: !8255)
!8299 = !DILocation(line: 3632, column: 18, scope: !8255)
!8300 = !DILocation(line: 3632, column: 12, scope: !8255)
!8301 = !DILocation(line: 3633, column: 19, scope: !8255)
!8302 = !DILocation(line: 3633, column: 18, scope: !8255)
!8303 = !DILocation(line: 3633, column: 12, scope: !8255)
!8304 = !DILocation(line: 3634, column: 19, scope: !8255)
!8305 = !DILocation(line: 3634, column: 23, scope: !8255)
!8306 = !DILocation(line: 3634, column: 33, scope: !8255)
!8307 = !DILocation(line: 3634, column: 43, scope: !8255)
!8308 = !DILocation(line: 3634, column: 47, scope: !8255)
!8309 = !DILocation(line: 3634, column: 53, scope: !8255)
!8310 = !DILocation(line: 3634, column: 3, scope: !8255)
!8311 = !DILocation(line: 3635, column: 1, scope: !8255)
!8312 = distinct !DISubprogram(name: "ModulateLCHab", scope: !1, file: !1, line: 3637, type: !7912, scopeLine: 3640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!8313 = !DILocalVariable(name: "percent_luma", arg: 1, scope: !8312, file: !1, line: 3637, type: !980)
!8314 = !DILocation(line: 3637, column: 47, scope: !8312)
!8315 = !DILocalVariable(name: "percent_chroma", arg: 2, scope: !8312, file: !1, line: 3638, type: !980)
!8316 = !DILocation(line: 3638, column: 16, scope: !8312)
!8317 = !DILocalVariable(name: "percent_hue", arg: 3, scope: !8312, file: !1, line: 3638, type: !980)
!8318 = !DILocation(line: 3638, column: 44, scope: !8312)
!8319 = !DILocalVariable(name: "red", arg: 4, scope: !8312, file: !1, line: 3638, type: !801)
!8320 = !DILocation(line: 3638, column: 65, scope: !8312)
!8321 = !DILocalVariable(name: "green", arg: 5, scope: !8312, file: !1, line: 3639, type: !801)
!8322 = !DILocation(line: 3639, column: 12, scope: !8312)
!8323 = !DILocalVariable(name: "blue", arg: 6, scope: !8312, file: !1, line: 3639, type: !801)
!8324 = !DILocation(line: 3639, column: 27, scope: !8312)
!8325 = !DILocalVariable(name: "hue", scope: !8312, file: !1, line: 3642, type: !543)
!8326 = !DILocation(line: 3642, column: 5, scope: !8312)
!8327 = !DILocalVariable(name: "luma", scope: !8312, file: !1, line: 3643, type: !543)
!8328 = !DILocation(line: 3643, column: 5, scope: !8312)
!8329 = !DILocalVariable(name: "chroma", scope: !8312, file: !1, line: 3644, type: !543)
!8330 = !DILocation(line: 3644, column: 5, scope: !8312)
!8331 = !DILocation(line: 3649, column: 22, scope: !8312)
!8332 = !DILocation(line: 3649, column: 21, scope: !8312)
!8333 = !DILocation(line: 3649, column: 27, scope: !8312)
!8334 = !DILocation(line: 3649, column: 26, scope: !8312)
!8335 = !DILocation(line: 3649, column: 34, scope: !8312)
!8336 = !DILocation(line: 3649, column: 33, scope: !8312)
!8337 = !DILocation(line: 3649, column: 3, scope: !8312)
!8338 = !DILocation(line: 3650, column: 14, scope: !8312)
!8339 = !DILocation(line: 3650, column: 13, scope: !8312)
!8340 = !DILocation(line: 3650, column: 7, scope: !8312)
!8341 = !DILocation(line: 3651, column: 16, scope: !8312)
!8342 = !DILocation(line: 3651, column: 15, scope: !8312)
!8343 = !DILocation(line: 3651, column: 9, scope: !8312)
!8344 = !DILocation(line: 3652, column: 18, scope: !8312)
!8345 = !DILocation(line: 3652, column: 17, scope: !8312)
!8346 = !DILocation(line: 3652, column: 29, scope: !8312)
!8347 = !DILocation(line: 3652, column: 11, scope: !8312)
!8348 = !DILocation(line: 3652, column: 6, scope: !8312)
!8349 = !DILocation(line: 3653, column: 3, scope: !8312)
!8350 = !DILocation(line: 3653, column: 10, scope: !8312)
!8351 = !DILocation(line: 3653, column: 14, scope: !8312)
!8352 = !DILocation(line: 3654, column: 8, scope: !8312)
!8353 = distinct !{!8353, !8349, !8354}
!8354 = !DILocation(line: 3654, column: 10, scope: !8312)
!8355 = !DILocation(line: 3655, column: 3, scope: !8312)
!8356 = !DILocation(line: 3655, column: 10, scope: !8312)
!8357 = !DILocation(line: 3655, column: 14, scope: !8312)
!8358 = !DILocation(line: 3656, column: 8, scope: !8312)
!8359 = distinct !{!8359, !8355, !8360}
!8360 = !DILocation(line: 3656, column: 10, scope: !8312)
!8361 = !DILocation(line: 3657, column: 21, scope: !8312)
!8362 = !DILocation(line: 3657, column: 26, scope: !8312)
!8363 = !DILocation(line: 3657, column: 33, scope: !8312)
!8364 = !DILocation(line: 3657, column: 37, scope: !8312)
!8365 = !DILocation(line: 3657, column: 41, scope: !8312)
!8366 = !DILocation(line: 3657, column: 47, scope: !8312)
!8367 = !DILocation(line: 3657, column: 3, scope: !8312)
!8368 = !DILocation(line: 3658, column: 1, scope: !8312)
!8369 = distinct !DISubprogram(name: "ModulateLCHuv", scope: !1, file: !1, line: 3660, type: !7912, scopeLine: 3663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!8370 = !DILocalVariable(name: "percent_luma", arg: 1, scope: !8369, file: !1, line: 3660, type: !980)
!8371 = !DILocation(line: 3660, column: 47, scope: !8369)
!8372 = !DILocalVariable(name: "percent_chroma", arg: 2, scope: !8369, file: !1, line: 3661, type: !980)
!8373 = !DILocation(line: 3661, column: 16, scope: !8369)
!8374 = !DILocalVariable(name: "percent_hue", arg: 3, scope: !8369, file: !1, line: 3661, type: !980)
!8375 = !DILocation(line: 3661, column: 44, scope: !8369)
!8376 = !DILocalVariable(name: "red", arg: 4, scope: !8369, file: !1, line: 3661, type: !801)
!8377 = !DILocation(line: 3661, column: 65, scope: !8369)
!8378 = !DILocalVariable(name: "green", arg: 5, scope: !8369, file: !1, line: 3662, type: !801)
!8379 = !DILocation(line: 3662, column: 12, scope: !8369)
!8380 = !DILocalVariable(name: "blue", arg: 6, scope: !8369, file: !1, line: 3662, type: !801)
!8381 = !DILocation(line: 3662, column: 27, scope: !8369)
!8382 = !DILocalVariable(name: "hue", scope: !8369, file: !1, line: 3665, type: !543)
!8383 = !DILocation(line: 3665, column: 5, scope: !8369)
!8384 = !DILocalVariable(name: "luma", scope: !8369, file: !1, line: 3666, type: !543)
!8385 = !DILocation(line: 3666, column: 5, scope: !8369)
!8386 = !DILocalVariable(name: "chroma", scope: !8369, file: !1, line: 3667, type: !543)
!8387 = !DILocation(line: 3667, column: 5, scope: !8369)
!8388 = !DILocation(line: 3672, column: 22, scope: !8369)
!8389 = !DILocation(line: 3672, column: 21, scope: !8369)
!8390 = !DILocation(line: 3672, column: 27, scope: !8369)
!8391 = !DILocation(line: 3672, column: 26, scope: !8369)
!8392 = !DILocation(line: 3672, column: 34, scope: !8369)
!8393 = !DILocation(line: 3672, column: 33, scope: !8369)
!8394 = !DILocation(line: 3672, column: 3, scope: !8369)
!8395 = !DILocation(line: 3673, column: 14, scope: !8369)
!8396 = !DILocation(line: 3673, column: 13, scope: !8369)
!8397 = !DILocation(line: 3673, column: 7, scope: !8369)
!8398 = !DILocation(line: 3674, column: 16, scope: !8369)
!8399 = !DILocation(line: 3674, column: 15, scope: !8369)
!8400 = !DILocation(line: 3674, column: 9, scope: !8369)
!8401 = !DILocation(line: 3675, column: 18, scope: !8369)
!8402 = !DILocation(line: 3675, column: 17, scope: !8369)
!8403 = !DILocation(line: 3675, column: 29, scope: !8369)
!8404 = !DILocation(line: 3675, column: 11, scope: !8369)
!8405 = !DILocation(line: 3675, column: 6, scope: !8369)
!8406 = !DILocation(line: 3676, column: 3, scope: !8369)
!8407 = !DILocation(line: 3676, column: 10, scope: !8369)
!8408 = !DILocation(line: 3676, column: 14, scope: !8369)
!8409 = !DILocation(line: 3677, column: 8, scope: !8369)
!8410 = distinct !{!8410, !8406, !8411}
!8411 = !DILocation(line: 3677, column: 10, scope: !8369)
!8412 = !DILocation(line: 3678, column: 3, scope: !8369)
!8413 = !DILocation(line: 3678, column: 10, scope: !8369)
!8414 = !DILocation(line: 3678, column: 14, scope: !8369)
!8415 = !DILocation(line: 3679, column: 8, scope: !8369)
!8416 = distinct !{!8416, !8412, !8417}
!8417 = !DILocation(line: 3679, column: 10, scope: !8369)
!8418 = !DILocation(line: 3680, column: 21, scope: !8369)
!8419 = !DILocation(line: 3680, column: 26, scope: !8369)
!8420 = !DILocation(line: 3680, column: 33, scope: !8369)
!8421 = !DILocation(line: 3680, column: 37, scope: !8369)
!8422 = !DILocation(line: 3680, column: 41, scope: !8369)
!8423 = !DILocation(line: 3680, column: 47, scope: !8369)
!8424 = !DILocation(line: 3680, column: 3, scope: !8369)
!8425 = !DILocation(line: 3681, column: 1, scope: !8369)
!8426 = distinct !DISubprogram(name: "NegateImage", scope: !1, file: !1, line: 3975, type: !2615, scopeLine: 3977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!8427 = !DILocalVariable(name: "image", arg: 1, scope: !8426, file: !1, line: 3975, type: !565)
!8428 = !DILocation(line: 3975, column: 51, scope: !8426)
!8429 = !DILocalVariable(name: "grayscale", arg: 2, scope: !8426, file: !1, line: 3976, type: !2617)
!8430 = !DILocation(line: 3976, column: 27, scope: !8426)
!8431 = !DILocalVariable(name: "status", scope: !8426, file: !1, line: 3979, type: !581)
!8432 = !DILocation(line: 3979, column: 5, scope: !8426)
!8433 = !DILocation(line: 3981, column: 29, scope: !8426)
!8434 = !DILocation(line: 3981, column: 51, scope: !8426)
!8435 = !DILocation(line: 3981, column: 10, scope: !8426)
!8436 = !DILocation(line: 3981, column: 9, scope: !8426)
!8437 = !DILocation(line: 3982, column: 10, scope: !8426)
!8438 = !DILocation(line: 3982, column: 3, scope: !8426)
!8439 = distinct !DISubprogram(name: "NegateImageChannel", scope: !1, file: !1, line: 3985, type: !8440, scopeLine: 3987, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!8440 = !DISubroutineType(types: !8441)
!8441 = !{!581, !565, !819, !2617}
!8442 = !DILocalVariable(name: "image", arg: 1, scope: !8439, file: !1, line: 3985, type: !565)
!8443 = !DILocation(line: 3985, column: 58, scope: !8439)
!8444 = !DILocalVariable(name: "channel", arg: 2, scope: !8439, file: !1, line: 3986, type: !819)
!8445 = !DILocation(line: 3986, column: 21, scope: !8439)
!8446 = !DILocalVariable(name: "grayscale", arg: 3, scope: !8439, file: !1, line: 3986, type: !2617)
!8447 = !DILocation(line: 3986, column: 53, scope: !8439)
!8448 = !DILocalVariable(name: "image_view", scope: !8439, file: !1, line: 3991, type: !992)
!8449 = !DILocation(line: 3991, column: 6, scope: !8439)
!8450 = !DILocalVariable(name: "exception", scope: !8439, file: !1, line: 3994, type: !998)
!8451 = !DILocation(line: 3994, column: 6, scope: !8439)
!8452 = !DILocalVariable(name: "status", scope: !8439, file: !1, line: 3997, type: !581)
!8453 = !DILocation(line: 3997, column: 5, scope: !8439)
!8454 = !DILocalVariable(name: "progress", scope: !8439, file: !1, line: 4000, type: !685)
!8455 = !DILocation(line: 4000, column: 5, scope: !8439)
!8456 = !DILocalVariable(name: "i", scope: !8439, file: !1, line: 4003, type: !615)
!8457 = !DILocation(line: 4003, column: 5, scope: !8439)
!8458 = !DILocalVariable(name: "y", scope: !8439, file: !1, line: 4006, type: !615)
!8459 = !DILocation(line: 4006, column: 5, scope: !8439)
!8460 = !DILocation(line: 4010, column: 7, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8439, file: !1, line: 4010, column: 7)
!8462 = !DILocation(line: 4010, column: 14, scope: !8461)
!8463 = !DILocation(line: 4010, column: 20, scope: !8461)
!8464 = !DILocation(line: 4010, column: 7, scope: !8439)
!8465 = !DILocation(line: 4011, column: 61, scope: !8461)
!8466 = !DILocation(line: 4011, column: 68, scope: !8461)
!8467 = !DILocation(line: 4011, column: 12, scope: !8461)
!8468 = !DILocation(line: 4011, column: 5, scope: !8461)
!8469 = !DILocation(line: 4012, column: 7, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8439, file: !1, line: 4012, column: 7)
!8471 = !DILocation(line: 4012, column: 14, scope: !8470)
!8472 = !DILocation(line: 4012, column: 28, scope: !8470)
!8473 = !DILocation(line: 4012, column: 7, scope: !8439)
!8474 = !DILocation(line: 4017, column: 13, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8476, file: !1, line: 4017, column: 7)
!8476 = distinct !DILexicalBlock(scope: !8470, file: !1, line: 4013, column: 5)
!8477 = !DILocation(line: 4017, column: 12, scope: !8475)
!8478 = !DILocation(line: 4017, column: 17, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8475, file: !1, line: 4017, column: 7)
!8480 = !DILocation(line: 4017, column: 31, scope: !8479)
!8481 = !DILocation(line: 4017, column: 38, scope: !8479)
!8482 = !DILocation(line: 4017, column: 19, scope: !8479)
!8483 = !DILocation(line: 4017, column: 7, scope: !8475)
!8484 = !DILocation(line: 4019, column: 13, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8486, file: !1, line: 4019, column: 13)
!8486 = distinct !DILexicalBlock(scope: !8479, file: !1, line: 4018, column: 7)
!8487 = !DILocation(line: 4019, column: 23, scope: !8485)
!8488 = !DILocation(line: 4019, column: 13, scope: !8486)
!8489 = !DILocation(line: 4020, column: 16, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8485, file: !1, line: 4020, column: 15)
!8491 = !DILocation(line: 4020, column: 23, scope: !8490)
!8492 = !DILocation(line: 4020, column: 32, scope: !8490)
!8493 = !DILocation(line: 4020, column: 35, scope: !8490)
!8494 = !DILocation(line: 4020, column: 42, scope: !8490)
!8495 = !DILocation(line: 4020, column: 49, scope: !8490)
!8496 = !DILocation(line: 4020, column: 58, scope: !8490)
!8497 = !DILocation(line: 4020, column: 61, scope: !8490)
!8498 = !DILocation(line: 4020, column: 39, scope: !8490)
!8499 = !DILocation(line: 4020, column: 68, scope: !8490)
!8500 = !DILocation(line: 4021, column: 16, scope: !8490)
!8501 = !DILocation(line: 4021, column: 23, scope: !8490)
!8502 = !DILocation(line: 4021, column: 32, scope: !8490)
!8503 = !DILocation(line: 4021, column: 35, scope: !8490)
!8504 = !DILocation(line: 4021, column: 44, scope: !8490)
!8505 = !DILocation(line: 4021, column: 51, scope: !8490)
!8506 = !DILocation(line: 4021, column: 60, scope: !8490)
!8507 = !DILocation(line: 4021, column: 63, scope: !8490)
!8508 = !DILocation(line: 4021, column: 41, scope: !8490)
!8509 = !DILocation(line: 4020, column: 15, scope: !8485)
!8510 = !DILocation(line: 4022, column: 13, scope: !8490)
!8511 = !DILocation(line: 4021, column: 67, scope: !8490)
!8512 = !DILocation(line: 4023, column: 14, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8486, file: !1, line: 4023, column: 13)
!8514 = !DILocation(line: 4023, column: 22, scope: !8513)
!8515 = !DILocation(line: 4023, column: 36, scope: !8513)
!8516 = !DILocation(line: 4023, column: 13, scope: !8486)
!8517 = !DILocation(line: 4024, column: 47, scope: !8513)
!8518 = !DILocation(line: 4024, column: 54, scope: !8513)
!8519 = !DILocation(line: 4024, column: 63, scope: !8513)
!8520 = !DILocation(line: 4024, column: 66, scope: !8513)
!8521 = !DILocation(line: 4024, column: 46, scope: !8513)
!8522 = !DILocation(line: 4024, column: 34, scope: !8513)
!8523 = !DILocation(line: 4024, column: 11, scope: !8513)
!8524 = !DILocation(line: 4024, column: 18, scope: !8513)
!8525 = !DILocation(line: 4024, column: 27, scope: !8513)
!8526 = !DILocation(line: 4024, column: 30, scope: !8513)
!8527 = !DILocation(line: 4024, column: 33, scope: !8513)
!8528 = !DILocation(line: 4025, column: 14, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8486, file: !1, line: 4025, column: 13)
!8530 = !DILocation(line: 4025, column: 22, scope: !8529)
!8531 = !DILocation(line: 4025, column: 38, scope: !8529)
!8532 = !DILocation(line: 4025, column: 13, scope: !8486)
!8533 = !DILocation(line: 4026, column: 49, scope: !8529)
!8534 = !DILocation(line: 4026, column: 56, scope: !8529)
!8535 = !DILocation(line: 4026, column: 65, scope: !8529)
!8536 = !DILocation(line: 4026, column: 68, scope: !8529)
!8537 = !DILocation(line: 4026, column: 48, scope: !8529)
!8538 = !DILocation(line: 4026, column: 36, scope: !8529)
!8539 = !DILocation(line: 4026, column: 11, scope: !8529)
!8540 = !DILocation(line: 4026, column: 18, scope: !8529)
!8541 = !DILocation(line: 4026, column: 27, scope: !8529)
!8542 = !DILocation(line: 4026, column: 30, scope: !8529)
!8543 = !DILocation(line: 4026, column: 35, scope: !8529)
!8544 = !DILocation(line: 4027, column: 14, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8486, file: !1, line: 4027, column: 13)
!8546 = !DILocation(line: 4027, column: 22, scope: !8545)
!8547 = !DILocation(line: 4027, column: 37, scope: !8545)
!8548 = !DILocation(line: 4027, column: 13, scope: !8486)
!8549 = !DILocation(line: 4028, column: 48, scope: !8545)
!8550 = !DILocation(line: 4028, column: 55, scope: !8545)
!8551 = !DILocation(line: 4028, column: 64, scope: !8545)
!8552 = !DILocation(line: 4028, column: 67, scope: !8545)
!8553 = !DILocation(line: 4028, column: 47, scope: !8545)
!8554 = !DILocation(line: 4028, column: 35, scope: !8545)
!8555 = !DILocation(line: 4028, column: 11, scope: !8545)
!8556 = !DILocation(line: 4028, column: 18, scope: !8545)
!8557 = !DILocation(line: 4028, column: 27, scope: !8545)
!8558 = !DILocation(line: 4028, column: 30, scope: !8545)
!8559 = !DILocation(line: 4028, column: 34, scope: !8545)
!8560 = !DILocation(line: 4029, column: 7, scope: !8486)
!8561 = !DILocation(line: 4017, column: 47, scope: !8479)
!8562 = !DILocation(line: 4017, column: 7, scope: !8479)
!8563 = distinct !{!8563, !8483, !8564}
!8564 = !DILocation(line: 4029, column: 7, scope: !8475)
!8565 = !DILocation(line: 4030, column: 5, scope: !8476)
!8566 = !DILocation(line: 4037, column: 41, scope: !8439)
!8567 = !DILocation(line: 4037, column: 48, scope: !8439)
!8568 = !DILocation(line: 4037, column: 57, scope: !8439)
!8569 = !DILocation(line: 4037, column: 69, scope: !8439)
!8570 = !DILocation(line: 4037, column: 76, scope: !8439)
!8571 = !DILocation(line: 4037, column: 12, scope: !8439)
!8572 = !DILocation(line: 4037, column: 10, scope: !8439)
!8573 = !DILocation(line: 4038, column: 7, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8439, file: !1, line: 4038, column: 7)
!8575 = !DILocation(line: 4038, column: 14, scope: !8574)
!8576 = !DILocation(line: 4038, column: 7, scope: !8439)
!8577 = !DILocation(line: 4039, column: 12, scope: !8574)
!8578 = !DILocation(line: 4039, column: 5, scope: !8574)
!8579 = !DILocation(line: 4041, column: 9, scope: !8439)
!8580 = !DILocation(line: 4042, column: 11, scope: !8439)
!8581 = !DILocation(line: 4043, column: 15, scope: !8439)
!8582 = !DILocation(line: 4043, column: 22, scope: !8439)
!8583 = !DILocation(line: 4043, column: 12, scope: !8439)
!8584 = !DILocation(line: 4044, column: 40, scope: !8439)
!8585 = !DILocation(line: 4044, column: 46, scope: !8439)
!8586 = !DILocation(line: 4044, column: 14, scope: !8439)
!8587 = !DILocation(line: 4044, column: 13, scope: !8439)
!8588 = !DILocation(line: 4045, column: 7, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8439, file: !1, line: 4045, column: 7)
!8590 = !DILocation(line: 4045, column: 17, scope: !8589)
!8591 = !DILocation(line: 4045, column: 7, scope: !8439)
!8592 = !DILocation(line: 4051, column: 13, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8594, file: !1, line: 4051, column: 7)
!8594 = distinct !DILexicalBlock(scope: !8589, file: !1, line: 4046, column: 5)
!8595 = !DILocation(line: 4051, column: 12, scope: !8593)
!8596 = !DILocation(line: 4051, column: 17, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8593, file: !1, line: 4051, column: 7)
!8598 = !DILocation(line: 4051, column: 31, scope: !8597)
!8599 = !DILocation(line: 4051, column: 38, scope: !8597)
!8600 = !DILocation(line: 4051, column: 19, scope: !8597)
!8601 = !DILocation(line: 4051, column: 7, scope: !8593)
!8602 = !DILocalVariable(name: "sync", scope: !8603, file: !1, line: 4054, type: !581)
!8603 = distinct !DILexicalBlock(scope: !8597, file: !1, line: 4052, column: 7)
!8604 = !DILocation(line: 4054, column: 11, scope: !8603)
!8605 = !DILocalVariable(name: "indexes", scope: !8603, file: !1, line: 4057, type: !1141)
!8606 = !DILocation(line: 4057, column: 21, scope: !8603)
!8607 = !DILocalVariable(name: "q", scope: !8603, file: !1, line: 4060, type: !1144)
!8608 = !DILocation(line: 4060, column: 21, scope: !8603)
!8609 = !DILocalVariable(name: "x", scope: !8603, file: !1, line: 4063, type: !615)
!8610 = !DILocation(line: 4063, column: 11, scope: !8603)
!8611 = !DILocation(line: 4065, column: 13, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8603, file: !1, line: 4065, column: 13)
!8613 = !DILocation(line: 4065, column: 20, scope: !8612)
!8614 = !DILocation(line: 4065, column: 13, scope: !8603)
!8615 = !DILocation(line: 4066, column: 11, scope: !8612)
!8616 = !DILocation(line: 4067, column: 39, scope: !8603)
!8617 = !DILocation(line: 4067, column: 52, scope: !8603)
!8618 = !DILocation(line: 4067, column: 54, scope: !8603)
!8619 = !DILocation(line: 4067, column: 61, scope: !8603)
!8620 = !DILocation(line: 4068, column: 11, scope: !8603)
!8621 = !DILocation(line: 4067, column: 11, scope: !8603)
!8622 = !DILocation(line: 4067, column: 10, scope: !8603)
!8623 = !DILocation(line: 4069, column: 13, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8603, file: !1, line: 4069, column: 13)
!8625 = !DILocation(line: 4069, column: 15, scope: !8624)
!8626 = !DILocation(line: 4069, column: 13, scope: !8603)
!8627 = !DILocation(line: 4071, column: 19, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8624, file: !1, line: 4070, column: 11)
!8629 = !DILocation(line: 4072, column: 13, scope: !8628)
!8630 = !DILocation(line: 4074, column: 49, scope: !8603)
!8631 = !DILocation(line: 4074, column: 17, scope: !8603)
!8632 = !DILocation(line: 4074, column: 16, scope: !8603)
!8633 = !DILocation(line: 4075, column: 15, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8603, file: !1, line: 4075, column: 9)
!8635 = !DILocation(line: 4075, column: 14, scope: !8634)
!8636 = !DILocation(line: 4075, column: 19, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8634, file: !1, line: 4075, column: 9)
!8638 = !DILocation(line: 4075, column: 33, scope: !8637)
!8639 = !DILocation(line: 4075, column: 40, scope: !8637)
!8640 = !DILocation(line: 4075, column: 21, scope: !8637)
!8641 = !DILocation(line: 4075, column: 9, scope: !8634)
!8642 = !DILocation(line: 4077, column: 16, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8644, file: !1, line: 4077, column: 15)
!8644 = distinct !DILexicalBlock(scope: !8637, file: !1, line: 4076, column: 9)
!8645 = !DILocation(line: 4077, column: 34, scope: !8643)
!8646 = !DILocation(line: 4077, column: 31, scope: !8643)
!8647 = !DILocation(line: 4077, column: 52, scope: !8643)
!8648 = !DILocation(line: 4078, column: 16, scope: !8643)
!8649 = !DILocation(line: 4078, column: 36, scope: !8643)
!8650 = !DILocation(line: 4078, column: 33, scope: !8643)
!8651 = !DILocation(line: 4077, column: 15, scope: !8644)
!8652 = !DILocation(line: 4080, column: 16, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8643, file: !1, line: 4079, column: 13)
!8654 = !DILocation(line: 4081, column: 15, scope: !8653)
!8655 = !DILocation(line: 4083, column: 16, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8644, file: !1, line: 4083, column: 15)
!8657 = !DILocation(line: 4083, column: 24, scope: !8656)
!8658 = !DILocation(line: 4083, column: 38, scope: !8656)
!8659 = !DILocation(line: 4083, column: 15, scope: !8644)
!8660 = !DILocation(line: 4084, column: 13, scope: !8656)
!8661 = !DILocation(line: 4085, column: 16, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8644, file: !1, line: 4085, column: 15)
!8663 = !DILocation(line: 4085, column: 24, scope: !8662)
!8664 = !DILocation(line: 4085, column: 40, scope: !8662)
!8665 = !DILocation(line: 4085, column: 15, scope: !8644)
!8666 = !DILocation(line: 4086, column: 13, scope: !8662)
!8667 = !DILocation(line: 4087, column: 16, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8644, file: !1, line: 4087, column: 15)
!8669 = !DILocation(line: 4087, column: 24, scope: !8668)
!8670 = !DILocation(line: 4087, column: 39, scope: !8668)
!8671 = !DILocation(line: 4087, column: 15, scope: !8644)
!8672 = !DILocation(line: 4088, column: 13, scope: !8668)
!8673 = !DILocation(line: 4089, column: 16, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8644, file: !1, line: 4089, column: 15)
!8675 = !DILocation(line: 4089, column: 24, scope: !8674)
!8676 = !DILocation(line: 4089, column: 42, scope: !8674)
!8677 = !DILocation(line: 4089, column: 15, scope: !8644)
!8678 = !DILocation(line: 4090, column: 13, scope: !8674)
!8679 = !DILocation(line: 4091, column: 17, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8644, file: !1, line: 4091, column: 15)
!8681 = !DILocation(line: 4091, column: 25, scope: !8680)
!8682 = !DILocation(line: 4091, column: 41, scope: !8680)
!8683 = !DILocation(line: 4091, column: 47, scope: !8680)
!8684 = !DILocation(line: 4092, column: 16, scope: !8680)
!8685 = !DILocation(line: 4092, column: 23, scope: !8680)
!8686 = !DILocation(line: 4092, column: 34, scope: !8680)
!8687 = !DILocation(line: 4091, column: 15, scope: !8644)
!8688 = !DILocation(line: 4093, column: 13, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8690, file: !1, line: 4093, column: 13)
!8690 = distinct !DILexicalBlock(scope: !8680, file: !1, line: 4093, column: 13)
!8691 = !DILocation(line: 4093, column: 13, scope: !8690)
!8692 = !DILocation(line: 4094, column: 12, scope: !8644)
!8693 = !DILocation(line: 4095, column: 9, scope: !8644)
!8694 = !DILocation(line: 4075, column: 50, scope: !8637)
!8695 = !DILocation(line: 4075, column: 9, scope: !8637)
!8696 = distinct !{!8696, !8641, !8697}
!8697 = !DILocation(line: 4095, column: 9, scope: !8634)
!8698 = !DILocation(line: 4096, column: 43, scope: !8603)
!8699 = !DILocation(line: 4096, column: 54, scope: !8603)
!8700 = !DILocation(line: 4096, column: 14, scope: !8603)
!8701 = !DILocation(line: 4096, column: 13, scope: !8603)
!8702 = !DILocation(line: 4097, column: 13, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8603, file: !1, line: 4097, column: 13)
!8704 = !DILocation(line: 4097, column: 18, scope: !8703)
!8705 = !DILocation(line: 4097, column: 13, scope: !8603)
!8706 = !DILocation(line: 4098, column: 17, scope: !8703)
!8707 = !DILocation(line: 4098, column: 11, scope: !8703)
!8708 = !DILocation(line: 4099, column: 13, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8603, file: !1, line: 4099, column: 13)
!8710 = !DILocation(line: 4099, column: 20, scope: !8709)
!8711 = !DILocation(line: 4099, column: 37, scope: !8709)
!8712 = !DILocation(line: 4099, column: 13, scope: !8603)
!8713 = !DILocalVariable(name: "proceed", scope: !8714, file: !1, line: 4102, type: !581)
!8714 = distinct !DILexicalBlock(scope: !8709, file: !1, line: 4100, column: 11)
!8715 = !DILocation(line: 4102, column: 15, scope: !8714)
!8716 = !DILocation(line: 4107, column: 38, scope: !8714)
!8717 = !DILocation(line: 4107, column: 67, scope: !8714)
!8718 = !DILocation(line: 4108, column: 15, scope: !8714)
!8719 = !DILocation(line: 4108, column: 22, scope: !8714)
!8720 = !DILocation(line: 4107, column: 21, scope: !8714)
!8721 = !DILocation(line: 4107, column: 20, scope: !8714)
!8722 = !DILocation(line: 4109, column: 17, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8714, file: !1, line: 4109, column: 17)
!8724 = !DILocation(line: 4109, column: 25, scope: !8723)
!8725 = !DILocation(line: 4109, column: 17, scope: !8714)
!8726 = !DILocation(line: 4110, column: 21, scope: !8723)
!8727 = !DILocation(line: 4110, column: 15, scope: !8723)
!8728 = !DILocation(line: 4111, column: 11, scope: !8714)
!8729 = !DILocation(line: 4112, column: 7, scope: !8603)
!8730 = !DILocation(line: 4051, column: 45, scope: !8597)
!8731 = !DILocation(line: 4051, column: 7, scope: !8597)
!8732 = distinct !{!8732, !8601, !8733}
!8733 = !DILocation(line: 4112, column: 7, scope: !8593)
!8734 = !DILocation(line: 4113, column: 35, scope: !8594)
!8735 = !DILocation(line: 4113, column: 18, scope: !8594)
!8736 = !DILocation(line: 4113, column: 17, scope: !8594)
!8737 = !DILocation(line: 4114, column: 7, scope: !8594)
!8738 = !DILocation(line: 4123, column: 9, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8439, file: !1, line: 4123, column: 3)
!8740 = !DILocation(line: 4123, column: 8, scope: !8739)
!8741 = !DILocation(line: 4123, column: 13, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8739, file: !1, line: 4123, column: 3)
!8743 = !DILocation(line: 4123, column: 27, scope: !8742)
!8744 = !DILocation(line: 4123, column: 34, scope: !8742)
!8745 = !DILocation(line: 4123, column: 15, scope: !8742)
!8746 = !DILocation(line: 4123, column: 3, scope: !8739)
!8747 = !DILocalVariable(name: "indexes", scope: !8748, file: !1, line: 4126, type: !1141)
!8748 = distinct !DILexicalBlock(scope: !8742, file: !1, line: 4124, column: 3)
!8749 = !DILocation(line: 4126, column: 17, scope: !8748)
!8750 = !DILocalVariable(name: "q", scope: !8748, file: !1, line: 4129, type: !1144)
!8751 = !DILocation(line: 4129, column: 17, scope: !8748)
!8752 = !DILocalVariable(name: "x", scope: !8748, file: !1, line: 4132, type: !615)
!8753 = !DILocation(line: 4132, column: 7, scope: !8748)
!8754 = !DILocation(line: 4134, column: 9, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8748, file: !1, line: 4134, column: 9)
!8756 = !DILocation(line: 4134, column: 16, scope: !8755)
!8757 = !DILocation(line: 4134, column: 9, scope: !8748)
!8758 = !DILocation(line: 4135, column: 7, scope: !8755)
!8759 = !DILocation(line: 4136, column: 35, scope: !8748)
!8760 = !DILocation(line: 4136, column: 48, scope: !8748)
!8761 = !DILocation(line: 4136, column: 50, scope: !8748)
!8762 = !DILocation(line: 4136, column: 57, scope: !8748)
!8763 = !DILocation(line: 4136, column: 67, scope: !8748)
!8764 = !DILocation(line: 4136, column: 7, scope: !8748)
!8765 = !DILocation(line: 4136, column: 6, scope: !8748)
!8766 = !DILocation(line: 4137, column: 9, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8748, file: !1, line: 4137, column: 9)
!8768 = !DILocation(line: 4137, column: 11, scope: !8767)
!8769 = !DILocation(line: 4137, column: 9, scope: !8748)
!8770 = !DILocation(line: 4139, column: 15, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8767, file: !1, line: 4138, column: 7)
!8772 = !DILocation(line: 4140, column: 9, scope: !8771)
!8773 = !DILocation(line: 4142, column: 45, scope: !8748)
!8774 = !DILocation(line: 4142, column: 13, scope: !8748)
!8775 = !DILocation(line: 4142, column: 12, scope: !8748)
!8776 = !DILocation(line: 4143, column: 9, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8748, file: !1, line: 4143, column: 9)
!8778 = !DILocation(line: 4143, column: 17, scope: !8777)
!8779 = !DILocation(line: 4143, column: 9, scope: !8748)
!8780 = !DILocation(line: 4144, column: 13, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8777, file: !1, line: 4144, column: 7)
!8782 = !DILocation(line: 4144, column: 12, scope: !8781)
!8783 = !DILocation(line: 4144, column: 17, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8781, file: !1, line: 4144, column: 7)
!8785 = !DILocation(line: 4144, column: 31, scope: !8784)
!8786 = !DILocation(line: 4144, column: 38, scope: !8784)
!8787 = !DILocation(line: 4144, column: 19, scope: !8784)
!8788 = !DILocation(line: 4144, column: 7, scope: !8781)
!8789 = !DILocation(line: 4146, column: 9, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8784, file: !1, line: 4145, column: 7)
!8791 = !DILocation(line: 4147, column: 9, scope: !8790)
!8792 = !DILocation(line: 4148, column: 9, scope: !8790)
!8793 = !DILocation(line: 4149, column: 7, scope: !8790)
!8794 = !DILocation(line: 4144, column: 48, scope: !8784)
!8795 = !DILocation(line: 4144, column: 7, scope: !8784)
!8796 = distinct !{!8796, !8788, !8797}
!8797 = !DILocation(line: 4149, column: 7, scope: !8781)
!8798 = !DILocation(line: 4151, column: 13, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8777, file: !1, line: 4151, column: 7)
!8800 = !DILocation(line: 4151, column: 12, scope: !8799)
!8801 = !DILocation(line: 4151, column: 17, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8799, file: !1, line: 4151, column: 7)
!8803 = !DILocation(line: 4151, column: 31, scope: !8802)
!8804 = !DILocation(line: 4151, column: 38, scope: !8802)
!8805 = !DILocation(line: 4151, column: 19, scope: !8802)
!8806 = !DILocation(line: 4151, column: 7, scope: !8799)
!8807 = !DILocation(line: 4153, column: 14, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8809, file: !1, line: 4153, column: 13)
!8809 = distinct !DILexicalBlock(scope: !8802, file: !1, line: 4152, column: 7)
!8810 = !DILocation(line: 4153, column: 22, scope: !8808)
!8811 = !DILocation(line: 4153, column: 36, scope: !8808)
!8812 = !DILocation(line: 4153, column: 13, scope: !8809)
!8813 = !DILocation(line: 4154, column: 11, scope: !8808)
!8814 = !DILocation(line: 4155, column: 14, scope: !8815)
!8815 = distinct !DILexicalBlock(scope: !8809, file: !1, line: 4155, column: 13)
!8816 = !DILocation(line: 4155, column: 22, scope: !8815)
!8817 = !DILocation(line: 4155, column: 38, scope: !8815)
!8818 = !DILocation(line: 4155, column: 13, scope: !8809)
!8819 = !DILocation(line: 4156, column: 11, scope: !8815)
!8820 = !DILocation(line: 4157, column: 14, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8809, file: !1, line: 4157, column: 13)
!8822 = !DILocation(line: 4157, column: 22, scope: !8821)
!8823 = !DILocation(line: 4157, column: 37, scope: !8821)
!8824 = !DILocation(line: 4157, column: 13, scope: !8809)
!8825 = !DILocation(line: 4158, column: 11, scope: !8821)
!8826 = !DILocation(line: 4159, column: 14, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8809, file: !1, line: 4159, column: 13)
!8828 = !DILocation(line: 4159, column: 22, scope: !8827)
!8829 = !DILocation(line: 4159, column: 40, scope: !8827)
!8830 = !DILocation(line: 4159, column: 13, scope: !8809)
!8831 = !DILocation(line: 4160, column: 11, scope: !8827)
!8832 = !DILocation(line: 4161, column: 7, scope: !8809)
!8833 = !DILocation(line: 4151, column: 48, scope: !8802)
!8834 = !DILocation(line: 4151, column: 7, scope: !8802)
!8835 = distinct !{!8835, !8806, !8836}
!8836 = !DILocation(line: 4161, column: 7, scope: !8799)
!8837 = !DILocation(line: 4162, column: 11, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8748, file: !1, line: 4162, column: 9)
!8839 = !DILocation(line: 4162, column: 19, scope: !8838)
!8840 = !DILocation(line: 4162, column: 35, scope: !8838)
!8841 = !DILocation(line: 4162, column: 41, scope: !8838)
!8842 = !DILocation(line: 4163, column: 10, scope: !8838)
!8843 = !DILocation(line: 4163, column: 17, scope: !8838)
!8844 = !DILocation(line: 4163, column: 28, scope: !8838)
!8845 = !DILocation(line: 4162, column: 9, scope: !8748)
!8846 = !DILocation(line: 4164, column: 13, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8838, file: !1, line: 4164, column: 7)
!8848 = !DILocation(line: 4164, column: 12, scope: !8847)
!8849 = !DILocation(line: 4164, column: 17, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8847, file: !1, line: 4164, column: 7)
!8851 = !DILocation(line: 4164, column: 31, scope: !8850)
!8852 = !DILocation(line: 4164, column: 38, scope: !8850)
!8853 = !DILocation(line: 4164, column: 19, scope: !8850)
!8854 = !DILocation(line: 4164, column: 7, scope: !8847)
!8855 = !DILocation(line: 4165, column: 9, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8857, file: !1, line: 4165, column: 9)
!8857 = distinct !DILexicalBlock(scope: !8850, file: !1, line: 4165, column: 9)
!8858 = !DILocation(line: 4165, column: 9, scope: !8857)
!8859 = !DILocation(line: 4164, column: 48, scope: !8850)
!8860 = !DILocation(line: 4164, column: 7, scope: !8850)
!8861 = distinct !{!8861, !8854, !8862}
!8862 = !DILocation(line: 4165, column: 9, scope: !8847)
!8863 = !DILocation(line: 4166, column: 38, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8748, file: !1, line: 4166, column: 9)
!8865 = !DILocation(line: 4166, column: 49, scope: !8864)
!8866 = !DILocation(line: 4166, column: 9, scope: !8864)
!8867 = !DILocation(line: 4166, column: 60, scope: !8864)
!8868 = !DILocation(line: 4166, column: 9, scope: !8748)
!8869 = !DILocation(line: 4167, column: 13, scope: !8864)
!8870 = !DILocation(line: 4167, column: 7, scope: !8864)
!8871 = !DILocation(line: 4168, column: 9, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8748, file: !1, line: 4168, column: 9)
!8873 = !DILocation(line: 4168, column: 16, scope: !8872)
!8874 = !DILocation(line: 4168, column: 33, scope: !8872)
!8875 = !DILocation(line: 4168, column: 9, scope: !8748)
!8876 = !DILocalVariable(name: "proceed", scope: !8877, file: !1, line: 4171, type: !581)
!8877 = distinct !DILexicalBlock(scope: !8872, file: !1, line: 4169, column: 7)
!8878 = !DILocation(line: 4171, column: 11, scope: !8877)
!8879 = !DILocation(line: 4176, column: 34, scope: !8877)
!8880 = !DILocation(line: 4176, column: 63, scope: !8877)
!8881 = !DILocation(line: 4176, column: 66, scope: !8877)
!8882 = !DILocation(line: 4176, column: 73, scope: !8877)
!8883 = !DILocation(line: 4176, column: 17, scope: !8877)
!8884 = !DILocation(line: 4176, column: 16, scope: !8877)
!8885 = !DILocation(line: 4177, column: 13, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8877, file: !1, line: 4177, column: 13)
!8887 = !DILocation(line: 4177, column: 21, scope: !8886)
!8888 = !DILocation(line: 4177, column: 13, scope: !8877)
!8889 = !DILocation(line: 4178, column: 17, scope: !8886)
!8890 = !DILocation(line: 4178, column: 11, scope: !8886)
!8891 = !DILocation(line: 4179, column: 7, scope: !8877)
!8892 = !DILocation(line: 4180, column: 3, scope: !8748)
!8893 = !DILocation(line: 4123, column: 41, scope: !8742)
!8894 = !DILocation(line: 4123, column: 3, scope: !8742)
!8895 = distinct !{!8895, !8746, !8896}
!8896 = !DILocation(line: 4180, column: 3, scope: !8739)
!8897 = !DILocation(line: 4181, column: 31, scope: !8439)
!8898 = !DILocation(line: 4181, column: 14, scope: !8439)
!8899 = !DILocation(line: 4181, column: 13, scope: !8439)
!8900 = !DILocation(line: 4182, column: 10, scope: !8439)
!8901 = !DILocation(line: 4182, column: 3, scope: !8439)
!8902 = !DILocation(line: 4183, column: 1, scope: !8439)
!8903 = distinct !DISubprogram(name: "NormalizeImage", scope: !1, file: !1, line: 4214, type: !808, scopeLine: 4215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!8904 = !DILocalVariable(name: "image", arg: 1, scope: !8903, file: !1, line: 4214, type: !565)
!8905 = !DILocation(line: 4214, column: 54, scope: !8903)
!8906 = !DILocalVariable(name: "status", scope: !8903, file: !1, line: 4217, type: !581)
!8907 = !DILocation(line: 4217, column: 5, scope: !8903)
!8908 = !DILocation(line: 4219, column: 32, scope: !8903)
!8909 = !DILocation(line: 4219, column: 10, scope: !8903)
!8910 = !DILocation(line: 4219, column: 9, scope: !8903)
!8911 = !DILocation(line: 4220, column: 10, scope: !8903)
!8912 = !DILocation(line: 4220, column: 3, scope: !8903)
!8913 = distinct !DISubprogram(name: "NormalizeImageChannel", scope: !1, file: !1, line: 4223, type: !817, scopeLine: 4225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!8914 = !DILocalVariable(name: "image", arg: 1, scope: !8913, file: !1, line: 4223, type: !565)
!8915 = !DILocation(line: 4223, column: 61, scope: !8913)
!8916 = !DILocalVariable(name: "channel", arg: 2, scope: !8913, file: !1, line: 4224, type: !819)
!8917 = !DILocation(line: 4224, column: 21, scope: !8913)
!8918 = !DILocalVariable(name: "black_point", scope: !8913, file: !1, line: 4227, type: !543)
!8919 = !DILocation(line: 4227, column: 5, scope: !8913)
!8920 = !DILocalVariable(name: "white_point", scope: !8913, file: !1, line: 4228, type: !543)
!8921 = !DILocation(line: 4228, column: 5, scope: !8913)
!8922 = !DILocation(line: 4230, column: 24, scope: !8913)
!8923 = !DILocation(line: 4230, column: 31, scope: !8913)
!8924 = !DILocation(line: 4230, column: 15, scope: !8913)
!8925 = !DILocation(line: 4230, column: 39, scope: !8913)
!8926 = !DILocation(line: 4230, column: 46, scope: !8913)
!8927 = !DILocation(line: 4230, column: 38, scope: !8913)
!8928 = !DILocation(line: 4230, column: 50, scope: !8913)
!8929 = !DILocation(line: 4230, column: 14, scope: !8913)
!8930 = !DILocation(line: 4231, column: 24, scope: !8913)
!8931 = !DILocation(line: 4231, column: 31, scope: !8913)
!8932 = !DILocation(line: 4231, column: 15, scope: !8913)
!8933 = !DILocation(line: 4231, column: 39, scope: !8913)
!8934 = !DILocation(line: 4231, column: 46, scope: !8913)
!8935 = !DILocation(line: 4231, column: 38, scope: !8913)
!8936 = !DILocation(line: 4231, column: 50, scope: !8913)
!8937 = !DILocation(line: 4231, column: 14, scope: !8913)
!8938 = !DILocation(line: 4232, column: 38, scope: !8913)
!8939 = !DILocation(line: 4232, column: 44, scope: !8913)
!8940 = !DILocation(line: 4232, column: 52, scope: !8913)
!8941 = !DILocation(line: 4232, column: 64, scope: !8913)
!8942 = !DILocation(line: 4232, column: 10, scope: !8913)
!8943 = !DILocation(line: 4232, column: 3, scope: !8913)
!8944 = distinct !DISubprogram(name: "SigmoidalContrastImage", scope: !1, file: !1, line: 4362, type: !8945, scopeLine: 4364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!8945 = !DISubroutineType(types: !8946)
!8946 = !{!581, !565, !2617, !547}
!8947 = !DILocalVariable(name: "image", arg: 1, scope: !8944, file: !1, line: 4362, type: !565)
!8948 = !DILocation(line: 4362, column: 62, scope: !8944)
!8949 = !DILocalVariable(name: "sharpen", arg: 2, scope: !8944, file: !1, line: 4363, type: !2617)
!8950 = !DILocation(line: 4363, column: 27, scope: !8944)
!8951 = !DILocalVariable(name: "levels", arg: 3, scope: !8944, file: !1, line: 4363, type: !547)
!8952 = !DILocation(line: 4363, column: 47, scope: !8944)
!8953 = !DILocalVariable(name: "geometry_info", scope: !8944, file: !1, line: 4366, type: !2879)
!8954 = !DILocation(line: 4366, column: 5, scope: !8944)
!8955 = !DILocalVariable(name: "status", scope: !8944, file: !1, line: 4369, type: !581)
!8956 = !DILocation(line: 4369, column: 5, scope: !8944)
!8957 = !DILocalVariable(name: "flags", scope: !8944, file: !1, line: 4372, type: !833)
!8958 = !DILocation(line: 4372, column: 5, scope: !8944)
!8959 = !DILocation(line: 4374, column: 23, scope: !8944)
!8960 = !DILocation(line: 4374, column: 9, scope: !8944)
!8961 = !DILocation(line: 4374, column: 8, scope: !8944)
!8962 = !DILocation(line: 4375, column: 8, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8944, file: !1, line: 4375, column: 7)
!8964 = !DILocation(line: 4375, column: 14, scope: !8963)
!8965 = !DILocation(line: 4375, column: 28, scope: !8963)
!8966 = !DILocation(line: 4375, column: 7, scope: !8944)
!8967 = !DILocation(line: 4376, column: 19, scope: !8963)
!8968 = !DILocation(line: 4376, column: 24, scope: !8963)
!8969 = !DILocation(line: 4376, column: 5, scope: !8963)
!8970 = !DILocation(line: 4377, column: 8, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8944, file: !1, line: 4377, column: 7)
!8972 = !DILocation(line: 4377, column: 14, scope: !8971)
!8973 = !DILocation(line: 4377, column: 30, scope: !8971)
!8974 = !DILocation(line: 4377, column: 7, scope: !8944)
!8975 = !DILocation(line: 4378, column: 56, scope: !8971)
!8976 = !DILocation(line: 4378, column: 41, scope: !8971)
!8977 = !DILocation(line: 4378, column: 61, scope: !8971)
!8978 = !DILocation(line: 4378, column: 19, scope: !8971)
!8979 = !DILocation(line: 4378, column: 24, scope: !8971)
!8980 = !DILocation(line: 4378, column: 5, scope: !8971)
!8981 = !DILocation(line: 4379, column: 40, scope: !8944)
!8982 = !DILocation(line: 4379, column: 62, scope: !8944)
!8983 = !DILocation(line: 4380, column: 19, scope: !8944)
!8984 = !DILocation(line: 4380, column: 37, scope: !8944)
!8985 = !DILocation(line: 4379, column: 10, scope: !8944)
!8986 = !DILocation(line: 4379, column: 9, scope: !8944)
!8987 = !DILocation(line: 4381, column: 10, scope: !8944)
!8988 = !DILocation(line: 4381, column: 3, scope: !8944)
!8989 = distinct !DISubprogram(name: "SigmoidalContrastImageChannel", scope: !1, file: !1, line: 4384, type: !8990, scopeLine: 4387, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !810)
!8990 = !DISubroutineType(types: !8991)
!8991 = !{!581, !565, !819, !2617, !980, !980}
!8992 = !DILocalVariable(name: "image", arg: 1, scope: !8989, file: !1, line: 4384, type: !565)
!8993 = !DILocation(line: 4384, column: 69, scope: !8989)
!8994 = !DILocalVariable(name: "channel", arg: 2, scope: !8989, file: !1, line: 4385, type: !819)
!8995 = !DILocation(line: 4385, column: 21, scope: !8989)
!8996 = !DILocalVariable(name: "sharpen", arg: 3, scope: !8989, file: !1, line: 4385, type: !2617)
!8997 = !DILocation(line: 4385, column: 53, scope: !8989)
!8998 = !DILocalVariable(name: "contrast", arg: 4, scope: !8989, file: !1, line: 4386, type: !980)
!8999 = !DILocation(line: 4386, column: 16, scope: !8989)
!9000 = !DILocalVariable(name: "midpoint", arg: 5, scope: !8989, file: !1, line: 4386, type: !980)
!9001 = !DILocation(line: 4386, column: 38, scope: !8989)
!9002 = !DILocalVariable(name: "image_view", scope: !8989, file: !1, line: 4391, type: !992)
!9003 = !DILocation(line: 4391, column: 6, scope: !8989)
!9004 = !DILocalVariable(name: "exception", scope: !8989, file: !1, line: 4394, type: !998)
!9005 = !DILocation(line: 4394, column: 6, scope: !8989)
!9006 = !DILocalVariable(name: "status", scope: !8989, file: !1, line: 4397, type: !581)
!9007 = !DILocation(line: 4397, column: 5, scope: !8989)
!9008 = !DILocalVariable(name: "progress", scope: !8989, file: !1, line: 4400, type: !685)
!9009 = !DILocation(line: 4400, column: 5, scope: !8989)
!9010 = !DILocalVariable(name: "sigmoidal_map", scope: !8989, file: !1, line: 4403, type: !802)
!9011 = !DILocation(line: 4403, column: 6, scope: !8989)
!9012 = !DILocalVariable(name: "i", scope: !8989, file: !1, line: 4406, type: !615)
!9013 = !DILocation(line: 4406, column: 5, scope: !8989)
!9014 = !DILocalVariable(name: "y", scope: !8989, file: !1, line: 4409, type: !615)
!9015 = !DILocation(line: 4409, column: 5, scope: !8989)
!9016 = !DILocation(line: 4415, column: 7, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !8989, file: !1, line: 4415, column: 7)
!9018 = !DILocation(line: 4415, column: 16, scope: !9017)
!9019 = !DILocation(line: 4415, column: 7, scope: !8989)
!9020 = !DILocation(line: 4416, column: 5, scope: !9017)
!9021 = !DILocation(line: 4422, column: 7, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !8989, file: !1, line: 4422, column: 7)
!9023 = !DILocation(line: 4422, column: 14, scope: !9022)
!9024 = !DILocation(line: 4422, column: 20, scope: !9022)
!9025 = !DILocation(line: 4422, column: 7, scope: !8989)
!9026 = !DILocation(line: 4423, column: 61, scope: !9022)
!9027 = !DILocation(line: 4423, column: 68, scope: !9022)
!9028 = !DILocation(line: 4423, column: 12, scope: !9022)
!9029 = !DILocation(line: 4423, column: 5, scope: !9022)
!9030 = !DILocation(line: 4424, column: 36, scope: !8989)
!9031 = !DILocation(line: 4424, column: 17, scope: !8989)
!9032 = !DILocation(line: 4424, column: 16, scope: !8989)
!9033 = !DILocation(line: 4426, column: 7, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !8989, file: !1, line: 4426, column: 7)
!9035 = !DILocation(line: 4426, column: 21, scope: !9034)
!9036 = !DILocation(line: 4426, column: 7, scope: !8989)
!9037 = !DILocation(line: 4427, column: 5, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9039, file: !1, line: 4427, column: 5)
!9039 = distinct !DILexicalBlock(scope: !9034, file: !1, line: 4427, column: 5)
!9040 = !DILocation(line: 4427, column: 5, scope: !9039)
!9041 = !DILocation(line: 4429, column: 28, scope: !8989)
!9042 = !DILocation(line: 4429, column: 10, scope: !8989)
!9043 = !DILocation(line: 4430, column: 7, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !8989, file: !1, line: 4430, column: 7)
!9045 = !DILocation(line: 4430, column: 15, scope: !9044)
!9046 = !DILocation(line: 4430, column: 7, scope: !8989)
!9047 = !DILocation(line: 4431, column: 11, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9044, file: !1, line: 4431, column: 5)
!9049 = !DILocation(line: 4431, column: 10, scope: !9048)
!9050 = !DILocation(line: 4431, column: 15, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9048, file: !1, line: 4431, column: 5)
!9052 = !DILocation(line: 4431, column: 17, scope: !9051)
!9053 = !DILocation(line: 4431, column: 5, scope: !9048)
!9054 = !DILocation(line: 4433, column: 17, scope: !9051)
!9055 = !DILocation(line: 4433, column: 16, scope: !9051)
!9056 = !DILocation(line: 4432, column: 59, scope: !9051)
!9057 = !DILocation(line: 4432, column: 41, scope: !9051)
!9058 = !DILocation(line: 4432, column: 24, scope: !9051)
!9059 = !DILocation(line: 4432, column: 7, scope: !9051)
!9060 = !DILocation(line: 4432, column: 21, scope: !9051)
!9061 = !DILocation(line: 4432, column: 23, scope: !9051)
!9062 = !DILocation(line: 4431, column: 39, scope: !9051)
!9063 = !DILocation(line: 4431, column: 5, scope: !9051)
!9064 = distinct !{!9064, !9053, !9065}
!9065 = !DILocation(line: 4434, column: 17, scope: !9048)
!9066 = !DILocation(line: 4436, column: 11, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9044, file: !1, line: 4436, column: 5)
!9068 = !DILocation(line: 4436, column: 10, scope: !9067)
!9069 = !DILocation(line: 4436, column: 15, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !9067, file: !1, line: 4436, column: 5)
!9071 = !DILocation(line: 4436, column: 17, scope: !9070)
!9072 = !DILocation(line: 4436, column: 5, scope: !9067)
!9073 = !DILocation(line: 4438, column: 39, scope: !9070)
!9074 = !DILocation(line: 4438, column: 61, scope: !9070)
!9075 = !DILocation(line: 4438, column: 60, scope: !9070)
!9076 = !DILocation(line: 4438, column: 79, scope: !9070)
!9077 = !DILocation(line: 4438, column: 70, scope: !9070)
!9078 = !DILocation(line: 4438, column: 80, scope: !9070)
!9079 = !DILocation(line: 4438, column: 16, scope: !9070)
!9080 = !DILocation(line: 4438, column: 15, scope: !9070)
!9081 = !DILocation(line: 4437, column: 59, scope: !9070)
!9082 = !DILocation(line: 4437, column: 41, scope: !9070)
!9083 = !DILocation(line: 4437, column: 24, scope: !9070)
!9084 = !DILocation(line: 4437, column: 7, scope: !9070)
!9085 = !DILocation(line: 4437, column: 21, scope: !9070)
!9086 = !DILocation(line: 4437, column: 23, scope: !9070)
!9087 = !DILocation(line: 4436, column: 39, scope: !9070)
!9088 = !DILocation(line: 4436, column: 5, scope: !9070)
!9089 = distinct !{!9089, !9072, !9090}
!9090 = !DILocation(line: 4439, column: 17, scope: !9067)
!9091 = !DILocation(line: 4443, column: 7, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !8989, file: !1, line: 4443, column: 7)
!9093 = !DILocation(line: 4443, column: 14, scope: !9092)
!9094 = !DILocation(line: 4443, column: 28, scope: !9092)
!9095 = !DILocation(line: 4443, column: 7, scope: !8989)
!9096 = !DILocation(line: 4444, column: 11, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9092, file: !1, line: 4444, column: 5)
!9098 = !DILocation(line: 4444, column: 10, scope: !9097)
!9099 = !DILocation(line: 4444, column: 15, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9097, file: !1, line: 4444, column: 5)
!9101 = !DILocation(line: 4444, column: 29, scope: !9100)
!9102 = !DILocation(line: 4444, column: 36, scope: !9100)
!9103 = !DILocation(line: 4444, column: 17, scope: !9100)
!9104 = !DILocation(line: 4444, column: 5, scope: !9097)
!9105 = !DILocation(line: 4446, column: 12, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9107, file: !1, line: 4446, column: 11)
!9107 = distinct !DILexicalBlock(scope: !9100, file: !1, line: 4445, column: 5)
!9108 = !DILocation(line: 4446, column: 20, scope: !9106)
!9109 = !DILocation(line: 4446, column: 34, scope: !9106)
!9110 = !DILocation(line: 4446, column: 11, scope: !9107)
!9111 = !DILocation(line: 4447, column: 47, scope: !9106)
!9112 = !DILocation(line: 4448, column: 29, scope: !9106)
!9113 = !DILocation(line: 4448, column: 36, scope: !9106)
!9114 = !DILocation(line: 4448, column: 45, scope: !9106)
!9115 = !DILocation(line: 4448, column: 48, scope: !9106)
!9116 = !DILocation(line: 4448, column: 11, scope: !9106)
!9117 = !DILocation(line: 4447, column: 32, scope: !9106)
!9118 = !DILocation(line: 4447, column: 9, scope: !9106)
!9119 = !DILocation(line: 4447, column: 16, scope: !9106)
!9120 = !DILocation(line: 4447, column: 25, scope: !9106)
!9121 = !DILocation(line: 4447, column: 28, scope: !9106)
!9122 = !DILocation(line: 4447, column: 31, scope: !9106)
!9123 = !DILocation(line: 4449, column: 12, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9107, file: !1, line: 4449, column: 11)
!9125 = !DILocation(line: 4449, column: 20, scope: !9124)
!9126 = !DILocation(line: 4449, column: 36, scope: !9124)
!9127 = !DILocation(line: 4449, column: 11, scope: !9107)
!9128 = !DILocation(line: 4450, column: 49, scope: !9124)
!9129 = !DILocation(line: 4451, column: 29, scope: !9124)
!9130 = !DILocation(line: 4451, column: 36, scope: !9124)
!9131 = !DILocation(line: 4451, column: 45, scope: !9124)
!9132 = !DILocation(line: 4451, column: 48, scope: !9124)
!9133 = !DILocation(line: 4451, column: 11, scope: !9124)
!9134 = !DILocation(line: 4450, column: 34, scope: !9124)
!9135 = !DILocation(line: 4450, column: 9, scope: !9124)
!9136 = !DILocation(line: 4450, column: 16, scope: !9124)
!9137 = !DILocation(line: 4450, column: 25, scope: !9124)
!9138 = !DILocation(line: 4450, column: 28, scope: !9124)
!9139 = !DILocation(line: 4450, column: 33, scope: !9124)
!9140 = !DILocation(line: 4452, column: 12, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9107, file: !1, line: 4452, column: 11)
!9142 = !DILocation(line: 4452, column: 20, scope: !9141)
!9143 = !DILocation(line: 4452, column: 35, scope: !9141)
!9144 = !DILocation(line: 4452, column: 11, scope: !9107)
!9145 = !DILocation(line: 4453, column: 48, scope: !9141)
!9146 = !DILocation(line: 4454, column: 29, scope: !9141)
!9147 = !DILocation(line: 4454, column: 36, scope: !9141)
!9148 = !DILocation(line: 4454, column: 45, scope: !9141)
!9149 = !DILocation(line: 4454, column: 48, scope: !9141)
!9150 = !DILocation(line: 4454, column: 11, scope: !9141)
!9151 = !DILocation(line: 4453, column: 33, scope: !9141)
!9152 = !DILocation(line: 4453, column: 9, scope: !9141)
!9153 = !DILocation(line: 4453, column: 16, scope: !9141)
!9154 = !DILocation(line: 4453, column: 25, scope: !9141)
!9155 = !DILocation(line: 4453, column: 28, scope: !9141)
!9156 = !DILocation(line: 4453, column: 32, scope: !9141)
!9157 = !DILocation(line: 4455, column: 12, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9107, file: !1, line: 4455, column: 11)
!9159 = !DILocation(line: 4455, column: 20, scope: !9158)
!9160 = !DILocation(line: 4455, column: 38, scope: !9158)
!9161 = !DILocation(line: 4455, column: 11, scope: !9107)
!9162 = !DILocation(line: 4456, column: 51, scope: !9158)
!9163 = !DILocation(line: 4457, column: 29, scope: !9158)
!9164 = !DILocation(line: 4457, column: 36, scope: !9158)
!9165 = !DILocation(line: 4457, column: 45, scope: !9158)
!9166 = !DILocation(line: 4457, column: 48, scope: !9158)
!9167 = !DILocation(line: 4457, column: 11, scope: !9158)
!9168 = !DILocation(line: 4456, column: 36, scope: !9158)
!9169 = !DILocation(line: 4456, column: 9, scope: !9158)
!9170 = !DILocation(line: 4456, column: 16, scope: !9158)
!9171 = !DILocation(line: 4456, column: 25, scope: !9158)
!9172 = !DILocation(line: 4456, column: 28, scope: !9158)
!9173 = !DILocation(line: 4456, column: 35, scope: !9158)
!9174 = !DILocation(line: 4458, column: 5, scope: !9107)
!9175 = !DILocation(line: 4444, column: 45, scope: !9100)
!9176 = !DILocation(line: 4444, column: 5, scope: !9100)
!9177 = distinct !{!9177, !9104, !9178}
!9178 = !DILocation(line: 4458, column: 5, scope: !9097)
!9179 = !DILocation(line: 4462, column: 9, scope: !8989)
!9180 = !DILocation(line: 4463, column: 11, scope: !8989)
!9181 = !DILocation(line: 4464, column: 15, scope: !8989)
!9182 = !DILocation(line: 4464, column: 22, scope: !8989)
!9183 = !DILocation(line: 4464, column: 12, scope: !8989)
!9184 = !DILocation(line: 4465, column: 40, scope: !8989)
!9185 = !DILocation(line: 4465, column: 46, scope: !8989)
!9186 = !DILocation(line: 4465, column: 14, scope: !8989)
!9187 = !DILocation(line: 4465, column: 13, scope: !8989)
!9188 = !DILocation(line: 4470, column: 9, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !8989, file: !1, line: 4470, column: 3)
!9190 = !DILocation(line: 4470, column: 8, scope: !9189)
!9191 = !DILocation(line: 4470, column: 13, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9189, file: !1, line: 4470, column: 3)
!9193 = !DILocation(line: 4470, column: 27, scope: !9192)
!9194 = !DILocation(line: 4470, column: 34, scope: !9192)
!9195 = !DILocation(line: 4470, column: 15, scope: !9192)
!9196 = !DILocation(line: 4470, column: 3, scope: !9189)
!9197 = !DILocalVariable(name: "indexes", scope: !9198, file: !1, line: 4473, type: !1141)
!9198 = distinct !DILexicalBlock(scope: !9192, file: !1, line: 4471, column: 3)
!9199 = !DILocation(line: 4473, column: 17, scope: !9198)
!9200 = !DILocalVariable(name: "q", scope: !9198, file: !1, line: 4476, type: !1144)
!9201 = !DILocation(line: 4476, column: 17, scope: !9198)
!9202 = !DILocalVariable(name: "x", scope: !9198, file: !1, line: 4479, type: !615)
!9203 = !DILocation(line: 4479, column: 7, scope: !9198)
!9204 = !DILocation(line: 4481, column: 9, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9198, file: !1, line: 4481, column: 9)
!9206 = !DILocation(line: 4481, column: 16, scope: !9205)
!9207 = !DILocation(line: 4481, column: 9, scope: !9198)
!9208 = !DILocation(line: 4482, column: 7, scope: !9205)
!9209 = !DILocation(line: 4483, column: 35, scope: !9198)
!9210 = !DILocation(line: 4483, column: 48, scope: !9198)
!9211 = !DILocation(line: 4483, column: 50, scope: !9198)
!9212 = !DILocation(line: 4483, column: 57, scope: !9198)
!9213 = !DILocation(line: 4483, column: 67, scope: !9198)
!9214 = !DILocation(line: 4483, column: 7, scope: !9198)
!9215 = !DILocation(line: 4483, column: 6, scope: !9198)
!9216 = !DILocation(line: 4484, column: 9, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9198, file: !1, line: 4484, column: 9)
!9218 = !DILocation(line: 4484, column: 11, scope: !9217)
!9219 = !DILocation(line: 4484, column: 9, scope: !9198)
!9220 = !DILocation(line: 4486, column: 15, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !9217, file: !1, line: 4485, column: 7)
!9222 = !DILocation(line: 4487, column: 9, scope: !9221)
!9223 = !DILocation(line: 4489, column: 45, scope: !9198)
!9224 = !DILocation(line: 4489, column: 13, scope: !9198)
!9225 = !DILocation(line: 4489, column: 12, scope: !9198)
!9226 = !DILocation(line: 4490, column: 11, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9198, file: !1, line: 4490, column: 5)
!9228 = !DILocation(line: 4490, column: 10, scope: !9227)
!9229 = !DILocation(line: 4490, column: 15, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9227, file: !1, line: 4490, column: 5)
!9231 = !DILocation(line: 4490, column: 29, scope: !9230)
!9232 = !DILocation(line: 4490, column: 36, scope: !9230)
!9233 = !DILocation(line: 4490, column: 17, scope: !9230)
!9234 = !DILocation(line: 4490, column: 5, scope: !9227)
!9235 = !DILocation(line: 4492, column: 12, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9237, file: !1, line: 4492, column: 11)
!9237 = distinct !DILexicalBlock(scope: !9230, file: !1, line: 4491, column: 5)
!9238 = !DILocation(line: 4492, column: 20, scope: !9236)
!9239 = !DILocation(line: 4492, column: 34, scope: !9236)
!9240 = !DILocation(line: 4492, column: 11, scope: !9237)
!9241 = !DILocation(line: 4493, column: 9, scope: !9236)
!9242 = !DILocation(line: 4495, column: 12, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9237, file: !1, line: 4495, column: 11)
!9244 = !DILocation(line: 4495, column: 20, scope: !9243)
!9245 = !DILocation(line: 4495, column: 36, scope: !9243)
!9246 = !DILocation(line: 4495, column: 11, scope: !9237)
!9247 = !DILocation(line: 4496, column: 9, scope: !9243)
!9248 = !DILocation(line: 4498, column: 12, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9237, file: !1, line: 4498, column: 11)
!9250 = !DILocation(line: 4498, column: 20, scope: !9249)
!9251 = !DILocation(line: 4498, column: 35, scope: !9249)
!9252 = !DILocation(line: 4498, column: 11, scope: !9237)
!9253 = !DILocation(line: 4499, column: 9, scope: !9249)
!9254 = !DILocation(line: 4501, column: 12, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9237, file: !1, line: 4501, column: 11)
!9256 = !DILocation(line: 4501, column: 20, scope: !9255)
!9257 = !DILocation(line: 4501, column: 38, scope: !9255)
!9258 = !DILocation(line: 4501, column: 11, scope: !9237)
!9259 = !DILocation(line: 4502, column: 9, scope: !9255)
!9260 = !DILocation(line: 4504, column: 13, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9237, file: !1, line: 4504, column: 11)
!9262 = !DILocation(line: 4504, column: 21, scope: !9261)
!9263 = !DILocation(line: 4504, column: 37, scope: !9261)
!9264 = !DILocation(line: 4504, column: 43, scope: !9261)
!9265 = !DILocation(line: 4505, column: 12, scope: !9261)
!9266 = !DILocation(line: 4505, column: 19, scope: !9261)
!9267 = !DILocation(line: 4505, column: 30, scope: !9261)
!9268 = !DILocation(line: 4504, column: 11, scope: !9237)
!9269 = !DILocation(line: 4506, column: 9, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9271, file: !1, line: 4506, column: 9)
!9271 = distinct !DILexicalBlock(scope: !9261, file: !1, line: 4506, column: 9)
!9272 = !DILocation(line: 4506, column: 9, scope: !9271)
!9273 = !DILocation(line: 4508, column: 8, scope: !9237)
!9274 = !DILocation(line: 4509, column: 5, scope: !9237)
!9275 = !DILocation(line: 4490, column: 46, scope: !9230)
!9276 = !DILocation(line: 4490, column: 5, scope: !9230)
!9277 = distinct !{!9277, !9234, !9278}
!9278 = !DILocation(line: 4509, column: 5, scope: !9227)
!9279 = !DILocation(line: 4510, column: 38, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9198, file: !1, line: 4510, column: 9)
!9281 = !DILocation(line: 4510, column: 49, scope: !9280)
!9282 = !DILocation(line: 4510, column: 9, scope: !9280)
!9283 = !DILocation(line: 4510, column: 60, scope: !9280)
!9284 = !DILocation(line: 4510, column: 9, scope: !9198)
!9285 = !DILocation(line: 4511, column: 13, scope: !9280)
!9286 = !DILocation(line: 4511, column: 7, scope: !9280)
!9287 = !DILocation(line: 4512, column: 9, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9198, file: !1, line: 4512, column: 9)
!9289 = !DILocation(line: 4512, column: 16, scope: !9288)
!9290 = !DILocation(line: 4512, column: 33, scope: !9288)
!9291 = !DILocation(line: 4512, column: 9, scope: !9198)
!9292 = !DILocalVariable(name: "proceed", scope: !9293, file: !1, line: 4515, type: !581)
!9293 = distinct !DILexicalBlock(scope: !9288, file: !1, line: 4513, column: 7)
!9294 = !DILocation(line: 4515, column: 11, scope: !9293)
!9295 = !DILocation(line: 4520, column: 34, scope: !9293)
!9296 = !DILocation(line: 4520, column: 74, scope: !9293)
!9297 = !DILocation(line: 4521, column: 11, scope: !9293)
!9298 = !DILocation(line: 4521, column: 18, scope: !9293)
!9299 = !DILocation(line: 4520, column: 17, scope: !9293)
!9300 = !DILocation(line: 4520, column: 16, scope: !9293)
!9301 = !DILocation(line: 4522, column: 13, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9293, file: !1, line: 4522, column: 13)
!9303 = !DILocation(line: 4522, column: 21, scope: !9302)
!9304 = !DILocation(line: 4522, column: 13, scope: !9293)
!9305 = !DILocation(line: 4523, column: 17, scope: !9302)
!9306 = !DILocation(line: 4523, column: 11, scope: !9302)
!9307 = !DILocation(line: 4524, column: 7, scope: !9293)
!9308 = !DILocation(line: 4525, column: 3, scope: !9198)
!9309 = !DILocation(line: 4470, column: 41, scope: !9192)
!9310 = !DILocation(line: 4470, column: 3, scope: !9192)
!9311 = distinct !{!9311, !9196, !9312}
!9312 = !DILocation(line: 4525, column: 3, scope: !9189)
!9313 = !DILocation(line: 4526, column: 31, scope: !8989)
!9314 = !DILocation(line: 4526, column: 14, scope: !8989)
!9315 = !DILocation(line: 4526, column: 13, scope: !8989)
!9316 = !DILocation(line: 4527, column: 59, scope: !8989)
!9317 = !DILocation(line: 4527, column: 36, scope: !8989)
!9318 = !DILocation(line: 4527, column: 17, scope: !8989)
!9319 = !DILocation(line: 4527, column: 16, scope: !8989)
!9320 = !DILocation(line: 4528, column: 10, scope: !8989)
!9321 = !DILocation(line: 4528, column: 3, scope: !8989)
!9322 = !DILocation(line: 4529, column: 1, scope: !8989)
!9323 = distinct !DISubprogram(name: "InverseScaledSigmoidal", scope: !1, file: !1, line: 4335, type: !9324, scopeLine: 4337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!9324 = !DISubroutineType(types: !9325)
!9325 = !{!543, !980, !980, !980}
!9326 = !DILocalVariable(name: "a", arg: 1, scope: !9323, file: !1, line: 4335, type: !980)
!9327 = !DILocation(line: 4335, column: 58, scope: !9323)
!9328 = !DILocalVariable(name: "b", arg: 2, scope: !9323, file: !1, line: 4335, type: !980)
!9329 = !DILocation(line: 4335, column: 73, scope: !9323)
!9330 = !DILocalVariable(name: "x", arg: 3, scope: !9323, file: !1, line: 4336, type: !980)
!9331 = !DILocation(line: 4336, column: 16, scope: !9323)
!9332 = !DILocalVariable(name: "sig0", scope: !9323, file: !1, line: 4338, type: !980)
!9333 = !DILocation(line: 4338, column: 16, scope: !9323)
!9334 = !DILocation(line: 4338, column: 21, scope: !9323)
!9335 = !DILocalVariable(name: "sig1", scope: !9323, file: !1, line: 4339, type: !980)
!9336 = !DILocation(line: 4339, column: 16, scope: !9323)
!9337 = !DILocation(line: 4339, column: 21, scope: !9323)
!9338 = !DILocalVariable(name: "argument", scope: !9323, file: !1, line: 4340, type: !980)
!9339 = !DILocation(line: 4340, column: 16, scope: !9323)
!9340 = !DILocation(line: 4340, column: 26, scope: !9323)
!9341 = !DILocation(line: 4340, column: 31, scope: !9323)
!9342 = !DILocation(line: 4340, column: 30, scope: !9323)
!9343 = !DILocation(line: 4340, column: 37, scope: !9323)
!9344 = !DILocation(line: 4340, column: 36, scope: !9323)
!9345 = !DILocation(line: 4340, column: 39, scope: !9323)
!9346 = !DILocation(line: 4340, column: 38, scope: !9323)
!9347 = !DILocalVariable(name: "clamped", scope: !9323, file: !1, line: 4341, type: !980)
!9348 = !DILocation(line: 4341, column: 16, scope: !9323)
!9349 = !DILocation(line: 4344, column: 7, scope: !9323)
!9350 = !DILocation(line: 4344, column: 16, scope: !9323)
!9351 = !DILocation(line: 4348, column: 9, scope: !9323)
!9352 = !DILocation(line: 4348, column: 18, scope: !9323)
!9353 = !DILocation(line: 4348, column: 56, scope: !9323)
!9354 = !DILocation(line: 4350, column: 10, scope: !9323)
!9355 = !DILocation(line: 4350, column: 17, scope: !9323)
!9356 = !DILocation(line: 4350, column: 16, scope: !9323)
!9357 = !DILocation(line: 4350, column: 26, scope: !9323)
!9358 = !DILocation(line: 4350, column: 20, scope: !9323)
!9359 = !DILocation(line: 4350, column: 19, scope: !9323)
!9360 = !DILocation(line: 4350, column: 11, scope: !9323)
!9361 = !DILocation(line: 4350, column: 3, scope: !9323)
!9362 = distinct !DISubprogram(name: "MagickPixelCompositePlus", scope: !6684, file: !6684, line: 114, type: !9363, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!9363 = !DISubroutineType(types: !9364)
!9364 = !{null, !2559, !2090, !2559, !2090, !771}
!9365 = !DILocalVariable(name: "p", arg: 1, scope: !9362, file: !6684, line: 114, type: !2559)
!9366 = !DILocation(line: 114, column: 70, scope: !9362)
!9367 = !DILocalVariable(name: "alpha", arg: 2, scope: !9362, file: !6684, line: 115, type: !2090)
!9368 = !DILocation(line: 115, column: 24, scope: !9362)
!9369 = !DILocalVariable(name: "q", arg: 3, scope: !9362, file: !6684, line: 115, type: !2559)
!9370 = !DILocation(line: 115, column: 55, scope: !9362)
!9371 = !DILocalVariable(name: "beta", arg: 4, scope: !9362, file: !6684, line: 116, type: !2090)
!9372 = !DILocation(line: 116, column: 24, scope: !9362)
!9373 = !DILocalVariable(name: "composite", arg: 5, scope: !9362, file: !6684, line: 116, type: !771)
!9374 = !DILocation(line: 116, column: 48, scope: !9362)
!9375 = !DILocalVariable(name: "gamma", scope: !9362, file: !6684, line: 119, type: !543)
!9376 = !DILocation(line: 119, column: 5, scope: !9362)
!9377 = !DILocalVariable(name: "Da", scope: !9362, file: !6684, line: 122, type: !769)
!9378 = !DILocation(line: 122, column: 5, scope: !9362)
!9379 = !DILocalVariable(name: "Sa", scope: !9362, file: !6684, line: 123, type: !769)
!9380 = !DILocation(line: 123, column: 5, scope: !9362)
!9381 = !DILocation(line: 128, column: 23, scope: !9362)
!9382 = !DILocation(line: 128, column: 22, scope: !9362)
!9383 = !DILocation(line: 128, column: 9, scope: !9362)
!9384 = !DILocation(line: 128, column: 6, scope: !9362)
!9385 = !DILocation(line: 128, column: 5, scope: !9362)
!9386 = !DILocation(line: 129, column: 23, scope: !9362)
!9387 = !DILocation(line: 129, column: 22, scope: !9362)
!9388 = !DILocation(line: 129, column: 9, scope: !9362)
!9389 = !DILocation(line: 129, column: 6, scope: !9362)
!9390 = !DILocation(line: 129, column: 5, scope: !9362)
!9391 = !DILocation(line: 130, column: 22, scope: !9362)
!9392 = !DILocation(line: 130, column: 25, scope: !9362)
!9393 = !DILocation(line: 130, column: 24, scope: !9362)
!9394 = !DILocation(line: 130, column: 9, scope: !9362)
!9395 = !DILocation(line: 130, column: 8, scope: !9362)
!9396 = !DILocation(line: 131, column: 57, scope: !9362)
!9397 = !DILocation(line: 131, column: 56, scope: !9362)
!9398 = !DILocation(line: 131, column: 51, scope: !9362)
!9399 = !DILocation(line: 131, column: 22, scope: !9362)
!9400 = !DILocation(line: 131, column: 3, scope: !9362)
!9401 = !DILocation(line: 131, column: 14, scope: !9362)
!9402 = !DILocation(line: 131, column: 21, scope: !9362)
!9403 = !DILocation(line: 132, column: 31, scope: !9362)
!9404 = !DILocation(line: 132, column: 9, scope: !9362)
!9405 = !DILocation(line: 132, column: 8, scope: !9362)
!9406 = !DILocation(line: 133, column: 18, scope: !9362)
!9407 = !DILocation(line: 133, column: 25, scope: !9362)
!9408 = !DILocation(line: 133, column: 28, scope: !9362)
!9409 = !DILocation(line: 133, column: 31, scope: !9362)
!9410 = !DILocation(line: 133, column: 27, scope: !9362)
!9411 = !DILocation(line: 133, column: 35, scope: !9362)
!9412 = !DILocation(line: 133, column: 38, scope: !9362)
!9413 = !DILocation(line: 133, column: 41, scope: !9362)
!9414 = !DILocation(line: 133, column: 37, scope: !9362)
!9415 = !DILocation(line: 133, column: 34, scope: !9362)
!9416 = !DILocation(line: 133, column: 24, scope: !9362)
!9417 = !DILocation(line: 133, column: 23, scope: !9362)
!9418 = !DILocation(line: 133, column: 3, scope: !9362)
!9419 = !DILocation(line: 133, column: 14, scope: !9362)
!9420 = !DILocation(line: 133, column: 17, scope: !9362)
!9421 = !DILocation(line: 134, column: 20, scope: !9362)
!9422 = !DILocation(line: 134, column: 27, scope: !9362)
!9423 = !DILocation(line: 134, column: 30, scope: !9362)
!9424 = !DILocation(line: 134, column: 33, scope: !9362)
!9425 = !DILocation(line: 134, column: 29, scope: !9362)
!9426 = !DILocation(line: 134, column: 39, scope: !9362)
!9427 = !DILocation(line: 134, column: 42, scope: !9362)
!9428 = !DILocation(line: 134, column: 45, scope: !9362)
!9429 = !DILocation(line: 134, column: 41, scope: !9362)
!9430 = !DILocation(line: 134, column: 38, scope: !9362)
!9431 = !DILocation(line: 134, column: 26, scope: !9362)
!9432 = !DILocation(line: 134, column: 25, scope: !9362)
!9433 = !DILocation(line: 134, column: 3, scope: !9362)
!9434 = !DILocation(line: 134, column: 14, scope: !9362)
!9435 = !DILocation(line: 134, column: 19, scope: !9362)
!9436 = !DILocation(line: 135, column: 19, scope: !9362)
!9437 = !DILocation(line: 135, column: 26, scope: !9362)
!9438 = !DILocation(line: 135, column: 29, scope: !9362)
!9439 = !DILocation(line: 135, column: 32, scope: !9362)
!9440 = !DILocation(line: 135, column: 28, scope: !9362)
!9441 = !DILocation(line: 135, column: 37, scope: !9362)
!9442 = !DILocation(line: 135, column: 40, scope: !9362)
!9443 = !DILocation(line: 135, column: 43, scope: !9362)
!9444 = !DILocation(line: 135, column: 39, scope: !9362)
!9445 = !DILocation(line: 135, column: 36, scope: !9362)
!9446 = !DILocation(line: 135, column: 25, scope: !9362)
!9447 = !DILocation(line: 135, column: 24, scope: !9362)
!9448 = !DILocation(line: 135, column: 3, scope: !9362)
!9449 = !DILocation(line: 135, column: 14, scope: !9362)
!9450 = !DILocation(line: 135, column: 18, scope: !9362)
!9451 = !DILocation(line: 136, column: 7, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9362, file: !6684, line: 136, column: 7)
!9453 = !DILocation(line: 136, column: 10, scope: !9452)
!9454 = !DILocation(line: 136, column: 21, scope: !9452)
!9455 = !DILocation(line: 136, column: 7, scope: !9362)
!9456 = !DILocation(line: 137, column: 22, scope: !9452)
!9457 = !DILocation(line: 137, column: 29, scope: !9452)
!9458 = !DILocation(line: 137, column: 32, scope: !9452)
!9459 = !DILocation(line: 137, column: 35, scope: !9452)
!9460 = !DILocation(line: 137, column: 31, scope: !9452)
!9461 = !DILocation(line: 137, column: 41, scope: !9452)
!9462 = !DILocation(line: 137, column: 44, scope: !9452)
!9463 = !DILocation(line: 137, column: 47, scope: !9452)
!9464 = !DILocation(line: 137, column: 43, scope: !9452)
!9465 = !DILocation(line: 137, column: 40, scope: !9452)
!9466 = !DILocation(line: 137, column: 28, scope: !9452)
!9467 = !DILocation(line: 137, column: 27, scope: !9452)
!9468 = !DILocation(line: 137, column: 5, scope: !9452)
!9469 = !DILocation(line: 137, column: 16, scope: !9452)
!9470 = !DILocation(line: 137, column: 21, scope: !9452)
!9471 = !DILocation(line: 138, column: 1, scope: !9362)
!9472 = distinct !DISubprogram(name: "RoundToUnity", scope: !6684, file: !6684, line: 33, type: !9473, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!9473 = !DISubroutineType(types: !9474)
!9474 = !{!769, !2090}
!9475 = !DILocalVariable(name: "value", arg: 1, scope: !9472, file: !6684, line: 33, type: !2090)
!9476 = !DILocation(line: 33, column: 64, scope: !9472)
!9477 = !DILocation(line: 35, column: 10, scope: !9472)
!9478 = !DILocation(line: 35, column: 16, scope: !9472)
!9479 = !DILocation(line: 35, column: 31, scope: !9472)
!9480 = !DILocation(line: 35, column: 37, scope: !9472)
!9481 = !DILocation(line: 35, column: 30, scope: !9472)
!9482 = !DILocation(line: 35, column: 52, scope: !9472)
!9483 = !DILocation(line: 35, column: 9, scope: !9472)
!9484 = !DILocation(line: 35, column: 3, scope: !9472)
!9485 = distinct !DISubprogram(name: "PerceptibleReciprocal", scope: !2510, file: !2510, line: 78, type: !9486, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !810)
!9486 = !DISubroutineType(types: !9487)
!9487 = !{!543, !980}
!9488 = !DILocalVariable(name: "x", arg: 1, scope: !9485, file: !2510, line: 78, type: !980)
!9489 = !DILocation(line: 78, column: 57, scope: !9485)
!9490 = !DILocalVariable(name: "sign", scope: !9485, file: !2510, line: 81, type: !543)
!9491 = !DILocation(line: 81, column: 5, scope: !9485)
!9492 = !DILocation(line: 86, column: 8, scope: !9485)
!9493 = !DILocation(line: 86, column: 10, scope: !9485)
!9494 = !DILocation(line: 86, column: 7, scope: !9485)
!9495 = !DILocation(line: 87, column: 8, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9485, file: !2510, line: 87, column: 7)
!9497 = !DILocation(line: 87, column: 13, scope: !9496)
!9498 = !DILocation(line: 87, column: 12, scope: !9496)
!9499 = !DILocation(line: 87, column: 16, scope: !9496)
!9500 = !DILocation(line: 87, column: 7, scope: !9485)
!9501 = !DILocation(line: 88, column: 16, scope: !9496)
!9502 = !DILocation(line: 88, column: 15, scope: !9496)
!9503 = !DILocation(line: 88, column: 5, scope: !9496)
!9504 = !DILocation(line: 89, column: 10, scope: !9485)
!9505 = !DILocation(line: 89, column: 14, scope: !9485)
!9506 = !DILocation(line: 89, column: 3, scope: !9485)
!9507 = !DILocation(line: 90, column: 1, scope: !9485)
