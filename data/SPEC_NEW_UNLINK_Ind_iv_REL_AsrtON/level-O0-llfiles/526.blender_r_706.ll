; ModuleID = 'blender/source/blender/editors/uvedit/uvedit_smart_stitch.c'
source_filename = "blender/source/blender/editors/uvedit/uvedit_smart_stitch.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.EnumPropertyItem = type { i32, i8*, i32, i8*, i8* }
%struct.StructRNA = type opaque
%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.ListBase = type { i8*, i8* }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.bContext = type opaque
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.rctf = type { float, float, float, float }
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type opaque
%struct.anim = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.uiLayout = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.PropertyRNA = type opaque
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.wmEventHandler = type opaque
%struct.StitchState = type { float, i8, float, i8, i8, %struct.BMEditMesh*, i8, %struct.UvElementMap*, %struct.UvEdge*, %struct.UvElement**, i32*, float*, %struct.UvEdge*, %struct.GHash*, i32, i32, i8**, i32, i32, i32*, i8, i8*, %struct.StitchPreviewer* }
%struct.BMEditMesh = type { %struct.BMesh*, %struct.BMEditMesh*, i32, [3 x %struct.BMLoop*]*, i32, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, [4 x i8]*, i32, [4 x i8]*, i32, i16, i16, %struct.Object*, i32 }
%struct.BMesh = type { i32, i32, i32, i32, i32, i32, i32, i8, i8, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BMVert**, %struct.BMEdge**, %struct.BMFace**, i32, i32, i32, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, i32, %struct.BMOperator*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i16, i32, i32, i32, %struct.ListBase, %struct.BMFace*, %struct.ListBase, i8* }
%struct.BMVert = type { %struct.BMHeader, %struct.BMFlagLayer*, [3 x float], [3 x float], %struct.BMEdge* }
%struct.BMHeader = type { i8*, i32, i8, i8, i8 }
%struct.BMFlagLayer = type { i16 }
%struct.BMEdge = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMVert*, %struct.BMVert*, %struct.BMLoop*, %struct.BMDiskLink, %struct.BMDiskLink }
%struct.BMLoop = type { %struct.BMHeader, %struct.BMVert*, %struct.BMEdge*, %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMDiskLink = type { %struct.BMEdge*, %struct.BMEdge* }
%struct.BLI_mempool = type opaque
%struct.BMOperator = type { [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot], void (%struct.BMesh*, %struct.BMOperator*)*, %struct.MemArena*, i32, i32, i32 }
%struct.BMOpSlot = type { i8*, i32, %union.eBMOpSlotSubType_Union, i32, %union.anon.0 }
%union.eBMOpSlotSubType_Union = type { i32 }
%union.anon.0 = type { i8*, [8 x i8] }
%struct.MemArena = type opaque
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.BMFace = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMLoop*, i32, [3 x float], i16 }
%struct.UvElementMap = type { %struct.UvElement**, %struct.UvElement*, i32, i32, i32* }
%struct.UvElement = type { %struct.UvElement*, %struct.BMLoop*, i16, i8, i8, i16 }
%struct.UvEdge = type { i32, i32, i8, %struct.UvElement*, %struct.UvEdge*, %struct.UvEdge* }
%struct.StitchPreviewer = type { float*, i32*, i32, float*, float*, i32, i32, i32, float*, i32 }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type opaque
%struct.BMIter = type { %union.anon, void (i8*)*, i8* (i8*)*, i32, i8 }
%union.anon = type { %struct.BMIter__face_of_vert }
%struct.BMIter__face_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.GHashIterator = type { %struct.GHash*, %struct.Entry*, i32 }
%struct.Entry = type opaque
%struct.CollectionPropertyIterator = type { %struct.PointerRNA, %struct.PointerRNA, %struct.PropertyRNA*, %union.anon.1, i32, i32, %struct.PointerRNA, i32 }
%union.anon.1 = type { %struct.ArrayIterator }
%struct.ArrayIterator = type { i8*, i8*, i8*, i32, i32, i32 (%struct.CollectionPropertyIterator*, i8*)* }
%struct._gh_Entry = type { i8*, i8*, i8* }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.IslandStitchData = type { float, float, [2 x float], [2 x float], i32, i32, i32, i8, i8, i8 }
%struct.UVVertAverage = type { [2 x float], i16 }
%struct.PreviewPosition = type { i32, i32 }
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.SpaceType = type opaque
%struct.BMIter__elem_of_mesh = type { %struct.BLI_mempool_iter }
%struct.BLI_mempool_iter = type { %struct.BLI_mempool*, %struct.BLI_mempool_chunk*, i32 }
%struct.BLI_mempool_chunk = type opaque
%struct.BMIter__edge_of_vert = type { %struct.BMVert*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__loop_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__vert_of_edge = type { %struct.BMEdge* }
%struct.BMIter__face_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__vert_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__edge_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_loop = type { %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct.NearestHit = type { %struct.BMFace*, %struct.MTexPoly*, %struct.BMLoop*, %struct.MLoopUV*, %struct.MLoopUV*, i32 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.SpaceImage = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, i32, %struct.Image*, %struct.ImageUser, %struct.CurveMapping*, %struct.Scopes, %struct.Histogram, %struct.bGPdata*, [2 x float], float, float, float, float, float, i8, i8, i16, i16, i16, i8, i8, i8, i8, %struct.MaskSpaceInfo }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.Scopes = type { i32, i32, i32, float, i32, float, float, i32, float, i32, [3 x [2 x float]], %struct.Histogram, float*, float*, float*, float*, i32, i32 }
%struct.Histogram = type { i32, i32, [256 x float], [256 x float], [256 x float], [256 x float], [256 x float], float, float, i16, i16, i32, [2 x [2 x float]] }
%struct.MaskSpaceInfo = type { %struct.Mask*, i8, i8, i8, [5 x i8] }

@UV_OT_stitch.stitch_modes = internal global [3 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !0
@.str = private unnamed_addr constant [7 x i8] c"VERTEX\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"Vertex\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"EDGE\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"Edge\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"Stitch\00", align 1
@.str.6 = private unnamed_addr constant [41 x i8] c"Stitch selected UV vertices by proximity\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"UV_OT_stitch\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"use_limit\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"Use Limit\00", align 1
@.str.10 = private unnamed_addr constant [45 x i8] c"Stitch UVs within a specified limit distance\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"snap_islands\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"Snap Islands\00", align 1
@.str.13 = private unnamed_addr constant [69 x i8] c"Snap islands together (on edge stitch mode, rotates the islands too)\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"limit\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"Limit\00", align 1
@.str.16 = private unnamed_addr constant [41 x i8] c"Limit distance in normalized coordinates\00", align 1
@.str.17 = private unnamed_addr constant [14 x i8] c"static_island\00", align 1
@.str.18 = private unnamed_addr constant [14 x i8] c"Static Island\00", align 1
@.str.19 = private unnamed_addr constant [50 x i8] c"Island that stays in place when stitching islands\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"midpoint_snap\00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c"Snap At Midpoint\00", align 1
@.str.22 = private unnamed_addr constant [57 x i8] c"UVs are stitched at midpoint instead of at static island\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"clear_seams\00", align 1
@.str.24 = private unnamed_addr constant [12 x i8] c"Clear Seams\00", align 1
@.str.25 = private unnamed_addr constant [30 x i8] c"Clear seams of stitched edges\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"Operation Mode\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"Use vertex or edge stitching\00", align 1
@.str.29 = private unnamed_addr constant [12 x i8] c"stored_mode\00", align 1
@.str.30 = private unnamed_addr constant [22 x i8] c"Stored Operation Mode\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"selection\00", align 1
@RNA_SelectedUvElement = external dso_local global %struct.StructRNA, align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"Selection\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.33 = private unnamed_addr constant [13 x i8] c"stitch state\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.34 = private unnamed_addr constant [21 x i8] c"uv_stitch_unique_uvs\00", align 1
@.str.35 = private unnamed_addr constant [18 x i8] c"uv_stitch_normals\00", align 1
@.str.36 = private unnamed_addr constant [21 x i8] c"uv_stitch_unique_map\00", align 1
@.str.37 = private unnamed_addr constant [17 x i8] c"stitch_edge_hash\00", align 1
@.str.38 = private unnamed_addr constant [17 x i8] c"stitch_all_edges\00", align 1
@.str.39 = private unnamed_addr constant [13 x i8] c"stitch_edges\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.40 = private unnamed_addr constant [26 x i8] c"uv_stitch_selection_stack\00", align 1
@.str.41 = private unnamed_addr constant [11 x i8] c"face_index\00", align 1
@.str.42 = private unnamed_addr constant [14 x i8] c"element_index\00", align 1
@.str.43 = private unnamed_addr constant [19 x i8] c"stitch island tris\00", align 1
@.str.44 = private unnamed_addr constant [32 x i8] c"stitch_new_edge_selection_stack\00", align 1
@.str.45 = private unnamed_addr constant [32 x i8] c"stitch_new_vert_selection_stack\00", align 1
@.str.46 = private unnamed_addr constant [29 x i8] c"stitch_face_preview_position\00", align 1
@.str.47 = private unnamed_addr constant [19 x i8] c"stitch_island_data\00", align 1
@.str.48 = private unnamed_addr constant [19 x i8] c"tri_uv_stitch_prev\00", align 1
@.str.49 = private unnamed_addr constant [30 x i8] c"stitch_preview_stichable_data\00", align 1
@.str.50 = private unnamed_addr constant [32 x i8] c"stitch_preview_unstichable_data\00", align 1
@.str.51 = private unnamed_addr constant [27 x i8] c"static_island_preview_tris\00", align 1
@.str.52 = private unnamed_addr constant [18 x i8] c"stitch_uv_average\00", align 1
@.str.53 = private unnamed_addr constant [20 x i8] c"stitch_uv_final_map\00", align 1
@.str.54 = private unnamed_addr constant [17 x i8] c"stitch_previewer\00", align 1
@U = external dso_local global %struct.UserDef, align 8
@stitch_update_header.str = internal global [116 x i8] c"Mode(TAB) %s, (S)nap %s, (M)idpoints %s, (L)imit %.2f (Alt Wheel adjust) %s, Switch (I)sland, shift select vertices\00", align 16, !dbg !2505

; Function Attrs: noinline nounwind uwtable
define dso_local void @UV_OT_stitch(%struct.wmOperatorType* %ot) #0 !dbg !2 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !2529, metadata !DIExpression()), !dbg !2530
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !2531, metadata !DIExpression()), !dbg !2532
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2533
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !2534
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8** %name, align 8, !dbg !2535
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2536
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !2537
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0), i8** %description, align 8, !dbg !2538
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2539
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !2540
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8** %idname, align 8, !dbg !2541
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2542
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !2543
  store i16 3, i16* %flag, align 8, !dbg !2544
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2545
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !2546
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @stitch_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !2547
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2548
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 8, !dbg !2549
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @stitch_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !2550
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2551
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 4, !dbg !2552
  store i32 (%struct.bContext*, %struct.wmOperator*)* @stitch_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !2553
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2554
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 7, !dbg !2555
  store void (%struct.bContext*, %struct.wmOperator*)* @stitch_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !2556
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2557
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 9, !dbg !2558
  store i32 (%struct.bContext*)* @ED_operator_uvedit, i32 (%struct.bContext*)** %poll, align 8, !dbg !2559
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2560
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !2561
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !2561
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !2560
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0)), !dbg !2562
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2563
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !2564
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !2564
  %14 = bitcast %struct.StructRNA* %13 to i8*, !dbg !2563
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %14, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.13, i64 0, i64 0)), !dbg !2565
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2566
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 11, !dbg !2567
  %16 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !2567
  %17 = bitcast %struct.StructRNA* %16 to i8*, !dbg !2566
  %call4 = call %struct.PropertyRNA* @RNA_def_float(i8* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), float 0x3F847AE140000000, float 0.000000e+00, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.16, i64 0, i64 0), float 0.000000e+00, float 0x47EFFFFFE0000000), !dbg !2568
  %18 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2569
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %18, i32 0, i32 11, !dbg !2570
  %19 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !2570
  %20 = bitcast %struct.StructRNA* %19 to i8*, !dbg !2569
  %call6 = call %struct.PropertyRNA* @RNA_def_int(i8* %20, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i32 0, i32 0, i32 2147483647, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.19, i64 0, i64 0), i32 0, i32 2147483647), !dbg !2571
  %21 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2572
  %srna7 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %21, i32 0, i32 11, !dbg !2573
  %22 = load %struct.StructRNA*, %struct.StructRNA** %srna7, align 8, !dbg !2573
  %23 = bitcast %struct.StructRNA* %22 to i8*, !dbg !2572
  %call8 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %23, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0)), !dbg !2574
  %24 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2575
  %srna9 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %24, i32 0, i32 11, !dbg !2576
  %25 = load %struct.StructRNA*, %struct.StructRNA** %srna9, align 8, !dbg !2576
  %26 = bitcast %struct.StructRNA* %25 to i8*, !dbg !2575
  %call10 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %26, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i64 0, i64 0)), !dbg !2577
  %27 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2578
  %srna11 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %27, i32 0, i32 11, !dbg !2579
  %28 = load %struct.StructRNA*, %struct.StructRNA** %srna11, align 8, !dbg !2579
  %29 = bitcast %struct.StructRNA* %28 to i8*, !dbg !2578
  %call12 = call %struct.PropertyRNA* @RNA_def_enum(i8* %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @UV_OT_stitch.stitch_modes, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0)), !dbg !2580
  %30 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2581
  %srna13 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %30, i32 0, i32 11, !dbg !2582
  %31 = load %struct.StructRNA*, %struct.StructRNA** %srna13, align 8, !dbg !2582
  %32 = bitcast %struct.StructRNA* %31 to i8*, !dbg !2581
  %call14 = call %struct.PropertyRNA* @RNA_def_enum(i8* %32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @UV_OT_stitch.stitch_modes, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0)), !dbg !2583
  store %struct.PropertyRNA* %call14, %struct.PropertyRNA** %prop, align 8, !dbg !2584
  %33 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !2585
  call void @RNA_def_property_flag(%struct.PropertyRNA* %33, i32 524288), !dbg !2586
  %34 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !2587
  %srna15 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %34, i32 0, i32 11, !dbg !2588
  %35 = load %struct.StructRNA*, %struct.StructRNA** %srna15, align 8, !dbg !2588
  %36 = bitcast %struct.StructRNA* %35 to i8*, !dbg !2587
  %call16 = call %struct.PropertyRNA* @RNA_def_collection_runtime(i8* %36, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0), %struct.StructRNA* @RNA_SelectedUvElement, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)), !dbg !2589
  store %struct.PropertyRNA* %call16, %struct.PropertyRNA** %prop, align 8, !dbg !2590
  %37 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !2591
  call void @RNA_def_property_flag(%struct.PropertyRNA* %37, i32 524288), !dbg !2592
  ret void, !dbg !2593
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @stitch_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !2594 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %obedit = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2602, metadata !DIExpression()), !dbg !2603
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !2604, metadata !DIExpression()), !dbg !2605
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !2606, metadata !DIExpression()), !dbg !2607
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !2608, metadata !DIExpression()), !dbg !2611
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2612
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !2613
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !2611
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2614
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !2616
  %call1 = call i32 @stitch_init(%struct.bContext* %1, %struct.wmOperator* %2), !dbg !2617
  %tobool = icmp ne i32 %call1, 0, !dbg !2617
  br i1 %tobool, label %if.end, label %if.then, !dbg !2618

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !2619
  br label %return, !dbg !2619

if.end:                                           ; preds = %entry
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2620
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !2621
  %call2 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %3, %struct.wmOperator* %4), !dbg !2622
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2623
  %6 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !2624
  %data = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 19, !dbg !2625
  %7 = load i8*, i8** %data, align 8, !dbg !2625
  call void @WM_event_add_notifier(%struct.bContext* %5, i32 274399232, i8* %7), !dbg !2626
  store i32 1, i32* %retval, align 4, !dbg !2627
  br label %return, !dbg !2627

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !2628
  ret i32 %8, !dbg !2628
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @stitch_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !2629 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %state = alloca %struct.StitchState*, align 8
  %scene = alloca %struct.Scene*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2630, metadata !DIExpression()), !dbg !2631
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !2632, metadata !DIExpression()), !dbg !2633
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !2634, metadata !DIExpression()), !dbg !2635
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state, metadata !2636, metadata !DIExpression()), !dbg !2637
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !2638, metadata !DIExpression()), !dbg !2641
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2642
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !2643
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !2641
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !2644
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 5, !dbg !2645
  %2 = load i8*, i8** %customdata, align 8, !dbg !2645
  %3 = bitcast i8* %2 to %struct.StitchState*, !dbg !2646
  store %struct.StitchState* %3, %struct.StitchState** %state, align 8, !dbg !2647
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2648
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %4, i32 0, i32 2, !dbg !2649
  %5 = load i16, i16* %type, align 8, !dbg !2649
  %conv = sext i16 %5 to i32, !dbg !2648
  switch i32 %conv, label %sw.default [
    i32 2, label %sw.bb
    i32 218, label %sw.bb1
    i32 1, label %sw.bb2
    i32 163, label %sw.bb13
    i32 220, label %sw.bb13
    i32 164, label %sw.bb23
    i32 10, label %sw.bb23
    i32 162, label %sw.bb37
    i32 11, label %sw.bb37
    i32 108, label %sw.bb58
    i32 105, label %sw.bb72
    i32 109, label %sw.bb84
    i32 3, label %sw.bb100
    i32 115, label %sw.bb118
    i32 219, label %sw.bb134
  ], !dbg !2650

sw.bb:                                            ; preds = %entry
  store i32 8, i32* %retval, align 4, !dbg !2651
  br label %return, !dbg !2651

sw.bb1:                                           ; preds = %entry
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2653
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !2654
  call void @stitch_cancel(%struct.bContext* %6, %struct.wmOperator* %7), !dbg !2655
  store i32 2, i32* %retval, align 4, !dbg !2656
  br label %return, !dbg !2656

sw.bb2:                                           ; preds = %entry
  %8 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2657
  %shift = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %8, i32 0, i32 17, !dbg !2659
  %9 = load i16, i16* %shift, align 8, !dbg !2659
  %conv3 = sext i16 %9 to i32, !dbg !2657
  %tobool = icmp ne i32 %conv3, 0, !dbg !2657
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !2660

land.lhs.true:                                    ; preds = %sw.bb2
  %10 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 2), align 8, !dbg !2661
  %and = and i32 %10, 16384, !dbg !2662
  %tobool4 = icmp ne i32 %and, 0, !dbg !2662
  br i1 %tobool4, label %if.then, label %if.end12, !dbg !2663

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2664
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %11, i32 0, i32 3, !dbg !2667
  %12 = load i16, i16* %val, align 2, !dbg !2667
  %conv5 = sext i16 %12 to i32, !dbg !2664
  %cmp = icmp eq i32 %conv5, 1, !dbg !2668
  br i1 %cmp, label %if.then7, label %if.end11, !dbg !2669

if.then7:                                         ; preds = %if.then
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2670
  %14 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !2672
  %15 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2673
  %16 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2674
  call void @stitch_select(%struct.bContext* %13, %struct.Scene* %14, %struct.wmEvent* %15, %struct.StitchState* %16), !dbg !2675
  %17 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2676
  %18 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !2678
  %call8 = call i32 @stitch_process_data(%struct.StitchState* %17, %struct.Scene* %18, i32 0), !dbg !2679
  %tobool9 = icmp ne i32 %call8, 0, !dbg !2679
  br i1 %tobool9, label %if.end, label %if.then10, !dbg !2680

if.then10:                                        ; preds = %if.then7
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2681
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !2683
  call void @stitch_cancel(%struct.bContext* %19, %struct.wmOperator* %20), !dbg !2684
  store i32 2, i32* %retval, align 4, !dbg !2685
  br label %return, !dbg !2685

if.end:                                           ; preds = %if.then7
  br label %if.end11, !dbg !2686

if.end11:                                         ; preds = %if.end, %if.then
  br label %sw.epilog, !dbg !2687

if.end12:                                         ; preds = %land.lhs.true, %sw.bb2
  br label %sw.bb13, !dbg !2688

sw.bb13:                                          ; preds = %entry, %entry, %if.end12
  %21 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2689
  %val14 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %21, i32 0, i32 3, !dbg !2691
  %22 = load i16, i16* %val14, align 2, !dbg !2691
  %conv15 = sext i16 %22 to i32, !dbg !2689
  %cmp16 = icmp eq i32 %conv15, 1, !dbg !2692
  br i1 %cmp16, label %if.then18, label %if.else22, !dbg !2693

if.then18:                                        ; preds = %sw.bb13
  %23 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2694
  %24 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !2697
  %call19 = call i32 @stitch_process_data(%struct.StitchState* %23, %struct.Scene* %24, i32 1), !dbg !2698
  %tobool20 = icmp ne i32 %call19, 0, !dbg !2698
  br i1 %tobool20, label %if.then21, label %if.else, !dbg !2699

if.then21:                                        ; preds = %if.then18
  %25 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2700
  %26 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !2702
  call void @stitch_exit(%struct.bContext* %25, %struct.wmOperator* %26, i32 1), !dbg !2703
  store i32 4, i32* %retval, align 4, !dbg !2704
  br label %return, !dbg !2704

if.else:                                          ; preds = %if.then18
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2705
  %28 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !2707
  call void @stitch_cancel(%struct.bContext* %27, %struct.wmOperator* %28), !dbg !2708
  store i32 2, i32* %retval, align 4, !dbg !2709
  br label %return, !dbg !2709

if.else22:                                        ; preds = %sw.bb13
  store i32 8, i32* %retval, align 4, !dbg !2710
  br label %return, !dbg !2710

sw.bb23:                                          ; preds = %entry, %entry
  %29 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2712
  %val24 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %29, i32 0, i32 3, !dbg !2714
  %30 = load i16, i16* %val24, align 2, !dbg !2714
  %conv25 = sext i16 %30 to i32, !dbg !2712
  %cmp26 = icmp eq i32 %conv25, 1, !dbg !2715
  br i1 %cmp26, label %land.lhs.true28, label %if.else36, !dbg !2716

land.lhs.true28:                                  ; preds = %sw.bb23
  %31 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2717
  %alt = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %31, i32 0, i32 19, !dbg !2718
  %32 = load i16, i16* %alt, align 4, !dbg !2718
  %conv29 = sext i16 %32 to i32, !dbg !2717
  %tobool30 = icmp ne i32 %conv29, 0, !dbg !2717
  br i1 %tobool30, label %if.then31, label %if.else36, !dbg !2719

if.then31:                                        ; preds = %land.lhs.true28
  %33 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2720
  %limit_dist = getelementptr inbounds %struct.StitchState, %struct.StitchState* %33, i32 0, i32 2, !dbg !2722
  %34 = load float, float* %limit_dist, align 8, !dbg !2723
  %add = fadd float %34, 0x3F847AE140000000, !dbg !2723
  store float %add, float* %limit_dist, align 8, !dbg !2723
  %35 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2724
  %36 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !2726
  %call32 = call i32 @stitch_process_data(%struct.StitchState* %35, %struct.Scene* %36, i32 0), !dbg !2727
  %tobool33 = icmp ne i32 %call32, 0, !dbg !2727
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !2728

if.then34:                                        ; preds = %if.then31
  %37 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2729
  %38 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !2731
  call void @stitch_cancel(%struct.bContext* %37, %struct.wmOperator* %38), !dbg !2732
  store i32 2, i32* %retval, align 4, !dbg !2733
  br label %return, !dbg !2733

if.end35:                                         ; preds = %if.then31
  br label %sw.epilog, !dbg !2734

if.else36:                                        ; preds = %land.lhs.true28, %sw.bb23
  store i32 8, i32* %retval, align 4, !dbg !2735
  br label %return, !dbg !2735

sw.bb37:                                          ; preds = %entry, %entry
  %39 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2737
  %val38 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %39, i32 0, i32 3, !dbg !2739
  %40 = load i16, i16* %val38, align 2, !dbg !2739
  %conv39 = sext i16 %40 to i32, !dbg !2737
  %cmp40 = icmp eq i32 %conv39, 1, !dbg !2740
  br i1 %cmp40, label %land.lhs.true42, label %if.else57, !dbg !2741

land.lhs.true42:                                  ; preds = %sw.bb37
  %41 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2742
  %alt43 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %41, i32 0, i32 19, !dbg !2743
  %42 = load i16, i16* %alt43, align 4, !dbg !2743
  %conv44 = sext i16 %42 to i32, !dbg !2742
  %tobool45 = icmp ne i32 %conv44, 0, !dbg !2742
  br i1 %tobool45, label %if.then46, label %if.else57, !dbg !2744

if.then46:                                        ; preds = %land.lhs.true42
  %43 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2745
  %limit_dist47 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %43, i32 0, i32 2, !dbg !2747
  %44 = load float, float* %limit_dist47, align 8, !dbg !2748
  %sub = fsub float %44, 0x3F847AE140000000, !dbg !2748
  store float %sub, float* %limit_dist47, align 8, !dbg !2748
  %45 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2749
  %limit_dist48 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %45, i32 0, i32 2, !dbg !2749
  %46 = load float, float* %limit_dist48, align 8, !dbg !2749
  %cmp49 = fcmp ogt float 0x3F847AE140000000, %46, !dbg !2749
  br i1 %cmp49, label %cond.true, label %cond.false, !dbg !2749

cond.true:                                        ; preds = %if.then46
  br label %cond.end, !dbg !2749

cond.false:                                       ; preds = %if.then46
  %47 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2749
  %limit_dist51 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %47, i32 0, i32 2, !dbg !2749
  %48 = load float, float* %limit_dist51, align 8, !dbg !2749
  br label %cond.end, !dbg !2749

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ 0x3F847AE140000000, %cond.true ], [ %48, %cond.false ], !dbg !2749
  %49 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2750
  %limit_dist52 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %49, i32 0, i32 2, !dbg !2751
  store float %cond, float* %limit_dist52, align 8, !dbg !2752
  %50 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2753
  %51 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !2755
  %call53 = call i32 @stitch_process_data(%struct.StitchState* %50, %struct.Scene* %51, i32 0), !dbg !2756
  %tobool54 = icmp ne i32 %call53, 0, !dbg !2756
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !2757

if.then55:                                        ; preds = %cond.end
  %52 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2758
  %53 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !2760
  call void @stitch_cancel(%struct.bContext* %52, %struct.wmOperator* %53), !dbg !2761
  store i32 2, i32* %retval, align 4, !dbg !2762
  br label %return, !dbg !2762

if.end56:                                         ; preds = %cond.end
  br label %sw.epilog, !dbg !2763

if.else57:                                        ; preds = %land.lhs.true42, %sw.bb37
  store i32 8, i32* %retval, align 4, !dbg !2764
  br label %return, !dbg !2764

sw.bb58:                                          ; preds = %entry
  %54 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2766
  %val59 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %54, i32 0, i32 3, !dbg !2768
  %55 = load i16, i16* %val59, align 2, !dbg !2768
  %conv60 = sext i16 %55 to i32, !dbg !2766
  %cmp61 = icmp eq i32 %conv60, 1, !dbg !2769
  br i1 %cmp61, label %if.then63, label %if.end71, !dbg !2770

if.then63:                                        ; preds = %sw.bb58
  %56 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2771
  %use_limit = getelementptr inbounds %struct.StitchState, %struct.StitchState* %56, i32 0, i32 1, !dbg !2773
  %57 = load i8, i8* %use_limit, align 4, !dbg !2773
  %tobool64 = icmp ne i8 %57, 0, !dbg !2774
  %lnot = xor i1 %tobool64, true, !dbg !2774
  %lnot.ext = zext i1 %lnot to i32, !dbg !2774
  %conv65 = trunc i32 %lnot.ext to i8, !dbg !2774
  %58 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2775
  %use_limit66 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %58, i32 0, i32 1, !dbg !2776
  store i8 %conv65, i8* %use_limit66, align 4, !dbg !2777
  %59 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2778
  %60 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !2780
  %call67 = call i32 @stitch_process_data(%struct.StitchState* %59, %struct.Scene* %60, i32 0), !dbg !2781
  %tobool68 = icmp ne i32 %call67, 0, !dbg !2781
  br i1 %tobool68, label %if.end70, label %if.then69, !dbg !2782

if.then69:                                        ; preds = %if.then63
  %61 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2783
  %62 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !2785
  call void @stitch_cancel(%struct.bContext* %61, %struct.wmOperator* %62), !dbg !2786
  store i32 2, i32* %retval, align 4, !dbg !2787
  br label %return, !dbg !2787

if.end70:                                         ; preds = %if.then63
  br label %sw.epilog, !dbg !2788

if.end71:                                         ; preds = %sw.bb58
  store i32 1, i32* %retval, align 4, !dbg !2789
  br label %return, !dbg !2789

sw.bb72:                                          ; preds = %entry
  %63 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2790
  %val73 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %63, i32 0, i32 3, !dbg !2792
  %64 = load i16, i16* %val73, align 2, !dbg !2792
  %conv74 = sext i16 %64 to i32, !dbg !2790
  %cmp75 = icmp eq i32 %conv74, 1, !dbg !2793
  br i1 %cmp75, label %if.then77, label %if.end83, !dbg !2794

if.then77:                                        ; preds = %sw.bb72
  %65 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2795
  %static_island = getelementptr inbounds %struct.StitchState, %struct.StitchState* %65, i32 0, i32 18, !dbg !2797
  %66 = load i32, i32* %static_island, align 4, !dbg !2798
  %inc = add nsw i32 %66, 1, !dbg !2798
  store i32 %inc, i32* %static_island, align 4, !dbg !2798
  %67 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2799
  %element_map = getelementptr inbounds %struct.StitchState, %struct.StitchState* %67, i32 0, i32 7, !dbg !2800
  %68 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map, align 8, !dbg !2800
  %totalIslands = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %68, i32 0, i32 3, !dbg !2801
  %69 = load i32, i32* %totalIslands, align 4, !dbg !2801
  %70 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2802
  %static_island78 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %70, i32 0, i32 18, !dbg !2803
  %71 = load i32, i32* %static_island78, align 4, !dbg !2804
  %rem = srem i32 %71, %69, !dbg !2804
  store i32 %rem, i32* %static_island78, align 4, !dbg !2804
  %72 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2805
  %73 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !2807
  %call79 = call i32 @stitch_process_data(%struct.StitchState* %72, %struct.Scene* %73, i32 0), !dbg !2808
  %tobool80 = icmp ne i32 %call79, 0, !dbg !2808
  br i1 %tobool80, label %if.end82, label %if.then81, !dbg !2809

if.then81:                                        ; preds = %if.then77
  %74 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2810
  %75 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !2812
  call void @stitch_cancel(%struct.bContext* %74, %struct.wmOperator* %75), !dbg !2813
  store i32 2, i32* %retval, align 4, !dbg !2814
  br label %return, !dbg !2814

if.end82:                                         ; preds = %if.then77
  br label %sw.epilog, !dbg !2815

if.end83:                                         ; preds = %sw.bb72
  store i32 1, i32* %retval, align 4, !dbg !2816
  br label %return, !dbg !2816

sw.bb84:                                          ; preds = %entry
  %76 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2817
  %val85 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %76, i32 0, i32 3, !dbg !2819
  %77 = load i16, i16* %val85, align 2, !dbg !2819
  %conv86 = sext i16 %77 to i32, !dbg !2817
  %cmp87 = icmp eq i32 %conv86, 1, !dbg !2820
  br i1 %cmp87, label %if.then89, label %if.end99, !dbg !2821

if.then89:                                        ; preds = %sw.bb84
  %78 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2822
  %midpoints = getelementptr inbounds %struct.StitchState, %struct.StitchState* %78, i32 0, i32 4, !dbg !2824
  %79 = load i8, i8* %midpoints, align 1, !dbg !2824
  %tobool90 = icmp ne i8 %79, 0, !dbg !2825
  %lnot91 = xor i1 %tobool90, true, !dbg !2825
  %lnot.ext92 = zext i1 %lnot91 to i32, !dbg !2825
  %conv93 = trunc i32 %lnot.ext92 to i8, !dbg !2825
  %80 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2826
  %midpoints94 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %80, i32 0, i32 4, !dbg !2827
  store i8 %conv93, i8* %midpoints94, align 1, !dbg !2828
  %81 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2829
  %82 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !2831
  %call95 = call i32 @stitch_process_data(%struct.StitchState* %81, %struct.Scene* %82, i32 0), !dbg !2832
  %tobool96 = icmp ne i32 %call95, 0, !dbg !2832
  br i1 %tobool96, label %if.end98, label %if.then97, !dbg !2833

if.then97:                                        ; preds = %if.then89
  %83 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2834
  %84 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !2836
  call void @stitch_cancel(%struct.bContext* %83, %struct.wmOperator* %84), !dbg !2837
  store i32 2, i32* %retval, align 4, !dbg !2838
  br label %return, !dbg !2838

if.end98:                                         ; preds = %if.then89
  br label %if.end99, !dbg !2839

if.end99:                                         ; preds = %if.end98, %sw.bb84
  br label %sw.epilog, !dbg !2840

sw.bb100:                                         ; preds = %entry
  %85 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2841
  %shift101 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %85, i32 0, i32 17, !dbg !2843
  %86 = load i16, i16* %shift101, align 8, !dbg !2843
  %tobool102 = icmp ne i16 %86, 0, !dbg !2841
  br i1 %tobool102, label %if.end104, label %if.then103, !dbg !2844

if.then103:                                       ; preds = %sw.bb100
  %87 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2845
  %88 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !2847
  call void @stitch_cancel(%struct.bContext* %87, %struct.wmOperator* %88), !dbg !2848
  store i32 2, i32* %retval, align 4, !dbg !2849
  br label %return, !dbg !2849

if.end104:                                        ; preds = %sw.bb100
  %89 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2850
  %val105 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %89, i32 0, i32 3, !dbg !2852
  %90 = load i16, i16* %val105, align 2, !dbg !2852
  %conv106 = sext i16 %90 to i32, !dbg !2850
  %cmp107 = icmp eq i32 %conv106, 1, !dbg !2853
  br i1 %cmp107, label %land.lhs.true109, label %if.end117, !dbg !2854

land.lhs.true109:                                 ; preds = %if.end104
  %91 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 2), align 8, !dbg !2855
  %and110 = and i32 %91, 16384, !dbg !2856
  %tobool111 = icmp ne i32 %and110, 0, !dbg !2856
  br i1 %tobool111, label %if.end117, label %if.then112, !dbg !2857

if.then112:                                       ; preds = %land.lhs.true109
  %92 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2858
  %93 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !2860
  %94 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2861
  %95 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2862
  call void @stitch_select(%struct.bContext* %92, %struct.Scene* %93, %struct.wmEvent* %94, %struct.StitchState* %95), !dbg !2863
  %96 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2864
  %97 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !2866
  %call113 = call i32 @stitch_process_data(%struct.StitchState* %96, %struct.Scene* %97, i32 0), !dbg !2867
  %tobool114 = icmp ne i32 %call113, 0, !dbg !2867
  br i1 %tobool114, label %if.end116, label %if.then115, !dbg !2868

if.then115:                                       ; preds = %if.then112
  %98 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2869
  %99 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !2871
  call void @stitch_cancel(%struct.bContext* %98, %struct.wmOperator* %99), !dbg !2872
  store i32 2, i32* %retval, align 4, !dbg !2873
  br label %return, !dbg !2873

if.end116:                                        ; preds = %if.then112
  br label %sw.epilog, !dbg !2874

if.end117:                                        ; preds = %land.lhs.true109, %if.end104
  store i32 1, i32* %retval, align 4, !dbg !2875
  br label %return, !dbg !2875

sw.bb118:                                         ; preds = %entry
  %100 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2876
  %val119 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %100, i32 0, i32 3, !dbg !2878
  %101 = load i16, i16* %val119, align 2, !dbg !2878
  %conv120 = sext i16 %101 to i32, !dbg !2876
  %cmp121 = icmp eq i32 %conv120, 1, !dbg !2879
  br i1 %cmp121, label %if.then123, label %if.else133, !dbg !2880

if.then123:                                       ; preds = %sw.bb118
  %102 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2881
  %snap_islands = getelementptr inbounds %struct.StitchState, %struct.StitchState* %102, i32 0, i32 3, !dbg !2883
  %103 = load i8, i8* %snap_islands, align 4, !dbg !2883
  %tobool124 = icmp ne i8 %103, 0, !dbg !2884
  %lnot125 = xor i1 %tobool124, true, !dbg !2884
  %lnot.ext126 = zext i1 %lnot125 to i32, !dbg !2884
  %conv127 = trunc i32 %lnot.ext126 to i8, !dbg !2884
  %104 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2885
  %snap_islands128 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %104, i32 0, i32 3, !dbg !2886
  store i8 %conv127, i8* %snap_islands128, align 4, !dbg !2887
  %105 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2888
  %106 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !2890
  %call129 = call i32 @stitch_process_data(%struct.StitchState* %105, %struct.Scene* %106, i32 0), !dbg !2891
  %tobool130 = icmp ne i32 %call129, 0, !dbg !2891
  br i1 %tobool130, label %if.end132, label %if.then131, !dbg !2892

if.then131:                                       ; preds = %if.then123
  %107 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2893
  %108 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !2895
  call void @stitch_cancel(%struct.bContext* %107, %struct.wmOperator* %108), !dbg !2896
  store i32 2, i32* %retval, align 4, !dbg !2897
  br label %return, !dbg !2897

if.end132:                                        ; preds = %if.then123
  br label %sw.epilog, !dbg !2898

if.else133:                                       ; preds = %sw.bb118
  store i32 1, i32* %retval, align 4, !dbg !2899
  br label %return, !dbg !2899

sw.bb134:                                         ; preds = %entry
  %109 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2901
  %val135 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %109, i32 0, i32 3, !dbg !2903
  %110 = load i16, i16* %val135, align 2, !dbg !2903
  %conv136 = sext i16 %110 to i32, !dbg !2901
  %cmp137 = icmp eq i32 %conv136, 1, !dbg !2904
  br i1 %cmp137, label %if.then139, label %if.end144, !dbg !2905

if.then139:                                       ; preds = %sw.bb134
  %111 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2906
  call void @stitch_switch_selection_mode(%struct.StitchState* %111), !dbg !2908
  %112 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2909
  %113 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !2911
  %call140 = call i32 @stitch_process_data(%struct.StitchState* %112, %struct.Scene* %113, i32 0), !dbg !2912
  %tobool141 = icmp ne i32 %call140, 0, !dbg !2912
  br i1 %tobool141, label %if.end143, label %if.then142, !dbg !2913

if.then142:                                       ; preds = %if.then139
  %114 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2914
  %115 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !2916
  call void @stitch_cancel(%struct.bContext* %114, %struct.wmOperator* %115), !dbg !2917
  store i32 2, i32* %retval, align 4, !dbg !2918
  br label %return, !dbg !2918

if.end143:                                        ; preds = %if.then139
  br label %if.end144, !dbg !2919

if.end144:                                        ; preds = %if.end143, %sw.bb134
  br label %sw.epilog, !dbg !2920

sw.default:                                       ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !2921
  br label %return, !dbg !2921

sw.epilog:                                        ; preds = %if.end144, %if.end132, %if.end116, %if.end99, %if.end82, %if.end70, %if.end56, %if.end35, %if.end11
  %116 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !2922
  %117 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2923
  call void @stitch_update_header(%struct.StitchState* %116, %struct.bContext* %117), !dbg !2924
  %118 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2925
  %call145 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %118), !dbg !2926
  call void @ED_region_tag_redraw(%struct.ARegion* %call145), !dbg !2927
  store i32 1, i32* %retval, align 4, !dbg !2928
  br label %return, !dbg !2928

return:                                           ; preds = %sw.epilog, %sw.default, %if.then142, %if.else133, %if.then131, %if.end117, %if.then115, %if.then103, %if.then97, %if.end83, %if.then81, %if.end71, %if.then69, %if.else57, %if.then55, %if.else36, %if.then34, %if.else22, %if.else, %if.then21, %if.then10, %sw.bb1, %sw.bb
  %119 = load i32, i32* %retval, align 4, !dbg !2929
  ret i32 %119, !dbg !2929
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @stitch_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !2930 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2933, metadata !DIExpression()), !dbg !2934
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !2935, metadata !DIExpression()), !dbg !2936
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !2937, metadata !DIExpression()), !dbg !2938
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2939
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !2940
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !2938
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2941
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !2943
  %call1 = call i32 @stitch_init(%struct.bContext* %1, %struct.wmOperator* %2), !dbg !2944
  %tobool = icmp ne i32 %call1, 0, !dbg !2944
  br i1 %tobool, label %if.end, label %if.then, !dbg !2945

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !2946
  br label %return, !dbg !2946

if.end:                                           ; preds = %entry
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !2947
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 5, !dbg !2949
  %4 = load i8*, i8** %customdata, align 8, !dbg !2949
  %5 = bitcast i8* %4 to %struct.StitchState*, !dbg !2950
  %6 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !2951
  %call2 = call i32 @stitch_process_data(%struct.StitchState* %5, %struct.Scene* %6, i32 1), !dbg !2952
  %tobool3 = icmp ne i32 %call2, 0, !dbg !2952
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !2953

if.then4:                                         ; preds = %if.end
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2954
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !2956
  call void @stitch_exit(%struct.bContext* %7, %struct.wmOperator* %8, i32 1), !dbg !2957
  store i32 4, i32* %retval, align 4, !dbg !2958
  br label %return, !dbg !2958

if.else:                                          ; preds = %if.end
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2959
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !2961
  call void @stitch_cancel(%struct.bContext* %9, %struct.wmOperator* %10), !dbg !2962
  store i32 2, i32* %retval, align 4, !dbg !2963
  br label %return, !dbg !2963

return:                                           ; preds = %if.else, %if.then4, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !2964
  ret i32 %11, !dbg !2964
}

; Function Attrs: noinline nounwind uwtable
define internal void @stitch_cancel(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !2965 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2968, metadata !DIExpression()), !dbg !2969
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !2970, metadata !DIExpression()), !dbg !2971
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2972
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !2973
  call void @stitch_exit(%struct.bContext* %0, %struct.wmOperator* %1, i32 0), !dbg !2974
  ret void, !dbg !2975
}

declare dso_local i32 @ED_operator_uvedit(%struct.bContext*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_boolean(i8*, i8*, i32, i8*, i8*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_float(i8*, i8*, float, float, float, i8*, i8*, float, float) #2

declare dso_local %struct.PropertyRNA* @RNA_def_int(i8*, i8*, i32, i32, i32, i8*, i8*, i32, i32) #2

declare dso_local %struct.PropertyRNA* @RNA_def_enum(i8*, i8*, %struct.EnumPropertyItem*, i32, i8*, i8*) #2

declare dso_local void @RNA_def_property_flag(%struct.PropertyRNA*, i32) #2

declare dso_local %struct.PropertyRNA* @RNA_def_collection_runtime(i8*, i8*, %struct.StructRNA*, i8*, i8*) #2

declare dso_local %struct.Object* @CTX_data_edit_object(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @stitch_init(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !2976 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %edge_hash = alloca %struct.GHash*, align 8
  %edges = alloca %struct.UvEdge*, align 8
  %total_edges = alloca i32, align 4
  %map = alloca i32*, align 8
  %counter = alloca i32, align 4
  %i = alloca i32, align 4
  %efa = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %ghi = alloca %struct.GHashIterator*, align 8
  %all_edges = alloca %struct.UvEdge*, align 8
  %state = alloca %struct.StitchState*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ts = alloca %struct.ToolSettings*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %aspx = alloca float, align 4
  %aspy = alloca float, align 4
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %cd_loop_uv_offset = alloca i32, align 4
  %element = alloca %struct.UvElement*, align 8
  %element153 = alloca %struct.UvElement*, align 8
  %offset1 = alloca i32, align 4
  %itmp1 = alloca i32, align 4
  %offset2 = alloca i32, align 4
  %itmp2 = alloca i32, align 4
  %edge = alloca %struct.UvEdge*, align 8
  %edge258 = alloca %struct.UvEdge*, align 8
  %normal = alloca [2 x float], align 4
  %faceIndex = alloca i32, align 4
  %elementIndex = alloca i32, align 4
  %element299 = alloca %struct.UvElement*, align 8
  %stored_mode = alloca i32, align 4
  %rna_macro_iter = alloca %struct.CollectionPropertyIterator, align 8
  %itemptr = alloca %struct.PointerRNA, align 8
  %rna_macro_iter330 = alloca %struct.CollectionPropertyIterator, align 8
  %itemptr336 = alloca %struct.PointerRNA, align 8
  %tmp_edge = alloca %struct.UvEdge, align 8
  %edge338 = alloca %struct.UvEdge*, align 8
  %uv1339 = alloca i32, align 4
  %uv2340 = alloca i32, align 4
  %element411 = alloca %struct.UvElement*, align 8
  %edge458 = alloca %struct.UvEdge*, align 8
  %element494 = alloca %struct.UvElement*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2977, metadata !DIExpression()), !dbg !2978
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !2979, metadata !DIExpression()), !dbg !2980
  call void @llvm.dbg.declare(metadata %struct.GHash** %edge_hash, metadata !2981, metadata !DIExpression()), !dbg !2982
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edges, metadata !2983, metadata !DIExpression()), !dbg !2984
  call void @llvm.dbg.declare(metadata i32* %total_edges, metadata !2985, metadata !DIExpression()), !dbg !2986
  call void @llvm.dbg.declare(metadata i32** %map, metadata !2987, metadata !DIExpression()), !dbg !2988
  call void @llvm.dbg.declare(metadata i32* %counter, metadata !2989, metadata !DIExpression()), !dbg !2990
  store i32 0, i32* %counter, align 4, !dbg !2990
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2991, metadata !DIExpression()), !dbg !2992
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !2993, metadata !DIExpression()), !dbg !2994
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !2995, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !2997, metadata !DIExpression()), !dbg !3085
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !3086, metadata !DIExpression()), !dbg !3087
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi, metadata !3088, metadata !DIExpression()), !dbg !3098
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %all_edges, metadata !3099, metadata !DIExpression()), !dbg !3100
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state, metadata !3101, metadata !DIExpression()), !dbg !3102
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !3103, metadata !DIExpression()), !dbg !3104
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3105
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !3106
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !3104
  call void @llvm.dbg.declare(metadata %struct.ToolSettings** %ts, metadata !3107, metadata !DIExpression()), !dbg !3110
  %1 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3111
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %1, i32 0, i32 20, !dbg !3112
  %2 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !3112
  store %struct.ToolSettings* %2, %struct.ToolSettings** %ts, align 8, !dbg !3110
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !3113, metadata !DIExpression()), !dbg !3185
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3186
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %3), !dbg !3187
  store %struct.ARegion* %call1, %struct.ARegion** %ar, align 8, !dbg !3185
  call void @llvm.dbg.declare(metadata float* %aspx, metadata !3188, metadata !DIExpression()), !dbg !3189
  call void @llvm.dbg.declare(metadata float* %aspy, metadata !3190, metadata !DIExpression()), !dbg !3191
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !3192, metadata !DIExpression()), !dbg !3193
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3194
  %call2 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %4), !dbg !3195
  store %struct.Object* %call2, %struct.Object** %obedit, align 8, !dbg !3193
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !3196, metadata !DIExpression()), !dbg !3197
  %5 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !3198
  %call3 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %5), !dbg !3199
  store %struct.BMEditMesh* %call3, %struct.BMEditMesh** %em, align 8, !dbg !3197
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !3200, metadata !DIExpression()), !dbg !3202
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3203
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !3204
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3204
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %7, i32 0, i32 26, !dbg !3205
  %call4 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !3206
  store i32 %call4, i32* %cd_loop_uv_offset, align 4, !dbg !3202
  %8 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !3207
  %tobool = icmp ne %struct.ARegion* %8, null, !dbg !3207
  br i1 %tobool, label %if.end, label %if.then, !dbg !3209

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3210
  br label %return, !dbg !3210

if.end:                                           ; preds = %entry
  %9 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3211
  %call5 = call i8* %9(i64 144, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0)), !dbg !3211
  %10 = bitcast i8* %call5 to %struct.StitchState*, !dbg !3211
  store %struct.StitchState* %10, %struct.StitchState** %state, align 8, !dbg !3212
  %11 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3213
  %12 = bitcast %struct.StitchState* %11 to i8*, !dbg !3213
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3214
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 5, !dbg !3215
  store i8* %12, i8** %customdata, align 8, !dbg !3216
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3217
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 7, !dbg !3218
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !3218
  %call6 = call i32 @RNA_boolean_get(%struct.PointerRNA* %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0)), !dbg !3219
  %conv = trunc i32 %call6 to i8, !dbg !3219
  %16 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3220
  %use_limit = getelementptr inbounds %struct.StitchState, %struct.StitchState* %16, i32 0, i32 1, !dbg !3221
  store i8 %conv, i8* %use_limit, align 4, !dbg !3222
  %17 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3223
  %ptr7 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %17, i32 0, i32 7, !dbg !3224
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr7, align 8, !dbg !3224
  %call8 = call float @RNA_float_get(%struct.PointerRNA* %18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)), !dbg !3225
  %19 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3226
  %limit_dist = getelementptr inbounds %struct.StitchState, %struct.StitchState* %19, i32 0, i32 2, !dbg !3227
  store float %call8, float* %limit_dist, align 8, !dbg !3228
  %20 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3229
  %21 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3230
  %em9 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %21, i32 0, i32 5, !dbg !3231
  store %struct.BMEditMesh* %20, %struct.BMEditMesh** %em9, align 8, !dbg !3232
  %22 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3233
  %ptr10 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %22, i32 0, i32 7, !dbg !3234
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr10, align 8, !dbg !3234
  %call11 = call i32 @RNA_boolean_get(%struct.PointerRNA* %23, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0)), !dbg !3235
  %conv12 = trunc i32 %call11 to i8, !dbg !3235
  %24 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3236
  %snap_islands = getelementptr inbounds %struct.StitchState, %struct.StitchState* %24, i32 0, i32 3, !dbg !3237
  store i8 %conv12, i8* %snap_islands, align 4, !dbg !3238
  %25 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3239
  %ptr13 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %25, i32 0, i32 7, !dbg !3240
  %26 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr13, align 8, !dbg !3240
  %call14 = call i32 @RNA_int_get(%struct.PointerRNA* %26, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0)), !dbg !3241
  %27 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3242
  %static_island = getelementptr inbounds %struct.StitchState, %struct.StitchState* %27, i32 0, i32 18, !dbg !3243
  store i32 %call14, i32* %static_island, align 4, !dbg !3244
  %28 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3245
  %ptr15 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %28, i32 0, i32 7, !dbg !3246
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr15, align 8, !dbg !3246
  %call16 = call i32 @RNA_boolean_get(%struct.PointerRNA* %29, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0)), !dbg !3247
  %conv17 = trunc i32 %call16 to i8, !dbg !3247
  %30 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3248
  %midpoints = getelementptr inbounds %struct.StitchState, %struct.StitchState* %30, i32 0, i32 4, !dbg !3249
  store i8 %conv17, i8* %midpoints, align 1, !dbg !3250
  %31 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3251
  %ptr18 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %31, i32 0, i32 7, !dbg !3252
  %32 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr18, align 8, !dbg !3252
  %call19 = call i32 @RNA_boolean_get(%struct.PointerRNA* %32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0)), !dbg !3253
  %conv20 = trunc i32 %call19 to i8, !dbg !3253
  %33 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3254
  %clear_seams = getelementptr inbounds %struct.StitchState, %struct.StitchState* %33, i32 0, i32 6, !dbg !3255
  store i8 %conv20, i8* %clear_seams, align 8, !dbg !3256
  %34 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3257
  %ptr21 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %34, i32 0, i32 7, !dbg !3259
  %35 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr21, align 8, !dbg !3259
  %call22 = call zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA* %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0)), !dbg !3260
  %tobool23 = icmp ne i8 %call22, 0, !dbg !3260
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !3261

if.then24:                                        ; preds = %if.end
  %36 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3262
  %ptr25 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %36, i32 0, i32 7, !dbg !3264
  %37 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr25, align 8, !dbg !3264
  %call26 = call i32 @RNA_enum_get(%struct.PointerRNA* %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0)), !dbg !3265
  %conv27 = trunc i32 %call26 to i8, !dbg !3265
  %38 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3266
  %mode = getelementptr inbounds %struct.StitchState, %struct.StitchState* %38, i32 0, i32 20, !dbg !3267
  store i8 %conv27, i8* %mode, align 8, !dbg !3268
  br label %if.end49, !dbg !3269

if.else:                                          ; preds = %if.end
  %39 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !3270
  %uv_flag = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %39, i32 0, i32 11, !dbg !3273
  %40 = load i8, i8* %uv_flag, align 2, !dbg !3273
  %conv28 = zext i8 %40 to i32, !dbg !3270
  %and = and i32 %conv28, 1, !dbg !3274
  %tobool29 = icmp ne i32 %and, 0, !dbg !3274
  br i1 %tobool29, label %if.then30, label %if.else39, !dbg !3275

if.then30:                                        ; preds = %if.else
  %41 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !3276
  %selectmode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %41, i32 0, i32 8, !dbg !3279
  %42 = load i16, i16* %selectmode, align 2, !dbg !3279
  %conv31 = sext i16 %42 to i32, !dbg !3276
  %and32 = and i32 %conv31, 1, !dbg !3280
  %tobool33 = icmp ne i32 %and32, 0, !dbg !3280
  br i1 %tobool33, label %if.then34, label %if.else36, !dbg !3281

if.then34:                                        ; preds = %if.then30
  %43 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3282
  %mode35 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %43, i32 0, i32 20, !dbg !3283
  store i8 0, i8* %mode35, align 8, !dbg !3284
  br label %if.end38, !dbg !3282

if.else36:                                        ; preds = %if.then30
  %44 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3285
  %mode37 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %44, i32 0, i32 20, !dbg !3286
  store i8 1, i8* %mode37, align 8, !dbg !3287
  br label %if.end38

if.end38:                                         ; preds = %if.else36, %if.then34
  br label %if.end48, !dbg !3288

if.else39:                                        ; preds = %if.else
  %45 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !3289
  %uv_selectmode = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %45, i32 0, i32 12, !dbg !3292
  %46 = load i8, i8* %uv_selectmode, align 1, !dbg !3292
  %conv40 = zext i8 %46 to i32, !dbg !3289
  %and41 = and i32 %conv40, 1, !dbg !3293
  %tobool42 = icmp ne i32 %and41, 0, !dbg !3293
  br i1 %tobool42, label %if.then43, label %if.else45, !dbg !3294

if.then43:                                        ; preds = %if.else39
  %47 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3295
  %mode44 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %47, i32 0, i32 20, !dbg !3297
  store i8 0, i8* %mode44, align 8, !dbg !3298
  br label %if.end47, !dbg !3299

if.else45:                                        ; preds = %if.else39
  %48 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3300
  %mode46 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %48, i32 0, i32 20, !dbg !3302
  store i8 1, i8* %mode46, align 8, !dbg !3303
  br label %if.end47

if.end47:                                         ; preds = %if.else45, %if.then43
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.end38
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then24
  %49 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !3304
  %uv_flag50 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %49, i32 0, i32 11, !dbg !3306
  %50 = load i8, i8* %uv_flag50, align 2, !dbg !3306
  %conv51 = zext i8 %50 to i32, !dbg !3304
  %and52 = and i32 %conv51, 1, !dbg !3307
  %tobool53 = icmp ne i32 %and52, 0, !dbg !3307
  br i1 %tobool53, label %if.then54, label %if.else58, !dbg !3308

if.then54:                                        ; preds = %if.end49
  %51 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3309
  %em55 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %51, i32 0, i32 5, !dbg !3311
  %52 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em55, align 8, !dbg !3311
  %bm56 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %52, i32 0, i32 0, !dbg !3312
  %53 = load %struct.BMesh*, %struct.BMesh** %bm56, align 8, !dbg !3312
  %call57 = call %struct.UvElementMap* @BM_uv_element_map_create(%struct.BMesh* %53, i8 zeroext 0, i8 zeroext 1), !dbg !3313
  %54 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3314
  %element_map = getelementptr inbounds %struct.StitchState, %struct.StitchState* %54, i32 0, i32 7, !dbg !3315
  store %struct.UvElementMap* %call57, %struct.UvElementMap** %element_map, align 8, !dbg !3316
  br label %if.end63, !dbg !3317

if.else58:                                        ; preds = %if.end49
  %55 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3318
  %em59 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %55, i32 0, i32 5, !dbg !3320
  %56 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em59, align 8, !dbg !3320
  %bm60 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %56, i32 0, i32 0, !dbg !3321
  %57 = load %struct.BMesh*, %struct.BMesh** %bm60, align 8, !dbg !3321
  %call61 = call %struct.UvElementMap* @BM_uv_element_map_create(%struct.BMesh* %57, i8 zeroext 1, i8 zeroext 1), !dbg !3322
  %58 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3323
  %element_map62 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %58, i32 0, i32 7, !dbg !3324
  store %struct.UvElementMap* %call61, %struct.UvElementMap** %element_map62, align 8, !dbg !3325
  br label %if.end63

if.end63:                                         ; preds = %if.else58, %if.then54
  %59 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3326
  %element_map64 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %59, i32 0, i32 7, !dbg !3328
  %60 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map64, align 8, !dbg !3328
  %tobool65 = icmp ne %struct.UvElementMap* %60, null, !dbg !3326
  br i1 %tobool65, label %if.end67, label %if.then66, !dbg !3329

if.then66:                                        ; preds = %if.end63
  %61 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3330
  call void @state_delete(%struct.StitchState* %61), !dbg !3332
  store i32 0, i32* %retval, align 4, !dbg !3333
  br label %return, !dbg !3333

if.end67:                                         ; preds = %if.end63
  %62 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3334
  %63 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !3335
  %64 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3336
  call void @uvedit_get_aspect(%struct.Scene* %62, %struct.Object* %63, %struct.BMEditMesh* %64, float* %aspx, float* %aspy), !dbg !3337
  %65 = load float, float* %aspx, align 4, !dbg !3338
  %66 = load float, float* %aspy, align 4, !dbg !3339
  %div = fdiv float %65, %66, !dbg !3340
  %67 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3341
  %aspect = getelementptr inbounds %struct.StitchState, %struct.StitchState* %67, i32 0, i32 0, !dbg !3342
  store float %div, float* %aspect, align 8, !dbg !3343
  %68 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3344
  %element_map68 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %68, i32 0, i32 7, !dbg !3345
  %69 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map68, align 8, !dbg !3345
  %totalIslands = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %69, i32 0, i32 3, !dbg !3346
  %70 = load i32, i32* %totalIslands, align 4, !dbg !3346
  %71 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3347
  %static_island69 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %71, i32 0, i32 18, !dbg !3348
  %72 = load i32, i32* %static_island69, align 4, !dbg !3349
  %rem = srem i32 %72, %70, !dbg !3349
  store i32 %rem, i32* %static_island69, align 4, !dbg !3349
  store i32 0, i32* %i, align 4, !dbg !3350
  br label %for.cond, !dbg !3352

for.cond:                                         ; preds = %for.inc, %if.end67
  %73 = load i32, i32* %i, align 4, !dbg !3353
  %74 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3355
  %element_map70 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %74, i32 0, i32 7, !dbg !3356
  %75 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map70, align 8, !dbg !3356
  %totalUVs = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %75, i32 0, i32 2, !dbg !3357
  %76 = load i32, i32* %totalUVs, align 8, !dbg !3357
  %cmp = icmp slt i32 %73, %76, !dbg !3358
  br i1 %cmp, label %for.body, label %for.end, !dbg !3359

for.body:                                         ; preds = %for.cond
  %77 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3360
  %element_map72 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %77, i32 0, i32 7, !dbg !3363
  %78 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map72, align 8, !dbg !3363
  %buf = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %78, i32 0, i32 1, !dbg !3364
  %79 = load %struct.UvElement*, %struct.UvElement** %buf, align 8, !dbg !3364
  %80 = load i32, i32* %i, align 4, !dbg !3365
  %idxprom = sext i32 %80 to i64, !dbg !3360
  %arrayidx = getelementptr inbounds %struct.UvElement, %struct.UvElement* %79, i64 %idxprom, !dbg !3360
  %separate = getelementptr inbounds %struct.UvElement, %struct.UvElement* %arrayidx, i32 0, i32 3, !dbg !3366
  %81 = load i8, i8* %separate, align 2, !dbg !3366
  %tobool73 = icmp ne i8 %81, 0, !dbg !3360
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !3367

if.then74:                                        ; preds = %for.body
  %82 = load i32, i32* %counter, align 4, !dbg !3368
  %inc = add nsw i32 %82, 1, !dbg !3368
  store i32 %inc, i32* %counter, align 4, !dbg !3368
  br label %if.end75, !dbg !3370

if.end75:                                         ; preds = %if.then74, %for.body
  br label %for.inc, !dbg !3371

for.inc:                                          ; preds = %if.end75
  %83 = load i32, i32* %i, align 4, !dbg !3372
  %inc76 = add nsw i32 %83, 1, !dbg !3372
  store i32 %inc76, i32* %i, align 4, !dbg !3372
  br label %for.cond, !dbg !3373, !llvm.loop !3374

for.end:                                          ; preds = %for.cond
  %84 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3376
  %stitch_preview = getelementptr inbounds %struct.StitchState, %struct.StitchState* %84, i32 0, i32 22, !dbg !3377
  store %struct.StitchPreviewer* null, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !3378
  %85 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3379
  %86 = load i32, i32* %counter, align 4, !dbg !3380
  %conv77 = sext i32 %86 to i64, !dbg !3380
  %mul = mul i64 8, %conv77, !dbg !3381
  %call78 = call i8* %85(i64 %mul, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.34, i64 0, i64 0)), !dbg !3379
  %87 = bitcast i8* %call78 to %struct.UvElement**, !dbg !3379
  %88 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3382
  %uvs = getelementptr inbounds %struct.StitchState, %struct.StitchState* %88, i32 0, i32 9, !dbg !3383
  store %struct.UvElement** %87, %struct.UvElement*** %uvs, align 8, !dbg !3384
  %89 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3385
  %90 = load i32, i32* %counter, align 4, !dbg !3386
  %conv79 = sext i32 %90 to i64, !dbg !3386
  %mul80 = mul i64 4, %conv79, !dbg !3387
  %mul81 = mul i64 %mul80, 2, !dbg !3388
  %call82 = call i8* %89(i64 %mul81, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35, i64 0, i64 0)), !dbg !3385
  %91 = bitcast i8* %call82 to float*, !dbg !3385
  %92 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3389
  %normals = getelementptr inbounds %struct.StitchState, %struct.StitchState* %92, i32 0, i32 11, !dbg !3390
  store float* %91, float** %normals, align 8, !dbg !3391
  %93 = load i32, i32* %counter, align 4, !dbg !3392
  %94 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3393
  %total_separate_uvs = getelementptr inbounds %struct.StitchState, %struct.StitchState* %94, i32 0, i32 15, !dbg !3394
  store i32 %93, i32* %total_separate_uvs, align 4, !dbg !3395
  %95 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3396
  %96 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3397
  %element_map83 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %96, i32 0, i32 7, !dbg !3398
  %97 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map83, align 8, !dbg !3398
  %totalUVs84 = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %97, i32 0, i32 2, !dbg !3399
  %98 = load i32, i32* %totalUVs84, align 8, !dbg !3399
  %conv85 = sext i32 %98 to i64, !dbg !3397
  %mul86 = mul i64 4, %conv85, !dbg !3400
  %call87 = call i8* %95(i64 %mul86, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i64 0, i64 0)), !dbg !3396
  %99 = bitcast i8* %call87 to i32*, !dbg !3396
  store i32* %99, i32** %map, align 8, !dbg !3401
  %100 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3402
  %map88 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %100, i32 0, i32 10, !dbg !3403
  store i32* %99, i32** %map88, align 8, !dbg !3404
  %call89 = call %struct.GHash* @BLI_ghash_new(i32 (i8*)* @uv_edge_hash, i8 (i8*, i8*)* @uv_edge_compare, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37, i64 0, i64 0)), !dbg !3405
  store %struct.GHash* %call89, %struct.GHash** %edge_hash, align 8, !dbg !3406
  %101 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3407
  %102 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3408
  %element_map90 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %102, i32 0, i32 7, !dbg !3409
  %103 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map90, align 8, !dbg !3409
  %totalUVs91 = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %103, i32 0, i32 2, !dbg !3410
  %104 = load i32, i32* %totalUVs91, align 8, !dbg !3410
  %conv92 = sext i32 %104 to i64, !dbg !3408
  %mul93 = mul i64 40, %conv92, !dbg !3411
  %call94 = call i8* %101(i64 %mul93, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0)), !dbg !3407
  %105 = bitcast i8* %call94 to %struct.UvEdge*, !dbg !3407
  store %struct.UvEdge* %105, %struct.UvEdge** %all_edges, align 8, !dbg !3412
  %106 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3413
  %uvs95 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %106, i32 0, i32 9, !dbg !3415
  %107 = load %struct.UvElement**, %struct.UvElement*** %uvs95, align 8, !dbg !3415
  %tobool96 = icmp ne %struct.UvElement** %107, null, !dbg !3413
  br i1 %tobool96, label %lor.lhs.false, label %if.then102, !dbg !3416

lor.lhs.false:                                    ; preds = %for.end
  %108 = load i32*, i32** %map, align 8, !dbg !3417
  %tobool97 = icmp ne i32* %108, null, !dbg !3417
  br i1 %tobool97, label %lor.lhs.false98, label %if.then102, !dbg !3418

lor.lhs.false98:                                  ; preds = %lor.lhs.false
  %109 = load %struct.GHash*, %struct.GHash** %edge_hash, align 8, !dbg !3419
  %tobool99 = icmp ne %struct.GHash* %109, null, !dbg !3419
  br i1 %tobool99, label %lor.lhs.false100, label %if.then102, !dbg !3420

lor.lhs.false100:                                 ; preds = %lor.lhs.false98
  %110 = load %struct.UvEdge*, %struct.UvEdge** %all_edges, align 8, !dbg !3421
  %tobool101 = icmp ne %struct.UvEdge* %110, null, !dbg !3421
  br i1 %tobool101, label %if.end103, label %if.then102, !dbg !3422

if.then102:                                       ; preds = %lor.lhs.false100, %lor.lhs.false98, %lor.lhs.false, %for.end
  %111 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3423
  call void @state_delete(%struct.StitchState* %111), !dbg !3425
  store i32 0, i32* %retval, align 4, !dbg !3426
  br label %return, !dbg !3426

if.end103:                                        ; preds = %lor.lhs.false100
  store i32 -1, i32* %counter, align 4, !dbg !3427
  store i32 0, i32* %i, align 4, !dbg !3428
  br label %for.cond104, !dbg !3430

for.cond104:                                      ; preds = %for.inc128, %if.end103
  %112 = load i32, i32* %i, align 4, !dbg !3431
  %113 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3433
  %bm105 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %113, i32 0, i32 0, !dbg !3434
  %114 = load %struct.BMesh*, %struct.BMesh** %bm105, align 8, !dbg !3434
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %114, i32 0, i32 0, !dbg !3435
  %115 = load i32, i32* %totvert, align 8, !dbg !3435
  %cmp106 = icmp slt i32 %112, %115, !dbg !3436
  br i1 %cmp106, label %for.body108, label %for.end130, !dbg !3437

for.body108:                                      ; preds = %for.cond104
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element, metadata !3438, metadata !DIExpression()), !dbg !3440
  %116 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3441
  %element_map109 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %116, i32 0, i32 7, !dbg !3442
  %117 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map109, align 8, !dbg !3442
  %vert = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %117, i32 0, i32 0, !dbg !3443
  %118 = load %struct.UvElement**, %struct.UvElement*** %vert, align 8, !dbg !3443
  %119 = load i32, i32* %i, align 4, !dbg !3444
  %idxprom110 = sext i32 %119 to i64, !dbg !3441
  %arrayidx111 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %118, i64 %idxprom110, !dbg !3441
  %120 = load %struct.UvElement*, %struct.UvElement** %arrayidx111, align 8, !dbg !3441
  store %struct.UvElement* %120, %struct.UvElement** %element, align 8, !dbg !3440
  br label %for.cond112, !dbg !3445

for.cond112:                                      ; preds = %for.inc126, %for.body108
  %121 = load %struct.UvElement*, %struct.UvElement** %element, align 8, !dbg !3446
  %tobool113 = icmp ne %struct.UvElement* %121, null, !dbg !3449
  br i1 %tobool113, label %for.body114, label %for.end127, !dbg !3449

for.body114:                                      ; preds = %for.cond112
  %122 = load %struct.UvElement*, %struct.UvElement** %element, align 8, !dbg !3450
  %separate115 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %122, i32 0, i32 3, !dbg !3453
  %123 = load i8, i8* %separate115, align 2, !dbg !3453
  %tobool116 = icmp ne i8 %123, 0, !dbg !3450
  br i1 %tobool116, label %if.then117, label %if.end122, !dbg !3454

if.then117:                                       ; preds = %for.body114
  %124 = load i32, i32* %counter, align 4, !dbg !3455
  %inc118 = add nsw i32 %124, 1, !dbg !3455
  store i32 %inc118, i32* %counter, align 4, !dbg !3455
  %125 = load %struct.UvElement*, %struct.UvElement** %element, align 8, !dbg !3457
  %126 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3458
  %uvs119 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %126, i32 0, i32 9, !dbg !3459
  %127 = load %struct.UvElement**, %struct.UvElement*** %uvs119, align 8, !dbg !3459
  %128 = load i32, i32* %counter, align 4, !dbg !3460
  %idxprom120 = sext i32 %128 to i64, !dbg !3458
  %arrayidx121 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %127, i64 %idxprom120, !dbg !3458
  store %struct.UvElement* %125, %struct.UvElement** %arrayidx121, align 8, !dbg !3461
  br label %if.end122, !dbg !3462

if.end122:                                        ; preds = %if.then117, %for.body114
  %129 = load i32, i32* %counter, align 4, !dbg !3463
  %130 = load i32*, i32** %map, align 8, !dbg !3464
  %131 = load %struct.UvElement*, %struct.UvElement** %element, align 8, !dbg !3465
  %132 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3466
  %element_map123 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %132, i32 0, i32 7, !dbg !3467
  %133 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map123, align 8, !dbg !3467
  %buf124 = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %133, i32 0, i32 1, !dbg !3468
  %134 = load %struct.UvElement*, %struct.UvElement** %buf124, align 8, !dbg !3468
  %sub.ptr.lhs.cast = ptrtoint %struct.UvElement* %131 to i64, !dbg !3469
  %sub.ptr.rhs.cast = ptrtoint %struct.UvElement* %134 to i64, !dbg !3469
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3469
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24, !dbg !3469
  %arrayidx125 = getelementptr inbounds i32, i32* %130, i64 %sub.ptr.div, !dbg !3464
  store i32 %129, i32* %arrayidx125, align 4, !dbg !3470
  br label %for.inc126, !dbg !3471

for.inc126:                                       ; preds = %if.end122
  %135 = load %struct.UvElement*, %struct.UvElement** %element, align 8, !dbg !3472
  %next = getelementptr inbounds %struct.UvElement, %struct.UvElement* %135, i32 0, i32 0, !dbg !3473
  %136 = load %struct.UvElement*, %struct.UvElement** %next, align 8, !dbg !3473
  store %struct.UvElement* %136, %struct.UvElement** %element, align 8, !dbg !3474
  br label %for.cond112, !dbg !3475, !llvm.loop !3476

for.end127:                                       ; preds = %for.cond112
  br label %for.inc128, !dbg !3478

for.inc128:                                       ; preds = %for.end127
  %137 = load i32, i32* %i, align 4, !dbg !3479
  %inc129 = add nsw i32 %137, 1, !dbg !3479
  store i32 %inc129, i32* %i, align 4, !dbg !3479
  br label %for.cond104, !dbg !3480, !llvm.loop !3481

for.end130:                                       ; preds = %for.cond104
  store i32 0, i32* %counter, align 4, !dbg !3483
  %138 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3484
  %bm131 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %138, i32 0, i32 0, !dbg !3484
  %139 = load %struct.BMesh*, %struct.BMesh** %bm131, align 8, !dbg !3484
  %call132 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %139, i8 zeroext 3, i8* null), !dbg !3484
  %140 = bitcast i8* %call132 to %struct.BMFace*, !dbg !3484
  store %struct.BMFace* %140, %struct.BMFace** %efa, align 8, !dbg !3484
  br label %for.cond133, !dbg !3484

for.cond133:                                      ; preds = %for.inc221, %for.end130
  %141 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3486
  %tobool134 = icmp ne %struct.BMFace* %141, null, !dbg !3484
  br i1 %tobool134, label %for.body135, label %for.end223, !dbg !3484

for.body135:                                      ; preds = %for.cond133
  %142 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !3488
  %uv_flag136 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %142, i32 0, i32 11, !dbg !3491
  %143 = load i8, i8* %uv_flag136, align 2, !dbg !3491
  %conv137 = zext i8 %143 to i32, !dbg !3488
  %and138 = and i32 %conv137, 1, !dbg !3492
  %tobool139 = icmp ne i32 %and138, 0, !dbg !3492
  br i1 %tobool139, label %if.end148, label %land.lhs.true, !dbg !3493

land.lhs.true:                                    ; preds = %for.body135
  %144 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3494
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %144, i32 0, i32 0, !dbg !3494
  %call140 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !3494
  %conv141 = zext i8 %call140 to i32, !dbg !3495
  %tobool142 = icmp ne i32 %conv141, 0, !dbg !3495
  br i1 %tobool142, label %if.then147, label %lor.lhs.false143, !dbg !3496

lor.lhs.false143:                                 ; preds = %land.lhs.true
  %145 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3497
  %head144 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %145, i32 0, i32 0, !dbg !3497
  %call145 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head144, i8 zeroext 1), !dbg !3497
  %tobool146 = icmp ne i8 %call145, 0, !dbg !3497
  br i1 %tobool146, label %if.end148, label %if.then147, !dbg !3498

if.then147:                                       ; preds = %lor.lhs.false143, %land.lhs.true
  br label %for.inc221, !dbg !3499

if.end148:                                        ; preds = %lor.lhs.false143, %for.body135
  %146 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3500
  %147 = bitcast %struct.BMFace* %146 to i8*, !dbg !3500
  %call149 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %147), !dbg !3500
  %148 = bitcast i8* %call149 to %struct.BMLoop*, !dbg !3500
  store %struct.BMLoop* %148, %struct.BMLoop** %l, align 8, !dbg !3500
  br label %for.cond150, !dbg !3500

for.cond150:                                      ; preds = %for.inc218, %if.end148
  %149 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !3502
  %tobool151 = icmp ne %struct.BMLoop* %149, null, !dbg !3500
  br i1 %tobool151, label %for.body152, label %for.end220, !dbg !3500

for.body152:                                      ; preds = %for.cond150
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element153, metadata !3504, metadata !DIExpression()), !dbg !3506
  %150 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3507
  %element_map154 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %150, i32 0, i32 7, !dbg !3508
  %151 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map154, align 8, !dbg !3508
  %152 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3509
  %153 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !3510
  %call155 = call %struct.UvElement* @BM_uv_element_get(%struct.UvElementMap* %151, %struct.BMFace* %152, %struct.BMLoop* %153), !dbg !3511
  store %struct.UvElement* %call155, %struct.UvElement** %element153, align 8, !dbg !3506
  call void @llvm.dbg.declare(metadata i32* %offset1, metadata !3512, metadata !DIExpression()), !dbg !3513
  call void @llvm.dbg.declare(metadata i32* %itmp1, metadata !3514, metadata !DIExpression()), !dbg !3515
  %154 = load %struct.UvElement*, %struct.UvElement** %element153, align 8, !dbg !3516
  %155 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3517
  %element_map156 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %155, i32 0, i32 7, !dbg !3518
  %156 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map156, align 8, !dbg !3518
  %buf157 = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %156, i32 0, i32 1, !dbg !3519
  %157 = load %struct.UvElement*, %struct.UvElement** %buf157, align 8, !dbg !3519
  %sub.ptr.lhs.cast158 = ptrtoint %struct.UvElement* %154 to i64, !dbg !3520
  %sub.ptr.rhs.cast159 = ptrtoint %struct.UvElement* %157 to i64, !dbg !3520
  %sub.ptr.sub160 = sub i64 %sub.ptr.lhs.cast158, %sub.ptr.rhs.cast159, !dbg !3520
  %sub.ptr.div161 = sdiv exact i64 %sub.ptr.sub160, 24, !dbg !3520
  %conv162 = trunc i64 %sub.ptr.div161 to i32, !dbg !3516
  store i32 %conv162, i32* %itmp1, align 4, !dbg !3515
  call void @llvm.dbg.declare(metadata i32* %offset2, metadata !3521, metadata !DIExpression()), !dbg !3522
  call void @llvm.dbg.declare(metadata i32* %itmp2, metadata !3523, metadata !DIExpression()), !dbg !3524
  %158 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3525
  %element_map163 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %158, i32 0, i32 7, !dbg !3526
  %159 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map163, align 8, !dbg !3526
  %160 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3527
  %161 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !3528
  %next164 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %161, i32 0, i32 6, !dbg !3529
  %162 = load %struct.BMLoop*, %struct.BMLoop** %next164, align 8, !dbg !3529
  %call165 = call %struct.UvElement* @BM_uv_element_get(%struct.UvElementMap* %159, %struct.BMFace* %160, %struct.BMLoop* %162), !dbg !3530
  %163 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3531
  %element_map166 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %163, i32 0, i32 7, !dbg !3532
  %164 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map166, align 8, !dbg !3532
  %buf167 = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %164, i32 0, i32 1, !dbg !3533
  %165 = load %struct.UvElement*, %struct.UvElement** %buf167, align 8, !dbg !3533
  %sub.ptr.lhs.cast168 = ptrtoint %struct.UvElement* %call165 to i64, !dbg !3534
  %sub.ptr.rhs.cast169 = ptrtoint %struct.UvElement* %165 to i64, !dbg !3534
  %sub.ptr.sub170 = sub i64 %sub.ptr.lhs.cast168, %sub.ptr.rhs.cast169, !dbg !3534
  %sub.ptr.div171 = sdiv exact i64 %sub.ptr.sub170, 24, !dbg !3534
  %conv172 = trunc i64 %sub.ptr.div171 to i32, !dbg !3530
  store i32 %conv172, i32* %itmp2, align 4, !dbg !3524
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge, metadata !3535, metadata !DIExpression()), !dbg !3536
  %166 = load i32*, i32** %map, align 8, !dbg !3537
  %167 = load i32, i32* %itmp1, align 4, !dbg !3538
  %idxprom173 = sext i32 %167 to i64, !dbg !3537
  %arrayidx174 = getelementptr inbounds i32, i32* %166, i64 %idxprom173, !dbg !3537
  %168 = load i32, i32* %arrayidx174, align 4, !dbg !3537
  store i32 %168, i32* %offset1, align 4, !dbg !3539
  %169 = load i32*, i32** %map, align 8, !dbg !3540
  %170 = load i32, i32* %itmp2, align 4, !dbg !3541
  %idxprom175 = sext i32 %170 to i64, !dbg !3540
  %arrayidx176 = getelementptr inbounds i32, i32* %169, i64 %idxprom175, !dbg !3540
  %171 = load i32, i32* %arrayidx176, align 4, !dbg !3540
  store i32 %171, i32* %offset2, align 4, !dbg !3542
  %172 = load %struct.UvEdge*, %struct.UvEdge** %all_edges, align 8, !dbg !3543
  %173 = load i32, i32* %counter, align 4, !dbg !3544
  %idxprom177 = sext i32 %173 to i64, !dbg !3543
  %arrayidx178 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %172, i64 %idxprom177, !dbg !3543
  %next179 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %arrayidx178, i32 0, i32 4, !dbg !3545
  store %struct.UvEdge* null, %struct.UvEdge** %next179, align 8, !dbg !3546
  %174 = load %struct.UvEdge*, %struct.UvEdge** %all_edges, align 8, !dbg !3547
  %175 = load i32, i32* %counter, align 4, !dbg !3548
  %idxprom180 = sext i32 %175 to i64, !dbg !3547
  %arrayidx181 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %174, i64 %idxprom180, !dbg !3547
  %first = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %arrayidx181, i32 0, i32 5, !dbg !3549
  store %struct.UvEdge* null, %struct.UvEdge** %first, align 8, !dbg !3550
  %176 = load %struct.UvEdge*, %struct.UvEdge** %all_edges, align 8, !dbg !3551
  %177 = load i32, i32* %counter, align 4, !dbg !3552
  %idxprom182 = sext i32 %177 to i64, !dbg !3551
  %arrayidx183 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %176, i64 %idxprom182, !dbg !3551
  %flag = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %arrayidx183, i32 0, i32 2, !dbg !3553
  store i8 0, i8* %flag, align 8, !dbg !3554
  %178 = load %struct.UvElement*, %struct.UvElement** %element153, align 8, !dbg !3555
  %179 = load %struct.UvEdge*, %struct.UvEdge** %all_edges, align 8, !dbg !3556
  %180 = load i32, i32* %counter, align 4, !dbg !3557
  %idxprom184 = sext i32 %180 to i64, !dbg !3556
  %arrayidx185 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %179, i64 %idxprom184, !dbg !3556
  %element186 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %arrayidx185, i32 0, i32 3, !dbg !3558
  store %struct.UvElement* %178, %struct.UvElement** %element186, align 8, !dbg !3559
  %181 = load i32, i32* %offset1, align 4, !dbg !3560
  %182 = load i32, i32* %offset2, align 4, !dbg !3562
  %cmp187 = icmp slt i32 %181, %182, !dbg !3563
  br i1 %cmp187, label %if.then189, label %if.else194, !dbg !3564

if.then189:                                       ; preds = %for.body152
  %183 = load i32, i32* %offset1, align 4, !dbg !3565
  %184 = load %struct.UvEdge*, %struct.UvEdge** %all_edges, align 8, !dbg !3567
  %185 = load i32, i32* %counter, align 4, !dbg !3568
  %idxprom190 = sext i32 %185 to i64, !dbg !3567
  %arrayidx191 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %184, i64 %idxprom190, !dbg !3567
  %uv1 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %arrayidx191, i32 0, i32 0, !dbg !3569
  store i32 %183, i32* %uv1, align 8, !dbg !3570
  %186 = load i32, i32* %offset2, align 4, !dbg !3571
  %187 = load %struct.UvEdge*, %struct.UvEdge** %all_edges, align 8, !dbg !3572
  %188 = load i32, i32* %counter, align 4, !dbg !3573
  %idxprom192 = sext i32 %188 to i64, !dbg !3572
  %arrayidx193 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %187, i64 %idxprom192, !dbg !3572
  %uv2 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %arrayidx193, i32 0, i32 1, !dbg !3574
  store i32 %186, i32* %uv2, align 4, !dbg !3575
  br label %if.end201, !dbg !3576

if.else194:                                       ; preds = %for.body152
  %189 = load i32, i32* %offset2, align 4, !dbg !3577
  %190 = load %struct.UvEdge*, %struct.UvEdge** %all_edges, align 8, !dbg !3579
  %191 = load i32, i32* %counter, align 4, !dbg !3580
  %idxprom195 = sext i32 %191 to i64, !dbg !3579
  %arrayidx196 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %190, i64 %idxprom195, !dbg !3579
  %uv1197 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %arrayidx196, i32 0, i32 0, !dbg !3581
  store i32 %189, i32* %uv1197, align 8, !dbg !3582
  %192 = load i32, i32* %offset1, align 4, !dbg !3583
  %193 = load %struct.UvEdge*, %struct.UvEdge** %all_edges, align 8, !dbg !3584
  %194 = load i32, i32* %counter, align 4, !dbg !3585
  %idxprom198 = sext i32 %194 to i64, !dbg !3584
  %arrayidx199 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %193, i64 %idxprom198, !dbg !3584
  %uv2200 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %arrayidx199, i32 0, i32 1, !dbg !3586
  store i32 %192, i32* %uv2200, align 4, !dbg !3587
  br label %if.end201

if.end201:                                        ; preds = %if.else194, %if.then189
  %195 = load %struct.GHash*, %struct.GHash** %edge_hash, align 8, !dbg !3588
  %196 = load %struct.UvEdge*, %struct.UvEdge** %all_edges, align 8, !dbg !3589
  %197 = load i32, i32* %counter, align 4, !dbg !3590
  %idxprom202 = sext i32 %197 to i64, !dbg !3589
  %arrayidx203 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %196, i64 %idxprom202, !dbg !3589
  %198 = bitcast %struct.UvEdge* %arrayidx203 to i8*, !dbg !3591
  %call204 = call i8* @BLI_ghash_lookup(%struct.GHash* %195, i8* %198), !dbg !3592
  %199 = bitcast i8* %call204 to %struct.UvEdge*, !dbg !3592
  store %struct.UvEdge* %199, %struct.UvEdge** %edge, align 8, !dbg !3593
  %200 = load %struct.UvEdge*, %struct.UvEdge** %edge, align 8, !dbg !3594
  %tobool205 = icmp ne %struct.UvEdge* %200, null, !dbg !3594
  br i1 %tobool205, label %if.then206, label %if.else208, !dbg !3596

if.then206:                                       ; preds = %if.end201
  %201 = load %struct.UvEdge*, %struct.UvEdge** %edge, align 8, !dbg !3597
  %flag207 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %201, i32 0, i32 2, !dbg !3599
  store i8 0, i8* %flag207, align 8, !dbg !3600
  br label %if.end216, !dbg !3601

if.else208:                                       ; preds = %if.end201
  %202 = load %struct.GHash*, %struct.GHash** %edge_hash, align 8, !dbg !3602
  %203 = load %struct.UvEdge*, %struct.UvEdge** %all_edges, align 8, !dbg !3604
  %204 = load i32, i32* %counter, align 4, !dbg !3605
  %idxprom209 = sext i32 %204 to i64, !dbg !3604
  %arrayidx210 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %203, i64 %idxprom209, !dbg !3604
  %205 = bitcast %struct.UvEdge* %arrayidx210 to i8*, !dbg !3606
  %206 = load %struct.UvEdge*, %struct.UvEdge** %all_edges, align 8, !dbg !3607
  %207 = load i32, i32* %counter, align 4, !dbg !3608
  %idxprom211 = sext i32 %207 to i64, !dbg !3607
  %arrayidx212 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %206, i64 %idxprom211, !dbg !3607
  %208 = bitcast %struct.UvEdge* %arrayidx212 to i8*, !dbg !3609
  call void @BLI_ghash_insert(%struct.GHash* %202, i8* %205, i8* %208), !dbg !3610
  %209 = load %struct.UvEdge*, %struct.UvEdge** %all_edges, align 8, !dbg !3611
  %210 = load i32, i32* %counter, align 4, !dbg !3612
  %idxprom213 = sext i32 %210 to i64, !dbg !3611
  %arrayidx214 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %209, i64 %idxprom213, !dbg !3611
  %flag215 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %arrayidx214, i32 0, i32 2, !dbg !3613
  store i8 8, i8* %flag215, align 8, !dbg !3614
  br label %if.end216

if.end216:                                        ; preds = %if.else208, %if.then206
  %211 = load i32, i32* %counter, align 4, !dbg !3615
  %inc217 = add nsw i32 %211, 1, !dbg !3615
  store i32 %inc217, i32* %counter, align 4, !dbg !3615
  br label %for.inc218, !dbg !3616

for.inc218:                                       ; preds = %if.end216
  %call219 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !3502
  %212 = bitcast i8* %call219 to %struct.BMLoop*, !dbg !3502
  store %struct.BMLoop* %212, %struct.BMLoop** %l, align 8, !dbg !3502
  br label %for.cond150, !dbg !3502, !llvm.loop !3617

for.end220:                                       ; preds = %for.cond150
  br label %for.inc221, !dbg !3619

for.inc221:                                       ; preds = %for.end220, %if.then147
  %call222 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !3486
  %213 = bitcast i8* %call222 to %struct.BMFace*, !dbg !3486
  store %struct.BMFace* %213, %struct.BMFace** %efa, align 8, !dbg !3486
  br label %for.cond133, !dbg !3486, !llvm.loop !3620

for.end223:                                       ; preds = %for.cond133
  %214 = load %struct.GHash*, %struct.GHash** %edge_hash, align 8, !dbg !3622
  %call224 = call %struct.GHashIterator* @BLI_ghashIterator_new(%struct.GHash* %214), !dbg !3623
  store %struct.GHashIterator* %call224, %struct.GHashIterator** %ghi, align 8, !dbg !3624
  %215 = load %struct.GHash*, %struct.GHash** %edge_hash, align 8, !dbg !3625
  %call225 = call i32 @BLI_ghash_size(%struct.GHash* %215), !dbg !3626
  store i32 %call225, i32* %total_edges, align 4, !dbg !3627
  %216 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3628
  %217 = load i32, i32* %total_edges, align 4, !dbg !3629
  %conv226 = sext i32 %217 to i64, !dbg !3629
  %mul227 = mul i64 40, %conv226, !dbg !3630
  %call228 = call i8* %216(i64 %mul227, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i64 0, i64 0)), !dbg !3628
  %218 = bitcast i8* %call228 to %struct.UvEdge*, !dbg !3628
  store %struct.UvEdge* %218, %struct.UvEdge** %edges, align 8, !dbg !3631
  %219 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3632
  %edges229 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %219, i32 0, i32 12, !dbg !3633
  store %struct.UvEdge* %218, %struct.UvEdge** %edges229, align 8, !dbg !3634
  %220 = load %struct.UvEdge*, %struct.UvEdge** %edges, align 8, !dbg !3635
  %tobool230 = icmp ne %struct.UvEdge* %220, null, !dbg !3635
  br i1 %tobool230, label %if.end232, label %if.then231, !dbg !3637

if.then231:                                       ; preds = %for.end223
  %221 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi, align 8, !dbg !3638
  call void @BLI_ghashIterator_free(%struct.GHashIterator* %221), !dbg !3640
  %222 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3641
  call void @state_delete(%struct.StitchState* %222), !dbg !3642
  store i32 0, i32* %retval, align 4, !dbg !3643
  br label %return, !dbg !3643

if.end232:                                        ; preds = %for.end223
  %223 = load i32, i32* %total_edges, align 4, !dbg !3644
  %224 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3645
  %total_separate_edges = getelementptr inbounds %struct.StitchState, %struct.StitchState* %224, i32 0, i32 14, !dbg !3646
  store i32 %223, i32* %total_separate_edges, align 8, !dbg !3647
  store i32 0, i32* %i, align 4, !dbg !3648
  %225 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi, align 8, !dbg !3650
  %226 = load %struct.GHash*, %struct.GHash** %edge_hash, align 8, !dbg !3651
  call void @BLI_ghashIterator_init(%struct.GHashIterator* %225, %struct.GHash* %226), !dbg !3652
  br label %for.cond233, !dbg !3653

for.cond233:                                      ; preds = %for.inc241, %if.end232
  %227 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi, align 8, !dbg !3654
  %call234 = call zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %227), !dbg !3656
  %tobool235 = icmp ne i8 %call234, 0, !dbg !3657
  %lnot = xor i1 %tobool235, true, !dbg !3657
  br i1 %lnot, label %for.body236, label %for.end242, !dbg !3658

for.body236:                                      ; preds = %for.cond233
  %228 = load %struct.UvEdge*, %struct.UvEdge** %edges, align 8, !dbg !3659
  %229 = load i32, i32* %i, align 4, !dbg !3661
  %inc237 = add nsw i32 %229, 1, !dbg !3661
  store i32 %inc237, i32* %i, align 4, !dbg !3661
  %idxprom238 = sext i32 %229 to i64, !dbg !3659
  %arrayidx239 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %228, i64 %idxprom238, !dbg !3659
  %230 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi, align 8, !dbg !3662
  %call240 = call i8* @BLI_ghashIterator_getKey(%struct.GHashIterator* %230), !dbg !3663
  %231 = bitcast i8* %call240 to %struct.UvEdge*, !dbg !3664
  %232 = bitcast %struct.UvEdge* %arrayidx239 to i8*, !dbg !3665
  %233 = bitcast %struct.UvEdge* %231 to i8*, !dbg !3665
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %232, i8* align 8 %233, i64 40, i1 false), !dbg !3665
  br label %for.inc241, !dbg !3666

for.inc241:                                       ; preds = %for.body236
  %234 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi, align 8, !dbg !3667
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %234), !dbg !3668
  br label %for.cond233, !dbg !3669, !llvm.loop !3670

for.end242:                                       ; preds = %for.cond233
  %235 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi, align 8, !dbg !3672
  call void @BLI_ghashIterator_free(%struct.GHashIterator* %235), !dbg !3673
  %236 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3674
  %237 = load %struct.UvEdge*, %struct.UvEdge** %all_edges, align 8, !dbg !3675
  %238 = bitcast %struct.UvEdge* %237 to i8*, !dbg !3675
  call void %236(i8* %238), !dbg !3674
  %239 = load %struct.GHash*, %struct.GHash** %edge_hash, align 8, !dbg !3676
  call void @BLI_ghash_free(%struct.GHash* %239, void (i8*)* null, void (i8*)* null), !dbg !3677
  %call243 = call %struct.GHash* @BLI_ghash_new(i32 (i8*)* @uv_edge_hash, i8 (i8*, i8*)* @uv_edge_compare, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37, i64 0, i64 0)), !dbg !3678
  store %struct.GHash* %call243, %struct.GHash** %edge_hash, align 8, !dbg !3679
  %240 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3680
  %edge_hash244 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %240, i32 0, i32 13, !dbg !3681
  store %struct.GHash* %call243, %struct.GHash** %edge_hash244, align 8, !dbg !3682
  store i32 0, i32* %i, align 4, !dbg !3683
  br label %for.cond245, !dbg !3685

for.cond245:                                      ; preds = %for.inc251, %for.end242
  %241 = load i32, i32* %i, align 4, !dbg !3686
  %242 = load i32, i32* %total_edges, align 4, !dbg !3688
  %cmp246 = icmp slt i32 %241, %242, !dbg !3689
  br i1 %cmp246, label %for.body248, label %for.end253, !dbg !3690

for.body248:                                      ; preds = %for.cond245
  %243 = load %struct.GHash*, %struct.GHash** %edge_hash, align 8, !dbg !3691
  %244 = load %struct.UvEdge*, %struct.UvEdge** %edges, align 8, !dbg !3693
  %245 = load i32, i32* %i, align 4, !dbg !3694
  %idx.ext = sext i32 %245 to i64, !dbg !3695
  %add.ptr = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %244, i64 %idx.ext, !dbg !3695
  %246 = bitcast %struct.UvEdge* %add.ptr to i8*, !dbg !3693
  %247 = load %struct.UvEdge*, %struct.UvEdge** %edges, align 8, !dbg !3696
  %248 = load i32, i32* %i, align 4, !dbg !3697
  %idx.ext249 = sext i32 %248 to i64, !dbg !3698
  %add.ptr250 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %247, i64 %idx.ext249, !dbg !3698
  %249 = bitcast %struct.UvEdge* %add.ptr250 to i8*, !dbg !3696
  call void @BLI_ghash_insert(%struct.GHash* %243, i8* %246, i8* %249), !dbg !3699
  br label %for.inc251, !dbg !3700

for.inc251:                                       ; preds = %for.body248
  %250 = load i32, i32* %i, align 4, !dbg !3701
  %inc252 = add nsw i32 %250, 1, !dbg !3701
  store i32 %inc252, i32* %i, align 4, !dbg !3701
  br label %for.cond245, !dbg !3702, !llvm.loop !3703

for.end253:                                       ; preds = %for.cond245
  %251 = load %struct.GHash*, %struct.GHash** %edge_hash, align 8, !dbg !3705
  %252 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3706
  call void @stitch_uv_edge_generate_linked_edges(%struct.GHash* %251, %struct.StitchState* %252), !dbg !3707
  store i32 0, i32* %i, align 4, !dbg !3708
  br label %for.cond254, !dbg !3710

for.cond254:                                      ; preds = %for.inc292, %for.end253
  %253 = load i32, i32* %i, align 4, !dbg !3711
  %254 = load i32, i32* %total_edges, align 4, !dbg !3713
  %cmp255 = icmp slt i32 %253, %254, !dbg !3714
  br i1 %cmp255, label %for.body257, label %for.end294, !dbg !3715

for.body257:                                      ; preds = %for.cond254
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge258, metadata !3716, metadata !DIExpression()), !dbg !3718
  %255 = load %struct.UvEdge*, %struct.UvEdge** %edges, align 8, !dbg !3719
  %256 = load i32, i32* %i, align 4, !dbg !3720
  %idx.ext259 = sext i32 %256 to i64, !dbg !3721
  %add.ptr260 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %255, i64 %idx.ext259, !dbg !3721
  store %struct.UvEdge* %add.ptr260, %struct.UvEdge** %edge258, align 8, !dbg !3718
  call void @llvm.dbg.declare(metadata [2 x float]* %normal, metadata !3722, metadata !DIExpression()), !dbg !3723
  %257 = load %struct.UvEdge*, %struct.UvEdge** %edge258, align 8, !dbg !3724
  %flag261 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %257, i32 0, i32 2, !dbg !3726
  %258 = load i8, i8* %flag261, align 8, !dbg !3726
  %conv262 = zext i8 %258 to i32, !dbg !3724
  %and263 = and i32 %conv262, 8, !dbg !3727
  %tobool264 = icmp ne i32 %and263, 0, !dbg !3727
  br i1 %tobool264, label %if.then265, label %if.end291, !dbg !3728

if.then265:                                       ; preds = %for.body257
  %259 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3729
  %260 = load %struct.UvEdge*, %struct.UvEdge** %edge258, align 8, !dbg !3731
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %normal, i64 0, i64 0, !dbg !3732
  %261 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3733
  %aspect266 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %261, i32 0, i32 0, !dbg !3734
  %262 = load float, float* %aspect266, align 8, !dbg !3734
  call void @stitch_calculate_edge_normal(%struct.BMEditMesh* %259, %struct.UvEdge* %260, float* %arraydecay, float %262), !dbg !3735
  %263 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3736
  %normals267 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %263, i32 0, i32 11, !dbg !3737
  %264 = load float*, float** %normals267, align 8, !dbg !3737
  %265 = load %struct.UvEdge*, %struct.UvEdge** %edge258, align 8, !dbg !3738
  %uv1268 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %265, i32 0, i32 0, !dbg !3739
  %266 = load i32, i32* %uv1268, align 8, !dbg !3739
  %mul269 = mul i32 %266, 2, !dbg !3740
  %idx.ext270 = zext i32 %mul269 to i64, !dbg !3741
  %add.ptr271 = getelementptr inbounds float, float* %264, i64 %idx.ext270, !dbg !3741
  %arraydecay272 = getelementptr inbounds [2 x float], [2 x float]* %normal, i64 0, i64 0, !dbg !3742
  call void @add_v2_v2(float* %add.ptr271, float* %arraydecay272), !dbg !3743
  %267 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3744
  %normals273 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %267, i32 0, i32 11, !dbg !3745
  %268 = load float*, float** %normals273, align 8, !dbg !3745
  %269 = load %struct.UvEdge*, %struct.UvEdge** %edge258, align 8, !dbg !3746
  %uv2274 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %269, i32 0, i32 1, !dbg !3747
  %270 = load i32, i32* %uv2274, align 4, !dbg !3747
  %mul275 = mul i32 %270, 2, !dbg !3748
  %idx.ext276 = zext i32 %mul275 to i64, !dbg !3749
  %add.ptr277 = getelementptr inbounds float, float* %268, i64 %idx.ext276, !dbg !3749
  %arraydecay278 = getelementptr inbounds [2 x float], [2 x float]* %normal, i64 0, i64 0, !dbg !3750
  call void @add_v2_v2(float* %add.ptr277, float* %arraydecay278), !dbg !3751
  %271 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3752
  %normals279 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %271, i32 0, i32 11, !dbg !3753
  %272 = load float*, float** %normals279, align 8, !dbg !3753
  %273 = load %struct.UvEdge*, %struct.UvEdge** %edge258, align 8, !dbg !3754
  %uv1280 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %273, i32 0, i32 0, !dbg !3755
  %274 = load i32, i32* %uv1280, align 8, !dbg !3755
  %mul281 = mul i32 %274, 2, !dbg !3756
  %idx.ext282 = zext i32 %mul281 to i64, !dbg !3757
  %add.ptr283 = getelementptr inbounds float, float* %272, i64 %idx.ext282, !dbg !3757
  %call284 = call float @normalize_v2(float* %add.ptr283), !dbg !3758
  %275 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3759
  %normals285 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %275, i32 0, i32 11, !dbg !3760
  %276 = load float*, float** %normals285, align 8, !dbg !3760
  %277 = load %struct.UvEdge*, %struct.UvEdge** %edge258, align 8, !dbg !3761
  %uv2286 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %277, i32 0, i32 1, !dbg !3762
  %278 = load i32, i32* %uv2286, align 4, !dbg !3762
  %mul287 = mul i32 %278, 2, !dbg !3763
  %idx.ext288 = zext i32 %mul287 to i64, !dbg !3764
  %add.ptr289 = getelementptr inbounds float, float* %276, i64 %idx.ext288, !dbg !3764
  %call290 = call float @normalize_v2(float* %add.ptr289), !dbg !3765
  br label %if.end291, !dbg !3766

if.end291:                                        ; preds = %if.then265, %for.body257
  br label %for.inc292, !dbg !3767

for.inc292:                                       ; preds = %if.end291
  %279 = load i32, i32* %i, align 4, !dbg !3768
  %inc293 = add nsw i32 %279, 1, !dbg !3768
  store i32 %inc293, i32* %i, align 4, !dbg !3768
  br label %for.cond254, !dbg !3769, !llvm.loop !3770

for.end294:                                       ; preds = %for.cond254
  %280 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3772
  %selection_size = getelementptr inbounds %struct.StitchState, %struct.StitchState* %280, i32 0, i32 17, !dbg !3773
  store i32 0, i32* %selection_size, align 8, !dbg !3774
  %281 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3775
  %ptr295 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %281, i32 0, i32 7, !dbg !3777
  %282 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr295, align 8, !dbg !3777
  %call296 = call zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA* %282, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0)), !dbg !3778
  %tobool297 = icmp ne i8 %call296, 0, !dbg !3778
  br i1 %tobool297, label %if.then298, label %if.else388, !dbg !3779

if.then298:                                       ; preds = %for.end294
  call void @llvm.dbg.declare(metadata i32* %faceIndex, metadata !3780, metadata !DIExpression()), !dbg !3782
  call void @llvm.dbg.declare(metadata i32* %elementIndex, metadata !3783, metadata !DIExpression()), !dbg !3784
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element299, metadata !3785, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.declare(metadata i32* %stored_mode, metadata !3787, metadata !DIExpression()), !dbg !3788
  %283 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3789
  %ptr300 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %283, i32 0, i32 7, !dbg !3790
  %284 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr300, align 8, !dbg !3790
  %call301 = call i32 @RNA_enum_get(%struct.PointerRNA* %284, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0)), !dbg !3791
  store i32 %call301, i32* %stored_mode, align 4, !dbg !3788
  %285 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3792
  %bm302 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %285, i32 0, i32 0, !dbg !3793
  %286 = load %struct.BMesh*, %struct.BMesh** %bm302, align 8, !dbg !3793
  call void @BM_mesh_elem_table_ensure(%struct.BMesh* %286, i8 zeroext 8), !dbg !3794
  %287 = load i32, i32* %stored_mode, align 4, !dbg !3795
  %cmp303 = icmp eq i32 %287, 0, !dbg !3797
  br i1 %cmp303, label %if.then305, label %if.else324, !dbg !3798

if.then305:                                       ; preds = %if.then298
  %288 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3799
  %289 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3801
  %total_separate_uvs306 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %289, i32 0, i32 15, !dbg !3802
  %290 = load i32, i32* %total_separate_uvs306, align 4, !dbg !3802
  %conv307 = sext i32 %290 to i64, !dbg !3801
  %mul308 = mul i64 8, %conv307, !dbg !3803
  %call309 = call i8* %288(i64 %mul308, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.40, i64 0, i64 0)), !dbg !3799
  %291 = bitcast i8* %call309 to i8**, !dbg !3799
  %292 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3804
  %selection_stack = getelementptr inbounds %struct.StitchState, %struct.StitchState* %292, i32 0, i32 16, !dbg !3805
  store i8** %291, i8*** %selection_stack, align 8, !dbg !3806
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %rna_macro_iter, metadata !3807, metadata !DIExpression()), !dbg !3851
  %293 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3852
  %ptr310 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %293, i32 0, i32 7, !dbg !3852
  %294 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr310, align 8, !dbg !3852
  call void @RNA_collection_begin(%struct.PointerRNA* %294, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0), %struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !3852
  br label %for.cond311, !dbg !3852

for.cond311:                                      ; preds = %for.inc322, %if.then305
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 7, !dbg !3854
  %295 = load i32, i32* %valid, align 8, !dbg !3854
  %tobool312 = icmp ne i32 %295, 0, !dbg !3852
  br i1 %tobool312, label %for.body313, label %for.end323, !dbg !3852

for.body313:                                      ; preds = %for.cond311
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %itemptr, metadata !3856, metadata !DIExpression()), !dbg !3858
  %ptr314 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 6, !dbg !3858
  %296 = bitcast %struct.PointerRNA* %itemptr to i8*, !dbg !3858
  %297 = bitcast %struct.PointerRNA* %ptr314 to i8*, !dbg !3858
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %296, i8* align 8 %297, i64 24, i1 false), !dbg !3858
  %call315 = call i32 @RNA_int_get(%struct.PointerRNA* %itemptr, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i64 0, i64 0)), !dbg !3859
  store i32 %call315, i32* %faceIndex, align 4, !dbg !3861
  %call316 = call i32 @RNA_int_get(%struct.PointerRNA* %itemptr, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i64 0, i64 0)), !dbg !3862
  store i32 %call316, i32* %elementIndex, align 4, !dbg !3863
  %298 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3864
  %bm317 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %298, i32 0, i32 0, !dbg !3865
  %299 = load %struct.BMesh*, %struct.BMesh** %bm317, align 8, !dbg !3865
  %300 = load i32, i32* %faceIndex, align 4, !dbg !3866
  %call318 = call %struct.BMFace* @BM_face_at_index(%struct.BMesh* %299, i32 %300), !dbg !3867
  store %struct.BMFace* %call318, %struct.BMFace** %efa, align 8, !dbg !3868
  %301 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3869
  %element_map319 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %301, i32 0, i32 7, !dbg !3870
  %302 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map319, align 8, !dbg !3870
  %303 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3871
  %304 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3872
  %305 = bitcast %struct.BMFace* %304 to i8*, !dbg !3872
  %306 = load i32, i32* %elementIndex, align 4, !dbg !3873
  %call320 = call i8* @BM_iter_at_index(%struct.BMesh* null, i8 zeroext 11, i8* %305, i32 %306), !dbg !3874
  %307 = bitcast i8* %call320 to %struct.BMLoop*, !dbg !3874
  %call321 = call %struct.UvElement* @BM_uv_element_get(%struct.UvElementMap* %302, %struct.BMFace* %303, %struct.BMLoop* %307), !dbg !3875
  store %struct.UvElement* %call321, %struct.UvElement** %element299, align 8, !dbg !3876
  %308 = load %struct.UvElement*, %struct.UvElement** %element299, align 8, !dbg !3877
  %309 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3878
  call void @stitch_select_uv(%struct.UvElement* %308, %struct.StitchState* %309, i32 1), !dbg !3879
  br label %for.inc322, !dbg !3880

for.inc322:                                       ; preds = %for.body313
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !3854
  br label %for.cond311, !dbg !3854, !llvm.loop !3881

for.end323:                                       ; preds = %for.cond311
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !3883
  br label %if.end378, !dbg !3884

if.else324:                                       ; preds = %if.then298
  %310 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3885
  %311 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3887
  %total_separate_edges325 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %311, i32 0, i32 14, !dbg !3888
  %312 = load i32, i32* %total_separate_edges325, align 8, !dbg !3888
  %conv326 = sext i32 %312 to i64, !dbg !3887
  %mul327 = mul i64 8, %conv326, !dbg !3889
  %call328 = call i8* %310(i64 %mul327, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.40, i64 0, i64 0)), !dbg !3885
  %313 = bitcast i8* %call328 to i8**, !dbg !3885
  %314 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3890
  %selection_stack329 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %314, i32 0, i32 16, !dbg !3891
  store i8** %313, i8*** %selection_stack329, align 8, !dbg !3892
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %rna_macro_iter330, metadata !3893, metadata !DIExpression()), !dbg !3895
  %315 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3896
  %ptr331 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %315, i32 0, i32 7, !dbg !3896
  %316 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr331, align 8, !dbg !3896
  call void @RNA_collection_begin(%struct.PointerRNA* %316, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0), %struct.CollectionPropertyIterator* %rna_macro_iter330), !dbg !3896
  br label %for.cond332, !dbg !3896

for.cond332:                                      ; preds = %for.inc376, %if.else324
  %valid333 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter330, i32 0, i32 7, !dbg !3898
  %317 = load i32, i32* %valid333, align 8, !dbg !3898
  %tobool334 = icmp ne i32 %317, 0, !dbg !3896
  br i1 %tobool334, label %for.body335, label %for.end377, !dbg !3896

for.body335:                                      ; preds = %for.cond332
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %itemptr336, metadata !3900, metadata !DIExpression()), !dbg !3902
  %ptr337 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter330, i32 0, i32 6, !dbg !3902
  %318 = bitcast %struct.PointerRNA* %itemptr336 to i8*, !dbg !3902
  %319 = bitcast %struct.PointerRNA* %ptr337 to i8*, !dbg !3902
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %318, i8* align 8 %319, i64 24, i1 false), !dbg !3902
  call void @llvm.dbg.declare(metadata %struct.UvEdge* %tmp_edge, metadata !3903, metadata !DIExpression()), !dbg !3905
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge338, metadata !3906, metadata !DIExpression()), !dbg !3907
  call void @llvm.dbg.declare(metadata i32* %uv1339, metadata !3908, metadata !DIExpression()), !dbg !3909
  call void @llvm.dbg.declare(metadata i32* %uv2340, metadata !3910, metadata !DIExpression()), !dbg !3911
  %call341 = call i32 @RNA_int_get(%struct.PointerRNA* %itemptr336, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i64 0, i64 0)), !dbg !3912
  store i32 %call341, i32* %faceIndex, align 4, !dbg !3913
  %call342 = call i32 @RNA_int_get(%struct.PointerRNA* %itemptr336, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i64 0, i64 0)), !dbg !3914
  store i32 %call342, i32* %elementIndex, align 4, !dbg !3915
  %320 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3916
  %bm343 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %320, i32 0, i32 0, !dbg !3917
  %321 = load %struct.BMesh*, %struct.BMesh** %bm343, align 8, !dbg !3917
  %322 = load i32, i32* %faceIndex, align 4, !dbg !3918
  %call344 = call %struct.BMFace* @BM_face_at_index(%struct.BMesh* %321, i32 %322), !dbg !3919
  store %struct.BMFace* %call344, %struct.BMFace** %efa, align 8, !dbg !3920
  %323 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3921
  %element_map345 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %323, i32 0, i32 7, !dbg !3922
  %324 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map345, align 8, !dbg !3922
  %325 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3923
  %326 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3924
  %327 = bitcast %struct.BMFace* %326 to i8*, !dbg !3924
  %328 = load i32, i32* %elementIndex, align 4, !dbg !3925
  %call346 = call i8* @BM_iter_at_index(%struct.BMesh* null, i8 zeroext 11, i8* %327, i32 %328), !dbg !3926
  %329 = bitcast i8* %call346 to %struct.BMLoop*, !dbg !3926
  %call347 = call %struct.UvElement* @BM_uv_element_get(%struct.UvElementMap* %324, %struct.BMFace* %325, %struct.BMLoop* %329), !dbg !3927
  store %struct.UvElement* %call347, %struct.UvElement** %element299, align 8, !dbg !3928
  %330 = load i32*, i32** %map, align 8, !dbg !3929
  %331 = load %struct.UvElement*, %struct.UvElement** %element299, align 8, !dbg !3930
  %332 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3931
  %element_map348 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %332, i32 0, i32 7, !dbg !3932
  %333 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map348, align 8, !dbg !3932
  %buf349 = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %333, i32 0, i32 1, !dbg !3933
  %334 = load %struct.UvElement*, %struct.UvElement** %buf349, align 8, !dbg !3933
  %sub.ptr.lhs.cast350 = ptrtoint %struct.UvElement* %331 to i64, !dbg !3934
  %sub.ptr.rhs.cast351 = ptrtoint %struct.UvElement* %334 to i64, !dbg !3934
  %sub.ptr.sub352 = sub i64 %sub.ptr.lhs.cast350, %sub.ptr.rhs.cast351, !dbg !3934
  %sub.ptr.div353 = sdiv exact i64 %sub.ptr.sub352, 24, !dbg !3934
  %arrayidx354 = getelementptr inbounds i32, i32* %330, i64 %sub.ptr.div353, !dbg !3929
  %335 = load i32, i32* %arrayidx354, align 4, !dbg !3929
  store i32 %335, i32* %uv1339, align 4, !dbg !3935
  %336 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3936
  %element_map355 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %336, i32 0, i32 7, !dbg !3937
  %337 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map355, align 8, !dbg !3937
  %338 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3938
  %339 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3939
  %340 = bitcast %struct.BMFace* %339 to i8*, !dbg !3939
  %341 = load i32, i32* %elementIndex, align 4, !dbg !3940
  %add = add nsw i32 %341, 1, !dbg !3941
  %342 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3942
  %len = getelementptr inbounds %struct.BMFace, %struct.BMFace* %342, i32 0, i32 3, !dbg !3943
  %343 = load i32, i32* %len, align 8, !dbg !3943
  %rem356 = srem i32 %add, %343, !dbg !3944
  %call357 = call i8* @BM_iter_at_index(%struct.BMesh* null, i8 zeroext 11, i8* %340, i32 %rem356), !dbg !3945
  %344 = bitcast i8* %call357 to %struct.BMLoop*, !dbg !3945
  %call358 = call %struct.UvElement* @BM_uv_element_get(%struct.UvElementMap* %337, %struct.BMFace* %338, %struct.BMLoop* %344), !dbg !3946
  store %struct.UvElement* %call358, %struct.UvElement** %element299, align 8, !dbg !3947
  %345 = load i32*, i32** %map, align 8, !dbg !3948
  %346 = load %struct.UvElement*, %struct.UvElement** %element299, align 8, !dbg !3949
  %347 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3950
  %element_map359 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %347, i32 0, i32 7, !dbg !3951
  %348 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map359, align 8, !dbg !3951
  %buf360 = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %348, i32 0, i32 1, !dbg !3952
  %349 = load %struct.UvElement*, %struct.UvElement** %buf360, align 8, !dbg !3952
  %sub.ptr.lhs.cast361 = ptrtoint %struct.UvElement* %346 to i64, !dbg !3953
  %sub.ptr.rhs.cast362 = ptrtoint %struct.UvElement* %349 to i64, !dbg !3953
  %sub.ptr.sub363 = sub i64 %sub.ptr.lhs.cast361, %sub.ptr.rhs.cast362, !dbg !3953
  %sub.ptr.div364 = sdiv exact i64 %sub.ptr.sub363, 24, !dbg !3953
  %arrayidx365 = getelementptr inbounds i32, i32* %345, i64 %sub.ptr.div364, !dbg !3948
  %350 = load i32, i32* %arrayidx365, align 4, !dbg !3948
  store i32 %350, i32* %uv2340, align 4, !dbg !3954
  %351 = load i32, i32* %uv1339, align 4, !dbg !3955
  %352 = load i32, i32* %uv2340, align 4, !dbg !3957
  %cmp366 = icmp slt i32 %351, %352, !dbg !3958
  br i1 %cmp366, label %if.then368, label %if.else371, !dbg !3959

if.then368:                                       ; preds = %for.body335
  %353 = load i32, i32* %uv1339, align 4, !dbg !3960
  %uv1369 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %tmp_edge, i32 0, i32 0, !dbg !3962
  store i32 %353, i32* %uv1369, align 8, !dbg !3963
  %354 = load i32, i32* %uv2340, align 4, !dbg !3964
  %uv2370 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %tmp_edge, i32 0, i32 1, !dbg !3965
  store i32 %354, i32* %uv2370, align 4, !dbg !3966
  br label %if.end374, !dbg !3967

if.else371:                                       ; preds = %for.body335
  %355 = load i32, i32* %uv2340, align 4, !dbg !3968
  %uv1372 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %tmp_edge, i32 0, i32 0, !dbg !3970
  store i32 %355, i32* %uv1372, align 8, !dbg !3971
  %356 = load i32, i32* %uv1339, align 4, !dbg !3972
  %uv2373 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %tmp_edge, i32 0, i32 1, !dbg !3973
  store i32 %356, i32* %uv2373, align 4, !dbg !3974
  br label %if.end374

if.end374:                                        ; preds = %if.else371, %if.then368
  %357 = load %struct.GHash*, %struct.GHash** %edge_hash, align 8, !dbg !3975
  %358 = bitcast %struct.UvEdge* %tmp_edge to i8*, !dbg !3976
  %call375 = call i8* @BLI_ghash_lookup(%struct.GHash* %357, i8* %358), !dbg !3977
  %359 = bitcast i8* %call375 to %struct.UvEdge*, !dbg !3977
  store %struct.UvEdge* %359, %struct.UvEdge** %edge338, align 8, !dbg !3978
  %360 = load %struct.UvEdge*, %struct.UvEdge** %edge338, align 8, !dbg !3979
  %361 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3980
  call void @stitch_select_edge(%struct.UvEdge* %360, %struct.StitchState* %361, i32 1), !dbg !3981
  br label %for.inc376, !dbg !3982

for.inc376:                                       ; preds = %if.end374
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %rna_macro_iter330), !dbg !3898
  br label %for.cond332, !dbg !3898, !llvm.loop !3983

for.end377:                                       ; preds = %for.cond332
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %rna_macro_iter330), !dbg !3985
  br label %if.end378

if.end378:                                        ; preds = %for.end377, %for.end323
  %362 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3986
  %mode379 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %362, i32 0, i32 20, !dbg !3988
  %363 = load i8, i8* %mode379, align 8, !dbg !3988
  %conv380 = zext i8 %363 to i32, !dbg !3986
  %364 = load i32, i32* %stored_mode, align 4, !dbg !3989
  %cmp381 = icmp ne i32 %conv380, %364, !dbg !3990
  br i1 %cmp381, label %if.then383, label %if.end386, !dbg !3991

if.then383:                                       ; preds = %if.end378
  %365 = load i32, i32* %stored_mode, align 4, !dbg !3992
  %conv384 = trunc i32 %365 to i8, !dbg !3992
  %366 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3994
  %mode385 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %366, i32 0, i32 20, !dbg !3995
  store i8 %conv384, i8* %mode385, align 8, !dbg !3996
  %367 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !3997
  call void @stitch_switch_selection_mode(%struct.StitchState* %367), !dbg !3998
  br label %if.end386, !dbg !3999

if.end386:                                        ; preds = %if.then383, %if.end378
  %368 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4000
  %ptr387 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %368, i32 0, i32 7, !dbg !4001
  %369 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr387, align 8, !dbg !4001
  call void @RNA_collection_clear(%struct.PointerRNA* %369, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0)), !dbg !4002
  br label %if.end471, !dbg !4003

if.else388:                                       ; preds = %for.end294
  %370 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !4004
  %mode389 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %370, i32 0, i32 20, !dbg !4007
  %371 = load i8, i8* %mode389, align 8, !dbg !4007
  %conv390 = zext i8 %371 to i32, !dbg !4004
  %cmp391 = icmp eq i32 %conv390, 0, !dbg !4008
  br i1 %cmp391, label %if.then393, label %if.else425, !dbg !4009

if.then393:                                       ; preds = %if.else388
  %372 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4010
  %373 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !4012
  %total_separate_uvs394 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %373, i32 0, i32 15, !dbg !4013
  %374 = load i32, i32* %total_separate_uvs394, align 4, !dbg !4013
  %conv395 = sext i32 %374 to i64, !dbg !4012
  %mul396 = mul i64 8, %conv395, !dbg !4014
  %call397 = call i8* %372(i64 %mul396, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.40, i64 0, i64 0)), !dbg !4010
  %375 = bitcast i8* %call397 to i8**, !dbg !4010
  %376 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !4015
  %selection_stack398 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %376, i32 0, i32 16, !dbg !4016
  store i8** %375, i8*** %selection_stack398, align 8, !dbg !4017
  %377 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4018
  %bm399 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %377, i32 0, i32 0, !dbg !4018
  %378 = load %struct.BMesh*, %struct.BMesh** %bm399, align 8, !dbg !4018
  %call400 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %378, i8 zeroext 3, i8* null), !dbg !4018
  %379 = bitcast i8* %call400 to %struct.BMFace*, !dbg !4018
  store %struct.BMFace* %379, %struct.BMFace** %efa, align 8, !dbg !4018
  br label %for.cond401, !dbg !4018

for.cond401:                                      ; preds = %for.inc422, %if.then393
  %380 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4020
  %tobool402 = icmp ne %struct.BMFace* %380, null, !dbg !4018
  br i1 %tobool402, label %for.body403, label %for.end424, !dbg !4018

for.body403:                                      ; preds = %for.cond401
  %381 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4022
  %382 = bitcast %struct.BMFace* %381 to i8*, !dbg !4022
  %call404 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %382), !dbg !4022
  %383 = bitcast i8* %call404 to %struct.BMLoop*, !dbg !4022
  store %struct.BMLoop* %383, %struct.BMLoop** %l, align 8, !dbg !4022
  store i32 0, i32* %i, align 4, !dbg !4022
  br label %for.cond405, !dbg !4022

for.cond405:                                      ; preds = %for.inc418, %for.body403
  %384 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !4025
  %tobool406 = icmp ne %struct.BMLoop* %384, null, !dbg !4022
  br i1 %tobool406, label %for.body407, label %for.end421, !dbg !4022

for.body407:                                      ; preds = %for.cond405
  %385 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4027
  %386 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !4030
  %387 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !4031
  %call408 = call zeroext i8 @uvedit_uv_select_test(%struct.Scene* %385, %struct.BMLoop* %386, i32 %387), !dbg !4032
  %tobool409 = icmp ne i8 %call408, 0, !dbg !4032
  br i1 %tobool409, label %if.then410, label %if.end417, !dbg !4033

if.then410:                                       ; preds = %for.body407
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element411, metadata !4034, metadata !DIExpression()), !dbg !4036
  %388 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !4037
  %element_map412 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %388, i32 0, i32 7, !dbg !4038
  %389 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map412, align 8, !dbg !4038
  %390 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4039
  %391 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !4040
  %call413 = call %struct.UvElement* @BM_uv_element_get(%struct.UvElementMap* %389, %struct.BMFace* %390, %struct.BMLoop* %391), !dbg !4041
  store %struct.UvElement* %call413, %struct.UvElement** %element411, align 8, !dbg !4036
  %392 = load %struct.UvElement*, %struct.UvElement** %element411, align 8, !dbg !4042
  %tobool414 = icmp ne %struct.UvElement* %392, null, !dbg !4042
  br i1 %tobool414, label %if.then415, label %if.end416, !dbg !4044

if.then415:                                       ; preds = %if.then410
  %393 = load %struct.UvElement*, %struct.UvElement** %element411, align 8, !dbg !4045
  %394 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !4047
  call void @stitch_select_uv(%struct.UvElement* %393, %struct.StitchState* %394, i32 1), !dbg !4048
  br label %if.end416, !dbg !4049

if.end416:                                        ; preds = %if.then415, %if.then410
  br label %if.end417, !dbg !4050

if.end417:                                        ; preds = %if.end416, %for.body407
  br label %for.inc418, !dbg !4051

for.inc418:                                       ; preds = %if.end417
  %call419 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !4025
  %395 = bitcast i8* %call419 to %struct.BMLoop*, !dbg !4025
  store %struct.BMLoop* %395, %struct.BMLoop** %l, align 8, !dbg !4025
  %396 = load i32, i32* %i, align 4, !dbg !4025
  %inc420 = add nsw i32 %396, 1, !dbg !4025
  store i32 %inc420, i32* %i, align 4, !dbg !4025
  br label %for.cond405, !dbg !4025, !llvm.loop !4052

for.end421:                                       ; preds = %for.cond405
  br label %for.inc422, !dbg !4054

for.inc422:                                       ; preds = %for.end421
  %call423 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !4020
  %397 = bitcast i8* %call423 to %struct.BMFace*, !dbg !4020
  store %struct.BMFace* %397, %struct.BMFace** %efa, align 8, !dbg !4020
  br label %for.cond401, !dbg !4020, !llvm.loop !4055

for.end424:                                       ; preds = %for.cond401
  br label %if.end470, !dbg !4057

if.else425:                                       ; preds = %if.else388
  %398 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4058
  %399 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !4060
  %total_separate_edges426 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %399, i32 0, i32 14, !dbg !4061
  %400 = load i32, i32* %total_separate_edges426, align 8, !dbg !4061
  %conv427 = sext i32 %400 to i64, !dbg !4060
  %mul428 = mul i64 8, %conv427, !dbg !4062
  %call429 = call i8* %398(i64 %mul428, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.40, i64 0, i64 0)), !dbg !4058
  %401 = bitcast i8* %call429 to i8**, !dbg !4058
  %402 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !4063
  %selection_stack430 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %402, i32 0, i32 16, !dbg !4064
  store i8** %401, i8*** %selection_stack430, align 8, !dbg !4065
  %403 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4066
  %bm431 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %403, i32 0, i32 0, !dbg !4066
  %404 = load %struct.BMesh*, %struct.BMesh** %bm431, align 8, !dbg !4066
  %call432 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %404, i8 zeroext 3, i8* null), !dbg !4066
  %405 = bitcast i8* %call432 to %struct.BMFace*, !dbg !4066
  store %struct.BMFace* %405, %struct.BMFace** %efa, align 8, !dbg !4066
  br label %for.cond433, !dbg !4066

for.cond433:                                      ; preds = %for.inc467, %if.else425
  %406 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4068
  %tobool434 = icmp ne %struct.BMFace* %406, null, !dbg !4066
  br i1 %tobool434, label %for.body435, label %for.end469, !dbg !4066

for.body435:                                      ; preds = %for.cond433
  %407 = load %struct.ToolSettings*, %struct.ToolSettings** %ts, align 8, !dbg !4070
  %uv_flag436 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %407, i32 0, i32 11, !dbg !4073
  %408 = load i8, i8* %uv_flag436, align 2, !dbg !4073
  %conv437 = zext i8 %408 to i32, !dbg !4070
  %and438 = and i32 %conv437, 1, !dbg !4074
  %tobool439 = icmp ne i32 %and438, 0, !dbg !4074
  br i1 %tobool439, label %if.end450, label %land.lhs.true440, !dbg !4075

land.lhs.true440:                                 ; preds = %for.body435
  %409 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4076
  %head441 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %409, i32 0, i32 0, !dbg !4076
  %call442 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head441, i8 zeroext 2), !dbg !4076
  %conv443 = zext i8 %call442 to i32, !dbg !4077
  %tobool444 = icmp ne i32 %conv443, 0, !dbg !4077
  br i1 %tobool444, label %if.then449, label %lor.lhs.false445, !dbg !4078

lor.lhs.false445:                                 ; preds = %land.lhs.true440
  %410 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4079
  %head446 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %410, i32 0, i32 0, !dbg !4079
  %call447 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head446, i8 zeroext 1), !dbg !4079
  %tobool448 = icmp ne i8 %call447, 0, !dbg !4079
  br i1 %tobool448, label %if.end450, label %if.then449, !dbg !4080

if.then449:                                       ; preds = %lor.lhs.false445, %land.lhs.true440
  br label %for.inc467, !dbg !4081

if.end450:                                        ; preds = %lor.lhs.false445, %for.body435
  %411 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4082
  %412 = bitcast %struct.BMFace* %411 to i8*, !dbg !4082
  %call451 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %412), !dbg !4082
  %413 = bitcast i8* %call451 to %struct.BMLoop*, !dbg !4082
  store %struct.BMLoop* %413, %struct.BMLoop** %l, align 8, !dbg !4082
  br label %for.cond452, !dbg !4082

for.cond452:                                      ; preds = %for.inc464, %if.end450
  %414 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !4084
  %tobool453 = icmp ne %struct.BMLoop* %414, null, !dbg !4082
  br i1 %tobool453, label %for.body454, label %for.end466, !dbg !4082

for.body454:                                      ; preds = %for.cond452
  %415 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4086
  %416 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !4089
  %417 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !4090
  %call455 = call zeroext i8 @uvedit_edge_select_test(%struct.Scene* %415, %struct.BMLoop* %416, i32 %417), !dbg !4091
  %tobool456 = icmp ne i8 %call455, 0, !dbg !4091
  br i1 %tobool456, label %if.then457, label %if.end463, !dbg !4092

if.then457:                                       ; preds = %for.body454
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge458, metadata !4093, metadata !DIExpression()), !dbg !4095
  %418 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !4096
  %419 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !4097
  %call459 = call %struct.UvEdge* @uv_edge_get(%struct.BMLoop* %418, %struct.StitchState* %419), !dbg !4098
  store %struct.UvEdge* %call459, %struct.UvEdge** %edge458, align 8, !dbg !4095
  %420 = load %struct.UvEdge*, %struct.UvEdge** %edge458, align 8, !dbg !4099
  %tobool460 = icmp ne %struct.UvEdge* %420, null, !dbg !4099
  br i1 %tobool460, label %if.then461, label %if.end462, !dbg !4101

if.then461:                                       ; preds = %if.then457
  %421 = load %struct.UvEdge*, %struct.UvEdge** %edge458, align 8, !dbg !4102
  %422 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !4104
  call void @stitch_select_edge(%struct.UvEdge* %421, %struct.StitchState* %422, i32 1), !dbg !4105
  br label %if.end462, !dbg !4106

if.end462:                                        ; preds = %if.then461, %if.then457
  br label %if.end463, !dbg !4107

if.end463:                                        ; preds = %if.end462, %for.body454
  br label %for.inc464, !dbg !4108

for.inc464:                                       ; preds = %if.end463
  %call465 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !4084
  %423 = bitcast i8* %call465 to %struct.BMLoop*, !dbg !4084
  store %struct.BMLoop* %423, %struct.BMLoop** %l, align 8, !dbg !4084
  br label %for.cond452, !dbg !4084, !llvm.loop !4109

for.end466:                                       ; preds = %for.cond452
  br label %for.inc467, !dbg !4111

for.inc467:                                       ; preds = %for.end466, %if.then449
  %call468 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !4068
  %424 = bitcast i8* %call468 to %struct.BMFace*, !dbg !4068
  store %struct.BMFace* %424, %struct.BMFace** %efa, align 8, !dbg !4068
  br label %for.cond433, !dbg !4068, !llvm.loop !4112

for.end469:                                       ; preds = %for.cond433
  br label %if.end470

if.end470:                                        ; preds = %for.end469, %for.end424
  br label %if.end471

if.end471:                                        ; preds = %if.end470, %if.end386
  %425 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4114
  %426 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !4115
  %element_map472 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %426, i32 0, i32 7, !dbg !4116
  %427 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map472, align 8, !dbg !4116
  %totalIslands473 = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %427, i32 0, i32 3, !dbg !4117
  %428 = load i32, i32* %totalIslands473, align 4, !dbg !4117
  %conv474 = sext i32 %428 to i64, !dbg !4115
  %mul475 = mul i64 4, %conv474, !dbg !4118
  %call476 = call i8* %425(i64 %mul475, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.43, i64 0, i64 0)), !dbg !4114
  %429 = bitcast i8* %call476 to i32*, !dbg !4114
  %430 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !4119
  %tris_per_island = getelementptr inbounds %struct.StitchState, %struct.StitchState* %430, i32 0, i32 19, !dbg !4120
  store i32* %429, i32** %tris_per_island, align 8, !dbg !4121
  store i32 0, i32* %i, align 4, !dbg !4122
  br label %for.cond477, !dbg !4124

for.cond477:                                      ; preds = %for.inc486, %if.end471
  %431 = load i32, i32* %i, align 4, !dbg !4125
  %432 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !4127
  %element_map478 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %432, i32 0, i32 7, !dbg !4128
  %433 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map478, align 8, !dbg !4128
  %totalIslands479 = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %433, i32 0, i32 3, !dbg !4129
  %434 = load i32, i32* %totalIslands479, align 4, !dbg !4129
  %cmp480 = icmp slt i32 %431, %434, !dbg !4130
  br i1 %cmp480, label %for.body482, label %for.end488, !dbg !4131

for.body482:                                      ; preds = %for.cond477
  %435 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !4132
  %tris_per_island483 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %435, i32 0, i32 19, !dbg !4134
  %436 = load i32*, i32** %tris_per_island483, align 8, !dbg !4134
  %437 = load i32, i32* %i, align 4, !dbg !4135
  %idxprom484 = sext i32 %437 to i64, !dbg !4132
  %arrayidx485 = getelementptr inbounds i32, i32* %436, i64 %idxprom484, !dbg !4132
  store i32 0, i32* %arrayidx485, align 4, !dbg !4136
  br label %for.inc486, !dbg !4137

for.inc486:                                       ; preds = %for.body482
  %438 = load i32, i32* %i, align 4, !dbg !4138
  %inc487 = add nsw i32 %438, 1, !dbg !4138
  store i32 %inc487, i32* %i, align 4, !dbg !4138
  br label %for.cond477, !dbg !4139, !llvm.loop !4140

for.end488:                                       ; preds = %for.cond477
  %439 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4142
  %bm489 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %439, i32 0, i32 0, !dbg !4142
  %440 = load %struct.BMesh*, %struct.BMesh** %bm489, align 8, !dbg !4142
  %call490 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %440, i8 zeroext 3, i8* null), !dbg !4142
  %441 = bitcast i8* %call490 to %struct.BMFace*, !dbg !4142
  store %struct.BMFace* %441, %struct.BMFace** %efa, align 8, !dbg !4142
  br label %for.cond491, !dbg !4142

for.cond491:                                      ; preds = %for.inc508, %for.end488
  %442 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4144
  %tobool492 = icmp ne %struct.BMFace* %442, null, !dbg !4142
  br i1 %tobool492, label %for.body493, label %for.end510, !dbg !4142

for.body493:                                      ; preds = %for.cond491
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element494, metadata !4146, metadata !DIExpression()), !dbg !4148
  %443 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !4149
  %element_map495 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %443, i32 0, i32 7, !dbg !4150
  %444 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map495, align 8, !dbg !4150
  %445 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4151
  %446 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4152
  %l_first = getelementptr inbounds %struct.BMFace, %struct.BMFace* %446, i32 0, i32 2, !dbg !4152
  %447 = load %struct.BMLoop*, %struct.BMLoop** %l_first, align 8, !dbg !4152
  %call496 = call %struct.UvElement* @BM_uv_element_get(%struct.UvElementMap* %444, %struct.BMFace* %445, %struct.BMLoop* %447), !dbg !4153
  store %struct.UvElement* %call496, %struct.UvElement** %element494, align 8, !dbg !4148
  %448 = load %struct.UvElement*, %struct.UvElement** %element494, align 8, !dbg !4154
  %tobool497 = icmp ne %struct.UvElement* %448, null, !dbg !4154
  br i1 %tobool497, label %if.then498, label %if.end507, !dbg !4156

if.then498:                                       ; preds = %for.body493
  %449 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4157
  %len499 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %449, i32 0, i32 3, !dbg !4159
  %450 = load i32, i32* %len499, align 8, !dbg !4159
  %cmp500 = icmp sgt i32 %450, 2, !dbg !4160
  br i1 %cmp500, label %cond.true, label %cond.false, !dbg !4161

cond.true:                                        ; preds = %if.then498
  %451 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4162
  %len502 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %451, i32 0, i32 3, !dbg !4163
  %452 = load i32, i32* %len502, align 8, !dbg !4163
  %sub = sub nsw i32 %452, 2, !dbg !4164
  br label %cond.end, !dbg !4161

cond.false:                                       ; preds = %if.then498
  br label %cond.end, !dbg !4161

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ 0, %cond.false ], !dbg !4161
  %453 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !4165
  %tris_per_island503 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %453, i32 0, i32 19, !dbg !4166
  %454 = load i32*, i32** %tris_per_island503, align 8, !dbg !4166
  %455 = load %struct.UvElement*, %struct.UvElement** %element494, align 8, !dbg !4167
  %island = getelementptr inbounds %struct.UvElement, %struct.UvElement* %455, i32 0, i32 5, !dbg !4168
  %456 = load i16, i16* %island, align 4, !dbg !4168
  %idxprom504 = zext i16 %456 to i64, !dbg !4165
  %arrayidx505 = getelementptr inbounds i32, i32* %454, i64 %idxprom504, !dbg !4165
  %457 = load i32, i32* %arrayidx505, align 4, !dbg !4169
  %add506 = add i32 %457, %cond, !dbg !4169
  store i32 %add506, i32* %arrayidx505, align 4, !dbg !4169
  br label %if.end507, !dbg !4170

if.end507:                                        ; preds = %cond.end, %for.body493
  br label %for.inc508, !dbg !4171

for.inc508:                                       ; preds = %if.end507
  %call509 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !4144
  %458 = bitcast i8* %call509 to %struct.BMFace*, !dbg !4144
  store %struct.BMFace* %458, %struct.BMFace** %efa, align 8, !dbg !4144
  br label %for.cond491, !dbg !4144, !llvm.loop !4172

for.end510:                                       ; preds = %for.cond491
  %459 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !4174
  %460 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4176
  %call511 = call i32 @stitch_process_data(%struct.StitchState* %459, %struct.Scene* %460, i32 0), !dbg !4177
  %tobool512 = icmp ne i32 %call511, 0, !dbg !4177
  br i1 %tobool512, label %if.end514, label %if.then513, !dbg !4178

if.then513:                                       ; preds = %for.end510
  %461 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !4179
  call void @state_delete(%struct.StitchState* %461), !dbg !4181
  store i32 0, i32* %retval, align 4, !dbg !4182
  br label %return, !dbg !4182

if.end514:                                        ; preds = %for.end510
  %462 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4183
  %type = getelementptr inbounds %struct.ARegion, %struct.ARegion* %462, i32 0, i32 20, !dbg !4184
  %463 = load %struct.ARegionType*, %struct.ARegionType** %type, align 8, !dbg !4184
  %464 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !4185
  %465 = bitcast %struct.StitchState* %464 to i8*, !dbg !4185
  %call515 = call i8* @ED_region_draw_cb_activate(%struct.ARegionType* %463, void (%struct.bContext*, %struct.ARegion*, i8*)* @stitch_draw, i8* %465, i32 0), !dbg !4186
  %466 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !4187
  %draw_handle = getelementptr inbounds %struct.StitchState, %struct.StitchState* %466, i32 0, i32 21, !dbg !4188
  store i8* %call515, i8** %draw_handle, align 8, !dbg !4189
  %467 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !4190
  %468 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4191
  call void @stitch_update_header(%struct.StitchState* %467, %struct.bContext* %468), !dbg !4192
  store i32 1, i32* %retval, align 4, !dbg !4193
  br label %return, !dbg !4193

return:                                           ; preds = %if.end514, %if.then513, %if.then231, %if.then102, %if.then66, %if.then
  %469 = load i32, i32* %retval, align 4, !dbg !4194
  ret i32 %469, !dbg !4194
}

declare dso_local %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local void @WM_event_add_notifier(%struct.bContext*, i32, i8*) #2

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #2

declare dso_local %struct.ARegion* @CTX_wm_region(%struct.bContext*) #2

declare dso_local %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object*) #2

declare dso_local i32 @CustomData_get_offset(%struct.CustomData*, i32) #2

declare dso_local i32 @RNA_boolean_get(%struct.PointerRNA*, i8*) #2

declare dso_local float @RNA_float_get(%struct.PointerRNA*, i8*) #2

declare dso_local i32 @RNA_int_get(%struct.PointerRNA*, i8*) #2

declare dso_local zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA*, i8*) #2

declare dso_local i32 @RNA_enum_get(%struct.PointerRNA*, i8*) #2

declare dso_local %struct.UvElementMap* @BM_uv_element_map_create(%struct.BMesh*, i8 zeroext, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @state_delete(%struct.StitchState* %state) #0 !dbg !4195 {
entry:
  %state.addr = alloca %struct.StitchState*, align 8
  store %struct.StitchState* %state, %struct.StitchState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state.addr, metadata !4198, metadata !DIExpression()), !dbg !4199
  %0 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4200
  %tobool = icmp ne %struct.StitchState* %0, null, !dbg !4200
  br i1 %tobool, label %if.then, label %if.end36, !dbg !4202

if.then:                                          ; preds = %entry
  %1 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4203
  %element_map = getelementptr inbounds %struct.StitchState, %struct.StitchState* %1, i32 0, i32 7, !dbg !4206
  %2 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map, align 8, !dbg !4206
  %tobool1 = icmp ne %struct.UvElementMap* %2, null, !dbg !4203
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !4207

if.then2:                                         ; preds = %if.then
  %3 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4208
  %element_map3 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %3, i32 0, i32 7, !dbg !4210
  %4 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map3, align 8, !dbg !4210
  call void @BM_uv_element_map_free(%struct.UvElementMap* %4), !dbg !4211
  br label %if.end, !dbg !4212

if.end:                                           ; preds = %if.then2, %if.then
  %5 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4213
  %uvs = getelementptr inbounds %struct.StitchState, %struct.StitchState* %5, i32 0, i32 9, !dbg !4215
  %6 = load %struct.UvElement**, %struct.UvElement*** %uvs, align 8, !dbg !4215
  %tobool4 = icmp ne %struct.UvElement** %6, null, !dbg !4213
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !4216

if.then5:                                         ; preds = %if.end
  %7 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4217
  %8 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4219
  %uvs6 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %8, i32 0, i32 9, !dbg !4220
  %9 = load %struct.UvElement**, %struct.UvElement*** %uvs6, align 8, !dbg !4220
  %10 = bitcast %struct.UvElement** %9 to i8*, !dbg !4219
  call void %7(i8* %10), !dbg !4217
  br label %if.end7, !dbg !4221

if.end7:                                          ; preds = %if.then5, %if.end
  %11 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4222
  %selection_stack = getelementptr inbounds %struct.StitchState, %struct.StitchState* %11, i32 0, i32 16, !dbg !4224
  %12 = load i8**, i8*** %selection_stack, align 8, !dbg !4224
  %tobool8 = icmp ne i8** %12, null, !dbg !4222
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !4225

if.then9:                                         ; preds = %if.end7
  %13 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4226
  %14 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4228
  %selection_stack10 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %14, i32 0, i32 16, !dbg !4229
  %15 = load i8**, i8*** %selection_stack10, align 8, !dbg !4229
  %16 = bitcast i8** %15 to i8*, !dbg !4228
  call void %13(i8* %16), !dbg !4226
  br label %if.end11, !dbg !4230

if.end11:                                         ; preds = %if.then9, %if.end7
  %17 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4231
  %tris_per_island = getelementptr inbounds %struct.StitchState, %struct.StitchState* %17, i32 0, i32 19, !dbg !4233
  %18 = load i32*, i32** %tris_per_island, align 8, !dbg !4233
  %tobool12 = icmp ne i32* %18, null, !dbg !4231
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !4234

if.then13:                                        ; preds = %if.end11
  %19 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4235
  %20 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4237
  %tris_per_island14 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %20, i32 0, i32 19, !dbg !4238
  %21 = load i32*, i32** %tris_per_island14, align 8, !dbg !4238
  %22 = bitcast i32* %21 to i8*, !dbg !4237
  call void %19(i8* %22), !dbg !4235
  br label %if.end15, !dbg !4239

if.end15:                                         ; preds = %if.then13, %if.end11
  %23 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4240
  %map = getelementptr inbounds %struct.StitchState, %struct.StitchState* %23, i32 0, i32 10, !dbg !4242
  %24 = load i32*, i32** %map, align 8, !dbg !4242
  %tobool16 = icmp ne i32* %24, null, !dbg !4240
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !4243

if.then17:                                        ; preds = %if.end15
  %25 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4244
  %26 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4246
  %map18 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %26, i32 0, i32 10, !dbg !4247
  %27 = load i32*, i32** %map18, align 8, !dbg !4247
  %28 = bitcast i32* %27 to i8*, !dbg !4246
  call void %25(i8* %28), !dbg !4244
  br label %if.end19, !dbg !4248

if.end19:                                         ; preds = %if.then17, %if.end15
  %29 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4249
  %normals = getelementptr inbounds %struct.StitchState, %struct.StitchState* %29, i32 0, i32 11, !dbg !4251
  %30 = load float*, float** %normals, align 8, !dbg !4251
  %tobool20 = icmp ne float* %30, null, !dbg !4249
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !4252

if.then21:                                        ; preds = %if.end19
  %31 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4253
  %32 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4255
  %normals22 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %32, i32 0, i32 11, !dbg !4256
  %33 = load float*, float** %normals22, align 8, !dbg !4256
  %34 = bitcast float* %33 to i8*, !dbg !4255
  call void %31(i8* %34), !dbg !4253
  br label %if.end23, !dbg !4257

if.end23:                                         ; preds = %if.then21, %if.end19
  %35 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4258
  %edges = getelementptr inbounds %struct.StitchState, %struct.StitchState* %35, i32 0, i32 12, !dbg !4260
  %36 = load %struct.UvEdge*, %struct.UvEdge** %edges, align 8, !dbg !4260
  %tobool24 = icmp ne %struct.UvEdge* %36, null, !dbg !4258
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !4261

if.then25:                                        ; preds = %if.end23
  %37 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4262
  %38 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4264
  %edges26 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %38, i32 0, i32 12, !dbg !4265
  %39 = load %struct.UvEdge*, %struct.UvEdge** %edges26, align 8, !dbg !4265
  %40 = bitcast %struct.UvEdge* %39 to i8*, !dbg !4264
  call void %37(i8* %40), !dbg !4262
  br label %if.end27, !dbg !4266

if.end27:                                         ; preds = %if.then25, %if.end23
  %41 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4267
  %stitch_preview = getelementptr inbounds %struct.StitchState, %struct.StitchState* %41, i32 0, i32 22, !dbg !4269
  %42 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !4269
  %tobool28 = icmp ne %struct.StitchPreviewer* %42, null, !dbg !4267
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !4270

if.then29:                                        ; preds = %if.end27
  %43 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4271
  %stitch_preview30 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %43, i32 0, i32 22, !dbg !4273
  %44 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview30, align 8, !dbg !4273
  call void @stitch_preview_delete(%struct.StitchPreviewer* %44), !dbg !4274
  br label %if.end31, !dbg !4275

if.end31:                                         ; preds = %if.then29, %if.end27
  %45 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4276
  %edge_hash = getelementptr inbounds %struct.StitchState, %struct.StitchState* %45, i32 0, i32 13, !dbg !4278
  %46 = load %struct.GHash*, %struct.GHash** %edge_hash, align 8, !dbg !4278
  %tobool32 = icmp ne %struct.GHash* %46, null, !dbg !4276
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !4279

if.then33:                                        ; preds = %if.end31
  %47 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4280
  %edge_hash34 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %47, i32 0, i32 13, !dbg !4282
  %48 = load %struct.GHash*, %struct.GHash** %edge_hash34, align 8, !dbg !4282
  call void @BLI_ghash_free(%struct.GHash* %48, void (i8*)* null, void (i8*)* null), !dbg !4283
  br label %if.end35, !dbg !4284

if.end35:                                         ; preds = %if.then33, %if.end31
  %49 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4285
  %50 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4286
  %51 = bitcast %struct.StitchState* %50 to i8*, !dbg !4286
  call void %49(i8* %51), !dbg !4285
  br label %if.end36, !dbg !4287

if.end36:                                         ; preds = %if.end35, %entry
  ret void, !dbg !4288
}

declare dso_local void @uvedit_get_aspect(%struct.Scene*, %struct.Object*, %struct.BMEditMesh*, float*, float*) #2

declare dso_local %struct.GHash* @BLI_ghash_new(i32 (i8*)*, i8 (i8*, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @uv_edge_hash(i8* %key) #0 !dbg !4289 {
entry:
  %key.addr = alloca i8*, align 8
  %edge = alloca %struct.UvEdge*, align 8
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !4294, metadata !DIExpression()), !dbg !4295
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge, metadata !4296, metadata !DIExpression()), !dbg !4297
  %0 = load i8*, i8** %key.addr, align 8, !dbg !4298
  %1 = bitcast i8* %0 to %struct.UvEdge*, !dbg !4299
  store %struct.UvEdge* %1, %struct.UvEdge** %edge, align 8, !dbg !4297
  %2 = load %struct.UvEdge*, %struct.UvEdge** %edge, align 8, !dbg !4300
  %uv2 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %2, i32 0, i32 1, !dbg !4301
  %3 = load i32, i32* %uv2, align 4, !dbg !4301
  %call = call i32 @BLI_ghashutil_uinthash(i32 %3), !dbg !4302
  %4 = load %struct.UvEdge*, %struct.UvEdge** %edge, align 8, !dbg !4303
  %uv1 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %4, i32 0, i32 0, !dbg !4304
  %5 = load i32, i32* %uv1, align 8, !dbg !4304
  %call1 = call i32 @BLI_ghashutil_uinthash(i32 %5), !dbg !4305
  %add = add i32 %call, %call1, !dbg !4306
  ret i32 %add, !dbg !4307
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @uv_edge_compare(i8* %a, i8* %b) #0 !dbg !4308 {
entry:
  %retval = alloca i8, align 1
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %edge1 = alloca %struct.UvEdge*, align 8
  %edge2 = alloca %struct.UvEdge*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !4311, metadata !DIExpression()), !dbg !4312
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !4313, metadata !DIExpression()), !dbg !4314
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge1, metadata !4315, metadata !DIExpression()), !dbg !4316
  %0 = load i8*, i8** %a.addr, align 8, !dbg !4317
  %1 = bitcast i8* %0 to %struct.UvEdge*, !dbg !4318
  store %struct.UvEdge* %1, %struct.UvEdge** %edge1, align 8, !dbg !4316
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge2, metadata !4319, metadata !DIExpression()), !dbg !4320
  %2 = load i8*, i8** %b.addr, align 8, !dbg !4321
  %3 = bitcast i8* %2 to %struct.UvEdge*, !dbg !4322
  store %struct.UvEdge* %3, %struct.UvEdge** %edge2, align 8, !dbg !4320
  %4 = load %struct.UvEdge*, %struct.UvEdge** %edge1, align 8, !dbg !4323
  %uv1 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %4, i32 0, i32 0, !dbg !4325
  %5 = load i32, i32* %uv1, align 8, !dbg !4325
  %6 = load %struct.UvEdge*, %struct.UvEdge** %edge2, align 8, !dbg !4326
  %uv11 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %6, i32 0, i32 0, !dbg !4327
  %7 = load i32, i32* %uv11, align 8, !dbg !4327
  %cmp = icmp eq i32 %5, %7, !dbg !4328
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4329

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.UvEdge*, %struct.UvEdge** %edge1, align 8, !dbg !4330
  %uv2 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %8, i32 0, i32 1, !dbg !4331
  %9 = load i32, i32* %uv2, align 4, !dbg !4331
  %10 = load %struct.UvEdge*, %struct.UvEdge** %edge2, align 8, !dbg !4332
  %uv22 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %10, i32 0, i32 1, !dbg !4333
  %11 = load i32, i32* %uv22, align 4, !dbg !4333
  %cmp3 = icmp eq i32 %9, %11, !dbg !4334
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4335

if.then:                                          ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !4336
  br label %return, !dbg !4336

if.end:                                           ; preds = %land.lhs.true, %entry
  store i8 1, i8* %retval, align 1, !dbg !4338
  br label %return, !dbg !4338

return:                                           ; preds = %if.end, %if.then
  %12 = load i8, i8* %retval, align 1, !dbg !4339
  ret i8 %12, !dbg !4339
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !4340 {
entry:
  %retval = alloca i8*, align 8
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !4345, metadata !DIExpression()), !dbg !4346
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !4347, metadata !DIExpression()), !dbg !4348
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !4349, metadata !DIExpression()), !dbg !4350
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !4351, metadata !DIExpression()), !dbg !4352
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !4353
  %1 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !4353
  %2 = load i8, i8* %itype.addr, align 1, !dbg !4353
  %3 = load i8*, i8** %data.addr, align 8, !dbg !4353
  %call = call zeroext i8 @BM_iter_init(%struct.BMIter* %0, %struct.BMesh* %1, i8 zeroext %2, i8* %3), !dbg !4353
  %tobool = icmp ne i8 %call, 0, !dbg !4353
  br i1 %tobool, label %if.then, label %if.else, !dbg !4355

if.then:                                          ; preds = %entry
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !4356
  %call1 = call i8* @BM_iter_step(%struct.BMIter* %4), !dbg !4358
  store i8* %call1, i8** %retval, align 8, !dbg !4359
  br label %return, !dbg !4359

if.else:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !4360
  br label %return, !dbg !4360

return:                                           ; preds = %if.else, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !4362
  ret i8* %5, !dbg !4362
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !4363 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !4369, metadata !DIExpression()), !dbg !4370
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !4371, metadata !DIExpression()), !dbg !4372
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !4373
  %hflag1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 3, !dbg !4374
  %1 = load i8, i8* %hflag1, align 1, !dbg !4374
  %conv = zext i8 %1 to i32, !dbg !4373
  %2 = load i8, i8* %hflag.addr, align 1, !dbg !4375
  %conv2 = zext i8 %2 to i32, !dbg !4375
  %and = and i32 %conv, %conv2, !dbg !4376
  %conv3 = trunc i32 %and to i8, !dbg !4373
  ret i8 %conv3, !dbg !4377
}

declare dso_local %struct.UvElement* @BM_uv_element_get(%struct.UvElementMap*, %struct.BMFace*, %struct.BMLoop*) #2

declare dso_local i8* @BLI_ghash_lookup(%struct.GHash*, i8*) #2

declare dso_local void @BLI_ghash_insert(%struct.GHash*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_step(%struct.BMIter* %iter) #0 !dbg !4378 {
entry:
  %iter.addr = alloca %struct.BMIter*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !4381, metadata !DIExpression()), !dbg !4382
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !4383
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %0, i32 0, i32 2, !dbg !4384
  %1 = load i8* (i8*)*, i8* (i8*)** %step, align 8, !dbg !4384
  %2 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !4385
  %3 = bitcast %struct.BMIter* %2 to i8*, !dbg !4385
  %call = call i8* %1(i8* %3), !dbg !4383
  ret i8* %call, !dbg !4386
}

declare dso_local %struct.GHashIterator* @BLI_ghashIterator_new(%struct.GHash*) #2

declare dso_local i32 @BLI_ghash_size(%struct.GHash*) #2

declare dso_local void @BLI_ghashIterator_free(%struct.GHashIterator*) #2

declare dso_local void @BLI_ghashIterator_init(%struct.GHashIterator*, %struct.GHash*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %ghi) #0 !dbg !4387 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !4390, metadata !DIExpression()), !dbg !4391
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !4392
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !4393
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !4393
  %tobool = icmp ne %struct.Entry* %1, null, !dbg !4394
  %lnot = xor i1 %tobool, true, !dbg !4394
  %lnot.ext = zext i1 %lnot to i32, !dbg !4394
  %conv = trunc i32 %lnot.ext to i8, !dbg !4394
  ret i8 %conv, !dbg !4395
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BLI_ghashIterator_getKey(%struct.GHashIterator* %ghi) #0 !dbg !4396 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !4399, metadata !DIExpression()), !dbg !4400
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !4401
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !4402
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !4402
  %2 = bitcast %struct.Entry* %1 to %struct._gh_Entry*, !dbg !4403
  %key = getelementptr inbounds %struct._gh_Entry, %struct._gh_Entry* %2, i32 0, i32 1, !dbg !4403
  %3 = load i8*, i8** %key, align 8, !dbg !4403
  ret i8* %3, !dbg !4404
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local void @BLI_ghashIterator_step(%struct.GHashIterator*) #2

declare dso_local void @BLI_ghash_free(%struct.GHash*, void (i8*)*, void (i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @stitch_uv_edge_generate_linked_edges(%struct.GHash* %edge_hash, %struct.StitchState* %state) #0 !dbg !4405 {
entry:
  %edge_hash.addr = alloca %struct.GHash*, align 8
  %state.addr = alloca %struct.StitchState*, align 8
  %edges = alloca %struct.UvEdge*, align 8
  %map = alloca i32*, align 8
  %element_map = alloca %struct.UvElementMap*, align 8
  %first_element = alloca %struct.UvElement*, align 8
  %i = alloca i32, align 4
  %edge = alloca %struct.UvEdge*, align 8
  %element1 = alloca %struct.UvElement*, align 8
  %element2 = alloca %struct.UvElement*, align 8
  %iter1 = alloca %struct.UvElement*, align 8
  %last_set = alloca %struct.UvEdge*, align 8
  %elemindex2 = alloca i32, align 4
  %iter2 = alloca %struct.UvElement*, align 8
  %index1 = alloca i32, align 4
  %index2 = alloca i32, align 4
  %edgetmp = alloca %struct.UvEdge, align 8
  %edge2 = alloca %struct.UvEdge*, align 8
  %eiter = alloca %struct.UvEdge*, align 8
  %valid = alloca i8, align 1
  %sw_ap = alloca i32, align 4
  store %struct.GHash* %edge_hash, %struct.GHash** %edge_hash.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHash** %edge_hash.addr, metadata !4408, metadata !DIExpression()), !dbg !4409
  store %struct.StitchState* %state, %struct.StitchState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state.addr, metadata !4410, metadata !DIExpression()), !dbg !4411
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edges, metadata !4412, metadata !DIExpression()), !dbg !4413
  %0 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4414
  %edges1 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %0, i32 0, i32 12, !dbg !4415
  %1 = load %struct.UvEdge*, %struct.UvEdge** %edges1, align 8, !dbg !4415
  store %struct.UvEdge* %1, %struct.UvEdge** %edges, align 8, !dbg !4413
  call void @llvm.dbg.declare(metadata i32** %map, metadata !4416, metadata !DIExpression()), !dbg !4418
  %2 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4419
  %map2 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %2, i32 0, i32 10, !dbg !4420
  %3 = load i32*, i32** %map2, align 8, !dbg !4420
  store i32* %3, i32** %map, align 8, !dbg !4418
  call void @llvm.dbg.declare(metadata %struct.UvElementMap** %element_map, metadata !4421, metadata !DIExpression()), !dbg !4422
  %4 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4423
  %element_map3 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %4, i32 0, i32 7, !dbg !4424
  %5 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map3, align 8, !dbg !4424
  store %struct.UvElementMap* %5, %struct.UvElementMap** %element_map, align 8, !dbg !4422
  call void @llvm.dbg.declare(metadata %struct.UvElement** %first_element, metadata !4425, metadata !DIExpression()), !dbg !4426
  %6 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map, align 8, !dbg !4427
  %buf = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %6, i32 0, i32 1, !dbg !4428
  %7 = load %struct.UvElement*, %struct.UvElement** %buf, align 8, !dbg !4428
  store %struct.UvElement* %7, %struct.UvElement** %first_element, align 8, !dbg !4426
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4429, metadata !DIExpression()), !dbg !4430
  store i32 0, i32* %i, align 4, !dbg !4431
  br label %for.cond, !dbg !4433

for.cond:                                         ; preds = %for.inc79, %entry
  %8 = load i32, i32* %i, align 4, !dbg !4434
  %9 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4436
  %total_separate_edges = getelementptr inbounds %struct.StitchState, %struct.StitchState* %9, i32 0, i32 14, !dbg !4437
  %10 = load i32, i32* %total_separate_edges, align 8, !dbg !4437
  %cmp = icmp slt i32 %8, %10, !dbg !4438
  br i1 %cmp, label %for.body, label %for.end80, !dbg !4439

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge, metadata !4440, metadata !DIExpression()), !dbg !4442
  %11 = load %struct.UvEdge*, %struct.UvEdge** %edges, align 8, !dbg !4443
  %12 = load i32, i32* %i, align 4, !dbg !4444
  %idx.ext = sext i32 %12 to i64, !dbg !4445
  %add.ptr = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %11, i64 %idx.ext, !dbg !4445
  store %struct.UvEdge* %add.ptr, %struct.UvEdge** %edge, align 8, !dbg !4442
  %13 = load %struct.UvEdge*, %struct.UvEdge** %edge, align 8, !dbg !4446
  %first = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %13, i32 0, i32 5, !dbg !4448
  %14 = load %struct.UvEdge*, %struct.UvEdge** %first, align 8, !dbg !4448
  %tobool = icmp ne %struct.UvEdge* %14, null, !dbg !4446
  br i1 %tobool, label %if.then, label %if.end, !dbg !4449

if.then:                                          ; preds = %for.body
  br label %for.inc79, !dbg !4450

if.end:                                           ; preds = %for.body
  %15 = load %struct.UvEdge*, %struct.UvEdge** %edge, align 8, !dbg !4451
  %flag = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %15, i32 0, i32 2, !dbg !4453
  %16 = load i8, i8* %flag, align 8, !dbg !4453
  %conv = zext i8 %16 to i32, !dbg !4451
  %and = and i32 %conv, 8, !dbg !4454
  %tobool4 = icmp ne i32 %and, 0, !dbg !4454
  br i1 %tobool4, label %if.then5, label %if.else76, !dbg !4455

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element1, metadata !4456, metadata !DIExpression()), !dbg !4458
  %17 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4459
  %uvs = getelementptr inbounds %struct.StitchState, %struct.StitchState* %17, i32 0, i32 9, !dbg !4460
  %18 = load %struct.UvElement**, %struct.UvElement*** %uvs, align 8, !dbg !4460
  %19 = load %struct.UvEdge*, %struct.UvEdge** %edge, align 8, !dbg !4461
  %uv1 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %19, i32 0, i32 0, !dbg !4462
  %20 = load i32, i32* %uv1, align 8, !dbg !4462
  %idxprom = zext i32 %20 to i64, !dbg !4459
  %arrayidx = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %18, i64 %idxprom, !dbg !4459
  %21 = load %struct.UvElement*, %struct.UvElement** %arrayidx, align 8, !dbg !4459
  store %struct.UvElement* %21, %struct.UvElement** %element1, align 8, !dbg !4458
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element2, metadata !4463, metadata !DIExpression()), !dbg !4464
  %22 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4465
  %uvs6 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %22, i32 0, i32 9, !dbg !4466
  %23 = load %struct.UvElement**, %struct.UvElement*** %uvs6, align 8, !dbg !4466
  %24 = load %struct.UvEdge*, %struct.UvEdge** %edge, align 8, !dbg !4467
  %uv2 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %24, i32 0, i32 1, !dbg !4468
  %25 = load i32, i32* %uv2, align 4, !dbg !4468
  %idxprom7 = zext i32 %25 to i64, !dbg !4465
  %arrayidx8 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %23, i64 %idxprom7, !dbg !4465
  %26 = load %struct.UvElement*, %struct.UvElement** %arrayidx8, align 8, !dbg !4465
  store %struct.UvElement* %26, %struct.UvElement** %element2, align 8, !dbg !4464
  call void @llvm.dbg.declare(metadata %struct.UvElement** %iter1, metadata !4469, metadata !DIExpression()), !dbg !4470
  %27 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map, align 8, !dbg !4471
  %vert = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %27, i32 0, i32 0, !dbg !4472
  %28 = load %struct.UvElement**, %struct.UvElement*** %vert, align 8, !dbg !4472
  %29 = load %struct.UvElement*, %struct.UvElement** %element1, align 8, !dbg !4473
  %l = getelementptr inbounds %struct.UvElement, %struct.UvElement* %29, i32 0, i32 1, !dbg !4473
  %30 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !4473
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %30, i32 0, i32 1, !dbg !4473
  %31 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !4473
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %31, i32 0, i32 0, !dbg !4473
  %call = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !4473
  %idxprom9 = sext i32 %call to i64, !dbg !4471
  %arrayidx10 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %28, i64 %idxprom9, !dbg !4471
  %32 = load %struct.UvElement*, %struct.UvElement** %arrayidx10, align 8, !dbg !4471
  store %struct.UvElement* %32, %struct.UvElement** %iter1, align 8, !dbg !4470
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %last_set, metadata !4474, metadata !DIExpression()), !dbg !4475
  %33 = load %struct.UvEdge*, %struct.UvEdge** %edge, align 8, !dbg !4476
  store %struct.UvEdge* %33, %struct.UvEdge** %last_set, align 8, !dbg !4475
  call void @llvm.dbg.declare(metadata i32* %elemindex2, metadata !4477, metadata !DIExpression()), !dbg !4478
  %34 = load %struct.UvElement*, %struct.UvElement** %element2, align 8, !dbg !4479
  %l11 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %34, i32 0, i32 1, !dbg !4479
  %35 = load %struct.BMLoop*, %struct.BMLoop** %l11, align 8, !dbg !4479
  %v12 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %35, i32 0, i32 1, !dbg !4479
  %36 = load %struct.BMVert*, %struct.BMVert** %v12, align 8, !dbg !4479
  %head13 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %36, i32 0, i32 0, !dbg !4479
  %call14 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head13), !dbg !4479
  store i32 %call14, i32* %elemindex2, align 4, !dbg !4478
  %37 = load %struct.UvEdge*, %struct.UvEdge** %edge, align 8, !dbg !4480
  %38 = load %struct.UvEdge*, %struct.UvEdge** %edge, align 8, !dbg !4481
  %first15 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %38, i32 0, i32 5, !dbg !4482
  store %struct.UvEdge* %37, %struct.UvEdge** %first15, align 8, !dbg !4483
  br label %for.cond16, !dbg !4484

for.cond16:                                       ; preds = %for.inc73, %if.then5
  %39 = load %struct.UvElement*, %struct.UvElement** %iter1, align 8, !dbg !4485
  %tobool17 = icmp ne %struct.UvElement* %39, null, !dbg !4488
  br i1 %tobool17, label %for.body18, label %for.end75, !dbg !4488

for.body18:                                       ; preds = %for.cond16
  call void @llvm.dbg.declare(metadata %struct.UvElement** %iter2, metadata !4489, metadata !DIExpression()), !dbg !4491
  store %struct.UvElement* null, %struct.UvElement** %iter2, align 8, !dbg !4491
  %40 = load %struct.UvElement*, %struct.UvElement** %iter1, align 8, !dbg !4492
  %l19 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %40, i32 0, i32 1, !dbg !4492
  %41 = load %struct.BMLoop*, %struct.BMLoop** %l19, align 8, !dbg !4492
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %41, i32 0, i32 6, !dbg !4492
  %42 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !4492
  %v20 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %42, i32 0, i32 1, !dbg !4492
  %43 = load %struct.BMVert*, %struct.BMVert** %v20, align 8, !dbg !4492
  %head21 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %43, i32 0, i32 0, !dbg !4492
  %call22 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head21), !dbg !4492
  %44 = load i32, i32* %elemindex2, align 4, !dbg !4494
  %cmp23 = icmp eq i32 %call22, %44, !dbg !4495
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !4496

if.then25:                                        ; preds = %for.body18
  %45 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map, align 8, !dbg !4497
  %46 = load %struct.UvElement*, %struct.UvElement** %iter1, align 8, !dbg !4498
  %l26 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %46, i32 0, i32 1, !dbg !4499
  %47 = load %struct.BMLoop*, %struct.BMLoop** %l26, align 8, !dbg !4499
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %47, i32 0, i32 3, !dbg !4500
  %48 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !4500
  %49 = load %struct.UvElement*, %struct.UvElement** %iter1, align 8, !dbg !4501
  %l27 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %49, i32 0, i32 1, !dbg !4502
  %50 = load %struct.BMLoop*, %struct.BMLoop** %l27, align 8, !dbg !4502
  %next28 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %50, i32 0, i32 6, !dbg !4503
  %51 = load %struct.BMLoop*, %struct.BMLoop** %next28, align 8, !dbg !4503
  %call29 = call %struct.UvElement* @BM_uv_element_get(%struct.UvElementMap* %45, %struct.BMFace* %48, %struct.BMLoop* %51), !dbg !4504
  store %struct.UvElement* %call29, %struct.UvElement** %iter2, align 8, !dbg !4505
  br label %if.end43, !dbg !4506

if.else:                                          ; preds = %for.body18
  %52 = load %struct.UvElement*, %struct.UvElement** %iter1, align 8, !dbg !4507
  %l30 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %52, i32 0, i32 1, !dbg !4507
  %53 = load %struct.BMLoop*, %struct.BMLoop** %l30, align 8, !dbg !4507
  %prev = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %53, i32 0, i32 7, !dbg !4507
  %54 = load %struct.BMLoop*, %struct.BMLoop** %prev, align 8, !dbg !4507
  %v31 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %54, i32 0, i32 1, !dbg !4507
  %55 = load %struct.BMVert*, %struct.BMVert** %v31, align 8, !dbg !4507
  %head32 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %55, i32 0, i32 0, !dbg !4507
  %call33 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head32), !dbg !4507
  %56 = load i32, i32* %elemindex2, align 4, !dbg !4509
  %cmp34 = icmp eq i32 %call33, %56, !dbg !4510
  br i1 %cmp34, label %if.then36, label %if.end42, !dbg !4511

if.then36:                                        ; preds = %if.else
  %57 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map, align 8, !dbg !4512
  %58 = load %struct.UvElement*, %struct.UvElement** %iter1, align 8, !dbg !4513
  %l37 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %58, i32 0, i32 1, !dbg !4514
  %59 = load %struct.BMLoop*, %struct.BMLoop** %l37, align 8, !dbg !4514
  %f38 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %59, i32 0, i32 3, !dbg !4515
  %60 = load %struct.BMFace*, %struct.BMFace** %f38, align 8, !dbg !4515
  %61 = load %struct.UvElement*, %struct.UvElement** %iter1, align 8, !dbg !4516
  %l39 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %61, i32 0, i32 1, !dbg !4517
  %62 = load %struct.BMLoop*, %struct.BMLoop** %l39, align 8, !dbg !4517
  %prev40 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %62, i32 0, i32 7, !dbg !4518
  %63 = load %struct.BMLoop*, %struct.BMLoop** %prev40, align 8, !dbg !4518
  %call41 = call %struct.UvElement* @BM_uv_element_get(%struct.UvElementMap* %57, %struct.BMFace* %60, %struct.BMLoop* %63), !dbg !4519
  store %struct.UvElement* %call41, %struct.UvElement** %iter2, align 8, !dbg !4520
  br label %if.end42, !dbg !4521

if.end42:                                         ; preds = %if.then36, %if.else
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then25
  %64 = load %struct.UvElement*, %struct.UvElement** %iter2, align 8, !dbg !4522
  %tobool44 = icmp ne %struct.UvElement* %64, null, !dbg !4522
  br i1 %tobool44, label %if.then45, label %if.end72, !dbg !4524

if.then45:                                        ; preds = %if.end43
  call void @llvm.dbg.declare(metadata i32* %index1, metadata !4525, metadata !DIExpression()), !dbg !4527
  %65 = load i32*, i32** %map, align 8, !dbg !4528
  %66 = load %struct.UvElement*, %struct.UvElement** %iter1, align 8, !dbg !4529
  %67 = load %struct.UvElement*, %struct.UvElement** %first_element, align 8, !dbg !4530
  %sub.ptr.lhs.cast = ptrtoint %struct.UvElement* %66 to i64, !dbg !4531
  %sub.ptr.rhs.cast = ptrtoint %struct.UvElement* %67 to i64, !dbg !4531
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4531
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24, !dbg !4531
  %arrayidx46 = getelementptr inbounds i32, i32* %65, i64 %sub.ptr.div, !dbg !4528
  %68 = load i32, i32* %arrayidx46, align 4, !dbg !4528
  store i32 %68, i32* %index1, align 4, !dbg !4527
  call void @llvm.dbg.declare(metadata i32* %index2, metadata !4532, metadata !DIExpression()), !dbg !4533
  %69 = load i32*, i32** %map, align 8, !dbg !4534
  %70 = load %struct.UvElement*, %struct.UvElement** %iter2, align 8, !dbg !4535
  %71 = load %struct.UvElement*, %struct.UvElement** %first_element, align 8, !dbg !4536
  %sub.ptr.lhs.cast47 = ptrtoint %struct.UvElement* %70 to i64, !dbg !4537
  %sub.ptr.rhs.cast48 = ptrtoint %struct.UvElement* %71 to i64, !dbg !4537
  %sub.ptr.sub49 = sub i64 %sub.ptr.lhs.cast47, %sub.ptr.rhs.cast48, !dbg !4537
  %sub.ptr.div50 = sdiv exact i64 %sub.ptr.sub49, 24, !dbg !4537
  %arrayidx51 = getelementptr inbounds i32, i32* %69, i64 %sub.ptr.div50, !dbg !4534
  %72 = load i32, i32* %arrayidx51, align 4, !dbg !4534
  store i32 %72, i32* %index2, align 4, !dbg !4533
  call void @llvm.dbg.declare(metadata %struct.UvEdge* %edgetmp, metadata !4538, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge2, metadata !4540, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %eiter, metadata !4542, metadata !DIExpression()), !dbg !4543
  call void @llvm.dbg.declare(metadata i8* %valid, metadata !4544, metadata !DIExpression()), !dbg !4545
  store i8 1, i8* %valid, align 1, !dbg !4545
  %73 = load i32, i32* %index1, align 4, !dbg !4546
  %74 = load i32, i32* %index2, align 4, !dbg !4548
  %cmp52 = icmp sgt i32 %73, %74, !dbg !4549
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !4550

if.then54:                                        ; preds = %if.then45
  call void @llvm.dbg.declare(metadata i32* %sw_ap, metadata !4551, metadata !DIExpression()), !dbg !4554
  %75 = load i32, i32* %index1, align 4, !dbg !4554
  store i32 %75, i32* %sw_ap, align 4, !dbg !4554
  %76 = load i32, i32* %index2, align 4, !dbg !4554
  store i32 %76, i32* %index1, align 4, !dbg !4554
  %77 = load i32, i32* %sw_ap, align 4, !dbg !4554
  store i32 %77, i32* %index2, align 4, !dbg !4554
  br label %if.end55, !dbg !4555

if.end55:                                         ; preds = %if.then54, %if.then45
  %78 = load i32, i32* %index1, align 4, !dbg !4556
  %uv156 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %edgetmp, i32 0, i32 0, !dbg !4557
  store i32 %78, i32* %uv156, align 8, !dbg !4558
  %79 = load i32, i32* %index2, align 4, !dbg !4559
  %uv257 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %edgetmp, i32 0, i32 1, !dbg !4560
  store i32 %79, i32* %uv257, align 4, !dbg !4561
  %80 = load %struct.GHash*, %struct.GHash** %edge_hash.addr, align 8, !dbg !4562
  %81 = bitcast %struct.UvEdge* %edgetmp to i8*, !dbg !4563
  %call58 = call i8* @BLI_ghash_lookup(%struct.GHash* %80, i8* %81), !dbg !4564
  %82 = bitcast i8* %call58 to %struct.UvEdge*, !dbg !4564
  store %struct.UvEdge* %82, %struct.UvEdge** %edge2, align 8, !dbg !4565
  %83 = load %struct.UvEdge*, %struct.UvEdge** %edge, align 8, !dbg !4566
  store %struct.UvEdge* %83, %struct.UvEdge** %eiter, align 8, !dbg !4568
  br label %for.cond59, !dbg !4569

for.cond59:                                       ; preds = %for.inc, %if.end55
  %84 = load %struct.UvEdge*, %struct.UvEdge** %eiter, align 8, !dbg !4570
  %tobool60 = icmp ne %struct.UvEdge* %84, null, !dbg !4572
  br i1 %tobool60, label %for.body61, label %for.end, !dbg !4572

for.body61:                                       ; preds = %for.cond59
  %85 = load %struct.UvEdge*, %struct.UvEdge** %edge2, align 8, !dbg !4573
  %86 = load %struct.UvEdge*, %struct.UvEdge** %eiter, align 8, !dbg !4576
  %cmp62 = icmp eq %struct.UvEdge* %85, %86, !dbg !4577
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !4578

if.then64:                                        ; preds = %for.body61
  store i8 0, i8* %valid, align 1, !dbg !4579
  br label %for.end, !dbg !4581

if.end65:                                         ; preds = %for.body61
  br label %for.inc, !dbg !4582

for.inc:                                          ; preds = %if.end65
  %87 = load %struct.UvEdge*, %struct.UvEdge** %eiter, align 8, !dbg !4583
  %next66 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %87, i32 0, i32 4, !dbg !4584
  %88 = load %struct.UvEdge*, %struct.UvEdge** %next66, align 8, !dbg !4584
  store %struct.UvEdge* %88, %struct.UvEdge** %eiter, align 8, !dbg !4585
  br label %for.cond59, !dbg !4586, !llvm.loop !4587

for.end:                                          ; preds = %if.then64, %for.cond59
  %89 = load i8, i8* %valid, align 1, !dbg !4589
  %tobool67 = icmp ne i8 %89, 0, !dbg !4589
  br i1 %tobool67, label %if.then68, label %if.end71, !dbg !4591

if.then68:                                        ; preds = %for.end
  %90 = load %struct.UvEdge*, %struct.UvEdge** %edge2, align 8, !dbg !4592
  %91 = load %struct.UvEdge*, %struct.UvEdge** %last_set, align 8, !dbg !4594
  %next69 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %91, i32 0, i32 4, !dbg !4595
  store %struct.UvEdge* %90, %struct.UvEdge** %next69, align 8, !dbg !4596
  %92 = load %struct.UvEdge*, %struct.UvEdge** %edge2, align 8, !dbg !4597
  store %struct.UvEdge* %92, %struct.UvEdge** %last_set, align 8, !dbg !4598
  %93 = load %struct.UvEdge*, %struct.UvEdge** %edge, align 8, !dbg !4599
  %94 = load %struct.UvEdge*, %struct.UvEdge** %edge2, align 8, !dbg !4600
  %first70 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %94, i32 0, i32 5, !dbg !4601
  store %struct.UvEdge* %93, %struct.UvEdge** %first70, align 8, !dbg !4602
  br label %if.end71, !dbg !4603

if.end71:                                         ; preds = %if.then68, %for.end
  br label %if.end72, !dbg !4604

if.end72:                                         ; preds = %if.end71, %if.end43
  br label %for.inc73, !dbg !4605

for.inc73:                                        ; preds = %if.end72
  %95 = load %struct.UvElement*, %struct.UvElement** %iter1, align 8, !dbg !4606
  %next74 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %95, i32 0, i32 0, !dbg !4607
  %96 = load %struct.UvElement*, %struct.UvElement** %next74, align 8, !dbg !4607
  store %struct.UvElement* %96, %struct.UvElement** %iter1, align 8, !dbg !4608
  br label %for.cond16, !dbg !4609, !llvm.loop !4610

for.end75:                                        ; preds = %for.cond16
  br label %if.end78, !dbg !4612

if.else76:                                        ; preds = %if.end
  %97 = load %struct.UvEdge*, %struct.UvEdge** %edge, align 8, !dbg !4613
  %98 = load %struct.UvEdge*, %struct.UvEdge** %edge, align 8, !dbg !4615
  %first77 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %98, i32 0, i32 5, !dbg !4616
  store %struct.UvEdge* %97, %struct.UvEdge** %first77, align 8, !dbg !4617
  br label %if.end78

if.end78:                                         ; preds = %if.else76, %for.end75
  br label %for.inc79, !dbg !4618

for.inc79:                                        ; preds = %if.end78, %if.then
  %99 = load i32, i32* %i, align 4, !dbg !4619
  %inc = add nsw i32 %99, 1, !dbg !4619
  store i32 %inc, i32* %i, align 4, !dbg !4619
  br label %for.cond, !dbg !4620, !llvm.loop !4621

for.end80:                                        ; preds = %for.cond
  ret void, !dbg !4623
}

; Function Attrs: noinline nounwind uwtable
define internal void @stitch_calculate_edge_normal(%struct.BMEditMesh* %em, %struct.UvEdge* %edge, float* %normal, float %aspect) #0 !dbg !4624 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %edge.addr = alloca %struct.UvEdge*, align 8
  %normal.addr = alloca float*, align 8
  %aspect.addr = alloca float, align 4
  %l1 = alloca %struct.BMLoop*, align 8
  %luv1 = alloca %struct.MLoopUV*, align 8
  %luv2 = alloca %struct.MLoopUV*, align 8
  %tangent = alloca [2 x float], align 4
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !4627, metadata !DIExpression()), !dbg !4628
  store %struct.UvEdge* %edge, %struct.UvEdge** %edge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge.addr, metadata !4629, metadata !DIExpression()), !dbg !4630
  store float* %normal, float** %normal.addr, align 8
  call void @llvm.dbg.declare(metadata float** %normal.addr, metadata !4631, metadata !DIExpression()), !dbg !4632
  store float %aspect, float* %aspect.addr, align 4
  call void @llvm.dbg.declare(metadata float* %aspect.addr, metadata !4633, metadata !DIExpression()), !dbg !4634
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l1, metadata !4635, metadata !DIExpression()), !dbg !4636
  %0 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !4637
  %element = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %0, i32 0, i32 3, !dbg !4638
  %1 = load %struct.UvElement*, %struct.UvElement** %element, align 8, !dbg !4638
  %l = getelementptr inbounds %struct.UvElement, %struct.UvElement* %1, i32 0, i32 1, !dbg !4639
  %2 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !4639
  store %struct.BMLoop* %2, %struct.BMLoop** %l1, align 8, !dbg !4636
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv1, metadata !4640, metadata !DIExpression()), !dbg !4647
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv2, metadata !4648, metadata !DIExpression()), !dbg !4649
  call void @llvm.dbg.declare(metadata [2 x float]* %tangent, metadata !4650, metadata !DIExpression()), !dbg !4651
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4652
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !4653
  %4 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4653
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 26, !dbg !4654
  %5 = load %struct.BMLoop*, %struct.BMLoop** %l1, align 8, !dbg !4655
  %head = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %5, i32 0, i32 0, !dbg !4656
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !4657
  %6 = load i8*, i8** %data, align 8, !dbg !4657
  %call = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata, i8* %6, i32 16), !dbg !4658
  %7 = bitcast i8* %call to %struct.MLoopUV*, !dbg !4658
  store %struct.MLoopUV* %7, %struct.MLoopUV** %luv1, align 8, !dbg !4659
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4660
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %8, i32 0, i32 0, !dbg !4661
  %9 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !4661
  %ldata2 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %9, i32 0, i32 26, !dbg !4662
  %10 = load %struct.BMLoop*, %struct.BMLoop** %l1, align 8, !dbg !4663
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %10, i32 0, i32 6, !dbg !4664
  %11 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !4664
  %head3 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %11, i32 0, i32 0, !dbg !4665
  %data4 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head3, i32 0, i32 0, !dbg !4666
  %12 = load i8*, i8** %data4, align 8, !dbg !4666
  %call5 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata2, i8* %12, i32 16), !dbg !4667
  %13 = bitcast i8* %call5 to %struct.MLoopUV*, !dbg !4667
  store %struct.MLoopUV* %13, %struct.MLoopUV** %luv2, align 8, !dbg !4668
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %tangent, i64 0, i64 0, !dbg !4669
  %14 = load %struct.MLoopUV*, %struct.MLoopUV** %luv2, align 8, !dbg !4670
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %14, i32 0, i32 0, !dbg !4671
  %arraydecay6 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !4670
  %15 = load %struct.MLoopUV*, %struct.MLoopUV** %luv1, align 8, !dbg !4672
  %uv7 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %15, i32 0, i32 0, !dbg !4673
  %arraydecay8 = getelementptr inbounds [2 x float], [2 x float]* %uv7, i64 0, i64 0, !dbg !4672
  call void @sub_v2_v2v2(float* %arraydecay, float* %arraydecay6, float* %arraydecay8), !dbg !4674
  %16 = load float, float* %aspect.addr, align 4, !dbg !4675
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %tangent, i64 0, i64 1, !dbg !4676
  %17 = load float, float* %arrayidx, align 4, !dbg !4677
  %div = fdiv float %17, %16, !dbg !4677
  store float %div, float* %arrayidx, align 4, !dbg !4677
  %arrayidx9 = getelementptr inbounds [2 x float], [2 x float]* %tangent, i64 0, i64 1, !dbg !4678
  %18 = load float, float* %arrayidx9, align 4, !dbg !4678
  %19 = load float*, float** %normal.addr, align 8, !dbg !4679
  %arrayidx10 = getelementptr inbounds float, float* %19, i64 0, !dbg !4679
  store float %18, float* %arrayidx10, align 4, !dbg !4680
  %arrayidx11 = getelementptr inbounds [2 x float], [2 x float]* %tangent, i64 0, i64 0, !dbg !4681
  %20 = load float, float* %arrayidx11, align 4, !dbg !4681
  %fneg = fneg float %20, !dbg !4682
  %21 = load float*, float** %normal.addr, align 8, !dbg !4683
  %arrayidx12 = getelementptr inbounds float, float* %21, i64 1, !dbg !4683
  store float %fneg, float* %arrayidx12, align 4, !dbg !4684
  %22 = load float*, float** %normal.addr, align 8, !dbg !4685
  %call13 = call float @normalize_v2(float* %22), !dbg !4686
  ret void, !dbg !4687
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v2_v2(float* %r, float* %a) #0 !dbg !4688 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4694, metadata !DIExpression()), !dbg !4695
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4696, metadata !DIExpression()), !dbg !4697
  %0 = load float*, float** %a.addr, align 8, !dbg !4698
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4698
  %1 = load float, float* %arrayidx, align 4, !dbg !4698
  %2 = load float*, float** %r.addr, align 8, !dbg !4699
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4699
  %3 = load float, float* %arrayidx1, align 4, !dbg !4700
  %add = fadd float %3, %1, !dbg !4700
  store float %add, float* %arrayidx1, align 4, !dbg !4700
  %4 = load float*, float** %a.addr, align 8, !dbg !4701
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !4701
  %5 = load float, float* %arrayidx2, align 4, !dbg !4701
  %6 = load float*, float** %r.addr, align 8, !dbg !4702
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !4702
  %7 = load float, float* %arrayidx3, align 4, !dbg !4703
  %add4 = fadd float %7, %5, !dbg !4703
  store float %add4, float* %arrayidx3, align 4, !dbg !4703
  ret void, !dbg !4704
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v2(float* %n) #0 !dbg !4705 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !4708, metadata !DIExpression()), !dbg !4709
  %0 = load float*, float** %n.addr, align 8, !dbg !4710
  %1 = load float*, float** %n.addr, align 8, !dbg !4711
  %call = call float @normalize_v2_v2(float* %0, float* %1), !dbg !4712
  ret float %call, !dbg !4713
}

declare dso_local void @BM_mesh_elem_table_ensure(%struct.BMesh*, i8 zeroext) #2

declare dso_local void @RNA_collection_begin(%struct.PointerRNA*, i8*, %struct.CollectionPropertyIterator*) #2

declare dso_local %struct.BMFace* @BM_face_at_index(%struct.BMesh*, i32) #2

declare dso_local i8* @BM_iter_at_index(%struct.BMesh*, i8 zeroext, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @stitch_select_uv(%struct.UvElement* %element, %struct.StitchState* %state, i32 %always_select) #0 !dbg !4714 {
entry:
  %element.addr = alloca %struct.UvElement*, align 8
  %state.addr = alloca %struct.StitchState*, align 8
  %always_select.addr = alloca i32, align 4
  %l = alloca %struct.BMLoop*, align 8
  %element_iter = alloca %struct.UvElement*, align 8
  %selection_stack = alloca %struct.UvElement**, align 8
  %i = alloca i32, align 4
  store %struct.UvElement* %element, %struct.UvElement** %element.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element.addr, metadata !4717, metadata !DIExpression()), !dbg !4718
  store %struct.StitchState* %state, %struct.StitchState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state.addr, metadata !4719, metadata !DIExpression()), !dbg !4720
  store i32 %always_select, i32* %always_select.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %always_select.addr, metadata !4721, metadata !DIExpression()), !dbg !4722
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !4723, metadata !DIExpression()), !dbg !4724
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element_iter, metadata !4725, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.declare(metadata %struct.UvElement*** %selection_stack, metadata !4727, metadata !DIExpression()), !dbg !4728
  %0 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4729
  %selection_stack1 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %0, i32 0, i32 16, !dbg !4730
  %1 = load i8**, i8*** %selection_stack1, align 8, !dbg !4730
  %2 = bitcast i8** %1 to %struct.UvElement**, !dbg !4731
  store %struct.UvElement** %2, %struct.UvElement*** %selection_stack, align 8, !dbg !4728
  %3 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !4732
  %l2 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %3, i32 0, i32 1, !dbg !4733
  %4 = load %struct.BMLoop*, %struct.BMLoop** %l2, align 8, !dbg !4733
  store %struct.BMLoop* %4, %struct.BMLoop** %l, align 8, !dbg !4734
  %5 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4735
  %element_map = getelementptr inbounds %struct.StitchState, %struct.StitchState* %5, i32 0, i32 7, !dbg !4736
  %6 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map, align 8, !dbg !4736
  %vert = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %6, i32 0, i32 0, !dbg !4737
  %7 = load %struct.UvElement**, %struct.UvElement*** %vert, align 8, !dbg !4737
  %8 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !4738
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %8, i32 0, i32 1, !dbg !4738
  %9 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !4738
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %9, i32 0, i32 0, !dbg !4738
  %call = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !4738
  %idxprom = sext i32 %call to i64, !dbg !4735
  %arrayidx = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %7, i64 %idxprom, !dbg !4735
  %10 = load %struct.UvElement*, %struct.UvElement** %arrayidx, align 8, !dbg !4735
  store %struct.UvElement* %10, %struct.UvElement** %element_iter, align 8, !dbg !4739
  br label %for.cond, !dbg !4740

for.cond:                                         ; preds = %for.inc36, %entry
  %11 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !4741
  %tobool = icmp ne %struct.UvElement* %11, null, !dbg !4744
  br i1 %tobool, label %for.body, label %for.end37, !dbg !4744

for.body:                                         ; preds = %for.cond
  %12 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !4745
  %separate = getelementptr inbounds %struct.UvElement, %struct.UvElement* %12, i32 0, i32 3, !dbg !4748
  %13 = load i8, i8* %separate, align 2, !dbg !4748
  %tobool3 = icmp ne i8 %13, 0, !dbg !4745
  br i1 %tobool3, label %if.then, label %if.end35, !dbg !4749

if.then:                                          ; preds = %for.body
  %14 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !4750
  %flag = getelementptr inbounds %struct.UvElement, %struct.UvElement* %14, i32 0, i32 4, !dbg !4753
  %15 = load i8, i8* %flag, align 1, !dbg !4753
  %conv = zext i8 %15 to i32, !dbg !4750
  %and = and i32 %conv, 1, !dbg !4754
  %tobool4 = icmp ne i32 %and, 0, !dbg !4754
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !4755

if.then5:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4756, metadata !DIExpression()), !dbg !4758
  %16 = load i32, i32* %always_select.addr, align 4, !dbg !4759
  %tobool6 = icmp ne i32 %16, 0, !dbg !4759
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !4761

if.then7:                                         ; preds = %if.then5
  br label %for.inc36, !dbg !4762

if.end:                                           ; preds = %if.then5
  %17 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !4763
  %flag8 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %17, i32 0, i32 4, !dbg !4764
  %18 = load i8, i8* %flag8, align 1, !dbg !4765
  %conv9 = zext i8 %18 to i32, !dbg !4765
  %and10 = and i32 %conv9, -2, !dbg !4765
  %conv11 = trunc i32 %and10 to i8, !dbg !4765
  store i8 %conv11, i8* %flag8, align 1, !dbg !4765
  store i32 0, i32* %i, align 4, !dbg !4766
  br label %for.cond12, !dbg !4768

for.cond12:                                       ; preds = %for.inc, %if.end
  %19 = load i32, i32* %i, align 4, !dbg !4769
  %20 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4771
  %selection_size = getelementptr inbounds %struct.StitchState, %struct.StitchState* %20, i32 0, i32 17, !dbg !4772
  %21 = load i32, i32* %selection_size, align 8, !dbg !4772
  %cmp = icmp slt i32 %19, %21, !dbg !4773
  br i1 %cmp, label %for.body14, label %for.end, !dbg !4774

for.body14:                                       ; preds = %for.cond12
  %22 = load %struct.UvElement**, %struct.UvElement*** %selection_stack, align 8, !dbg !4775
  %23 = load i32, i32* %i, align 4, !dbg !4778
  %idxprom15 = sext i32 %23 to i64, !dbg !4775
  %arrayidx16 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %22, i64 %idxprom15, !dbg !4775
  %24 = load %struct.UvElement*, %struct.UvElement** %arrayidx16, align 8, !dbg !4775
  %25 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !4779
  %cmp17 = icmp eq %struct.UvElement* %24, %25, !dbg !4780
  br i1 %cmp17, label %if.then19, label %if.end26, !dbg !4781

if.then19:                                        ; preds = %for.body14
  %26 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4782
  %selection_size20 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %26, i32 0, i32 17, !dbg !4784
  %27 = load i32, i32* %selection_size20, align 8, !dbg !4785
  %dec = add nsw i32 %27, -1, !dbg !4785
  store i32 %dec, i32* %selection_size20, align 8, !dbg !4785
  %28 = load %struct.UvElement**, %struct.UvElement*** %selection_stack, align 8, !dbg !4786
  %29 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4787
  %selection_size21 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %29, i32 0, i32 17, !dbg !4788
  %30 = load i32, i32* %selection_size21, align 8, !dbg !4788
  %idxprom22 = sext i32 %30 to i64, !dbg !4786
  %arrayidx23 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %28, i64 %idxprom22, !dbg !4786
  %31 = load %struct.UvElement*, %struct.UvElement** %arrayidx23, align 8, !dbg !4786
  %32 = load %struct.UvElement**, %struct.UvElement*** %selection_stack, align 8, !dbg !4789
  %33 = load i32, i32* %i, align 4, !dbg !4790
  %idxprom24 = sext i32 %33 to i64, !dbg !4789
  %arrayidx25 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %32, i64 %idxprom24, !dbg !4789
  store %struct.UvElement* %31, %struct.UvElement** %arrayidx25, align 8, !dbg !4791
  br label %for.end, !dbg !4792

if.end26:                                         ; preds = %for.body14
  br label %for.inc, !dbg !4793

for.inc:                                          ; preds = %if.end26
  %34 = load i32, i32* %i, align 4, !dbg !4794
  %inc = add nsw i32 %34, 1, !dbg !4794
  store i32 %inc, i32* %i, align 4, !dbg !4794
  br label %for.cond12, !dbg !4795, !llvm.loop !4796

for.end:                                          ; preds = %if.then19, %for.cond12
  br label %if.end34, !dbg !4798

if.else:                                          ; preds = %if.then
  %35 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !4799
  %flag27 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %35, i32 0, i32 4, !dbg !4801
  %36 = load i8, i8* %flag27, align 1, !dbg !4802
  %conv28 = zext i8 %36 to i32, !dbg !4802
  %or = or i32 %conv28, 1, !dbg !4802
  %conv29 = trunc i32 %or to i8, !dbg !4802
  store i8 %conv29, i8* %flag27, align 1, !dbg !4802
  %37 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !4803
  %38 = load %struct.UvElement**, %struct.UvElement*** %selection_stack, align 8, !dbg !4804
  %39 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4805
  %selection_size30 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %39, i32 0, i32 17, !dbg !4806
  %40 = load i32, i32* %selection_size30, align 8, !dbg !4807
  %inc31 = add nsw i32 %40, 1, !dbg !4807
  store i32 %inc31, i32* %selection_size30, align 8, !dbg !4807
  %idxprom32 = sext i32 %40 to i64, !dbg !4804
  %arrayidx33 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %38, i64 %idxprom32, !dbg !4804
  store %struct.UvElement* %37, %struct.UvElement** %arrayidx33, align 8, !dbg !4808
  br label %if.end34

if.end34:                                         ; preds = %if.else, %for.end
  br label %if.end35, !dbg !4809

if.end35:                                         ; preds = %if.end34, %for.body
  br label %for.inc36, !dbg !4810

for.inc36:                                        ; preds = %if.end35, %if.then7
  %41 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !4811
  %next = getelementptr inbounds %struct.UvElement, %struct.UvElement* %41, i32 0, i32 0, !dbg !4812
  %42 = load %struct.UvElement*, %struct.UvElement** %next, align 8, !dbg !4812
  store %struct.UvElement* %42, %struct.UvElement** %element_iter, align 8, !dbg !4813
  br label %for.cond, !dbg !4814, !llvm.loop !4815

for.end37:                                        ; preds = %for.cond
  ret void, !dbg !4817
}

declare dso_local void @RNA_property_collection_next(%struct.CollectionPropertyIterator*) #2

declare dso_local void @RNA_property_collection_end(%struct.CollectionPropertyIterator*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @stitch_select_edge(%struct.UvEdge* %edge, %struct.StitchState* %state, i32 %always_select) #0 !dbg !4818 {
entry:
  %edge.addr = alloca %struct.UvEdge*, align 8
  %state.addr = alloca %struct.StitchState*, align 8
  %always_select.addr = alloca i32, align 4
  %eiter = alloca %struct.UvEdge*, align 8
  %selection_stack = alloca %struct.UvEdge**, align 8
  %i = alloca i32, align 4
  store %struct.UvEdge* %edge, %struct.UvEdge** %edge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge.addr, metadata !4821, metadata !DIExpression()), !dbg !4822
  store %struct.StitchState* %state, %struct.StitchState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state.addr, metadata !4823, metadata !DIExpression()), !dbg !4824
  store i32 %always_select, i32* %always_select.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %always_select.addr, metadata !4825, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %eiter, metadata !4827, metadata !DIExpression()), !dbg !4828
  call void @llvm.dbg.declare(metadata %struct.UvEdge*** %selection_stack, metadata !4829, metadata !DIExpression()), !dbg !4830
  %0 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4831
  %selection_stack1 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %0, i32 0, i32 16, !dbg !4832
  %1 = load i8**, i8*** %selection_stack1, align 8, !dbg !4832
  %2 = bitcast i8** %1 to %struct.UvEdge**, !dbg !4833
  store %struct.UvEdge** %2, %struct.UvEdge*** %selection_stack, align 8, !dbg !4830
  %3 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !4834
  %first = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %3, i32 0, i32 5, !dbg !4836
  %4 = load %struct.UvEdge*, %struct.UvEdge** %first, align 8, !dbg !4836
  store %struct.UvEdge* %4, %struct.UvEdge** %eiter, align 8, !dbg !4837
  br label %for.cond, !dbg !4838

for.cond:                                         ; preds = %for.inc30, %entry
  %5 = load %struct.UvEdge*, %struct.UvEdge** %eiter, align 8, !dbg !4839
  %tobool = icmp ne %struct.UvEdge* %5, null, !dbg !4841
  br i1 %tobool, label %for.body, label %for.end31, !dbg !4841

for.body:                                         ; preds = %for.cond
  %6 = load %struct.UvEdge*, %struct.UvEdge** %eiter, align 8, !dbg !4842
  %flag = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %6, i32 0, i32 2, !dbg !4845
  %7 = load i8, i8* %flag, align 8, !dbg !4845
  %conv = zext i8 %7 to i32, !dbg !4842
  %and = and i32 %conv, 1, !dbg !4846
  %tobool2 = icmp ne i32 %and, 0, !dbg !4846
  br i1 %tobool2, label %if.then, label %if.else, !dbg !4847

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4848, metadata !DIExpression()), !dbg !4850
  %8 = load i32, i32* %always_select.addr, align 4, !dbg !4851
  %tobool3 = icmp ne i32 %8, 0, !dbg !4851
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !4853

if.then4:                                         ; preds = %if.then
  br label %for.inc30, !dbg !4854

if.end:                                           ; preds = %if.then
  %9 = load %struct.UvEdge*, %struct.UvEdge** %eiter, align 8, !dbg !4855
  %flag5 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %9, i32 0, i32 2, !dbg !4856
  %10 = load i8, i8* %flag5, align 8, !dbg !4857
  %conv6 = zext i8 %10 to i32, !dbg !4857
  %and7 = and i32 %conv6, -2, !dbg !4857
  %conv8 = trunc i32 %and7 to i8, !dbg !4857
  store i8 %conv8, i8* %flag5, align 8, !dbg !4857
  store i32 0, i32* %i, align 4, !dbg !4858
  br label %for.cond9, !dbg !4860

for.cond9:                                        ; preds = %for.inc, %if.end
  %11 = load i32, i32* %i, align 4, !dbg !4861
  %12 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4863
  %selection_size = getelementptr inbounds %struct.StitchState, %struct.StitchState* %12, i32 0, i32 17, !dbg !4864
  %13 = load i32, i32* %selection_size, align 8, !dbg !4864
  %cmp = icmp slt i32 %11, %13, !dbg !4865
  br i1 %cmp, label %for.body11, label %for.end, !dbg !4866

for.body11:                                       ; preds = %for.cond9
  %14 = load %struct.UvEdge**, %struct.UvEdge*** %selection_stack, align 8, !dbg !4867
  %15 = load i32, i32* %i, align 4, !dbg !4870
  %idxprom = sext i32 %15 to i64, !dbg !4867
  %arrayidx = getelementptr inbounds %struct.UvEdge*, %struct.UvEdge** %14, i64 %idxprom, !dbg !4867
  %16 = load %struct.UvEdge*, %struct.UvEdge** %arrayidx, align 8, !dbg !4867
  %17 = load %struct.UvEdge*, %struct.UvEdge** %eiter, align 8, !dbg !4871
  %cmp12 = icmp eq %struct.UvEdge* %16, %17, !dbg !4872
  br i1 %cmp12, label %if.then14, label %if.end21, !dbg !4873

if.then14:                                        ; preds = %for.body11
  %18 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4874
  %selection_size15 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %18, i32 0, i32 17, !dbg !4876
  %19 = load i32, i32* %selection_size15, align 8, !dbg !4877
  %dec = add nsw i32 %19, -1, !dbg !4877
  store i32 %dec, i32* %selection_size15, align 8, !dbg !4877
  %20 = load %struct.UvEdge**, %struct.UvEdge*** %selection_stack, align 8, !dbg !4878
  %21 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4879
  %selection_size16 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %21, i32 0, i32 17, !dbg !4880
  %22 = load i32, i32* %selection_size16, align 8, !dbg !4880
  %idxprom17 = sext i32 %22 to i64, !dbg !4878
  %arrayidx18 = getelementptr inbounds %struct.UvEdge*, %struct.UvEdge** %20, i64 %idxprom17, !dbg !4878
  %23 = load %struct.UvEdge*, %struct.UvEdge** %arrayidx18, align 8, !dbg !4878
  %24 = load %struct.UvEdge**, %struct.UvEdge*** %selection_stack, align 8, !dbg !4881
  %25 = load i32, i32* %i, align 4, !dbg !4882
  %idxprom19 = sext i32 %25 to i64, !dbg !4881
  %arrayidx20 = getelementptr inbounds %struct.UvEdge*, %struct.UvEdge** %24, i64 %idxprom19, !dbg !4881
  store %struct.UvEdge* %23, %struct.UvEdge** %arrayidx20, align 8, !dbg !4883
  br label %for.end, !dbg !4884

if.end21:                                         ; preds = %for.body11
  br label %for.inc, !dbg !4885

for.inc:                                          ; preds = %if.end21
  %26 = load i32, i32* %i, align 4, !dbg !4886
  %inc = add nsw i32 %26, 1, !dbg !4886
  store i32 %inc, i32* %i, align 4, !dbg !4886
  br label %for.cond9, !dbg !4887, !llvm.loop !4888

for.end:                                          ; preds = %if.then14, %for.cond9
  br label %if.end29, !dbg !4890

if.else:                                          ; preds = %for.body
  %27 = load %struct.UvEdge*, %struct.UvEdge** %eiter, align 8, !dbg !4891
  %flag22 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %27, i32 0, i32 2, !dbg !4893
  %28 = load i8, i8* %flag22, align 8, !dbg !4894
  %conv23 = zext i8 %28 to i32, !dbg !4894
  %or = or i32 %conv23, 1, !dbg !4894
  %conv24 = trunc i32 %or to i8, !dbg !4894
  store i8 %conv24, i8* %flag22, align 8, !dbg !4894
  %29 = load %struct.UvEdge*, %struct.UvEdge** %eiter, align 8, !dbg !4895
  %30 = load %struct.UvEdge**, %struct.UvEdge*** %selection_stack, align 8, !dbg !4896
  %31 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4897
  %selection_size25 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %31, i32 0, i32 17, !dbg !4898
  %32 = load i32, i32* %selection_size25, align 8, !dbg !4899
  %inc26 = add nsw i32 %32, 1, !dbg !4899
  store i32 %inc26, i32* %selection_size25, align 8, !dbg !4899
  %idxprom27 = sext i32 %32 to i64, !dbg !4896
  %arrayidx28 = getelementptr inbounds %struct.UvEdge*, %struct.UvEdge** %30, i64 %idxprom27, !dbg !4896
  store %struct.UvEdge* %29, %struct.UvEdge** %arrayidx28, align 8, !dbg !4900
  br label %if.end29

if.end29:                                         ; preds = %if.else, %for.end
  br label %for.inc30, !dbg !4901

for.inc30:                                        ; preds = %if.end29, %if.then4
  %33 = load %struct.UvEdge*, %struct.UvEdge** %eiter, align 8, !dbg !4902
  %next = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %33, i32 0, i32 4, !dbg !4903
  %34 = load %struct.UvEdge*, %struct.UvEdge** %next, align 8, !dbg !4903
  store %struct.UvEdge* %34, %struct.UvEdge** %eiter, align 8, !dbg !4904
  br label %for.cond, !dbg !4905, !llvm.loop !4906

for.end31:                                        ; preds = %for.cond
  ret void, !dbg !4908
}

; Function Attrs: noinline nounwind uwtable
define internal void @stitch_switch_selection_mode(%struct.StitchState* %state) #0 !dbg !4909 {
entry:
  %state.addr = alloca %struct.StitchState*, align 8
  %old_selection_stack = alloca i8**, align 8
  %old_selection_size = alloca i32, align 4
  %i = alloca i32, align 4
  %edge = alloca %struct.UvEdge*, align 8
  %element1 = alloca %struct.UvElement*, align 8
  %element2 = alloca %struct.UvElement*, align 8
  %element = alloca %struct.UvElement*, align 8
  %i31 = alloca i32, align 4
  %edge40 = alloca %struct.UvEdge*, align 8
  %element143 = alloca %struct.UvElement*, align 8
  %element248 = alloca %struct.UvElement*, align 8
  store %struct.StitchState* %state, %struct.StitchState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state.addr, metadata !4910, metadata !DIExpression()), !dbg !4911
  call void @llvm.dbg.declare(metadata i8*** %old_selection_stack, metadata !4912, metadata !DIExpression()), !dbg !4913
  %0 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4914
  %selection_stack = getelementptr inbounds %struct.StitchState, %struct.StitchState* %0, i32 0, i32 16, !dbg !4915
  %1 = load i8**, i8*** %selection_stack, align 8, !dbg !4915
  store i8** %1, i8*** %old_selection_stack, align 8, !dbg !4913
  call void @llvm.dbg.declare(metadata i32* %old_selection_size, metadata !4916, metadata !DIExpression()), !dbg !4917
  %2 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4918
  %selection_size = getelementptr inbounds %struct.StitchState, %struct.StitchState* %2, i32 0, i32 17, !dbg !4919
  %3 = load i32, i32* %selection_size, align 8, !dbg !4919
  store i32 %3, i32* %old_selection_size, align 4, !dbg !4917
  %4 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4920
  %selection_size1 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %4, i32 0, i32 17, !dbg !4921
  store i32 0, i32* %selection_size1, align 8, !dbg !4922
  %5 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4923
  %mode = getelementptr inbounds %struct.StitchState, %struct.StitchState* %5, i32 0, i32 20, !dbg !4925
  %6 = load i8, i8* %mode, align 8, !dbg !4925
  %conv = zext i8 %6 to i32, !dbg !4923
  %cmp = icmp eq i32 %conv, 0, !dbg !4926
  br i1 %cmp, label %if.then, label %if.else, !dbg !4927

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4928, metadata !DIExpression()), !dbg !4930
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4931
  %8 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4932
  %total_separate_edges = getelementptr inbounds %struct.StitchState, %struct.StitchState* %8, i32 0, i32 14, !dbg !4933
  %9 = load i32, i32* %total_separate_edges, align 8, !dbg !4933
  %conv3 = sext i32 %9 to i64, !dbg !4932
  %mul = mul i64 %conv3, 8, !dbg !4934
  %call = call i8* %7(i64 %mul, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.44, i64 0, i64 0)), !dbg !4931
  %10 = bitcast i8* %call to i8**, !dbg !4931
  %11 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4935
  %selection_stack4 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %11, i32 0, i32 16, !dbg !4936
  store i8** %10, i8*** %selection_stack4, align 8, !dbg !4937
  store i32 0, i32* %i, align 4, !dbg !4938
  br label %for.cond, !dbg !4940

for.cond:                                         ; preds = %for.inc, %if.then
  %12 = load i32, i32* %i, align 4, !dbg !4941
  %13 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4943
  %total_separate_edges5 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %13, i32 0, i32 14, !dbg !4944
  %14 = load i32, i32* %total_separate_edges5, align 8, !dbg !4944
  %cmp6 = icmp slt i32 %12, %14, !dbg !4945
  br i1 %cmp6, label %for.body, label %for.end, !dbg !4946

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge, metadata !4947, metadata !DIExpression()), !dbg !4949
  %15 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4950
  %edges = getelementptr inbounds %struct.StitchState, %struct.StitchState* %15, i32 0, i32 12, !dbg !4951
  %16 = load %struct.UvEdge*, %struct.UvEdge** %edges, align 8, !dbg !4951
  %17 = load i32, i32* %i, align 4, !dbg !4952
  %idx.ext = sext i32 %17 to i64, !dbg !4953
  %add.ptr = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %16, i64 %idx.ext, !dbg !4953
  store %struct.UvEdge* %add.ptr, %struct.UvEdge** %edge, align 8, !dbg !4949
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element1, metadata !4954, metadata !DIExpression()), !dbg !4955
  %18 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4956
  %uvs = getelementptr inbounds %struct.StitchState, %struct.StitchState* %18, i32 0, i32 9, !dbg !4957
  %19 = load %struct.UvElement**, %struct.UvElement*** %uvs, align 8, !dbg !4957
  %20 = load %struct.UvEdge*, %struct.UvEdge** %edge, align 8, !dbg !4958
  %uv1 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %20, i32 0, i32 0, !dbg !4959
  %21 = load i32, i32* %uv1, align 8, !dbg !4959
  %idxprom = zext i32 %21 to i64, !dbg !4956
  %arrayidx = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %19, i64 %idxprom, !dbg !4956
  %22 = load %struct.UvElement*, %struct.UvElement** %arrayidx, align 8, !dbg !4956
  store %struct.UvElement* %22, %struct.UvElement** %element1, align 8, !dbg !4955
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element2, metadata !4960, metadata !DIExpression()), !dbg !4961
  %23 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4962
  %uvs8 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %23, i32 0, i32 9, !dbg !4963
  %24 = load %struct.UvElement**, %struct.UvElement*** %uvs8, align 8, !dbg !4963
  %25 = load %struct.UvEdge*, %struct.UvEdge** %edge, align 8, !dbg !4964
  %uv2 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %25, i32 0, i32 1, !dbg !4965
  %26 = load i32, i32* %uv2, align 4, !dbg !4965
  %idxprom9 = zext i32 %26 to i64, !dbg !4962
  %arrayidx10 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %24, i64 %idxprom9, !dbg !4962
  %27 = load %struct.UvElement*, %struct.UvElement** %arrayidx10, align 8, !dbg !4962
  store %struct.UvElement* %27, %struct.UvElement** %element2, align 8, !dbg !4961
  %28 = load %struct.UvElement*, %struct.UvElement** %element1, align 8, !dbg !4966
  %flag = getelementptr inbounds %struct.UvElement, %struct.UvElement* %28, i32 0, i32 4, !dbg !4968
  %29 = load i8, i8* %flag, align 1, !dbg !4968
  %conv11 = zext i8 %29 to i32, !dbg !4966
  %and = and i32 %conv11, 1, !dbg !4969
  %tobool = icmp ne i32 %and, 0, !dbg !4969
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4970

land.lhs.true:                                    ; preds = %for.body
  %30 = load %struct.UvElement*, %struct.UvElement** %element2, align 8, !dbg !4971
  %flag12 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %30, i32 0, i32 4, !dbg !4972
  %31 = load i8, i8* %flag12, align 1, !dbg !4972
  %conv13 = zext i8 %31 to i32, !dbg !4971
  %and14 = and i32 %conv13, 1, !dbg !4973
  %tobool15 = icmp ne i32 %and14, 0, !dbg !4973
  br i1 %tobool15, label %if.then16, label %if.end, !dbg !4974

if.then16:                                        ; preds = %land.lhs.true
  %32 = load %struct.UvEdge*, %struct.UvEdge** %edge, align 8, !dbg !4975
  %33 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !4976
  call void @stitch_select_edge(%struct.UvEdge* %32, %struct.StitchState* %33, i32 1), !dbg !4977
  br label %if.end, !dbg !4977

if.end:                                           ; preds = %if.then16, %land.lhs.true, %for.body
  br label %for.inc, !dbg !4978

for.inc:                                          ; preds = %if.end
  %34 = load i32, i32* %i, align 4, !dbg !4979
  %inc = add nsw i32 %34, 1, !dbg !4979
  store i32 %inc, i32* %i, align 4, !dbg !4979
  br label %for.cond, !dbg !4980, !llvm.loop !4981

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !4983
  br label %for.cond17, !dbg !4985

for.cond17:                                       ; preds = %for.inc27, %for.end
  %35 = load i32, i32* %i, align 4, !dbg !4986
  %36 = load i32, i32* %old_selection_size, align 4, !dbg !4988
  %cmp18 = icmp slt i32 %35, %36, !dbg !4989
  br i1 %cmp18, label %for.body20, label %for.end29, !dbg !4990

for.body20:                                       ; preds = %for.cond17
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element, metadata !4991, metadata !DIExpression()), !dbg !4993
  %37 = load i8**, i8*** %old_selection_stack, align 8, !dbg !4994
  %38 = load i32, i32* %i, align 4, !dbg !4995
  %idxprom21 = sext i32 %38 to i64, !dbg !4994
  %arrayidx22 = getelementptr inbounds i8*, i8** %37, i64 %idxprom21, !dbg !4994
  %39 = load i8*, i8** %arrayidx22, align 8, !dbg !4994
  %40 = bitcast i8* %39 to %struct.UvElement*, !dbg !4994
  store %struct.UvElement* %40, %struct.UvElement** %element, align 8, !dbg !4993
  %41 = load %struct.UvElement*, %struct.UvElement** %element, align 8, !dbg !4996
  %flag23 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %41, i32 0, i32 4, !dbg !4997
  %42 = load i8, i8* %flag23, align 1, !dbg !4998
  %conv24 = zext i8 %42 to i32, !dbg !4998
  %and25 = and i32 %conv24, -2, !dbg !4998
  %conv26 = trunc i32 %and25 to i8, !dbg !4998
  store i8 %conv26, i8* %flag23, align 1, !dbg !4998
  br label %for.inc27, !dbg !4999

for.inc27:                                        ; preds = %for.body20
  %43 = load i32, i32* %i, align 4, !dbg !5000
  %inc28 = add nsw i32 %43, 1, !dbg !5000
  store i32 %inc28, i32* %i, align 4, !dbg !5000
  br label %for.cond17, !dbg !5001, !llvm.loop !5002

for.end29:                                        ; preds = %for.cond17
  %44 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5004
  %mode30 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %44, i32 0, i32 20, !dbg !5005
  store i8 1, i8* %mode30, align 8, !dbg !5006
  br label %if.end61, !dbg !5007

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i31, metadata !5008, metadata !DIExpression()), !dbg !5010
  %45 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5011
  %46 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5012
  %total_separate_uvs = getelementptr inbounds %struct.StitchState, %struct.StitchState* %46, i32 0, i32 15, !dbg !5013
  %47 = load i32, i32* %total_separate_uvs, align 4, !dbg !5013
  %conv32 = sext i32 %47 to i64, !dbg !5012
  %mul33 = mul i64 %conv32, 8, !dbg !5014
  %call34 = call i8* %45(i64 %mul33, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.45, i64 0, i64 0)), !dbg !5011
  %48 = bitcast i8* %call34 to i8**, !dbg !5011
  %49 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5015
  %selection_stack35 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %49, i32 0, i32 16, !dbg !5016
  store i8** %48, i8*** %selection_stack35, align 8, !dbg !5017
  store i32 0, i32* %i31, align 4, !dbg !5018
  br label %for.cond36, !dbg !5020

for.cond36:                                       ; preds = %for.inc57, %if.else
  %50 = load i32, i32* %i31, align 4, !dbg !5021
  %51 = load i32, i32* %old_selection_size, align 4, !dbg !5023
  %cmp37 = icmp slt i32 %50, %51, !dbg !5024
  br i1 %cmp37, label %for.body39, label %for.end59, !dbg !5025

for.body39:                                       ; preds = %for.cond36
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge40, metadata !5026, metadata !DIExpression()), !dbg !5028
  %52 = load i8**, i8*** %old_selection_stack, align 8, !dbg !5029
  %53 = load i32, i32* %i31, align 4, !dbg !5030
  %idxprom41 = sext i32 %53 to i64, !dbg !5029
  %arrayidx42 = getelementptr inbounds i8*, i8** %52, i64 %idxprom41, !dbg !5029
  %54 = load i8*, i8** %arrayidx42, align 8, !dbg !5029
  %55 = bitcast i8* %54 to %struct.UvEdge*, !dbg !5029
  store %struct.UvEdge* %55, %struct.UvEdge** %edge40, align 8, !dbg !5028
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element143, metadata !5031, metadata !DIExpression()), !dbg !5032
  %56 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5033
  %uvs44 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %56, i32 0, i32 9, !dbg !5034
  %57 = load %struct.UvElement**, %struct.UvElement*** %uvs44, align 8, !dbg !5034
  %58 = load %struct.UvEdge*, %struct.UvEdge** %edge40, align 8, !dbg !5035
  %uv145 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %58, i32 0, i32 0, !dbg !5036
  %59 = load i32, i32* %uv145, align 8, !dbg !5036
  %idxprom46 = zext i32 %59 to i64, !dbg !5033
  %arrayidx47 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %57, i64 %idxprom46, !dbg !5033
  %60 = load %struct.UvElement*, %struct.UvElement** %arrayidx47, align 8, !dbg !5033
  store %struct.UvElement* %60, %struct.UvElement** %element143, align 8, !dbg !5032
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element248, metadata !5037, metadata !DIExpression()), !dbg !5038
  %61 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5039
  %uvs49 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %61, i32 0, i32 9, !dbg !5040
  %62 = load %struct.UvElement**, %struct.UvElement*** %uvs49, align 8, !dbg !5040
  %63 = load %struct.UvEdge*, %struct.UvEdge** %edge40, align 8, !dbg !5041
  %uv250 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %63, i32 0, i32 1, !dbg !5042
  %64 = load i32, i32* %uv250, align 4, !dbg !5042
  %idxprom51 = zext i32 %64 to i64, !dbg !5039
  %arrayidx52 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %62, i64 %idxprom51, !dbg !5039
  %65 = load %struct.UvElement*, %struct.UvElement** %arrayidx52, align 8, !dbg !5039
  store %struct.UvElement* %65, %struct.UvElement** %element248, align 8, !dbg !5038
  %66 = load %struct.UvElement*, %struct.UvElement** %element143, align 8, !dbg !5043
  %67 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5044
  call void @stitch_select_uv(%struct.UvElement* %66, %struct.StitchState* %67, i32 1), !dbg !5045
  %68 = load %struct.UvElement*, %struct.UvElement** %element248, align 8, !dbg !5046
  %69 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5047
  call void @stitch_select_uv(%struct.UvElement* %68, %struct.StitchState* %69, i32 1), !dbg !5048
  %70 = load %struct.UvEdge*, %struct.UvEdge** %edge40, align 8, !dbg !5049
  %flag53 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %70, i32 0, i32 2, !dbg !5050
  %71 = load i8, i8* %flag53, align 8, !dbg !5051
  %conv54 = zext i8 %71 to i32, !dbg !5051
  %and55 = and i32 %conv54, -2, !dbg !5051
  %conv56 = trunc i32 %and55 to i8, !dbg !5051
  store i8 %conv56, i8* %flag53, align 8, !dbg !5051
  br label %for.inc57, !dbg !5052

for.inc57:                                        ; preds = %for.body39
  %72 = load i32, i32* %i31, align 4, !dbg !5053
  %inc58 = add nsw i32 %72, 1, !dbg !5053
  store i32 %inc58, i32* %i31, align 4, !dbg !5053
  br label %for.cond36, !dbg !5054, !llvm.loop !5055

for.end59:                                        ; preds = %for.cond36
  %73 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5057
  %mode60 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %73, i32 0, i32 20, !dbg !5058
  store i8 0, i8* %mode60, align 8, !dbg !5059
  br label %if.end61

if.end61:                                         ; preds = %for.end59, %for.end29
  %74 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5060
  %75 = load i8**, i8*** %old_selection_stack, align 8, !dbg !5061
  %76 = bitcast i8** %75 to i8*, !dbg !5061
  call void %74(i8* %76), !dbg !5060
  ret void, !dbg !5062
}

declare dso_local void @RNA_collection_clear(%struct.PointerRNA*, i8*) #2

declare dso_local zeroext i8 @uvedit_uv_select_test(%struct.Scene*, %struct.BMLoop*, i32) #2

declare dso_local zeroext i8 @uvedit_edge_select_test(%struct.Scene*, %struct.BMLoop*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.UvEdge* @uv_edge_get(%struct.BMLoop* %l, %struct.StitchState* %state) #0 !dbg !5063 {
entry:
  %l.addr = alloca %struct.BMLoop*, align 8
  %state.addr = alloca %struct.StitchState*, align 8
  %tmp_edge = alloca %struct.UvEdge, align 8
  %element1 = alloca %struct.UvElement*, align 8
  %element2 = alloca %struct.UvElement*, align 8
  %uv1 = alloca i32, align 4
  %uv2 = alloca i32, align 4
  store %struct.BMLoop* %l, %struct.BMLoop** %l.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l.addr, metadata !5066, metadata !DIExpression()), !dbg !5067
  store %struct.StitchState* %state, %struct.StitchState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state.addr, metadata !5068, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.declare(metadata %struct.UvEdge* %tmp_edge, metadata !5070, metadata !DIExpression()), !dbg !5071
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element1, metadata !5072, metadata !DIExpression()), !dbg !5073
  %0 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5074
  %element_map = getelementptr inbounds %struct.StitchState, %struct.StitchState* %0, i32 0, i32 7, !dbg !5075
  %1 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map, align 8, !dbg !5075
  %2 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !5076
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %2, i32 0, i32 3, !dbg !5077
  %3 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5077
  %4 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !5078
  %call = call %struct.UvElement* @BM_uv_element_get(%struct.UvElementMap* %1, %struct.BMFace* %3, %struct.BMLoop* %4), !dbg !5079
  store %struct.UvElement* %call, %struct.UvElement** %element1, align 8, !dbg !5073
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element2, metadata !5080, metadata !DIExpression()), !dbg !5081
  %5 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5082
  %element_map1 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %5, i32 0, i32 7, !dbg !5083
  %6 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map1, align 8, !dbg !5083
  %7 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !5084
  %f2 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %7, i32 0, i32 3, !dbg !5085
  %8 = load %struct.BMFace*, %struct.BMFace** %f2, align 8, !dbg !5085
  %9 = load %struct.BMLoop*, %struct.BMLoop** %l.addr, align 8, !dbg !5086
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %9, i32 0, i32 6, !dbg !5087
  %10 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !5087
  %call3 = call %struct.UvElement* @BM_uv_element_get(%struct.UvElementMap* %6, %struct.BMFace* %8, %struct.BMLoop* %10), !dbg !5088
  store %struct.UvElement* %call3, %struct.UvElement** %element2, align 8, !dbg !5081
  call void @llvm.dbg.declare(metadata i32* %uv1, metadata !5089, metadata !DIExpression()), !dbg !5090
  %11 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5091
  %map = getelementptr inbounds %struct.StitchState, %struct.StitchState* %11, i32 0, i32 10, !dbg !5092
  %12 = load i32*, i32** %map, align 8, !dbg !5092
  %13 = load %struct.UvElement*, %struct.UvElement** %element1, align 8, !dbg !5093
  %14 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5094
  %element_map4 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %14, i32 0, i32 7, !dbg !5095
  %15 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map4, align 8, !dbg !5095
  %buf = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %15, i32 0, i32 1, !dbg !5096
  %16 = load %struct.UvElement*, %struct.UvElement** %buf, align 8, !dbg !5096
  %sub.ptr.lhs.cast = ptrtoint %struct.UvElement* %13 to i64, !dbg !5097
  %sub.ptr.rhs.cast = ptrtoint %struct.UvElement* %16 to i64, !dbg !5097
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5097
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24, !dbg !5097
  %arrayidx = getelementptr inbounds i32, i32* %12, i64 %sub.ptr.div, !dbg !5091
  %17 = load i32, i32* %arrayidx, align 4, !dbg !5091
  store i32 %17, i32* %uv1, align 4, !dbg !5090
  call void @llvm.dbg.declare(metadata i32* %uv2, metadata !5098, metadata !DIExpression()), !dbg !5099
  %18 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5100
  %map5 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %18, i32 0, i32 10, !dbg !5101
  %19 = load i32*, i32** %map5, align 8, !dbg !5101
  %20 = load %struct.UvElement*, %struct.UvElement** %element2, align 8, !dbg !5102
  %21 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5103
  %element_map6 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %21, i32 0, i32 7, !dbg !5104
  %22 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map6, align 8, !dbg !5104
  %buf7 = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %22, i32 0, i32 1, !dbg !5105
  %23 = load %struct.UvElement*, %struct.UvElement** %buf7, align 8, !dbg !5105
  %sub.ptr.lhs.cast8 = ptrtoint %struct.UvElement* %20 to i64, !dbg !5106
  %sub.ptr.rhs.cast9 = ptrtoint %struct.UvElement* %23 to i64, !dbg !5106
  %sub.ptr.sub10 = sub i64 %sub.ptr.lhs.cast8, %sub.ptr.rhs.cast9, !dbg !5106
  %sub.ptr.div11 = sdiv exact i64 %sub.ptr.sub10, 24, !dbg !5106
  %arrayidx12 = getelementptr inbounds i32, i32* %19, i64 %sub.ptr.div11, !dbg !5100
  %24 = load i32, i32* %arrayidx12, align 4, !dbg !5100
  store i32 %24, i32* %uv2, align 4, !dbg !5099
  %25 = load i32, i32* %uv1, align 4, !dbg !5107
  %26 = load i32, i32* %uv2, align 4, !dbg !5109
  %cmp = icmp slt i32 %25, %26, !dbg !5110
  br i1 %cmp, label %if.then, label %if.else, !dbg !5111

if.then:                                          ; preds = %entry
  %27 = load i32, i32* %uv1, align 4, !dbg !5112
  %uv113 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %tmp_edge, i32 0, i32 0, !dbg !5114
  store i32 %27, i32* %uv113, align 8, !dbg !5115
  %28 = load i32, i32* %uv2, align 4, !dbg !5116
  %uv214 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %tmp_edge, i32 0, i32 1, !dbg !5117
  store i32 %28, i32* %uv214, align 4, !dbg !5118
  br label %if.end, !dbg !5119

if.else:                                          ; preds = %entry
  %29 = load i32, i32* %uv2, align 4, !dbg !5120
  %uv115 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %tmp_edge, i32 0, i32 0, !dbg !5122
  store i32 %29, i32* %uv115, align 8, !dbg !5123
  %30 = load i32, i32* %uv1, align 4, !dbg !5124
  %uv216 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %tmp_edge, i32 0, i32 1, !dbg !5125
  store i32 %30, i32* %uv216, align 4, !dbg !5126
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %31 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5127
  %edge_hash = getelementptr inbounds %struct.StitchState, %struct.StitchState* %31, i32 0, i32 13, !dbg !5128
  %32 = load %struct.GHash*, %struct.GHash** %edge_hash, align 8, !dbg !5128
  %33 = bitcast %struct.UvEdge* %tmp_edge to i8*, !dbg !5129
  %call17 = call i8* @BLI_ghash_lookup(%struct.GHash* %32, i8* %33), !dbg !5130
  %34 = bitcast i8* %call17 to %struct.UvEdge*, !dbg !5130
  ret %struct.UvEdge* %34, !dbg !5131
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @stitch_process_data(%struct.StitchState* %state, %struct.Scene* %scene, i32 %final) #0 !dbg !5132 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.StitchState*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %final.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %preview = alloca %struct.StitchPreviewer*, align 8
  %island_stitch_data = alloca %struct.IslandStitchData*, align 8
  %previous_island = alloca i32, align 4
  %bm = alloca %struct.BMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %iter = alloca %struct.BMIter, align 8
  %final_position = alloca %struct.UVVertAverage*, align 8
  %stitch_midpoints = alloca i8, align 1
  %uvfinal_map = alloca i32*, align 8
  %preview_position = alloca %struct.PreviewPosition*, align 8
  %element = alloca %struct.UvElement*, align 8
  %edge = alloca %struct.UvEdge*, align 8
  %element57 = alloca %struct.UvElement*, align 8
  %edge72 = alloca %struct.UvEdge*, align 8
  %numOfIslandUVs = alloca i32, align 4
  %j = alloca i32, align 4
  %element105 = alloca %struct.UvElement*, align 8
  %liter = alloca %struct.BMIter, align 8
  %l128 = alloca %struct.BMLoop*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %buffer_index = alloca i32, align 4
  %stitchBufferIndex = alloca i32, align 4
  %unstitchBufferIndex = alloca i32, align 4
  %preview_size = alloca i32, align 4
  %element175 = alloca %struct.UvElement*, align 8
  %numoftris = alloca i32, align 4
  %index = alloca i32, align 4
  %face_preview_pos = alloca i32, align 4
  %fl = alloca %struct.BMLoop*, align 8
  %fuv = alloca %struct.MLoopUV*, align 8
  %lnext = alloca %struct.BMLoop*, align 8
  %luvnext = alloca %struct.MLoopUV*, align 8
  %element271 = alloca %struct.UvElement*, align 8
  %edge319 = alloca %struct.UvEdge*, align 8
  %element1 = alloca %struct.UvElement*, align 8
  %element2 = alloca %struct.UvElement*, align 8
  %element423 = alloca %struct.UvElement*, align 8
  %l432 = alloca %struct.BMLoop*, align 8
  %luv433 = alloca %struct.MLoopUV*, align 8
  %element_iter = alloca %struct.UvElement*, align 8
  %edge536 = alloca %struct.UvEdge*, align 8
  %luv2 = alloca %struct.MLoopUV*, align 8
  %luv1 = alloca %struct.MLoopUV*, align 8
  %l545 = alloca %struct.BMLoop*, align 8
  %edge_iter = alloca %struct.UvEdge*, align 8
  %element748 = alloca %struct.UvElement*, align 8
  %l757 = alloca %struct.BMLoop*, align 8
  %luv758 = alloca %struct.MLoopUV*, align 8
  %edge817 = alloca %struct.UvEdge*, align 8
  %edge865 = alloca %struct.UvEdge*, align 8
  %element900 = alloca %struct.UvElement*, align 8
  %element926 = alloca %struct.UvElement*, align 8
  %l935 = alloca %struct.BMLoop*, align 8
  %luv936 = alloca %struct.MLoopUV*, align 8
  %edge998 = alloca %struct.UvEdge*, align 8
  %edge1030 = alloca %struct.UvEdge*, align 8
  %element1060 = alloca %struct.UvElement*, align 8
  %edge1066 = alloca %struct.UvEdge*, align 8
  store %struct.StitchState* %state, %struct.StitchState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state.addr, metadata !5135, metadata !DIExpression()), !dbg !5136
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !5137, metadata !DIExpression()), !dbg !5138
  store i32 %final, i32* %final.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %final.addr, metadata !5139, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5141, metadata !DIExpression()), !dbg !5142
  call void @llvm.dbg.declare(metadata %struct.StitchPreviewer** %preview, metadata !5143, metadata !DIExpression()), !dbg !5144
  call void @llvm.dbg.declare(metadata %struct.IslandStitchData** %island_stitch_data, metadata !5145, metadata !DIExpression()), !dbg !5160
  store %struct.IslandStitchData* null, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !5160
  call void @llvm.dbg.declare(metadata i32* %previous_island, metadata !5161, metadata !DIExpression()), !dbg !5162
  %0 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5163
  %static_island = getelementptr inbounds %struct.StitchState, %struct.StitchState* %0, i32 0, i32 18, !dbg !5164
  %1 = load i32, i32* %static_island, align 4, !dbg !5164
  store i32 %1, i32* %previous_island, align 4, !dbg !5162
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !5165, metadata !DIExpression()), !dbg !5166
  %2 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5167
  %em = getelementptr inbounds %struct.StitchState, %struct.StitchState* %2, i32 0, i32 5, !dbg !5168
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5168
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !5169
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !5169
  store %struct.BMesh* %4, %struct.BMesh** %bm, align 8, !dbg !5166
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !5170, metadata !DIExpression()), !dbg !5171
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !5172, metadata !DIExpression()), !dbg !5173
  call void @llvm.dbg.declare(metadata %struct.UVVertAverage** %final_position, metadata !5174, metadata !DIExpression()), !dbg !5181
  store %struct.UVVertAverage* null, %struct.UVVertAverage** %final_position, align 8, !dbg !5181
  call void @llvm.dbg.declare(metadata i8* %stitch_midpoints, metadata !5182, metadata !DIExpression()), !dbg !5183
  %5 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5184
  %midpoints = getelementptr inbounds %struct.StitchState, %struct.StitchState* %5, i32 0, i32 4, !dbg !5185
  %6 = load i8, i8* %midpoints, align 1, !dbg !5185
  store i8 %6, i8* %stitch_midpoints, align 1, !dbg !5183
  call void @llvm.dbg.declare(metadata i32** %uvfinal_map, metadata !5186, metadata !DIExpression()), !dbg !5187
  store i32* null, i32** %uvfinal_map, align 8, !dbg !5187
  call void @llvm.dbg.declare(metadata %struct.PreviewPosition** %preview_position, metadata !5188, metadata !DIExpression()), !dbg !5195
  store %struct.PreviewPosition* null, %struct.PreviewPosition** %preview_position, align 8, !dbg !5195
  %7 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5196
  %stitch_preview = getelementptr inbounds %struct.StitchState, %struct.StitchState* %7, i32 0, i32 22, !dbg !5197
  %8 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !5197
  call void @stitch_preview_delete(%struct.StitchPreviewer* %8), !dbg !5198
  %call = call %struct.StitchPreviewer* @stitch_preview_init(), !dbg !5199
  %9 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5200
  %stitch_preview2 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %9, i32 0, i32 22, !dbg !5201
  store %struct.StitchPreviewer* %call, %struct.StitchPreviewer** %stitch_preview2, align 8, !dbg !5202
  store %struct.StitchPreviewer* %call, %struct.StitchPreviewer** %preview, align 8, !dbg !5203
  %10 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5204
  %cmp = icmp eq %struct.StitchPreviewer* %10, null, !dbg !5206
  br i1 %cmp, label %if.then, label %if.end, !dbg !5207

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5208
  br label %return, !dbg !5208

if.end:                                           ; preds = %entry
  %11 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5209
  %12 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5210
  %totface = getelementptr inbounds %struct.BMesh, %struct.BMesh* %12, i32 0, i32 3, !dbg !5211
  %13 = load i32, i32* %totface, align 4, !dbg !5211
  %conv = sext i32 %13 to i64, !dbg !5210
  %mul = mul i64 %conv, 8, !dbg !5212
  %call3 = call i8* %11(i64 %mul, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.46, i64 0, i64 0)), !dbg !5209
  %14 = bitcast i8* %call3 to %struct.PreviewPosition*, !dbg !5209
  store %struct.PreviewPosition* %14, %struct.PreviewPosition** %preview_position, align 8, !dbg !5213
  store i32 0, i32* %i, align 4, !dbg !5214
  br label %for.cond, !dbg !5216

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load i32, i32* %i, align 4, !dbg !5217
  %16 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5219
  %totface4 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %16, i32 0, i32 3, !dbg !5220
  %17 = load i32, i32* %totface4, align 4, !dbg !5220
  %cmp5 = icmp slt i32 %15, %17, !dbg !5221
  br i1 %cmp5, label %for.body, label %for.end, !dbg !5222

for.body:                                         ; preds = %for.cond
  %18 = load %struct.PreviewPosition*, %struct.PreviewPosition** %preview_position, align 8, !dbg !5223
  %19 = load i32, i32* %i, align 4, !dbg !5225
  %idxprom = sext i32 %19 to i64, !dbg !5223
  %arrayidx = getelementptr inbounds %struct.PreviewPosition, %struct.PreviewPosition* %18, i64 %idxprom, !dbg !5223
  %data_position = getelementptr inbounds %struct.PreviewPosition, %struct.PreviewPosition* %arrayidx, i32 0, i32 0, !dbg !5226
  store i32 -1, i32* %data_position, align 4, !dbg !5227
  br label %for.inc, !dbg !5228

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !5229
  %inc = add nsw i32 %20, 1, !dbg !5229
  store i32 %inc, i32* %i, align 4, !dbg !5229
  br label %for.cond, !dbg !5230, !llvm.loop !5231

for.end:                                          ; preds = %for.cond
  %21 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5233
  %22 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5234
  %element_map = getelementptr inbounds %struct.StitchState, %struct.StitchState* %22, i32 0, i32 7, !dbg !5235
  %23 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map, align 8, !dbg !5235
  %totalIslands = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %23, i32 0, i32 3, !dbg !5236
  %24 = load i32, i32* %totalIslands, align 4, !dbg !5236
  %conv7 = sext i32 %24 to i64, !dbg !5234
  %mul8 = mul i64 40, %conv7, !dbg !5237
  %call9 = call i8* %21(i64 %mul8, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.47, i64 0, i64 0)), !dbg !5233
  %25 = bitcast i8* %call9 to %struct.IslandStitchData*, !dbg !5233
  store %struct.IslandStitchData* %25, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !5238
  %26 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !5239
  %tobool = icmp ne %struct.IslandStitchData* %26, null, !dbg !5239
  br i1 %tobool, label %if.end11, label %if.then10, !dbg !5241

if.then10:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !5242
  br label %return, !dbg !5242

if.end11:                                         ; preds = %for.end
  %27 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5244
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %27, i8 zeroext 9), !dbg !5245
  store i32 0, i32* %i, align 4, !dbg !5246
  br label %for.cond12, !dbg !5248

for.cond12:                                       ; preds = %for.inc26, %if.end11
  %28 = load i32, i32* %i, align 4, !dbg !5249
  %29 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5251
  %selection_size = getelementptr inbounds %struct.StitchState, %struct.StitchState* %29, i32 0, i32 17, !dbg !5252
  %30 = load i32, i32* %selection_size, align 8, !dbg !5252
  %cmp13 = icmp slt i32 %28, %30, !dbg !5253
  br i1 %cmp13, label %for.body15, label %for.end28, !dbg !5254

for.body15:                                       ; preds = %for.cond12
  %31 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5255
  %mode = getelementptr inbounds %struct.StitchState, %struct.StitchState* %31, i32 0, i32 20, !dbg !5258
  %32 = load i8, i8* %mode, align 8, !dbg !5258
  %conv16 = zext i8 %32 to i32, !dbg !5255
  %cmp17 = icmp eq i32 %conv16, 0, !dbg !5259
  br i1 %cmp17, label %if.then19, label %if.else, !dbg !5260

if.then19:                                        ; preds = %for.body15
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element, metadata !5261, metadata !DIExpression()), !dbg !5263
  %33 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5264
  %selection_stack = getelementptr inbounds %struct.StitchState, %struct.StitchState* %33, i32 0, i32 16, !dbg !5265
  %34 = load i8**, i8*** %selection_stack, align 8, !dbg !5265
  %35 = load i32, i32* %i, align 4, !dbg !5266
  %idxprom20 = sext i32 %35 to i64, !dbg !5264
  %arrayidx21 = getelementptr inbounds i8*, i8** %34, i64 %idxprom20, !dbg !5264
  %36 = load i8*, i8** %arrayidx21, align 8, !dbg !5264
  %37 = bitcast i8* %36 to %struct.UvElement*, !dbg !5267
  store %struct.UvElement* %37, %struct.UvElement** %element, align 8, !dbg !5263
  %38 = load %struct.UvElement*, %struct.UvElement** %element, align 8, !dbg !5268
  %39 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5269
  %40 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !5270
  call void @determine_uv_stitchability(%struct.UvElement* %38, %struct.StitchState* %39, %struct.IslandStitchData* %40), !dbg !5271
  br label %if.end25, !dbg !5272

if.else:                                          ; preds = %for.body15
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge, metadata !5273, metadata !DIExpression()), !dbg !5275
  %41 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5276
  %selection_stack22 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %41, i32 0, i32 16, !dbg !5277
  %42 = load i8**, i8*** %selection_stack22, align 8, !dbg !5277
  %43 = load i32, i32* %i, align 4, !dbg !5278
  %idxprom23 = sext i32 %43 to i64, !dbg !5276
  %arrayidx24 = getelementptr inbounds i8*, i8** %42, i64 %idxprom23, !dbg !5276
  %44 = load i8*, i8** %arrayidx24, align 8, !dbg !5276
  %45 = bitcast i8* %44 to %struct.UvEdge*, !dbg !5279
  store %struct.UvEdge* %45, %struct.UvEdge** %edge, align 8, !dbg !5275
  %46 = load %struct.UvEdge*, %struct.UvEdge** %edge, align 8, !dbg !5280
  %47 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5281
  %48 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !5282
  call void @determine_uv_edge_stitchability(%struct.UvEdge* %46, %struct.StitchState* %47, %struct.IslandStitchData* %48), !dbg !5283
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then19
  br label %for.inc26, !dbg !5284

for.inc26:                                        ; preds = %if.end25
  %49 = load i32, i32* %i, align 4, !dbg !5285
  %inc27 = add nsw i32 %49, 1, !dbg !5285
  store i32 %inc27, i32* %i, align 4, !dbg !5285
  br label %for.cond12, !dbg !5286, !llvm.loop !5287

for.end28:                                        ; preds = %for.cond12
  %50 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5289
  %element_map29 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %50, i32 0, i32 7, !dbg !5290
  %51 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map29, align 8, !dbg !5290
  %totalIslands30 = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %51, i32 0, i32 3, !dbg !5291
  %52 = load i32, i32* %totalIslands30, align 4, !dbg !5291
  %53 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5292
  %static_island31 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %53, i32 0, i32 18, !dbg !5293
  %54 = load i32, i32* %static_island31, align 4, !dbg !5294
  %rem = srem i32 %54, %52, !dbg !5294
  store i32 %rem, i32* %static_island31, align 4, !dbg !5294
  br label %while.cond, !dbg !5295

while.cond:                                       ; preds = %if.end46, %for.end28
  %55 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !5296
  %56 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5297
  %static_island32 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %56, i32 0, i32 18, !dbg !5298
  %57 = load i32, i32* %static_island32, align 4, !dbg !5298
  %idxprom33 = sext i32 %57 to i64, !dbg !5296
  %arrayidx34 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %55, i64 %idxprom33, !dbg !5296
  %stitchableCandidate = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx34, i32 0, i32 8, !dbg !5299
  %58 = load i8, i8* %stitchableCandidate, align 1, !dbg !5299
  %tobool35 = icmp ne i8 %58, 0, !dbg !5300
  %lnot = xor i1 %tobool35, true, !dbg !5300
  br i1 %lnot, label %while.body, label %while.end, !dbg !5295

while.body:                                       ; preds = %while.cond
  %59 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5301
  %static_island36 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %59, i32 0, i32 18, !dbg !5303
  %60 = load i32, i32* %static_island36, align 4, !dbg !5304
  %inc37 = add nsw i32 %60, 1, !dbg !5304
  store i32 %inc37, i32* %static_island36, align 4, !dbg !5304
  %61 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5305
  %element_map38 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %61, i32 0, i32 7, !dbg !5306
  %62 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map38, align 8, !dbg !5306
  %totalIslands39 = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %62, i32 0, i32 3, !dbg !5307
  %63 = load i32, i32* %totalIslands39, align 4, !dbg !5307
  %64 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5308
  %static_island40 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %64, i32 0, i32 18, !dbg !5309
  %65 = load i32, i32* %static_island40, align 4, !dbg !5310
  %rem41 = srem i32 %65, %63, !dbg !5310
  store i32 %rem41, i32* %static_island40, align 4, !dbg !5310
  %66 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5311
  %static_island42 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %66, i32 0, i32 18, !dbg !5313
  %67 = load i32, i32* %static_island42, align 4, !dbg !5313
  %68 = load i32, i32* %previous_island, align 4, !dbg !5314
  %cmp43 = icmp eq i32 %67, %68, !dbg !5315
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !5316

if.then45:                                        ; preds = %while.body
  br label %while.end, !dbg !5317

if.end46:                                         ; preds = %while.body
  br label %while.cond, !dbg !5295, !llvm.loop !5318

while.end:                                        ; preds = %if.then45, %while.cond
  store i32 0, i32* %i, align 4, !dbg !5320
  br label %for.cond47, !dbg !5322

for.cond47:                                       ; preds = %for.inc90, %while.end
  %69 = load i32, i32* %i, align 4, !dbg !5323
  %70 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5325
  %selection_size48 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %70, i32 0, i32 17, !dbg !5326
  %71 = load i32, i32* %selection_size48, align 8, !dbg !5326
  %cmp49 = icmp slt i32 %69, %71, !dbg !5327
  br i1 %cmp49, label %for.body51, label %for.end92, !dbg !5328

for.body51:                                       ; preds = %for.cond47
  %72 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5329
  %mode52 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %72, i32 0, i32 20, !dbg !5332
  %73 = load i8, i8* %mode52, align 8, !dbg !5332
  %conv53 = zext i8 %73 to i32, !dbg !5329
  %cmp54 = icmp eq i32 %conv53, 0, !dbg !5333
  br i1 %cmp54, label %if.then56, label %if.else71, !dbg !5334

if.then56:                                        ; preds = %for.body51
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element57, metadata !5335, metadata !DIExpression()), !dbg !5337
  %74 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5338
  %selection_stack58 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %74, i32 0, i32 16, !dbg !5339
  %75 = load i8**, i8*** %selection_stack58, align 8, !dbg !5339
  %76 = load i32, i32* %i, align 4, !dbg !5340
  %idxprom59 = sext i32 %76 to i64, !dbg !5338
  %arrayidx60 = getelementptr inbounds i8*, i8** %75, i64 %idxprom59, !dbg !5338
  %77 = load i8*, i8** %arrayidx60, align 8, !dbg !5338
  %78 = bitcast i8* %77 to %struct.UvElement*, !dbg !5341
  store %struct.UvElement* %78, %struct.UvElement** %element57, align 8, !dbg !5337
  %79 = load %struct.UvElement*, %struct.UvElement** %element57, align 8, !dbg !5342
  %flag = getelementptr inbounds %struct.UvElement, %struct.UvElement* %79, i32 0, i32 4, !dbg !5344
  %80 = load i8, i8* %flag, align 1, !dbg !5344
  %conv61 = zext i8 %80 to i32, !dbg !5342
  %and = and i32 %conv61, 16, !dbg !5345
  %tobool62 = icmp ne i32 %and, 0, !dbg !5345
  br i1 %tobool62, label %if.then63, label %if.else68, !dbg !5346

if.then63:                                        ; preds = %if.then56
  %81 = load %struct.UvElement*, %struct.UvElement** %element57, align 8, !dbg !5347
  %flag64 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %81, i32 0, i32 4, !dbg !5349
  %82 = load i8, i8* %flag64, align 1, !dbg !5350
  %conv65 = zext i8 %82 to i32, !dbg !5350
  %and66 = and i32 %conv65, -17, !dbg !5350
  %conv67 = trunc i32 %and66 to i8, !dbg !5350
  store i8 %conv67, i8* %flag64, align 1, !dbg !5350
  %83 = load %struct.UvElement*, %struct.UvElement** %element57, align 8, !dbg !5351
  %84 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5352
  %85 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !5353
  %86 = load %struct.PreviewPosition*, %struct.PreviewPosition** %preview_position, align 8, !dbg !5354
  call void @stitch_validate_uv_stichability(%struct.UvElement* %83, %struct.StitchState* %84, %struct.IslandStitchData* %85, %struct.PreviewPosition* %86), !dbg !5355
  br label %if.end70, !dbg !5356

if.else68:                                        ; preds = %if.then56
  %87 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5357
  %num_unstitchable = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %87, i32 0, i32 6, !dbg !5359
  %88 = load i32, i32* %num_unstitchable, align 4, !dbg !5360
  %inc69 = add i32 %88, 1, !dbg !5360
  store i32 %inc69, i32* %num_unstitchable, align 4, !dbg !5360
  br label %if.end70

if.end70:                                         ; preds = %if.else68, %if.then63
  br label %if.end89, !dbg !5361

if.else71:                                        ; preds = %for.body51
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge72, metadata !5362, metadata !DIExpression()), !dbg !5364
  %89 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5365
  %selection_stack73 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %89, i32 0, i32 16, !dbg !5366
  %90 = load i8**, i8*** %selection_stack73, align 8, !dbg !5366
  %91 = load i32, i32* %i, align 4, !dbg !5367
  %idxprom74 = sext i32 %91 to i64, !dbg !5365
  %arrayidx75 = getelementptr inbounds i8*, i8** %90, i64 %idxprom74, !dbg !5365
  %92 = load i8*, i8** %arrayidx75, align 8, !dbg !5365
  %93 = bitcast i8* %92 to %struct.UvEdge*, !dbg !5368
  store %struct.UvEdge* %93, %struct.UvEdge** %edge72, align 8, !dbg !5364
  %94 = load %struct.UvEdge*, %struct.UvEdge** %edge72, align 8, !dbg !5369
  %flag76 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %94, i32 0, i32 2, !dbg !5371
  %95 = load i8, i8* %flag76, align 8, !dbg !5371
  %conv77 = zext i8 %95 to i32, !dbg !5369
  %and78 = and i32 %conv77, 16, !dbg !5372
  %tobool79 = icmp ne i32 %and78, 0, !dbg !5372
  br i1 %tobool79, label %if.then80, label %if.else85, !dbg !5373

if.then80:                                        ; preds = %if.else71
  %96 = load %struct.UvEdge*, %struct.UvEdge** %edge72, align 8, !dbg !5374
  %flag81 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %96, i32 0, i32 2, !dbg !5376
  %97 = load i8, i8* %flag81, align 8, !dbg !5377
  %conv82 = zext i8 %97 to i32, !dbg !5377
  %and83 = and i32 %conv82, -17, !dbg !5377
  %conv84 = trunc i32 %and83 to i8, !dbg !5377
  store i8 %conv84, i8* %flag81, align 8, !dbg !5377
  %98 = load %struct.UvEdge*, %struct.UvEdge** %edge72, align 8, !dbg !5378
  %99 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5379
  %100 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !5380
  %101 = load %struct.PreviewPosition*, %struct.PreviewPosition** %preview_position, align 8, !dbg !5381
  call void @stitch_validate_edge_stichability(%struct.UvEdge* %98, %struct.StitchState* %99, %struct.IslandStitchData* %100, %struct.PreviewPosition* %101), !dbg !5382
  br label %if.end88, !dbg !5383

if.else85:                                        ; preds = %if.else71
  %102 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5384
  %num_unstitchable86 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %102, i32 0, i32 6, !dbg !5386
  %103 = load i32, i32* %num_unstitchable86, align 4, !dbg !5387
  %inc87 = add i32 %103, 1, !dbg !5387
  store i32 %inc87, i32* %num_unstitchable86, align 4, !dbg !5387
  br label %if.end88

if.end88:                                         ; preds = %if.else85, %if.then80
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.end70
  br label %for.inc90, !dbg !5388

for.inc90:                                        ; preds = %if.end89
  %104 = load i32, i32* %i, align 4, !dbg !5389
  %inc91 = add nsw i32 %104, 1, !dbg !5389
  store i32 %inc91, i32* %i, align 4, !dbg !5389
  br label %for.cond47, !dbg !5390, !llvm.loop !5391

for.end92:                                        ; preds = %for.cond47
  %105 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5393
  %snap_islands = getelementptr inbounds %struct.StitchState, %struct.StitchState* %105, i32 0, i32 3, !dbg !5395
  %106 = load i8, i8* %snap_islands, align 4, !dbg !5395
  %tobool93 = icmp ne i8 %106, 0, !dbg !5393
  br i1 %tobool93, label %if.then94, label %if.end125, !dbg !5396

if.then94:                                        ; preds = %for.end92
  store i32 0, i32* %i, align 4, !dbg !5397
  br label %for.cond95, !dbg !5400

for.cond95:                                       ; preds = %for.inc122, %if.then94
  %107 = load i32, i32* %i, align 4, !dbg !5401
  %108 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5403
  %element_map96 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %108, i32 0, i32 7, !dbg !5404
  %109 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map96, align 8, !dbg !5404
  %totalIslands97 = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %109, i32 0, i32 3, !dbg !5405
  %110 = load i32, i32* %totalIslands97, align 4, !dbg !5405
  %cmp98 = icmp slt i32 %107, %110, !dbg !5406
  br i1 %cmp98, label %for.body100, label %for.end124, !dbg !5407

for.body100:                                      ; preds = %for.cond95
  %111 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !5408
  %112 = load i32, i32* %i, align 4, !dbg !5411
  %idxprom101 = sext i32 %112 to i64, !dbg !5408
  %arrayidx102 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %111, i64 %idxprom101, !dbg !5408
  %addedForPreview = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx102, i32 0, i32 7, !dbg !5412
  %113 = load i8, i8* %addedForPreview, align 4, !dbg !5412
  %tobool103 = icmp ne i8 %113, 0, !dbg !5408
  br i1 %tobool103, label %if.then104, label %if.end121, !dbg !5413

if.then104:                                       ; preds = %for.body100
  call void @llvm.dbg.declare(metadata i32* %numOfIslandUVs, metadata !5414, metadata !DIExpression()), !dbg !5416
  store i32 0, i32* %numOfIslandUVs, align 4, !dbg !5416
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5417, metadata !DIExpression()), !dbg !5418
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element105, metadata !5419, metadata !DIExpression()), !dbg !5420
  %114 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5421
  %element_map106 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %114, i32 0, i32 7, !dbg !5422
  %115 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map106, align 8, !dbg !5422
  %116 = load i32, i32* %i, align 4, !dbg !5423
  %call107 = call i32 @getNumOfIslandUvs(%struct.UvElementMap* %115, i32 %116), !dbg !5424
  store i32 %call107, i32* %numOfIslandUVs, align 4, !dbg !5425
  %117 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5426
  %element_map108 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %117, i32 0, i32 7, !dbg !5427
  %118 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map108, align 8, !dbg !5427
  %buf = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %118, i32 0, i32 1, !dbg !5428
  %119 = load %struct.UvElement*, %struct.UvElement** %buf, align 8, !dbg !5428
  %120 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5429
  %element_map109 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %120, i32 0, i32 7, !dbg !5430
  %121 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map109, align 8, !dbg !5430
  %islandIndices = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %121, i32 0, i32 4, !dbg !5431
  %122 = load i32*, i32** %islandIndices, align 8, !dbg !5431
  %123 = load i32, i32* %i, align 4, !dbg !5432
  %idxprom110 = sext i32 %123 to i64, !dbg !5429
  %arrayidx111 = getelementptr inbounds i32, i32* %122, i64 %idxprom110, !dbg !5429
  %124 = load i32, i32* %arrayidx111, align 4, !dbg !5429
  %idxprom112 = sext i32 %124 to i64, !dbg !5426
  %arrayidx113 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %119, i64 %idxprom112, !dbg !5426
  store %struct.UvElement* %arrayidx113, %struct.UvElement** %element105, align 8, !dbg !5433
  store i32 0, i32* %j, align 4, !dbg !5434
  br label %for.cond114, !dbg !5436

for.cond114:                                      ; preds = %for.inc118, %if.then104
  %125 = load i32, i32* %j, align 4, !dbg !5437
  %126 = load i32, i32* %numOfIslandUVs, align 4, !dbg !5439
  %cmp115 = icmp slt i32 %125, %126, !dbg !5440
  br i1 %cmp115, label %for.body117, label %for.end120, !dbg !5441

for.body117:                                      ; preds = %for.cond114
  %127 = load %struct.UvElement*, %struct.UvElement** %element105, align 8, !dbg !5442
  %l = getelementptr inbounds %struct.UvElement, %struct.UvElement* %127, i32 0, i32 1, !dbg !5444
  %128 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !5444
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %128, i32 0, i32 3, !dbg !5445
  %129 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5445
  %130 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5446
  %131 = load %struct.PreviewPosition*, %struct.PreviewPosition** %preview_position, align 8, !dbg !5447
  call void @stitch_set_face_preview_buffer_position(%struct.BMFace* %129, %struct.StitchPreviewer* %130, %struct.PreviewPosition* %131), !dbg !5448
  br label %for.inc118, !dbg !5449

for.inc118:                                       ; preds = %for.body117
  %132 = load i32, i32* %j, align 4, !dbg !5450
  %inc119 = add nsw i32 %132, 1, !dbg !5450
  store i32 %inc119, i32* %j, align 4, !dbg !5450
  %133 = load %struct.UvElement*, %struct.UvElement** %element105, align 8, !dbg !5451
  %incdec.ptr = getelementptr inbounds %struct.UvElement, %struct.UvElement* %133, i32 1, !dbg !5451
  store %struct.UvElement* %incdec.ptr, %struct.UvElement** %element105, align 8, !dbg !5451
  br label %for.cond114, !dbg !5452, !llvm.loop !5453

for.end120:                                       ; preds = %for.cond114
  br label %if.end121, !dbg !5455

if.end121:                                        ; preds = %for.end120, %for.body100
  br label %for.inc122, !dbg !5456

for.inc122:                                       ; preds = %if.end121
  %134 = load i32, i32* %i, align 4, !dbg !5457
  %inc123 = add nsw i32 %134, 1, !dbg !5457
  store i32 %inc123, i32* %i, align 4, !dbg !5457
  br label %for.cond95, !dbg !5458, !llvm.loop !5459

for.end124:                                       ; preds = %for.cond95
  br label %if.end125, !dbg !5461

if.end125:                                        ; preds = %for.end124, %for.end92
  %135 = load i32, i32* %final.addr, align 4, !dbg !5462
  %tobool126 = icmp ne i32 %135, 0, !dbg !5462
  br i1 %tobool126, label %if.end393, label %if.then127, !dbg !5464

if.then127:                                       ; preds = %if.end125
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !5465, metadata !DIExpression()), !dbg !5467
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l128, metadata !5468, metadata !DIExpression()), !dbg !5469
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !5470, metadata !DIExpression()), !dbg !5471
  call void @llvm.dbg.declare(metadata i32* %buffer_index, metadata !5472, metadata !DIExpression()), !dbg !5473
  store i32 0, i32* %buffer_index, align 4, !dbg !5473
  call void @llvm.dbg.declare(metadata i32* %stitchBufferIndex, metadata !5474, metadata !DIExpression()), !dbg !5475
  store i32 0, i32* %stitchBufferIndex, align 4, !dbg !5475
  call void @llvm.dbg.declare(metadata i32* %unstitchBufferIndex, metadata !5476, metadata !DIExpression()), !dbg !5477
  store i32 0, i32* %unstitchBufferIndex, align 4, !dbg !5477
  call void @llvm.dbg.declare(metadata i32* %preview_size, metadata !5478, metadata !DIExpression()), !dbg !5479
  %136 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5480
  %mode129 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %136, i32 0, i32 20, !dbg !5481
  %137 = load i8, i8* %mode129, align 8, !dbg !5481
  %conv130 = zext i8 %137 to i32, !dbg !5480
  %cmp131 = icmp eq i32 %conv130, 0, !dbg !5482
  %138 = zext i1 %cmp131 to i64, !dbg !5483
  %cond = select i1 %cmp131, i32 2, i32 4, !dbg !5483
  store i32 %cond, i32* %preview_size, align 4, !dbg !5479
  %139 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5484
  %140 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5485
  %preview_uvs = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %140, i32 0, i32 7, !dbg !5486
  %141 = load i32, i32* %preview_uvs, align 8, !dbg !5486
  %conv133 = zext i32 %141 to i64, !dbg !5485
  %mul134 = mul i64 %conv133, 4, !dbg !5487
  %mul135 = mul i64 %mul134, 2, !dbg !5488
  %call136 = call i8* %139(i64 %mul135, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.48, i64 0, i64 0)), !dbg !5484
  %142 = bitcast i8* %call136 to float*, !dbg !5489
  %143 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5490
  %preview_polys = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %143, i32 0, i32 0, !dbg !5491
  store float* %142, float** %preview_polys, align 8, !dbg !5492
  %144 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5493
  %145 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5494
  %num_polys = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %145, i32 0, i32 2, !dbg !5495
  %146 = load i32, i32* %num_polys, align 8, !dbg !5495
  %conv137 = zext i32 %146 to i64, !dbg !5494
  %mul138 = mul i64 %conv137, 4, !dbg !5496
  %call139 = call i8* %144(i64 %mul138, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.48, i64 0, i64 0)), !dbg !5493
  %147 = bitcast i8* %call139 to i32*, !dbg !5493
  %148 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5497
  %uvs_per_polygon = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %148, i32 0, i32 1, !dbg !5498
  store i32* %147, i32** %uvs_per_polygon, align 8, !dbg !5499
  %149 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5500
  %150 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5501
  %num_stitchable = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %150, i32 0, i32 5, !dbg !5502
  %151 = load i32, i32* %num_stitchable, align 8, !dbg !5502
  %conv140 = zext i32 %151 to i64, !dbg !5501
  %mul141 = mul i64 %conv140, 4, !dbg !5503
  %152 = load i32, i32* %preview_size, align 4, !dbg !5504
  %conv142 = sext i32 %152 to i64, !dbg !5504
  %mul143 = mul i64 %mul141, %conv142, !dbg !5505
  %call144 = call i8* %149(i64 %mul143, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49, i64 0, i64 0)), !dbg !5500
  %153 = bitcast i8* %call144 to float*, !dbg !5506
  %154 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5507
  %preview_stitchable = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %154, i32 0, i32 3, !dbg !5508
  store float* %153, float** %preview_stitchable, align 8, !dbg !5509
  %155 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5510
  %156 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5511
  %num_unstitchable145 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %156, i32 0, i32 6, !dbg !5512
  %157 = load i32, i32* %num_unstitchable145, align 4, !dbg !5512
  %conv146 = zext i32 %157 to i64, !dbg !5511
  %mul147 = mul i64 %conv146, 4, !dbg !5513
  %158 = load i32, i32* %preview_size, align 4, !dbg !5514
  %conv148 = sext i32 %158 to i64, !dbg !5514
  %mul149 = mul i64 %mul147, %conv148, !dbg !5515
  %call150 = call i8* %155(i64 %mul149, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.50, i64 0, i64 0)), !dbg !5510
  %159 = bitcast i8* %call150 to float*, !dbg !5516
  %160 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5517
  %preview_unstitchable = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %160, i32 0, i32 4, !dbg !5518
  store float* %159, float** %preview_unstitchable, align 8, !dbg !5519
  %161 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5520
  %162 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5521
  %tris_per_island = getelementptr inbounds %struct.StitchState, %struct.StitchState* %162, i32 0, i32 19, !dbg !5522
  %163 = load i32*, i32** %tris_per_island, align 8, !dbg !5522
  %164 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5523
  %static_island151 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %164, i32 0, i32 18, !dbg !5524
  %165 = load i32, i32* %static_island151, align 4, !dbg !5524
  %idxprom152 = sext i32 %165 to i64, !dbg !5521
  %arrayidx153 = getelementptr inbounds i32, i32* %163, i64 %idxprom152, !dbg !5521
  %166 = load i32, i32* %arrayidx153, align 4, !dbg !5521
  %conv154 = zext i32 %166 to i64, !dbg !5521
  %mul155 = mul i64 %conv154, 4, !dbg !5525
  %mul156 = mul i64 %mul155, 6, !dbg !5526
  %call157 = call i8* %161(i64 %mul156, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.51, i64 0, i64 0)), !dbg !5520
  %167 = bitcast i8* %call157 to float*, !dbg !5527
  %168 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5528
  %static_tris = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %168, i32 0, i32 8, !dbg !5529
  store float* %167, float** %static_tris, align 8, !dbg !5530
  %169 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5531
  %tris_per_island158 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %169, i32 0, i32 19, !dbg !5532
  %170 = load i32*, i32** %tris_per_island158, align 8, !dbg !5532
  %171 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5533
  %static_island159 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %171, i32 0, i32 18, !dbg !5534
  %172 = load i32, i32* %static_island159, align 4, !dbg !5534
  %idxprom160 = sext i32 %172 to i64, !dbg !5531
  %arrayidx161 = getelementptr inbounds i32, i32* %170, i64 %idxprom160, !dbg !5531
  %173 = load i32, i32* %arrayidx161, align 4, !dbg !5531
  %174 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5535
  %num_static_tris = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %174, i32 0, i32 9, !dbg !5536
  store i32 %173, i32* %num_static_tris, align 8, !dbg !5537
  %175 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5538
  %preview_polys162 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %175, i32 0, i32 0, !dbg !5540
  %176 = load float*, float** %preview_polys162, align 8, !dbg !5540
  %tobool163 = icmp ne float* %176, null, !dbg !5538
  br i1 %tobool163, label %lor.lhs.false, label %if.then169, !dbg !5541

lor.lhs.false:                                    ; preds = %if.then127
  %177 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5542
  %preview_stitchable164 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %177, i32 0, i32 3, !dbg !5543
  %178 = load float*, float** %preview_stitchable164, align 8, !dbg !5543
  %tobool165 = icmp ne float* %178, null, !dbg !5542
  br i1 %tobool165, label %lor.lhs.false166, label %if.then169, !dbg !5544

lor.lhs.false166:                                 ; preds = %lor.lhs.false
  %179 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5545
  %preview_unstitchable167 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %179, i32 0, i32 4, !dbg !5546
  %180 = load float*, float** %preview_unstitchable167, align 8, !dbg !5546
  %tobool168 = icmp ne float* %180, null, !dbg !5545
  br i1 %tobool168, label %if.end170, label %if.then169, !dbg !5547

if.then169:                                       ; preds = %lor.lhs.false166, %lor.lhs.false, %if.then127
  store i32 0, i32* %retval, align 4, !dbg !5548
  br label %return, !dbg !5548

if.end170:                                        ; preds = %lor.lhs.false166
  %181 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5550
  %call171 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %181, i8 zeroext 3, i8* null), !dbg !5550
  %182 = bitcast i8* %call171 to %struct.BMFace*, !dbg !5550
  store %struct.BMFace* %182, %struct.BMFace** %efa, align 8, !dbg !5550
  br label %for.cond172, !dbg !5550

for.cond172:                                      ; preds = %for.inc259, %if.end170
  %183 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5552
  %tobool173 = icmp ne %struct.BMFace* %183, null, !dbg !5550
  br i1 %tobool173, label %for.body174, label %for.end261, !dbg !5550

for.body174:                                      ; preds = %for.cond172
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element175, metadata !5554, metadata !DIExpression()), !dbg !5556
  %184 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5557
  %element_map176 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %184, i32 0, i32 7, !dbg !5558
  %185 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map176, align 8, !dbg !5558
  %186 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5559
  %187 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5560
  %l_first = getelementptr inbounds %struct.BMFace, %struct.BMFace* %187, i32 0, i32 2, !dbg !5560
  %188 = load %struct.BMLoop*, %struct.BMLoop** %l_first, align 8, !dbg !5560
  %call177 = call %struct.UvElement* @BM_uv_element_get(%struct.UvElementMap* %185, %struct.BMFace* %186, %struct.BMLoop* %188), !dbg !5561
  store %struct.UvElement* %call177, %struct.UvElement** %element175, align 8, !dbg !5556
  %189 = load %struct.UvElement*, %struct.UvElement** %element175, align 8, !dbg !5562
  %tobool178 = icmp ne %struct.UvElement* %189, null, !dbg !5562
  br i1 %tobool178, label %if.then179, label %if.end258, !dbg !5564

if.then179:                                       ; preds = %for.body174
  call void @llvm.dbg.declare(metadata i32* %numoftris, metadata !5565, metadata !DIExpression()), !dbg !5567
  %190 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5568
  %len = getelementptr inbounds %struct.BMFace, %struct.BMFace* %190, i32 0, i32 3, !dbg !5569
  %191 = load i32, i32* %len, align 8, !dbg !5569
  %sub = sub nsw i32 %191, 2, !dbg !5570
  store i32 %sub, i32* %numoftris, align 4, !dbg !5567
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5571, metadata !DIExpression()), !dbg !5572
  %192 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5573
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %192, i32 0, i32 0, !dbg !5573
  %call180 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !5573
  store i32 %call180, i32* %index, align 4, !dbg !5572
  call void @llvm.dbg.declare(metadata i32* %face_preview_pos, metadata !5574, metadata !DIExpression()), !dbg !5575
  %193 = load %struct.PreviewPosition*, %struct.PreviewPosition** %preview_position, align 8, !dbg !5576
  %194 = load i32, i32* %index, align 4, !dbg !5577
  %idxprom181 = sext i32 %194 to i64, !dbg !5576
  %arrayidx182 = getelementptr inbounds %struct.PreviewPosition, %struct.PreviewPosition* %193, i64 %idxprom181, !dbg !5576
  %data_position183 = getelementptr inbounds %struct.PreviewPosition, %struct.PreviewPosition* %arrayidx182, i32 0, i32 0, !dbg !5578
  %195 = load i32, i32* %data_position183, align 4, !dbg !5578
  store i32 %195, i32* %face_preview_pos, align 4, !dbg !5575
  %196 = load i32, i32* %face_preview_pos, align 4, !dbg !5579
  %cmp184 = icmp ne i32 %196, -1, !dbg !5581
  br i1 %cmp184, label %if.then186, label %if.end207, !dbg !5582

if.then186:                                       ; preds = %if.then179
  %197 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5583
  %len187 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %197, i32 0, i32 3, !dbg !5585
  %198 = load i32, i32* %len187, align 8, !dbg !5585
  %199 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5586
  %uvs_per_polygon188 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %199, i32 0, i32 1, !dbg !5587
  %200 = load i32*, i32** %uvs_per_polygon188, align 8, !dbg !5587
  %201 = load %struct.PreviewPosition*, %struct.PreviewPosition** %preview_position, align 8, !dbg !5588
  %202 = load i32, i32* %index, align 4, !dbg !5589
  %idxprom189 = sext i32 %202 to i64, !dbg !5588
  %arrayidx190 = getelementptr inbounds %struct.PreviewPosition, %struct.PreviewPosition* %201, i64 %idxprom189, !dbg !5588
  %polycount_position = getelementptr inbounds %struct.PreviewPosition, %struct.PreviewPosition* %arrayidx190, i32 0, i32 1, !dbg !5590
  %203 = load i32, i32* %polycount_position, align 4, !dbg !5590
  %idxprom191 = sext i32 %203 to i64, !dbg !5586
  %arrayidx192 = getelementptr inbounds i32, i32* %200, i64 %idxprom191, !dbg !5586
  store i32 %198, i32* %arrayidx192, align 4, !dbg !5591
  %204 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5592
  %205 = bitcast %struct.BMFace* %204 to i8*, !dbg !5592
  %call193 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %205), !dbg !5592
  %206 = bitcast i8* %call193 to %struct.BMLoop*, !dbg !5592
  store %struct.BMLoop* %206, %struct.BMLoop** %l128, align 8, !dbg !5592
  store i32 0, i32* %i, align 4, !dbg !5592
  br label %for.cond194, !dbg !5592

for.cond194:                                      ; preds = %for.inc203, %if.then186
  %207 = load %struct.BMLoop*, %struct.BMLoop** %l128, align 8, !dbg !5594
  %tobool195 = icmp ne %struct.BMLoop* %207, null, !dbg !5592
  br i1 %tobool195, label %for.body196, label %for.end206, !dbg !5592

for.body196:                                      ; preds = %for.cond194
  %208 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5596
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %208, i32 0, i32 26, !dbg !5598
  %209 = load %struct.BMLoop*, %struct.BMLoop** %l128, align 8, !dbg !5599
  %head197 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %209, i32 0, i32 0, !dbg !5600
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head197, i32 0, i32 0, !dbg !5601
  %210 = load i8*, i8** %data, align 8, !dbg !5601
  %call198 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata, i8* %210, i32 16), !dbg !5602
  %211 = bitcast i8* %call198 to %struct.MLoopUV*, !dbg !5602
  store %struct.MLoopUV* %211, %struct.MLoopUV** %luv, align 8, !dbg !5603
  %212 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5604
  %preview_polys199 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %212, i32 0, i32 0, !dbg !5605
  %213 = load float*, float** %preview_polys199, align 8, !dbg !5605
  %214 = load i32, i32* %face_preview_pos, align 4, !dbg !5606
  %idx.ext = sext i32 %214 to i64, !dbg !5607
  %add.ptr = getelementptr inbounds float, float* %213, i64 %idx.ext, !dbg !5607
  %215 = load i32, i32* %i, align 4, !dbg !5608
  %mul200 = mul nsw i32 %215, 2, !dbg !5609
  %idx.ext201 = sext i32 %mul200 to i64, !dbg !5610
  %add.ptr202 = getelementptr inbounds float, float* %add.ptr, i64 %idx.ext201, !dbg !5610
  %216 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !5611
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %216, i32 0, i32 0, !dbg !5612
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !5611
  call void @copy_v2_v2(float* %add.ptr202, float* %arraydecay), !dbg !5613
  br label %for.inc203, !dbg !5614

for.inc203:                                       ; preds = %for.body196
  %call204 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !5594
  %217 = bitcast i8* %call204 to %struct.BMLoop*, !dbg !5594
  store %struct.BMLoop* %217, %struct.BMLoop** %l128, align 8, !dbg !5594
  %218 = load i32, i32* %i, align 4, !dbg !5594
  %inc205 = add nsw i32 %218, 1, !dbg !5594
  store i32 %inc205, i32* %i, align 4, !dbg !5594
  br label %for.cond194, !dbg !5594, !llvm.loop !5615

for.end206:                                       ; preds = %for.cond194
  br label %if.end207, !dbg !5617

if.end207:                                        ; preds = %for.end206, %if.then179
  %219 = load %struct.UvElement*, %struct.UvElement** %element175, align 8, !dbg !5618
  %island = getelementptr inbounds %struct.UvElement, %struct.UvElement* %219, i32 0, i32 5, !dbg !5620
  %220 = load i16, i16* %island, align 4, !dbg !5620
  %conv208 = zext i16 %220 to i32, !dbg !5618
  %221 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5621
  %static_island209 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %221, i32 0, i32 18, !dbg !5622
  %222 = load i32, i32* %static_island209, align 4, !dbg !5622
  %cmp210 = icmp eq i32 %conv208, %222, !dbg !5623
  br i1 %cmp210, label %if.then212, label %if.end257, !dbg !5624

if.then212:                                       ; preds = %if.end207
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %fl, metadata !5625, metadata !DIExpression()), !dbg !5627
  %223 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5628
  %l_first213 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %223, i32 0, i32 2, !dbg !5628
  %224 = load %struct.BMLoop*, %struct.BMLoop** %l_first213, align 8, !dbg !5628
  store %struct.BMLoop* %224, %struct.BMLoop** %fl, align 8, !dbg !5627
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %fuv, metadata !5629, metadata !DIExpression()), !dbg !5630
  %225 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5631
  %ldata214 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %225, i32 0, i32 26, !dbg !5632
  %226 = load %struct.BMLoop*, %struct.BMLoop** %fl, align 8, !dbg !5633
  %head215 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %226, i32 0, i32 0, !dbg !5634
  %data216 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head215, i32 0, i32 0, !dbg !5635
  %227 = load i8*, i8** %data216, align 8, !dbg !5635
  %call217 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata214, i8* %227, i32 16), !dbg !5636
  %228 = bitcast i8* %call217 to %struct.MLoopUV*, !dbg !5636
  store %struct.MLoopUV* %228, %struct.MLoopUV** %fuv, align 8, !dbg !5630
  %229 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5637
  %230 = bitcast %struct.BMFace* %229 to i8*, !dbg !5637
  %call218 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %230), !dbg !5637
  %231 = bitcast i8* %call218 to %struct.BMLoop*, !dbg !5637
  store %struct.BMLoop* %231, %struct.BMLoop** %l128, align 8, !dbg !5637
  store i32 0, i32* %i, align 4, !dbg !5637
  br label %for.cond219, !dbg !5637

for.cond219:                                      ; preds = %for.inc253, %if.then212
  %232 = load %struct.BMLoop*, %struct.BMLoop** %l128, align 8, !dbg !5639
  %tobool220 = icmp ne %struct.BMLoop* %232, null, !dbg !5637
  br i1 %tobool220, label %for.body221, label %for.end256, !dbg !5637

for.body221:                                      ; preds = %for.cond219
  %233 = load i32, i32* %i, align 4, !dbg !5641
  %234 = load i32, i32* %numoftris, align 4, !dbg !5644
  %cmp222 = icmp slt i32 %233, %234, !dbg !5645
  br i1 %cmp222, label %if.then224, label %if.else251, !dbg !5646

if.then224:                                       ; preds = %for.body221
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %lnext, metadata !5647, metadata !DIExpression()), !dbg !5649
  %235 = load %struct.BMLoop*, %struct.BMLoop** %l128, align 8, !dbg !5650
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %235, i32 0, i32 6, !dbg !5651
  %236 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !5651
  store %struct.BMLoop* %236, %struct.BMLoop** %lnext, align 8, !dbg !5649
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luvnext, metadata !5652, metadata !DIExpression()), !dbg !5653
  %237 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5654
  %ldata225 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %237, i32 0, i32 26, !dbg !5655
  %238 = load %struct.BMLoop*, %struct.BMLoop** %lnext, align 8, !dbg !5656
  %next226 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %238, i32 0, i32 6, !dbg !5657
  %239 = load %struct.BMLoop*, %struct.BMLoop** %next226, align 8, !dbg !5657
  %head227 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %239, i32 0, i32 0, !dbg !5658
  %data228 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head227, i32 0, i32 0, !dbg !5659
  %240 = load i8*, i8** %data228, align 8, !dbg !5659
  %call229 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata225, i8* %240, i32 16), !dbg !5660
  %241 = bitcast i8* %call229 to %struct.MLoopUV*, !dbg !5660
  store %struct.MLoopUV* %241, %struct.MLoopUV** %luvnext, align 8, !dbg !5653
  %242 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5661
  %ldata230 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %242, i32 0, i32 26, !dbg !5662
  %243 = load %struct.BMLoop*, %struct.BMLoop** %lnext, align 8, !dbg !5663
  %head231 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %243, i32 0, i32 0, !dbg !5664
  %data232 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head231, i32 0, i32 0, !dbg !5665
  %244 = load i8*, i8** %data232, align 8, !dbg !5665
  %call233 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata230, i8* %244, i32 16), !dbg !5666
  %245 = bitcast i8* %call233 to %struct.MLoopUV*, !dbg !5666
  store %struct.MLoopUV* %245, %struct.MLoopUV** %luv, align 8, !dbg !5667
  %246 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5668
  %static_tris234 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %246, i32 0, i32 8, !dbg !5669
  %247 = load float*, float** %static_tris234, align 8, !dbg !5669
  %248 = load i32, i32* %buffer_index, align 4, !dbg !5670
  %idx.ext235 = zext i32 %248 to i64, !dbg !5671
  %add.ptr236 = getelementptr inbounds float, float* %247, i64 %idx.ext235, !dbg !5671
  %249 = bitcast float* %add.ptr236 to i8*, !dbg !5672
  %250 = load %struct.MLoopUV*, %struct.MLoopUV** %fuv, align 8, !dbg !5673
  %uv237 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %250, i32 0, i32 0, !dbg !5674
  %arraydecay238 = getelementptr inbounds [2 x float], [2 x float]* %uv237, i64 0, i64 0, !dbg !5672
  %251 = bitcast float* %arraydecay238 to i8*, !dbg !5672
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %249, i8* align 4 %251, i64 8, i1 false), !dbg !5672
  %252 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5675
  %static_tris239 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %252, i32 0, i32 8, !dbg !5676
  %253 = load float*, float** %static_tris239, align 8, !dbg !5676
  %254 = load i32, i32* %buffer_index, align 4, !dbg !5677
  %idx.ext240 = zext i32 %254 to i64, !dbg !5678
  %add.ptr241 = getelementptr inbounds float, float* %253, i64 %idx.ext240, !dbg !5678
  %add.ptr242 = getelementptr inbounds float, float* %add.ptr241, i64 2, !dbg !5679
  %255 = bitcast float* %add.ptr242 to i8*, !dbg !5680
  %256 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !5681
  %uv243 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %256, i32 0, i32 0, !dbg !5682
  %arraydecay244 = getelementptr inbounds [2 x float], [2 x float]* %uv243, i64 0, i64 0, !dbg !5680
  %257 = bitcast float* %arraydecay244 to i8*, !dbg !5680
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %255, i8* align 4 %257, i64 8, i1 false), !dbg !5680
  %258 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5683
  %static_tris245 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %258, i32 0, i32 8, !dbg !5684
  %259 = load float*, float** %static_tris245, align 8, !dbg !5684
  %260 = load i32, i32* %buffer_index, align 4, !dbg !5685
  %idx.ext246 = zext i32 %260 to i64, !dbg !5686
  %add.ptr247 = getelementptr inbounds float, float* %259, i64 %idx.ext246, !dbg !5686
  %add.ptr248 = getelementptr inbounds float, float* %add.ptr247, i64 4, !dbg !5687
  %261 = bitcast float* %add.ptr248 to i8*, !dbg !5688
  %262 = load %struct.MLoopUV*, %struct.MLoopUV** %luvnext, align 8, !dbg !5689
  %uv249 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %262, i32 0, i32 0, !dbg !5690
  %arraydecay250 = getelementptr inbounds [2 x float], [2 x float]* %uv249, i64 0, i64 0, !dbg !5688
  %263 = bitcast float* %arraydecay250 to i8*, !dbg !5688
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %261, i8* align 4 %263, i64 8, i1 false), !dbg !5688
  %264 = load i32, i32* %buffer_index, align 4, !dbg !5691
  %add = add i32 %264, 6, !dbg !5691
  store i32 %add, i32* %buffer_index, align 4, !dbg !5691
  br label %if.end252, !dbg !5692

if.else251:                                       ; preds = %for.body221
  br label %for.end256, !dbg !5693

if.end252:                                        ; preds = %if.then224
  br label %for.inc253, !dbg !5695

for.inc253:                                       ; preds = %if.end252
  %call254 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !5639
  %265 = bitcast i8* %call254 to %struct.BMLoop*, !dbg !5639
  store %struct.BMLoop* %265, %struct.BMLoop** %l128, align 8, !dbg !5639
  %266 = load i32, i32* %i, align 4, !dbg !5639
  %inc255 = add nsw i32 %266, 1, !dbg !5639
  store i32 %inc255, i32* %i, align 4, !dbg !5639
  br label %for.cond219, !dbg !5639, !llvm.loop !5696

for.end256:                                       ; preds = %if.else251, %for.cond219
  br label %if.end257, !dbg !5698

if.end257:                                        ; preds = %for.end256, %if.end207
  br label %if.end258, !dbg !5699

if.end258:                                        ; preds = %if.end257, %for.body174
  br label %for.inc259, !dbg !5700

for.inc259:                                       ; preds = %if.end258
  %call260 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !5552
  %267 = bitcast i8* %call260 to %struct.BMFace*, !dbg !5552
  store %struct.BMFace* %267, %struct.BMFace** %efa, align 8, !dbg !5552
  br label %for.cond172, !dbg !5552, !llvm.loop !5701

for.end261:                                       ; preds = %for.cond172
  %268 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5703
  %mode262 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %268, i32 0, i32 20, !dbg !5705
  %269 = load i8, i8* %mode262, align 8, !dbg !5705
  %conv263 = zext i8 %269 to i32, !dbg !5703
  %cmp264 = icmp eq i32 %conv263, 0, !dbg !5706
  br i1 %cmp264, label %if.then266, label %if.else314, !dbg !5707

if.then266:                                       ; preds = %for.end261
  store i32 0, i32* %i, align 4, !dbg !5708
  br label %for.cond267, !dbg !5711

for.cond267:                                      ; preds = %for.inc311, %if.then266
  %270 = load i32, i32* %i, align 4, !dbg !5712
  %271 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5714
  %total_separate_uvs = getelementptr inbounds %struct.StitchState, %struct.StitchState* %271, i32 0, i32 15, !dbg !5715
  %272 = load i32, i32* %total_separate_uvs, align 4, !dbg !5715
  %cmp268 = icmp slt i32 %270, %272, !dbg !5716
  br i1 %cmp268, label %for.body270, label %for.end313, !dbg !5717

for.body270:                                      ; preds = %for.cond267
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element271, metadata !5718, metadata !DIExpression()), !dbg !5720
  %273 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5721
  %uvs = getelementptr inbounds %struct.StitchState, %struct.StitchState* %273, i32 0, i32 9, !dbg !5722
  %274 = load %struct.UvElement**, %struct.UvElement*** %uvs, align 8, !dbg !5722
  %275 = load i32, i32* %i, align 4, !dbg !5723
  %idxprom272 = sext i32 %275 to i64, !dbg !5721
  %arrayidx273 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %274, i64 %idxprom272, !dbg !5721
  %276 = load %struct.UvElement*, %struct.UvElement** %arrayidx273, align 8, !dbg !5721
  store %struct.UvElement* %276, %struct.UvElement** %element271, align 8, !dbg !5720
  %277 = load %struct.UvElement*, %struct.UvElement** %element271, align 8, !dbg !5724
  %flag274 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %277, i32 0, i32 4, !dbg !5726
  %278 = load i8, i8* %flag274, align 1, !dbg !5726
  %conv275 = zext i8 %278 to i32, !dbg !5724
  %and276 = and i32 %conv275, 2, !dbg !5727
  %tobool277 = icmp ne i32 %and276, 0, !dbg !5727
  br i1 %tobool277, label %if.then278, label %if.else291, !dbg !5728

if.then278:                                       ; preds = %for.body270
  %279 = load %struct.UvElement*, %struct.UvElement** %element271, align 8, !dbg !5729
  %l279 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %279, i32 0, i32 1, !dbg !5731
  %280 = load %struct.BMLoop*, %struct.BMLoop** %l279, align 8, !dbg !5731
  store %struct.BMLoop* %280, %struct.BMLoop** %l128, align 8, !dbg !5732
  %281 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5733
  %ldata280 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %281, i32 0, i32 26, !dbg !5734
  %282 = load %struct.BMLoop*, %struct.BMLoop** %l128, align 8, !dbg !5735
  %head281 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %282, i32 0, i32 0, !dbg !5736
  %data282 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head281, i32 0, i32 0, !dbg !5737
  %283 = load i8*, i8** %data282, align 8, !dbg !5737
  %call283 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata280, i8* %283, i32 16), !dbg !5738
  %284 = bitcast i8* %call283 to %struct.MLoopUV*, !dbg !5738
  store %struct.MLoopUV* %284, %struct.MLoopUV** %luv, align 8, !dbg !5739
  %285 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5740
  %preview_stitchable284 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %285, i32 0, i32 3, !dbg !5741
  %286 = load float*, float** %preview_stitchable284, align 8, !dbg !5741
  %287 = load i32, i32* %stitchBufferIndex, align 4, !dbg !5742
  %mul285 = mul nsw i32 %287, 2, !dbg !5743
  %idxprom286 = sext i32 %mul285 to i64, !dbg !5740
  %arrayidx287 = getelementptr inbounds float, float* %286, i64 %idxprom286, !dbg !5740
  %288 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !5744
  %uv288 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %288, i32 0, i32 0, !dbg !5745
  %arraydecay289 = getelementptr inbounds [2 x float], [2 x float]* %uv288, i64 0, i64 0, !dbg !5744
  call void @copy_v2_v2(float* %arrayidx287, float* %arraydecay289), !dbg !5746
  %289 = load i32, i32* %stitchBufferIndex, align 4, !dbg !5747
  %inc290 = add nsw i32 %289, 1, !dbg !5747
  store i32 %inc290, i32* %stitchBufferIndex, align 4, !dbg !5747
  br label %if.end310, !dbg !5748

if.else291:                                       ; preds = %for.body270
  %290 = load %struct.UvElement*, %struct.UvElement** %element271, align 8, !dbg !5749
  %flag292 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %290, i32 0, i32 4, !dbg !5751
  %291 = load i8, i8* %flag292, align 1, !dbg !5751
  %conv293 = zext i8 %291 to i32, !dbg !5749
  %and294 = and i32 %conv293, 1, !dbg !5752
  %tobool295 = icmp ne i32 %and294, 0, !dbg !5752
  br i1 %tobool295, label %if.then296, label %if.end309, !dbg !5753

if.then296:                                       ; preds = %if.else291
  %292 = load %struct.UvElement*, %struct.UvElement** %element271, align 8, !dbg !5754
  %l297 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %292, i32 0, i32 1, !dbg !5756
  %293 = load %struct.BMLoop*, %struct.BMLoop** %l297, align 8, !dbg !5756
  store %struct.BMLoop* %293, %struct.BMLoop** %l128, align 8, !dbg !5757
  %294 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5758
  %ldata298 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %294, i32 0, i32 26, !dbg !5759
  %295 = load %struct.BMLoop*, %struct.BMLoop** %l128, align 8, !dbg !5760
  %head299 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %295, i32 0, i32 0, !dbg !5761
  %data300 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head299, i32 0, i32 0, !dbg !5762
  %296 = load i8*, i8** %data300, align 8, !dbg !5762
  %call301 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata298, i8* %296, i32 16), !dbg !5763
  %297 = bitcast i8* %call301 to %struct.MLoopUV*, !dbg !5763
  store %struct.MLoopUV* %297, %struct.MLoopUV** %luv, align 8, !dbg !5764
  %298 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5765
  %preview_unstitchable302 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %298, i32 0, i32 4, !dbg !5766
  %299 = load float*, float** %preview_unstitchable302, align 8, !dbg !5766
  %300 = load i32, i32* %unstitchBufferIndex, align 4, !dbg !5767
  %mul303 = mul nsw i32 %300, 2, !dbg !5768
  %idxprom304 = sext i32 %mul303 to i64, !dbg !5765
  %arrayidx305 = getelementptr inbounds float, float* %299, i64 %idxprom304, !dbg !5765
  %301 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !5769
  %uv306 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %301, i32 0, i32 0, !dbg !5770
  %arraydecay307 = getelementptr inbounds [2 x float], [2 x float]* %uv306, i64 0, i64 0, !dbg !5769
  call void @copy_v2_v2(float* %arrayidx305, float* %arraydecay307), !dbg !5771
  %302 = load i32, i32* %unstitchBufferIndex, align 4, !dbg !5772
  %inc308 = add nsw i32 %302, 1, !dbg !5772
  store i32 %inc308, i32* %unstitchBufferIndex, align 4, !dbg !5772
  br label %if.end309, !dbg !5773

if.end309:                                        ; preds = %if.then296, %if.else291
  br label %if.end310

if.end310:                                        ; preds = %if.end309, %if.then278
  br label %for.inc311, !dbg !5774

for.inc311:                                       ; preds = %if.end310
  %303 = load i32, i32* %i, align 4, !dbg !5775
  %inc312 = add nsw i32 %303, 1, !dbg !5775
  store i32 %inc312, i32* %i, align 4, !dbg !5775
  br label %for.cond267, !dbg !5776, !llvm.loop !5777

for.end313:                                       ; preds = %for.cond267
  br label %if.end392, !dbg !5779

if.else314:                                       ; preds = %for.end261
  store i32 0, i32* %i, align 4, !dbg !5780
  br label %for.cond315, !dbg !5783

for.cond315:                                      ; preds = %for.inc389, %if.else314
  %304 = load i32, i32* %i, align 4, !dbg !5784
  %305 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5786
  %total_separate_edges = getelementptr inbounds %struct.StitchState, %struct.StitchState* %305, i32 0, i32 14, !dbg !5787
  %306 = load i32, i32* %total_separate_edges, align 8, !dbg !5787
  %cmp316 = icmp slt i32 %304, %306, !dbg !5788
  br i1 %cmp316, label %for.body318, label %for.end391, !dbg !5789

for.body318:                                      ; preds = %for.cond315
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge319, metadata !5790, metadata !DIExpression()), !dbg !5792
  %307 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5793
  %edges = getelementptr inbounds %struct.StitchState, %struct.StitchState* %307, i32 0, i32 12, !dbg !5794
  %308 = load %struct.UvEdge*, %struct.UvEdge** %edges, align 8, !dbg !5794
  %309 = load i32, i32* %i, align 4, !dbg !5795
  %idx.ext320 = sext i32 %309 to i64, !dbg !5796
  %add.ptr321 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %308, i64 %idx.ext320, !dbg !5796
  store %struct.UvEdge* %add.ptr321, %struct.UvEdge** %edge319, align 8, !dbg !5792
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element1, metadata !5797, metadata !DIExpression()), !dbg !5798
  %310 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5799
  %uvs322 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %310, i32 0, i32 9, !dbg !5800
  %311 = load %struct.UvElement**, %struct.UvElement*** %uvs322, align 8, !dbg !5800
  %312 = load %struct.UvEdge*, %struct.UvEdge** %edge319, align 8, !dbg !5801
  %uv1 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %312, i32 0, i32 0, !dbg !5802
  %313 = load i32, i32* %uv1, align 8, !dbg !5802
  %idxprom323 = zext i32 %313 to i64, !dbg !5799
  %arrayidx324 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %311, i64 %idxprom323, !dbg !5799
  %314 = load %struct.UvElement*, %struct.UvElement** %arrayidx324, align 8, !dbg !5799
  store %struct.UvElement* %314, %struct.UvElement** %element1, align 8, !dbg !5798
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element2, metadata !5803, metadata !DIExpression()), !dbg !5804
  %315 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5805
  %uvs325 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %315, i32 0, i32 9, !dbg !5806
  %316 = load %struct.UvElement**, %struct.UvElement*** %uvs325, align 8, !dbg !5806
  %317 = load %struct.UvEdge*, %struct.UvEdge** %edge319, align 8, !dbg !5807
  %uv2 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %317, i32 0, i32 1, !dbg !5808
  %318 = load i32, i32* %uv2, align 4, !dbg !5808
  %idxprom326 = zext i32 %318 to i64, !dbg !5805
  %arrayidx327 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %316, i64 %idxprom326, !dbg !5805
  %319 = load %struct.UvElement*, %struct.UvElement** %arrayidx327, align 8, !dbg !5805
  store %struct.UvElement* %319, %struct.UvElement** %element2, align 8, !dbg !5804
  %320 = load %struct.UvEdge*, %struct.UvEdge** %edge319, align 8, !dbg !5809
  %flag328 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %320, i32 0, i32 2, !dbg !5811
  %321 = load i8, i8* %flag328, align 8, !dbg !5811
  %conv329 = zext i8 %321 to i32, !dbg !5809
  %and330 = and i32 %conv329, 2, !dbg !5812
  %tobool331 = icmp ne i32 %and330, 0, !dbg !5812
  br i1 %tobool331, label %if.then332, label %if.else357, !dbg !5813

if.then332:                                       ; preds = %for.body318
  %322 = load %struct.UvElement*, %struct.UvElement** %element1, align 8, !dbg !5814
  %l333 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %322, i32 0, i32 1, !dbg !5816
  %323 = load %struct.BMLoop*, %struct.BMLoop** %l333, align 8, !dbg !5816
  store %struct.BMLoop* %323, %struct.BMLoop** %l128, align 8, !dbg !5817
  %324 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5818
  %ldata334 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %324, i32 0, i32 26, !dbg !5819
  %325 = load %struct.BMLoop*, %struct.BMLoop** %l128, align 8, !dbg !5820
  %head335 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %325, i32 0, i32 0, !dbg !5821
  %data336 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head335, i32 0, i32 0, !dbg !5822
  %326 = load i8*, i8** %data336, align 8, !dbg !5822
  %call337 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata334, i8* %326, i32 16), !dbg !5823
  %327 = bitcast i8* %call337 to %struct.MLoopUV*, !dbg !5823
  store %struct.MLoopUV* %327, %struct.MLoopUV** %luv, align 8, !dbg !5824
  %328 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5825
  %preview_stitchable338 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %328, i32 0, i32 3, !dbg !5826
  %329 = load float*, float** %preview_stitchable338, align 8, !dbg !5826
  %330 = load i32, i32* %stitchBufferIndex, align 4, !dbg !5827
  %mul339 = mul nsw i32 %330, 4, !dbg !5828
  %idxprom340 = sext i32 %mul339 to i64, !dbg !5825
  %arrayidx341 = getelementptr inbounds float, float* %329, i64 %idxprom340, !dbg !5825
  %331 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !5829
  %uv342 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %331, i32 0, i32 0, !dbg !5830
  %arraydecay343 = getelementptr inbounds [2 x float], [2 x float]* %uv342, i64 0, i64 0, !dbg !5829
  call void @copy_v2_v2(float* %arrayidx341, float* %arraydecay343), !dbg !5831
  %332 = load %struct.UvElement*, %struct.UvElement** %element2, align 8, !dbg !5832
  %l344 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %332, i32 0, i32 1, !dbg !5833
  %333 = load %struct.BMLoop*, %struct.BMLoop** %l344, align 8, !dbg !5833
  store %struct.BMLoop* %333, %struct.BMLoop** %l128, align 8, !dbg !5834
  %334 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5835
  %ldata345 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %334, i32 0, i32 26, !dbg !5836
  %335 = load %struct.BMLoop*, %struct.BMLoop** %l128, align 8, !dbg !5837
  %head346 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %335, i32 0, i32 0, !dbg !5838
  %data347 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head346, i32 0, i32 0, !dbg !5839
  %336 = load i8*, i8** %data347, align 8, !dbg !5839
  %call348 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata345, i8* %336, i32 16), !dbg !5840
  %337 = bitcast i8* %call348 to %struct.MLoopUV*, !dbg !5840
  store %struct.MLoopUV* %337, %struct.MLoopUV** %luv, align 8, !dbg !5841
  %338 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5842
  %preview_stitchable349 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %338, i32 0, i32 3, !dbg !5843
  %339 = load float*, float** %preview_stitchable349, align 8, !dbg !5843
  %340 = load i32, i32* %stitchBufferIndex, align 4, !dbg !5844
  %mul350 = mul nsw i32 %340, 4, !dbg !5845
  %add351 = add nsw i32 %mul350, 2, !dbg !5846
  %idxprom352 = sext i32 %add351 to i64, !dbg !5842
  %arrayidx353 = getelementptr inbounds float, float* %339, i64 %idxprom352, !dbg !5842
  %341 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !5847
  %uv354 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %341, i32 0, i32 0, !dbg !5848
  %arraydecay355 = getelementptr inbounds [2 x float], [2 x float]* %uv354, i64 0, i64 0, !dbg !5847
  call void @copy_v2_v2(float* %arrayidx353, float* %arraydecay355), !dbg !5849
  %342 = load i32, i32* %stitchBufferIndex, align 4, !dbg !5850
  %inc356 = add nsw i32 %342, 1, !dbg !5850
  store i32 %inc356, i32* %stitchBufferIndex, align 4, !dbg !5850
  br label %if.end388, !dbg !5851

if.else357:                                       ; preds = %for.body318
  %343 = load %struct.UvEdge*, %struct.UvEdge** %edge319, align 8, !dbg !5852
  %flag358 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %343, i32 0, i32 2, !dbg !5854
  %344 = load i8, i8* %flag358, align 8, !dbg !5854
  %conv359 = zext i8 %344 to i32, !dbg !5852
  %and360 = and i32 %conv359, 1, !dbg !5855
  %tobool361 = icmp ne i32 %and360, 0, !dbg !5855
  br i1 %tobool361, label %if.then362, label %if.end387, !dbg !5856

if.then362:                                       ; preds = %if.else357
  %345 = load %struct.UvElement*, %struct.UvElement** %element1, align 8, !dbg !5857
  %l363 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %345, i32 0, i32 1, !dbg !5859
  %346 = load %struct.BMLoop*, %struct.BMLoop** %l363, align 8, !dbg !5859
  store %struct.BMLoop* %346, %struct.BMLoop** %l128, align 8, !dbg !5860
  %347 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5861
  %ldata364 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %347, i32 0, i32 26, !dbg !5862
  %348 = load %struct.BMLoop*, %struct.BMLoop** %l128, align 8, !dbg !5863
  %head365 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %348, i32 0, i32 0, !dbg !5864
  %data366 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head365, i32 0, i32 0, !dbg !5865
  %349 = load i8*, i8** %data366, align 8, !dbg !5865
  %call367 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata364, i8* %349, i32 16), !dbg !5866
  %350 = bitcast i8* %call367 to %struct.MLoopUV*, !dbg !5866
  store %struct.MLoopUV* %350, %struct.MLoopUV** %luv, align 8, !dbg !5867
  %351 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5868
  %preview_unstitchable368 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %351, i32 0, i32 4, !dbg !5869
  %352 = load float*, float** %preview_unstitchable368, align 8, !dbg !5869
  %353 = load i32, i32* %unstitchBufferIndex, align 4, !dbg !5870
  %mul369 = mul nsw i32 %353, 4, !dbg !5871
  %idxprom370 = sext i32 %mul369 to i64, !dbg !5868
  %arrayidx371 = getelementptr inbounds float, float* %352, i64 %idxprom370, !dbg !5868
  %354 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !5872
  %uv372 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %354, i32 0, i32 0, !dbg !5873
  %arraydecay373 = getelementptr inbounds [2 x float], [2 x float]* %uv372, i64 0, i64 0, !dbg !5872
  call void @copy_v2_v2(float* %arrayidx371, float* %arraydecay373), !dbg !5874
  %355 = load %struct.UvElement*, %struct.UvElement** %element2, align 8, !dbg !5875
  %l374 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %355, i32 0, i32 1, !dbg !5876
  %356 = load %struct.BMLoop*, %struct.BMLoop** %l374, align 8, !dbg !5876
  store %struct.BMLoop* %356, %struct.BMLoop** %l128, align 8, !dbg !5877
  %357 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5878
  %ldata375 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %357, i32 0, i32 26, !dbg !5879
  %358 = load %struct.BMLoop*, %struct.BMLoop** %l128, align 8, !dbg !5880
  %head376 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %358, i32 0, i32 0, !dbg !5881
  %data377 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head376, i32 0, i32 0, !dbg !5882
  %359 = load i8*, i8** %data377, align 8, !dbg !5882
  %call378 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata375, i8* %359, i32 16), !dbg !5883
  %360 = bitcast i8* %call378 to %struct.MLoopUV*, !dbg !5883
  store %struct.MLoopUV* %360, %struct.MLoopUV** %luv, align 8, !dbg !5884
  %361 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !5885
  %preview_unstitchable379 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %361, i32 0, i32 4, !dbg !5886
  %362 = load float*, float** %preview_unstitchable379, align 8, !dbg !5886
  %363 = load i32, i32* %unstitchBufferIndex, align 4, !dbg !5887
  %mul380 = mul nsw i32 %363, 4, !dbg !5888
  %add381 = add nsw i32 %mul380, 2, !dbg !5889
  %idxprom382 = sext i32 %add381 to i64, !dbg !5885
  %arrayidx383 = getelementptr inbounds float, float* %362, i64 %idxprom382, !dbg !5885
  %364 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !5890
  %uv384 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %364, i32 0, i32 0, !dbg !5891
  %arraydecay385 = getelementptr inbounds [2 x float], [2 x float]* %uv384, i64 0, i64 0, !dbg !5890
  call void @copy_v2_v2(float* %arrayidx383, float* %arraydecay385), !dbg !5892
  %365 = load i32, i32* %unstitchBufferIndex, align 4, !dbg !5893
  %inc386 = add nsw i32 %365, 1, !dbg !5893
  store i32 %inc386, i32* %unstitchBufferIndex, align 4, !dbg !5893
  br label %if.end387, !dbg !5894

if.end387:                                        ; preds = %if.then362, %if.else357
  br label %if.end388

if.end388:                                        ; preds = %if.end387, %if.then332
  br label %for.inc389, !dbg !5895

for.inc389:                                       ; preds = %if.end388
  %366 = load i32, i32* %i, align 4, !dbg !5896
  %inc390 = add nsw i32 %366, 1, !dbg !5896
  store i32 %inc390, i32* %i, align 4, !dbg !5896
  br label %for.cond315, !dbg !5897, !llvm.loop !5898

for.end391:                                       ; preds = %for.cond315
  br label %if.end392

if.end392:                                        ; preds = %for.end391, %for.end313
  br label %if.end393, !dbg !5900

if.end393:                                        ; preds = %if.end392, %if.end125
  %367 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5901
  %mode394 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %367, i32 0, i32 20, !dbg !5903
  %368 = load i8, i8* %mode394, align 8, !dbg !5903
  %conv395 = zext i8 %368 to i32, !dbg !5901
  %cmp396 = icmp eq i32 %conv395, 0, !dbg !5904
  br i1 %cmp396, label %if.then398, label %if.else407, !dbg !5905

if.then398:                                       ; preds = %if.end393
  %369 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5906
  %370 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5908
  %selection_size399 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %370, i32 0, i32 17, !dbg !5909
  %371 = load i32, i32* %selection_size399, align 8, !dbg !5909
  %conv400 = sext i32 %371 to i64, !dbg !5908
  %mul401 = mul i64 %conv400, 12, !dbg !5910
  %call402 = call i8* %369(i64 %mul401, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i64 0, i64 0)), !dbg !5906
  %372 = bitcast i8* %call402 to %struct.UVVertAverage*, !dbg !5906
  store %struct.UVVertAverage* %372, %struct.UVVertAverage** %final_position, align 8, !dbg !5911
  %373 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5912
  %374 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5913
  %element_map403 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %374, i32 0, i32 7, !dbg !5914
  %375 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map403, align 8, !dbg !5914
  %totalUVs = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %375, i32 0, i32 2, !dbg !5915
  %376 = load i32, i32* %totalUVs, align 8, !dbg !5915
  %conv404 = sext i32 %376 to i64, !dbg !5913
  %mul405 = mul i64 %conv404, 4, !dbg !5916
  %call406 = call i8* %373(i64 %mul405, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.53, i64 0, i64 0)), !dbg !5912
  %377 = bitcast i8* %call406 to i32*, !dbg !5912
  store i32* %377, i32** %uvfinal_map, align 8, !dbg !5917
  br label %if.end412, !dbg !5918

if.else407:                                       ; preds = %if.end393
  %378 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5919
  %379 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5921
  %total_separate_uvs408 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %379, i32 0, i32 15, !dbg !5922
  %380 = load i32, i32* %total_separate_uvs408, align 4, !dbg !5922
  %conv409 = sext i32 %380 to i64, !dbg !5921
  %mul410 = mul i64 %conv409, 12, !dbg !5923
  %call411 = call i8* %378(i64 %mul410, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i64 0, i64 0)), !dbg !5919
  %381 = bitcast i8* %call411 to %struct.UVVertAverage*, !dbg !5919
  store %struct.UVVertAverage* %381, %struct.UVVertAverage** %final_position, align 8, !dbg !5924
  br label %if.end412

if.end412:                                        ; preds = %if.else407, %if.then398
  store i32 0, i32* %i, align 4, !dbg !5925
  br label %for.cond413, !dbg !5927

for.cond413:                                      ; preds = %for.inc695, %if.end412
  %382 = load i32, i32* %i, align 4, !dbg !5928
  %383 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5930
  %selection_size414 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %383, i32 0, i32 17, !dbg !5931
  %384 = load i32, i32* %selection_size414, align 8, !dbg !5931
  %cmp415 = icmp slt i32 %382, %384, !dbg !5932
  br i1 %cmp415, label %for.body417, label %for.end697, !dbg !5933

for.body417:                                      ; preds = %for.cond413
  %385 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5934
  %mode418 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %385, i32 0, i32 20, !dbg !5937
  %386 = load i8, i8* %mode418, align 8, !dbg !5937
  %conv419 = zext i8 %386 to i32, !dbg !5934
  %cmp420 = icmp eq i32 %conv419, 0, !dbg !5938
  br i1 %cmp420, label %if.then422, label %if.else535, !dbg !5939

if.then422:                                       ; preds = %for.body417
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element423, metadata !5940, metadata !DIExpression()), !dbg !5942
  %387 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5943
  %selection_stack424 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %387, i32 0, i32 16, !dbg !5944
  %388 = load i8**, i8*** %selection_stack424, align 8, !dbg !5944
  %389 = load i32, i32* %i, align 4, !dbg !5945
  %idxprom425 = sext i32 %389 to i64, !dbg !5943
  %arrayidx426 = getelementptr inbounds i8*, i8** %388, i64 %idxprom425, !dbg !5943
  %390 = load i8*, i8** %arrayidx426, align 8, !dbg !5943
  %391 = bitcast i8* %390 to %struct.UvElement*, !dbg !5943
  store %struct.UvElement* %391, %struct.UvElement** %element423, align 8, !dbg !5942
  %392 = load %struct.UvElement*, %struct.UvElement** %element423, align 8, !dbg !5946
  %flag427 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %392, i32 0, i32 4, !dbg !5948
  %393 = load i8, i8* %flag427, align 1, !dbg !5948
  %conv428 = zext i8 %393 to i32, !dbg !5946
  %and429 = and i32 %conv428, 2, !dbg !5949
  %tobool430 = icmp ne i32 %and429, 0, !dbg !5949
  br i1 %tobool430, label %if.then431, label %if.end512, !dbg !5950

if.then431:                                       ; preds = %if.then422
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l432, metadata !5951, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv433, metadata !5954, metadata !DIExpression()), !dbg !5955
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element_iter, metadata !5956, metadata !DIExpression()), !dbg !5957
  %394 = load %struct.UvElement*, %struct.UvElement** %element423, align 8, !dbg !5958
  %l434 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %394, i32 0, i32 1, !dbg !5959
  %395 = load %struct.BMLoop*, %struct.BMLoop** %l434, align 8, !dbg !5959
  store %struct.BMLoop* %395, %struct.BMLoop** %l432, align 8, !dbg !5960
  %396 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5961
  %ldata435 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %396, i32 0, i32 26, !dbg !5962
  %397 = load %struct.BMLoop*, %struct.BMLoop** %l432, align 8, !dbg !5963
  %head436 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %397, i32 0, i32 0, !dbg !5964
  %data437 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head436, i32 0, i32 0, !dbg !5965
  %398 = load i8*, i8** %data437, align 8, !dbg !5965
  %call438 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata435, i8* %398, i32 16), !dbg !5966
  %399 = bitcast i8* %call438 to %struct.MLoopUV*, !dbg !5966
  store %struct.MLoopUV* %399, %struct.MLoopUV** %luv433, align 8, !dbg !5967
  %400 = load i32, i32* %i, align 4, !dbg !5968
  %401 = load i32*, i32** %uvfinal_map, align 8, !dbg !5969
  %402 = load %struct.UvElement*, %struct.UvElement** %element423, align 8, !dbg !5970
  %403 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5971
  %element_map439 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %403, i32 0, i32 7, !dbg !5972
  %404 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map439, align 8, !dbg !5972
  %buf440 = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %404, i32 0, i32 1, !dbg !5973
  %405 = load %struct.UvElement*, %struct.UvElement** %buf440, align 8, !dbg !5973
  %sub.ptr.lhs.cast = ptrtoint %struct.UvElement* %402 to i64, !dbg !5974
  %sub.ptr.rhs.cast = ptrtoint %struct.UvElement* %405 to i64, !dbg !5974
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5974
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24, !dbg !5974
  %arrayidx441 = getelementptr inbounds i32, i32* %401, i64 %sub.ptr.div, !dbg !5969
  store i32 %400, i32* %arrayidx441, align 4, !dbg !5975
  %406 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !5976
  %407 = load i32, i32* %i, align 4, !dbg !5977
  %idxprom442 = sext i32 %407 to i64, !dbg !5976
  %arrayidx443 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %406, i64 %idxprom442, !dbg !5976
  %uv444 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx443, i32 0, i32 0, !dbg !5978
  %arraydecay445 = getelementptr inbounds [2 x float], [2 x float]* %uv444, i64 0, i64 0, !dbg !5976
  %408 = load %struct.MLoopUV*, %struct.MLoopUV** %luv433, align 8, !dbg !5979
  %uv446 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %408, i32 0, i32 0, !dbg !5980
  %arraydecay447 = getelementptr inbounds [2 x float], [2 x float]* %uv446, i64 0, i64 0, !dbg !5979
  call void @copy_v2_v2(float* %arraydecay445, float* %arraydecay447), !dbg !5981
  %409 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !5982
  %410 = load i32, i32* %i, align 4, !dbg !5983
  %idxprom448 = sext i32 %410 to i64, !dbg !5982
  %arrayidx449 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %409, i64 %idxprom448, !dbg !5982
  %count = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx449, i32 0, i32 1, !dbg !5984
  store i16 1, i16* %count, align 4, !dbg !5985
  %411 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5986
  %snap_islands450 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %411, i32 0, i32 3, !dbg !5988
  %412 = load i8, i8* %snap_islands450, align 4, !dbg !5988
  %conv451 = zext i8 %412 to i32, !dbg !5986
  %tobool452 = icmp ne i32 %conv451, 0, !dbg !5986
  br i1 %tobool452, label %land.lhs.true, label %if.end461, !dbg !5989

land.lhs.true:                                    ; preds = %if.then431
  %413 = load %struct.UvElement*, %struct.UvElement** %element423, align 8, !dbg !5990
  %island453 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %413, i32 0, i32 5, !dbg !5991
  %414 = load i16, i16* %island453, align 4, !dbg !5991
  %conv454 = zext i16 %414 to i32, !dbg !5990
  %415 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5992
  %static_island455 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %415, i32 0, i32 18, !dbg !5993
  %416 = load i32, i32* %static_island455, align 4, !dbg !5993
  %cmp456 = icmp eq i32 %conv454, %416, !dbg !5994
  br i1 %cmp456, label %land.lhs.true458, label %if.end461, !dbg !5995

land.lhs.true458:                                 ; preds = %land.lhs.true
  %417 = load i8, i8* %stitch_midpoints, align 1, !dbg !5996
  %tobool459 = icmp ne i8 %417, 0, !dbg !5996
  br i1 %tobool459, label %if.end461, label %if.then460, !dbg !5997

if.then460:                                       ; preds = %land.lhs.true458
  br label %for.inc695, !dbg !5998

if.end461:                                        ; preds = %land.lhs.true458, %land.lhs.true, %if.then431
  %418 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !5999
  %element_map462 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %418, i32 0, i32 7, !dbg !6000
  %419 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map462, align 8, !dbg !6000
  %vert = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %419, i32 0, i32 0, !dbg !6001
  %420 = load %struct.UvElement**, %struct.UvElement*** %vert, align 8, !dbg !6001
  %421 = load %struct.BMLoop*, %struct.BMLoop** %l432, align 8, !dbg !6002
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %421, i32 0, i32 1, !dbg !6002
  %422 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !6002
  %head463 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %422, i32 0, i32 0, !dbg !6002
  %call464 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head463), !dbg !6002
  %idxprom465 = sext i32 %call464 to i64, !dbg !5999
  %arrayidx466 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %420, i64 %idxprom465, !dbg !5999
  %423 = load %struct.UvElement*, %struct.UvElement** %arrayidx466, align 8, !dbg !5999
  store %struct.UvElement* %423, %struct.UvElement** %element_iter, align 8, !dbg !6003
  br label %for.cond467, !dbg !6004

for.cond467:                                      ; preds = %for.inc509, %if.end461
  %424 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !6005
  %tobool468 = icmp ne %struct.UvElement* %424, null, !dbg !6008
  br i1 %tobool468, label %for.body469, label %for.end511, !dbg !6008

for.body469:                                      ; preds = %for.cond467
  %425 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !6009
  %separate = getelementptr inbounds %struct.UvElement, %struct.UvElement* %425, i32 0, i32 3, !dbg !6012
  %426 = load i8, i8* %separate, align 2, !dbg !6012
  %tobool470 = icmp ne i8 %426, 0, !dbg !6009
  br i1 %tobool470, label %if.then471, label %if.end508, !dbg !6013

if.then471:                                       ; preds = %for.body469
  %427 = load %struct.UvElement*, %struct.UvElement** %element423, align 8, !dbg !6014
  %428 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !6017
  %429 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6018
  %call472 = call zeroext i8 @stitch_check_uvs_state_stitchable(%struct.UvElement* %427, %struct.UvElement* %428, %struct.StitchState* %429), !dbg !6019
  %tobool473 = icmp ne i8 %call472, 0, !dbg !6019
  br i1 %tobool473, label %if.then474, label %if.end507, !dbg !6020

if.then474:                                       ; preds = %if.then471
  %430 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !6021
  %l475 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %430, i32 0, i32 1, !dbg !6023
  %431 = load %struct.BMLoop*, %struct.BMLoop** %l475, align 8, !dbg !6023
  store %struct.BMLoop* %431, %struct.BMLoop** %l432, align 8, !dbg !6024
  %432 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6025
  %ldata476 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %432, i32 0, i32 26, !dbg !6026
  %433 = load %struct.BMLoop*, %struct.BMLoop** %l432, align 8, !dbg !6027
  %head477 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %433, i32 0, i32 0, !dbg !6028
  %data478 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head477, i32 0, i32 0, !dbg !6029
  %434 = load i8*, i8** %data478, align 8, !dbg !6029
  %call479 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata476, i8* %434, i32 16), !dbg !6030
  %435 = bitcast i8* %call479 to %struct.MLoopUV*, !dbg !6030
  store %struct.MLoopUV* %435, %struct.MLoopUV** %luv433, align 8, !dbg !6031
  %436 = load i8, i8* %stitch_midpoints, align 1, !dbg !6032
  %tobool480 = icmp ne i8 %436, 0, !dbg !6032
  br i1 %tobool480, label %if.then481, label %if.else492, !dbg !6034

if.then481:                                       ; preds = %if.then474
  %437 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6035
  %438 = load i32, i32* %i, align 4, !dbg !6037
  %idxprom482 = sext i32 %438 to i64, !dbg !6035
  %arrayidx483 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %437, i64 %idxprom482, !dbg !6035
  %uv484 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx483, i32 0, i32 0, !dbg !6038
  %arraydecay485 = getelementptr inbounds [2 x float], [2 x float]* %uv484, i64 0, i64 0, !dbg !6035
  %439 = load %struct.MLoopUV*, %struct.MLoopUV** %luv433, align 8, !dbg !6039
  %uv486 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %439, i32 0, i32 0, !dbg !6040
  %arraydecay487 = getelementptr inbounds [2 x float], [2 x float]* %uv486, i64 0, i64 0, !dbg !6039
  call void @add_v2_v2(float* %arraydecay485, float* %arraydecay487), !dbg !6041
  %440 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6042
  %441 = load i32, i32* %i, align 4, !dbg !6043
  %idxprom488 = sext i32 %441 to i64, !dbg !6042
  %arrayidx489 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %440, i64 %idxprom488, !dbg !6042
  %count490 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx489, i32 0, i32 1, !dbg !6044
  %442 = load i16, i16* %count490, align 4, !dbg !6045
  %inc491 = add i16 %442, 1, !dbg !6045
  store i16 %inc491, i16* %count490, align 4, !dbg !6045
  br label %if.end506, !dbg !6046

if.else492:                                       ; preds = %if.then474
  %443 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !6047
  %island493 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %443, i32 0, i32 5, !dbg !6049
  %444 = load i16, i16* %island493, align 4, !dbg !6049
  %conv494 = zext i16 %444 to i32, !dbg !6047
  %445 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6050
  %static_island495 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %445, i32 0, i32 18, !dbg !6051
  %446 = load i32, i32* %static_island495, align 4, !dbg !6051
  %cmp496 = icmp eq i32 %conv494, %446, !dbg !6052
  br i1 %cmp496, label %if.then498, label %if.end505, !dbg !6053

if.then498:                                       ; preds = %if.else492
  %447 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6054
  %448 = load i32, i32* %i, align 4, !dbg !6056
  %idxprom499 = sext i32 %448 to i64, !dbg !6054
  %arrayidx500 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %447, i64 %idxprom499, !dbg !6054
  %uv501 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx500, i32 0, i32 0, !dbg !6057
  %arraydecay502 = getelementptr inbounds [2 x float], [2 x float]* %uv501, i64 0, i64 0, !dbg !6054
  %449 = load %struct.MLoopUV*, %struct.MLoopUV** %luv433, align 8, !dbg !6058
  %uv503 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %449, i32 0, i32 0, !dbg !6059
  %arraydecay504 = getelementptr inbounds [2 x float], [2 x float]* %uv503, i64 0, i64 0, !dbg !6058
  call void @copy_v2_v2(float* %arraydecay502, float* %arraydecay504), !dbg !6060
  br label %if.end505, !dbg !6061

if.end505:                                        ; preds = %if.then498, %if.else492
  br label %if.end506

if.end506:                                        ; preds = %if.end505, %if.then481
  br label %if.end507, !dbg !6062

if.end507:                                        ; preds = %if.end506, %if.then471
  br label %if.end508, !dbg !6063

if.end508:                                        ; preds = %if.end507, %for.body469
  br label %for.inc509, !dbg !6064

for.inc509:                                       ; preds = %if.end508
  %450 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !6065
  %next510 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %450, i32 0, i32 0, !dbg !6066
  %451 = load %struct.UvElement*, %struct.UvElement** %next510, align 8, !dbg !6066
  store %struct.UvElement* %451, %struct.UvElement** %element_iter, align 8, !dbg !6067
  br label %for.cond467, !dbg !6068, !llvm.loop !6069

for.end511:                                       ; preds = %for.cond467
  br label %if.end512, !dbg !6071

if.end512:                                        ; preds = %for.end511, %if.then422
  %452 = load i8, i8* %stitch_midpoints, align 1, !dbg !6072
  %tobool513 = icmp ne i8 %452, 0, !dbg !6072
  br i1 %tobool513, label %if.then514, label %if.end534, !dbg !6074

if.then514:                                       ; preds = %if.end512
  %453 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6075
  %454 = load i32, i32* %i, align 4, !dbg !6077
  %idxprom515 = sext i32 %454 to i64, !dbg !6075
  %arrayidx516 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %453, i64 %idxprom515, !dbg !6075
  %count517 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx516, i32 0, i32 1, !dbg !6078
  %455 = load i16, i16* %count517, align 4, !dbg !6078
  %conv518 = zext i16 %455 to i32, !dbg !6075
  %conv519 = sitofp i32 %conv518 to float, !dbg !6075
  %456 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6079
  %457 = load i32, i32* %i, align 4, !dbg !6080
  %idxprom520 = sext i32 %457 to i64, !dbg !6079
  %arrayidx521 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %456, i64 %idxprom520, !dbg !6079
  %uv522 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx521, i32 0, i32 0, !dbg !6081
  %arrayidx523 = getelementptr inbounds [2 x float], [2 x float]* %uv522, i64 0, i64 0, !dbg !6079
  %458 = load float, float* %arrayidx523, align 4, !dbg !6082
  %div = fdiv float %458, %conv519, !dbg !6082
  store float %div, float* %arrayidx523, align 4, !dbg !6082
  %459 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6083
  %460 = load i32, i32* %i, align 4, !dbg !6084
  %idxprom524 = sext i32 %460 to i64, !dbg !6083
  %arrayidx525 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %459, i64 %idxprom524, !dbg !6083
  %count526 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx525, i32 0, i32 1, !dbg !6085
  %461 = load i16, i16* %count526, align 4, !dbg !6085
  %conv527 = zext i16 %461 to i32, !dbg !6083
  %conv528 = sitofp i32 %conv527 to float, !dbg !6083
  %462 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6086
  %463 = load i32, i32* %i, align 4, !dbg !6087
  %idxprom529 = sext i32 %463 to i64, !dbg !6086
  %arrayidx530 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %462, i64 %idxprom529, !dbg !6086
  %uv531 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx530, i32 0, i32 0, !dbg !6088
  %arrayidx532 = getelementptr inbounds [2 x float], [2 x float]* %uv531, i64 0, i64 1, !dbg !6086
  %464 = load float, float* %arrayidx532, align 4, !dbg !6089
  %div533 = fdiv float %464, %conv528, !dbg !6089
  store float %div533, float* %arrayidx532, align 4, !dbg !6089
  br label %if.end534, !dbg !6090

if.end534:                                        ; preds = %if.then514, %if.end512
  br label %if.end694, !dbg !6091

if.else535:                                       ; preds = %for.body417
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge536, metadata !6092, metadata !DIExpression()), !dbg !6094
  %465 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6095
  %selection_stack537 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %465, i32 0, i32 16, !dbg !6096
  %466 = load i8**, i8*** %selection_stack537, align 8, !dbg !6096
  %467 = load i32, i32* %i, align 4, !dbg !6097
  %idxprom538 = sext i32 %467 to i64, !dbg !6095
  %arrayidx539 = getelementptr inbounds i8*, i8** %466, i64 %idxprom538, !dbg !6095
  %468 = load i8*, i8** %arrayidx539, align 8, !dbg !6095
  %469 = bitcast i8* %468 to %struct.UvEdge*, !dbg !6095
  store %struct.UvEdge* %469, %struct.UvEdge** %edge536, align 8, !dbg !6094
  %470 = load %struct.UvEdge*, %struct.UvEdge** %edge536, align 8, !dbg !6098
  %flag540 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %470, i32 0, i32 2, !dbg !6100
  %471 = load i8, i8* %flag540, align 8, !dbg !6100
  %conv541 = zext i8 %471 to i32, !dbg !6098
  %and542 = and i32 %conv541, 2, !dbg !6101
  %tobool543 = icmp ne i32 %and542, 0, !dbg !6101
  br i1 %tobool543, label %if.then544, label %if.end693, !dbg !6102

if.then544:                                       ; preds = %if.else535
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv2, metadata !6103, metadata !DIExpression()), !dbg !6105
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv1, metadata !6106, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l545, metadata !6108, metadata !DIExpression()), !dbg !6109
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge_iter, metadata !6110, metadata !DIExpression()), !dbg !6111
  %472 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6112
  %uvs546 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %472, i32 0, i32 9, !dbg !6113
  %473 = load %struct.UvElement**, %struct.UvElement*** %uvs546, align 8, !dbg !6113
  %474 = load %struct.UvEdge*, %struct.UvEdge** %edge536, align 8, !dbg !6114
  %uv1547 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %474, i32 0, i32 0, !dbg !6115
  %475 = load i32, i32* %uv1547, align 8, !dbg !6115
  %idxprom548 = zext i32 %475 to i64, !dbg !6112
  %arrayidx549 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %473, i64 %idxprom548, !dbg !6112
  %476 = load %struct.UvElement*, %struct.UvElement** %arrayidx549, align 8, !dbg !6112
  %l550 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %476, i32 0, i32 1, !dbg !6116
  %477 = load %struct.BMLoop*, %struct.BMLoop** %l550, align 8, !dbg !6116
  store %struct.BMLoop* %477, %struct.BMLoop** %l545, align 8, !dbg !6117
  %478 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6118
  %ldata551 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %478, i32 0, i32 26, !dbg !6119
  %479 = load %struct.BMLoop*, %struct.BMLoop** %l545, align 8, !dbg !6120
  %head552 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %479, i32 0, i32 0, !dbg !6121
  %data553 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head552, i32 0, i32 0, !dbg !6122
  %480 = load i8*, i8** %data553, align 8, !dbg !6122
  %call554 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata551, i8* %480, i32 16), !dbg !6123
  %481 = bitcast i8* %call554 to %struct.MLoopUV*, !dbg !6123
  store %struct.MLoopUV* %481, %struct.MLoopUV** %luv1, align 8, !dbg !6124
  %482 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6125
  %uvs555 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %482, i32 0, i32 9, !dbg !6126
  %483 = load %struct.UvElement**, %struct.UvElement*** %uvs555, align 8, !dbg !6126
  %484 = load %struct.UvEdge*, %struct.UvEdge** %edge536, align 8, !dbg !6127
  %uv2556 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %484, i32 0, i32 1, !dbg !6128
  %485 = load i32, i32* %uv2556, align 4, !dbg !6128
  %idxprom557 = zext i32 %485 to i64, !dbg !6125
  %arrayidx558 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %483, i64 %idxprom557, !dbg !6125
  %486 = load %struct.UvElement*, %struct.UvElement** %arrayidx558, align 8, !dbg !6125
  %l559 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %486, i32 0, i32 1, !dbg !6129
  %487 = load %struct.BMLoop*, %struct.BMLoop** %l559, align 8, !dbg !6129
  store %struct.BMLoop* %487, %struct.BMLoop** %l545, align 8, !dbg !6130
  %488 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6131
  %ldata560 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %488, i32 0, i32 26, !dbg !6132
  %489 = load %struct.BMLoop*, %struct.BMLoop** %l545, align 8, !dbg !6133
  %head561 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %489, i32 0, i32 0, !dbg !6134
  %data562 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head561, i32 0, i32 0, !dbg !6135
  %490 = load i8*, i8** %data562, align 8, !dbg !6135
  %call563 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata560, i8* %490, i32 16), !dbg !6136
  %491 = bitcast i8* %call563 to %struct.MLoopUV*, !dbg !6136
  store %struct.MLoopUV* %491, %struct.MLoopUV** %luv2, align 8, !dbg !6137
  %492 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6138
  %493 = load %struct.UvEdge*, %struct.UvEdge** %edge536, align 8, !dbg !6139
  %uv1564 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %493, i32 0, i32 0, !dbg !6140
  %494 = load i32, i32* %uv1564, align 8, !dbg !6140
  %idxprom565 = zext i32 %494 to i64, !dbg !6138
  %arrayidx566 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %492, i64 %idxprom565, !dbg !6138
  %uv567 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx566, i32 0, i32 0, !dbg !6141
  %arraydecay568 = getelementptr inbounds [2 x float], [2 x float]* %uv567, i64 0, i64 0, !dbg !6138
  %495 = load %struct.MLoopUV*, %struct.MLoopUV** %luv1, align 8, !dbg !6142
  %uv569 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %495, i32 0, i32 0, !dbg !6143
  %arraydecay570 = getelementptr inbounds [2 x float], [2 x float]* %uv569, i64 0, i64 0, !dbg !6142
  call void @copy_v2_v2(float* %arraydecay568, float* %arraydecay570), !dbg !6144
  %496 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6145
  %497 = load %struct.UvEdge*, %struct.UvEdge** %edge536, align 8, !dbg !6146
  %uv2571 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %497, i32 0, i32 1, !dbg !6147
  %498 = load i32, i32* %uv2571, align 4, !dbg !6147
  %idxprom572 = zext i32 %498 to i64, !dbg !6145
  %arrayidx573 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %496, i64 %idxprom572, !dbg !6145
  %uv574 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx573, i32 0, i32 0, !dbg !6148
  %arraydecay575 = getelementptr inbounds [2 x float], [2 x float]* %uv574, i64 0, i64 0, !dbg !6145
  %499 = load %struct.MLoopUV*, %struct.MLoopUV** %luv2, align 8, !dbg !6149
  %uv576 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %499, i32 0, i32 0, !dbg !6150
  %arraydecay577 = getelementptr inbounds [2 x float], [2 x float]* %uv576, i64 0, i64 0, !dbg !6149
  call void @copy_v2_v2(float* %arraydecay575, float* %arraydecay577), !dbg !6151
  %500 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6152
  %501 = load %struct.UvEdge*, %struct.UvEdge** %edge536, align 8, !dbg !6153
  %uv1578 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %501, i32 0, i32 0, !dbg !6154
  %502 = load i32, i32* %uv1578, align 8, !dbg !6154
  %idxprom579 = zext i32 %502 to i64, !dbg !6152
  %arrayidx580 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %500, i64 %idxprom579, !dbg !6152
  %count581 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx580, i32 0, i32 1, !dbg !6155
  store i16 1, i16* %count581, align 4, !dbg !6156
  %503 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6157
  %504 = load %struct.UvEdge*, %struct.UvEdge** %edge536, align 8, !dbg !6158
  %uv2582 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %504, i32 0, i32 1, !dbg !6159
  %505 = load i32, i32* %uv2582, align 4, !dbg !6159
  %idxprom583 = zext i32 %505 to i64, !dbg !6157
  %arrayidx584 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %503, i64 %idxprom583, !dbg !6157
  %count585 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx584, i32 0, i32 1, !dbg !6160
  store i16 1, i16* %count585, align 4, !dbg !6161
  %506 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6162
  %uvs586 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %506, i32 0, i32 9, !dbg !6163
  %507 = load %struct.UvElement**, %struct.UvElement*** %uvs586, align 8, !dbg !6163
  %508 = load %struct.UvEdge*, %struct.UvEdge** %edge536, align 8, !dbg !6164
  %uv1587 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %508, i32 0, i32 0, !dbg !6165
  %509 = load i32, i32* %uv1587, align 8, !dbg !6165
  %idxprom588 = zext i32 %509 to i64, !dbg !6162
  %arrayidx589 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %507, i64 %idxprom588, !dbg !6162
  %510 = load %struct.UvElement*, %struct.UvElement** %arrayidx589, align 8, !dbg !6162
  %flag590 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %510, i32 0, i32 4, !dbg !6166
  %511 = load i8, i8* %flag590, align 1, !dbg !6167
  %conv591 = zext i8 %511 to i32, !dbg !6167
  %or = or i32 %conv591, 2, !dbg !6167
  %conv592 = trunc i32 %or to i8, !dbg !6167
  store i8 %conv592, i8* %flag590, align 1, !dbg !6167
  %512 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6168
  %uvs593 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %512, i32 0, i32 9, !dbg !6169
  %513 = load %struct.UvElement**, %struct.UvElement*** %uvs593, align 8, !dbg !6169
  %514 = load %struct.UvEdge*, %struct.UvEdge** %edge536, align 8, !dbg !6170
  %uv2594 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %514, i32 0, i32 1, !dbg !6171
  %515 = load i32, i32* %uv2594, align 4, !dbg !6171
  %idxprom595 = zext i32 %515 to i64, !dbg !6168
  %arrayidx596 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %513, i64 %idxprom595, !dbg !6168
  %516 = load %struct.UvElement*, %struct.UvElement** %arrayidx596, align 8, !dbg !6168
  %flag597 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %516, i32 0, i32 4, !dbg !6172
  %517 = load i8, i8* %flag597, align 1, !dbg !6173
  %conv598 = zext i8 %517 to i32, !dbg !6173
  %or599 = or i32 %conv598, 2, !dbg !6173
  %conv600 = trunc i32 %or599 to i8, !dbg !6173
  store i8 %conv600, i8* %flag597, align 1, !dbg !6173
  %518 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6174
  %snap_islands601 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %518, i32 0, i32 3, !dbg !6176
  %519 = load i8, i8* %snap_islands601, align 4, !dbg !6176
  %conv602 = zext i8 %519 to i32, !dbg !6174
  %tobool603 = icmp ne i32 %conv602, 0, !dbg !6174
  br i1 %tobool603, label %land.lhs.true604, label %if.end614, !dbg !6177

land.lhs.true604:                                 ; preds = %if.then544
  %520 = load %struct.UvEdge*, %struct.UvEdge** %edge536, align 8, !dbg !6178
  %element605 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %520, i32 0, i32 3, !dbg !6179
  %521 = load %struct.UvElement*, %struct.UvElement** %element605, align 8, !dbg !6179
  %island606 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %521, i32 0, i32 5, !dbg !6180
  %522 = load i16, i16* %island606, align 4, !dbg !6180
  %conv607 = zext i16 %522 to i32, !dbg !6178
  %523 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6181
  %static_island608 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %523, i32 0, i32 18, !dbg !6182
  %524 = load i32, i32* %static_island608, align 4, !dbg !6182
  %cmp609 = icmp eq i32 %conv607, %524, !dbg !6183
  br i1 %cmp609, label %land.lhs.true611, label %if.end614, !dbg !6184

land.lhs.true611:                                 ; preds = %land.lhs.true604
  %525 = load i8, i8* %stitch_midpoints, align 1, !dbg !6185
  %tobool612 = icmp ne i8 %525, 0, !dbg !6185
  br i1 %tobool612, label %if.end614, label %if.then613, !dbg !6186

if.then613:                                       ; preds = %land.lhs.true611
  br label %for.inc695, !dbg !6187

if.end614:                                        ; preds = %land.lhs.true611, %land.lhs.true604, %if.then544
  %526 = load %struct.UvEdge*, %struct.UvEdge** %edge536, align 8, !dbg !6188
  %first = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %526, i32 0, i32 5, !dbg !6190
  %527 = load %struct.UvEdge*, %struct.UvEdge** %first, align 8, !dbg !6190
  store %struct.UvEdge* %527, %struct.UvEdge** %edge_iter, align 8, !dbg !6191
  br label %for.cond615, !dbg !6192

for.cond615:                                      ; preds = %for.inc690, %if.end614
  %528 = load %struct.UvEdge*, %struct.UvEdge** %edge_iter, align 8, !dbg !6193
  %tobool616 = icmp ne %struct.UvEdge* %528, null, !dbg !6195
  br i1 %tobool616, label %for.body617, label %for.end692, !dbg !6195

for.body617:                                      ; preds = %for.cond615
  %529 = load %struct.UvEdge*, %struct.UvEdge** %edge536, align 8, !dbg !6196
  %530 = load %struct.UvEdge*, %struct.UvEdge** %edge_iter, align 8, !dbg !6199
  %531 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6200
  %call618 = call zeroext i8 @stitch_check_edges_state_stitchable(%struct.UvEdge* %529, %struct.UvEdge* %530, %struct.StitchState* %531), !dbg !6201
  %tobool619 = icmp ne i8 %call618, 0, !dbg !6201
  br i1 %tobool619, label %if.then620, label %if.end689, !dbg !6202

if.then620:                                       ; preds = %for.body617
  %532 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6203
  %uvs621 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %532, i32 0, i32 9, !dbg !6205
  %533 = load %struct.UvElement**, %struct.UvElement*** %uvs621, align 8, !dbg !6205
  %534 = load %struct.UvEdge*, %struct.UvEdge** %edge_iter, align 8, !dbg !6206
  %uv1622 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %534, i32 0, i32 0, !dbg !6207
  %535 = load i32, i32* %uv1622, align 8, !dbg !6207
  %idxprom623 = zext i32 %535 to i64, !dbg !6203
  %arrayidx624 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %533, i64 %idxprom623, !dbg !6203
  %536 = load %struct.UvElement*, %struct.UvElement** %arrayidx624, align 8, !dbg !6203
  %l625 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %536, i32 0, i32 1, !dbg !6208
  %537 = load %struct.BMLoop*, %struct.BMLoop** %l625, align 8, !dbg !6208
  store %struct.BMLoop* %537, %struct.BMLoop** %l545, align 8, !dbg !6209
  %538 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6210
  %ldata626 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %538, i32 0, i32 26, !dbg !6211
  %539 = load %struct.BMLoop*, %struct.BMLoop** %l545, align 8, !dbg !6212
  %head627 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %539, i32 0, i32 0, !dbg !6213
  %data628 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head627, i32 0, i32 0, !dbg !6214
  %540 = load i8*, i8** %data628, align 8, !dbg !6214
  %call629 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata626, i8* %540, i32 16), !dbg !6215
  %541 = bitcast i8* %call629 to %struct.MLoopUV*, !dbg !6215
  store %struct.MLoopUV* %541, %struct.MLoopUV** %luv1, align 8, !dbg !6216
  %542 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6217
  %uvs630 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %542, i32 0, i32 9, !dbg !6218
  %543 = load %struct.UvElement**, %struct.UvElement*** %uvs630, align 8, !dbg !6218
  %544 = load %struct.UvEdge*, %struct.UvEdge** %edge_iter, align 8, !dbg !6219
  %uv2631 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %544, i32 0, i32 1, !dbg !6220
  %545 = load i32, i32* %uv2631, align 4, !dbg !6220
  %idxprom632 = zext i32 %545 to i64, !dbg !6217
  %arrayidx633 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %543, i64 %idxprom632, !dbg !6217
  %546 = load %struct.UvElement*, %struct.UvElement** %arrayidx633, align 8, !dbg !6217
  %l634 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %546, i32 0, i32 1, !dbg !6221
  %547 = load %struct.BMLoop*, %struct.BMLoop** %l634, align 8, !dbg !6221
  store %struct.BMLoop* %547, %struct.BMLoop** %l545, align 8, !dbg !6222
  %548 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6223
  %ldata635 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %548, i32 0, i32 26, !dbg !6224
  %549 = load %struct.BMLoop*, %struct.BMLoop** %l545, align 8, !dbg !6225
  %head636 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %549, i32 0, i32 0, !dbg !6226
  %data637 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head636, i32 0, i32 0, !dbg !6227
  %550 = load i8*, i8** %data637, align 8, !dbg !6227
  %call638 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata635, i8* %550, i32 16), !dbg !6228
  %551 = bitcast i8* %call638 to %struct.MLoopUV*, !dbg !6228
  store %struct.MLoopUV* %551, %struct.MLoopUV** %luv2, align 8, !dbg !6229
  %552 = load i8, i8* %stitch_midpoints, align 1, !dbg !6230
  %tobool639 = icmp ne i8 %552, 0, !dbg !6230
  br i1 %tobool639, label %if.then640, label %if.else665, !dbg !6232

if.then640:                                       ; preds = %if.then620
  %553 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6233
  %554 = load %struct.UvEdge*, %struct.UvEdge** %edge536, align 8, !dbg !6235
  %uv1641 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %554, i32 0, i32 0, !dbg !6236
  %555 = load i32, i32* %uv1641, align 8, !dbg !6236
  %idxprom642 = zext i32 %555 to i64, !dbg !6233
  %arrayidx643 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %553, i64 %idxprom642, !dbg !6233
  %uv644 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx643, i32 0, i32 0, !dbg !6237
  %arraydecay645 = getelementptr inbounds [2 x float], [2 x float]* %uv644, i64 0, i64 0, !dbg !6233
  %556 = load %struct.MLoopUV*, %struct.MLoopUV** %luv1, align 8, !dbg !6238
  %uv646 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %556, i32 0, i32 0, !dbg !6239
  %arraydecay647 = getelementptr inbounds [2 x float], [2 x float]* %uv646, i64 0, i64 0, !dbg !6238
  call void @add_v2_v2(float* %arraydecay645, float* %arraydecay647), !dbg !6240
  %557 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6241
  %558 = load %struct.UvEdge*, %struct.UvEdge** %edge536, align 8, !dbg !6242
  %uv1648 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %558, i32 0, i32 0, !dbg !6243
  %559 = load i32, i32* %uv1648, align 8, !dbg !6243
  %idxprom649 = zext i32 %559 to i64, !dbg !6241
  %arrayidx650 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %557, i64 %idxprom649, !dbg !6241
  %count651 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx650, i32 0, i32 1, !dbg !6244
  %560 = load i16, i16* %count651, align 4, !dbg !6245
  %inc652 = add i16 %560, 1, !dbg !6245
  store i16 %inc652, i16* %count651, align 4, !dbg !6245
  %561 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6246
  %562 = load %struct.UvEdge*, %struct.UvEdge** %edge536, align 8, !dbg !6247
  %uv2653 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %562, i32 0, i32 1, !dbg !6248
  %563 = load i32, i32* %uv2653, align 4, !dbg !6248
  %idxprom654 = zext i32 %563 to i64, !dbg !6246
  %arrayidx655 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %561, i64 %idxprom654, !dbg !6246
  %uv656 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx655, i32 0, i32 0, !dbg !6249
  %arraydecay657 = getelementptr inbounds [2 x float], [2 x float]* %uv656, i64 0, i64 0, !dbg !6246
  %564 = load %struct.MLoopUV*, %struct.MLoopUV** %luv2, align 8, !dbg !6250
  %uv658 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %564, i32 0, i32 0, !dbg !6251
  %arraydecay659 = getelementptr inbounds [2 x float], [2 x float]* %uv658, i64 0, i64 0, !dbg !6250
  call void @add_v2_v2(float* %arraydecay657, float* %arraydecay659), !dbg !6252
  %565 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6253
  %566 = load %struct.UvEdge*, %struct.UvEdge** %edge536, align 8, !dbg !6254
  %uv2660 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %566, i32 0, i32 1, !dbg !6255
  %567 = load i32, i32* %uv2660, align 4, !dbg !6255
  %idxprom661 = zext i32 %567 to i64, !dbg !6253
  %arrayidx662 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %565, i64 %idxprom661, !dbg !6253
  %count663 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx662, i32 0, i32 1, !dbg !6256
  %568 = load i16, i16* %count663, align 4, !dbg !6257
  %inc664 = add i16 %568, 1, !dbg !6257
  store i16 %inc664, i16* %count663, align 4, !dbg !6257
  br label %if.end688, !dbg !6258

if.else665:                                       ; preds = %if.then620
  %569 = load %struct.UvEdge*, %struct.UvEdge** %edge_iter, align 8, !dbg !6259
  %element666 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %569, i32 0, i32 3, !dbg !6261
  %570 = load %struct.UvElement*, %struct.UvElement** %element666, align 8, !dbg !6261
  %island667 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %570, i32 0, i32 5, !dbg !6262
  %571 = load i16, i16* %island667, align 4, !dbg !6262
  %conv668 = zext i16 %571 to i32, !dbg !6259
  %572 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6263
  %static_island669 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %572, i32 0, i32 18, !dbg !6264
  %573 = load i32, i32* %static_island669, align 4, !dbg !6264
  %cmp670 = icmp eq i32 %conv668, %573, !dbg !6265
  br i1 %cmp670, label %if.then672, label %if.end687, !dbg !6266

if.then672:                                       ; preds = %if.else665
  %574 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6267
  %575 = load %struct.UvEdge*, %struct.UvEdge** %edge536, align 8, !dbg !6269
  %uv1673 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %575, i32 0, i32 0, !dbg !6270
  %576 = load i32, i32* %uv1673, align 8, !dbg !6270
  %idxprom674 = zext i32 %576 to i64, !dbg !6267
  %arrayidx675 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %574, i64 %idxprom674, !dbg !6267
  %uv676 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx675, i32 0, i32 0, !dbg !6271
  %arraydecay677 = getelementptr inbounds [2 x float], [2 x float]* %uv676, i64 0, i64 0, !dbg !6267
  %577 = load %struct.MLoopUV*, %struct.MLoopUV** %luv1, align 8, !dbg !6272
  %uv678 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %577, i32 0, i32 0, !dbg !6273
  %arraydecay679 = getelementptr inbounds [2 x float], [2 x float]* %uv678, i64 0, i64 0, !dbg !6272
  call void @copy_v2_v2(float* %arraydecay677, float* %arraydecay679), !dbg !6274
  %578 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6275
  %579 = load %struct.UvEdge*, %struct.UvEdge** %edge536, align 8, !dbg !6276
  %uv2680 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %579, i32 0, i32 1, !dbg !6277
  %580 = load i32, i32* %uv2680, align 4, !dbg !6277
  %idxprom681 = zext i32 %580 to i64, !dbg !6275
  %arrayidx682 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %578, i64 %idxprom681, !dbg !6275
  %uv683 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx682, i32 0, i32 0, !dbg !6278
  %arraydecay684 = getelementptr inbounds [2 x float], [2 x float]* %uv683, i64 0, i64 0, !dbg !6275
  %581 = load %struct.MLoopUV*, %struct.MLoopUV** %luv2, align 8, !dbg !6279
  %uv685 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %581, i32 0, i32 0, !dbg !6280
  %arraydecay686 = getelementptr inbounds [2 x float], [2 x float]* %uv685, i64 0, i64 0, !dbg !6279
  call void @copy_v2_v2(float* %arraydecay684, float* %arraydecay686), !dbg !6281
  br label %if.end687, !dbg !6282

if.end687:                                        ; preds = %if.then672, %if.else665
  br label %if.end688

if.end688:                                        ; preds = %if.end687, %if.then640
  br label %if.end689, !dbg !6283

if.end689:                                        ; preds = %if.end688, %for.body617
  br label %for.inc690, !dbg !6284

for.inc690:                                       ; preds = %if.end689
  %582 = load %struct.UvEdge*, %struct.UvEdge** %edge_iter, align 8, !dbg !6285
  %next691 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %582, i32 0, i32 4, !dbg !6286
  %583 = load %struct.UvEdge*, %struct.UvEdge** %next691, align 8, !dbg !6286
  store %struct.UvEdge* %583, %struct.UvEdge** %edge_iter, align 8, !dbg !6287
  br label %for.cond615, !dbg !6288, !llvm.loop !6289

for.end692:                                       ; preds = %for.cond615
  br label %if.end693, !dbg !6291

if.end693:                                        ; preds = %for.end692, %if.else535
  br label %if.end694

if.end694:                                        ; preds = %if.end693, %if.end534
  br label %for.inc695, !dbg !6292

for.inc695:                                       ; preds = %if.end694, %if.then613, %if.then460
  %584 = load i32, i32* %i, align 4, !dbg !6293
  %inc696 = add nsw i32 %584, 1, !dbg !6293
  store i32 %inc696, i32* %i, align 4, !dbg !6293
  br label %for.cond413, !dbg !6294, !llvm.loop !6295

for.end697:                                       ; preds = %for.cond413
  %585 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6297
  %mode698 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %585, i32 0, i32 20, !dbg !6299
  %586 = load i8, i8* %mode698, align 8, !dbg !6299
  %conv699 = zext i8 %586 to i32, !dbg !6297
  %cmp700 = icmp eq i32 %conv699, 1, !dbg !6300
  br i1 %cmp700, label %land.lhs.true702, label %if.end734, !dbg !6301

land.lhs.true702:                                 ; preds = %for.end697
  %587 = load i8, i8* %stitch_midpoints, align 1, !dbg !6302
  %conv703 = zext i8 %587 to i32, !dbg !6302
  %tobool704 = icmp ne i32 %conv703, 0, !dbg !6302
  br i1 %tobool704, label %if.then705, label %if.end734, !dbg !6303

if.then705:                                       ; preds = %land.lhs.true702
  store i32 0, i32* %i, align 4, !dbg !6304
  br label %for.cond706, !dbg !6307

for.cond706:                                      ; preds = %for.inc731, %if.then705
  %588 = load i32, i32* %i, align 4, !dbg !6308
  %589 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6310
  %total_separate_uvs707 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %589, i32 0, i32 15, !dbg !6311
  %590 = load i32, i32* %total_separate_uvs707, align 4, !dbg !6311
  %cmp708 = icmp slt i32 %588, %590, !dbg !6312
  br i1 %cmp708, label %for.body710, label %for.end733, !dbg !6313

for.body710:                                      ; preds = %for.cond706
  %591 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6314
  %592 = load i32, i32* %i, align 4, !dbg !6316
  %idxprom711 = sext i32 %592 to i64, !dbg !6314
  %arrayidx712 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %591, i64 %idxprom711, !dbg !6314
  %count713 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx712, i32 0, i32 1, !dbg !6317
  %593 = load i16, i16* %count713, align 4, !dbg !6317
  %conv714 = zext i16 %593 to i32, !dbg !6314
  %conv715 = sitofp i32 %conv714 to float, !dbg !6314
  %594 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6318
  %595 = load i32, i32* %i, align 4, !dbg !6319
  %idxprom716 = sext i32 %595 to i64, !dbg !6318
  %arrayidx717 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %594, i64 %idxprom716, !dbg !6318
  %uv718 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx717, i32 0, i32 0, !dbg !6320
  %arrayidx719 = getelementptr inbounds [2 x float], [2 x float]* %uv718, i64 0, i64 0, !dbg !6318
  %596 = load float, float* %arrayidx719, align 4, !dbg !6321
  %div720 = fdiv float %596, %conv715, !dbg !6321
  store float %div720, float* %arrayidx719, align 4, !dbg !6321
  %597 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6322
  %598 = load i32, i32* %i, align 4, !dbg !6323
  %idxprom721 = sext i32 %598 to i64, !dbg !6322
  %arrayidx722 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %597, i64 %idxprom721, !dbg !6322
  %count723 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx722, i32 0, i32 1, !dbg !6324
  %599 = load i16, i16* %count723, align 4, !dbg !6324
  %conv724 = zext i16 %599 to i32, !dbg !6322
  %conv725 = sitofp i32 %conv724 to float, !dbg !6322
  %600 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6325
  %601 = load i32, i32* %i, align 4, !dbg !6326
  %idxprom726 = sext i32 %601 to i64, !dbg !6325
  %arrayidx727 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %600, i64 %idxprom726, !dbg !6325
  %uv728 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx727, i32 0, i32 0, !dbg !6327
  %arrayidx729 = getelementptr inbounds [2 x float], [2 x float]* %uv728, i64 0, i64 1, !dbg !6325
  %602 = load float, float* %arrayidx729, align 4, !dbg !6328
  %div730 = fdiv float %602, %conv725, !dbg !6328
  store float %div730, float* %arrayidx729, align 4, !dbg !6328
  br label %for.inc731, !dbg !6329

for.inc731:                                       ; preds = %for.body710
  %603 = load i32, i32* %i, align 4, !dbg !6330
  %inc732 = add nsw i32 %603, 1, !dbg !6330
  store i32 %inc732, i32* %i, align 4, !dbg !6330
  br label %for.cond706, !dbg !6331, !llvm.loop !6332

for.end733:                                       ; preds = %for.cond706
  br label %if.end734, !dbg !6334

if.end734:                                        ; preds = %for.end733, %land.lhs.true702, %for.end697
  %604 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6335
  %snap_islands735 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %604, i32 0, i32 3, !dbg !6337
  %605 = load i8, i8* %snap_islands735, align 4, !dbg !6337
  %tobool736 = icmp ne i8 %605, 0, !dbg !6335
  br i1 %tobool736, label %if.then737, label %if.end1049, !dbg !6338

if.then737:                                       ; preds = %if.end734
  %606 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6339
  %mode738 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %606, i32 0, i32 20, !dbg !6342
  %607 = load i8, i8* %mode738, align 8, !dbg !6342
  %conv739 = zext i8 %607 to i32, !dbg !6339
  %cmp740 = icmp eq i32 %conv739, 0, !dbg !6343
  br i1 %cmp740, label %if.then742, label %if.else920, !dbg !6344

if.then742:                                       ; preds = %if.then737
  store i32 0, i32* %i, align 4, !dbg !6345
  br label %for.cond743, !dbg !6348

for.cond743:                                      ; preds = %for.inc809, %if.then742
  %608 = load i32, i32* %i, align 4, !dbg !6349
  %609 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6351
  %selection_size744 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %609, i32 0, i32 17, !dbg !6352
  %610 = load i32, i32* %selection_size744, align 8, !dbg !6352
  %cmp745 = icmp slt i32 %608, %610, !dbg !6353
  br i1 %cmp745, label %for.body747, label %for.end811, !dbg !6354

for.body747:                                      ; preds = %for.cond743
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element748, metadata !6355, metadata !DIExpression()), !dbg !6357
  %611 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6358
  %selection_stack749 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %611, i32 0, i32 16, !dbg !6359
  %612 = load i8**, i8*** %selection_stack749, align 8, !dbg !6359
  %613 = load i32, i32* %i, align 4, !dbg !6360
  %idxprom750 = sext i32 %613 to i64, !dbg !6358
  %arrayidx751 = getelementptr inbounds i8*, i8** %612, i64 %idxprom750, !dbg !6358
  %614 = load i8*, i8** %arrayidx751, align 8, !dbg !6358
  %615 = bitcast i8* %614 to %struct.UvElement*, !dbg !6358
  store %struct.UvElement* %615, %struct.UvElement** %element748, align 8, !dbg !6357
  %616 = load %struct.UvElement*, %struct.UvElement** %element748, align 8, !dbg !6361
  %flag752 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %616, i32 0, i32 4, !dbg !6363
  %617 = load i8, i8* %flag752, align 1, !dbg !6363
  %conv753 = zext i8 %617 to i32, !dbg !6361
  %and754 = and i32 %conv753, 2, !dbg !6364
  %tobool755 = icmp ne i32 %and754, 0, !dbg !6364
  br i1 %tobool755, label %if.then756, label %if.end808, !dbg !6365

if.then756:                                       ; preds = %for.body747
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l757, metadata !6366, metadata !DIExpression()), !dbg !6368
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv758, metadata !6369, metadata !DIExpression()), !dbg !6370
  %618 = load %struct.UvElement*, %struct.UvElement** %element748, align 8, !dbg !6371
  %l759 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %618, i32 0, i32 1, !dbg !6372
  %619 = load %struct.BMLoop*, %struct.BMLoop** %l759, align 8, !dbg !6372
  store %struct.BMLoop* %619, %struct.BMLoop** %l757, align 8, !dbg !6373
  %620 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6374
  %ldata760 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %620, i32 0, i32 26, !dbg !6375
  %621 = load %struct.BMLoop*, %struct.BMLoop** %l757, align 8, !dbg !6376
  %head761 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %621, i32 0, i32 0, !dbg !6377
  %data762 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head761, i32 0, i32 0, !dbg !6378
  %622 = load i8*, i8** %data762, align 8, !dbg !6378
  %call763 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata760, i8* %622, i32 16), !dbg !6379
  %623 = bitcast i8* %call763 to %struct.MLoopUV*, !dbg !6379
  store %struct.MLoopUV* %623, %struct.MLoopUV** %luv758, align 8, !dbg !6380
  %624 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6381
  %625 = load i32, i32* %i, align 4, !dbg !6382
  %idxprom764 = sext i32 %625 to i64, !dbg !6381
  %arrayidx765 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %624, i64 %idxprom764, !dbg !6381
  %uv766 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx765, i32 0, i32 0, !dbg !6383
  %arrayidx767 = getelementptr inbounds [2 x float], [2 x float]* %uv766, i64 0, i64 0, !dbg !6381
  %626 = load float, float* %arrayidx767, align 4, !dbg !6381
  %627 = load %struct.MLoopUV*, %struct.MLoopUV** %luv758, align 8, !dbg !6384
  %uv768 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %627, i32 0, i32 0, !dbg !6385
  %arrayidx769 = getelementptr inbounds [2 x float], [2 x float]* %uv768, i64 0, i64 0, !dbg !6384
  %628 = load float, float* %arrayidx769, align 4, !dbg !6384
  %sub770 = fsub float %626, %628, !dbg !6386
  %629 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !6387
  %630 = load %struct.UvElement*, %struct.UvElement** %element748, align 8, !dbg !6388
  %island771 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %630, i32 0, i32 5, !dbg !6389
  %631 = load i16, i16* %island771, align 4, !dbg !6389
  %idxprom772 = zext i16 %631 to i64, !dbg !6387
  %arrayidx773 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %629, i64 %idxprom772, !dbg !6387
  %translation = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx773, i32 0, i32 2, !dbg !6390
  %arrayidx774 = getelementptr inbounds [2 x float], [2 x float]* %translation, i64 0, i64 0, !dbg !6387
  %632 = load float, float* %arrayidx774, align 4, !dbg !6391
  %add775 = fadd float %632, %sub770, !dbg !6391
  store float %add775, float* %arrayidx774, align 4, !dbg !6391
  %633 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6392
  %634 = load i32, i32* %i, align 4, !dbg !6393
  %idxprom776 = sext i32 %634 to i64, !dbg !6392
  %arrayidx777 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %633, i64 %idxprom776, !dbg !6392
  %uv778 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx777, i32 0, i32 0, !dbg !6394
  %arrayidx779 = getelementptr inbounds [2 x float], [2 x float]* %uv778, i64 0, i64 1, !dbg !6392
  %635 = load float, float* %arrayidx779, align 4, !dbg !6392
  %636 = load %struct.MLoopUV*, %struct.MLoopUV** %luv758, align 8, !dbg !6395
  %uv780 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %636, i32 0, i32 0, !dbg !6396
  %arrayidx781 = getelementptr inbounds [2 x float], [2 x float]* %uv780, i64 0, i64 1, !dbg !6395
  %637 = load float, float* %arrayidx781, align 4, !dbg !6395
  %sub782 = fsub float %635, %637, !dbg !6397
  %638 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !6398
  %639 = load %struct.UvElement*, %struct.UvElement** %element748, align 8, !dbg !6399
  %island783 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %639, i32 0, i32 5, !dbg !6400
  %640 = load i16, i16* %island783, align 4, !dbg !6400
  %idxprom784 = zext i16 %640 to i64, !dbg !6398
  %arrayidx785 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %638, i64 %idxprom784, !dbg !6398
  %translation786 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx785, i32 0, i32 2, !dbg !6401
  %arrayidx787 = getelementptr inbounds [2 x float], [2 x float]* %translation786, i64 0, i64 1, !dbg !6398
  %641 = load float, float* %arrayidx787, align 4, !dbg !6402
  %add788 = fadd float %641, %sub782, !dbg !6402
  store float %add788, float* %arrayidx787, align 4, !dbg !6402
  %642 = load %struct.MLoopUV*, %struct.MLoopUV** %luv758, align 8, !dbg !6403
  %uv789 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %642, i32 0, i32 0, !dbg !6404
  %arrayidx790 = getelementptr inbounds [2 x float], [2 x float]* %uv789, i64 0, i64 0, !dbg !6403
  %643 = load float, float* %arrayidx790, align 4, !dbg !6403
  %644 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !6405
  %645 = load %struct.UvElement*, %struct.UvElement** %element748, align 8, !dbg !6406
  %island791 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %645, i32 0, i32 5, !dbg !6407
  %646 = load i16, i16* %island791, align 4, !dbg !6407
  %idxprom792 = zext i16 %646 to i64, !dbg !6405
  %arrayidx793 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %644, i64 %idxprom792, !dbg !6405
  %medianPoint = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx793, i32 0, i32 3, !dbg !6408
  %arrayidx794 = getelementptr inbounds [2 x float], [2 x float]* %medianPoint, i64 0, i64 0, !dbg !6405
  %647 = load float, float* %arrayidx794, align 4, !dbg !6409
  %add795 = fadd float %647, %643, !dbg !6409
  store float %add795, float* %arrayidx794, align 4, !dbg !6409
  %648 = load %struct.MLoopUV*, %struct.MLoopUV** %luv758, align 8, !dbg !6410
  %uv796 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %648, i32 0, i32 0, !dbg !6411
  %arrayidx797 = getelementptr inbounds [2 x float], [2 x float]* %uv796, i64 0, i64 1, !dbg !6410
  %649 = load float, float* %arrayidx797, align 4, !dbg !6410
  %650 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !6412
  %651 = load %struct.UvElement*, %struct.UvElement** %element748, align 8, !dbg !6413
  %island798 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %651, i32 0, i32 5, !dbg !6414
  %652 = load i16, i16* %island798, align 4, !dbg !6414
  %idxprom799 = zext i16 %652 to i64, !dbg !6412
  %arrayidx800 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %650, i64 %idxprom799, !dbg !6412
  %medianPoint801 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx800, i32 0, i32 3, !dbg !6415
  %arrayidx802 = getelementptr inbounds [2 x float], [2 x float]* %medianPoint801, i64 0, i64 1, !dbg !6412
  %653 = load float, float* %arrayidx802, align 4, !dbg !6416
  %add803 = fadd float %653, %649, !dbg !6416
  store float %add803, float* %arrayidx802, align 4, !dbg !6416
  %654 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !6417
  %655 = load %struct.UvElement*, %struct.UvElement** %element748, align 8, !dbg !6418
  %island804 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %655, i32 0, i32 5, !dbg !6419
  %656 = load i16, i16* %island804, align 4, !dbg !6419
  %idxprom805 = zext i16 %656 to i64, !dbg !6417
  %arrayidx806 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %654, i64 %idxprom805, !dbg !6417
  %numOfElements = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx806, i32 0, i32 4, !dbg !6420
  %657 = load i32, i32* %numOfElements, align 4, !dbg !6421
  %inc807 = add nsw i32 %657, 1, !dbg !6421
  store i32 %inc807, i32* %numOfElements, align 4, !dbg !6421
  br label %if.end808, !dbg !6422

if.end808:                                        ; preds = %if.then756, %for.body747
  br label %for.inc809, !dbg !6423

for.inc809:                                       ; preds = %if.end808
  %658 = load i32, i32* %i, align 4, !dbg !6424
  %inc810 = add nsw i32 %658, 1, !dbg !6424
  store i32 %inc810, i32* %i, align 4, !dbg !6424
  br label %for.cond743, !dbg !6425, !llvm.loop !6426

for.end811:                                       ; preds = %for.cond743
  store i32 0, i32* %i, align 4, !dbg !6428
  br label %for.cond812, !dbg !6430

for.cond812:                                      ; preds = %for.inc852, %for.end811
  %659 = load i32, i32* %i, align 4, !dbg !6431
  %660 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6433
  %total_separate_edges813 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %660, i32 0, i32 14, !dbg !6434
  %661 = load i32, i32* %total_separate_edges813, align 8, !dbg !6434
  %cmp814 = icmp slt i32 %659, %661, !dbg !6435
  br i1 %cmp814, label %for.body816, label %for.end854, !dbg !6436

for.body816:                                      ; preds = %for.cond812
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge817, metadata !6437, metadata !DIExpression()), !dbg !6439
  %662 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6440
  %edges818 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %662, i32 0, i32 12, !dbg !6441
  %663 = load %struct.UvEdge*, %struct.UvEdge** %edges818, align 8, !dbg !6441
  %664 = load i32, i32* %i, align 4, !dbg !6442
  %idx.ext819 = sext i32 %664 to i64, !dbg !6443
  %add.ptr820 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %663, i64 %idx.ext819, !dbg !6443
  store %struct.UvEdge* %add.ptr820, %struct.UvEdge** %edge817, align 8, !dbg !6439
  %665 = load %struct.UvEdge*, %struct.UvEdge** %edge817, align 8, !dbg !6444
  %flag821 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %665, i32 0, i32 2, !dbg !6446
  %666 = load i8, i8* %flag821, align 8, !dbg !6446
  %conv822 = zext i8 %666 to i32, !dbg !6444
  %and823 = and i32 %conv822, 8, !dbg !6447
  %tobool824 = icmp ne i32 %and823, 0, !dbg !6447
  br i1 %tobool824, label %land.lhs.true825, label %if.end851, !dbg !6448

land.lhs.true825:                                 ; preds = %for.body816
  %667 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6449
  %uvs826 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %667, i32 0, i32 9, !dbg !6450
  %668 = load %struct.UvElement**, %struct.UvElement*** %uvs826, align 8, !dbg !6450
  %669 = load %struct.UvEdge*, %struct.UvEdge** %edge817, align 8, !dbg !6451
  %uv1827 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %669, i32 0, i32 0, !dbg !6452
  %670 = load i32, i32* %uv1827, align 8, !dbg !6452
  %idxprom828 = zext i32 %670 to i64, !dbg !6449
  %arrayidx829 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %668, i64 %idxprom828, !dbg !6449
  %671 = load %struct.UvElement*, %struct.UvElement** %arrayidx829, align 8, !dbg !6449
  %flag830 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %671, i32 0, i32 4, !dbg !6453
  %672 = load i8, i8* %flag830, align 1, !dbg !6453
  %conv831 = zext i8 %672 to i32, !dbg !6449
  %and832 = and i32 %conv831, 2, !dbg !6454
  %tobool833 = icmp ne i32 %and832, 0, !dbg !6454
  br i1 %tobool833, label %land.lhs.true834, label %if.end851, !dbg !6455

land.lhs.true834:                                 ; preds = %land.lhs.true825
  %673 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6456
  %uvs835 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %673, i32 0, i32 9, !dbg !6457
  %674 = load %struct.UvElement**, %struct.UvElement*** %uvs835, align 8, !dbg !6457
  %675 = load %struct.UvEdge*, %struct.UvEdge** %edge817, align 8, !dbg !6458
  %uv2836 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %675, i32 0, i32 1, !dbg !6459
  %676 = load i32, i32* %uv2836, align 4, !dbg !6459
  %idxprom837 = zext i32 %676 to i64, !dbg !6456
  %arrayidx838 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %674, i64 %idxprom837, !dbg !6456
  %677 = load %struct.UvElement*, %struct.UvElement** %arrayidx838, align 8, !dbg !6456
  %flag839 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %677, i32 0, i32 4, !dbg !6460
  %678 = load i8, i8* %flag839, align 1, !dbg !6460
  %conv840 = zext i8 %678 to i32, !dbg !6456
  %and841 = and i32 %conv840, 2, !dbg !6461
  %tobool842 = icmp ne i32 %and841, 0, !dbg !6461
  br i1 %tobool842, label %if.then843, label %if.end851, !dbg !6462

if.then843:                                       ; preds = %land.lhs.true834
  %679 = load %struct.UvEdge*, %struct.UvEdge** %edge817, align 8, !dbg !6463
  %680 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6465
  %681 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6466
  %682 = load i32*, i32** %uvfinal_map, align 8, !dbg !6467
  %683 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !6468
  call void @stitch_island_calculate_edge_rotation(%struct.UvEdge* %679, %struct.StitchState* %680, %struct.UVVertAverage* %681, i32* %682, %struct.IslandStitchData* %683), !dbg !6469
  %684 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !6470
  %685 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6471
  %uvs844 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %685, i32 0, i32 9, !dbg !6472
  %686 = load %struct.UvElement**, %struct.UvElement*** %uvs844, align 8, !dbg !6472
  %687 = load %struct.UvEdge*, %struct.UvEdge** %edge817, align 8, !dbg !6473
  %uv1845 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %687, i32 0, i32 0, !dbg !6474
  %688 = load i32, i32* %uv1845, align 8, !dbg !6474
  %idxprom846 = zext i32 %688 to i64, !dbg !6471
  %arrayidx847 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %686, i64 %idxprom846, !dbg !6471
  %689 = load %struct.UvElement*, %struct.UvElement** %arrayidx847, align 8, !dbg !6471
  %island848 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %689, i32 0, i32 5, !dbg !6475
  %690 = load i16, i16* %island848, align 4, !dbg !6475
  %idxprom849 = zext i16 %690 to i64, !dbg !6470
  %arrayidx850 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %684, i64 %idxprom849, !dbg !6470
  %use_edge_rotation = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx850, i32 0, i32 9, !dbg !6476
  store i8 1, i8* %use_edge_rotation, align 2, !dbg !6477
  br label %if.end851, !dbg !6478

if.end851:                                        ; preds = %if.then843, %land.lhs.true834, %land.lhs.true825, %for.body816
  br label %for.inc852, !dbg !6479

for.inc852:                                       ; preds = %if.end851
  %691 = load i32, i32* %i, align 4, !dbg !6480
  %inc853 = add nsw i32 %691, 1, !dbg !6480
  store i32 %inc853, i32* %i, align 4, !dbg !6480
  br label %for.cond812, !dbg !6481, !llvm.loop !6482

for.end854:                                       ; preds = %for.cond812
  %692 = load i32, i32* %final.addr, align 4, !dbg !6484
  %tobool855 = icmp ne i32 %692, 0, !dbg !6484
  br i1 %tobool855, label %land.lhs.true856, label %if.end894, !dbg !6486

land.lhs.true856:                                 ; preds = %for.end854
  %693 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6487
  %clear_seams = getelementptr inbounds %struct.StitchState, %struct.StitchState* %693, i32 0, i32 6, !dbg !6488
  %694 = load i8, i8* %clear_seams, align 8, !dbg !6488
  %conv857 = zext i8 %694 to i32, !dbg !6487
  %tobool858 = icmp ne i32 %conv857, 0, !dbg !6487
  br i1 %tobool858, label %if.then859, label %if.end894, !dbg !6489

if.then859:                                       ; preds = %land.lhs.true856
  store i32 0, i32* %i, align 4, !dbg !6490
  br label %for.cond860, !dbg !6493

for.cond860:                                      ; preds = %for.inc891, %if.then859
  %695 = load i32, i32* %i, align 4, !dbg !6494
  %696 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6496
  %total_separate_edges861 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %696, i32 0, i32 14, !dbg !6497
  %697 = load i32, i32* %total_separate_edges861, align 8, !dbg !6497
  %cmp862 = icmp slt i32 %695, %697, !dbg !6498
  br i1 %cmp862, label %for.body864, label %for.end893, !dbg !6499

for.body864:                                      ; preds = %for.cond860
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge865, metadata !6500, metadata !DIExpression()), !dbg !6502
  %698 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6503
  %edges866 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %698, i32 0, i32 12, !dbg !6504
  %699 = load %struct.UvEdge*, %struct.UvEdge** %edges866, align 8, !dbg !6504
  %700 = load i32, i32* %i, align 4, !dbg !6505
  %idx.ext867 = sext i32 %700 to i64, !dbg !6506
  %add.ptr868 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %699, i64 %idx.ext867, !dbg !6506
  store %struct.UvEdge* %add.ptr868, %struct.UvEdge** %edge865, align 8, !dbg !6502
  %701 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6507
  %uvs869 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %701, i32 0, i32 9, !dbg !6509
  %702 = load %struct.UvElement**, %struct.UvElement*** %uvs869, align 8, !dbg !6509
  %703 = load %struct.UvEdge*, %struct.UvEdge** %edge865, align 8, !dbg !6510
  %uv1870 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %703, i32 0, i32 0, !dbg !6511
  %704 = load i32, i32* %uv1870, align 8, !dbg !6511
  %idxprom871 = zext i32 %704 to i64, !dbg !6507
  %arrayidx872 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %702, i64 %idxprom871, !dbg !6507
  %705 = load %struct.UvElement*, %struct.UvElement** %arrayidx872, align 8, !dbg !6507
  %flag873 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %705, i32 0, i32 4, !dbg !6512
  %706 = load i8, i8* %flag873, align 1, !dbg !6512
  %conv874 = zext i8 %706 to i32, !dbg !6507
  %and875 = and i32 %conv874, 2, !dbg !6513
  %tobool876 = icmp ne i32 %and875, 0, !dbg !6513
  br i1 %tobool876, label %land.lhs.true877, label %if.end890, !dbg !6514

land.lhs.true877:                                 ; preds = %for.body864
  %707 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6515
  %uvs878 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %707, i32 0, i32 9, !dbg !6516
  %708 = load %struct.UvElement**, %struct.UvElement*** %uvs878, align 8, !dbg !6516
  %709 = load %struct.UvEdge*, %struct.UvEdge** %edge865, align 8, !dbg !6517
  %uv2879 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %709, i32 0, i32 1, !dbg !6518
  %710 = load i32, i32* %uv2879, align 4, !dbg !6518
  %idxprom880 = zext i32 %710 to i64, !dbg !6515
  %arrayidx881 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %708, i64 %idxprom880, !dbg !6515
  %711 = load %struct.UvElement*, %struct.UvElement** %arrayidx881, align 8, !dbg !6515
  %flag882 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %711, i32 0, i32 4, !dbg !6519
  %712 = load i8, i8* %flag882, align 1, !dbg !6519
  %conv883 = zext i8 %712 to i32, !dbg !6515
  %and884 = and i32 %conv883, 2, !dbg !6520
  %tobool885 = icmp ne i32 %and884, 0, !dbg !6520
  br i1 %tobool885, label %if.then886, label %if.end890, !dbg !6521

if.then886:                                       ; preds = %land.lhs.true877
  %713 = load %struct.UvEdge*, %struct.UvEdge** %edge865, align 8, !dbg !6522
  %element887 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %713, i32 0, i32 3, !dbg !6522
  %714 = load %struct.UvElement*, %struct.UvElement** %element887, align 8, !dbg !6522
  %l888 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %714, i32 0, i32 1, !dbg !6522
  %715 = load %struct.BMLoop*, %struct.BMLoop** %l888, align 8, !dbg !6522
  %e = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %715, i32 0, i32 2, !dbg !6522
  %716 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !6522
  %head889 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %716, i32 0, i32 0, !dbg !6522
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head889, i8 zeroext 4), !dbg !6522
  br label %if.end890, !dbg !6522

if.end890:                                        ; preds = %if.then886, %land.lhs.true877, %for.body864
  br label %for.inc891, !dbg !6523

for.inc891:                                       ; preds = %if.end890
  %717 = load i32, i32* %i, align 4, !dbg !6524
  %inc892 = add nsw i32 %717, 1, !dbg !6524
  store i32 %inc892, i32* %i, align 4, !dbg !6524
  br label %for.cond860, !dbg !6525, !llvm.loop !6526

for.end893:                                       ; preds = %for.cond860
  br label %if.end894, !dbg !6528

if.end894:                                        ; preds = %for.end893, %land.lhs.true856, %for.end854
  store i32 0, i32* %i, align 4, !dbg !6529
  br label %for.cond895, !dbg !6531

for.cond895:                                      ; preds = %for.inc917, %if.end894
  %718 = load i32, i32* %i, align 4, !dbg !6532
  %719 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6534
  %selection_size896 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %719, i32 0, i32 17, !dbg !6535
  %720 = load i32, i32* %selection_size896, align 8, !dbg !6535
  %cmp897 = icmp slt i32 %718, %720, !dbg !6536
  br i1 %cmp897, label %for.body899, label %for.end919, !dbg !6537

for.body899:                                      ; preds = %for.cond895
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element900, metadata !6538, metadata !DIExpression()), !dbg !6540
  %721 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6541
  %selection_stack901 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %721, i32 0, i32 16, !dbg !6542
  %722 = load i8**, i8*** %selection_stack901, align 8, !dbg !6542
  %723 = load i32, i32* %i, align 4, !dbg !6543
  %idxprom902 = sext i32 %723 to i64, !dbg !6541
  %arrayidx903 = getelementptr inbounds i8*, i8** %722, i64 %idxprom902, !dbg !6541
  %724 = load i8*, i8** %arrayidx903, align 8, !dbg !6541
  %725 = bitcast i8* %724 to %struct.UvElement*, !dbg !6541
  store %struct.UvElement* %725, %struct.UvElement** %element900, align 8, !dbg !6540
  %726 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !6544
  %727 = load %struct.UvElement*, %struct.UvElement** %element900, align 8, !dbg !6546
  %island904 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %727, i32 0, i32 5, !dbg !6547
  %728 = load i16, i16* %island904, align 4, !dbg !6547
  %idxprom905 = zext i16 %728 to i64, !dbg !6544
  %arrayidx906 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %726, i64 %idxprom905, !dbg !6544
  %use_edge_rotation907 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx906, i32 0, i32 9, !dbg !6548
  %729 = load i8, i8* %use_edge_rotation907, align 2, !dbg !6548
  %tobool908 = icmp ne i8 %729, 0, !dbg !6544
  br i1 %tobool908, label %if.end916, label %if.then909, !dbg !6549

if.then909:                                       ; preds = %for.body899
  %730 = load %struct.UvElement*, %struct.UvElement** %element900, align 8, !dbg !6550
  %flag910 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %730, i32 0, i32 4, !dbg !6553
  %731 = load i8, i8* %flag910, align 1, !dbg !6553
  %conv911 = zext i8 %731 to i32, !dbg !6550
  %and912 = and i32 %conv911, 2, !dbg !6554
  %tobool913 = icmp ne i32 %and912, 0, !dbg !6554
  br i1 %tobool913, label %if.then914, label %if.end915, !dbg !6555

if.then914:                                       ; preds = %if.then909
  %732 = load %struct.UvElement*, %struct.UvElement** %element900, align 8, !dbg !6556
  %733 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6558
  %734 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !6559
  call void @stitch_island_calculate_vert_rotation(%struct.UvElement* %732, %struct.StitchState* %733, %struct.IslandStitchData* %734), !dbg !6560
  br label %if.end915, !dbg !6561

if.end915:                                        ; preds = %if.then914, %if.then909
  br label %if.end916, !dbg !6562

if.end916:                                        ; preds = %if.end915, %for.body899
  br label %for.inc917, !dbg !6563

for.inc917:                                       ; preds = %if.end916
  %735 = load i32, i32* %i, align 4, !dbg !6564
  %inc918 = add nsw i32 %735, 1, !dbg !6564
  store i32 %inc918, i32* %i, align 4, !dbg !6564
  br label %for.cond895, !dbg !6565, !llvm.loop !6566

for.end919:                                       ; preds = %for.cond895
  br label %if.end1048, !dbg !6568

if.else920:                                       ; preds = %if.then737
  store i32 0, i32* %i, align 4, !dbg !6569
  br label %for.cond921, !dbg !6572

for.cond921:                                      ; preds = %for.inc990, %if.else920
  %736 = load i32, i32* %i, align 4, !dbg !6573
  %737 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6575
  %total_separate_uvs922 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %737, i32 0, i32 15, !dbg !6576
  %738 = load i32, i32* %total_separate_uvs922, align 4, !dbg !6576
  %cmp923 = icmp slt i32 %736, %738, !dbg !6577
  br i1 %cmp923, label %for.body925, label %for.end992, !dbg !6578

for.body925:                                      ; preds = %for.cond921
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element926, metadata !6579, metadata !DIExpression()), !dbg !6581
  %739 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6582
  %uvs927 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %739, i32 0, i32 9, !dbg !6583
  %740 = load %struct.UvElement**, %struct.UvElement*** %uvs927, align 8, !dbg !6583
  %741 = load i32, i32* %i, align 4, !dbg !6584
  %idxprom928 = sext i32 %741 to i64, !dbg !6582
  %arrayidx929 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %740, i64 %idxprom928, !dbg !6582
  %742 = load %struct.UvElement*, %struct.UvElement** %arrayidx929, align 8, !dbg !6582
  store %struct.UvElement* %742, %struct.UvElement** %element926, align 8, !dbg !6581
  %743 = load %struct.UvElement*, %struct.UvElement** %element926, align 8, !dbg !6585
  %flag930 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %743, i32 0, i32 4, !dbg !6587
  %744 = load i8, i8* %flag930, align 1, !dbg !6587
  %conv931 = zext i8 %744 to i32, !dbg !6585
  %and932 = and i32 %conv931, 2, !dbg !6588
  %tobool933 = icmp ne i32 %and932, 0, !dbg !6588
  br i1 %tobool933, label %if.then934, label %if.end989, !dbg !6589

if.then934:                                       ; preds = %for.body925
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l935, metadata !6590, metadata !DIExpression()), !dbg !6592
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv936, metadata !6593, metadata !DIExpression()), !dbg !6594
  %745 = load %struct.UvElement*, %struct.UvElement** %element926, align 8, !dbg !6595
  %l937 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %745, i32 0, i32 1, !dbg !6596
  %746 = load %struct.BMLoop*, %struct.BMLoop** %l937, align 8, !dbg !6596
  store %struct.BMLoop* %746, %struct.BMLoop** %l935, align 8, !dbg !6597
  %747 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6598
  %ldata938 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %747, i32 0, i32 26, !dbg !6599
  %748 = load %struct.BMLoop*, %struct.BMLoop** %l935, align 8, !dbg !6600
  %head939 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %748, i32 0, i32 0, !dbg !6601
  %data940 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head939, i32 0, i32 0, !dbg !6602
  %749 = load i8*, i8** %data940, align 8, !dbg !6602
  %call941 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata938, i8* %749, i32 16), !dbg !6603
  %750 = bitcast i8* %call941 to %struct.MLoopUV*, !dbg !6603
  store %struct.MLoopUV* %750, %struct.MLoopUV** %luv936, align 8, !dbg !6604
  %751 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6605
  %752 = load i32, i32* %i, align 4, !dbg !6606
  %idxprom942 = sext i32 %752 to i64, !dbg !6605
  %arrayidx943 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %751, i64 %idxprom942, !dbg !6605
  %uv944 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx943, i32 0, i32 0, !dbg !6607
  %arrayidx945 = getelementptr inbounds [2 x float], [2 x float]* %uv944, i64 0, i64 0, !dbg !6605
  %753 = load float, float* %arrayidx945, align 4, !dbg !6605
  %754 = load %struct.MLoopUV*, %struct.MLoopUV** %luv936, align 8, !dbg !6608
  %uv946 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %754, i32 0, i32 0, !dbg !6609
  %arrayidx947 = getelementptr inbounds [2 x float], [2 x float]* %uv946, i64 0, i64 0, !dbg !6608
  %755 = load float, float* %arrayidx947, align 4, !dbg !6608
  %sub948 = fsub float %753, %755, !dbg !6610
  %756 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !6611
  %757 = load %struct.UvElement*, %struct.UvElement** %element926, align 8, !dbg !6612
  %island949 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %757, i32 0, i32 5, !dbg !6613
  %758 = load i16, i16* %island949, align 4, !dbg !6613
  %idxprom950 = zext i16 %758 to i64, !dbg !6611
  %arrayidx951 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %756, i64 %idxprom950, !dbg !6611
  %translation952 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx951, i32 0, i32 2, !dbg !6614
  %arrayidx953 = getelementptr inbounds [2 x float], [2 x float]* %translation952, i64 0, i64 0, !dbg !6611
  %759 = load float, float* %arrayidx953, align 4, !dbg !6615
  %add954 = fadd float %759, %sub948, !dbg !6615
  store float %add954, float* %arrayidx953, align 4, !dbg !6615
  %760 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6616
  %761 = load i32, i32* %i, align 4, !dbg !6617
  %idxprom955 = sext i32 %761 to i64, !dbg !6616
  %arrayidx956 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %760, i64 %idxprom955, !dbg !6616
  %uv957 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx956, i32 0, i32 0, !dbg !6618
  %arrayidx958 = getelementptr inbounds [2 x float], [2 x float]* %uv957, i64 0, i64 1, !dbg !6616
  %762 = load float, float* %arrayidx958, align 4, !dbg !6616
  %763 = load %struct.MLoopUV*, %struct.MLoopUV** %luv936, align 8, !dbg !6619
  %uv959 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %763, i32 0, i32 0, !dbg !6620
  %arrayidx960 = getelementptr inbounds [2 x float], [2 x float]* %uv959, i64 0, i64 1, !dbg !6619
  %764 = load float, float* %arrayidx960, align 4, !dbg !6619
  %sub961 = fsub float %762, %764, !dbg !6621
  %765 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !6622
  %766 = load %struct.UvElement*, %struct.UvElement** %element926, align 8, !dbg !6623
  %island962 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %766, i32 0, i32 5, !dbg !6624
  %767 = load i16, i16* %island962, align 4, !dbg !6624
  %idxprom963 = zext i16 %767 to i64, !dbg !6622
  %arrayidx964 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %765, i64 %idxprom963, !dbg !6622
  %translation965 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx964, i32 0, i32 2, !dbg !6625
  %arrayidx966 = getelementptr inbounds [2 x float], [2 x float]* %translation965, i64 0, i64 1, !dbg !6622
  %768 = load float, float* %arrayidx966, align 4, !dbg !6626
  %add967 = fadd float %768, %sub961, !dbg !6626
  store float %add967, float* %arrayidx966, align 4, !dbg !6626
  %769 = load %struct.MLoopUV*, %struct.MLoopUV** %luv936, align 8, !dbg !6627
  %uv968 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %769, i32 0, i32 0, !dbg !6628
  %arrayidx969 = getelementptr inbounds [2 x float], [2 x float]* %uv968, i64 0, i64 0, !dbg !6627
  %770 = load float, float* %arrayidx969, align 4, !dbg !6627
  %771 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !6629
  %772 = load %struct.UvElement*, %struct.UvElement** %element926, align 8, !dbg !6630
  %island970 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %772, i32 0, i32 5, !dbg !6631
  %773 = load i16, i16* %island970, align 4, !dbg !6631
  %idxprom971 = zext i16 %773 to i64, !dbg !6629
  %arrayidx972 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %771, i64 %idxprom971, !dbg !6629
  %medianPoint973 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx972, i32 0, i32 3, !dbg !6632
  %arrayidx974 = getelementptr inbounds [2 x float], [2 x float]* %medianPoint973, i64 0, i64 0, !dbg !6629
  %774 = load float, float* %arrayidx974, align 4, !dbg !6633
  %add975 = fadd float %774, %770, !dbg !6633
  store float %add975, float* %arrayidx974, align 4, !dbg !6633
  %775 = load %struct.MLoopUV*, %struct.MLoopUV** %luv936, align 8, !dbg !6634
  %uv976 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %775, i32 0, i32 0, !dbg !6635
  %arrayidx977 = getelementptr inbounds [2 x float], [2 x float]* %uv976, i64 0, i64 1, !dbg !6634
  %776 = load float, float* %arrayidx977, align 4, !dbg !6634
  %777 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !6636
  %778 = load %struct.UvElement*, %struct.UvElement** %element926, align 8, !dbg !6637
  %island978 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %778, i32 0, i32 5, !dbg !6638
  %779 = load i16, i16* %island978, align 4, !dbg !6638
  %idxprom979 = zext i16 %779 to i64, !dbg !6636
  %arrayidx980 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %777, i64 %idxprom979, !dbg !6636
  %medianPoint981 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx980, i32 0, i32 3, !dbg !6639
  %arrayidx982 = getelementptr inbounds [2 x float], [2 x float]* %medianPoint981, i64 0, i64 1, !dbg !6636
  %780 = load float, float* %arrayidx982, align 4, !dbg !6640
  %add983 = fadd float %780, %776, !dbg !6640
  store float %add983, float* %arrayidx982, align 4, !dbg !6640
  %781 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !6641
  %782 = load %struct.UvElement*, %struct.UvElement** %element926, align 8, !dbg !6642
  %island984 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %782, i32 0, i32 5, !dbg !6643
  %783 = load i16, i16* %island984, align 4, !dbg !6643
  %idxprom985 = zext i16 %783 to i64, !dbg !6641
  %arrayidx986 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %781, i64 %idxprom985, !dbg !6641
  %numOfElements987 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx986, i32 0, i32 4, !dbg !6644
  %784 = load i32, i32* %numOfElements987, align 4, !dbg !6645
  %inc988 = add nsw i32 %784, 1, !dbg !6645
  store i32 %inc988, i32* %numOfElements987, align 4, !dbg !6645
  br label %if.end989, !dbg !6646

if.end989:                                        ; preds = %if.then934, %for.body925
  br label %for.inc990, !dbg !6647

for.inc990:                                       ; preds = %if.end989
  %785 = load i32, i32* %i, align 4, !dbg !6648
  %inc991 = add nsw i32 %785, 1, !dbg !6648
  store i32 %inc991, i32* %i, align 4, !dbg !6648
  br label %for.cond921, !dbg !6649, !llvm.loop !6650

for.end992:                                       ; preds = %for.cond921
  store i32 0, i32* %i, align 4, !dbg !6652
  br label %for.cond993, !dbg !6654

for.cond993:                                      ; preds = %for.inc1016, %for.end992
  %786 = load i32, i32* %i, align 4, !dbg !6655
  %787 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6657
  %selection_size994 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %787, i32 0, i32 17, !dbg !6658
  %788 = load i32, i32* %selection_size994, align 8, !dbg !6658
  %cmp995 = icmp slt i32 %786, %788, !dbg !6659
  br i1 %cmp995, label %for.body997, label %for.end1018, !dbg !6660

for.body997:                                      ; preds = %for.cond993
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge998, metadata !6661, metadata !DIExpression()), !dbg !6663
  %789 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6664
  %selection_stack999 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %789, i32 0, i32 16, !dbg !6665
  %790 = load i8**, i8*** %selection_stack999, align 8, !dbg !6665
  %791 = load i32, i32* %i, align 4, !dbg !6666
  %idxprom1000 = sext i32 %791 to i64, !dbg !6664
  %arrayidx1001 = getelementptr inbounds i8*, i8** %790, i64 %idxprom1000, !dbg !6664
  %792 = load i8*, i8** %arrayidx1001, align 8, !dbg !6664
  %793 = bitcast i8* %792 to %struct.UvEdge*, !dbg !6664
  store %struct.UvEdge* %793, %struct.UvEdge** %edge998, align 8, !dbg !6663
  %794 = load %struct.UvEdge*, %struct.UvEdge** %edge998, align 8, !dbg !6667
  %flag1002 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %794, i32 0, i32 2, !dbg !6669
  %795 = load i8, i8* %flag1002, align 8, !dbg !6669
  %conv1003 = zext i8 %795 to i32, !dbg !6667
  %and1004 = and i32 %conv1003, 2, !dbg !6670
  %tobool1005 = icmp ne i32 %and1004, 0, !dbg !6670
  br i1 %tobool1005, label %if.then1006, label %if.end1015, !dbg !6671

if.then1006:                                      ; preds = %for.body997
  %796 = load %struct.UvEdge*, %struct.UvEdge** %edge998, align 8, !dbg !6672
  %797 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6674
  %798 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6675
  %799 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !6676
  call void @stitch_island_calculate_edge_rotation(%struct.UvEdge* %796, %struct.StitchState* %797, %struct.UVVertAverage* %798, i32* null, %struct.IslandStitchData* %799), !dbg !6677
  %800 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !6678
  %801 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6679
  %uvs1007 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %801, i32 0, i32 9, !dbg !6680
  %802 = load %struct.UvElement**, %struct.UvElement*** %uvs1007, align 8, !dbg !6680
  %803 = load %struct.UvEdge*, %struct.UvEdge** %edge998, align 8, !dbg !6681
  %uv11008 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %803, i32 0, i32 0, !dbg !6682
  %804 = load i32, i32* %uv11008, align 8, !dbg !6682
  %idxprom1009 = zext i32 %804 to i64, !dbg !6679
  %arrayidx1010 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %802, i64 %idxprom1009, !dbg !6679
  %805 = load %struct.UvElement*, %struct.UvElement** %arrayidx1010, align 8, !dbg !6679
  %island1011 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %805, i32 0, i32 5, !dbg !6683
  %806 = load i16, i16* %island1011, align 4, !dbg !6683
  %idxprom1012 = zext i16 %806 to i64, !dbg !6678
  %arrayidx1013 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %800, i64 %idxprom1012, !dbg !6678
  %use_edge_rotation1014 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx1013, i32 0, i32 9, !dbg !6684
  store i8 1, i8* %use_edge_rotation1014, align 2, !dbg !6685
  br label %if.end1015, !dbg !6686

if.end1015:                                       ; preds = %if.then1006, %for.body997
  br label %for.inc1016, !dbg !6687

for.inc1016:                                      ; preds = %if.end1015
  %807 = load i32, i32* %i, align 4, !dbg !6688
  %inc1017 = add nsw i32 %807, 1, !dbg !6688
  store i32 %inc1017, i32* %i, align 4, !dbg !6688
  br label %for.cond993, !dbg !6689, !llvm.loop !6690

for.end1018:                                      ; preds = %for.cond993
  %808 = load i32, i32* %final.addr, align 4, !dbg !6692
  %tobool1019 = icmp ne i32 %808, 0, !dbg !6692
  br i1 %tobool1019, label %land.lhs.true1020, label %if.end1047, !dbg !6694

land.lhs.true1020:                                ; preds = %for.end1018
  %809 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6695
  %clear_seams1021 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %809, i32 0, i32 6, !dbg !6696
  %810 = load i8, i8* %clear_seams1021, align 8, !dbg !6696
  %conv1022 = zext i8 %810 to i32, !dbg !6695
  %tobool1023 = icmp ne i32 %conv1022, 0, !dbg !6695
  br i1 %tobool1023, label %if.then1024, label %if.end1047, !dbg !6697

if.then1024:                                      ; preds = %land.lhs.true1020
  store i32 0, i32* %i, align 4, !dbg !6698
  br label %for.cond1025, !dbg !6701

for.cond1025:                                     ; preds = %for.inc1044, %if.then1024
  %811 = load i32, i32* %i, align 4, !dbg !6702
  %812 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6704
  %selection_size1026 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %812, i32 0, i32 17, !dbg !6705
  %813 = load i32, i32* %selection_size1026, align 8, !dbg !6705
  %cmp1027 = icmp slt i32 %811, %813, !dbg !6706
  br i1 %cmp1027, label %for.body1029, label %for.end1046, !dbg !6707

for.body1029:                                     ; preds = %for.cond1025
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge1030, metadata !6708, metadata !DIExpression()), !dbg !6710
  %814 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6711
  %selection_stack1031 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %814, i32 0, i32 16, !dbg !6712
  %815 = load i8**, i8*** %selection_stack1031, align 8, !dbg !6712
  %816 = load i32, i32* %i, align 4, !dbg !6713
  %idxprom1032 = sext i32 %816 to i64, !dbg !6711
  %arrayidx1033 = getelementptr inbounds i8*, i8** %815, i64 %idxprom1032, !dbg !6711
  %817 = load i8*, i8** %arrayidx1033, align 8, !dbg !6711
  %818 = bitcast i8* %817 to %struct.UvEdge*, !dbg !6711
  store %struct.UvEdge* %818, %struct.UvEdge** %edge1030, align 8, !dbg !6710
  %819 = load %struct.UvEdge*, %struct.UvEdge** %edge1030, align 8, !dbg !6714
  %flag1034 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %819, i32 0, i32 2, !dbg !6716
  %820 = load i8, i8* %flag1034, align 8, !dbg !6716
  %conv1035 = zext i8 %820 to i32, !dbg !6714
  %and1036 = and i32 %conv1035, 2, !dbg !6717
  %tobool1037 = icmp ne i32 %and1036, 0, !dbg !6717
  br i1 %tobool1037, label %if.then1038, label %if.end1043, !dbg !6718

if.then1038:                                      ; preds = %for.body1029
  %821 = load %struct.UvEdge*, %struct.UvEdge** %edge1030, align 8, !dbg !6719
  %element1039 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %821, i32 0, i32 3, !dbg !6719
  %822 = load %struct.UvElement*, %struct.UvElement** %element1039, align 8, !dbg !6719
  %l1040 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %822, i32 0, i32 1, !dbg !6719
  %823 = load %struct.BMLoop*, %struct.BMLoop** %l1040, align 8, !dbg !6719
  %e1041 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %823, i32 0, i32 2, !dbg !6719
  %824 = load %struct.BMEdge*, %struct.BMEdge** %e1041, align 8, !dbg !6719
  %head1042 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %824, i32 0, i32 0, !dbg !6719
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head1042, i8 zeroext 4), !dbg !6719
  br label %if.end1043, !dbg !6721

if.end1043:                                       ; preds = %if.then1038, %for.body1029
  br label %for.inc1044, !dbg !6722

for.inc1044:                                      ; preds = %if.end1043
  %825 = load i32, i32* %i, align 4, !dbg !6723
  %inc1045 = add nsw i32 %825, 1, !dbg !6723
  store i32 %inc1045, i32* %i, align 4, !dbg !6723
  br label %for.cond1025, !dbg !6724, !llvm.loop !6725

for.end1046:                                      ; preds = %for.cond1025
  br label %if.end1047, !dbg !6727

if.end1047:                                       ; preds = %for.end1046, %land.lhs.true1020, %for.end1018
  br label %if.end1048

if.end1048:                                       ; preds = %if.end1047, %for.end919
  br label %if.end1049, !dbg !6728

if.end1049:                                       ; preds = %if.end1048, %if.end734
  store i32 0, i32* %i, align 4, !dbg !6729
  br label %for.cond1050, !dbg !6731

for.cond1050:                                     ; preds = %for.inc1087, %if.end1049
  %826 = load i32, i32* %i, align 4, !dbg !6732
  %827 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6734
  %selection_size1051 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %827, i32 0, i32 17, !dbg !6735
  %828 = load i32, i32* %selection_size1051, align 8, !dbg !6735
  %cmp1052 = icmp slt i32 %826, %828, !dbg !6736
  br i1 %cmp1052, label %for.body1054, label %for.end1089, !dbg !6737

for.body1054:                                     ; preds = %for.cond1050
  %829 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6738
  %mode1055 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %829, i32 0, i32 20, !dbg !6741
  %830 = load i8, i8* %mode1055, align 8, !dbg !6741
  %conv1056 = zext i8 %830 to i32, !dbg !6738
  %cmp1057 = icmp eq i32 %conv1056, 0, !dbg !6742
  br i1 %cmp1057, label %if.then1059, label %if.else1065, !dbg !6743

if.then1059:                                      ; preds = %for.body1054
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element1060, metadata !6744, metadata !DIExpression()), !dbg !6746
  %831 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6747
  %selection_stack1061 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %831, i32 0, i32 16, !dbg !6748
  %832 = load i8**, i8*** %selection_stack1061, align 8, !dbg !6748
  %833 = load i32, i32* %i, align 4, !dbg !6749
  %idxprom1062 = sext i32 %833 to i64, !dbg !6747
  %arrayidx1063 = getelementptr inbounds i8*, i8** %832, i64 %idxprom1062, !dbg !6747
  %834 = load i8*, i8** %arrayidx1063, align 8, !dbg !6747
  %835 = bitcast i8* %834 to %struct.UvElement*, !dbg !6747
  store %struct.UvElement* %835, %struct.UvElement** %element1060, align 8, !dbg !6746
  %836 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6750
  %837 = load %struct.UvElement*, %struct.UvElement** %element1060, align 8, !dbg !6751
  %838 = load i32, i32* %i, align 4, !dbg !6752
  %839 = load %struct.PreviewPosition*, %struct.PreviewPosition** %preview_position, align 8, !dbg !6753
  %840 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6754
  %841 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6755
  %842 = load i32, i32* %final.addr, align 4, !dbg !6756
  %conv1064 = trunc i32 %842 to i8, !dbg !6756
  call void @stitch_propagate_uv_final_position(%struct.Scene* %836, %struct.UvElement* %837, i32 %838, %struct.PreviewPosition* %839, %struct.UVVertAverage* %840, %struct.StitchState* %841, i8 zeroext %conv1064), !dbg !6757
  br label %if.end1086, !dbg !6758

if.else1065:                                      ; preds = %for.body1054
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge1066, metadata !6759, metadata !DIExpression()), !dbg !6761
  %843 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6762
  %selection_stack1067 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %843, i32 0, i32 16, !dbg !6763
  %844 = load i8**, i8*** %selection_stack1067, align 8, !dbg !6763
  %845 = load i32, i32* %i, align 4, !dbg !6764
  %idxprom1068 = sext i32 %845 to i64, !dbg !6762
  %arrayidx1069 = getelementptr inbounds i8*, i8** %844, i64 %idxprom1068, !dbg !6762
  %846 = load i8*, i8** %arrayidx1069, align 8, !dbg !6762
  %847 = bitcast i8* %846 to %struct.UvEdge*, !dbg !6762
  store %struct.UvEdge* %847, %struct.UvEdge** %edge1066, align 8, !dbg !6761
  %848 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6765
  %849 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6766
  %uvs1070 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %849, i32 0, i32 9, !dbg !6767
  %850 = load %struct.UvElement**, %struct.UvElement*** %uvs1070, align 8, !dbg !6767
  %851 = load %struct.UvEdge*, %struct.UvEdge** %edge1066, align 8, !dbg !6768
  %uv11071 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %851, i32 0, i32 0, !dbg !6769
  %852 = load i32, i32* %uv11071, align 8, !dbg !6769
  %idxprom1072 = zext i32 %852 to i64, !dbg !6766
  %arrayidx1073 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %850, i64 %idxprom1072, !dbg !6766
  %853 = load %struct.UvElement*, %struct.UvElement** %arrayidx1073, align 8, !dbg !6766
  %854 = load %struct.UvEdge*, %struct.UvEdge** %edge1066, align 8, !dbg !6770
  %uv11074 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %854, i32 0, i32 0, !dbg !6771
  %855 = load i32, i32* %uv11074, align 8, !dbg !6771
  %856 = load %struct.PreviewPosition*, %struct.PreviewPosition** %preview_position, align 8, !dbg !6772
  %857 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6773
  %858 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6774
  %859 = load i32, i32* %final.addr, align 4, !dbg !6775
  %conv1075 = trunc i32 %859 to i8, !dbg !6775
  call void @stitch_propagate_uv_final_position(%struct.Scene* %848, %struct.UvElement* %853, i32 %855, %struct.PreviewPosition* %856, %struct.UVVertAverage* %857, %struct.StitchState* %858, i8 zeroext %conv1075), !dbg !6776
  %860 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6777
  %861 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6778
  %uvs1076 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %861, i32 0, i32 9, !dbg !6779
  %862 = load %struct.UvElement**, %struct.UvElement*** %uvs1076, align 8, !dbg !6779
  %863 = load %struct.UvEdge*, %struct.UvEdge** %edge1066, align 8, !dbg !6780
  %uv21077 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %863, i32 0, i32 1, !dbg !6781
  %864 = load i32, i32* %uv21077, align 4, !dbg !6781
  %idxprom1078 = zext i32 %864 to i64, !dbg !6778
  %arrayidx1079 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %862, i64 %idxprom1078, !dbg !6778
  %865 = load %struct.UvElement*, %struct.UvElement** %arrayidx1079, align 8, !dbg !6778
  %866 = load %struct.UvEdge*, %struct.UvEdge** %edge1066, align 8, !dbg !6782
  %uv21080 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %866, i32 0, i32 1, !dbg !6783
  %867 = load i32, i32* %uv21080, align 4, !dbg !6783
  %868 = load %struct.PreviewPosition*, %struct.PreviewPosition** %preview_position, align 8, !dbg !6784
  %869 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6785
  %870 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6786
  %871 = load i32, i32* %final.addr, align 4, !dbg !6787
  %conv1081 = trunc i32 %871 to i8, !dbg !6787
  call void @stitch_propagate_uv_final_position(%struct.Scene* %860, %struct.UvElement* %865, i32 %867, %struct.PreviewPosition* %868, %struct.UVVertAverage* %869, %struct.StitchState* %870, i8 zeroext %conv1081), !dbg !6788
  %872 = load %struct.UvEdge*, %struct.UvEdge** %edge1066, align 8, !dbg !6789
  %flag1082 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %872, i32 0, i32 2, !dbg !6790
  %873 = load i8, i8* %flag1082, align 8, !dbg !6791
  %conv1083 = zext i8 %873 to i32, !dbg !6791
  %and1084 = and i32 %conv1083, 9, !dbg !6791
  %conv1085 = trunc i32 %and1084 to i8, !dbg !6791
  store i8 %conv1085, i8* %flag1082, align 8, !dbg !6791
  br label %if.end1086

if.end1086:                                       ; preds = %if.else1065, %if.then1059
  br label %for.inc1087, !dbg !6792

for.inc1087:                                      ; preds = %if.end1086
  %874 = load i32, i32* %i, align 4, !dbg !6793
  %inc1088 = add nsw i32 %874, 1, !dbg !6793
  store i32 %inc1088, i32* %i, align 4, !dbg !6793
  br label %for.cond1050, !dbg !6794, !llvm.loop !6795

for.end1089:                                      ; preds = %for.cond1050
  %875 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6797
  %snap_islands1090 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %875, i32 0, i32 3, !dbg !6799
  %876 = load i8, i8* %snap_islands1090, align 4, !dbg !6799
  %tobool1091 = icmp ne i8 %876, 0, !dbg !6797
  br i1 %tobool1091, label %if.then1092, label %if.end1093, !dbg !6800

if.then1092:                                      ; preds = %for.end1089
  %877 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6801
  %878 = load %struct.PreviewPosition*, %struct.PreviewPosition** %preview_position, align 8, !dbg !6803
  %879 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !6804
  %880 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !6805
  %881 = load i32, i32* %final.addr, align 4, !dbg !6806
  call void @stitch_calculate_island_snapping(%struct.StitchState* %877, %struct.PreviewPosition* %878, %struct.StitchPreviewer* %879, %struct.IslandStitchData* %880, i32 %881), !dbg !6807
  br label %if.end1093, !dbg !6808

if.end1093:                                       ; preds = %if.then1092, %for.end1089
  %882 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6809
  %883 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position, align 8, !dbg !6810
  %884 = bitcast %struct.UVVertAverage* %883 to i8*, !dbg !6810
  call void %882(i8* %884), !dbg !6809
  %885 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !6811
  %mode1094 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %885, i32 0, i32 20, !dbg !6813
  %886 = load i8, i8* %mode1094, align 8, !dbg !6813
  %conv1095 = zext i8 %886 to i32, !dbg !6811
  %cmp1096 = icmp eq i32 %conv1095, 0, !dbg !6814
  br i1 %cmp1096, label %if.then1098, label %if.end1099, !dbg !6815

if.then1098:                                      ; preds = %if.end1093
  %887 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6816
  %888 = load i32*, i32** %uvfinal_map, align 8, !dbg !6818
  %889 = bitcast i32* %888 to i8*, !dbg !6818
  call void %887(i8* %889), !dbg !6816
  br label %if.end1099, !dbg !6819

if.end1099:                                       ; preds = %if.then1098, %if.end1093
  %890 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6820
  %891 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data, align 8, !dbg !6821
  %892 = bitcast %struct.IslandStitchData* %891 to i8*, !dbg !6821
  call void %890(i8* %892), !dbg !6820
  %893 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6822
  %894 = load %struct.PreviewPosition*, %struct.PreviewPosition** %preview_position, align 8, !dbg !6823
  %895 = bitcast %struct.PreviewPosition* %894 to i8*, !dbg !6823
  call void %893(i8* %895), !dbg !6822
  store i32 1, i32* %retval, align 4, !dbg !6824
  br label %return, !dbg !6824

return:                                           ; preds = %if.end1099, %if.then169, %if.then10, %if.then
  %896 = load i32, i32* %retval, align 4, !dbg !6825
  ret i32 %896, !dbg !6825
}

declare dso_local i8* @ED_region_draw_cb_activate(%struct.ARegionType*, void (%struct.bContext*, %struct.ARegion*, i8*)*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @stitch_draw(%struct.bContext* %UNUSED_C, %struct.ARegion* %UNUSED_ar, i8* %arg) #0 !dbg !6826 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %UNUSED_ar.addr = alloca %struct.ARegion*, align 8
  %arg.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  %pointsize = alloca float, align 4
  %state = alloca %struct.StitchState*, align 8
  %stitch_preview = alloca %struct.StitchPreviewer*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !6831, metadata !DIExpression()), !dbg !6832
  store %struct.ARegion* %UNUSED_ar, %struct.ARegion** %UNUSED_ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %UNUSED_ar.addr, metadata !6833, metadata !DIExpression()), !dbg !6834
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !6835, metadata !DIExpression()), !dbg !6836
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6837, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.declare(metadata i32* %index, metadata !6839, metadata !DIExpression()), !dbg !6840
  store i32 0, i32* %index, align 4, !dbg !6840
  call void @llvm.dbg.declare(metadata float* %pointsize, metadata !6841, metadata !DIExpression()), !dbg !6842
  %call = call float @UI_GetThemeValuef(i32 36), !dbg !6843
  store float %call, float* %pointsize, align 4, !dbg !6842
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state, metadata !6844, metadata !DIExpression()), !dbg !6845
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !6846
  %1 = bitcast i8* %0 to %struct.StitchState*, !dbg !6847
  store %struct.StitchState* %1, %struct.StitchState** %state, align 8, !dbg !6845
  call void @llvm.dbg.declare(metadata %struct.StitchPreviewer** %stitch_preview, metadata !6848, metadata !DIExpression()), !dbg !6849
  %2 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !6850
  %stitch_preview1 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %2, i32 0, i32 22, !dbg !6851
  %3 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview1, align 8, !dbg !6851
  store %struct.StitchPreviewer* %3, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !6849
  call void @glPushClientAttrib(i32 2), !dbg !6852
  call void @glEnableClientState(i32 32884), !dbg !6853
  %4 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !6854
  %5 = load float, float* %pointsize, align 4, !dbg !6854
  %mul = fmul float %5, 2.000000e+00, !dbg !6854
  call void @glPointSize(float %mul), !dbg !6854
  call void @glEnable(i32 3042), !dbg !6855
  call void @UI_ThemeColor4(i32 155), !dbg !6856
  call void @glPolygonMode(i32 1032, i32 6914), !dbg !6857
  %6 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !6858
  %static_tris = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %6, i32 0, i32 8, !dbg !6859
  %7 = load float*, float** %static_tris, align 8, !dbg !6859
  %8 = bitcast float* %7 to i8*, !dbg !6858
  call void @glVertexPointer(i32 2, i32 5126, i32 0, i8* %8), !dbg !6860
  %9 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !6861
  %num_static_tris = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %9, i32 0, i32 9, !dbg !6862
  %10 = load i32, i32* %num_static_tris, align 8, !dbg !6862
  %mul2 = mul i32 %10, 3, !dbg !6863
  call void @glDrawArrays(i32 4, i32 0, i32 %mul2), !dbg !6864
  %11 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !6865
  %preview_polys = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %11, i32 0, i32 0, !dbg !6866
  %12 = load float*, float** %preview_polys, align 8, !dbg !6866
  %13 = bitcast float* %12 to i8*, !dbg !6865
  call void @glVertexPointer(i32 2, i32 5126, i32 0, i8* %13), !dbg !6867
  store i32 0, i32* %i, align 4, !dbg !6868
  br label %for.cond, !dbg !6870

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load i32, i32* %i, align 4, !dbg !6871
  %15 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !6873
  %num_polys = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %15, i32 0, i32 2, !dbg !6874
  %16 = load i32, i32* %num_polys, align 8, !dbg !6874
  %cmp = icmp ult i32 %14, %16, !dbg !6875
  br i1 %cmp, label %for.body, label %for.end, !dbg !6876

for.body:                                         ; preds = %for.cond
  call void @glPolygonMode(i32 1032, i32 6914), !dbg !6877
  call void @UI_ThemeColor4(i32 150), !dbg !6879
  %17 = load i32, i32* %index, align 4, !dbg !6880
  %18 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !6881
  %uvs_per_polygon = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %18, i32 0, i32 1, !dbg !6882
  %19 = load i32*, i32** %uvs_per_polygon, align 8, !dbg !6882
  %20 = load i32, i32* %i, align 4, !dbg !6883
  %idxprom = sext i32 %20 to i64, !dbg !6881
  %arrayidx = getelementptr inbounds i32, i32* %19, i64 %idxprom, !dbg !6881
  %21 = load i32, i32* %arrayidx, align 4, !dbg !6881
  call void @glDrawArrays(i32 9, i32 %17, i32 %21), !dbg !6884
  call void @glPolygonMode(i32 1032, i32 6913), !dbg !6885
  call void @UI_ThemeColor4(i32 151), !dbg !6886
  %22 = load i32, i32* %index, align 4, !dbg !6887
  %23 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !6888
  %uvs_per_polygon3 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %23, i32 0, i32 1, !dbg !6889
  %24 = load i32*, i32** %uvs_per_polygon3, align 8, !dbg !6889
  %25 = load i32, i32* %i, align 4, !dbg !6890
  %idxprom4 = sext i32 %25 to i64, !dbg !6888
  %arrayidx5 = getelementptr inbounds i32, i32* %24, i64 %idxprom4, !dbg !6888
  %26 = load i32, i32* %arrayidx5, align 4, !dbg !6888
  call void @glDrawArrays(i32 9, i32 %22, i32 %26), !dbg !6891
  %27 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !6892
  %uvs_per_polygon6 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %27, i32 0, i32 1, !dbg !6893
  %28 = load i32*, i32** %uvs_per_polygon6, align 8, !dbg !6893
  %29 = load i32, i32* %i, align 4, !dbg !6894
  %idxprom7 = sext i32 %29 to i64, !dbg !6892
  %arrayidx8 = getelementptr inbounds i32, i32* %28, i64 %idxprom7, !dbg !6892
  %30 = load i32, i32* %arrayidx8, align 4, !dbg !6892
  %31 = load i32, i32* %index, align 4, !dbg !6895
  %add = add i32 %31, %30, !dbg !6895
  store i32 %add, i32* %index, align 4, !dbg !6895
  br label %for.inc, !dbg !6896

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %i, align 4, !dbg !6897
  %inc = add nsw i32 %32, 1, !dbg !6897
  store i32 %inc, i32* %i, align 4, !dbg !6897
  br label %for.cond, !dbg !6898, !llvm.loop !6899

for.end:                                          ; preds = %for.cond
  call void @glDisable(i32 3042), !dbg !6901
  %33 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !6902
  %mode = getelementptr inbounds %struct.StitchState, %struct.StitchState* %33, i32 0, i32 20, !dbg !6904
  %34 = load i8, i8* %mode, align 8, !dbg !6904
  %conv = zext i8 %34 to i32, !dbg !6902
  %cmp9 = icmp eq i32 %conv, 0, !dbg !6905
  br i1 %cmp9, label %if.then, label %if.else, !dbg !6906

if.then:                                          ; preds = %for.end
  call void @UI_ThemeColor4(i32 153), !dbg !6907
  %35 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !6909
  %preview_stitchable = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %35, i32 0, i32 3, !dbg !6910
  %36 = load float*, float** %preview_stitchable, align 8, !dbg !6910
  %37 = bitcast float* %36 to i8*, !dbg !6909
  call void @glVertexPointer(i32 2, i32 5126, i32 0, i8* %37), !dbg !6911
  %38 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !6912
  %num_stitchable = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %38, i32 0, i32 5, !dbg !6913
  %39 = load i32, i32* %num_stitchable, align 8, !dbg !6913
  call void @glDrawArrays(i32 0, i32 0, i32 %39), !dbg !6914
  call void @UI_ThemeColor4(i32 154), !dbg !6915
  %40 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !6916
  %preview_unstitchable = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %40, i32 0, i32 4, !dbg !6917
  %41 = load float*, float** %preview_unstitchable, align 8, !dbg !6917
  %42 = bitcast float* %41 to i8*, !dbg !6916
  call void @glVertexPointer(i32 2, i32 5126, i32 0, i8* %42), !dbg !6918
  %43 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !6919
  %num_unstitchable = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %43, i32 0, i32 6, !dbg !6920
  %44 = load i32, i32* %num_unstitchable, align 4, !dbg !6920
  call void @glDrawArrays(i32 0, i32 0, i32 %44), !dbg !6921
  br label %if.end, !dbg !6922

if.else:                                          ; preds = %for.end
  call void @UI_ThemeColor4(i32 153), !dbg !6923
  %45 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !6925
  %preview_stitchable11 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %45, i32 0, i32 3, !dbg !6926
  %46 = load float*, float** %preview_stitchable11, align 8, !dbg !6926
  %47 = bitcast float* %46 to i8*, !dbg !6925
  call void @glVertexPointer(i32 2, i32 5126, i32 0, i8* %47), !dbg !6927
  %48 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !6928
  %num_stitchable12 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %48, i32 0, i32 5, !dbg !6929
  %49 = load i32, i32* %num_stitchable12, align 8, !dbg !6929
  %mul13 = mul i32 2, %49, !dbg !6930
  call void @glDrawArrays(i32 1, i32 0, i32 %mul13), !dbg !6931
  call void @UI_ThemeColor4(i32 154), !dbg !6932
  %50 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !6933
  %preview_unstitchable14 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %50, i32 0, i32 4, !dbg !6934
  %51 = load float*, float** %preview_unstitchable14, align 8, !dbg !6934
  %52 = bitcast float* %51 to i8*, !dbg !6933
  call void @glVertexPointer(i32 2, i32 5126, i32 0, i8* %52), !dbg !6935
  %53 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !6936
  %num_unstitchable15 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %53, i32 0, i32 6, !dbg !6937
  %54 = load i32, i32* %num_unstitchable15, align 4, !dbg !6937
  %mul16 = mul i32 2, %54, !dbg !6938
  call void @glDrawArrays(i32 1, i32 0, i32 %mul16), !dbg !6939
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @glPopClientAttrib(), !dbg !6940
  call void @glPolygonMode(i32 1032, i32 6914), !dbg !6941
  %55 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !6942
  call void @glPointSize(float 1.000000e+00), !dbg !6942
  ret void, !dbg !6943
}

; Function Attrs: noinline nounwind uwtable
define internal void @stitch_update_header(%struct.StitchState* %state, %struct.bContext* %C) #0 !dbg !2507 {
entry:
  %state.addr = alloca %struct.StitchState*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %msg = alloca [256 x i8], align 16
  %sa = alloca %struct.ScrArea*, align 8
  store %struct.StitchState* %state, %struct.StitchState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state.addr, metadata !6944, metadata !DIExpression()), !dbg !6945
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6946, metadata !DIExpression()), !dbg !6947
  call void @llvm.dbg.declare(metadata [256 x i8]* %msg, metadata !6948, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !6950, metadata !DIExpression()), !dbg !6999
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7000
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !7001
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !6999
  %1 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7002
  %tobool = icmp ne %struct.ScrArea* %1, null, !dbg !7002
  br i1 %tobool, label %if.then, label %if.end, !dbg !7004

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %msg, i64 0, i64 0, !dbg !7005
  %2 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7007
  %mode = getelementptr inbounds %struct.StitchState, %struct.StitchState* %2, i32 0, i32 20, !dbg !7008
  %3 = load i8, i8* %mode, align 8, !dbg !7008
  %conv = zext i8 %3 to i32, !dbg !7007
  %cmp = icmp eq i32 %conv, 0, !dbg !7009
  %4 = zext i1 %cmp to i64, !dbg !7007
  %cond = select i1 %cmp, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), !dbg !7007
  %5 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7010
  %snap_islands = getelementptr inbounds %struct.StitchState, %struct.StitchState* %5, i32 0, i32 3, !dbg !7011
  %6 = load i8, i8* %snap_islands, align 4, !dbg !7011
  %call2 = call i8* @WM_bool_as_string(i8 zeroext %6), !dbg !7012
  %7 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7013
  %midpoints = getelementptr inbounds %struct.StitchState, %struct.StitchState* %7, i32 0, i32 4, !dbg !7014
  %8 = load i8, i8* %midpoints, align 1, !dbg !7014
  %call3 = call i8* @WM_bool_as_string(i8 zeroext %8), !dbg !7015
  %9 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7016
  %limit_dist = getelementptr inbounds %struct.StitchState, %struct.StitchState* %9, i32 0, i32 2, !dbg !7017
  %10 = load float, float* %limit_dist, align 8, !dbg !7017
  %conv4 = fpext float %10 to double, !dbg !7016
  %11 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7018
  %use_limit = getelementptr inbounds %struct.StitchState, %struct.StitchState* %11, i32 0, i32 1, !dbg !7019
  %12 = load i8, i8* %use_limit, align 4, !dbg !7019
  %call5 = call i8* @WM_bool_as_string(i8 zeroext %12), !dbg !7020
  %call6 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay, i64 256, i8* getelementptr inbounds ([116 x i8], [116 x i8]* @stitch_update_header.str, i64 0, i64 0), i8* %cond, i8* %call2, i8* %call3, double %conv4, i8* %call5), !dbg !7021
  %13 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7022
  %arraydecay7 = getelementptr inbounds [256 x i8], [256 x i8]* %msg, i64 0, i64 0, !dbg !7023
  call void @ED_area_headerprint(%struct.ScrArea* %13, i8* %arraydecay7), !dbg !7024
  br label %if.end, !dbg !7025

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7026
}

declare dso_local void @BM_uv_element_map_free(%struct.UvElementMap*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @stitch_preview_delete(%struct.StitchPreviewer* %stitch_preview) #0 !dbg !7027 {
entry:
  %stitch_preview.addr = alloca %struct.StitchPreviewer*, align 8
  store %struct.StitchPreviewer* %stitch_preview, %struct.StitchPreviewer** %stitch_preview.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchPreviewer** %stitch_preview.addr, metadata !7030, metadata !DIExpression()), !dbg !7031
  %0 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview.addr, align 8, !dbg !7032
  %tobool = icmp ne %struct.StitchPreviewer* %0, null, !dbg !7032
  br i1 %tobool, label %if.then, label %if.end25, !dbg !7034

if.then:                                          ; preds = %entry
  %1 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview.addr, align 8, !dbg !7035
  %preview_polys = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %1, i32 0, i32 0, !dbg !7038
  %2 = load float*, float** %preview_polys, align 8, !dbg !7038
  %tobool1 = icmp ne float* %2, null, !dbg !7035
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !7039

if.then2:                                         ; preds = %if.then
  %3 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7040
  %4 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview.addr, align 8, !dbg !7042
  %preview_polys3 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %4, i32 0, i32 0, !dbg !7043
  %5 = load float*, float** %preview_polys3, align 8, !dbg !7043
  %6 = bitcast float* %5 to i8*, !dbg !7042
  call void %3(i8* %6), !dbg !7040
  %7 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview.addr, align 8, !dbg !7044
  %preview_polys4 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %7, i32 0, i32 0, !dbg !7045
  store float* null, float** %preview_polys4, align 8, !dbg !7046
  br label %if.end, !dbg !7047

if.end:                                           ; preds = %if.then2, %if.then
  %8 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview.addr, align 8, !dbg !7048
  %uvs_per_polygon = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %8, i32 0, i32 1, !dbg !7050
  %9 = load i32*, i32** %uvs_per_polygon, align 8, !dbg !7050
  %tobool5 = icmp ne i32* %9, null, !dbg !7048
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !7051

if.then6:                                         ; preds = %if.end
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7052
  %11 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview.addr, align 8, !dbg !7054
  %uvs_per_polygon7 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %11, i32 0, i32 1, !dbg !7055
  %12 = load i32*, i32** %uvs_per_polygon7, align 8, !dbg !7055
  %13 = bitcast i32* %12 to i8*, !dbg !7054
  call void %10(i8* %13), !dbg !7052
  %14 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview.addr, align 8, !dbg !7056
  %uvs_per_polygon8 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %14, i32 0, i32 1, !dbg !7057
  store i32* null, i32** %uvs_per_polygon8, align 8, !dbg !7058
  br label %if.end9, !dbg !7059

if.end9:                                          ; preds = %if.then6, %if.end
  %15 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview.addr, align 8, !dbg !7060
  %preview_stitchable = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %15, i32 0, i32 3, !dbg !7062
  %16 = load float*, float** %preview_stitchable, align 8, !dbg !7062
  %tobool10 = icmp ne float* %16, null, !dbg !7060
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !7063

if.then11:                                        ; preds = %if.end9
  %17 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7064
  %18 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview.addr, align 8, !dbg !7066
  %preview_stitchable12 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %18, i32 0, i32 3, !dbg !7067
  %19 = load float*, float** %preview_stitchable12, align 8, !dbg !7067
  %20 = bitcast float* %19 to i8*, !dbg !7066
  call void %17(i8* %20), !dbg !7064
  %21 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview.addr, align 8, !dbg !7068
  %preview_stitchable13 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %21, i32 0, i32 3, !dbg !7069
  store float* null, float** %preview_stitchable13, align 8, !dbg !7070
  br label %if.end14, !dbg !7071

if.end14:                                         ; preds = %if.then11, %if.end9
  %22 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview.addr, align 8, !dbg !7072
  %preview_unstitchable = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %22, i32 0, i32 4, !dbg !7074
  %23 = load float*, float** %preview_unstitchable, align 8, !dbg !7074
  %tobool15 = icmp ne float* %23, null, !dbg !7072
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !7075

if.then16:                                        ; preds = %if.end14
  %24 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7076
  %25 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview.addr, align 8, !dbg !7078
  %preview_unstitchable17 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %25, i32 0, i32 4, !dbg !7079
  %26 = load float*, float** %preview_unstitchable17, align 8, !dbg !7079
  %27 = bitcast float* %26 to i8*, !dbg !7078
  call void %24(i8* %27), !dbg !7076
  %28 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview.addr, align 8, !dbg !7080
  %preview_unstitchable18 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %28, i32 0, i32 4, !dbg !7081
  store float* null, float** %preview_unstitchable18, align 8, !dbg !7082
  br label %if.end19, !dbg !7083

if.end19:                                         ; preds = %if.then16, %if.end14
  %29 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview.addr, align 8, !dbg !7084
  %static_tris = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %29, i32 0, i32 8, !dbg !7086
  %30 = load float*, float** %static_tris, align 8, !dbg !7086
  %tobool20 = icmp ne float* %30, null, !dbg !7084
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !7087

if.then21:                                        ; preds = %if.end19
  %31 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7088
  %32 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview.addr, align 8, !dbg !7090
  %static_tris22 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %32, i32 0, i32 8, !dbg !7091
  %33 = load float*, float** %static_tris22, align 8, !dbg !7091
  %34 = bitcast float* %33 to i8*, !dbg !7090
  call void %31(i8* %34), !dbg !7088
  %35 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview.addr, align 8, !dbg !7092
  %static_tris23 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %35, i32 0, i32 8, !dbg !7093
  store float* null, float** %static_tris23, align 8, !dbg !7094
  br label %if.end24, !dbg !7095

if.end24:                                         ; preds = %if.then21, %if.end19
  %36 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7096
  %37 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview.addr, align 8, !dbg !7097
  %38 = bitcast %struct.StitchPreviewer* %37 to i8*, !dbg !7097
  call void %36(i8* %38), !dbg !7096
  br label %if.end25, !dbg !7098

if.end25:                                         ; preds = %if.end24, %entry
  ret void, !dbg !7099
}

declare dso_local i32 @BLI_ghashutil_uinthash(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BM_iter_init(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !7100 {
entry:
  %retval = alloca i8, align 1
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !7103, metadata !DIExpression()), !dbg !7104
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !7105, metadata !DIExpression()), !dbg !7106
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !7107, metadata !DIExpression()), !dbg !7108
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7109, metadata !DIExpression()), !dbg !7110
  %0 = load i8, i8* %itype.addr, align 1, !dbg !7111
  %1 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7112
  %itype1 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %1, i32 0, i32 4, !dbg !7113
  store i8 %0, i8* %itype1, align 4, !dbg !7114
  %2 = load i8, i8* %itype.addr, align 1, !dbg !7115
  %conv = zext i8 %2 to i32, !dbg !7116
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %sw.bb10
    i32 4, label %sw.bb17
    i32 5, label %sw.bb21
    i32 6, label %sw.bb26
    i32 7, label %sw.bb31
    i32 8, label %sw.bb35
    i32 9, label %sw.bb40
    i32 10, label %sw.bb44
    i32 11, label %sw.bb49
    i32 13, label %sw.bb54
    i32 14, label %sw.bb58
  ], !dbg !7117

sw.bb:                                            ; preds = %entry
  %3 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7118
  %begin = getelementptr inbounds %struct.BMIter, %struct.BMIter* %3, i32 0, i32 1, !dbg !7120
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin, align 8, !dbg !7121
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7122
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %4, i32 0, i32 2, !dbg !7123
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step, align 8, !dbg !7124
  %5 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !7125
  %vpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 9, !dbg !7126
  %6 = load %struct.BLI_mempool*, %struct.BLI_mempool** %vpool, align 8, !dbg !7126
  %7 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7127
  %data2 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %7, i32 0, i32 0, !dbg !7128
  %elem_of_mesh = bitcast %union.anon* %data2 to %struct.BMIter__elem_of_mesh*, !dbg !7129
  %pooliter = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh, i32 0, i32 0, !dbg !7130
  %pool = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter, i32 0, i32 0, !dbg !7131
  store %struct.BLI_mempool* %6, %struct.BLI_mempool** %pool, align 8, !dbg !7132
  br label %sw.epilog, !dbg !7133

sw.bb3:                                           ; preds = %entry
  %8 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7134
  %begin4 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %8, i32 0, i32 1, !dbg !7135
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin4, align 8, !dbg !7136
  %9 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7137
  %step5 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %9, i32 0, i32 2, !dbg !7138
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step5, align 8, !dbg !7139
  %10 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !7140
  %epool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 10, !dbg !7141
  %11 = load %struct.BLI_mempool*, %struct.BLI_mempool** %epool, align 8, !dbg !7141
  %12 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7142
  %data6 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %12, i32 0, i32 0, !dbg !7143
  %elem_of_mesh7 = bitcast %union.anon* %data6 to %struct.BMIter__elem_of_mesh*, !dbg !7144
  %pooliter8 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh7, i32 0, i32 0, !dbg !7145
  %pool9 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter8, i32 0, i32 0, !dbg !7146
  store %struct.BLI_mempool* %11, %struct.BLI_mempool** %pool9, align 8, !dbg !7147
  br label %sw.epilog, !dbg !7148

sw.bb10:                                          ; preds = %entry
  %13 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7149
  %begin11 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %13, i32 0, i32 1, !dbg !7150
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin11, align 8, !dbg !7151
  %14 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7152
  %step12 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %14, i32 0, i32 2, !dbg !7153
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step12, align 8, !dbg !7154
  %15 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !7155
  %fpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 12, !dbg !7156
  %16 = load %struct.BLI_mempool*, %struct.BLI_mempool** %fpool, align 8, !dbg !7156
  %17 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7157
  %data13 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %17, i32 0, i32 0, !dbg !7158
  %elem_of_mesh14 = bitcast %union.anon* %data13 to %struct.BMIter__elem_of_mesh*, !dbg !7159
  %pooliter15 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh14, i32 0, i32 0, !dbg !7160
  %pool16 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter15, i32 0, i32 0, !dbg !7161
  store %struct.BLI_mempool* %16, %struct.BLI_mempool** %pool16, align 8, !dbg !7162
  br label %sw.epilog, !dbg !7163

sw.bb17:                                          ; preds = %entry
  %18 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7164
  %begin18 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %18, i32 0, i32 1, !dbg !7165
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_begin to void (i8*)*), void (i8*)** %begin18, align 8, !dbg !7166
  %19 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7167
  %step19 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %19, i32 0, i32 2, !dbg !7168
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_step to i8* (i8*)*), i8* (i8*)** %step19, align 8, !dbg !7169
  %20 = load i8*, i8** %data.addr, align 8, !dbg !7170
  %21 = bitcast i8* %20 to %struct.BMVert*, !dbg !7171
  %22 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7172
  %data20 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %22, i32 0, i32 0, !dbg !7173
  %edge_of_vert = bitcast %union.anon* %data20 to %struct.BMIter__edge_of_vert*, !dbg !7174
  %vdata = getelementptr inbounds %struct.BMIter__edge_of_vert, %struct.BMIter__edge_of_vert* %edge_of_vert, i32 0, i32 0, !dbg !7175
  store %struct.BMVert* %21, %struct.BMVert** %vdata, align 8, !dbg !7176
  br label %sw.epilog, !dbg !7177

sw.bb21:                                          ; preds = %entry
  %23 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7178
  %begin22 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %23, i32 0, i32 1, !dbg !7179
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_begin to void (i8*)*), void (i8*)** %begin22, align 8, !dbg !7180
  %24 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7181
  %step23 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %24, i32 0, i32 2, !dbg !7182
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_step to i8* (i8*)*), i8* (i8*)** %step23, align 8, !dbg !7183
  %25 = load i8*, i8** %data.addr, align 8, !dbg !7184
  %26 = bitcast i8* %25 to %struct.BMVert*, !dbg !7185
  %27 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7186
  %data24 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %27, i32 0, i32 0, !dbg !7187
  %face_of_vert = bitcast %union.anon* %data24 to %struct.BMIter__face_of_vert*, !dbg !7188
  %vdata25 = getelementptr inbounds %struct.BMIter__face_of_vert, %struct.BMIter__face_of_vert* %face_of_vert, i32 0, i32 0, !dbg !7189
  store %struct.BMVert* %26, %struct.BMVert** %vdata25, align 8, !dbg !7190
  br label %sw.epilog, !dbg !7191

sw.bb26:                                          ; preds = %entry
  %28 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7192
  %begin27 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %28, i32 0, i32 1, !dbg !7193
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_begin to void (i8*)*), void (i8*)** %begin27, align 8, !dbg !7194
  %29 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7195
  %step28 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %29, i32 0, i32 2, !dbg !7196
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_step to i8* (i8*)*), i8* (i8*)** %step28, align 8, !dbg !7197
  %30 = load i8*, i8** %data.addr, align 8, !dbg !7198
  %31 = bitcast i8* %30 to %struct.BMVert*, !dbg !7199
  %32 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7200
  %data29 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %32, i32 0, i32 0, !dbg !7201
  %loop_of_vert = bitcast %union.anon* %data29 to %struct.BMIter__loop_of_vert*, !dbg !7202
  %vdata30 = getelementptr inbounds %struct.BMIter__loop_of_vert, %struct.BMIter__loop_of_vert* %loop_of_vert, i32 0, i32 0, !dbg !7203
  store %struct.BMVert* %31, %struct.BMVert** %vdata30, align 8, !dbg !7204
  br label %sw.epilog, !dbg !7205

sw.bb31:                                          ; preds = %entry
  %33 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7206
  %begin32 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %33, i32 0, i32 1, !dbg !7207
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_begin to void (i8*)*), void (i8*)** %begin32, align 8, !dbg !7208
  %34 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7209
  %step33 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %34, i32 0, i32 2, !dbg !7210
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_step to i8* (i8*)*), i8* (i8*)** %step33, align 8, !dbg !7211
  %35 = load i8*, i8** %data.addr, align 8, !dbg !7212
  %36 = bitcast i8* %35 to %struct.BMEdge*, !dbg !7213
  %37 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7214
  %data34 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %37, i32 0, i32 0, !dbg !7215
  %vert_of_edge = bitcast %union.anon* %data34 to %struct.BMIter__vert_of_edge*, !dbg !7216
  %edata = getelementptr inbounds %struct.BMIter__vert_of_edge, %struct.BMIter__vert_of_edge* %vert_of_edge, i32 0, i32 0, !dbg !7217
  store %struct.BMEdge* %36, %struct.BMEdge** %edata, align 8, !dbg !7218
  br label %sw.epilog, !dbg !7219

sw.bb35:                                          ; preds = %entry
  %38 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7220
  %begin36 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %38, i32 0, i32 1, !dbg !7221
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_begin to void (i8*)*), void (i8*)** %begin36, align 8, !dbg !7222
  %39 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7223
  %step37 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %39, i32 0, i32 2, !dbg !7224
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_step to i8* (i8*)*), i8* (i8*)** %step37, align 8, !dbg !7225
  %40 = load i8*, i8** %data.addr, align 8, !dbg !7226
  %41 = bitcast i8* %40 to %struct.BMEdge*, !dbg !7227
  %42 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7228
  %data38 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %42, i32 0, i32 0, !dbg !7229
  %face_of_edge = bitcast %union.anon* %data38 to %struct.BMIter__face_of_edge*, !dbg !7230
  %edata39 = getelementptr inbounds %struct.BMIter__face_of_edge, %struct.BMIter__face_of_edge* %face_of_edge, i32 0, i32 0, !dbg !7231
  store %struct.BMEdge* %41, %struct.BMEdge** %edata39, align 8, !dbg !7232
  br label %sw.epilog, !dbg !7233

sw.bb40:                                          ; preds = %entry
  %43 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7234
  %begin41 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %43, i32 0, i32 1, !dbg !7235
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_begin to void (i8*)*), void (i8*)** %begin41, align 8, !dbg !7236
  %44 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7237
  %step42 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %44, i32 0, i32 2, !dbg !7238
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_step to i8* (i8*)*), i8* (i8*)** %step42, align 8, !dbg !7239
  %45 = load i8*, i8** %data.addr, align 8, !dbg !7240
  %46 = bitcast i8* %45 to %struct.BMFace*, !dbg !7241
  %47 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7242
  %data43 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %47, i32 0, i32 0, !dbg !7243
  %vert_of_face = bitcast %union.anon* %data43 to %struct.BMIter__vert_of_face*, !dbg !7244
  %pdata = getelementptr inbounds %struct.BMIter__vert_of_face, %struct.BMIter__vert_of_face* %vert_of_face, i32 0, i32 0, !dbg !7245
  store %struct.BMFace* %46, %struct.BMFace** %pdata, align 8, !dbg !7246
  br label %sw.epilog, !dbg !7247

sw.bb44:                                          ; preds = %entry
  %48 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7248
  %begin45 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %48, i32 0, i32 1, !dbg !7249
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_begin to void (i8*)*), void (i8*)** %begin45, align 8, !dbg !7250
  %49 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7251
  %step46 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %49, i32 0, i32 2, !dbg !7252
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_step to i8* (i8*)*), i8* (i8*)** %step46, align 8, !dbg !7253
  %50 = load i8*, i8** %data.addr, align 8, !dbg !7254
  %51 = bitcast i8* %50 to %struct.BMFace*, !dbg !7255
  %52 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7256
  %data47 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %52, i32 0, i32 0, !dbg !7257
  %edge_of_face = bitcast %union.anon* %data47 to %struct.BMIter__edge_of_face*, !dbg !7258
  %pdata48 = getelementptr inbounds %struct.BMIter__edge_of_face, %struct.BMIter__edge_of_face* %edge_of_face, i32 0, i32 0, !dbg !7259
  store %struct.BMFace* %51, %struct.BMFace** %pdata48, align 8, !dbg !7260
  br label %sw.epilog, !dbg !7261

sw.bb49:                                          ; preds = %entry
  %53 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7262
  %begin50 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %53, i32 0, i32 1, !dbg !7263
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_begin to void (i8*)*), void (i8*)** %begin50, align 8, !dbg !7264
  %54 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7265
  %step51 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %54, i32 0, i32 2, !dbg !7266
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_step to i8* (i8*)*), i8* (i8*)** %step51, align 8, !dbg !7267
  %55 = load i8*, i8** %data.addr, align 8, !dbg !7268
  %56 = bitcast i8* %55 to %struct.BMFace*, !dbg !7269
  %57 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7270
  %data52 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %57, i32 0, i32 0, !dbg !7271
  %loop_of_face = bitcast %union.anon* %data52 to %struct.BMIter__loop_of_face*, !dbg !7272
  %pdata53 = getelementptr inbounds %struct.BMIter__loop_of_face, %struct.BMIter__loop_of_face* %loop_of_face, i32 0, i32 0, !dbg !7273
  store %struct.BMFace* %56, %struct.BMFace** %pdata53, align 8, !dbg !7274
  br label %sw.epilog, !dbg !7275

sw.bb54:                                          ; preds = %entry
  %58 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7276
  %begin55 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %58, i32 0, i32 1, !dbg !7277
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_begin to void (i8*)*), void (i8*)** %begin55, align 8, !dbg !7278
  %59 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7279
  %step56 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %59, i32 0, i32 2, !dbg !7280
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_step to i8* (i8*)*), i8* (i8*)** %step56, align 8, !dbg !7281
  %60 = load i8*, i8** %data.addr, align 8, !dbg !7282
  %61 = bitcast i8* %60 to %struct.BMLoop*, !dbg !7283
  %62 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7284
  %data57 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %62, i32 0, i32 0, !dbg !7285
  %loop_of_loop = bitcast %union.anon* %data57 to %struct.BMIter__loop_of_loop*, !dbg !7286
  %ldata = getelementptr inbounds %struct.BMIter__loop_of_loop, %struct.BMIter__loop_of_loop* %loop_of_loop, i32 0, i32 0, !dbg !7287
  store %struct.BMLoop* %61, %struct.BMLoop** %ldata, align 8, !dbg !7288
  br label %sw.epilog, !dbg !7289

sw.bb58:                                          ; preds = %entry
  %63 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7290
  %begin59 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %63, i32 0, i32 1, !dbg !7291
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_begin to void (i8*)*), void (i8*)** %begin59, align 8, !dbg !7292
  %64 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7293
  %step60 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %64, i32 0, i32 2, !dbg !7294
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_step to i8* (i8*)*), i8* (i8*)** %step60, align 8, !dbg !7295
  %65 = load i8*, i8** %data.addr, align 8, !dbg !7296
  %66 = bitcast i8* %65 to %struct.BMEdge*, !dbg !7297
  %67 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7298
  %data61 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %67, i32 0, i32 0, !dbg !7299
  %loop_of_edge = bitcast %union.anon* %data61 to %struct.BMIter__loop_of_edge*, !dbg !7300
  %edata62 = getelementptr inbounds %struct.BMIter__loop_of_edge, %struct.BMIter__loop_of_edge* %loop_of_edge, i32 0, i32 0, !dbg !7301
  store %struct.BMEdge* %66, %struct.BMEdge** %edata62, align 8, !dbg !7302
  br label %sw.epilog, !dbg !7303

sw.default:                                       ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !7304
  br label %return, !dbg !7304

sw.epilog:                                        ; preds = %sw.bb58, %sw.bb54, %sw.bb49, %sw.bb44, %sw.bb40, %sw.bb35, %sw.bb31, %sw.bb26, %sw.bb21, %sw.bb17, %sw.bb10, %sw.bb3, %sw.bb
  %68 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7305
  %begin63 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %68, i32 0, i32 1, !dbg !7306
  %69 = load void (i8*)*, void (i8*)** %begin63, align 8, !dbg !7306
  %70 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7307
  %71 = bitcast %struct.BMIter* %70 to i8*, !dbg !7307
  call void %69(i8* %71), !dbg !7305
  store i8 1, i8* %retval, align 1, !dbg !7308
  br label %return, !dbg !7308

return:                                           ; preds = %sw.epilog, %sw.default
  %72 = load i8, i8* %retval, align 1, !dbg !7309
  ret i8 %72, !dbg !7309
}

declare dso_local void @bmiter__elem_of_mesh_begin(%struct.BMIter__elem_of_mesh*) #2

declare dso_local i8* @bmiter__elem_of_mesh_step(%struct.BMIter__elem_of_mesh*) #2

declare dso_local void @bmiter__edge_of_vert_begin(%struct.BMIter__edge_of_vert*) #2

declare dso_local i8* @bmiter__edge_of_vert_step(%struct.BMIter__edge_of_vert*) #2

declare dso_local void @bmiter__face_of_vert_begin(%struct.BMIter__face_of_vert*) #2

declare dso_local i8* @bmiter__face_of_vert_step(%struct.BMIter__face_of_vert*) #2

declare dso_local void @bmiter__loop_of_vert_begin(%struct.BMIter__loop_of_vert*) #2

declare dso_local i8* @bmiter__loop_of_vert_step(%struct.BMIter__loop_of_vert*) #2

declare dso_local void @bmiter__vert_of_edge_begin(%struct.BMIter__vert_of_edge*) #2

declare dso_local i8* @bmiter__vert_of_edge_step(%struct.BMIter__vert_of_edge*) #2

declare dso_local void @bmiter__face_of_edge_begin(%struct.BMIter__face_of_edge*) #2

declare dso_local i8* @bmiter__face_of_edge_step(%struct.BMIter__face_of_edge*) #2

declare dso_local void @bmiter__vert_of_face_begin(%struct.BMIter__vert_of_face*) #2

declare dso_local i8* @bmiter__vert_of_face_step(%struct.BMIter__vert_of_face*) #2

declare dso_local void @bmiter__edge_of_face_begin(%struct.BMIter__edge_of_face*) #2

declare dso_local i8* @bmiter__edge_of_face_step(%struct.BMIter__edge_of_face*) #2

declare dso_local void @bmiter__loop_of_face_begin(%struct.BMIter__loop_of_face*) #2

declare dso_local i8* @bmiter__loop_of_face_step(%struct.BMIter__loop_of_face*) #2

declare dso_local void @bmiter__loop_of_loop_begin(%struct.BMIter__loop_of_loop*) #2

declare dso_local i8* @bmiter__loop_of_loop_step(%struct.BMIter__loop_of_loop*) #2

declare dso_local void @bmiter__loop_of_edge_begin(%struct.BMIter__loop_of_edge*) #2

declare dso_local i8* @bmiter__loop_of_edge_step(%struct.BMIter__loop_of_edge*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @_bm_elem_index_get(%struct.BMHeader* %head) #0 !dbg !7310 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !7313, metadata !DIExpression()), !dbg !7314
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !7315
  %index = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 1, !dbg !7316
  %1 = load i32, i32* %index, align 8, !dbg !7316
  ret i32 %1, !dbg !7317
}

declare dso_local i8* @CustomData_bmesh_get(%struct.CustomData*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v2_v2v2(float* %r, float* %a, float* %b) #0 !dbg !7318 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7321, metadata !DIExpression()), !dbg !7322
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7323, metadata !DIExpression()), !dbg !7324
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !7325, metadata !DIExpression()), !dbg !7326
  %0 = load float*, float** %a.addr, align 8, !dbg !7327
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7327
  %1 = load float, float* %arrayidx, align 4, !dbg !7327
  %2 = load float*, float** %b.addr, align 8, !dbg !7328
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7328
  %3 = load float, float* %arrayidx1, align 4, !dbg !7328
  %sub = fsub float %1, %3, !dbg !7329
  %4 = load float*, float** %r.addr, align 8, !dbg !7330
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !7330
  store float %sub, float* %arrayidx2, align 4, !dbg !7331
  %5 = load float*, float** %a.addr, align 8, !dbg !7332
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !7332
  %6 = load float, float* %arrayidx3, align 4, !dbg !7332
  %7 = load float*, float** %b.addr, align 8, !dbg !7333
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !7333
  %8 = load float, float* %arrayidx4, align 4, !dbg !7333
  %sub5 = fsub float %6, %8, !dbg !7334
  %9 = load float*, float** %r.addr, align 8, !dbg !7335
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !7335
  store float %sub5, float* %arrayidx6, align 4, !dbg !7336
  ret void, !dbg !7337
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v2_v2(float* %r, float* %a) #0 !dbg !7338 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7341, metadata !DIExpression()), !dbg !7342
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7343, metadata !DIExpression()), !dbg !7344
  call void @llvm.dbg.declare(metadata float* %d, metadata !7345, metadata !DIExpression()), !dbg !7346
  %0 = load float*, float** %a.addr, align 8, !dbg !7347
  %1 = load float*, float** %a.addr, align 8, !dbg !7348
  %call = call float @dot_v2v2(float* %0, float* %1), !dbg !7349
  store float %call, float* %d, align 4, !dbg !7346
  %2 = load float, float* %d, align 4, !dbg !7350
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !7352
  br i1 %cmp, label %if.then, label %if.else, !dbg !7353

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !7354
  %call1 = call float @sqrtf(float %3) #5, !dbg !7356
  store float %call1, float* %d, align 4, !dbg !7357
  %4 = load float*, float** %r.addr, align 8, !dbg !7358
  %5 = load float*, float** %a.addr, align 8, !dbg !7359
  %6 = load float, float* %d, align 4, !dbg !7360
  %div = fdiv float 1.000000e+00, %6, !dbg !7361
  call void @mul_v2_v2fl(float* %4, float* %5, float %div), !dbg !7362
  br label %if.end, !dbg !7363

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !7364
  call void @zero_v2(float* %7), !dbg !7366
  store float 0.000000e+00, float* %d, align 4, !dbg !7367
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !7368
  ret float %8, !dbg !7369
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v2v2(float* %a, float* %b) #0 !dbg !7370 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7373, metadata !DIExpression()), !dbg !7374
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !7375, metadata !DIExpression()), !dbg !7376
  %0 = load float*, float** %a.addr, align 8, !dbg !7377
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7377
  %1 = load float, float* %arrayidx, align 4, !dbg !7377
  %2 = load float*, float** %b.addr, align 8, !dbg !7378
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7378
  %3 = load float, float* %arrayidx1, align 4, !dbg !7378
  %mul = fmul float %1, %3, !dbg !7379
  %4 = load float*, float** %a.addr, align 8, !dbg !7380
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7380
  %5 = load float, float* %arrayidx2, align 4, !dbg !7380
  %6 = load float*, float** %b.addr, align 8, !dbg !7381
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !7381
  %7 = load float, float* %arrayidx3, align 4, !dbg !7381
  %mul4 = fmul float %5, %7, !dbg !7382
  %add = fadd float %mul, %mul4, !dbg !7383
  ret float %add, !dbg !7384
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v2_v2fl(float* %r, float* %a, float %f) #0 !dbg !7385 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7388, metadata !DIExpression()), !dbg !7389
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7390, metadata !DIExpression()), !dbg !7391
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !7392, metadata !DIExpression()), !dbg !7393
  %0 = load float*, float** %a.addr, align 8, !dbg !7394
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7394
  %1 = load float, float* %arrayidx, align 4, !dbg !7394
  %2 = load float, float* %f.addr, align 4, !dbg !7395
  %mul = fmul float %1, %2, !dbg !7396
  %3 = load float*, float** %r.addr, align 8, !dbg !7397
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !7397
  store float %mul, float* %arrayidx1, align 4, !dbg !7398
  %4 = load float*, float** %a.addr, align 8, !dbg !7399
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7399
  %5 = load float, float* %arrayidx2, align 4, !dbg !7399
  %6 = load float, float* %f.addr, align 4, !dbg !7400
  %mul3 = fmul float %5, %6, !dbg !7401
  %7 = load float*, float** %r.addr, align 8, !dbg !7402
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !7402
  store float %mul3, float* %arrayidx4, align 4, !dbg !7403
  ret void, !dbg !7404
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v2(float* %r) #0 !dbg !7405 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7408, metadata !DIExpression()), !dbg !7409
  %0 = load float*, float** %r.addr, align 8, !dbg !7410
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7410
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !7411
  %1 = load float*, float** %r.addr, align 8, !dbg !7412
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !7412
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !7413
  ret void, !dbg !7414
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.StitchPreviewer* @stitch_preview_init() #0 !dbg !7415 {
entry:
  %stitch_preview = alloca %struct.StitchPreviewer*, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchPreviewer** %stitch_preview, metadata !7418, metadata !DIExpression()), !dbg !7419
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7420
  %call = call i8* %0(i64 72, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.54, i64 0, i64 0)), !dbg !7420
  %1 = bitcast i8* %call to %struct.StitchPreviewer*, !dbg !7420
  store %struct.StitchPreviewer* %1, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !7421
  %2 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !7422
  %preview_polys = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %2, i32 0, i32 0, !dbg !7423
  store float* null, float** %preview_polys, align 8, !dbg !7424
  %3 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !7425
  %preview_stitchable = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %3, i32 0, i32 3, !dbg !7426
  store float* null, float** %preview_stitchable, align 8, !dbg !7427
  %4 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !7428
  %preview_unstitchable = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %4, i32 0, i32 4, !dbg !7429
  store float* null, float** %preview_unstitchable, align 8, !dbg !7430
  %5 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !7431
  %uvs_per_polygon = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %5, i32 0, i32 1, !dbg !7432
  store i32* null, i32** %uvs_per_polygon, align 8, !dbg !7433
  %6 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !7434
  %preview_uvs = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %6, i32 0, i32 7, !dbg !7435
  store i32 0, i32* %preview_uvs, align 8, !dbg !7436
  %7 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !7437
  %num_polys = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %7, i32 0, i32 2, !dbg !7438
  store i32 0, i32* %num_polys, align 8, !dbg !7439
  %8 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !7440
  %num_stitchable = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %8, i32 0, i32 5, !dbg !7441
  store i32 0, i32* %num_stitchable, align 8, !dbg !7442
  %9 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !7443
  %num_unstitchable = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %9, i32 0, i32 6, !dbg !7444
  store i32 0, i32* %num_unstitchable, align 4, !dbg !7445
  %10 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !7446
  %static_tris = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %10, i32 0, i32 8, !dbg !7447
  store float* null, float** %static_tris, align 8, !dbg !7448
  %11 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !7449
  %num_static_tris = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %11, i32 0, i32 9, !dbg !7450
  store i32 0, i32* %num_static_tris, align 8, !dbg !7451
  %12 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !7452
  ret %struct.StitchPreviewer* %12, !dbg !7453
}

declare dso_local void @BM_mesh_elem_index_ensure(%struct.BMesh*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @determine_uv_stitchability(%struct.UvElement* %element, %struct.StitchState* %state, %struct.IslandStitchData* %island_stitch_data) #0 !dbg !7454 {
entry:
  %element.addr = alloca %struct.UvElement*, align 8
  %state.addr = alloca %struct.StitchState*, align 8
  %island_stitch_data.addr = alloca %struct.IslandStitchData*, align 8
  %vert_index = alloca i32, align 4
  %element_iter = alloca %struct.UvElement*, align 8
  %l = alloca %struct.BMLoop*, align 8
  store %struct.UvElement* %element, %struct.UvElement** %element.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element.addr, metadata !7457, metadata !DIExpression()), !dbg !7458
  store %struct.StitchState* %state, %struct.StitchState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state.addr, metadata !7459, metadata !DIExpression()), !dbg !7460
  store %struct.IslandStitchData* %island_stitch_data, %struct.IslandStitchData** %island_stitch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IslandStitchData** %island_stitch_data.addr, metadata !7461, metadata !DIExpression()), !dbg !7462
  call void @llvm.dbg.declare(metadata i32* %vert_index, metadata !7463, metadata !DIExpression()), !dbg !7464
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element_iter, metadata !7465, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !7467, metadata !DIExpression()), !dbg !7468
  %0 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !7469
  %l1 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %0, i32 0, i32 1, !dbg !7470
  %1 = load %struct.BMLoop*, %struct.BMLoop** %l1, align 8, !dbg !7470
  store %struct.BMLoop* %1, %struct.BMLoop** %l, align 8, !dbg !7471
  %2 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !7472
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %2, i32 0, i32 1, !dbg !7472
  %3 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !7472
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %3, i32 0, i32 0, !dbg !7472
  %call = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !7472
  store i32 %call, i32* %vert_index, align 4, !dbg !7473
  %4 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7474
  %element_map = getelementptr inbounds %struct.StitchState, %struct.StitchState* %4, i32 0, i32 7, !dbg !7475
  %5 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map, align 8, !dbg !7475
  %vert = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %5, i32 0, i32 0, !dbg !7476
  %6 = load %struct.UvElement**, %struct.UvElement*** %vert, align 8, !dbg !7476
  %7 = load i32, i32* %vert_index, align 4, !dbg !7477
  %idxprom = sext i32 %7 to i64, !dbg !7474
  %arrayidx = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %6, i64 %idxprom, !dbg !7474
  %8 = load %struct.UvElement*, %struct.UvElement** %arrayidx, align 8, !dbg !7474
  store %struct.UvElement* %8, %struct.UvElement** %element_iter, align 8, !dbg !7478
  br label %for.cond, !dbg !7479

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !7480
  %tobool = icmp ne %struct.UvElement* %9, null, !dbg !7483
  br i1 %tobool, label %for.body, label %for.end, !dbg !7483

for.body:                                         ; preds = %for.cond
  %10 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !7484
  %separate = getelementptr inbounds %struct.UvElement, %struct.UvElement* %10, i32 0, i32 3, !dbg !7487
  %11 = load i8, i8* %separate, align 2, !dbg !7487
  %tobool2 = icmp ne i8 %11, 0, !dbg !7484
  br i1 %tobool2, label %if.then, label %if.end13, !dbg !7488

if.then:                                          ; preds = %for.body
  %12 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !7489
  %13 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !7492
  %14 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7493
  %call3 = call zeroext i8 @stitch_check_uvs_stitchable(%struct.UvElement* %12, %struct.UvElement* %13, %struct.StitchState* %14), !dbg !7494
  %tobool4 = icmp ne i8 %call3, 0, !dbg !7494
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !7495

if.then5:                                         ; preds = %if.then
  %15 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !7496
  %16 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !7498
  %island = getelementptr inbounds %struct.UvElement, %struct.UvElement* %16, i32 0, i32 5, !dbg !7499
  %17 = load i16, i16* %island, align 4, !dbg !7499
  %idxprom6 = zext i16 %17 to i64, !dbg !7496
  %arrayidx7 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %15, i64 %idxprom6, !dbg !7496
  %stitchableCandidate = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx7, i32 0, i32 8, !dbg !7500
  store i8 1, i8* %stitchableCandidate, align 1, !dbg !7501
  %18 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !7502
  %19 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !7503
  %island8 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %19, i32 0, i32 5, !dbg !7504
  %20 = load i16, i16* %island8, align 4, !dbg !7504
  %idxprom9 = zext i16 %20 to i64, !dbg !7502
  %arrayidx10 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %18, i64 %idxprom9, !dbg !7502
  %stitchableCandidate11 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx10, i32 0, i32 8, !dbg !7505
  store i8 1, i8* %stitchableCandidate11, align 1, !dbg !7506
  %21 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !7507
  %flag = getelementptr inbounds %struct.UvElement, %struct.UvElement* %21, i32 0, i32 4, !dbg !7508
  %22 = load i8, i8* %flag, align 1, !dbg !7509
  %conv = zext i8 %22 to i32, !dbg !7509
  %or = or i32 %conv, 16, !dbg !7509
  %conv12 = trunc i32 %or to i8, !dbg !7509
  store i8 %conv12, i8* %flag, align 1, !dbg !7509
  br label %if.end, !dbg !7510

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end13, !dbg !7511

if.end13:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !7512

for.inc:                                          ; preds = %if.end13
  %23 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !7513
  %next = getelementptr inbounds %struct.UvElement, %struct.UvElement* %23, i32 0, i32 0, !dbg !7514
  %24 = load %struct.UvElement*, %struct.UvElement** %next, align 8, !dbg !7514
  store %struct.UvElement* %24, %struct.UvElement** %element_iter, align 8, !dbg !7515
  br label %for.cond, !dbg !7516, !llvm.loop !7517

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7519
}

; Function Attrs: noinline nounwind uwtable
define internal void @determine_uv_edge_stitchability(%struct.UvEdge* %edge, %struct.StitchState* %state, %struct.IslandStitchData* %island_stitch_data) #0 !dbg !7520 {
entry:
  %edge.addr = alloca %struct.UvEdge*, align 8
  %state.addr = alloca %struct.StitchState*, align 8
  %island_stitch_data.addr = alloca %struct.IslandStitchData*, align 8
  %edge_iter = alloca %struct.UvEdge*, align 8
  store %struct.UvEdge* %edge, %struct.UvEdge** %edge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge.addr, metadata !7523, metadata !DIExpression()), !dbg !7524
  store %struct.StitchState* %state, %struct.StitchState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state.addr, metadata !7525, metadata !DIExpression()), !dbg !7526
  store %struct.IslandStitchData* %island_stitch_data, %struct.IslandStitchData** %island_stitch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IslandStitchData** %island_stitch_data.addr, metadata !7527, metadata !DIExpression()), !dbg !7528
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge_iter, metadata !7529, metadata !DIExpression()), !dbg !7530
  %0 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !7531
  %first = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %0, i32 0, i32 5, !dbg !7532
  %1 = load %struct.UvEdge*, %struct.UvEdge** %first, align 8, !dbg !7532
  store %struct.UvEdge* %1, %struct.UvEdge** %edge_iter, align 8, !dbg !7530
  br label %for.cond, !dbg !7533

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.UvEdge*, %struct.UvEdge** %edge_iter, align 8, !dbg !7534
  %tobool = icmp ne %struct.UvEdge* %2, null, !dbg !7537
  br i1 %tobool, label %for.body, label %for.end, !dbg !7537

for.body:                                         ; preds = %for.cond
  %3 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !7538
  %4 = load %struct.UvEdge*, %struct.UvEdge** %edge_iter, align 8, !dbg !7541
  %5 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7542
  %call = call zeroext i8 @stitch_check_edges_stitchable(%struct.UvEdge* %3, %struct.UvEdge* %4, %struct.StitchState* %5), !dbg !7543
  %tobool1 = icmp ne i8 %call, 0, !dbg !7543
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7544

if.then:                                          ; preds = %for.body
  %6 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !7545
  %7 = load %struct.UvEdge*, %struct.UvEdge** %edge_iter, align 8, !dbg !7547
  %element = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %7, i32 0, i32 3, !dbg !7548
  %8 = load %struct.UvElement*, %struct.UvElement** %element, align 8, !dbg !7548
  %island = getelementptr inbounds %struct.UvElement, %struct.UvElement* %8, i32 0, i32 5, !dbg !7549
  %9 = load i16, i16* %island, align 4, !dbg !7549
  %idxprom = zext i16 %9 to i64, !dbg !7545
  %arrayidx = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %6, i64 %idxprom, !dbg !7545
  %stitchableCandidate = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx, i32 0, i32 8, !dbg !7550
  store i8 1, i8* %stitchableCandidate, align 1, !dbg !7551
  %10 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !7552
  %11 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !7553
  %element2 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %11, i32 0, i32 3, !dbg !7554
  %12 = load %struct.UvElement*, %struct.UvElement** %element2, align 8, !dbg !7554
  %island3 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %12, i32 0, i32 5, !dbg !7555
  %13 = load i16, i16* %island3, align 4, !dbg !7555
  %idxprom4 = zext i16 %13 to i64, !dbg !7552
  %arrayidx5 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %10, i64 %idxprom4, !dbg !7552
  %stitchableCandidate6 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx5, i32 0, i32 8, !dbg !7556
  store i8 1, i8* %stitchableCandidate6, align 1, !dbg !7557
  %14 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !7558
  %flag = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %14, i32 0, i32 2, !dbg !7559
  %15 = load i8, i8* %flag, align 8, !dbg !7560
  %conv = zext i8 %15 to i32, !dbg !7560
  %or = or i32 %conv, 16, !dbg !7560
  %conv7 = trunc i32 %or to i8, !dbg !7560
  store i8 %conv7, i8* %flag, align 8, !dbg !7560
  br label %if.end, !dbg !7561

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !7562

for.inc:                                          ; preds = %if.end
  %16 = load %struct.UvEdge*, %struct.UvEdge** %edge_iter, align 8, !dbg !7563
  %next = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %16, i32 0, i32 4, !dbg !7564
  %17 = load %struct.UvEdge*, %struct.UvEdge** %next, align 8, !dbg !7564
  store %struct.UvEdge* %17, %struct.UvEdge** %edge_iter, align 8, !dbg !7565
  br label %for.cond, !dbg !7566, !llvm.loop !7567

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7569
}

; Function Attrs: noinline nounwind uwtable
define internal void @stitch_validate_uv_stichability(%struct.UvElement* %element, %struct.StitchState* %state, %struct.IslandStitchData* %island_stitch_data, %struct.PreviewPosition* %preview_position) #0 !dbg !7570 {
entry:
  %element.addr = alloca %struct.UvElement*, align 8
  %state.addr = alloca %struct.StitchState*, align 8
  %island_stitch_data.addr = alloca %struct.IslandStitchData*, align 8
  %preview_position.addr = alloca %struct.PreviewPosition*, align 8
  %element_iter = alloca %struct.UvElement*, align 8
  %preview = alloca %struct.StitchPreviewer*, align 8
  %vert_index = alloca i32, align 4
  %l = alloca %struct.BMLoop*, align 8
  store %struct.UvElement* %element, %struct.UvElement** %element.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element.addr, metadata !7573, metadata !DIExpression()), !dbg !7574
  store %struct.StitchState* %state, %struct.StitchState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state.addr, metadata !7575, metadata !DIExpression()), !dbg !7576
  store %struct.IslandStitchData* %island_stitch_data, %struct.IslandStitchData** %island_stitch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IslandStitchData** %island_stitch_data.addr, metadata !7577, metadata !DIExpression()), !dbg !7578
  store %struct.PreviewPosition* %preview_position, %struct.PreviewPosition** %preview_position.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PreviewPosition** %preview_position.addr, metadata !7579, metadata !DIExpression()), !dbg !7580
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element_iter, metadata !7581, metadata !DIExpression()), !dbg !7582
  call void @llvm.dbg.declare(metadata %struct.StitchPreviewer** %preview, metadata !7583, metadata !DIExpression()), !dbg !7584
  %0 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7585
  %stitch_preview = getelementptr inbounds %struct.StitchState, %struct.StitchState* %0, i32 0, i32 22, !dbg !7586
  %1 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !7586
  store %struct.StitchPreviewer* %1, %struct.StitchPreviewer** %preview, align 8, !dbg !7584
  call void @llvm.dbg.declare(metadata i32* %vert_index, metadata !7587, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !7589, metadata !DIExpression()), !dbg !7590
  %2 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !7591
  %l1 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %2, i32 0, i32 1, !dbg !7592
  %3 = load %struct.BMLoop*, %struct.BMLoop** %l1, align 8, !dbg !7592
  store %struct.BMLoop* %3, %struct.BMLoop** %l, align 8, !dbg !7593
  %4 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !7594
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %4, i32 0, i32 1, !dbg !7594
  %5 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !7594
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %5, i32 0, i32 0, !dbg !7594
  %call = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !7594
  store i32 %call, i32* %vert_index, align 4, !dbg !7595
  %6 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7596
  %element_map = getelementptr inbounds %struct.StitchState, %struct.StitchState* %6, i32 0, i32 7, !dbg !7597
  %7 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map, align 8, !dbg !7597
  %vert = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %7, i32 0, i32 0, !dbg !7598
  %8 = load %struct.UvElement**, %struct.UvElement*** %vert, align 8, !dbg !7598
  %9 = load i32, i32* %vert_index, align 4, !dbg !7599
  %idxprom = sext i32 %9 to i64, !dbg !7596
  %arrayidx = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %8, i64 %idxprom, !dbg !7596
  %10 = load %struct.UvElement*, %struct.UvElement** %arrayidx, align 8, !dbg !7596
  store %struct.UvElement* %10, %struct.UvElement** %element_iter, align 8, !dbg !7600
  br label %for.cond, !dbg !7601

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !7602
  %tobool = icmp ne %struct.UvElement* %11, null, !dbg !7605
  br i1 %tobool, label %for.body, label %for.end, !dbg !7605

for.body:                                         ; preds = %for.cond
  %12 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !7606
  %separate = getelementptr inbounds %struct.UvElement, %struct.UvElement* %12, i32 0, i32 3, !dbg !7609
  %13 = load i8, i8* %separate, align 2, !dbg !7609
  %tobool2 = icmp ne i8 %13, 0, !dbg !7606
  br i1 %tobool2, label %if.then, label %if.end19, !dbg !7610

if.then:                                          ; preds = %for.body
  %14 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !7611
  %15 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !7614
  %cmp = icmp eq %struct.UvElement* %14, %15, !dbg !7615
  br i1 %cmp, label %if.then3, label %if.end, !dbg !7616

if.then3:                                         ; preds = %if.then
  br label %for.inc, !dbg !7617

if.end:                                           ; preds = %if.then
  %16 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !7618
  %17 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !7620
  %18 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7621
  %call4 = call zeroext i8 @stitch_check_uvs_state_stitchable(%struct.UvElement* %16, %struct.UvElement* %17, %struct.StitchState* %18), !dbg !7622
  %tobool5 = icmp ne i8 %call4, 0, !dbg !7622
  br i1 %tobool5, label %if.then6, label %if.end18, !dbg !7623

if.then6:                                         ; preds = %if.end
  %19 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !7624
  %island = getelementptr inbounds %struct.UvElement, %struct.UvElement* %19, i32 0, i32 5, !dbg !7627
  %20 = load i16, i16* %island, align 4, !dbg !7627
  %conv = zext i16 %20 to i32, !dbg !7624
  %21 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7628
  %static_island = getelementptr inbounds %struct.StitchState, %struct.StitchState* %21, i32 0, i32 18, !dbg !7629
  %22 = load i32, i32* %static_island, align 4, !dbg !7629
  %cmp7 = icmp eq i32 %conv, %22, !dbg !7630
  br i1 %cmp7, label %if.then14, label %lor.lhs.false, !dbg !7631

lor.lhs.false:                                    ; preds = %if.then6
  %23 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !7632
  %island9 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %23, i32 0, i32 5, !dbg !7633
  %24 = load i16, i16* %island9, align 4, !dbg !7633
  %conv10 = zext i16 %24 to i32, !dbg !7632
  %25 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7634
  %static_island11 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %25, i32 0, i32 18, !dbg !7635
  %26 = load i32, i32* %static_island11, align 4, !dbg !7635
  %cmp12 = icmp eq i32 %conv10, %26, !dbg !7636
  br i1 %cmp12, label %if.then14, label %if.end17, !dbg !7637

if.then14:                                        ; preds = %lor.lhs.false, %if.then6
  %27 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !7638
  %flag = getelementptr inbounds %struct.UvElement, %struct.UvElement* %27, i32 0, i32 4, !dbg !7640
  %28 = load i8, i8* %flag, align 1, !dbg !7641
  %conv15 = zext i8 %28 to i32, !dbg !7641
  %or = or i32 %conv15, 2, !dbg !7641
  %conv16 = trunc i32 %or to i8, !dbg !7641
  store i8 %conv16, i8* %flag, align 1, !dbg !7641
  %29 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !7642
  %num_stitchable = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %29, i32 0, i32 5, !dbg !7643
  %30 = load i32, i32* %num_stitchable, align 8, !dbg !7644
  %inc = add i32 %30, 1, !dbg !7644
  store i32 %inc, i32* %num_stitchable, align 8, !dbg !7644
  %31 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !7645
  %32 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7646
  %33 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !7647
  %34 = load %struct.PreviewPosition*, %struct.PreviewPosition** %preview_position.addr, align 8, !dbg !7648
  call void @stitch_setup_face_preview_for_uv_group(%struct.UvElement* %31, %struct.StitchState* %32, %struct.IslandStitchData* %33, %struct.PreviewPosition* %34), !dbg !7649
  br label %if.end25, !dbg !7650

if.end17:                                         ; preds = %lor.lhs.false
  br label %if.end18, !dbg !7651

if.end18:                                         ; preds = %if.end17, %if.end
  br label %if.end19, !dbg !7652

if.end19:                                         ; preds = %if.end18, %for.body
  br label %for.inc, !dbg !7653

for.inc:                                          ; preds = %if.end19, %if.then3
  %35 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !7654
  %next = getelementptr inbounds %struct.UvElement, %struct.UvElement* %35, i32 0, i32 0, !dbg !7655
  %36 = load %struct.UvElement*, %struct.UvElement** %next, align 8, !dbg !7655
  store %struct.UvElement* %36, %struct.UvElement** %element_iter, align 8, !dbg !7656
  br label %for.cond, !dbg !7657, !llvm.loop !7658

for.end:                                          ; preds = %for.cond
  %37 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !7660
  %flag20 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %37, i32 0, i32 4, !dbg !7662
  %38 = load i8, i8* %flag20, align 1, !dbg !7662
  %conv21 = zext i8 %38 to i32, !dbg !7660
  %and = and i32 %conv21, 2, !dbg !7663
  %tobool22 = icmp ne i32 %and, 0, !dbg !7663
  br i1 %tobool22, label %if.end25, label %if.then23, !dbg !7664

if.then23:                                        ; preds = %for.end
  %39 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !7665
  %num_unstitchable = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %39, i32 0, i32 6, !dbg !7667
  %40 = load i32, i32* %num_unstitchable, align 4, !dbg !7668
  %inc24 = add i32 %40, 1, !dbg !7668
  store i32 %inc24, i32* %num_unstitchable, align 4, !dbg !7668
  br label %if.end25, !dbg !7669

if.end25:                                         ; preds = %if.then14, %if.then23, %for.end
  ret void, !dbg !7670
}

; Function Attrs: noinline nounwind uwtable
define internal void @stitch_validate_edge_stichability(%struct.UvEdge* %edge, %struct.StitchState* %state, %struct.IslandStitchData* %island_stitch_data, %struct.PreviewPosition* %preview_position) #0 !dbg !7671 {
entry:
  %edge.addr = alloca %struct.UvEdge*, align 8
  %state.addr = alloca %struct.StitchState*, align 8
  %island_stitch_data.addr = alloca %struct.IslandStitchData*, align 8
  %preview_position.addr = alloca %struct.PreviewPosition*, align 8
  %edge_iter = alloca %struct.UvEdge*, align 8
  %preview = alloca %struct.StitchPreviewer*, align 8
  store %struct.UvEdge* %edge, %struct.UvEdge** %edge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge.addr, metadata !7674, metadata !DIExpression()), !dbg !7675
  store %struct.StitchState* %state, %struct.StitchState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state.addr, metadata !7676, metadata !DIExpression()), !dbg !7677
  store %struct.IslandStitchData* %island_stitch_data, %struct.IslandStitchData** %island_stitch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IslandStitchData** %island_stitch_data.addr, metadata !7678, metadata !DIExpression()), !dbg !7679
  store %struct.PreviewPosition* %preview_position, %struct.PreviewPosition** %preview_position.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PreviewPosition** %preview_position.addr, metadata !7680, metadata !DIExpression()), !dbg !7681
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge_iter, metadata !7682, metadata !DIExpression()), !dbg !7683
  %0 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !7684
  %first = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %0, i32 0, i32 5, !dbg !7685
  %1 = load %struct.UvEdge*, %struct.UvEdge** %first, align 8, !dbg !7685
  store %struct.UvEdge* %1, %struct.UvEdge** %edge_iter, align 8, !dbg !7683
  call void @llvm.dbg.declare(metadata %struct.StitchPreviewer** %preview, metadata !7686, metadata !DIExpression()), !dbg !7687
  %2 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7688
  %stitch_preview = getelementptr inbounds %struct.StitchState, %struct.StitchState* %2, i32 0, i32 22, !dbg !7689
  %3 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !7689
  store %struct.StitchPreviewer* %3, %struct.StitchPreviewer** %preview, align 8, !dbg !7687
  br label %for.cond, !dbg !7690

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.UvEdge*, %struct.UvEdge** %edge_iter, align 8, !dbg !7691
  %tobool = icmp ne %struct.UvEdge* %4, null, !dbg !7694
  br i1 %tobool, label %for.body, label %for.end, !dbg !7694

for.body:                                         ; preds = %for.cond
  %5 = load %struct.UvEdge*, %struct.UvEdge** %edge_iter, align 8, !dbg !7695
  %6 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !7698
  %cmp = icmp eq %struct.UvEdge* %5, %6, !dbg !7699
  br i1 %cmp, label %if.then, label %if.end, !dbg !7700

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !7701

if.end:                                           ; preds = %for.body
  %7 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !7702
  %8 = load %struct.UvEdge*, %struct.UvEdge** %edge_iter, align 8, !dbg !7704
  %9 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7705
  %call = call zeroext i8 @stitch_check_edges_state_stitchable(%struct.UvEdge* %7, %struct.UvEdge* %8, %struct.StitchState* %9), !dbg !7706
  %tobool1 = icmp ne i8 %call, 0, !dbg !7706
  br i1 %tobool1, label %if.then2, label %if.end18, !dbg !7707

if.then2:                                         ; preds = %if.end
  %10 = load %struct.UvEdge*, %struct.UvEdge** %edge_iter, align 8, !dbg !7708
  %element = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %10, i32 0, i32 3, !dbg !7711
  %11 = load %struct.UvElement*, %struct.UvElement** %element, align 8, !dbg !7711
  %island = getelementptr inbounds %struct.UvElement, %struct.UvElement* %11, i32 0, i32 5, !dbg !7712
  %12 = load i16, i16* %island, align 4, !dbg !7712
  %conv = zext i16 %12 to i32, !dbg !7708
  %13 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7713
  %static_island = getelementptr inbounds %struct.StitchState, %struct.StitchState* %13, i32 0, i32 18, !dbg !7714
  %14 = load i32, i32* %static_island, align 4, !dbg !7714
  %cmp3 = icmp eq i32 %conv, %14, !dbg !7715
  br i1 %cmp3, label %if.then11, label %lor.lhs.false, !dbg !7716

lor.lhs.false:                                    ; preds = %if.then2
  %15 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !7717
  %element5 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %15, i32 0, i32 3, !dbg !7718
  %16 = load %struct.UvElement*, %struct.UvElement** %element5, align 8, !dbg !7718
  %island6 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %16, i32 0, i32 5, !dbg !7719
  %17 = load i16, i16* %island6, align 4, !dbg !7719
  %conv7 = zext i16 %17 to i32, !dbg !7717
  %18 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7720
  %static_island8 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %18, i32 0, i32 18, !dbg !7721
  %19 = load i32, i32* %static_island8, align 4, !dbg !7721
  %cmp9 = icmp eq i32 %conv7, %19, !dbg !7722
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !7723

if.then11:                                        ; preds = %lor.lhs.false, %if.then2
  %20 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !7724
  %flag = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %20, i32 0, i32 2, !dbg !7726
  %21 = load i8, i8* %flag, align 8, !dbg !7727
  %conv12 = zext i8 %21 to i32, !dbg !7727
  %or = or i32 %conv12, 2, !dbg !7727
  %conv13 = trunc i32 %or to i8, !dbg !7727
  store i8 %conv13, i8* %flag, align 8, !dbg !7727
  %22 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !7728
  %num_stitchable = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %22, i32 0, i32 5, !dbg !7729
  %23 = load i32, i32* %num_stitchable, align 8, !dbg !7730
  %inc = add i32 %23, 1, !dbg !7730
  store i32 %inc, i32* %num_stitchable, align 8, !dbg !7730
  %24 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7731
  %uvs = getelementptr inbounds %struct.StitchState, %struct.StitchState* %24, i32 0, i32 9, !dbg !7732
  %25 = load %struct.UvElement**, %struct.UvElement*** %uvs, align 8, !dbg !7732
  %26 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !7733
  %uv1 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %26, i32 0, i32 0, !dbg !7734
  %27 = load i32, i32* %uv1, align 8, !dbg !7734
  %idxprom = zext i32 %27 to i64, !dbg !7731
  %arrayidx = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %25, i64 %idxprom, !dbg !7731
  %28 = load %struct.UvElement*, %struct.UvElement** %arrayidx, align 8, !dbg !7731
  %29 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7735
  %30 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !7736
  %31 = load %struct.PreviewPosition*, %struct.PreviewPosition** %preview_position.addr, align 8, !dbg !7737
  call void @stitch_setup_face_preview_for_uv_group(%struct.UvElement* %28, %struct.StitchState* %29, %struct.IslandStitchData* %30, %struct.PreviewPosition* %31), !dbg !7738
  %32 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7739
  %uvs14 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %32, i32 0, i32 9, !dbg !7740
  %33 = load %struct.UvElement**, %struct.UvElement*** %uvs14, align 8, !dbg !7740
  %34 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !7741
  %uv2 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %34, i32 0, i32 1, !dbg !7742
  %35 = load i32, i32* %uv2, align 4, !dbg !7742
  %idxprom15 = zext i32 %35 to i64, !dbg !7739
  %arrayidx16 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %33, i64 %idxprom15, !dbg !7739
  %36 = load %struct.UvElement*, %struct.UvElement** %arrayidx16, align 8, !dbg !7739
  %37 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7743
  %38 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !7744
  %39 = load %struct.PreviewPosition*, %struct.PreviewPosition** %preview_position.addr, align 8, !dbg !7745
  call void @stitch_setup_face_preview_for_uv_group(%struct.UvElement* %36, %struct.StitchState* %37, %struct.IslandStitchData* %38, %struct.PreviewPosition* %39), !dbg !7746
  br label %if.end24, !dbg !7747

if.end17:                                         ; preds = %lor.lhs.false
  br label %if.end18, !dbg !7748

if.end18:                                         ; preds = %if.end17, %if.end
  br label %for.inc, !dbg !7749

for.inc:                                          ; preds = %if.end18, %if.then
  %40 = load %struct.UvEdge*, %struct.UvEdge** %edge_iter, align 8, !dbg !7750
  %next = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %40, i32 0, i32 4, !dbg !7751
  %41 = load %struct.UvEdge*, %struct.UvEdge** %next, align 8, !dbg !7751
  store %struct.UvEdge* %41, %struct.UvEdge** %edge_iter, align 8, !dbg !7752
  br label %for.cond, !dbg !7753, !llvm.loop !7754

for.end:                                          ; preds = %for.cond
  %42 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !7756
  %flag19 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %42, i32 0, i32 2, !dbg !7758
  %43 = load i8, i8* %flag19, align 8, !dbg !7758
  %conv20 = zext i8 %43 to i32, !dbg !7756
  %and = and i32 %conv20, 2, !dbg !7759
  %tobool21 = icmp ne i32 %and, 0, !dbg !7759
  br i1 %tobool21, label %if.end24, label %if.then22, !dbg !7760

if.then22:                                        ; preds = %for.end
  %44 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !7761
  %num_unstitchable = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %44, i32 0, i32 6, !dbg !7763
  %45 = load i32, i32* %num_unstitchable, align 4, !dbg !7764
  %inc23 = add i32 %45, 1, !dbg !7764
  store i32 %inc23, i32* %num_unstitchable, align 4, !dbg !7764
  br label %if.end24, !dbg !7765

if.end24:                                         ; preds = %if.then11, %if.then22, %for.end
  ret void, !dbg !7766
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @getNumOfIslandUvs(%struct.UvElementMap* %elementMap, i32 %island) #0 !dbg !7767 {
entry:
  %retval = alloca i32, align 4
  %elementMap.addr = alloca %struct.UvElementMap*, align 8
  %island.addr = alloca i32, align 4
  store %struct.UvElementMap* %elementMap, %struct.UvElementMap** %elementMap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvElementMap** %elementMap.addr, metadata !7770, metadata !DIExpression()), !dbg !7771
  store i32 %island, i32* %island.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %island.addr, metadata !7772, metadata !DIExpression()), !dbg !7773
  %0 = load i32, i32* %island.addr, align 4, !dbg !7774
  %1 = load %struct.UvElementMap*, %struct.UvElementMap** %elementMap.addr, align 8, !dbg !7776
  %totalIslands = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %1, i32 0, i32 3, !dbg !7777
  %2 = load i32, i32* %totalIslands, align 4, !dbg !7777
  %sub = sub nsw i32 %2, 1, !dbg !7778
  %cmp = icmp eq i32 %0, %sub, !dbg !7779
  br i1 %cmp, label %if.then, label %if.else, !dbg !7780

if.then:                                          ; preds = %entry
  %3 = load %struct.UvElementMap*, %struct.UvElementMap** %elementMap.addr, align 8, !dbg !7781
  %totalUVs = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %3, i32 0, i32 2, !dbg !7783
  %4 = load i32, i32* %totalUVs, align 8, !dbg !7783
  %5 = load %struct.UvElementMap*, %struct.UvElementMap** %elementMap.addr, align 8, !dbg !7784
  %islandIndices = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %5, i32 0, i32 4, !dbg !7785
  %6 = load i32*, i32** %islandIndices, align 8, !dbg !7785
  %7 = load i32, i32* %island.addr, align 4, !dbg !7786
  %idxprom = sext i32 %7 to i64, !dbg !7784
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 %idxprom, !dbg !7784
  %8 = load i32, i32* %arrayidx, align 4, !dbg !7784
  %sub1 = sub nsw i32 %4, %8, !dbg !7787
  store i32 %sub1, i32* %retval, align 4, !dbg !7788
  br label %return, !dbg !7788

if.else:                                          ; preds = %entry
  %9 = load %struct.UvElementMap*, %struct.UvElementMap** %elementMap.addr, align 8, !dbg !7789
  %islandIndices2 = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %9, i32 0, i32 4, !dbg !7791
  %10 = load i32*, i32** %islandIndices2, align 8, !dbg !7791
  %11 = load i32, i32* %island.addr, align 4, !dbg !7792
  %add = add nsw i32 %11, 1, !dbg !7793
  %idxprom3 = sext i32 %add to i64, !dbg !7789
  %arrayidx4 = getelementptr inbounds i32, i32* %10, i64 %idxprom3, !dbg !7789
  %12 = load i32, i32* %arrayidx4, align 4, !dbg !7789
  %13 = load %struct.UvElementMap*, %struct.UvElementMap** %elementMap.addr, align 8, !dbg !7794
  %islandIndices5 = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %13, i32 0, i32 4, !dbg !7795
  %14 = load i32*, i32** %islandIndices5, align 8, !dbg !7795
  %15 = load i32, i32* %island.addr, align 4, !dbg !7796
  %idxprom6 = sext i32 %15 to i64, !dbg !7794
  %arrayidx7 = getelementptr inbounds i32, i32* %14, i64 %idxprom6, !dbg !7794
  %16 = load i32, i32* %arrayidx7, align 4, !dbg !7794
  %sub8 = sub nsw i32 %12, %16, !dbg !7797
  store i32 %sub8, i32* %retval, align 4, !dbg !7798
  br label %return, !dbg !7798

return:                                           ; preds = %if.else, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !7799
  ret i32 %17, !dbg !7799
}

; Function Attrs: noinline nounwind uwtable
define internal void @stitch_set_face_preview_buffer_position(%struct.BMFace* %efa, %struct.StitchPreviewer* %preview, %struct.PreviewPosition* %preview_position) #0 !dbg !7800 {
entry:
  %efa.addr = alloca %struct.BMFace*, align 8
  %preview.addr = alloca %struct.StitchPreviewer*, align 8
  %preview_position.addr = alloca %struct.PreviewPosition*, align 8
  %index = alloca i32, align 4
  store %struct.BMFace* %efa, %struct.BMFace** %efa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa.addr, metadata !7803, metadata !DIExpression()), !dbg !7804
  store %struct.StitchPreviewer* %preview, %struct.StitchPreviewer** %preview.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchPreviewer** %preview.addr, metadata !7805, metadata !DIExpression()), !dbg !7806
  store %struct.PreviewPosition* %preview_position, %struct.PreviewPosition** %preview_position.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PreviewPosition** %preview_position.addr, metadata !7807, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7809, metadata !DIExpression()), !dbg !7810
  %0 = load %struct.BMFace*, %struct.BMFace** %efa.addr, align 8, !dbg !7811
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %0, i32 0, i32 0, !dbg !7811
  %call = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !7811
  store i32 %call, i32* %index, align 4, !dbg !7810
  %1 = load %struct.PreviewPosition*, %struct.PreviewPosition** %preview_position.addr, align 8, !dbg !7812
  %2 = load i32, i32* %index, align 4, !dbg !7814
  %idxprom = sext i32 %2 to i64, !dbg !7812
  %arrayidx = getelementptr inbounds %struct.PreviewPosition, %struct.PreviewPosition* %1, i64 %idxprom, !dbg !7812
  %data_position = getelementptr inbounds %struct.PreviewPosition, %struct.PreviewPosition* %arrayidx, i32 0, i32 0, !dbg !7815
  %3 = load i32, i32* %data_position, align 4, !dbg !7815
  %cmp = icmp eq i32 %3, -1, !dbg !7816
  br i1 %cmp, label %if.then, label %if.end, !dbg !7817

if.then:                                          ; preds = %entry
  %4 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview.addr, align 8, !dbg !7818
  %preview_uvs = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %4, i32 0, i32 7, !dbg !7820
  %5 = load i32, i32* %preview_uvs, align 8, !dbg !7820
  %mul = mul i32 %5, 2, !dbg !7821
  %6 = load %struct.PreviewPosition*, %struct.PreviewPosition** %preview_position.addr, align 8, !dbg !7822
  %7 = load i32, i32* %index, align 4, !dbg !7823
  %idxprom1 = sext i32 %7 to i64, !dbg !7822
  %arrayidx2 = getelementptr inbounds %struct.PreviewPosition, %struct.PreviewPosition* %6, i64 %idxprom1, !dbg !7822
  %data_position3 = getelementptr inbounds %struct.PreviewPosition, %struct.PreviewPosition* %arrayidx2, i32 0, i32 0, !dbg !7824
  store i32 %mul, i32* %data_position3, align 4, !dbg !7825
  %8 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview.addr, align 8, !dbg !7826
  %num_polys = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %8, i32 0, i32 2, !dbg !7827
  %9 = load i32, i32* %num_polys, align 8, !dbg !7828
  %inc = add i32 %9, 1, !dbg !7828
  store i32 %inc, i32* %num_polys, align 8, !dbg !7828
  %10 = load %struct.PreviewPosition*, %struct.PreviewPosition** %preview_position.addr, align 8, !dbg !7829
  %11 = load i32, i32* %index, align 4, !dbg !7830
  %idxprom4 = sext i32 %11 to i64, !dbg !7829
  %arrayidx5 = getelementptr inbounds %struct.PreviewPosition, %struct.PreviewPosition* %10, i64 %idxprom4, !dbg !7829
  %polycount_position = getelementptr inbounds %struct.PreviewPosition, %struct.PreviewPosition* %arrayidx5, i32 0, i32 1, !dbg !7831
  store i32 %9, i32* %polycount_position, align 4, !dbg !7832
  %12 = load %struct.BMFace*, %struct.BMFace** %efa.addr, align 8, !dbg !7833
  %len = getelementptr inbounds %struct.BMFace, %struct.BMFace* %12, i32 0, i32 3, !dbg !7834
  %13 = load i32, i32* %len, align 8, !dbg !7834
  %14 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview.addr, align 8, !dbg !7835
  %preview_uvs6 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %14, i32 0, i32 7, !dbg !7836
  %15 = load i32, i32* %preview_uvs6, align 8, !dbg !7837
  %add = add i32 %15, %13, !dbg !7837
  store i32 %add, i32* %preview_uvs6, align 8, !dbg !7837
  br label %if.end, !dbg !7838

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7839
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2(float* %r, float* %a) #0 !dbg !7840 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7841, metadata !DIExpression()), !dbg !7842
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7843, metadata !DIExpression()), !dbg !7844
  %0 = load float*, float** %a.addr, align 8, !dbg !7845
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7845
  %1 = load float, float* %arrayidx, align 4, !dbg !7845
  %2 = load float*, float** %r.addr, align 8, !dbg !7846
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7846
  store float %1, float* %arrayidx1, align 4, !dbg !7847
  %3 = load float*, float** %a.addr, align 8, !dbg !7848
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !7848
  %4 = load float, float* %arrayidx2, align 4, !dbg !7848
  %5 = load float*, float** %r.addr, align 8, !dbg !7849
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !7849
  store float %4, float* %arrayidx3, align 4, !dbg !7850
  ret void, !dbg !7851
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @stitch_check_uvs_state_stitchable(%struct.UvElement* %element, %struct.UvElement* %element_iter, %struct.StitchState* %state) #0 !dbg !7852 {
entry:
  %retval = alloca i8, align 1
  %element.addr = alloca %struct.UvElement*, align 8
  %element_iter.addr = alloca %struct.UvElement*, align 8
  %state.addr = alloca %struct.StitchState*, align 8
  store %struct.UvElement* %element, %struct.UvElement** %element.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element.addr, metadata !7855, metadata !DIExpression()), !dbg !7856
  store %struct.UvElement* %element_iter, %struct.UvElement** %element_iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element_iter.addr, metadata !7857, metadata !DIExpression()), !dbg !7858
  store %struct.StitchState* %state, %struct.StitchState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state.addr, metadata !7859, metadata !DIExpression()), !dbg !7860
  %0 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7861
  %snap_islands = getelementptr inbounds %struct.StitchState, %struct.StitchState* %0, i32 0, i32 3, !dbg !7863
  %1 = load i8, i8* %snap_islands, align 4, !dbg !7863
  %conv = zext i8 %1 to i32, !dbg !7861
  %tobool = icmp ne i32 %conv, 0, !dbg !7861
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !7864

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !7865
  %island = getelementptr inbounds %struct.UvElement, %struct.UvElement* %2, i32 0, i32 5, !dbg !7866
  %3 = load i16, i16* %island, align 4, !dbg !7866
  %conv1 = zext i16 %3 to i32, !dbg !7865
  %4 = load %struct.UvElement*, %struct.UvElement** %element_iter.addr, align 8, !dbg !7867
  %island2 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %4, i32 0, i32 5, !dbg !7868
  %5 = load i16, i16* %island2, align 4, !dbg !7868
  %conv3 = zext i16 %5 to i32, !dbg !7867
  %cmp = icmp eq i32 %conv1, %conv3, !dbg !7869
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7870

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %6 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7871
  %midpoints = getelementptr inbounds %struct.StitchState, %struct.StitchState* %6, i32 0, i32 4, !dbg !7872
  %7 = load i8, i8* %midpoints, align 1, !dbg !7872
  %tobool5 = icmp ne i8 %7, 0, !dbg !7871
  br i1 %tobool5, label %if.end, label %land.lhs.true6, !dbg !7873

land.lhs.true6:                                   ; preds = %lor.lhs.false
  %8 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !7874
  %island7 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %8, i32 0, i32 5, !dbg !7875
  %9 = load i16, i16* %island7, align 4, !dbg !7875
  %conv8 = zext i16 %9 to i32, !dbg !7874
  %10 = load %struct.UvElement*, %struct.UvElement** %element_iter.addr, align 8, !dbg !7876
  %island9 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %10, i32 0, i32 5, !dbg !7877
  %11 = load i16, i16* %island9, align 4, !dbg !7877
  %conv10 = zext i16 %11 to i32, !dbg !7876
  %cmp11 = icmp eq i32 %conv8, %conv10, !dbg !7878
  br i1 %cmp11, label %if.then, label %if.end, !dbg !7879

if.then:                                          ; preds = %land.lhs.true6, %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !7880
  br label %return, !dbg !7880

if.end:                                           ; preds = %land.lhs.true6, %lor.lhs.false
  %12 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !7882
  %13 = load %struct.UvElement*, %struct.UvElement** %element_iter.addr, align 8, !dbg !7883
  %14 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7884
  %call = call zeroext i8 @stitch_check_uvs_stitchable(%struct.UvElement* %12, %struct.UvElement* %13, %struct.StitchState* %14), !dbg !7885
  store i8 %call, i8* %retval, align 1, !dbg !7886
  br label %return, !dbg !7886

return:                                           ; preds = %if.end, %if.then
  %15 = load i8, i8* %retval, align 1, !dbg !7887
  ret i8 %15, !dbg !7887
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @stitch_check_edges_state_stitchable(%struct.UvEdge* %edge, %struct.UvEdge* %edge_iter, %struct.StitchState* %state) #0 !dbg !7888 {
entry:
  %retval = alloca i8, align 1
  %edge.addr = alloca %struct.UvEdge*, align 8
  %edge_iter.addr = alloca %struct.UvEdge*, align 8
  %state.addr = alloca %struct.StitchState*, align 8
  store %struct.UvEdge* %edge, %struct.UvEdge** %edge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge.addr, metadata !7891, metadata !DIExpression()), !dbg !7892
  store %struct.UvEdge* %edge_iter, %struct.UvEdge** %edge_iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge_iter.addr, metadata !7893, metadata !DIExpression()), !dbg !7894
  store %struct.StitchState* %state, %struct.StitchState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state.addr, metadata !7895, metadata !DIExpression()), !dbg !7896
  %0 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7897
  %snap_islands = getelementptr inbounds %struct.StitchState, %struct.StitchState* %0, i32 0, i32 3, !dbg !7899
  %1 = load i8, i8* %snap_islands, align 4, !dbg !7899
  %conv = zext i8 %1 to i32, !dbg !7897
  %tobool = icmp ne i32 %conv, 0, !dbg !7897
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !7900

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !7901
  %element = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %2, i32 0, i32 3, !dbg !7902
  %3 = load %struct.UvElement*, %struct.UvElement** %element, align 8, !dbg !7902
  %island = getelementptr inbounds %struct.UvElement, %struct.UvElement* %3, i32 0, i32 5, !dbg !7903
  %4 = load i16, i16* %island, align 4, !dbg !7903
  %conv1 = zext i16 %4 to i32, !dbg !7901
  %5 = load %struct.UvEdge*, %struct.UvEdge** %edge_iter.addr, align 8, !dbg !7904
  %element2 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %5, i32 0, i32 3, !dbg !7905
  %6 = load %struct.UvElement*, %struct.UvElement** %element2, align 8, !dbg !7905
  %island3 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %6, i32 0, i32 5, !dbg !7906
  %7 = load i16, i16* %island3, align 4, !dbg !7906
  %conv4 = zext i16 %7 to i32, !dbg !7904
  %cmp = icmp eq i32 %conv1, %conv4, !dbg !7907
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7908

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %8 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7909
  %midpoints = getelementptr inbounds %struct.StitchState, %struct.StitchState* %8, i32 0, i32 4, !dbg !7910
  %9 = load i8, i8* %midpoints, align 1, !dbg !7910
  %tobool6 = icmp ne i8 %9, 0, !dbg !7909
  br i1 %tobool6, label %if.end, label %land.lhs.true7, !dbg !7911

land.lhs.true7:                                   ; preds = %lor.lhs.false
  %10 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !7912
  %element8 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %10, i32 0, i32 3, !dbg !7913
  %11 = load %struct.UvElement*, %struct.UvElement** %element8, align 8, !dbg !7913
  %island9 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %11, i32 0, i32 5, !dbg !7914
  %12 = load i16, i16* %island9, align 4, !dbg !7914
  %conv10 = zext i16 %12 to i32, !dbg !7912
  %13 = load %struct.UvEdge*, %struct.UvEdge** %edge_iter.addr, align 8, !dbg !7915
  %element11 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %13, i32 0, i32 3, !dbg !7916
  %14 = load %struct.UvElement*, %struct.UvElement** %element11, align 8, !dbg !7916
  %island12 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %14, i32 0, i32 5, !dbg !7917
  %15 = load i16, i16* %island12, align 4, !dbg !7917
  %conv13 = zext i16 %15 to i32, !dbg !7915
  %cmp14 = icmp eq i32 %conv10, %conv13, !dbg !7918
  br i1 %cmp14, label %if.then, label %if.end, !dbg !7919

if.then:                                          ; preds = %land.lhs.true7, %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !7920
  br label %return, !dbg !7920

if.end:                                           ; preds = %land.lhs.true7, %lor.lhs.false
  %16 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !7922
  %17 = load %struct.UvEdge*, %struct.UvEdge** %edge_iter.addr, align 8, !dbg !7923
  %18 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7924
  %call = call zeroext i8 @stitch_check_edges_stitchable(%struct.UvEdge* %16, %struct.UvEdge* %17, %struct.StitchState* %18), !dbg !7925
  store i8 %call, i8* %retval, align 1, !dbg !7926
  br label %return, !dbg !7926

return:                                           ; preds = %if.end, %if.then
  %19 = load i8, i8* %retval, align 1, !dbg !7927
  ret i8 %19, !dbg !7927
}

; Function Attrs: noinline nounwind uwtable
define internal void @stitch_island_calculate_edge_rotation(%struct.UvEdge* %edge, %struct.StitchState* %state, %struct.UVVertAverage* %uv_average, i32* %uvfinal_map, %struct.IslandStitchData* %island_stitch_data) #0 !dbg !7928 {
entry:
  %edge.addr = alloca %struct.UvEdge*, align 8
  %state.addr = alloca %struct.StitchState*, align 8
  %uv_average.addr = alloca %struct.UVVertAverage*, align 8
  %uvfinal_map.addr = alloca i32*, align 8
  %island_stitch_data.addr = alloca %struct.IslandStitchData*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %element1 = alloca %struct.UvElement*, align 8
  %element2 = alloca %struct.UvElement*, align 8
  %uv1 = alloca [2 x float], align 4
  %uv2 = alloca [2 x float], align 4
  %edgecos = alloca float, align 4
  %edgesin = alloca float, align 4
  %index1 = alloca i32, align 4
  %index2 = alloca i32, align 4
  %rotation = alloca float, align 4
  %luv1 = alloca %struct.MLoopUV*, align 8
  %luv2 = alloca %struct.MLoopUV*, align 8
  store %struct.UvEdge* %edge, %struct.UvEdge** %edge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge.addr, metadata !7931, metadata !DIExpression()), !dbg !7932
  store %struct.StitchState* %state, %struct.StitchState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state.addr, metadata !7933, metadata !DIExpression()), !dbg !7934
  store %struct.UVVertAverage* %uv_average, %struct.UVVertAverage** %uv_average.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UVVertAverage** %uv_average.addr, metadata !7935, metadata !DIExpression()), !dbg !7936
  store i32* %uvfinal_map, i32** %uvfinal_map.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %uvfinal_map.addr, metadata !7937, metadata !DIExpression()), !dbg !7938
  store %struct.IslandStitchData* %island_stitch_data, %struct.IslandStitchData** %island_stitch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IslandStitchData** %island_stitch_data.addr, metadata !7939, metadata !DIExpression()), !dbg !7940
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !7941, metadata !DIExpression()), !dbg !7942
  %0 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7943
  %em = getelementptr inbounds %struct.StitchState, %struct.StitchState* %0, i32 0, i32 5, !dbg !7944
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7944
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %1, i32 0, i32 0, !dbg !7945
  %2 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !7945
  store %struct.BMesh* %2, %struct.BMesh** %bm, align 8, !dbg !7942
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element1, metadata !7946, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element2, metadata !7948, metadata !DIExpression()), !dbg !7949
  call void @llvm.dbg.declare(metadata [2 x float]* %uv1, metadata !7950, metadata !DIExpression()), !dbg !7951
  call void @llvm.dbg.declare(metadata [2 x float]* %uv2, metadata !7952, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.declare(metadata float* %edgecos, metadata !7954, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.declare(metadata float* %edgesin, metadata !7956, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.declare(metadata i32* %index1, metadata !7958, metadata !DIExpression()), !dbg !7959
  call void @llvm.dbg.declare(metadata i32* %index2, metadata !7960, metadata !DIExpression()), !dbg !7961
  call void @llvm.dbg.declare(metadata float* %rotation, metadata !7962, metadata !DIExpression()), !dbg !7963
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv1, metadata !7964, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv2, metadata !7966, metadata !DIExpression()), !dbg !7967
  %3 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7968
  %uvs = getelementptr inbounds %struct.StitchState, %struct.StitchState* %3, i32 0, i32 9, !dbg !7969
  %4 = load %struct.UvElement**, %struct.UvElement*** %uvs, align 8, !dbg !7969
  %5 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !7970
  %uv12 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %5, i32 0, i32 0, !dbg !7971
  %6 = load i32, i32* %uv12, align 8, !dbg !7971
  %idxprom = zext i32 %6 to i64, !dbg !7968
  %arrayidx = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %4, i64 %idxprom, !dbg !7968
  %7 = load %struct.UvElement*, %struct.UvElement** %arrayidx, align 8, !dbg !7968
  store %struct.UvElement* %7, %struct.UvElement** %element1, align 8, !dbg !7972
  %8 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7973
  %uvs3 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %8, i32 0, i32 9, !dbg !7974
  %9 = load %struct.UvElement**, %struct.UvElement*** %uvs3, align 8, !dbg !7974
  %10 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !7975
  %uv24 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %10, i32 0, i32 1, !dbg !7976
  %11 = load i32, i32* %uv24, align 4, !dbg !7976
  %idxprom5 = zext i32 %11 to i64, !dbg !7973
  %arrayidx6 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %9, i64 %idxprom5, !dbg !7973
  %12 = load %struct.UvElement*, %struct.UvElement** %arrayidx6, align 8, !dbg !7973
  store %struct.UvElement* %12, %struct.UvElement** %element2, align 8, !dbg !7977
  %13 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7978
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %13, i32 0, i32 26, !dbg !7979
  %14 = load %struct.UvElement*, %struct.UvElement** %element1, align 8, !dbg !7980
  %l = getelementptr inbounds %struct.UvElement, %struct.UvElement* %14, i32 0, i32 1, !dbg !7981
  %15 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !7981
  %head = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %15, i32 0, i32 0, !dbg !7982
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !7983
  %16 = load i8*, i8** %data, align 8, !dbg !7983
  %call = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata, i8* %16, i32 16), !dbg !7984
  %17 = bitcast i8* %call to %struct.MLoopUV*, !dbg !7984
  store %struct.MLoopUV* %17, %struct.MLoopUV** %luv1, align 8, !dbg !7985
  %18 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7986
  %ldata7 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %18, i32 0, i32 26, !dbg !7987
  %19 = load %struct.UvElement*, %struct.UvElement** %element2, align 8, !dbg !7988
  %l8 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %19, i32 0, i32 1, !dbg !7989
  %20 = load %struct.BMLoop*, %struct.BMLoop** %l8, align 8, !dbg !7989
  %head9 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %20, i32 0, i32 0, !dbg !7990
  %data10 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head9, i32 0, i32 0, !dbg !7991
  %21 = load i8*, i8** %data10, align 8, !dbg !7991
  %call11 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata7, i8* %21, i32 16), !dbg !7992
  %22 = bitcast i8* %call11 to %struct.MLoopUV*, !dbg !7992
  store %struct.MLoopUV* %22, %struct.MLoopUV** %luv2, align 8, !dbg !7993
  %23 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !7994
  %mode = getelementptr inbounds %struct.StitchState, %struct.StitchState* %23, i32 0, i32 20, !dbg !7996
  %24 = load i8, i8* %mode, align 8, !dbg !7996
  %conv = zext i8 %24 to i32, !dbg !7994
  %cmp = icmp eq i32 %conv, 0, !dbg !7997
  br i1 %cmp, label %if.then, label %if.else, !dbg !7998

if.then:                                          ; preds = %entry
  %25 = load i32*, i32** %uvfinal_map.addr, align 8, !dbg !7999
  %26 = load %struct.UvElement*, %struct.UvElement** %element1, align 8, !dbg !8001
  %27 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8002
  %element_map = getelementptr inbounds %struct.StitchState, %struct.StitchState* %27, i32 0, i32 7, !dbg !8003
  %28 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map, align 8, !dbg !8003
  %buf = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %28, i32 0, i32 1, !dbg !8004
  %29 = load %struct.UvElement*, %struct.UvElement** %buf, align 8, !dbg !8004
  %sub.ptr.lhs.cast = ptrtoint %struct.UvElement* %26 to i64, !dbg !8005
  %sub.ptr.rhs.cast = ptrtoint %struct.UvElement* %29 to i64, !dbg !8005
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8005
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24, !dbg !8005
  %arrayidx13 = getelementptr inbounds i32, i32* %25, i64 %sub.ptr.div, !dbg !7999
  %30 = load i32, i32* %arrayidx13, align 4, !dbg !7999
  store i32 %30, i32* %index1, align 4, !dbg !8006
  %31 = load i32*, i32** %uvfinal_map.addr, align 8, !dbg !8007
  %32 = load %struct.UvElement*, %struct.UvElement** %element2, align 8, !dbg !8008
  %33 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8009
  %element_map14 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %33, i32 0, i32 7, !dbg !8010
  %34 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map14, align 8, !dbg !8010
  %buf15 = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %34, i32 0, i32 1, !dbg !8011
  %35 = load %struct.UvElement*, %struct.UvElement** %buf15, align 8, !dbg !8011
  %sub.ptr.lhs.cast16 = ptrtoint %struct.UvElement* %32 to i64, !dbg !8012
  %sub.ptr.rhs.cast17 = ptrtoint %struct.UvElement* %35 to i64, !dbg !8012
  %sub.ptr.sub18 = sub i64 %sub.ptr.lhs.cast16, %sub.ptr.rhs.cast17, !dbg !8012
  %sub.ptr.div19 = sdiv exact i64 %sub.ptr.sub18, 24, !dbg !8012
  %arrayidx20 = getelementptr inbounds i32, i32* %31, i64 %sub.ptr.div19, !dbg !8007
  %36 = load i32, i32* %arrayidx20, align 4, !dbg !8007
  store i32 %36, i32* %index2, align 4, !dbg !8013
  br label %if.end, !dbg !8014

if.else:                                          ; preds = %entry
  %37 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !8015
  %uv121 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %37, i32 0, i32 0, !dbg !8017
  %38 = load i32, i32* %uv121, align 8, !dbg !8017
  store i32 %38, i32* %index1, align 4, !dbg !8018
  %39 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !8019
  %uv222 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %39, i32 0, i32 1, !dbg !8020
  %40 = load i32, i32* %uv222, align 4, !dbg !8020
  store i32 %40, i32* %index2, align 4, !dbg !8021
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %41 = load %struct.MLoopUV*, %struct.MLoopUV** %luv2, align 8, !dbg !8022
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %41, i32 0, i32 0, !dbg !8023
  %arrayidx23 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !8022
  %42 = load float, float* %arrayidx23, align 4, !dbg !8022
  %43 = load %struct.MLoopUV*, %struct.MLoopUV** %luv1, align 8, !dbg !8024
  %uv25 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %43, i32 0, i32 0, !dbg !8025
  %arrayidx26 = getelementptr inbounds [2 x float], [2 x float]* %uv25, i64 0, i64 0, !dbg !8024
  %44 = load float, float* %arrayidx26, align 4, !dbg !8024
  %sub = fsub float %42, %44, !dbg !8026
  %arrayidx27 = getelementptr inbounds [2 x float], [2 x float]* %uv1, i64 0, i64 0, !dbg !8027
  store float %sub, float* %arrayidx27, align 4, !dbg !8028
  %45 = load %struct.MLoopUV*, %struct.MLoopUV** %luv2, align 8, !dbg !8029
  %uv28 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %45, i32 0, i32 0, !dbg !8030
  %arrayidx29 = getelementptr inbounds [2 x float], [2 x float]* %uv28, i64 0, i64 1, !dbg !8029
  %46 = load float, float* %arrayidx29, align 4, !dbg !8029
  %47 = load %struct.MLoopUV*, %struct.MLoopUV** %luv1, align 8, !dbg !8031
  %uv30 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %47, i32 0, i32 0, !dbg !8032
  %arrayidx31 = getelementptr inbounds [2 x float], [2 x float]* %uv30, i64 0, i64 1, !dbg !8031
  %48 = load float, float* %arrayidx31, align 4, !dbg !8031
  %sub32 = fsub float %46, %48, !dbg !8033
  %arrayidx33 = getelementptr inbounds [2 x float], [2 x float]* %uv1, i64 0, i64 1, !dbg !8034
  store float %sub32, float* %arrayidx33, align 4, !dbg !8035
  %49 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8036
  %aspect = getelementptr inbounds %struct.StitchState, %struct.StitchState* %49, i32 0, i32 0, !dbg !8037
  %50 = load float, float* %aspect, align 8, !dbg !8037
  %arrayidx34 = getelementptr inbounds [2 x float], [2 x float]* %uv1, i64 0, i64 1, !dbg !8038
  %51 = load float, float* %arrayidx34, align 4, !dbg !8039
  %div = fdiv float %51, %50, !dbg !8039
  store float %div, float* %arrayidx34, align 4, !dbg !8039
  %52 = load %struct.UVVertAverage*, %struct.UVVertAverage** %uv_average.addr, align 8, !dbg !8040
  %53 = load i32, i32* %index2, align 4, !dbg !8041
  %idxprom35 = sext i32 %53 to i64, !dbg !8040
  %arrayidx36 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %52, i64 %idxprom35, !dbg !8040
  %uv37 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx36, i32 0, i32 0, !dbg !8042
  %arrayidx38 = getelementptr inbounds [2 x float], [2 x float]* %uv37, i64 0, i64 0, !dbg !8040
  %54 = load float, float* %arrayidx38, align 4, !dbg !8040
  %55 = load %struct.UVVertAverage*, %struct.UVVertAverage** %uv_average.addr, align 8, !dbg !8043
  %56 = load i32, i32* %index1, align 4, !dbg !8044
  %idxprom39 = sext i32 %56 to i64, !dbg !8043
  %arrayidx40 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %55, i64 %idxprom39, !dbg !8043
  %uv41 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx40, i32 0, i32 0, !dbg !8045
  %arrayidx42 = getelementptr inbounds [2 x float], [2 x float]* %uv41, i64 0, i64 0, !dbg !8043
  %57 = load float, float* %arrayidx42, align 4, !dbg !8043
  %sub43 = fsub float %54, %57, !dbg !8046
  %arrayidx44 = getelementptr inbounds [2 x float], [2 x float]* %uv2, i64 0, i64 0, !dbg !8047
  store float %sub43, float* %arrayidx44, align 4, !dbg !8048
  %58 = load %struct.UVVertAverage*, %struct.UVVertAverage** %uv_average.addr, align 8, !dbg !8049
  %59 = load i32, i32* %index2, align 4, !dbg !8050
  %idxprom45 = sext i32 %59 to i64, !dbg !8049
  %arrayidx46 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %58, i64 %idxprom45, !dbg !8049
  %uv47 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx46, i32 0, i32 0, !dbg !8051
  %arrayidx48 = getelementptr inbounds [2 x float], [2 x float]* %uv47, i64 0, i64 1, !dbg !8049
  %60 = load float, float* %arrayidx48, align 4, !dbg !8049
  %61 = load %struct.UVVertAverage*, %struct.UVVertAverage** %uv_average.addr, align 8, !dbg !8052
  %62 = load i32, i32* %index1, align 4, !dbg !8053
  %idxprom49 = sext i32 %62 to i64, !dbg !8052
  %arrayidx50 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %61, i64 %idxprom49, !dbg !8052
  %uv51 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx50, i32 0, i32 0, !dbg !8054
  %arrayidx52 = getelementptr inbounds [2 x float], [2 x float]* %uv51, i64 0, i64 1, !dbg !8052
  %63 = load float, float* %arrayidx52, align 4, !dbg !8052
  %sub53 = fsub float %60, %63, !dbg !8055
  %arrayidx54 = getelementptr inbounds [2 x float], [2 x float]* %uv2, i64 0, i64 1, !dbg !8056
  store float %sub53, float* %arrayidx54, align 4, !dbg !8057
  %64 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8058
  %aspect55 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %64, i32 0, i32 0, !dbg !8059
  %65 = load float, float* %aspect55, align 8, !dbg !8059
  %arrayidx56 = getelementptr inbounds [2 x float], [2 x float]* %uv2, i64 0, i64 1, !dbg !8060
  %66 = load float, float* %arrayidx56, align 4, !dbg !8061
  %div57 = fdiv float %66, %65, !dbg !8061
  store float %div57, float* %arrayidx56, align 4, !dbg !8061
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv1, i64 0, i64 0, !dbg !8062
  %call58 = call float @normalize_v2(float* %arraydecay), !dbg !8063
  %arraydecay59 = getelementptr inbounds [2 x float], [2 x float]* %uv2, i64 0, i64 0, !dbg !8064
  %call60 = call float @normalize_v2(float* %arraydecay59), !dbg !8065
  %arraydecay61 = getelementptr inbounds [2 x float], [2 x float]* %uv1, i64 0, i64 0, !dbg !8066
  %arraydecay62 = getelementptr inbounds [2 x float], [2 x float]* %uv2, i64 0, i64 0, !dbg !8067
  %call63 = call float @dot_v2v2(float* %arraydecay61, float* %arraydecay62), !dbg !8068
  store float %call63, float* %edgecos, align 4, !dbg !8069
  %arraydecay64 = getelementptr inbounds [2 x float], [2 x float]* %uv1, i64 0, i64 0, !dbg !8070
  %arraydecay65 = getelementptr inbounds [2 x float], [2 x float]* %uv2, i64 0, i64 0, !dbg !8071
  %call66 = call float @cross_v2v2(float* %arraydecay64, float* %arraydecay65), !dbg !8072
  store float %call66, float* %edgesin, align 4, !dbg !8073
  %67 = load float, float* %edgecos, align 4, !dbg !8074
  %call67 = call float @min_ff(float 1.000000e+00, float %67), !dbg !8075
  %call68 = call float @max_ff(float -1.000000e+00, float %call67), !dbg !8076
  %call69 = call float @acosf(float %call68) #5, !dbg !8077
  store float %call69, float* %rotation, align 4, !dbg !8078
  %68 = load float, float* %edgesin, align 4, !dbg !8079
  %cmp70 = fcmp ogt float %68, 0.000000e+00, !dbg !8081
  br i1 %cmp70, label %if.then72, label %if.else79, !dbg !8082

if.then72:                                        ; preds = %if.end
  %69 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8083
  %70 = load %struct.UvElement*, %struct.UvElement** %element1, align 8, !dbg !8085
  %island = getelementptr inbounds %struct.UvElement, %struct.UvElement* %70, i32 0, i32 5, !dbg !8086
  %71 = load i16, i16* %island, align 4, !dbg !8086
  %idxprom73 = zext i16 %71 to i64, !dbg !8083
  %arrayidx74 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %69, i64 %idxprom73, !dbg !8083
  %num_rot_elements = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx74, i32 0, i32 5, !dbg !8087
  %72 = load i32, i32* %num_rot_elements, align 4, !dbg !8088
  %inc = add nsw i32 %72, 1, !dbg !8088
  store i32 %inc, i32* %num_rot_elements, align 4, !dbg !8088
  %73 = load float, float* %rotation, align 4, !dbg !8089
  %74 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8090
  %75 = load %struct.UvElement*, %struct.UvElement** %element1, align 8, !dbg !8091
  %island75 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %75, i32 0, i32 5, !dbg !8092
  %76 = load i16, i16* %island75, align 4, !dbg !8092
  %idxprom76 = zext i16 %76 to i64, !dbg !8090
  %arrayidx77 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %74, i64 %idxprom76, !dbg !8090
  %rotation78 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx77, i32 0, i32 0, !dbg !8093
  %77 = load float, float* %rotation78, align 4, !dbg !8094
  %add = fadd float %77, %73, !dbg !8094
  store float %add, float* %rotation78, align 4, !dbg !8094
  br label %if.end88, !dbg !8095

if.else79:                                        ; preds = %if.end
  %78 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8096
  %79 = load %struct.UvElement*, %struct.UvElement** %element1, align 8, !dbg !8098
  %island80 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %79, i32 0, i32 5, !dbg !8099
  %80 = load i16, i16* %island80, align 4, !dbg !8099
  %idxprom81 = zext i16 %80 to i64, !dbg !8096
  %arrayidx82 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %78, i64 %idxprom81, !dbg !8096
  %num_rot_elements_neg = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx82, i32 0, i32 6, !dbg !8100
  %81 = load i32, i32* %num_rot_elements_neg, align 4, !dbg !8101
  %inc83 = add nsw i32 %81, 1, !dbg !8101
  store i32 %inc83, i32* %num_rot_elements_neg, align 4, !dbg !8101
  %82 = load float, float* %rotation, align 4, !dbg !8102
  %83 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8103
  %84 = load %struct.UvElement*, %struct.UvElement** %element1, align 8, !dbg !8104
  %island84 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %84, i32 0, i32 5, !dbg !8105
  %85 = load i16, i16* %island84, align 4, !dbg !8105
  %idxprom85 = zext i16 %85 to i64, !dbg !8103
  %arrayidx86 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %83, i64 %idxprom85, !dbg !8103
  %rotation_neg = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx86, i32 0, i32 1, !dbg !8106
  %86 = load float, float* %rotation_neg, align 4, !dbg !8107
  %add87 = fadd float %86, %82, !dbg !8107
  store float %add87, float* %rotation_neg, align 4, !dbg !8107
  br label %if.end88

if.end88:                                         ; preds = %if.else79, %if.then72
  ret void, !dbg !8108
}

; Function Attrs: noinline nounwind uwtable
define internal void @_bm_elem_flag_disable(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !8109 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !8113, metadata !DIExpression()), !dbg !8114
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !8115, metadata !DIExpression()), !dbg !8116
  %0 = load i8, i8* %hflag.addr, align 1, !dbg !8117
  %conv = zext i8 %0 to i32, !dbg !8117
  %neg = xor i32 %conv, -1, !dbg !8118
  %conv1 = trunc i32 %neg to i8, !dbg !8119
  %conv2 = zext i8 %conv1 to i32, !dbg !8119
  %1 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !8120
  %hflag3 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %1, i32 0, i32 3, !dbg !8121
  %2 = load i8, i8* %hflag3, align 1, !dbg !8122
  %conv4 = zext i8 %2 to i32, !dbg !8122
  %and = and i32 %conv4, %conv2, !dbg !8122
  %conv5 = trunc i32 %and to i8, !dbg !8122
  store i8 %conv5, i8* %hflag3, align 1, !dbg !8122
  ret void, !dbg !8123
}

; Function Attrs: noinline nounwind uwtable
define internal void @stitch_island_calculate_vert_rotation(%struct.UvElement* %element, %struct.StitchState* %state, %struct.IslandStitchData* %island_stitch_data) #0 !dbg !8124 {
entry:
  %element.addr = alloca %struct.UvElement*, align 8
  %state.addr = alloca %struct.StitchState*, align 8
  %island_stitch_data.addr = alloca %struct.IslandStitchData*, align 8
  %edgecos = alloca float, align 4
  %edgesin = alloca float, align 4
  %index = alloca i32, align 4
  %element_iter = alloca %struct.UvElement*, align 8
  %rotation = alloca float, align 4
  %rotation_neg = alloca float, align 4
  %rot_elem = alloca i32, align 4
  %rot_elem_neg = alloca i32, align 4
  %l = alloca %struct.BMLoop*, align 8
  %index_tmp1 = alloca i32, align 4
  %index_tmp2 = alloca i32, align 4
  %normal = alloca [2 x float], align 4
  store %struct.UvElement* %element, %struct.UvElement** %element.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element.addr, metadata !8125, metadata !DIExpression()), !dbg !8126
  store %struct.StitchState* %state, %struct.StitchState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state.addr, metadata !8127, metadata !DIExpression()), !dbg !8128
  store %struct.IslandStitchData* %island_stitch_data, %struct.IslandStitchData** %island_stitch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IslandStitchData** %island_stitch_data.addr, metadata !8129, metadata !DIExpression()), !dbg !8130
  call void @llvm.dbg.declare(metadata float* %edgecos, metadata !8131, metadata !DIExpression()), !dbg !8132
  store float 1.000000e+00, float* %edgecos, align 4, !dbg !8132
  call void @llvm.dbg.declare(metadata float* %edgesin, metadata !8133, metadata !DIExpression()), !dbg !8134
  store float 0.000000e+00, float* %edgesin, align 4, !dbg !8134
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8135, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element_iter, metadata !8137, metadata !DIExpression()), !dbg !8138
  call void @llvm.dbg.declare(metadata float* %rotation, metadata !8139, metadata !DIExpression()), !dbg !8140
  store float 0.000000e+00, float* %rotation, align 4, !dbg !8140
  call void @llvm.dbg.declare(metadata float* %rotation_neg, metadata !8141, metadata !DIExpression()), !dbg !8142
  store float 0.000000e+00, float* %rotation_neg, align 4, !dbg !8142
  call void @llvm.dbg.declare(metadata i32* %rot_elem, metadata !8143, metadata !DIExpression()), !dbg !8144
  store i32 0, i32* %rot_elem, align 4, !dbg !8144
  call void @llvm.dbg.declare(metadata i32* %rot_elem_neg, metadata !8145, metadata !DIExpression()), !dbg !8146
  store i32 0, i32* %rot_elem_neg, align 4, !dbg !8146
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !8147, metadata !DIExpression()), !dbg !8148
  %0 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !8149
  %island = getelementptr inbounds %struct.UvElement, %struct.UvElement* %0, i32 0, i32 5, !dbg !8151
  %1 = load i16, i16* %island, align 4, !dbg !8151
  %conv = zext i16 %1 to i32, !dbg !8149
  %2 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8152
  %static_island = getelementptr inbounds %struct.StitchState, %struct.StitchState* %2, i32 0, i32 18, !dbg !8153
  %3 = load i32, i32* %static_island, align 4, !dbg !8153
  %cmp = icmp eq i32 %conv, %3, !dbg !8154
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8155

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8156
  %midpoints = getelementptr inbounds %struct.StitchState, %struct.StitchState* %4, i32 0, i32 4, !dbg !8157
  %5 = load i8, i8* %midpoints, align 1, !dbg !8157
  %tobool = icmp ne i8 %5, 0, !dbg !8156
  br i1 %tobool, label %if.end, label %if.then, !dbg !8158

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !8159

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !8160
  %l2 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %6, i32 0, i32 1, !dbg !8161
  %7 = load %struct.BMLoop*, %struct.BMLoop** %l2, align 8, !dbg !8161
  store %struct.BMLoop* %7, %struct.BMLoop** %l, align 8, !dbg !8162
  %8 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8163
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %8, i32 0, i32 1, !dbg !8163
  %9 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !8163
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %9, i32 0, i32 0, !dbg !8163
  %call = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !8163
  store i32 %call, i32* %index, align 4, !dbg !8164
  %10 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8165
  %element_map = getelementptr inbounds %struct.StitchState, %struct.StitchState* %10, i32 0, i32 7, !dbg !8166
  %11 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map, align 8, !dbg !8166
  %vert = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %11, i32 0, i32 0, !dbg !8167
  %12 = load %struct.UvElement**, %struct.UvElement*** %vert, align 8, !dbg !8167
  %13 = load i32, i32* %index, align 4, !dbg !8168
  %idxprom = sext i32 %13 to i64, !dbg !8165
  %arrayidx = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %12, i64 %idxprom, !dbg !8165
  %14 = load %struct.UvElement*, %struct.UvElement** %arrayidx, align 8, !dbg !8165
  store %struct.UvElement* %14, %struct.UvElement** %element_iter, align 8, !dbg !8169
  br label %for.cond, !dbg !8170

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !8171
  %tobool3 = icmp ne %struct.UvElement* %15, null, !dbg !8174
  br i1 %tobool3, label %for.body, label %for.end, !dbg !8174

for.body:                                         ; preds = %for.cond
  %16 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !8175
  %separate = getelementptr inbounds %struct.UvElement, %struct.UvElement* %16, i32 0, i32 3, !dbg !8178
  %17 = load i8, i8* %separate, align 2, !dbg !8178
  %conv4 = zext i8 %17 to i32, !dbg !8175
  %tobool5 = icmp ne i32 %conv4, 0, !dbg !8175
  br i1 %tobool5, label %land.lhs.true6, label %if.end59, !dbg !8179

land.lhs.true6:                                   ; preds = %for.body
  %18 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !8180
  %19 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !8181
  %20 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8182
  %call7 = call zeroext i8 @stitch_check_uvs_state_stitchable(%struct.UvElement* %18, %struct.UvElement* %19, %struct.StitchState* %20), !dbg !8183
  %conv8 = zext i8 %call7 to i32, !dbg !8183
  %tobool9 = icmp ne i32 %conv8, 0, !dbg !8183
  br i1 %tobool9, label %if.then10, label %if.end59, !dbg !8184

if.then10:                                        ; preds = %land.lhs.true6
  call void @llvm.dbg.declare(metadata i32* %index_tmp1, metadata !8185, metadata !DIExpression()), !dbg !8187
  call void @llvm.dbg.declare(metadata i32* %index_tmp2, metadata !8188, metadata !DIExpression()), !dbg !8189
  call void @llvm.dbg.declare(metadata [2 x float]* %normal, metadata !8190, metadata !DIExpression()), !dbg !8191
  %21 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8192
  %midpoints11 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %21, i32 0, i32 4, !dbg !8194
  %22 = load i8, i8* %midpoints11, align 1, !dbg !8194
  %tobool12 = icmp ne i8 %22, 0, !dbg !8192
  br i1 %tobool12, label %if.end20, label %land.lhs.true13, !dbg !8195

land.lhs.true13:                                  ; preds = %if.then10
  %23 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !8196
  %island14 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %23, i32 0, i32 5, !dbg !8197
  %24 = load i16, i16* %island14, align 4, !dbg !8197
  %conv15 = zext i16 %24 to i32, !dbg !8196
  %25 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8198
  %static_island16 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %25, i32 0, i32 18, !dbg !8199
  %26 = load i32, i32* %static_island16, align 4, !dbg !8199
  %cmp17 = icmp ne i32 %conv15, %26, !dbg !8200
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !8201

if.then19:                                        ; preds = %land.lhs.true13
  br label %for.inc, !dbg !8202

if.end20:                                         ; preds = %land.lhs.true13, %if.then10
  %27 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !8203
  %28 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8204
  %element_map21 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %28, i32 0, i32 7, !dbg !8205
  %29 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map21, align 8, !dbg !8205
  %buf = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %29, i32 0, i32 1, !dbg !8206
  %30 = load %struct.UvElement*, %struct.UvElement** %buf, align 8, !dbg !8206
  %sub.ptr.lhs.cast = ptrtoint %struct.UvElement* %27 to i64, !dbg !8207
  %sub.ptr.rhs.cast = ptrtoint %struct.UvElement* %30 to i64, !dbg !8207
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8207
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24, !dbg !8207
  %conv22 = trunc i64 %sub.ptr.div to i32, !dbg !8203
  store i32 %conv22, i32* %index_tmp1, align 4, !dbg !8208
  %31 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8209
  %map = getelementptr inbounds %struct.StitchState, %struct.StitchState* %31, i32 0, i32 10, !dbg !8210
  %32 = load i32*, i32** %map, align 8, !dbg !8210
  %33 = load i32, i32* %index_tmp1, align 4, !dbg !8211
  %idxprom23 = sext i32 %33 to i64, !dbg !8209
  %arrayidx24 = getelementptr inbounds i32, i32* %32, i64 %idxprom23, !dbg !8209
  %34 = load i32, i32* %arrayidx24, align 4, !dbg !8209
  store i32 %34, i32* %index_tmp1, align 4, !dbg !8212
  %35 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !8213
  %36 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8214
  %element_map25 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %36, i32 0, i32 7, !dbg !8215
  %37 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map25, align 8, !dbg !8215
  %buf26 = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %37, i32 0, i32 1, !dbg !8216
  %38 = load %struct.UvElement*, %struct.UvElement** %buf26, align 8, !dbg !8216
  %sub.ptr.lhs.cast27 = ptrtoint %struct.UvElement* %35 to i64, !dbg !8217
  %sub.ptr.rhs.cast28 = ptrtoint %struct.UvElement* %38 to i64, !dbg !8217
  %sub.ptr.sub29 = sub i64 %sub.ptr.lhs.cast27, %sub.ptr.rhs.cast28, !dbg !8217
  %sub.ptr.div30 = sdiv exact i64 %sub.ptr.sub29, 24, !dbg !8217
  %conv31 = trunc i64 %sub.ptr.div30 to i32, !dbg !8213
  store i32 %conv31, i32* %index_tmp2, align 4, !dbg !8218
  %39 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8219
  %map32 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %39, i32 0, i32 10, !dbg !8220
  %40 = load i32*, i32** %map32, align 8, !dbg !8220
  %41 = load i32, i32* %index_tmp2, align 4, !dbg !8221
  %idxprom33 = sext i32 %41 to i64, !dbg !8219
  %arrayidx34 = getelementptr inbounds i32, i32* %40, i64 %idxprom33, !dbg !8219
  %42 = load i32, i32* %arrayidx34, align 4, !dbg !8219
  store i32 %42, i32* %index_tmp2, align 4, !dbg !8222
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %normal, i64 0, i64 0, !dbg !8223
  %43 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8224
  %normals = getelementptr inbounds %struct.StitchState, %struct.StitchState* %43, i32 0, i32 11, !dbg !8225
  %44 = load float*, float** %normals, align 8, !dbg !8225
  %45 = load i32, i32* %index_tmp2, align 4, !dbg !8226
  %mul = mul nsw i32 %45, 2, !dbg !8227
  %idx.ext = sext i32 %mul to i64, !dbg !8228
  %add.ptr = getelementptr inbounds float, float* %44, i64 %idx.ext, !dbg !8228
  call void @negate_v2_v2(float* %arraydecay, float* %add.ptr), !dbg !8229
  %arraydecay35 = getelementptr inbounds [2 x float], [2 x float]* %normal, i64 0, i64 0, !dbg !8230
  %46 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8231
  %normals36 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %46, i32 0, i32 11, !dbg !8232
  %47 = load float*, float** %normals36, align 8, !dbg !8232
  %48 = load i32, i32* %index_tmp1, align 4, !dbg !8233
  %mul37 = mul nsw i32 %48, 2, !dbg !8234
  %idx.ext38 = sext i32 %mul37 to i64, !dbg !8235
  %add.ptr39 = getelementptr inbounds float, float* %47, i64 %idx.ext38, !dbg !8235
  %call40 = call float @dot_v2v2(float* %arraydecay35, float* %add.ptr39), !dbg !8236
  store float %call40, float* %edgecos, align 4, !dbg !8237
  %arraydecay41 = getelementptr inbounds [2 x float], [2 x float]* %normal, i64 0, i64 0, !dbg !8238
  %49 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8239
  %normals42 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %49, i32 0, i32 11, !dbg !8240
  %50 = load float*, float** %normals42, align 8, !dbg !8240
  %51 = load i32, i32* %index_tmp1, align 4, !dbg !8241
  %mul43 = mul nsw i32 %51, 2, !dbg !8242
  %idx.ext44 = sext i32 %mul43 to i64, !dbg !8243
  %add.ptr45 = getelementptr inbounds float, float* %50, i64 %idx.ext44, !dbg !8243
  %call46 = call float @cross_v2v2(float* %arraydecay41, float* %add.ptr45), !dbg !8244
  store float %call46, float* %edgesin, align 4, !dbg !8245
  %52 = load float, float* %edgesin, align 4, !dbg !8246
  %cmp47 = fcmp ogt float %52, 0.000000e+00, !dbg !8248
  br i1 %cmp47, label %if.then49, label %if.else, !dbg !8249

if.then49:                                        ; preds = %if.end20
  %53 = load float, float* %edgecos, align 4, !dbg !8250
  %call50 = call float @min_ff(float 1.000000e+00, float %53), !dbg !8252
  %call51 = call float @max_ff(float -1.000000e+00, float %call50), !dbg !8253
  %call52 = call float @acosf(float %call51) #5, !dbg !8254
  %54 = load float, float* %rotation, align 4, !dbg !8255
  %add = fadd float %54, %call52, !dbg !8255
  store float %add, float* %rotation, align 4, !dbg !8255
  %55 = load i32, i32* %rot_elem, align 4, !dbg !8256
  %inc = add nsw i32 %55, 1, !dbg !8256
  store i32 %inc, i32* %rot_elem, align 4, !dbg !8256
  br label %if.end58, !dbg !8257

if.else:                                          ; preds = %if.end20
  %56 = load float, float* %edgecos, align 4, !dbg !8258
  %call53 = call float @min_ff(float 1.000000e+00, float %56), !dbg !8260
  %call54 = call float @max_ff(float -1.000000e+00, float %call53), !dbg !8261
  %call55 = call float @acosf(float %call54) #5, !dbg !8262
  %57 = load float, float* %rotation_neg, align 4, !dbg !8263
  %add56 = fadd float %57, %call55, !dbg !8263
  store float %add56, float* %rotation_neg, align 4, !dbg !8263
  %58 = load i32, i32* %rot_elem_neg, align 4, !dbg !8264
  %inc57 = add nsw i32 %58, 1, !dbg !8264
  store i32 %inc57, i32* %rot_elem_neg, align 4, !dbg !8264
  br label %if.end58

if.end58:                                         ; preds = %if.else, %if.then49
  br label %if.end59, !dbg !8265

if.end59:                                         ; preds = %if.end58, %land.lhs.true6, %for.body
  br label %for.inc, !dbg !8266

for.inc:                                          ; preds = %if.end59, %if.then19
  %59 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !8267
  %next = getelementptr inbounds %struct.UvElement, %struct.UvElement* %59, i32 0, i32 0, !dbg !8268
  %60 = load %struct.UvElement*, %struct.UvElement** %next, align 8, !dbg !8268
  store %struct.UvElement* %60, %struct.UvElement** %element_iter, align 8, !dbg !8269
  br label %for.cond, !dbg !8270, !llvm.loop !8271

for.end:                                          ; preds = %for.cond
  %61 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8273
  %midpoints60 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %61, i32 0, i32 4, !dbg !8275
  %62 = load i8, i8* %midpoints60, align 1, !dbg !8275
  %tobool61 = icmp ne i8 %62, 0, !dbg !8273
  br i1 %tobool61, label %if.then62, label %if.end64, !dbg !8276

if.then62:                                        ; preds = %for.end
  %63 = load float, float* %rotation, align 4, !dbg !8277
  %div = fdiv float %63, 2.000000e+00, !dbg !8277
  store float %div, float* %rotation, align 4, !dbg !8277
  %64 = load float, float* %rotation_neg, align 4, !dbg !8279
  %div63 = fdiv float %64, 2.000000e+00, !dbg !8279
  store float %div63, float* %rotation_neg, align 4, !dbg !8279
  br label %if.end64, !dbg !8280

if.end64:                                         ; preds = %if.then62, %for.end
  %65 = load i32, i32* %rot_elem, align 4, !dbg !8281
  %66 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8282
  %67 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !8283
  %island65 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %67, i32 0, i32 5, !dbg !8284
  %68 = load i16, i16* %island65, align 4, !dbg !8284
  %idxprom66 = zext i16 %68 to i64, !dbg !8282
  %arrayidx67 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %66, i64 %idxprom66, !dbg !8282
  %num_rot_elements = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx67, i32 0, i32 5, !dbg !8285
  %69 = load i32, i32* %num_rot_elements, align 4, !dbg !8286
  %add68 = add nsw i32 %69, %65, !dbg !8286
  store i32 %add68, i32* %num_rot_elements, align 4, !dbg !8286
  %70 = load float, float* %rotation, align 4, !dbg !8287
  %71 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8288
  %72 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !8289
  %island69 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %72, i32 0, i32 5, !dbg !8290
  %73 = load i16, i16* %island69, align 4, !dbg !8290
  %idxprom70 = zext i16 %73 to i64, !dbg !8288
  %arrayidx71 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %71, i64 %idxprom70, !dbg !8288
  %rotation72 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx71, i32 0, i32 0, !dbg !8291
  %74 = load float, float* %rotation72, align 4, !dbg !8292
  %add73 = fadd float %74, %70, !dbg !8292
  store float %add73, float* %rotation72, align 4, !dbg !8292
  %75 = load i32, i32* %rot_elem_neg, align 4, !dbg !8293
  %76 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8294
  %77 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !8295
  %island74 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %77, i32 0, i32 5, !dbg !8296
  %78 = load i16, i16* %island74, align 4, !dbg !8296
  %idxprom75 = zext i16 %78 to i64, !dbg !8294
  %arrayidx76 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %76, i64 %idxprom75, !dbg !8294
  %num_rot_elements_neg = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx76, i32 0, i32 6, !dbg !8297
  %79 = load i32, i32* %num_rot_elements_neg, align 4, !dbg !8298
  %add77 = add nsw i32 %79, %75, !dbg !8298
  store i32 %add77, i32* %num_rot_elements_neg, align 4, !dbg !8298
  %80 = load float, float* %rotation_neg, align 4, !dbg !8299
  %81 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8300
  %82 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !8301
  %island78 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %82, i32 0, i32 5, !dbg !8302
  %83 = load i16, i16* %island78, align 4, !dbg !8302
  %idxprom79 = zext i16 %83 to i64, !dbg !8300
  %arrayidx80 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %81, i64 %idxprom79, !dbg !8300
  %rotation_neg81 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx80, i32 0, i32 1, !dbg !8303
  %84 = load float, float* %rotation_neg81, align 4, !dbg !8304
  %add82 = fadd float %84, %80, !dbg !8304
  store float %add82, float* %rotation_neg81, align 4, !dbg !8304
  br label %return, !dbg !8305

return:                                           ; preds = %if.end64, %if.then
  ret void, !dbg !8305
}

; Function Attrs: noinline nounwind uwtable
define internal void @stitch_propagate_uv_final_position(%struct.Scene* %scene, %struct.UvElement* %element, i32 %index, %struct.PreviewPosition* %preview_position, %struct.UVVertAverage* %final_position, %struct.StitchState* %state, i8 zeroext %final) #0 !dbg !8306 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %element.addr = alloca %struct.UvElement*, align 8
  %index.addr = alloca i32, align 4
  %preview_position.addr = alloca %struct.PreviewPosition*, align 8
  %final_position.addr = alloca %struct.UVVertAverage*, align 8
  %state.addr = alloca %struct.StitchState*, align 8
  %final.addr = alloca i8, align 1
  %bm = alloca %struct.BMesh*, align 8
  %preview = alloca %struct.StitchPreviewer*, align 8
  %cd_loop_uv_offset = alloca i32, align 4
  %element_iter = alloca %struct.UvElement*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %face_preview_pos = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !8310, metadata !DIExpression()), !dbg !8311
  store %struct.UvElement* %element, %struct.UvElement** %element.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element.addr, metadata !8312, metadata !DIExpression()), !dbg !8313
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8314, metadata !DIExpression()), !dbg !8315
  store %struct.PreviewPosition* %preview_position, %struct.PreviewPosition** %preview_position.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PreviewPosition** %preview_position.addr, metadata !8316, metadata !DIExpression()), !dbg !8317
  store %struct.UVVertAverage* %final_position, %struct.UVVertAverage** %final_position.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UVVertAverage** %final_position.addr, metadata !8318, metadata !DIExpression()), !dbg !8319
  store %struct.StitchState* %state, %struct.StitchState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state.addr, metadata !8320, metadata !DIExpression()), !dbg !8321
  store i8 %final, i8* %final.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %final.addr, metadata !8322, metadata !DIExpression()), !dbg !8323
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !8324, metadata !DIExpression()), !dbg !8325
  %0 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8326
  %em = getelementptr inbounds %struct.StitchState, %struct.StitchState* %0, i32 0, i32 5, !dbg !8327
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8327
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %1, i32 0, i32 0, !dbg !8328
  %2 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !8328
  store %struct.BMesh* %2, %struct.BMesh** %bm, align 8, !dbg !8325
  call void @llvm.dbg.declare(metadata %struct.StitchPreviewer** %preview, metadata !8329, metadata !DIExpression()), !dbg !8330
  %3 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8331
  %stitch_preview = getelementptr inbounds %struct.StitchState, %struct.StitchState* %3, i32 0, i32 22, !dbg !8332
  %4 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !8332
  store %struct.StitchPreviewer* %4, %struct.StitchPreviewer** %preview, align 8, !dbg !8330
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !8333, metadata !DIExpression()), !dbg !8334
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8335
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 26, !dbg !8336
  %call = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !8337
  store i32 %call, i32* %cd_loop_uv_offset, align 4, !dbg !8334
  %6 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !8338
  %flag = getelementptr inbounds %struct.UvElement, %struct.UvElement* %6, i32 0, i32 4, !dbg !8340
  %7 = load i8, i8* %flag, align 1, !dbg !8340
  %conv = zext i8 %7 to i32, !dbg !8338
  %and = and i32 %conv, 2, !dbg !8341
  %tobool = icmp ne i32 %and, 0, !dbg !8341
  br i1 %tobool, label %if.then, label %if.end41, !dbg !8342

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element_iter, metadata !8343, metadata !DIExpression()), !dbg !8345
  %8 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !8346
  store %struct.UvElement* %8, %struct.UvElement** %element_iter, align 8, !dbg !8345
  br label %do.body, !dbg !8347

do.body:                                          ; preds = %land.end, %if.then
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !8348, metadata !DIExpression()), !dbg !8350
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !8351, metadata !DIExpression()), !dbg !8352
  %9 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !8353
  %l2 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %9, i32 0, i32 1, !dbg !8354
  %10 = load %struct.BMLoop*, %struct.BMLoop** %l2, align 8, !dbg !8354
  store %struct.BMLoop* %10, %struct.BMLoop** %l, align 8, !dbg !8355
  %11 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8356
  %ldata3 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %11, i32 0, i32 26, !dbg !8357
  %12 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8358
  %head = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %12, i32 0, i32 0, !dbg !8359
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !8360
  %13 = load i8*, i8** %data, align 8, !dbg !8360
  %call4 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata3, i8* %13, i32 16), !dbg !8361
  %14 = bitcast i8* %call4 to %struct.MLoopUV*, !dbg !8361
  store %struct.MLoopUV* %14, %struct.MLoopUV** %luv, align 8, !dbg !8362
  %15 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !8363
  %flag5 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %15, i32 0, i32 4, !dbg !8364
  %16 = load i8, i8* %flag5, align 1, !dbg !8365
  %conv6 = zext i8 %16 to i32, !dbg !8365
  %or = or i32 %conv6, 4, !dbg !8365
  %conv7 = trunc i32 %or to i8, !dbg !8365
  store i8 %conv7, i8* %flag5, align 1, !dbg !8365
  %17 = load i8, i8* %final.addr, align 1, !dbg !8366
  %tobool8 = icmp ne i8 %17, 0, !dbg !8366
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !8368

if.then9:                                         ; preds = %do.body
  %18 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !8369
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %18, i32 0, i32 0, !dbg !8371
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !8369
  %19 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position.addr, align 8, !dbg !8372
  %20 = load i32, i32* %index.addr, align 4, !dbg !8373
  %idxprom = sext i32 %20 to i64, !dbg !8372
  %arrayidx = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %19, i64 %idxprom, !dbg !8372
  %uv10 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx, i32 0, i32 0, !dbg !8374
  %arraydecay11 = getelementptr inbounds [2 x float], [2 x float]* %uv10, i64 0, i64 0, !dbg !8372
  call void @copy_v2_v2(float* %arraydecay, float* %arraydecay11), !dbg !8375
  %21 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8376
  %em12 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %21, i32 0, i32 5, !dbg !8377
  %22 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em12, align 8, !dbg !8377
  %23 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8378
  %24 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8379
  %25 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !8380
  call void @uvedit_uv_select_enable(%struct.BMEditMesh* %22, %struct.Scene* %23, %struct.BMLoop* %24, i8 zeroext 0, i32 %25), !dbg !8381
  br label %if.end27, !dbg !8382

if.else:                                          ; preds = %do.body
  call void @llvm.dbg.declare(metadata i32* %face_preview_pos, metadata !8383, metadata !DIExpression()), !dbg !8385
  %26 = load %struct.PreviewPosition*, %struct.PreviewPosition** %preview_position.addr, align 8, !dbg !8386
  %27 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !8387
  %l13 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %27, i32 0, i32 1, !dbg !8387
  %28 = load %struct.BMLoop*, %struct.BMLoop** %l13, align 8, !dbg !8387
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %28, i32 0, i32 3, !dbg !8387
  %29 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !8387
  %head14 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %29, i32 0, i32 0, !dbg !8387
  %call15 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head14), !dbg !8387
  %idxprom16 = sext i32 %call15 to i64, !dbg !8386
  %arrayidx17 = getelementptr inbounds %struct.PreviewPosition, %struct.PreviewPosition* %26, i64 %idxprom16, !dbg !8386
  %data_position = getelementptr inbounds %struct.PreviewPosition, %struct.PreviewPosition* %arrayidx17, i32 0, i32 0, !dbg !8388
  %30 = load i32, i32* %data_position, align 4, !dbg !8388
  store i32 %30, i32* %face_preview_pos, align 4, !dbg !8385
  %31 = load i32, i32* %face_preview_pos, align 4, !dbg !8389
  %cmp = icmp ne i32 %31, -1, !dbg !8391
  br i1 %cmp, label %if.then19, label %if.end, !dbg !8392

if.then19:                                        ; preds = %if.else
  %32 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !8393
  %preview_polys = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %32, i32 0, i32 0, !dbg !8395
  %33 = load float*, float** %preview_polys, align 8, !dbg !8395
  %34 = load i32, i32* %face_preview_pos, align 4, !dbg !8396
  %idx.ext = sext i32 %34 to i64, !dbg !8397
  %add.ptr = getelementptr inbounds float, float* %33, i64 %idx.ext, !dbg !8397
  %35 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !8398
  %tfindex = getelementptr inbounds %struct.UvElement, %struct.UvElement* %35, i32 0, i32 2, !dbg !8399
  %36 = load i16, i16* %tfindex, align 8, !dbg !8399
  %conv20 = zext i16 %36 to i32, !dbg !8398
  %mul = mul nsw i32 2, %conv20, !dbg !8400
  %idx.ext21 = sext i32 %mul to i64, !dbg !8401
  %add.ptr22 = getelementptr inbounds float, float* %add.ptr, i64 %idx.ext21, !dbg !8401
  %37 = load %struct.UVVertAverage*, %struct.UVVertAverage** %final_position.addr, align 8, !dbg !8402
  %38 = load i32, i32* %index.addr, align 4, !dbg !8403
  %idxprom23 = sext i32 %38 to i64, !dbg !8402
  %arrayidx24 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %37, i64 %idxprom23, !dbg !8402
  %uv25 = getelementptr inbounds %struct.UVVertAverage, %struct.UVVertAverage* %arrayidx24, i32 0, i32 0, !dbg !8404
  %arraydecay26 = getelementptr inbounds [2 x float], [2 x float]* %uv25, i64 0, i64 0, !dbg !8402
  call void @copy_v2_v2(float* %add.ptr22, float* %arraydecay26), !dbg !8405
  br label %if.end, !dbg !8406

if.end:                                           ; preds = %if.then19, %if.else
  br label %if.end27

if.end27:                                         ; preds = %if.end, %if.then9
  %39 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8407
  %snap_islands = getelementptr inbounds %struct.StitchState, %struct.StitchState* %39, i32 0, i32 3, !dbg !8409
  %40 = load i8, i8* %snap_islands, align 4, !dbg !8409
  %tobool28 = icmp ne i8 %40, 0, !dbg !8407
  br i1 %tobool28, label %lor.lhs.false, label %if.then33, !dbg !8410

lor.lhs.false:                                    ; preds = %if.end27
  %41 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8411
  %midpoints = getelementptr inbounds %struct.StitchState, %struct.StitchState* %41, i32 0, i32 4, !dbg !8412
  %42 = load i8, i8* %midpoints, align 1, !dbg !8412
  %tobool29 = icmp ne i8 %42, 0, !dbg !8411
  br i1 %tobool29, label %if.end38, label %land.lhs.true, !dbg !8413

land.lhs.true:                                    ; preds = %lor.lhs.false
  %43 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !8414
  %island = getelementptr inbounds %struct.UvElement, %struct.UvElement* %43, i32 0, i32 5, !dbg !8415
  %44 = load i16, i16* %island, align 4, !dbg !8415
  %conv30 = zext i16 %44 to i32, !dbg !8414
  %45 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8416
  %static_island = getelementptr inbounds %struct.StitchState, %struct.StitchState* %45, i32 0, i32 18, !dbg !8417
  %46 = load i32, i32* %static_island, align 4, !dbg !8417
  %cmp31 = icmp eq i32 %conv30, %46, !dbg !8418
  br i1 %cmp31, label %if.then33, label %if.end38, !dbg !8419

if.then33:                                        ; preds = %land.lhs.true, %if.end27
  %47 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !8420
  %flag34 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %47, i32 0, i32 4, !dbg !8422
  %48 = load i8, i8* %flag34, align 1, !dbg !8423
  %conv35 = zext i8 %48 to i32, !dbg !8423
  %and36 = and i32 %conv35, 1, !dbg !8423
  %conv37 = trunc i32 %and36 to i8, !dbg !8423
  store i8 %conv37, i8* %flag34, align 1, !dbg !8423
  br label %if.end38, !dbg !8424

if.end38:                                         ; preds = %if.then33, %land.lhs.true, %lor.lhs.false
  %49 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !8425
  %next = getelementptr inbounds %struct.UvElement, %struct.UvElement* %49, i32 0, i32 0, !dbg !8426
  %50 = load %struct.UvElement*, %struct.UvElement** %next, align 8, !dbg !8426
  store %struct.UvElement* %50, %struct.UvElement** %element_iter, align 8, !dbg !8427
  br label %do.cond, !dbg !8428

do.cond:                                          ; preds = %if.end38
  %51 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !8429
  %tobool39 = icmp ne %struct.UvElement* %51, null, !dbg !8429
  br i1 %tobool39, label %land.rhs, label %land.end, !dbg !8430

land.rhs:                                         ; preds = %do.cond
  %52 = load %struct.UvElement*, %struct.UvElement** %element_iter, align 8, !dbg !8431
  %separate = getelementptr inbounds %struct.UvElement, %struct.UvElement* %52, i32 0, i32 3, !dbg !8432
  %53 = load i8, i8* %separate, align 2, !dbg !8432
  %tobool40 = icmp ne i8 %53, 0, !dbg !8433
  %lnot = xor i1 %tobool40, true, !dbg !8433
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %54 = phi i1 [ false, %do.cond ], [ %lnot, %land.rhs ], !dbg !8434
  br i1 %54, label %do.body, label %do.end, !dbg !8428, !llvm.loop !8435

do.end:                                           ; preds = %land.end
  br label %if.end41, !dbg !8437

if.end41:                                         ; preds = %do.end, %entry
  ret void, !dbg !8438
}

; Function Attrs: noinline nounwind uwtable
define internal void @stitch_calculate_island_snapping(%struct.StitchState* %state, %struct.PreviewPosition* %preview_position, %struct.StitchPreviewer* %preview, %struct.IslandStitchData* %island_stitch_data, i32 %final) #0 !dbg !8439 {
entry:
  %state.addr = alloca %struct.StitchState*, align 8
  %preview_position.addr = alloca %struct.PreviewPosition*, align 8
  %preview.addr = alloca %struct.StitchPreviewer*, align 8
  %island_stitch_data.addr = alloca %struct.IslandStitchData*, align 8
  %final.addr = alloca i32, align 4
  %bm = alloca %struct.BMesh*, align 8
  %i = alloca i32, align 4
  %element = alloca %struct.UvElement*, align 8
  %numOfIslandUVs = alloca i32, align 4
  %j = alloca i32, align 4
  %totelem = alloca i32, align 4
  %rotation = alloca float, align 4
  %rotation_mat = alloca [2 x [2 x float]], align 16
  %luv = alloca %struct.MLoopUV*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %face_preview_pos = alloca i32, align 4
  store %struct.StitchState* %state, %struct.StitchState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state.addr, metadata !8442, metadata !DIExpression()), !dbg !8443
  store %struct.PreviewPosition* %preview_position, %struct.PreviewPosition** %preview_position.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PreviewPosition** %preview_position.addr, metadata !8444, metadata !DIExpression()), !dbg !8445
  store %struct.StitchPreviewer* %preview, %struct.StitchPreviewer** %preview.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchPreviewer** %preview.addr, metadata !8446, metadata !DIExpression()), !dbg !8447
  store %struct.IslandStitchData* %island_stitch_data, %struct.IslandStitchData** %island_stitch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IslandStitchData** %island_stitch_data.addr, metadata !8448, metadata !DIExpression()), !dbg !8449
  store i32 %final, i32* %final.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %final.addr, metadata !8450, metadata !DIExpression()), !dbg !8451
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !8452, metadata !DIExpression()), !dbg !8453
  %0 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8454
  %em = getelementptr inbounds %struct.StitchState, %struct.StitchState* %0, i32 0, i32 5, !dbg !8455
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8455
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %1, i32 0, i32 0, !dbg !8456
  %2 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !8456
  store %struct.BMesh* %2, %struct.BMesh** %bm, align 8, !dbg !8453
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8457, metadata !DIExpression()), !dbg !8458
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element, metadata !8459, metadata !DIExpression()), !dbg !8460
  store i32 0, i32* %i, align 4, !dbg !8461
  br label %for.cond, !dbg !8463

for.cond:                                         ; preds = %for.inc201, %entry
  %3 = load i32, i32* %i, align 4, !dbg !8464
  %4 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8466
  %element_map = getelementptr inbounds %struct.StitchState, %struct.StitchState* %4, i32 0, i32 7, !dbg !8467
  %5 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map, align 8, !dbg !8467
  %totalIslands = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %5, i32 0, i32 3, !dbg !8468
  %6 = load i32, i32* %totalIslands, align 4, !dbg !8468
  %cmp = icmp slt i32 %3, %6, !dbg !8469
  br i1 %cmp, label %for.body, label %for.end203, !dbg !8470

for.body:                                         ; preds = %for.cond
  %7 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8471
  %8 = load i32, i32* %i, align 4, !dbg !8474
  %idxprom = sext i32 %8 to i64, !dbg !8471
  %arrayidx = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %7, i64 %idxprom, !dbg !8471
  %addedForPreview = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx, i32 0, i32 7, !dbg !8475
  %9 = load i8, i8* %addedForPreview, align 4, !dbg !8475
  %tobool = icmp ne i8 %9, 0, !dbg !8471
  br i1 %tobool, label %if.then, label %if.end200, !dbg !8476

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %numOfIslandUVs, metadata !8477, metadata !DIExpression()), !dbg !8479
  store i32 0, i32* %numOfIslandUVs, align 4, !dbg !8479
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8480, metadata !DIExpression()), !dbg !8481
  call void @llvm.dbg.declare(metadata i32* %totelem, metadata !8482, metadata !DIExpression()), !dbg !8483
  %10 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8484
  %11 = load i32, i32* %i, align 4, !dbg !8485
  %idxprom2 = sext i32 %11 to i64, !dbg !8484
  %arrayidx3 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %10, i64 %idxprom2, !dbg !8484
  %num_rot_elements_neg = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx3, i32 0, i32 6, !dbg !8486
  %12 = load i32, i32* %num_rot_elements_neg, align 4, !dbg !8486
  %13 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8487
  %14 = load i32, i32* %i, align 4, !dbg !8488
  %idxprom4 = sext i32 %14 to i64, !dbg !8487
  %arrayidx5 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %13, i64 %idxprom4, !dbg !8487
  %num_rot_elements = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx5, i32 0, i32 5, !dbg !8489
  %15 = load i32, i32* %num_rot_elements, align 4, !dbg !8489
  %add = add nsw i32 %12, %15, !dbg !8490
  store i32 %add, i32* %totelem, align 4, !dbg !8483
  call void @llvm.dbg.declare(metadata float* %rotation, metadata !8491, metadata !DIExpression()), !dbg !8492
  call void @llvm.dbg.declare(metadata [2 x [2 x float]]* %rotation_mat, metadata !8493, metadata !DIExpression()), !dbg !8496
  %16 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8497
  %17 = load i32, i32* %i, align 4, !dbg !8499
  %idxprom6 = sext i32 %17 to i64, !dbg !8497
  %arrayidx7 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %16, i64 %idxprom6, !dbg !8497
  %num_rot_elements8 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx7, i32 0, i32 5, !dbg !8500
  %18 = load i32, i32* %num_rot_elements8, align 4, !dbg !8500
  %cmp9 = icmp sgt i32 %18, 1, !dbg !8501
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !8502

if.then10:                                        ; preds = %if.then
  %19 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8503
  %20 = load i32, i32* %i, align 4, !dbg !8504
  %idxprom11 = sext i32 %20 to i64, !dbg !8503
  %arrayidx12 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %19, i64 %idxprom11, !dbg !8503
  %num_rot_elements13 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx12, i32 0, i32 5, !dbg !8505
  %21 = load i32, i32* %num_rot_elements13, align 4, !dbg !8505
  %conv = sitofp i32 %21 to float, !dbg !8503
  %22 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8506
  %23 = load i32, i32* %i, align 4, !dbg !8507
  %idxprom14 = sext i32 %23 to i64, !dbg !8506
  %arrayidx15 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %22, i64 %idxprom14, !dbg !8506
  %rotation16 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx15, i32 0, i32 0, !dbg !8508
  %24 = load float, float* %rotation16, align 4, !dbg !8509
  %div = fdiv float %24, %conv, !dbg !8509
  store float %div, float* %rotation16, align 4, !dbg !8509
  br label %if.end, !dbg !8506

if.end:                                           ; preds = %if.then10, %if.then
  %25 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8510
  %26 = load i32, i32* %i, align 4, !dbg !8512
  %idxprom17 = sext i32 %26 to i64, !dbg !8510
  %arrayidx18 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %25, i64 %idxprom17, !dbg !8510
  %num_rot_elements_neg19 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx18, i32 0, i32 6, !dbg !8513
  %27 = load i32, i32* %num_rot_elements_neg19, align 4, !dbg !8513
  %cmp20 = icmp sgt i32 %27, 1, !dbg !8514
  br i1 %cmp20, label %if.then22, label %if.end30, !dbg !8515

if.then22:                                        ; preds = %if.end
  %28 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8516
  %29 = load i32, i32* %i, align 4, !dbg !8517
  %idxprom23 = sext i32 %29 to i64, !dbg !8516
  %arrayidx24 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %28, i64 %idxprom23, !dbg !8516
  %num_rot_elements_neg25 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx24, i32 0, i32 6, !dbg !8518
  %30 = load i32, i32* %num_rot_elements_neg25, align 4, !dbg !8518
  %conv26 = sitofp i32 %30 to float, !dbg !8516
  %31 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8519
  %32 = load i32, i32* %i, align 4, !dbg !8520
  %idxprom27 = sext i32 %32 to i64, !dbg !8519
  %arrayidx28 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %31, i64 %idxprom27, !dbg !8519
  %rotation_neg = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx28, i32 0, i32 1, !dbg !8521
  %33 = load float, float* %rotation_neg, align 4, !dbg !8522
  %div29 = fdiv float %33, %conv26, !dbg !8522
  store float %div29, float* %rotation_neg, align 4, !dbg !8522
  br label %if.end30, !dbg !8519

if.end30:                                         ; preds = %if.then22, %if.end
  %34 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8523
  %35 = load i32, i32* %i, align 4, !dbg !8525
  %idxprom31 = sext i32 %35 to i64, !dbg !8523
  %arrayidx32 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %34, i64 %idxprom31, !dbg !8523
  %numOfElements = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx32, i32 0, i32 4, !dbg !8526
  %36 = load i32, i32* %numOfElements, align 4, !dbg !8526
  %cmp33 = icmp sgt i32 %36, 1, !dbg !8527
  br i1 %cmp33, label %if.then35, label %if.end70, !dbg !8528

if.then35:                                        ; preds = %if.end30
  %37 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8529
  %38 = load i32, i32* %i, align 4, !dbg !8531
  %idxprom36 = sext i32 %38 to i64, !dbg !8529
  %arrayidx37 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %37, i64 %idxprom36, !dbg !8529
  %numOfElements38 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx37, i32 0, i32 4, !dbg !8532
  %39 = load i32, i32* %numOfElements38, align 4, !dbg !8532
  %conv39 = sitofp i32 %39 to float, !dbg !8529
  %40 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8533
  %41 = load i32, i32* %i, align 4, !dbg !8534
  %idxprom40 = sext i32 %41 to i64, !dbg !8533
  %arrayidx41 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %40, i64 %idxprom40, !dbg !8533
  %medianPoint = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx41, i32 0, i32 3, !dbg !8535
  %arrayidx42 = getelementptr inbounds [2 x float], [2 x float]* %medianPoint, i64 0, i64 0, !dbg !8533
  %42 = load float, float* %arrayidx42, align 4, !dbg !8536
  %div43 = fdiv float %42, %conv39, !dbg !8536
  store float %div43, float* %arrayidx42, align 4, !dbg !8536
  %43 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8537
  %44 = load i32, i32* %i, align 4, !dbg !8538
  %idxprom44 = sext i32 %44 to i64, !dbg !8537
  %arrayidx45 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %43, i64 %idxprom44, !dbg !8537
  %numOfElements46 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx45, i32 0, i32 4, !dbg !8539
  %45 = load i32, i32* %numOfElements46, align 4, !dbg !8539
  %conv47 = sitofp i32 %45 to float, !dbg !8537
  %46 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8540
  %47 = load i32, i32* %i, align 4, !dbg !8541
  %idxprom48 = sext i32 %47 to i64, !dbg !8540
  %arrayidx49 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %46, i64 %idxprom48, !dbg !8540
  %medianPoint50 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx49, i32 0, i32 3, !dbg !8542
  %arrayidx51 = getelementptr inbounds [2 x float], [2 x float]* %medianPoint50, i64 0, i64 1, !dbg !8540
  %48 = load float, float* %arrayidx51, align 4, !dbg !8543
  %div52 = fdiv float %48, %conv47, !dbg !8543
  store float %div52, float* %arrayidx51, align 4, !dbg !8543
  %49 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8544
  %50 = load i32, i32* %i, align 4, !dbg !8545
  %idxprom53 = sext i32 %50 to i64, !dbg !8544
  %arrayidx54 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %49, i64 %idxprom53, !dbg !8544
  %numOfElements55 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx54, i32 0, i32 4, !dbg !8546
  %51 = load i32, i32* %numOfElements55, align 4, !dbg !8546
  %conv56 = sitofp i32 %51 to float, !dbg !8544
  %52 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8547
  %53 = load i32, i32* %i, align 4, !dbg !8548
  %idxprom57 = sext i32 %53 to i64, !dbg !8547
  %arrayidx58 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %52, i64 %idxprom57, !dbg !8547
  %translation = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx58, i32 0, i32 2, !dbg !8549
  %arrayidx59 = getelementptr inbounds [2 x float], [2 x float]* %translation, i64 0, i64 0, !dbg !8547
  %54 = load float, float* %arrayidx59, align 4, !dbg !8550
  %div60 = fdiv float %54, %conv56, !dbg !8550
  store float %div60, float* %arrayidx59, align 4, !dbg !8550
  %55 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8551
  %56 = load i32, i32* %i, align 4, !dbg !8552
  %idxprom61 = sext i32 %56 to i64, !dbg !8551
  %arrayidx62 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %55, i64 %idxprom61, !dbg !8551
  %numOfElements63 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx62, i32 0, i32 4, !dbg !8553
  %57 = load i32, i32* %numOfElements63, align 4, !dbg !8553
  %conv64 = sitofp i32 %57 to float, !dbg !8551
  %58 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8554
  %59 = load i32, i32* %i, align 4, !dbg !8555
  %idxprom65 = sext i32 %59 to i64, !dbg !8554
  %arrayidx66 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %58, i64 %idxprom65, !dbg !8554
  %translation67 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx66, i32 0, i32 2, !dbg !8556
  %arrayidx68 = getelementptr inbounds [2 x float], [2 x float]* %translation67, i64 0, i64 1, !dbg !8554
  %60 = load float, float* %arrayidx68, align 4, !dbg !8557
  %div69 = fdiv float %60, %conv64, !dbg !8557
  store float %div69, float* %arrayidx68, align 4, !dbg !8557
  br label %if.end70, !dbg !8558

if.end70:                                         ; preds = %if.then35, %if.end30
  %61 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8559
  %aspect = getelementptr inbounds %struct.StitchState, %struct.StitchState* %61, i32 0, i32 0, !dbg !8560
  %62 = load float, float* %aspect, align 8, !dbg !8560
  %63 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8561
  %64 = load i32, i32* %i, align 4, !dbg !8562
  %idxprom71 = sext i32 %64 to i64, !dbg !8561
  %arrayidx72 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %63, i64 %idxprom71, !dbg !8561
  %medianPoint73 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx72, i32 0, i32 3, !dbg !8563
  %arrayidx74 = getelementptr inbounds [2 x float], [2 x float]* %medianPoint73, i64 0, i64 1, !dbg !8561
  %65 = load float, float* %arrayidx74, align 4, !dbg !8564
  %div75 = fdiv float %65, %62, !dbg !8564
  store float %div75, float* %arrayidx74, align 4, !dbg !8564
  %66 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8565
  %67 = load i32, i32* %i, align 4, !dbg !8567
  %idxprom76 = sext i32 %67 to i64, !dbg !8565
  %arrayidx77 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %66, i64 %idxprom76, !dbg !8565
  %rotation78 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx77, i32 0, i32 0, !dbg !8568
  %68 = load float, float* %rotation78, align 4, !dbg !8568
  %69 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8569
  %70 = load i32, i32* %i, align 4, !dbg !8570
  %idxprom79 = sext i32 %70 to i64, !dbg !8569
  %arrayidx80 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %69, i64 %idxprom79, !dbg !8569
  %rotation_neg81 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx80, i32 0, i32 1, !dbg !8571
  %71 = load float, float* %rotation_neg81, align 4, !dbg !8571
  %add82 = fadd float %68, %71, !dbg !8572
  %cmp83 = fcmp olt float %add82, 0x3FF921FB60000000, !dbg !8573
  br i1 %cmp83, label %if.then96, label %lor.lhs.false, !dbg !8574

lor.lhs.false:                                    ; preds = %if.end70
  %72 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8575
  %73 = load i32, i32* %i, align 4, !dbg !8576
  %idxprom85 = sext i32 %73 to i64, !dbg !8575
  %arrayidx86 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %72, i64 %idxprom85, !dbg !8575
  %num_rot_elements87 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx86, i32 0, i32 5, !dbg !8577
  %74 = load i32, i32* %num_rot_elements87, align 4, !dbg !8577
  %cmp88 = icmp eq i32 %74, 0, !dbg !8578
  br i1 %cmp88, label %if.then96, label %lor.lhs.false90, !dbg !8579

lor.lhs.false90:                                  ; preds = %lor.lhs.false
  %75 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8580
  %76 = load i32, i32* %i, align 4, !dbg !8581
  %idxprom91 = sext i32 %76 to i64, !dbg !8580
  %arrayidx92 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %75, i64 %idxprom91, !dbg !8580
  %num_rot_elements_neg93 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx92, i32 0, i32 6, !dbg !8582
  %77 = load i32, i32* %num_rot_elements_neg93, align 4, !dbg !8582
  %cmp94 = icmp eq i32 %77, 0, !dbg !8583
  br i1 %cmp94, label %if.then96, label %if.else, !dbg !8584

if.then96:                                        ; preds = %lor.lhs.false90, %lor.lhs.false, %if.end70
  %78 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8585
  %79 = load i32, i32* %i, align 4, !dbg !8587
  %idxprom97 = sext i32 %79 to i64, !dbg !8585
  %arrayidx98 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %78, i64 %idxprom97, !dbg !8585
  %rotation99 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx98, i32 0, i32 0, !dbg !8588
  %80 = load float, float* %rotation99, align 4, !dbg !8588
  %81 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8589
  %82 = load i32, i32* %i, align 4, !dbg !8590
  %idxprom100 = sext i32 %82 to i64, !dbg !8589
  %arrayidx101 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %81, i64 %idxprom100, !dbg !8589
  %num_rot_elements102 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx101, i32 0, i32 5, !dbg !8591
  %83 = load i32, i32* %num_rot_elements102, align 4, !dbg !8591
  %conv103 = sitofp i32 %83 to float, !dbg !8589
  %mul = fmul float %80, %conv103, !dbg !8592
  %84 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8593
  %85 = load i32, i32* %i, align 4, !dbg !8594
  %idxprom104 = sext i32 %85 to i64, !dbg !8593
  %arrayidx105 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %84, i64 %idxprom104, !dbg !8593
  %rotation_neg106 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx105, i32 0, i32 1, !dbg !8595
  %86 = load float, float* %rotation_neg106, align 4, !dbg !8595
  %87 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8596
  %88 = load i32, i32* %i, align 4, !dbg !8597
  %idxprom107 = sext i32 %88 to i64, !dbg !8596
  %arrayidx108 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %87, i64 %idxprom107, !dbg !8596
  %num_rot_elements_neg109 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx108, i32 0, i32 6, !dbg !8598
  %89 = load i32, i32* %num_rot_elements_neg109, align 4, !dbg !8598
  %conv110 = sitofp i32 %89 to float, !dbg !8596
  %mul111 = fmul float %86, %conv110, !dbg !8599
  %sub = fsub float %mul, %mul111, !dbg !8600
  %90 = load i32, i32* %totelem, align 4, !dbg !8601
  %conv112 = sitofp i32 %90 to float, !dbg !8601
  %div113 = fdiv float %sub, %conv112, !dbg !8602
  store float %div113, float* %rotation, align 4, !dbg !8603
  br label %if.end134, !dbg !8604

if.else:                                          ; preds = %lor.lhs.false90
  %91 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8605
  %92 = load i32, i32* %i, align 4, !dbg !8607
  %idxprom114 = sext i32 %92 to i64, !dbg !8605
  %arrayidx115 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %91, i64 %idxprom114, !dbg !8605
  %rotation116 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx115, i32 0, i32 0, !dbg !8608
  %93 = load float, float* %rotation116, align 4, !dbg !8608
  %94 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8609
  %95 = load i32, i32* %i, align 4, !dbg !8610
  %idxprom117 = sext i32 %95 to i64, !dbg !8609
  %arrayidx118 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %94, i64 %idxprom117, !dbg !8609
  %num_rot_elements119 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx118, i32 0, i32 5, !dbg !8611
  %96 = load i32, i32* %num_rot_elements119, align 4, !dbg !8611
  %conv120 = sitofp i32 %96 to float, !dbg !8609
  %mul121 = fmul float %93, %conv120, !dbg !8612
  %97 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8613
  %98 = load i32, i32* %i, align 4, !dbg !8614
  %idxprom122 = sext i32 %98 to i64, !dbg !8613
  %arrayidx123 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %97, i64 %idxprom122, !dbg !8613
  %rotation_neg124 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx123, i32 0, i32 1, !dbg !8615
  %99 = load float, float* %rotation_neg124, align 4, !dbg !8615
  %sub125 = fsub float 0x401921FB60000000, %99, !dbg !8616
  %100 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8617
  %101 = load i32, i32* %i, align 4, !dbg !8618
  %idxprom126 = sext i32 %101 to i64, !dbg !8617
  %arrayidx127 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %100, i64 %idxprom126, !dbg !8617
  %num_rot_elements_neg128 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx127, i32 0, i32 6, !dbg !8619
  %102 = load i32, i32* %num_rot_elements_neg128, align 4, !dbg !8619
  %conv129 = sitofp i32 %102 to float, !dbg !8617
  %mul130 = fmul float %sub125, %conv129, !dbg !8620
  %add131 = fadd float %mul121, %mul130, !dbg !8621
  %103 = load i32, i32* %totelem, align 4, !dbg !8622
  %conv132 = sitofp i32 %103 to float, !dbg !8622
  %div133 = fdiv float %add131, %conv132, !dbg !8623
  store float %div133, float* %rotation, align 4, !dbg !8624
  br label %if.end134

if.end134:                                        ; preds = %if.else, %if.then96
  %arraydecay = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %rotation_mat, i64 0, i64 0, !dbg !8625
  %104 = load float, float* %rotation, align 4, !dbg !8626
  call void @rotate_m2([2 x float]* %arraydecay, float %104), !dbg !8627
  %105 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8628
  %element_map135 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %105, i32 0, i32 7, !dbg !8629
  %106 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map135, align 8, !dbg !8629
  %107 = load i32, i32* %i, align 4, !dbg !8630
  %call = call i32 @getNumOfIslandUvs(%struct.UvElementMap* %106, i32 %107), !dbg !8631
  store i32 %call, i32* %numOfIslandUVs, align 4, !dbg !8632
  %108 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8633
  %element_map136 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %108, i32 0, i32 7, !dbg !8634
  %109 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map136, align 8, !dbg !8634
  %buf = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %109, i32 0, i32 1, !dbg !8635
  %110 = load %struct.UvElement*, %struct.UvElement** %buf, align 8, !dbg !8635
  %111 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8636
  %element_map137 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %111, i32 0, i32 7, !dbg !8637
  %112 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map137, align 8, !dbg !8637
  %islandIndices = getelementptr inbounds %struct.UvElementMap, %struct.UvElementMap* %112, i32 0, i32 4, !dbg !8638
  %113 = load i32*, i32** %islandIndices, align 8, !dbg !8638
  %114 = load i32, i32* %i, align 4, !dbg !8639
  %idxprom138 = sext i32 %114 to i64, !dbg !8636
  %arrayidx139 = getelementptr inbounds i32, i32* %113, i64 %idxprom138, !dbg !8636
  %115 = load i32, i32* %arrayidx139, align 4, !dbg !8636
  %idxprom140 = sext i32 %115 to i64, !dbg !8633
  %arrayidx141 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %110, i64 %idxprom140, !dbg !8633
  store %struct.UvElement* %arrayidx141, %struct.UvElement** %element, align 8, !dbg !8640
  store i32 0, i32* %j, align 4, !dbg !8641
  br label %for.cond142, !dbg !8643

for.cond142:                                      ; preds = %for.inc, %if.end134
  %116 = load i32, i32* %j, align 4, !dbg !8644
  %117 = load i32, i32* %numOfIslandUVs, align 4, !dbg !8646
  %cmp143 = icmp slt i32 %116, %117, !dbg !8647
  br i1 %cmp143, label %for.body145, label %for.end, !dbg !8648

for.body145:                                      ; preds = %for.cond142
  %118 = load %struct.UvElement*, %struct.UvElement** %element, align 8, !dbg !8649
  %flag = getelementptr inbounds %struct.UvElement, %struct.UvElement* %118, i32 0, i32 4, !dbg !8652
  %119 = load i8, i8* %flag, align 1, !dbg !8652
  %conv146 = zext i8 %119 to i32, !dbg !8649
  %and = and i32 %conv146, 4, !dbg !8653
  %tobool147 = icmp ne i32 %and, 0, !dbg !8653
  br i1 %tobool147, label %if.end195, label %if.then148, !dbg !8654

if.then148:                                       ; preds = %for.body145
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !8655, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !8658, metadata !DIExpression()), !dbg !8659
  %120 = load %struct.UvElement*, %struct.UvElement** %element, align 8, !dbg !8660
  %l149 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %120, i32 0, i32 1, !dbg !8661
  %121 = load %struct.BMLoop*, %struct.BMLoop** %l149, align 8, !dbg !8661
  store %struct.BMLoop* %121, %struct.BMLoop** %l, align 8, !dbg !8662
  %122 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8663
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %122, i32 0, i32 26, !dbg !8664
  %123 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8665
  %head = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %123, i32 0, i32 0, !dbg !8666
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !8667
  %124 = load i8*, i8** %data, align 8, !dbg !8667
  %call150 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata, i8* %124, i32 16), !dbg !8668
  %125 = bitcast i8* %call150 to %struct.MLoopUV*, !dbg !8668
  store %struct.MLoopUV* %125, %struct.MLoopUV** %luv, align 8, !dbg !8669
  %126 = load i32, i32* %final.addr, align 4, !dbg !8670
  %tobool151 = icmp ne i32 %126, 0, !dbg !8670
  br i1 %tobool151, label %if.then152, label %if.else166, !dbg !8672

if.then152:                                       ; preds = %if.then148
  %arraydecay153 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %rotation_mat, i64 0, i64 0, !dbg !8673
  %127 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8675
  %128 = load i32, i32* %i, align 4, !dbg !8676
  %idxprom154 = sext i32 %128 to i64, !dbg !8675
  %arrayidx155 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %127, i64 %idxprom154, !dbg !8675
  %medianPoint156 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx155, i32 0, i32 3, !dbg !8677
  %arraydecay157 = getelementptr inbounds [2 x float], [2 x float]* %medianPoint156, i64 0, i64 0, !dbg !8675
  %129 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !8678
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %129, i32 0, i32 0, !dbg !8679
  %arraydecay158 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !8678
  %130 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8680
  %aspect159 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %130, i32 0, i32 0, !dbg !8681
  %131 = load float, float* %aspect159, align 8, !dbg !8681
  call void @stitch_uv_rotate([2 x float]* %arraydecay153, float* %arraydecay157, float* %arraydecay158, float %131), !dbg !8682
  %132 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !8683
  %uv160 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %132, i32 0, i32 0, !dbg !8684
  %arraydecay161 = getelementptr inbounds [2 x float], [2 x float]* %uv160, i64 0, i64 0, !dbg !8683
  %133 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8685
  %134 = load i32, i32* %i, align 4, !dbg !8686
  %idxprom162 = sext i32 %134 to i64, !dbg !8685
  %arrayidx163 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %133, i64 %idxprom162, !dbg !8685
  %translation164 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx163, i32 0, i32 2, !dbg !8687
  %arraydecay165 = getelementptr inbounds [2 x float], [2 x float]* %translation164, i64 0, i64 0, !dbg !8685
  call void @add_v2_v2(float* %arraydecay161, float* %arraydecay165), !dbg !8688
  br label %if.end194, !dbg !8689

if.else166:                                       ; preds = %if.then148
  call void @llvm.dbg.declare(metadata i32* %face_preview_pos, metadata !8690, metadata !DIExpression()), !dbg !8692
  %135 = load %struct.PreviewPosition*, %struct.PreviewPosition** %preview_position.addr, align 8, !dbg !8693
  %136 = load %struct.UvElement*, %struct.UvElement** %element, align 8, !dbg !8694
  %l167 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %136, i32 0, i32 1, !dbg !8694
  %137 = load %struct.BMLoop*, %struct.BMLoop** %l167, align 8, !dbg !8694
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %137, i32 0, i32 3, !dbg !8694
  %138 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !8694
  %head168 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %138, i32 0, i32 0, !dbg !8694
  %call169 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head168), !dbg !8694
  %idxprom170 = sext i32 %call169 to i64, !dbg !8693
  %arrayidx171 = getelementptr inbounds %struct.PreviewPosition, %struct.PreviewPosition* %135, i64 %idxprom170, !dbg !8693
  %data_position = getelementptr inbounds %struct.PreviewPosition, %struct.PreviewPosition* %arrayidx171, i32 0, i32 0, !dbg !8695
  %139 = load i32, i32* %data_position, align 4, !dbg !8695
  store i32 %139, i32* %face_preview_pos, align 4, !dbg !8692
  %arraydecay172 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* %rotation_mat, i64 0, i64 0, !dbg !8696
  %140 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8697
  %141 = load i32, i32* %i, align 4, !dbg !8698
  %idxprom173 = sext i32 %141 to i64, !dbg !8697
  %arrayidx174 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %140, i64 %idxprom173, !dbg !8697
  %medianPoint175 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx174, i32 0, i32 3, !dbg !8699
  %arraydecay176 = getelementptr inbounds [2 x float], [2 x float]* %medianPoint175, i64 0, i64 0, !dbg !8697
  %142 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview.addr, align 8, !dbg !8700
  %preview_polys = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %142, i32 0, i32 0, !dbg !8701
  %143 = load float*, float** %preview_polys, align 8, !dbg !8701
  %144 = load i32, i32* %face_preview_pos, align 4, !dbg !8702
  %idx.ext = sext i32 %144 to i64, !dbg !8703
  %add.ptr = getelementptr inbounds float, float* %143, i64 %idx.ext, !dbg !8703
  %145 = load %struct.UvElement*, %struct.UvElement** %element, align 8, !dbg !8704
  %tfindex = getelementptr inbounds %struct.UvElement, %struct.UvElement* %145, i32 0, i32 2, !dbg !8705
  %146 = load i16, i16* %tfindex, align 8, !dbg !8705
  %conv177 = zext i16 %146 to i32, !dbg !8704
  %mul178 = mul nsw i32 2, %conv177, !dbg !8706
  %idx.ext179 = sext i32 %mul178 to i64, !dbg !8707
  %add.ptr180 = getelementptr inbounds float, float* %add.ptr, i64 %idx.ext179, !dbg !8707
  %147 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8708
  %aspect181 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %147, i32 0, i32 0, !dbg !8709
  %148 = load float, float* %aspect181, align 8, !dbg !8709
  call void @stitch_uv_rotate([2 x float]* %arraydecay172, float* %arraydecay176, float* %add.ptr180, float %148), !dbg !8710
  %149 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview.addr, align 8, !dbg !8711
  %preview_polys182 = getelementptr inbounds %struct.StitchPreviewer, %struct.StitchPreviewer* %149, i32 0, i32 0, !dbg !8712
  %150 = load float*, float** %preview_polys182, align 8, !dbg !8712
  %151 = load i32, i32* %face_preview_pos, align 4, !dbg !8713
  %idx.ext183 = sext i32 %151 to i64, !dbg !8714
  %add.ptr184 = getelementptr inbounds float, float* %150, i64 %idx.ext183, !dbg !8714
  %152 = load %struct.UvElement*, %struct.UvElement** %element, align 8, !dbg !8715
  %tfindex185 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %152, i32 0, i32 2, !dbg !8716
  %153 = load i16, i16* %tfindex185, align 8, !dbg !8716
  %conv186 = zext i16 %153 to i32, !dbg !8715
  %mul187 = mul nsw i32 2, %conv186, !dbg !8717
  %idx.ext188 = sext i32 %mul187 to i64, !dbg !8718
  %add.ptr189 = getelementptr inbounds float, float* %add.ptr184, i64 %idx.ext188, !dbg !8718
  %154 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8719
  %155 = load i32, i32* %i, align 4, !dbg !8720
  %idxprom190 = sext i32 %155 to i64, !dbg !8719
  %arrayidx191 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %154, i64 %idxprom190, !dbg !8719
  %translation192 = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx191, i32 0, i32 2, !dbg !8721
  %arraydecay193 = getelementptr inbounds [2 x float], [2 x float]* %translation192, i64 0, i64 0, !dbg !8719
  call void @add_v2_v2(float* %add.ptr189, float* %arraydecay193), !dbg !8722
  br label %if.end194

if.end194:                                        ; preds = %if.else166, %if.then152
  br label %if.end195, !dbg !8723

if.end195:                                        ; preds = %if.end194, %for.body145
  %156 = load %struct.UvElement*, %struct.UvElement** %element, align 8, !dbg !8724
  %flag196 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %156, i32 0, i32 4, !dbg !8725
  %157 = load i8, i8* %flag196, align 1, !dbg !8726
  %conv197 = zext i8 %157 to i32, !dbg !8726
  %and198 = and i32 %conv197, 1, !dbg !8726
  %conv199 = trunc i32 %and198 to i8, !dbg !8726
  store i8 %conv199, i8* %flag196, align 1, !dbg !8726
  br label %for.inc, !dbg !8727

for.inc:                                          ; preds = %if.end195
  %158 = load i32, i32* %j, align 4, !dbg !8728
  %inc = add nsw i32 %158, 1, !dbg !8728
  store i32 %inc, i32* %j, align 4, !dbg !8728
  %159 = load %struct.UvElement*, %struct.UvElement** %element, align 8, !dbg !8729
  %incdec.ptr = getelementptr inbounds %struct.UvElement, %struct.UvElement* %159, i32 1, !dbg !8729
  store %struct.UvElement* %incdec.ptr, %struct.UvElement** %element, align 8, !dbg !8729
  br label %for.cond142, !dbg !8730, !llvm.loop !8731

for.end:                                          ; preds = %for.cond142
  br label %if.end200, !dbg !8733

if.end200:                                        ; preds = %for.end, %for.body
  br label %for.inc201, !dbg !8734

for.inc201:                                       ; preds = %if.end200
  %160 = load i32, i32* %i, align 4, !dbg !8735
  %inc202 = add nsw i32 %160, 1, !dbg !8735
  store i32 %inc202, i32* %i, align 4, !dbg !8735
  br label %for.cond, !dbg !8736, !llvm.loop !8737

for.end203:                                       ; preds = %for.cond
  ret void, !dbg !8739
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @stitch_check_uvs_stitchable(%struct.UvElement* %element, %struct.UvElement* %element_iter, %struct.StitchState* %state) #0 !dbg !8740 {
entry:
  %retval = alloca i8, align 1
  %element.addr = alloca %struct.UvElement*, align 8
  %element_iter.addr = alloca %struct.UvElement*, align 8
  %state.addr = alloca %struct.StitchState*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %limit = alloca float, align 4
  %luv = alloca %struct.MLoopUV*, align 8
  %luv_iter = alloca %struct.MLoopUV*, align 8
  %l = alloca %struct.BMLoop*, align 8
  store %struct.UvElement* %element, %struct.UvElement** %element.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element.addr, metadata !8741, metadata !DIExpression()), !dbg !8742
  store %struct.UvElement* %element_iter, %struct.UvElement** %element_iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element_iter.addr, metadata !8743, metadata !DIExpression()), !dbg !8744
  store %struct.StitchState* %state, %struct.StitchState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state.addr, metadata !8745, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !8747, metadata !DIExpression()), !dbg !8748
  %0 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8749
  %em = getelementptr inbounds %struct.StitchState, %struct.StitchState* %0, i32 0, i32 5, !dbg !8750
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8750
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %1, i32 0, i32 0, !dbg !8751
  %2 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !8751
  store %struct.BMesh* %2, %struct.BMesh** %bm, align 8, !dbg !8748
  call void @llvm.dbg.declare(metadata float* %limit, metadata !8752, metadata !DIExpression()), !dbg !8753
  %3 = load %struct.UvElement*, %struct.UvElement** %element_iter.addr, align 8, !dbg !8754
  %4 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !8756
  %cmp = icmp eq %struct.UvElement* %3, %4, !dbg !8757
  br i1 %cmp, label %if.then, label %if.end, !dbg !8758

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !8759
  br label %return, !dbg !8759

if.end:                                           ; preds = %entry
  %5 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8761
  %limit_dist = getelementptr inbounds %struct.StitchState, %struct.StitchState* %5, i32 0, i32 2, !dbg !8762
  %6 = load float, float* %limit_dist, align 8, !dbg !8762
  store float %6, float* %limit, align 4, !dbg !8763
  %7 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8764
  %use_limit = getelementptr inbounds %struct.StitchState, %struct.StitchState* %7, i32 0, i32 1, !dbg !8766
  %8 = load i8, i8* %use_limit, align 4, !dbg !8766
  %tobool = icmp ne i8 %8, 0, !dbg !8764
  br i1 %tobool, label %if.then2, label %if.else19, !dbg !8767

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !8768, metadata !DIExpression()), !dbg !8770
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv_iter, metadata !8771, metadata !DIExpression()), !dbg !8772
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !8773, metadata !DIExpression()), !dbg !8774
  %9 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !8775
  %l3 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %9, i32 0, i32 1, !dbg !8776
  %10 = load %struct.BMLoop*, %struct.BMLoop** %l3, align 8, !dbg !8776
  store %struct.BMLoop* %10, %struct.BMLoop** %l, align 8, !dbg !8777
  %11 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8778
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %11, i32 0, i32 26, !dbg !8779
  %12 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8780
  %head = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %12, i32 0, i32 0, !dbg !8781
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !8782
  %13 = load i8*, i8** %data, align 8, !dbg !8782
  %call = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata, i8* %13, i32 16), !dbg !8783
  %14 = bitcast i8* %call to %struct.MLoopUV*, !dbg !8783
  store %struct.MLoopUV* %14, %struct.MLoopUV** %luv, align 8, !dbg !8784
  %15 = load %struct.UvElement*, %struct.UvElement** %element_iter.addr, align 8, !dbg !8785
  %l4 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %15, i32 0, i32 1, !dbg !8786
  %16 = load %struct.BMLoop*, %struct.BMLoop** %l4, align 8, !dbg !8786
  store %struct.BMLoop* %16, %struct.BMLoop** %l, align 8, !dbg !8787
  %17 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8788
  %ldata5 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %17, i32 0, i32 26, !dbg !8789
  %18 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8790
  %head6 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %18, i32 0, i32 0, !dbg !8791
  %data7 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head6, i32 0, i32 0, !dbg !8792
  %19 = load i8*, i8** %data7, align 8, !dbg !8792
  %call8 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata5, i8* %19, i32 16), !dbg !8793
  %20 = bitcast i8* %call8 to %struct.MLoopUV*, !dbg !8793
  store %struct.MLoopUV* %20, %struct.MLoopUV** %luv_iter, align 8, !dbg !8794
  %21 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !8795
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %21, i32 0, i32 0, !dbg !8797
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !8795
  %22 = load float, float* %arrayidx, align 4, !dbg !8795
  %23 = load %struct.MLoopUV*, %struct.MLoopUV** %luv_iter, align 8, !dbg !8798
  %uv9 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %23, i32 0, i32 0, !dbg !8799
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %uv9, i64 0, i64 0, !dbg !8798
  %24 = load float, float* %arrayidx10, align 4, !dbg !8798
  %sub = fsub float %22, %24, !dbg !8800
  %25 = call float @llvm.fabs.f32(float %sub), !dbg !8801
  %26 = load float, float* %limit, align 4, !dbg !8802
  %cmp11 = fcmp olt float %25, %26, !dbg !8803
  br i1 %cmp11, label %land.lhs.true, label %if.else, !dbg !8804

land.lhs.true:                                    ; preds = %if.then2
  %27 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !8805
  %uv12 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %27, i32 0, i32 0, !dbg !8806
  %arrayidx13 = getelementptr inbounds [2 x float], [2 x float]* %uv12, i64 0, i64 1, !dbg !8805
  %28 = load float, float* %arrayidx13, align 4, !dbg !8805
  %29 = load %struct.MLoopUV*, %struct.MLoopUV** %luv_iter, align 8, !dbg !8807
  %uv14 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %29, i32 0, i32 0, !dbg !8808
  %arrayidx15 = getelementptr inbounds [2 x float], [2 x float]* %uv14, i64 0, i64 1, !dbg !8807
  %30 = load float, float* %arrayidx15, align 4, !dbg !8807
  %sub16 = fsub float %28, %30, !dbg !8809
  %31 = call float @llvm.fabs.f32(float %sub16), !dbg !8810
  %32 = load float, float* %limit, align 4, !dbg !8811
  %cmp17 = fcmp olt float %31, %32, !dbg !8812
  br i1 %cmp17, label %if.then18, label %if.else, !dbg !8813

if.then18:                                        ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !8814
  br label %return, !dbg !8814

if.else:                                          ; preds = %land.lhs.true, %if.then2
  store i8 0, i8* %retval, align 1, !dbg !8816
  br label %return, !dbg !8816

if.else19:                                        ; preds = %if.end
  store i8 1, i8* %retval, align 1, !dbg !8818
  br label %return, !dbg !8818

return:                                           ; preds = %if.else19, %if.else, %if.then18, %if.then
  %33 = load i8, i8* %retval, align 1, !dbg !8820
  ret i8 %33, !dbg !8820
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @stitch_check_edges_stitchable(%struct.UvEdge* %edge, %struct.UvEdge* %edge_iter, %struct.StitchState* %state) #0 !dbg !8821 {
entry:
  %retval = alloca i8, align 1
  %edge.addr = alloca %struct.UvEdge*, align 8
  %edge_iter.addr = alloca %struct.UvEdge*, align 8
  %state.addr = alloca %struct.StitchState*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %limit = alloca float, align 4
  %l = alloca %struct.BMLoop*, align 8
  %luv_orig1 = alloca %struct.MLoopUV*, align 8
  %luv_iter1 = alloca %struct.MLoopUV*, align 8
  %luv_orig2 = alloca %struct.MLoopUV*, align 8
  %luv_iter2 = alloca %struct.MLoopUV*, align 8
  store %struct.UvEdge* %edge, %struct.UvEdge** %edge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge.addr, metadata !8822, metadata !DIExpression()), !dbg !8823
  store %struct.UvEdge* %edge_iter, %struct.UvEdge** %edge_iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge_iter.addr, metadata !8824, metadata !DIExpression()), !dbg !8825
  store %struct.StitchState* %state, %struct.StitchState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state.addr, metadata !8826, metadata !DIExpression()), !dbg !8827
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !8828, metadata !DIExpression()), !dbg !8829
  %0 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8830
  %em = getelementptr inbounds %struct.StitchState, %struct.StitchState* %0, i32 0, i32 5, !dbg !8831
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8831
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %1, i32 0, i32 0, !dbg !8832
  %2 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !8832
  store %struct.BMesh* %2, %struct.BMesh** %bm, align 8, !dbg !8829
  call void @llvm.dbg.declare(metadata float* %limit, metadata !8833, metadata !DIExpression()), !dbg !8834
  %3 = load %struct.UvEdge*, %struct.UvEdge** %edge_iter.addr, align 8, !dbg !8835
  %4 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !8837
  %cmp = icmp eq %struct.UvEdge* %3, %4, !dbg !8838
  br i1 %cmp, label %if.then, label %if.end, !dbg !8839

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !8840
  br label %return, !dbg !8840

if.end:                                           ; preds = %entry
  %5 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8842
  %limit_dist = getelementptr inbounds %struct.StitchState, %struct.StitchState* %5, i32 0, i32 2, !dbg !8843
  %6 = load float, float* %limit_dist, align 8, !dbg !8843
  store float %6, float* %limit, align 4, !dbg !8844
  %7 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8845
  %use_limit = getelementptr inbounds %struct.StitchState, %struct.StitchState* %7, i32 0, i32 1, !dbg !8847
  %8 = load i8, i8* %use_limit, align 4, !dbg !8847
  %tobool = icmp ne i8 %8, 0, !dbg !8845
  br i1 %tobool, label %if.then2, label %if.else55, !dbg !8848

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !8849, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv_orig1, metadata !8852, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv_iter1, metadata !8854, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv_orig2, metadata !8856, metadata !DIExpression()), !dbg !8857
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv_iter2, metadata !8858, metadata !DIExpression()), !dbg !8859
  %9 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8860
  %uvs = getelementptr inbounds %struct.StitchState, %struct.StitchState* %9, i32 0, i32 9, !dbg !8861
  %10 = load %struct.UvElement**, %struct.UvElement*** %uvs, align 8, !dbg !8861
  %11 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !8862
  %uv1 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %11, i32 0, i32 0, !dbg !8863
  %12 = load i32, i32* %uv1, align 8, !dbg !8863
  %idxprom = zext i32 %12 to i64, !dbg !8860
  %arrayidx = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %10, i64 %idxprom, !dbg !8860
  %13 = load %struct.UvElement*, %struct.UvElement** %arrayidx, align 8, !dbg !8860
  %l3 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %13, i32 0, i32 1, !dbg !8864
  %14 = load %struct.BMLoop*, %struct.BMLoop** %l3, align 8, !dbg !8864
  store %struct.BMLoop* %14, %struct.BMLoop** %l, align 8, !dbg !8865
  %15 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8866
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 26, !dbg !8867
  %16 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8868
  %head = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %16, i32 0, i32 0, !dbg !8869
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !8870
  %17 = load i8*, i8** %data, align 8, !dbg !8870
  %call = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata, i8* %17, i32 16), !dbg !8871
  %18 = bitcast i8* %call to %struct.MLoopUV*, !dbg !8871
  store %struct.MLoopUV* %18, %struct.MLoopUV** %luv_orig1, align 8, !dbg !8872
  %19 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8873
  %uvs4 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %19, i32 0, i32 9, !dbg !8874
  %20 = load %struct.UvElement**, %struct.UvElement*** %uvs4, align 8, !dbg !8874
  %21 = load %struct.UvEdge*, %struct.UvEdge** %edge_iter.addr, align 8, !dbg !8875
  %uv15 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %21, i32 0, i32 0, !dbg !8876
  %22 = load i32, i32* %uv15, align 8, !dbg !8876
  %idxprom6 = zext i32 %22 to i64, !dbg !8873
  %arrayidx7 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %20, i64 %idxprom6, !dbg !8873
  %23 = load %struct.UvElement*, %struct.UvElement** %arrayidx7, align 8, !dbg !8873
  %l8 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %23, i32 0, i32 1, !dbg !8877
  %24 = load %struct.BMLoop*, %struct.BMLoop** %l8, align 8, !dbg !8877
  store %struct.BMLoop* %24, %struct.BMLoop** %l, align 8, !dbg !8878
  %25 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8879
  %ldata9 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %25, i32 0, i32 26, !dbg !8880
  %26 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8881
  %head10 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %26, i32 0, i32 0, !dbg !8882
  %data11 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head10, i32 0, i32 0, !dbg !8883
  %27 = load i8*, i8** %data11, align 8, !dbg !8883
  %call12 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata9, i8* %27, i32 16), !dbg !8884
  %28 = bitcast i8* %call12 to %struct.MLoopUV*, !dbg !8884
  store %struct.MLoopUV* %28, %struct.MLoopUV** %luv_iter1, align 8, !dbg !8885
  %29 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8886
  %uvs13 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %29, i32 0, i32 9, !dbg !8887
  %30 = load %struct.UvElement**, %struct.UvElement*** %uvs13, align 8, !dbg !8887
  %31 = load %struct.UvEdge*, %struct.UvEdge** %edge.addr, align 8, !dbg !8888
  %uv2 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %31, i32 0, i32 1, !dbg !8889
  %32 = load i32, i32* %uv2, align 4, !dbg !8889
  %idxprom14 = zext i32 %32 to i64, !dbg !8886
  %arrayidx15 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %30, i64 %idxprom14, !dbg !8886
  %33 = load %struct.UvElement*, %struct.UvElement** %arrayidx15, align 8, !dbg !8886
  %l16 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %33, i32 0, i32 1, !dbg !8890
  %34 = load %struct.BMLoop*, %struct.BMLoop** %l16, align 8, !dbg !8890
  store %struct.BMLoop* %34, %struct.BMLoop** %l, align 8, !dbg !8891
  %35 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8892
  %ldata17 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %35, i32 0, i32 26, !dbg !8893
  %36 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8894
  %head18 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %36, i32 0, i32 0, !dbg !8895
  %data19 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head18, i32 0, i32 0, !dbg !8896
  %37 = load i8*, i8** %data19, align 8, !dbg !8896
  %call20 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata17, i8* %37, i32 16), !dbg !8897
  %38 = bitcast i8* %call20 to %struct.MLoopUV*, !dbg !8897
  store %struct.MLoopUV* %38, %struct.MLoopUV** %luv_orig2, align 8, !dbg !8898
  %39 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8899
  %uvs21 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %39, i32 0, i32 9, !dbg !8900
  %40 = load %struct.UvElement**, %struct.UvElement*** %uvs21, align 8, !dbg !8900
  %41 = load %struct.UvEdge*, %struct.UvEdge** %edge_iter.addr, align 8, !dbg !8901
  %uv222 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %41, i32 0, i32 1, !dbg !8902
  %42 = load i32, i32* %uv222, align 4, !dbg !8902
  %idxprom23 = zext i32 %42 to i64, !dbg !8899
  %arrayidx24 = getelementptr inbounds %struct.UvElement*, %struct.UvElement** %40, i64 %idxprom23, !dbg !8899
  %43 = load %struct.UvElement*, %struct.UvElement** %arrayidx24, align 8, !dbg !8899
  %l25 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %43, i32 0, i32 1, !dbg !8903
  %44 = load %struct.BMLoop*, %struct.BMLoop** %l25, align 8, !dbg !8903
  store %struct.BMLoop* %44, %struct.BMLoop** %l, align 8, !dbg !8904
  %45 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8905
  %ldata26 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %45, i32 0, i32 26, !dbg !8906
  %46 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8907
  %head27 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %46, i32 0, i32 0, !dbg !8908
  %data28 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head27, i32 0, i32 0, !dbg !8909
  %47 = load i8*, i8** %data28, align 8, !dbg !8909
  %call29 = call i8* @CustomData_bmesh_get(%struct.CustomData* %ldata26, i8* %47, i32 16), !dbg !8910
  %48 = bitcast i8* %call29 to %struct.MLoopUV*, !dbg !8910
  store %struct.MLoopUV* %48, %struct.MLoopUV** %luv_iter2, align 8, !dbg !8911
  %49 = load %struct.MLoopUV*, %struct.MLoopUV** %luv_orig1, align 8, !dbg !8912
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %49, i32 0, i32 0, !dbg !8914
  %arrayidx30 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !8912
  %50 = load float, float* %arrayidx30, align 4, !dbg !8912
  %51 = load %struct.MLoopUV*, %struct.MLoopUV** %luv_iter1, align 8, !dbg !8915
  %uv31 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %51, i32 0, i32 0, !dbg !8916
  %arrayidx32 = getelementptr inbounds [2 x float], [2 x float]* %uv31, i64 0, i64 0, !dbg !8915
  %52 = load float, float* %arrayidx32, align 4, !dbg !8915
  %sub = fsub float %50, %52, !dbg !8917
  %53 = call float @llvm.fabs.f32(float %sub), !dbg !8918
  %54 = load float, float* %limit, align 4, !dbg !8919
  %cmp33 = fcmp olt float %53, %54, !dbg !8920
  br i1 %cmp33, label %land.lhs.true, label %if.else, !dbg !8921

land.lhs.true:                                    ; preds = %if.then2
  %55 = load %struct.MLoopUV*, %struct.MLoopUV** %luv_orig1, align 8, !dbg !8922
  %uv34 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %55, i32 0, i32 0, !dbg !8923
  %arrayidx35 = getelementptr inbounds [2 x float], [2 x float]* %uv34, i64 0, i64 1, !dbg !8922
  %56 = load float, float* %arrayidx35, align 4, !dbg !8922
  %57 = load %struct.MLoopUV*, %struct.MLoopUV** %luv_iter1, align 8, !dbg !8924
  %uv36 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %57, i32 0, i32 0, !dbg !8925
  %arrayidx37 = getelementptr inbounds [2 x float], [2 x float]* %uv36, i64 0, i64 1, !dbg !8924
  %58 = load float, float* %arrayidx37, align 4, !dbg !8924
  %sub38 = fsub float %56, %58, !dbg !8926
  %59 = call float @llvm.fabs.f32(float %sub38), !dbg !8927
  %60 = load float, float* %limit, align 4, !dbg !8928
  %cmp39 = fcmp olt float %59, %60, !dbg !8929
  br i1 %cmp39, label %land.lhs.true40, label %if.else, !dbg !8930

land.lhs.true40:                                  ; preds = %land.lhs.true
  %61 = load %struct.MLoopUV*, %struct.MLoopUV** %luv_orig2, align 8, !dbg !8931
  %uv41 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %61, i32 0, i32 0, !dbg !8932
  %arrayidx42 = getelementptr inbounds [2 x float], [2 x float]* %uv41, i64 0, i64 0, !dbg !8931
  %62 = load float, float* %arrayidx42, align 4, !dbg !8931
  %63 = load %struct.MLoopUV*, %struct.MLoopUV** %luv_iter2, align 8, !dbg !8933
  %uv43 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %63, i32 0, i32 0, !dbg !8934
  %arrayidx44 = getelementptr inbounds [2 x float], [2 x float]* %uv43, i64 0, i64 0, !dbg !8933
  %64 = load float, float* %arrayidx44, align 4, !dbg !8933
  %sub45 = fsub float %62, %64, !dbg !8935
  %65 = call float @llvm.fabs.f32(float %sub45), !dbg !8936
  %66 = load float, float* %limit, align 4, !dbg !8937
  %cmp46 = fcmp olt float %65, %66, !dbg !8938
  br i1 %cmp46, label %land.lhs.true47, label %if.else, !dbg !8939

land.lhs.true47:                                  ; preds = %land.lhs.true40
  %67 = load %struct.MLoopUV*, %struct.MLoopUV** %luv_orig2, align 8, !dbg !8940
  %uv48 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %67, i32 0, i32 0, !dbg !8941
  %arrayidx49 = getelementptr inbounds [2 x float], [2 x float]* %uv48, i64 0, i64 1, !dbg !8940
  %68 = load float, float* %arrayidx49, align 4, !dbg !8940
  %69 = load %struct.MLoopUV*, %struct.MLoopUV** %luv_iter2, align 8, !dbg !8942
  %uv50 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %69, i32 0, i32 0, !dbg !8943
  %arrayidx51 = getelementptr inbounds [2 x float], [2 x float]* %uv50, i64 0, i64 1, !dbg !8942
  %70 = load float, float* %arrayidx51, align 4, !dbg !8942
  %sub52 = fsub float %68, %70, !dbg !8944
  %71 = call float @llvm.fabs.f32(float %sub52), !dbg !8945
  %72 = load float, float* %limit, align 4, !dbg !8946
  %cmp53 = fcmp olt float %71, %72, !dbg !8947
  br i1 %cmp53, label %if.then54, label %if.else, !dbg !8948

if.then54:                                        ; preds = %land.lhs.true47
  store i8 1, i8* %retval, align 1, !dbg !8949
  br label %return, !dbg !8949

if.else:                                          ; preds = %land.lhs.true47, %land.lhs.true40, %land.lhs.true, %if.then2
  store i8 0, i8* %retval, align 1, !dbg !8951
  br label %return, !dbg !8951

if.else55:                                        ; preds = %if.end
  store i8 1, i8* %retval, align 1, !dbg !8953
  br label %return, !dbg !8953

return:                                           ; preds = %if.else55, %if.else, %if.then54, %if.then
  %73 = load i8, i8* %retval, align 1, !dbg !8955
  ret i8 %73, !dbg !8955
}

; Function Attrs: noinline nounwind uwtable
define internal void @stitch_setup_face_preview_for_uv_group(%struct.UvElement* %element, %struct.StitchState* %state, %struct.IslandStitchData* %island_stitch_data, %struct.PreviewPosition* %preview_position) #0 !dbg !8956 {
entry:
  %element.addr = alloca %struct.UvElement*, align 8
  %state.addr = alloca %struct.StitchState*, align 8
  %island_stitch_data.addr = alloca %struct.IslandStitchData*, align 8
  %preview_position.addr = alloca %struct.PreviewPosition*, align 8
  %preview = alloca %struct.StitchPreviewer*, align 8
  store %struct.UvElement* %element, %struct.UvElement** %element.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element.addr, metadata !8957, metadata !DIExpression()), !dbg !8958
  store %struct.StitchState* %state, %struct.StitchState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state.addr, metadata !8959, metadata !DIExpression()), !dbg !8960
  store %struct.IslandStitchData* %island_stitch_data, %struct.IslandStitchData** %island_stitch_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IslandStitchData** %island_stitch_data.addr, metadata !8961, metadata !DIExpression()), !dbg !8962
  store %struct.PreviewPosition* %preview_position, %struct.PreviewPosition** %preview_position.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PreviewPosition** %preview_position.addr, metadata !8963, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.declare(metadata %struct.StitchPreviewer** %preview, metadata !8965, metadata !DIExpression()), !dbg !8966
  %0 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8967
  %stitch_preview = getelementptr inbounds %struct.StitchState, %struct.StitchState* %0, i32 0, i32 22, !dbg !8968
  %1 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %stitch_preview, align 8, !dbg !8968
  store %struct.StitchPreviewer* %1, %struct.StitchPreviewer** %preview, align 8, !dbg !8966
  %2 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8969
  %snap_islands = getelementptr inbounds %struct.StitchState, %struct.StitchState* %2, i32 0, i32 3, !dbg !8971
  %3 = load i8, i8* %snap_islands, align 4, !dbg !8971
  %conv = zext i8 %3 to i32, !dbg !8969
  %tobool = icmp ne i32 %conv, 0, !dbg !8969
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8972

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8973
  %midpoints = getelementptr inbounds %struct.StitchState, %struct.StitchState* %4, i32 0, i32 4, !dbg !8974
  %5 = load i8, i8* %midpoints, align 1, !dbg !8974
  %tobool1 = icmp ne i8 %5, 0, !dbg !8973
  br i1 %tobool1, label %if.end, label %land.lhs.true2, !dbg !8975

land.lhs.true2:                                   ; preds = %land.lhs.true
  %6 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8976
  %static_island = getelementptr inbounds %struct.StitchState, %struct.StitchState* %6, i32 0, i32 18, !dbg !8977
  %7 = load i32, i32* %static_island, align 4, !dbg !8977
  %8 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !8978
  %island = getelementptr inbounds %struct.UvElement, %struct.UvElement* %8, i32 0, i32 5, !dbg !8979
  %9 = load i16, i16* %island, align 4, !dbg !8979
  %conv3 = zext i16 %9 to i32, !dbg !8978
  %cmp = icmp eq i32 %7, %conv3, !dbg !8980
  br i1 %cmp, label %if.then, label %if.end, !dbg !8981

if.then:                                          ; preds = %land.lhs.true2
  br label %do.end, !dbg !8982

if.end:                                           ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %10 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !8983
  %snap_islands5 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %10, i32 0, i32 3, !dbg !8985
  %11 = load i8, i8* %snap_islands5, align 4, !dbg !8985
  %tobool6 = icmp ne i8 %11, 0, !dbg !8983
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !8986

if.then7:                                         ; preds = %if.end
  %12 = load %struct.IslandStitchData*, %struct.IslandStitchData** %island_stitch_data.addr, align 8, !dbg !8987
  %13 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !8989
  %island8 = getelementptr inbounds %struct.UvElement, %struct.UvElement* %13, i32 0, i32 5, !dbg !8990
  %14 = load i16, i16* %island8, align 4, !dbg !8990
  %idxprom = zext i16 %14 to i64, !dbg !8987
  %arrayidx = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %12, i64 %idxprom, !dbg !8987
  %addedForPreview = getelementptr inbounds %struct.IslandStitchData, %struct.IslandStitchData* %arrayidx, i32 0, i32 7, !dbg !8991
  store i8 1, i8* %addedForPreview, align 4, !dbg !8992
  br label %if.end9, !dbg !8993

if.end9:                                          ; preds = %if.then7, %if.end
  br label %do.body, !dbg !8994

do.body:                                          ; preds = %land.end, %if.end9
  %15 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !8995
  %l = getelementptr inbounds %struct.UvElement, %struct.UvElement* %15, i32 0, i32 1, !dbg !8997
  %16 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !8997
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %16, i32 0, i32 3, !dbg !8998
  %17 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !8998
  %18 = load %struct.StitchPreviewer*, %struct.StitchPreviewer** %preview, align 8, !dbg !8999
  %19 = load %struct.PreviewPosition*, %struct.PreviewPosition** %preview_position.addr, align 8, !dbg !9000
  call void @stitch_set_face_preview_buffer_position(%struct.BMFace* %17, %struct.StitchPreviewer* %18, %struct.PreviewPosition* %19), !dbg !9001
  %20 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !9002
  %next = getelementptr inbounds %struct.UvElement, %struct.UvElement* %20, i32 0, i32 0, !dbg !9003
  %21 = load %struct.UvElement*, %struct.UvElement** %next, align 8, !dbg !9003
  store %struct.UvElement* %21, %struct.UvElement** %element.addr, align 8, !dbg !9004
  br label %do.cond, !dbg !9005

do.cond:                                          ; preds = %do.body
  %22 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !9006
  %tobool10 = icmp ne %struct.UvElement* %22, null, !dbg !9006
  br i1 %tobool10, label %land.rhs, label %land.end, !dbg !9007

land.rhs:                                         ; preds = %do.cond
  %23 = load %struct.UvElement*, %struct.UvElement** %element.addr, align 8, !dbg !9008
  %separate = getelementptr inbounds %struct.UvElement, %struct.UvElement* %23, i32 0, i32 3, !dbg !9009
  %24 = load i8, i8* %separate, align 2, !dbg !9009
  %tobool11 = icmp ne i8 %24, 0, !dbg !9010
  %lnot = xor i1 %tobool11, true, !dbg !9010
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %25 = phi i1 [ false, %do.cond ], [ %lnot, %land.rhs ], !dbg !9011
  br i1 %25, label %do.body, label %do.end, !dbg !9005, !llvm.loop !9012

do.end:                                           ; preds = %if.then, %land.end
  ret void, !dbg !9014
}

; Function Attrs: noinline nounwind uwtable
define internal float @cross_v2v2(float* %a, float* %b) #0 !dbg !9015 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9016, metadata !DIExpression()), !dbg !9017
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9018, metadata !DIExpression()), !dbg !9019
  %0 = load float*, float** %a.addr, align 8, !dbg !9020
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9020
  %1 = load float, float* %arrayidx, align 4, !dbg !9020
  %2 = load float*, float** %b.addr, align 8, !dbg !9021
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !9021
  %3 = load float, float* %arrayidx1, align 4, !dbg !9021
  %mul = fmul float %1, %3, !dbg !9022
  %4 = load float*, float** %a.addr, align 8, !dbg !9023
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !9023
  %5 = load float, float* %arrayidx2, align 4, !dbg !9023
  %6 = load float*, float** %b.addr, align 8, !dbg !9024
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 0, !dbg !9024
  %7 = load float, float* %arrayidx3, align 4, !dbg !9024
  %mul4 = fmul float %5, %7, !dbg !9025
  %sub = fsub float %mul, %mul4, !dbg !9026
  ret float %sub, !dbg !9027
}

; Function Attrs: nounwind
declare dso_local float @acosf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !9028 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !9032, metadata !DIExpression()), !dbg !9033
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !9034, metadata !DIExpression()), !dbg !9035
  %0 = load float, float* %a.addr, align 4, !dbg !9036
  %1 = load float, float* %b.addr, align 4, !dbg !9037
  %cmp = fcmp ogt float %0, %1, !dbg !9038
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9039

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !9040
  br label %cond.end, !dbg !9039

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !9041
  br label %cond.end, !dbg !9039

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !9039
  ret float %cond, !dbg !9042
}

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !9043 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !9044, metadata !DIExpression()), !dbg !9045
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !9046, metadata !DIExpression()), !dbg !9047
  %0 = load float, float* %a.addr, align 4, !dbg !9048
  %1 = load float, float* %b.addr, align 4, !dbg !9049
  %cmp = fcmp olt float %0, %1, !dbg !9050
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9051

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !9052
  br label %cond.end, !dbg !9051

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !9053
  br label %cond.end, !dbg !9051

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !9051
  ret float %cond, !dbg !9054
}

; Function Attrs: noinline nounwind uwtable
define internal void @negate_v2_v2(float* %r, float* %a) #0 !dbg !9055 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9056, metadata !DIExpression()), !dbg !9057
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9058, metadata !DIExpression()), !dbg !9059
  %0 = load float*, float** %a.addr, align 8, !dbg !9060
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9060
  %1 = load float, float* %arrayidx, align 4, !dbg !9060
  %fneg = fneg float %1, !dbg !9061
  %2 = load float*, float** %r.addr, align 8, !dbg !9062
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9062
  store float %fneg, float* %arrayidx1, align 4, !dbg !9063
  %3 = load float*, float** %a.addr, align 8, !dbg !9064
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !9064
  %4 = load float, float* %arrayidx2, align 4, !dbg !9064
  %fneg3 = fneg float %4, !dbg !9065
  %5 = load float*, float** %r.addr, align 8, !dbg !9066
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !9066
  store float %fneg3, float* %arrayidx4, align 4, !dbg !9067
  ret void, !dbg !9068
}

declare dso_local void @uvedit_uv_select_enable(%struct.BMEditMesh*, %struct.Scene*, %struct.BMLoop*, i8 zeroext, i32) #2

declare dso_local void @rotate_m2([2 x float]*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @stitch_uv_rotate([2 x float]* %mat, float* %medianPoint, float* %uv, float %aspect) #0 !dbg !9069 {
entry:
  %mat.addr = alloca [2 x float]*, align 8
  %medianPoint.addr = alloca float*, align 8
  %uv.addr = alloca float*, align 8
  %aspect.addr = alloca float, align 4
  %uv_rotation_result = alloca [2 x float], align 4
  store [2 x float]* %mat, [2 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %mat.addr, metadata !9073, metadata !DIExpression()), !dbg !9074
  store float* %medianPoint, float** %medianPoint.addr, align 8
  call void @llvm.dbg.declare(metadata float** %medianPoint.addr, metadata !9075, metadata !DIExpression()), !dbg !9076
  store float* %uv, float** %uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv.addr, metadata !9077, metadata !DIExpression()), !dbg !9078
  store float %aspect, float* %aspect.addr, align 4
  call void @llvm.dbg.declare(metadata float* %aspect.addr, metadata !9079, metadata !DIExpression()), !dbg !9080
  call void @llvm.dbg.declare(metadata [2 x float]* %uv_rotation_result, metadata !9081, metadata !DIExpression()), !dbg !9082
  %0 = load float, float* %aspect.addr, align 4, !dbg !9083
  %1 = load float*, float** %uv.addr, align 8, !dbg !9084
  %arrayidx = getelementptr inbounds float, float* %1, i64 1, !dbg !9084
  %2 = load float, float* %arrayidx, align 4, !dbg !9085
  %div = fdiv float %2, %0, !dbg !9085
  store float %div, float* %arrayidx, align 4, !dbg !9085
  %3 = load float*, float** %uv.addr, align 8, !dbg !9086
  %4 = load float*, float** %medianPoint.addr, align 8, !dbg !9087
  call void @sub_v2_v2(float* %3, float* %4), !dbg !9088
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv_rotation_result, i64 0, i64 0, !dbg !9089
  %5 = load [2 x float]*, [2 x float]** %mat.addr, align 8, !dbg !9090
  %6 = load float*, float** %uv.addr, align 8, !dbg !9091
  call void @mul_v2_m2v2(float* %arraydecay, [2 x float]* %5, float* %6), !dbg !9092
  %7 = load float*, float** %uv.addr, align 8, !dbg !9093
  %arraydecay1 = getelementptr inbounds [2 x float], [2 x float]* %uv_rotation_result, i64 0, i64 0, !dbg !9094
  %8 = load float*, float** %medianPoint.addr, align 8, !dbg !9095
  call void @add_v2_v2v2(float* %7, float* %arraydecay1, float* %8), !dbg !9096
  %9 = load float, float* %aspect.addr, align 4, !dbg !9097
  %10 = load float*, float** %uv.addr, align 8, !dbg !9098
  %arrayidx2 = getelementptr inbounds float, float* %10, i64 1, !dbg !9098
  %11 = load float, float* %arrayidx2, align 4, !dbg !9099
  %mul = fmul float %11, %9, !dbg !9099
  store float %mul, float* %arrayidx2, align 4, !dbg !9099
  ret void, !dbg !9100
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v2_v2(float* %r, float* %a) #0 !dbg !9101 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9102, metadata !DIExpression()), !dbg !9103
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9104, metadata !DIExpression()), !dbg !9105
  %0 = load float*, float** %a.addr, align 8, !dbg !9106
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9106
  %1 = load float, float* %arrayidx, align 4, !dbg !9106
  %2 = load float*, float** %r.addr, align 8, !dbg !9107
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9107
  %3 = load float, float* %arrayidx1, align 4, !dbg !9108
  %sub = fsub float %3, %1, !dbg !9108
  store float %sub, float* %arrayidx1, align 4, !dbg !9108
  %4 = load float*, float** %a.addr, align 8, !dbg !9109
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !9109
  %5 = load float, float* %arrayidx2, align 4, !dbg !9109
  %6 = load float*, float** %r.addr, align 8, !dbg !9110
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !9110
  %7 = load float, float* %arrayidx3, align 4, !dbg !9111
  %sub4 = fsub float %7, %5, !dbg !9111
  store float %sub4, float* %arrayidx3, align 4, !dbg !9111
  ret void, !dbg !9112
}

declare dso_local void @mul_v2_m2v2(float*, [2 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_v2_v2v2(float* %r, float* %a, float* %b) #0 !dbg !9113 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9114, metadata !DIExpression()), !dbg !9115
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9116, metadata !DIExpression()), !dbg !9117
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !9118, metadata !DIExpression()), !dbg !9119
  %0 = load float*, float** %a.addr, align 8, !dbg !9120
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9120
  %1 = load float, float* %arrayidx, align 4, !dbg !9120
  %2 = load float*, float** %b.addr, align 8, !dbg !9121
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9121
  %3 = load float, float* %arrayidx1, align 4, !dbg !9121
  %add = fadd float %1, %3, !dbg !9122
  %4 = load float*, float** %r.addr, align 8, !dbg !9123
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !9123
  store float %add, float* %arrayidx2, align 4, !dbg !9124
  %5 = load float*, float** %a.addr, align 8, !dbg !9125
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !9125
  %6 = load float, float* %arrayidx3, align 4, !dbg !9125
  %7 = load float*, float** %b.addr, align 8, !dbg !9126
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !9126
  %8 = load float, float* %arrayidx4, align 4, !dbg !9126
  %add5 = fadd float %6, %8, !dbg !9127
  %9 = load float*, float** %r.addr, align 8, !dbg !9128
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !9128
  store float %add5, float* %arrayidx6, align 4, !dbg !9129
  ret void, !dbg !9130
}

declare dso_local float @UI_GetThemeValuef(i32) #2

declare dso_local void @glPushClientAttrib(i32) #2

declare dso_local void @glEnableClientState(i32) #2

declare dso_local void @glPointSize(float) #2

declare dso_local void @glEnable(i32) #2

declare dso_local void @UI_ThemeColor4(i32) #2

declare dso_local void @glPolygonMode(i32, i32) #2

declare dso_local void @glVertexPointer(i32, i32, i32, i8*) #2

declare dso_local void @glDrawArrays(i32, i32, i32) #2

declare dso_local void @glDisable(i32) #2

declare dso_local void @glPopClientAttrib() #2

declare dso_local %struct.ScrArea* @CTX_wm_area(%struct.bContext*) #2

declare dso_local i64 @BLI_snprintf(i8*, i64, i8*, ...) #2

declare dso_local i8* @WM_bool_as_string(i8 zeroext) #2

declare dso_local void @ED_area_headerprint(%struct.ScrArea*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @stitch_select(%struct.bContext* %C, %struct.Scene* %scene, %struct.wmEvent* %event, %struct.StitchState* %state) #0 !dbg !9131 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %state.addr = alloca %struct.StitchState*, align 8
  %co = alloca [2 x float], align 4
  %hit = alloca %struct.NearestHit, align 8
  %ar = alloca %struct.ARegion*, align 8
  %ima = alloca %struct.Image*, align 8
  %element = alloca %struct.UvElement*, align 8
  %edge = alloca %struct.UvEdge*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9134, metadata !DIExpression()), !dbg !9135
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !9136, metadata !DIExpression()), !dbg !9137
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !9138, metadata !DIExpression()), !dbg !9139
  store %struct.StitchState* %state, %struct.StitchState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state.addr, metadata !9140, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.declare(metadata [2 x float]* %co, metadata !9142, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.declare(metadata %struct.NearestHit* %hit, metadata !9144, metadata !DIExpression()), !dbg !9165
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !9166, metadata !DIExpression()), !dbg !9167
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9168
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %0), !dbg !9169
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !9167
  call void @llvm.dbg.declare(metadata %struct.Image** %ima, metadata !9170, metadata !DIExpression()), !dbg !9173
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9174
  %call1 = call %struct.Image* @CTX_data_edit_image(%struct.bContext* %1), !dbg !9175
  store %struct.Image* %call1, %struct.Image** %ima, align 8, !dbg !9173
  %2 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !9176
  %v2d = getelementptr inbounds %struct.ARegion, %struct.ARegion* %2, i32 0, i32 2, !dbg !9177
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9178
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %3, i32 0, i32 6, !dbg !9179
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !9178
  %4 = load i32, i32* %arrayidx, align 4, !dbg !9178
  %conv = sitofp i32 %4 to float, !dbg !9178
  %5 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9180
  %mval2 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %5, i32 0, i32 6, !dbg !9181
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %mval2, i64 0, i64 1, !dbg !9180
  %6 = load i32, i32* %arrayidx3, align 4, !dbg !9180
  %conv4 = sitofp i32 %6 to float, !dbg !9180
  %arrayidx5 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !9182
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 1, !dbg !9183
  call void @UI_view2d_region_to_view(%struct.View2D* %v2d, float %conv, float %conv4, float* %arrayidx5, float* %arrayidx6), !dbg !9184
  %7 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !9185
  %mode = getelementptr inbounds %struct.StitchState, %struct.StitchState* %7, i32 0, i32 20, !dbg !9187
  %8 = load i8, i8* %mode, align 8, !dbg !9187
  %conv7 = zext i8 %8 to i32, !dbg !9185
  %cmp = icmp eq i32 %conv7, 0, !dbg !9188
  br i1 %cmp, label %if.then, label %if.else, !dbg !9189

if.then:                                          ; preds = %entry
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9190
  %10 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !9192
  %11 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !9193
  %em = getelementptr inbounds %struct.StitchState, %struct.StitchState* %11, i32 0, i32 5, !dbg !9194
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9194
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !9195
  call void @uv_find_nearest_vert(%struct.Scene* %9, %struct.Image* %10, %struct.BMEditMesh* %12, float* %arraydecay, float* null, %struct.NearestHit* %hit), !dbg !9196
  %efa = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !9197
  %13 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !9197
  %tobool = icmp ne %struct.BMFace* %13, null, !dbg !9199
  br i1 %tobool, label %if.then9, label %if.end, !dbg !9200

if.then9:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element, metadata !9201, metadata !DIExpression()), !dbg !9203
  %14 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !9204
  %element_map = getelementptr inbounds %struct.StitchState, %struct.StitchState* %14, i32 0, i32 7, !dbg !9205
  %15 = load %struct.UvElementMap*, %struct.UvElementMap** %element_map, align 8, !dbg !9205
  %efa10 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !9206
  %16 = load %struct.BMFace*, %struct.BMFace** %efa10, align 8, !dbg !9206
  %l = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 2, !dbg !9207
  %17 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9207
  %call11 = call %struct.UvElement* @BM_uv_element_get(%struct.UvElementMap* %15, %struct.BMFace* %16, %struct.BMLoop* %17), !dbg !9208
  store %struct.UvElement* %call11, %struct.UvElement** %element, align 8, !dbg !9203
  %18 = load %struct.UvElement*, %struct.UvElement** %element, align 8, !dbg !9209
  %19 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !9210
  call void @stitch_select_uv(%struct.UvElement* %18, %struct.StitchState* %19, i32 0), !dbg !9211
  br label %if.end, !dbg !9212

if.end:                                           ; preds = %if.then9, %if.then
  br label %if.end20, !dbg !9213

if.else:                                          ; preds = %entry
  %20 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9214
  %21 = load %struct.Image*, %struct.Image** %ima, align 8, !dbg !9216
  %22 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !9217
  %em12 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %22, i32 0, i32 5, !dbg !9218
  %23 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em12, align 8, !dbg !9218
  %arraydecay13 = getelementptr inbounds [2 x float], [2 x float]* %co, i64 0, i64 0, !dbg !9219
  call void @uv_find_nearest_edge(%struct.Scene* %20, %struct.Image* %21, %struct.BMEditMesh* %23, float* %arraydecay13, %struct.NearestHit* %hit), !dbg !9220
  %efa14 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 0, !dbg !9221
  %24 = load %struct.BMFace*, %struct.BMFace** %efa14, align 8, !dbg !9221
  %tobool15 = icmp ne %struct.BMFace* %24, null, !dbg !9223
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !9224

if.then16:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.UvEdge** %edge, metadata !9225, metadata !DIExpression()), !dbg !9227
  %l17 = getelementptr inbounds %struct.NearestHit, %struct.NearestHit* %hit, i32 0, i32 2, !dbg !9228
  %25 = load %struct.BMLoop*, %struct.BMLoop** %l17, align 8, !dbg !9228
  %26 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !9229
  %call18 = call %struct.UvEdge* @uv_edge_get(%struct.BMLoop* %25, %struct.StitchState* %26), !dbg !9230
  store %struct.UvEdge* %call18, %struct.UvEdge** %edge, align 8, !dbg !9227
  %27 = load %struct.UvEdge*, %struct.UvEdge** %edge, align 8, !dbg !9231
  %28 = load %struct.StitchState*, %struct.StitchState** %state.addr, align 8, !dbg !9232
  call void @stitch_select_edge(%struct.UvEdge* %27, %struct.StitchState* %28, i32 0), !dbg !9233
  br label %if.end19, !dbg !9234

if.end19:                                         ; preds = %if.then16, %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.end
  ret void, !dbg !9235
}

; Function Attrs: noinline nounwind uwtable
define internal void @stitch_exit(%struct.bContext* %C, %struct.wmOperator* %op, i32 %finished) #0 !dbg !9236 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %finished.addr = alloca i32, align 4
  %state = alloca %struct.StitchState*, align 8
  %scene = alloca %struct.Scene*, align 8
  %sima = alloca %struct.SpaceImage*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %obedit = alloca %struct.Object*, align 8
  %i = alloca i32, align 4
  %element = alloca %struct.UvElement*, align 8
  %itemptr = alloca %struct.PointerRNA, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9239, metadata !DIExpression()), !dbg !9240
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9241, metadata !DIExpression()), !dbg !9242
  store i32 %finished, i32* %finished.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %finished.addr, metadata !9243, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.declare(metadata %struct.StitchState** %state, metadata !9245, metadata !DIExpression()), !dbg !9246
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !9247, metadata !DIExpression()), !dbg !9248
  call void @llvm.dbg.declare(metadata %struct.SpaceImage** %sima, metadata !9249, metadata !DIExpression()), !dbg !9340
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !9341, metadata !DIExpression()), !dbg !9342
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9343
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !9344
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !9342
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !9345, metadata !DIExpression()), !dbg !9346
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9347
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !9348
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !9349
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9350
  %call2 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %2), !dbg !9351
  store %struct.Object* %call2, %struct.Object** %obedit, align 8, !dbg !9352
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9353
  %call3 = call %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext* %3), !dbg !9354
  store %struct.SpaceImage* %call3, %struct.SpaceImage** %sima, align 8, !dbg !9355
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9356
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 5, !dbg !9357
  %5 = load i8*, i8** %customdata, align 8, !dbg !9357
  %6 = bitcast i8* %5 to %struct.StitchState*, !dbg !9358
  store %struct.StitchState* %6, %struct.StitchState** %state, align 8, !dbg !9359
  %7 = load i32, i32* %finished.addr, align 4, !dbg !9360
  %tobool = icmp ne i32 %7, 0, !dbg !9360
  br i1 %tobool, label %if.then, label %if.end28, !dbg !9362

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9363, metadata !DIExpression()), !dbg !9365
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9366
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !9367
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9367
  %10 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !9368
  %limit_dist = getelementptr inbounds %struct.StitchState, %struct.StitchState* %10, i32 0, i32 2, !dbg !9369
  %11 = load float, float* %limit_dist, align 8, !dbg !9369
  call void @RNA_float_set(%struct.PointerRNA* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), float %11), !dbg !9370
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9371
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %12, i32 0, i32 7, !dbg !9372
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !9372
  %14 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !9373
  %use_limit = getelementptr inbounds %struct.StitchState, %struct.StitchState* %14, i32 0, i32 1, !dbg !9374
  %15 = load i8, i8* %use_limit, align 4, !dbg !9374
  %conv = zext i8 %15 to i32, !dbg !9373
  call void @RNA_boolean_set(%struct.PointerRNA* %13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 %conv), !dbg !9375
  %16 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9376
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %16, i32 0, i32 7, !dbg !9377
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !9377
  %18 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !9378
  %snap_islands = getelementptr inbounds %struct.StitchState, %struct.StitchState* %18, i32 0, i32 3, !dbg !9379
  %19 = load i8, i8* %snap_islands, align 4, !dbg !9379
  %conv6 = zext i8 %19 to i32, !dbg !9378
  call void @RNA_boolean_set(%struct.PointerRNA* %17, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i32 %conv6), !dbg !9380
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9381
  %ptr7 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %20, i32 0, i32 7, !dbg !9382
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr7, align 8, !dbg !9382
  %22 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !9383
  %static_island = getelementptr inbounds %struct.StitchState, %struct.StitchState* %22, i32 0, i32 18, !dbg !9384
  %23 = load i32, i32* %static_island, align 4, !dbg !9384
  call void @RNA_int_set(%struct.PointerRNA* %21, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i32 %23), !dbg !9385
  %24 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9386
  %ptr8 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %24, i32 0, i32 7, !dbg !9387
  %25 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr8, align 8, !dbg !9387
  %26 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !9388
  %midpoints = getelementptr inbounds %struct.StitchState, %struct.StitchState* %26, i32 0, i32 4, !dbg !9389
  %27 = load i8, i8* %midpoints, align 1, !dbg !9389
  %conv9 = zext i8 %27 to i32, !dbg !9388
  call void @RNA_boolean_set(%struct.PointerRNA* %25, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0), i32 %conv9), !dbg !9390
  %28 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9391
  %ptr10 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %28, i32 0, i32 7, !dbg !9392
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr10, align 8, !dbg !9392
  %30 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !9393
  %mode = getelementptr inbounds %struct.StitchState, %struct.StitchState* %30, i32 0, i32 20, !dbg !9394
  %31 = load i8, i8* %mode, align 8, !dbg !9394
  %conv11 = zext i8 %31 to i32, !dbg !9393
  call void @RNA_enum_set(%struct.PointerRNA* %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0), i32 %conv11), !dbg !9395
  %32 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9396
  %ptr12 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %32, i32 0, i32 7, !dbg !9397
  %33 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr12, align 8, !dbg !9397
  %34 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !9398
  %mode13 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %34, i32 0, i32 20, !dbg !9399
  %35 = load i8, i8* %mode13, align 8, !dbg !9399
  %conv14 = zext i8 %35 to i32, !dbg !9398
  call void @RNA_enum_set(%struct.PointerRNA* %33, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0), i32 %conv14), !dbg !9400
  store i32 0, i32* %i, align 4, !dbg !9401
  br label %for.cond, !dbg !9403

for.cond:                                         ; preds = %for.inc, %if.then
  %36 = load i32, i32* %i, align 4, !dbg !9404
  %37 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !9406
  %selection_size = getelementptr inbounds %struct.StitchState, %struct.StitchState* %37, i32 0, i32 17, !dbg !9407
  %38 = load i32, i32* %selection_size, align 8, !dbg !9407
  %cmp = icmp slt i32 %36, %38, !dbg !9408
  br i1 %cmp, label %for.body, label %for.end, !dbg !9409

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.UvElement** %element, metadata !9410, metadata !DIExpression()), !dbg !9412
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %itemptr, metadata !9413, metadata !DIExpression()), !dbg !9414
  %39 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !9415
  %mode16 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %39, i32 0, i32 20, !dbg !9417
  %40 = load i8, i8* %mode16, align 8, !dbg !9417
  %conv17 = zext i8 %40 to i32, !dbg !9415
  %cmp18 = icmp eq i32 %conv17, 0, !dbg !9418
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !9419

if.then20:                                        ; preds = %for.body
  %41 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !9420
  %selection_stack = getelementptr inbounds %struct.StitchState, %struct.StitchState* %41, i32 0, i32 16, !dbg !9422
  %42 = load i8**, i8*** %selection_stack, align 8, !dbg !9422
  %43 = load i32, i32* %i, align 4, !dbg !9423
  %idxprom = sext i32 %43 to i64, !dbg !9420
  %arrayidx = getelementptr inbounds i8*, i8** %42, i64 %idxprom, !dbg !9420
  %44 = load i8*, i8** %arrayidx, align 8, !dbg !9420
  %45 = bitcast i8* %44 to %struct.UvElement*, !dbg !9420
  store %struct.UvElement* %45, %struct.UvElement** %element, align 8, !dbg !9424
  br label %if.end, !dbg !9425

if.else:                                          ; preds = %for.body
  %46 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !9426
  %selection_stack21 = getelementptr inbounds %struct.StitchState, %struct.StitchState* %46, i32 0, i32 16, !dbg !9428
  %47 = load i8**, i8*** %selection_stack21, align 8, !dbg !9428
  %48 = load i32, i32* %i, align 4, !dbg !9429
  %idxprom22 = sext i32 %48 to i64, !dbg !9426
  %arrayidx23 = getelementptr inbounds i8*, i8** %47, i64 %idxprom22, !dbg !9426
  %49 = load i8*, i8** %arrayidx23, align 8, !dbg !9426
  %50 = bitcast i8* %49 to %struct.UvEdge*, !dbg !9430
  %element24 = getelementptr inbounds %struct.UvEdge, %struct.UvEdge* %50, i32 0, i32 3, !dbg !9431
  %51 = load %struct.UvElement*, %struct.UvElement** %element24, align 8, !dbg !9431
  store %struct.UvElement* %51, %struct.UvElement** %element, align 8, !dbg !9432
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then20
  %52 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9433
  %ptr25 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %52, i32 0, i32 7, !dbg !9434
  %53 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr25, align 8, !dbg !9434
  call void @RNA_collection_add(%struct.PointerRNA* %53, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0), %struct.PointerRNA* %itemptr), !dbg !9435
  %54 = load %struct.UvElement*, %struct.UvElement** %element, align 8, !dbg !9436
  %l = getelementptr inbounds %struct.UvElement, %struct.UvElement* %54, i32 0, i32 1, !dbg !9436
  %55 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9436
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %55, i32 0, i32 3, !dbg !9436
  %56 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !9436
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %56, i32 0, i32 0, !dbg !9436
  %call26 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !9436
  call void @RNA_int_set(%struct.PointerRNA* %itemptr, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i64 0, i64 0), i32 %call26), !dbg !9437
  %57 = load %struct.UvElement*, %struct.UvElement** %element, align 8, !dbg !9438
  %tfindex = getelementptr inbounds %struct.UvElement, %struct.UvElement* %57, i32 0, i32 2, !dbg !9439
  %58 = load i16, i16* %tfindex, align 8, !dbg !9439
  %conv27 = zext i16 %58 to i32, !dbg !9438
  call void @RNA_int_set(%struct.PointerRNA* %itemptr, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i64 0, i64 0), i32 %conv27), !dbg !9440
  br label %for.inc, !dbg !9441

for.inc:                                          ; preds = %if.end
  %59 = load i32, i32* %i, align 4, !dbg !9442
  %inc = add nsw i32 %59, 1, !dbg !9442
  store i32 %inc, i32* %i, align 4, !dbg !9442
  br label %for.cond, !dbg !9443, !llvm.loop !9444

for.end:                                          ; preds = %for.cond
  %60 = load %struct.SpaceImage*, %struct.SpaceImage** %sima, align 8, !dbg !9446
  %61 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9447
  %62 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9448
  call void @uvedit_live_unwrap_update(%struct.SpaceImage* %60, %struct.Scene* %61, %struct.Object* %62), !dbg !9449
  br label %if.end28, !dbg !9450

if.end28:                                         ; preds = %for.end, %entry
  %63 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !9451
  %tobool29 = icmp ne %struct.ScrArea* %63, null, !dbg !9451
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !9453

if.then30:                                        ; preds = %if.end28
  %64 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !9454
  call void @ED_area_headerprint(%struct.ScrArea* %64, i8* null), !dbg !9455
  br label %if.end31, !dbg !9455

if.end31:                                         ; preds = %if.then30, %if.end28
  %65 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9456
  %call32 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %65), !dbg !9457
  %type = getelementptr inbounds %struct.ARegion, %struct.ARegion* %call32, i32 0, i32 20, !dbg !9458
  %66 = load %struct.ARegionType*, %struct.ARegionType** %type, align 8, !dbg !9458
  %67 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !9459
  %draw_handle = getelementptr inbounds %struct.StitchState, %struct.StitchState* %67, i32 0, i32 21, !dbg !9460
  %68 = load i8*, i8** %draw_handle, align 8, !dbg !9460
  call void @ED_region_draw_cb_exit(%struct.ARegionType* %66, i8* %68), !dbg !9461
  %69 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9462
  %data = getelementptr inbounds %struct.Object, %struct.Object* %69, i32 0, i32 19, !dbg !9463
  %70 = load i8*, i8** %data, align 8, !dbg !9463
  %71 = bitcast i8* %70 to %struct.ID*, !dbg !9462
  call void @DAG_id_tag_update(%struct.ID* %71, i16 signext 0), !dbg !9464
  %72 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9465
  %73 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9466
  %data33 = getelementptr inbounds %struct.Object, %struct.Object* %73, i32 0, i32 19, !dbg !9467
  %74 = load i8*, i8** %data33, align 8, !dbg !9467
  call void @WM_event_add_notifier(%struct.bContext* %72, i32 274399232, i8* %74), !dbg !9468
  %75 = load %struct.StitchState*, %struct.StitchState** %state, align 8, !dbg !9469
  call void @state_delete(%struct.StitchState* %75), !dbg !9470
  %76 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9471
  %customdata34 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %76, i32 0, i32 5, !dbg !9472
  store i8* null, i8** %customdata34, align 8, !dbg !9473
  ret void, !dbg !9474
}

declare dso_local void @ED_region_tag_redraw(%struct.ARegion*) #2

declare dso_local %struct.Image* @CTX_data_edit_image(%struct.bContext*) #2

declare dso_local void @UI_view2d_region_to_view(%struct.View2D*, float, float, float*, float*) #2

declare dso_local void @uv_find_nearest_vert(%struct.Scene*, %struct.Image*, %struct.BMEditMesh*, float*, float*, %struct.NearestHit*) #2

declare dso_local void @uv_find_nearest_edge(%struct.Scene*, %struct.Image*, %struct.BMEditMesh*, float*, %struct.NearestHit*) #2

declare dso_local %struct.SpaceImage* @CTX_wm_space_image(%struct.bContext*) #2

declare dso_local void @RNA_float_set(%struct.PointerRNA*, i8*, float) #2

declare dso_local void @RNA_boolean_set(%struct.PointerRNA*, i8*, i32) #2

declare dso_local void @RNA_int_set(%struct.PointerRNA*, i8*, i32) #2

declare dso_local void @RNA_enum_set(%struct.PointerRNA*, i8*, i32) #2

declare dso_local void @RNA_collection_add(%struct.PointerRNA*, i8*, %struct.PointerRNA*) #2

declare dso_local void @uvedit_live_unwrap_update(%struct.SpaceImage*, %struct.Scene*, %struct.Object*) #2

declare dso_local void @ED_region_draw_cb_exit(%struct.ARegionType*, i8*) #2

declare dso_local void @DAG_id_tag_update(%struct.ID*, i16 signext) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!1816}
!llvm.module.flags = !{!2525, !2526, !2527}
!llvm.ident = !{!2528}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "stitch_modes", scope: !2, file: !3, line: 2223, type: !2516, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "UV_OT_stitch", scope: !3, file: !3, line: 2219, type: !4, scopeLine: 2220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!3 = !DIFile(filename: "blender/source/blender/editors/uvedit/uvedit_smart_stitch.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{null, !6}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorType", file: !8, line: 568, baseType: !9)
!8 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !8, line: 508, size: 1536, elements: !10)
!10 = !{!11, !15, !16, !17, !18, !1742, !1746, !1752, !1756, !1757, !1761, !1762, !1763, !1764, !1768, !1769, !1784, !1785, !1789, !1815}
!11 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9, file: !8, line: 509, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14)
!14 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !9, file: !8, line: 510, baseType: !12, size: 64, offset: 64)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !9, file: !8, line: 511, baseType: !12, size: 64, offset: 128)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !9, file: !8, line: 512, baseType: !12, size: 64, offset: 192)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !9, file: !8, line: 518, baseType: !19, size: 64, offset: 256)
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64)
!20 = !DISubroutineType(types: !21)
!21 = !{!22, !23, !26}
!22 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64)
!24 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !25, line: 44, flags: DIFlagFwdDecl)
!25 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!27 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !28, line: 328, size: 1344, elements: !29)
!28 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!29 = !{!30, !31, !32, !36, !68, !70, !71, !72, !84, !1735, !1736, !1737, !1740, !1741}
!30 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !27, file: !28, line: 329, baseType: !26, size: 64)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !27, file: !28, line: 329, baseType: !26, size: 64, offset: 64)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !27, file: !28, line: 332, baseType: !33, size: 512, offset: 128)
!33 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 512, elements: !34)
!34 = !{!35}
!35 = !DISubrange(count: 64)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !27, file: !28, line: 333, baseType: !37, size: 64, offset: 640)
!37 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !39, line: 75, baseType: !40)
!39 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!40 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !39, line: 62, size: 1024, elements: !41)
!41 = !{!42, !44, !45, !46, !47, !49, !50, !51, !66, !67}
!42 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !40, file: !39, line: 63, baseType: !43, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !40, file: !39, line: 63, baseType: !43, size: 64, offset: 64)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !40, file: !39, line: 64, baseType: !14, size: 8, offset: 128)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !40, file: !39, line: 64, baseType: !14, size: 8, offset: 136)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !40, file: !39, line: 65, baseType: !48, size: 16, offset: 144)
!48 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !40, file: !39, line: 66, baseType: !33, size: 512, offset: 160)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !40, file: !39, line: 67, baseType: !22, size: 32, offset: 672)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !40, file: !39, line: 69, baseType: !52, size: 256, offset: 704)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !39, line: 60, baseType: !53)
!53 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !39, line: 48, size: 256, elements: !54)
!54 = !{!55, !57, !64, !65}
!55 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !53, file: !39, line: 49, baseType: !56, size: 64)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !53, file: !39, line: 58, baseType: !58, size: 128, offset: 64)
!58 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !59, line: 71, baseType: !60)
!59 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!60 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !59, line: 69, size: 128, elements: !61)
!61 = !{!62, !63}
!62 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !60, file: !59, line: 70, baseType: !56, size: 64)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !60, file: !59, line: 70, baseType: !56, size: 64, offset: 64)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !53, file: !39, line: 59, baseType: !22, size: 32, offset: 192)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !53, file: !39, line: 59, baseType: !22, size: 32, offset: 224)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !40, file: !39, line: 70, baseType: !22, size: 32, offset: 960)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !40, file: !39, line: 74, baseType: !22, size: 32, offset: 992)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !27, file: !28, line: 336, baseType: !69, size: 64, offset: 704)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !27, file: !28, line: 337, baseType: !56, size: 64, offset: 768)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !27, file: !28, line: 338, baseType: !56, size: 64, offset: 832)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !27, file: !28, line: 340, baseType: !73, size: 64, offset: 896)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!74 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !25, line: 55, size: 192, elements: !75)
!75 = !{!76, !80, !83}
!76 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !74, file: !25, line: 58, baseType: !77, size: 64)
!77 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !74, file: !25, line: 56, size: 64, elements: !78)
!78 = !{!79}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !77, file: !25, line: 57, baseType: !56, size: 64)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !74, file: !25, line: 60, baseType: !81, size: 64, offset: 64)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!82 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !25, line: 41, flags: DIFlagFwdDecl)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !74, file: !25, line: 61, baseType: !56, size: 64, offset: 128)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !27, file: !28, line: 341, baseType: !85, size: 64, offset: 960)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64)
!86 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !28, line: 106, size: 320, elements: !87)
!87 = !{!88, !89, !90, !91, !92, !93}
!88 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !86, file: !28, line: 107, baseType: !58, size: 128)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !86, file: !28, line: 108, baseType: !22, size: 32, offset: 128)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !86, file: !28, line: 109, baseType: !22, size: 32, offset: 160)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !86, file: !28, line: 110, baseType: !22, size: 32, offset: 192)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !86, file: !28, line: 110, baseType: !22, size: 32, offset: 224)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !86, file: !28, line: 111, baseType: !94, size: 64, offset: 256)
!94 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64)
!95 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !8, line: 490, size: 768, elements: !96)
!96 = !{!97, !98, !99, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734}
!97 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !95, file: !8, line: 491, baseType: !94, size: 64)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !95, file: !8, line: 491, baseType: !94, size: 64, offset: 64)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !95, file: !8, line: 493, baseType: !100, size: 64, offset: 128)
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64)
!101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !28, line: 169, size: 2048, elements: !102)
!102 = !{!103, !104, !105, !106, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1701, !1704, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725}
!103 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !101, file: !28, line: 170, baseType: !100, size: 64)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !101, file: !28, line: 170, baseType: !100, size: 64, offset: 64)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !101, file: !28, line: 172, baseType: !56, size: 64, offset: 128)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !101, file: !28, line: 174, baseType: !107, size: 64, offset: 192)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !109, line: 49, size: 1984, elements: !110)
!109 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!110 = !{!111, !147, !148, !149, !150, !151, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !108, file: !109, line: 50, baseType: !112, size: 960)
!112 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !39, line: 130, baseType: !113)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !39, line: 117, size: 960, elements: !114)
!114 = !{!115, !116, !117, !119, !138, !142, !143, !144, !145, !146}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !113, file: !39, line: 118, baseType: !56, size: 64)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !113, file: !39, line: 118, baseType: !56, size: 64, offset: 64)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !113, file: !39, line: 119, baseType: !118, size: 64, offset: 128)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !113, file: !39, line: 120, baseType: !120, size: 64, offset: 192)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64)
!121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !39, line: 136, size: 17600, elements: !122)
!122 = !{!123, !124, !126, !129, !133, !134, !135}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !121, file: !39, line: 137, baseType: !112, size: 960)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !121, file: !39, line: 138, baseType: !125, size: 64, offset: 960)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 64)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !121, file: !39, line: 139, baseType: !127, size: 64, offset: 1024)
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64)
!128 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !39, line: 43, flags: DIFlagFwdDecl)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !121, file: !39, line: 140, baseType: !130, size: 8192, offset: 1088)
!130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 8192, elements: !131)
!131 = !{!132}
!132 = !DISubrange(count: 1024)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !121, file: !39, line: 141, baseType: !130, size: 8192, offset: 9280)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !121, file: !39, line: 148, baseType: !120, size: 64, offset: 17472)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !121, file: !39, line: 150, baseType: !136, size: 64, offset: 17536)
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64)
!137 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !39, line: 45, flags: DIFlagFwdDecl)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !113, file: !39, line: 121, baseType: !139, size: 528, offset: 256)
!139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 528, elements: !140)
!140 = !{!141}
!141 = !DISubrange(count: 66)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !113, file: !39, line: 126, baseType: !48, size: 16, offset: 784)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !113, file: !39, line: 127, baseType: !22, size: 32, offset: 800)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !113, file: !39, line: 128, baseType: !22, size: 32, offset: 832)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !113, file: !39, line: 128, baseType: !22, size: 32, offset: 864)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !113, file: !39, line: 129, baseType: !37, size: 64, offset: 896)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !108, file: !109, line: 52, baseType: !58, size: 128, offset: 960)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !108, file: !109, line: 53, baseType: !58, size: 128, offset: 1088)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !108, file: !109, line: 54, baseType: !58, size: 128, offset: 1216)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !108, file: !109, line: 55, baseType: !58, size: 128, offset: 1344)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !108, file: !109, line: 57, baseType: !152, size: 64, offset: 1472)
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 64)
!153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !154, line: 1216, size: 39680, elements: !155)
!154 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!155 = !{!156, !157, !161, !454, !457, !458, !459, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !485, !556, !984, !1209, !1212, !1501, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1523, !1524, !1525, !1526, !1527, !1535, !1602, !1609, !1610, !1617, !1618, !1619, !1620, !1621, !1622, !1623}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !153, file: !154, line: 1217, baseType: !112, size: 960)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !153, file: !154, line: 1218, baseType: !158, size: 64, offset: 960)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!159 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !160, line: 45, flags: DIFlagFwdDecl)
!160 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!161 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !153, file: !154, line: 1220, baseType: !162, size: 64, offset: 1024)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 64)
!163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !164, line: 115, size: 11392, elements: !165)
!164 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!165 = !{!166, !167, !168, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !185, !197, !211, !212, !256, !257, !260, !261, !277, !278, !279, !280, !281, !282, !283, !287, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !303, !304, !305, !306, !307, !308, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !368, !369, !370, !371, !372, !373, !374, !375, !376, !379, !382, !385, !386, !387, !388, !389, !392, !395, !398, !399, !405, !406, !407, !408, !409, !410, !412, !415, !418, !422, !442, !443}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !163, file: !164, line: 116, baseType: !112, size: 960)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !163, file: !164, line: 117, baseType: !158, size: 64, offset: 960)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !163, file: !164, line: 119, baseType: !169, size: 64, offset: 1024)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64)
!170 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !164, line: 57, flags: DIFlagFwdDecl)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !163, file: !164, line: 121, baseType: !48, size: 16, offset: 1088)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !163, file: !164, line: 121, baseType: !48, size: 16, offset: 1104)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !163, file: !164, line: 122, baseType: !22, size: 32, offset: 1120)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !163, file: !164, line: 122, baseType: !22, size: 32, offset: 1152)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !163, file: !164, line: 122, baseType: !22, size: 32, offset: 1184)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !163, file: !164, line: 123, baseType: !33, size: 512, offset: 1216)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !163, file: !164, line: 124, baseType: !162, size: 64, offset: 1728)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !163, file: !164, line: 124, baseType: !162, size: 64, offset: 1792)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !163, file: !164, line: 127, baseType: !162, size: 64, offset: 1856)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !163, file: !164, line: 127, baseType: !162, size: 64, offset: 1920)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !163, file: !164, line: 127, baseType: !162, size: 64, offset: 1984)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !163, file: !164, line: 128, baseType: !183, size: 64, offset: 2048)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!184 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !160, line: 46, flags: DIFlagFwdDecl)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !163, file: !164, line: 130, baseType: !186, size: 64, offset: 2112)
!186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 64)
!187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !164, line: 97, size: 832, elements: !188)
!188 = !{!189, !195, !196}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !187, file: !164, line: 98, baseType: !190, size: 768)
!190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 768, elements: !192)
!191 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!192 = !{!193, !194}
!193 = !DISubrange(count: 8)
!194 = !DISubrange(count: 3)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !187, file: !164, line: 99, baseType: !22, size: 32, offset: 768)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !187, file: !164, line: 99, baseType: !22, size: 32, offset: 800)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !163, file: !164, line: 131, baseType: !198, size: 64, offset: 2176)
!198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 64)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !200, line: 486, size: 1600, elements: !201)
!200 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!201 = !{!202, !203, !204, !205, !206, !207, !208, !209, !210}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !199, file: !200, line: 487, baseType: !112, size: 960)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !199, file: !200, line: 489, baseType: !58, size: 128, offset: 960)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !199, file: !200, line: 490, baseType: !58, size: 128, offset: 1088)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !199, file: !200, line: 491, baseType: !58, size: 128, offset: 1216)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !199, file: !200, line: 492, baseType: !58, size: 128, offset: 1344)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !199, file: !200, line: 494, baseType: !22, size: 32, offset: 1472)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !199, file: !200, line: 495, baseType: !22, size: 32, offset: 1504)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !199, file: !200, line: 497, baseType: !22, size: 32, offset: 1536)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !199, file: !200, line: 498, baseType: !22, size: 32, offset: 1568)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !163, file: !164, line: 132, baseType: !198, size: 64, offset: 2240)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !163, file: !164, line: 133, baseType: !213, size: 64, offset: 2304)
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !200, line: 334, size: 1728, elements: !215)
!215 = !{!216, !217, !220, !221, !222, !224, !225, !226, !229, !230, !231, !232, !233, !234, !235, !255}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !214, file: !200, line: 335, baseType: !58, size: 128)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !214, file: !200, line: 336, baseType: !218, size: 64, offset: 128)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64)
!219 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !200, line: 47, flags: DIFlagFwdDecl)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !214, file: !200, line: 338, baseType: !48, size: 16, offset: 192)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !214, file: !200, line: 338, baseType: !48, size: 16, offset: 208)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !214, file: !200, line: 339, baseType: !223, size: 32, offset: 224)
!223 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !214, file: !200, line: 340, baseType: !22, size: 32, offset: 256)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !214, file: !200, line: 342, baseType: !191, size: 32, offset: 288)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !214, file: !200, line: 343, baseType: !227, size: 96, offset: 320)
!227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 96, elements: !228)
!228 = !{!194}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !214, file: !200, line: 344, baseType: !227, size: 96, offset: 416)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !214, file: !200, line: 347, baseType: !58, size: 128, offset: 512)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !214, file: !200, line: 349, baseType: !22, size: 32, offset: 640)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !214, file: !200, line: 350, baseType: !22, size: 32, offset: 672)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !214, file: !200, line: 351, baseType: !56, size: 64, offset: 704)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !214, file: !200, line: 352, baseType: !56, size: 64, offset: 768)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !214, file: !200, line: 354, baseType: !236, size: 384, offset: 832)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !200, line: 116, baseType: !237)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !200, line: 94, size: 384, elements: !238)
!238 = !{!239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !237, file: !200, line: 96, baseType: !22, size: 32)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !237, file: !200, line: 96, baseType: !22, size: 32, offset: 32)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !237, file: !200, line: 97, baseType: !22, size: 32, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !237, file: !200, line: 97, baseType: !22, size: 32, offset: 96)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !237, file: !200, line: 99, baseType: !48, size: 16, offset: 128)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !237, file: !200, line: 100, baseType: !48, size: 16, offset: 144)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !237, file: !200, line: 102, baseType: !48, size: 16, offset: 160)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !237, file: !200, line: 105, baseType: !48, size: 16, offset: 176)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !237, file: !200, line: 108, baseType: !48, size: 16, offset: 192)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !237, file: !200, line: 109, baseType: !48, size: 16, offset: 208)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !237, file: !200, line: 111, baseType: !48, size: 16, offset: 224)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !237, file: !200, line: 112, baseType: !48, size: 16, offset: 240)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !237, file: !200, line: 114, baseType: !22, size: 32, offset: 256)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !237, file: !200, line: 114, baseType: !22, size: 32, offset: 288)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !237, file: !200, line: 115, baseType: !22, size: 32, offset: 320)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !237, file: !200, line: 115, baseType: !22, size: 32, offset: 352)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !214, file: !200, line: 355, baseType: !33, size: 512, offset: 1216)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !163, file: !164, line: 134, baseType: !56, size: 64, offset: 2368)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !163, file: !164, line: 136, baseType: !258, size: 64, offset: 2432)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 64)
!259 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !164, line: 58, flags: DIFlagFwdDecl)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !163, file: !164, line: 138, baseType: !236, size: 384, offset: 2496)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !163, file: !164, line: 139, baseType: !262, size: 64, offset: 2880)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !200, line: 80, baseType: !264)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !200, line: 72, size: 192, elements: !265)
!265 = !{!266, !273, !274, !275, !276}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !264, file: !200, line: 73, baseType: !267, size: 64)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !200, line: 59, baseType: !269)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !200, line: 56, size: 128, elements: !270)
!270 = !{!271, !272}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !269, file: !200, line: 57, baseType: !227, size: 96)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !269, file: !200, line: 58, baseType: !22, size: 32, offset: 96)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !264, file: !200, line: 74, baseType: !22, size: 32, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !264, file: !200, line: 76, baseType: !22, size: 32, offset: 96)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !264, file: !200, line: 77, baseType: !22, size: 32, offset: 128)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !264, file: !200, line: 79, baseType: !22, size: 32, offset: 160)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !163, file: !164, line: 141, baseType: !58, size: 128, offset: 2944)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !163, file: !164, line: 142, baseType: !58, size: 128, offset: 3072)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !163, file: !164, line: 143, baseType: !58, size: 128, offset: 3200)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !163, file: !164, line: 144, baseType: !58, size: 128, offset: 3328)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !163, file: !164, line: 146, baseType: !22, size: 32, offset: 3456)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !163, file: !164, line: 147, baseType: !22, size: 32, offset: 3488)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !163, file: !164, line: 150, baseType: !284, size: 64, offset: 3520)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!286 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !164, line: 50, flags: DIFlagFwdDecl)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !163, file: !164, line: 151, baseType: !288, size: 64, offset: 3584)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !163, file: !164, line: 152, baseType: !22, size: 32, offset: 3648)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !163, file: !164, line: 153, baseType: !22, size: 32, offset: 3680)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !163, file: !164, line: 156, baseType: !227, size: 96, offset: 3712)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !163, file: !164, line: 156, baseType: !227, size: 96, offset: 3808)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !163, file: !164, line: 156, baseType: !227, size: 96, offset: 3904)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !163, file: !164, line: 157, baseType: !227, size: 96, offset: 4000)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !163, file: !164, line: 158, baseType: !227, size: 96, offset: 4096)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !163, file: !164, line: 159, baseType: !227, size: 96, offset: 4192)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !163, file: !164, line: 160, baseType: !227, size: 96, offset: 4288)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !163, file: !164, line: 160, baseType: !227, size: 96, offset: 4384)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !163, file: !164, line: 161, baseType: !300, size: 128, offset: 4480)
!300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 128, elements: !301)
!301 = !{!302}
!302 = !DISubrange(count: 4)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !163, file: !164, line: 161, baseType: !300, size: 128, offset: 4608)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !163, file: !164, line: 162, baseType: !227, size: 96, offset: 4736)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !163, file: !164, line: 162, baseType: !227, size: 96, offset: 4832)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !163, file: !164, line: 163, baseType: !191, size: 32, offset: 4928)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !163, file: !164, line: 163, baseType: !191, size: 32, offset: 4960)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !163, file: !164, line: 164, baseType: !309, size: 512, offset: 4992)
!309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 512, elements: !310)
!310 = !{!302, !302}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !163, file: !164, line: 165, baseType: !309, size: 512, offset: 5504)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !163, file: !164, line: 166, baseType: !309, size: 512, offset: 6016)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !163, file: !164, line: 167, baseType: !309, size: 512, offset: 6528)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !163, file: !164, line: 176, baseType: !309, size: 512, offset: 7040)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !163, file: !164, line: 178, baseType: !223, size: 32, offset: 7552)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !163, file: !164, line: 180, baseType: !48, size: 16, offset: 7584)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !163, file: !164, line: 181, baseType: !48, size: 16, offset: 7600)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !163, file: !164, line: 183, baseType: !48, size: 16, offset: 7616)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !163, file: !164, line: 183, baseType: !48, size: 16, offset: 7632)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !163, file: !164, line: 184, baseType: !48, size: 16, offset: 7648)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !163, file: !164, line: 184, baseType: !48, size: 16, offset: 7664)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !163, file: !164, line: 185, baseType: !48, size: 16, offset: 7680)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !163, file: !164, line: 186, baseType: !48, size: 16, offset: 7696)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !163, file: !164, line: 187, baseType: !48, size: 16, offset: 7712)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !163, file: !164, line: 188, baseType: !14, size: 8, offset: 7728)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !163, file: !164, line: 189, baseType: !14, size: 8, offset: 7736)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !163, file: !164, line: 192, baseType: !22, size: 32, offset: 7744)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !163, file: !164, line: 192, baseType: !22, size: 32, offset: 7776)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !163, file: !164, line: 192, baseType: !22, size: 32, offset: 7808)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !163, file: !164, line: 192, baseType: !22, size: 32, offset: 7840)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !163, file: !164, line: 194, baseType: !22, size: 32, offset: 7872)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !163, file: !164, line: 202, baseType: !191, size: 32, offset: 7904)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !163, file: !164, line: 202, baseType: !191, size: 32, offset: 7936)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !163, file: !164, line: 202, baseType: !191, size: 32, offset: 7968)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !163, file: !164, line: 211, baseType: !191, size: 32, offset: 8000)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !163, file: !164, line: 212, baseType: !191, size: 32, offset: 8032)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !163, file: !164, line: 213, baseType: !191, size: 32, offset: 8064)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !163, file: !164, line: 214, baseType: !191, size: 32, offset: 8096)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !163, file: !164, line: 215, baseType: !191, size: 32, offset: 8128)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !163, file: !164, line: 216, baseType: !191, size: 32, offset: 8160)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !163, file: !164, line: 219, baseType: !191, size: 32, offset: 8192)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !163, file: !164, line: 220, baseType: !191, size: 32, offset: 8224)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !163, file: !164, line: 221, baseType: !191, size: 32, offset: 8256)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !163, file: !164, line: 224, baseType: !345, size: 16, offset: 8288)
!345 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !163, file: !164, line: 224, baseType: !345, size: 16, offset: 8304)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !163, file: !164, line: 226, baseType: !48, size: 16, offset: 8320)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !163, file: !164, line: 228, baseType: !14, size: 8, offset: 8336)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !163, file: !164, line: 229, baseType: !14, size: 8, offset: 8344)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !163, file: !164, line: 231, baseType: !48, size: 16, offset: 8352)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !163, file: !164, line: 232, baseType: !14, size: 8, offset: 8368)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !163, file: !164, line: 233, baseType: !14, size: 8, offset: 8376)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !163, file: !164, line: 234, baseType: !191, size: 32, offset: 8384)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !163, file: !164, line: 235, baseType: !191, size: 32, offset: 8416)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !163, file: !164, line: 237, baseType: !58, size: 128, offset: 8448)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !163, file: !164, line: 238, baseType: !58, size: 128, offset: 8576)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !163, file: !164, line: 239, baseType: !58, size: 128, offset: 8704)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !163, file: !164, line: 240, baseType: !58, size: 128, offset: 8832)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !163, file: !164, line: 242, baseType: !191, size: 32, offset: 8960)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !163, file: !164, line: 244, baseType: !48, size: 16, offset: 8992)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !163, file: !164, line: 245, baseType: !345, size: 16, offset: 9008)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !163, file: !164, line: 246, baseType: !300, size: 128, offset: 9024)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !163, file: !164, line: 248, baseType: !22, size: 32, offset: 9152)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !163, file: !164, line: 249, baseType: !22, size: 32, offset: 9184)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !163, file: !164, line: 251, baseType: !366, size: 64, offset: 9216)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!367 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !164, line: 251, flags: DIFlagFwdDecl)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !163, file: !164, line: 253, baseType: !14, size: 8, offset: 9280)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !163, file: !164, line: 254, baseType: !14, size: 8, offset: 9288)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !163, file: !164, line: 255, baseType: !48, size: 16, offset: 9296)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !163, file: !164, line: 256, baseType: !227, size: 96, offset: 9312)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !163, file: !164, line: 258, baseType: !58, size: 128, offset: 9408)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !163, file: !164, line: 259, baseType: !58, size: 128, offset: 9536)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !163, file: !164, line: 260, baseType: !58, size: 128, offset: 9664)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !163, file: !164, line: 261, baseType: !58, size: 128, offset: 9792)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !163, file: !164, line: 263, baseType: !377, size: 64, offset: 9920)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!378 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !164, line: 52, flags: DIFlagFwdDecl)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !163, file: !164, line: 264, baseType: !380, size: 64, offset: 9984)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64)
!381 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !164, line: 53, flags: DIFlagFwdDecl)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !163, file: !164, line: 265, baseType: !383, size: 64, offset: 10048)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!384 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !200, line: 46, flags: DIFlagFwdDecl)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !163, file: !164, line: 267, baseType: !14, size: 8, offset: 10112)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !163, file: !164, line: 268, baseType: !14, size: 8, offset: 10120)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !163, file: !164, line: 269, baseType: !48, size: 16, offset: 10128)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !163, file: !164, line: 270, baseType: !191, size: 32, offset: 10144)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !163, file: !164, line: 272, baseType: !390, size: 64, offset: 10176)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!391 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !164, line: 54, flags: DIFlagFwdDecl)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !163, file: !164, line: 275, baseType: !393, size: 64, offset: 10240)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !164, line: 275, flags: DIFlagFwdDecl)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !163, file: !164, line: 277, baseType: !396, size: 64, offset: 10304)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !164, line: 56, flags: DIFlagFwdDecl)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !163, file: !164, line: 277, baseType: !396, size: 64, offset: 10368)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !163, file: !164, line: 278, baseType: !400, size: 64, offset: 10432)
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !401, line: 27, baseType: !402)
!401 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !403, line: 45, baseType: !404)
!403 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!404 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !163, file: !164, line: 279, baseType: !400, size: 64, offset: 10496)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !163, file: !164, line: 280, baseType: !223, size: 32, offset: 10560)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !163, file: !164, line: 281, baseType: !223, size: 32, offset: 10592)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !163, file: !164, line: 283, baseType: !58, size: 128, offset: 10624)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !163, file: !164, line: 284, baseType: !58, size: 128, offset: 10752)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !163, file: !164, line: 285, baseType: !411, size: 64, offset: 10880)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !163, file: !164, line: 287, baseType: !413, size: 64, offset: 10944)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!414 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !164, line: 59, flags: DIFlagFwdDecl)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !163, file: !164, line: 288, baseType: !416, size: 64, offset: 11008)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!417 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !164, line: 288, flags: DIFlagFwdDecl)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !163, file: !164, line: 290, baseType: !419, size: 64, offset: 11072)
!419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 64, elements: !420)
!420 = !{!421}
!421 = !DISubrange(count: 2)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !163, file: !164, line: 291, baseType: !423, size: 64, offset: 11136)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !425, line: 65, baseType: !426)
!425 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !425, line: 50, size: 320, elements: !427)
!427 = !{!428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !426, file: !425, line: 51, baseType: !152, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !426, file: !425, line: 53, baseType: !22, size: 32, offset: 64)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !426, file: !425, line: 54, baseType: !22, size: 32, offset: 96)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !426, file: !425, line: 55, baseType: !22, size: 32, offset: 128)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !426, file: !425, line: 55, baseType: !22, size: 32, offset: 160)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !426, file: !425, line: 56, baseType: !14, size: 8, offset: 192)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !426, file: !425, line: 56, baseType: !14, size: 8, offset: 200)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !426, file: !425, line: 57, baseType: !14, size: 8, offset: 208)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !426, file: !425, line: 57, baseType: !14, size: 8, offset: 216)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !426, file: !425, line: 59, baseType: !48, size: 16, offset: 224)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !426, file: !425, line: 59, baseType: !48, size: 16, offset: 240)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !426, file: !425, line: 59, baseType: !48, size: 16, offset: 256)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !426, file: !425, line: 61, baseType: !48, size: 16, offset: 272)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !426, file: !425, line: 63, baseType: !22, size: 32, offset: 288)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !163, file: !164, line: 293, baseType: !58, size: 128, offset: 11200)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !163, file: !164, line: 294, baseType: !444, size: 64, offset: 11328)
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !164, line: 113, baseType: !446)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !164, line: 108, size: 256, elements: !447)
!447 = !{!448, !450, !451, !452, !453}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !446, file: !164, line: 109, baseType: !449, size: 64)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !446, file: !164, line: 109, baseType: !449, size: 64, offset: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !446, file: !164, line: 110, baseType: !162, size: 64, offset: 128)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !446, file: !164, line: 111, baseType: !22, size: 32, offset: 192)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !446, file: !164, line: 112, baseType: !191, size: 32, offset: 224)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !153, file: !154, line: 1221, baseType: !455, size: 64, offset: 1088)
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 64)
!456 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !154, line: 52, flags: DIFlagFwdDecl)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !153, file: !154, line: 1223, baseType: !152, size: 64, offset: 1152)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !153, file: !154, line: 1225, baseType: !58, size: 128, offset: 1216)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !153, file: !154, line: 1226, baseType: !460, size: 64, offset: 1344)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !154, line: 69, size: 320, elements: !462)
!462 = !{!463, !464, !465, !466, !467, !468, !469, !470}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !461, file: !154, line: 70, baseType: !460, size: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !461, file: !154, line: 70, baseType: !460, size: 64, offset: 64)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !461, file: !154, line: 71, baseType: !223, size: 32, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !461, file: !154, line: 71, baseType: !223, size: 32, offset: 160)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !461, file: !154, line: 72, baseType: !22, size: 32, offset: 192)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !461, file: !154, line: 73, baseType: !48, size: 16, offset: 224)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !461, file: !154, line: 73, baseType: !48, size: 16, offset: 240)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !461, file: !154, line: 74, baseType: !162, size: 64, offset: 256)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !153, file: !154, line: 1227, baseType: !162, size: 64, offset: 1408)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !153, file: !154, line: 1229, baseType: !227, size: 96, offset: 1472)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !153, file: !154, line: 1230, baseType: !227, size: 96, offset: 1568)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !153, file: !154, line: 1231, baseType: !227, size: 96, offset: 1664)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !153, file: !154, line: 1231, baseType: !227, size: 96, offset: 1760)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !153, file: !154, line: 1233, baseType: !223, size: 32, offset: 1856)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !153, file: !154, line: 1234, baseType: !22, size: 32, offset: 1888)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !153, file: !154, line: 1235, baseType: !223, size: 32, offset: 1920)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !153, file: !154, line: 1237, baseType: !48, size: 16, offset: 1952)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !153, file: !154, line: 1239, baseType: !14, size: 8, offset: 1968)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !153, file: !154, line: 1240, baseType: !482, size: 8, offset: 1976)
!482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 8, elements: !483)
!483 = !{!484}
!484 = !DISubrange(count: 1)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !153, file: !154, line: 1242, baseType: !486, size: 64, offset: 1984)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !488, line: 328, size: 3456, elements: !489)
!488 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!489 = !{!490, !491, !492, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !522, !523, !524, !527, !532, !533, !536, !540, !544, !548, !552, !553, !554, !555}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !487, file: !488, line: 329, baseType: !112, size: 960)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !487, file: !488, line: 330, baseType: !158, size: 64, offset: 960)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !487, file: !488, line: 332, baseType: !493, size: 64, offset: 1024)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !488, line: 332, flags: DIFlagFwdDecl)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !487, file: !488, line: 333, baseType: !33, size: 512, offset: 1088)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !487, file: !488, line: 335, baseType: !81, size: 64, offset: 1600)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !487, file: !488, line: 337, baseType: !258, size: 64, offset: 1664)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !487, file: !488, line: 338, baseType: !419, size: 64, offset: 1728)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !487, file: !488, line: 340, baseType: !58, size: 128, offset: 1792)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !487, file: !488, line: 340, baseType: !58, size: 128, offset: 1920)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !487, file: !488, line: 342, baseType: !22, size: 32, offset: 2048)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !487, file: !488, line: 342, baseType: !22, size: 32, offset: 2080)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !487, file: !488, line: 343, baseType: !22, size: 32, offset: 2112)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !487, file: !488, line: 345, baseType: !22, size: 32, offset: 2144)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !487, file: !488, line: 346, baseType: !22, size: 32, offset: 2176)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !487, file: !488, line: 347, baseType: !48, size: 16, offset: 2208)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !487, file: !488, line: 348, baseType: !48, size: 16, offset: 2224)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !487, file: !488, line: 349, baseType: !22, size: 32, offset: 2240)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !487, file: !488, line: 351, baseType: !22, size: 32, offset: 2272)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !487, file: !488, line: 353, baseType: !48, size: 16, offset: 2304)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !487, file: !488, line: 354, baseType: !48, size: 16, offset: 2320)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !487, file: !488, line: 355, baseType: !22, size: 32, offset: 2336)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !487, file: !488, line: 357, baseType: !514, size: 128, offset: 2368)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !515, line: 95, baseType: !516)
!515 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !515, line: 92, size: 128, elements: !517)
!517 = !{!518, !519, !520, !521}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !516, file: !515, line: 93, baseType: !191, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !516, file: !515, line: 93, baseType: !191, size: 32, offset: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !516, file: !515, line: 94, baseType: !191, size: 32, offset: 64)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !516, file: !515, line: 94, baseType: !191, size: 32, offset: 96)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !487, file: !488, line: 363, baseType: !58, size: 128, offset: 2496)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !487, file: !488, line: 363, baseType: !58, size: 128, offset: 2624)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !487, file: !488, line: 368, baseType: !525, size: 64, offset: 2752)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !488, line: 48, flags: DIFlagFwdDecl)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !487, file: !488, line: 372, baseType: !528, size: 32, offset: 2816)
!528 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !488, line: 274, baseType: !529)
!529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !488, line: 271, size: 32, elements: !530)
!530 = !{!531}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !529, file: !488, line: 273, baseType: !223, size: 32)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !487, file: !488, line: 373, baseType: !22, size: 32, offset: 2848)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !487, file: !488, line: 382, baseType: !534, size: 64, offset: 2880)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64)
!535 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !488, line: 46, flags: DIFlagFwdDecl)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !487, file: !488, line: 385, baseType: !537, size: 64, offset: 2944)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 64)
!538 = !DISubroutineType(types: !539)
!539 = !{null, !56, !191}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !487, file: !488, line: 386, baseType: !541, size: 64, offset: 3008)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = !DISubroutineType(types: !543)
!543 = !{null, !56, !288}
!544 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !487, file: !488, line: 387, baseType: !545, size: 64, offset: 3072)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 64)
!546 = !DISubroutineType(types: !547)
!547 = !{!22, !56}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !487, file: !488, line: 388, baseType: !549, size: 64, offset: 3136)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!550 = !DISubroutineType(types: !551)
!551 = !{null, !56}
!552 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !487, file: !488, line: 389, baseType: !56, size: 64, offset: 3200)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !487, file: !488, line: 389, baseType: !56, size: 64, offset: 3264)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !487, file: !488, line: 389, baseType: !56, size: 64, offset: 3328)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !487, file: !488, line: 389, baseType: !56, size: 64, offset: 3392)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !153, file: !154, line: 1244, baseType: !557, size: 64, offset: 2048)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !559, line: 200, size: 17024, elements: !560)
!559 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!560 = !{!561, !562, !563, !564, !977, !978, !979, !980, !981, !982, !983}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !558, file: !559, line: 201, baseType: !411, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !558, file: !559, line: 202, baseType: !58, size: 128, offset: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !558, file: !559, line: 203, baseType: !58, size: 128, offset: 192)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !558, file: !559, line: 206, baseType: !565, size: 64, offset: 320)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !559, line: 190, baseType: !567)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !559, line: 126, size: 2816, elements: !568)
!568 = !{!569, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !667, !668, !669, !670, !948, !952, !953, !954, !955, !956, !957, !958, !959, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !976}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !567, file: !559, line: 127, baseType: !570, size: 64)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !567, file: !559, line: 127, baseType: !570, size: 64, offset: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !567, file: !559, line: 128, baseType: !56, size: 64, offset: 128)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !567, file: !559, line: 129, baseType: !56, size: 64, offset: 192)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !567, file: !559, line: 130, baseType: !33, size: 512, offset: 256)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !567, file: !559, line: 132, baseType: !22, size: 32, offset: 768)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !567, file: !559, line: 132, baseType: !22, size: 32, offset: 800)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !567, file: !559, line: 133, baseType: !22, size: 32, offset: 832)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !567, file: !559, line: 134, baseType: !22, size: 32, offset: 864)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !567, file: !559, line: 134, baseType: !22, size: 32, offset: 896)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !567, file: !559, line: 134, baseType: !22, size: 32, offset: 928)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !567, file: !559, line: 135, baseType: !22, size: 32, offset: 960)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !567, file: !559, line: 135, baseType: !22, size: 32, offset: 992)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !567, file: !559, line: 136, baseType: !22, size: 32, offset: 1024)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !567, file: !559, line: 136, baseType: !22, size: 32, offset: 1056)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !567, file: !559, line: 137, baseType: !22, size: 32, offset: 1088)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !567, file: !559, line: 137, baseType: !22, size: 32, offset: 1120)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !567, file: !559, line: 138, baseType: !191, size: 32, offset: 1152)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !567, file: !559, line: 139, baseType: !191, size: 32, offset: 1184)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !567, file: !559, line: 139, baseType: !191, size: 32, offset: 1216)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !567, file: !559, line: 141, baseType: !48, size: 16, offset: 1248)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !567, file: !559, line: 142, baseType: !48, size: 16, offset: 1264)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !567, file: !559, line: 143, baseType: !22, size: 32, offset: 1280)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !567, file: !559, line: 144, baseType: !22, size: 32, offset: 1312)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !567, file: !559, line: 146, baseType: !595, size: 64, offset: 1344)
!595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 64)
!596 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !559, line: 114, baseType: !597)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !559, line: 99, size: 7232, elements: !598)
!598 = !{!599, !601, !602, !603, !604, !605, !606, !617, !621, !635, !644, !651, !661}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !597, file: !559, line: 100, baseType: !600, size: 64)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !597, file: !559, line: 100, baseType: !600, size: 64, offset: 64)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !597, file: !559, line: 101, baseType: !22, size: 32, offset: 128)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !597, file: !559, line: 101, baseType: !22, size: 32, offset: 160)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !597, file: !559, line: 102, baseType: !22, size: 32, offset: 192)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !597, file: !559, line: 102, baseType: !22, size: 32, offset: 224)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !597, file: !559, line: 103, baseType: !607, size: 64, offset: 256)
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 64)
!608 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !559, line: 59, baseType: !609)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !559, line: 56, size: 2112, elements: !610)
!610 = !{!611, !615, !616}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !609, file: !559, line: 57, baseType: !612, size: 2048)
!612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 2048, elements: !613)
!613 = !{!614}
!614 = !DISubrange(count: 256)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !609, file: !559, line: 58, baseType: !22, size: 32, offset: 2048)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !609, file: !559, line: 58, baseType: !22, size: 32, offset: 2080)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !597, file: !559, line: 106, baseType: !618, size: 6144, offset: 320)
!618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 6144, elements: !619)
!619 = !{!620}
!620 = !DISubrange(count: 768)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !597, file: !559, line: 107, baseType: !622, size: 64, offset: 6464)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !559, line: 97, baseType: !624)
!624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !559, line: 83, size: 8320, elements: !625)
!625 = !{!626, !627, !628, !631, !632, !633, !634}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !624, file: !559, line: 84, baseType: !618, size: 6144)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !624, file: !559, line: 87, baseType: !612, size: 2048, offset: 6144)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !624, file: !559, line: 88, baseType: !629, size: 64, offset: 8192)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !425, line: 41, flags: DIFlagFwdDecl)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !624, file: !559, line: 90, baseType: !48, size: 16, offset: 8256)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !624, file: !559, line: 92, baseType: !48, size: 16, offset: 8272)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !624, file: !559, line: 93, baseType: !48, size: 16, offset: 8288)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !624, file: !559, line: 95, baseType: !48, size: 16, offset: 8304)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !597, file: !559, line: 108, baseType: !636, size: 64, offset: 6528)
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!637 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !559, line: 66, baseType: !638)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !559, line: 61, size: 128, elements: !639)
!639 = !{!640, !641, !642, !643}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !638, file: !559, line: 62, baseType: !22, size: 32)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !638, file: !559, line: 63, baseType: !22, size: 32, offset: 32)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !638, file: !559, line: 64, baseType: !22, size: 32, offset: 64)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !638, file: !559, line: 65, baseType: !22, size: 32, offset: 96)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !597, file: !559, line: 109, baseType: !645, size: 64, offset: 6592)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!646 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !559, line: 71, baseType: !647)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !559, line: 68, size: 64, elements: !648)
!648 = !{!649, !650}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !647, file: !559, line: 69, baseType: !22, size: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !647, file: !559, line: 70, baseType: !22, size: 32, offset: 32)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !597, file: !559, line: 110, baseType: !652, size: 64, offset: 6656)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !559, line: 81, baseType: !654)
!654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !559, line: 73, size: 352, elements: !655)
!655 = !{!656, !657, !658, !659, !660}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !654, file: !559, line: 74, baseType: !227, size: 96)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !654, file: !559, line: 75, baseType: !227, size: 96, offset: 96)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !654, file: !559, line: 76, baseType: !227, size: 96, offset: 192)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !654, file: !559, line: 77, baseType: !22, size: 32, offset: 288)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !654, file: !559, line: 78, baseType: !22, size: 32, offset: 320)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !597, file: !559, line: 113, baseType: !662, size: 512, offset: 6720)
!662 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !663, line: 182, baseType: !664)
!663 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !663, line: 180, size: 512, elements: !665)
!665 = !{!666}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !664, file: !663, line: 181, baseType: !33, size: 512)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !567, file: !559, line: 148, baseType: !183, size: 64, offset: 1408)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !567, file: !559, line: 151, baseType: !152, size: 64, offset: 1472)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !567, file: !559, line: 152, baseType: !162, size: 64, offset: 1536)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !567, file: !559, line: 153, baseType: !671, size: 64, offset: 1600)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !673, line: 64, size: 19136, elements: !674)
!673 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!674 = !{!675, !676, !677, !678, !679, !680, !682, !683, !684, !685, !688, !689, !934, !935, !943, !944, !945, !946, !947}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !672, file: !673, line: 65, baseType: !112, size: 960)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !672, file: !673, line: 66, baseType: !158, size: 64, offset: 960)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !672, file: !673, line: 68, baseType: !130, size: 8192, offset: 1024)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !672, file: !673, line: 70, baseType: !22, size: 32, offset: 9216)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !672, file: !673, line: 71, baseType: !22, size: 32, offset: 9248)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !672, file: !673, line: 72, baseType: !681, size: 64, offset: 9280)
!681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 64, elements: !420)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !672, file: !673, line: 74, baseType: !191, size: 32, offset: 9344)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !672, file: !673, line: 74, baseType: !191, size: 32, offset: 9376)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !672, file: !673, line: 76, baseType: !629, size: 64, offset: 9408)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !672, file: !673, line: 77, baseType: !686, size: 64, offset: 9472)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!687 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !673, line: 77, flags: DIFlagFwdDecl)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !672, file: !673, line: 78, baseType: !258, size: 64, offset: 9536)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !672, file: !673, line: 80, baseType: !690, size: 2624, offset: 9600)
!690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !691, line: 340, size: 2624, elements: !692)
!691 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!692 = !{!693, !721, !739, !740, !741, !756, !814, !815, !914, !915, !916, !917, !923}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !690, file: !691, line: 341, baseType: !694, size: 576)
!694 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !691, line: 251, baseType: !695)
!695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !691, line: 207, size: 576, elements: !696)
!696 = !{!697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !695, file: !691, line: 208, baseType: !22, size: 32)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !695, file: !691, line: 211, baseType: !48, size: 16, offset: 32)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !695, file: !691, line: 212, baseType: !48, size: 16, offset: 48)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !695, file: !691, line: 213, baseType: !191, size: 32, offset: 64)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !695, file: !691, line: 214, baseType: !48, size: 16, offset: 96)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !695, file: !691, line: 215, baseType: !48, size: 16, offset: 112)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !695, file: !691, line: 216, baseType: !48, size: 16, offset: 128)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !695, file: !691, line: 217, baseType: !48, size: 16, offset: 144)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !695, file: !691, line: 218, baseType: !48, size: 16, offset: 160)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !695, file: !691, line: 219, baseType: !48, size: 16, offset: 176)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !695, file: !691, line: 220, baseType: !191, size: 32, offset: 192)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !695, file: !691, line: 222, baseType: !48, size: 16, offset: 224)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !695, file: !691, line: 225, baseType: !48, size: 16, offset: 240)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !695, file: !691, line: 228, baseType: !22, size: 32, offset: 256)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !695, file: !691, line: 229, baseType: !22, size: 32, offset: 288)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !695, file: !691, line: 233, baseType: !22, size: 32, offset: 320)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !695, file: !691, line: 236, baseType: !48, size: 16, offset: 352)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !695, file: !691, line: 236, baseType: !48, size: 16, offset: 368)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !695, file: !691, line: 241, baseType: !191, size: 32, offset: 384)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !695, file: !691, line: 244, baseType: !22, size: 32, offset: 416)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !695, file: !691, line: 244, baseType: !22, size: 32, offset: 448)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !695, file: !691, line: 245, baseType: !191, size: 32, offset: 480)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !695, file: !691, line: 248, baseType: !191, size: 32, offset: 512)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !695, file: !691, line: 250, baseType: !22, size: 32, offset: 544)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !690, file: !691, line: 342, baseType: !722, size: 448, offset: 576)
!722 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !691, line: 79, baseType: !723)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !691, line: 61, size: 448, elements: !724)
!724 = !{!725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !723, file: !691, line: 62, baseType: !56, size: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !723, file: !691, line: 64, baseType: !48, size: 16, offset: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !723, file: !691, line: 65, baseType: !48, size: 16, offset: 80)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !723, file: !691, line: 67, baseType: !191, size: 32, offset: 96)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !723, file: !691, line: 68, baseType: !191, size: 32, offset: 128)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !723, file: !691, line: 69, baseType: !191, size: 32, offset: 160)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !723, file: !691, line: 70, baseType: !48, size: 16, offset: 192)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !723, file: !691, line: 71, baseType: !48, size: 16, offset: 208)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !723, file: !691, line: 72, baseType: !419, size: 64, offset: 224)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !723, file: !691, line: 75, baseType: !191, size: 32, offset: 288)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !723, file: !691, line: 75, baseType: !191, size: 32, offset: 320)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !723, file: !691, line: 75, baseType: !191, size: 32, offset: 352)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !723, file: !691, line: 78, baseType: !191, size: 32, offset: 384)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !723, file: !691, line: 78, baseType: !191, size: 32, offset: 416)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !690, file: !691, line: 343, baseType: !58, size: 128, offset: 1024)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !690, file: !691, line: 344, baseType: !58, size: 128, offset: 1152)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !690, file: !691, line: 345, baseType: !742, size: 192, offset: 1280)
!742 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !691, line: 278, baseType: !743)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !691, line: 270, size: 192, elements: !744)
!744 = !{!745, !746, !747, !748, !749}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !743, file: !691, line: 271, baseType: !22, size: 32)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !743, file: !691, line: 273, baseType: !191, size: 32, offset: 32)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !743, file: !691, line: 275, baseType: !22, size: 32, offset: 64)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !743, file: !691, line: 276, baseType: !22, size: 32, offset: 96)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !743, file: !691, line: 277, baseType: !750, size: 64, offset: 128)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !691, line: 55, size: 576, elements: !752)
!752 = !{!753, !754, !755}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !751, file: !691, line: 56, baseType: !22, size: 32)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !751, file: !691, line: 57, baseType: !191, size: 32, offset: 32)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !751, file: !691, line: 58, baseType: !309, size: 512, offset: 64)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !690, file: !691, line: 346, baseType: !757, size: 384, offset: 1472)
!757 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !691, line: 268, baseType: !758)
!758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !691, line: 253, size: 384, elements: !759)
!759 = !{!760, !761, !762, !763, !764, !808, !809, !810, !811, !812, !813}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !758, file: !691, line: 254, baseType: !22, size: 32)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !758, file: !691, line: 255, baseType: !22, size: 32, offset: 32)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !758, file: !691, line: 255, baseType: !22, size: 32, offset: 64)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !758, file: !691, line: 258, baseType: !191, size: 32, offset: 96)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !758, file: !691, line: 259, baseType: !765, size: 64, offset: 128)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !691, line: 164, baseType: !767)
!767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !691, line: 108, size: 1664, elements: !768)
!768 = !{!769, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !767, file: !691, line: 109, baseType: !770, size: 64)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !767, file: !691, line: 109, baseType: !770, size: 64, offset: 64)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !767, file: !691, line: 111, baseType: !33, size: 512, offset: 128)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !767, file: !691, line: 119, baseType: !419, size: 64, offset: 640)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !767, file: !691, line: 119, baseType: !419, size: 64, offset: 704)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !767, file: !691, line: 125, baseType: !419, size: 64, offset: 768)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !767, file: !691, line: 125, baseType: !419, size: 64, offset: 832)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !767, file: !691, line: 127, baseType: !419, size: 64, offset: 896)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !767, file: !691, line: 130, baseType: !22, size: 32, offset: 960)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !767, file: !691, line: 131, baseType: !22, size: 32, offset: 992)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !767, file: !691, line: 132, baseType: !781, size: 64, offset: 1024)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !691, line: 106, baseType: !783)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !691, line: 81, size: 512, elements: !784)
!784 = !{!785, !786, !789, !790, !791, !792}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !783, file: !691, line: 82, baseType: !419, size: 64)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !783, file: !691, line: 97, baseType: !787, size: 256, offset: 64)
!787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 256, elements: !788)
!788 = !{!302, !421}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !783, file: !691, line: 102, baseType: !419, size: 64, offset: 320)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !783, file: !691, line: 102, baseType: !419, size: 64, offset: 384)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !783, file: !691, line: 104, baseType: !22, size: 32, offset: 448)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !783, file: !691, line: 105, baseType: !22, size: 32, offset: 480)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !767, file: !691, line: 135, baseType: !227, size: 96, offset: 1088)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !767, file: !691, line: 136, baseType: !191, size: 32, offset: 1184)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !767, file: !691, line: 139, baseType: !22, size: 32, offset: 1216)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !767, file: !691, line: 139, baseType: !22, size: 32, offset: 1248)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !767, file: !691, line: 139, baseType: !22, size: 32, offset: 1280)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !767, file: !691, line: 140, baseType: !227, size: 96, offset: 1312)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !767, file: !691, line: 143, baseType: !48, size: 16, offset: 1408)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !767, file: !691, line: 144, baseType: !48, size: 16, offset: 1424)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !767, file: !691, line: 145, baseType: !48, size: 16, offset: 1440)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !767, file: !691, line: 148, baseType: !48, size: 16, offset: 1456)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !767, file: !691, line: 149, baseType: !22, size: 32, offset: 1472)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !767, file: !691, line: 150, baseType: !191, size: 32, offset: 1504)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !767, file: !691, line: 152, baseType: !258, size: 64, offset: 1536)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !767, file: !691, line: 163, baseType: !191, size: 32, offset: 1600)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !767, file: !691, line: 163, baseType: !191, size: 32, offset: 1632)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !758, file: !691, line: 261, baseType: !191, size: 32, offset: 192)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !758, file: !691, line: 261, baseType: !191, size: 32, offset: 224)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !758, file: !691, line: 261, baseType: !191, size: 32, offset: 256)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !758, file: !691, line: 263, baseType: !22, size: 32, offset: 288)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !758, file: !691, line: 266, baseType: !22, size: 32, offset: 320)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !758, file: !691, line: 267, baseType: !191, size: 32, offset: 352)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !690, file: !691, line: 347, baseType: !765, size: 64, offset: 1856)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !690, file: !691, line: 348, baseType: !816, size: 64, offset: 1920)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !691, line: 205, baseType: !818)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !691, line: 186, size: 1024, elements: !819)
!819 = !{!820, !822, !823, !824, !826, !827, !828, !836, !837, !838, !912, !913}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !818, file: !691, line: 187, baseType: !821, size: 64)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !818, file: !691, line: 187, baseType: !821, size: 64, offset: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !818, file: !691, line: 189, baseType: !33, size: 512, offset: 128)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !818, file: !691, line: 191, baseType: !825, size: 64, offset: 640)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !818, file: !691, line: 193, baseType: !22, size: 32, offset: 704)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !818, file: !691, line: 193, baseType: !22, size: 32, offset: 736)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !818, file: !691, line: 195, baseType: !829, size: 64, offset: 768)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !691, line: 184, baseType: !831)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !691, line: 166, size: 320, elements: !832)
!832 = !{!833, !834, !835}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !831, file: !691, line: 180, baseType: !787, size: 256)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !831, file: !691, line: 182, baseType: !22, size: 32, offset: 256)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !831, file: !691, line: 183, baseType: !22, size: 32, offset: 288)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !818, file: !691, line: 196, baseType: !22, size: 32, offset: 832)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !818, file: !691, line: 198, baseType: !22, size: 32, offset: 864)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !818, file: !691, line: 200, baseType: !839, size: 64, offset: 896)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !425, line: 77, size: 15424, elements: !841)
!841 = !{!842, !843, !844, !847, !850, !851, !854, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !873, !874, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !906}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !840, file: !425, line: 78, baseType: !112, size: 960)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !840, file: !425, line: 80, baseType: !130, size: 8192, offset: 960)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !840, file: !425, line: 82, baseType: !845, size: 64, offset: 9152)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !425, line: 43, flags: DIFlagFwdDecl)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !840, file: !425, line: 83, baseType: !848, size: 64, offset: 9216)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !39, line: 46, flags: DIFlagFwdDecl)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !840, file: !425, line: 86, baseType: !629, size: 64, offset: 9280)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !840, file: !425, line: 87, baseType: !852, size: 64, offset: 9344)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!853 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !425, line: 44, flags: DIFlagFwdDecl)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !840, file: !425, line: 89, baseType: !855, size: 512, offset: 9408)
!855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !852, size: 512, elements: !856)
!856 = !{!193}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !840, file: !425, line: 90, baseType: !48, size: 16, offset: 9920)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !840, file: !425, line: 90, baseType: !48, size: 16, offset: 9936)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !840, file: !425, line: 92, baseType: !48, size: 16, offset: 9952)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !840, file: !425, line: 92, baseType: !48, size: 16, offset: 9968)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !840, file: !425, line: 93, baseType: !48, size: 16, offset: 9984)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !840, file: !425, line: 93, baseType: !48, size: 16, offset: 10000)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !840, file: !425, line: 94, baseType: !22, size: 32, offset: 10016)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !840, file: !425, line: 97, baseType: !48, size: 16, offset: 10048)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !840, file: !425, line: 97, baseType: !48, size: 16, offset: 10064)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !840, file: !425, line: 98, baseType: !48, size: 16, offset: 10080)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !840, file: !425, line: 98, baseType: !48, size: 16, offset: 10096)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !840, file: !425, line: 99, baseType: !48, size: 16, offset: 10112)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !840, file: !425, line: 99, baseType: !48, size: 16, offset: 10128)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !840, file: !425, line: 100, baseType: !223, size: 32, offset: 10144)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !840, file: !425, line: 101, baseType: !872, size: 64, offset: 10176)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !840, file: !425, line: 103, baseType: !136, size: 64, offset: 10240)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !840, file: !425, line: 104, baseType: !875, size: 64, offset: 10304)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !39, line: 159, size: 448, elements: !877)
!877 = !{!878, !880, !881, !883, !884, !886}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !876, file: !39, line: 161, baseType: !879, size: 64)
!879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !223, size: 64, elements: !420)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !876, file: !39, line: 162, baseType: !879, size: 64, offset: 64)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !876, file: !39, line: 163, baseType: !882, size: 32, offset: 128)
!882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 32, elements: !420)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !876, file: !39, line: 164, baseType: !882, size: 32, offset: 160)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !876, file: !39, line: 165, baseType: !885, size: 128, offset: 192)
!885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !872, size: 128, elements: !420)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !876, file: !39, line: 166, baseType: !887, size: 128, offset: 320)
!887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !848, size: 128, elements: !420)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !840, file: !425, line: 107, baseType: !191, size: 32, offset: 10368)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !840, file: !425, line: 108, baseType: !22, size: 32, offset: 10400)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !840, file: !425, line: 109, baseType: !48, size: 16, offset: 10432)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !840, file: !425, line: 110, baseType: !48, size: 16, offset: 10448)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !840, file: !425, line: 113, baseType: !22, size: 32, offset: 10464)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !840, file: !425, line: 113, baseType: !22, size: 32, offset: 10496)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !840, file: !425, line: 114, baseType: !14, size: 8, offset: 10528)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !840, file: !425, line: 114, baseType: !14, size: 8, offset: 10536)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !840, file: !425, line: 115, baseType: !48, size: 16, offset: 10544)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !840, file: !425, line: 116, baseType: !300, size: 128, offset: 10560)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !840, file: !425, line: 119, baseType: !191, size: 32, offset: 10688)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !840, file: !425, line: 119, baseType: !191, size: 32, offset: 10720)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !840, file: !425, line: 122, baseType: !662, size: 512, offset: 10752)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !840, file: !425, line: 123, baseType: !14, size: 8, offset: 11264)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !840, file: !425, line: 125, baseType: !903, size: 56, offset: 11272)
!903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 56, elements: !904)
!904 = !{!905}
!905 = !DISubrange(count: 7)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !840, file: !425, line: 126, baseType: !907, size: 4096, offset: 11328)
!907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !908, size: 4096, elements: !856)
!908 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !425, line: 69, baseType: !909)
!909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !425, line: 67, size: 512, elements: !910)
!910 = !{!911}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !909, file: !425, line: 68, baseType: !33, size: 512)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !818, file: !691, line: 201, baseType: !191, size: 32, offset: 960)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !818, file: !691, line: 204, baseType: !22, size: 32, offset: 992)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !690, file: !691, line: 350, baseType: !58, size: 128, offset: 1984)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !690, file: !691, line: 351, baseType: !22, size: 32, offset: 2112)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !690, file: !691, line: 351, baseType: !22, size: 32, offset: 2144)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !690, file: !691, line: 353, baseType: !918, size: 64, offset: 2176)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !691, line: 297, baseType: !920)
!920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !691, line: 295, size: 2048, elements: !921)
!921 = !{!922}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !920, file: !691, line: 296, baseType: !612, size: 2048)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !690, file: !691, line: 355, baseType: !924, size: 384, offset: 2240)
!924 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !691, line: 338, baseType: !925)
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !691, line: 322, size: 384, elements: !926)
!926 = !{!927, !928, !929, !930, !931, !932, !933}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !925, file: !691, line: 323, baseType: !22, size: 32)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !925, file: !691, line: 325, baseType: !48, size: 16, offset: 32)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !925, file: !691, line: 326, baseType: !48, size: 16, offset: 48)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !925, file: !691, line: 331, baseType: !58, size: 128, offset: 64)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !925, file: !691, line: 334, baseType: !58, size: 128, offset: 192)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !925, file: !691, line: 335, baseType: !22, size: 32, offset: 320)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !925, file: !691, line: 337, baseType: !22, size: 32, offset: 352)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !672, file: !673, line: 81, baseType: !56, size: 64, offset: 12224)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !672, file: !673, line: 85, baseType: !936, size: 6208, offset: 12288)
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !673, line: 55, size: 6208, elements: !937)
!937 = !{!938, !939, !940, !941, !942}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !936, file: !673, line: 56, baseType: !618, size: 6144)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !936, file: !673, line: 58, baseType: !48, size: 16, offset: 6144)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !936, file: !673, line: 59, baseType: !48, size: 16, offset: 6160)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !936, file: !673, line: 60, baseType: !48, size: 16, offset: 6176)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !936, file: !673, line: 61, baseType: !48, size: 16, offset: 6192)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !672, file: !673, line: 86, baseType: !22, size: 32, offset: 18496)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !672, file: !673, line: 88, baseType: !22, size: 32, offset: 18528)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !672, file: !673, line: 90, baseType: !22, size: 32, offset: 18560)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !672, file: !673, line: 94, baseType: !22, size: 32, offset: 18592)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !672, file: !673, line: 100, baseType: !662, size: 512, offset: 18624)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !567, file: !559, line: 154, baseType: !949, size: 64, offset: 1664)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !951, line: 264, flags: DIFlagFwdDecl)
!951 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!952 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !567, file: !559, line: 156, baseType: !629, size: 64, offset: 1728)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !567, file: !559, line: 158, baseType: !191, size: 32, offset: 1792)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !567, file: !559, line: 159, baseType: !191, size: 32, offset: 1824)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !567, file: !559, line: 162, baseType: !570, size: 64, offset: 1856)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !567, file: !559, line: 162, baseType: !570, size: 64, offset: 1920)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !567, file: !559, line: 162, baseType: !570, size: 64, offset: 1984)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !567, file: !559, line: 164, baseType: !58, size: 128, offset: 2048)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !567, file: !559, line: 166, baseType: !960, size: 64, offset: 2176)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !559, line: 51, flags: DIFlagFwdDecl)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !567, file: !559, line: 167, baseType: !56, size: 64, offset: 2240)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !567, file: !559, line: 168, baseType: !191, size: 32, offset: 2304)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !567, file: !559, line: 170, baseType: !191, size: 32, offset: 2336)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !567, file: !559, line: 170, baseType: !191, size: 32, offset: 2368)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !567, file: !559, line: 171, baseType: !191, size: 32, offset: 2400)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !567, file: !559, line: 173, baseType: !56, size: 64, offset: 2432)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !567, file: !559, line: 175, baseType: !22, size: 32, offset: 2496)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !567, file: !559, line: 176, baseType: !22, size: 32, offset: 2528)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !567, file: !559, line: 179, baseType: !22, size: 32, offset: 2560)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !567, file: !559, line: 180, baseType: !191, size: 32, offset: 2592)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !567, file: !559, line: 183, baseType: !22, size: 32, offset: 2624)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !567, file: !559, line: 185, baseType: !14, size: 8, offset: 2656)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !567, file: !559, line: 186, baseType: !975, size: 24, offset: 2664)
!975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 24, elements: !228)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !567, file: !559, line: 189, baseType: !58, size: 128, offset: 2688)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !558, file: !559, line: 207, baseType: !130, size: 8192, offset: 384)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !558, file: !559, line: 208, baseType: !130, size: 8192, offset: 8576)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !558, file: !559, line: 210, baseType: !22, size: 32, offset: 16768)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !558, file: !559, line: 210, baseType: !22, size: 32, offset: 16800)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !558, file: !559, line: 211, baseType: !22, size: 32, offset: 16832)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !558, file: !559, line: 211, baseType: !22, size: 32, offset: 16864)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !558, file: !559, line: 212, baseType: !514, size: 128, offset: 16896)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !153, file: !154, line: 1246, baseType: !985, size: 64, offset: 2112)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !154, line: 1067, size: 5184, elements: !987)
!987 = !{!988, !1028, !1029, !1044, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1066, !1082, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1192}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !986, file: !154, line: 1068, baseType: !989, size: 64)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!990 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !154, line: 934, baseType: !991)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !154, line: 925, size: 576, elements: !992)
!992 = !{!993, !1010, !1011, !1012, !1013, !1014, !1027}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !991, file: !154, line: 926, baseType: !994, size: 320)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !154, line: 830, baseType: !995)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !154, line: 813, size: 320, elements: !996)
!996 = !{!997, !1000, !1003, !1004, !1007, !1008, !1009}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !995, file: !154, line: 814, baseType: !998, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !154, line: 51, flags: DIFlagFwdDecl)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !995, file: !154, line: 815, baseType: !1001, size: 64, offset: 64)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !154, line: 815, flags: DIFlagFwdDecl)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !995, file: !154, line: 818, baseType: !56, size: 64, offset: 128)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !995, file: !154, line: 819, baseType: !1005, size: 32, offset: 192)
!1005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1006, size: 32, elements: !301)
!1006 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !995, file: !154, line: 822, baseType: !22, size: 32, offset: 224)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !995, file: !154, line: 826, baseType: !22, size: 32, offset: 256)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !995, file: !154, line: 829, baseType: !22, size: 32, offset: 288)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !991, file: !154, line: 928, baseType: !48, size: 16, offset: 320)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !991, file: !154, line: 928, baseType: !48, size: 16, offset: 336)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !991, file: !154, line: 929, baseType: !22, size: 32, offset: 352)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !991, file: !154, line: 930, baseType: !872, size: 64, offset: 384)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !991, file: !154, line: 931, baseType: !1015, size: 64, offset: 448)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64)
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !1017, line: 59, size: 128, elements: !1018)
!1017 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1018 = !{!1019, !1025, !1026}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !1016, file: !1017, line: 60, baseType: !1020, size: 64)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !1017, line: 54, size: 64, elements: !1022)
!1022 = !{!1023, !1024}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !1021, file: !1017, line: 55, baseType: !22, size: 32)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1021, file: !1017, line: 56, baseType: !191, size: 32, offset: 32)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !1016, file: !1017, line: 61, baseType: !22, size: 32, offset: 64)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1016, file: !1017, line: 62, baseType: !22, size: 32, offset: 96)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !991, file: !154, line: 933, baseType: !56, size: 64, offset: 512)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !986, file: !154, line: 1069, baseType: !989, size: 64, offset: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !986, file: !154, line: 1070, baseType: !1030, size: 64, offset: 128)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !154, line: 916, baseType: !1032)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !154, line: 891, size: 704, elements: !1033)
!1033 = !{!1034, !1035, !1036, !1038, !1039, !1040, !1041, !1042, !1043}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1032, file: !154, line: 892, baseType: !994, size: 320)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1032, file: !154, line: 896, baseType: !22, size: 32, offset: 320)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1032, file: !154, line: 900, baseType: !1037, size: 96, offset: 352)
!1037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 96, elements: !228)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1032, file: !154, line: 903, baseType: !191, size: 32, offset: 448)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1032, file: !154, line: 906, baseType: !22, size: 32, offset: 480)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1032, file: !154, line: 909, baseType: !191, size: 32, offset: 512)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1032, file: !154, line: 912, baseType: !191, size: 32, offset: 544)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1032, file: !154, line: 914, baseType: !162, size: 64, offset: 576)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1032, file: !154, line: 915, baseType: !56, size: 64, offset: 640)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !986, file: !154, line: 1071, baseType: !1045, size: 64, offset: 192)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !154, line: 920, baseType: !1047)
!1047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !154, line: 918, size: 320, elements: !1048)
!1048 = !{!1049}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1047, file: !154, line: 919, baseType: !994, size: 320)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !986, file: !154, line: 1075, baseType: !191, size: 32, offset: 256)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !986, file: !154, line: 1077, baseType: !191, size: 32, offset: 288)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !986, file: !154, line: 1078, baseType: !191, size: 32, offset: 320)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !986, file: !154, line: 1079, baseType: !48, size: 16, offset: 352)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !986, file: !154, line: 1082, baseType: !48, size: 16, offset: 368)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !986, file: !154, line: 1085, baseType: !14, size: 8, offset: 384)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !986, file: !154, line: 1086, baseType: !14, size: 8, offset: 392)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !986, file: !154, line: 1087, baseType: !14, size: 8, offset: 400)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !986, file: !154, line: 1088, baseType: !14, size: 8, offset: 408)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !986, file: !154, line: 1090, baseType: !191, size: 32, offset: 416)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !986, file: !154, line: 1093, baseType: !48, size: 16, offset: 448)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !986, file: !154, line: 1096, baseType: !14, size: 8, offset: 464)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !986, file: !154, line: 1098, baseType: !1063, size: 40, offset: 472)
!1063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 40, elements: !1064)
!1064 = !{!1065}
!1065 = !DISubrange(count: 5)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !986, file: !154, line: 1101, baseType: !1067, size: 832, offset: 512)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !154, line: 836, size: 832, elements: !1068)
!1068 = !{!1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1067, file: !154, line: 837, baseType: !994, size: 320)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1067, file: !154, line: 839, baseType: !48, size: 16, offset: 320)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1067, file: !154, line: 839, baseType: !48, size: 16, offset: 336)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1067, file: !154, line: 842, baseType: !48, size: 16, offset: 352)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1067, file: !154, line: 842, baseType: !48, size: 16, offset: 368)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1067, file: !154, line: 843, baseType: !882, size: 32, offset: 384)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1067, file: !154, line: 845, baseType: !22, size: 32, offset: 416)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1067, file: !154, line: 847, baseType: !56, size: 64, offset: 448)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1067, file: !154, line: 848, baseType: !839, size: 64, offset: 512)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1067, file: !154, line: 849, baseType: !839, size: 64, offset: 576)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1067, file: !154, line: 850, baseType: !839, size: 64, offset: 640)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1067, file: !154, line: 851, baseType: !227, size: 96, offset: 704)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1067, file: !154, line: 852, baseType: !191, size: 32, offset: 800)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !986, file: !154, line: 1104, baseType: !1083, size: 1344, offset: 1344)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !154, line: 867, size: 1344, elements: !1084)
!1084 = !{!1085, !1086, !1087, !1088, !1089, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1083, file: !154, line: 868, baseType: !48, size: 16)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1083, file: !154, line: 869, baseType: !48, size: 16, offset: 16)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1083, file: !154, line: 870, baseType: !48, size: 16, offset: 32)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1083, file: !154, line: 871, baseType: !48, size: 16, offset: 48)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1083, file: !154, line: 873, baseType: !1090, size: 896, offset: 64)
!1090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1091, size: 896, elements: !904)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !154, line: 864, baseType: !1092)
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !154, line: 859, size: 128, elements: !1093)
!1093 = !{!1094, !1095, !1096, !1097, !1098, !1099}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1092, file: !154, line: 860, baseType: !48, size: 16)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1092, file: !154, line: 861, baseType: !48, size: 16, offset: 16)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1092, file: !154, line: 861, baseType: !48, size: 16, offset: 32)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1092, file: !154, line: 861, baseType: !48, size: 16, offset: 48)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1092, file: !154, line: 862, baseType: !22, size: 32, offset: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1092, file: !154, line: 863, baseType: !191, size: 32, offset: 96)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1083, file: !154, line: 874, baseType: !56, size: 64, offset: 960)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1083, file: !154, line: 876, baseType: !191, size: 32, offset: 1024)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1083, file: !154, line: 876, baseType: !191, size: 32, offset: 1056)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1083, file: !154, line: 878, baseType: !22, size: 32, offset: 1088)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1083, file: !154, line: 879, baseType: !22, size: 32, offset: 1120)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1083, file: !154, line: 881, baseType: !22, size: 32, offset: 1152)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1083, file: !154, line: 881, baseType: !22, size: 32, offset: 1184)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1083, file: !154, line: 883, baseType: !152, size: 64, offset: 1216)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1083, file: !154, line: 884, baseType: !162, size: 64, offset: 1280)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !986, file: !154, line: 1107, baseType: !191, size: 32, offset: 2688)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !986, file: !154, line: 1110, baseType: !191, size: 32, offset: 2720)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !986, file: !154, line: 1113, baseType: !48, size: 16, offset: 2752)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !986, file: !154, line: 1113, baseType: !48, size: 16, offset: 2768)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !986, file: !154, line: 1116, baseType: !14, size: 8, offset: 2784)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !986, file: !154, line: 1117, baseType: !482, size: 8, offset: 2792)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !986, file: !154, line: 1120, baseType: !48, size: 16, offset: 2800)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !986, file: !154, line: 1121, baseType: !191, size: 32, offset: 2816)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !986, file: !154, line: 1122, baseType: !191, size: 32, offset: 2848)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !986, file: !154, line: 1123, baseType: !191, size: 32, offset: 2880)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !986, file: !154, line: 1124, baseType: !191, size: 32, offset: 2912)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !986, file: !154, line: 1125, baseType: !191, size: 32, offset: 2944)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !986, file: !154, line: 1126, baseType: !191, size: 32, offset: 2976)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !986, file: !154, line: 1127, baseType: !191, size: 32, offset: 3008)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !986, file: !154, line: 1128, baseType: !191, size: 32, offset: 3040)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !986, file: !154, line: 1129, baseType: !191, size: 32, offset: 3072)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !986, file: !154, line: 1130, baseType: !191, size: 32, offset: 3104)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !986, file: !154, line: 1131, baseType: !48, size: 16, offset: 3136)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !986, file: !154, line: 1132, baseType: !14, size: 8, offset: 3152)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !986, file: !154, line: 1133, baseType: !14, size: 8, offset: 3160)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !986, file: !154, line: 1134, baseType: !975, size: 24, offset: 3168)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !986, file: !154, line: 1135, baseType: !14, size: 8, offset: 3192)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !986, file: !154, line: 1138, baseType: !162, size: 64, offset: 3200)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !986, file: !154, line: 1139, baseType: !14, size: 8, offset: 3264)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !986, file: !154, line: 1140, baseType: !14, size: 8, offset: 3272)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !986, file: !154, line: 1141, baseType: !14, size: 8, offset: 3280)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !986, file: !154, line: 1142, baseType: !14, size: 8, offset: 3288)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !986, file: !154, line: 1143, baseType: !14, size: 8, offset: 3296)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !986, file: !154, line: 1144, baseType: !1138, size: 64, offset: 3304)
!1138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 64, elements: !856)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !986, file: !154, line: 1145, baseType: !1138, size: 64, offset: 3368)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !986, file: !154, line: 1148, baseType: !14, size: 8, offset: 3432)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !986, file: !154, line: 1149, baseType: !14, size: 8, offset: 3440)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !986, file: !154, line: 1152, baseType: !14, size: 8, offset: 3448)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !986, file: !154, line: 1152, baseType: !14, size: 8, offset: 3456)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !986, file: !154, line: 1153, baseType: !14, size: 8, offset: 3464)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !986, file: !154, line: 1154, baseType: !48, size: 16, offset: 3472)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !986, file: !154, line: 1154, baseType: !48, size: 16, offset: 3488)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !986, file: !154, line: 1155, baseType: !48, size: 16, offset: 3504)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !986, file: !154, line: 1155, baseType: !48, size: 16, offset: 3520)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !986, file: !154, line: 1156, baseType: !14, size: 8, offset: 3536)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !986, file: !154, line: 1157, baseType: !14, size: 8, offset: 3544)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !986, file: !154, line: 1159, baseType: !14, size: 8, offset: 3552)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !986, file: !154, line: 1160, baseType: !14, size: 8, offset: 3560)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !986, file: !154, line: 1161, baseType: !14, size: 8, offset: 3568)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !986, file: !154, line: 1162, baseType: !14, size: 8, offset: 3576)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !986, file: !154, line: 1165, baseType: !22, size: 32, offset: 3584)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !986, file: !154, line: 1166, baseType: !22, size: 32, offset: 3616)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !986, file: !154, line: 1167, baseType: !22, size: 32, offset: 3648)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !986, file: !154, line: 1168, baseType: !22, size: 32, offset: 3680)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !986, file: !154, line: 1171, baseType: !48, size: 16, offset: 3712)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !986, file: !154, line: 1171, baseType: !48, size: 16, offset: 3728)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !986, file: !154, line: 1172, baseType: !22, size: 32, offset: 3744)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !986, file: !154, line: 1173, baseType: !191, size: 32, offset: 3776)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !986, file: !154, line: 1174, baseType: !191, size: 32, offset: 3808)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !986, file: !154, line: 1177, baseType: !1165, size: 1024, offset: 3840)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !154, line: 963, size: 1024, elements: !1166)
!1166 = !{!1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1190, !1191}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1165, file: !154, line: 965, baseType: !22, size: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1165, file: !154, line: 968, baseType: !191, size: 32, offset: 32)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1165, file: !154, line: 971, baseType: !191, size: 32, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1165, file: !154, line: 974, baseType: !191, size: 32, offset: 96)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1165, file: !154, line: 977, baseType: !227, size: 96, offset: 128)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1165, file: !154, line: 979, baseType: !227, size: 96, offset: 224)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1165, file: !154, line: 982, baseType: !22, size: 32, offset: 320)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1165, file: !154, line: 987, baseType: !419, size: 64, offset: 352)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1165, file: !154, line: 989, baseType: !191, size: 32, offset: 416)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1165, file: !154, line: 994, baseType: !22, size: 32, offset: 448)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1165, file: !154, line: 995, baseType: !22, size: 32, offset: 480)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1165, file: !154, line: 997, baseType: !14, size: 8, offset: 512)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1165, file: !154, line: 998, baseType: !903, size: 56, offset: 520)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1165, file: !154, line: 1000, baseType: !191, size: 32, offset: 576)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1165, file: !154, line: 1003, baseType: !419, size: 64, offset: 608)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1165, file: !154, line: 1006, baseType: !22, size: 32, offset: 672)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1165, file: !154, line: 1009, baseType: !191, size: 32, offset: 704)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1165, file: !154, line: 1012, baseType: !419, size: 64, offset: 736)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1165, file: !154, line: 1015, baseType: !419, size: 64, offset: 800)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1165, file: !154, line: 1018, baseType: !22, size: 32, offset: 864)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1165, file: !154, line: 1019, baseType: !1188, size: 64, offset: 896)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !154, line: 63, flags: DIFlagFwdDecl)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1165, file: !154, line: 1023, baseType: !191, size: 32, offset: 960)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1165, file: !154, line: 1024, baseType: !22, size: 32, offset: 992)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !986, file: !154, line: 1179, baseType: !1193, size: 320, offset: 4864)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !154, line: 1043, size: 320, elements: !1194)
!1194 = !{!1195, !1196, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1193, file: !154, line: 1044, baseType: !14, size: 8)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1193, file: !154, line: 1045, baseType: !1197, size: 16, offset: 8)
!1197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 16, elements: !420)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1193, file: !154, line: 1048, baseType: !14, size: 8, offset: 24)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1193, file: !154, line: 1049, baseType: !191, size: 32, offset: 32)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1193, file: !154, line: 1049, baseType: !191, size: 32, offset: 64)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1193, file: !154, line: 1052, baseType: !191, size: 32, offset: 96)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1193, file: !154, line: 1052, baseType: !191, size: 32, offset: 128)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1193, file: !154, line: 1053, baseType: !14, size: 8, offset: 160)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1193, file: !154, line: 1054, baseType: !975, size: 24, offset: 168)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1193, file: !154, line: 1057, baseType: !191, size: 32, offset: 192)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1193, file: !154, line: 1057, baseType: !191, size: 32, offset: 224)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1193, file: !154, line: 1060, baseType: !191, size: 32, offset: 256)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1193, file: !154, line: 1060, baseType: !191, size: 32, offset: 288)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !153, file: !154, line: 1247, baseType: !1210, size: 64, offset: 2176)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64)
!1211 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !154, line: 60, flags: DIFlagFwdDecl)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !153, file: !154, line: 1251, baseType: !1213, size: 31872, offset: 2240)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !154, line: 403, size: 31872, elements: !1214)
!1214 = !{!1215, !1290, !1310, !1319, !1339, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1477, !1478, !1479, !1483, !1499, !1500}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1213, file: !154, line: 404, baseType: !1216, size: 1984)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !154, line: 259, size: 1984, elements: !1217)
!1217 = !{!1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1235, !1285}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1216, file: !154, line: 260, baseType: !14, size: 8)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1216, file: !154, line: 263, baseType: !14, size: 8, offset: 8)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1216, file: !154, line: 266, baseType: !14, size: 8, offset: 16)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1216, file: !154, line: 267, baseType: !14, size: 8, offset: 24)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1216, file: !154, line: 269, baseType: !14, size: 8, offset: 32)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1216, file: !154, line: 270, baseType: !14, size: 8, offset: 40)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1216, file: !154, line: 276, baseType: !14, size: 8, offset: 48)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1216, file: !154, line: 279, baseType: !14, size: 8, offset: 56)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1216, file: !154, line: 280, baseType: !48, size: 16, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1216, file: !154, line: 280, baseType: !48, size: 16, offset: 80)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1216, file: !154, line: 281, baseType: !191, size: 32, offset: 96)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1216, file: !154, line: 284, baseType: !14, size: 8, offset: 128)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1216, file: !154, line: 285, baseType: !14, size: 8, offset: 136)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1216, file: !154, line: 287, baseType: !1232, size: 48, offset: 144)
!1232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 48, elements: !1233)
!1233 = !{!1234}
!1234 = !DISubrange(count: 6)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1216, file: !154, line: 290, baseType: !1236, size: 1280, offset: 192)
!1236 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !663, line: 174, baseType: !1237)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !663, line: 166, size: 1280, elements: !1238)
!1238 = !{!1239, !1240, !1241, !1242, !1243, !1244, !1245, !1284}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1237, file: !663, line: 167, baseType: !22, size: 32)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1237, file: !663, line: 167, baseType: !22, size: 32, offset: 32)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1237, file: !663, line: 168, baseType: !33, size: 512, offset: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1237, file: !663, line: 169, baseType: !33, size: 512, offset: 576)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1237, file: !663, line: 170, baseType: !191, size: 32, offset: 1088)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1237, file: !663, line: 171, baseType: !191, size: 32, offset: 1120)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1237, file: !663, line: 172, baseType: !1246, size: 64, offset: 1152)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !663, line: 72, size: 3072, elements: !1248)
!1248 = !{!1249, !1250, !1251, !1252, !1253, !1254, !1255, !1280, !1281, !1282, !1283}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1247, file: !663, line: 73, baseType: !22, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1247, file: !663, line: 73, baseType: !22, size: 32, offset: 32)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1247, file: !663, line: 74, baseType: !22, size: 32, offset: 64)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1247, file: !663, line: 75, baseType: !22, size: 32, offset: 96)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1247, file: !663, line: 77, baseType: !514, size: 128, offset: 128)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1247, file: !663, line: 77, baseType: !514, size: 128, offset: 256)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1247, file: !663, line: 79, baseType: !1256, size: 2304, offset: 384)
!1256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1257, size: 2304, elements: !301)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !663, line: 67, baseType: !1258)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !663, line: 55, size: 576, elements: !1259)
!1259 = !{!1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1276, !1277, !1278, !1279}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1258, file: !663, line: 56, baseType: !48, size: 16)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1258, file: !663, line: 56, baseType: !48, size: 16, offset: 16)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1258, file: !663, line: 58, baseType: !191, size: 32, offset: 32)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1258, file: !663, line: 59, baseType: !191, size: 32, offset: 64)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1258, file: !663, line: 59, baseType: !191, size: 32, offset: 96)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1258, file: !663, line: 60, baseType: !419, size: 64, offset: 128)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1258, file: !663, line: 60, baseType: !419, size: 64, offset: 192)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1258, file: !663, line: 61, baseType: !1268, size: 64, offset: 256)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !663, line: 47, baseType: !1270)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !663, line: 44, size: 96, elements: !1271)
!1271 = !{!1272, !1273, !1274, !1275}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1270, file: !663, line: 45, baseType: !191, size: 32)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1270, file: !663, line: 45, baseType: !191, size: 32, offset: 32)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1270, file: !663, line: 46, baseType: !48, size: 16, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1270, file: !663, line: 46, baseType: !48, size: 16, offset: 80)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1258, file: !663, line: 62, baseType: !1268, size: 64, offset: 320)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1258, file: !663, line: 64, baseType: !1268, size: 64, offset: 384)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1258, file: !663, line: 65, baseType: !419, size: 64, offset: 448)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1258, file: !663, line: 66, baseType: !419, size: 64, offset: 512)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1247, file: !663, line: 80, baseType: !227, size: 96, offset: 2688)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1247, file: !663, line: 80, baseType: !227, size: 96, offset: 2784)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1247, file: !663, line: 81, baseType: !227, size: 96, offset: 2880)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1247, file: !663, line: 83, baseType: !227, size: 96, offset: 2976)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1237, file: !663, line: 173, baseType: !56, size: 64, offset: 1216)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1216, file: !154, line: 291, baseType: !1286, size: 512, offset: 1472)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !663, line: 178, baseType: !1287)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !663, line: 176, size: 512, elements: !1288)
!1288 = !{!1289}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1287, file: !663, line: 177, baseType: !33, size: 512)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1213, file: !154, line: 406, baseType: !1291, size: 64, offset: 1984)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !154, line: 80, size: 1472, elements: !1293)
!1293 = !{!1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1292, file: !154, line: 81, baseType: !56, size: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1292, file: !154, line: 82, baseType: !56, size: 64, offset: 64)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1292, file: !154, line: 83, baseType: !223, size: 32, offset: 128)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1292, file: !154, line: 84, baseType: !223, size: 32, offset: 160)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1292, file: !154, line: 86, baseType: !223, size: 32, offset: 192)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1292, file: !154, line: 87, baseType: !223, size: 32, offset: 224)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1292, file: !154, line: 88, baseType: !223, size: 32, offset: 256)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1292, file: !154, line: 89, baseType: !223, size: 32, offset: 288)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1292, file: !154, line: 90, baseType: !223, size: 32, offset: 320)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1292, file: !154, line: 91, baseType: !223, size: 32, offset: 352)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1292, file: !154, line: 92, baseType: !223, size: 32, offset: 384)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1292, file: !154, line: 93, baseType: !223, size: 32, offset: 416)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1292, file: !154, line: 95, baseType: !1307, size: 1024, offset: 448)
!1307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 1024, elements: !1308)
!1308 = !{!1309}
!1309 = !DISubrange(count: 128)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1213, file: !154, line: 407, baseType: !1311, size: 64, offset: 2048)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !154, line: 98, size: 1216, elements: !1313)
!1313 = !{!1314, !1315, !1316, !1317, !1318}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1312, file: !154, line: 100, baseType: !56, size: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1312, file: !154, line: 101, baseType: !56, size: 64, offset: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1312, file: !154, line: 103, baseType: !223, size: 32, offset: 128)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1312, file: !154, line: 104, baseType: !223, size: 32, offset: 160)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1312, file: !154, line: 106, baseType: !1307, size: 1024, offset: 192)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1213, file: !154, line: 408, baseType: !1320, size: 512, offset: 2112)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !154, line: 109, size: 512, elements: !1321)
!1321 = !{!1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1320, file: !154, line: 111, baseType: !22, size: 32)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1320, file: !154, line: 112, baseType: !22, size: 32, offset: 32)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1320, file: !154, line: 115, baseType: !22, size: 32, offset: 64)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1320, file: !154, line: 116, baseType: !22, size: 32, offset: 96)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1320, file: !154, line: 117, baseType: !22, size: 32, offset: 128)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1320, file: !154, line: 118, baseType: !22, size: 32, offset: 160)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1320, file: !154, line: 119, baseType: !22, size: 32, offset: 192)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1320, file: !154, line: 120, baseType: !22, size: 32, offset: 224)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1320, file: !154, line: 121, baseType: !22, size: 32, offset: 256)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1320, file: !154, line: 122, baseType: !22, size: 32, offset: 288)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1320, file: !154, line: 125, baseType: !22, size: 32, offset: 320)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1320, file: !154, line: 126, baseType: !22, size: 32, offset: 352)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1320, file: !154, line: 127, baseType: !48, size: 16, offset: 384)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1320, file: !154, line: 128, baseType: !48, size: 16, offset: 400)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1320, file: !154, line: 129, baseType: !22, size: 32, offset: 416)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1320, file: !154, line: 130, baseType: !22, size: 32, offset: 448)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1320, file: !154, line: 131, baseType: !22, size: 32, offset: 480)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1213, file: !154, line: 409, baseType: !1340, size: 576, offset: 2624)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !154, line: 134, size: 576, elements: !1341)
!1341 = !{!1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1340, file: !154, line: 135, baseType: !22, size: 32)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1340, file: !154, line: 136, baseType: !22, size: 32, offset: 32)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1340, file: !154, line: 137, baseType: !22, size: 32, offset: 64)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1340, file: !154, line: 138, baseType: !22, size: 32, offset: 96)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1340, file: !154, line: 139, baseType: !22, size: 32, offset: 128)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1340, file: !154, line: 140, baseType: !22, size: 32, offset: 160)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1340, file: !154, line: 141, baseType: !22, size: 32, offset: 192)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1340, file: !154, line: 142, baseType: !22, size: 32, offset: 224)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1340, file: !154, line: 143, baseType: !191, size: 32, offset: 256)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1340, file: !154, line: 144, baseType: !22, size: 32, offset: 288)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1340, file: !154, line: 145, baseType: !22, size: 32, offset: 320)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1340, file: !154, line: 147, baseType: !22, size: 32, offset: 352)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1340, file: !154, line: 148, baseType: !22, size: 32, offset: 384)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1340, file: !154, line: 149, baseType: !22, size: 32, offset: 416)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1340, file: !154, line: 150, baseType: !22, size: 32, offset: 448)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1340, file: !154, line: 151, baseType: !22, size: 32, offset: 480)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1340, file: !154, line: 152, baseType: !37, size: 64, offset: 512)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1213, file: !154, line: 411, baseType: !22, size: 32, offset: 3200)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1213, file: !154, line: 411, baseType: !22, size: 32, offset: 3232)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1213, file: !154, line: 411, baseType: !22, size: 32, offset: 3264)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1213, file: !154, line: 412, baseType: !191, size: 32, offset: 3296)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1213, file: !154, line: 413, baseType: !22, size: 32, offset: 3328)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1213, file: !154, line: 413, baseType: !22, size: 32, offset: 3360)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1213, file: !154, line: 415, baseType: !22, size: 32, offset: 3392)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1213, file: !154, line: 415, baseType: !22, size: 32, offset: 3424)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1213, file: !154, line: 416, baseType: !48, size: 16, offset: 3456)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1213, file: !154, line: 416, baseType: !48, size: 16, offset: 3472)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1213, file: !154, line: 418, baseType: !191, size: 32, offset: 3488)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1213, file: !154, line: 418, baseType: !191, size: 32, offset: 3520)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1213, file: !154, line: 421, baseType: !191, size: 32, offset: 3552)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1213, file: !154, line: 421, baseType: !191, size: 32, offset: 3584)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1213, file: !154, line: 421, baseType: !191, size: 32, offset: 3616)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1213, file: !154, line: 425, baseType: !48, size: 16, offset: 3648)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1213, file: !154, line: 425, baseType: !48, size: 16, offset: 3664)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1213, file: !154, line: 425, baseType: !48, size: 16, offset: 3680)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1213, file: !154, line: 426, baseType: !48, size: 16, offset: 3696)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1213, file: !154, line: 428, baseType: !48, size: 16, offset: 3712)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1213, file: !154, line: 428, baseType: !48, size: 16, offset: 3728)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1213, file: !154, line: 431, baseType: !22, size: 32, offset: 3744)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1213, file: !154, line: 433, baseType: !48, size: 16, offset: 3776)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1213, file: !154, line: 435, baseType: !48, size: 16, offset: 3792)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1213, file: !154, line: 437, baseType: !48, size: 16, offset: 3808)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1213, file: !154, line: 439, baseType: !48, size: 16, offset: 3824)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1213, file: !154, line: 441, baseType: !48, size: 16, offset: 3840)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1213, file: !154, line: 443, baseType: !48, size: 16, offset: 3856)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1213, file: !154, line: 449, baseType: !22, size: 32, offset: 3872)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1213, file: !154, line: 453, baseType: !22, size: 32, offset: 3904)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1213, file: !154, line: 458, baseType: !48, size: 16, offset: 3936)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1213, file: !154, line: 462, baseType: !48, size: 16, offset: 3952)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1213, file: !154, line: 467, baseType: !22, size: 32, offset: 3968)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1213, file: !154, line: 467, baseType: !22, size: 32, offset: 4000)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1213, file: !154, line: 469, baseType: !48, size: 16, offset: 4032)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1213, file: !154, line: 469, baseType: !48, size: 16, offset: 4048)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1213, file: !154, line: 469, baseType: !48, size: 16, offset: 4064)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1213, file: !154, line: 469, baseType: !48, size: 16, offset: 4080)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1213, file: !154, line: 474, baseType: !48, size: 16, offset: 4096)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1213, file: !154, line: 475, baseType: !14, size: 8, offset: 4112)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1213, file: !154, line: 476, baseType: !14, size: 8, offset: 4120)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1213, file: !154, line: 481, baseType: !22, size: 32, offset: 4128)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1213, file: !154, line: 486, baseType: !22, size: 32, offset: 4160)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1213, file: !154, line: 491, baseType: !22, size: 32, offset: 4192)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1213, file: !154, line: 496, baseType: !48, size: 16, offset: 4224)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1213, file: !154, line: 498, baseType: !48, size: 16, offset: 4240)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1213, file: !154, line: 501, baseType: !48, size: 16, offset: 4256)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1213, file: !154, line: 502, baseType: !48, size: 16, offset: 4272)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1213, file: !154, line: 508, baseType: !48, size: 16, offset: 4288)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1213, file: !154, line: 513, baseType: !48, size: 16, offset: 4304)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1213, file: !154, line: 515, baseType: !48, size: 16, offset: 4320)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1213, file: !154, line: 515, baseType: !48, size: 16, offset: 4336)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1213, file: !154, line: 519, baseType: !514, size: 128, offset: 4352)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1213, file: !154, line: 519, baseType: !514, size: 128, offset: 4480)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1213, file: !154, line: 520, baseType: !1414, size: 128, offset: 4608)
!1414 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !515, line: 89, baseType: !1415)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !515, line: 86, size: 128, elements: !1416)
!1416 = !{!1417, !1418, !1419, !1420}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1415, file: !515, line: 87, baseType: !22, size: 32)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1415, file: !515, line: 87, baseType: !22, size: 32, offset: 32)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1415, file: !515, line: 88, baseType: !22, size: 32, offset: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1415, file: !515, line: 88, baseType: !22, size: 32, offset: 96)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1213, file: !154, line: 523, baseType: !58, size: 128, offset: 4736)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1213, file: !154, line: 524, baseType: !48, size: 16, offset: 4864)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1213, file: !154, line: 527, baseType: !48, size: 16, offset: 4880)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1213, file: !154, line: 532, baseType: !191, size: 32, offset: 4896)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1213, file: !154, line: 532, baseType: !191, size: 32, offset: 4928)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1213, file: !154, line: 534, baseType: !191, size: 32, offset: 4960)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1213, file: !154, line: 538, baseType: !191, size: 32, offset: 4992)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1213, file: !154, line: 542, baseType: !22, size: 32, offset: 5024)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1213, file: !154, line: 545, baseType: !191, size: 32, offset: 5056)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1213, file: !154, line: 545, baseType: !191, size: 32, offset: 5088)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1213, file: !154, line: 545, baseType: !191, size: 32, offset: 5120)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1213, file: !154, line: 548, baseType: !191, size: 32, offset: 5152)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1213, file: !154, line: 551, baseType: !48, size: 16, offset: 5184)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1213, file: !154, line: 551, baseType: !48, size: 16, offset: 5200)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1213, file: !154, line: 551, baseType: !48, size: 16, offset: 5216)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1213, file: !154, line: 551, baseType: !48, size: 16, offset: 5232)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1213, file: !154, line: 552, baseType: !48, size: 16, offset: 5248)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1213, file: !154, line: 552, baseType: !48, size: 16, offset: 5264)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1213, file: !154, line: 553, baseType: !191, size: 32, offset: 5280)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1213, file: !154, line: 553, baseType: !191, size: 32, offset: 5312)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1213, file: !154, line: 554, baseType: !48, size: 16, offset: 5344)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1213, file: !154, line: 554, baseType: !48, size: 16, offset: 5360)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1213, file: !154, line: 555, baseType: !191, size: 32, offset: 5376)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1213, file: !154, line: 555, baseType: !191, size: 32, offset: 5408)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1213, file: !154, line: 558, baseType: !130, size: 8192, offset: 5440)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1213, file: !154, line: 561, baseType: !22, size: 32, offset: 13632)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1213, file: !154, line: 562, baseType: !48, size: 16, offset: 13664)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1213, file: !154, line: 562, baseType: !48, size: 16, offset: 13680)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1213, file: !154, line: 565, baseType: !618, size: 6144, offset: 13696)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1213, file: !154, line: 568, baseType: !300, size: 128, offset: 19840)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1213, file: !154, line: 569, baseType: !300, size: 128, offset: 19968)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1213, file: !154, line: 572, baseType: !14, size: 8, offset: 20096)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1213, file: !154, line: 573, baseType: !14, size: 8, offset: 20104)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1213, file: !154, line: 574, baseType: !14, size: 8, offset: 20112)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1213, file: !154, line: 575, baseType: !1063, size: 40, offset: 20120)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1213, file: !154, line: 578, baseType: !22, size: 32, offset: 20160)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1213, file: !154, line: 579, baseType: !48, size: 16, offset: 20192)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1213, file: !154, line: 580, baseType: !48, size: 16, offset: 20208)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1213, file: !154, line: 581, baseType: !191, size: 32, offset: 20224)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1213, file: !154, line: 582, baseType: !191, size: 32, offset: 20256)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1213, file: !154, line: 585, baseType: !48, size: 16, offset: 20288)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1213, file: !154, line: 585, baseType: !48, size: 16, offset: 20304)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1213, file: !154, line: 586, baseType: !191, size: 32, offset: 20320)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1213, file: !154, line: 589, baseType: !48, size: 16, offset: 20352)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1213, file: !154, line: 589, baseType: !48, size: 16, offset: 20368)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1213, file: !154, line: 590, baseType: !22, size: 32, offset: 20384)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1213, file: !154, line: 593, baseType: !48, size: 16, offset: 20416)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1213, file: !154, line: 593, baseType: !48, size: 16, offset: 20432)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1213, file: !154, line: 594, baseType: !48, size: 16, offset: 20448)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1213, file: !154, line: 594, baseType: !48, size: 16, offset: 20464)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1213, file: !154, line: 595, baseType: !191, size: 32, offset: 20480)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1213, file: !154, line: 596, baseType: !191, size: 32, offset: 20512)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1213, file: !154, line: 597, baseType: !1474, size: 64, offset: 20544)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64)
!1475 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1476, line: 44, flags: DIFlagFwdDecl)
!1476 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1213, file: !154, line: 600, baseType: !22, size: 32, offset: 20608)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1213, file: !154, line: 601, baseType: !191, size: 32, offset: 20640)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1213, file: !154, line: 604, baseType: !1480, size: 256, offset: 20672)
!1480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 256, elements: !1481)
!1481 = !{!1482}
!1482 = !DISubrange(count: 32)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1213, file: !154, line: 607, baseType: !1484, size: 10880, offset: 20928)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !154, line: 364, size: 10880, elements: !1485)
!1485 = !{!1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1484, file: !154, line: 365, baseType: !1216, size: 1984)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1484, file: !154, line: 367, baseType: !130, size: 8192, offset: 1984)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1484, file: !154, line: 369, baseType: !48, size: 16, offset: 10176)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1484, file: !154, line: 369, baseType: !48, size: 16, offset: 10192)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1484, file: !154, line: 370, baseType: !48, size: 16, offset: 10208)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1484, file: !154, line: 370, baseType: !48, size: 16, offset: 10224)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1484, file: !154, line: 372, baseType: !191, size: 32, offset: 10240)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1484, file: !154, line: 373, baseType: !191, size: 32, offset: 10272)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1484, file: !154, line: 375, baseType: !975, size: 24, offset: 10304)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1484, file: !154, line: 376, baseType: !14, size: 8, offset: 10328)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1484, file: !154, line: 378, baseType: !14, size: 8, offset: 10336)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1484, file: !154, line: 379, baseType: !975, size: 24, offset: 10344)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1484, file: !154, line: 381, baseType: !33, size: 512, offset: 10368)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1213, file: !154, line: 609, baseType: !22, size: 32, offset: 31808)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1213, file: !154, line: 610, baseType: !22, size: 32, offset: 31840)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !153, file: !154, line: 1252, baseType: !1502, size: 256, offset: 34112)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !154, line: 158, size: 256, elements: !1503)
!1503 = !{!1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1502, file: !154, line: 159, baseType: !22, size: 32)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1502, file: !154, line: 160, baseType: !191, size: 32, offset: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1502, file: !154, line: 161, baseType: !191, size: 32, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1502, file: !154, line: 162, baseType: !191, size: 32, offset: 96)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1502, file: !154, line: 163, baseType: !22, size: 32, offset: 128)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1502, file: !154, line: 164, baseType: !48, size: 16, offset: 160)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1502, file: !154, line: 165, baseType: !48, size: 16, offset: 176)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1502, file: !154, line: 166, baseType: !191, size: 32, offset: 192)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1502, file: !154, line: 167, baseType: !191, size: 32, offset: 224)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !153, file: !154, line: 1254, baseType: !58, size: 128, offset: 34368)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !153, file: !154, line: 1255, baseType: !58, size: 128, offset: 34496)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !153, file: !154, line: 1257, baseType: !56, size: 64, offset: 34624)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !153, file: !154, line: 1258, baseType: !56, size: 64, offset: 34688)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !153, file: !154, line: 1259, baseType: !56, size: 64, offset: 34752)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !153, file: !154, line: 1260, baseType: !56, size: 64, offset: 34816)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !153, file: !154, line: 1262, baseType: !56, size: 64, offset: 34880)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !153, file: !154, line: 1265, baseType: !1521, size: 64, offset: 34944)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1522 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !154, line: 1265, flags: DIFlagFwdDecl)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !153, file: !154, line: 1266, baseType: !48, size: 16, offset: 35008)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !153, file: !154, line: 1267, baseType: !48, size: 16, offset: 35024)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !153, file: !154, line: 1270, baseType: !22, size: 32, offset: 35040)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !153, file: !154, line: 1271, baseType: !58, size: 128, offset: 35072)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !153, file: !154, line: 1274, baseType: !1528, size: 128, offset: 35200)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !154, line: 650, size: 128, elements: !1529)
!1529 = !{!1530, !1531, !1532, !1533, !1534}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1528, file: !154, line: 651, baseType: !227, size: 96)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1528, file: !154, line: 652, baseType: !14, size: 8, offset: 96)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1528, file: !154, line: 652, baseType: !14, size: 8, offset: 104)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1528, file: !154, line: 652, baseType: !14, size: 8, offset: 112)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1528, file: !154, line: 652, baseType: !14, size: 8, offset: 120)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !153, file: !154, line: 1275, baseType: !1536, size: 1472, offset: 35328)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !154, line: 676, size: 1472, elements: !1537)
!1537 = !{!1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1550, !1560, !1561, !1562, !1563, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1536, file: !154, line: 679, baseType: !1528, size: 128)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1536, file: !154, line: 680, baseType: !48, size: 16, offset: 128)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1536, file: !154, line: 680, baseType: !48, size: 16, offset: 144)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1536, file: !154, line: 680, baseType: !48, size: 16, offset: 160)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1536, file: !154, line: 680, baseType: !48, size: 16, offset: 176)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1536, file: !154, line: 681, baseType: !48, size: 16, offset: 192)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1536, file: !154, line: 681, baseType: !48, size: 16, offset: 208)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1536, file: !154, line: 681, baseType: !48, size: 16, offset: 224)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1536, file: !154, line: 681, baseType: !48, size: 16, offset: 240)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1536, file: !154, line: 682, baseType: !48, size: 16, offset: 256)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1536, file: !154, line: 682, baseType: !1549, size: 48, offset: 272)
!1549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 48, elements: !228)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1536, file: !154, line: 685, baseType: !1551, size: 192, offset: 320)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !154, line: 633, size: 192, elements: !1552)
!1552 = !{!1553, !1554, !1555, !1556, !1557, !1558, !1559}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1551, file: !154, line: 634, baseType: !48, size: 16)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1551, file: !154, line: 634, baseType: !48, size: 16, offset: 16)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1551, file: !154, line: 635, baseType: !48, size: 16, offset: 32)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1551, file: !154, line: 635, baseType: !48, size: 16, offset: 48)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1551, file: !154, line: 636, baseType: !191, size: 32, offset: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1551, file: !154, line: 636, baseType: !191, size: 32, offset: 96)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1551, file: !154, line: 637, baseType: !1474, size: 64, offset: 128)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1536, file: !154, line: 686, baseType: !48, size: 16, offset: 512)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1536, file: !154, line: 686, baseType: !48, size: 16, offset: 528)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1536, file: !154, line: 687, baseType: !191, size: 32, offset: 544)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1536, file: !154, line: 688, baseType: !1564, size: 448, offset: 576)
!1564 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !154, line: 674, baseType: !1565)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !154, line: 659, size: 448, elements: !1566)
!1566 = !{!1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1565, file: !154, line: 660, baseType: !191, size: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1565, file: !154, line: 661, baseType: !191, size: 32, offset: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1565, file: !154, line: 662, baseType: !191, size: 32, offset: 64)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1565, file: !154, line: 663, baseType: !191, size: 32, offset: 96)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1565, file: !154, line: 664, baseType: !191, size: 32, offset: 128)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1565, file: !154, line: 665, baseType: !191, size: 32, offset: 160)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1565, file: !154, line: 666, baseType: !191, size: 32, offset: 192)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1565, file: !154, line: 667, baseType: !191, size: 32, offset: 224)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1565, file: !154, line: 668, baseType: !191, size: 32, offset: 256)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1565, file: !154, line: 669, baseType: !191, size: 32, offset: 288)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1565, file: !154, line: 670, baseType: !22, size: 32, offset: 320)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1565, file: !154, line: 671, baseType: !191, size: 32, offset: 352)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1565, file: !154, line: 672, baseType: !191, size: 32, offset: 384)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1565, file: !154, line: 673, baseType: !48, size: 16, offset: 416)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1565, file: !154, line: 673, baseType: !48, size: 16, offset: 432)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1536, file: !154, line: 692, baseType: !191, size: 32, offset: 1024)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1536, file: !154, line: 697, baseType: !191, size: 32, offset: 1056)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1536, file: !154, line: 703, baseType: !22, size: 32, offset: 1088)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1536, file: !154, line: 704, baseType: !48, size: 16, offset: 1120)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1536, file: !154, line: 704, baseType: !48, size: 16, offset: 1136)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1536, file: !154, line: 705, baseType: !48, size: 16, offset: 1152)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1536, file: !154, line: 706, baseType: !48, size: 16, offset: 1168)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1536, file: !154, line: 707, baseType: !48, size: 16, offset: 1184)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1536, file: !154, line: 708, baseType: !48, size: 16, offset: 1200)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1536, file: !154, line: 709, baseType: !48, size: 16, offset: 1216)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1536, file: !154, line: 709, baseType: !48, size: 16, offset: 1232)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1536, file: !154, line: 709, baseType: !48, size: 16, offset: 1248)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1536, file: !154, line: 709, baseType: !48, size: 16, offset: 1264)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1536, file: !154, line: 710, baseType: !48, size: 16, offset: 1280)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1536, file: !154, line: 711, baseType: !48, size: 16, offset: 1296)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1536, file: !154, line: 712, baseType: !191, size: 32, offset: 1312)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1536, file: !154, line: 713, baseType: !191, size: 32, offset: 1344)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1536, file: !154, line: 713, baseType: !191, size: 32, offset: 1376)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1536, file: !154, line: 713, baseType: !191, size: 32, offset: 1408)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1536, file: !154, line: 713, baseType: !191, size: 32, offset: 1440)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !153, file: !154, line: 1278, baseType: !1603, size: 64, offset: 36800)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !154, line: 1197, size: 64, elements: !1604)
!1604 = !{!1605, !1606, !1607, !1608}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1603, file: !154, line: 1199, baseType: !191, size: 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1603, file: !154, line: 1200, baseType: !14, size: 8, offset: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1603, file: !154, line: 1201, baseType: !14, size: 8, offset: 40)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1603, file: !154, line: 1202, baseType: !48, size: 16, offset: 48)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !153, file: !154, line: 1281, baseType: !258, size: 64, offset: 36864)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !153, file: !154, line: 1284, baseType: !1611, size: 192, offset: 36928)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !154, line: 1208, size: 192, elements: !1612)
!1612 = !{!1613, !1614, !1615, !1616}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1611, file: !154, line: 1209, baseType: !227, size: 96)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1611, file: !154, line: 1210, baseType: !22, size: 32, offset: 96)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1611, file: !154, line: 1210, baseType: !22, size: 32, offset: 128)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1611, file: !154, line: 1210, baseType: !22, size: 32, offset: 160)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !153, file: !154, line: 1287, baseType: !671, size: 64, offset: 37120)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !153, file: !154, line: 1289, baseType: !400, size: 64, offset: 37184)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !153, file: !154, line: 1290, baseType: !400, size: 64, offset: 37248)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !153, file: !154, line: 1293, baseType: !1236, size: 1280, offset: 37312)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !153, file: !154, line: 1294, baseType: !1286, size: 512, offset: 38592)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !153, file: !154, line: 1295, baseType: !662, size: 512, offset: 39104)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !153, file: !154, line: 1298, baseType: !1624, size: 64, offset: 39616)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 64)
!1625 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !154, line: 1298, flags: DIFlagFwdDecl)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !108, file: !109, line: 58, baseType: !152, size: 64, offset: 1536)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !108, file: !109, line: 60, baseType: !22, size: 32, offset: 1600)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !108, file: !109, line: 61, baseType: !22, size: 32, offset: 1632)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !108, file: !109, line: 63, baseType: !48, size: 16, offset: 1664)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !108, file: !109, line: 64, baseType: !48, size: 16, offset: 1680)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !108, file: !109, line: 65, baseType: !48, size: 16, offset: 1696)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !108, file: !109, line: 66, baseType: !48, size: 16, offset: 1712)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !108, file: !109, line: 67, baseType: !48, size: 16, offset: 1728)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !108, file: !109, line: 68, baseType: !48, size: 16, offset: 1744)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !108, file: !109, line: 69, baseType: !48, size: 16, offset: 1760)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !108, file: !109, line: 70, baseType: !48, size: 16, offset: 1776)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !108, file: !109, line: 71, baseType: !48, size: 16, offset: 1792)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !108, file: !109, line: 73, baseType: !48, size: 16, offset: 1808)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !108, file: !109, line: 74, baseType: !48, size: 16, offset: 1824)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !108, file: !109, line: 76, baseType: !48, size: 16, offset: 1840)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !108, file: !109, line: 78, baseType: !94, size: 64, offset: 1856)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !108, file: !109, line: 79, baseType: !56, size: 64, offset: 1920)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !101, file: !28, line: 175, baseType: !107, size: 64, offset: 256)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !101, file: !28, line: 176, baseType: !33, size: 512, offset: 320)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !101, file: !28, line: 178, baseType: !48, size: 16, offset: 832)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !101, file: !28, line: 178, baseType: !48, size: 16, offset: 848)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !101, file: !28, line: 178, baseType: !48, size: 16, offset: 864)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !101, file: !28, line: 178, baseType: !48, size: 16, offset: 880)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !101, file: !28, line: 179, baseType: !48, size: 16, offset: 896)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !101, file: !28, line: 180, baseType: !48, size: 16, offset: 912)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !101, file: !28, line: 181, baseType: !48, size: 16, offset: 928)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !101, file: !28, line: 182, baseType: !48, size: 16, offset: 944)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !101, file: !28, line: 183, baseType: !48, size: 16, offset: 960)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !101, file: !28, line: 184, baseType: !48, size: 16, offset: 976)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !101, file: !28, line: 185, baseType: !48, size: 16, offset: 992)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !101, file: !28, line: 186, baseType: !48, size: 16, offset: 1008)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !101, file: !28, line: 188, baseType: !22, size: 32, offset: 1024)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !101, file: !28, line: 190, baseType: !48, size: 16, offset: 1056)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !101, file: !28, line: 191, baseType: !48, size: 16, offset: 1072)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !101, file: !28, line: 194, baseType: !1661, size: 64, offset: 1088)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !8, line: 421, size: 960, elements: !1663)
!1663 = !{!1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1697, !1698, !1699, !1700}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1662, file: !8, line: 422, baseType: !1661, size: 64)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1662, file: !8, line: 422, baseType: !1661, size: 64, offset: 64)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1662, file: !8, line: 424, baseType: !48, size: 16, offset: 128)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1662, file: !8, line: 425, baseType: !48, size: 16, offset: 144)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1662, file: !8, line: 426, baseType: !22, size: 32, offset: 160)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1662, file: !8, line: 426, baseType: !22, size: 32, offset: 192)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !1662, file: !8, line: 427, baseType: !681, size: 64, offset: 224)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !1662, file: !8, line: 428, baseType: !1232, size: 48, offset: 288)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !1662, file: !8, line: 431, baseType: !14, size: 8, offset: 336)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1662, file: !8, line: 432, baseType: !14, size: 8, offset: 344)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !1662, file: !8, line: 435, baseType: !48, size: 16, offset: 352)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !1662, file: !8, line: 436, baseType: !48, size: 16, offset: 368)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !1662, file: !8, line: 437, baseType: !22, size: 32, offset: 384)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !1662, file: !8, line: 437, baseType: !22, size: 32, offset: 416)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !1662, file: !8, line: 438, baseType: !1679, size: 64, offset: 448)
!1679 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !1662, file: !8, line: 439, baseType: !22, size: 32, offset: 512)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !1662, file: !8, line: 439, baseType: !22, size: 32, offset: 544)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !1662, file: !8, line: 442, baseType: !48, size: 16, offset: 576)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !1662, file: !8, line: 442, baseType: !48, size: 16, offset: 592)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1662, file: !8, line: 442, baseType: !48, size: 16, offset: 608)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !1662, file: !8, line: 442, baseType: !48, size: 16, offset: 624)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !1662, file: !8, line: 443, baseType: !48, size: 16, offset: 640)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !1662, file: !8, line: 446, baseType: !48, size: 16, offset: 656)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !1662, file: !8, line: 449, baseType: !12, size: 64, offset: 704)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !1662, file: !8, line: 452, baseType: !1690, size: 64, offset: 768)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 64)
!1691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !8, line: 463, size: 128, elements: !1692)
!1692 = !{!1693, !1694, !1695, !1696}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !1691, file: !8, line: 464, baseType: !22, size: 32)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !1691, file: !8, line: 465, baseType: !191, size: 32, offset: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !1691, file: !8, line: 466, baseType: !191, size: 32, offset: 64)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !1691, file: !8, line: 467, baseType: !191, size: 32, offset: 96)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !1662, file: !8, line: 455, baseType: !48, size: 16, offset: 832)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !1662, file: !8, line: 456, baseType: !48, size: 16, offset: 848)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1662, file: !8, line: 457, baseType: !22, size: 32, offset: 864)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1662, file: !8, line: 458, baseType: !56, size: 64, offset: 896)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !101, file: !28, line: 196, baseType: !1702, size: 64, offset: 1152)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64)
!1703 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !28, line: 55, flags: DIFlagFwdDecl)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !101, file: !28, line: 198, baseType: !1705, size: 64, offset: 1216)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !8, line: 398, size: 448, elements: !1707)
!1707 = !{!1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1706, file: !8, line: 399, baseType: !1705, size: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1706, file: !8, line: 399, baseType: !1705, size: 64, offset: 64)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !1706, file: !8, line: 400, baseType: !22, size: 32, offset: 128)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1706, file: !8, line: 401, baseType: !22, size: 32, offset: 160)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1706, file: !8, line: 402, baseType: !22, size: 32, offset: 192)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !1706, file: !8, line: 403, baseType: !22, size: 32, offset: 224)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1706, file: !8, line: 404, baseType: !22, size: 32, offset: 256)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1706, file: !8, line: 405, baseType: !22, size: 32, offset: 288)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1706, file: !8, line: 407, baseType: !56, size: 64, offset: 320)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !1706, file: !8, line: 414, baseType: !56, size: 64, offset: 384)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !101, file: !28, line: 200, baseType: !22, size: 32, offset: 1280)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !101, file: !28, line: 200, baseType: !22, size: 32, offset: 1312)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !101, file: !28, line: 201, baseType: !56, size: 64, offset: 1344)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !101, file: !28, line: 203, baseType: !58, size: 128, offset: 1408)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !101, file: !28, line: 204, baseType: !58, size: 128, offset: 1536)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !101, file: !28, line: 205, baseType: !58, size: 128, offset: 1664)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !101, file: !28, line: 207, baseType: !58, size: 128, offset: 1792)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !101, file: !28, line: 208, baseType: !58, size: 128, offset: 1920)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !95, file: !8, line: 495, baseType: !1679, size: 64, offset: 192)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !95, file: !8, line: 496, baseType: !22, size: 32, offset: 256)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !95, file: !8, line: 497, baseType: !56, size: 64, offset: 320)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !95, file: !8, line: 499, baseType: !1679, size: 64, offset: 384)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !95, file: !8, line: 500, baseType: !1679, size: 64, offset: 448)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !95, file: !8, line: 502, baseType: !1679, size: 64, offset: 512)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !95, file: !8, line: 503, baseType: !1679, size: 64, offset: 576)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !95, file: !8, line: 504, baseType: !1679, size: 64, offset: 640)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !95, file: !8, line: 505, baseType: !22, size: 32, offset: 704)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !27, file: !28, line: 343, baseType: !58, size: 128, offset: 1024)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !27, file: !28, line: 344, baseType: !26, size: 64, offset: 1152)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !27, file: !28, line: 345, baseType: !1738, size: 64, offset: 1216)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 64)
!1739 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !109, line: 46, flags: DIFlagFwdDecl)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !27, file: !28, line: 346, baseType: !48, size: 16, offset: 1280)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !27, file: !28, line: 346, baseType: !1549, size: 48, offset: 1296)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !9, file: !8, line: 524, baseType: !1743, size: 64, offset: 320)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1744 = !DISubroutineType(types: !1745)
!1745 = !{!1006, !23, !26}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !9, file: !8, line: 530, baseType: !1747, size: 64, offset: 384)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64)
!1748 = !DISubroutineType(types: !1749)
!1749 = !{!22, !23, !26, !1750}
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 64)
!1751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1662)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !9, file: !8, line: 531, baseType: !1753, size: 64, offset: 448)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 64)
!1754 = !DISubroutineType(types: !1755)
!1755 = !{null, !23, !26}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !9, file: !8, line: 532, baseType: !1747, size: 64, offset: 512)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !9, file: !8, line: 536, baseType: !1758, size: 64, offset: 576)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!1759 = !DISubroutineType(types: !1760)
!1760 = !{!22, !23}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !9, file: !8, line: 539, baseType: !1753, size: 64, offset: 640)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !9, file: !8, line: 542, baseType: !81, size: 64, offset: 704)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !9, file: !8, line: 545, baseType: !43, size: 64, offset: 768)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !9, file: !8, line: 549, baseType: !1765, size: 64, offset: 832)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64)
!1766 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !25, line: 333, baseType: !1767)
!1767 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !25, line: 39, flags: DIFlagFwdDecl)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !9, file: !8, line: 552, baseType: !58, size: 128, offset: 896)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !9, file: !8, line: 555, baseType: !1770, size: 64, offset: 1024)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 64)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !28, line: 281, size: 1088, elements: !1772)
!1772 = !{!1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1771, file: !28, line: 282, baseType: !1770, size: 64)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1771, file: !28, line: 282, baseType: !1770, size: 64, offset: 64)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !1771, file: !28, line: 284, baseType: !58, size: 128, offset: 128)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !1771, file: !28, line: 285, baseType: !58, size: 128, offset: 256)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1771, file: !28, line: 287, baseType: !33, size: 512, offset: 384)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !1771, file: !28, line: 288, baseType: !48, size: 16, offset: 896)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !1771, file: !28, line: 289, baseType: !48, size: 16, offset: 912)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1771, file: !28, line: 291, baseType: !48, size: 16, offset: 928)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !1771, file: !28, line: 292, baseType: !48, size: 16, offset: 944)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1771, file: !28, line: 295, baseType: !1758, size: 64, offset: 960)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !1771, file: !28, line: 296, baseType: !56, size: 64, offset: 1024)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !9, file: !8, line: 559, baseType: !56, size: 64, offset: 1088)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !9, file: !8, line: 560, baseType: !1786, size: 64, offset: 1152)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 64)
!1787 = !DISubroutineType(types: !1788)
!1788 = !{!22, !23, !69}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !9, file: !8, line: 563, baseType: !1790, size: 256, offset: 1216)
!1790 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !25, line: 436, baseType: !1791)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !25, line: 430, size: 256, elements: !1792)
!1792 = !{!1793, !1794, !1797, !1813}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1791, file: !25, line: 431, baseType: !56, size: 64)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !1791, file: !25, line: 432, baseType: !1795, size: 64, offset: 64)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !25, line: 417, baseType: !82)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !1791, file: !25, line: 433, baseType: !1798, size: 64, offset: 128)
!1798 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !25, line: 408, baseType: !1799)
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 64)
!1800 = !DISubroutineType(types: !1801)
!1801 = !{!22, !23, !73, !1802, !1804}
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1803 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !25, line: 38, flags: DIFlagFwdDecl)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !25, line: 348, baseType: !1806)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !25, line: 337, size: 256, elements: !1807)
!1807 = !{!1808, !1809, !1810, !1811, !1812}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1806, file: !25, line: 339, baseType: !56, size: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1806, file: !25, line: 342, baseType: !1802, size: 64, offset: 64)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !1806, file: !25, line: 345, baseType: !22, size: 32, offset: 128)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !1806, file: !25, line: 347, baseType: !22, size: 32, offset: 160)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !1806, file: !25, line: 347, baseType: !22, size: 32, offset: 192)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1791, file: !25, line: 434, baseType: !1814, size: 64, offset: 192)
!1814 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !25, line: 409, baseType: !549)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9, file: !8, line: 566, baseType: !48, size: 16, offset: 1472)
!1816 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1817, retainedTypes: !2197, globals: !2504, splitDebugInlining: false, nameTableKind: None)
!1817 = !{!1818, !1822, !1855, !1863, !1874, !1880, !1886, !1894, !1901, !1945, !1962, !1972, !1978, !2174}
!1818 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "StitchModes", file: !3, line: 203, baseType: !223, size: 32, elements: !1819)
!1819 = !{!1820, !1821}
!1820 = !DIEnumerator(name: "STITCH_VERT", value: 0, isUnsigned: true)
!1821 = !DIEnumerator(name: "STITCH_EDGE", value: 1, isUnsigned: true)
!1822 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyFlag", file: !25, line: 151, baseType: !223, size: 32, elements: !1823)
!1823 = !{!1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854}
!1824 = !DIEnumerator(name: "PROP_EDITABLE", value: 1, isUnsigned: true)
!1825 = !DIEnumerator(name: "PROP_LIB_EXCEPTION", value: 65536, isUnsigned: true)
!1826 = !DIEnumerator(name: "PROP_ANIMATABLE", value: 2, isUnsigned: true)
!1827 = !DIEnumerator(name: "PROP_ICONS_CONSECUTIVE", value: 4096, isUnsigned: true)
!1828 = !DIEnumerator(name: "PROP_HIDDEN", value: 524288, isUnsigned: true)
!1829 = !DIEnumerator(name: "PROP_SKIP_SAVE", value: 268435456, isUnsigned: true)
!1830 = !DIEnumerator(name: "PROP_REQUIRED", value: 4, isUnsigned: true)
!1831 = !DIEnumerator(name: "PROP_OUTPUT", value: 8, isUnsigned: true)
!1832 = !DIEnumerator(name: "PROP_RNAPTR", value: 2048, isUnsigned: true)
!1833 = !DIEnumerator(name: "PROP_PYFUNC_OPTIONAL", value: 1073741824, isUnsigned: true)
!1834 = !DIEnumerator(name: "PROP_REGISTER", value: 16, isUnsigned: true)
!1835 = !DIEnumerator(name: "PROP_REGISTER_OPTIONAL", value: 48, isUnsigned: true)
!1836 = !DIEnumerator(name: "PROP_PROPORTIONAL", value: 67108864, isUnsigned: true)
!1837 = !DIEnumerator(name: "PROP_ID_REFCOUNT", value: 64, isUnsigned: true)
!1838 = !DIEnumerator(name: "PROP_ID_SELF_CHECK", value: 1048576, isUnsigned: true)
!1839 = !DIEnumerator(name: "PROP_NEVER_NULL", value: 262144, isUnsigned: true)
!1840 = !DIEnumerator(name: "PROP_NEVER_UNLINK", value: 33554432, isUnsigned: true)
!1841 = !DIEnumerator(name: "PROP_ENUM_FLAG", value: 2097152, isUnsigned: true)
!1842 = !DIEnumerator(name: "PROP_CONTEXT_UPDATE", value: 4194304, isUnsigned: true)
!1843 = !DIEnumerator(name: "PROP_CONTEXT_PROPERTY_UPDATE", value: 138412032, isUnsigned: true)
!1844 = !DIEnumerator(name: "PROP_THICK_WRAP", value: 8388608, isUnsigned: true)
!1845 = !DIEnumerator(name: "PROP_BUILTIN", value: 128, isUnsigned: true)
!1846 = !DIEnumerator(name: "PROP_EXPORT", value: 256, isUnsigned: true)
!1847 = !DIEnumerator(name: "PROP_RUNTIME", value: 512, isUnsigned: true)
!1848 = !DIEnumerator(name: "PROP_IDPROPERTY", value: 1024, isUnsigned: true)
!1849 = !DIEnumerator(name: "PROP_RAW_ACCESS", value: 8192, isUnsigned: true)
!1850 = !DIEnumerator(name: "PROP_RAW_ARRAY", value: 16384, isUnsigned: true)
!1851 = !DIEnumerator(name: "PROP_FREE_POINTERS", value: 32768, isUnsigned: true)
!1852 = !DIEnumerator(name: "PROP_DYNAMIC", value: 131072, isUnsigned: true)
!1853 = !DIEnumerator(name: "PROP_ENUM_NO_CONTEXT", value: 16777216, isUnsigned: true)
!1854 = !DIEnumerator(name: "PROP_ENUM_NO_TRANSLATE", value: 536870912, isUnsigned: true)
!1855 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !28, line: 351, baseType: !223, size: 32, elements: !1856)
!1856 = !{!1857, !1858, !1859, !1860, !1861, !1862}
!1857 = !DIEnumerator(name: "OPERATOR_RUNNING_MODAL", value: 1, isUnsigned: true)
!1858 = !DIEnumerator(name: "OPERATOR_CANCELLED", value: 2, isUnsigned: true)
!1859 = !DIEnumerator(name: "OPERATOR_FINISHED", value: 4, isUnsigned: true)
!1860 = !DIEnumerator(name: "OPERATOR_PASS_THROUGH", value: 8, isUnsigned: true)
!1861 = !DIEnumerator(name: "OPERATOR_HANDLED", value: 16, isUnsigned: true)
!1862 = !DIEnumerator(name: "OPERATOR_INTERFACE", value: 32, isUnsigned: true)
!1863 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotType", file: !1864, line: 94, baseType: !223, size: 32, elements: !1865)
!1864 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operator_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1865 = !{!1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873}
!1866 = !DIEnumerator(name: "BMO_OP_SLOT_BOOL", value: 1, isUnsigned: true)
!1867 = !DIEnumerator(name: "BMO_OP_SLOT_INT", value: 2, isUnsigned: true)
!1868 = !DIEnumerator(name: "BMO_OP_SLOT_FLT", value: 3, isUnsigned: true)
!1869 = !DIEnumerator(name: "BMO_OP_SLOT_PTR", value: 4, isUnsigned: true)
!1870 = !DIEnumerator(name: "BMO_OP_SLOT_MAT", value: 5, isUnsigned: true)
!1871 = !DIEnumerator(name: "BMO_OP_SLOT_VEC", value: 8, isUnsigned: true)
!1872 = !DIEnumerator(name: "BMO_OP_SLOT_ELEMENT_BUF", value: 9, isUnsigned: true)
!1873 = !DIEnumerator(name: "BMO_OP_SLOT_MAPPING", value: 10, isUnsigned: true)
!1874 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Elem", file: !1864, line: 116, baseType: !223, size: 32, elements: !1875)
!1875 = !{!1876, !1877, !1878, !1879}
!1876 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_VERT", value: 1, isUnsigned: true)
!1877 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_EDGE", value: 2, isUnsigned: true)
!1878 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_FACE", value: 8, isUnsigned: true)
!1879 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_IS_SINGLE", value: 16, isUnsigned: true)
!1880 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Ptr", file: !1864, line: 131, baseType: !223, size: 32, elements: !1881)
!1881 = !{!1882, !1883, !1884, !1885}
!1882 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_BMESH", value: 100, isUnsigned: true)
!1883 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_SCENE", value: 101, isUnsigned: true)
!1884 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_OBJECT", value: 102, isUnsigned: true)
!1885 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_MESH", value: 103, isUnsigned: true)
!1886 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Map", file: !1864, line: 123, baseType: !223, size: 32, elements: !1887)
!1887 = !{!1888, !1889, !1890, !1891, !1892, !1893}
!1888 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_EMPTY", value: 64, isUnsigned: true)
!1889 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_ELEM", value: 65, isUnsigned: true)
!1890 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_FLT", value: 66, isUnsigned: true)
!1891 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INT", value: 67, isUnsigned: true)
!1892 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_BOOL", value: 68, isUnsigned: true)
!1893 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INTERNAL", value: 69, isUnsigned: true)
!1894 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1864, line: 182, baseType: !223, size: 32, elements: !1895)
!1895 = !{!1896, !1897, !1898, !1899, !1900}
!1896 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NOP", value: 0, isUnsigned: true)
!1897 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_UNTAN_MULTIRES", value: 1, isUnsigned: true)
!1898 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NORMALS_CALC", value: 2, isUnsigned: true)
!1899 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_FLUSH", value: 4, isUnsigned: true)
!1900 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_VALIDATE", value: 8, isUnsigned: true)
!1901 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1902, line: 76, baseType: !223, size: 32, elements: !1903)
!1902 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1903 = !{!1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944}
!1904 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!1905 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!1906 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!1907 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!1908 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!1909 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!1910 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!1911 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!1912 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!1913 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!1914 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!1915 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!1916 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!1917 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!1918 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!1919 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!1920 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!1921 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!1922 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!1923 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!1924 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!1925 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!1926 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!1927 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!1928 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!1929 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!1930 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!1931 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!1932 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!1933 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!1934 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!1935 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!1936 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!1937 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!1938 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!1939 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!1940 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!1941 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!1942 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!1943 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!1944 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!1945 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BMIterType", file: !1946, line: 57, baseType: !223, size: 32, elements: !1947)
!1946 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1947 = !{!1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961}
!1948 = !DIEnumerator(name: "BM_VERTS_OF_MESH", value: 1, isUnsigned: true)
!1949 = !DIEnumerator(name: "BM_EDGES_OF_MESH", value: 2, isUnsigned: true)
!1950 = !DIEnumerator(name: "BM_FACES_OF_MESH", value: 3, isUnsigned: true)
!1951 = !DIEnumerator(name: "BM_EDGES_OF_VERT", value: 4, isUnsigned: true)
!1952 = !DIEnumerator(name: "BM_FACES_OF_VERT", value: 5, isUnsigned: true)
!1953 = !DIEnumerator(name: "BM_LOOPS_OF_VERT", value: 6, isUnsigned: true)
!1954 = !DIEnumerator(name: "BM_VERTS_OF_EDGE", value: 7, isUnsigned: true)
!1955 = !DIEnumerator(name: "BM_FACES_OF_EDGE", value: 8, isUnsigned: true)
!1956 = !DIEnumerator(name: "BM_VERTS_OF_FACE", value: 9, isUnsigned: true)
!1957 = !DIEnumerator(name: "BM_EDGES_OF_FACE", value: 10, isUnsigned: true)
!1958 = !DIEnumerator(name: "BM_LOOPS_OF_FACE", value: 11, isUnsigned: true)
!1959 = !DIEnumerator(name: "BM_ALL_LOOPS_OF_FACE", value: 12, isUnsigned: true)
!1960 = !DIEnumerator(name: "BM_LOOPS_OF_LOOP", value: 13, isUnsigned: true)
!1961 = !DIEnumerator(name: "BM_LOOPS_OF_EDGE", value: 14, isUnsigned: true)
!1962 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1963, line: 260, baseType: !223, size: 32, elements: !1964)
!1963 = !DIFile(filename: "blender/source/blender/bmesh/bmesh_class.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1964 = !{!1965, !1966, !1967, !1968, !1969, !1970, !1971}
!1965 = !DIEnumerator(name: "BM_ELEM_SELECT", value: 1, isUnsigned: true)
!1966 = !DIEnumerator(name: "BM_ELEM_HIDDEN", value: 2, isUnsigned: true)
!1967 = !DIEnumerator(name: "BM_ELEM_SEAM", value: 4, isUnsigned: true)
!1968 = !DIEnumerator(name: "BM_ELEM_SMOOTH", value: 8, isUnsigned: true)
!1969 = !DIEnumerator(name: "BM_ELEM_TAG", value: 16, isUnsigned: true)
!1970 = !DIEnumerator(name: "BM_ELEM_DRAW", value: 32, isUnsigned: true)
!1971 = !DIEnumerator(name: "BM_ELEM_INTERNAL_TAG", value: 128, isUnsigned: true)
!1972 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1963, line: 249, baseType: !223, size: 32, elements: !1973)
!1973 = !{!1974, !1975, !1976, !1977}
!1974 = !DIEnumerator(name: "BM_VERT", value: 1, isUnsigned: true)
!1975 = !DIEnumerator(name: "BM_EDGE", value: 2, isUnsigned: true)
!1976 = !DIEnumerator(name: "BM_LOOP", value: 4, isUnsigned: true)
!1977 = !DIEnumerator(name: "BM_FACE", value: 8, isUnsigned: true)
!1978 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1979, line: 54, baseType: !223, size: 32, elements: !1980)
!1979 = !DIFile(filename: "blender/source/blender/editors/include/UI_resources.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1980 = !{!1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173}
!1981 = !DIEnumerator(name: "TH_REDALERT", value: 0, isUnsigned: true)
!1982 = !DIEnumerator(name: "TH_THEMEUI", value: 1, isUnsigned: true)
!1983 = !DIEnumerator(name: "TH_BACK", value: 2, isUnsigned: true)
!1984 = !DIEnumerator(name: "TH_TEXT", value: 3, isUnsigned: true)
!1985 = !DIEnumerator(name: "TH_TEXT_HI", value: 4, isUnsigned: true)
!1986 = !DIEnumerator(name: "TH_TITLE", value: 5, isUnsigned: true)
!1987 = !DIEnumerator(name: "TH_TAB_ACTIVE", value: 6, isUnsigned: true)
!1988 = !DIEnumerator(name: "TH_TAB_INACTIVE", value: 7, isUnsigned: true)
!1989 = !DIEnumerator(name: "TH_TAB_BACK", value: 8, isUnsigned: true)
!1990 = !DIEnumerator(name: "TH_TAB_OUTLINE", value: 9, isUnsigned: true)
!1991 = !DIEnumerator(name: "TH_HEADER", value: 10, isUnsigned: true)
!1992 = !DIEnumerator(name: "TH_HEADERDESEL", value: 11, isUnsigned: true)
!1993 = !DIEnumerator(name: "TH_HEADER_TEXT", value: 12, isUnsigned: true)
!1994 = !DIEnumerator(name: "TH_HEADER_TEXT_HI", value: 13, isUnsigned: true)
!1995 = !DIEnumerator(name: "TH_PANEL_HEADER", value: 14, isUnsigned: true)
!1996 = !DIEnumerator(name: "TH_PANEL_BACK", value: 15, isUnsigned: true)
!1997 = !DIEnumerator(name: "TH_PANEL_SHOW_HEADER", value: 16, isUnsigned: true)
!1998 = !DIEnumerator(name: "TH_PANEL_SHOW_BACK", value: 17, isUnsigned: true)
!1999 = !DIEnumerator(name: "TH_BUTBACK", value: 18, isUnsigned: true)
!2000 = !DIEnumerator(name: "TH_BUTBACK_TEXT", value: 19, isUnsigned: true)
!2001 = !DIEnumerator(name: "TH_BUTBACK_TEXT_HI", value: 20, isUnsigned: true)
!2002 = !DIEnumerator(name: "TH_SHADE1", value: 21, isUnsigned: true)
!2003 = !DIEnumerator(name: "TH_SHADE2", value: 22, isUnsigned: true)
!2004 = !DIEnumerator(name: "TH_HILITE", value: 23, isUnsigned: true)
!2005 = !DIEnumerator(name: "TH_GRID", value: 24, isUnsigned: true)
!2006 = !DIEnumerator(name: "TH_WIRE", value: 25, isUnsigned: true)
!2007 = !DIEnumerator(name: "TH_WIRE_INNER", value: 26, isUnsigned: true)
!2008 = !DIEnumerator(name: "TH_WIRE_EDIT", value: 27, isUnsigned: true)
!2009 = !DIEnumerator(name: "TH_SELECT", value: 28, isUnsigned: true)
!2010 = !DIEnumerator(name: "TH_ACTIVE", value: 29, isUnsigned: true)
!2011 = !DIEnumerator(name: "TH_GROUP", value: 30, isUnsigned: true)
!2012 = !DIEnumerator(name: "TH_GROUP_ACTIVE", value: 31, isUnsigned: true)
!2013 = !DIEnumerator(name: "TH_TRANSFORM", value: 32, isUnsigned: true)
!2014 = !DIEnumerator(name: "TH_VERTEX", value: 33, isUnsigned: true)
!2015 = !DIEnumerator(name: "TH_VERTEX_SELECT", value: 34, isUnsigned: true)
!2016 = !DIEnumerator(name: "TH_VERTEX_UNREFERENCED", value: 35, isUnsigned: true)
!2017 = !DIEnumerator(name: "TH_VERTEX_SIZE", value: 36, isUnsigned: true)
!2018 = !DIEnumerator(name: "TH_OUTLINE_WIDTH", value: 37, isUnsigned: true)
!2019 = !DIEnumerator(name: "TH_EDGE", value: 38, isUnsigned: true)
!2020 = !DIEnumerator(name: "TH_EDGE_SELECT", value: 39, isUnsigned: true)
!2021 = !DIEnumerator(name: "TH_EDGE_SEAM", value: 40, isUnsigned: true)
!2022 = !DIEnumerator(name: "TH_EDGE_FACESEL", value: 41, isUnsigned: true)
!2023 = !DIEnumerator(name: "TH_FACE", value: 42, isUnsigned: true)
!2024 = !DIEnumerator(name: "TH_FACE_SELECT", value: 43, isUnsigned: true)
!2025 = !DIEnumerator(name: "TH_NORMAL", value: 44, isUnsigned: true)
!2026 = !DIEnumerator(name: "TH_VNORMAL", value: 45, isUnsigned: true)
!2027 = !DIEnumerator(name: "TH_LNORMAL", value: 46, isUnsigned: true)
!2028 = !DIEnumerator(name: "TH_FACE_DOT", value: 47, isUnsigned: true)
!2029 = !DIEnumerator(name: "TH_FACEDOT_SIZE", value: 48, isUnsigned: true)
!2030 = !DIEnumerator(name: "TH_CFRAME", value: 49, isUnsigned: true)
!2031 = !DIEnumerator(name: "TH_NURB_ULINE", value: 50, isUnsigned: true)
!2032 = !DIEnumerator(name: "TH_NURB_VLINE", value: 51, isUnsigned: true)
!2033 = !DIEnumerator(name: "TH_NURB_SEL_ULINE", value: 52, isUnsigned: true)
!2034 = !DIEnumerator(name: "TH_NURB_SEL_VLINE", value: 53, isUnsigned: true)
!2035 = !DIEnumerator(name: "TH_HANDLE_FREE", value: 54, isUnsigned: true)
!2036 = !DIEnumerator(name: "TH_HANDLE_AUTO", value: 55, isUnsigned: true)
!2037 = !DIEnumerator(name: "TH_HANDLE_VECT", value: 56, isUnsigned: true)
!2038 = !DIEnumerator(name: "TH_HANDLE_ALIGN", value: 57, isUnsigned: true)
!2039 = !DIEnumerator(name: "TH_HANDLE_AUTOCLAMP", value: 58, isUnsigned: true)
!2040 = !DIEnumerator(name: "TH_HANDLE_SEL_FREE", value: 59, isUnsigned: true)
!2041 = !DIEnumerator(name: "TH_HANDLE_SEL_AUTO", value: 60, isUnsigned: true)
!2042 = !DIEnumerator(name: "TH_HANDLE_SEL_VECT", value: 61, isUnsigned: true)
!2043 = !DIEnumerator(name: "TH_HANDLE_SEL_ALIGN", value: 62, isUnsigned: true)
!2044 = !DIEnumerator(name: "TH_HANDLE_SEL_AUTOCLAMP", value: 63, isUnsigned: true)
!2045 = !DIEnumerator(name: "TH_ACTIVE_SPLINE", value: 64, isUnsigned: true)
!2046 = !DIEnumerator(name: "TH_ACTIVE_VERT", value: 65, isUnsigned: true)
!2047 = !DIEnumerator(name: "TH_SYNTAX_B", value: 66, isUnsigned: true)
!2048 = !DIEnumerator(name: "TH_SYNTAX_V", value: 67, isUnsigned: true)
!2049 = !DIEnumerator(name: "TH_SYNTAX_R", value: 68, isUnsigned: true)
!2050 = !DIEnumerator(name: "TH_SYNTAX_C", value: 69, isUnsigned: true)
!2051 = !DIEnumerator(name: "TH_SYNTAX_L", value: 70, isUnsigned: true)
!2052 = !DIEnumerator(name: "TH_SYNTAX_D", value: 71, isUnsigned: true)
!2053 = !DIEnumerator(name: "TH_SYNTAX_N", value: 72, isUnsigned: true)
!2054 = !DIEnumerator(name: "TH_SYNTAX_S", value: 73, isUnsigned: true)
!2055 = !DIEnumerator(name: "TH_BONE_SOLID", value: 74, isUnsigned: true)
!2056 = !DIEnumerator(name: "TH_BONE_POSE", value: 75, isUnsigned: true)
!2057 = !DIEnumerator(name: "TH_BONE_POSE_ACTIVE", value: 76, isUnsigned: true)
!2058 = !DIEnumerator(name: "TH_STRIP", value: 77, isUnsigned: true)
!2059 = !DIEnumerator(name: "TH_STRIP_SELECT", value: 78, isUnsigned: true)
!2060 = !DIEnumerator(name: "TH_KEYTYPE_KEYFRAME", value: 79, isUnsigned: true)
!2061 = !DIEnumerator(name: "TH_KEYTYPE_KEYFRAME_SELECT", value: 80, isUnsigned: true)
!2062 = !DIEnumerator(name: "TH_KEYTYPE_EXTREME", value: 81, isUnsigned: true)
!2063 = !DIEnumerator(name: "TH_KEYTYPE_EXTREME_SELECT", value: 82, isUnsigned: true)
!2064 = !DIEnumerator(name: "TH_KEYTYPE_BREAKDOWN", value: 83, isUnsigned: true)
!2065 = !DIEnumerator(name: "TH_KEYTYPE_BREAKDOWN_SELECT", value: 84, isUnsigned: true)
!2066 = !DIEnumerator(name: "TH_KEYTYPE_JITTER", value: 85, isUnsigned: true)
!2067 = !DIEnumerator(name: "TH_KEYTYPE_JITTER_SELECT", value: 86, isUnsigned: true)
!2068 = !DIEnumerator(name: "TH_KEYBORDER", value: 87, isUnsigned: true)
!2069 = !DIEnumerator(name: "TH_KEYBORDER_SELECT", value: 88, isUnsigned: true)
!2070 = !DIEnumerator(name: "TH_LAMP", value: 89, isUnsigned: true)
!2071 = !DIEnumerator(name: "TH_SPEAKER", value: 90, isUnsigned: true)
!2072 = !DIEnumerator(name: "TH_CAMERA", value: 91, isUnsigned: true)
!2073 = !DIEnumerator(name: "TH_EMPTY", value: 92, isUnsigned: true)
!2074 = !DIEnumerator(name: "TH_NODE", value: 93, isUnsigned: true)
!2075 = !DIEnumerator(name: "TH_NODE_INPUT", value: 94, isUnsigned: true)
!2076 = !DIEnumerator(name: "TH_NODE_OUTPUT", value: 95, isUnsigned: true)
!2077 = !DIEnumerator(name: "TH_NODE_COLOR", value: 96, isUnsigned: true)
!2078 = !DIEnumerator(name: "TH_NODE_FILTER", value: 97, isUnsigned: true)
!2079 = !DIEnumerator(name: "TH_NODE_VECTOR", value: 98, isUnsigned: true)
!2080 = !DIEnumerator(name: "TH_NODE_TEXTURE", value: 99, isUnsigned: true)
!2081 = !DIEnumerator(name: "TH_NODE_PATTERN", value: 100, isUnsigned: true)
!2082 = !DIEnumerator(name: "TH_NODE_SCRIPT", value: 101, isUnsigned: true)
!2083 = !DIEnumerator(name: "TH_NODE_LAYOUT", value: 102, isUnsigned: true)
!2084 = !DIEnumerator(name: "TH_NODE_SHADER", value: 103, isUnsigned: true)
!2085 = !DIEnumerator(name: "TH_NODE_INTERFACE", value: 104, isUnsigned: true)
!2086 = !DIEnumerator(name: "TH_NODE_CONVERTOR", value: 105, isUnsigned: true)
!2087 = !DIEnumerator(name: "TH_NODE_GROUP", value: 106, isUnsigned: true)
!2088 = !DIEnumerator(name: "TH_NODE_FRAME", value: 107, isUnsigned: true)
!2089 = !DIEnumerator(name: "TH_NODE_MATTE", value: 108, isUnsigned: true)
!2090 = !DIEnumerator(name: "TH_NODE_DISTORT", value: 109, isUnsigned: true)
!2091 = !DIEnumerator(name: "TH_CONSOLE_OUTPUT", value: 110, isUnsigned: true)
!2092 = !DIEnumerator(name: "TH_CONSOLE_INPUT", value: 111, isUnsigned: true)
!2093 = !DIEnumerator(name: "TH_CONSOLE_INFO", value: 112, isUnsigned: true)
!2094 = !DIEnumerator(name: "TH_CONSOLE_ERROR", value: 113, isUnsigned: true)
!2095 = !DIEnumerator(name: "TH_CONSOLE_CURSOR", value: 114, isUnsigned: true)
!2096 = !DIEnumerator(name: "TH_CONSOLE_SELECT", value: 115, isUnsigned: true)
!2097 = !DIEnumerator(name: "TH_SEQ_MOVIE", value: 116, isUnsigned: true)
!2098 = !DIEnumerator(name: "TH_SEQ_MOVIECLIP", value: 117, isUnsigned: true)
!2099 = !DIEnumerator(name: "TH_SEQ_MASK", value: 118, isUnsigned: true)
!2100 = !DIEnumerator(name: "TH_SEQ_IMAGE", value: 119, isUnsigned: true)
!2101 = !DIEnumerator(name: "TH_SEQ_SCENE", value: 120, isUnsigned: true)
!2102 = !DIEnumerator(name: "TH_SEQ_AUDIO", value: 121, isUnsigned: true)
!2103 = !DIEnumerator(name: "TH_SEQ_EFFECT", value: 122, isUnsigned: true)
!2104 = !DIEnumerator(name: "TH_SEQ_TRANSITION", value: 123, isUnsigned: true)
!2105 = !DIEnumerator(name: "TH_SEQ_META", value: 124, isUnsigned: true)
!2106 = !DIEnumerator(name: "TH_SEQ_PREVIEW", value: 125, isUnsigned: true)
!2107 = !DIEnumerator(name: "TH_EDGE_SHARP", value: 126, isUnsigned: true)
!2108 = !DIEnumerator(name: "TH_EDITMESH_ACTIVE", value: 127, isUnsigned: true)
!2109 = !DIEnumerator(name: "TH_HANDLE_VERTEX", value: 128, isUnsigned: true)
!2110 = !DIEnumerator(name: "TH_HANDLE_VERTEX_SELECT", value: 129, isUnsigned: true)
!2111 = !DIEnumerator(name: "TH_HANDLE_VERTEX_SIZE", value: 130, isUnsigned: true)
!2112 = !DIEnumerator(name: "TH_DOPESHEET_CHANNELOB", value: 131, isUnsigned: true)
!2113 = !DIEnumerator(name: "TH_DOPESHEET_CHANNELSUBOB", value: 132, isUnsigned: true)
!2114 = !DIEnumerator(name: "TH_PREVIEW_BACK", value: 133, isUnsigned: true)
!2115 = !DIEnumerator(name: "TH_EDGE_CREASE", value: 134, isUnsigned: true)
!2116 = !DIEnumerator(name: "TH_DRAWEXTRA_EDGELEN", value: 135, isUnsigned: true)
!2117 = !DIEnumerator(name: "TH_DRAWEXTRA_EDGEANG", value: 136, isUnsigned: true)
!2118 = !DIEnumerator(name: "TH_DRAWEXTRA_FACEAREA", value: 137, isUnsigned: true)
!2119 = !DIEnumerator(name: "TH_DRAWEXTRA_FACEANG", value: 138, isUnsigned: true)
!2120 = !DIEnumerator(name: "TH_NODE_CURVING", value: 139, isUnsigned: true)
!2121 = !DIEnumerator(name: "TH_MARKER_OUTLINE", value: 140, isUnsigned: true)
!2122 = !DIEnumerator(name: "TH_MARKER", value: 141, isUnsigned: true)
!2123 = !DIEnumerator(name: "TH_ACT_MARKER", value: 142, isUnsigned: true)
!2124 = !DIEnumerator(name: "TH_SEL_MARKER", value: 143, isUnsigned: true)
!2125 = !DIEnumerator(name: "TH_BUNDLE_SOLID", value: 144, isUnsigned: true)
!2126 = !DIEnumerator(name: "TH_DIS_MARKER", value: 145, isUnsigned: true)
!2127 = !DIEnumerator(name: "TH_PATH_BEFORE", value: 146, isUnsigned: true)
!2128 = !DIEnumerator(name: "TH_PATH_AFTER", value: 147, isUnsigned: true)
!2129 = !DIEnumerator(name: "TH_CAMERA_PATH", value: 148, isUnsigned: true)
!2130 = !DIEnumerator(name: "TH_LOCK_MARKER", value: 149, isUnsigned: true)
!2131 = !DIEnumerator(name: "TH_STITCH_PREVIEW_FACE", value: 150, isUnsigned: true)
!2132 = !DIEnumerator(name: "TH_STITCH_PREVIEW_EDGE", value: 151, isUnsigned: true)
!2133 = !DIEnumerator(name: "TH_STITCH_PREVIEW_VERT", value: 152, isUnsigned: true)
!2134 = !DIEnumerator(name: "TH_STITCH_PREVIEW_STITCHABLE", value: 153, isUnsigned: true)
!2135 = !DIEnumerator(name: "TH_STITCH_PREVIEW_UNSTITCHABLE", value: 154, isUnsigned: true)
!2136 = !DIEnumerator(name: "TH_STITCH_PREVIEW_ACTIVE", value: 155, isUnsigned: true)
!2137 = !DIEnumerator(name: "TH_PAINT_CURVE_HANDLE", value: 156, isUnsigned: true)
!2138 = !DIEnumerator(name: "TH_PAINT_CURVE_PIVOT", value: 157, isUnsigned: true)
!2139 = !DIEnumerator(name: "TH_UV_SHADOW", value: 158, isUnsigned: true)
!2140 = !DIEnumerator(name: "TH_UV_OTHERS", value: 159, isUnsigned: true)
!2141 = !DIEnumerator(name: "TH_FREESTYLE_EDGE_MARK", value: 160, isUnsigned: true)
!2142 = !DIEnumerator(name: "TH_FREESTYLE_FACE_MARK", value: 161, isUnsigned: true)
!2143 = !DIEnumerator(name: "TH_MATCH", value: 162, isUnsigned: true)
!2144 = !DIEnumerator(name: "TH_SELECT_HIGHLIGHT", value: 163, isUnsigned: true)
!2145 = !DIEnumerator(name: "TH_SKIN_ROOT", value: 164, isUnsigned: true)
!2146 = !DIEnumerator(name: "TH_ANIM_ACTIVE", value: 165, isUnsigned: true)
!2147 = !DIEnumerator(name: "TH_ANIM_INACTIVE", value: 166, isUnsigned: true)
!2148 = !DIEnumerator(name: "TH_NLA_TWEAK", value: 167, isUnsigned: true)
!2149 = !DIEnumerator(name: "TH_NLA_TWEAK_DUPLI", value: 168, isUnsigned: true)
!2150 = !DIEnumerator(name: "TH_NLA_TRANSITION", value: 169, isUnsigned: true)
!2151 = !DIEnumerator(name: "TH_NLA_TRANSITION_SEL", value: 170, isUnsigned: true)
!2152 = !DIEnumerator(name: "TH_NLA_META", value: 171, isUnsigned: true)
!2153 = !DIEnumerator(name: "TH_NLA_META_SEL", value: 172, isUnsigned: true)
!2154 = !DIEnumerator(name: "TH_NLA_SOUND", value: 173, isUnsigned: true)
!2155 = !DIEnumerator(name: "TH_NLA_SOUND_SEL", value: 174, isUnsigned: true)
!2156 = !DIEnumerator(name: "TH_EMBOSS", value: 175, isUnsigned: true)
!2157 = !DIEnumerator(name: "TH_AXIS_X", value: 176, isUnsigned: true)
!2158 = !DIEnumerator(name: "TH_AXIS_Y", value: 177, isUnsigned: true)
!2159 = !DIEnumerator(name: "TH_AXIS_Z", value: 178, isUnsigned: true)
!2160 = !DIEnumerator(name: "TH_LOW_GRAD", value: 179, isUnsigned: true)
!2161 = !DIEnumerator(name: "TH_HIGH_GRAD", value: 180, isUnsigned: true)
!2162 = !DIEnumerator(name: "TH_SHOW_BACK_GRAD", value: 181, isUnsigned: true)
!2163 = !DIEnumerator(name: "TH_INFO_SELECTED", value: 182, isUnsigned: true)
!2164 = !DIEnumerator(name: "TH_INFO_SELECTED_TEXT", value: 183, isUnsigned: true)
!2165 = !DIEnumerator(name: "TH_INFO_ERROR", value: 184, isUnsigned: true)
!2166 = !DIEnumerator(name: "TH_INFO_ERROR_TEXT", value: 185, isUnsigned: true)
!2167 = !DIEnumerator(name: "TH_INFO_WARNING", value: 186, isUnsigned: true)
!2168 = !DIEnumerator(name: "TH_INFO_WARNING_TEXT", value: 187, isUnsigned: true)
!2169 = !DIEnumerator(name: "TH_INFO_INFO", value: 188, isUnsigned: true)
!2170 = !DIEnumerator(name: "TH_INFO_INFO_TEXT", value: 189, isUnsigned: true)
!2171 = !DIEnumerator(name: "TH_INFO_DEBUG", value: 190, isUnsigned: true)
!2172 = !DIEnumerator(name: "TH_INFO_DEBUG_TEXT", value: 191, isUnsigned: true)
!2173 = !DIEnumerator(name: "TH_VIEW_OVERLAY", value: 192, isUnsigned: true)
!2174 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eUserPref_Flag", file: !2175, line: 569, baseType: !223, size: 32, elements: !2176)
!2175 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2176 = !{!2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196}
!2177 = !DIEnumerator(name: "USER_AUTOSAVE", value: 1, isUnsigned: true)
!2178 = !DIEnumerator(name: "USER_SCENEGLOBAL", value: 16, isUnsigned: true)
!2179 = !DIEnumerator(name: "USER_TRACKBALL", value: 32, isUnsigned: true)
!2180 = !DIEnumerator(name: "USER_MAT_ON_OB", value: 256, isUnsigned: true)
!2181 = !DIEnumerator(name: "USER_TOOLTIPS", value: 2048, isUnsigned: true)
!2182 = !DIEnumerator(name: "USER_TWOBUTTONMOUSE", value: 4096, isUnsigned: true)
!2183 = !DIEnumerator(name: "USER_NONUMPAD", value: 8192, isUnsigned: true)
!2184 = !DIEnumerator(name: "USER_LMOUSESELECT", value: 16384, isUnsigned: true)
!2185 = !DIEnumerator(name: "USER_FILECOMPRESS", value: 32768, isUnsigned: true)
!2186 = !DIEnumerator(name: "USER_SAVE_PREVIEWS", value: 65536, isUnsigned: true)
!2187 = !DIEnumerator(name: "USER_CUSTOM_RANGE", value: 131072, isUnsigned: true)
!2188 = !DIEnumerator(name: "USER_ADD_EDITMODE", value: 262144, isUnsigned: true)
!2189 = !DIEnumerator(name: "USER_ADD_VIEWALIGNED", value: 524288, isUnsigned: true)
!2190 = !DIEnumerator(name: "USER_RELPATHS", value: 1048576, isUnsigned: true)
!2191 = !DIEnumerator(name: "USER_RELEASECONFIRM", value: 2097152, isUnsigned: true)
!2192 = !DIEnumerator(name: "USER_SCRIPT_AUTOEXEC_DISABLE", value: 4194304, isUnsigned: true)
!2193 = !DIEnumerator(name: "USER_FILENOUI", value: 8388608, isUnsigned: true)
!2194 = !DIEnumerator(name: "USER_NONEGFRAMES", value: 16777216, isUnsigned: true)
!2195 = !DIEnumerator(name: "USER_TXT_TABSTOSPACES_DISABLE", value: 33554432, isUnsigned: true)
!2196 = !DIEnumerator(name: "USER_TOOLTIPS_PYTHON", value: 67108864, isUnsigned: true)
!2197 = !{!56, !2198, !2278, !2279, !2280, !2284, !2286, !2288, !2262, !2290, !2297, !2298, !2206, !2299, !14, !191, !2300}
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvEdge", file: !3, line: 136, baseType: !2200)
!2200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvEdge", file: !3, line: 124, size: 320, elements: !2201)
!2201 = !{!2202, !2203, !2204, !2205, !2275, !2277}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "uv1", scope: !2200, file: !3, line: 126, baseType: !223, size: 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "uv2", scope: !2200, file: !3, line: 127, baseType: !223, size: 32, offset: 32)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2200, file: !3, line: 129, baseType: !1006, size: 8, offset: 64)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "element", scope: !2200, file: !3, line: 131, baseType: !2206, size: 64, offset: 128)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!2207 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvElement", file: !2208, line: 71, baseType: !2209)
!2208 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_mesh_mapping.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvElement", file: !2208, line: 58, size: 192, elements: !2210)
!2210 = !{!2211, !2213, !2271, !2272, !2273, !2274}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2209, file: !2208, line: 60, baseType: !2212, size: 64)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 64)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2209, file: !2208, line: 62, baseType: !2214, size: 64, offset: 64)
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2215, size: 64)
!2215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMLoop", file: !1963, line: 125, size: 576, elements: !2216)
!2216 = !{!2217, !2226, !2254, !2255, !2267, !2268, !2269, !2270}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2215, file: !1963, line: 126, baseType: !2218, size: 128)
!2218 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMHeader", file: !1963, line: 82, baseType: !2219)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMHeader", file: !1963, line: 64, size: 128, elements: !2220)
!2220 = !{!2221, !2222, !2223, !2224, !2225}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2219, file: !1963, line: 65, baseType: !56, size: 64)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2219, file: !1963, line: 66, baseType: !22, size: 32, offset: 64)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "htype", scope: !2219, file: !1963, line: 73, baseType: !14, size: 8, offset: 96)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "hflag", scope: !2219, file: !1963, line: 74, baseType: !14, size: 8, offset: 104)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "api_flag", scope: !2219, file: !1963, line: 80, baseType: !14, size: 8, offset: 112)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2215, file: !1963, line: 129, baseType: !2227, size: 64, offset: 128)
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 64)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMVert", file: !1963, line: 90, size: 448, elements: !2229)
!2229 = !{!2230, !2231, !2236, !2237, !2238}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2228, file: !1963, line: 91, baseType: !2218, size: 128)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !2228, file: !1963, line: 92, baseType: !2232, size: 64, offset: 128)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFlagLayer", file: !1963, line: 180, size: 16, elements: !2234)
!2234 = !{!2235}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2233, file: !1963, line: 181, baseType: !48, size: 16)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2228, file: !1963, line: 94, baseType: !227, size: 96, offset: 192)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !2228, file: !1963, line: 95, baseType: !227, size: 96, offset: 288)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !2228, file: !1963, line: 102, baseType: !2239, size: 64, offset: 384)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 64)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEdge", file: !1963, line: 110, size: 640, elements: !2241)
!2241 = !{!2242, !2243, !2244, !2245, !2246, !2247, !2253}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2240, file: !1963, line: 111, baseType: !2218, size: 128)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !2240, file: !1963, line: 112, baseType: !2232, size: 64, offset: 128)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2240, file: !1963, line: 114, baseType: !2227, size: 64, offset: 192)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2240, file: !1963, line: 114, baseType: !2227, size: 64, offset: 256)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2240, file: !1963, line: 118, baseType: !2214, size: 64, offset: 320)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "v1_disk_link", scope: !2240, file: !1963, line: 122, baseType: !2248, size: 128, offset: 384)
!2248 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMDiskLink", file: !1963, line: 108, baseType: !2249)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMDiskLink", file: !1963, line: 106, size: 128, elements: !2250)
!2250 = !{!2251, !2252}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2249, file: !1963, line: 107, baseType: !2239, size: 64)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2249, file: !1963, line: 107, baseType: !2239, size: 64, offset: 64)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "v2_disk_link", scope: !2240, file: !1963, line: 122, baseType: !2248, size: 128, offset: 512)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !2215, file: !1963, line: 130, baseType: !2239, size: 64, offset: 192)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2215, file: !1963, line: 131, baseType: !2256, size: 64, offset: 256)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 64)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFace", file: !1963, line: 164, size: 448, elements: !2258)
!2258 = !{!2259, !2260, !2261, !2264, !2265, !2266}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2257, file: !1963, line: 165, baseType: !2218, size: 128)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !2257, file: !1963, line: 166, baseType: !2232, size: 64, offset: 128)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !2257, file: !1963, line: 172, baseType: !2262, size: 64, offset: 192)
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 64)
!2263 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMLoop", file: !1963, line: 140, baseType: !2215)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2257, file: !1963, line: 174, baseType: !22, size: 32, offset: 256)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !2257, file: !1963, line: 175, baseType: !227, size: 96, offset: 288)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2257, file: !1963, line: 176, baseType: !48, size: 16, offset: 384)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "radial_next", scope: !2215, file: !1963, line: 135, baseType: !2214, size: 64, offset: 320)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "radial_prev", scope: !2215, file: !1963, line: 135, baseType: !2214, size: 64, offset: 384)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2215, file: !1963, line: 139, baseType: !2214, size: 64, offset: 448)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2215, file: !1963, line: 139, baseType: !2214, size: 64, offset: 512)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "tfindex", scope: !2209, file: !2208, line: 64, baseType: !345, size: 16, offset: 128)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "separate", scope: !2209, file: !2208, line: 66, baseType: !1006, size: 8, offset: 144)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2209, file: !2208, line: 68, baseType: !1006, size: 8, offset: 152)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "island", scope: !2209, file: !2208, line: 70, baseType: !345, size: 16, offset: 160)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2200, file: !3, line: 133, baseType: !2276, size: 64, offset: 192)
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 64)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2200, file: !3, line: 135, baseType: !2276, size: 64, offset: 256)
!2278 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIterType", file: !1946, line: 79, baseType: !1945)
!2279 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__begin_cb", file: !1946, line: 158, baseType: !549)
!2280 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__step_cb", file: !1946, line: 159, baseType: !2281)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 64)
!2282 = !DISubroutineType(types: !2283)
!2283 = !{!56, !56}
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 64)
!2285 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMVert", file: !1963, line: 103, baseType: !2228)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 64)
!2287 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEdge", file: !1963, line: 123, baseType: !2240)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 64)
!2289 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMFace", file: !1963, line: 178, baseType: !2257)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 64)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gh_Entry", file: !2292, line: 94, size: 192, elements: !2293)
!2292 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2293 = !{!2294, !2295, !2296}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2291, file: !2292, line: 94, baseType: !56, size: 64)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2291, file: !2292, line: 94, baseType: !56, size: 64, offset: 64)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2291, file: !2292, line: 94, baseType: !56, size: 64, offset: 128)
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 64)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 64)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 64)
!2301 = !DIDerivedType(tag: DW_TAG_typedef, name: "StitchState", file: !3, line: 186, baseType: !2302)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StitchState", file: !3, line: 140, size: 1152, elements: !2303)
!2303 = !{!2304, !2305, !2306, !2307, !2308, !2309, !2462, !2463, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "aspect", scope: !2302, file: !3, line: 141, baseType: !191, size: 32)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "use_limit", scope: !2302, file: !3, line: 143, baseType: !1006, size: 8, offset: 32)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "limit_dist", scope: !2302, file: !3, line: 145, baseType: !191, size: 32, offset: 64)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "snap_islands", scope: !2302, file: !3, line: 147, baseType: !1006, size: 8, offset: 96)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "midpoints", scope: !2302, file: !3, line: 149, baseType: !1006, size: 8, offset: 104)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "em", scope: !2302, file: !3, line: 151, baseType: !2310, size: 64, offset: 128)
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2311, size: 64)
!2311 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEditMesh", file: !2312, line: 83, baseType: !2313)
!2312 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_editmesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !2312, line: 54, size: 896, elements: !2314)
!2314 = !{!2315, !2441, !2443, !2444, !2447, !2448, !2449, !2450, !2453, !2455, !2456, !2457, !2458, !2459, !2460, !2461}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !2313, file: !2312, line: 55, baseType: !2316, size: 64)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 64)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !1963, line: 186, size: 8064, elements: !2318)
!2318 = !{!2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2331, !2332, !2333, !2334, !2336, !2338, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2397, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2317, file: !1963, line: 187, baseType: !22, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !2317, file: !1963, line: 187, baseType: !22, size: 32, offset: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !2317, file: !1963, line: 187, baseType: !22, size: 32, offset: 64)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !2317, file: !1963, line: 187, baseType: !22, size: 32, offset: 96)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "totvertsel", scope: !2317, file: !1963, line: 188, baseType: !22, size: 32, offset: 128)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "totedgesel", scope: !2317, file: !1963, line: 188, baseType: !22, size: 32, offset: 160)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "totfacesel", scope: !2317, file: !1963, line: 188, baseType: !22, size: 32, offset: 192)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "elem_index_dirty", scope: !2317, file: !1963, line: 193, baseType: !14, size: 8, offset: 224)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "elem_table_dirty", scope: !2317, file: !1963, line: 197, baseType: !14, size: 8, offset: 232)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "vpool", scope: !2317, file: !1963, line: 201, baseType: !2329, size: 64, offset: 256)
!2329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2330, size: 64)
!2330 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !1902, line: 71, flags: DIFlagFwdDecl)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "epool", scope: !2317, file: !1963, line: 201, baseType: !2329, size: 64, offset: 320)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "lpool", scope: !2317, file: !1963, line: 201, baseType: !2329, size: 64, offset: 384)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "fpool", scope: !2317, file: !1963, line: 201, baseType: !2329, size: 64, offset: 448)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !2317, file: !1963, line: 208, baseType: !2335, size: 64, offset: 512)
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "etable", scope: !2317, file: !1963, line: 209, baseType: !2337, size: 64, offset: 576)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 64)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "ftable", scope: !2317, file: !1963, line: 210, baseType: !2339, size: 64, offset: 640)
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 64)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_tot", scope: !2317, file: !1963, line: 213, baseType: !22, size: 32, offset: 704)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "etable_tot", scope: !2317, file: !1963, line: 214, baseType: !22, size: 32, offset: 736)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "ftable_tot", scope: !2317, file: !1963, line: 215, baseType: !22, size: 32, offset: 768)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "vtoolflagpool", scope: !2317, file: !1963, line: 218, baseType: !2329, size: 64, offset: 832)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "etoolflagpool", scope: !2317, file: !1963, line: 218, baseType: !2329, size: 64, offset: 896)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "ftoolflagpool", scope: !2317, file: !1963, line: 218, baseType: !2329, size: 64, offset: 960)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "stackdepth", scope: !2317, file: !1963, line: 220, baseType: !22, size: 32, offset: 1024)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "currentop", scope: !2317, file: !1963, line: 221, baseType: !2348, size: 64, offset: 1088)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOperator", file: !1864, line: 190, size: 10496, elements: !2350)
!2350 = !{!2351, !2383, !2384, !2390, !2393, !2394, !2396}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "slots_in", scope: !2349, file: !1864, line: 191, baseType: !2352, size: 5120)
!2352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2353, size: 5120, elements: !2381)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOpSlot", file: !1864, line: 147, size: 320, elements: !2354)
!2354 = !{!2355, !2356, !2358, !2368, !2369}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "slot_name", scope: !2353, file: !1864, line: 148, baseType: !12, size: 64)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "slot_type", scope: !2353, file: !1864, line: 149, baseType: !2357, size: 32, offset: 64)
!2357 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotType", file: !1864, line: 112, baseType: !1863)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "slot_subtype", scope: !2353, file: !1864, line: 150, baseType: !2359, size: 32, offset: 96)
!2359 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Union", file: !1864, line: 142, baseType: !2360)
!2360 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eBMOpSlotSubType_Union", file: !1864, line: 138, size: 32, elements: !2361)
!2361 = !{!2362, !2364, !2366}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !2360, file: !1864, line: 139, baseType: !2363, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Elem", file: !1864, line: 122, baseType: !1874)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2360, file: !1864, line: 140, baseType: !2365, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Ptr", file: !1864, line: 136, baseType: !1880)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2360, file: !1864, line: 141, baseType: !2367, size: 32)
!2367 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Map", file: !1864, line: 130, baseType: !1886)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2353, file: !1864, line: 152, baseType: !22, size: 32, offset: 128)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2353, file: !1864, line: 162, baseType: !2370, size: 128, offset: 192)
!2370 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2353, file: !1864, line: 155, size: 128, elements: !2371)
!2371 = !{!2372, !2373, !2374, !2375, !2376, !2378}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !2370, file: !1864, line: 156, baseType: !22, size: 32)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2370, file: !1864, line: 157, baseType: !191, size: 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2370, file: !1864, line: 158, baseType: !56, size: 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2370, file: !1864, line: 159, baseType: !227, size: 96)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2370, file: !1864, line: 160, baseType: !2377, size: 64)
!2377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !56, size: 64)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !2370, file: !1864, line: 161, baseType: !2379, size: 64)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !2292, line: 48, baseType: !219)
!2381 = !{!2382}
!2382 = !DISubrange(count: 16)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "slots_out", scope: !2349, file: !1864, line: 192, baseType: !2352, size: 5120, offset: 5120)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !2349, file: !1864, line: 193, baseType: !2385, size: 64, offset: 10240)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 64)
!2386 = !DISubroutineType(types: !2387)
!2387 = !{null, !2388, !2348}
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 64)
!2389 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMesh", file: !1963, line: 246, baseType: !2317)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !2349, file: !1864, line: 194, baseType: !2391, size: 64, offset: 10304)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64)
!2392 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !1864, line: 194, flags: DIFlagFwdDecl)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2349, file: !1864, line: 195, baseType: !22, size: 32, offset: 10368)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "type_flag", scope: !2349, file: !1864, line: 196, baseType: !2395, size: 32, offset: 10400)
!2395 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOpTypeFlag", file: !1864, line: 188, baseType: !1894)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2349, file: !1864, line: 197, baseType: !22, size: 32, offset: 10432)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !2317, file: !1963, line: 223, baseType: !2398, size: 1600, offset: 1152)
!2398 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !1902, line: 73, baseType: !2399)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !1902, line: 64, size: 1600, elements: !2400)
!2400 = !{!2401, !2416, !2420, !2421, !2422, !2423, !2424}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2399, file: !1902, line: 65, baseType: !2402, size: 64)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64)
!2403 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !1902, line: 53, baseType: !2404)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !1902, line: 42, size: 832, elements: !2405)
!2405 = !{!2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2404, file: !1902, line: 43, baseType: !22, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2404, file: !1902, line: 44, baseType: !22, size: 32, offset: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2404, file: !1902, line: 45, baseType: !22, size: 32, offset: 64)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2404, file: !1902, line: 46, baseType: !22, size: 32, offset: 96)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !2404, file: !1902, line: 47, baseType: !22, size: 32, offset: 128)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !2404, file: !1902, line: 48, baseType: !22, size: 32, offset: 160)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !2404, file: !1902, line: 49, baseType: !22, size: 32, offset: 192)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2404, file: !1902, line: 50, baseType: !22, size: 32, offset: 224)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2404, file: !1902, line: 51, baseType: !33, size: 512, offset: 256)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2404, file: !1902, line: 52, baseType: !56, size: 64, offset: 768)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !2399, file: !1902, line: 66, baseType: !2417, size: 1312, offset: 64)
!2417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1312, elements: !2418)
!2418 = !{!2419}
!2419 = !DISubrange(count: 41)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !2399, file: !1902, line: 69, baseType: !22, size: 32, offset: 1376)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !2399, file: !1902, line: 69, baseType: !22, size: 32, offset: 1408)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !2399, file: !1902, line: 70, baseType: !22, size: 32, offset: 1440)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !2399, file: !1902, line: 71, baseType: !2329, size: 64, offset: 1472)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !2399, file: !1902, line: 72, baseType: !2425, size: 64, offset: 1536)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 64)
!2426 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !1902, line: 59, baseType: !2427)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !1902, line: 57, size: 8192, elements: !2428)
!2428 = !{!2429}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !2427, file: !1902, line: 58, baseType: !130, size: 8192)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !2317, file: !1963, line: 223, baseType: !2398, size: 1600, offset: 2752)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !2317, file: !1963, line: 223, baseType: !2398, size: 1600, offset: 4352)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !2317, file: !1963, line: 223, baseType: !2398, size: 1600, offset: 5952)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2317, file: !1963, line: 233, baseType: !48, size: 16, offset: 7552)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !2317, file: !1963, line: 236, baseType: !22, size: 32, offset: 7584)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !2317, file: !1963, line: 238, baseType: !22, size: 32, offset: 7616)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "totflags", scope: !2317, file: !1963, line: 238, baseType: !22, size: 32, offset: 7648)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "selected", scope: !2317, file: !1963, line: 239, baseType: !58, size: 128, offset: 7680)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !2317, file: !1963, line: 241, baseType: !2288, size: 64, offset: 7808)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "errorstack", scope: !2317, file: !1963, line: 243, baseType: !58, size: 128, offset: 7872)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "py_handle", scope: !2317, file: !1963, line: 245, baseType: !56, size: 64, offset: 8000)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "emcopy", scope: !2313, file: !2312, line: 58, baseType: !2442, size: 64, offset: 64)
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "emcopyusers", scope: !2313, file: !2312, line: 59, baseType: !22, size: 32, offset: 128)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "looptris", scope: !2313, file: !2312, line: 63, baseType: !2445, size: 64, offset: 192)
!2445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2446, size: 64)
!2446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2214, size: 192, elements: !228)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "tottri", scope: !2313, file: !2312, line: 64, baseType: !22, size: 32, offset: 256)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !2313, file: !2312, line: 67, baseType: !396, size: 64, offset: 320)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "derivedCage", scope: !2313, file: !2312, line: 67, baseType: !396, size: 64, offset: 384)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !2313, file: !2312, line: 68, baseType: !2451, size: 64, offset: 448)
!2451 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataMask", file: !2452, line: 48, baseType: !400)
!2452 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColor", scope: !2313, file: !2312, line: 69, baseType: !2454, size: 64, offset: 512)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColorLen", scope: !2313, file: !2312, line: 70, baseType: !22, size: 32, offset: 576)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColor", scope: !2313, file: !2312, line: 71, baseType: !2454, size: 64, offset: 640)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColorLen", scope: !2313, file: !2312, line: 72, baseType: !22, size: 32, offset: 704)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2313, file: !2312, line: 75, baseType: !48, size: 16, offset: 736)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2313, file: !2312, line: 76, baseType: !48, size: 16, offset: 752)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2313, file: !2312, line: 79, baseType: !162, size: 64, offset: 768)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cdlayer", scope: !2313, file: !2312, line: 82, baseType: !22, size: 32, offset: 832)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "clear_seams", scope: !2302, file: !3, line: 153, baseType: !1006, size: 8, offset: 192)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "element_map", scope: !2302, file: !3, line: 155, baseType: !2464, size: 64, offset: 256)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvElementMap", file: !2208, line: 89, baseType: !2466)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvElementMap", file: !2208, line: 78, size: 256, elements: !2467)
!2467 = !{!2468, !2470, !2471, !2472, !2473}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2466, file: !2208, line: 80, baseType: !2469, size: 64)
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 64)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2466, file: !2208, line: 82, baseType: !2212, size: 64, offset: 64)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "totalUVs", scope: !2466, file: !2208, line: 84, baseType: !22, size: 32, offset: 128)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "totalIslands", scope: !2466, file: !2208, line: 86, baseType: !22, size: 32, offset: 160)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "islandIndices", scope: !2466, file: !2208, line: 88, baseType: !2474, size: 64, offset: 192)
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "uvedges", scope: !2302, file: !3, line: 157, baseType: !2198, size: 64, offset: 320)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "uvs", scope: !2302, file: !3, line: 159, baseType: !2297, size: 64, offset: 384)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2302, file: !3, line: 161, baseType: !2474, size: 64, offset: 448)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "normals", scope: !2302, file: !3, line: 163, baseType: !2299, size: 64, offset: 512)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "edges", scope: !2302, file: !3, line: 165, baseType: !2198, size: 64, offset: 576)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "edge_hash", scope: !2302, file: !3, line: 167, baseType: !2379, size: 64, offset: 640)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "total_separate_edges", scope: !2302, file: !3, line: 170, baseType: !22, size: 32, offset: 704)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "total_separate_uvs", scope: !2302, file: !3, line: 171, baseType: !22, size: 32, offset: 736)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "selection_stack", scope: !2302, file: !3, line: 173, baseType: !2377, size: 64, offset: 768)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "selection_size", scope: !2302, file: !3, line: 174, baseType: !22, size: 32, offset: 832)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "static_island", scope: !2302, file: !3, line: 176, baseType: !22, size: 32, offset: 864)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "tris_per_island", scope: !2302, file: !3, line: 178, baseType: !872, size: 64, offset: 896)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2302, file: !3, line: 181, baseType: !14, size: 8, offset: 960)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "draw_handle", scope: !2302, file: !3, line: 183, baseType: !56, size: 64, offset: 1024)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "stitch_preview", scope: !2302, file: !3, line: 185, baseType: !2490, size: 64, offset: 1088)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 64)
!2491 = !DIDerivedType(tag: DW_TAG_typedef, name: "StitchPreviewer", file: !3, line: 93, baseType: !2492)
!2492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StitchPreviewer", file: !3, line: 76, size: 576, elements: !2493)
!2493 = !{!2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "preview_polys", scope: !2492, file: !3, line: 78, baseType: !2299, size: 64)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "uvs_per_polygon", scope: !2492, file: !3, line: 80, baseType: !872, size: 64, offset: 64)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "num_polys", scope: !2492, file: !3, line: 82, baseType: !223, size: 32, offset: 128)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "preview_stitchable", scope: !2492, file: !3, line: 84, baseType: !2299, size: 64, offset: 192)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "preview_unstitchable", scope: !2492, file: !3, line: 85, baseType: !2299, size: 64, offset: 256)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "num_stitchable", scope: !2492, file: !3, line: 87, baseType: !223, size: 32, offset: 320)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "num_unstitchable", scope: !2492, file: !3, line: 88, baseType: !223, size: 32, offset: 352)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "preview_uvs", scope: !2492, file: !3, line: 89, baseType: !223, size: 32, offset: 384)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "static_tris", scope: !2492, file: !3, line: 91, baseType: !2299, size: 64, offset: 448)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "num_static_tris", scope: !2492, file: !3, line: 92, baseType: !223, size: 32, offset: 512)
!2504 = !{!0, !2505}
!2505 = !DIGlobalVariableExpression(var: !2506, expr: !DIExpression())
!2506 = distinct !DIGlobalVariable(name: "str", scope: !2507, file: !3, line: 264, type: !2513, isLocal: true, isDefinition: true)
!2507 = distinct !DISubprogram(name: "stitch_update_header", scope: !3, file: !3, line: 262, type: !2508, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!2508 = !DISubroutineType(types: !2509)
!2509 = !{null, !2300, !2510}
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 64)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !951, line: 69, baseType: !24)
!2512 = !{}
!2513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 928, elements: !2514)
!2514 = !{!2515}
!2515 = !DISubrange(count: 116)
!2516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2517, size: 960, elements: !228)
!2517 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyItem", file: !25, line: 308, baseType: !2518)
!2518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyItem", file: !25, line: 302, size: 320, elements: !2519)
!2519 = !{!2520, !2521, !2522, !2523, !2524}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2518, file: !25, line: 303, baseType: !22, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !2518, file: !25, line: 304, baseType: !12, size: 64, offset: 64)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !2518, file: !25, line: 305, baseType: !22, size: 32, offset: 128)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2518, file: !25, line: 306, baseType: !12, size: 64, offset: 192)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2518, file: !25, line: 307, baseType: !12, size: 64, offset: 256)
!2525 = !{i32 7, !"Dwarf Version", i32 4}
!2526 = !{i32 2, !"Debug Info Version", i32 3}
!2527 = !{i32 1, !"wchar_size", i32 4}
!2528 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2529 = !DILocalVariable(name: "ot", arg: 1, scope: !2, file: !3, line: 2219, type: !6)
!2530 = !DILocation(line: 2219, column: 35, scope: !2)
!2531 = !DILocalVariable(name: "prop", scope: !2, file: !3, line: 2221, type: !1765)
!2532 = !DILocation(line: 2221, column: 15, scope: !2)
!2533 = !DILocation(line: 2230, column: 2, scope: !2)
!2534 = !DILocation(line: 2230, column: 6, scope: !2)
!2535 = !DILocation(line: 2230, column: 11, scope: !2)
!2536 = !DILocation(line: 2231, column: 2, scope: !2)
!2537 = !DILocation(line: 2231, column: 6, scope: !2)
!2538 = !DILocation(line: 2231, column: 18, scope: !2)
!2539 = !DILocation(line: 2232, column: 2, scope: !2)
!2540 = !DILocation(line: 2232, column: 6, scope: !2)
!2541 = !DILocation(line: 2232, column: 13, scope: !2)
!2542 = !DILocation(line: 2233, column: 2, scope: !2)
!2543 = !DILocation(line: 2233, column: 6, scope: !2)
!2544 = !DILocation(line: 2233, column: 11, scope: !2)
!2545 = !DILocation(line: 2236, column: 2, scope: !2)
!2546 = !DILocation(line: 2236, column: 6, scope: !2)
!2547 = !DILocation(line: 2236, column: 13, scope: !2)
!2548 = !DILocation(line: 2237, column: 2, scope: !2)
!2549 = !DILocation(line: 2237, column: 6, scope: !2)
!2550 = !DILocation(line: 2237, column: 12, scope: !2)
!2551 = !DILocation(line: 2238, column: 2, scope: !2)
!2552 = !DILocation(line: 2238, column: 6, scope: !2)
!2553 = !DILocation(line: 2238, column: 11, scope: !2)
!2554 = !DILocation(line: 2239, column: 2, scope: !2)
!2555 = !DILocation(line: 2239, column: 6, scope: !2)
!2556 = !DILocation(line: 2239, column: 13, scope: !2)
!2557 = !DILocation(line: 2240, column: 2, scope: !2)
!2558 = !DILocation(line: 2240, column: 6, scope: !2)
!2559 = !DILocation(line: 2240, column: 11, scope: !2)
!2560 = !DILocation(line: 2243, column: 18, scope: !2)
!2561 = !DILocation(line: 2243, column: 22, scope: !2)
!2562 = !DILocation(line: 2243, column: 2, scope: !2)
!2563 = !DILocation(line: 2244, column: 18, scope: !2)
!2564 = !DILocation(line: 2244, column: 22, scope: !2)
!2565 = !DILocation(line: 2244, column: 2, scope: !2)
!2566 = !DILocation(line: 2247, column: 16, scope: !2)
!2567 = !DILocation(line: 2247, column: 20, scope: !2)
!2568 = !DILocation(line: 2247, column: 2, scope: !2)
!2569 = !DILocation(line: 2249, column: 14, scope: !2)
!2570 = !DILocation(line: 2249, column: 18, scope: !2)
!2571 = !DILocation(line: 2249, column: 2, scope: !2)
!2572 = !DILocation(line: 2251, column: 18, scope: !2)
!2573 = !DILocation(line: 2251, column: 22, scope: !2)
!2574 = !DILocation(line: 2251, column: 2, scope: !2)
!2575 = !DILocation(line: 2253, column: 18, scope: !2)
!2576 = !DILocation(line: 2253, column: 22, scope: !2)
!2577 = !DILocation(line: 2253, column: 2, scope: !2)
!2578 = !DILocation(line: 2255, column: 15, scope: !2)
!2579 = !DILocation(line: 2255, column: 19, scope: !2)
!2580 = !DILocation(line: 2255, column: 2, scope: !2)
!2581 = !DILocation(line: 2257, column: 23, scope: !2)
!2582 = !DILocation(line: 2257, column: 27, scope: !2)
!2583 = !DILocation(line: 2257, column: 10, scope: !2)
!2584 = !DILocation(line: 2257, column: 7, scope: !2)
!2585 = !DILocation(line: 2259, column: 24, scope: !2)
!2586 = !DILocation(line: 2259, column: 2, scope: !2)
!2587 = !DILocation(line: 2260, column: 36, scope: !2)
!2588 = !DILocation(line: 2260, column: 40, scope: !2)
!2589 = !DILocation(line: 2260, column: 9, scope: !2)
!2590 = !DILocation(line: 2260, column: 7, scope: !2)
!2591 = !DILocation(line: 2262, column: 24, scope: !2)
!2592 = !DILocation(line: 2262, column: 2, scope: !2)
!2593 = !DILocation(line: 2263, column: 1, scope: !2)
!2594 = distinct !DISubprogram(name: "stitch_invoke", scope: !3, file: !3, line: 1934, type: !2595, scopeLine: 1935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!2595 = !DISubroutineType(types: !2596)
!2596 = !{!22, !2510, !2597, !2599}
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !28, line: 348, baseType: !27)
!2599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2600, size: 64)
!2600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2601)
!2601 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEvent", file: !8, line: 460, baseType: !1662)
!2602 = !DILocalVariable(name: "C", arg: 1, scope: !2594, file: !3, line: 1934, type: !2510)
!2603 = !DILocation(line: 1934, column: 36, scope: !2594)
!2604 = !DILocalVariable(name: "op", arg: 2, scope: !2594, file: !3, line: 1934, type: !2597)
!2605 = !DILocation(line: 1934, column: 51, scope: !2594)
!2606 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !2594, file: !3, line: 1934, type: !2599)
!2607 = !DILocation(line: 1934, column: 70, scope: !2594)
!2608 = !DILocalVariable(name: "obedit", scope: !2594, file: !3, line: 1936, type: !2609)
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 64)
!2610 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !164, line: 295, baseType: !163)
!2611 = !DILocation(line: 1936, column: 10, scope: !2594)
!2612 = !DILocation(line: 1936, column: 40, scope: !2594)
!2613 = !DILocation(line: 1936, column: 19, scope: !2594)
!2614 = !DILocation(line: 1937, column: 19, scope: !2615)
!2615 = distinct !DILexicalBlock(scope: !2594, file: !3, line: 1937, column: 6)
!2616 = !DILocation(line: 1937, column: 22, scope: !2615)
!2617 = !DILocation(line: 1937, column: 7, scope: !2615)
!2618 = !DILocation(line: 1937, column: 6, scope: !2594)
!2619 = !DILocation(line: 1938, column: 3, scope: !2615)
!2620 = !DILocation(line: 1940, column: 29, scope: !2594)
!2621 = !DILocation(line: 1940, column: 32, scope: !2594)
!2622 = !DILocation(line: 1940, column: 2, scope: !2594)
!2623 = !DILocation(line: 1941, column: 24, scope: !2594)
!2624 = !DILocation(line: 1941, column: 46, scope: !2594)
!2625 = !DILocation(line: 1941, column: 54, scope: !2594)
!2626 = !DILocation(line: 1941, column: 2, scope: !2594)
!2627 = !DILocation(line: 1942, column: 2, scope: !2594)
!2628 = !DILocation(line: 1943, column: 1, scope: !2594)
!2629 = distinct !DISubprogram(name: "stitch_modal", scope: !3, file: !3, line: 2058, type: !2595, scopeLine: 2059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!2630 = !DILocalVariable(name: "C", arg: 1, scope: !2629, file: !3, line: 2058, type: !2510)
!2631 = !DILocation(line: 2058, column: 35, scope: !2629)
!2632 = !DILocalVariable(name: "op", arg: 2, scope: !2629, file: !3, line: 2058, type: !2597)
!2633 = !DILocation(line: 2058, column: 50, scope: !2629)
!2634 = !DILocalVariable(name: "event", arg: 3, scope: !2629, file: !3, line: 2058, type: !2599)
!2635 = !DILocation(line: 2058, column: 69, scope: !2629)
!2636 = !DILocalVariable(name: "state", scope: !2629, file: !3, line: 2060, type: !2300)
!2637 = !DILocation(line: 2060, column: 15, scope: !2629)
!2638 = !DILocalVariable(name: "scene", scope: !2629, file: !3, line: 2061, type: !2639)
!2639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2640, size: 64)
!2640 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !154, line: 1299, baseType: !153)
!2641 = !DILocation(line: 2061, column: 9, scope: !2629)
!2642 = !DILocation(line: 2061, column: 32, scope: !2629)
!2643 = !DILocation(line: 2061, column: 17, scope: !2629)
!2644 = !DILocation(line: 2063, column: 25, scope: !2629)
!2645 = !DILocation(line: 2063, column: 29, scope: !2629)
!2646 = !DILocation(line: 2063, column: 10, scope: !2629)
!2647 = !DILocation(line: 2063, column: 8, scope: !2629)
!2648 = !DILocation(line: 2065, column: 10, scope: !2629)
!2649 = !DILocation(line: 2065, column: 17, scope: !2629)
!2650 = !DILocation(line: 2065, column: 2, scope: !2629)
!2651 = !DILocation(line: 2067, column: 4, scope: !2652)
!2652 = distinct !DILexicalBlock(scope: !2629, file: !3, line: 2065, column: 23)
!2653 = !DILocation(line: 2071, column: 18, scope: !2652)
!2654 = !DILocation(line: 2071, column: 21, scope: !2652)
!2655 = !DILocation(line: 2071, column: 4, scope: !2652)
!2656 = !DILocation(line: 2072, column: 4, scope: !2652)
!2657 = !DILocation(line: 2075, column: 8, scope: !2658)
!2658 = distinct !DILexicalBlock(scope: !2652, file: !3, line: 2075, column: 8)
!2659 = !DILocation(line: 2075, column: 15, scope: !2658)
!2660 = !DILocation(line: 2075, column: 21, scope: !2658)
!2661 = !DILocation(line: 2075, column: 27, scope: !2658)
!2662 = !DILocation(line: 2075, column: 32, scope: !2658)
!2663 = !DILocation(line: 2075, column: 8, scope: !2652)
!2664 = !DILocation(line: 2076, column: 9, scope: !2665)
!2665 = distinct !DILexicalBlock(scope: !2666, file: !3, line: 2076, column: 9)
!2666 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 2075, column: 54)
!2667 = !DILocation(line: 2076, column: 16, scope: !2665)
!2668 = !DILocation(line: 2076, column: 20, scope: !2665)
!2669 = !DILocation(line: 2076, column: 9, scope: !2666)
!2670 = !DILocation(line: 2077, column: 20, scope: !2671)
!2671 = distinct !DILexicalBlock(scope: !2665, file: !3, line: 2076, column: 33)
!2672 = !DILocation(line: 2077, column: 23, scope: !2671)
!2673 = !DILocation(line: 2077, column: 30, scope: !2671)
!2674 = !DILocation(line: 2077, column: 37, scope: !2671)
!2675 = !DILocation(line: 2077, column: 6, scope: !2671)
!2676 = !DILocation(line: 2079, column: 31, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2671, file: !3, line: 2079, column: 10)
!2678 = !DILocation(line: 2079, column: 38, scope: !2677)
!2679 = !DILocation(line: 2079, column: 11, scope: !2677)
!2680 = !DILocation(line: 2079, column: 10, scope: !2671)
!2681 = !DILocation(line: 2080, column: 21, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2677, file: !3, line: 2079, column: 53)
!2683 = !DILocation(line: 2080, column: 24, scope: !2682)
!2684 = !DILocation(line: 2080, column: 7, scope: !2682)
!2685 = !DILocation(line: 2081, column: 7, scope: !2682)
!2686 = !DILocation(line: 2083, column: 5, scope: !2671)
!2687 = !DILocation(line: 2084, column: 5, scope: !2666)
!2688 = !DILocation(line: 2075, column: 51, scope: !2658)
!2689 = !DILocation(line: 2088, column: 8, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2652, file: !3, line: 2088, column: 8)
!2691 = !DILocation(line: 2088, column: 15, scope: !2690)
!2692 = !DILocation(line: 2088, column: 19, scope: !2690)
!2693 = !DILocation(line: 2088, column: 8, scope: !2652)
!2694 = !DILocation(line: 2089, column: 29, scope: !2695)
!2695 = distinct !DILexicalBlock(scope: !2696, file: !3, line: 2089, column: 9)
!2696 = distinct !DILexicalBlock(scope: !2690, file: !3, line: 2088, column: 32)
!2697 = !DILocation(line: 2089, column: 36, scope: !2695)
!2698 = !DILocation(line: 2089, column: 9, scope: !2695)
!2699 = !DILocation(line: 2089, column: 9, scope: !2696)
!2700 = !DILocation(line: 2090, column: 18, scope: !2701)
!2701 = distinct !DILexicalBlock(scope: !2695, file: !3, line: 2089, column: 50)
!2702 = !DILocation(line: 2090, column: 21, scope: !2701)
!2703 = !DILocation(line: 2090, column: 6, scope: !2701)
!2704 = !DILocation(line: 2091, column: 6, scope: !2701)
!2705 = !DILocation(line: 2094, column: 20, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2695, file: !3, line: 2093, column: 10)
!2707 = !DILocation(line: 2094, column: 23, scope: !2706)
!2708 = !DILocation(line: 2094, column: 6, scope: !2706)
!2709 = !DILocation(line: 2095, column: 6, scope: !2706)
!2710 = !DILocation(line: 2099, column: 5, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !2690, file: !3, line: 2098, column: 9)
!2712 = !DILocation(line: 2104, column: 8, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2652, file: !3, line: 2104, column: 8)
!2714 = !DILocation(line: 2104, column: 15, scope: !2713)
!2715 = !DILocation(line: 2104, column: 19, scope: !2713)
!2716 = !DILocation(line: 2104, column: 31, scope: !2713)
!2717 = !DILocation(line: 2104, column: 34, scope: !2713)
!2718 = !DILocation(line: 2104, column: 41, scope: !2713)
!2719 = !DILocation(line: 2104, column: 8, scope: !2652)
!2720 = !DILocation(line: 2105, column: 5, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2713, file: !3, line: 2104, column: 46)
!2722 = !DILocation(line: 2105, column: 12, scope: !2721)
!2723 = !DILocation(line: 2105, column: 23, scope: !2721)
!2724 = !DILocation(line: 2106, column: 30, scope: !2725)
!2725 = distinct !DILexicalBlock(scope: !2721, file: !3, line: 2106, column: 9)
!2726 = !DILocation(line: 2106, column: 37, scope: !2725)
!2727 = !DILocation(line: 2106, column: 10, scope: !2725)
!2728 = !DILocation(line: 2106, column: 9, scope: !2721)
!2729 = !DILocation(line: 2107, column: 20, scope: !2730)
!2730 = distinct !DILexicalBlock(scope: !2725, file: !3, line: 2106, column: 52)
!2731 = !DILocation(line: 2107, column: 23, scope: !2730)
!2732 = !DILocation(line: 2107, column: 6, scope: !2730)
!2733 = !DILocation(line: 2108, column: 6, scope: !2730)
!2734 = !DILocation(line: 2110, column: 5, scope: !2721)
!2735 = !DILocation(line: 2113, column: 5, scope: !2736)
!2736 = distinct !DILexicalBlock(scope: !2713, file: !3, line: 2112, column: 9)
!2737 = !DILocation(line: 2118, column: 8, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !2652, file: !3, line: 2118, column: 8)
!2739 = !DILocation(line: 2118, column: 15, scope: !2738)
!2740 = !DILocation(line: 2118, column: 19, scope: !2738)
!2741 = !DILocation(line: 2118, column: 31, scope: !2738)
!2742 = !DILocation(line: 2118, column: 34, scope: !2738)
!2743 = !DILocation(line: 2118, column: 41, scope: !2738)
!2744 = !DILocation(line: 2118, column: 8, scope: !2652)
!2745 = !DILocation(line: 2119, column: 5, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2738, file: !3, line: 2118, column: 46)
!2747 = !DILocation(line: 2119, column: 12, scope: !2746)
!2748 = !DILocation(line: 2119, column: 23, scope: !2746)
!2749 = !DILocation(line: 2120, column: 25, scope: !2746)
!2750 = !DILocation(line: 2120, column: 5, scope: !2746)
!2751 = !DILocation(line: 2120, column: 12, scope: !2746)
!2752 = !DILocation(line: 2120, column: 23, scope: !2746)
!2753 = !DILocation(line: 2121, column: 30, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2746, file: !3, line: 2121, column: 9)
!2755 = !DILocation(line: 2121, column: 37, scope: !2754)
!2756 = !DILocation(line: 2121, column: 10, scope: !2754)
!2757 = !DILocation(line: 2121, column: 9, scope: !2746)
!2758 = !DILocation(line: 2122, column: 20, scope: !2759)
!2759 = distinct !DILexicalBlock(scope: !2754, file: !3, line: 2121, column: 52)
!2760 = !DILocation(line: 2122, column: 23, scope: !2759)
!2761 = !DILocation(line: 2122, column: 6, scope: !2759)
!2762 = !DILocation(line: 2123, column: 6, scope: !2759)
!2763 = !DILocation(line: 2125, column: 5, scope: !2746)
!2764 = !DILocation(line: 2128, column: 5, scope: !2765)
!2765 = distinct !DILexicalBlock(scope: !2738, file: !3, line: 2127, column: 9)
!2766 = !DILocation(line: 2133, column: 8, scope: !2767)
!2767 = distinct !DILexicalBlock(scope: !2652, file: !3, line: 2133, column: 8)
!2768 = !DILocation(line: 2133, column: 15, scope: !2767)
!2769 = !DILocation(line: 2133, column: 19, scope: !2767)
!2770 = !DILocation(line: 2133, column: 8, scope: !2652)
!2771 = !DILocation(line: 2134, column: 25, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2767, file: !3, line: 2133, column: 32)
!2773 = !DILocation(line: 2134, column: 32, scope: !2772)
!2774 = !DILocation(line: 2134, column: 24, scope: !2772)
!2775 = !DILocation(line: 2134, column: 5, scope: !2772)
!2776 = !DILocation(line: 2134, column: 12, scope: !2772)
!2777 = !DILocation(line: 2134, column: 22, scope: !2772)
!2778 = !DILocation(line: 2135, column: 30, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2772, file: !3, line: 2135, column: 9)
!2780 = !DILocation(line: 2135, column: 37, scope: !2779)
!2781 = !DILocation(line: 2135, column: 10, scope: !2779)
!2782 = !DILocation(line: 2135, column: 9, scope: !2772)
!2783 = !DILocation(line: 2136, column: 20, scope: !2784)
!2784 = distinct !DILexicalBlock(scope: !2779, file: !3, line: 2135, column: 52)
!2785 = !DILocation(line: 2136, column: 23, scope: !2784)
!2786 = !DILocation(line: 2136, column: 6, scope: !2784)
!2787 = !DILocation(line: 2137, column: 6, scope: !2784)
!2788 = !DILocation(line: 2139, column: 5, scope: !2772)
!2789 = !DILocation(line: 2141, column: 4, scope: !2652)
!2790 = !DILocation(line: 2144, column: 8, scope: !2791)
!2791 = distinct !DILexicalBlock(scope: !2652, file: !3, line: 2144, column: 8)
!2792 = !DILocation(line: 2144, column: 15, scope: !2791)
!2793 = !DILocation(line: 2144, column: 19, scope: !2791)
!2794 = !DILocation(line: 2144, column: 8, scope: !2652)
!2795 = !DILocation(line: 2145, column: 5, scope: !2796)
!2796 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 2144, column: 32)
!2797 = !DILocation(line: 2145, column: 12, scope: !2796)
!2798 = !DILocation(line: 2145, column: 25, scope: !2796)
!2799 = !DILocation(line: 2146, column: 29, scope: !2796)
!2800 = !DILocation(line: 2146, column: 36, scope: !2796)
!2801 = !DILocation(line: 2146, column: 49, scope: !2796)
!2802 = !DILocation(line: 2146, column: 5, scope: !2796)
!2803 = !DILocation(line: 2146, column: 12, scope: !2796)
!2804 = !DILocation(line: 2146, column: 26, scope: !2796)
!2805 = !DILocation(line: 2148, column: 30, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2796, file: !3, line: 2148, column: 9)
!2807 = !DILocation(line: 2148, column: 37, scope: !2806)
!2808 = !DILocation(line: 2148, column: 10, scope: !2806)
!2809 = !DILocation(line: 2148, column: 9, scope: !2796)
!2810 = !DILocation(line: 2149, column: 20, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2806, file: !3, line: 2148, column: 52)
!2812 = !DILocation(line: 2149, column: 23, scope: !2811)
!2813 = !DILocation(line: 2149, column: 6, scope: !2811)
!2814 = !DILocation(line: 2150, column: 6, scope: !2811)
!2815 = !DILocation(line: 2152, column: 5, scope: !2796)
!2816 = !DILocation(line: 2154, column: 4, scope: !2652)
!2817 = !DILocation(line: 2157, column: 8, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2652, file: !3, line: 2157, column: 8)
!2819 = !DILocation(line: 2157, column: 15, scope: !2818)
!2820 = !DILocation(line: 2157, column: 19, scope: !2818)
!2821 = !DILocation(line: 2157, column: 8, scope: !2652)
!2822 = !DILocation(line: 2158, column: 25, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2818, file: !3, line: 2157, column: 32)
!2824 = !DILocation(line: 2158, column: 32, scope: !2823)
!2825 = !DILocation(line: 2158, column: 24, scope: !2823)
!2826 = !DILocation(line: 2158, column: 5, scope: !2823)
!2827 = !DILocation(line: 2158, column: 12, scope: !2823)
!2828 = !DILocation(line: 2158, column: 22, scope: !2823)
!2829 = !DILocation(line: 2159, column: 30, scope: !2830)
!2830 = distinct !DILexicalBlock(scope: !2823, file: !3, line: 2159, column: 9)
!2831 = !DILocation(line: 2159, column: 37, scope: !2830)
!2832 = !DILocation(line: 2159, column: 10, scope: !2830)
!2833 = !DILocation(line: 2159, column: 9, scope: !2823)
!2834 = !DILocation(line: 2160, column: 20, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !2830, file: !3, line: 2159, column: 52)
!2836 = !DILocation(line: 2160, column: 23, scope: !2835)
!2837 = !DILocation(line: 2160, column: 6, scope: !2835)
!2838 = !DILocation(line: 2161, column: 6, scope: !2835)
!2839 = !DILocation(line: 2163, column: 4, scope: !2823)
!2840 = !DILocation(line: 2164, column: 4, scope: !2652)
!2841 = !DILocation(line: 2168, column: 9, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2652, file: !3, line: 2168, column: 8)
!2843 = !DILocation(line: 2168, column: 16, scope: !2842)
!2844 = !DILocation(line: 2168, column: 8, scope: !2652)
!2845 = !DILocation(line: 2169, column: 19, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !2842, file: !3, line: 2168, column: 23)
!2847 = !DILocation(line: 2169, column: 22, scope: !2846)
!2848 = !DILocation(line: 2169, column: 5, scope: !2846)
!2849 = !DILocation(line: 2170, column: 5, scope: !2846)
!2850 = !DILocation(line: 2172, column: 8, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2652, file: !3, line: 2172, column: 8)
!2852 = !DILocation(line: 2172, column: 15, scope: !2851)
!2853 = !DILocation(line: 2172, column: 19, scope: !2851)
!2854 = !DILocation(line: 2172, column: 31, scope: !2851)
!2855 = !DILocation(line: 2172, column: 38, scope: !2851)
!2856 = !DILocation(line: 2172, column: 43, scope: !2851)
!2857 = !DILocation(line: 2172, column: 8, scope: !2652)
!2858 = !DILocation(line: 2173, column: 19, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2851, file: !3, line: 2172, column: 65)
!2860 = !DILocation(line: 2173, column: 22, scope: !2859)
!2861 = !DILocation(line: 2173, column: 29, scope: !2859)
!2862 = !DILocation(line: 2173, column: 36, scope: !2859)
!2863 = !DILocation(line: 2173, column: 5, scope: !2859)
!2864 = !DILocation(line: 2175, column: 30, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2859, file: !3, line: 2175, column: 9)
!2866 = !DILocation(line: 2175, column: 37, scope: !2865)
!2867 = !DILocation(line: 2175, column: 10, scope: !2865)
!2868 = !DILocation(line: 2175, column: 9, scope: !2859)
!2869 = !DILocation(line: 2176, column: 20, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2865, file: !3, line: 2175, column: 52)
!2871 = !DILocation(line: 2176, column: 23, scope: !2870)
!2872 = !DILocation(line: 2176, column: 6, scope: !2870)
!2873 = !DILocation(line: 2177, column: 6, scope: !2870)
!2874 = !DILocation(line: 2179, column: 5, scope: !2859)
!2875 = !DILocation(line: 2181, column: 4, scope: !2652)
!2876 = !DILocation(line: 2185, column: 8, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2652, file: !3, line: 2185, column: 8)
!2878 = !DILocation(line: 2185, column: 15, scope: !2877)
!2879 = !DILocation(line: 2185, column: 19, scope: !2877)
!2880 = !DILocation(line: 2185, column: 8, scope: !2652)
!2881 = !DILocation(line: 2186, column: 28, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2877, file: !3, line: 2185, column: 32)
!2883 = !DILocation(line: 2186, column: 35, scope: !2882)
!2884 = !DILocation(line: 2186, column: 27, scope: !2882)
!2885 = !DILocation(line: 2186, column: 5, scope: !2882)
!2886 = !DILocation(line: 2186, column: 12, scope: !2882)
!2887 = !DILocation(line: 2186, column: 25, scope: !2882)
!2888 = !DILocation(line: 2187, column: 30, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2882, file: !3, line: 2187, column: 9)
!2890 = !DILocation(line: 2187, column: 37, scope: !2889)
!2891 = !DILocation(line: 2187, column: 10, scope: !2889)
!2892 = !DILocation(line: 2187, column: 9, scope: !2882)
!2893 = !DILocation(line: 2188, column: 20, scope: !2894)
!2894 = distinct !DILexicalBlock(scope: !2889, file: !3, line: 2187, column: 52)
!2895 = !DILocation(line: 2188, column: 23, scope: !2894)
!2896 = !DILocation(line: 2188, column: 6, scope: !2894)
!2897 = !DILocation(line: 2189, column: 6, scope: !2894)
!2898 = !DILocation(line: 2191, column: 5, scope: !2882)
!2899 = !DILocation(line: 2194, column: 5, scope: !2900)
!2900 = distinct !DILexicalBlock(scope: !2877, file: !3, line: 2193, column: 9)
!2901 = !DILocation(line: 2199, column: 8, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2652, file: !3, line: 2199, column: 8)
!2903 = !DILocation(line: 2199, column: 15, scope: !2902)
!2904 = !DILocation(line: 2199, column: 19, scope: !2902)
!2905 = !DILocation(line: 2199, column: 8, scope: !2652)
!2906 = !DILocation(line: 2200, column: 34, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2902, file: !3, line: 2199, column: 32)
!2908 = !DILocation(line: 2200, column: 5, scope: !2907)
!2909 = !DILocation(line: 2202, column: 30, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2907, file: !3, line: 2202, column: 9)
!2911 = !DILocation(line: 2202, column: 37, scope: !2910)
!2912 = !DILocation(line: 2202, column: 10, scope: !2910)
!2913 = !DILocation(line: 2202, column: 9, scope: !2907)
!2914 = !DILocation(line: 2203, column: 20, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2910, file: !3, line: 2202, column: 52)
!2916 = !DILocation(line: 2203, column: 23, scope: !2915)
!2917 = !DILocation(line: 2203, column: 6, scope: !2915)
!2918 = !DILocation(line: 2204, column: 6, scope: !2915)
!2919 = !DILocation(line: 2206, column: 4, scope: !2907)
!2920 = !DILocation(line: 2207, column: 4, scope: !2652)
!2921 = !DILocation(line: 2210, column: 4, scope: !2652)
!2922 = !DILocation(line: 2214, column: 23, scope: !2629)
!2923 = !DILocation(line: 2214, column: 30, scope: !2629)
!2924 = !DILocation(line: 2214, column: 2, scope: !2629)
!2925 = !DILocation(line: 2215, column: 37, scope: !2629)
!2926 = !DILocation(line: 2215, column: 23, scope: !2629)
!2927 = !DILocation(line: 2215, column: 2, scope: !2629)
!2928 = !DILocation(line: 2216, column: 2, scope: !2629)
!2929 = !DILocation(line: 2217, column: 1, scope: !2629)
!2930 = distinct !DISubprogram(name: "stitch_exec", scope: !3, file: !3, line: 2008, type: !2931, scopeLine: 2009, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!2931 = !DISubroutineType(types: !2932)
!2932 = !{!22, !2510, !2597}
!2933 = !DILocalVariable(name: "C", arg: 1, scope: !2930, file: !3, line: 2008, type: !2510)
!2934 = !DILocation(line: 2008, column: 34, scope: !2930)
!2935 = !DILocalVariable(name: "op", arg: 2, scope: !2930, file: !3, line: 2008, type: !2597)
!2936 = !DILocation(line: 2008, column: 49, scope: !2930)
!2937 = !DILocalVariable(name: "scene", scope: !2930, file: !3, line: 2010, type: !2639)
!2938 = !DILocation(line: 2010, column: 9, scope: !2930)
!2939 = !DILocation(line: 2010, column: 32, scope: !2930)
!2940 = !DILocation(line: 2010, column: 17, scope: !2930)
!2941 = !DILocation(line: 2012, column: 19, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2930, file: !3, line: 2012, column: 6)
!2943 = !DILocation(line: 2012, column: 22, scope: !2942)
!2944 = !DILocation(line: 2012, column: 7, scope: !2942)
!2945 = !DILocation(line: 2012, column: 6, scope: !2930)
!2946 = !DILocation(line: 2013, column: 3, scope: !2942)
!2947 = !DILocation(line: 2014, column: 41, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2930, file: !3, line: 2014, column: 6)
!2949 = !DILocation(line: 2014, column: 45, scope: !2948)
!2950 = !DILocation(line: 2014, column: 26, scope: !2948)
!2951 = !DILocation(line: 2014, column: 57, scope: !2948)
!2952 = !DILocation(line: 2014, column: 6, scope: !2948)
!2953 = !DILocation(line: 2014, column: 6, scope: !2930)
!2954 = !DILocation(line: 2015, column: 15, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 2014, column: 68)
!2956 = !DILocation(line: 2015, column: 18, scope: !2955)
!2957 = !DILocation(line: 2015, column: 3, scope: !2955)
!2958 = !DILocation(line: 2016, column: 3, scope: !2955)
!2959 = !DILocation(line: 2019, column: 17, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 2018, column: 7)
!2961 = !DILocation(line: 2019, column: 20, scope: !2960)
!2962 = !DILocation(line: 2019, column: 3, scope: !2960)
!2963 = !DILocation(line: 2020, column: 3, scope: !2960)
!2964 = !DILocation(line: 2022, column: 1, scope: !2930)
!2965 = distinct !DISubprogram(name: "stitch_cancel", scope: !3, file: !3, line: 2002, type: !2966, scopeLine: 2003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!2966 = !DISubroutineType(types: !2967)
!2967 = !{null, !2510, !2597}
!2968 = !DILocalVariable(name: "C", arg: 1, scope: !2965, file: !3, line: 2002, type: !2510)
!2969 = !DILocation(line: 2002, column: 37, scope: !2965)
!2970 = !DILocalVariable(name: "op", arg: 2, scope: !2965, file: !3, line: 2002, type: !2597)
!2971 = !DILocation(line: 2002, column: 52, scope: !2965)
!2972 = !DILocation(line: 2004, column: 14, scope: !2965)
!2973 = !DILocation(line: 2004, column: 17, scope: !2965)
!2974 = !DILocation(line: 2004, column: 2, scope: !2965)
!2975 = !DILocation(line: 2005, column: 1, scope: !2965)
!2976 = distinct !DISubprogram(name: "stitch_init", scope: !3, file: !3, line: 1592, type: !2931, scopeLine: 1593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!2977 = !DILocalVariable(name: "C", arg: 1, scope: !2976, file: !3, line: 1592, type: !2510)
!2978 = !DILocation(line: 1592, column: 34, scope: !2976)
!2979 = !DILocalVariable(name: "op", arg: 2, scope: !2976, file: !3, line: 1592, type: !2597)
!2980 = !DILocation(line: 1592, column: 49, scope: !2976)
!2981 = !DILocalVariable(name: "edge_hash", scope: !2976, file: !3, line: 1595, type: !2379)
!2982 = !DILocation(line: 1595, column: 9, scope: !2976)
!2983 = !DILocalVariable(name: "edges", scope: !2976, file: !3, line: 1597, type: !2198)
!2984 = !DILocation(line: 1597, column: 10, scope: !2976)
!2985 = !DILocalVariable(name: "total_edges", scope: !2976, file: !3, line: 1598, type: !22)
!2986 = !DILocation(line: 1598, column: 6, scope: !2976)
!2987 = !DILocalVariable(name: "map", scope: !2976, file: !3, line: 1600, type: !2474)
!2988 = !DILocation(line: 1600, column: 7, scope: !2976)
!2989 = !DILocalVariable(name: "counter", scope: !2976, file: !3, line: 1601, type: !22)
!2990 = !DILocation(line: 1601, column: 6, scope: !2976)
!2991 = !DILocalVariable(name: "i", scope: !2976, file: !3, line: 1601, type: !22)
!2992 = !DILocation(line: 1601, column: 19, scope: !2976)
!2993 = !DILocalVariable(name: "efa", scope: !2976, file: !3, line: 1602, type: !2288)
!2994 = !DILocation(line: 1602, column: 10, scope: !2976)
!2995 = !DILocalVariable(name: "l", scope: !2976, file: !3, line: 1603, type: !2262)
!2996 = !DILocation(line: 1603, column: 10, scope: !2976)
!2997 = !DILocalVariable(name: "iter", scope: !2976, file: !3, line: 1604, type: !2998)
!2998 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter", file: !1946, line: 186, baseType: !2999)
!2999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter", file: !1946, line: 164, size: 512, elements: !3000)
!3000 = !{!3001, !3081, !3082, !3083, !3084}
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2999, file: !1946, line: 179, baseType: !3002, size: 320)
!3002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2999, file: !1946, line: 166, size: 320, elements: !3003)
!3003 = !{!3004, !3019, !3025, !3033, !3041, !3047, !3053, !3059, !3063, !3069, !3075}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "elem_of_mesh", scope: !3002, file: !1946, line: 167, baseType: !3005, size: 192)
!3005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__elem_of_mesh", file: !1946, line: 113, size: 192, elements: !3006)
!3006 = !{!3007}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "pooliter", scope: !3005, file: !1946, line: 114, baseType: !3008, size: 192)
!3008 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool_iter", file: !3009, line: 80, baseType: !3010)
!3009 = !DIFile(filename: "blender/source/blender/blenlib/BLI_mempool.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_iter", file: !3009, line: 76, size: 192, elements: !3011)
!3011 = !{!3012, !3015, !3018}
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !3010, file: !3009, line: 77, baseType: !3013, size: 64)
!3013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3014, size: 64)
!3014 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool", file: !3009, line: 47, baseType: !2330)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "curchunk", scope: !3010, file: !3009, line: 78, baseType: !3016, size: 64, offset: 64)
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 64)
!3017 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_chunk", file: !3009, line: 45, flags: DIFlagFwdDecl)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "curindex", scope: !3010, file: !3009, line: 79, baseType: !223, size: 32, offset: 128)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_vert", scope: !3002, file: !1946, line: 169, baseType: !3020, size: 192)
!3020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_vert", file: !1946, line: 116, size: 192, elements: !3021)
!3021 = !{!3022, !3023, !3024}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3020, file: !1946, line: 117, baseType: !2284, size: 64)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !3020, file: !1946, line: 118, baseType: !2286, size: 64, offset: 64)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !3020, file: !1946, line: 118, baseType: !2286, size: 64, offset: 128)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_vert", scope: !3002, file: !1946, line: 170, baseType: !3026, size: 320)
!3026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_vert", file: !1946, line: 120, size: 320, elements: !3027)
!3027 = !{!3028, !3029, !3030, !3031, !3032}
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3026, file: !1946, line: 121, baseType: !2284, size: 64)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3026, file: !1946, line: 122, baseType: !2262, size: 64, offset: 64)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3026, file: !1946, line: 122, baseType: !2262, size: 64, offset: 128)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !3026, file: !1946, line: 123, baseType: !2286, size: 64, offset: 192)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !3026, file: !1946, line: 123, baseType: !2286, size: 64, offset: 256)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_vert", scope: !3002, file: !1946, line: 171, baseType: !3034, size: 320)
!3034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_vert", file: !1946, line: 125, size: 320, elements: !3035)
!3035 = !{!3036, !3037, !3038, !3039, !3040}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3034, file: !1946, line: 126, baseType: !2284, size: 64)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3034, file: !1946, line: 127, baseType: !2262, size: 64, offset: 64)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3034, file: !1946, line: 127, baseType: !2262, size: 64, offset: 128)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !3034, file: !1946, line: 128, baseType: !2286, size: 64, offset: 192)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !3034, file: !1946, line: 128, baseType: !2286, size: 64, offset: 256)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_edge", scope: !3002, file: !1946, line: 172, baseType: !3042, size: 192)
!3042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_edge", file: !1946, line: 130, size: 192, elements: !3043)
!3043 = !{!3044, !3045, !3046}
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3042, file: !1946, line: 131, baseType: !2286, size: 64)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3042, file: !1946, line: 132, baseType: !2262, size: 64, offset: 64)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3042, file: !1946, line: 132, baseType: !2262, size: 64, offset: 128)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_loop", scope: !3002, file: !1946, line: 173, baseType: !3048, size: 192)
!3048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_loop", file: !1946, line: 134, size: 192, elements: !3049)
!3049 = !{!3050, !3051, !3052}
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !3048, file: !1946, line: 135, baseType: !2262, size: 64)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3048, file: !1946, line: 136, baseType: !2262, size: 64, offset: 64)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3048, file: !1946, line: 136, baseType: !2262, size: 64, offset: 128)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_edge", scope: !3002, file: !1946, line: 174, baseType: !3054, size: 192)
!3054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_edge", file: !1946, line: 138, size: 192, elements: !3055)
!3055 = !{!3056, !3057, !3058}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3054, file: !1946, line: 139, baseType: !2286, size: 64)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3054, file: !1946, line: 140, baseType: !2262, size: 64, offset: 64)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3054, file: !1946, line: 140, baseType: !2262, size: 64, offset: 128)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_edge", scope: !3002, file: !1946, line: 175, baseType: !3060, size: 64)
!3060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_edge", file: !1946, line: 142, size: 64, elements: !3061)
!3061 = !{!3062}
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3060, file: !1946, line: 143, baseType: !2286, size: 64)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_face", scope: !3002, file: !1946, line: 176, baseType: !3064, size: 192)
!3064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_face", file: !1946, line: 145, size: 192, elements: !3065)
!3065 = !{!3066, !3067, !3068}
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3064, file: !1946, line: 146, baseType: !2288, size: 64)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3064, file: !1946, line: 147, baseType: !2262, size: 64, offset: 64)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3064, file: !1946, line: 147, baseType: !2262, size: 64, offset: 128)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_face", scope: !3002, file: !1946, line: 177, baseType: !3070, size: 192)
!3070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_face", file: !1946, line: 149, size: 192, elements: !3071)
!3071 = !{!3072, !3073, !3074}
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3070, file: !1946, line: 150, baseType: !2288, size: 64)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3070, file: !1946, line: 151, baseType: !2262, size: 64, offset: 64)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3070, file: !1946, line: 151, baseType: !2262, size: 64, offset: 128)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_face", scope: !3002, file: !1946, line: 178, baseType: !3076, size: 192)
!3076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_face", file: !1946, line: 153, size: 192, elements: !3077)
!3077 = !{!3078, !3079, !3080}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3076, file: !1946, line: 154, baseType: !2288, size: 64)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3076, file: !1946, line: 155, baseType: !2262, size: 64, offset: 64)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !3076, file: !1946, line: 155, baseType: !2262, size: 64, offset: 128)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2999, file: !1946, line: 181, baseType: !2279, size: 64, offset: 320)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2999, file: !1946, line: 182, baseType: !2280, size: 64, offset: 384)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2999, file: !1946, line: 184, baseType: !22, size: 32, offset: 448)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "itype", scope: !2999, file: !1946, line: 185, baseType: !14, size: 8, offset: 480)
!3085 = !DILocation(line: 1604, column: 9, scope: !2976)
!3086 = !DILocalVariable(name: "liter", scope: !2976, file: !3, line: 1604, type: !2998)
!3087 = !DILocation(line: 1604, column: 15, scope: !2976)
!3088 = !DILocalVariable(name: "ghi", scope: !2976, file: !3, line: 1605, type: !3089)
!3089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3090, size: 64)
!3090 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHashIterator", file: !2292, line: 54, baseType: !3091)
!3091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GHashIterator", file: !2292, line: 50, size: 192, elements: !3092)
!3092 = !{!3093, !3094, !3097}
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "gh", scope: !3091, file: !2292, line: 51, baseType: !2379, size: 64)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "curEntry", scope: !3091, file: !2292, line: 52, baseType: !3095, size: 64, offset: 64)
!3095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3096, size: 64)
!3096 = !DICompositeType(tag: DW_TAG_structure_type, name: "Entry", file: !2292, line: 52, flags: DIFlagFwdDecl)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "curBucket", scope: !3091, file: !2292, line: 53, baseType: !223, size: 32, offset: 128)
!3098 = !DILocation(line: 1605, column: 17, scope: !2976)
!3099 = !DILocalVariable(name: "all_edges", scope: !2976, file: !3, line: 1606, type: !2198)
!3100 = !DILocation(line: 1606, column: 10, scope: !2976)
!3101 = !DILocalVariable(name: "state", scope: !2976, file: !3, line: 1607, type: !2300)
!3102 = !DILocation(line: 1607, column: 15, scope: !2976)
!3103 = !DILocalVariable(name: "scene", scope: !2976, file: !3, line: 1608, type: !2639)
!3104 = !DILocation(line: 1608, column: 9, scope: !2976)
!3105 = !DILocation(line: 1608, column: 32, scope: !2976)
!3106 = !DILocation(line: 1608, column: 17, scope: !2976)
!3107 = !DILocalVariable(name: "ts", scope: !2976, file: !3, line: 1609, type: !3108)
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3109, size: 64)
!3109 = !DIDerivedType(tag: DW_TAG_typedef, name: "ToolSettings", file: !154, line: 1180, baseType: !986)
!3110 = !DILocation(line: 1609, column: 16, scope: !2976)
!3111 = !DILocation(line: 1609, column: 21, scope: !2976)
!3112 = !DILocation(line: 1609, column: 28, scope: !2976)
!3113 = !DILocalVariable(name: "ar", scope: !2976, file: !3, line: 1610, type: !3114)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 64)
!3115 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !109, line: 267, baseType: !3116)
!3116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !109, line: 230, size: 3072, elements: !3117)
!3117 = !{!3118, !3120, !3121, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3116, file: !109, line: 231, baseType: !3119, size: 64)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3116, size: 64)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3116, file: !109, line: 231, baseType: !3119, size: 64, offset: 64)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !3116, file: !109, line: 233, baseType: !3122, size: 1280, offset: 128)
!3122 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !3123, line: 71, baseType: !3124)
!3123 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !3123, line: 40, size: 1280, elements: !3125)
!3125 = !{!3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3153}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !3124, file: !3123, line: 41, baseType: !514, size: 128)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !3124, file: !3123, line: 41, baseType: !514, size: 128, offset: 128)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !3124, file: !3123, line: 42, baseType: !1414, size: 128, offset: 256)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !3124, file: !3123, line: 42, baseType: !1414, size: 128, offset: 384)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3124, file: !3123, line: 43, baseType: !1414, size: 128, offset: 512)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !3124, file: !3123, line: 45, baseType: !419, size: 64, offset: 640)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3124, file: !3123, line: 45, baseType: !419, size: 64, offset: 704)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !3124, file: !3123, line: 46, baseType: !191, size: 32, offset: 768)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !3124, file: !3123, line: 46, baseType: !191, size: 32, offset: 800)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !3124, file: !3123, line: 48, baseType: !48, size: 16, offset: 832)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !3124, file: !3123, line: 49, baseType: !48, size: 16, offset: 848)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !3124, file: !3123, line: 51, baseType: !48, size: 16, offset: 864)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !3124, file: !3123, line: 52, baseType: !48, size: 16, offset: 880)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !3124, file: !3123, line: 53, baseType: !48, size: 16, offset: 896)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3124, file: !3123, line: 55, baseType: !48, size: 16, offset: 912)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3124, file: !3123, line: 56, baseType: !48, size: 16, offset: 928)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3124, file: !3123, line: 58, baseType: !48, size: 16, offset: 944)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3124, file: !3123, line: 58, baseType: !48, size: 16, offset: 960)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !3124, file: !3123, line: 59, baseType: !48, size: 16, offset: 976)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !3124, file: !3123, line: 59, baseType: !48, size: 16, offset: 992)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !3124, file: !3123, line: 61, baseType: !48, size: 16, offset: 1008)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !3124, file: !3123, line: 63, baseType: !2299, size: 64, offset: 1024)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !3124, file: !3123, line: 64, baseType: !22, size: 32, offset: 1088)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !3124, file: !3123, line: 65, baseType: !22, size: 32, offset: 1120)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !3124, file: !3123, line: 68, baseType: !3151, size: 64, offset: 1152)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 64)
!3152 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !3123, line: 68, flags: DIFlagFwdDecl)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !3124, file: !3123, line: 69, baseType: !94, size: 64, offset: 1216)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !3116, file: !109, line: 234, baseType: !1414, size: 128, offset: 1408)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !3116, file: !109, line: 235, baseType: !1414, size: 128, offset: 1536)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3116, file: !109, line: 236, baseType: !48, size: 16, offset: 1664)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3116, file: !109, line: 236, baseType: !48, size: 16, offset: 1680)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !3116, file: !109, line: 238, baseType: !48, size: 16, offset: 1696)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !3116, file: !109, line: 239, baseType: !48, size: 16, offset: 1712)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !3116, file: !109, line: 240, baseType: !48, size: 16, offset: 1728)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3116, file: !109, line: 241, baseType: !48, size: 16, offset: 1744)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !3116, file: !109, line: 243, baseType: !191, size: 32, offset: 1760)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !3116, file: !109, line: 244, baseType: !48, size: 16, offset: 1792)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !3116, file: !109, line: 244, baseType: !48, size: 16, offset: 1808)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !3116, file: !109, line: 246, baseType: !48, size: 16, offset: 1824)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !3116, file: !109, line: 247, baseType: !48, size: 16, offset: 1840)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !3116, file: !109, line: 248, baseType: !48, size: 16, offset: 1856)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !3116, file: !109, line: 249, baseType: !48, size: 16, offset: 1872)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !3116, file: !109, line: 250, baseType: !48, size: 16, offset: 1888)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3116, file: !109, line: 251, baseType: !48, size: 16, offset: 1904)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3116, file: !109, line: 253, baseType: !3172, size: 64, offset: 1920)
!3172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 64)
!3173 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !3174, line: 33, flags: DIFlagFwdDecl)
!3174 = !DIFile(filename: "blender/source/blender/editors/include/ED_uvedit.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !3116, file: !109, line: 255, baseType: !58, size: 128, offset: 1984)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !3116, file: !109, line: 256, baseType: !58, size: 128, offset: 2112)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !3116, file: !109, line: 257, baseType: !58, size: 128, offset: 2240)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !3116, file: !109, line: 258, baseType: !58, size: 128, offset: 2368)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !3116, file: !109, line: 259, baseType: !58, size: 128, offset: 2496)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !3116, file: !109, line: 260, baseType: !58, size: 128, offset: 2624)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !3116, file: !109, line: 261, baseType: !58, size: 128, offset: 2752)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !3116, file: !109, line: 263, baseType: !94, size: 64, offset: 2880)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !3116, file: !109, line: 265, baseType: !288, size: 64, offset: 2944)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !3116, file: !109, line: 266, baseType: !56, size: 64, offset: 3008)
!3185 = !DILocation(line: 1610, column: 11, scope: !2976)
!3186 = !DILocation(line: 1610, column: 30, scope: !2976)
!3187 = !DILocation(line: 1610, column: 16, scope: !2976)
!3188 = !DILocalVariable(name: "aspx", scope: !2976, file: !3, line: 1611, type: !191)
!3189 = !DILocation(line: 1611, column: 8, scope: !2976)
!3190 = !DILocalVariable(name: "aspy", scope: !2976, file: !3, line: 1611, type: !191)
!3191 = !DILocation(line: 1611, column: 14, scope: !2976)
!3192 = !DILocalVariable(name: "obedit", scope: !2976, file: !3, line: 1612, type: !2609)
!3193 = !DILocation(line: 1612, column: 10, scope: !2976)
!3194 = !DILocation(line: 1612, column: 40, scope: !2976)
!3195 = !DILocation(line: 1612, column: 19, scope: !2976)
!3196 = !DILocalVariable(name: "em", scope: !2976, file: !3, line: 1613, type: !2310)
!3197 = !DILocation(line: 1613, column: 14, scope: !2976)
!3198 = !DILocation(line: 1613, column: 44, scope: !2976)
!3199 = !DILocation(line: 1613, column: 19, scope: !2976)
!3200 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !2976, file: !3, line: 1614, type: !3201)
!3201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !22)
!3202 = !DILocation(line: 1614, column: 12, scope: !2976)
!3203 = !DILocation(line: 1614, column: 55, scope: !2976)
!3204 = !DILocation(line: 1614, column: 59, scope: !2976)
!3205 = !DILocation(line: 1614, column: 63, scope: !2976)
!3206 = !DILocation(line: 1614, column: 32, scope: !2976)
!3207 = !DILocation(line: 1616, column: 7, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1616, column: 6)
!3209 = !DILocation(line: 1616, column: 6, scope: !2976)
!3210 = !DILocation(line: 1617, column: 3, scope: !3208)
!3211 = !DILocation(line: 1619, column: 10, scope: !2976)
!3212 = !DILocation(line: 1619, column: 8, scope: !2976)
!3213 = !DILocation(line: 1621, column: 19, scope: !2976)
!3214 = !DILocation(line: 1621, column: 2, scope: !2976)
!3215 = !DILocation(line: 1621, column: 6, scope: !2976)
!3216 = !DILocation(line: 1621, column: 17, scope: !2976)
!3217 = !DILocation(line: 1624, column: 37, scope: !2976)
!3218 = !DILocation(line: 1624, column: 41, scope: !2976)
!3219 = !DILocation(line: 1624, column: 21, scope: !2976)
!3220 = !DILocation(line: 1624, column: 2, scope: !2976)
!3221 = !DILocation(line: 1624, column: 9, scope: !2976)
!3222 = !DILocation(line: 1624, column: 19, scope: !2976)
!3223 = !DILocation(line: 1625, column: 36, scope: !2976)
!3224 = !DILocation(line: 1625, column: 40, scope: !2976)
!3225 = !DILocation(line: 1625, column: 22, scope: !2976)
!3226 = !DILocation(line: 1625, column: 2, scope: !2976)
!3227 = !DILocation(line: 1625, column: 9, scope: !2976)
!3228 = !DILocation(line: 1625, column: 20, scope: !2976)
!3229 = !DILocation(line: 1626, column: 14, scope: !2976)
!3230 = !DILocation(line: 1626, column: 2, scope: !2976)
!3231 = !DILocation(line: 1626, column: 9, scope: !2976)
!3232 = !DILocation(line: 1626, column: 12, scope: !2976)
!3233 = !DILocation(line: 1627, column: 40, scope: !2976)
!3234 = !DILocation(line: 1627, column: 44, scope: !2976)
!3235 = !DILocation(line: 1627, column: 24, scope: !2976)
!3236 = !DILocation(line: 1627, column: 2, scope: !2976)
!3237 = !DILocation(line: 1627, column: 9, scope: !2976)
!3238 = !DILocation(line: 1627, column: 22, scope: !2976)
!3239 = !DILocation(line: 1628, column: 37, scope: !2976)
!3240 = !DILocation(line: 1628, column: 41, scope: !2976)
!3241 = !DILocation(line: 1628, column: 25, scope: !2976)
!3242 = !DILocation(line: 1628, column: 2, scope: !2976)
!3243 = !DILocation(line: 1628, column: 9, scope: !2976)
!3244 = !DILocation(line: 1628, column: 23, scope: !2976)
!3245 = !DILocation(line: 1629, column: 37, scope: !2976)
!3246 = !DILocation(line: 1629, column: 41, scope: !2976)
!3247 = !DILocation(line: 1629, column: 21, scope: !2976)
!3248 = !DILocation(line: 1629, column: 2, scope: !2976)
!3249 = !DILocation(line: 1629, column: 9, scope: !2976)
!3250 = !DILocation(line: 1629, column: 19, scope: !2976)
!3251 = !DILocation(line: 1630, column: 39, scope: !2976)
!3252 = !DILocation(line: 1630, column: 43, scope: !2976)
!3253 = !DILocation(line: 1630, column: 23, scope: !2976)
!3254 = !DILocation(line: 1630, column: 2, scope: !2976)
!3255 = !DILocation(line: 1630, column: 9, scope: !2976)
!3256 = !DILocation(line: 1630, column: 21, scope: !2976)
!3257 = !DILocation(line: 1631, column: 33, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1631, column: 6)
!3259 = !DILocation(line: 1631, column: 37, scope: !3258)
!3260 = !DILocation(line: 1631, column: 6, scope: !3258)
!3261 = !DILocation(line: 1631, column: 6, scope: !2976)
!3262 = !DILocation(line: 1632, column: 30, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3258, file: !3, line: 1631, column: 51)
!3264 = !DILocation(line: 1632, column: 34, scope: !3263)
!3265 = !DILocation(line: 1632, column: 17, scope: !3263)
!3266 = !DILocation(line: 1632, column: 3, scope: !3263)
!3267 = !DILocation(line: 1632, column: 10, scope: !3263)
!3268 = !DILocation(line: 1632, column: 15, scope: !3263)
!3269 = !DILocation(line: 1633, column: 2, scope: !3263)
!3270 = !DILocation(line: 1635, column: 7, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3272, file: !3, line: 1635, column: 7)
!3272 = distinct !DILexicalBlock(scope: !3258, file: !3, line: 1634, column: 7)
!3273 = !DILocation(line: 1635, column: 11, scope: !3271)
!3274 = !DILocation(line: 1635, column: 19, scope: !3271)
!3275 = !DILocation(line: 1635, column: 7, scope: !3272)
!3276 = !DILocation(line: 1636, column: 8, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3278, file: !3, line: 1636, column: 8)
!3278 = distinct !DILexicalBlock(scope: !3271, file: !3, line: 1635, column: 40)
!3279 = !DILocation(line: 1636, column: 12, scope: !3277)
!3280 = !DILocation(line: 1636, column: 23, scope: !3277)
!3281 = !DILocation(line: 1636, column: 8, scope: !3278)
!3282 = !DILocation(line: 1637, column: 5, scope: !3277)
!3283 = !DILocation(line: 1637, column: 12, scope: !3277)
!3284 = !DILocation(line: 1637, column: 17, scope: !3277)
!3285 = !DILocation(line: 1639, column: 5, scope: !3277)
!3286 = !DILocation(line: 1639, column: 12, scope: !3277)
!3287 = !DILocation(line: 1639, column: 17, scope: !3277)
!3288 = !DILocation(line: 1640, column: 3, scope: !3278)
!3289 = !DILocation(line: 1642, column: 8, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3291, file: !3, line: 1642, column: 8)
!3291 = distinct !DILexicalBlock(scope: !3271, file: !3, line: 1641, column: 8)
!3292 = !DILocation(line: 1642, column: 12, scope: !3290)
!3293 = !DILocation(line: 1642, column: 26, scope: !3290)
!3294 = !DILocation(line: 1642, column: 8, scope: !3291)
!3295 = !DILocation(line: 1643, column: 5, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3290, file: !3, line: 1642, column: 46)
!3297 = !DILocation(line: 1643, column: 12, scope: !3296)
!3298 = !DILocation(line: 1643, column: 17, scope: !3296)
!3299 = !DILocation(line: 1644, column: 4, scope: !3296)
!3300 = !DILocation(line: 1646, column: 5, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3290, file: !3, line: 1645, column: 9)
!3302 = !DILocation(line: 1646, column: 12, scope: !3301)
!3303 = !DILocation(line: 1646, column: 17, scope: !3301)
!3304 = !DILocation(line: 1652, column: 6, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1652, column: 6)
!3306 = !DILocation(line: 1652, column: 10, scope: !3305)
!3307 = !DILocation(line: 1652, column: 18, scope: !3305)
!3308 = !DILocation(line: 1652, column: 6, scope: !2976)
!3309 = !DILocation(line: 1653, column: 49, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 1652, column: 39)
!3311 = !DILocation(line: 1653, column: 56, scope: !3310)
!3312 = !DILocation(line: 1653, column: 60, scope: !3310)
!3313 = !DILocation(line: 1653, column: 24, scope: !3310)
!3314 = !DILocation(line: 1653, column: 3, scope: !3310)
!3315 = !DILocation(line: 1653, column: 10, scope: !3310)
!3316 = !DILocation(line: 1653, column: 22, scope: !3310)
!3317 = !DILocation(line: 1654, column: 2, scope: !3310)
!3318 = !DILocation(line: 1656, column: 49, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 1655, column: 7)
!3320 = !DILocation(line: 1656, column: 56, scope: !3319)
!3321 = !DILocation(line: 1656, column: 60, scope: !3319)
!3322 = !DILocation(line: 1656, column: 24, scope: !3319)
!3323 = !DILocation(line: 1656, column: 3, scope: !3319)
!3324 = !DILocation(line: 1656, column: 10, scope: !3319)
!3325 = !DILocation(line: 1656, column: 22, scope: !3319)
!3326 = !DILocation(line: 1658, column: 7, scope: !3327)
!3327 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1658, column: 6)
!3328 = !DILocation(line: 1658, column: 14, scope: !3327)
!3329 = !DILocation(line: 1658, column: 6, scope: !2976)
!3330 = !DILocation(line: 1659, column: 16, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3327, file: !3, line: 1658, column: 27)
!3332 = !DILocation(line: 1659, column: 3, scope: !3331)
!3333 = !DILocation(line: 1660, column: 3, scope: !3331)
!3334 = !DILocation(line: 1663, column: 20, scope: !2976)
!3335 = !DILocation(line: 1663, column: 27, scope: !2976)
!3336 = !DILocation(line: 1663, column: 35, scope: !2976)
!3337 = !DILocation(line: 1663, column: 2, scope: !2976)
!3338 = !DILocation(line: 1664, column: 18, scope: !2976)
!3339 = !DILocation(line: 1664, column: 25, scope: !2976)
!3340 = !DILocation(line: 1664, column: 23, scope: !2976)
!3341 = !DILocation(line: 1664, column: 2, scope: !2976)
!3342 = !DILocation(line: 1664, column: 9, scope: !2976)
!3343 = !DILocation(line: 1664, column: 16, scope: !2976)
!3344 = !DILocation(line: 1668, column: 26, scope: !2976)
!3345 = !DILocation(line: 1668, column: 33, scope: !2976)
!3346 = !DILocation(line: 1668, column: 46, scope: !2976)
!3347 = !DILocation(line: 1668, column: 2, scope: !2976)
!3348 = !DILocation(line: 1668, column: 9, scope: !2976)
!3349 = !DILocation(line: 1668, column: 23, scope: !2976)
!3350 = !DILocation(line: 1671, column: 9, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1671, column: 2)
!3352 = !DILocation(line: 1671, column: 7, scope: !3351)
!3353 = !DILocation(line: 1671, column: 14, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3351, file: !3, line: 1671, column: 2)
!3355 = !DILocation(line: 1671, column: 18, scope: !3354)
!3356 = !DILocation(line: 1671, column: 25, scope: !3354)
!3357 = !DILocation(line: 1671, column: 38, scope: !3354)
!3358 = !DILocation(line: 1671, column: 16, scope: !3354)
!3359 = !DILocation(line: 1671, column: 2, scope: !3351)
!3360 = !DILocation(line: 1672, column: 7, scope: !3361)
!3361 = distinct !DILexicalBlock(scope: !3362, file: !3, line: 1672, column: 7)
!3362 = distinct !DILexicalBlock(scope: !3354, file: !3, line: 1671, column: 53)
!3363 = !DILocation(line: 1672, column: 14, scope: !3361)
!3364 = !DILocation(line: 1672, column: 27, scope: !3361)
!3365 = !DILocation(line: 1672, column: 31, scope: !3361)
!3366 = !DILocation(line: 1672, column: 34, scope: !3361)
!3367 = !DILocation(line: 1672, column: 7, scope: !3362)
!3368 = !DILocation(line: 1673, column: 11, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3361, file: !3, line: 1672, column: 44)
!3370 = !DILocation(line: 1674, column: 3, scope: !3369)
!3371 = !DILocation(line: 1675, column: 2, scope: !3362)
!3372 = !DILocation(line: 1671, column: 49, scope: !3354)
!3373 = !DILocation(line: 1671, column: 2, scope: !3354)
!3374 = distinct !{!3374, !3359, !3375}
!3375 = !DILocation(line: 1675, column: 2, scope: !3351)
!3376 = !DILocation(line: 1678, column: 2, scope: !2976)
!3377 = !DILocation(line: 1678, column: 9, scope: !2976)
!3378 = !DILocation(line: 1678, column: 24, scope: !2976)
!3379 = !DILocation(line: 1680, column: 15, scope: !2976)
!3380 = !DILocation(line: 1680, column: 49, scope: !2976)
!3381 = !DILocation(line: 1680, column: 47, scope: !2976)
!3382 = !DILocation(line: 1680, column: 2, scope: !2976)
!3383 = !DILocation(line: 1680, column: 9, scope: !2976)
!3384 = !DILocation(line: 1680, column: 13, scope: !2976)
!3385 = !DILocation(line: 1683, column: 19, scope: !2976)
!3386 = !DILocation(line: 1683, column: 57, scope: !2976)
!3387 = !DILocation(line: 1683, column: 55, scope: !2976)
!3388 = !DILocation(line: 1683, column: 65, scope: !2976)
!3389 = !DILocation(line: 1683, column: 2, scope: !2976)
!3390 = !DILocation(line: 1683, column: 9, scope: !2976)
!3391 = !DILocation(line: 1683, column: 17, scope: !2976)
!3392 = !DILocation(line: 1684, column: 30, scope: !2976)
!3393 = !DILocation(line: 1684, column: 2, scope: !2976)
!3394 = !DILocation(line: 1684, column: 9, scope: !2976)
!3395 = !DILocation(line: 1684, column: 28, scope: !2976)
!3396 = !DILocation(line: 1685, column: 21, scope: !2976)
!3397 = !DILocation(line: 1685, column: 48, scope: !2976)
!3398 = !DILocation(line: 1685, column: 55, scope: !2976)
!3399 = !DILocation(line: 1685, column: 68, scope: !2976)
!3400 = !DILocation(line: 1685, column: 46, scope: !2976)
!3401 = !DILocation(line: 1685, column: 19, scope: !2976)
!3402 = !DILocation(line: 1685, column: 2, scope: !2976)
!3403 = !DILocation(line: 1685, column: 9, scope: !2976)
!3404 = !DILocation(line: 1685, column: 13, scope: !2976)
!3405 = !DILocation(line: 1687, column: 14, scope: !2976)
!3406 = !DILocation(line: 1687, column: 12, scope: !2976)
!3407 = !DILocation(line: 1688, column: 14, scope: !2976)
!3408 = !DILocation(line: 1688, column: 47, scope: !2976)
!3409 = !DILocation(line: 1688, column: 54, scope: !2976)
!3410 = !DILocation(line: 1688, column: 67, scope: !2976)
!3411 = !DILocation(line: 1688, column: 45, scope: !2976)
!3412 = !DILocation(line: 1688, column: 12, scope: !2976)
!3413 = !DILocation(line: 1690, column: 7, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1690, column: 6)
!3415 = !DILocation(line: 1690, column: 14, scope: !3414)
!3416 = !DILocation(line: 1690, column: 18, scope: !3414)
!3417 = !DILocation(line: 1690, column: 22, scope: !3414)
!3418 = !DILocation(line: 1690, column: 26, scope: !3414)
!3419 = !DILocation(line: 1690, column: 30, scope: !3414)
!3420 = !DILocation(line: 1690, column: 40, scope: !3414)
!3421 = !DILocation(line: 1690, column: 44, scope: !3414)
!3422 = !DILocation(line: 1690, column: 6, scope: !2976)
!3423 = !DILocation(line: 1691, column: 16, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 1690, column: 55)
!3425 = !DILocation(line: 1691, column: 3, scope: !3424)
!3426 = !DILocation(line: 1692, column: 3, scope: !3424)
!3427 = !DILocation(line: 1696, column: 10, scope: !2976)
!3428 = !DILocation(line: 1698, column: 9, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1698, column: 2)
!3430 = !DILocation(line: 1698, column: 7, scope: !3429)
!3431 = !DILocation(line: 1698, column: 14, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3429, file: !3, line: 1698, column: 2)
!3433 = !DILocation(line: 1698, column: 18, scope: !3432)
!3434 = !DILocation(line: 1698, column: 22, scope: !3432)
!3435 = !DILocation(line: 1698, column: 26, scope: !3432)
!3436 = !DILocation(line: 1698, column: 16, scope: !3432)
!3437 = !DILocation(line: 1698, column: 2, scope: !3429)
!3438 = !DILocalVariable(name: "element", scope: !3439, file: !3, line: 1699, type: !2206)
!3439 = distinct !DILexicalBlock(scope: !3432, file: !3, line: 1698, column: 40)
!3440 = !DILocation(line: 1699, column: 14, scope: !3439)
!3441 = !DILocation(line: 1699, column: 24, scope: !3439)
!3442 = !DILocation(line: 1699, column: 31, scope: !3439)
!3443 = !DILocation(line: 1699, column: 44, scope: !3439)
!3444 = !DILocation(line: 1699, column: 49, scope: !3439)
!3445 = !DILocation(line: 1700, column: 3, scope: !3439)
!3446 = !DILocation(line: 1700, column: 10, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3448, file: !3, line: 1700, column: 3)
!3448 = distinct !DILexicalBlock(scope: !3439, file: !3, line: 1700, column: 3)
!3449 = !DILocation(line: 1700, column: 3, scope: !3448)
!3450 = !DILocation(line: 1701, column: 8, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3452, file: !3, line: 1701, column: 8)
!3452 = distinct !DILexicalBlock(scope: !3447, file: !3, line: 1700, column: 44)
!3453 = !DILocation(line: 1701, column: 17, scope: !3451)
!3454 = !DILocation(line: 1701, column: 8, scope: !3452)
!3455 = !DILocation(line: 1702, column: 12, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3451, file: !3, line: 1701, column: 27)
!3457 = !DILocation(line: 1703, column: 27, scope: !3456)
!3458 = !DILocation(line: 1703, column: 5, scope: !3456)
!3459 = !DILocation(line: 1703, column: 12, scope: !3456)
!3460 = !DILocation(line: 1703, column: 16, scope: !3456)
!3461 = !DILocation(line: 1703, column: 25, scope: !3456)
!3462 = !DILocation(line: 1704, column: 4, scope: !3456)
!3463 = !DILocation(line: 1706, column: 45, scope: !3452)
!3464 = !DILocation(line: 1706, column: 4, scope: !3452)
!3465 = !DILocation(line: 1706, column: 8, scope: !3452)
!3466 = !DILocation(line: 1706, column: 18, scope: !3452)
!3467 = !DILocation(line: 1706, column: 25, scope: !3452)
!3468 = !DILocation(line: 1706, column: 38, scope: !3452)
!3469 = !DILocation(line: 1706, column: 16, scope: !3452)
!3470 = !DILocation(line: 1706, column: 43, scope: !3452)
!3471 = !DILocation(line: 1707, column: 3, scope: !3452)
!3472 = !DILocation(line: 1700, column: 29, scope: !3447)
!3473 = !DILocation(line: 1700, column: 38, scope: !3447)
!3474 = !DILocation(line: 1700, column: 27, scope: !3447)
!3475 = !DILocation(line: 1700, column: 3, scope: !3447)
!3476 = distinct !{!3476, !3449, !3477}
!3477 = !DILocation(line: 1707, column: 3, scope: !3448)
!3478 = !DILocation(line: 1708, column: 2, scope: !3439)
!3479 = !DILocation(line: 1698, column: 36, scope: !3432)
!3480 = !DILocation(line: 1698, column: 2, scope: !3432)
!3481 = distinct !{!3481, !3437, !3482}
!3482 = !DILocation(line: 1708, column: 2, scope: !3429)
!3483 = !DILocation(line: 1710, column: 10, scope: !2976)
!3484 = !DILocation(line: 1712, column: 2, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1712, column: 2)
!3486 = !DILocation(line: 1712, column: 2, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3485, file: !3, line: 1712, column: 2)
!3488 = !DILocation(line: 1713, column: 9, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3490, file: !3, line: 1713, column: 7)
!3490 = distinct !DILexicalBlock(scope: !3487, file: !3, line: 1712, column: 54)
!3491 = !DILocation(line: 1713, column: 13, scope: !3489)
!3492 = !DILocation(line: 1713, column: 21, scope: !3489)
!3493 = !DILocation(line: 1713, column: 42, scope: !3489)
!3494 = !DILocation(line: 1713, column: 47, scope: !3489)
!3495 = !DILocation(line: 1713, column: 46, scope: !3489)
!3496 = !DILocation(line: 1713, column: 87, scope: !3489)
!3497 = !DILocation(line: 1713, column: 91, scope: !3489)
!3498 = !DILocation(line: 1713, column: 7, scope: !3490)
!3499 = !DILocation(line: 1714, column: 4, scope: !3489)
!3500 = !DILocation(line: 1716, column: 3, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3490, file: !3, line: 1716, column: 3)
!3502 = !DILocation(line: 1716, column: 3, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3501, file: !3, line: 1716, column: 3)
!3504 = !DILocalVariable(name: "element", scope: !3505, file: !3, line: 1717, type: !2206)
!3505 = distinct !DILexicalBlock(scope: !3503, file: !3, line: 1716, column: 51)
!3506 = !DILocation(line: 1717, column: 15, scope: !3505)
!3507 = !DILocation(line: 1717, column: 43, scope: !3505)
!3508 = !DILocation(line: 1717, column: 50, scope: !3505)
!3509 = !DILocation(line: 1717, column: 63, scope: !3505)
!3510 = !DILocation(line: 1717, column: 68, scope: !3505)
!3511 = !DILocation(line: 1717, column: 25, scope: !3505)
!3512 = !DILocalVariable(name: "offset1", scope: !3505, file: !3, line: 1718, type: !22)
!3513 = !DILocation(line: 1718, column: 8, scope: !3505)
!3514 = !DILocalVariable(name: "itmp1", scope: !3505, file: !3, line: 1718, type: !22)
!3515 = !DILocation(line: 1718, column: 17, scope: !3505)
!3516 = !DILocation(line: 1718, column: 25, scope: !3505)
!3517 = !DILocation(line: 1718, column: 35, scope: !3505)
!3518 = !DILocation(line: 1718, column: 42, scope: !3505)
!3519 = !DILocation(line: 1718, column: 55, scope: !3505)
!3520 = !DILocation(line: 1718, column: 33, scope: !3505)
!3521 = !DILocalVariable(name: "offset2", scope: !3505, file: !3, line: 1719, type: !22)
!3522 = !DILocation(line: 1719, column: 8, scope: !3505)
!3523 = !DILocalVariable(name: "itmp2", scope: !3505, file: !3, line: 1719, type: !22)
!3524 = !DILocation(line: 1719, column: 17, scope: !3505)
!3525 = !DILocation(line: 1719, column: 43, scope: !3505)
!3526 = !DILocation(line: 1719, column: 50, scope: !3505)
!3527 = !DILocation(line: 1719, column: 63, scope: !3505)
!3528 = !DILocation(line: 1719, column: 68, scope: !3505)
!3529 = !DILocation(line: 1719, column: 71, scope: !3505)
!3530 = !DILocation(line: 1719, column: 25, scope: !3505)
!3531 = !DILocation(line: 1719, column: 79, scope: !3505)
!3532 = !DILocation(line: 1719, column: 86, scope: !3505)
!3533 = !DILocation(line: 1719, column: 99, scope: !3505)
!3534 = !DILocation(line: 1719, column: 77, scope: !3505)
!3535 = !DILocalVariable(name: "edge", scope: !3505, file: !3, line: 1720, type: !2198)
!3536 = !DILocation(line: 1720, column: 12, scope: !3505)
!3537 = !DILocation(line: 1722, column: 14, scope: !3505)
!3538 = !DILocation(line: 1722, column: 18, scope: !3505)
!3539 = !DILocation(line: 1722, column: 12, scope: !3505)
!3540 = !DILocation(line: 1723, column: 14, scope: !3505)
!3541 = !DILocation(line: 1723, column: 18, scope: !3505)
!3542 = !DILocation(line: 1723, column: 12, scope: !3505)
!3543 = !DILocation(line: 1725, column: 4, scope: !3505)
!3544 = !DILocation(line: 1725, column: 14, scope: !3505)
!3545 = !DILocation(line: 1725, column: 23, scope: !3505)
!3546 = !DILocation(line: 1725, column: 28, scope: !3505)
!3547 = !DILocation(line: 1726, column: 4, scope: !3505)
!3548 = !DILocation(line: 1726, column: 14, scope: !3505)
!3549 = !DILocation(line: 1726, column: 23, scope: !3505)
!3550 = !DILocation(line: 1726, column: 29, scope: !3505)
!3551 = !DILocation(line: 1727, column: 4, scope: !3505)
!3552 = !DILocation(line: 1727, column: 14, scope: !3505)
!3553 = !DILocation(line: 1727, column: 23, scope: !3505)
!3554 = !DILocation(line: 1727, column: 28, scope: !3505)
!3555 = !DILocation(line: 1728, column: 33, scope: !3505)
!3556 = !DILocation(line: 1728, column: 4, scope: !3505)
!3557 = !DILocation(line: 1728, column: 14, scope: !3505)
!3558 = !DILocation(line: 1728, column: 23, scope: !3505)
!3559 = !DILocation(line: 1728, column: 31, scope: !3505)
!3560 = !DILocation(line: 1731, column: 8, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3505, file: !3, line: 1731, column: 8)
!3562 = !DILocation(line: 1731, column: 18, scope: !3561)
!3563 = !DILocation(line: 1731, column: 16, scope: !3561)
!3564 = !DILocation(line: 1731, column: 8, scope: !3505)
!3565 = !DILocation(line: 1732, column: 30, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 1731, column: 27)
!3567 = !DILocation(line: 1732, column: 5, scope: !3566)
!3568 = !DILocation(line: 1732, column: 15, scope: !3566)
!3569 = !DILocation(line: 1732, column: 24, scope: !3566)
!3570 = !DILocation(line: 1732, column: 28, scope: !3566)
!3571 = !DILocation(line: 1733, column: 30, scope: !3566)
!3572 = !DILocation(line: 1733, column: 5, scope: !3566)
!3573 = !DILocation(line: 1733, column: 15, scope: !3566)
!3574 = !DILocation(line: 1733, column: 24, scope: !3566)
!3575 = !DILocation(line: 1733, column: 28, scope: !3566)
!3576 = !DILocation(line: 1734, column: 4, scope: !3566)
!3577 = !DILocation(line: 1736, column: 30, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 1735, column: 9)
!3579 = !DILocation(line: 1736, column: 5, scope: !3578)
!3580 = !DILocation(line: 1736, column: 15, scope: !3578)
!3581 = !DILocation(line: 1736, column: 24, scope: !3578)
!3582 = !DILocation(line: 1736, column: 28, scope: !3578)
!3583 = !DILocation(line: 1737, column: 30, scope: !3578)
!3584 = !DILocation(line: 1737, column: 5, scope: !3578)
!3585 = !DILocation(line: 1737, column: 15, scope: !3578)
!3586 = !DILocation(line: 1737, column: 24, scope: !3578)
!3587 = !DILocation(line: 1737, column: 28, scope: !3578)
!3588 = !DILocation(line: 1740, column: 28, scope: !3505)
!3589 = !DILocation(line: 1740, column: 40, scope: !3505)
!3590 = !DILocation(line: 1740, column: 50, scope: !3505)
!3591 = !DILocation(line: 1740, column: 39, scope: !3505)
!3592 = !DILocation(line: 1740, column: 11, scope: !3505)
!3593 = !DILocation(line: 1740, column: 9, scope: !3505)
!3594 = !DILocation(line: 1741, column: 8, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3505, file: !3, line: 1741, column: 8)
!3596 = !DILocation(line: 1741, column: 8, scope: !3505)
!3597 = !DILocation(line: 1742, column: 5, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3595, file: !3, line: 1741, column: 14)
!3599 = !DILocation(line: 1742, column: 11, scope: !3598)
!3600 = !DILocation(line: 1742, column: 16, scope: !3598)
!3601 = !DILocation(line: 1743, column: 4, scope: !3598)
!3602 = !DILocation(line: 1745, column: 22, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3595, file: !3, line: 1744, column: 9)
!3604 = !DILocation(line: 1745, column: 34, scope: !3603)
!3605 = !DILocation(line: 1745, column: 44, scope: !3603)
!3606 = !DILocation(line: 1745, column: 33, scope: !3603)
!3607 = !DILocation(line: 1745, column: 55, scope: !3603)
!3608 = !DILocation(line: 1745, column: 65, scope: !3603)
!3609 = !DILocation(line: 1745, column: 54, scope: !3603)
!3610 = !DILocation(line: 1745, column: 5, scope: !3603)
!3611 = !DILocation(line: 1746, column: 5, scope: !3603)
!3612 = !DILocation(line: 1746, column: 15, scope: !3603)
!3613 = !DILocation(line: 1746, column: 24, scope: !3603)
!3614 = !DILocation(line: 1746, column: 29, scope: !3603)
!3615 = !DILocation(line: 1748, column: 11, scope: !3505)
!3616 = !DILocation(line: 1749, column: 3, scope: !3505)
!3617 = distinct !{!3617, !3500, !3618}
!3618 = !DILocation(line: 1749, column: 3, scope: !3501)
!3619 = !DILocation(line: 1750, column: 2, scope: !3490)
!3620 = distinct !{!3620, !3484, !3621}
!3621 = !DILocation(line: 1750, column: 2, scope: !3485)
!3622 = !DILocation(line: 1753, column: 30, scope: !2976)
!3623 = !DILocation(line: 1753, column: 8, scope: !2976)
!3624 = !DILocation(line: 1753, column: 6, scope: !2976)
!3625 = !DILocation(line: 1754, column: 31, scope: !2976)
!3626 = !DILocation(line: 1754, column: 16, scope: !2976)
!3627 = !DILocation(line: 1754, column: 14, scope: !2976)
!3628 = !DILocation(line: 1755, column: 25, scope: !2976)
!3629 = !DILocation(line: 1755, column: 54, scope: !2976)
!3630 = !DILocation(line: 1755, column: 52, scope: !2976)
!3631 = !DILocation(line: 1755, column: 23, scope: !2976)
!3632 = !DILocation(line: 1755, column: 2, scope: !2976)
!3633 = !DILocation(line: 1755, column: 9, scope: !2976)
!3634 = !DILocation(line: 1755, column: 15, scope: !2976)
!3635 = !DILocation(line: 1758, column: 7, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1758, column: 6)
!3637 = !DILocation(line: 1758, column: 6, scope: !2976)
!3638 = !DILocation(line: 1759, column: 26, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3636, file: !3, line: 1758, column: 14)
!3640 = !DILocation(line: 1759, column: 3, scope: !3639)
!3641 = !DILocation(line: 1760, column: 16, scope: !3639)
!3642 = !DILocation(line: 1760, column: 3, scope: !3639)
!3643 = !DILocation(line: 1761, column: 3, scope: !3639)
!3644 = !DILocation(line: 1764, column: 32, scope: !2976)
!3645 = !DILocation(line: 1764, column: 2, scope: !2976)
!3646 = !DILocation(line: 1764, column: 9, scope: !2976)
!3647 = !DILocation(line: 1764, column: 30, scope: !2976)
!3648 = !DILocation(line: 1767, column: 9, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1767, column: 2)
!3650 = !DILocation(line: 1767, column: 37, scope: !3649)
!3651 = !DILocation(line: 1767, column: 42, scope: !3649)
!3652 = !DILocation(line: 1767, column: 14, scope: !3649)
!3653 = !DILocation(line: 1767, column: 7, scope: !3649)
!3654 = !DILocation(line: 1767, column: 78, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3649, file: !3, line: 1767, column: 2)
!3656 = !DILocation(line: 1767, column: 55, scope: !3655)
!3657 = !DILocation(line: 1767, column: 54, scope: !3655)
!3658 = !DILocation(line: 1767, column: 2, scope: !3649)
!3659 = !DILocation(line: 1768, column: 3, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3655, file: !3, line: 1767, column: 113)
!3661 = !DILocation(line: 1768, column: 10, scope: !3660)
!3662 = !DILocation(line: 1768, column: 53, scope: !3660)
!3663 = !DILocation(line: 1768, column: 28, scope: !3660)
!3664 = !DILocation(line: 1768, column: 18, scope: !3660)
!3665 = !DILocation(line: 1768, column: 16, scope: !3660)
!3666 = !DILocation(line: 1769, column: 2, scope: !3660)
!3667 = !DILocation(line: 1767, column: 107, scope: !3655)
!3668 = !DILocation(line: 1767, column: 84, scope: !3655)
!3669 = !DILocation(line: 1767, column: 2, scope: !3655)
!3670 = distinct !{!3670, !3658, !3671}
!3671 = !DILocation(line: 1769, column: 2, scope: !3649)
!3672 = !DILocation(line: 1772, column: 25, scope: !2976)
!3673 = !DILocation(line: 1772, column: 2, scope: !2976)
!3674 = !DILocation(line: 1773, column: 2, scope: !2976)
!3675 = !DILocation(line: 1773, column: 12, scope: !2976)
!3676 = !DILocation(line: 1775, column: 17, scope: !2976)
!3677 = !DILocation(line: 1775, column: 2, scope: !2976)
!3678 = !DILocation(line: 1778, column: 33, scope: !2976)
!3679 = !DILocation(line: 1778, column: 31, scope: !2976)
!3680 = !DILocation(line: 1778, column: 2, scope: !2976)
!3681 = !DILocation(line: 1778, column: 9, scope: !2976)
!3682 = !DILocation(line: 1778, column: 19, scope: !2976)
!3683 = !DILocation(line: 1779, column: 9, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1779, column: 2)
!3685 = !DILocation(line: 1779, column: 7, scope: !3684)
!3686 = !DILocation(line: 1779, column: 14, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3684, file: !3, line: 1779, column: 2)
!3688 = !DILocation(line: 1779, column: 18, scope: !3687)
!3689 = !DILocation(line: 1779, column: 16, scope: !3687)
!3690 = !DILocation(line: 1779, column: 2, scope: !3684)
!3691 = !DILocation(line: 1780, column: 20, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3687, file: !3, line: 1779, column: 36)
!3693 = !DILocation(line: 1780, column: 31, scope: !3692)
!3694 = !DILocation(line: 1780, column: 39, scope: !3692)
!3695 = !DILocation(line: 1780, column: 37, scope: !3692)
!3696 = !DILocation(line: 1780, column: 42, scope: !3692)
!3697 = !DILocation(line: 1780, column: 50, scope: !3692)
!3698 = !DILocation(line: 1780, column: 48, scope: !3692)
!3699 = !DILocation(line: 1780, column: 3, scope: !3692)
!3700 = !DILocation(line: 1781, column: 2, scope: !3692)
!3701 = !DILocation(line: 1779, column: 32, scope: !3687)
!3702 = !DILocation(line: 1779, column: 2, scope: !3687)
!3703 = distinct !{!3703, !3690, !3704}
!3704 = !DILocation(line: 1781, column: 2, scope: !3684)
!3705 = !DILocation(line: 1782, column: 39, scope: !2976)
!3706 = !DILocation(line: 1782, column: 50, scope: !2976)
!3707 = !DILocation(line: 1782, column: 2, scope: !2976)
!3708 = !DILocation(line: 1791, column: 9, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1791, column: 2)
!3710 = !DILocation(line: 1791, column: 7, scope: !3709)
!3711 = !DILocation(line: 1791, column: 14, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3709, file: !3, line: 1791, column: 2)
!3713 = !DILocation(line: 1791, column: 18, scope: !3712)
!3714 = !DILocation(line: 1791, column: 16, scope: !3712)
!3715 = !DILocation(line: 1791, column: 2, scope: !3709)
!3716 = !DILocalVariable(name: "edge", scope: !3717, file: !3, line: 1792, type: !2198)
!3717 = distinct !DILexicalBlock(scope: !3712, file: !3, line: 1791, column: 36)
!3718 = !DILocation(line: 1792, column: 11, scope: !3717)
!3719 = !DILocation(line: 1792, column: 18, scope: !3717)
!3720 = !DILocation(line: 1792, column: 26, scope: !3717)
!3721 = !DILocation(line: 1792, column: 24, scope: !3717)
!3722 = !DILocalVariable(name: "normal", scope: !3717, file: !3, line: 1793, type: !419)
!3723 = !DILocation(line: 1793, column: 9, scope: !3717)
!3724 = !DILocation(line: 1794, column: 7, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3717, file: !3, line: 1794, column: 7)
!3726 = !DILocation(line: 1794, column: 13, scope: !3725)
!3727 = !DILocation(line: 1794, column: 18, scope: !3725)
!3728 = !DILocation(line: 1794, column: 7, scope: !3717)
!3729 = !DILocation(line: 1795, column: 33, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3725, file: !3, line: 1794, column: 37)
!3731 = !DILocation(line: 1795, column: 37, scope: !3730)
!3732 = !DILocation(line: 1795, column: 43, scope: !3730)
!3733 = !DILocation(line: 1795, column: 51, scope: !3730)
!3734 = !DILocation(line: 1795, column: 58, scope: !3730)
!3735 = !DILocation(line: 1795, column: 4, scope: !3730)
!3736 = !DILocation(line: 1797, column: 14, scope: !3730)
!3737 = !DILocation(line: 1797, column: 21, scope: !3730)
!3738 = !DILocation(line: 1797, column: 31, scope: !3730)
!3739 = !DILocation(line: 1797, column: 37, scope: !3730)
!3740 = !DILocation(line: 1797, column: 41, scope: !3730)
!3741 = !DILocation(line: 1797, column: 29, scope: !3730)
!3742 = !DILocation(line: 1797, column: 46, scope: !3730)
!3743 = !DILocation(line: 1797, column: 4, scope: !3730)
!3744 = !DILocation(line: 1798, column: 14, scope: !3730)
!3745 = !DILocation(line: 1798, column: 21, scope: !3730)
!3746 = !DILocation(line: 1798, column: 31, scope: !3730)
!3747 = !DILocation(line: 1798, column: 37, scope: !3730)
!3748 = !DILocation(line: 1798, column: 41, scope: !3730)
!3749 = !DILocation(line: 1798, column: 29, scope: !3730)
!3750 = !DILocation(line: 1798, column: 46, scope: !3730)
!3751 = !DILocation(line: 1798, column: 4, scope: !3730)
!3752 = !DILocation(line: 1800, column: 17, scope: !3730)
!3753 = !DILocation(line: 1800, column: 24, scope: !3730)
!3754 = !DILocation(line: 1800, column: 34, scope: !3730)
!3755 = !DILocation(line: 1800, column: 40, scope: !3730)
!3756 = !DILocation(line: 1800, column: 44, scope: !3730)
!3757 = !DILocation(line: 1800, column: 32, scope: !3730)
!3758 = !DILocation(line: 1800, column: 4, scope: !3730)
!3759 = !DILocation(line: 1801, column: 17, scope: !3730)
!3760 = !DILocation(line: 1801, column: 24, scope: !3730)
!3761 = !DILocation(line: 1801, column: 34, scope: !3730)
!3762 = !DILocation(line: 1801, column: 40, scope: !3730)
!3763 = !DILocation(line: 1801, column: 44, scope: !3730)
!3764 = !DILocation(line: 1801, column: 32, scope: !3730)
!3765 = !DILocation(line: 1801, column: 4, scope: !3730)
!3766 = !DILocation(line: 1802, column: 3, scope: !3730)
!3767 = !DILocation(line: 1803, column: 2, scope: !3717)
!3768 = !DILocation(line: 1791, column: 32, scope: !3712)
!3769 = !DILocation(line: 1791, column: 2, scope: !3712)
!3770 = distinct !{!3770, !3715, !3771}
!3771 = !DILocation(line: 1803, column: 2, scope: !3709)
!3772 = !DILocation(line: 1808, column: 2, scope: !2976)
!3773 = !DILocation(line: 1808, column: 9, scope: !2976)
!3774 = !DILocation(line: 1808, column: 24, scope: !2976)
!3775 = !DILocation(line: 1811, column: 33, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1811, column: 6)
!3777 = !DILocation(line: 1811, column: 37, scope: !3776)
!3778 = !DILocation(line: 1811, column: 6, scope: !3776)
!3779 = !DILocation(line: 1811, column: 6, scope: !2976)
!3780 = !DILocalVariable(name: "faceIndex", scope: !3781, file: !3, line: 1812, type: !22)
!3781 = distinct !DILexicalBlock(scope: !3776, file: !3, line: 1811, column: 56)
!3782 = !DILocation(line: 1812, column: 7, scope: !3781)
!3783 = !DILocalVariable(name: "elementIndex", scope: !3781, file: !3, line: 1812, type: !22)
!3784 = !DILocation(line: 1812, column: 18, scope: !3781)
!3785 = !DILocalVariable(name: "element", scope: !3781, file: !3, line: 1813, type: !2206)
!3786 = !DILocation(line: 1813, column: 14, scope: !3781)
!3787 = !DILocalVariable(name: "stored_mode", scope: !3781, file: !3, line: 1814, type: !1818)
!3788 = !DILocation(line: 1814, column: 20, scope: !3781)
!3789 = !DILocation(line: 1814, column: 47, scope: !3781)
!3790 = !DILocation(line: 1814, column: 51, scope: !3781)
!3791 = !DILocation(line: 1814, column: 34, scope: !3781)
!3792 = !DILocation(line: 1816, column: 29, scope: !3781)
!3793 = !DILocation(line: 1816, column: 33, scope: !3781)
!3794 = !DILocation(line: 1816, column: 3, scope: !3781)
!3795 = !DILocation(line: 1818, column: 7, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3781, file: !3, line: 1818, column: 7)
!3797 = !DILocation(line: 1818, column: 19, scope: !3796)
!3798 = !DILocation(line: 1818, column: 7, scope: !3781)
!3799 = !DILocation(line: 1819, column: 29, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3796, file: !3, line: 1818, column: 35)
!3801 = !DILocation(line: 1819, column: 75, scope: !3800)
!3802 = !DILocation(line: 1819, column: 82, scope: !3800)
!3803 = !DILocation(line: 1819, column: 73, scope: !3800)
!3804 = !DILocation(line: 1819, column: 4, scope: !3800)
!3805 = !DILocation(line: 1819, column: 11, scope: !3800)
!3806 = !DILocation(line: 1819, column: 27, scope: !3800)
!3807 = !DILocalVariable(name: "rna_macro_iter", scope: !3808, file: !3, line: 1821, type: !3809)
!3808 = distinct !DILexicalBlock(scope: !3800, file: !3, line: 1821, column: 4)
!3809 = !DIDerivedType(tag: DW_TAG_typedef, name: "CollectionPropertyIterator", file: !25, line: 279, baseType: !3810)
!3810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CollectionPropertyIterator", file: !25, line: 264, size: 1088, elements: !3811)
!3811 = !{!3812, !3814, !3815, !3817, !3847, !3848, !3849, !3850}
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3810, file: !25, line: 266, baseType: !3813, size: 192)
!3813 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !25, line: 62, baseType: !74)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "builtin_parent", scope: !3810, file: !25, line: 267, baseType: !3813, size: 192, offset: 192)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !3810, file: !25, line: 268, baseType: !3816, size: 64, offset: 384)
!3816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 64)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !3810, file: !25, line: 272, baseType: !3818, size: 320, offset: 448)
!3818 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3810, file: !25, line: 269, size: 320, elements: !3819)
!3819 = !{!3820, !3835}
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !3818, file: !25, line: 270, baseType: !3821, size: 320)
!3821 = !DIDerivedType(tag: DW_TAG_typedef, name: "ArrayIterator", file: !25, line: 262, baseType: !3822)
!3822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArrayIterator", file: !25, line: 249, size: 320, elements: !3823)
!3823 = !{!3824, !3825, !3826, !3827, !3828, !3829}
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3822, file: !25, line: 250, baseType: !288, size: 64)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "endptr", scope: !3822, file: !25, line: 251, baseType: !288, size: 64, offset: 64)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "free_ptr", scope: !3822, file: !25, line: 252, baseType: !56, size: 64, offset: 128)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !3822, file: !25, line: 253, baseType: !22, size: 32, offset: 192)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3822, file: !25, line: 257, baseType: !22, size: 32, offset: 224)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !3822, file: !25, line: 261, baseType: !3830, size: 64, offset: 256)
!3830 = !DIDerivedType(tag: DW_TAG_typedef, name: "IteratorSkipFunc", file: !25, line: 241, baseType: !3831)
!3831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3832, size: 64)
!3832 = !DISubroutineType(types: !3833)
!3833 = !{!22, !3834, !56}
!3834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3810, size: 64)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "listbase", scope: !3818, file: !25, line: 271, baseType: !3836, size: 192)
!3836 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBaseIterator", file: !25, line: 247, baseType: !3837)
!3837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBaseIterator", file: !25, line: 243, size: 192, elements: !3838)
!3838 = !{!3839, !3845, !3846}
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3837, file: !25, line: 244, baseType: !3840, size: 64)
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 64)
!3841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Link", file: !59, line: 57, size: 128, elements: !3842)
!3842 = !{!3843, !3844}
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3841, file: !59, line: 58, baseType: !3840, size: 64)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3841, file: !59, line: 58, baseType: !3840, size: 64, offset: 64)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3837, file: !25, line: 245, baseType: !22, size: 32, offset: 64)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !3837, file: !25, line: 246, baseType: !3830, size: 64, offset: 128)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "idprop", scope: !3810, file: !25, line: 273, baseType: !22, size: 32, offset: 768)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !3810, file: !25, line: 274, baseType: !22, size: 32, offset: 800)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3810, file: !25, line: 277, baseType: !3813, size: 192, offset: 832)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !3810, file: !25, line: 278, baseType: !22, size: 32, offset: 1024)
!3851 = !DILocation(line: 1821, column: 4, scope: !3808)
!3852 = !DILocation(line: 1821, column: 4, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3808, file: !3, line: 1821, column: 4)
!3854 = !DILocation(line: 1821, column: 4, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3853, file: !3, line: 1821, column: 4)
!3856 = !DILocalVariable(name: "itemptr", scope: !3857, file: !3, line: 1821, type: !3813)
!3857 = distinct !DILexicalBlock(scope: !3855, file: !3, line: 1821, column: 4)
!3858 = !DILocation(line: 1821, column: 4, scope: !3857)
!3859 = !DILocation(line: 1823, column: 17, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 1822, column: 4)
!3861 = !DILocation(line: 1823, column: 15, scope: !3860)
!3862 = !DILocation(line: 1824, column: 20, scope: !3860)
!3863 = !DILocation(line: 1824, column: 18, scope: !3860)
!3864 = !DILocation(line: 1825, column: 28, scope: !3860)
!3865 = !DILocation(line: 1825, column: 32, scope: !3860)
!3866 = !DILocation(line: 1825, column: 36, scope: !3860)
!3867 = !DILocation(line: 1825, column: 11, scope: !3860)
!3868 = !DILocation(line: 1825, column: 9, scope: !3860)
!3869 = !DILocation(line: 1826, column: 33, scope: !3860)
!3870 = !DILocation(line: 1826, column: 40, scope: !3860)
!3871 = !DILocation(line: 1826, column: 53, scope: !3860)
!3872 = !DILocation(line: 1826, column: 99, scope: !3860)
!3873 = !DILocation(line: 1826, column: 104, scope: !3860)
!3874 = !DILocation(line: 1826, column: 58, scope: !3860)
!3875 = !DILocation(line: 1826, column: 15, scope: !3860)
!3876 = !DILocation(line: 1826, column: 13, scope: !3860)
!3877 = !DILocation(line: 1827, column: 22, scope: !3860)
!3878 = !DILocation(line: 1827, column: 31, scope: !3860)
!3879 = !DILocation(line: 1827, column: 5, scope: !3860)
!3880 = !DILocation(line: 1829, column: 4, scope: !3857)
!3881 = distinct !{!3881, !3852, !3882}
!3882 = !DILocation(line: 1829, column: 4, scope: !3853)
!3883 = !DILocation(line: 1829, column: 4, scope: !3808)
!3884 = !DILocation(line: 1830, column: 3, scope: !3800)
!3885 = !DILocation(line: 1832, column: 29, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3796, file: !3, line: 1831, column: 8)
!3887 = !DILocation(line: 1832, column: 75, scope: !3886)
!3888 = !DILocation(line: 1832, column: 82, scope: !3886)
!3889 = !DILocation(line: 1832, column: 73, scope: !3886)
!3890 = !DILocation(line: 1832, column: 4, scope: !3886)
!3891 = !DILocation(line: 1832, column: 11, scope: !3886)
!3892 = !DILocation(line: 1832, column: 27, scope: !3886)
!3893 = !DILocalVariable(name: "rna_macro_iter", scope: !3894, file: !3, line: 1834, type: !3809)
!3894 = distinct !DILexicalBlock(scope: !3886, file: !3, line: 1834, column: 4)
!3895 = !DILocation(line: 1834, column: 4, scope: !3894)
!3896 = !DILocation(line: 1834, column: 4, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3894, file: !3, line: 1834, column: 4)
!3898 = !DILocation(line: 1834, column: 4, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3897, file: !3, line: 1834, column: 4)
!3900 = !DILocalVariable(name: "itemptr", scope: !3901, file: !3, line: 1834, type: !3813)
!3901 = distinct !DILexicalBlock(scope: !3899, file: !3, line: 1834, column: 4)
!3902 = !DILocation(line: 1834, column: 4, scope: !3901)
!3903 = !DILocalVariable(name: "tmp_edge", scope: !3904, file: !3, line: 1836, type: !2199)
!3904 = distinct !DILexicalBlock(scope: !3901, file: !3, line: 1835, column: 4)
!3905 = !DILocation(line: 1836, column: 12, scope: !3904)
!3906 = !DILocalVariable(name: "edge", scope: !3904, file: !3, line: 1836, type: !2198)
!3907 = !DILocation(line: 1836, column: 23, scope: !3904)
!3908 = !DILocalVariable(name: "uv1", scope: !3904, file: !3, line: 1837, type: !22)
!3909 = !DILocation(line: 1837, column: 9, scope: !3904)
!3910 = !DILocalVariable(name: "uv2", scope: !3904, file: !3, line: 1837, type: !22)
!3911 = !DILocation(line: 1837, column: 14, scope: !3904)
!3912 = !DILocation(line: 1838, column: 17, scope: !3904)
!3913 = !DILocation(line: 1838, column: 15, scope: !3904)
!3914 = !DILocation(line: 1839, column: 20, scope: !3904)
!3915 = !DILocation(line: 1839, column: 18, scope: !3904)
!3916 = !DILocation(line: 1840, column: 28, scope: !3904)
!3917 = !DILocation(line: 1840, column: 32, scope: !3904)
!3918 = !DILocation(line: 1840, column: 36, scope: !3904)
!3919 = !DILocation(line: 1840, column: 11, scope: !3904)
!3920 = !DILocation(line: 1840, column: 9, scope: !3904)
!3921 = !DILocation(line: 1841, column: 33, scope: !3904)
!3922 = !DILocation(line: 1841, column: 40, scope: !3904)
!3923 = !DILocation(line: 1841, column: 53, scope: !3904)
!3924 = !DILocation(line: 1841, column: 99, scope: !3904)
!3925 = !DILocation(line: 1841, column: 104, scope: !3904)
!3926 = !DILocation(line: 1841, column: 58, scope: !3904)
!3927 = !DILocation(line: 1841, column: 15, scope: !3904)
!3928 = !DILocation(line: 1841, column: 13, scope: !3904)
!3929 = !DILocation(line: 1842, column: 11, scope: !3904)
!3930 = !DILocation(line: 1842, column: 15, scope: !3904)
!3931 = !DILocation(line: 1842, column: 25, scope: !3904)
!3932 = !DILocation(line: 1842, column: 32, scope: !3904)
!3933 = !DILocation(line: 1842, column: 45, scope: !3904)
!3934 = !DILocation(line: 1842, column: 23, scope: !3904)
!3935 = !DILocation(line: 1842, column: 9, scope: !3904)
!3936 = !DILocation(line: 1844, column: 33, scope: !3904)
!3937 = !DILocation(line: 1844, column: 40, scope: !3904)
!3938 = !DILocation(line: 1844, column: 53, scope: !3904)
!3939 = !DILocation(line: 1844, column: 99, scope: !3904)
!3940 = !DILocation(line: 1844, column: 105, scope: !3904)
!3941 = !DILocation(line: 1844, column: 118, scope: !3904)
!3942 = !DILocation(line: 1844, column: 125, scope: !3904)
!3943 = !DILocation(line: 1844, column: 130, scope: !3904)
!3944 = !DILocation(line: 1844, column: 123, scope: !3904)
!3945 = !DILocation(line: 1844, column: 58, scope: !3904)
!3946 = !DILocation(line: 1844, column: 15, scope: !3904)
!3947 = !DILocation(line: 1844, column: 13, scope: !3904)
!3948 = !DILocation(line: 1845, column: 11, scope: !3904)
!3949 = !DILocation(line: 1845, column: 15, scope: !3904)
!3950 = !DILocation(line: 1845, column: 25, scope: !3904)
!3951 = !DILocation(line: 1845, column: 32, scope: !3904)
!3952 = !DILocation(line: 1845, column: 45, scope: !3904)
!3953 = !DILocation(line: 1845, column: 23, scope: !3904)
!3954 = !DILocation(line: 1845, column: 9, scope: !3904)
!3955 = !DILocation(line: 1847, column: 9, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3904, file: !3, line: 1847, column: 9)
!3957 = !DILocation(line: 1847, column: 15, scope: !3956)
!3958 = !DILocation(line: 1847, column: 13, scope: !3956)
!3959 = !DILocation(line: 1847, column: 9, scope: !3904)
!3960 = !DILocation(line: 1848, column: 21, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 1847, column: 20)
!3962 = !DILocation(line: 1848, column: 15, scope: !3961)
!3963 = !DILocation(line: 1848, column: 19, scope: !3961)
!3964 = !DILocation(line: 1849, column: 21, scope: !3961)
!3965 = !DILocation(line: 1849, column: 15, scope: !3961)
!3966 = !DILocation(line: 1849, column: 19, scope: !3961)
!3967 = !DILocation(line: 1850, column: 5, scope: !3961)
!3968 = !DILocation(line: 1852, column: 21, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 1851, column: 10)
!3970 = !DILocation(line: 1852, column: 15, scope: !3969)
!3971 = !DILocation(line: 1852, column: 19, scope: !3969)
!3972 = !DILocation(line: 1853, column: 21, scope: !3969)
!3973 = !DILocation(line: 1853, column: 15, scope: !3969)
!3974 = !DILocation(line: 1853, column: 19, scope: !3969)
!3975 = !DILocation(line: 1856, column: 29, scope: !3904)
!3976 = !DILocation(line: 1856, column: 40, scope: !3904)
!3977 = !DILocation(line: 1856, column: 12, scope: !3904)
!3978 = !DILocation(line: 1856, column: 10, scope: !3904)
!3979 = !DILocation(line: 1858, column: 24, scope: !3904)
!3980 = !DILocation(line: 1858, column: 30, scope: !3904)
!3981 = !DILocation(line: 1858, column: 5, scope: !3904)
!3982 = !DILocation(line: 1860, column: 4, scope: !3901)
!3983 = distinct !{!3983, !3896, !3984}
!3984 = !DILocation(line: 1860, column: 4, scope: !3897)
!3985 = !DILocation(line: 1860, column: 4, scope: !3894)
!3986 = !DILocation(line: 1864, column: 7, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3781, file: !3, line: 1864, column: 7)
!3988 = !DILocation(line: 1864, column: 14, scope: !3987)
!3989 = !DILocation(line: 1864, column: 22, scope: !3987)
!3990 = !DILocation(line: 1864, column: 19, scope: !3987)
!3991 = !DILocation(line: 1864, column: 7, scope: !3781)
!3992 = !DILocation(line: 1865, column: 18, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 1864, column: 35)
!3994 = !DILocation(line: 1865, column: 4, scope: !3993)
!3995 = !DILocation(line: 1865, column: 11, scope: !3993)
!3996 = !DILocation(line: 1865, column: 16, scope: !3993)
!3997 = !DILocation(line: 1866, column: 33, scope: !3993)
!3998 = !DILocation(line: 1866, column: 4, scope: !3993)
!3999 = !DILocation(line: 1867, column: 3, scope: !3993)
!4000 = !DILocation(line: 1869, column: 24, scope: !3781)
!4001 = !DILocation(line: 1869, column: 28, scope: !3781)
!4002 = !DILocation(line: 1869, column: 3, scope: !3781)
!4003 = !DILocation(line: 1871, column: 2, scope: !3781)
!4004 = !DILocation(line: 1873, column: 7, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !4006, file: !3, line: 1873, column: 7)
!4006 = distinct !DILexicalBlock(scope: !3776, file: !3, line: 1872, column: 7)
!4007 = !DILocation(line: 1873, column: 14, scope: !4005)
!4008 = !DILocation(line: 1873, column: 19, scope: !4005)
!4009 = !DILocation(line: 1873, column: 7, scope: !4006)
!4010 = !DILocation(line: 1874, column: 29, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !4005, file: !3, line: 1873, column: 35)
!4012 = !DILocation(line: 1874, column: 75, scope: !4011)
!4013 = !DILocation(line: 1874, column: 82, scope: !4011)
!4014 = !DILocation(line: 1874, column: 73, scope: !4011)
!4015 = !DILocation(line: 1874, column: 4, scope: !4011)
!4016 = !DILocation(line: 1874, column: 11, scope: !4011)
!4017 = !DILocation(line: 1874, column: 27, scope: !4011)
!4018 = !DILocation(line: 1876, column: 4, scope: !4019)
!4019 = distinct !DILexicalBlock(scope: !4011, file: !3, line: 1876, column: 4)
!4020 = !DILocation(line: 1876, column: 4, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4019, file: !3, line: 1876, column: 4)
!4022 = !DILocation(line: 1877, column: 5, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 1877, column: 5)
!4024 = distinct !DILexicalBlock(scope: !4021, file: !3, line: 1876, column: 56)
!4025 = !DILocation(line: 1877, column: 5, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !4023, file: !3, line: 1877, column: 5)
!4027 = !DILocation(line: 1878, column: 32, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 1878, column: 10)
!4029 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 1877, column: 62)
!4030 = !DILocation(line: 1878, column: 39, scope: !4028)
!4031 = !DILocation(line: 1878, column: 42, scope: !4028)
!4032 = !DILocation(line: 1878, column: 10, scope: !4028)
!4033 = !DILocation(line: 1878, column: 10, scope: !4029)
!4034 = !DILocalVariable(name: "element", scope: !4035, file: !3, line: 1879, type: !2206)
!4035 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 1878, column: 62)
!4036 = !DILocation(line: 1879, column: 18, scope: !4035)
!4037 = !DILocation(line: 1879, column: 46, scope: !4035)
!4038 = !DILocation(line: 1879, column: 53, scope: !4035)
!4039 = !DILocation(line: 1879, column: 66, scope: !4035)
!4040 = !DILocation(line: 1879, column: 71, scope: !4035)
!4041 = !DILocation(line: 1879, column: 28, scope: !4035)
!4042 = !DILocation(line: 1880, column: 11, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 1880, column: 11)
!4044 = !DILocation(line: 1880, column: 11, scope: !4035)
!4045 = !DILocation(line: 1881, column: 25, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 1880, column: 20)
!4047 = !DILocation(line: 1881, column: 34, scope: !4046)
!4048 = !DILocation(line: 1881, column: 8, scope: !4046)
!4049 = !DILocation(line: 1882, column: 7, scope: !4046)
!4050 = !DILocation(line: 1883, column: 6, scope: !4035)
!4051 = !DILocation(line: 1884, column: 5, scope: !4029)
!4052 = distinct !{!4052, !4022, !4053}
!4053 = !DILocation(line: 1884, column: 5, scope: !4023)
!4054 = !DILocation(line: 1885, column: 4, scope: !4024)
!4055 = distinct !{!4055, !4018, !4056}
!4056 = !DILocation(line: 1885, column: 4, scope: !4019)
!4057 = !DILocation(line: 1886, column: 3, scope: !4011)
!4058 = !DILocation(line: 1888, column: 29, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4005, file: !3, line: 1887, column: 8)
!4060 = !DILocation(line: 1888, column: 75, scope: !4059)
!4061 = !DILocation(line: 1888, column: 82, scope: !4059)
!4062 = !DILocation(line: 1888, column: 73, scope: !4059)
!4063 = !DILocation(line: 1888, column: 4, scope: !4059)
!4064 = !DILocation(line: 1888, column: 11, scope: !4059)
!4065 = !DILocation(line: 1888, column: 27, scope: !4059)
!4066 = !DILocation(line: 1890, column: 4, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 1890, column: 4)
!4068 = !DILocation(line: 1890, column: 4, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4067, file: !3, line: 1890, column: 4)
!4070 = !DILocation(line: 1891, column: 11, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4072, file: !3, line: 1891, column: 9)
!4072 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1890, column: 56)
!4073 = !DILocation(line: 1891, column: 15, scope: !4071)
!4074 = !DILocation(line: 1891, column: 23, scope: !4071)
!4075 = !DILocation(line: 1891, column: 44, scope: !4071)
!4076 = !DILocation(line: 1891, column: 49, scope: !4071)
!4077 = !DILocation(line: 1891, column: 48, scope: !4071)
!4078 = !DILocation(line: 1891, column: 89, scope: !4071)
!4079 = !DILocation(line: 1891, column: 93, scope: !4071)
!4080 = !DILocation(line: 1891, column: 9, scope: !4072)
!4081 = !DILocation(line: 1892, column: 6, scope: !4071)
!4082 = !DILocation(line: 1894, column: 5, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4072, file: !3, line: 1894, column: 5)
!4084 = !DILocation(line: 1894, column: 5, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4083, file: !3, line: 1894, column: 5)
!4086 = !DILocation(line: 1895, column: 34, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4088, file: !3, line: 1895, column: 10)
!4088 = distinct !DILexicalBlock(scope: !4085, file: !3, line: 1894, column: 53)
!4089 = !DILocation(line: 1895, column: 41, scope: !4087)
!4090 = !DILocation(line: 1895, column: 44, scope: !4087)
!4091 = !DILocation(line: 1895, column: 10, scope: !4087)
!4092 = !DILocation(line: 1895, column: 10, scope: !4088)
!4093 = !DILocalVariable(name: "edge", scope: !4094, file: !3, line: 1896, type: !2198)
!4094 = distinct !DILexicalBlock(scope: !4087, file: !3, line: 1895, column: 64)
!4095 = !DILocation(line: 1896, column: 15, scope: !4094)
!4096 = !DILocation(line: 1896, column: 34, scope: !4094)
!4097 = !DILocation(line: 1896, column: 37, scope: !4094)
!4098 = !DILocation(line: 1896, column: 22, scope: !4094)
!4099 = !DILocation(line: 1897, column: 11, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4094, file: !3, line: 1897, column: 11)
!4101 = !DILocation(line: 1897, column: 11, scope: !4094)
!4102 = !DILocation(line: 1898, column: 27, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 1897, column: 17)
!4104 = !DILocation(line: 1898, column: 33, scope: !4103)
!4105 = !DILocation(line: 1898, column: 8, scope: !4103)
!4106 = !DILocation(line: 1899, column: 7, scope: !4103)
!4107 = !DILocation(line: 1900, column: 6, scope: !4094)
!4108 = !DILocation(line: 1901, column: 5, scope: !4088)
!4109 = distinct !{!4109, !4082, !4110}
!4110 = !DILocation(line: 1901, column: 5, scope: !4083)
!4111 = !DILocation(line: 1902, column: 4, scope: !4072)
!4112 = distinct !{!4112, !4066, !4113}
!4113 = !DILocation(line: 1902, column: 4, scope: !4067)
!4114 = !DILocation(line: 1908, column: 27, scope: !2976)
!4115 = !DILocation(line: 1908, column: 73, scope: !2976)
!4116 = !DILocation(line: 1908, column: 80, scope: !2976)
!4117 = !DILocation(line: 1908, column: 93, scope: !2976)
!4118 = !DILocation(line: 1908, column: 71, scope: !2976)
!4119 = !DILocation(line: 1908, column: 2, scope: !2976)
!4120 = !DILocation(line: 1908, column: 9, scope: !2976)
!4121 = !DILocation(line: 1908, column: 25, scope: !2976)
!4122 = !DILocation(line: 1910, column: 9, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1910, column: 2)
!4124 = !DILocation(line: 1910, column: 7, scope: !4123)
!4125 = !DILocation(line: 1910, column: 14, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4123, file: !3, line: 1910, column: 2)
!4127 = !DILocation(line: 1910, column: 18, scope: !4126)
!4128 = !DILocation(line: 1910, column: 25, scope: !4126)
!4129 = !DILocation(line: 1910, column: 38, scope: !4126)
!4130 = !DILocation(line: 1910, column: 16, scope: !4126)
!4131 = !DILocation(line: 1910, column: 2, scope: !4123)
!4132 = !DILocation(line: 1911, column: 3, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4126, file: !3, line: 1910, column: 57)
!4134 = !DILocation(line: 1911, column: 10, scope: !4133)
!4135 = !DILocation(line: 1911, column: 26, scope: !4133)
!4136 = !DILocation(line: 1911, column: 29, scope: !4133)
!4137 = !DILocation(line: 1912, column: 2, scope: !4133)
!4138 = !DILocation(line: 1910, column: 53, scope: !4126)
!4139 = !DILocation(line: 1910, column: 2, scope: !4126)
!4140 = distinct !{!4140, !4131, !4141}
!4141 = !DILocation(line: 1912, column: 2, scope: !4123)
!4142 = !DILocation(line: 1914, column: 2, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1914, column: 2)
!4144 = !DILocation(line: 1914, column: 2, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4143, file: !3, line: 1914, column: 2)
!4146 = !DILocalVariable(name: "element", scope: !4147, file: !3, line: 1915, type: !2206)
!4147 = distinct !DILexicalBlock(scope: !4145, file: !3, line: 1914, column: 54)
!4148 = !DILocation(line: 1915, column: 14, scope: !4147)
!4149 = !DILocation(line: 1915, column: 42, scope: !4147)
!4150 = !DILocation(line: 1915, column: 49, scope: !4147)
!4151 = !DILocation(line: 1915, column: 62, scope: !4147)
!4152 = !DILocation(line: 1915, column: 67, scope: !4147)
!4153 = !DILocation(line: 1915, column: 24, scope: !4147)
!4154 = !DILocation(line: 1917, column: 7, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4147, file: !3, line: 1917, column: 7)
!4156 = !DILocation(line: 1917, column: 7, scope: !4147)
!4157 = !DILocation(line: 1918, column: 48, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4155, file: !3, line: 1917, column: 16)
!4159 = !DILocation(line: 1918, column: 53, scope: !4158)
!4160 = !DILocation(line: 1918, column: 57, scope: !4158)
!4161 = !DILocation(line: 1918, column: 47, scope: !4158)
!4162 = !DILocation(line: 1918, column: 64, scope: !4158)
!4163 = !DILocation(line: 1918, column: 69, scope: !4158)
!4164 = !DILocation(line: 1918, column: 73, scope: !4158)
!4165 = !DILocation(line: 1918, column: 4, scope: !4158)
!4166 = !DILocation(line: 1918, column: 11, scope: !4158)
!4167 = !DILocation(line: 1918, column: 27, scope: !4158)
!4168 = !DILocation(line: 1918, column: 36, scope: !4158)
!4169 = !DILocation(line: 1918, column: 44, scope: !4158)
!4170 = !DILocation(line: 1919, column: 3, scope: !4158)
!4171 = !DILocation(line: 1920, column: 2, scope: !4147)
!4172 = distinct !{!4172, !4142, !4173}
!4173 = !DILocation(line: 1920, column: 2, scope: !4143)
!4174 = !DILocation(line: 1922, column: 27, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1922, column: 6)
!4176 = !DILocation(line: 1922, column: 34, scope: !4175)
!4177 = !DILocation(line: 1922, column: 7, scope: !4175)
!4178 = !DILocation(line: 1922, column: 6, scope: !2976)
!4179 = !DILocation(line: 1924, column: 16, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4175, file: !3, line: 1922, column: 49)
!4181 = !DILocation(line: 1924, column: 3, scope: !4180)
!4182 = !DILocation(line: 1925, column: 3, scope: !4180)
!4183 = !DILocation(line: 1928, column: 50, scope: !2976)
!4184 = !DILocation(line: 1928, column: 54, scope: !2976)
!4185 = !DILocation(line: 1928, column: 73, scope: !2976)
!4186 = !DILocation(line: 1928, column: 23, scope: !2976)
!4187 = !DILocation(line: 1928, column: 2, scope: !2976)
!4188 = !DILocation(line: 1928, column: 9, scope: !2976)
!4189 = !DILocation(line: 1928, column: 21, scope: !2976)
!4190 = !DILocation(line: 1930, column: 23, scope: !2976)
!4191 = !DILocation(line: 1930, column: 30, scope: !2976)
!4192 = !DILocation(line: 1930, column: 2, scope: !2976)
!4193 = !DILocation(line: 1931, column: 2, scope: !2976)
!4194 = !DILocation(line: 1932, column: 1, scope: !2976)
!4195 = distinct !DISubprogram(name: "state_delete", scope: !3, file: !3, line: 598, type: !4196, scopeLine: 599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!4196 = !DISubroutineType(types: !4197)
!4197 = !{null, !2300}
!4198 = !DILocalVariable(name: "state", arg: 1, scope: !4195, file: !3, line: 598, type: !2300)
!4199 = !DILocation(line: 598, column: 39, scope: !4195)
!4200 = !DILocation(line: 600, column: 6, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4195, file: !3, line: 600, column: 6)
!4202 = !DILocation(line: 600, column: 6, scope: !4195)
!4203 = !DILocation(line: 601, column: 7, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4205, file: !3, line: 601, column: 7)
!4205 = distinct !DILexicalBlock(scope: !4201, file: !3, line: 600, column: 13)
!4206 = !DILocation(line: 601, column: 14, scope: !4204)
!4207 = !DILocation(line: 601, column: 7, scope: !4205)
!4208 = !DILocation(line: 602, column: 27, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4204, file: !3, line: 601, column: 27)
!4210 = !DILocation(line: 602, column: 34, scope: !4209)
!4211 = !DILocation(line: 602, column: 4, scope: !4209)
!4212 = !DILocation(line: 603, column: 3, scope: !4209)
!4213 = !DILocation(line: 604, column: 7, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4205, file: !3, line: 604, column: 7)
!4215 = !DILocation(line: 604, column: 14, scope: !4214)
!4216 = !DILocation(line: 604, column: 7, scope: !4205)
!4217 = !DILocation(line: 605, column: 4, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 604, column: 19)
!4219 = !DILocation(line: 605, column: 14, scope: !4218)
!4220 = !DILocation(line: 605, column: 21, scope: !4218)
!4221 = !DILocation(line: 606, column: 3, scope: !4218)
!4222 = !DILocation(line: 607, column: 7, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4205, file: !3, line: 607, column: 7)
!4224 = !DILocation(line: 607, column: 14, scope: !4223)
!4225 = !DILocation(line: 607, column: 7, scope: !4205)
!4226 = !DILocation(line: 608, column: 4, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4223, file: !3, line: 607, column: 31)
!4228 = !DILocation(line: 608, column: 14, scope: !4227)
!4229 = !DILocation(line: 608, column: 21, scope: !4227)
!4230 = !DILocation(line: 609, column: 3, scope: !4227)
!4231 = !DILocation(line: 610, column: 7, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4205, file: !3, line: 610, column: 7)
!4233 = !DILocation(line: 610, column: 14, scope: !4232)
!4234 = !DILocation(line: 610, column: 7, scope: !4205)
!4235 = !DILocation(line: 611, column: 4, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 610, column: 31)
!4237 = !DILocation(line: 611, column: 14, scope: !4236)
!4238 = !DILocation(line: 611, column: 21, scope: !4236)
!4239 = !DILocation(line: 612, column: 3, scope: !4236)
!4240 = !DILocation(line: 613, column: 7, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4205, file: !3, line: 613, column: 7)
!4242 = !DILocation(line: 613, column: 14, scope: !4241)
!4243 = !DILocation(line: 613, column: 7, scope: !4205)
!4244 = !DILocation(line: 614, column: 4, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4241, file: !3, line: 613, column: 19)
!4246 = !DILocation(line: 614, column: 14, scope: !4245)
!4247 = !DILocation(line: 614, column: 21, scope: !4245)
!4248 = !DILocation(line: 615, column: 3, scope: !4245)
!4249 = !DILocation(line: 616, column: 7, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4205, file: !3, line: 616, column: 7)
!4251 = !DILocation(line: 616, column: 14, scope: !4250)
!4252 = !DILocation(line: 616, column: 7, scope: !4205)
!4253 = !DILocation(line: 617, column: 4, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4250, file: !3, line: 616, column: 23)
!4255 = !DILocation(line: 617, column: 14, scope: !4254)
!4256 = !DILocation(line: 617, column: 21, scope: !4254)
!4257 = !DILocation(line: 618, column: 3, scope: !4254)
!4258 = !DILocation(line: 619, column: 7, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4205, file: !3, line: 619, column: 7)
!4260 = !DILocation(line: 619, column: 14, scope: !4259)
!4261 = !DILocation(line: 619, column: 7, scope: !4205)
!4262 = !DILocation(line: 620, column: 4, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4259, file: !3, line: 619, column: 21)
!4264 = !DILocation(line: 620, column: 14, scope: !4263)
!4265 = !DILocation(line: 620, column: 21, scope: !4263)
!4266 = !DILocation(line: 621, column: 3, scope: !4263)
!4267 = !DILocation(line: 622, column: 7, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4205, file: !3, line: 622, column: 7)
!4269 = !DILocation(line: 622, column: 14, scope: !4268)
!4270 = !DILocation(line: 622, column: 7, scope: !4205)
!4271 = !DILocation(line: 623, column: 26, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4268, file: !3, line: 622, column: 30)
!4273 = !DILocation(line: 623, column: 33, scope: !4272)
!4274 = !DILocation(line: 623, column: 4, scope: !4272)
!4275 = !DILocation(line: 624, column: 3, scope: !4272)
!4276 = !DILocation(line: 625, column: 7, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4205, file: !3, line: 625, column: 7)
!4278 = !DILocation(line: 625, column: 14, scope: !4277)
!4279 = !DILocation(line: 625, column: 7, scope: !4205)
!4280 = !DILocation(line: 626, column: 19, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 625, column: 25)
!4282 = !DILocation(line: 626, column: 26, scope: !4281)
!4283 = !DILocation(line: 626, column: 4, scope: !4281)
!4284 = !DILocation(line: 627, column: 3, scope: !4281)
!4285 = !DILocation(line: 628, column: 3, scope: !4205)
!4286 = !DILocation(line: 628, column: 13, scope: !4205)
!4287 = !DILocation(line: 629, column: 2, scope: !4205)
!4288 = !DILocation(line: 630, column: 1, scope: !4195)
!4289 = distinct !DISubprogram(name: "uv_edge_hash", scope: !3, file: !3, line: 1355, type: !4290, scopeLine: 1356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!4290 = !DISubroutineType(types: !4291)
!4291 = !{!223, !4292}
!4292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4293, size: 64)
!4293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!4294 = !DILocalVariable(name: "key", arg: 1, scope: !4289, file: !3, line: 1355, type: !4292)
!4295 = !DILocation(line: 1355, column: 46, scope: !4289)
!4296 = !DILocalVariable(name: "edge", scope: !4289, file: !3, line: 1357, type: !2198)
!4297 = !DILocation(line: 1357, column: 10, scope: !4289)
!4298 = !DILocation(line: 1357, column: 27, scope: !4289)
!4299 = !DILocation(line: 1357, column: 17, scope: !4289)
!4300 = !DILocation(line: 1359, column: 33, scope: !4289)
!4301 = !DILocation(line: 1359, column: 39, scope: !4289)
!4302 = !DILocation(line: 1359, column: 10, scope: !4289)
!4303 = !DILocation(line: 1360, column: 33, scope: !4289)
!4304 = !DILocation(line: 1360, column: 39, scope: !4289)
!4305 = !DILocation(line: 1360, column: 10, scope: !4289)
!4306 = !DILocation(line: 1359, column: 44, scope: !4289)
!4307 = !DILocation(line: 1358, column: 2, scope: !4289)
!4308 = distinct !DISubprogram(name: "uv_edge_compare", scope: !3, file: !3, line: 1363, type: !4309, scopeLine: 1364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!4309 = !DISubroutineType(types: !4310)
!4310 = !{!1006, !4292, !4292}
!4311 = !DILocalVariable(name: "a", arg: 1, scope: !4308, file: !3, line: 1363, type: !4292)
!4312 = !DILocation(line: 1363, column: 41, scope: !4308)
!4313 = !DILocalVariable(name: "b", arg: 2, scope: !4308, file: !3, line: 1363, type: !4292)
!4314 = !DILocation(line: 1363, column: 56, scope: !4308)
!4315 = !DILocalVariable(name: "edge1", scope: !4308, file: !3, line: 1365, type: !2198)
!4316 = !DILocation(line: 1365, column: 10, scope: !4308)
!4317 = !DILocation(line: 1365, column: 28, scope: !4308)
!4318 = !DILocation(line: 1365, column: 18, scope: !4308)
!4319 = !DILocalVariable(name: "edge2", scope: !4308, file: !3, line: 1366, type: !2198)
!4320 = !DILocation(line: 1366, column: 10, scope: !4308)
!4321 = !DILocation(line: 1366, column: 28, scope: !4308)
!4322 = !DILocation(line: 1366, column: 18, scope: !4308)
!4323 = !DILocation(line: 1368, column: 7, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 1368, column: 6)
!4325 = !DILocation(line: 1368, column: 14, scope: !4324)
!4326 = !DILocation(line: 1368, column: 21, scope: !4324)
!4327 = !DILocation(line: 1368, column: 28, scope: !4324)
!4328 = !DILocation(line: 1368, column: 18, scope: !4324)
!4329 = !DILocation(line: 1368, column: 33, scope: !4324)
!4330 = !DILocation(line: 1368, column: 37, scope: !4324)
!4331 = !DILocation(line: 1368, column: 44, scope: !4324)
!4332 = !DILocation(line: 1368, column: 51, scope: !4324)
!4333 = !DILocation(line: 1368, column: 58, scope: !4324)
!4334 = !DILocation(line: 1368, column: 48, scope: !4324)
!4335 = !DILocation(line: 1368, column: 6, scope: !4308)
!4336 = !DILocation(line: 1369, column: 3, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4324, file: !3, line: 1368, column: 64)
!4338 = !DILocation(line: 1371, column: 2, scope: !4308)
!4339 = !DILocation(line: 1372, column: 1, scope: !4308)
!4340 = distinct !DISubprogram(name: "BM_iter_new", scope: !4341, file: !4341, line: 172, type: !4342, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!4341 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4342 = !DISubroutineType(types: !4343)
!4343 = !{!56, !4344, !2388, !13, !56}
!4344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 64)
!4345 = !DILocalVariable(name: "iter", arg: 1, scope: !4340, file: !4341, line: 172, type: !4344)
!4346 = !DILocation(line: 172, column: 38, scope: !4340)
!4347 = !DILocalVariable(name: "bm", arg: 2, scope: !4340, file: !4341, line: 172, type: !2388)
!4348 = !DILocation(line: 172, column: 51, scope: !4340)
!4349 = !DILocalVariable(name: "itype", arg: 3, scope: !4340, file: !4341, line: 172, type: !13)
!4350 = !DILocation(line: 172, column: 66, scope: !4340)
!4351 = !DILocalVariable(name: "data", arg: 4, scope: !4340, file: !4341, line: 172, type: !56)
!4352 = !DILocation(line: 172, column: 79, scope: !4340)
!4353 = !DILocation(line: 174, column: 6, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4340, file: !4341, line: 174, column: 6)
!4355 = !DILocation(line: 174, column: 6, scope: !4340)
!4356 = !DILocation(line: 175, column: 23, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4354, file: !4341, line: 174, column: 51)
!4358 = !DILocation(line: 175, column: 10, scope: !4357)
!4359 = !DILocation(line: 175, column: 3, scope: !4357)
!4360 = !DILocation(line: 178, column: 3, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4354, file: !4341, line: 177, column: 7)
!4362 = !DILocation(line: 180, column: 1, scope: !4340)
!4363 = distinct !DISubprogram(name: "_bm_elem_flag_test", scope: !4364, file: !4364, line: 42, type: !4365, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!4364 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4365 = !DISubroutineType(types: !4366)
!4366 = !{!14, !4367, !13}
!4367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4368, size: 64)
!4368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2218)
!4369 = !DILocalVariable(name: "head", arg: 1, scope: !4363, file: !4364, line: 42, type: !4367)
!4370 = !DILocation(line: 42, column: 52, scope: !4363)
!4371 = !DILocalVariable(name: "hflag", arg: 2, scope: !4363, file: !4364, line: 42, type: !13)
!4372 = !DILocation(line: 42, column: 69, scope: !4363)
!4373 = !DILocation(line: 44, column: 9, scope: !4363)
!4374 = !DILocation(line: 44, column: 15, scope: !4363)
!4375 = !DILocation(line: 44, column: 23, scope: !4363)
!4376 = !DILocation(line: 44, column: 21, scope: !4363)
!4377 = !DILocation(line: 44, column: 2, scope: !4363)
!4378 = distinct !DISubprogram(name: "BM_iter_step", scope: !4341, file: !4341, line: 40, type: !4379, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!4379 = !DISubroutineType(types: !4380)
!4380 = !{!56, !4344}
!4381 = !DILocalVariable(name: "iter", arg: 1, scope: !4378, file: !4341, line: 40, type: !4344)
!4382 = !DILocation(line: 40, column: 39, scope: !4378)
!4383 = !DILocation(line: 42, column: 9, scope: !4378)
!4384 = !DILocation(line: 42, column: 15, scope: !4378)
!4385 = !DILocation(line: 42, column: 20, scope: !4378)
!4386 = !DILocation(line: 42, column: 2, scope: !4378)
!4387 = distinct !DISubprogram(name: "BLI_ghashIterator_done", scope: !2292, file: !2292, line: 98, type: !4388, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!4388 = !DISubroutineType(types: !4389)
!4389 = !{!1006, !3089}
!4390 = !DILocalVariable(name: "ghi", arg: 1, scope: !4387, file: !2292, line: 98, type: !3089)
!4391 = !DILocation(line: 98, column: 57, scope: !4387)
!4392 = !DILocation(line: 98, column: 78, scope: !4387)
!4393 = !DILocation(line: 98, column: 83, scope: !4387)
!4394 = !DILocation(line: 98, column: 77, scope: !4387)
!4395 = !DILocation(line: 98, column: 70, scope: !4387)
!4396 = distinct !DISubprogram(name: "BLI_ghashIterator_getKey", scope: !2292, file: !2292, line: 95, type: !4397, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!4397 = !DISubroutineType(types: !4398)
!4398 = !{!56, !3089}
!4399 = !DILocalVariable(name: "ghi", arg: 1, scope: !4396, file: !2292, line: 95, type: !3089)
!4400 = !DILocation(line: 95, column: 59, scope: !4396)
!4401 = !DILocation(line: 95, column: 99, scope: !4396)
!4402 = !DILocation(line: 95, column: 104, scope: !4396)
!4403 = !DILocation(line: 95, column: 115, scope: !4396)
!4404 = !DILocation(line: 95, column: 70, scope: !4396)
!4405 = distinct !DISubprogram(name: "stitch_uv_edge_generate_linked_edges", scope: !3, file: !3, line: 632, type: !4406, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!4406 = !DISubroutineType(types: !4407)
!4407 = !{null, !2379, !2300}
!4408 = !DILocalVariable(name: "edge_hash", arg: 1, scope: !4405, file: !3, line: 632, type: !2379)
!4409 = !DILocation(line: 632, column: 57, scope: !4405)
!4410 = !DILocalVariable(name: "state", arg: 2, scope: !4405, file: !3, line: 632, type: !2300)
!4411 = !DILocation(line: 632, column: 81, scope: !4405)
!4412 = !DILocalVariable(name: "edges", scope: !4405, file: !3, line: 634, type: !2198)
!4413 = !DILocation(line: 634, column: 10, scope: !4405)
!4414 = !DILocation(line: 634, column: 18, scope: !4405)
!4415 = !DILocation(line: 634, column: 25, scope: !4405)
!4416 = !DILocalVariable(name: "map", scope: !4405, file: !3, line: 635, type: !4417)
!4417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3201, size: 64)
!4418 = !DILocation(line: 635, column: 13, scope: !4405)
!4419 = !DILocation(line: 635, column: 19, scope: !4405)
!4420 = !DILocation(line: 635, column: 26, scope: !4405)
!4421 = !DILocalVariable(name: "element_map", scope: !4405, file: !3, line: 636, type: !2464)
!4422 = !DILocation(line: 636, column: 16, scope: !4405)
!4423 = !DILocation(line: 636, column: 30, scope: !4405)
!4424 = !DILocation(line: 636, column: 37, scope: !4405)
!4425 = !DILocalVariable(name: "first_element", scope: !4405, file: !3, line: 637, type: !2206)
!4426 = !DILocation(line: 637, column: 13, scope: !4405)
!4427 = !DILocation(line: 637, column: 29, scope: !4405)
!4428 = !DILocation(line: 637, column: 42, scope: !4405)
!4429 = !DILocalVariable(name: "i", scope: !4405, file: !3, line: 638, type: !22)
!4430 = !DILocation(line: 638, column: 6, scope: !4405)
!4431 = !DILocation(line: 640, column: 9, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4405, file: !3, line: 640, column: 2)
!4433 = !DILocation(line: 640, column: 7, scope: !4432)
!4434 = !DILocation(line: 640, column: 14, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4432, file: !3, line: 640, column: 2)
!4436 = !DILocation(line: 640, column: 18, scope: !4435)
!4437 = !DILocation(line: 640, column: 25, scope: !4435)
!4438 = !DILocation(line: 640, column: 16, scope: !4435)
!4439 = !DILocation(line: 640, column: 2, scope: !4432)
!4440 = !DILocalVariable(name: "edge", scope: !4441, file: !3, line: 641, type: !2198)
!4441 = distinct !DILexicalBlock(scope: !4435, file: !3, line: 640, column: 52)
!4442 = !DILocation(line: 641, column: 11, scope: !4441)
!4443 = !DILocation(line: 641, column: 18, scope: !4441)
!4444 = !DILocation(line: 641, column: 26, scope: !4441)
!4445 = !DILocation(line: 641, column: 24, scope: !4441)
!4446 = !DILocation(line: 643, column: 7, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4441, file: !3, line: 643, column: 7)
!4448 = !DILocation(line: 643, column: 13, scope: !4447)
!4449 = !DILocation(line: 643, column: 7, scope: !4441)
!4450 = !DILocation(line: 644, column: 4, scope: !4447)
!4451 = !DILocation(line: 647, column: 7, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4441, file: !3, line: 647, column: 7)
!4453 = !DILocation(line: 647, column: 13, scope: !4452)
!4454 = !DILocation(line: 647, column: 18, scope: !4452)
!4455 = !DILocation(line: 647, column: 7, scope: !4441)
!4456 = !DILocalVariable(name: "element1", scope: !4457, file: !3, line: 648, type: !2206)
!4457 = distinct !DILexicalBlock(scope: !4452, file: !3, line: 647, column: 37)
!4458 = !DILocation(line: 648, column: 15, scope: !4457)
!4459 = !DILocation(line: 648, column: 26, scope: !4457)
!4460 = !DILocation(line: 648, column: 33, scope: !4457)
!4461 = !DILocation(line: 648, column: 37, scope: !4457)
!4462 = !DILocation(line: 648, column: 43, scope: !4457)
!4463 = !DILocalVariable(name: "element2", scope: !4457, file: !3, line: 649, type: !2206)
!4464 = !DILocation(line: 649, column: 15, scope: !4457)
!4465 = !DILocation(line: 649, column: 26, scope: !4457)
!4466 = !DILocation(line: 649, column: 33, scope: !4457)
!4467 = !DILocation(line: 649, column: 37, scope: !4457)
!4468 = !DILocation(line: 649, column: 43, scope: !4457)
!4469 = !DILocalVariable(name: "iter1", scope: !4457, file: !3, line: 652, type: !2206)
!4470 = !DILocation(line: 652, column: 15, scope: !4457)
!4471 = !DILocation(line: 652, column: 23, scope: !4457)
!4472 = !DILocation(line: 652, column: 36, scope: !4457)
!4473 = !DILocation(line: 652, column: 41, scope: !4457)
!4474 = !DILocalVariable(name: "last_set", scope: !4457, file: !3, line: 653, type: !2198)
!4475 = !DILocation(line: 653, column: 12, scope: !4457)
!4476 = !DILocation(line: 653, column: 23, scope: !4457)
!4477 = !DILocalVariable(name: "elemindex2", scope: !4457, file: !3, line: 654, type: !22)
!4478 = !DILocation(line: 654, column: 8, scope: !4457)
!4479 = !DILocation(line: 654, column: 21, scope: !4457)
!4480 = !DILocation(line: 656, column: 18, scope: !4457)
!4481 = !DILocation(line: 656, column: 4, scope: !4457)
!4482 = !DILocation(line: 656, column: 10, scope: !4457)
!4483 = !DILocation(line: 656, column: 16, scope: !4457)
!4484 = !DILocation(line: 658, column: 4, scope: !4457)
!4485 = !DILocation(line: 658, column: 11, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4487, file: !3, line: 658, column: 4)
!4487 = distinct !DILexicalBlock(scope: !4457, file: !3, line: 658, column: 4)
!4488 = !DILocation(line: 658, column: 4, scope: !4487)
!4489 = !DILocalVariable(name: "iter2", scope: !4490, file: !3, line: 659, type: !2206)
!4490 = distinct !DILexicalBlock(scope: !4486, file: !3, line: 658, column: 39)
!4491 = !DILocation(line: 659, column: 16, scope: !4490)
!4492 = !DILocation(line: 662, column: 9, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4490, file: !3, line: 662, column: 9)
!4494 = !DILocation(line: 662, column: 49, scope: !4493)
!4495 = !DILocation(line: 662, column: 46, scope: !4493)
!4496 = !DILocation(line: 662, column: 9, scope: !4490)
!4497 = !DILocation(line: 663, column: 32, scope: !4493)
!4498 = !DILocation(line: 663, column: 45, scope: !4493)
!4499 = !DILocation(line: 663, column: 52, scope: !4493)
!4500 = !DILocation(line: 663, column: 55, scope: !4493)
!4501 = !DILocation(line: 663, column: 58, scope: !4493)
!4502 = !DILocation(line: 663, column: 65, scope: !4493)
!4503 = !DILocation(line: 663, column: 68, scope: !4493)
!4504 = !DILocation(line: 663, column: 14, scope: !4493)
!4505 = !DILocation(line: 663, column: 12, scope: !4493)
!4506 = !DILocation(line: 663, column: 6, scope: !4493)
!4507 = !DILocation(line: 664, column: 14, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4493, file: !3, line: 664, column: 14)
!4509 = !DILocation(line: 664, column: 54, scope: !4508)
!4510 = !DILocation(line: 664, column: 51, scope: !4508)
!4511 = !DILocation(line: 664, column: 14, scope: !4493)
!4512 = !DILocation(line: 665, column: 32, scope: !4508)
!4513 = !DILocation(line: 665, column: 45, scope: !4508)
!4514 = !DILocation(line: 665, column: 52, scope: !4508)
!4515 = !DILocation(line: 665, column: 55, scope: !4508)
!4516 = !DILocation(line: 665, column: 58, scope: !4508)
!4517 = !DILocation(line: 665, column: 65, scope: !4508)
!4518 = !DILocation(line: 665, column: 68, scope: !4508)
!4519 = !DILocation(line: 665, column: 14, scope: !4508)
!4520 = !DILocation(line: 665, column: 12, scope: !4508)
!4521 = !DILocation(line: 665, column: 6, scope: !4508)
!4522 = !DILocation(line: 667, column: 9, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4490, file: !3, line: 667, column: 9)
!4524 = !DILocation(line: 667, column: 9, scope: !4490)
!4525 = !DILocalVariable(name: "index1", scope: !4526, file: !3, line: 668, type: !22)
!4526 = distinct !DILexicalBlock(scope: !4523, file: !3, line: 667, column: 16)
!4527 = !DILocation(line: 668, column: 10, scope: !4526)
!4528 = !DILocation(line: 668, column: 19, scope: !4526)
!4529 = !DILocation(line: 668, column: 23, scope: !4526)
!4530 = !DILocation(line: 668, column: 31, scope: !4526)
!4531 = !DILocation(line: 668, column: 29, scope: !4526)
!4532 = !DILocalVariable(name: "index2", scope: !4526, file: !3, line: 669, type: !22)
!4533 = !DILocation(line: 669, column: 10, scope: !4526)
!4534 = !DILocation(line: 669, column: 19, scope: !4526)
!4535 = !DILocation(line: 669, column: 23, scope: !4526)
!4536 = !DILocation(line: 669, column: 31, scope: !4526)
!4537 = !DILocation(line: 669, column: 29, scope: !4526)
!4538 = !DILocalVariable(name: "edgetmp", scope: !4526, file: !3, line: 670, type: !2199)
!4539 = !DILocation(line: 670, column: 13, scope: !4526)
!4540 = !DILocalVariable(name: "edge2", scope: !4526, file: !3, line: 671, type: !2198)
!4541 = !DILocation(line: 671, column: 14, scope: !4526)
!4542 = !DILocalVariable(name: "eiter", scope: !4526, file: !3, line: 671, type: !2198)
!4543 = !DILocation(line: 671, column: 22, scope: !4526)
!4544 = !DILocalVariable(name: "valid", scope: !4526, file: !3, line: 672, type: !1006)
!4545 = !DILocation(line: 672, column: 11, scope: !4526)
!4546 = !DILocation(line: 675, column: 10, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4526, file: !3, line: 675, column: 10)
!4548 = !DILocation(line: 675, column: 19, scope: !4547)
!4549 = !DILocation(line: 675, column: 17, scope: !4547)
!4550 = !DILocation(line: 675, column: 10, scope: !4526)
!4551 = !DILocalVariable(name: "sw_ap", scope: !4552, file: !3, line: 676, type: !22)
!4552 = distinct !DILexicalBlock(scope: !4553, file: !3, line: 676, column: 7)
!4553 = distinct !DILexicalBlock(scope: !4547, file: !3, line: 675, column: 27)
!4554 = !DILocation(line: 676, column: 7, scope: !4552)
!4555 = !DILocation(line: 677, column: 6, scope: !4553)
!4556 = !DILocation(line: 679, column: 20, scope: !4526)
!4557 = !DILocation(line: 679, column: 14, scope: !4526)
!4558 = !DILocation(line: 679, column: 18, scope: !4526)
!4559 = !DILocation(line: 680, column: 20, scope: !4526)
!4560 = !DILocation(line: 680, column: 14, scope: !4526)
!4561 = !DILocation(line: 680, column: 18, scope: !4526)
!4562 = !DILocation(line: 683, column: 31, scope: !4526)
!4563 = !DILocation(line: 683, column: 42, scope: !4526)
!4564 = !DILocation(line: 683, column: 14, scope: !4526)
!4565 = !DILocation(line: 683, column: 12, scope: !4526)
!4566 = !DILocation(line: 686, column: 19, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4526, file: !3, line: 686, column: 6)
!4568 = !DILocation(line: 686, column: 17, scope: !4567)
!4569 = !DILocation(line: 686, column: 11, scope: !4567)
!4570 = !DILocation(line: 686, column: 25, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4567, file: !3, line: 686, column: 6)
!4572 = !DILocation(line: 686, column: 6, scope: !4567)
!4573 = !DILocation(line: 687, column: 11, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4575, file: !3, line: 687, column: 11)
!4575 = distinct !DILexicalBlock(scope: !4571, file: !3, line: 686, column: 53)
!4576 = !DILocation(line: 687, column: 20, scope: !4574)
!4577 = !DILocation(line: 687, column: 17, scope: !4574)
!4578 = !DILocation(line: 687, column: 11, scope: !4575)
!4579 = !DILocation(line: 688, column: 14, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 687, column: 27)
!4581 = !DILocation(line: 689, column: 8, scope: !4580)
!4582 = !DILocation(line: 691, column: 6, scope: !4575)
!4583 = !DILocation(line: 686, column: 40, scope: !4571)
!4584 = !DILocation(line: 686, column: 47, scope: !4571)
!4585 = !DILocation(line: 686, column: 38, scope: !4571)
!4586 = !DILocation(line: 686, column: 6, scope: !4571)
!4587 = distinct !{!4587, !4572, !4588}
!4588 = !DILocation(line: 691, column: 6, scope: !4567)
!4589 = !DILocation(line: 693, column: 10, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4526, file: !3, line: 693, column: 10)
!4591 = !DILocation(line: 693, column: 10, scope: !4526)
!4592 = !DILocation(line: 696, column: 24, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 693, column: 17)
!4594 = !DILocation(line: 696, column: 7, scope: !4593)
!4595 = !DILocation(line: 696, column: 17, scope: !4593)
!4596 = !DILocation(line: 696, column: 22, scope: !4593)
!4597 = !DILocation(line: 697, column: 18, scope: !4593)
!4598 = !DILocation(line: 697, column: 16, scope: !4593)
!4599 = !DILocation(line: 699, column: 22, scope: !4593)
!4600 = !DILocation(line: 699, column: 7, scope: !4593)
!4601 = !DILocation(line: 699, column: 14, scope: !4593)
!4602 = !DILocation(line: 699, column: 20, scope: !4593)
!4603 = !DILocation(line: 700, column: 6, scope: !4593)
!4604 = !DILocation(line: 701, column: 5, scope: !4526)
!4605 = !DILocation(line: 702, column: 4, scope: !4490)
!4606 = !DILocation(line: 658, column: 26, scope: !4486)
!4607 = !DILocation(line: 658, column: 33, scope: !4486)
!4608 = !DILocation(line: 658, column: 24, scope: !4486)
!4609 = !DILocation(line: 658, column: 4, scope: !4486)
!4610 = distinct !{!4610, !4488, !4611}
!4611 = !DILocation(line: 702, column: 4, scope: !4487)
!4612 = !DILocation(line: 703, column: 3, scope: !4457)
!4613 = !DILocation(line: 706, column: 18, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4452, file: !3, line: 704, column: 8)
!4615 = !DILocation(line: 706, column: 4, scope: !4614)
!4616 = !DILocation(line: 706, column: 10, scope: !4614)
!4617 = !DILocation(line: 706, column: 16, scope: !4614)
!4618 = !DILocation(line: 708, column: 2, scope: !4441)
!4619 = !DILocation(line: 640, column: 48, scope: !4435)
!4620 = !DILocation(line: 640, column: 2, scope: !4435)
!4621 = distinct !{!4621, !4439, !4622}
!4622 = !DILocation(line: 708, column: 2, scope: !4432)
!4623 = !DILocation(line: 709, column: 1, scope: !4405)
!4624 = distinct !DISubprogram(name: "stitch_calculate_edge_normal", scope: !3, file: !3, line: 1488, type: !4625, scopeLine: 1489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!4625 = !DISubroutineType(types: !4626)
!4626 = !{null, !2310, !2198, !2299, !191}
!4627 = !DILocalVariable(name: "em", arg: 1, scope: !4624, file: !3, line: 1488, type: !2310)
!4628 = !DILocation(line: 1488, column: 54, scope: !4624)
!4629 = !DILocalVariable(name: "edge", arg: 2, scope: !4624, file: !3, line: 1488, type: !2198)
!4630 = !DILocation(line: 1488, column: 66, scope: !4624)
!4631 = !DILocalVariable(name: "normal", arg: 3, scope: !4624, file: !3, line: 1488, type: !2299)
!4632 = !DILocation(line: 1488, column: 79, scope: !4624)
!4633 = !DILocalVariable(name: "aspect", arg: 4, scope: !4624, file: !3, line: 1488, type: !191)
!4634 = !DILocation(line: 1488, column: 93, scope: !4624)
!4635 = !DILocalVariable(name: "l1", scope: !4624, file: !3, line: 1490, type: !2262)
!4636 = !DILocation(line: 1490, column: 10, scope: !4624)
!4637 = !DILocation(line: 1490, column: 15, scope: !4624)
!4638 = !DILocation(line: 1490, column: 21, scope: !4624)
!4639 = !DILocation(line: 1490, column: 30, scope: !4624)
!4640 = !DILocalVariable(name: "luv1", scope: !4624, file: !3, line: 1491, type: !4641)
!4641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4642, size: 64)
!4642 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoopUV", file: !1017, line: 112, baseType: !4643)
!4643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !1017, line: 109, size: 96, elements: !4644)
!4644 = !{!4645, !4646}
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !4643, file: !1017, line: 110, baseType: !419, size: 64)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4643, file: !1017, line: 111, baseType: !22, size: 32, offset: 64)
!4647 = !DILocation(line: 1491, column: 11, scope: !4624)
!4648 = !DILocalVariable(name: "luv2", scope: !4624, file: !3, line: 1491, type: !4641)
!4649 = !DILocation(line: 1491, column: 18, scope: !4624)
!4650 = !DILocalVariable(name: "tangent", scope: !4624, file: !3, line: 1492, type: !419)
!4651 = !DILocation(line: 1492, column: 8, scope: !4624)
!4652 = !DILocation(line: 1494, column: 31, scope: !4624)
!4653 = !DILocation(line: 1494, column: 35, scope: !4624)
!4654 = !DILocation(line: 1494, column: 39, scope: !4624)
!4655 = !DILocation(line: 1494, column: 46, scope: !4624)
!4656 = !DILocation(line: 1494, column: 50, scope: !4624)
!4657 = !DILocation(line: 1494, column: 55, scope: !4624)
!4658 = !DILocation(line: 1494, column: 9, scope: !4624)
!4659 = !DILocation(line: 1494, column: 7, scope: !4624)
!4660 = !DILocation(line: 1495, column: 31, scope: !4624)
!4661 = !DILocation(line: 1495, column: 35, scope: !4624)
!4662 = !DILocation(line: 1495, column: 39, scope: !4624)
!4663 = !DILocation(line: 1495, column: 46, scope: !4624)
!4664 = !DILocation(line: 1495, column: 50, scope: !4624)
!4665 = !DILocation(line: 1495, column: 56, scope: !4624)
!4666 = !DILocation(line: 1495, column: 61, scope: !4624)
!4667 = !DILocation(line: 1495, column: 9, scope: !4624)
!4668 = !DILocation(line: 1495, column: 7, scope: !4624)
!4669 = !DILocation(line: 1497, column: 14, scope: !4624)
!4670 = !DILocation(line: 1497, column: 23, scope: !4624)
!4671 = !DILocation(line: 1497, column: 29, scope: !4624)
!4672 = !DILocation(line: 1497, column: 34, scope: !4624)
!4673 = !DILocation(line: 1497, column: 40, scope: !4624)
!4674 = !DILocation(line: 1497, column: 2, scope: !4624)
!4675 = !DILocation(line: 1499, column: 16, scope: !4624)
!4676 = !DILocation(line: 1499, column: 2, scope: !4624)
!4677 = !DILocation(line: 1499, column: 13, scope: !4624)
!4678 = !DILocation(line: 1501, column: 14, scope: !4624)
!4679 = !DILocation(line: 1501, column: 2, scope: !4624)
!4680 = !DILocation(line: 1501, column: 12, scope: !4624)
!4681 = !DILocation(line: 1502, column: 15, scope: !4624)
!4682 = !DILocation(line: 1502, column: 14, scope: !4624)
!4683 = !DILocation(line: 1502, column: 2, scope: !4624)
!4684 = !DILocation(line: 1502, column: 12, scope: !4624)
!4685 = !DILocation(line: 1504, column: 15, scope: !4624)
!4686 = !DILocation(line: 1504, column: 2, scope: !4624)
!4687 = !DILocation(line: 1505, column: 1, scope: !4624)
!4688 = distinct !DISubprogram(name: "add_v2_v2", scope: !4689, file: !4689, line: 284, type: !4690, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!4689 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4690 = !DISubroutineType(types: !4691)
!4691 = !{null, !2299, !4692}
!4692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4693, size: 64)
!4693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !191)
!4694 = !DILocalVariable(name: "r", arg: 1, scope: !4688, file: !4689, line: 284, type: !2299)
!4695 = !DILocation(line: 284, column: 30, scope: !4688)
!4696 = !DILocalVariable(name: "a", arg: 2, scope: !4688, file: !4689, line: 284, type: !4692)
!4697 = !DILocation(line: 284, column: 48, scope: !4688)
!4698 = !DILocation(line: 286, column: 10, scope: !4688)
!4699 = !DILocation(line: 286, column: 2, scope: !4688)
!4700 = !DILocation(line: 286, column: 7, scope: !4688)
!4701 = !DILocation(line: 287, column: 10, scope: !4688)
!4702 = !DILocation(line: 287, column: 2, scope: !4688)
!4703 = !DILocation(line: 287, column: 7, scope: !4688)
!4704 = !DILocation(line: 288, column: 1, scope: !4688)
!4705 = distinct !DISubprogram(name: "normalize_v2", scope: !4689, file: !4689, line: 783, type: !4706, scopeLine: 784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!4706 = !DISubroutineType(types: !4707)
!4707 = !{!191, !2299}
!4708 = !DILocalVariable(name: "n", arg: 1, scope: !4705, file: !4689, line: 783, type: !2299)
!4709 = !DILocation(line: 783, column: 34, scope: !4705)
!4710 = !DILocation(line: 785, column: 25, scope: !4705)
!4711 = !DILocation(line: 785, column: 28, scope: !4705)
!4712 = !DILocation(line: 785, column: 9, scope: !4705)
!4713 = !DILocation(line: 785, column: 2, scope: !4705)
!4714 = distinct !DISubprogram(name: "stitch_select_uv", scope: !3, file: !3, line: 1404, type: !4715, scopeLine: 1405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!4715 = !DISubroutineType(types: !4716)
!4716 = !{null, !2206, !2300, !22}
!4717 = !DILocalVariable(name: "element", arg: 1, scope: !4714, file: !3, line: 1404, type: !2206)
!4718 = !DILocation(line: 1404, column: 41, scope: !4714)
!4719 = !DILocalVariable(name: "state", arg: 2, scope: !4714, file: !3, line: 1404, type: !2300)
!4720 = !DILocation(line: 1404, column: 63, scope: !4714)
!4721 = !DILocalVariable(name: "always_select", arg: 3, scope: !4714, file: !3, line: 1404, type: !22)
!4722 = !DILocation(line: 1404, column: 74, scope: !4714)
!4723 = !DILocalVariable(name: "l", scope: !4714, file: !3, line: 1406, type: !2262)
!4724 = !DILocation(line: 1406, column: 10, scope: !4714)
!4725 = !DILocalVariable(name: "element_iter", scope: !4714, file: !3, line: 1407, type: !2206)
!4726 = !DILocation(line: 1407, column: 13, scope: !4714)
!4727 = !DILocalVariable(name: "selection_stack", scope: !4714, file: !3, line: 1408, type: !2297)
!4728 = !DILocation(line: 1408, column: 14, scope: !4714)
!4729 = !DILocation(line: 1408, column: 46, scope: !4714)
!4730 = !DILocation(line: 1408, column: 53, scope: !4714)
!4731 = !DILocation(line: 1408, column: 32, scope: !4714)
!4732 = !DILocation(line: 1410, column: 6, scope: !4714)
!4733 = !DILocation(line: 1410, column: 15, scope: !4714)
!4734 = !DILocation(line: 1410, column: 4, scope: !4714)
!4735 = !DILocation(line: 1412, column: 17, scope: !4714)
!4736 = !DILocation(line: 1412, column: 24, scope: !4714)
!4737 = !DILocation(line: 1412, column: 37, scope: !4714)
!4738 = !DILocation(line: 1412, column: 42, scope: !4714)
!4739 = !DILocation(line: 1412, column: 15, scope: !4714)
!4740 = !DILocation(line: 1414, column: 2, scope: !4714)
!4741 = !DILocation(line: 1414, column: 9, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 1414, column: 2)
!4743 = distinct !DILexicalBlock(scope: !4714, file: !3, line: 1414, column: 2)
!4744 = !DILocation(line: 1414, column: 2, scope: !4743)
!4745 = !DILocation(line: 1415, column: 7, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4747, file: !3, line: 1415, column: 7)
!4747 = distinct !DILexicalBlock(scope: !4742, file: !3, line: 1414, column: 58)
!4748 = !DILocation(line: 1415, column: 21, scope: !4746)
!4749 = !DILocation(line: 1415, column: 7, scope: !4747)
!4750 = !DILocation(line: 1417, column: 8, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 1417, column: 8)
!4752 = distinct !DILexicalBlock(scope: !4746, file: !3, line: 1415, column: 31)
!4753 = !DILocation(line: 1417, column: 22, scope: !4751)
!4754 = !DILocation(line: 1417, column: 27, scope: !4751)
!4755 = !DILocation(line: 1417, column: 8, scope: !4752)
!4756 = !DILocalVariable(name: "i", scope: !4757, file: !3, line: 1418, type: !22)
!4757 = distinct !DILexicalBlock(scope: !4751, file: !3, line: 1417, column: 46)
!4758 = !DILocation(line: 1418, column: 9, scope: !4757)
!4759 = !DILocation(line: 1419, column: 9, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 1419, column: 9)
!4761 = !DILocation(line: 1419, column: 9, scope: !4757)
!4762 = !DILocation(line: 1420, column: 6, scope: !4760)
!4763 = !DILocation(line: 1422, column: 5, scope: !4757)
!4764 = !DILocation(line: 1422, column: 19, scope: !4757)
!4765 = !DILocation(line: 1422, column: 24, scope: !4757)
!4766 = !DILocation(line: 1423, column: 12, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 1423, column: 5)
!4768 = !DILocation(line: 1423, column: 10, scope: !4767)
!4769 = !DILocation(line: 1423, column: 17, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4767, file: !3, line: 1423, column: 5)
!4771 = !DILocation(line: 1423, column: 21, scope: !4770)
!4772 = !DILocation(line: 1423, column: 28, scope: !4770)
!4773 = !DILocation(line: 1423, column: 19, scope: !4770)
!4774 = !DILocation(line: 1423, column: 5, scope: !4767)
!4775 = !DILocation(line: 1424, column: 10, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 1424, column: 10)
!4777 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 1423, column: 49)
!4778 = !DILocation(line: 1424, column: 26, scope: !4776)
!4779 = !DILocation(line: 1424, column: 32, scope: !4776)
!4780 = !DILocation(line: 1424, column: 29, scope: !4776)
!4781 = !DILocation(line: 1424, column: 10, scope: !4777)
!4782 = !DILocation(line: 1425, column: 8, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4776, file: !3, line: 1424, column: 46)
!4784 = !DILocation(line: 1425, column: 15, scope: !4783)
!4785 = !DILocation(line: 1425, column: 30, scope: !4783)
!4786 = !DILocation(line: 1426, column: 28, scope: !4783)
!4787 = !DILocation(line: 1426, column: 44, scope: !4783)
!4788 = !DILocation(line: 1426, column: 51, scope: !4783)
!4789 = !DILocation(line: 1426, column: 7, scope: !4783)
!4790 = !DILocation(line: 1426, column: 23, scope: !4783)
!4791 = !DILocation(line: 1426, column: 26, scope: !4783)
!4792 = !DILocation(line: 1427, column: 7, scope: !4783)
!4793 = !DILocation(line: 1429, column: 5, scope: !4777)
!4794 = !DILocation(line: 1423, column: 45, scope: !4770)
!4795 = !DILocation(line: 1423, column: 5, scope: !4770)
!4796 = distinct !{!4796, !4774, !4797}
!4797 = !DILocation(line: 1429, column: 5, scope: !4767)
!4798 = !DILocation(line: 1430, column: 4, scope: !4757)
!4799 = !DILocation(line: 1432, column: 5, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4751, file: !3, line: 1431, column: 9)
!4801 = !DILocation(line: 1432, column: 19, scope: !4800)
!4802 = !DILocation(line: 1432, column: 24, scope: !4800)
!4803 = !DILocation(line: 1433, column: 48, scope: !4800)
!4804 = !DILocation(line: 1433, column: 5, scope: !4800)
!4805 = !DILocation(line: 1433, column: 21, scope: !4800)
!4806 = !DILocation(line: 1433, column: 28, scope: !4800)
!4807 = !DILocation(line: 1433, column: 42, scope: !4800)
!4808 = !DILocation(line: 1433, column: 46, scope: !4800)
!4809 = !DILocation(line: 1435, column: 3, scope: !4752)
!4810 = !DILocation(line: 1436, column: 2, scope: !4747)
!4811 = !DILocation(line: 1414, column: 38, scope: !4742)
!4812 = !DILocation(line: 1414, column: 52, scope: !4742)
!4813 = !DILocation(line: 1414, column: 36, scope: !4742)
!4814 = !DILocation(line: 1414, column: 2, scope: !4742)
!4815 = distinct !{!4815, !4744, !4816}
!4816 = !DILocation(line: 1436, column: 2, scope: !4743)
!4817 = !DILocation(line: 1437, column: 1, scope: !4714)
!4818 = distinct !DISubprogram(name: "stitch_select_edge", scope: !3, file: !3, line: 1375, type: !4819, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!4819 = !DISubroutineType(types: !4820)
!4820 = !{null, !2198, !2300, !22}
!4821 = !DILocalVariable(name: "edge", arg: 1, scope: !4818, file: !3, line: 1375, type: !2198)
!4822 = !DILocation(line: 1375, column: 40, scope: !4818)
!4823 = !DILocalVariable(name: "state", arg: 2, scope: !4818, file: !3, line: 1375, type: !2300)
!4824 = !DILocation(line: 1375, column: 59, scope: !4818)
!4825 = !DILocalVariable(name: "always_select", arg: 3, scope: !4818, file: !3, line: 1375, type: !22)
!4826 = !DILocation(line: 1375, column: 70, scope: !4818)
!4827 = !DILocalVariable(name: "eiter", scope: !4818, file: !3, line: 1377, type: !2198)
!4828 = !DILocation(line: 1377, column: 10, scope: !4818)
!4829 = !DILocalVariable(name: "selection_stack", scope: !4818, file: !3, line: 1378, type: !2298)
!4830 = !DILocation(line: 1378, column: 11, scope: !4818)
!4831 = !DILocation(line: 1378, column: 40, scope: !4818)
!4832 = !DILocation(line: 1378, column: 47, scope: !4818)
!4833 = !DILocation(line: 1378, column: 29, scope: !4818)
!4834 = !DILocation(line: 1380, column: 15, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4818, file: !3, line: 1380, column: 2)
!4836 = !DILocation(line: 1380, column: 21, scope: !4835)
!4837 = !DILocation(line: 1380, column: 13, scope: !4835)
!4838 = !DILocation(line: 1380, column: 7, scope: !4835)
!4839 = !DILocation(line: 1380, column: 28, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4835, file: !3, line: 1380, column: 2)
!4841 = !DILocation(line: 1380, column: 2, scope: !4835)
!4842 = !DILocation(line: 1381, column: 7, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4844, file: !3, line: 1381, column: 7)
!4844 = distinct !DILexicalBlock(scope: !4840, file: !3, line: 1380, column: 56)
!4845 = !DILocation(line: 1381, column: 14, scope: !4843)
!4846 = !DILocation(line: 1381, column: 19, scope: !4843)
!4847 = !DILocation(line: 1381, column: 7, scope: !4844)
!4848 = !DILocalVariable(name: "i", scope: !4849, file: !3, line: 1382, type: !22)
!4849 = distinct !DILexicalBlock(scope: !4843, file: !3, line: 1381, column: 38)
!4850 = !DILocation(line: 1382, column: 8, scope: !4849)
!4851 = !DILocation(line: 1383, column: 8, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 1383, column: 8)
!4853 = !DILocation(line: 1383, column: 8, scope: !4849)
!4854 = !DILocation(line: 1384, column: 5, scope: !4852)
!4855 = !DILocation(line: 1386, column: 4, scope: !4849)
!4856 = !DILocation(line: 1386, column: 11, scope: !4849)
!4857 = !DILocation(line: 1386, column: 16, scope: !4849)
!4858 = !DILocation(line: 1387, column: 11, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 1387, column: 4)
!4860 = !DILocation(line: 1387, column: 9, scope: !4859)
!4861 = !DILocation(line: 1387, column: 16, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 1387, column: 4)
!4863 = !DILocation(line: 1387, column: 20, scope: !4862)
!4864 = !DILocation(line: 1387, column: 27, scope: !4862)
!4865 = !DILocation(line: 1387, column: 18, scope: !4862)
!4866 = !DILocation(line: 1387, column: 4, scope: !4859)
!4867 = !DILocation(line: 1388, column: 9, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 1388, column: 9)
!4869 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 1387, column: 48)
!4870 = !DILocation(line: 1388, column: 25, scope: !4868)
!4871 = !DILocation(line: 1388, column: 31, scope: !4868)
!4872 = !DILocation(line: 1388, column: 28, scope: !4868)
!4873 = !DILocation(line: 1388, column: 9, scope: !4869)
!4874 = !DILocation(line: 1389, column: 7, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4868, file: !3, line: 1388, column: 38)
!4876 = !DILocation(line: 1389, column: 14, scope: !4875)
!4877 = !DILocation(line: 1389, column: 29, scope: !4875)
!4878 = !DILocation(line: 1390, column: 27, scope: !4875)
!4879 = !DILocation(line: 1390, column: 43, scope: !4875)
!4880 = !DILocation(line: 1390, column: 50, scope: !4875)
!4881 = !DILocation(line: 1390, column: 6, scope: !4875)
!4882 = !DILocation(line: 1390, column: 22, scope: !4875)
!4883 = !DILocation(line: 1390, column: 25, scope: !4875)
!4884 = !DILocation(line: 1391, column: 6, scope: !4875)
!4885 = !DILocation(line: 1393, column: 4, scope: !4869)
!4886 = !DILocation(line: 1387, column: 44, scope: !4862)
!4887 = !DILocation(line: 1387, column: 4, scope: !4862)
!4888 = distinct !{!4888, !4866, !4889}
!4889 = !DILocation(line: 1393, column: 4, scope: !4859)
!4890 = !DILocation(line: 1394, column: 3, scope: !4849)
!4891 = !DILocation(line: 1396, column: 4, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4843, file: !3, line: 1395, column: 8)
!4893 = !DILocation(line: 1396, column: 11, scope: !4892)
!4894 = !DILocation(line: 1396, column: 16, scope: !4892)
!4895 = !DILocation(line: 1397, column: 47, scope: !4892)
!4896 = !DILocation(line: 1397, column: 4, scope: !4892)
!4897 = !DILocation(line: 1397, column: 20, scope: !4892)
!4898 = !DILocation(line: 1397, column: 27, scope: !4892)
!4899 = !DILocation(line: 1397, column: 41, scope: !4892)
!4900 = !DILocation(line: 1397, column: 45, scope: !4892)
!4901 = !DILocation(line: 1399, column: 2, scope: !4844)
!4902 = !DILocation(line: 1380, column: 43, scope: !4840)
!4903 = !DILocation(line: 1380, column: 50, scope: !4840)
!4904 = !DILocation(line: 1380, column: 41, scope: !4840)
!4905 = !DILocation(line: 1380, column: 2, scope: !4840)
!4906 = distinct !{!4906, !4841, !4907}
!4907 = !DILocation(line: 1399, column: 2, scope: !4835)
!4908 = !DILocation(line: 1400, column: 1, scope: !4818)
!4909 = distinct !DISubprogram(name: "stitch_switch_selection_mode", scope: !3, file: !3, line: 1439, type: !4196, scopeLine: 1440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!4910 = !DILocalVariable(name: "state", arg: 1, scope: !4909, file: !3, line: 1439, type: !2300)
!4911 = !DILocation(line: 1439, column: 55, scope: !4909)
!4912 = !DILocalVariable(name: "old_selection_stack", scope: !4909, file: !3, line: 1441, type: !2377)
!4913 = !DILocation(line: 1441, column: 9, scope: !4909)
!4914 = !DILocation(line: 1441, column: 31, scope: !4909)
!4915 = !DILocation(line: 1441, column: 38, scope: !4909)
!4916 = !DILocalVariable(name: "old_selection_size", scope: !4909, file: !3, line: 1442, type: !22)
!4917 = !DILocation(line: 1442, column: 6, scope: !4909)
!4918 = !DILocation(line: 1442, column: 27, scope: !4909)
!4919 = !DILocation(line: 1442, column: 34, scope: !4909)
!4920 = !DILocation(line: 1443, column: 2, scope: !4909)
!4921 = !DILocation(line: 1443, column: 9, scope: !4909)
!4922 = !DILocation(line: 1443, column: 24, scope: !4909)
!4923 = !DILocation(line: 1445, column: 6, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4909, file: !3, line: 1445, column: 6)
!4925 = !DILocation(line: 1445, column: 13, scope: !4924)
!4926 = !DILocation(line: 1445, column: 18, scope: !4924)
!4927 = !DILocation(line: 1445, column: 6, scope: !4909)
!4928 = !DILocalVariable(name: "i", scope: !4929, file: !3, line: 1446, type: !22)
!4929 = distinct !DILexicalBlock(scope: !4924, file: !3, line: 1445, column: 34)
!4930 = !DILocation(line: 1446, column: 7, scope: !4929)
!4931 = !DILocation(line: 1447, column: 28, scope: !4929)
!4932 = !DILocation(line: 1447, column: 40, scope: !4929)
!4933 = !DILocation(line: 1447, column: 47, scope: !4929)
!4934 = !DILocation(line: 1447, column: 68, scope: !4929)
!4935 = !DILocation(line: 1447, column: 3, scope: !4929)
!4936 = !DILocation(line: 1447, column: 10, scope: !4929)
!4937 = !DILocation(line: 1447, column: 26, scope: !4929)
!4938 = !DILocation(line: 1451, column: 10, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4929, file: !3, line: 1451, column: 3)
!4940 = !DILocation(line: 1451, column: 8, scope: !4939)
!4941 = !DILocation(line: 1451, column: 15, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4939, file: !3, line: 1451, column: 3)
!4943 = !DILocation(line: 1451, column: 19, scope: !4942)
!4944 = !DILocation(line: 1451, column: 26, scope: !4942)
!4945 = !DILocation(line: 1451, column: 17, scope: !4942)
!4946 = !DILocation(line: 1451, column: 3, scope: !4939)
!4947 = !DILocalVariable(name: "edge", scope: !4948, file: !3, line: 1452, type: !2198)
!4948 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 1451, column: 53)
!4949 = !DILocation(line: 1452, column: 12, scope: !4948)
!4950 = !DILocation(line: 1452, column: 19, scope: !4948)
!4951 = !DILocation(line: 1452, column: 26, scope: !4948)
!4952 = !DILocation(line: 1452, column: 34, scope: !4948)
!4953 = !DILocation(line: 1452, column: 32, scope: !4948)
!4954 = !DILocalVariable(name: "element1", scope: !4948, file: !3, line: 1453, type: !2206)
!4955 = !DILocation(line: 1453, column: 15, scope: !4948)
!4956 = !DILocation(line: 1453, column: 26, scope: !4948)
!4957 = !DILocation(line: 1453, column: 33, scope: !4948)
!4958 = !DILocation(line: 1453, column: 37, scope: !4948)
!4959 = !DILocation(line: 1453, column: 43, scope: !4948)
!4960 = !DILocalVariable(name: "element2", scope: !4948, file: !3, line: 1454, type: !2206)
!4961 = !DILocation(line: 1454, column: 15, scope: !4948)
!4962 = !DILocation(line: 1454, column: 26, scope: !4948)
!4963 = !DILocation(line: 1454, column: 33, scope: !4948)
!4964 = !DILocation(line: 1454, column: 37, scope: !4948)
!4965 = !DILocation(line: 1454, column: 43, scope: !4948)
!4966 = !DILocation(line: 1456, column: 9, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4948, file: !3, line: 1456, column: 8)
!4968 = !DILocation(line: 1456, column: 19, scope: !4967)
!4969 = !DILocation(line: 1456, column: 24, scope: !4967)
!4970 = !DILocation(line: 1456, column: 43, scope: !4967)
!4971 = !DILocation(line: 1456, column: 47, scope: !4967)
!4972 = !DILocation(line: 1456, column: 57, scope: !4967)
!4973 = !DILocation(line: 1456, column: 62, scope: !4967)
!4974 = !DILocation(line: 1456, column: 8, scope: !4948)
!4975 = !DILocation(line: 1457, column: 24, scope: !4967)
!4976 = !DILocation(line: 1457, column: 30, scope: !4967)
!4977 = !DILocation(line: 1457, column: 5, scope: !4967)
!4978 = !DILocation(line: 1458, column: 3, scope: !4948)
!4979 = !DILocation(line: 1451, column: 49, scope: !4942)
!4980 = !DILocation(line: 1451, column: 3, scope: !4942)
!4981 = distinct !{!4981, !4946, !4982}
!4982 = !DILocation(line: 1458, column: 3, scope: !4939)
!4983 = !DILocation(line: 1461, column: 10, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4929, file: !3, line: 1461, column: 3)
!4985 = !DILocation(line: 1461, column: 8, scope: !4984)
!4986 = !DILocation(line: 1461, column: 15, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4984, file: !3, line: 1461, column: 3)
!4988 = !DILocation(line: 1461, column: 19, scope: !4987)
!4989 = !DILocation(line: 1461, column: 17, scope: !4987)
!4990 = !DILocation(line: 1461, column: 3, scope: !4984)
!4991 = !DILocalVariable(name: "element", scope: !4992, file: !3, line: 1462, type: !2206)
!4992 = distinct !DILexicalBlock(scope: !4987, file: !3, line: 1461, column: 44)
!4993 = !DILocation(line: 1462, column: 15, scope: !4992)
!4994 = !DILocation(line: 1462, column: 25, scope: !4992)
!4995 = !DILocation(line: 1462, column: 45, scope: !4992)
!4996 = !DILocation(line: 1464, column: 4, scope: !4992)
!4997 = !DILocation(line: 1464, column: 13, scope: !4992)
!4998 = !DILocation(line: 1464, column: 18, scope: !4992)
!4999 = !DILocation(line: 1465, column: 3, scope: !4992)
!5000 = !DILocation(line: 1461, column: 40, scope: !4987)
!5001 = !DILocation(line: 1461, column: 3, scope: !4987)
!5002 = distinct !{!5002, !4990, !5003}
!5003 = !DILocation(line: 1465, column: 3, scope: !4984)
!5004 = !DILocation(line: 1466, column: 3, scope: !4929)
!5005 = !DILocation(line: 1466, column: 10, scope: !4929)
!5006 = !DILocation(line: 1466, column: 15, scope: !4929)
!5007 = !DILocation(line: 1467, column: 2, scope: !4929)
!5008 = !DILocalVariable(name: "i", scope: !5009, file: !3, line: 1469, type: !22)
!5009 = distinct !DILexicalBlock(scope: !4924, file: !3, line: 1468, column: 7)
!5010 = !DILocation(line: 1469, column: 7, scope: !5009)
!5011 = !DILocation(line: 1470, column: 28, scope: !5009)
!5012 = !DILocation(line: 1470, column: 40, scope: !5009)
!5013 = !DILocation(line: 1470, column: 47, scope: !5009)
!5014 = !DILocation(line: 1470, column: 66, scope: !5009)
!5015 = !DILocation(line: 1470, column: 3, scope: !5009)
!5016 = !DILocation(line: 1470, column: 10, scope: !5009)
!5017 = !DILocation(line: 1470, column: 26, scope: !5009)
!5018 = !DILocation(line: 1473, column: 10, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5009, file: !3, line: 1473, column: 3)
!5020 = !DILocation(line: 1473, column: 8, scope: !5019)
!5021 = !DILocation(line: 1473, column: 15, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 1473, column: 3)
!5023 = !DILocation(line: 1473, column: 19, scope: !5022)
!5024 = !DILocation(line: 1473, column: 17, scope: !5022)
!5025 = !DILocation(line: 1473, column: 3, scope: !5019)
!5026 = !DILocalVariable(name: "edge", scope: !5027, file: !3, line: 1474, type: !2198)
!5027 = distinct !DILexicalBlock(scope: !5022, file: !3, line: 1473, column: 44)
!5028 = !DILocation(line: 1474, column: 12, scope: !5027)
!5029 = !DILocation(line: 1474, column: 19, scope: !5027)
!5030 = !DILocation(line: 1474, column: 39, scope: !5027)
!5031 = !DILocalVariable(name: "element1", scope: !5027, file: !3, line: 1475, type: !2206)
!5032 = !DILocation(line: 1475, column: 15, scope: !5027)
!5033 = !DILocation(line: 1475, column: 26, scope: !5027)
!5034 = !DILocation(line: 1475, column: 33, scope: !5027)
!5035 = !DILocation(line: 1475, column: 37, scope: !5027)
!5036 = !DILocation(line: 1475, column: 43, scope: !5027)
!5037 = !DILocalVariable(name: "element2", scope: !5027, file: !3, line: 1476, type: !2206)
!5038 = !DILocation(line: 1476, column: 15, scope: !5027)
!5039 = !DILocation(line: 1476, column: 26, scope: !5027)
!5040 = !DILocation(line: 1476, column: 33, scope: !5027)
!5041 = !DILocation(line: 1476, column: 37, scope: !5027)
!5042 = !DILocation(line: 1476, column: 43, scope: !5027)
!5043 = !DILocation(line: 1478, column: 21, scope: !5027)
!5044 = !DILocation(line: 1478, column: 31, scope: !5027)
!5045 = !DILocation(line: 1478, column: 4, scope: !5027)
!5046 = !DILocation(line: 1479, column: 21, scope: !5027)
!5047 = !DILocation(line: 1479, column: 31, scope: !5027)
!5048 = !DILocation(line: 1479, column: 4, scope: !5027)
!5049 = !DILocation(line: 1481, column: 4, scope: !5027)
!5050 = !DILocation(line: 1481, column: 10, scope: !5027)
!5051 = !DILocation(line: 1481, column: 15, scope: !5027)
!5052 = !DILocation(line: 1482, column: 3, scope: !5027)
!5053 = !DILocation(line: 1473, column: 40, scope: !5022)
!5054 = !DILocation(line: 1473, column: 3, scope: !5022)
!5055 = distinct !{!5055, !5025, !5056}
!5056 = !DILocation(line: 1482, column: 3, scope: !5019)
!5057 = !DILocation(line: 1483, column: 3, scope: !5009)
!5058 = !DILocation(line: 1483, column: 10, scope: !5009)
!5059 = !DILocation(line: 1483, column: 15, scope: !5009)
!5060 = !DILocation(line: 1485, column: 2, scope: !4909)
!5061 = !DILocation(line: 1485, column: 12, scope: !4909)
!5062 = !DILocation(line: 1486, column: 1, scope: !4909)
!5063 = distinct !DISubprogram(name: "uv_edge_get", scope: !3, file: !3, line: 1570, type: !5064, scopeLine: 1571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!5064 = !DISubroutineType(types: !5065)
!5065 = !{!2198, !2262, !2300}
!5066 = !DILocalVariable(name: "l", arg: 1, scope: !5063, file: !3, line: 1570, type: !2262)
!5067 = !DILocation(line: 1570, column: 36, scope: !5063)
!5068 = !DILocalVariable(name: "state", arg: 2, scope: !5063, file: !3, line: 1570, type: !2300)
!5069 = !DILocation(line: 1570, column: 52, scope: !5063)
!5070 = !DILocalVariable(name: "tmp_edge", scope: !5063, file: !3, line: 1572, type: !2199)
!5071 = !DILocation(line: 1572, column: 9, scope: !5063)
!5072 = !DILocalVariable(name: "element1", scope: !5063, file: !3, line: 1574, type: !2206)
!5073 = !DILocation(line: 1574, column: 13, scope: !5063)
!5074 = !DILocation(line: 1574, column: 42, scope: !5063)
!5075 = !DILocation(line: 1574, column: 49, scope: !5063)
!5076 = !DILocation(line: 1574, column: 62, scope: !5063)
!5077 = !DILocation(line: 1574, column: 65, scope: !5063)
!5078 = !DILocation(line: 1574, column: 68, scope: !5063)
!5079 = !DILocation(line: 1574, column: 24, scope: !5063)
!5080 = !DILocalVariable(name: "element2", scope: !5063, file: !3, line: 1575, type: !2206)
!5081 = !DILocation(line: 1575, column: 13, scope: !5063)
!5082 = !DILocation(line: 1575, column: 42, scope: !5063)
!5083 = !DILocation(line: 1575, column: 49, scope: !5063)
!5084 = !DILocation(line: 1575, column: 62, scope: !5063)
!5085 = !DILocation(line: 1575, column: 65, scope: !5063)
!5086 = !DILocation(line: 1575, column: 68, scope: !5063)
!5087 = !DILocation(line: 1575, column: 71, scope: !5063)
!5088 = !DILocation(line: 1575, column: 24, scope: !5063)
!5089 = !DILocalVariable(name: "uv1", scope: !5063, file: !3, line: 1577, type: !22)
!5090 = !DILocation(line: 1577, column: 6, scope: !5063)
!5091 = !DILocation(line: 1577, column: 12, scope: !5063)
!5092 = !DILocation(line: 1577, column: 19, scope: !5063)
!5093 = !DILocation(line: 1577, column: 23, scope: !5063)
!5094 = !DILocation(line: 1577, column: 34, scope: !5063)
!5095 = !DILocation(line: 1577, column: 41, scope: !5063)
!5096 = !DILocation(line: 1577, column: 54, scope: !5063)
!5097 = !DILocation(line: 1577, column: 32, scope: !5063)
!5098 = !DILocalVariable(name: "uv2", scope: !5063, file: !3, line: 1578, type: !22)
!5099 = !DILocation(line: 1578, column: 6, scope: !5063)
!5100 = !DILocation(line: 1578, column: 12, scope: !5063)
!5101 = !DILocation(line: 1578, column: 19, scope: !5063)
!5102 = !DILocation(line: 1578, column: 23, scope: !5063)
!5103 = !DILocation(line: 1578, column: 34, scope: !5063)
!5104 = !DILocation(line: 1578, column: 41, scope: !5063)
!5105 = !DILocation(line: 1578, column: 54, scope: !5063)
!5106 = !DILocation(line: 1578, column: 32, scope: !5063)
!5107 = !DILocation(line: 1580, column: 6, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5063, file: !3, line: 1580, column: 6)
!5109 = !DILocation(line: 1580, column: 12, scope: !5108)
!5110 = !DILocation(line: 1580, column: 10, scope: !5108)
!5111 = !DILocation(line: 1580, column: 6, scope: !5063)
!5112 = !DILocation(line: 1581, column: 18, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5108, file: !3, line: 1580, column: 17)
!5114 = !DILocation(line: 1581, column: 12, scope: !5113)
!5115 = !DILocation(line: 1581, column: 16, scope: !5113)
!5116 = !DILocation(line: 1582, column: 18, scope: !5113)
!5117 = !DILocation(line: 1582, column: 12, scope: !5113)
!5118 = !DILocation(line: 1582, column: 16, scope: !5113)
!5119 = !DILocation(line: 1583, column: 2, scope: !5113)
!5120 = !DILocation(line: 1585, column: 18, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5108, file: !3, line: 1584, column: 7)
!5122 = !DILocation(line: 1585, column: 12, scope: !5121)
!5123 = !DILocation(line: 1585, column: 16, scope: !5121)
!5124 = !DILocation(line: 1586, column: 18, scope: !5121)
!5125 = !DILocation(line: 1586, column: 12, scope: !5121)
!5126 = !DILocation(line: 1586, column: 16, scope: !5121)
!5127 = !DILocation(line: 1589, column: 26, scope: !5063)
!5128 = !DILocation(line: 1589, column: 33, scope: !5063)
!5129 = !DILocation(line: 1589, column: 44, scope: !5063)
!5130 = !DILocation(line: 1589, column: 9, scope: !5063)
!5131 = !DILocation(line: 1589, column: 2, scope: !5063)
!5132 = distinct !DISubprogram(name: "stitch_process_data", scope: !3, file: !3, line: 893, type: !5133, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!5133 = !DISubroutineType(types: !5134)
!5134 = !{!22, !2300, !2639, !22}
!5135 = !DILocalVariable(name: "state", arg: 1, scope: !5132, file: !3, line: 893, type: !2300)
!5136 = !DILocation(line: 893, column: 45, scope: !5132)
!5137 = !DILocalVariable(name: "scene", arg: 2, scope: !5132, file: !3, line: 893, type: !2639)
!5138 = !DILocation(line: 893, column: 59, scope: !5132)
!5139 = !DILocalVariable(name: "final", arg: 3, scope: !5132, file: !3, line: 893, type: !22)
!5140 = !DILocation(line: 893, column: 70, scope: !5132)
!5141 = !DILocalVariable(name: "i", scope: !5132, file: !3, line: 895, type: !22)
!5142 = !DILocation(line: 895, column: 6, scope: !5132)
!5143 = !DILocalVariable(name: "preview", scope: !5132, file: !3, line: 896, type: !2490)
!5144 = !DILocation(line: 896, column: 19, scope: !5132)
!5145 = !DILocalVariable(name: "island_stitch_data", scope: !5132, file: !3, line: 897, type: !5146)
!5146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5147, size: 64)
!5147 = !DIDerivedType(tag: DW_TAG_typedef, name: "IslandStitchData", file: !3, line: 116, baseType: !5148)
!5148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IslandStitchData", file: !3, line: 100, size: 320, elements: !5149)
!5149 = !{!5150, !5151, !5152, !5153, !5154, !5155, !5156, !5157, !5158, !5159}
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !5148, file: !3, line: 102, baseType: !191, size: 32)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "rotation_neg", scope: !5148, file: !3, line: 103, baseType: !191, size: 32, offset: 32)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "translation", scope: !5148, file: !3, line: 104, baseType: !419, size: 64, offset: 64)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "medianPoint", scope: !5148, file: !3, line: 106, baseType: !419, size: 64, offset: 128)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "numOfElements", scope: !5148, file: !3, line: 107, baseType: !22, size: 32, offset: 192)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "num_rot_elements", scope: !5148, file: !3, line: 108, baseType: !22, size: 32, offset: 224)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "num_rot_elements_neg", scope: !5148, file: !3, line: 109, baseType: !22, size: 32, offset: 256)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "addedForPreview", scope: !5148, file: !3, line: 111, baseType: !14, size: 8, offset: 288)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "stitchableCandidate", scope: !5148, file: !3, line: 113, baseType: !14, size: 8, offset: 296)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "use_edge_rotation", scope: !5148, file: !3, line: 115, baseType: !1006, size: 8, offset: 304)
!5160 = !DILocation(line: 897, column: 20, scope: !5132)
!5161 = !DILocalVariable(name: "previous_island", scope: !5132, file: !3, line: 898, type: !22)
!5162 = !DILocation(line: 898, column: 6, scope: !5132)
!5163 = !DILocation(line: 898, column: 24, scope: !5132)
!5164 = !DILocation(line: 898, column: 31, scope: !5132)
!5165 = !DILocalVariable(name: "bm", scope: !5132, file: !3, line: 899, type: !2388)
!5166 = !DILocation(line: 899, column: 9, scope: !5132)
!5167 = !DILocation(line: 899, column: 14, scope: !5132)
!5168 = !DILocation(line: 899, column: 21, scope: !5132)
!5169 = !DILocation(line: 899, column: 25, scope: !5132)
!5170 = !DILocalVariable(name: "efa", scope: !5132, file: !3, line: 900, type: !2288)
!5171 = !DILocation(line: 900, column: 10, scope: !5132)
!5172 = !DILocalVariable(name: "iter", scope: !5132, file: !3, line: 901, type: !2998)
!5173 = !DILocation(line: 901, column: 9, scope: !5132)
!5174 = !DILocalVariable(name: "final_position", scope: !5132, file: !3, line: 902, type: !5175)
!5175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5176, size: 64)
!5176 = !DIDerivedType(tag: DW_TAG_typedef, name: "UVVertAverage", file: !3, line: 122, baseType: !5177)
!5177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UVVertAverage", file: !3, line: 119, size: 96, elements: !5178)
!5178 = !{!5179, !5180}
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !5177, file: !3, line: 120, baseType: !419, size: 64)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5177, file: !3, line: 121, baseType: !345, size: 16, offset: 64)
!5181 = !DILocation(line: 902, column: 17, scope: !5132)
!5182 = !DILocalVariable(name: "stitch_midpoints", scope: !5132, file: !3, line: 904, type: !14)
!5183 = !DILocation(line: 904, column: 7, scope: !5132)
!5184 = !DILocation(line: 904, column: 26, scope: !5132)
!5185 = !DILocation(line: 904, column: 33, scope: !5132)
!5186 = !DILocalVariable(name: "uvfinal_map", scope: !5132, file: !3, line: 906, type: !872)
!5187 = !DILocation(line: 906, column: 16, scope: !5132)
!5188 = !DILocalVariable(name: "preview_position", scope: !5132, file: !3, line: 908, type: !5189)
!5189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5190, size: 64)
!5190 = !DIDerivedType(tag: DW_TAG_typedef, name: "PreviewPosition", file: !3, line: 191, baseType: !5191)
!5191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewPosition", file: !3, line: 188, size: 64, elements: !5192)
!5192 = !{!5193, !5194}
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "data_position", scope: !5191, file: !3, line: 189, baseType: !22, size: 32)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "polycount_position", scope: !5191, file: !3, line: 190, baseType: !22, size: 32, offset: 32)
!5195 = !DILocation(line: 908, column: 19, scope: !5132)
!5196 = !DILocation(line: 911, column: 24, scope: !5132)
!5197 = !DILocation(line: 911, column: 31, scope: !5132)
!5198 = !DILocation(line: 911, column: 2, scope: !5132)
!5199 = !DILocation(line: 912, column: 36, scope: !5132)
!5200 = !DILocation(line: 912, column: 12, scope: !5132)
!5201 = !DILocation(line: 912, column: 19, scope: !5132)
!5202 = !DILocation(line: 912, column: 34, scope: !5132)
!5203 = !DILocation(line: 912, column: 10, scope: !5132)
!5204 = !DILocation(line: 913, column: 6, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 913, column: 6)
!5206 = !DILocation(line: 913, column: 14, scope: !5205)
!5207 = !DILocation(line: 913, column: 6, scope: !5132)
!5208 = !DILocation(line: 914, column: 3, scope: !5205)
!5209 = !DILocation(line: 916, column: 21, scope: !5132)
!5210 = !DILocation(line: 916, column: 33, scope: !5132)
!5211 = !DILocation(line: 916, column: 37, scope: !5132)
!5212 = !DILocation(line: 916, column: 45, scope: !5132)
!5213 = !DILocation(line: 916, column: 19, scope: !5132)
!5214 = !DILocation(line: 918, column: 9, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 918, column: 2)
!5216 = !DILocation(line: 918, column: 7, scope: !5215)
!5217 = !DILocation(line: 918, column: 14, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 918, column: 2)
!5219 = !DILocation(line: 918, column: 18, scope: !5218)
!5220 = !DILocation(line: 918, column: 22, scope: !5218)
!5221 = !DILocation(line: 918, column: 16, scope: !5218)
!5222 = !DILocation(line: 918, column: 2, scope: !5215)
!5223 = !DILocation(line: 919, column: 3, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 918, column: 36)
!5225 = !DILocation(line: 919, column: 20, scope: !5224)
!5226 = !DILocation(line: 919, column: 23, scope: !5224)
!5227 = !DILocation(line: 919, column: 37, scope: !5224)
!5228 = !DILocation(line: 920, column: 2, scope: !5224)
!5229 = !DILocation(line: 918, column: 32, scope: !5218)
!5230 = !DILocation(line: 918, column: 2, scope: !5218)
!5231 = distinct !{!5231, !5222, !5232}
!5232 = !DILocation(line: 920, column: 2, scope: !5215)
!5233 = !DILocation(line: 922, column: 23, scope: !5132)
!5234 = !DILocation(line: 922, column: 65, scope: !5132)
!5235 = !DILocation(line: 922, column: 72, scope: !5132)
!5236 = !DILocation(line: 922, column: 85, scope: !5132)
!5237 = !DILocation(line: 922, column: 63, scope: !5132)
!5238 = !DILocation(line: 922, column: 21, scope: !5132)
!5239 = !DILocation(line: 923, column: 7, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 923, column: 6)
!5241 = !DILocation(line: 923, column: 6, scope: !5132)
!5242 = !DILocation(line: 924, column: 3, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5240, file: !3, line: 923, column: 27)
!5244 = !DILocation(line: 928, column: 28, scope: !5132)
!5245 = !DILocation(line: 928, column: 2, scope: !5132)
!5246 = !DILocation(line: 934, column: 9, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 934, column: 2)
!5248 = !DILocation(line: 934, column: 7, scope: !5247)
!5249 = !DILocation(line: 934, column: 14, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5247, file: !3, line: 934, column: 2)
!5251 = !DILocation(line: 934, column: 18, scope: !5250)
!5252 = !DILocation(line: 934, column: 25, scope: !5250)
!5253 = !DILocation(line: 934, column: 16, scope: !5250)
!5254 = !DILocation(line: 934, column: 2, scope: !5247)
!5255 = !DILocation(line: 935, column: 7, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5257, file: !3, line: 935, column: 7)
!5257 = distinct !DILexicalBlock(scope: !5250, file: !3, line: 934, column: 46)
!5258 = !DILocation(line: 935, column: 14, scope: !5256)
!5259 = !DILocation(line: 935, column: 19, scope: !5256)
!5260 = !DILocation(line: 935, column: 7, scope: !5257)
!5261 = !DILocalVariable(name: "element", scope: !5262, file: !3, line: 936, type: !2206)
!5262 = distinct !DILexicalBlock(scope: !5256, file: !3, line: 935, column: 35)
!5263 = !DILocation(line: 936, column: 15, scope: !5262)
!5264 = !DILocation(line: 936, column: 38, scope: !5262)
!5265 = !DILocation(line: 936, column: 45, scope: !5262)
!5266 = !DILocation(line: 936, column: 61, scope: !5262)
!5267 = !DILocation(line: 936, column: 25, scope: !5262)
!5268 = !DILocation(line: 937, column: 31, scope: !5262)
!5269 = !DILocation(line: 937, column: 40, scope: !5262)
!5270 = !DILocation(line: 937, column: 47, scope: !5262)
!5271 = !DILocation(line: 937, column: 4, scope: !5262)
!5272 = !DILocation(line: 938, column: 3, scope: !5262)
!5273 = !DILocalVariable(name: "edge", scope: !5274, file: !3, line: 940, type: !2198)
!5274 = distinct !DILexicalBlock(scope: !5256, file: !3, line: 939, column: 8)
!5275 = !DILocation(line: 940, column: 12, scope: !5274)
!5276 = !DILocation(line: 940, column: 29, scope: !5274)
!5277 = !DILocation(line: 940, column: 36, scope: !5274)
!5278 = !DILocation(line: 940, column: 52, scope: !5274)
!5279 = !DILocation(line: 940, column: 19, scope: !5274)
!5280 = !DILocation(line: 941, column: 36, scope: !5274)
!5281 = !DILocation(line: 941, column: 42, scope: !5274)
!5282 = !DILocation(line: 941, column: 49, scope: !5274)
!5283 = !DILocation(line: 941, column: 4, scope: !5274)
!5284 = !DILocation(line: 943, column: 2, scope: !5257)
!5285 = !DILocation(line: 934, column: 42, scope: !5250)
!5286 = !DILocation(line: 934, column: 2, scope: !5250)
!5287 = distinct !{!5287, !5254, !5288}
!5288 = !DILocation(line: 943, column: 2, scope: !5247)
!5289 = !DILocation(line: 946, column: 26, scope: !5132)
!5290 = !DILocation(line: 946, column: 33, scope: !5132)
!5291 = !DILocation(line: 946, column: 46, scope: !5132)
!5292 = !DILocation(line: 946, column: 2, scope: !5132)
!5293 = !DILocation(line: 946, column: 9, scope: !5132)
!5294 = !DILocation(line: 946, column: 23, scope: !5132)
!5295 = !DILocation(line: 947, column: 2, scope: !5132)
!5296 = !DILocation(line: 947, column: 11, scope: !5132)
!5297 = !DILocation(line: 947, column: 30, scope: !5132)
!5298 = !DILocation(line: 947, column: 37, scope: !5132)
!5299 = !DILocation(line: 947, column: 52, scope: !5132)
!5300 = !DILocation(line: 947, column: 9, scope: !5132)
!5301 = !DILocation(line: 948, column: 3, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 947, column: 74)
!5303 = !DILocation(line: 948, column: 10, scope: !5302)
!5304 = !DILocation(line: 948, column: 23, scope: !5302)
!5305 = !DILocation(line: 949, column: 27, scope: !5302)
!5306 = !DILocation(line: 949, column: 34, scope: !5302)
!5307 = !DILocation(line: 949, column: 47, scope: !5302)
!5308 = !DILocation(line: 949, column: 3, scope: !5302)
!5309 = !DILocation(line: 949, column: 10, scope: !5302)
!5310 = !DILocation(line: 949, column: 24, scope: !5302)
!5311 = !DILocation(line: 951, column: 7, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 951, column: 7)
!5313 = !DILocation(line: 951, column: 14, scope: !5312)
!5314 = !DILocation(line: 951, column: 31, scope: !5312)
!5315 = !DILocation(line: 951, column: 28, scope: !5312)
!5316 = !DILocation(line: 951, column: 7, scope: !5302)
!5317 = !DILocation(line: 952, column: 4, scope: !5312)
!5318 = distinct !{!5318, !5295, !5319}
!5319 = !DILocation(line: 953, column: 2, scope: !5132)
!5320 = !DILocation(line: 955, column: 9, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 955, column: 2)
!5322 = !DILocation(line: 955, column: 7, scope: !5321)
!5323 = !DILocation(line: 955, column: 14, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5321, file: !3, line: 955, column: 2)
!5325 = !DILocation(line: 955, column: 18, scope: !5324)
!5326 = !DILocation(line: 955, column: 25, scope: !5324)
!5327 = !DILocation(line: 955, column: 16, scope: !5324)
!5328 = !DILocation(line: 955, column: 2, scope: !5321)
!5329 = !DILocation(line: 956, column: 7, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 956, column: 7)
!5331 = distinct !DILexicalBlock(scope: !5324, file: !3, line: 955, column: 46)
!5332 = !DILocation(line: 956, column: 14, scope: !5330)
!5333 = !DILocation(line: 956, column: 19, scope: !5330)
!5334 = !DILocation(line: 956, column: 7, scope: !5331)
!5335 = !DILocalVariable(name: "element", scope: !5336, file: !3, line: 957, type: !2206)
!5336 = distinct !DILexicalBlock(scope: !5330, file: !3, line: 956, column: 35)
!5337 = !DILocation(line: 957, column: 15, scope: !5336)
!5338 = !DILocation(line: 957, column: 38, scope: !5336)
!5339 = !DILocation(line: 957, column: 45, scope: !5336)
!5340 = !DILocation(line: 957, column: 61, scope: !5336)
!5341 = !DILocation(line: 957, column: 25, scope: !5336)
!5342 = !DILocation(line: 958, column: 8, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 958, column: 8)
!5344 = !DILocation(line: 958, column: 17, scope: !5343)
!5345 = !DILocation(line: 958, column: 22, scope: !5343)
!5346 = !DILocation(line: 958, column: 8, scope: !5336)
!5347 = !DILocation(line: 959, column: 5, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5343, file: !3, line: 958, column: 53)
!5349 = !DILocation(line: 959, column: 14, scope: !5348)
!5350 = !DILocation(line: 959, column: 19, scope: !5348)
!5351 = !DILocation(line: 960, column: 37, scope: !5348)
!5352 = !DILocation(line: 960, column: 46, scope: !5348)
!5353 = !DILocation(line: 960, column: 53, scope: !5348)
!5354 = !DILocation(line: 960, column: 73, scope: !5348)
!5355 = !DILocation(line: 960, column: 5, scope: !5348)
!5356 = !DILocation(line: 961, column: 4, scope: !5348)
!5357 = !DILocation(line: 964, column: 5, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5343, file: !3, line: 962, column: 9)
!5359 = !DILocation(line: 964, column: 14, scope: !5358)
!5360 = !DILocation(line: 964, column: 30, scope: !5358)
!5361 = !DILocation(line: 966, column: 3, scope: !5336)
!5362 = !DILocalVariable(name: "edge", scope: !5363, file: !3, line: 968, type: !2198)
!5363 = distinct !DILexicalBlock(scope: !5330, file: !3, line: 967, column: 8)
!5364 = !DILocation(line: 968, column: 12, scope: !5363)
!5365 = !DILocation(line: 968, column: 29, scope: !5363)
!5366 = !DILocation(line: 968, column: 36, scope: !5363)
!5367 = !DILocation(line: 968, column: 52, scope: !5363)
!5368 = !DILocation(line: 968, column: 19, scope: !5363)
!5369 = !DILocation(line: 969, column: 8, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 969, column: 8)
!5371 = !DILocation(line: 969, column: 14, scope: !5370)
!5372 = !DILocation(line: 969, column: 19, scope: !5370)
!5373 = !DILocation(line: 969, column: 8, scope: !5363)
!5374 = !DILocation(line: 970, column: 5, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5370, file: !3, line: 969, column: 50)
!5376 = !DILocation(line: 970, column: 11, scope: !5375)
!5377 = !DILocation(line: 970, column: 16, scope: !5375)
!5378 = !DILocation(line: 971, column: 39, scope: !5375)
!5379 = !DILocation(line: 971, column: 45, scope: !5375)
!5380 = !DILocation(line: 971, column: 52, scope: !5375)
!5381 = !DILocation(line: 971, column: 72, scope: !5375)
!5382 = !DILocation(line: 971, column: 5, scope: !5375)
!5383 = !DILocation(line: 972, column: 4, scope: !5375)
!5384 = !DILocation(line: 974, column: 5, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5370, file: !3, line: 973, column: 9)
!5386 = !DILocation(line: 974, column: 14, scope: !5385)
!5387 = !DILocation(line: 974, column: 30, scope: !5385)
!5388 = !DILocation(line: 977, column: 2, scope: !5331)
!5389 = !DILocation(line: 955, column: 42, scope: !5324)
!5390 = !DILocation(line: 955, column: 2, scope: !5324)
!5391 = distinct !{!5391, !5328, !5392}
!5392 = !DILocation(line: 977, column: 2, scope: !5321)
!5393 = !DILocation(line: 982, column: 6, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 982, column: 6)
!5395 = !DILocation(line: 982, column: 13, scope: !5394)
!5396 = !DILocation(line: 982, column: 6, scope: !5132)
!5397 = !DILocation(line: 983, column: 10, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5399, file: !3, line: 983, column: 3)
!5399 = distinct !DILexicalBlock(scope: !5394, file: !3, line: 982, column: 27)
!5400 = !DILocation(line: 983, column: 8, scope: !5398)
!5401 = !DILocation(line: 983, column: 15, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5398, file: !3, line: 983, column: 3)
!5403 = !DILocation(line: 983, column: 19, scope: !5402)
!5404 = !DILocation(line: 983, column: 26, scope: !5402)
!5405 = !DILocation(line: 983, column: 39, scope: !5402)
!5406 = !DILocation(line: 983, column: 17, scope: !5402)
!5407 = !DILocation(line: 983, column: 3, scope: !5398)
!5408 = !DILocation(line: 984, column: 8, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 984, column: 8)
!5410 = distinct !DILexicalBlock(scope: !5402, file: !3, line: 983, column: 58)
!5411 = !DILocation(line: 984, column: 27, scope: !5409)
!5412 = !DILocation(line: 984, column: 30, scope: !5409)
!5413 = !DILocation(line: 984, column: 8, scope: !5410)
!5414 = !DILocalVariable(name: "numOfIslandUVs", scope: !5415, file: !3, line: 985, type: !22)
!5415 = distinct !DILexicalBlock(scope: !5409, file: !3, line: 984, column: 47)
!5416 = !DILocation(line: 985, column: 9, scope: !5415)
!5417 = !DILocalVariable(name: "j", scope: !5415, file: !3, line: 985, type: !22)
!5418 = !DILocation(line: 985, column: 29, scope: !5415)
!5419 = !DILocalVariable(name: "element", scope: !5415, file: !3, line: 986, type: !2206)
!5420 = !DILocation(line: 986, column: 16, scope: !5415)
!5421 = !DILocation(line: 987, column: 40, scope: !5415)
!5422 = !DILocation(line: 987, column: 47, scope: !5415)
!5423 = !DILocation(line: 987, column: 60, scope: !5415)
!5424 = !DILocation(line: 987, column: 22, scope: !5415)
!5425 = !DILocation(line: 987, column: 20, scope: !5415)
!5426 = !DILocation(line: 988, column: 16, scope: !5415)
!5427 = !DILocation(line: 988, column: 23, scope: !5415)
!5428 = !DILocation(line: 988, column: 36, scope: !5415)
!5429 = !DILocation(line: 988, column: 40, scope: !5415)
!5430 = !DILocation(line: 988, column: 47, scope: !5415)
!5431 = !DILocation(line: 988, column: 60, scope: !5415)
!5432 = !DILocation(line: 988, column: 74, scope: !5415)
!5433 = !DILocation(line: 988, column: 13, scope: !5415)
!5434 = !DILocation(line: 989, column: 12, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5415, file: !3, line: 989, column: 5)
!5436 = !DILocation(line: 989, column: 10, scope: !5435)
!5437 = !DILocation(line: 989, column: 17, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 989, column: 5)
!5439 = !DILocation(line: 989, column: 21, scope: !5438)
!5440 = !DILocation(line: 989, column: 19, scope: !5438)
!5441 = !DILocation(line: 989, column: 5, scope: !5435)
!5442 = !DILocation(line: 990, column: 46, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5438, file: !3, line: 989, column: 53)
!5444 = !DILocation(line: 990, column: 55, scope: !5443)
!5445 = !DILocation(line: 990, column: 58, scope: !5443)
!5446 = !DILocation(line: 990, column: 61, scope: !5443)
!5447 = !DILocation(line: 990, column: 70, scope: !5443)
!5448 = !DILocation(line: 990, column: 6, scope: !5443)
!5449 = !DILocation(line: 991, column: 5, scope: !5443)
!5450 = !DILocation(line: 989, column: 38, scope: !5438)
!5451 = !DILocation(line: 989, column: 49, scope: !5438)
!5452 = !DILocation(line: 989, column: 5, scope: !5438)
!5453 = distinct !{!5453, !5441, !5454}
!5454 = !DILocation(line: 991, column: 5, scope: !5435)
!5455 = !DILocation(line: 992, column: 4, scope: !5415)
!5456 = !DILocation(line: 993, column: 3, scope: !5410)
!5457 = !DILocation(line: 983, column: 54, scope: !5402)
!5458 = !DILocation(line: 983, column: 3, scope: !5402)
!5459 = distinct !{!5459, !5407, !5460}
!5460 = !DILocation(line: 993, column: 3, scope: !5398)
!5461 = !DILocation(line: 994, column: 2, scope: !5399)
!5462 = !DILocation(line: 999, column: 7, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 999, column: 6)
!5464 = !DILocation(line: 999, column: 6, scope: !5132)
!5465 = !DILocalVariable(name: "liter", scope: !5466, file: !3, line: 1000, type: !2998)
!5466 = distinct !DILexicalBlock(scope: !5463, file: !3, line: 999, column: 14)
!5467 = !DILocation(line: 1000, column: 10, scope: !5466)
!5468 = !DILocalVariable(name: "l", scope: !5466, file: !3, line: 1001, type: !2262)
!5469 = !DILocation(line: 1001, column: 11, scope: !5466)
!5470 = !DILocalVariable(name: "luv", scope: !5466, file: !3, line: 1002, type: !4641)
!5471 = !DILocation(line: 1002, column: 12, scope: !5466)
!5472 = !DILocalVariable(name: "buffer_index", scope: !5466, file: !3, line: 1003, type: !223)
!5473 = !DILocation(line: 1003, column: 16, scope: !5466)
!5474 = !DILocalVariable(name: "stitchBufferIndex", scope: !5466, file: !3, line: 1004, type: !22)
!5475 = !DILocation(line: 1004, column: 7, scope: !5466)
!5476 = !DILocalVariable(name: "unstitchBufferIndex", scope: !5466, file: !3, line: 1004, type: !22)
!5477 = !DILocation(line: 1004, column: 30, scope: !5466)
!5478 = !DILocalVariable(name: "preview_size", scope: !5466, file: !3, line: 1005, type: !22)
!5479 = !DILocation(line: 1005, column: 7, scope: !5466)
!5480 = !DILocation(line: 1005, column: 23, scope: !5466)
!5481 = !DILocation(line: 1005, column: 30, scope: !5466)
!5482 = !DILocation(line: 1005, column: 35, scope: !5466)
!5483 = !DILocation(line: 1005, column: 22, scope: !5466)
!5484 = !DILocation(line: 1007, column: 37, scope: !5466)
!5485 = !DILocation(line: 1007, column: 49, scope: !5466)
!5486 = !DILocation(line: 1007, column: 58, scope: !5466)
!5487 = !DILocation(line: 1007, column: 70, scope: !5466)
!5488 = !DILocation(line: 1007, column: 86, scope: !5466)
!5489 = !DILocation(line: 1007, column: 28, scope: !5466)
!5490 = !DILocation(line: 1007, column: 3, scope: !5466)
!5491 = !DILocation(line: 1007, column: 12, scope: !5466)
!5492 = !DILocation(line: 1007, column: 26, scope: !5466)
!5493 = !DILocation(line: 1008, column: 30, scope: !5466)
!5494 = !DILocation(line: 1008, column: 42, scope: !5466)
!5495 = !DILocation(line: 1008, column: 51, scope: !5466)
!5496 = !DILocation(line: 1008, column: 61, scope: !5466)
!5497 = !DILocation(line: 1008, column: 3, scope: !5466)
!5498 = !DILocation(line: 1008, column: 12, scope: !5466)
!5499 = !DILocation(line: 1008, column: 28, scope: !5466)
!5500 = !DILocation(line: 1009, column: 42, scope: !5466)
!5501 = !DILocation(line: 1009, column: 54, scope: !5466)
!5502 = !DILocation(line: 1009, column: 63, scope: !5466)
!5503 = !DILocation(line: 1009, column: 78, scope: !5466)
!5504 = !DILocation(line: 1009, column: 96, scope: !5466)
!5505 = !DILocation(line: 1009, column: 94, scope: !5466)
!5506 = !DILocation(line: 1009, column: 33, scope: !5466)
!5507 = !DILocation(line: 1009, column: 3, scope: !5466)
!5508 = !DILocation(line: 1009, column: 12, scope: !5466)
!5509 = !DILocation(line: 1009, column: 31, scope: !5466)
!5510 = !DILocation(line: 1010, column: 44, scope: !5466)
!5511 = !DILocation(line: 1010, column: 56, scope: !5466)
!5512 = !DILocation(line: 1010, column: 65, scope: !5466)
!5513 = !DILocation(line: 1010, column: 82, scope: !5466)
!5514 = !DILocation(line: 1010, column: 100, scope: !5466)
!5515 = !DILocation(line: 1010, column: 98, scope: !5466)
!5516 = !DILocation(line: 1010, column: 35, scope: !5466)
!5517 = !DILocation(line: 1010, column: 3, scope: !5466)
!5518 = !DILocation(line: 1010, column: 12, scope: !5466)
!5519 = !DILocation(line: 1010, column: 33, scope: !5466)
!5520 = !DILocation(line: 1012, column: 35, scope: !5466)
!5521 = !DILocation(line: 1012, column: 47, scope: !5466)
!5522 = !DILocation(line: 1012, column: 54, scope: !5466)
!5523 = !DILocation(line: 1012, column: 70, scope: !5466)
!5524 = !DILocation(line: 1012, column: 77, scope: !5466)
!5525 = !DILocation(line: 1012, column: 92, scope: !5466)
!5526 = !DILocation(line: 1012, column: 108, scope: !5466)
!5527 = !DILocation(line: 1012, column: 26, scope: !5466)
!5528 = !DILocation(line: 1012, column: 3, scope: !5466)
!5529 = !DILocation(line: 1012, column: 12, scope: !5466)
!5530 = !DILocation(line: 1012, column: 24, scope: !5466)
!5531 = !DILocation(line: 1014, column: 30, scope: !5466)
!5532 = !DILocation(line: 1014, column: 37, scope: !5466)
!5533 = !DILocation(line: 1014, column: 53, scope: !5466)
!5534 = !DILocation(line: 1014, column: 60, scope: !5466)
!5535 = !DILocation(line: 1014, column: 3, scope: !5466)
!5536 = !DILocation(line: 1014, column: 12, scope: !5466)
!5537 = !DILocation(line: 1014, column: 28, scope: !5466)
!5538 = !DILocation(line: 1016, column: 8, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 1016, column: 7)
!5540 = !DILocation(line: 1016, column: 17, scope: !5539)
!5541 = !DILocation(line: 1016, column: 31, scope: !5539)
!5542 = !DILocation(line: 1016, column: 35, scope: !5539)
!5543 = !DILocation(line: 1016, column: 44, scope: !5539)
!5544 = !DILocation(line: 1016, column: 63, scope: !5539)
!5545 = !DILocation(line: 1016, column: 67, scope: !5539)
!5546 = !DILocation(line: 1016, column: 76, scope: !5539)
!5547 = !DILocation(line: 1016, column: 7, scope: !5466)
!5548 = !DILocation(line: 1017, column: 4, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5539, file: !3, line: 1016, column: 98)
!5550 = !DILocation(line: 1021, column: 3, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 1021, column: 3)
!5552 = !DILocation(line: 1021, column: 3, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5551, file: !3, line: 1021, column: 3)
!5554 = !DILocalVariable(name: "element", scope: !5555, file: !3, line: 1023, type: !2206)
!5555 = distinct !DILexicalBlock(scope: !5553, file: !3, line: 1021, column: 51)
!5556 = !DILocation(line: 1023, column: 15, scope: !5555)
!5557 = !DILocation(line: 1023, column: 43, scope: !5555)
!5558 = !DILocation(line: 1023, column: 50, scope: !5555)
!5559 = !DILocation(line: 1023, column: 63, scope: !5555)
!5560 = !DILocation(line: 1023, column: 68, scope: !5555)
!5561 = !DILocation(line: 1023, column: 25, scope: !5555)
!5562 = !DILocation(line: 1025, column: 8, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5555, file: !3, line: 1025, column: 8)
!5564 = !DILocation(line: 1025, column: 8, scope: !5555)
!5565 = !DILocalVariable(name: "numoftris", scope: !5566, file: !3, line: 1026, type: !22)
!5566 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 1025, column: 17)
!5567 = !DILocation(line: 1026, column: 9, scope: !5566)
!5568 = !DILocation(line: 1026, column: 21, scope: !5566)
!5569 = !DILocation(line: 1026, column: 26, scope: !5566)
!5570 = !DILocation(line: 1026, column: 30, scope: !5566)
!5571 = !DILocalVariable(name: "index", scope: !5566, file: !3, line: 1027, type: !22)
!5572 = !DILocation(line: 1027, column: 9, scope: !5566)
!5573 = !DILocation(line: 1027, column: 17, scope: !5566)
!5574 = !DILocalVariable(name: "face_preview_pos", scope: !5566, file: !3, line: 1028, type: !22)
!5575 = !DILocation(line: 1028, column: 9, scope: !5566)
!5576 = !DILocation(line: 1028, column: 28, scope: !5566)
!5577 = !DILocation(line: 1028, column: 45, scope: !5566)
!5578 = !DILocation(line: 1028, column: 52, scope: !5566)
!5579 = !DILocation(line: 1029, column: 9, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5566, file: !3, line: 1029, column: 9)
!5581 = !DILocation(line: 1029, column: 26, scope: !5580)
!5582 = !DILocation(line: 1029, column: 9, scope: !5566)
!5583 = !DILocation(line: 1030, column: 77, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5580, file: !3, line: 1029, column: 48)
!5585 = !DILocation(line: 1030, column: 82, scope: !5584)
!5586 = !DILocation(line: 1030, column: 6, scope: !5584)
!5587 = !DILocation(line: 1030, column: 15, scope: !5584)
!5588 = !DILocation(line: 1030, column: 31, scope: !5584)
!5589 = !DILocation(line: 1030, column: 48, scope: !5584)
!5590 = !DILocation(line: 1030, column: 55, scope: !5584)
!5591 = !DILocation(line: 1030, column: 75, scope: !5584)
!5592 = !DILocation(line: 1031, column: 6, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5584, file: !3, line: 1031, column: 6)
!5594 = !DILocation(line: 1031, column: 6, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5593, file: !3, line: 1031, column: 6)
!5596 = !DILocation(line: 1032, column: 35, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5595, file: !3, line: 1031, column: 63)
!5598 = !DILocation(line: 1032, column: 39, scope: !5597)
!5599 = !DILocation(line: 1032, column: 46, scope: !5597)
!5600 = !DILocation(line: 1032, column: 49, scope: !5597)
!5601 = !DILocation(line: 1032, column: 54, scope: !5597)
!5602 = !DILocation(line: 1032, column: 13, scope: !5597)
!5603 = !DILocation(line: 1032, column: 11, scope: !5597)
!5604 = !DILocation(line: 1033, column: 18, scope: !5597)
!5605 = !DILocation(line: 1033, column: 27, scope: !5597)
!5606 = !DILocation(line: 1033, column: 43, scope: !5597)
!5607 = !DILocation(line: 1033, column: 41, scope: !5597)
!5608 = !DILocation(line: 1033, column: 62, scope: !5597)
!5609 = !DILocation(line: 1033, column: 64, scope: !5597)
!5610 = !DILocation(line: 1033, column: 60, scope: !5597)
!5611 = !DILocation(line: 1033, column: 69, scope: !5597)
!5612 = !DILocation(line: 1033, column: 74, scope: !5597)
!5613 = !DILocation(line: 1033, column: 7, scope: !5597)
!5614 = !DILocation(line: 1034, column: 6, scope: !5597)
!5615 = distinct !{!5615, !5592, !5616}
!5616 = !DILocation(line: 1034, column: 6, scope: !5593)
!5617 = !DILocation(line: 1035, column: 5, scope: !5584)
!5618 = !DILocation(line: 1037, column: 9, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5566, file: !3, line: 1037, column: 9)
!5620 = !DILocation(line: 1037, column: 18, scope: !5619)
!5621 = !DILocation(line: 1037, column: 28, scope: !5619)
!5622 = !DILocation(line: 1037, column: 35, scope: !5619)
!5623 = !DILocation(line: 1037, column: 25, scope: !5619)
!5624 = !DILocation(line: 1037, column: 9, scope: !5566)
!5625 = !DILocalVariable(name: "fl", scope: !5626, file: !3, line: 1038, type: !2262)
!5626 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 1037, column: 50)
!5627 = !DILocation(line: 1038, column: 14, scope: !5626)
!5628 = !DILocation(line: 1038, column: 19, scope: !5626)
!5629 = !DILocalVariable(name: "fuv", scope: !5626, file: !3, line: 1039, type: !4641)
!5630 = !DILocation(line: 1039, column: 15, scope: !5626)
!5631 = !DILocation(line: 1039, column: 43, scope: !5626)
!5632 = !DILocation(line: 1039, column: 47, scope: !5626)
!5633 = !DILocation(line: 1039, column: 54, scope: !5626)
!5634 = !DILocation(line: 1039, column: 58, scope: !5626)
!5635 = !DILocation(line: 1039, column: 63, scope: !5626)
!5636 = !DILocation(line: 1039, column: 21, scope: !5626)
!5637 = !DILocation(line: 1041, column: 6, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5626, file: !3, line: 1041, column: 6)
!5639 = !DILocation(line: 1041, column: 6, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 1041, column: 6)
!5641 = !DILocation(line: 1042, column: 11, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5643, file: !3, line: 1042, column: 11)
!5643 = distinct !DILexicalBlock(scope: !5640, file: !3, line: 1041, column: 63)
!5644 = !DILocation(line: 1042, column: 15, scope: !5642)
!5645 = !DILocation(line: 1042, column: 13, scope: !5642)
!5646 = !DILocation(line: 1042, column: 11, scope: !5643)
!5647 = !DILocalVariable(name: "lnext", scope: !5648, file: !3, line: 1044, type: !2262)
!5648 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 1042, column: 26)
!5649 = !DILocation(line: 1044, column: 16, scope: !5648)
!5650 = !DILocation(line: 1044, column: 24, scope: !5648)
!5651 = !DILocation(line: 1044, column: 27, scope: !5648)
!5652 = !DILocalVariable(name: "luvnext", scope: !5648, file: !3, line: 1045, type: !4641)
!5653 = !DILocation(line: 1045, column: 17, scope: !5648)
!5654 = !DILocation(line: 1045, column: 49, scope: !5648)
!5655 = !DILocation(line: 1045, column: 53, scope: !5648)
!5656 = !DILocation(line: 1045, column: 60, scope: !5648)
!5657 = !DILocation(line: 1045, column: 67, scope: !5648)
!5658 = !DILocation(line: 1045, column: 73, scope: !5648)
!5659 = !DILocation(line: 1045, column: 78, scope: !5648)
!5660 = !DILocation(line: 1045, column: 27, scope: !5648)
!5661 = !DILocation(line: 1046, column: 36, scope: !5648)
!5662 = !DILocation(line: 1046, column: 40, scope: !5648)
!5663 = !DILocation(line: 1046, column: 47, scope: !5648)
!5664 = !DILocation(line: 1046, column: 54, scope: !5648)
!5665 = !DILocation(line: 1046, column: 59, scope: !5648)
!5666 = !DILocation(line: 1046, column: 14, scope: !5648)
!5667 = !DILocation(line: 1046, column: 12, scope: !5648)
!5668 = !DILocation(line: 1048, column: 15, scope: !5648)
!5669 = !DILocation(line: 1048, column: 24, scope: !5648)
!5670 = !DILocation(line: 1048, column: 38, scope: !5648)
!5671 = !DILocation(line: 1048, column: 36, scope: !5648)
!5672 = !DILocation(line: 1048, column: 8, scope: !5648)
!5673 = !DILocation(line: 1048, column: 52, scope: !5648)
!5674 = !DILocation(line: 1048, column: 57, scope: !5648)
!5675 = !DILocation(line: 1049, column: 15, scope: !5648)
!5676 = !DILocation(line: 1049, column: 24, scope: !5648)
!5677 = !DILocation(line: 1049, column: 38, scope: !5648)
!5678 = !DILocation(line: 1049, column: 36, scope: !5648)
!5679 = !DILocation(line: 1049, column: 51, scope: !5648)
!5680 = !DILocation(line: 1049, column: 8, scope: !5648)
!5681 = !DILocation(line: 1049, column: 56, scope: !5648)
!5682 = !DILocation(line: 1049, column: 61, scope: !5648)
!5683 = !DILocation(line: 1050, column: 15, scope: !5648)
!5684 = !DILocation(line: 1050, column: 24, scope: !5648)
!5685 = !DILocation(line: 1050, column: 38, scope: !5648)
!5686 = !DILocation(line: 1050, column: 36, scope: !5648)
!5687 = !DILocation(line: 1050, column: 51, scope: !5648)
!5688 = !DILocation(line: 1050, column: 8, scope: !5648)
!5689 = !DILocation(line: 1050, column: 56, scope: !5648)
!5690 = !DILocation(line: 1050, column: 65, scope: !5648)
!5691 = !DILocation(line: 1051, column: 21, scope: !5648)
!5692 = !DILocation(line: 1052, column: 7, scope: !5648)
!5693 = !DILocation(line: 1054, column: 8, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 1053, column: 12)
!5695 = !DILocation(line: 1056, column: 6, scope: !5643)
!5696 = distinct !{!5696, !5637, !5697}
!5697 = !DILocation(line: 1056, column: 6, scope: !5638)
!5698 = !DILocation(line: 1057, column: 5, scope: !5626)
!5699 = !DILocation(line: 1058, column: 4, scope: !5566)
!5700 = !DILocation(line: 1059, column: 3, scope: !5555)
!5701 = distinct !{!5701, !5550, !5702}
!5702 = !DILocation(line: 1059, column: 3, scope: !5551)
!5703 = !DILocation(line: 1062, column: 7, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 1062, column: 7)
!5705 = !DILocation(line: 1062, column: 14, scope: !5704)
!5706 = !DILocation(line: 1062, column: 19, scope: !5704)
!5707 = !DILocation(line: 1062, column: 7, scope: !5466)
!5708 = !DILocation(line: 1063, column: 11, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5710, file: !3, line: 1063, column: 4)
!5710 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 1062, column: 35)
!5711 = !DILocation(line: 1063, column: 9, scope: !5709)
!5712 = !DILocation(line: 1063, column: 16, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 1063, column: 4)
!5714 = !DILocation(line: 1063, column: 20, scope: !5713)
!5715 = !DILocation(line: 1063, column: 27, scope: !5713)
!5716 = !DILocation(line: 1063, column: 18, scope: !5713)
!5717 = !DILocation(line: 1063, column: 4, scope: !5709)
!5718 = !DILocalVariable(name: "element", scope: !5719, file: !3, line: 1064, type: !2206)
!5719 = distinct !DILexicalBlock(scope: !5713, file: !3, line: 1063, column: 52)
!5720 = !DILocation(line: 1064, column: 16, scope: !5719)
!5721 = !DILocation(line: 1064, column: 39, scope: !5719)
!5722 = !DILocation(line: 1064, column: 46, scope: !5719)
!5723 = !DILocation(line: 1064, column: 50, scope: !5719)
!5724 = !DILocation(line: 1065, column: 9, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5719, file: !3, line: 1065, column: 9)
!5726 = !DILocation(line: 1065, column: 18, scope: !5725)
!5727 = !DILocation(line: 1065, column: 23, scope: !5725)
!5728 = !DILocation(line: 1065, column: 9, scope: !5719)
!5729 = !DILocation(line: 1066, column: 10, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5725, file: !3, line: 1065, column: 44)
!5731 = !DILocation(line: 1066, column: 19, scope: !5730)
!5732 = !DILocation(line: 1066, column: 8, scope: !5730)
!5733 = !DILocation(line: 1067, column: 34, scope: !5730)
!5734 = !DILocation(line: 1067, column: 38, scope: !5730)
!5735 = !DILocation(line: 1067, column: 45, scope: !5730)
!5736 = !DILocation(line: 1067, column: 48, scope: !5730)
!5737 = !DILocation(line: 1067, column: 53, scope: !5730)
!5738 = !DILocation(line: 1067, column: 12, scope: !5730)
!5739 = !DILocation(line: 1067, column: 10, scope: !5730)
!5740 = !DILocation(line: 1069, column: 18, scope: !5730)
!5741 = !DILocation(line: 1069, column: 27, scope: !5730)
!5742 = !DILocation(line: 1069, column: 46, scope: !5730)
!5743 = !DILocation(line: 1069, column: 64, scope: !5730)
!5744 = !DILocation(line: 1069, column: 70, scope: !5730)
!5745 = !DILocation(line: 1069, column: 75, scope: !5730)
!5746 = !DILocation(line: 1069, column: 6, scope: !5730)
!5747 = !DILocation(line: 1071, column: 23, scope: !5730)
!5748 = !DILocation(line: 1072, column: 5, scope: !5730)
!5749 = !DILocation(line: 1073, column: 14, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5725, file: !3, line: 1073, column: 14)
!5751 = !DILocation(line: 1073, column: 23, scope: !5750)
!5752 = !DILocation(line: 1073, column: 28, scope: !5750)
!5753 = !DILocation(line: 1073, column: 14, scope: !5725)
!5754 = !DILocation(line: 1074, column: 10, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5750, file: !3, line: 1073, column: 47)
!5756 = !DILocation(line: 1074, column: 19, scope: !5755)
!5757 = !DILocation(line: 1074, column: 8, scope: !5755)
!5758 = !DILocation(line: 1075, column: 34, scope: !5755)
!5759 = !DILocation(line: 1075, column: 38, scope: !5755)
!5760 = !DILocation(line: 1075, column: 45, scope: !5755)
!5761 = !DILocation(line: 1075, column: 48, scope: !5755)
!5762 = !DILocation(line: 1075, column: 53, scope: !5755)
!5763 = !DILocation(line: 1075, column: 12, scope: !5755)
!5764 = !DILocation(line: 1075, column: 10, scope: !5755)
!5765 = !DILocation(line: 1077, column: 18, scope: !5755)
!5766 = !DILocation(line: 1077, column: 27, scope: !5755)
!5767 = !DILocation(line: 1077, column: 48, scope: !5755)
!5768 = !DILocation(line: 1077, column: 68, scope: !5755)
!5769 = !DILocation(line: 1077, column: 74, scope: !5755)
!5770 = !DILocation(line: 1077, column: 79, scope: !5755)
!5771 = !DILocation(line: 1077, column: 6, scope: !5755)
!5772 = !DILocation(line: 1078, column: 25, scope: !5755)
!5773 = !DILocation(line: 1079, column: 5, scope: !5755)
!5774 = !DILocation(line: 1080, column: 4, scope: !5719)
!5775 = !DILocation(line: 1063, column: 48, scope: !5713)
!5776 = !DILocation(line: 1063, column: 4, scope: !5713)
!5777 = distinct !{!5777, !5717, !5778}
!5778 = !DILocation(line: 1080, column: 4, scope: !5709)
!5779 = !DILocation(line: 1081, column: 3, scope: !5710)
!5780 = !DILocation(line: 1083, column: 11, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5782, file: !3, line: 1083, column: 4)
!5782 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 1082, column: 8)
!5783 = !DILocation(line: 1083, column: 9, scope: !5781)
!5784 = !DILocation(line: 1083, column: 16, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5781, file: !3, line: 1083, column: 4)
!5786 = !DILocation(line: 1083, column: 20, scope: !5785)
!5787 = !DILocation(line: 1083, column: 27, scope: !5785)
!5788 = !DILocation(line: 1083, column: 18, scope: !5785)
!5789 = !DILocation(line: 1083, column: 4, scope: !5781)
!5790 = !DILocalVariable(name: "edge", scope: !5791, file: !3, line: 1084, type: !2198)
!5791 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 1083, column: 54)
!5792 = !DILocation(line: 1084, column: 13, scope: !5791)
!5793 = !DILocation(line: 1084, column: 20, scope: !5791)
!5794 = !DILocation(line: 1084, column: 27, scope: !5791)
!5795 = !DILocation(line: 1084, column: 35, scope: !5791)
!5796 = !DILocation(line: 1084, column: 33, scope: !5791)
!5797 = !DILocalVariable(name: "element1", scope: !5791, file: !3, line: 1085, type: !2206)
!5798 = !DILocation(line: 1085, column: 16, scope: !5791)
!5799 = !DILocation(line: 1085, column: 27, scope: !5791)
!5800 = !DILocation(line: 1085, column: 34, scope: !5791)
!5801 = !DILocation(line: 1085, column: 38, scope: !5791)
!5802 = !DILocation(line: 1085, column: 44, scope: !5791)
!5803 = !DILocalVariable(name: "element2", scope: !5791, file: !3, line: 1086, type: !2206)
!5804 = !DILocation(line: 1086, column: 16, scope: !5791)
!5805 = !DILocation(line: 1086, column: 27, scope: !5791)
!5806 = !DILocation(line: 1086, column: 34, scope: !5791)
!5807 = !DILocation(line: 1086, column: 38, scope: !5791)
!5808 = !DILocation(line: 1086, column: 44, scope: !5791)
!5809 = !DILocation(line: 1088, column: 9, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5791, file: !3, line: 1088, column: 9)
!5811 = !DILocation(line: 1088, column: 15, scope: !5810)
!5812 = !DILocation(line: 1088, column: 20, scope: !5810)
!5813 = !DILocation(line: 1088, column: 9, scope: !5791)
!5814 = !DILocation(line: 1089, column: 10, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 1088, column: 41)
!5816 = !DILocation(line: 1089, column: 20, scope: !5815)
!5817 = !DILocation(line: 1089, column: 8, scope: !5815)
!5818 = !DILocation(line: 1090, column: 34, scope: !5815)
!5819 = !DILocation(line: 1090, column: 38, scope: !5815)
!5820 = !DILocation(line: 1090, column: 45, scope: !5815)
!5821 = !DILocation(line: 1090, column: 48, scope: !5815)
!5822 = !DILocation(line: 1090, column: 53, scope: !5815)
!5823 = !DILocation(line: 1090, column: 12, scope: !5815)
!5824 = !DILocation(line: 1090, column: 10, scope: !5815)
!5825 = !DILocation(line: 1091, column: 18, scope: !5815)
!5826 = !DILocation(line: 1091, column: 27, scope: !5815)
!5827 = !DILocation(line: 1091, column: 46, scope: !5815)
!5828 = !DILocation(line: 1091, column: 64, scope: !5815)
!5829 = !DILocation(line: 1091, column: 70, scope: !5815)
!5830 = !DILocation(line: 1091, column: 75, scope: !5815)
!5831 = !DILocation(line: 1091, column: 6, scope: !5815)
!5832 = !DILocation(line: 1093, column: 10, scope: !5815)
!5833 = !DILocation(line: 1093, column: 20, scope: !5815)
!5834 = !DILocation(line: 1093, column: 8, scope: !5815)
!5835 = !DILocation(line: 1094, column: 34, scope: !5815)
!5836 = !DILocation(line: 1094, column: 38, scope: !5815)
!5837 = !DILocation(line: 1094, column: 45, scope: !5815)
!5838 = !DILocation(line: 1094, column: 48, scope: !5815)
!5839 = !DILocation(line: 1094, column: 53, scope: !5815)
!5840 = !DILocation(line: 1094, column: 12, scope: !5815)
!5841 = !DILocation(line: 1094, column: 10, scope: !5815)
!5842 = !DILocation(line: 1095, column: 18, scope: !5815)
!5843 = !DILocation(line: 1095, column: 27, scope: !5815)
!5844 = !DILocation(line: 1095, column: 46, scope: !5815)
!5845 = !DILocation(line: 1095, column: 64, scope: !5815)
!5846 = !DILocation(line: 1095, column: 68, scope: !5815)
!5847 = !DILocation(line: 1095, column: 74, scope: !5815)
!5848 = !DILocation(line: 1095, column: 79, scope: !5815)
!5849 = !DILocation(line: 1095, column: 6, scope: !5815)
!5850 = !DILocation(line: 1097, column: 23, scope: !5815)
!5851 = !DILocation(line: 1099, column: 5, scope: !5815)
!5852 = !DILocation(line: 1100, column: 14, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 1100, column: 14)
!5854 = !DILocation(line: 1100, column: 20, scope: !5853)
!5855 = !DILocation(line: 1100, column: 25, scope: !5853)
!5856 = !DILocation(line: 1100, column: 14, scope: !5810)
!5857 = !DILocation(line: 1101, column: 10, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5853, file: !3, line: 1100, column: 44)
!5859 = !DILocation(line: 1101, column: 20, scope: !5858)
!5860 = !DILocation(line: 1101, column: 8, scope: !5858)
!5861 = !DILocation(line: 1102, column: 34, scope: !5858)
!5862 = !DILocation(line: 1102, column: 38, scope: !5858)
!5863 = !DILocation(line: 1102, column: 45, scope: !5858)
!5864 = !DILocation(line: 1102, column: 48, scope: !5858)
!5865 = !DILocation(line: 1102, column: 53, scope: !5858)
!5866 = !DILocation(line: 1102, column: 12, scope: !5858)
!5867 = !DILocation(line: 1102, column: 10, scope: !5858)
!5868 = !DILocation(line: 1103, column: 18, scope: !5858)
!5869 = !DILocation(line: 1103, column: 27, scope: !5858)
!5870 = !DILocation(line: 1103, column: 48, scope: !5858)
!5871 = !DILocation(line: 1103, column: 68, scope: !5858)
!5872 = !DILocation(line: 1103, column: 74, scope: !5858)
!5873 = !DILocation(line: 1103, column: 79, scope: !5858)
!5874 = !DILocation(line: 1103, column: 6, scope: !5858)
!5875 = !DILocation(line: 1105, column: 10, scope: !5858)
!5876 = !DILocation(line: 1105, column: 20, scope: !5858)
!5877 = !DILocation(line: 1105, column: 8, scope: !5858)
!5878 = !DILocation(line: 1106, column: 34, scope: !5858)
!5879 = !DILocation(line: 1106, column: 38, scope: !5858)
!5880 = !DILocation(line: 1106, column: 45, scope: !5858)
!5881 = !DILocation(line: 1106, column: 48, scope: !5858)
!5882 = !DILocation(line: 1106, column: 53, scope: !5858)
!5883 = !DILocation(line: 1106, column: 12, scope: !5858)
!5884 = !DILocation(line: 1106, column: 10, scope: !5858)
!5885 = !DILocation(line: 1107, column: 18, scope: !5858)
!5886 = !DILocation(line: 1107, column: 27, scope: !5858)
!5887 = !DILocation(line: 1107, column: 48, scope: !5858)
!5888 = !DILocation(line: 1107, column: 68, scope: !5858)
!5889 = !DILocation(line: 1107, column: 72, scope: !5858)
!5890 = !DILocation(line: 1107, column: 78, scope: !5858)
!5891 = !DILocation(line: 1107, column: 83, scope: !5858)
!5892 = !DILocation(line: 1107, column: 6, scope: !5858)
!5893 = !DILocation(line: 1109, column: 25, scope: !5858)
!5894 = !DILocation(line: 1111, column: 5, scope: !5858)
!5895 = !DILocation(line: 1112, column: 4, scope: !5791)
!5896 = !DILocation(line: 1083, column: 50, scope: !5785)
!5897 = !DILocation(line: 1083, column: 4, scope: !5785)
!5898 = distinct !{!5898, !5789, !5899}
!5899 = !DILocation(line: 1112, column: 4, scope: !5781)
!5900 = !DILocation(line: 1114, column: 2, scope: !5466)
!5901 = !DILocation(line: 1120, column: 6, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 1120, column: 6)
!5903 = !DILocation(line: 1120, column: 13, scope: !5902)
!5904 = !DILocation(line: 1120, column: 18, scope: !5902)
!5905 = !DILocation(line: 1120, column: 6, scope: !5132)
!5906 = !DILocation(line: 1121, column: 20, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 1120, column: 34)
!5908 = !DILocation(line: 1121, column: 32, scope: !5907)
!5909 = !DILocation(line: 1121, column: 39, scope: !5907)
!5910 = !DILocation(line: 1121, column: 54, scope: !5907)
!5911 = !DILocation(line: 1121, column: 18, scope: !5907)
!5912 = !DILocation(line: 1122, column: 17, scope: !5907)
!5913 = !DILocation(line: 1122, column: 29, scope: !5907)
!5914 = !DILocation(line: 1122, column: 36, scope: !5907)
!5915 = !DILocation(line: 1122, column: 49, scope: !5907)
!5916 = !DILocation(line: 1122, column: 58, scope: !5907)
!5917 = !DILocation(line: 1122, column: 15, scope: !5907)
!5918 = !DILocation(line: 1123, column: 2, scope: !5907)
!5919 = !DILocation(line: 1125, column: 20, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 1124, column: 7)
!5921 = !DILocation(line: 1125, column: 32, scope: !5920)
!5922 = !DILocation(line: 1125, column: 39, scope: !5920)
!5923 = !DILocation(line: 1125, column: 58, scope: !5920)
!5924 = !DILocation(line: 1125, column: 18, scope: !5920)
!5925 = !DILocation(line: 1129, column: 9, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 1129, column: 2)
!5927 = !DILocation(line: 1129, column: 7, scope: !5926)
!5928 = !DILocation(line: 1129, column: 14, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5926, file: !3, line: 1129, column: 2)
!5930 = !DILocation(line: 1129, column: 18, scope: !5929)
!5931 = !DILocation(line: 1129, column: 25, scope: !5929)
!5932 = !DILocation(line: 1129, column: 16, scope: !5929)
!5933 = !DILocation(line: 1129, column: 2, scope: !5926)
!5934 = !DILocation(line: 1130, column: 7, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5936, file: !3, line: 1130, column: 7)
!5936 = distinct !DILexicalBlock(scope: !5929, file: !3, line: 1129, column: 46)
!5937 = !DILocation(line: 1130, column: 14, scope: !5935)
!5938 = !DILocation(line: 1130, column: 19, scope: !5935)
!5939 = !DILocation(line: 1130, column: 7, scope: !5936)
!5940 = !DILocalVariable(name: "element", scope: !5941, file: !3, line: 1131, type: !2206)
!5941 = distinct !DILexicalBlock(scope: !5935, file: !3, line: 1130, column: 35)
!5942 = !DILocation(line: 1131, column: 15, scope: !5941)
!5943 = !DILocation(line: 1131, column: 25, scope: !5941)
!5944 = !DILocation(line: 1131, column: 32, scope: !5941)
!5945 = !DILocation(line: 1131, column: 48, scope: !5941)
!5946 = !DILocation(line: 1133, column: 8, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 1133, column: 8)
!5948 = !DILocation(line: 1133, column: 17, scope: !5947)
!5949 = !DILocation(line: 1133, column: 22, scope: !5947)
!5950 = !DILocation(line: 1133, column: 8, scope: !5941)
!5951 = !DILocalVariable(name: "l", scope: !5952, file: !3, line: 1134, type: !2262)
!5952 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 1133, column: 43)
!5953 = !DILocation(line: 1134, column: 13, scope: !5952)
!5954 = !DILocalVariable(name: "luv", scope: !5952, file: !3, line: 1135, type: !4641)
!5955 = !DILocation(line: 1135, column: 14, scope: !5952)
!5956 = !DILocalVariable(name: "element_iter", scope: !5952, file: !3, line: 1136, type: !2206)
!5957 = !DILocation(line: 1136, column: 16, scope: !5952)
!5958 = !DILocation(line: 1138, column: 9, scope: !5952)
!5959 = !DILocation(line: 1138, column: 18, scope: !5952)
!5960 = !DILocation(line: 1138, column: 7, scope: !5952)
!5961 = !DILocation(line: 1139, column: 33, scope: !5952)
!5962 = !DILocation(line: 1139, column: 37, scope: !5952)
!5963 = !DILocation(line: 1139, column: 44, scope: !5952)
!5964 = !DILocation(line: 1139, column: 47, scope: !5952)
!5965 = !DILocation(line: 1139, column: 52, scope: !5952)
!5966 = !DILocation(line: 1139, column: 11, scope: !5952)
!5967 = !DILocation(line: 1139, column: 9, scope: !5952)
!5968 = !DILocation(line: 1141, column: 54, scope: !5952)
!5969 = !DILocation(line: 1141, column: 5, scope: !5952)
!5970 = !DILocation(line: 1141, column: 17, scope: !5952)
!5971 = !DILocation(line: 1141, column: 27, scope: !5952)
!5972 = !DILocation(line: 1141, column: 34, scope: !5952)
!5973 = !DILocation(line: 1141, column: 47, scope: !5952)
!5974 = !DILocation(line: 1141, column: 25, scope: !5952)
!5975 = !DILocation(line: 1141, column: 52, scope: !5952)
!5976 = !DILocation(line: 1143, column: 16, scope: !5952)
!5977 = !DILocation(line: 1143, column: 31, scope: !5952)
!5978 = !DILocation(line: 1143, column: 34, scope: !5952)
!5979 = !DILocation(line: 1143, column: 38, scope: !5952)
!5980 = !DILocation(line: 1143, column: 43, scope: !5952)
!5981 = !DILocation(line: 1143, column: 5, scope: !5952)
!5982 = !DILocation(line: 1144, column: 5, scope: !5952)
!5983 = !DILocation(line: 1144, column: 20, scope: !5952)
!5984 = !DILocation(line: 1144, column: 23, scope: !5952)
!5985 = !DILocation(line: 1144, column: 29, scope: !5952)
!5986 = !DILocation(line: 1146, column: 9, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5952, file: !3, line: 1146, column: 9)
!5988 = !DILocation(line: 1146, column: 16, scope: !5987)
!5989 = !DILocation(line: 1146, column: 29, scope: !5987)
!5990 = !DILocation(line: 1146, column: 32, scope: !5987)
!5991 = !DILocation(line: 1146, column: 41, scope: !5987)
!5992 = !DILocation(line: 1146, column: 51, scope: !5987)
!5993 = !DILocation(line: 1146, column: 58, scope: !5987)
!5994 = !DILocation(line: 1146, column: 48, scope: !5987)
!5995 = !DILocation(line: 1146, column: 72, scope: !5987)
!5996 = !DILocation(line: 1146, column: 76, scope: !5987)
!5997 = !DILocation(line: 1146, column: 9, scope: !5952)
!5998 = !DILocation(line: 1147, column: 6, scope: !5987)
!5999 = !DILocation(line: 1149, column: 20, scope: !5952)
!6000 = !DILocation(line: 1149, column: 27, scope: !5952)
!6001 = !DILocation(line: 1149, column: 40, scope: !5952)
!6002 = !DILocation(line: 1149, column: 45, scope: !5952)
!6003 = !DILocation(line: 1149, column: 18, scope: !5952)
!6004 = !DILocation(line: 1151, column: 5, scope: !5952)
!6005 = !DILocation(line: 1151, column: 13, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 1151, column: 5)
!6007 = distinct !DILexicalBlock(scope: !5952, file: !3, line: 1151, column: 5)
!6008 = !DILocation(line: 1151, column: 5, scope: !6007)
!6009 = !DILocation(line: 1152, column: 10, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6011, file: !3, line: 1152, column: 10)
!6011 = distinct !DILexicalBlock(scope: !6006, file: !3, line: 1151, column: 62)
!6012 = !DILocation(line: 1152, column: 24, scope: !6010)
!6013 = !DILocation(line: 1152, column: 10, scope: !6011)
!6014 = !DILocation(line: 1153, column: 45, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6016, file: !3, line: 1153, column: 11)
!6016 = distinct !DILexicalBlock(scope: !6010, file: !3, line: 1152, column: 34)
!6017 = !DILocation(line: 1153, column: 54, scope: !6015)
!6018 = !DILocation(line: 1153, column: 68, scope: !6015)
!6019 = !DILocation(line: 1153, column: 11, scope: !6015)
!6020 = !DILocation(line: 1153, column: 11, scope: !6016)
!6021 = !DILocation(line: 1154, column: 12, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !6015, file: !3, line: 1153, column: 76)
!6023 = !DILocation(line: 1154, column: 26, scope: !6022)
!6024 = !DILocation(line: 1154, column: 10, scope: !6022)
!6025 = !DILocation(line: 1155, column: 36, scope: !6022)
!6026 = !DILocation(line: 1155, column: 40, scope: !6022)
!6027 = !DILocation(line: 1155, column: 47, scope: !6022)
!6028 = !DILocation(line: 1155, column: 50, scope: !6022)
!6029 = !DILocation(line: 1155, column: 55, scope: !6022)
!6030 = !DILocation(line: 1155, column: 14, scope: !6022)
!6031 = !DILocation(line: 1155, column: 12, scope: !6022)
!6032 = !DILocation(line: 1156, column: 12, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6022, file: !3, line: 1156, column: 12)
!6034 = !DILocation(line: 1156, column: 12, scope: !6022)
!6035 = !DILocation(line: 1157, column: 19, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6033, file: !3, line: 1156, column: 30)
!6037 = !DILocation(line: 1157, column: 34, scope: !6036)
!6038 = !DILocation(line: 1157, column: 37, scope: !6036)
!6039 = !DILocation(line: 1157, column: 41, scope: !6036)
!6040 = !DILocation(line: 1157, column: 46, scope: !6036)
!6041 = !DILocation(line: 1157, column: 9, scope: !6036)
!6042 = !DILocation(line: 1158, column: 9, scope: !6036)
!6043 = !DILocation(line: 1158, column: 24, scope: !6036)
!6044 = !DILocation(line: 1158, column: 27, scope: !6036)
!6045 = !DILocation(line: 1158, column: 32, scope: !6036)
!6046 = !DILocation(line: 1159, column: 8, scope: !6036)
!6047 = !DILocation(line: 1160, column: 17, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6033, file: !3, line: 1160, column: 17)
!6049 = !DILocation(line: 1160, column: 31, scope: !6048)
!6050 = !DILocation(line: 1160, column: 41, scope: !6048)
!6051 = !DILocation(line: 1160, column: 48, scope: !6048)
!6052 = !DILocation(line: 1160, column: 38, scope: !6048)
!6053 = !DILocation(line: 1160, column: 17, scope: !6033)
!6054 = !DILocation(line: 1164, column: 20, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 1160, column: 63)
!6056 = !DILocation(line: 1164, column: 35, scope: !6055)
!6057 = !DILocation(line: 1164, column: 38, scope: !6055)
!6058 = !DILocation(line: 1164, column: 42, scope: !6055)
!6059 = !DILocation(line: 1164, column: 47, scope: !6055)
!6060 = !DILocation(line: 1164, column: 9, scope: !6055)
!6061 = !DILocation(line: 1165, column: 8, scope: !6055)
!6062 = !DILocation(line: 1166, column: 7, scope: !6022)
!6063 = !DILocation(line: 1167, column: 6, scope: !6016)
!6064 = !DILocation(line: 1168, column: 5, scope: !6011)
!6065 = !DILocation(line: 1151, column: 42, scope: !6006)
!6066 = !DILocation(line: 1151, column: 56, scope: !6006)
!6067 = !DILocation(line: 1151, column: 40, scope: !6006)
!6068 = !DILocation(line: 1151, column: 5, scope: !6006)
!6069 = distinct !{!6069, !6008, !6070}
!6070 = !DILocation(line: 1168, column: 5, scope: !6007)
!6071 = !DILocation(line: 1169, column: 4, scope: !5952)
!6072 = !DILocation(line: 1170, column: 8, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 1170, column: 8)
!6074 = !DILocation(line: 1170, column: 8, scope: !5941)
!6075 = !DILocation(line: 1171, column: 32, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 1170, column: 26)
!6077 = !DILocation(line: 1171, column: 47, scope: !6076)
!6078 = !DILocation(line: 1171, column: 50, scope: !6076)
!6079 = !DILocation(line: 1171, column: 5, scope: !6076)
!6080 = !DILocation(line: 1171, column: 20, scope: !6076)
!6081 = !DILocation(line: 1171, column: 23, scope: !6076)
!6082 = !DILocation(line: 1171, column: 29, scope: !6076)
!6083 = !DILocation(line: 1172, column: 32, scope: !6076)
!6084 = !DILocation(line: 1172, column: 47, scope: !6076)
!6085 = !DILocation(line: 1172, column: 50, scope: !6076)
!6086 = !DILocation(line: 1172, column: 5, scope: !6076)
!6087 = !DILocation(line: 1172, column: 20, scope: !6076)
!6088 = !DILocation(line: 1172, column: 23, scope: !6076)
!6089 = !DILocation(line: 1172, column: 29, scope: !6076)
!6090 = !DILocation(line: 1173, column: 4, scope: !6076)
!6091 = !DILocation(line: 1174, column: 3, scope: !5941)
!6092 = !DILocalVariable(name: "edge", scope: !6093, file: !3, line: 1176, type: !2198)
!6093 = distinct !DILexicalBlock(scope: !5935, file: !3, line: 1175, column: 8)
!6094 = !DILocation(line: 1176, column: 12, scope: !6093)
!6095 = !DILocation(line: 1176, column: 19, scope: !6093)
!6096 = !DILocation(line: 1176, column: 26, scope: !6093)
!6097 = !DILocation(line: 1176, column: 42, scope: !6093)
!6098 = !DILocation(line: 1178, column: 8, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6093, file: !3, line: 1178, column: 8)
!6100 = !DILocation(line: 1178, column: 14, scope: !6099)
!6101 = !DILocation(line: 1178, column: 19, scope: !6099)
!6102 = !DILocation(line: 1178, column: 8, scope: !6093)
!6103 = !DILocalVariable(name: "luv2", scope: !6104, file: !3, line: 1179, type: !4641)
!6104 = distinct !DILexicalBlock(scope: !6099, file: !3, line: 1178, column: 40)
!6105 = !DILocation(line: 1179, column: 14, scope: !6104)
!6106 = !DILocalVariable(name: "luv1", scope: !6104, file: !3, line: 1179, type: !4641)
!6107 = !DILocation(line: 1179, column: 21, scope: !6104)
!6108 = !DILocalVariable(name: "l", scope: !6104, file: !3, line: 1180, type: !2262)
!6109 = !DILocation(line: 1180, column: 13, scope: !6104)
!6110 = !DILocalVariable(name: "edge_iter", scope: !6104, file: !3, line: 1181, type: !2198)
!6111 = !DILocation(line: 1181, column: 13, scope: !6104)
!6112 = !DILocation(line: 1183, column: 9, scope: !6104)
!6113 = !DILocation(line: 1183, column: 16, scope: !6104)
!6114 = !DILocation(line: 1183, column: 20, scope: !6104)
!6115 = !DILocation(line: 1183, column: 26, scope: !6104)
!6116 = !DILocation(line: 1183, column: 32, scope: !6104)
!6117 = !DILocation(line: 1183, column: 7, scope: !6104)
!6118 = !DILocation(line: 1184, column: 34, scope: !6104)
!6119 = !DILocation(line: 1184, column: 38, scope: !6104)
!6120 = !DILocation(line: 1184, column: 45, scope: !6104)
!6121 = !DILocation(line: 1184, column: 48, scope: !6104)
!6122 = !DILocation(line: 1184, column: 53, scope: !6104)
!6123 = !DILocation(line: 1184, column: 12, scope: !6104)
!6124 = !DILocation(line: 1184, column: 10, scope: !6104)
!6125 = !DILocation(line: 1185, column: 9, scope: !6104)
!6126 = !DILocation(line: 1185, column: 16, scope: !6104)
!6127 = !DILocation(line: 1185, column: 20, scope: !6104)
!6128 = !DILocation(line: 1185, column: 26, scope: !6104)
!6129 = !DILocation(line: 1185, column: 32, scope: !6104)
!6130 = !DILocation(line: 1185, column: 7, scope: !6104)
!6131 = !DILocation(line: 1186, column: 34, scope: !6104)
!6132 = !DILocation(line: 1186, column: 38, scope: !6104)
!6133 = !DILocation(line: 1186, column: 45, scope: !6104)
!6134 = !DILocation(line: 1186, column: 48, scope: !6104)
!6135 = !DILocation(line: 1186, column: 53, scope: !6104)
!6136 = !DILocation(line: 1186, column: 12, scope: !6104)
!6137 = !DILocation(line: 1186, column: 10, scope: !6104)
!6138 = !DILocation(line: 1188, column: 16, scope: !6104)
!6139 = !DILocation(line: 1188, column: 31, scope: !6104)
!6140 = !DILocation(line: 1188, column: 37, scope: !6104)
!6141 = !DILocation(line: 1188, column: 42, scope: !6104)
!6142 = !DILocation(line: 1188, column: 46, scope: !6104)
!6143 = !DILocation(line: 1188, column: 52, scope: !6104)
!6144 = !DILocation(line: 1188, column: 5, scope: !6104)
!6145 = !DILocation(line: 1189, column: 16, scope: !6104)
!6146 = !DILocation(line: 1189, column: 31, scope: !6104)
!6147 = !DILocation(line: 1189, column: 37, scope: !6104)
!6148 = !DILocation(line: 1189, column: 42, scope: !6104)
!6149 = !DILocation(line: 1189, column: 46, scope: !6104)
!6150 = !DILocation(line: 1189, column: 52, scope: !6104)
!6151 = !DILocation(line: 1189, column: 5, scope: !6104)
!6152 = !DILocation(line: 1190, column: 5, scope: !6104)
!6153 = !DILocation(line: 1190, column: 20, scope: !6104)
!6154 = !DILocation(line: 1190, column: 26, scope: !6104)
!6155 = !DILocation(line: 1190, column: 31, scope: !6104)
!6156 = !DILocation(line: 1190, column: 37, scope: !6104)
!6157 = !DILocation(line: 1191, column: 5, scope: !6104)
!6158 = !DILocation(line: 1191, column: 20, scope: !6104)
!6159 = !DILocation(line: 1191, column: 26, scope: !6104)
!6160 = !DILocation(line: 1191, column: 31, scope: !6104)
!6161 = !DILocation(line: 1191, column: 37, scope: !6104)
!6162 = !DILocation(line: 1193, column: 5, scope: !6104)
!6163 = !DILocation(line: 1193, column: 12, scope: !6104)
!6164 = !DILocation(line: 1193, column: 16, scope: !6104)
!6165 = !DILocation(line: 1193, column: 22, scope: !6104)
!6166 = !DILocation(line: 1193, column: 28, scope: !6104)
!6167 = !DILocation(line: 1193, column: 33, scope: !6104)
!6168 = !DILocation(line: 1194, column: 5, scope: !6104)
!6169 = !DILocation(line: 1194, column: 12, scope: !6104)
!6170 = !DILocation(line: 1194, column: 16, scope: !6104)
!6171 = !DILocation(line: 1194, column: 22, scope: !6104)
!6172 = !DILocation(line: 1194, column: 28, scope: !6104)
!6173 = !DILocation(line: 1194, column: 33, scope: !6104)
!6174 = !DILocation(line: 1196, column: 9, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 1196, column: 9)
!6176 = !DILocation(line: 1196, column: 16, scope: !6175)
!6177 = !DILocation(line: 1196, column: 29, scope: !6175)
!6178 = !DILocation(line: 1196, column: 32, scope: !6175)
!6179 = !DILocation(line: 1196, column: 38, scope: !6175)
!6180 = !DILocation(line: 1196, column: 47, scope: !6175)
!6181 = !DILocation(line: 1196, column: 57, scope: !6175)
!6182 = !DILocation(line: 1196, column: 64, scope: !6175)
!6183 = !DILocation(line: 1196, column: 54, scope: !6175)
!6184 = !DILocation(line: 1196, column: 78, scope: !6175)
!6185 = !DILocation(line: 1196, column: 82, scope: !6175)
!6186 = !DILocation(line: 1196, column: 9, scope: !6104)
!6187 = !DILocation(line: 1197, column: 6, scope: !6175)
!6188 = !DILocation(line: 1199, column: 22, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 1199, column: 5)
!6190 = !DILocation(line: 1199, column: 28, scope: !6189)
!6191 = !DILocation(line: 1199, column: 20, scope: !6189)
!6192 = !DILocation(line: 1199, column: 10, scope: !6189)
!6193 = !DILocation(line: 1199, column: 35, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 1199, column: 5)
!6195 = !DILocation(line: 1199, column: 5, scope: !6189)
!6196 = !DILocation(line: 1200, column: 47, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 1200, column: 10)
!6198 = distinct !DILexicalBlock(scope: !6194, file: !3, line: 1199, column: 75)
!6199 = !DILocation(line: 1200, column: 53, scope: !6197)
!6200 = !DILocation(line: 1200, column: 64, scope: !6197)
!6201 = !DILocation(line: 1200, column: 10, scope: !6197)
!6202 = !DILocation(line: 1200, column: 10, scope: !6198)
!6203 = !DILocation(line: 1201, column: 11, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 1200, column: 72)
!6205 = !DILocation(line: 1201, column: 18, scope: !6204)
!6206 = !DILocation(line: 1201, column: 22, scope: !6204)
!6207 = !DILocation(line: 1201, column: 33, scope: !6204)
!6208 = !DILocation(line: 1201, column: 39, scope: !6204)
!6209 = !DILocation(line: 1201, column: 9, scope: !6204)
!6210 = !DILocation(line: 1202, column: 36, scope: !6204)
!6211 = !DILocation(line: 1202, column: 40, scope: !6204)
!6212 = !DILocation(line: 1202, column: 47, scope: !6204)
!6213 = !DILocation(line: 1202, column: 50, scope: !6204)
!6214 = !DILocation(line: 1202, column: 55, scope: !6204)
!6215 = !DILocation(line: 1202, column: 14, scope: !6204)
!6216 = !DILocation(line: 1202, column: 12, scope: !6204)
!6217 = !DILocation(line: 1203, column: 11, scope: !6204)
!6218 = !DILocation(line: 1203, column: 18, scope: !6204)
!6219 = !DILocation(line: 1203, column: 22, scope: !6204)
!6220 = !DILocation(line: 1203, column: 33, scope: !6204)
!6221 = !DILocation(line: 1203, column: 39, scope: !6204)
!6222 = !DILocation(line: 1203, column: 9, scope: !6204)
!6223 = !DILocation(line: 1204, column: 36, scope: !6204)
!6224 = !DILocation(line: 1204, column: 40, scope: !6204)
!6225 = !DILocation(line: 1204, column: 47, scope: !6204)
!6226 = !DILocation(line: 1204, column: 50, scope: !6204)
!6227 = !DILocation(line: 1204, column: 55, scope: !6204)
!6228 = !DILocation(line: 1204, column: 14, scope: !6204)
!6229 = !DILocation(line: 1204, column: 12, scope: !6204)
!6230 = !DILocation(line: 1206, column: 11, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 1206, column: 11)
!6232 = !DILocation(line: 1206, column: 11, scope: !6204)
!6233 = !DILocation(line: 1207, column: 18, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6231, file: !3, line: 1206, column: 29)
!6235 = !DILocation(line: 1207, column: 33, scope: !6234)
!6236 = !DILocation(line: 1207, column: 39, scope: !6234)
!6237 = !DILocation(line: 1207, column: 44, scope: !6234)
!6238 = !DILocation(line: 1207, column: 48, scope: !6234)
!6239 = !DILocation(line: 1207, column: 54, scope: !6234)
!6240 = !DILocation(line: 1207, column: 8, scope: !6234)
!6241 = !DILocation(line: 1208, column: 8, scope: !6234)
!6242 = !DILocation(line: 1208, column: 23, scope: !6234)
!6243 = !DILocation(line: 1208, column: 29, scope: !6234)
!6244 = !DILocation(line: 1208, column: 34, scope: !6234)
!6245 = !DILocation(line: 1208, column: 39, scope: !6234)
!6246 = !DILocation(line: 1209, column: 18, scope: !6234)
!6247 = !DILocation(line: 1209, column: 33, scope: !6234)
!6248 = !DILocation(line: 1209, column: 39, scope: !6234)
!6249 = !DILocation(line: 1209, column: 44, scope: !6234)
!6250 = !DILocation(line: 1209, column: 48, scope: !6234)
!6251 = !DILocation(line: 1209, column: 54, scope: !6234)
!6252 = !DILocation(line: 1209, column: 8, scope: !6234)
!6253 = !DILocation(line: 1210, column: 8, scope: !6234)
!6254 = !DILocation(line: 1210, column: 23, scope: !6234)
!6255 = !DILocation(line: 1210, column: 29, scope: !6234)
!6256 = !DILocation(line: 1210, column: 34, scope: !6234)
!6257 = !DILocation(line: 1210, column: 39, scope: !6234)
!6258 = !DILocation(line: 1211, column: 7, scope: !6234)
!6259 = !DILocation(line: 1212, column: 16, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6231, file: !3, line: 1212, column: 16)
!6261 = !DILocation(line: 1212, column: 27, scope: !6260)
!6262 = !DILocation(line: 1212, column: 36, scope: !6260)
!6263 = !DILocation(line: 1212, column: 46, scope: !6260)
!6264 = !DILocation(line: 1212, column: 53, scope: !6260)
!6265 = !DILocation(line: 1212, column: 43, scope: !6260)
!6266 = !DILocation(line: 1212, column: 16, scope: !6231)
!6267 = !DILocation(line: 1213, column: 19, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6260, file: !3, line: 1212, column: 68)
!6269 = !DILocation(line: 1213, column: 34, scope: !6268)
!6270 = !DILocation(line: 1213, column: 40, scope: !6268)
!6271 = !DILocation(line: 1213, column: 45, scope: !6268)
!6272 = !DILocation(line: 1213, column: 49, scope: !6268)
!6273 = !DILocation(line: 1213, column: 55, scope: !6268)
!6274 = !DILocation(line: 1213, column: 8, scope: !6268)
!6275 = !DILocation(line: 1214, column: 19, scope: !6268)
!6276 = !DILocation(line: 1214, column: 34, scope: !6268)
!6277 = !DILocation(line: 1214, column: 40, scope: !6268)
!6278 = !DILocation(line: 1214, column: 45, scope: !6268)
!6279 = !DILocation(line: 1214, column: 49, scope: !6268)
!6280 = !DILocation(line: 1214, column: 55, scope: !6268)
!6281 = !DILocation(line: 1214, column: 8, scope: !6268)
!6282 = !DILocation(line: 1215, column: 7, scope: !6268)
!6283 = !DILocation(line: 1216, column: 6, scope: !6204)
!6284 = !DILocation(line: 1217, column: 5, scope: !6198)
!6285 = !DILocation(line: 1199, column: 58, scope: !6194)
!6286 = !DILocation(line: 1199, column: 69, scope: !6194)
!6287 = !DILocation(line: 1199, column: 56, scope: !6194)
!6288 = !DILocation(line: 1199, column: 5, scope: !6194)
!6289 = distinct !{!6289, !6195, !6290}
!6290 = !DILocation(line: 1217, column: 5, scope: !6189)
!6291 = !DILocation(line: 1218, column: 4, scope: !6104)
!6292 = !DILocation(line: 1220, column: 2, scope: !5936)
!6293 = !DILocation(line: 1129, column: 42, scope: !5929)
!6294 = !DILocation(line: 1129, column: 2, scope: !5929)
!6295 = distinct !{!6295, !5933, !6296}
!6296 = !DILocation(line: 1220, column: 2, scope: !5926)
!6297 = !DILocation(line: 1223, column: 6, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 1223, column: 6)
!6299 = !DILocation(line: 1223, column: 13, scope: !6298)
!6300 = !DILocation(line: 1223, column: 18, scope: !6298)
!6301 = !DILocation(line: 1223, column: 33, scope: !6298)
!6302 = !DILocation(line: 1223, column: 36, scope: !6298)
!6303 = !DILocation(line: 1223, column: 6, scope: !5132)
!6304 = !DILocation(line: 1224, column: 10, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6306, file: !3, line: 1224, column: 3)
!6306 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 1223, column: 54)
!6307 = !DILocation(line: 1224, column: 8, scope: !6305)
!6308 = !DILocation(line: 1224, column: 15, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6305, file: !3, line: 1224, column: 3)
!6310 = !DILocation(line: 1224, column: 19, scope: !6309)
!6311 = !DILocation(line: 1224, column: 26, scope: !6309)
!6312 = !DILocation(line: 1224, column: 17, scope: !6309)
!6313 = !DILocation(line: 1224, column: 3, scope: !6305)
!6314 = !DILocation(line: 1225, column: 31, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6309, file: !3, line: 1224, column: 51)
!6316 = !DILocation(line: 1225, column: 46, scope: !6315)
!6317 = !DILocation(line: 1225, column: 49, scope: !6315)
!6318 = !DILocation(line: 1225, column: 4, scope: !6315)
!6319 = !DILocation(line: 1225, column: 19, scope: !6315)
!6320 = !DILocation(line: 1225, column: 22, scope: !6315)
!6321 = !DILocation(line: 1225, column: 28, scope: !6315)
!6322 = !DILocation(line: 1226, column: 31, scope: !6315)
!6323 = !DILocation(line: 1226, column: 46, scope: !6315)
!6324 = !DILocation(line: 1226, column: 49, scope: !6315)
!6325 = !DILocation(line: 1226, column: 4, scope: !6315)
!6326 = !DILocation(line: 1226, column: 19, scope: !6315)
!6327 = !DILocation(line: 1226, column: 22, scope: !6315)
!6328 = !DILocation(line: 1226, column: 28, scope: !6315)
!6329 = !DILocation(line: 1227, column: 3, scope: !6315)
!6330 = !DILocation(line: 1224, column: 47, scope: !6309)
!6331 = !DILocation(line: 1224, column: 3, scope: !6309)
!6332 = distinct !{!6332, !6313, !6333}
!6333 = !DILocation(line: 1227, column: 3, scope: !6305)
!6334 = !DILocation(line: 1228, column: 2, scope: !6306)
!6335 = !DILocation(line: 1231, column: 6, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 1231, column: 6)
!6337 = !DILocation(line: 1231, column: 13, scope: !6336)
!6338 = !DILocation(line: 1231, column: 6, scope: !5132)
!6339 = !DILocation(line: 1232, column: 7, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6341, file: !3, line: 1232, column: 7)
!6341 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 1231, column: 27)
!6342 = !DILocation(line: 1232, column: 14, scope: !6340)
!6343 = !DILocation(line: 1232, column: 19, scope: !6340)
!6344 = !DILocation(line: 1232, column: 7, scope: !6341)
!6345 = !DILocation(line: 1233, column: 11, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 1233, column: 4)
!6347 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1232, column: 35)
!6348 = !DILocation(line: 1233, column: 9, scope: !6346)
!6349 = !DILocation(line: 1233, column: 16, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6346, file: !3, line: 1233, column: 4)
!6351 = !DILocation(line: 1233, column: 20, scope: !6350)
!6352 = !DILocation(line: 1233, column: 27, scope: !6350)
!6353 = !DILocation(line: 1233, column: 18, scope: !6350)
!6354 = !DILocation(line: 1233, column: 4, scope: !6346)
!6355 = !DILocalVariable(name: "element", scope: !6356, file: !3, line: 1234, type: !2206)
!6356 = distinct !DILexicalBlock(scope: !6350, file: !3, line: 1233, column: 48)
!6357 = !DILocation(line: 1234, column: 16, scope: !6356)
!6358 = !DILocation(line: 1234, column: 26, scope: !6356)
!6359 = !DILocation(line: 1234, column: 33, scope: !6356)
!6360 = !DILocation(line: 1234, column: 49, scope: !6356)
!6361 = !DILocation(line: 1236, column: 9, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 1236, column: 9)
!6363 = !DILocation(line: 1236, column: 18, scope: !6362)
!6364 = !DILocation(line: 1236, column: 23, scope: !6362)
!6365 = !DILocation(line: 1236, column: 9, scope: !6356)
!6366 = !DILocalVariable(name: "l", scope: !6367, file: !3, line: 1237, type: !2262)
!6367 = distinct !DILexicalBlock(scope: !6362, file: !3, line: 1236, column: 44)
!6368 = !DILocation(line: 1237, column: 14, scope: !6367)
!6369 = !DILocalVariable(name: "luv", scope: !6367, file: !3, line: 1238, type: !4641)
!6370 = !DILocation(line: 1238, column: 15, scope: !6367)
!6371 = !DILocation(line: 1240, column: 10, scope: !6367)
!6372 = !DILocation(line: 1240, column: 19, scope: !6367)
!6373 = !DILocation(line: 1240, column: 8, scope: !6367)
!6374 = !DILocation(line: 1241, column: 34, scope: !6367)
!6375 = !DILocation(line: 1241, column: 38, scope: !6367)
!6376 = !DILocation(line: 1241, column: 45, scope: !6367)
!6377 = !DILocation(line: 1241, column: 48, scope: !6367)
!6378 = !DILocation(line: 1241, column: 53, scope: !6367)
!6379 = !DILocation(line: 1241, column: 12, scope: !6367)
!6380 = !DILocation(line: 1241, column: 10, scope: !6367)
!6381 = !DILocation(line: 1245, column: 60, scope: !6367)
!6382 = !DILocation(line: 1245, column: 75, scope: !6367)
!6383 = !DILocation(line: 1245, column: 78, scope: !6367)
!6384 = !DILocation(line: 1245, column: 86, scope: !6367)
!6385 = !DILocation(line: 1245, column: 91, scope: !6367)
!6386 = !DILocation(line: 1245, column: 84, scope: !6367)
!6387 = !DILocation(line: 1245, column: 6, scope: !6367)
!6388 = !DILocation(line: 1245, column: 25, scope: !6367)
!6389 = !DILocation(line: 1245, column: 34, scope: !6367)
!6390 = !DILocation(line: 1245, column: 42, scope: !6367)
!6391 = !DILocation(line: 1245, column: 57, scope: !6367)
!6392 = !DILocation(line: 1246, column: 60, scope: !6367)
!6393 = !DILocation(line: 1246, column: 75, scope: !6367)
!6394 = !DILocation(line: 1246, column: 78, scope: !6367)
!6395 = !DILocation(line: 1246, column: 86, scope: !6367)
!6396 = !DILocation(line: 1246, column: 91, scope: !6367)
!6397 = !DILocation(line: 1246, column: 84, scope: !6367)
!6398 = !DILocation(line: 1246, column: 6, scope: !6367)
!6399 = !DILocation(line: 1246, column: 25, scope: !6367)
!6400 = !DILocation(line: 1246, column: 34, scope: !6367)
!6401 = !DILocation(line: 1246, column: 42, scope: !6367)
!6402 = !DILocation(line: 1246, column: 57, scope: !6367)
!6403 = !DILocation(line: 1247, column: 60, scope: !6367)
!6404 = !DILocation(line: 1247, column: 65, scope: !6367)
!6405 = !DILocation(line: 1247, column: 6, scope: !6367)
!6406 = !DILocation(line: 1247, column: 25, scope: !6367)
!6407 = !DILocation(line: 1247, column: 34, scope: !6367)
!6408 = !DILocation(line: 1247, column: 42, scope: !6367)
!6409 = !DILocation(line: 1247, column: 57, scope: !6367)
!6410 = !DILocation(line: 1248, column: 60, scope: !6367)
!6411 = !DILocation(line: 1248, column: 65, scope: !6367)
!6412 = !DILocation(line: 1248, column: 6, scope: !6367)
!6413 = !DILocation(line: 1248, column: 25, scope: !6367)
!6414 = !DILocation(line: 1248, column: 34, scope: !6367)
!6415 = !DILocation(line: 1248, column: 42, scope: !6367)
!6416 = !DILocation(line: 1248, column: 57, scope: !6367)
!6417 = !DILocation(line: 1249, column: 6, scope: !6367)
!6418 = !DILocation(line: 1249, column: 25, scope: !6367)
!6419 = !DILocation(line: 1249, column: 34, scope: !6367)
!6420 = !DILocation(line: 1249, column: 42, scope: !6367)
!6421 = !DILocation(line: 1249, column: 55, scope: !6367)
!6422 = !DILocation(line: 1250, column: 5, scope: !6367)
!6423 = !DILocation(line: 1251, column: 4, scope: !6356)
!6424 = !DILocation(line: 1233, column: 44, scope: !6350)
!6425 = !DILocation(line: 1233, column: 4, scope: !6350)
!6426 = distinct !{!6426, !6354, !6427}
!6427 = !DILocation(line: 1251, column: 4, scope: !6346)
!6428 = !DILocation(line: 1254, column: 11, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 1254, column: 4)
!6430 = !DILocation(line: 1254, column: 9, scope: !6429)
!6431 = !DILocation(line: 1254, column: 16, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6429, file: !3, line: 1254, column: 4)
!6433 = !DILocation(line: 1254, column: 20, scope: !6432)
!6434 = !DILocation(line: 1254, column: 27, scope: !6432)
!6435 = !DILocation(line: 1254, column: 18, scope: !6432)
!6436 = !DILocation(line: 1254, column: 4, scope: !6429)
!6437 = !DILocalVariable(name: "edge", scope: !6438, file: !3, line: 1255, type: !2198)
!6438 = distinct !DILexicalBlock(scope: !6432, file: !3, line: 1254, column: 54)
!6439 = !DILocation(line: 1255, column: 13, scope: !6438)
!6440 = !DILocation(line: 1255, column: 20, scope: !6438)
!6441 = !DILocation(line: 1255, column: 27, scope: !6438)
!6442 = !DILocation(line: 1255, column: 35, scope: !6438)
!6443 = !DILocation(line: 1255, column: 33, scope: !6438)
!6444 = !DILocation(line: 1256, column: 10, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 1256, column: 9)
!6446 = !DILocation(line: 1256, column: 16, scope: !6445)
!6447 = !DILocation(line: 1256, column: 21, scope: !6445)
!6448 = !DILocation(line: 1256, column: 40, scope: !6445)
!6449 = !DILocation(line: 1256, column: 44, scope: !6445)
!6450 = !DILocation(line: 1256, column: 51, scope: !6445)
!6451 = !DILocation(line: 1256, column: 55, scope: !6445)
!6452 = !DILocation(line: 1256, column: 61, scope: !6445)
!6453 = !DILocation(line: 1256, column: 67, scope: !6445)
!6454 = !DILocation(line: 1256, column: 72, scope: !6445)
!6455 = !DILocation(line: 1256, column: 93, scope: !6445)
!6456 = !DILocation(line: 1256, column: 97, scope: !6445)
!6457 = !DILocation(line: 1256, column: 104, scope: !6445)
!6458 = !DILocation(line: 1256, column: 108, scope: !6445)
!6459 = !DILocation(line: 1256, column: 114, scope: !6445)
!6460 = !DILocation(line: 1256, column: 120, scope: !6445)
!6461 = !DILocation(line: 1256, column: 125, scope: !6445)
!6462 = !DILocation(line: 1256, column: 9, scope: !6438)
!6463 = !DILocation(line: 1257, column: 44, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6445, file: !3, line: 1256, column: 147)
!6465 = !DILocation(line: 1257, column: 50, scope: !6464)
!6466 = !DILocation(line: 1257, column: 57, scope: !6464)
!6467 = !DILocation(line: 1257, column: 73, scope: !6464)
!6468 = !DILocation(line: 1257, column: 86, scope: !6464)
!6469 = !DILocation(line: 1257, column: 6, scope: !6464)
!6470 = !DILocation(line: 1258, column: 6, scope: !6464)
!6471 = !DILocation(line: 1258, column: 25, scope: !6464)
!6472 = !DILocation(line: 1258, column: 32, scope: !6464)
!6473 = !DILocation(line: 1258, column: 36, scope: !6464)
!6474 = !DILocation(line: 1258, column: 42, scope: !6464)
!6475 = !DILocation(line: 1258, column: 48, scope: !6464)
!6476 = !DILocation(line: 1258, column: 56, scope: !6464)
!6477 = !DILocation(line: 1258, column: 74, scope: !6464)
!6478 = !DILocation(line: 1259, column: 5, scope: !6464)
!6479 = !DILocation(line: 1260, column: 4, scope: !6438)
!6480 = !DILocation(line: 1254, column: 50, scope: !6432)
!6481 = !DILocation(line: 1254, column: 4, scope: !6432)
!6482 = distinct !{!6482, !6436, !6483}
!6483 = !DILocation(line: 1260, column: 4, scope: !6429)
!6484 = !DILocation(line: 1263, column: 8, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 1263, column: 8)
!6486 = !DILocation(line: 1263, column: 14, scope: !6485)
!6487 = !DILocation(line: 1263, column: 17, scope: !6485)
!6488 = !DILocation(line: 1263, column: 24, scope: !6485)
!6489 = !DILocation(line: 1263, column: 8, scope: !6347)
!6490 = !DILocation(line: 1264, column: 12, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 1264, column: 5)
!6492 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 1263, column: 37)
!6493 = !DILocation(line: 1264, column: 10, scope: !6491)
!6494 = !DILocation(line: 1264, column: 17, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 1264, column: 5)
!6496 = !DILocation(line: 1264, column: 21, scope: !6495)
!6497 = !DILocation(line: 1264, column: 28, scope: !6495)
!6498 = !DILocation(line: 1264, column: 19, scope: !6495)
!6499 = !DILocation(line: 1264, column: 5, scope: !6491)
!6500 = !DILocalVariable(name: "edge", scope: !6501, file: !3, line: 1265, type: !2198)
!6501 = distinct !DILexicalBlock(scope: !6495, file: !3, line: 1264, column: 55)
!6502 = !DILocation(line: 1265, column: 14, scope: !6501)
!6503 = !DILocation(line: 1265, column: 21, scope: !6501)
!6504 = !DILocation(line: 1265, column: 28, scope: !6501)
!6505 = !DILocation(line: 1265, column: 36, scope: !6501)
!6506 = !DILocation(line: 1265, column: 34, scope: !6501)
!6507 = !DILocation(line: 1266, column: 11, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6501, file: !3, line: 1266, column: 10)
!6509 = !DILocation(line: 1266, column: 18, scope: !6508)
!6510 = !DILocation(line: 1266, column: 22, scope: !6508)
!6511 = !DILocation(line: 1266, column: 28, scope: !6508)
!6512 = !DILocation(line: 1266, column: 34, scope: !6508)
!6513 = !DILocation(line: 1266, column: 39, scope: !6508)
!6514 = !DILocation(line: 1266, column: 60, scope: !6508)
!6515 = !DILocation(line: 1266, column: 64, scope: !6508)
!6516 = !DILocation(line: 1266, column: 71, scope: !6508)
!6517 = !DILocation(line: 1266, column: 75, scope: !6508)
!6518 = !DILocation(line: 1266, column: 81, scope: !6508)
!6519 = !DILocation(line: 1266, column: 87, scope: !6508)
!6520 = !DILocation(line: 1266, column: 92, scope: !6508)
!6521 = !DILocation(line: 1266, column: 10, scope: !6501)
!6522 = !DILocation(line: 1267, column: 7, scope: !6508)
!6523 = !DILocation(line: 1268, column: 5, scope: !6501)
!6524 = !DILocation(line: 1264, column: 51, scope: !6495)
!6525 = !DILocation(line: 1264, column: 5, scope: !6495)
!6526 = distinct !{!6526, !6499, !6527}
!6527 = !DILocation(line: 1268, column: 5, scope: !6491)
!6528 = !DILocation(line: 1269, column: 4, scope: !6492)
!6529 = !DILocation(line: 1271, column: 11, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 1271, column: 4)
!6531 = !DILocation(line: 1271, column: 9, scope: !6530)
!6532 = !DILocation(line: 1271, column: 16, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 1271, column: 4)
!6534 = !DILocation(line: 1271, column: 20, scope: !6533)
!6535 = !DILocation(line: 1271, column: 27, scope: !6533)
!6536 = !DILocation(line: 1271, column: 18, scope: !6533)
!6537 = !DILocation(line: 1271, column: 4, scope: !6530)
!6538 = !DILocalVariable(name: "element", scope: !6539, file: !3, line: 1272, type: !2206)
!6539 = distinct !DILexicalBlock(scope: !6533, file: !3, line: 1271, column: 48)
!6540 = !DILocation(line: 1272, column: 16, scope: !6539)
!6541 = !DILocation(line: 1272, column: 26, scope: !6539)
!6542 = !DILocation(line: 1272, column: 33, scope: !6539)
!6543 = !DILocation(line: 1272, column: 49, scope: !6539)
!6544 = !DILocation(line: 1273, column: 10, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6539, file: !3, line: 1273, column: 9)
!6546 = !DILocation(line: 1273, column: 29, scope: !6545)
!6547 = !DILocation(line: 1273, column: 38, scope: !6545)
!6548 = !DILocation(line: 1273, column: 46, scope: !6545)
!6549 = !DILocation(line: 1273, column: 9, scope: !6539)
!6550 = !DILocation(line: 1274, column: 10, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6552, file: !3, line: 1274, column: 10)
!6552 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 1273, column: 65)
!6553 = !DILocation(line: 1274, column: 19, scope: !6551)
!6554 = !DILocation(line: 1274, column: 24, scope: !6551)
!6555 = !DILocation(line: 1274, column: 10, scope: !6552)
!6556 = !DILocation(line: 1275, column: 45, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6551, file: !3, line: 1274, column: 45)
!6558 = !DILocation(line: 1275, column: 54, scope: !6557)
!6559 = !DILocation(line: 1275, column: 61, scope: !6557)
!6560 = !DILocation(line: 1275, column: 7, scope: !6557)
!6561 = !DILocation(line: 1276, column: 6, scope: !6557)
!6562 = !DILocation(line: 1277, column: 5, scope: !6552)
!6563 = !DILocation(line: 1278, column: 4, scope: !6539)
!6564 = !DILocation(line: 1271, column: 44, scope: !6533)
!6565 = !DILocation(line: 1271, column: 4, scope: !6533)
!6566 = distinct !{!6566, !6537, !6567}
!6567 = !DILocation(line: 1278, column: 4, scope: !6530)
!6568 = !DILocation(line: 1279, column: 3, scope: !6347)
!6569 = !DILocation(line: 1281, column: 11, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6571, file: !3, line: 1281, column: 4)
!6571 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 1280, column: 8)
!6572 = !DILocation(line: 1281, column: 9, scope: !6570)
!6573 = !DILocation(line: 1281, column: 16, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6570, file: !3, line: 1281, column: 4)
!6575 = !DILocation(line: 1281, column: 20, scope: !6574)
!6576 = !DILocation(line: 1281, column: 27, scope: !6574)
!6577 = !DILocation(line: 1281, column: 18, scope: !6574)
!6578 = !DILocation(line: 1281, column: 4, scope: !6570)
!6579 = !DILocalVariable(name: "element", scope: !6580, file: !3, line: 1282, type: !2206)
!6580 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 1281, column: 52)
!6581 = !DILocation(line: 1282, column: 16, scope: !6580)
!6582 = !DILocation(line: 1282, column: 26, scope: !6580)
!6583 = !DILocation(line: 1282, column: 33, scope: !6580)
!6584 = !DILocation(line: 1282, column: 37, scope: !6580)
!6585 = !DILocation(line: 1284, column: 9, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 1284, column: 9)
!6587 = !DILocation(line: 1284, column: 18, scope: !6586)
!6588 = !DILocation(line: 1284, column: 23, scope: !6586)
!6589 = !DILocation(line: 1284, column: 9, scope: !6580)
!6590 = !DILocalVariable(name: "l", scope: !6591, file: !3, line: 1285, type: !2262)
!6591 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 1284, column: 44)
!6592 = !DILocation(line: 1285, column: 14, scope: !6591)
!6593 = !DILocalVariable(name: "luv", scope: !6591, file: !3, line: 1286, type: !4641)
!6594 = !DILocation(line: 1286, column: 15, scope: !6591)
!6595 = !DILocation(line: 1288, column: 10, scope: !6591)
!6596 = !DILocation(line: 1288, column: 19, scope: !6591)
!6597 = !DILocation(line: 1288, column: 8, scope: !6591)
!6598 = !DILocation(line: 1289, column: 34, scope: !6591)
!6599 = !DILocation(line: 1289, column: 38, scope: !6591)
!6600 = !DILocation(line: 1289, column: 45, scope: !6591)
!6601 = !DILocation(line: 1289, column: 48, scope: !6591)
!6602 = !DILocation(line: 1289, column: 53, scope: !6591)
!6603 = !DILocation(line: 1289, column: 12, scope: !6591)
!6604 = !DILocation(line: 1289, column: 10, scope: !6591)
!6605 = !DILocation(line: 1293, column: 60, scope: !6591)
!6606 = !DILocation(line: 1293, column: 75, scope: !6591)
!6607 = !DILocation(line: 1293, column: 78, scope: !6591)
!6608 = !DILocation(line: 1293, column: 86, scope: !6591)
!6609 = !DILocation(line: 1293, column: 91, scope: !6591)
!6610 = !DILocation(line: 1293, column: 84, scope: !6591)
!6611 = !DILocation(line: 1293, column: 6, scope: !6591)
!6612 = !DILocation(line: 1293, column: 25, scope: !6591)
!6613 = !DILocation(line: 1293, column: 34, scope: !6591)
!6614 = !DILocation(line: 1293, column: 42, scope: !6591)
!6615 = !DILocation(line: 1293, column: 57, scope: !6591)
!6616 = !DILocation(line: 1294, column: 60, scope: !6591)
!6617 = !DILocation(line: 1294, column: 75, scope: !6591)
!6618 = !DILocation(line: 1294, column: 78, scope: !6591)
!6619 = !DILocation(line: 1294, column: 86, scope: !6591)
!6620 = !DILocation(line: 1294, column: 91, scope: !6591)
!6621 = !DILocation(line: 1294, column: 84, scope: !6591)
!6622 = !DILocation(line: 1294, column: 6, scope: !6591)
!6623 = !DILocation(line: 1294, column: 25, scope: !6591)
!6624 = !DILocation(line: 1294, column: 34, scope: !6591)
!6625 = !DILocation(line: 1294, column: 42, scope: !6591)
!6626 = !DILocation(line: 1294, column: 57, scope: !6591)
!6627 = !DILocation(line: 1295, column: 60, scope: !6591)
!6628 = !DILocation(line: 1295, column: 65, scope: !6591)
!6629 = !DILocation(line: 1295, column: 6, scope: !6591)
!6630 = !DILocation(line: 1295, column: 25, scope: !6591)
!6631 = !DILocation(line: 1295, column: 34, scope: !6591)
!6632 = !DILocation(line: 1295, column: 42, scope: !6591)
!6633 = !DILocation(line: 1295, column: 57, scope: !6591)
!6634 = !DILocation(line: 1296, column: 60, scope: !6591)
!6635 = !DILocation(line: 1296, column: 65, scope: !6591)
!6636 = !DILocation(line: 1296, column: 6, scope: !6591)
!6637 = !DILocation(line: 1296, column: 25, scope: !6591)
!6638 = !DILocation(line: 1296, column: 34, scope: !6591)
!6639 = !DILocation(line: 1296, column: 42, scope: !6591)
!6640 = !DILocation(line: 1296, column: 57, scope: !6591)
!6641 = !DILocation(line: 1297, column: 6, scope: !6591)
!6642 = !DILocation(line: 1297, column: 25, scope: !6591)
!6643 = !DILocation(line: 1297, column: 34, scope: !6591)
!6644 = !DILocation(line: 1297, column: 42, scope: !6591)
!6645 = !DILocation(line: 1297, column: 55, scope: !6591)
!6646 = !DILocation(line: 1298, column: 5, scope: !6591)
!6647 = !DILocation(line: 1299, column: 4, scope: !6580)
!6648 = !DILocation(line: 1281, column: 48, scope: !6574)
!6649 = !DILocation(line: 1281, column: 4, scope: !6574)
!6650 = distinct !{!6650, !6578, !6651}
!6651 = !DILocation(line: 1299, column: 4, scope: !6570)
!6652 = !DILocation(line: 1301, column: 11, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6571, file: !3, line: 1301, column: 4)
!6654 = !DILocation(line: 1301, column: 9, scope: !6653)
!6655 = !DILocation(line: 1301, column: 16, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6653, file: !3, line: 1301, column: 4)
!6657 = !DILocation(line: 1301, column: 20, scope: !6656)
!6658 = !DILocation(line: 1301, column: 27, scope: !6656)
!6659 = !DILocation(line: 1301, column: 18, scope: !6656)
!6660 = !DILocation(line: 1301, column: 4, scope: !6653)
!6661 = !DILocalVariable(name: "edge", scope: !6662, file: !3, line: 1302, type: !2198)
!6662 = distinct !DILexicalBlock(scope: !6656, file: !3, line: 1301, column: 48)
!6663 = !DILocation(line: 1302, column: 13, scope: !6662)
!6664 = !DILocation(line: 1302, column: 20, scope: !6662)
!6665 = !DILocation(line: 1302, column: 27, scope: !6662)
!6666 = !DILocation(line: 1302, column: 43, scope: !6662)
!6667 = !DILocation(line: 1304, column: 9, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6662, file: !3, line: 1304, column: 9)
!6669 = !DILocation(line: 1304, column: 15, scope: !6668)
!6670 = !DILocation(line: 1304, column: 20, scope: !6668)
!6671 = !DILocation(line: 1304, column: 9, scope: !6662)
!6672 = !DILocation(line: 1305, column: 44, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 1304, column: 41)
!6674 = !DILocation(line: 1305, column: 50, scope: !6673)
!6675 = !DILocation(line: 1305, column: 57, scope: !6673)
!6676 = !DILocation(line: 1305, column: 79, scope: !6673)
!6677 = !DILocation(line: 1305, column: 6, scope: !6673)
!6678 = !DILocation(line: 1306, column: 6, scope: !6673)
!6679 = !DILocation(line: 1306, column: 25, scope: !6673)
!6680 = !DILocation(line: 1306, column: 32, scope: !6673)
!6681 = !DILocation(line: 1306, column: 36, scope: !6673)
!6682 = !DILocation(line: 1306, column: 42, scope: !6673)
!6683 = !DILocation(line: 1306, column: 48, scope: !6673)
!6684 = !DILocation(line: 1306, column: 56, scope: !6673)
!6685 = !DILocation(line: 1306, column: 74, scope: !6673)
!6686 = !DILocation(line: 1307, column: 5, scope: !6673)
!6687 = !DILocation(line: 1308, column: 4, scope: !6662)
!6688 = !DILocation(line: 1301, column: 44, scope: !6656)
!6689 = !DILocation(line: 1301, column: 4, scope: !6656)
!6690 = distinct !{!6690, !6660, !6691}
!6691 = !DILocation(line: 1308, column: 4, scope: !6653)
!6692 = !DILocation(line: 1311, column: 8, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6571, file: !3, line: 1311, column: 8)
!6694 = !DILocation(line: 1311, column: 14, scope: !6693)
!6695 = !DILocation(line: 1311, column: 17, scope: !6693)
!6696 = !DILocation(line: 1311, column: 24, scope: !6693)
!6697 = !DILocation(line: 1311, column: 8, scope: !6571)
!6698 = !DILocation(line: 1312, column: 12, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6700, file: !3, line: 1312, column: 5)
!6700 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 1311, column: 37)
!6701 = !DILocation(line: 1312, column: 10, scope: !6699)
!6702 = !DILocation(line: 1312, column: 17, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6699, file: !3, line: 1312, column: 5)
!6704 = !DILocation(line: 1312, column: 21, scope: !6703)
!6705 = !DILocation(line: 1312, column: 28, scope: !6703)
!6706 = !DILocation(line: 1312, column: 19, scope: !6703)
!6707 = !DILocation(line: 1312, column: 5, scope: !6699)
!6708 = !DILocalVariable(name: "edge", scope: !6709, file: !3, line: 1313, type: !2198)
!6709 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 1312, column: 49)
!6710 = !DILocation(line: 1313, column: 14, scope: !6709)
!6711 = !DILocation(line: 1313, column: 21, scope: !6709)
!6712 = !DILocation(line: 1313, column: 28, scope: !6709)
!6713 = !DILocation(line: 1313, column: 44, scope: !6709)
!6714 = !DILocation(line: 1314, column: 10, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 1314, column: 10)
!6716 = !DILocation(line: 1314, column: 16, scope: !6715)
!6717 = !DILocation(line: 1314, column: 21, scope: !6715)
!6718 = !DILocation(line: 1314, column: 10, scope: !6709)
!6719 = !DILocation(line: 1315, column: 7, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6715, file: !3, line: 1314, column: 42)
!6721 = !DILocation(line: 1316, column: 6, scope: !6720)
!6722 = !DILocation(line: 1317, column: 5, scope: !6709)
!6723 = !DILocation(line: 1312, column: 45, scope: !6703)
!6724 = !DILocation(line: 1312, column: 5, scope: !6703)
!6725 = distinct !{!6725, !6707, !6726}
!6726 = !DILocation(line: 1317, column: 5, scope: !6699)
!6727 = !DILocation(line: 1318, column: 4, scope: !6700)
!6728 = !DILocation(line: 1320, column: 2, scope: !6341)
!6729 = !DILocation(line: 1323, column: 9, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 1323, column: 2)
!6731 = !DILocation(line: 1323, column: 7, scope: !6730)
!6732 = !DILocation(line: 1323, column: 14, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 1323, column: 2)
!6734 = !DILocation(line: 1323, column: 18, scope: !6733)
!6735 = !DILocation(line: 1323, column: 25, scope: !6733)
!6736 = !DILocation(line: 1323, column: 16, scope: !6733)
!6737 = !DILocation(line: 1323, column: 2, scope: !6730)
!6738 = !DILocation(line: 1324, column: 7, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6740, file: !3, line: 1324, column: 7)
!6740 = distinct !DILexicalBlock(scope: !6733, file: !3, line: 1323, column: 46)
!6741 = !DILocation(line: 1324, column: 14, scope: !6739)
!6742 = !DILocation(line: 1324, column: 19, scope: !6739)
!6743 = !DILocation(line: 1324, column: 7, scope: !6740)
!6744 = !DILocalVariable(name: "element", scope: !6745, file: !3, line: 1325, type: !2206)
!6745 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 1324, column: 35)
!6746 = !DILocation(line: 1325, column: 15, scope: !6745)
!6747 = !DILocation(line: 1325, column: 25, scope: !6745)
!6748 = !DILocation(line: 1325, column: 32, scope: !6745)
!6749 = !DILocation(line: 1325, column: 48, scope: !6745)
!6750 = !DILocation(line: 1327, column: 39, scope: !6745)
!6751 = !DILocation(line: 1327, column: 46, scope: !6745)
!6752 = !DILocation(line: 1327, column: 55, scope: !6745)
!6753 = !DILocation(line: 1327, column: 58, scope: !6745)
!6754 = !DILocation(line: 1327, column: 76, scope: !6745)
!6755 = !DILocation(line: 1327, column: 92, scope: !6745)
!6756 = !DILocation(line: 1327, column: 99, scope: !6745)
!6757 = !DILocation(line: 1327, column: 4, scope: !6745)
!6758 = !DILocation(line: 1328, column: 3, scope: !6745)
!6759 = !DILocalVariable(name: "edge", scope: !6760, file: !3, line: 1330, type: !2198)
!6760 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 1329, column: 8)
!6761 = !DILocation(line: 1330, column: 12, scope: !6760)
!6762 = !DILocation(line: 1330, column: 19, scope: !6760)
!6763 = !DILocation(line: 1330, column: 26, scope: !6760)
!6764 = !DILocation(line: 1330, column: 42, scope: !6760)
!6765 = !DILocation(line: 1332, column: 39, scope: !6760)
!6766 = !DILocation(line: 1332, column: 46, scope: !6760)
!6767 = !DILocation(line: 1332, column: 53, scope: !6760)
!6768 = !DILocation(line: 1332, column: 57, scope: !6760)
!6769 = !DILocation(line: 1332, column: 63, scope: !6760)
!6770 = !DILocation(line: 1332, column: 69, scope: !6760)
!6771 = !DILocation(line: 1332, column: 75, scope: !6760)
!6772 = !DILocation(line: 1332, column: 80, scope: !6760)
!6773 = !DILocation(line: 1332, column: 98, scope: !6760)
!6774 = !DILocation(line: 1332, column: 114, scope: !6760)
!6775 = !DILocation(line: 1332, column: 121, scope: !6760)
!6776 = !DILocation(line: 1332, column: 4, scope: !6760)
!6777 = !DILocation(line: 1333, column: 39, scope: !6760)
!6778 = !DILocation(line: 1333, column: 46, scope: !6760)
!6779 = !DILocation(line: 1333, column: 53, scope: !6760)
!6780 = !DILocation(line: 1333, column: 57, scope: !6760)
!6781 = !DILocation(line: 1333, column: 63, scope: !6760)
!6782 = !DILocation(line: 1333, column: 69, scope: !6760)
!6783 = !DILocation(line: 1333, column: 75, scope: !6760)
!6784 = !DILocation(line: 1333, column: 80, scope: !6760)
!6785 = !DILocation(line: 1333, column: 98, scope: !6760)
!6786 = !DILocation(line: 1333, column: 114, scope: !6760)
!6787 = !DILocation(line: 1333, column: 121, scope: !6760)
!6788 = !DILocation(line: 1333, column: 4, scope: !6760)
!6789 = !DILocation(line: 1335, column: 4, scope: !6760)
!6790 = !DILocation(line: 1335, column: 10, scope: !6760)
!6791 = !DILocation(line: 1335, column: 15, scope: !6760)
!6792 = !DILocation(line: 1337, column: 2, scope: !6740)
!6793 = !DILocation(line: 1323, column: 42, scope: !6733)
!6794 = !DILocation(line: 1323, column: 2, scope: !6733)
!6795 = distinct !{!6795, !6737, !6796}
!6796 = !DILocation(line: 1337, column: 2, scope: !6730)
!6797 = !DILocation(line: 1340, column: 6, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 1340, column: 6)
!6799 = !DILocation(line: 1340, column: 13, scope: !6798)
!6800 = !DILocation(line: 1340, column: 6, scope: !5132)
!6801 = !DILocation(line: 1341, column: 36, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 1340, column: 27)
!6803 = !DILocation(line: 1341, column: 43, scope: !6802)
!6804 = !DILocation(line: 1341, column: 61, scope: !6802)
!6805 = !DILocation(line: 1341, column: 70, scope: !6802)
!6806 = !DILocation(line: 1341, column: 90, scope: !6802)
!6807 = !DILocation(line: 1341, column: 3, scope: !6802)
!6808 = !DILocation(line: 1342, column: 2, scope: !6802)
!6809 = !DILocation(line: 1344, column: 2, scope: !5132)
!6810 = !DILocation(line: 1344, column: 12, scope: !5132)
!6811 = !DILocation(line: 1345, column: 6, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 1345, column: 6)
!6813 = !DILocation(line: 1345, column: 13, scope: !6812)
!6814 = !DILocation(line: 1345, column: 18, scope: !6812)
!6815 = !DILocation(line: 1345, column: 6, scope: !5132)
!6816 = !DILocation(line: 1346, column: 3, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 1345, column: 34)
!6818 = !DILocation(line: 1346, column: 13, scope: !6817)
!6819 = !DILocation(line: 1347, column: 2, scope: !6817)
!6820 = !DILocation(line: 1348, column: 2, scope: !5132)
!6821 = !DILocation(line: 1348, column: 12, scope: !5132)
!6822 = !DILocation(line: 1349, column: 2, scope: !5132)
!6823 = !DILocation(line: 1349, column: 12, scope: !5132)
!6824 = !DILocation(line: 1351, column: 2, scope: !5132)
!6825 = !DILocation(line: 1352, column: 1, scope: !5132)
!6826 = distinct !DISubprogram(name: "stitch_draw", scope: !3, file: !3, line: 1507, type: !6827, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!6827 = !DISubroutineType(types: !6828)
!6828 = !{null, !6829, !3114, !56}
!6829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6830, size: 64)
!6830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2511)
!6831 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !6826, file: !3, line: 1507, type: !6829)
!6832 = !DILocation(line: 1507, column: 41, scope: !6826)
!6833 = !DILocalVariable(name: "UNUSED_ar", arg: 2, scope: !6826, file: !3, line: 1507, type: !3114)
!6834 = !DILocation(line: 1507, column: 61, scope: !6826)
!6835 = !DILocalVariable(name: "arg", arg: 3, scope: !6826, file: !3, line: 1507, type: !56)
!6836 = !DILocation(line: 1507, column: 79, scope: !6826)
!6837 = !DILocalVariable(name: "i", scope: !6826, file: !3, line: 1509, type: !22)
!6838 = !DILocation(line: 1509, column: 6, scope: !6826)
!6839 = !DILocalVariable(name: "index", scope: !6826, file: !3, line: 1509, type: !22)
!6840 = !DILocation(line: 1509, column: 9, scope: !6826)
!6841 = !DILocalVariable(name: "pointsize", scope: !6826, file: !3, line: 1510, type: !191)
!6842 = !DILocation(line: 1510, column: 8, scope: !6826)
!6843 = !DILocation(line: 1510, column: 20, scope: !6826)
!6844 = !DILocalVariable(name: "state", scope: !6826, file: !3, line: 1511, type: !2300)
!6845 = !DILocation(line: 1511, column: 15, scope: !6826)
!6846 = !DILocation(line: 1511, column: 38, scope: !6826)
!6847 = !DILocation(line: 1511, column: 23, scope: !6826)
!6848 = !DILocalVariable(name: "stitch_preview", scope: !6826, file: !3, line: 1512, type: !2490)
!6849 = !DILocation(line: 1512, column: 19, scope: !6826)
!6850 = !DILocation(line: 1512, column: 36, scope: !6826)
!6851 = !DILocation(line: 1512, column: 43, scope: !6826)
!6852 = !DILocation(line: 1514, column: 2, scope: !6826)
!6853 = !DILocation(line: 1515, column: 2, scope: !6826)
!6854 = !DILocation(line: 1517, column: 2, scope: !6826)
!6855 = !DILocation(line: 1519, column: 2, scope: !6826)
!6856 = !DILocation(line: 1521, column: 2, scope: !6826)
!6857 = !DILocation(line: 1522, column: 2, scope: !6826)
!6858 = !DILocation(line: 1523, column: 34, scope: !6826)
!6859 = !DILocation(line: 1523, column: 50, scope: !6826)
!6860 = !DILocation(line: 1523, column: 2, scope: !6826)
!6861 = !DILocation(line: 1524, column: 32, scope: !6826)
!6862 = !DILocation(line: 1524, column: 48, scope: !6826)
!6863 = !DILocation(line: 1524, column: 64, scope: !6826)
!6864 = !DILocation(line: 1524, column: 2, scope: !6826)
!6865 = !DILocation(line: 1526, column: 34, scope: !6826)
!6866 = !DILocation(line: 1526, column: 50, scope: !6826)
!6867 = !DILocation(line: 1526, column: 2, scope: !6826)
!6868 = !DILocation(line: 1527, column: 9, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 1527, column: 2)
!6870 = !DILocation(line: 1527, column: 7, scope: !6869)
!6871 = !DILocation(line: 1527, column: 14, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6869, file: !3, line: 1527, column: 2)
!6873 = !DILocation(line: 1527, column: 18, scope: !6872)
!6874 = !DILocation(line: 1527, column: 34, scope: !6872)
!6875 = !DILocation(line: 1527, column: 16, scope: !6872)
!6876 = !DILocation(line: 1527, column: 2, scope: !6869)
!6877 = !DILocation(line: 1528, column: 3, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6872, file: !3, line: 1527, column: 50)
!6879 = !DILocation(line: 1529, column: 3, scope: !6878)
!6880 = !DILocation(line: 1530, column: 28, scope: !6878)
!6881 = !DILocation(line: 1530, column: 35, scope: !6878)
!6882 = !DILocation(line: 1530, column: 51, scope: !6878)
!6883 = !DILocation(line: 1530, column: 67, scope: !6878)
!6884 = !DILocation(line: 1530, column: 3, scope: !6878)
!6885 = !DILocation(line: 1531, column: 3, scope: !6878)
!6886 = !DILocation(line: 1532, column: 3, scope: !6878)
!6887 = !DILocation(line: 1533, column: 28, scope: !6878)
!6888 = !DILocation(line: 1533, column: 35, scope: !6878)
!6889 = !DILocation(line: 1533, column: 51, scope: !6878)
!6890 = !DILocation(line: 1533, column: 67, scope: !6878)
!6891 = !DILocation(line: 1533, column: 3, scope: !6878)
!6892 = !DILocation(line: 1540, column: 12, scope: !6878)
!6893 = !DILocation(line: 1540, column: 28, scope: !6878)
!6894 = !DILocation(line: 1540, column: 44, scope: !6878)
!6895 = !DILocation(line: 1540, column: 9, scope: !6878)
!6896 = !DILocation(line: 1541, column: 2, scope: !6878)
!6897 = !DILocation(line: 1527, column: 46, scope: !6872)
!6898 = !DILocation(line: 1527, column: 2, scope: !6872)
!6899 = distinct !{!6899, !6876, !6900}
!6900 = !DILocation(line: 1541, column: 2, scope: !6869)
!6901 = !DILocation(line: 1542, column: 2, scope: !6826)
!6902 = !DILocation(line: 1545, column: 6, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 1545, column: 6)
!6904 = !DILocation(line: 1545, column: 13, scope: !6903)
!6905 = !DILocation(line: 1545, column: 18, scope: !6903)
!6906 = !DILocation(line: 1545, column: 6, scope: !6826)
!6907 = !DILocation(line: 1546, column: 3, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 1545, column: 34)
!6909 = !DILocation(line: 1547, column: 35, scope: !6908)
!6910 = !DILocation(line: 1547, column: 51, scope: !6908)
!6911 = !DILocation(line: 1547, column: 3, scope: !6908)
!6912 = !DILocation(line: 1548, column: 30, scope: !6908)
!6913 = !DILocation(line: 1548, column: 46, scope: !6908)
!6914 = !DILocation(line: 1548, column: 3, scope: !6908)
!6915 = !DILocation(line: 1550, column: 3, scope: !6908)
!6916 = !DILocation(line: 1551, column: 35, scope: !6908)
!6917 = !DILocation(line: 1551, column: 51, scope: !6908)
!6918 = !DILocation(line: 1551, column: 3, scope: !6908)
!6919 = !DILocation(line: 1552, column: 30, scope: !6908)
!6920 = !DILocation(line: 1552, column: 46, scope: !6908)
!6921 = !DILocation(line: 1552, column: 3, scope: !6908)
!6922 = !DILocation(line: 1553, column: 2, scope: !6908)
!6923 = !DILocation(line: 1555, column: 3, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 1554, column: 7)
!6925 = !DILocation(line: 1556, column: 35, scope: !6924)
!6926 = !DILocation(line: 1556, column: 51, scope: !6924)
!6927 = !DILocation(line: 1556, column: 3, scope: !6924)
!6928 = !DILocation(line: 1557, column: 33, scope: !6924)
!6929 = !DILocation(line: 1557, column: 49, scope: !6924)
!6930 = !DILocation(line: 1557, column: 31, scope: !6924)
!6931 = !DILocation(line: 1557, column: 3, scope: !6924)
!6932 = !DILocation(line: 1559, column: 3, scope: !6924)
!6933 = !DILocation(line: 1560, column: 35, scope: !6924)
!6934 = !DILocation(line: 1560, column: 51, scope: !6924)
!6935 = !DILocation(line: 1560, column: 3, scope: !6924)
!6936 = !DILocation(line: 1561, column: 33, scope: !6924)
!6937 = !DILocation(line: 1561, column: 49, scope: !6924)
!6938 = !DILocation(line: 1561, column: 31, scope: !6924)
!6939 = !DILocation(line: 1561, column: 3, scope: !6924)
!6940 = !DILocation(line: 1564, column: 2, scope: !6826)
!6941 = !DILocation(line: 1565, column: 2, scope: !6826)
!6942 = !DILocation(line: 1567, column: 2, scope: !6826)
!6943 = !DILocation(line: 1568, column: 1, scope: !6826)
!6944 = !DILocalVariable(name: "state", arg: 1, scope: !2507, file: !3, line: 262, type: !2300)
!6945 = !DILocation(line: 262, column: 47, scope: !2507)
!6946 = !DILocalVariable(name: "C", arg: 2, scope: !2507, file: !3, line: 262, type: !2510)
!6947 = !DILocation(line: 262, column: 64, scope: !2507)
!6948 = !DILocalVariable(name: "msg", scope: !2507, file: !3, line: 266, type: !612)
!6949 = !DILocation(line: 266, column: 7, scope: !2507)
!6950 = !DILocalVariable(name: "sa", scope: !2507, file: !3, line: 267, type: !6951)
!6951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6952, size: 64)
!6952 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !109, line: 228, baseType: !6953)
!6953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !109, line: 203, size: 1280, elements: !6954)
!6954 = !{!6955, !6957, !6958, !6975, !6976, !6977, !6978, !6981, !6982, !6983, !6984, !6985, !6986, !6987, !6988, !6989, !6990, !6991, !6992, !6995, !6996, !6997, !6998}
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6953, file: !109, line: 204, baseType: !6956, size: 64)
!6956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6953, size: 64)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6953, file: !109, line: 204, baseType: !6956, size: 64, offset: 64)
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6953, file: !109, line: 206, baseType: !6959, size: 64, offset: 128)
!6959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6960, size: 64)
!6960 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !109, line: 87, baseType: !6961)
!6961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !109, line: 82, size: 256, elements: !6962)
!6962 = !{!6963, !6965, !6966, !6967, !6973, !6974}
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6961, file: !109, line: 83, baseType: !6964, size: 64)
!6964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6961, size: 64)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6961, file: !109, line: 83, baseType: !6964, size: 64, offset: 64)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !6961, file: !109, line: 83, baseType: !6964, size: 64, offset: 128)
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !6961, file: !109, line: 84, baseType: !6968, size: 32, offset: 192)
!6968 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !515, line: 43, baseType: !6969)
!6969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !515, line: 41, size: 32, elements: !6970)
!6970 = !{!6971, !6972}
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !6969, file: !515, line: 42, baseType: !48, size: 16)
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !6969, file: !515, line: 42, baseType: !48, size: 16, offset: 16)
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6961, file: !109, line: 86, baseType: !48, size: 16, offset: 224)
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !6961, file: !109, line: 86, baseType: !48, size: 16, offset: 240)
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6953, file: !109, line: 206, baseType: !6959, size: 64, offset: 192)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6953, file: !109, line: 206, baseType: !6959, size: 64, offset: 256)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6953, file: !109, line: 206, baseType: !6959, size: 64, offset: 320)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !6953, file: !109, line: 207, baseType: !6979, size: 64, offset: 384)
!6979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6980, size: 64)
!6980 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !109, line: 80, baseType: !108)
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !6953, file: !109, line: 209, baseType: !1414, size: 128, offset: 448)
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !6953, file: !109, line: 211, baseType: !14, size: 8, offset: 576)
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !6953, file: !109, line: 211, baseType: !14, size: 8, offset: 584)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !6953, file: !109, line: 212, baseType: !48, size: 16, offset: 592)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !6953, file: !109, line: 212, baseType: !48, size: 16, offset: 608)
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !6953, file: !109, line: 214, baseType: !48, size: 16, offset: 624)
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !6953, file: !109, line: 215, baseType: !48, size: 16, offset: 640)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6953, file: !109, line: 216, baseType: !48, size: 16, offset: 656)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !6953, file: !109, line: 217, baseType: !48, size: 16, offset: 672)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !6953, file: !109, line: 219, baseType: !14, size: 8, offset: 688)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6953, file: !109, line: 219, baseType: !14, size: 8, offset: 696)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6953, file: !109, line: 221, baseType: !6993, size: 64, offset: 704)
!6993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6994, size: 64)
!6994 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !109, line: 39, flags: DIFlagFwdDecl)
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !6953, file: !109, line: 223, baseType: !58, size: 128, offset: 768)
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !6953, file: !109, line: 224, baseType: !58, size: 128, offset: 896)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !6953, file: !109, line: 225, baseType: !58, size: 128, offset: 1024)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !6953, file: !109, line: 227, baseType: !58, size: 128, offset: 1152)
!6999 = !DILocation(line: 267, column: 11, scope: !2507)
!7000 = !DILocation(line: 267, column: 28, scope: !2507)
!7001 = !DILocation(line: 267, column: 16, scope: !2507)
!7002 = !DILocation(line: 269, column: 6, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 269, column: 6)
!7004 = !DILocation(line: 269, column: 6, scope: !2507)
!7005 = !DILocation(line: 270, column: 16, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 269, column: 10)
!7007 = !DILocation(line: 271, column: 16, scope: !7006)
!7008 = !DILocation(line: 271, column: 23, scope: !7006)
!7009 = !DILocation(line: 271, column: 28, scope: !7006)
!7010 = !DILocation(line: 272, column: 34, scope: !7006)
!7011 = !DILocation(line: 272, column: 41, scope: !7006)
!7012 = !DILocation(line: 272, column: 16, scope: !7006)
!7013 = !DILocation(line: 273, column: 34, scope: !7006)
!7014 = !DILocation(line: 273, column: 41, scope: !7006)
!7015 = !DILocation(line: 273, column: 16, scope: !7006)
!7016 = !DILocation(line: 274, column: 16, scope: !7006)
!7017 = !DILocation(line: 274, column: 23, scope: !7006)
!7018 = !DILocation(line: 275, column: 34, scope: !7006)
!7019 = !DILocation(line: 275, column: 41, scope: !7006)
!7020 = !DILocation(line: 275, column: 16, scope: !7006)
!7021 = !DILocation(line: 270, column: 3, scope: !7006)
!7022 = !DILocation(line: 277, column: 23, scope: !7006)
!7023 = !DILocation(line: 277, column: 27, scope: !7006)
!7024 = !DILocation(line: 277, column: 3, scope: !7006)
!7025 = !DILocation(line: 278, column: 2, scope: !7006)
!7026 = !DILocation(line: 279, column: 1, scope: !2507)
!7027 = distinct !DISubprogram(name: "stitch_preview_delete", scope: !3, file: !3, line: 232, type: !7028, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!7028 = !DISubroutineType(types: !7029)
!7029 = !{null, !2490}
!7030 = !DILocalVariable(name: "stitch_preview", arg: 1, scope: !7027, file: !3, line: 232, type: !2490)
!7031 = !DILocation(line: 232, column: 52, scope: !7027)
!7032 = !DILocation(line: 234, column: 6, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7027, file: !3, line: 234, column: 6)
!7034 = !DILocation(line: 234, column: 6, scope: !7027)
!7035 = !DILocation(line: 235, column: 7, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 235, column: 7)
!7037 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 234, column: 22)
!7038 = !DILocation(line: 235, column: 23, scope: !7036)
!7039 = !DILocation(line: 235, column: 7, scope: !7037)
!7040 = !DILocation(line: 236, column: 4, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 235, column: 38)
!7042 = !DILocation(line: 236, column: 14, scope: !7041)
!7043 = !DILocation(line: 236, column: 30, scope: !7041)
!7044 = !DILocation(line: 237, column: 4, scope: !7041)
!7045 = !DILocation(line: 237, column: 20, scope: !7041)
!7046 = !DILocation(line: 237, column: 34, scope: !7041)
!7047 = !DILocation(line: 238, column: 3, scope: !7041)
!7048 = !DILocation(line: 239, column: 7, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 239, column: 7)
!7050 = !DILocation(line: 239, column: 23, scope: !7049)
!7051 = !DILocation(line: 239, column: 7, scope: !7037)
!7052 = !DILocation(line: 240, column: 4, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 239, column: 40)
!7054 = !DILocation(line: 240, column: 14, scope: !7053)
!7055 = !DILocation(line: 240, column: 30, scope: !7053)
!7056 = !DILocation(line: 241, column: 4, scope: !7053)
!7057 = !DILocation(line: 241, column: 20, scope: !7053)
!7058 = !DILocation(line: 241, column: 36, scope: !7053)
!7059 = !DILocation(line: 242, column: 3, scope: !7053)
!7060 = !DILocation(line: 243, column: 7, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 243, column: 7)
!7062 = !DILocation(line: 243, column: 23, scope: !7061)
!7063 = !DILocation(line: 243, column: 7, scope: !7037)
!7064 = !DILocation(line: 244, column: 4, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 243, column: 43)
!7066 = !DILocation(line: 244, column: 14, scope: !7065)
!7067 = !DILocation(line: 244, column: 30, scope: !7065)
!7068 = !DILocation(line: 245, column: 4, scope: !7065)
!7069 = !DILocation(line: 245, column: 20, scope: !7065)
!7070 = !DILocation(line: 245, column: 39, scope: !7065)
!7071 = !DILocation(line: 246, column: 3, scope: !7065)
!7072 = !DILocation(line: 247, column: 7, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 247, column: 7)
!7074 = !DILocation(line: 247, column: 23, scope: !7073)
!7075 = !DILocation(line: 247, column: 7, scope: !7037)
!7076 = !DILocation(line: 248, column: 4, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7073, file: !3, line: 247, column: 45)
!7078 = !DILocation(line: 248, column: 14, scope: !7077)
!7079 = !DILocation(line: 248, column: 30, scope: !7077)
!7080 = !DILocation(line: 249, column: 4, scope: !7077)
!7081 = !DILocation(line: 249, column: 20, scope: !7077)
!7082 = !DILocation(line: 249, column: 41, scope: !7077)
!7083 = !DILocation(line: 250, column: 3, scope: !7077)
!7084 = !DILocation(line: 251, column: 7, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 251, column: 7)
!7086 = !DILocation(line: 251, column: 23, scope: !7085)
!7087 = !DILocation(line: 251, column: 7, scope: !7037)
!7088 = !DILocation(line: 252, column: 4, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7085, file: !3, line: 251, column: 36)
!7090 = !DILocation(line: 252, column: 14, scope: !7089)
!7091 = !DILocation(line: 252, column: 30, scope: !7089)
!7092 = !DILocation(line: 253, column: 4, scope: !7089)
!7093 = !DILocation(line: 253, column: 20, scope: !7089)
!7094 = !DILocation(line: 253, column: 32, scope: !7089)
!7095 = !DILocation(line: 254, column: 3, scope: !7089)
!7096 = !DILocation(line: 255, column: 3, scope: !7037)
!7097 = !DILocation(line: 255, column: 13, scope: !7037)
!7098 = !DILocation(line: 256, column: 2, scope: !7037)
!7099 = !DILocation(line: 257, column: 1, scope: !7027)
!7100 = distinct !DISubprogram(name: "BM_iter_init", scope: !4341, file: !4341, line: 53, type: !7101, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!7101 = !DISubroutineType(types: !7102)
!7102 = !{!1006, !4344, !2388, !13, !56}
!7103 = !DILocalVariable(name: "iter", arg: 1, scope: !7100, file: !4341, line: 53, type: !4344)
!7104 = !DILocation(line: 53, column: 38, scope: !7100)
!7105 = !DILocalVariable(name: "bm", arg: 2, scope: !7100, file: !4341, line: 53, type: !2388)
!7106 = !DILocation(line: 53, column: 51, scope: !7100)
!7107 = !DILocalVariable(name: "itype", arg: 3, scope: !7100, file: !4341, line: 53, type: !13)
!7108 = !DILocation(line: 53, column: 66, scope: !7100)
!7109 = !DILocalVariable(name: "data", arg: 4, scope: !7100, file: !4341, line: 53, type: !56)
!7110 = !DILocation(line: 53, column: 79, scope: !7100)
!7111 = !DILocation(line: 56, column: 16, scope: !7100)
!7112 = !DILocation(line: 56, column: 2, scope: !7100)
!7113 = !DILocation(line: 56, column: 8, scope: !7100)
!7114 = !DILocation(line: 56, column: 14, scope: !7100)
!7115 = !DILocation(line: 59, column: 22, scope: !7100)
!7116 = !DILocation(line: 59, column: 10, scope: !7100)
!7117 = !DILocation(line: 59, column: 2, scope: !7100)
!7118 = !DILocation(line: 63, column: 4, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7100, file: !4341, line: 59, column: 29)
!7120 = !DILocation(line: 63, column: 10, scope: !7119)
!7121 = !DILocation(line: 63, column: 16, scope: !7119)
!7122 = !DILocation(line: 64, column: 4, scope: !7119)
!7123 = !DILocation(line: 64, column: 10, scope: !7119)
!7124 = !DILocation(line: 64, column: 16, scope: !7119)
!7125 = !DILocation(line: 65, column: 44, scope: !7119)
!7126 = !DILocation(line: 65, column: 48, scope: !7119)
!7127 = !DILocation(line: 65, column: 4, scope: !7119)
!7128 = !DILocation(line: 65, column: 10, scope: !7119)
!7129 = !DILocation(line: 65, column: 15, scope: !7119)
!7130 = !DILocation(line: 65, column: 28, scope: !7119)
!7131 = !DILocation(line: 65, column: 37, scope: !7119)
!7132 = !DILocation(line: 65, column: 42, scope: !7119)
!7133 = !DILocation(line: 66, column: 4, scope: !7119)
!7134 = !DILocation(line: 70, column: 4, scope: !7119)
!7135 = !DILocation(line: 70, column: 10, scope: !7119)
!7136 = !DILocation(line: 70, column: 16, scope: !7119)
!7137 = !DILocation(line: 71, column: 4, scope: !7119)
!7138 = !DILocation(line: 71, column: 10, scope: !7119)
!7139 = !DILocation(line: 71, column: 16, scope: !7119)
!7140 = !DILocation(line: 72, column: 44, scope: !7119)
!7141 = !DILocation(line: 72, column: 48, scope: !7119)
!7142 = !DILocation(line: 72, column: 4, scope: !7119)
!7143 = !DILocation(line: 72, column: 10, scope: !7119)
!7144 = !DILocation(line: 72, column: 15, scope: !7119)
!7145 = !DILocation(line: 72, column: 28, scope: !7119)
!7146 = !DILocation(line: 72, column: 37, scope: !7119)
!7147 = !DILocation(line: 72, column: 42, scope: !7119)
!7148 = !DILocation(line: 73, column: 4, scope: !7119)
!7149 = !DILocation(line: 77, column: 4, scope: !7119)
!7150 = !DILocation(line: 77, column: 10, scope: !7119)
!7151 = !DILocation(line: 77, column: 16, scope: !7119)
!7152 = !DILocation(line: 78, column: 4, scope: !7119)
!7153 = !DILocation(line: 78, column: 10, scope: !7119)
!7154 = !DILocation(line: 78, column: 16, scope: !7119)
!7155 = !DILocation(line: 79, column: 44, scope: !7119)
!7156 = !DILocation(line: 79, column: 48, scope: !7119)
!7157 = !DILocation(line: 79, column: 4, scope: !7119)
!7158 = !DILocation(line: 79, column: 10, scope: !7119)
!7159 = !DILocation(line: 79, column: 15, scope: !7119)
!7160 = !DILocation(line: 79, column: 28, scope: !7119)
!7161 = !DILocation(line: 79, column: 37, scope: !7119)
!7162 = !DILocation(line: 79, column: 42, scope: !7119)
!7163 = !DILocation(line: 80, column: 4, scope: !7119)
!7164 = !DILocation(line: 84, column: 4, scope: !7119)
!7165 = !DILocation(line: 84, column: 10, scope: !7119)
!7166 = !DILocation(line: 84, column: 16, scope: !7119)
!7167 = !DILocation(line: 85, column: 4, scope: !7119)
!7168 = !DILocation(line: 85, column: 10, scope: !7119)
!7169 = !DILocation(line: 85, column: 16, scope: !7119)
!7170 = !DILocation(line: 86, column: 46, scope: !7119)
!7171 = !DILocation(line: 86, column: 36, scope: !7119)
!7172 = !DILocation(line: 86, column: 4, scope: !7119)
!7173 = !DILocation(line: 86, column: 10, scope: !7119)
!7174 = !DILocation(line: 86, column: 15, scope: !7119)
!7175 = !DILocation(line: 86, column: 28, scope: !7119)
!7176 = !DILocation(line: 86, column: 34, scope: !7119)
!7177 = !DILocation(line: 87, column: 4, scope: !7119)
!7178 = !DILocation(line: 91, column: 4, scope: !7119)
!7179 = !DILocation(line: 91, column: 10, scope: !7119)
!7180 = !DILocation(line: 91, column: 16, scope: !7119)
!7181 = !DILocation(line: 92, column: 4, scope: !7119)
!7182 = !DILocation(line: 92, column: 10, scope: !7119)
!7183 = !DILocation(line: 92, column: 16, scope: !7119)
!7184 = !DILocation(line: 93, column: 46, scope: !7119)
!7185 = !DILocation(line: 93, column: 36, scope: !7119)
!7186 = !DILocation(line: 93, column: 4, scope: !7119)
!7187 = !DILocation(line: 93, column: 10, scope: !7119)
!7188 = !DILocation(line: 93, column: 15, scope: !7119)
!7189 = !DILocation(line: 93, column: 28, scope: !7119)
!7190 = !DILocation(line: 93, column: 34, scope: !7119)
!7191 = !DILocation(line: 94, column: 4, scope: !7119)
!7192 = !DILocation(line: 98, column: 4, scope: !7119)
!7193 = !DILocation(line: 98, column: 10, scope: !7119)
!7194 = !DILocation(line: 98, column: 16, scope: !7119)
!7195 = !DILocation(line: 99, column: 4, scope: !7119)
!7196 = !DILocation(line: 99, column: 10, scope: !7119)
!7197 = !DILocation(line: 99, column: 16, scope: !7119)
!7198 = !DILocation(line: 100, column: 46, scope: !7119)
!7199 = !DILocation(line: 100, column: 36, scope: !7119)
!7200 = !DILocation(line: 100, column: 4, scope: !7119)
!7201 = !DILocation(line: 100, column: 10, scope: !7119)
!7202 = !DILocation(line: 100, column: 15, scope: !7119)
!7203 = !DILocation(line: 100, column: 28, scope: !7119)
!7204 = !DILocation(line: 100, column: 34, scope: !7119)
!7205 = !DILocation(line: 101, column: 4, scope: !7119)
!7206 = !DILocation(line: 105, column: 4, scope: !7119)
!7207 = !DILocation(line: 105, column: 10, scope: !7119)
!7208 = !DILocation(line: 105, column: 16, scope: !7119)
!7209 = !DILocation(line: 106, column: 4, scope: !7119)
!7210 = !DILocation(line: 106, column: 10, scope: !7119)
!7211 = !DILocation(line: 106, column: 16, scope: !7119)
!7212 = !DILocation(line: 107, column: 46, scope: !7119)
!7213 = !DILocation(line: 107, column: 36, scope: !7119)
!7214 = !DILocation(line: 107, column: 4, scope: !7119)
!7215 = !DILocation(line: 107, column: 10, scope: !7119)
!7216 = !DILocation(line: 107, column: 15, scope: !7119)
!7217 = !DILocation(line: 107, column: 28, scope: !7119)
!7218 = !DILocation(line: 107, column: 34, scope: !7119)
!7219 = !DILocation(line: 108, column: 4, scope: !7119)
!7220 = !DILocation(line: 112, column: 4, scope: !7119)
!7221 = !DILocation(line: 112, column: 10, scope: !7119)
!7222 = !DILocation(line: 112, column: 16, scope: !7119)
!7223 = !DILocation(line: 113, column: 4, scope: !7119)
!7224 = !DILocation(line: 113, column: 10, scope: !7119)
!7225 = !DILocation(line: 113, column: 16, scope: !7119)
!7226 = !DILocation(line: 114, column: 46, scope: !7119)
!7227 = !DILocation(line: 114, column: 36, scope: !7119)
!7228 = !DILocation(line: 114, column: 4, scope: !7119)
!7229 = !DILocation(line: 114, column: 10, scope: !7119)
!7230 = !DILocation(line: 114, column: 15, scope: !7119)
!7231 = !DILocation(line: 114, column: 28, scope: !7119)
!7232 = !DILocation(line: 114, column: 34, scope: !7119)
!7233 = !DILocation(line: 115, column: 4, scope: !7119)
!7234 = !DILocation(line: 119, column: 4, scope: !7119)
!7235 = !DILocation(line: 119, column: 10, scope: !7119)
!7236 = !DILocation(line: 119, column: 16, scope: !7119)
!7237 = !DILocation(line: 120, column: 4, scope: !7119)
!7238 = !DILocation(line: 120, column: 10, scope: !7119)
!7239 = !DILocation(line: 120, column: 16, scope: !7119)
!7240 = !DILocation(line: 121, column: 46, scope: !7119)
!7241 = !DILocation(line: 121, column: 36, scope: !7119)
!7242 = !DILocation(line: 121, column: 4, scope: !7119)
!7243 = !DILocation(line: 121, column: 10, scope: !7119)
!7244 = !DILocation(line: 121, column: 15, scope: !7119)
!7245 = !DILocation(line: 121, column: 28, scope: !7119)
!7246 = !DILocation(line: 121, column: 34, scope: !7119)
!7247 = !DILocation(line: 122, column: 4, scope: !7119)
!7248 = !DILocation(line: 126, column: 4, scope: !7119)
!7249 = !DILocation(line: 126, column: 10, scope: !7119)
!7250 = !DILocation(line: 126, column: 16, scope: !7119)
!7251 = !DILocation(line: 127, column: 4, scope: !7119)
!7252 = !DILocation(line: 127, column: 10, scope: !7119)
!7253 = !DILocation(line: 127, column: 16, scope: !7119)
!7254 = !DILocation(line: 128, column: 46, scope: !7119)
!7255 = !DILocation(line: 128, column: 36, scope: !7119)
!7256 = !DILocation(line: 128, column: 4, scope: !7119)
!7257 = !DILocation(line: 128, column: 10, scope: !7119)
!7258 = !DILocation(line: 128, column: 15, scope: !7119)
!7259 = !DILocation(line: 128, column: 28, scope: !7119)
!7260 = !DILocation(line: 128, column: 34, scope: !7119)
!7261 = !DILocation(line: 129, column: 4, scope: !7119)
!7262 = !DILocation(line: 133, column: 4, scope: !7119)
!7263 = !DILocation(line: 133, column: 10, scope: !7119)
!7264 = !DILocation(line: 133, column: 16, scope: !7119)
!7265 = !DILocation(line: 134, column: 4, scope: !7119)
!7266 = !DILocation(line: 134, column: 10, scope: !7119)
!7267 = !DILocation(line: 134, column: 16, scope: !7119)
!7268 = !DILocation(line: 135, column: 46, scope: !7119)
!7269 = !DILocation(line: 135, column: 36, scope: !7119)
!7270 = !DILocation(line: 135, column: 4, scope: !7119)
!7271 = !DILocation(line: 135, column: 10, scope: !7119)
!7272 = !DILocation(line: 135, column: 15, scope: !7119)
!7273 = !DILocation(line: 135, column: 28, scope: !7119)
!7274 = !DILocation(line: 135, column: 34, scope: !7119)
!7275 = !DILocation(line: 136, column: 4, scope: !7119)
!7276 = !DILocation(line: 140, column: 4, scope: !7119)
!7277 = !DILocation(line: 140, column: 10, scope: !7119)
!7278 = !DILocation(line: 140, column: 16, scope: !7119)
!7279 = !DILocation(line: 141, column: 4, scope: !7119)
!7280 = !DILocation(line: 141, column: 10, scope: !7119)
!7281 = !DILocation(line: 141, column: 16, scope: !7119)
!7282 = !DILocation(line: 142, column: 46, scope: !7119)
!7283 = !DILocation(line: 142, column: 36, scope: !7119)
!7284 = !DILocation(line: 142, column: 4, scope: !7119)
!7285 = !DILocation(line: 142, column: 10, scope: !7119)
!7286 = !DILocation(line: 142, column: 15, scope: !7119)
!7287 = !DILocation(line: 142, column: 28, scope: !7119)
!7288 = !DILocation(line: 142, column: 34, scope: !7119)
!7289 = !DILocation(line: 143, column: 4, scope: !7119)
!7290 = !DILocation(line: 147, column: 4, scope: !7119)
!7291 = !DILocation(line: 147, column: 10, scope: !7119)
!7292 = !DILocation(line: 147, column: 16, scope: !7119)
!7293 = !DILocation(line: 148, column: 4, scope: !7119)
!7294 = !DILocation(line: 148, column: 10, scope: !7119)
!7295 = !DILocation(line: 148, column: 16, scope: !7119)
!7296 = !DILocation(line: 149, column: 46, scope: !7119)
!7297 = !DILocation(line: 149, column: 36, scope: !7119)
!7298 = !DILocation(line: 149, column: 4, scope: !7119)
!7299 = !DILocation(line: 149, column: 10, scope: !7119)
!7300 = !DILocation(line: 149, column: 15, scope: !7119)
!7301 = !DILocation(line: 149, column: 28, scope: !7119)
!7302 = !DILocation(line: 149, column: 34, scope: !7119)
!7303 = !DILocation(line: 150, column: 4, scope: !7119)
!7304 = !DILocation(line: 154, column: 4, scope: !7119)
!7305 = !DILocation(line: 158, column: 2, scope: !7100)
!7306 = !DILocation(line: 158, column: 8, scope: !7100)
!7307 = !DILocation(line: 158, column: 14, scope: !7100)
!7308 = !DILocation(line: 160, column: 2, scope: !7100)
!7309 = !DILocation(line: 161, column: 1, scope: !7100)
!7310 = distinct !DISubprogram(name: "_bm_elem_index_get", scope: !4364, file: !4364, line: 119, type: !7311, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!7311 = !DISubroutineType(types: !7312)
!7312 = !{!22, !4367}
!7313 = !DILocalVariable(name: "head", arg: 1, scope: !7310, file: !4364, line: 119, type: !4367)
!7314 = !DILocation(line: 119, column: 51, scope: !7310)
!7315 = !DILocation(line: 121, column: 9, scope: !7310)
!7316 = !DILocation(line: 121, column: 15, scope: !7310)
!7317 = !DILocation(line: 121, column: 2, scope: !7310)
!7318 = distinct !DISubprogram(name: "sub_v2_v2v2", scope: !4689, file: !4689, line: 338, type: !7319, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!7319 = !DISubroutineType(types: !7320)
!7320 = !{null, !2299, !4692, !4692}
!7321 = !DILocalVariable(name: "r", arg: 1, scope: !7318, file: !4689, line: 338, type: !2299)
!7322 = !DILocation(line: 338, column: 32, scope: !7318)
!7323 = !DILocalVariable(name: "a", arg: 2, scope: !7318, file: !4689, line: 338, type: !4692)
!7324 = !DILocation(line: 338, column: 50, scope: !7318)
!7325 = !DILocalVariable(name: "b", arg: 3, scope: !7318, file: !4689, line: 338, type: !4692)
!7326 = !DILocation(line: 338, column: 68, scope: !7318)
!7327 = !DILocation(line: 340, column: 9, scope: !7318)
!7328 = !DILocation(line: 340, column: 16, scope: !7318)
!7329 = !DILocation(line: 340, column: 14, scope: !7318)
!7330 = !DILocation(line: 340, column: 2, scope: !7318)
!7331 = !DILocation(line: 340, column: 7, scope: !7318)
!7332 = !DILocation(line: 341, column: 9, scope: !7318)
!7333 = !DILocation(line: 341, column: 16, scope: !7318)
!7334 = !DILocation(line: 341, column: 14, scope: !7318)
!7335 = !DILocation(line: 341, column: 2, scope: !7318)
!7336 = !DILocation(line: 341, column: 7, scope: !7318)
!7337 = !DILocation(line: 342, column: 1, scope: !7318)
!7338 = distinct !DISubprogram(name: "normalize_v2_v2", scope: !4689, file: !4689, line: 767, type: !7339, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!7339 = !DISubroutineType(types: !7340)
!7340 = !{!191, !2299, !4692}
!7341 = !DILocalVariable(name: "r", arg: 1, scope: !7338, file: !4689, line: 767, type: !2299)
!7342 = !DILocation(line: 767, column: 37, scope: !7338)
!7343 = !DILocalVariable(name: "a", arg: 2, scope: !7338, file: !4689, line: 767, type: !4692)
!7344 = !DILocation(line: 767, column: 55, scope: !7338)
!7345 = !DILocalVariable(name: "d", scope: !7338, file: !4689, line: 769, type: !191)
!7346 = !DILocation(line: 769, column: 8, scope: !7338)
!7347 = !DILocation(line: 769, column: 21, scope: !7338)
!7348 = !DILocation(line: 769, column: 24, scope: !7338)
!7349 = !DILocation(line: 769, column: 12, scope: !7338)
!7350 = !DILocation(line: 771, column: 6, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7338, file: !4689, line: 771, column: 6)
!7352 = !DILocation(line: 771, column: 8, scope: !7351)
!7353 = !DILocation(line: 771, column: 6, scope: !7338)
!7354 = !DILocation(line: 772, column: 13, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7351, file: !4689, line: 771, column: 20)
!7356 = !DILocation(line: 772, column: 7, scope: !7355)
!7357 = !DILocation(line: 772, column: 5, scope: !7355)
!7358 = !DILocation(line: 773, column: 15, scope: !7355)
!7359 = !DILocation(line: 773, column: 18, scope: !7355)
!7360 = !DILocation(line: 773, column: 28, scope: !7355)
!7361 = !DILocation(line: 773, column: 26, scope: !7355)
!7362 = !DILocation(line: 773, column: 3, scope: !7355)
!7363 = !DILocation(line: 774, column: 2, scope: !7355)
!7364 = !DILocation(line: 776, column: 11, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7351, file: !4689, line: 775, column: 7)
!7366 = !DILocation(line: 776, column: 3, scope: !7365)
!7367 = !DILocation(line: 777, column: 5, scope: !7365)
!7368 = !DILocation(line: 780, column: 9, scope: !7338)
!7369 = !DILocation(line: 780, column: 2, scope: !7338)
!7370 = distinct !DISubprogram(name: "dot_v2v2", scope: !4689, file: !4689, line: 614, type: !7371, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!7371 = !DISubroutineType(types: !7372)
!7372 = !{!191, !4692, !4692}
!7373 = !DILocalVariable(name: "a", arg: 1, scope: !7370, file: !4689, line: 614, type: !4692)
!7374 = !DILocation(line: 614, column: 36, scope: !7370)
!7375 = !DILocalVariable(name: "b", arg: 2, scope: !7370, file: !4689, line: 614, type: !4692)
!7376 = !DILocation(line: 614, column: 54, scope: !7370)
!7377 = !DILocation(line: 616, column: 9, scope: !7370)
!7378 = !DILocation(line: 616, column: 16, scope: !7370)
!7379 = !DILocation(line: 616, column: 14, scope: !7370)
!7380 = !DILocation(line: 616, column: 23, scope: !7370)
!7381 = !DILocation(line: 616, column: 30, scope: !7370)
!7382 = !DILocation(line: 616, column: 28, scope: !7370)
!7383 = !DILocation(line: 616, column: 21, scope: !7370)
!7384 = !DILocation(line: 616, column: 2, scope: !7370)
!7385 = distinct !DISubprogram(name: "mul_v2_v2fl", scope: !4689, file: !4689, line: 386, type: !7386, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!7386 = !DISubroutineType(types: !7387)
!7387 = !{null, !2299, !4692, !191}
!7388 = !DILocalVariable(name: "r", arg: 1, scope: !7385, file: !4689, line: 386, type: !2299)
!7389 = !DILocation(line: 386, column: 32, scope: !7385)
!7390 = !DILocalVariable(name: "a", arg: 2, scope: !7385, file: !4689, line: 386, type: !4692)
!7391 = !DILocation(line: 386, column: 50, scope: !7385)
!7392 = !DILocalVariable(name: "f", arg: 3, scope: !7385, file: !4689, line: 386, type: !191)
!7393 = !DILocation(line: 386, column: 62, scope: !7385)
!7394 = !DILocation(line: 388, column: 9, scope: !7385)
!7395 = !DILocation(line: 388, column: 16, scope: !7385)
!7396 = !DILocation(line: 388, column: 14, scope: !7385)
!7397 = !DILocation(line: 388, column: 2, scope: !7385)
!7398 = !DILocation(line: 388, column: 7, scope: !7385)
!7399 = !DILocation(line: 389, column: 9, scope: !7385)
!7400 = !DILocation(line: 389, column: 16, scope: !7385)
!7401 = !DILocation(line: 389, column: 14, scope: !7385)
!7402 = !DILocation(line: 389, column: 2, scope: !7385)
!7403 = !DILocation(line: 389, column: 7, scope: !7385)
!7404 = !DILocation(line: 390, column: 1, scope: !7385)
!7405 = distinct !DISubprogram(name: "zero_v2", scope: !4689, file: !4689, line: 37, type: !7406, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!7406 = !DISubroutineType(types: !7407)
!7407 = !{null, !2299}
!7408 = !DILocalVariable(name: "r", arg: 1, scope: !7405, file: !4689, line: 37, type: !2299)
!7409 = !DILocation(line: 37, column: 28, scope: !7405)
!7410 = !DILocation(line: 39, column: 2, scope: !7405)
!7411 = !DILocation(line: 39, column: 7, scope: !7405)
!7412 = !DILocation(line: 40, column: 2, scope: !7405)
!7413 = !DILocation(line: 40, column: 7, scope: !7405)
!7414 = !DILocation(line: 41, column: 1, scope: !7405)
!7415 = distinct !DISubprogram(name: "stitch_preview_init", scope: !3, file: !3, line: 209, type: !7416, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!7416 = !DISubroutineType(types: !7417)
!7417 = !{!2490}
!7418 = !DILocalVariable(name: "stitch_preview", scope: !7415, file: !3, line: 211, type: !2490)
!7419 = !DILocation(line: 211, column: 19, scope: !7415)
!7420 = !DILocation(line: 213, column: 19, scope: !7415)
!7421 = !DILocation(line: 213, column: 17, scope: !7415)
!7422 = !DILocation(line: 214, column: 2, scope: !7415)
!7423 = !DILocation(line: 214, column: 18, scope: !7415)
!7424 = !DILocation(line: 214, column: 32, scope: !7415)
!7425 = !DILocation(line: 215, column: 2, scope: !7415)
!7426 = !DILocation(line: 215, column: 18, scope: !7415)
!7427 = !DILocation(line: 215, column: 37, scope: !7415)
!7428 = !DILocation(line: 216, column: 2, scope: !7415)
!7429 = !DILocation(line: 216, column: 18, scope: !7415)
!7430 = !DILocation(line: 216, column: 39, scope: !7415)
!7431 = !DILocation(line: 217, column: 2, scope: !7415)
!7432 = !DILocation(line: 217, column: 18, scope: !7415)
!7433 = !DILocation(line: 217, column: 34, scope: !7415)
!7434 = !DILocation(line: 219, column: 2, scope: !7415)
!7435 = !DILocation(line: 219, column: 18, scope: !7415)
!7436 = !DILocation(line: 219, column: 30, scope: !7415)
!7437 = !DILocation(line: 220, column: 2, scope: !7415)
!7438 = !DILocation(line: 220, column: 18, scope: !7415)
!7439 = !DILocation(line: 220, column: 28, scope: !7415)
!7440 = !DILocation(line: 221, column: 2, scope: !7415)
!7441 = !DILocation(line: 221, column: 18, scope: !7415)
!7442 = !DILocation(line: 221, column: 33, scope: !7415)
!7443 = !DILocation(line: 222, column: 2, scope: !7415)
!7444 = !DILocation(line: 222, column: 18, scope: !7415)
!7445 = !DILocation(line: 222, column: 35, scope: !7415)
!7446 = !DILocation(line: 224, column: 2, scope: !7415)
!7447 = !DILocation(line: 224, column: 18, scope: !7415)
!7448 = !DILocation(line: 224, column: 30, scope: !7415)
!7449 = !DILocation(line: 226, column: 2, scope: !7415)
!7450 = !DILocation(line: 226, column: 18, scope: !7415)
!7451 = !DILocation(line: 226, column: 34, scope: !7415)
!7452 = !DILocation(line: 228, column: 9, scope: !7415)
!7453 = !DILocation(line: 228, column: 2, scope: !7415)
!7454 = distinct !DISubprogram(name: "determine_uv_stitchability", scope: !3, file: !3, line: 713, type: !7455, scopeLine: 714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!7455 = !DISubroutineType(types: !7456)
!7456 = !{null, !2206, !2300, !5146}
!7457 = !DILocalVariable(name: "element", arg: 1, scope: !7454, file: !3, line: 713, type: !2206)
!7458 = !DILocation(line: 713, column: 51, scope: !7454)
!7459 = !DILocalVariable(name: "state", arg: 2, scope: !7454, file: !3, line: 713, type: !2300)
!7460 = !DILocation(line: 713, column: 73, scope: !7454)
!7461 = !DILocalVariable(name: "island_stitch_data", arg: 3, scope: !7454, file: !3, line: 713, type: !5146)
!7462 = !DILocation(line: 713, column: 98, scope: !7454)
!7463 = !DILocalVariable(name: "vert_index", scope: !7454, file: !3, line: 715, type: !22)
!7464 = !DILocation(line: 715, column: 6, scope: !7454)
!7465 = !DILocalVariable(name: "element_iter", scope: !7454, file: !3, line: 716, type: !2206)
!7466 = !DILocation(line: 716, column: 13, scope: !7454)
!7467 = !DILocalVariable(name: "l", scope: !7454, file: !3, line: 717, type: !2262)
!7468 = !DILocation(line: 717, column: 10, scope: !7454)
!7469 = !DILocation(line: 719, column: 6, scope: !7454)
!7470 = !DILocation(line: 719, column: 15, scope: !7454)
!7471 = !DILocation(line: 719, column: 4, scope: !7454)
!7472 = !DILocation(line: 721, column: 15, scope: !7454)
!7473 = !DILocation(line: 721, column: 13, scope: !7454)
!7474 = !DILocation(line: 722, column: 17, scope: !7454)
!7475 = !DILocation(line: 722, column: 24, scope: !7454)
!7476 = !DILocation(line: 722, column: 37, scope: !7454)
!7477 = !DILocation(line: 722, column: 42, scope: !7454)
!7478 = !DILocation(line: 722, column: 15, scope: !7454)
!7479 = !DILocation(line: 724, column: 2, scope: !7454)
!7480 = !DILocation(line: 724, column: 9, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7482, file: !3, line: 724, column: 2)
!7482 = distinct !DILexicalBlock(scope: !7454, file: !3, line: 724, column: 2)
!7483 = !DILocation(line: 724, column: 2, scope: !7482)
!7484 = !DILocation(line: 725, column: 7, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7486, file: !3, line: 725, column: 7)
!7486 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 724, column: 58)
!7487 = !DILocation(line: 725, column: 21, scope: !7485)
!7488 = !DILocation(line: 725, column: 7, scope: !7486)
!7489 = !DILocation(line: 726, column: 36, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7491, file: !3, line: 726, column: 8)
!7491 = distinct !DILexicalBlock(scope: !7485, file: !3, line: 725, column: 31)
!7492 = !DILocation(line: 726, column: 45, scope: !7490)
!7493 = !DILocation(line: 726, column: 59, scope: !7490)
!7494 = !DILocation(line: 726, column: 8, scope: !7490)
!7495 = !DILocation(line: 726, column: 8, scope: !7491)
!7496 = !DILocation(line: 727, column: 5, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 726, column: 67)
!7498 = !DILocation(line: 727, column: 24, scope: !7497)
!7499 = !DILocation(line: 727, column: 38, scope: !7497)
!7500 = !DILocation(line: 727, column: 46, scope: !7497)
!7501 = !DILocation(line: 727, column: 66, scope: !7497)
!7502 = !DILocation(line: 728, column: 5, scope: !7497)
!7503 = !DILocation(line: 728, column: 24, scope: !7497)
!7504 = !DILocation(line: 728, column: 33, scope: !7497)
!7505 = !DILocation(line: 728, column: 41, scope: !7497)
!7506 = !DILocation(line: 728, column: 61, scope: !7497)
!7507 = !DILocation(line: 729, column: 5, scope: !7497)
!7508 = !DILocation(line: 729, column: 14, scope: !7497)
!7509 = !DILocation(line: 729, column: 19, scope: !7497)
!7510 = !DILocation(line: 730, column: 4, scope: !7497)
!7511 = !DILocation(line: 731, column: 3, scope: !7491)
!7512 = !DILocation(line: 732, column: 2, scope: !7486)
!7513 = !DILocation(line: 724, column: 38, scope: !7481)
!7514 = !DILocation(line: 724, column: 52, scope: !7481)
!7515 = !DILocation(line: 724, column: 36, scope: !7481)
!7516 = !DILocation(line: 724, column: 2, scope: !7481)
!7517 = distinct !{!7517, !7483, !7518}
!7518 = !DILocation(line: 732, column: 2, scope: !7482)
!7519 = !DILocation(line: 733, column: 1, scope: !7454)
!7520 = distinct !DISubprogram(name: "determine_uv_edge_stitchability", scope: !3, file: !3, line: 735, type: !7521, scopeLine: 736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!7521 = !DISubroutineType(types: !7522)
!7522 = !{null, !2198, !2300, !5146}
!7523 = !DILocalVariable(name: "edge", arg: 1, scope: !7520, file: !3, line: 735, type: !2198)
!7524 = !DILocation(line: 735, column: 53, scope: !7520)
!7525 = !DILocalVariable(name: "state", arg: 2, scope: !7520, file: !3, line: 735, type: !2300)
!7526 = !DILocation(line: 735, column: 72, scope: !7520)
!7527 = !DILocalVariable(name: "island_stitch_data", arg: 3, scope: !7520, file: !3, line: 735, type: !5146)
!7528 = !DILocation(line: 735, column: 97, scope: !7520)
!7529 = !DILocalVariable(name: "edge_iter", scope: !7520, file: !3, line: 737, type: !2198)
!7530 = !DILocation(line: 737, column: 10, scope: !7520)
!7531 = !DILocation(line: 737, column: 22, scope: !7520)
!7532 = !DILocation(line: 737, column: 28, scope: !7520)
!7533 = !DILocation(line: 739, column: 2, scope: !7520)
!7534 = !DILocation(line: 739, column: 9, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 739, column: 2)
!7536 = distinct !DILexicalBlock(scope: !7520, file: !3, line: 739, column: 2)
!7537 = !DILocation(line: 739, column: 2, scope: !7536)
!7538 = !DILocation(line: 740, column: 37, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 740, column: 7)
!7540 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 739, column: 49)
!7541 = !DILocation(line: 740, column: 43, scope: !7539)
!7542 = !DILocation(line: 740, column: 54, scope: !7539)
!7543 = !DILocation(line: 740, column: 7, scope: !7539)
!7544 = !DILocation(line: 740, column: 7, scope: !7540)
!7545 = !DILocation(line: 741, column: 4, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7539, file: !3, line: 740, column: 62)
!7547 = !DILocation(line: 741, column: 23, scope: !7546)
!7548 = !DILocation(line: 741, column: 34, scope: !7546)
!7549 = !DILocation(line: 741, column: 43, scope: !7546)
!7550 = !DILocation(line: 741, column: 51, scope: !7546)
!7551 = !DILocation(line: 741, column: 71, scope: !7546)
!7552 = !DILocation(line: 742, column: 4, scope: !7546)
!7553 = !DILocation(line: 742, column: 23, scope: !7546)
!7554 = !DILocation(line: 742, column: 29, scope: !7546)
!7555 = !DILocation(line: 742, column: 38, scope: !7546)
!7556 = !DILocation(line: 742, column: 46, scope: !7546)
!7557 = !DILocation(line: 742, column: 66, scope: !7546)
!7558 = !DILocation(line: 743, column: 4, scope: !7546)
!7559 = !DILocation(line: 743, column: 10, scope: !7546)
!7560 = !DILocation(line: 743, column: 15, scope: !7546)
!7561 = !DILocation(line: 744, column: 3, scope: !7546)
!7562 = !DILocation(line: 745, column: 2, scope: !7540)
!7563 = !DILocation(line: 739, column: 32, scope: !7535)
!7564 = !DILocation(line: 739, column: 43, scope: !7535)
!7565 = !DILocation(line: 739, column: 30, scope: !7535)
!7566 = !DILocation(line: 739, column: 2, scope: !7535)
!7567 = distinct !{!7567, !7537, !7568}
!7568 = !DILocation(line: 745, column: 2, scope: !7536)
!7569 = !DILocation(line: 746, column: 1, scope: !7520)
!7570 = distinct !DISubprogram(name: "stitch_validate_uv_stichability", scope: !3, file: !3, line: 784, type: !7571, scopeLine: 786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!7571 = !DISubroutineType(types: !7572)
!7572 = !{null, !2206, !2300, !5146, !5189}
!7573 = !DILocalVariable(name: "element", arg: 1, scope: !7570, file: !3, line: 784, type: !2206)
!7574 = !DILocation(line: 784, column: 56, scope: !7570)
!7575 = !DILocalVariable(name: "state", arg: 2, scope: !7570, file: !3, line: 784, type: !2300)
!7576 = !DILocation(line: 784, column: 78, scope: !7570)
!7577 = !DILocalVariable(name: "island_stitch_data", arg: 3, scope: !7570, file: !3, line: 784, type: !5146)
!7578 = !DILocation(line: 784, column: 103, scope: !7570)
!7579 = !DILocalVariable(name: "preview_position", arg: 4, scope: !7570, file: !3, line: 785, type: !5189)
!7580 = !DILocation(line: 785, column: 62, scope: !7570)
!7581 = !DILocalVariable(name: "element_iter", scope: !7570, file: !3, line: 787, type: !2206)
!7582 = !DILocation(line: 787, column: 13, scope: !7570)
!7583 = !DILocalVariable(name: "preview", scope: !7570, file: !3, line: 788, type: !2490)
!7584 = !DILocation(line: 788, column: 19, scope: !7570)
!7585 = !DILocation(line: 788, column: 29, scope: !7570)
!7586 = !DILocation(line: 788, column: 36, scope: !7570)
!7587 = !DILocalVariable(name: "vert_index", scope: !7570, file: !3, line: 789, type: !22)
!7588 = !DILocation(line: 789, column: 6, scope: !7570)
!7589 = !DILocalVariable(name: "l", scope: !7570, file: !3, line: 790, type: !2262)
!7590 = !DILocation(line: 790, column: 10, scope: !7570)
!7591 = !DILocation(line: 792, column: 6, scope: !7570)
!7592 = !DILocation(line: 792, column: 15, scope: !7570)
!7593 = !DILocation(line: 792, column: 4, scope: !7570)
!7594 = !DILocation(line: 794, column: 15, scope: !7570)
!7595 = !DILocation(line: 794, column: 13, scope: !7570)
!7596 = !DILocation(line: 796, column: 17, scope: !7570)
!7597 = !DILocation(line: 796, column: 24, scope: !7570)
!7598 = !DILocation(line: 796, column: 37, scope: !7570)
!7599 = !DILocation(line: 796, column: 42, scope: !7570)
!7600 = !DILocation(line: 796, column: 15, scope: !7570)
!7601 = !DILocation(line: 798, column: 2, scope: !7570)
!7602 = !DILocation(line: 798, column: 9, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7604, file: !3, line: 798, column: 2)
!7604 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 798, column: 2)
!7605 = !DILocation(line: 798, column: 2, scope: !7604)
!7606 = !DILocation(line: 799, column: 7, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7608, file: !3, line: 799, column: 7)
!7608 = distinct !DILexicalBlock(scope: !7603, file: !3, line: 798, column: 58)
!7609 = !DILocation(line: 799, column: 21, scope: !7607)
!7610 = !DILocation(line: 799, column: 7, scope: !7608)
!7611 = !DILocation(line: 800, column: 8, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 800, column: 8)
!7613 = distinct !DILexicalBlock(scope: !7607, file: !3, line: 799, column: 31)
!7614 = !DILocation(line: 800, column: 24, scope: !7612)
!7615 = !DILocation(line: 800, column: 21, scope: !7612)
!7616 = !DILocation(line: 800, column: 8, scope: !7613)
!7617 = !DILocation(line: 801, column: 5, scope: !7612)
!7618 = !DILocation(line: 802, column: 42, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 802, column: 8)
!7620 = !DILocation(line: 802, column: 51, scope: !7619)
!7621 = !DILocation(line: 802, column: 65, scope: !7619)
!7622 = !DILocation(line: 802, column: 8, scope: !7619)
!7623 = !DILocation(line: 802, column: 8, scope: !7613)
!7624 = !DILocation(line: 803, column: 10, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7626, file: !3, line: 803, column: 9)
!7626 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 802, column: 73)
!7627 = !DILocation(line: 803, column: 24, scope: !7625)
!7628 = !DILocation(line: 803, column: 34, scope: !7625)
!7629 = !DILocation(line: 803, column: 41, scope: !7625)
!7630 = !DILocation(line: 803, column: 31, scope: !7625)
!7631 = !DILocation(line: 803, column: 56, scope: !7625)
!7632 = !DILocation(line: 803, column: 60, scope: !7625)
!7633 = !DILocation(line: 803, column: 69, scope: !7625)
!7634 = !DILocation(line: 803, column: 79, scope: !7625)
!7635 = !DILocation(line: 803, column: 86, scope: !7625)
!7636 = !DILocation(line: 803, column: 76, scope: !7625)
!7637 = !DILocation(line: 803, column: 9, scope: !7626)
!7638 = !DILocation(line: 804, column: 6, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7625, file: !3, line: 803, column: 102)
!7640 = !DILocation(line: 804, column: 15, scope: !7639)
!7641 = !DILocation(line: 804, column: 20, scope: !7639)
!7642 = !DILocation(line: 805, column: 6, scope: !7639)
!7643 = !DILocation(line: 805, column: 15, scope: !7639)
!7644 = !DILocation(line: 805, column: 29, scope: !7639)
!7645 = !DILocation(line: 806, column: 45, scope: !7639)
!7646 = !DILocation(line: 806, column: 54, scope: !7639)
!7647 = !DILocation(line: 806, column: 61, scope: !7639)
!7648 = !DILocation(line: 806, column: 81, scope: !7639)
!7649 = !DILocation(line: 806, column: 6, scope: !7639)
!7650 = !DILocation(line: 807, column: 6, scope: !7639)
!7651 = !DILocation(line: 809, column: 4, scope: !7626)
!7652 = !DILocation(line: 810, column: 3, scope: !7613)
!7653 = !DILocation(line: 811, column: 2, scope: !7608)
!7654 = !DILocation(line: 798, column: 38, scope: !7603)
!7655 = !DILocation(line: 798, column: 52, scope: !7603)
!7656 = !DILocation(line: 798, column: 36, scope: !7603)
!7657 = !DILocation(line: 798, column: 2, scope: !7603)
!7658 = distinct !{!7658, !7605, !7659}
!7659 = !DILocation(line: 811, column: 2, scope: !7604)
!7660 = !DILocation(line: 814, column: 8, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 814, column: 6)
!7662 = !DILocation(line: 814, column: 17, scope: !7661)
!7663 = !DILocation(line: 814, column: 22, scope: !7661)
!7664 = !DILocation(line: 814, column: 6, scope: !7570)
!7665 = !DILocation(line: 815, column: 3, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 814, column: 44)
!7667 = !DILocation(line: 815, column: 12, scope: !7666)
!7668 = !DILocation(line: 815, column: 28, scope: !7666)
!7669 = !DILocation(line: 816, column: 2, scope: !7666)
!7670 = !DILocation(line: 817, column: 1, scope: !7570)
!7671 = distinct !DISubprogram(name: "stitch_validate_edge_stichability", scope: !3, file: !3, line: 820, type: !7672, scopeLine: 822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!7672 = !DISubroutineType(types: !7673)
!7673 = !{null, !2198, !2300, !5146, !5189}
!7674 = !DILocalVariable(name: "edge", arg: 1, scope: !7671, file: !3, line: 820, type: !2198)
!7675 = !DILocation(line: 820, column: 55, scope: !7671)
!7676 = !DILocalVariable(name: "state", arg: 2, scope: !7671, file: !3, line: 820, type: !2300)
!7677 = !DILocation(line: 820, column: 74, scope: !7671)
!7678 = !DILocalVariable(name: "island_stitch_data", arg: 3, scope: !7671, file: !3, line: 820, type: !5146)
!7679 = !DILocation(line: 820, column: 99, scope: !7671)
!7680 = !DILocalVariable(name: "preview_position", arg: 4, scope: !7671, file: !3, line: 821, type: !5189)
!7681 = !DILocation(line: 821, column: 64, scope: !7671)
!7682 = !DILocalVariable(name: "edge_iter", scope: !7671, file: !3, line: 823, type: !2198)
!7683 = !DILocation(line: 823, column: 10, scope: !7671)
!7684 = !DILocation(line: 823, column: 22, scope: !7671)
!7685 = !DILocation(line: 823, column: 28, scope: !7671)
!7686 = !DILocalVariable(name: "preview", scope: !7671, file: !3, line: 824, type: !2490)
!7687 = !DILocation(line: 824, column: 19, scope: !7671)
!7688 = !DILocation(line: 824, column: 29, scope: !7671)
!7689 = !DILocation(line: 824, column: 36, scope: !7671)
!7690 = !DILocation(line: 826, column: 2, scope: !7671)
!7691 = !DILocation(line: 826, column: 9, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7693, file: !3, line: 826, column: 2)
!7693 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 826, column: 2)
!7694 = !DILocation(line: 826, column: 2, scope: !7693)
!7695 = !DILocation(line: 827, column: 7, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 827, column: 7)
!7697 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 826, column: 49)
!7698 = !DILocation(line: 827, column: 20, scope: !7696)
!7699 = !DILocation(line: 827, column: 17, scope: !7696)
!7700 = !DILocation(line: 827, column: 7, scope: !7697)
!7701 = !DILocation(line: 828, column: 4, scope: !7696)
!7702 = !DILocation(line: 829, column: 43, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 829, column: 7)
!7704 = !DILocation(line: 829, column: 49, scope: !7703)
!7705 = !DILocation(line: 829, column: 60, scope: !7703)
!7706 = !DILocation(line: 829, column: 7, scope: !7703)
!7707 = !DILocation(line: 829, column: 7, scope: !7697)
!7708 = !DILocation(line: 830, column: 9, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 830, column: 8)
!7710 = distinct !DILexicalBlock(scope: !7703, file: !3, line: 829, column: 68)
!7711 = !DILocation(line: 830, column: 20, scope: !7709)
!7712 = !DILocation(line: 830, column: 29, scope: !7709)
!7713 = !DILocation(line: 830, column: 39, scope: !7709)
!7714 = !DILocation(line: 830, column: 46, scope: !7709)
!7715 = !DILocation(line: 830, column: 36, scope: !7709)
!7716 = !DILocation(line: 830, column: 61, scope: !7709)
!7717 = !DILocation(line: 830, column: 65, scope: !7709)
!7718 = !DILocation(line: 830, column: 71, scope: !7709)
!7719 = !DILocation(line: 830, column: 80, scope: !7709)
!7720 = !DILocation(line: 830, column: 90, scope: !7709)
!7721 = !DILocation(line: 830, column: 97, scope: !7709)
!7722 = !DILocation(line: 830, column: 87, scope: !7709)
!7723 = !DILocation(line: 830, column: 8, scope: !7710)
!7724 = !DILocation(line: 831, column: 5, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7709, file: !3, line: 830, column: 113)
!7726 = !DILocation(line: 831, column: 11, scope: !7725)
!7727 = !DILocation(line: 831, column: 16, scope: !7725)
!7728 = !DILocation(line: 832, column: 5, scope: !7725)
!7729 = !DILocation(line: 832, column: 14, scope: !7725)
!7730 = !DILocation(line: 832, column: 28, scope: !7725)
!7731 = !DILocation(line: 833, column: 44, scope: !7725)
!7732 = !DILocation(line: 833, column: 51, scope: !7725)
!7733 = !DILocation(line: 833, column: 55, scope: !7725)
!7734 = !DILocation(line: 833, column: 61, scope: !7725)
!7735 = !DILocation(line: 833, column: 67, scope: !7725)
!7736 = !DILocation(line: 833, column: 74, scope: !7725)
!7737 = !DILocation(line: 833, column: 94, scope: !7725)
!7738 = !DILocation(line: 833, column: 5, scope: !7725)
!7739 = !DILocation(line: 834, column: 44, scope: !7725)
!7740 = !DILocation(line: 834, column: 51, scope: !7725)
!7741 = !DILocation(line: 834, column: 55, scope: !7725)
!7742 = !DILocation(line: 834, column: 61, scope: !7725)
!7743 = !DILocation(line: 834, column: 67, scope: !7725)
!7744 = !DILocation(line: 834, column: 74, scope: !7725)
!7745 = !DILocation(line: 834, column: 94, scope: !7725)
!7746 = !DILocation(line: 834, column: 5, scope: !7725)
!7747 = !DILocation(line: 835, column: 5, scope: !7725)
!7748 = !DILocation(line: 837, column: 3, scope: !7710)
!7749 = !DILocation(line: 838, column: 2, scope: !7697)
!7750 = !DILocation(line: 826, column: 32, scope: !7692)
!7751 = !DILocation(line: 826, column: 43, scope: !7692)
!7752 = !DILocation(line: 826, column: 30, scope: !7692)
!7753 = !DILocation(line: 826, column: 2, scope: !7692)
!7754 = distinct !{!7754, !7694, !7755}
!7755 = !DILocation(line: 838, column: 2, scope: !7693)
!7756 = !DILocation(line: 841, column: 8, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 841, column: 6)
!7758 = !DILocation(line: 841, column: 14, scope: !7757)
!7759 = !DILocation(line: 841, column: 19, scope: !7757)
!7760 = !DILocation(line: 841, column: 6, scope: !7671)
!7761 = !DILocation(line: 842, column: 3, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7757, file: !3, line: 841, column: 41)
!7763 = !DILocation(line: 842, column: 12, scope: !7762)
!7764 = !DILocation(line: 842, column: 28, scope: !7762)
!7765 = !DILocation(line: 843, column: 2, scope: !7762)
!7766 = !DILocation(line: 844, column: 1, scope: !7671)
!7767 = distinct !DISubprogram(name: "getNumOfIslandUvs", scope: !3, file: !3, line: 281, type: !7768, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!7768 = !DISubroutineType(types: !7769)
!7769 = !{!22, !2464, !22}
!7770 = !DILocalVariable(name: "elementMap", arg: 1, scope: !7767, file: !3, line: 281, type: !2464)
!7771 = !DILocation(line: 281, column: 44, scope: !7767)
!7772 = !DILocalVariable(name: "island", arg: 2, scope: !7767, file: !3, line: 281, type: !22)
!7773 = !DILocation(line: 281, column: 60, scope: !7767)
!7774 = !DILocation(line: 283, column: 6, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 283, column: 6)
!7776 = !DILocation(line: 283, column: 16, scope: !7775)
!7777 = !DILocation(line: 283, column: 28, scope: !7775)
!7778 = !DILocation(line: 283, column: 41, scope: !7775)
!7779 = !DILocation(line: 283, column: 13, scope: !7775)
!7780 = !DILocation(line: 283, column: 6, scope: !7767)
!7781 = !DILocation(line: 284, column: 10, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 283, column: 46)
!7783 = !DILocation(line: 284, column: 22, scope: !7782)
!7784 = !DILocation(line: 284, column: 33, scope: !7782)
!7785 = !DILocation(line: 284, column: 45, scope: !7782)
!7786 = !DILocation(line: 284, column: 59, scope: !7782)
!7787 = !DILocation(line: 284, column: 31, scope: !7782)
!7788 = !DILocation(line: 284, column: 3, scope: !7782)
!7789 = !DILocation(line: 287, column: 10, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 286, column: 7)
!7791 = !DILocation(line: 287, column: 22, scope: !7790)
!7792 = !DILocation(line: 287, column: 36, scope: !7790)
!7793 = !DILocation(line: 287, column: 43, scope: !7790)
!7794 = !DILocation(line: 287, column: 50, scope: !7790)
!7795 = !DILocation(line: 287, column: 62, scope: !7790)
!7796 = !DILocation(line: 287, column: 76, scope: !7790)
!7797 = !DILocation(line: 287, column: 48, scope: !7790)
!7798 = !DILocation(line: 287, column: 3, scope: !7790)
!7799 = !DILocation(line: 289, column: 1, scope: !7767)
!7800 = distinct !DISubprogram(name: "stitch_set_face_preview_buffer_position", scope: !3, file: !3, line: 750, type: !7801, scopeLine: 751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!7801 = !DISubroutineType(types: !7802)
!7802 = !{null, !2288, !2490, !5189}
!7803 = !DILocalVariable(name: "efa", arg: 1, scope: !7800, file: !3, line: 750, type: !2288)
!7804 = !DILocation(line: 750, column: 61, scope: !7800)
!7805 = !DILocalVariable(name: "preview", arg: 2, scope: !7800, file: !3, line: 750, type: !2490)
!7806 = !DILocation(line: 750, column: 83, scope: !7800)
!7807 = !DILocalVariable(name: "preview_position", arg: 3, scope: !7800, file: !3, line: 750, type: !5189)
!7808 = !DILocation(line: 750, column: 109, scope: !7800)
!7809 = !DILocalVariable(name: "index", scope: !7800, file: !3, line: 752, type: !22)
!7810 = !DILocation(line: 752, column: 6, scope: !7800)
!7811 = !DILocation(line: 752, column: 14, scope: !7800)
!7812 = !DILocation(line: 754, column: 6, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7800, file: !3, line: 754, column: 6)
!7814 = !DILocation(line: 754, column: 23, scope: !7813)
!7815 = !DILocation(line: 754, column: 30, scope: !7813)
!7816 = !DILocation(line: 754, column: 44, scope: !7813)
!7817 = !DILocation(line: 754, column: 6, scope: !7800)
!7818 = !DILocation(line: 755, column: 43, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7813, file: !3, line: 754, column: 66)
!7820 = !DILocation(line: 755, column: 52, scope: !7819)
!7821 = !DILocation(line: 755, column: 64, scope: !7819)
!7822 = !DILocation(line: 755, column: 3, scope: !7819)
!7823 = !DILocation(line: 755, column: 20, scope: !7819)
!7824 = !DILocation(line: 755, column: 27, scope: !7819)
!7825 = !DILocation(line: 755, column: 41, scope: !7819)
!7826 = !DILocation(line: 756, column: 48, scope: !7819)
!7827 = !DILocation(line: 756, column: 57, scope: !7819)
!7828 = !DILocation(line: 756, column: 66, scope: !7819)
!7829 = !DILocation(line: 756, column: 3, scope: !7819)
!7830 = !DILocation(line: 756, column: 20, scope: !7819)
!7831 = !DILocation(line: 756, column: 27, scope: !7819)
!7832 = !DILocation(line: 756, column: 46, scope: !7819)
!7833 = !DILocation(line: 757, column: 27, scope: !7819)
!7834 = !DILocation(line: 757, column: 32, scope: !7819)
!7835 = !DILocation(line: 757, column: 3, scope: !7819)
!7836 = !DILocation(line: 757, column: 12, scope: !7819)
!7837 = !DILocation(line: 757, column: 24, scope: !7819)
!7838 = !DILocation(line: 758, column: 2, scope: !7819)
!7839 = !DILocation(line: 759, column: 1, scope: !7800)
!7840 = distinct !DISubprogram(name: "copy_v2_v2", scope: !4689, file: !4689, line: 58, type: !4690, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!7841 = !DILocalVariable(name: "r", arg: 1, scope: !7840, file: !4689, line: 58, type: !2299)
!7842 = !DILocation(line: 58, column: 31, scope: !7840)
!7843 = !DILocalVariable(name: "a", arg: 2, scope: !7840, file: !4689, line: 58, type: !4692)
!7844 = !DILocation(line: 58, column: 49, scope: !7840)
!7845 = !DILocation(line: 60, column: 9, scope: !7840)
!7846 = !DILocation(line: 60, column: 2, scope: !7840)
!7847 = !DILocation(line: 60, column: 7, scope: !7840)
!7848 = !DILocation(line: 61, column: 9, scope: !7840)
!7849 = !DILocation(line: 61, column: 2, scope: !7840)
!7850 = !DILocation(line: 61, column: 7, scope: !7840)
!7851 = !DILocation(line: 62, column: 1, scope: !7840)
!7852 = distinct !DISubprogram(name: "stitch_check_uvs_state_stitchable", scope: !3, file: !3, line: 382, type: !7853, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!7853 = !DISubroutineType(types: !7854)
!7854 = !{!1006, !2206, !2206, !2300}
!7855 = !DILocalVariable(name: "element", arg: 1, scope: !7852, file: !3, line: 382, type: !2206)
!7856 = !DILocation(line: 382, column: 58, scope: !7852)
!7857 = !DILocalVariable(name: "element_iter", arg: 2, scope: !7852, file: !3, line: 382, type: !2206)
!7858 = !DILocation(line: 382, column: 78, scope: !7852)
!7859 = !DILocalVariable(name: "state", arg: 3, scope: !7852, file: !3, line: 382, type: !2300)
!7860 = !DILocation(line: 382, column: 105, scope: !7852)
!7861 = !DILocation(line: 384, column: 7, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7852, file: !3, line: 384, column: 6)
!7863 = !DILocation(line: 384, column: 14, scope: !7862)
!7864 = !DILocation(line: 384, column: 27, scope: !7862)
!7865 = !DILocation(line: 384, column: 30, scope: !7862)
!7866 = !DILocation(line: 384, column: 39, scope: !7862)
!7867 = !DILocation(line: 384, column: 49, scope: !7862)
!7868 = !DILocation(line: 384, column: 63, scope: !7862)
!7869 = !DILocation(line: 384, column: 46, scope: !7862)
!7870 = !DILocation(line: 384, column: 71, scope: !7862)
!7871 = !DILocation(line: 385, column: 8, scope: !7862)
!7872 = !DILocation(line: 385, column: 15, scope: !7862)
!7873 = !DILocation(line: 385, column: 25, scope: !7862)
!7874 = !DILocation(line: 385, column: 28, scope: !7862)
!7875 = !DILocation(line: 385, column: 37, scope: !7862)
!7876 = !DILocation(line: 385, column: 47, scope: !7862)
!7877 = !DILocation(line: 385, column: 61, scope: !7862)
!7878 = !DILocation(line: 385, column: 44, scope: !7862)
!7879 = !DILocation(line: 384, column: 6, scope: !7852)
!7880 = !DILocation(line: 387, column: 3, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7862, file: !3, line: 386, column: 2)
!7882 = !DILocation(line: 390, column: 37, scope: !7852)
!7883 = !DILocation(line: 390, column: 46, scope: !7852)
!7884 = !DILocation(line: 390, column: 60, scope: !7852)
!7885 = !DILocation(line: 390, column: 9, scope: !7852)
!7886 = !DILocation(line: 390, column: 2, scope: !7852)
!7887 = !DILocation(line: 391, column: 1, scope: !7852)
!7888 = distinct !DISubprogram(name: "stitch_check_edges_state_stitchable", scope: !3, file: !3, line: 394, type: !7889, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!7889 = !DISubroutineType(types: !7890)
!7890 = !{!1006, !2198, !2198, !2300}
!7891 = !DILocalVariable(name: "edge", arg: 1, scope: !7888, file: !3, line: 394, type: !2198)
!7892 = !DILocation(line: 394, column: 57, scope: !7888)
!7893 = !DILocalVariable(name: "edge_iter", arg: 2, scope: !7888, file: !3, line: 394, type: !2198)
!7894 = !DILocation(line: 394, column: 71, scope: !7888)
!7895 = !DILocalVariable(name: "state", arg: 3, scope: !7888, file: !3, line: 394, type: !2300)
!7896 = !DILocation(line: 394, column: 95, scope: !7888)
!7897 = !DILocation(line: 396, column: 7, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7888, file: !3, line: 396, column: 6)
!7899 = !DILocation(line: 396, column: 14, scope: !7898)
!7900 = !DILocation(line: 396, column: 27, scope: !7898)
!7901 = !DILocation(line: 396, column: 30, scope: !7898)
!7902 = !DILocation(line: 396, column: 36, scope: !7898)
!7903 = !DILocation(line: 396, column: 45, scope: !7898)
!7904 = !DILocation(line: 396, column: 55, scope: !7898)
!7905 = !DILocation(line: 396, column: 66, scope: !7898)
!7906 = !DILocation(line: 396, column: 75, scope: !7898)
!7907 = !DILocation(line: 396, column: 52, scope: !7898)
!7908 = !DILocation(line: 396, column: 83, scope: !7898)
!7909 = !DILocation(line: 397, column: 8, scope: !7898)
!7910 = !DILocation(line: 397, column: 15, scope: !7898)
!7911 = !DILocation(line: 397, column: 25, scope: !7898)
!7912 = !DILocation(line: 397, column: 28, scope: !7898)
!7913 = !DILocation(line: 397, column: 34, scope: !7898)
!7914 = !DILocation(line: 397, column: 43, scope: !7898)
!7915 = !DILocation(line: 397, column: 53, scope: !7898)
!7916 = !DILocation(line: 397, column: 64, scope: !7898)
!7917 = !DILocation(line: 397, column: 73, scope: !7898)
!7918 = !DILocation(line: 397, column: 50, scope: !7898)
!7919 = !DILocation(line: 396, column: 6, scope: !7888)
!7920 = !DILocation(line: 399, column: 3, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7898, file: !3, line: 398, column: 2)
!7922 = !DILocation(line: 402, column: 39, scope: !7888)
!7923 = !DILocation(line: 402, column: 45, scope: !7888)
!7924 = !DILocation(line: 402, column: 56, scope: !7888)
!7925 = !DILocation(line: 402, column: 9, scope: !7888)
!7926 = !DILocation(line: 402, column: 2, scope: !7888)
!7927 = !DILocation(line: 403, column: 1, scope: !7888)
!7928 = distinct !DISubprogram(name: "stitch_island_calculate_edge_rotation", scope: !3, file: !3, line: 487, type: !7929, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!7929 = !DISubroutineType(types: !7930)
!7930 = !{null, !2198, !2300, !5175, !872, !5146}
!7931 = !DILocalVariable(name: "edge", arg: 1, scope: !7928, file: !3, line: 487, type: !2198)
!7932 = !DILocation(line: 487, column: 59, scope: !7928)
!7933 = !DILocalVariable(name: "state", arg: 2, scope: !7928, file: !3, line: 487, type: !2300)
!7934 = !DILocation(line: 487, column: 78, scope: !7928)
!7935 = !DILocalVariable(name: "uv_average", arg: 3, scope: !7928, file: !3, line: 487, type: !5175)
!7936 = !DILocation(line: 487, column: 100, scope: !7928)
!7937 = !DILocalVariable(name: "uvfinal_map", arg: 4, scope: !7928, file: !3, line: 487, type: !872)
!7938 = !DILocation(line: 487, column: 126, scope: !7928)
!7939 = !DILocalVariable(name: "island_stitch_data", arg: 5, scope: !7928, file: !3, line: 487, type: !5146)
!7940 = !DILocation(line: 487, column: 157, scope: !7928)
!7941 = !DILocalVariable(name: "bm", scope: !7928, file: !3, line: 489, type: !2388)
!7942 = !DILocation(line: 489, column: 9, scope: !7928)
!7943 = !DILocation(line: 489, column: 14, scope: !7928)
!7944 = !DILocation(line: 489, column: 21, scope: !7928)
!7945 = !DILocation(line: 489, column: 25, scope: !7928)
!7946 = !DILocalVariable(name: "element1", scope: !7928, file: !3, line: 490, type: !2206)
!7947 = !DILocation(line: 490, column: 13, scope: !7928)
!7948 = !DILocalVariable(name: "element2", scope: !7928, file: !3, line: 490, type: !2206)
!7949 = !DILocation(line: 490, column: 24, scope: !7928)
!7950 = !DILocalVariable(name: "uv1", scope: !7928, file: !3, line: 491, type: !419)
!7951 = !DILocation(line: 491, column: 8, scope: !7928)
!7952 = !DILocalVariable(name: "uv2", scope: !7928, file: !3, line: 491, type: !419)
!7953 = !DILocation(line: 491, column: 16, scope: !7928)
!7954 = !DILocalVariable(name: "edgecos", scope: !7928, file: !3, line: 492, type: !191)
!7955 = !DILocation(line: 492, column: 8, scope: !7928)
!7956 = !DILocalVariable(name: "edgesin", scope: !7928, file: !3, line: 492, type: !191)
!7957 = !DILocation(line: 492, column: 17, scope: !7928)
!7958 = !DILocalVariable(name: "index1", scope: !7928, file: !3, line: 493, type: !22)
!7959 = !DILocation(line: 493, column: 6, scope: !7928)
!7960 = !DILocalVariable(name: "index2", scope: !7928, file: !3, line: 493, type: !22)
!7961 = !DILocation(line: 493, column: 14, scope: !7928)
!7962 = !DILocalVariable(name: "rotation", scope: !7928, file: !3, line: 494, type: !191)
!7963 = !DILocation(line: 494, column: 8, scope: !7928)
!7964 = !DILocalVariable(name: "luv1", scope: !7928, file: !3, line: 495, type: !4641)
!7965 = !DILocation(line: 495, column: 11, scope: !7928)
!7966 = !DILocalVariable(name: "luv2", scope: !7928, file: !3, line: 495, type: !4641)
!7967 = !DILocation(line: 495, column: 18, scope: !7928)
!7968 = !DILocation(line: 497, column: 13, scope: !7928)
!7969 = !DILocation(line: 497, column: 20, scope: !7928)
!7970 = !DILocation(line: 497, column: 24, scope: !7928)
!7971 = !DILocation(line: 497, column: 30, scope: !7928)
!7972 = !DILocation(line: 497, column: 11, scope: !7928)
!7973 = !DILocation(line: 498, column: 13, scope: !7928)
!7974 = !DILocation(line: 498, column: 20, scope: !7928)
!7975 = !DILocation(line: 498, column: 24, scope: !7928)
!7976 = !DILocation(line: 498, column: 30, scope: !7928)
!7977 = !DILocation(line: 498, column: 11, scope: !7928)
!7978 = !DILocation(line: 500, column: 31, scope: !7928)
!7979 = !DILocation(line: 500, column: 35, scope: !7928)
!7980 = !DILocation(line: 500, column: 42, scope: !7928)
!7981 = !DILocation(line: 500, column: 52, scope: !7928)
!7982 = !DILocation(line: 500, column: 55, scope: !7928)
!7983 = !DILocation(line: 500, column: 60, scope: !7928)
!7984 = !DILocation(line: 500, column: 9, scope: !7928)
!7985 = !DILocation(line: 500, column: 7, scope: !7928)
!7986 = !DILocation(line: 501, column: 31, scope: !7928)
!7987 = !DILocation(line: 501, column: 35, scope: !7928)
!7988 = !DILocation(line: 501, column: 42, scope: !7928)
!7989 = !DILocation(line: 501, column: 52, scope: !7928)
!7990 = !DILocation(line: 501, column: 55, scope: !7928)
!7991 = !DILocation(line: 501, column: 60, scope: !7928)
!7992 = !DILocation(line: 501, column: 9, scope: !7928)
!7993 = !DILocation(line: 501, column: 7, scope: !7928)
!7994 = !DILocation(line: 503, column: 6, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 503, column: 6)
!7996 = !DILocation(line: 503, column: 13, scope: !7995)
!7997 = !DILocation(line: 503, column: 18, scope: !7995)
!7998 = !DILocation(line: 503, column: 6, scope: !7928)
!7999 = !DILocation(line: 504, column: 12, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7995, file: !3, line: 503, column: 34)
!8001 = !DILocation(line: 504, column: 24, scope: !8000)
!8002 = !DILocation(line: 504, column: 35, scope: !8000)
!8003 = !DILocation(line: 504, column: 42, scope: !8000)
!8004 = !DILocation(line: 504, column: 55, scope: !8000)
!8005 = !DILocation(line: 504, column: 33, scope: !8000)
!8006 = !DILocation(line: 504, column: 10, scope: !8000)
!8007 = !DILocation(line: 505, column: 12, scope: !8000)
!8008 = !DILocation(line: 505, column: 24, scope: !8000)
!8009 = !DILocation(line: 505, column: 35, scope: !8000)
!8010 = !DILocation(line: 505, column: 42, scope: !8000)
!8011 = !DILocation(line: 505, column: 55, scope: !8000)
!8012 = !DILocation(line: 505, column: 33, scope: !8000)
!8013 = !DILocation(line: 505, column: 10, scope: !8000)
!8014 = !DILocation(line: 506, column: 2, scope: !8000)
!8015 = !DILocation(line: 508, column: 12, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !7995, file: !3, line: 507, column: 7)
!8017 = !DILocation(line: 508, column: 18, scope: !8016)
!8018 = !DILocation(line: 508, column: 10, scope: !8016)
!8019 = !DILocation(line: 509, column: 12, scope: !8016)
!8020 = !DILocation(line: 509, column: 18, scope: !8016)
!8021 = !DILocation(line: 509, column: 10, scope: !8016)
!8022 = !DILocation(line: 513, column: 11, scope: !7928)
!8023 = !DILocation(line: 513, column: 17, scope: !7928)
!8024 = !DILocation(line: 513, column: 25, scope: !7928)
!8025 = !DILocation(line: 513, column: 31, scope: !7928)
!8026 = !DILocation(line: 513, column: 23, scope: !7928)
!8027 = !DILocation(line: 513, column: 2, scope: !7928)
!8028 = !DILocation(line: 513, column: 9, scope: !7928)
!8029 = !DILocation(line: 514, column: 11, scope: !7928)
!8030 = !DILocation(line: 514, column: 17, scope: !7928)
!8031 = !DILocation(line: 514, column: 25, scope: !7928)
!8032 = !DILocation(line: 514, column: 31, scope: !7928)
!8033 = !DILocation(line: 514, column: 23, scope: !7928)
!8034 = !DILocation(line: 514, column: 2, scope: !7928)
!8035 = !DILocation(line: 514, column: 9, scope: !7928)
!8036 = !DILocation(line: 516, column: 12, scope: !7928)
!8037 = !DILocation(line: 516, column: 19, scope: !7928)
!8038 = !DILocation(line: 516, column: 2, scope: !7928)
!8039 = !DILocation(line: 516, column: 9, scope: !7928)
!8040 = !DILocation(line: 518, column: 11, scope: !7928)
!8041 = !DILocation(line: 518, column: 22, scope: !7928)
!8042 = !DILocation(line: 518, column: 30, scope: !7928)
!8043 = !DILocation(line: 518, column: 38, scope: !7928)
!8044 = !DILocation(line: 518, column: 49, scope: !7928)
!8045 = !DILocation(line: 518, column: 57, scope: !7928)
!8046 = !DILocation(line: 518, column: 36, scope: !7928)
!8047 = !DILocation(line: 518, column: 2, scope: !7928)
!8048 = !DILocation(line: 518, column: 9, scope: !7928)
!8049 = !DILocation(line: 519, column: 11, scope: !7928)
!8050 = !DILocation(line: 519, column: 22, scope: !7928)
!8051 = !DILocation(line: 519, column: 30, scope: !7928)
!8052 = !DILocation(line: 519, column: 38, scope: !7928)
!8053 = !DILocation(line: 519, column: 49, scope: !7928)
!8054 = !DILocation(line: 519, column: 57, scope: !7928)
!8055 = !DILocation(line: 519, column: 36, scope: !7928)
!8056 = !DILocation(line: 519, column: 2, scope: !7928)
!8057 = !DILocation(line: 519, column: 9, scope: !7928)
!8058 = !DILocation(line: 521, column: 12, scope: !7928)
!8059 = !DILocation(line: 521, column: 19, scope: !7928)
!8060 = !DILocation(line: 521, column: 2, scope: !7928)
!8061 = !DILocation(line: 521, column: 9, scope: !7928)
!8062 = !DILocation(line: 523, column: 15, scope: !7928)
!8063 = !DILocation(line: 523, column: 2, scope: !7928)
!8064 = !DILocation(line: 524, column: 15, scope: !7928)
!8065 = !DILocation(line: 524, column: 2, scope: !7928)
!8066 = !DILocation(line: 526, column: 21, scope: !7928)
!8067 = !DILocation(line: 526, column: 26, scope: !7928)
!8068 = !DILocation(line: 526, column: 12, scope: !7928)
!8069 = !DILocation(line: 526, column: 10, scope: !7928)
!8070 = !DILocation(line: 527, column: 23, scope: !7928)
!8071 = !DILocation(line: 527, column: 28, scope: !7928)
!8072 = !DILocation(line: 527, column: 12, scope: !7928)
!8073 = !DILocation(line: 527, column: 10, scope: !7928)
!8074 = !DILocation(line: 528, column: 46, scope: !7928)
!8075 = !DILocation(line: 528, column: 33, scope: !7928)
!8076 = !DILocation(line: 528, column: 19, scope: !7928)
!8077 = !DILocation(line: 528, column: 13, scope: !7928)
!8078 = !DILocation(line: 528, column: 11, scope: !7928)
!8079 = !DILocation(line: 530, column: 6, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 530, column: 6)
!8081 = !DILocation(line: 530, column: 14, scope: !8080)
!8082 = !DILocation(line: 530, column: 6, scope: !7928)
!8083 = !DILocation(line: 531, column: 3, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 530, column: 22)
!8085 = !DILocation(line: 531, column: 22, scope: !8084)
!8086 = !DILocation(line: 531, column: 32, scope: !8084)
!8087 = !DILocation(line: 531, column: 40, scope: !8084)
!8088 = !DILocation(line: 531, column: 56, scope: !8084)
!8089 = !DILocation(line: 532, column: 52, scope: !8084)
!8090 = !DILocation(line: 532, column: 3, scope: !8084)
!8091 = !DILocation(line: 532, column: 22, scope: !8084)
!8092 = !DILocation(line: 532, column: 32, scope: !8084)
!8093 = !DILocation(line: 532, column: 40, scope: !8084)
!8094 = !DILocation(line: 532, column: 49, scope: !8084)
!8095 = !DILocation(line: 533, column: 2, scope: !8084)
!8096 = !DILocation(line: 535, column: 3, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 534, column: 7)
!8098 = !DILocation(line: 535, column: 22, scope: !8097)
!8099 = !DILocation(line: 535, column: 32, scope: !8097)
!8100 = !DILocation(line: 535, column: 40, scope: !8097)
!8101 = !DILocation(line: 535, column: 60, scope: !8097)
!8102 = !DILocation(line: 536, column: 56, scope: !8097)
!8103 = !DILocation(line: 536, column: 3, scope: !8097)
!8104 = !DILocation(line: 536, column: 22, scope: !8097)
!8105 = !DILocation(line: 536, column: 32, scope: !8097)
!8106 = !DILocation(line: 536, column: 40, scope: !8097)
!8107 = !DILocation(line: 536, column: 53, scope: !8097)
!8108 = !DILocation(line: 538, column: 1, scope: !7928)
!8109 = distinct !DISubprogram(name: "_bm_elem_flag_disable", scope: !4364, file: !4364, line: 57, type: !8110, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!8110 = !DISubroutineType(types: !8111)
!8111 = !{null, !8112, !13}
!8112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64)
!8113 = !DILocalVariable(name: "head", arg: 1, scope: !8109, file: !4364, line: 57, type: !8112)
!8114 = !DILocation(line: 57, column: 49, scope: !8109)
!8115 = !DILocalVariable(name: "hflag", arg: 2, scope: !8109, file: !4364, line: 57, type: !13)
!8116 = !DILocation(line: 57, column: 66, scope: !8109)
!8117 = !DILocation(line: 59, column: 24, scope: !8109)
!8118 = !DILocation(line: 59, column: 23, scope: !8109)
!8119 = !DILocation(line: 59, column: 17, scope: !8109)
!8120 = !DILocation(line: 59, column: 2, scope: !8109)
!8121 = !DILocation(line: 59, column: 8, scope: !8109)
!8122 = !DILocation(line: 59, column: 14, scope: !8109)
!8123 = !DILocation(line: 60, column: 1, scope: !8109)
!8124 = distinct !DISubprogram(name: "stitch_island_calculate_vert_rotation", scope: !3, file: !3, line: 541, type: !7455, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!8125 = !DILocalVariable(name: "element", arg: 1, scope: !8124, file: !3, line: 541, type: !2206)
!8126 = !DILocation(line: 541, column: 62, scope: !8124)
!8127 = !DILocalVariable(name: "state", arg: 2, scope: !8124, file: !3, line: 541, type: !2300)
!8128 = !DILocation(line: 541, column: 84, scope: !8124)
!8129 = !DILocalVariable(name: "island_stitch_data", arg: 3, scope: !8124, file: !3, line: 541, type: !5146)
!8130 = !DILocation(line: 541, column: 109, scope: !8124)
!8131 = !DILocalVariable(name: "edgecos", scope: !8124, file: !3, line: 543, type: !191)
!8132 = !DILocation(line: 543, column: 8, scope: !8124)
!8133 = !DILocalVariable(name: "edgesin", scope: !8124, file: !3, line: 543, type: !191)
!8134 = !DILocation(line: 543, column: 24, scope: !8124)
!8135 = !DILocalVariable(name: "index", scope: !8124, file: !3, line: 544, type: !22)
!8136 = !DILocation(line: 544, column: 6, scope: !8124)
!8137 = !DILocalVariable(name: "element_iter", scope: !8124, file: !3, line: 545, type: !2206)
!8138 = !DILocation(line: 545, column: 13, scope: !8124)
!8139 = !DILocalVariable(name: "rotation", scope: !8124, file: !3, line: 546, type: !191)
!8140 = !DILocation(line: 546, column: 8, scope: !8124)
!8141 = !DILocalVariable(name: "rotation_neg", scope: !8124, file: !3, line: 546, type: !191)
!8142 = !DILocation(line: 546, column: 22, scope: !8124)
!8143 = !DILocalVariable(name: "rot_elem", scope: !8124, file: !3, line: 547, type: !22)
!8144 = !DILocation(line: 547, column: 6, scope: !8124)
!8145 = !DILocalVariable(name: "rot_elem_neg", scope: !8124, file: !3, line: 547, type: !22)
!8146 = !DILocation(line: 547, column: 20, scope: !8124)
!8147 = !DILocalVariable(name: "l", scope: !8124, file: !3, line: 548, type: !2262)
!8148 = !DILocation(line: 548, column: 10, scope: !8124)
!8149 = !DILocation(line: 550, column: 6, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 550, column: 6)
!8151 = !DILocation(line: 550, column: 15, scope: !8150)
!8152 = !DILocation(line: 550, column: 25, scope: !8150)
!8153 = !DILocation(line: 550, column: 32, scope: !8150)
!8154 = !DILocation(line: 550, column: 22, scope: !8150)
!8155 = !DILocation(line: 550, column: 46, scope: !8150)
!8156 = !DILocation(line: 550, column: 50, scope: !8150)
!8157 = !DILocation(line: 550, column: 57, scope: !8150)
!8158 = !DILocation(line: 550, column: 6, scope: !8124)
!8159 = !DILocation(line: 551, column: 3, scope: !8150)
!8160 = !DILocation(line: 553, column: 6, scope: !8124)
!8161 = !DILocation(line: 553, column: 15, scope: !8124)
!8162 = !DILocation(line: 553, column: 4, scope: !8124)
!8163 = !DILocation(line: 555, column: 10, scope: !8124)
!8164 = !DILocation(line: 555, column: 8, scope: !8124)
!8165 = !DILocation(line: 557, column: 17, scope: !8124)
!8166 = !DILocation(line: 557, column: 24, scope: !8124)
!8167 = !DILocation(line: 557, column: 37, scope: !8124)
!8168 = !DILocation(line: 557, column: 42, scope: !8124)
!8169 = !DILocation(line: 557, column: 15, scope: !8124)
!8170 = !DILocation(line: 559, column: 2, scope: !8124)
!8171 = !DILocation(line: 559, column: 9, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 559, column: 2)
!8173 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 559, column: 2)
!8174 = !DILocation(line: 559, column: 2, scope: !8173)
!8175 = !DILocation(line: 560, column: 7, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8177, file: !3, line: 560, column: 7)
!8177 = distinct !DILexicalBlock(scope: !8172, file: !3, line: 559, column: 58)
!8178 = !DILocation(line: 560, column: 21, scope: !8176)
!8179 = !DILocation(line: 560, column: 30, scope: !8176)
!8180 = !DILocation(line: 560, column: 67, scope: !8176)
!8181 = !DILocation(line: 560, column: 76, scope: !8176)
!8182 = !DILocation(line: 560, column: 90, scope: !8176)
!8183 = !DILocation(line: 560, column: 33, scope: !8176)
!8184 = !DILocation(line: 560, column: 7, scope: !8177)
!8185 = !DILocalVariable(name: "index_tmp1", scope: !8186, file: !3, line: 561, type: !22)
!8186 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 560, column: 98)
!8187 = !DILocation(line: 561, column: 8, scope: !8186)
!8188 = !DILocalVariable(name: "index_tmp2", scope: !8186, file: !3, line: 561, type: !22)
!8189 = !DILocation(line: 561, column: 20, scope: !8186)
!8190 = !DILocalVariable(name: "normal", scope: !8186, file: !3, line: 562, type: !419)
!8191 = !DILocation(line: 562, column: 10, scope: !8186)
!8192 = !DILocation(line: 565, column: 9, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8186, file: !3, line: 565, column: 8)
!8194 = !DILocation(line: 565, column: 16, scope: !8193)
!8195 = !DILocation(line: 565, column: 26, scope: !8193)
!8196 = !DILocation(line: 565, column: 29, scope: !8193)
!8197 = !DILocation(line: 565, column: 43, scope: !8193)
!8198 = !DILocation(line: 565, column: 53, scope: !8193)
!8199 = !DILocation(line: 565, column: 60, scope: !8193)
!8200 = !DILocation(line: 565, column: 50, scope: !8193)
!8201 = !DILocation(line: 565, column: 8, scope: !8186)
!8202 = !DILocation(line: 566, column: 5, scope: !8193)
!8203 = !DILocation(line: 568, column: 17, scope: !8186)
!8204 = !DILocation(line: 568, column: 32, scope: !8186)
!8205 = !DILocation(line: 568, column: 39, scope: !8186)
!8206 = !DILocation(line: 568, column: 52, scope: !8186)
!8207 = !DILocation(line: 568, column: 30, scope: !8186)
!8208 = !DILocation(line: 568, column: 15, scope: !8186)
!8209 = !DILocation(line: 569, column: 17, scope: !8186)
!8210 = !DILocation(line: 569, column: 24, scope: !8186)
!8211 = !DILocation(line: 569, column: 28, scope: !8186)
!8212 = !DILocation(line: 569, column: 15, scope: !8186)
!8213 = !DILocation(line: 570, column: 17, scope: !8186)
!8214 = !DILocation(line: 570, column: 27, scope: !8186)
!8215 = !DILocation(line: 570, column: 34, scope: !8186)
!8216 = !DILocation(line: 570, column: 47, scope: !8186)
!8217 = !DILocation(line: 570, column: 25, scope: !8186)
!8218 = !DILocation(line: 570, column: 15, scope: !8186)
!8219 = !DILocation(line: 571, column: 17, scope: !8186)
!8220 = !DILocation(line: 571, column: 24, scope: !8186)
!8221 = !DILocation(line: 571, column: 28, scope: !8186)
!8222 = !DILocation(line: 571, column: 15, scope: !8186)
!8223 = !DILocation(line: 573, column: 17, scope: !8186)
!8224 = !DILocation(line: 573, column: 25, scope: !8186)
!8225 = !DILocation(line: 573, column: 32, scope: !8186)
!8226 = !DILocation(line: 573, column: 42, scope: !8186)
!8227 = !DILocation(line: 573, column: 53, scope: !8186)
!8228 = !DILocation(line: 573, column: 40, scope: !8186)
!8229 = !DILocation(line: 573, column: 4, scope: !8186)
!8230 = !DILocation(line: 574, column: 23, scope: !8186)
!8231 = !DILocation(line: 574, column: 31, scope: !8186)
!8232 = !DILocation(line: 574, column: 38, scope: !8186)
!8233 = !DILocation(line: 574, column: 48, scope: !8186)
!8234 = !DILocation(line: 574, column: 59, scope: !8186)
!8235 = !DILocation(line: 574, column: 46, scope: !8186)
!8236 = !DILocation(line: 574, column: 14, scope: !8186)
!8237 = !DILocation(line: 574, column: 12, scope: !8186)
!8238 = !DILocation(line: 575, column: 25, scope: !8186)
!8239 = !DILocation(line: 575, column: 33, scope: !8186)
!8240 = !DILocation(line: 575, column: 40, scope: !8186)
!8241 = !DILocation(line: 575, column: 50, scope: !8186)
!8242 = !DILocation(line: 575, column: 61, scope: !8186)
!8243 = !DILocation(line: 575, column: 48, scope: !8186)
!8244 = !DILocation(line: 575, column: 14, scope: !8186)
!8245 = !DILocation(line: 575, column: 12, scope: !8186)
!8246 = !DILocation(line: 576, column: 8, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8186, file: !3, line: 576, column: 8)
!8248 = !DILocation(line: 576, column: 16, scope: !8247)
!8249 = !DILocation(line: 576, column: 8, scope: !8186)
!8250 = !DILocation(line: 577, column: 53, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8247, file: !3, line: 576, column: 24)
!8252 = !DILocation(line: 577, column: 40, scope: !8251)
!8253 = !DILocation(line: 577, column: 26, scope: !8251)
!8254 = !DILocation(line: 577, column: 20, scope: !8251)
!8255 = !DILocation(line: 577, column: 17, scope: !8251)
!8256 = !DILocation(line: 578, column: 13, scope: !8251)
!8257 = !DILocation(line: 579, column: 4, scope: !8251)
!8258 = !DILocation(line: 581, column: 57, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8247, file: !3, line: 580, column: 9)
!8260 = !DILocation(line: 581, column: 44, scope: !8259)
!8261 = !DILocation(line: 581, column: 30, scope: !8259)
!8262 = !DILocation(line: 581, column: 24, scope: !8259)
!8263 = !DILocation(line: 581, column: 21, scope: !8259)
!8264 = !DILocation(line: 582, column: 17, scope: !8259)
!8265 = !DILocation(line: 584, column: 3, scope: !8186)
!8266 = !DILocation(line: 585, column: 2, scope: !8177)
!8267 = !DILocation(line: 559, column: 38, scope: !8172)
!8268 = !DILocation(line: 559, column: 52, scope: !8172)
!8269 = !DILocation(line: 559, column: 36, scope: !8172)
!8270 = !DILocation(line: 559, column: 2, scope: !8172)
!8271 = distinct !{!8271, !8174, !8272}
!8272 = !DILocation(line: 585, column: 2, scope: !8173)
!8273 = !DILocation(line: 587, column: 6, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 587, column: 6)
!8275 = !DILocation(line: 587, column: 13, scope: !8274)
!8276 = !DILocation(line: 587, column: 6, scope: !8124)
!8277 = !DILocation(line: 588, column: 12, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 587, column: 24)
!8279 = !DILocation(line: 589, column: 16, scope: !8278)
!8280 = !DILocation(line: 590, column: 2, scope: !8278)
!8281 = !DILocation(line: 591, column: 58, scope: !8124)
!8282 = !DILocation(line: 591, column: 2, scope: !8124)
!8283 = !DILocation(line: 591, column: 21, scope: !8124)
!8284 = !DILocation(line: 591, column: 30, scope: !8124)
!8285 = !DILocation(line: 591, column: 38, scope: !8124)
!8286 = !DILocation(line: 591, column: 55, scope: !8124)
!8287 = !DILocation(line: 592, column: 50, scope: !8124)
!8288 = !DILocation(line: 592, column: 2, scope: !8124)
!8289 = !DILocation(line: 592, column: 21, scope: !8124)
!8290 = !DILocation(line: 592, column: 30, scope: !8124)
!8291 = !DILocation(line: 592, column: 38, scope: !8124)
!8292 = !DILocation(line: 592, column: 47, scope: !8124)
!8293 = !DILocation(line: 593, column: 62, scope: !8124)
!8294 = !DILocation(line: 593, column: 2, scope: !8124)
!8295 = !DILocation(line: 593, column: 21, scope: !8124)
!8296 = !DILocation(line: 593, column: 30, scope: !8124)
!8297 = !DILocation(line: 593, column: 38, scope: !8124)
!8298 = !DILocation(line: 593, column: 59, scope: !8124)
!8299 = !DILocation(line: 594, column: 54, scope: !8124)
!8300 = !DILocation(line: 594, column: 2, scope: !8124)
!8301 = !DILocation(line: 594, column: 21, scope: !8124)
!8302 = !DILocation(line: 594, column: 30, scope: !8124)
!8303 = !DILocation(line: 594, column: 38, scope: !8124)
!8304 = !DILocation(line: 594, column: 51, scope: !8124)
!8305 = !DILocation(line: 595, column: 1, scope: !8124)
!8306 = distinct !DISubprogram(name: "stitch_propagate_uv_final_position", scope: !3, file: !3, line: 847, type: !8307, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!8307 = !DISubroutineType(types: !8308)
!8308 = !{null, !2639, !2206, !22, !5189, !5175, !2300, !8309}
!8309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1006)
!8310 = !DILocalVariable(name: "scene", arg: 1, scope: !8306, file: !3, line: 847, type: !2639)
!8311 = !DILocation(line: 847, column: 55, scope: !8306)
!8312 = !DILocalVariable(name: "element", arg: 2, scope: !8306, file: !3, line: 848, type: !2206)
!8313 = !DILocation(line: 848, column: 59, scope: !8306)
!8314 = !DILocalVariable(name: "index", arg: 3, scope: !8306, file: !3, line: 848, type: !22)
!8315 = !DILocation(line: 848, column: 72, scope: !8306)
!8316 = !DILocalVariable(name: "preview_position", arg: 4, scope: !8306, file: !3, line: 848, type: !5189)
!8317 = !DILocation(line: 848, column: 96, scope: !8306)
!8318 = !DILocalVariable(name: "final_position", arg: 5, scope: !8306, file: !3, line: 849, type: !5175)
!8319 = !DILocation(line: 849, column: 63, scope: !8306)
!8320 = !DILocalVariable(name: "state", arg: 6, scope: !8306, file: !3, line: 849, type: !2300)
!8321 = !DILocation(line: 849, column: 92, scope: !8306)
!8322 = !DILocalVariable(name: "final", arg: 7, scope: !8306, file: !3, line: 850, type: !8309)
!8323 = !DILocation(line: 850, column: 59, scope: !8306)
!8324 = !DILocalVariable(name: "bm", scope: !8306, file: !3, line: 852, type: !2388)
!8325 = !DILocation(line: 852, column: 9, scope: !8306)
!8326 = !DILocation(line: 852, column: 14, scope: !8306)
!8327 = !DILocation(line: 852, column: 21, scope: !8306)
!8328 = !DILocation(line: 852, column: 25, scope: !8306)
!8329 = !DILocalVariable(name: "preview", scope: !8306, file: !3, line: 853, type: !2490)
!8330 = !DILocation(line: 853, column: 19, scope: !8306)
!8331 = !DILocation(line: 853, column: 29, scope: !8306)
!8332 = !DILocation(line: 853, column: 36, scope: !8306)
!8333 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !8306, file: !3, line: 855, type: !3201)
!8334 = !DILocation(line: 855, column: 12, scope: !8306)
!8335 = !DILocation(line: 855, column: 55, scope: !8306)
!8336 = !DILocation(line: 855, column: 59, scope: !8306)
!8337 = !DILocation(line: 855, column: 32, scope: !8306)
!8338 = !DILocation(line: 857, column: 6, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8306, file: !3, line: 857, column: 6)
!8340 = !DILocation(line: 857, column: 15, scope: !8339)
!8341 = !DILocation(line: 857, column: 20, scope: !8339)
!8342 = !DILocation(line: 857, column: 6, scope: !8306)
!8343 = !DILocalVariable(name: "element_iter", scope: !8344, file: !3, line: 858, type: !2206)
!8344 = distinct !DILexicalBlock(scope: !8339, file: !3, line: 857, column: 41)
!8345 = !DILocation(line: 858, column: 14, scope: !8344)
!8346 = !DILocation(line: 858, column: 29, scope: !8344)
!8347 = !DILocation(line: 860, column: 3, scope: !8344)
!8348 = !DILocalVariable(name: "l", scope: !8349, file: !3, line: 861, type: !2262)
!8349 = distinct !DILexicalBlock(scope: !8344, file: !3, line: 860, column: 6)
!8350 = !DILocation(line: 861, column: 12, scope: !8349)
!8351 = !DILocalVariable(name: "luv", scope: !8349, file: !3, line: 862, type: !4641)
!8352 = !DILocation(line: 862, column: 13, scope: !8349)
!8353 = !DILocation(line: 864, column: 8, scope: !8349)
!8354 = !DILocation(line: 864, column: 22, scope: !8349)
!8355 = !DILocation(line: 864, column: 6, scope: !8349)
!8356 = !DILocation(line: 865, column: 32, scope: !8349)
!8357 = !DILocation(line: 865, column: 36, scope: !8349)
!8358 = !DILocation(line: 865, column: 43, scope: !8349)
!8359 = !DILocation(line: 865, column: 46, scope: !8349)
!8360 = !DILocation(line: 865, column: 51, scope: !8349)
!8361 = !DILocation(line: 865, column: 10, scope: !8349)
!8362 = !DILocation(line: 865, column: 8, scope: !8349)
!8363 = !DILocation(line: 867, column: 4, scope: !8349)
!8364 = !DILocation(line: 867, column: 18, scope: !8349)
!8365 = !DILocation(line: 867, column: 23, scope: !8349)
!8366 = !DILocation(line: 869, column: 8, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8349, file: !3, line: 869, column: 8)
!8368 = !DILocation(line: 869, column: 8, scope: !8349)
!8369 = !DILocation(line: 870, column: 16, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8367, file: !3, line: 869, column: 15)
!8371 = !DILocation(line: 870, column: 21, scope: !8370)
!8372 = !DILocation(line: 870, column: 25, scope: !8370)
!8373 = !DILocation(line: 870, column: 40, scope: !8370)
!8374 = !DILocation(line: 870, column: 47, scope: !8370)
!8375 = !DILocation(line: 870, column: 5, scope: !8370)
!8376 = !DILocation(line: 872, column: 29, scope: !8370)
!8377 = !DILocation(line: 872, column: 36, scope: !8370)
!8378 = !DILocation(line: 872, column: 40, scope: !8370)
!8379 = !DILocation(line: 872, column: 47, scope: !8370)
!8380 = !DILocation(line: 872, column: 57, scope: !8370)
!8381 = !DILocation(line: 872, column: 5, scope: !8370)
!8382 = !DILocation(line: 873, column: 4, scope: !8370)
!8383 = !DILocalVariable(name: "face_preview_pos", scope: !8384, file: !3, line: 875, type: !22)
!8384 = distinct !DILexicalBlock(scope: !8367, file: !3, line: 874, column: 9)
!8385 = !DILocation(line: 875, column: 9, scope: !8384)
!8386 = !DILocation(line: 875, column: 28, scope: !8384)
!8387 = !DILocation(line: 875, column: 45, scope: !8384)
!8388 = !DILocation(line: 875, column: 84, scope: !8384)
!8389 = !DILocation(line: 876, column: 9, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8384, file: !3, line: 876, column: 9)
!8391 = !DILocation(line: 876, column: 26, scope: !8390)
!8392 = !DILocation(line: 876, column: 9, scope: !8384)
!8393 = !DILocation(line: 877, column: 17, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 876, column: 48)
!8395 = !DILocation(line: 877, column: 26, scope: !8394)
!8396 = !DILocation(line: 877, column: 42, scope: !8394)
!8397 = !DILocation(line: 877, column: 40, scope: !8394)
!8398 = !DILocation(line: 877, column: 65, scope: !8394)
!8399 = !DILocation(line: 877, column: 79, scope: !8394)
!8400 = !DILocation(line: 877, column: 63, scope: !8394)
!8401 = !DILocation(line: 877, column: 59, scope: !8394)
!8402 = !DILocation(line: 878, column: 17, scope: !8394)
!8403 = !DILocation(line: 878, column: 32, scope: !8394)
!8404 = !DILocation(line: 878, column: 39, scope: !8394)
!8405 = !DILocation(line: 877, column: 6, scope: !8394)
!8406 = !DILocation(line: 879, column: 5, scope: !8394)
!8407 = !DILocation(line: 883, column: 10, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !8349, file: !3, line: 883, column: 8)
!8409 = !DILocation(line: 883, column: 17, scope: !8408)
!8410 = !DILocation(line: 883, column: 31, scope: !8408)
!8411 = !DILocation(line: 883, column: 37, scope: !8408)
!8412 = !DILocation(line: 883, column: 44, scope: !8408)
!8413 = !DILocation(line: 883, column: 55, scope: !8408)
!8414 = !DILocation(line: 883, column: 59, scope: !8408)
!8415 = !DILocation(line: 883, column: 73, scope: !8408)
!8416 = !DILocation(line: 883, column: 83, scope: !8408)
!8417 = !DILocation(line: 883, column: 90, scope: !8408)
!8418 = !DILocation(line: 883, column: 80, scope: !8408)
!8419 = !DILocation(line: 883, column: 8, scope: !8349)
!8420 = !DILocation(line: 884, column: 5, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8408, file: !3, line: 883, column: 107)
!8422 = !DILocation(line: 884, column: 19, scope: !8421)
!8423 = !DILocation(line: 884, column: 24, scope: !8421)
!8424 = !DILocation(line: 885, column: 4, scope: !8421)
!8425 = !DILocation(line: 887, column: 19, scope: !8349)
!8426 = !DILocation(line: 887, column: 33, scope: !8349)
!8427 = !DILocation(line: 887, column: 17, scope: !8349)
!8428 = !DILocation(line: 888, column: 3, scope: !8349)
!8429 = !DILocation(line: 888, column: 12, scope: !8344)
!8430 = !DILocation(line: 888, column: 25, scope: !8344)
!8431 = !DILocation(line: 888, column: 29, scope: !8344)
!8432 = !DILocation(line: 888, column: 43, scope: !8344)
!8433 = !DILocation(line: 888, column: 28, scope: !8344)
!8434 = !DILocation(line: 0, scope: !8344)
!8435 = distinct !{!8435, !8347, !8436}
!8436 = !DILocation(line: 888, column: 51, scope: !8344)
!8437 = !DILocation(line: 889, column: 2, scope: !8344)
!8438 = !DILocation(line: 890, column: 1, scope: !8306)
!8439 = distinct !DISubprogram(name: "stitch_calculate_island_snapping", scope: !3, file: !3, line: 406, type: !8440, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!8440 = !DISubroutineType(types: !8441)
!8441 = !{null, !2300, !5189, !2490, !5146, !22}
!8442 = !DILocalVariable(name: "state", arg: 1, scope: !8439, file: !3, line: 406, type: !2300)
!8443 = !DILocation(line: 406, column: 59, scope: !8439)
!8444 = !DILocalVariable(name: "preview_position", arg: 2, scope: !8439, file: !3, line: 406, type: !5189)
!8445 = !DILocation(line: 406, column: 83, scope: !8439)
!8446 = !DILocalVariable(name: "preview", arg: 3, scope: !8439, file: !3, line: 406, type: !2490)
!8447 = !DILocation(line: 406, column: 118, scope: !8439)
!8448 = !DILocalVariable(name: "island_stitch_data", arg: 4, scope: !8439, file: !3, line: 406, type: !5146)
!8449 = !DILocation(line: 406, column: 145, scope: !8439)
!8450 = !DILocalVariable(name: "final", arg: 5, scope: !8439, file: !3, line: 406, type: !22)
!8451 = !DILocation(line: 406, column: 169, scope: !8439)
!8452 = !DILocalVariable(name: "bm", scope: !8439, file: !3, line: 408, type: !2388)
!8453 = !DILocation(line: 408, column: 9, scope: !8439)
!8454 = !DILocation(line: 408, column: 14, scope: !8439)
!8455 = !DILocation(line: 408, column: 21, scope: !8439)
!8456 = !DILocation(line: 408, column: 25, scope: !8439)
!8457 = !DILocalVariable(name: "i", scope: !8439, file: !3, line: 409, type: !22)
!8458 = !DILocation(line: 409, column: 6, scope: !8439)
!8459 = !DILocalVariable(name: "element", scope: !8439, file: !3, line: 410, type: !2206)
!8460 = !DILocation(line: 410, column: 13, scope: !8439)
!8461 = !DILocation(line: 412, column: 9, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8439, file: !3, line: 412, column: 2)
!8463 = !DILocation(line: 412, column: 7, scope: !8462)
!8464 = !DILocation(line: 412, column: 14, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 412, column: 2)
!8466 = !DILocation(line: 412, column: 18, scope: !8465)
!8467 = !DILocation(line: 412, column: 25, scope: !8465)
!8468 = !DILocation(line: 412, column: 38, scope: !8465)
!8469 = !DILocation(line: 412, column: 16, scope: !8465)
!8470 = !DILocation(line: 412, column: 2, scope: !8462)
!8471 = !DILocation(line: 413, column: 7, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8473, file: !3, line: 413, column: 7)
!8473 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 412, column: 57)
!8474 = !DILocation(line: 413, column: 26, scope: !8472)
!8475 = !DILocation(line: 413, column: 29, scope: !8472)
!8476 = !DILocation(line: 413, column: 7, scope: !8473)
!8477 = !DILocalVariable(name: "numOfIslandUVs", scope: !8478, file: !3, line: 414, type: !22)
!8478 = distinct !DILexicalBlock(scope: !8472, file: !3, line: 413, column: 46)
!8479 = !DILocation(line: 414, column: 8, scope: !8478)
!8480 = !DILocalVariable(name: "j", scope: !8478, file: !3, line: 414, type: !22)
!8481 = !DILocation(line: 414, column: 28, scope: !8478)
!8482 = !DILocalVariable(name: "totelem", scope: !8478, file: !3, line: 415, type: !22)
!8483 = !DILocation(line: 415, column: 8, scope: !8478)
!8484 = !DILocation(line: 415, column: 18, scope: !8478)
!8485 = !DILocation(line: 415, column: 37, scope: !8478)
!8486 = !DILocation(line: 415, column: 40, scope: !8478)
!8487 = !DILocation(line: 415, column: 63, scope: !8478)
!8488 = !DILocation(line: 415, column: 82, scope: !8478)
!8489 = !DILocation(line: 415, column: 85, scope: !8478)
!8490 = !DILocation(line: 415, column: 61, scope: !8478)
!8491 = !DILocalVariable(name: "rotation", scope: !8478, file: !3, line: 416, type: !191)
!8492 = !DILocation(line: 416, column: 10, scope: !8478)
!8493 = !DILocalVariable(name: "rotation_mat", scope: !8478, file: !3, line: 417, type: !8494)
!8494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 128, elements: !8495)
!8495 = !{!421, !421}
!8496 = !DILocation(line: 417, column: 10, scope: !8478)
!8497 = !DILocation(line: 420, column: 8, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 420, column: 8)
!8499 = !DILocation(line: 420, column: 27, scope: !8498)
!8500 = !DILocation(line: 420, column: 30, scope: !8498)
!8501 = !DILocation(line: 420, column: 47, scope: !8498)
!8502 = !DILocation(line: 420, column: 8, scope: !8478)
!8503 = !DILocation(line: 421, column: 39, scope: !8498)
!8504 = !DILocation(line: 421, column: 58, scope: !8498)
!8505 = !DILocation(line: 421, column: 61, scope: !8498)
!8506 = !DILocation(line: 421, column: 5, scope: !8498)
!8507 = !DILocation(line: 421, column: 24, scope: !8498)
!8508 = !DILocation(line: 421, column: 27, scope: !8498)
!8509 = !DILocation(line: 421, column: 36, scope: !8498)
!8510 = !DILocation(line: 423, column: 8, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 423, column: 8)
!8512 = !DILocation(line: 423, column: 27, scope: !8511)
!8513 = !DILocation(line: 423, column: 30, scope: !8511)
!8514 = !DILocation(line: 423, column: 51, scope: !8511)
!8515 = !DILocation(line: 423, column: 8, scope: !8478)
!8516 = !DILocation(line: 424, column: 43, scope: !8511)
!8517 = !DILocation(line: 424, column: 62, scope: !8511)
!8518 = !DILocation(line: 424, column: 65, scope: !8511)
!8519 = !DILocation(line: 424, column: 5, scope: !8511)
!8520 = !DILocation(line: 424, column: 24, scope: !8511)
!8521 = !DILocation(line: 424, column: 27, scope: !8511)
!8522 = !DILocation(line: 424, column: 40, scope: !8511)
!8523 = !DILocation(line: 426, column: 8, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 426, column: 8)
!8525 = !DILocation(line: 426, column: 27, scope: !8524)
!8526 = !DILocation(line: 426, column: 30, scope: !8524)
!8527 = !DILocation(line: 426, column: 44, scope: !8524)
!8528 = !DILocation(line: 426, column: 8, scope: !8478)
!8529 = !DILocation(line: 427, column: 45, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 426, column: 49)
!8531 = !DILocation(line: 427, column: 64, scope: !8530)
!8532 = !DILocation(line: 427, column: 67, scope: !8530)
!8533 = !DILocation(line: 427, column: 5, scope: !8530)
!8534 = !DILocation(line: 427, column: 24, scope: !8530)
!8535 = !DILocation(line: 427, column: 27, scope: !8530)
!8536 = !DILocation(line: 427, column: 42, scope: !8530)
!8537 = !DILocation(line: 428, column: 45, scope: !8530)
!8538 = !DILocation(line: 428, column: 64, scope: !8530)
!8539 = !DILocation(line: 428, column: 67, scope: !8530)
!8540 = !DILocation(line: 428, column: 5, scope: !8530)
!8541 = !DILocation(line: 428, column: 24, scope: !8530)
!8542 = !DILocation(line: 428, column: 27, scope: !8530)
!8543 = !DILocation(line: 428, column: 42, scope: !8530)
!8544 = !DILocation(line: 430, column: 45, scope: !8530)
!8545 = !DILocation(line: 430, column: 64, scope: !8530)
!8546 = !DILocation(line: 430, column: 67, scope: !8530)
!8547 = !DILocation(line: 430, column: 5, scope: !8530)
!8548 = !DILocation(line: 430, column: 24, scope: !8530)
!8549 = !DILocation(line: 430, column: 27, scope: !8530)
!8550 = !DILocation(line: 430, column: 42, scope: !8530)
!8551 = !DILocation(line: 431, column: 45, scope: !8530)
!8552 = !DILocation(line: 431, column: 64, scope: !8530)
!8553 = !DILocation(line: 431, column: 67, scope: !8530)
!8554 = !DILocation(line: 431, column: 5, scope: !8530)
!8555 = !DILocation(line: 431, column: 24, scope: !8530)
!8556 = !DILocation(line: 431, column: 27, scope: !8530)
!8557 = !DILocation(line: 431, column: 42, scope: !8530)
!8558 = !DILocation(line: 432, column: 4, scope: !8530)
!8559 = !DILocation(line: 434, column: 44, scope: !8478)
!8560 = !DILocation(line: 434, column: 51, scope: !8478)
!8561 = !DILocation(line: 434, column: 4, scope: !8478)
!8562 = !DILocation(line: 434, column: 23, scope: !8478)
!8563 = !DILocation(line: 434, column: 26, scope: !8478)
!8564 = !DILocation(line: 434, column: 41, scope: !8478)
!8565 = !DILocation(line: 435, column: 9, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 435, column: 8)
!8567 = !DILocation(line: 435, column: 28, scope: !8566)
!8568 = !DILocation(line: 435, column: 31, scope: !8566)
!8569 = !DILocation(line: 435, column: 42, scope: !8566)
!8570 = !DILocation(line: 435, column: 61, scope: !8566)
!8571 = !DILocation(line: 435, column: 64, scope: !8566)
!8572 = !DILocation(line: 435, column: 40, scope: !8566)
!8573 = !DILocation(line: 435, column: 77, scope: !8566)
!8574 = !DILocation(line: 435, column: 94, scope: !8566)
!8575 = !DILocation(line: 436, column: 8, scope: !8566)
!8576 = !DILocation(line: 436, column: 27, scope: !8566)
!8577 = !DILocation(line: 436, column: 30, scope: !8566)
!8578 = !DILocation(line: 436, column: 47, scope: !8566)
!8579 = !DILocation(line: 436, column: 52, scope: !8566)
!8580 = !DILocation(line: 436, column: 55, scope: !8566)
!8581 = !DILocation(line: 436, column: 74, scope: !8566)
!8582 = !DILocation(line: 436, column: 77, scope: !8566)
!8583 = !DILocation(line: 436, column: 98, scope: !8566)
!8584 = !DILocation(line: 435, column: 8, scope: !8478)
!8585 = !DILocation(line: 438, column: 17, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8566, file: !3, line: 437, column: 4)
!8587 = !DILocation(line: 438, column: 36, scope: !8586)
!8588 = !DILocation(line: 438, column: 39, scope: !8586)
!8589 = !DILocation(line: 438, column: 50, scope: !8586)
!8590 = !DILocation(line: 438, column: 69, scope: !8586)
!8591 = !DILocation(line: 438, column: 72, scope: !8586)
!8592 = !DILocation(line: 438, column: 48, scope: !8586)
!8593 = !DILocation(line: 439, column: 17, scope: !8586)
!8594 = !DILocation(line: 439, column: 36, scope: !8586)
!8595 = !DILocation(line: 439, column: 39, scope: !8586)
!8596 = !DILocation(line: 440, column: 17, scope: !8586)
!8597 = !DILocation(line: 440, column: 36, scope: !8586)
!8598 = !DILocation(line: 440, column: 39, scope: !8586)
!8599 = !DILocation(line: 439, column: 52, scope: !8586)
!8600 = !DILocation(line: 438, column: 89, scope: !8586)
!8601 = !DILocation(line: 440, column: 63, scope: !8586)
!8602 = !DILocation(line: 440, column: 61, scope: !8586)
!8603 = !DILocation(line: 438, column: 14, scope: !8586)
!8604 = !DILocation(line: 441, column: 4, scope: !8586)
!8605 = !DILocation(line: 443, column: 17, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8566, file: !3, line: 442, column: 9)
!8607 = !DILocation(line: 443, column: 36, scope: !8606)
!8608 = !DILocation(line: 443, column: 39, scope: !8606)
!8609 = !DILocation(line: 443, column: 50, scope: !8606)
!8610 = !DILocation(line: 443, column: 69, scope: !8606)
!8611 = !DILocation(line: 443, column: 72, scope: !8606)
!8612 = !DILocation(line: 443, column: 48, scope: !8606)
!8613 = !DILocation(line: 444, column: 39, scope: !8606)
!8614 = !DILocation(line: 444, column: 58, scope: !8606)
!8615 = !DILocation(line: 444, column: 61, scope: !8606)
!8616 = !DILocation(line: 444, column: 37, scope: !8606)
!8617 = !DILocation(line: 445, column: 17, scope: !8606)
!8618 = !DILocation(line: 445, column: 36, scope: !8606)
!8619 = !DILocation(line: 445, column: 39, scope: !8606)
!8620 = !DILocation(line: 444, column: 75, scope: !8606)
!8621 = !DILocation(line: 443, column: 89, scope: !8606)
!8622 = !DILocation(line: 445, column: 63, scope: !8606)
!8623 = !DILocation(line: 445, column: 61, scope: !8606)
!8624 = !DILocation(line: 443, column: 14, scope: !8606)
!8625 = !DILocation(line: 448, column: 14, scope: !8478)
!8626 = !DILocation(line: 448, column: 28, scope: !8478)
!8627 = !DILocation(line: 448, column: 4, scope: !8478)
!8628 = !DILocation(line: 449, column: 39, scope: !8478)
!8629 = !DILocation(line: 449, column: 46, scope: !8478)
!8630 = !DILocation(line: 449, column: 59, scope: !8478)
!8631 = !DILocation(line: 449, column: 21, scope: !8478)
!8632 = !DILocation(line: 449, column: 19, scope: !8478)
!8633 = !DILocation(line: 450, column: 15, scope: !8478)
!8634 = !DILocation(line: 450, column: 22, scope: !8478)
!8635 = !DILocation(line: 450, column: 35, scope: !8478)
!8636 = !DILocation(line: 450, column: 39, scope: !8478)
!8637 = !DILocation(line: 450, column: 46, scope: !8478)
!8638 = !DILocation(line: 450, column: 59, scope: !8478)
!8639 = !DILocation(line: 450, column: 73, scope: !8478)
!8640 = !DILocation(line: 450, column: 12, scope: !8478)
!8641 = !DILocation(line: 451, column: 11, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 451, column: 4)
!8643 = !DILocation(line: 451, column: 9, scope: !8642)
!8644 = !DILocation(line: 451, column: 16, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8642, file: !3, line: 451, column: 4)
!8646 = !DILocation(line: 451, column: 20, scope: !8645)
!8647 = !DILocation(line: 451, column: 18, scope: !8645)
!8648 = !DILocation(line: 451, column: 4, scope: !8642)
!8649 = !DILocation(line: 453, column: 11, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8651, file: !3, line: 453, column: 9)
!8651 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 451, column: 52)
!8652 = !DILocation(line: 453, column: 20, scope: !8650)
!8653 = !DILocation(line: 453, column: 25, scope: !8650)
!8654 = !DILocation(line: 453, column: 9, scope: !8651)
!8655 = !DILocalVariable(name: "luv", scope: !8656, file: !3, line: 454, type: !4641)
!8656 = distinct !DILexicalBlock(scope: !8650, file: !3, line: 453, column: 46)
!8657 = !DILocation(line: 454, column: 15, scope: !8656)
!8658 = !DILocalVariable(name: "l", scope: !8656, file: !3, line: 455, type: !2262)
!8659 = !DILocation(line: 455, column: 14, scope: !8656)
!8660 = !DILocation(line: 457, column: 10, scope: !8656)
!8661 = !DILocation(line: 457, column: 19, scope: !8656)
!8662 = !DILocation(line: 457, column: 8, scope: !8656)
!8663 = !DILocation(line: 458, column: 34, scope: !8656)
!8664 = !DILocation(line: 458, column: 38, scope: !8656)
!8665 = !DILocation(line: 458, column: 45, scope: !8656)
!8666 = !DILocation(line: 458, column: 48, scope: !8656)
!8667 = !DILocation(line: 458, column: 53, scope: !8656)
!8668 = !DILocation(line: 458, column: 12, scope: !8656)
!8669 = !DILocation(line: 458, column: 10, scope: !8656)
!8670 = !DILocation(line: 460, column: 10, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 460, column: 10)
!8672 = !DILocation(line: 460, column: 10, scope: !8656)
!8673 = !DILocation(line: 462, column: 24, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8671, file: !3, line: 460, column: 17)
!8675 = !DILocation(line: 462, column: 38, scope: !8674)
!8676 = !DILocation(line: 462, column: 57, scope: !8674)
!8677 = !DILocation(line: 462, column: 60, scope: !8674)
!8678 = !DILocation(line: 462, column: 73, scope: !8674)
!8679 = !DILocation(line: 462, column: 78, scope: !8674)
!8680 = !DILocation(line: 462, column: 82, scope: !8674)
!8681 = !DILocation(line: 462, column: 89, scope: !8674)
!8682 = !DILocation(line: 462, column: 7, scope: !8674)
!8683 = !DILocation(line: 464, column: 17, scope: !8674)
!8684 = !DILocation(line: 464, column: 22, scope: !8674)
!8685 = !DILocation(line: 464, column: 26, scope: !8674)
!8686 = !DILocation(line: 464, column: 45, scope: !8674)
!8687 = !DILocation(line: 464, column: 48, scope: !8674)
!8688 = !DILocation(line: 464, column: 7, scope: !8674)
!8689 = !DILocation(line: 465, column: 6, scope: !8674)
!8690 = !DILocalVariable(name: "face_preview_pos", scope: !8691, file: !3, line: 469, type: !22)
!8691 = distinct !DILexicalBlock(scope: !8671, file: !3, line: 467, column: 11)
!8692 = !DILocation(line: 469, column: 11, scope: !8691)
!8693 = !DILocation(line: 469, column: 30, scope: !8691)
!8694 = !DILocation(line: 469, column: 47, scope: !8691)
!8695 = !DILocation(line: 469, column: 81, scope: !8691)
!8696 = !DILocation(line: 471, column: 24, scope: !8691)
!8697 = !DILocation(line: 471, column: 38, scope: !8691)
!8698 = !DILocation(line: 471, column: 57, scope: !8691)
!8699 = !DILocation(line: 471, column: 60, scope: !8691)
!8700 = !DILocation(line: 472, column: 24, scope: !8691)
!8701 = !DILocation(line: 472, column: 33, scope: !8691)
!8702 = !DILocation(line: 472, column: 49, scope: !8691)
!8703 = !DILocation(line: 472, column: 47, scope: !8691)
!8704 = !DILocation(line: 472, column: 72, scope: !8691)
!8705 = !DILocation(line: 472, column: 81, scope: !8691)
!8706 = !DILocation(line: 472, column: 70, scope: !8691)
!8707 = !DILocation(line: 472, column: 66, scope: !8691)
!8708 = !DILocation(line: 472, column: 90, scope: !8691)
!8709 = !DILocation(line: 472, column: 97, scope: !8691)
!8710 = !DILocation(line: 471, column: 7, scope: !8691)
!8711 = !DILocation(line: 474, column: 17, scope: !8691)
!8712 = !DILocation(line: 474, column: 26, scope: !8691)
!8713 = !DILocation(line: 474, column: 42, scope: !8691)
!8714 = !DILocation(line: 474, column: 40, scope: !8691)
!8715 = !DILocation(line: 474, column: 65, scope: !8691)
!8716 = !DILocation(line: 474, column: 74, scope: !8691)
!8717 = !DILocation(line: 474, column: 63, scope: !8691)
!8718 = !DILocation(line: 474, column: 59, scope: !8691)
!8719 = !DILocation(line: 475, column: 17, scope: !8691)
!8720 = !DILocation(line: 475, column: 36, scope: !8691)
!8721 = !DILocation(line: 475, column: 39, scope: !8691)
!8722 = !DILocation(line: 474, column: 7, scope: !8691)
!8723 = !DILocation(line: 477, column: 5, scope: !8656)
!8724 = !DILocation(line: 479, column: 5, scope: !8651)
!8725 = !DILocation(line: 479, column: 14, scope: !8651)
!8726 = !DILocation(line: 479, column: 19, scope: !8651)
!8727 = !DILocation(line: 480, column: 4, scope: !8651)
!8728 = !DILocation(line: 451, column: 37, scope: !8645)
!8729 = !DILocation(line: 451, column: 48, scope: !8645)
!8730 = !DILocation(line: 451, column: 4, scope: !8645)
!8731 = distinct !{!8731, !8648, !8732}
!8732 = !DILocation(line: 480, column: 4, scope: !8642)
!8733 = !DILocation(line: 481, column: 3, scope: !8478)
!8734 = !DILocation(line: 482, column: 2, scope: !8473)
!8735 = !DILocation(line: 412, column: 53, scope: !8465)
!8736 = !DILocation(line: 412, column: 2, scope: !8465)
!8737 = distinct !{!8737, !8470, !8738}
!8738 = !DILocation(line: 482, column: 2, scope: !8462)
!8739 = !DILocation(line: 483, column: 1, scope: !8439)
!8740 = distinct !DISubprogram(name: "stitch_check_uvs_stitchable", scope: !3, file: !3, line: 305, type: !7853, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!8741 = !DILocalVariable(name: "element", arg: 1, scope: !8740, file: !3, line: 305, type: !2206)
!8742 = !DILocation(line: 305, column: 52, scope: !8740)
!8743 = !DILocalVariable(name: "element_iter", arg: 2, scope: !8740, file: !3, line: 305, type: !2206)
!8744 = !DILocation(line: 305, column: 72, scope: !8740)
!8745 = !DILocalVariable(name: "state", arg: 3, scope: !8740, file: !3, line: 305, type: !2300)
!8746 = !DILocation(line: 305, column: 99, scope: !8740)
!8747 = !DILocalVariable(name: "bm", scope: !8740, file: !3, line: 307, type: !2388)
!8748 = !DILocation(line: 307, column: 9, scope: !8740)
!8749 = !DILocation(line: 307, column: 14, scope: !8740)
!8750 = !DILocation(line: 307, column: 21, scope: !8740)
!8751 = !DILocation(line: 307, column: 25, scope: !8740)
!8752 = !DILocalVariable(name: "limit", scope: !8740, file: !3, line: 308, type: !191)
!8753 = !DILocation(line: 308, column: 8, scope: !8740)
!8754 = !DILocation(line: 310, column: 6, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8740, file: !3, line: 310, column: 6)
!8756 = !DILocation(line: 310, column: 22, scope: !8755)
!8757 = !DILocation(line: 310, column: 19, scope: !8755)
!8758 = !DILocation(line: 310, column: 6, scope: !8740)
!8759 = !DILocation(line: 311, column: 3, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8755, file: !3, line: 310, column: 31)
!8761 = !DILocation(line: 314, column: 10, scope: !8740)
!8762 = !DILocation(line: 314, column: 17, scope: !8740)
!8763 = !DILocation(line: 314, column: 8, scope: !8740)
!8764 = !DILocation(line: 316, column: 6, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8740, file: !3, line: 316, column: 6)
!8766 = !DILocation(line: 316, column: 13, scope: !8765)
!8767 = !DILocation(line: 316, column: 6, scope: !8740)
!8768 = !DILocalVariable(name: "luv", scope: !8769, file: !3, line: 317, type: !4641)
!8769 = distinct !DILexicalBlock(scope: !8765, file: !3, line: 316, column: 24)
!8770 = !DILocation(line: 317, column: 12, scope: !8769)
!8771 = !DILocalVariable(name: "luv_iter", scope: !8769, file: !3, line: 317, type: !4641)
!8772 = !DILocation(line: 317, column: 18, scope: !8769)
!8773 = !DILocalVariable(name: "l", scope: !8769, file: !3, line: 318, type: !2262)
!8774 = !DILocation(line: 318, column: 11, scope: !8769)
!8775 = !DILocation(line: 321, column: 7, scope: !8769)
!8776 = !DILocation(line: 321, column: 16, scope: !8769)
!8777 = !DILocation(line: 321, column: 5, scope: !8769)
!8778 = !DILocation(line: 322, column: 31, scope: !8769)
!8779 = !DILocation(line: 322, column: 35, scope: !8769)
!8780 = !DILocation(line: 322, column: 42, scope: !8769)
!8781 = !DILocation(line: 322, column: 45, scope: !8769)
!8782 = !DILocation(line: 322, column: 50, scope: !8769)
!8783 = !DILocation(line: 322, column: 9, scope: !8769)
!8784 = !DILocation(line: 322, column: 7, scope: !8769)
!8785 = !DILocation(line: 323, column: 7, scope: !8769)
!8786 = !DILocation(line: 323, column: 21, scope: !8769)
!8787 = !DILocation(line: 323, column: 5, scope: !8769)
!8788 = !DILocation(line: 324, column: 36, scope: !8769)
!8789 = !DILocation(line: 324, column: 40, scope: !8769)
!8790 = !DILocation(line: 324, column: 47, scope: !8769)
!8791 = !DILocation(line: 324, column: 50, scope: !8769)
!8792 = !DILocation(line: 324, column: 55, scope: !8769)
!8793 = !DILocation(line: 324, column: 14, scope: !8769)
!8794 = !DILocation(line: 324, column: 12, scope: !8769)
!8795 = !DILocation(line: 326, column: 13, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8769, file: !3, line: 326, column: 7)
!8797 = !DILocation(line: 326, column: 18, scope: !8796)
!8798 = !DILocation(line: 326, column: 26, scope: !8796)
!8799 = !DILocation(line: 326, column: 36, scope: !8796)
!8800 = !DILocation(line: 326, column: 24, scope: !8796)
!8801 = !DILocation(line: 326, column: 7, scope: !8796)
!8802 = !DILocation(line: 326, column: 45, scope: !8796)
!8803 = !DILocation(line: 326, column: 43, scope: !8796)
!8804 = !DILocation(line: 326, column: 51, scope: !8796)
!8805 = !DILocation(line: 327, column: 13, scope: !8796)
!8806 = !DILocation(line: 327, column: 18, scope: !8796)
!8807 = !DILocation(line: 327, column: 26, scope: !8796)
!8808 = !DILocation(line: 327, column: 36, scope: !8796)
!8809 = !DILocation(line: 327, column: 24, scope: !8796)
!8810 = !DILocation(line: 327, column: 7, scope: !8796)
!8811 = !DILocation(line: 327, column: 45, scope: !8796)
!8812 = !DILocation(line: 327, column: 43, scope: !8796)
!8813 = !DILocation(line: 326, column: 7, scope: !8769)
!8814 = !DILocation(line: 329, column: 4, scope: !8815)
!8815 = distinct !DILexicalBlock(scope: !8796, file: !3, line: 328, column: 3)
!8816 = !DILocation(line: 332, column: 4, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8796, file: !3, line: 331, column: 8)
!8818 = !DILocation(line: 336, column: 3, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8765, file: !3, line: 335, column: 7)
!8820 = !DILocation(line: 338, column: 1, scope: !8740)
!8821 = distinct !DISubprogram(name: "stitch_check_edges_stitchable", scope: !3, file: !3, line: 340, type: !7889, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!8822 = !DILocalVariable(name: "edge", arg: 1, scope: !8821, file: !3, line: 340, type: !2198)
!8823 = !DILocation(line: 340, column: 51, scope: !8821)
!8824 = !DILocalVariable(name: "edge_iter", arg: 2, scope: !8821, file: !3, line: 340, type: !2198)
!8825 = !DILocation(line: 340, column: 65, scope: !8821)
!8826 = !DILocalVariable(name: "state", arg: 3, scope: !8821, file: !3, line: 340, type: !2300)
!8827 = !DILocation(line: 340, column: 89, scope: !8821)
!8828 = !DILocalVariable(name: "bm", scope: !8821, file: !3, line: 342, type: !2388)
!8829 = !DILocation(line: 342, column: 9, scope: !8821)
!8830 = !DILocation(line: 342, column: 14, scope: !8821)
!8831 = !DILocation(line: 342, column: 21, scope: !8821)
!8832 = !DILocation(line: 342, column: 25, scope: !8821)
!8833 = !DILocalVariable(name: "limit", scope: !8821, file: !3, line: 343, type: !191)
!8834 = !DILocation(line: 343, column: 8, scope: !8821)
!8835 = !DILocation(line: 345, column: 6, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8821, file: !3, line: 345, column: 6)
!8837 = !DILocation(line: 345, column: 19, scope: !8836)
!8838 = !DILocation(line: 345, column: 16, scope: !8836)
!8839 = !DILocation(line: 345, column: 6, scope: !8821)
!8840 = !DILocation(line: 346, column: 3, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 345, column: 25)
!8842 = !DILocation(line: 349, column: 10, scope: !8821)
!8843 = !DILocation(line: 349, column: 17, scope: !8821)
!8844 = !DILocation(line: 349, column: 8, scope: !8821)
!8845 = !DILocation(line: 351, column: 6, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8821, file: !3, line: 351, column: 6)
!8847 = !DILocation(line: 351, column: 13, scope: !8846)
!8848 = !DILocation(line: 351, column: 6, scope: !8821)
!8849 = !DILocalVariable(name: "l", scope: !8850, file: !3, line: 352, type: !2262)
!8850 = distinct !DILexicalBlock(scope: !8846, file: !3, line: 351, column: 24)
!8851 = !DILocation(line: 352, column: 11, scope: !8850)
!8852 = !DILocalVariable(name: "luv_orig1", scope: !8850, file: !3, line: 353, type: !4641)
!8853 = !DILocation(line: 353, column: 12, scope: !8850)
!8854 = !DILocalVariable(name: "luv_iter1", scope: !8850, file: !3, line: 353, type: !4641)
!8855 = !DILocation(line: 353, column: 24, scope: !8850)
!8856 = !DILocalVariable(name: "luv_orig2", scope: !8850, file: !3, line: 354, type: !4641)
!8857 = !DILocation(line: 354, column: 12, scope: !8850)
!8858 = !DILocalVariable(name: "luv_iter2", scope: !8850, file: !3, line: 354, type: !4641)
!8859 = !DILocation(line: 354, column: 24, scope: !8850)
!8860 = !DILocation(line: 356, column: 7, scope: !8850)
!8861 = !DILocation(line: 356, column: 14, scope: !8850)
!8862 = !DILocation(line: 356, column: 18, scope: !8850)
!8863 = !DILocation(line: 356, column: 24, scope: !8850)
!8864 = !DILocation(line: 356, column: 30, scope: !8850)
!8865 = !DILocation(line: 356, column: 5, scope: !8850)
!8866 = !DILocation(line: 357, column: 37, scope: !8850)
!8867 = !DILocation(line: 357, column: 41, scope: !8850)
!8868 = !DILocation(line: 357, column: 48, scope: !8850)
!8869 = !DILocation(line: 357, column: 51, scope: !8850)
!8870 = !DILocation(line: 357, column: 56, scope: !8850)
!8871 = !DILocation(line: 357, column: 15, scope: !8850)
!8872 = !DILocation(line: 357, column: 13, scope: !8850)
!8873 = !DILocation(line: 358, column: 7, scope: !8850)
!8874 = !DILocation(line: 358, column: 14, scope: !8850)
!8875 = !DILocation(line: 358, column: 18, scope: !8850)
!8876 = !DILocation(line: 358, column: 29, scope: !8850)
!8877 = !DILocation(line: 358, column: 35, scope: !8850)
!8878 = !DILocation(line: 358, column: 5, scope: !8850)
!8879 = !DILocation(line: 359, column: 37, scope: !8850)
!8880 = !DILocation(line: 359, column: 41, scope: !8850)
!8881 = !DILocation(line: 359, column: 48, scope: !8850)
!8882 = !DILocation(line: 359, column: 51, scope: !8850)
!8883 = !DILocation(line: 359, column: 56, scope: !8850)
!8884 = !DILocation(line: 359, column: 15, scope: !8850)
!8885 = !DILocation(line: 359, column: 13, scope: !8850)
!8886 = !DILocation(line: 361, column: 7, scope: !8850)
!8887 = !DILocation(line: 361, column: 14, scope: !8850)
!8888 = !DILocation(line: 361, column: 18, scope: !8850)
!8889 = !DILocation(line: 361, column: 24, scope: !8850)
!8890 = !DILocation(line: 361, column: 30, scope: !8850)
!8891 = !DILocation(line: 361, column: 5, scope: !8850)
!8892 = !DILocation(line: 362, column: 37, scope: !8850)
!8893 = !DILocation(line: 362, column: 41, scope: !8850)
!8894 = !DILocation(line: 362, column: 48, scope: !8850)
!8895 = !DILocation(line: 362, column: 51, scope: !8850)
!8896 = !DILocation(line: 362, column: 56, scope: !8850)
!8897 = !DILocation(line: 362, column: 15, scope: !8850)
!8898 = !DILocation(line: 362, column: 13, scope: !8850)
!8899 = !DILocation(line: 363, column: 7, scope: !8850)
!8900 = !DILocation(line: 363, column: 14, scope: !8850)
!8901 = !DILocation(line: 363, column: 18, scope: !8850)
!8902 = !DILocation(line: 363, column: 29, scope: !8850)
!8903 = !DILocation(line: 363, column: 35, scope: !8850)
!8904 = !DILocation(line: 363, column: 5, scope: !8850)
!8905 = !DILocation(line: 364, column: 37, scope: !8850)
!8906 = !DILocation(line: 364, column: 41, scope: !8850)
!8907 = !DILocation(line: 364, column: 48, scope: !8850)
!8908 = !DILocation(line: 364, column: 51, scope: !8850)
!8909 = !DILocation(line: 364, column: 56, scope: !8850)
!8910 = !DILocation(line: 364, column: 15, scope: !8850)
!8911 = !DILocation(line: 364, column: 13, scope: !8850)
!8912 = !DILocation(line: 366, column: 13, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8850, file: !3, line: 366, column: 7)
!8914 = !DILocation(line: 366, column: 24, scope: !8913)
!8915 = !DILocation(line: 366, column: 32, scope: !8913)
!8916 = !DILocation(line: 366, column: 43, scope: !8913)
!8917 = !DILocation(line: 366, column: 30, scope: !8913)
!8918 = !DILocation(line: 366, column: 7, scope: !8913)
!8919 = !DILocation(line: 366, column: 52, scope: !8913)
!8920 = !DILocation(line: 366, column: 50, scope: !8913)
!8921 = !DILocation(line: 366, column: 58, scope: !8913)
!8922 = !DILocation(line: 367, column: 13, scope: !8913)
!8923 = !DILocation(line: 367, column: 24, scope: !8913)
!8924 = !DILocation(line: 367, column: 32, scope: !8913)
!8925 = !DILocation(line: 367, column: 43, scope: !8913)
!8926 = !DILocation(line: 367, column: 30, scope: !8913)
!8927 = !DILocation(line: 367, column: 7, scope: !8913)
!8928 = !DILocation(line: 367, column: 52, scope: !8913)
!8929 = !DILocation(line: 367, column: 50, scope: !8913)
!8930 = !DILocation(line: 367, column: 58, scope: !8913)
!8931 = !DILocation(line: 368, column: 13, scope: !8913)
!8932 = !DILocation(line: 368, column: 24, scope: !8913)
!8933 = !DILocation(line: 368, column: 32, scope: !8913)
!8934 = !DILocation(line: 368, column: 43, scope: !8913)
!8935 = !DILocation(line: 368, column: 30, scope: !8913)
!8936 = !DILocation(line: 368, column: 7, scope: !8913)
!8937 = !DILocation(line: 368, column: 52, scope: !8913)
!8938 = !DILocation(line: 368, column: 50, scope: !8913)
!8939 = !DILocation(line: 368, column: 58, scope: !8913)
!8940 = !DILocation(line: 369, column: 13, scope: !8913)
!8941 = !DILocation(line: 369, column: 24, scope: !8913)
!8942 = !DILocation(line: 369, column: 32, scope: !8913)
!8943 = !DILocation(line: 369, column: 43, scope: !8913)
!8944 = !DILocation(line: 369, column: 30, scope: !8913)
!8945 = !DILocation(line: 369, column: 7, scope: !8913)
!8946 = !DILocation(line: 369, column: 52, scope: !8913)
!8947 = !DILocation(line: 369, column: 50, scope: !8913)
!8948 = !DILocation(line: 366, column: 7, scope: !8850)
!8949 = !DILocation(line: 371, column: 4, scope: !8950)
!8950 = distinct !DILexicalBlock(scope: !8913, file: !3, line: 370, column: 3)
!8951 = !DILocation(line: 374, column: 4, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8913, file: !3, line: 373, column: 8)
!8953 = !DILocation(line: 378, column: 3, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8846, file: !3, line: 377, column: 7)
!8955 = !DILocation(line: 380, column: 1, scope: !8821)
!8956 = distinct !DISubprogram(name: "stitch_setup_face_preview_for_uv_group", scope: !3, file: !3, line: 763, type: !7571, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!8957 = !DILocalVariable(name: "element", arg: 1, scope: !8956, file: !3, line: 763, type: !2206)
!8958 = !DILocation(line: 763, column: 63, scope: !8956)
!8959 = !DILocalVariable(name: "state", arg: 2, scope: !8956, file: !3, line: 763, type: !2300)
!8960 = !DILocation(line: 763, column: 85, scope: !8956)
!8961 = !DILocalVariable(name: "island_stitch_data", arg: 3, scope: !8956, file: !3, line: 763, type: !5146)
!8962 = !DILocation(line: 763, column: 110, scope: !8956)
!8963 = !DILocalVariable(name: "preview_position", arg: 4, scope: !8956, file: !3, line: 764, type: !5189)
!8964 = !DILocation(line: 764, column: 69, scope: !8956)
!8965 = !DILocalVariable(name: "preview", scope: !8956, file: !3, line: 766, type: !2490)
!8966 = !DILocation(line: 766, column: 19, scope: !8956)
!8967 = !DILocation(line: 766, column: 29, scope: !8956)
!8968 = !DILocation(line: 766, column: 36, scope: !8956)
!8969 = !DILocation(line: 769, column: 6, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8956, file: !3, line: 769, column: 6)
!8971 = !DILocation(line: 769, column: 13, scope: !8970)
!8972 = !DILocation(line: 769, column: 26, scope: !8970)
!8973 = !DILocation(line: 769, column: 30, scope: !8970)
!8974 = !DILocation(line: 769, column: 37, scope: !8970)
!8975 = !DILocation(line: 769, column: 47, scope: !8970)
!8976 = !DILocation(line: 769, column: 50, scope: !8970)
!8977 = !DILocation(line: 769, column: 57, scope: !8970)
!8978 = !DILocation(line: 769, column: 74, scope: !8970)
!8979 = !DILocation(line: 769, column: 83, scope: !8970)
!8980 = !DILocation(line: 769, column: 71, scope: !8970)
!8981 = !DILocation(line: 769, column: 6, scope: !8956)
!8982 = !DILocation(line: 770, column: 3, scope: !8970)
!8983 = !DILocation(line: 772, column: 6, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8956, file: !3, line: 772, column: 6)
!8985 = !DILocation(line: 772, column: 13, scope: !8984)
!8986 = !DILocation(line: 772, column: 6, scope: !8956)
!8987 = !DILocation(line: 773, column: 3, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8984, file: !3, line: 772, column: 27)
!8989 = !DILocation(line: 773, column: 22, scope: !8988)
!8990 = !DILocation(line: 773, column: 31, scope: !8988)
!8991 = !DILocation(line: 773, column: 39, scope: !8988)
!8992 = !DILocation(line: 773, column: 55, scope: !8988)
!8993 = !DILocation(line: 774, column: 2, scope: !8988)
!8994 = !DILocation(line: 776, column: 2, scope: !8956)
!8995 = !DILocation(line: 777, column: 43, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8956, file: !3, line: 776, column: 5)
!8997 = !DILocation(line: 777, column: 52, scope: !8996)
!8998 = !DILocation(line: 777, column: 55, scope: !8996)
!8999 = !DILocation(line: 777, column: 58, scope: !8996)
!9000 = !DILocation(line: 777, column: 67, scope: !8996)
!9001 = !DILocation(line: 777, column: 3, scope: !8996)
!9002 = !DILocation(line: 778, column: 13, scope: !8996)
!9003 = !DILocation(line: 778, column: 22, scope: !8996)
!9004 = !DILocation(line: 778, column: 11, scope: !8996)
!9005 = !DILocation(line: 779, column: 2, scope: !8996)
!9006 = !DILocation(line: 779, column: 11, scope: !8956)
!9007 = !DILocation(line: 779, column: 19, scope: !8956)
!9008 = !DILocation(line: 779, column: 23, scope: !8956)
!9009 = !DILocation(line: 779, column: 32, scope: !8956)
!9010 = !DILocation(line: 779, column: 22, scope: !8956)
!9011 = !DILocation(line: 0, scope: !8956)
!9012 = distinct !{!9012, !8994, !9013}
!9013 = !DILocation(line: 779, column: 40, scope: !8956)
!9014 = !DILocation(line: 780, column: 1, scope: !8956)
!9015 = distinct !DISubprogram(name: "cross_v2v2", scope: !4689, file: !4689, line: 629, type: !7371, scopeLine: 630, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!9016 = !DILocalVariable(name: "a", arg: 1, scope: !9015, file: !4689, line: 629, type: !4692)
!9017 = !DILocation(line: 629, column: 38, scope: !9015)
!9018 = !DILocalVariable(name: "b", arg: 2, scope: !9015, file: !4689, line: 629, type: !4692)
!9019 = !DILocation(line: 629, column: 56, scope: !9015)
!9020 = !DILocation(line: 631, column: 9, scope: !9015)
!9021 = !DILocation(line: 631, column: 16, scope: !9015)
!9022 = !DILocation(line: 631, column: 14, scope: !9015)
!9023 = !DILocation(line: 631, column: 23, scope: !9015)
!9024 = !DILocation(line: 631, column: 30, scope: !9015)
!9025 = !DILocation(line: 631, column: 28, scope: !9015)
!9026 = !DILocation(line: 631, column: 21, scope: !9015)
!9027 = !DILocation(line: 631, column: 2, scope: !9015)
!9028 = distinct !DISubprogram(name: "max_ff", scope: !9029, file: !9029, line: 206, type: !9030, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!9029 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9030 = !DISubroutineType(types: !9031)
!9031 = !{!191, !191, !191}
!9032 = !DILocalVariable(name: "a", arg: 1, scope: !9028, file: !9029, line: 206, type: !191)
!9033 = !DILocation(line: 206, column: 28, scope: !9028)
!9034 = !DILocalVariable(name: "b", arg: 2, scope: !9028, file: !9029, line: 206, type: !191)
!9035 = !DILocation(line: 206, column: 37, scope: !9028)
!9036 = !DILocation(line: 208, column: 10, scope: !9028)
!9037 = !DILocation(line: 208, column: 14, scope: !9028)
!9038 = !DILocation(line: 208, column: 12, scope: !9028)
!9039 = !DILocation(line: 208, column: 9, scope: !9028)
!9040 = !DILocation(line: 208, column: 19, scope: !9028)
!9041 = !DILocation(line: 208, column: 23, scope: !9028)
!9042 = !DILocation(line: 208, column: 2, scope: !9028)
!9043 = distinct !DISubprogram(name: "min_ff", scope: !9029, file: !9029, line: 202, type: !9030, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!9044 = !DILocalVariable(name: "a", arg: 1, scope: !9043, file: !9029, line: 202, type: !191)
!9045 = !DILocation(line: 202, column: 28, scope: !9043)
!9046 = !DILocalVariable(name: "b", arg: 2, scope: !9043, file: !9029, line: 202, type: !191)
!9047 = !DILocation(line: 202, column: 37, scope: !9043)
!9048 = !DILocation(line: 204, column: 10, scope: !9043)
!9049 = !DILocation(line: 204, column: 14, scope: !9043)
!9050 = !DILocation(line: 204, column: 12, scope: !9043)
!9051 = !DILocation(line: 204, column: 9, scope: !9043)
!9052 = !DILocation(line: 204, column: 19, scope: !9043)
!9053 = !DILocation(line: 204, column: 23, scope: !9043)
!9054 = !DILocation(line: 204, column: 2, scope: !9043)
!9055 = distinct !DISubprogram(name: "negate_v2_v2", scope: !4689, file: !4689, line: 570, type: !4690, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!9056 = !DILocalVariable(name: "r", arg: 1, scope: !9055, file: !4689, line: 570, type: !2299)
!9057 = !DILocation(line: 570, column: 33, scope: !9055)
!9058 = !DILocalVariable(name: "a", arg: 2, scope: !9055, file: !4689, line: 570, type: !4692)
!9059 = !DILocation(line: 570, column: 51, scope: !9055)
!9060 = !DILocation(line: 572, column: 10, scope: !9055)
!9061 = !DILocation(line: 572, column: 9, scope: !9055)
!9062 = !DILocation(line: 572, column: 2, scope: !9055)
!9063 = !DILocation(line: 572, column: 7, scope: !9055)
!9064 = !DILocation(line: 573, column: 10, scope: !9055)
!9065 = !DILocation(line: 573, column: 9, scope: !9055)
!9066 = !DILocation(line: 573, column: 2, scope: !9055)
!9067 = !DILocation(line: 573, column: 7, scope: !9055)
!9068 = !DILocation(line: 574, column: 1, scope: !9055)
!9069 = distinct !DISubprogram(name: "stitch_uv_rotate", scope: !3, file: !3, line: 291, type: !9070, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!9070 = !DISubroutineType(types: !9071)
!9071 = !{null, !9072, !2299, !2299, !191}
!9072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64)
!9073 = !DILocalVariable(name: "mat", arg: 1, scope: !9069, file: !3, line: 291, type: !9072)
!9074 = !DILocation(line: 291, column: 36, scope: !9069)
!9075 = !DILocalVariable(name: "medianPoint", arg: 2, scope: !9069, file: !3, line: 291, type: !2299)
!9076 = !DILocation(line: 291, column: 53, scope: !9069)
!9077 = !DILocalVariable(name: "uv", arg: 3, scope: !9069, file: !3, line: 291, type: !2299)
!9078 = !DILocation(line: 291, column: 75, scope: !9069)
!9079 = !DILocalVariable(name: "aspect", arg: 4, scope: !9069, file: !3, line: 291, type: !191)
!9080 = !DILocation(line: 291, column: 88, scope: !9069)
!9081 = !DILocalVariable(name: "uv_rotation_result", scope: !9069, file: !3, line: 293, type: !419)
!9082 = !DILocation(line: 293, column: 8, scope: !9069)
!9083 = !DILocation(line: 295, column: 11, scope: !9069)
!9084 = !DILocation(line: 295, column: 2, scope: !9069)
!9085 = !DILocation(line: 295, column: 8, scope: !9069)
!9086 = !DILocation(line: 297, column: 12, scope: !9069)
!9087 = !DILocation(line: 297, column: 16, scope: !9069)
!9088 = !DILocation(line: 297, column: 2, scope: !9069)
!9089 = !DILocation(line: 298, column: 14, scope: !9069)
!9090 = !DILocation(line: 298, column: 34, scope: !9069)
!9091 = !DILocation(line: 298, column: 39, scope: !9069)
!9092 = !DILocation(line: 298, column: 2, scope: !9069)
!9093 = !DILocation(line: 299, column: 14, scope: !9069)
!9094 = !DILocation(line: 299, column: 18, scope: !9069)
!9095 = !DILocation(line: 299, column: 38, scope: !9069)
!9096 = !DILocation(line: 299, column: 2, scope: !9069)
!9097 = !DILocation(line: 301, column: 11, scope: !9069)
!9098 = !DILocation(line: 301, column: 2, scope: !9069)
!9099 = !DILocation(line: 301, column: 8, scope: !9069)
!9100 = !DILocation(line: 302, column: 1, scope: !9069)
!9101 = distinct !DISubprogram(name: "sub_v2_v2", scope: !4689, file: !4689, line: 332, type: !4690, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!9102 = !DILocalVariable(name: "r", arg: 1, scope: !9101, file: !4689, line: 332, type: !2299)
!9103 = !DILocation(line: 332, column: 30, scope: !9101)
!9104 = !DILocalVariable(name: "a", arg: 2, scope: !9101, file: !4689, line: 332, type: !4692)
!9105 = !DILocation(line: 332, column: 48, scope: !9101)
!9106 = !DILocation(line: 334, column: 10, scope: !9101)
!9107 = !DILocation(line: 334, column: 2, scope: !9101)
!9108 = !DILocation(line: 334, column: 7, scope: !9101)
!9109 = !DILocation(line: 335, column: 10, scope: !9101)
!9110 = !DILocation(line: 335, column: 2, scope: !9101)
!9111 = !DILocation(line: 335, column: 7, scope: !9101)
!9112 = !DILocation(line: 336, column: 1, scope: !9101)
!9113 = distinct !DISubprogram(name: "add_v2_v2v2", scope: !4689, file: !4689, line: 290, type: !7319, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!9114 = !DILocalVariable(name: "r", arg: 1, scope: !9113, file: !4689, line: 290, type: !2299)
!9115 = !DILocation(line: 290, column: 32, scope: !9113)
!9116 = !DILocalVariable(name: "a", arg: 2, scope: !9113, file: !4689, line: 290, type: !4692)
!9117 = !DILocation(line: 290, column: 50, scope: !9113)
!9118 = !DILocalVariable(name: "b", arg: 3, scope: !9113, file: !4689, line: 290, type: !4692)
!9119 = !DILocation(line: 290, column: 68, scope: !9113)
!9120 = !DILocation(line: 292, column: 9, scope: !9113)
!9121 = !DILocation(line: 292, column: 16, scope: !9113)
!9122 = !DILocation(line: 292, column: 14, scope: !9113)
!9123 = !DILocation(line: 292, column: 2, scope: !9113)
!9124 = !DILocation(line: 292, column: 7, scope: !9113)
!9125 = !DILocation(line: 293, column: 9, scope: !9113)
!9126 = !DILocation(line: 293, column: 16, scope: !9113)
!9127 = !DILocation(line: 293, column: 14, scope: !9113)
!9128 = !DILocation(line: 293, column: 2, scope: !9113)
!9129 = !DILocation(line: 293, column: 7, scope: !9113)
!9130 = !DILocation(line: 294, column: 1, scope: !9113)
!9131 = distinct !DISubprogram(name: "stitch_select", scope: !3, file: !3, line: 2024, type: !9132, scopeLine: 2025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!9132 = !DISubroutineType(types: !9133)
!9133 = !{null, !2510, !2639, !2599, !2300}
!9134 = !DILocalVariable(name: "C", arg: 1, scope: !9131, file: !3, line: 2024, type: !2510)
!9135 = !DILocation(line: 2024, column: 37, scope: !9131)
!9136 = !DILocalVariable(name: "scene", arg: 2, scope: !9131, file: !3, line: 2024, type: !2639)
!9137 = !DILocation(line: 2024, column: 47, scope: !9131)
!9138 = !DILocalVariable(name: "event", arg: 3, scope: !9131, file: !3, line: 2024, type: !2599)
!9139 = !DILocation(line: 2024, column: 69, scope: !9131)
!9140 = !DILocalVariable(name: "state", arg: 4, scope: !9131, file: !3, line: 2024, type: !2300)
!9141 = !DILocation(line: 2024, column: 89, scope: !9131)
!9142 = !DILocalVariable(name: "co", scope: !9131, file: !3, line: 2027, type: !419)
!9143 = !DILocation(line: 2027, column: 8, scope: !9131)
!9144 = !DILocalVariable(name: "hit", scope: !9131, file: !3, line: 2028, type: !9145)
!9145 = !DIDerivedType(tag: DW_TAG_typedef, name: "NearestHit", file: !9146, line: 64, baseType: !9147)
!9146 = !DIFile(filename: "blender/source/blender/editors/uvedit/uvedit_intern.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NearestHit", file: !9146, line: 58, size: 384, elements: !9148)
!9148 = !{!9149, !9150, !9160, !9161, !9163, !9164}
!9149 = !DIDerivedType(tag: DW_TAG_member, name: "efa", scope: !9147, file: !9146, line: 59, baseType: !2256, size: 64)
!9150 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !9147, file: !9146, line: 60, baseType: !9151, size: 64, offset: 64)
!9151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9152, size: 64)
!9152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !1017, line: 93, size: 128, elements: !9153)
!9153 = !{!9154, !9155, !9156, !9157, !9158, !9159}
!9154 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !9152, file: !1017, line: 94, baseType: !839, size: 64)
!9155 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9152, file: !1017, line: 95, baseType: !14, size: 8, offset: 64)
!9156 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !9152, file: !1017, line: 95, baseType: !14, size: 8, offset: 72)
!9157 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !9152, file: !1017, line: 96, baseType: !48, size: 16, offset: 80)
!9158 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !9152, file: !1017, line: 96, baseType: !48, size: 16, offset: 96)
!9159 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9152, file: !1017, line: 96, baseType: !48, size: 16, offset: 112)
!9160 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !9147, file: !9146, line: 61, baseType: !2214, size: 64, offset: 128)
!9161 = !DIDerivedType(tag: DW_TAG_member, name: "luv", scope: !9147, file: !9146, line: 62, baseType: !9162, size: 64, offset: 192)
!9162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4643, size: 64)
!9163 = !DIDerivedType(tag: DW_TAG_member, name: "luv_next", scope: !9147, file: !9146, line: 62, baseType: !9162, size: 64, offset: 256)
!9164 = !DIDerivedType(tag: DW_TAG_member, name: "lindex", scope: !9147, file: !9146, line: 63, baseType: !22, size: 32, offset: 320)
!9165 = !DILocation(line: 2028, column: 13, scope: !9131)
!9166 = !DILocalVariable(name: "ar", scope: !9131, file: !3, line: 2029, type: !3114)
!9167 = !DILocation(line: 2029, column: 11, scope: !9131)
!9168 = !DILocation(line: 2029, column: 30, scope: !9131)
!9169 = !DILocation(line: 2029, column: 16, scope: !9131)
!9170 = !DILocalVariable(name: "ima", scope: !9131, file: !3, line: 2030, type: !9171)
!9171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9172, size: 64)
!9172 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !425, line: 127, baseType: !840)
!9173 = !DILocation(line: 2030, column: 9, scope: !9131)
!9174 = !DILocation(line: 2030, column: 35, scope: !9131)
!9175 = !DILocation(line: 2030, column: 15, scope: !9131)
!9176 = !DILocation(line: 2032, column: 28, scope: !9131)
!9177 = !DILocation(line: 2032, column: 32, scope: !9131)
!9178 = !DILocation(line: 2032, column: 37, scope: !9131)
!9179 = !DILocation(line: 2032, column: 44, scope: !9131)
!9180 = !DILocation(line: 2032, column: 53, scope: !9131)
!9181 = !DILocation(line: 2032, column: 60, scope: !9131)
!9182 = !DILocation(line: 2032, column: 70, scope: !9131)
!9183 = !DILocation(line: 2032, column: 78, scope: !9131)
!9184 = !DILocation(line: 2032, column: 2, scope: !9131)
!9185 = !DILocation(line: 2034, column: 6, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9131, file: !3, line: 2034, column: 6)
!9187 = !DILocation(line: 2034, column: 13, scope: !9186)
!9188 = !DILocation(line: 2034, column: 18, scope: !9186)
!9189 = !DILocation(line: 2034, column: 6, scope: !9131)
!9190 = !DILocation(line: 2035, column: 24, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9186, file: !3, line: 2034, column: 34)
!9192 = !DILocation(line: 2035, column: 31, scope: !9191)
!9193 = !DILocation(line: 2035, column: 36, scope: !9191)
!9194 = !DILocation(line: 2035, column: 43, scope: !9191)
!9195 = !DILocation(line: 2035, column: 47, scope: !9191)
!9196 = !DILocation(line: 2035, column: 3, scope: !9191)
!9197 = !DILocation(line: 2037, column: 11, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9191, file: !3, line: 2037, column: 7)
!9199 = !DILocation(line: 2037, column: 7, scope: !9198)
!9200 = !DILocation(line: 2037, column: 7, scope: !9191)
!9201 = !DILocalVariable(name: "element", scope: !9202, file: !3, line: 2043, type: !2206)
!9202 = distinct !DILexicalBlock(scope: !9198, file: !3, line: 2037, column: 16)
!9203 = !DILocation(line: 2043, column: 15, scope: !9202)
!9204 = !DILocation(line: 2043, column: 43, scope: !9202)
!9205 = !DILocation(line: 2043, column: 50, scope: !9202)
!9206 = !DILocation(line: 2043, column: 67, scope: !9202)
!9207 = !DILocation(line: 2043, column: 76, scope: !9202)
!9208 = !DILocation(line: 2043, column: 25, scope: !9202)
!9209 = !DILocation(line: 2044, column: 21, scope: !9202)
!9210 = !DILocation(line: 2044, column: 30, scope: !9202)
!9211 = !DILocation(line: 2044, column: 4, scope: !9202)
!9212 = !DILocation(line: 2046, column: 3, scope: !9202)
!9213 = !DILocation(line: 2047, column: 2, scope: !9191)
!9214 = !DILocation(line: 2049, column: 24, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9186, file: !3, line: 2048, column: 7)
!9216 = !DILocation(line: 2049, column: 31, scope: !9215)
!9217 = !DILocation(line: 2049, column: 36, scope: !9215)
!9218 = !DILocation(line: 2049, column: 43, scope: !9215)
!9219 = !DILocation(line: 2049, column: 47, scope: !9215)
!9220 = !DILocation(line: 2049, column: 3, scope: !9215)
!9221 = !DILocation(line: 2051, column: 11, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !9215, file: !3, line: 2051, column: 7)
!9223 = !DILocation(line: 2051, column: 7, scope: !9222)
!9224 = !DILocation(line: 2051, column: 7, scope: !9215)
!9225 = !DILocalVariable(name: "edge", scope: !9226, file: !3, line: 2052, type: !2198)
!9226 = distinct !DILexicalBlock(scope: !9222, file: !3, line: 2051, column: 16)
!9227 = !DILocation(line: 2052, column: 12, scope: !9226)
!9228 = !DILocation(line: 2052, column: 35, scope: !9226)
!9229 = !DILocation(line: 2052, column: 38, scope: !9226)
!9230 = !DILocation(line: 2052, column: 19, scope: !9226)
!9231 = !DILocation(line: 2053, column: 23, scope: !9226)
!9232 = !DILocation(line: 2053, column: 29, scope: !9226)
!9233 = !DILocation(line: 2053, column: 4, scope: !9226)
!9234 = !DILocation(line: 2054, column: 3, scope: !9226)
!9235 = !DILocation(line: 2056, column: 1, scope: !9131)
!9236 = distinct !DISubprogram(name: "stitch_exit", scope: !3, file: !3, line: 1945, type: !9237, scopeLine: 1946, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1816, retainedNodes: !2512)
!9237 = !DISubroutineType(types: !9238)
!9238 = !{null, !2510, !2597, !22}
!9239 = !DILocalVariable(name: "C", arg: 1, scope: !9236, file: !3, line: 1945, type: !2510)
!9240 = !DILocation(line: 1945, column: 35, scope: !9236)
!9241 = !DILocalVariable(name: "op", arg: 2, scope: !9236, file: !3, line: 1945, type: !2597)
!9242 = !DILocation(line: 1945, column: 50, scope: !9236)
!9243 = !DILocalVariable(name: "finished", arg: 3, scope: !9236, file: !3, line: 1945, type: !22)
!9244 = !DILocation(line: 1945, column: 58, scope: !9236)
!9245 = !DILocalVariable(name: "state", scope: !9236, file: !3, line: 1947, type: !2300)
!9246 = !DILocation(line: 1947, column: 15, scope: !9236)
!9247 = !DILocalVariable(name: "scene", scope: !9236, file: !3, line: 1948, type: !2639)
!9248 = !DILocation(line: 1948, column: 9, scope: !9236)
!9249 = !DILocalVariable(name: "sima", scope: !9236, file: !3, line: 1949, type: !9250)
!9250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9251, size: 64)
!9251 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceImage", file: !9252, line: 743, baseType: !9253)
!9252 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceImage", file: !9252, line: 710, size: 84672, elements: !9254)
!9254 = !{!9255, !9268, !9269, !9270, !9271, !9272, !9273, !9274, !9275, !9314, !9315, !9316, !9317, !9318, !9319, !9320, !9321, !9322, !9323, !9324, !9325, !9326, !9327, !9328, !9329, !9330, !9331}
!9255 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9253, file: !9252, line: 711, baseType: !9256, size: 64)
!9256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9257, size: 64)
!9257 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLink", file: !9252, line: 91, baseType: !9258)
!9258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !9252, line: 85, size: 448, elements: !9259)
!9259 = !{!9260, !9262, !9263, !9264, !9265, !9266}
!9260 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9258, file: !9252, line: 86, baseType: !9261, size: 64)
!9261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9258, size: 64)
!9262 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9258, file: !9252, line: 86, baseType: !9261, size: 64, offset: 64)
!9263 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !9258, file: !9252, line: 87, baseType: !58, size: 128, offset: 128)
!9264 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !9258, file: !9252, line: 88, baseType: !22, size: 32, offset: 256)
!9265 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !9258, file: !9252, line: 89, baseType: !191, size: 32, offset: 288)
!9266 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !9258, file: !9252, line: 90, baseType: !9267, size: 128, offset: 320)
!9267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 128, elements: !856)
!9268 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9253, file: !9252, line: 711, baseType: !9256, size: 64, offset: 64)
!9269 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !9253, file: !9252, line: 712, baseType: !58, size: 128, offset: 128)
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !9253, file: !9252, line: 713, baseType: !22, size: 32, offset: 256)
!9271 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9253, file: !9252, line: 715, baseType: !22, size: 32, offset: 288)
!9272 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !9253, file: !9252, line: 717, baseType: !839, size: 64, offset: 320)
!9273 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !9253, file: !9252, line: 718, baseType: !426, size: 320, offset: 384)
!9274 = !DIDerivedType(tag: DW_TAG_member, name: "cumap", scope: !9253, file: !9252, line: 720, baseType: !1246, size: 64, offset: 704)
!9275 = !DIDerivedType(tag: DW_TAG_member, name: "scopes", scope: !9253, file: !9252, line: 722, baseType: !9276, size: 42112, offset: 768)
!9276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scopes", file: !663, line: 138, size: 42112, elements: !9277)
!9277 = !{!9278, !9279, !9280, !9281, !9282, !9283, !9284, !9285, !9286, !9287, !9288, !9291, !9308, !9309, !9310, !9311, !9312, !9313}
!9278 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !9276, file: !663, line: 139, baseType: !22, size: 32)
!9279 = !DIDerivedType(tag: DW_TAG_member, name: "sample_full", scope: !9276, file: !663, line: 140, baseType: !22, size: 32, offset: 32)
!9280 = !DIDerivedType(tag: DW_TAG_member, name: "sample_lines", scope: !9276, file: !663, line: 141, baseType: !22, size: 32, offset: 64)
!9281 = !DIDerivedType(tag: DW_TAG_member, name: "accuracy", scope: !9276, file: !663, line: 142, baseType: !191, size: 32, offset: 96)
!9282 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_mode", scope: !9276, file: !663, line: 143, baseType: !22, size: 32, offset: 128)
!9283 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_alpha", scope: !9276, file: !663, line: 144, baseType: !191, size: 32, offset: 160)
!9284 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_yfac", scope: !9276, file: !663, line: 145, baseType: !191, size: 32, offset: 192)
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "wavefrm_height", scope: !9276, file: !663, line: 146, baseType: !22, size: 32, offset: 224)
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope_alpha", scope: !9276, file: !663, line: 147, baseType: !191, size: 32, offset: 256)
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope_height", scope: !9276, file: !663, line: 148, baseType: !22, size: 32, offset: 288)
!9288 = !DIDerivedType(tag: DW_TAG_member, name: "minmax", scope: !9276, file: !663, line: 149, baseType: !9289, size: 192, offset: 320)
!9289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 192, elements: !9290)
!9290 = !{!194, !421}
!9291 = !DIDerivedType(tag: DW_TAG_member, name: "hist", scope: !9276, file: !663, line: 150, baseType: !9292, size: 41280, offset: 512)
!9292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Histogram", file: !663, line: 118, size: 41280, elements: !9293)
!9293 = !{!9294, !9295, !9296, !9298, !9299, !9300, !9301, !9302, !9303, !9304, !9305, !9306, !9307}
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !9292, file: !663, line: 119, baseType: !22, size: 32)
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !9292, file: !663, line: 120, baseType: !22, size: 32, offset: 32)
!9296 = !DIDerivedType(tag: DW_TAG_member, name: "data_luma", scope: !9292, file: !663, line: 121, baseType: !9297, size: 8192, offset: 64)
!9297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 8192, elements: !613)
!9298 = !DIDerivedType(tag: DW_TAG_member, name: "data_r", scope: !9292, file: !663, line: 122, baseType: !9297, size: 8192, offset: 8256)
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "data_g", scope: !9292, file: !663, line: 123, baseType: !9297, size: 8192, offset: 16448)
!9300 = !DIDerivedType(tag: DW_TAG_member, name: "data_b", scope: !9292, file: !663, line: 124, baseType: !9297, size: 8192, offset: 24640)
!9301 = !DIDerivedType(tag: DW_TAG_member, name: "data_a", scope: !9292, file: !663, line: 125, baseType: !9297, size: 8192, offset: 32832)
!9302 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !9292, file: !663, line: 126, baseType: !191, size: 32, offset: 41024)
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !9292, file: !663, line: 126, baseType: !191, size: 32, offset: 41056)
!9304 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !9292, file: !663, line: 127, baseType: !48, size: 16, offset: 41088)
!9305 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9292, file: !663, line: 128, baseType: !48, size: 16, offset: 41104)
!9306 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !9292, file: !663, line: 129, baseType: !22, size: 32, offset: 41120)
!9307 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !9292, file: !663, line: 133, baseType: !8494, size: 128, offset: 41152)
!9308 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_1", scope: !9276, file: !663, line: 151, baseType: !2299, size: 64, offset: 41792)
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_2", scope: !9276, file: !663, line: 152, baseType: !2299, size: 64, offset: 41856)
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_3", scope: !9276, file: !663, line: 153, baseType: !2299, size: 64, offset: 41920)
!9311 = !DIDerivedType(tag: DW_TAG_member, name: "vecscope", scope: !9276, file: !663, line: 154, baseType: !2299, size: 64, offset: 41984)
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "waveform_tot", scope: !9276, file: !663, line: 155, baseType: !22, size: 32, offset: 42048)
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9276, file: !663, line: 156, baseType: !22, size: 32, offset: 42080)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "sample_line_hist", scope: !9253, file: !9252, line: 723, baseType: !9292, size: 41280, offset: 42880)
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !9253, file: !9252, line: 725, baseType: !258, size: 64, offset: 84160)
!9316 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !9253, file: !9252, line: 727, baseType: !419, size: 64, offset: 84224)
!9317 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !9253, file: !9252, line: 728, baseType: !191, size: 32, offset: 84288)
!9318 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !9253, file: !9252, line: 728, baseType: !191, size: 32, offset: 84320)
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !9253, file: !9252, line: 729, baseType: !191, size: 32, offset: 84352)
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "centx", scope: !9253, file: !9252, line: 730, baseType: !191, size: 32, offset: 84384)
!9321 = !DIDerivedType(tag: DW_TAG_member, name: "centy", scope: !9253, file: !9252, line: 730, baseType: !191, size: 32, offset: 84416)
!9322 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !9253, file: !9252, line: 732, baseType: !14, size: 8, offset: 84448)
!9323 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !9253, file: !9252, line: 733, baseType: !14, size: 8, offset: 84456)
!9324 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9253, file: !9252, line: 734, baseType: !48, size: 16, offset: 84464)
!9325 = !DIDerivedType(tag: DW_TAG_member, name: "curtile", scope: !9253, file: !9252, line: 735, baseType: !48, size: 16, offset: 84480)
!9326 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9253, file: !9252, line: 736, baseType: !48, size: 16, offset: 84496)
!9327 = !DIDerivedType(tag: DW_TAG_member, name: "dt_uv", scope: !9253, file: !9252, line: 737, baseType: !14, size: 8, offset: 84512)
!9328 = !DIDerivedType(tag: DW_TAG_member, name: "sticky", scope: !9253, file: !9252, line: 738, baseType: !14, size: 8, offset: 84520)
!9329 = !DIDerivedType(tag: DW_TAG_member, name: "dt_uvstretch", scope: !9253, file: !9252, line: 739, baseType: !14, size: 8, offset: 84528)
!9330 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !9253, file: !9252, line: 740, baseType: !14, size: 8, offset: 84536)
!9331 = !DIDerivedType(tag: DW_TAG_member, name: "mask_info", scope: !9253, file: !9252, line: 742, baseType: !9332, size: 128, offset: 84544)
!9332 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSpaceInfo", file: !9252, line: 554, baseType: !9333)
!9333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSpaceInfo", file: !9252, line: 545, size: 128, elements: !9334)
!9334 = !{!9335, !9336, !9337, !9338, !9339}
!9335 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !9333, file: !9252, line: 548, baseType: !949, size: 64)
!9336 = !DIDerivedType(tag: DW_TAG_member, name: "draw_flag", scope: !9333, file: !9252, line: 550, baseType: !14, size: 8, offset: 64)
!9337 = !DIDerivedType(tag: DW_TAG_member, name: "draw_type", scope: !9333, file: !9252, line: 551, baseType: !14, size: 8, offset: 72)
!9338 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_mode", scope: !9333, file: !9252, line: 552, baseType: !14, size: 8, offset: 80)
!9339 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !9333, file: !9252, line: 553, baseType: !1063, size: 40, offset: 88)
!9340 = !DILocation(line: 1949, column: 14, scope: !9236)
!9341 = !DILocalVariable(name: "sa", scope: !9236, file: !3, line: 1950, type: !6951)
!9342 = !DILocation(line: 1950, column: 11, scope: !9236)
!9343 = !DILocation(line: 1950, column: 28, scope: !9236)
!9344 = !DILocation(line: 1950, column: 16, scope: !9236)
!9345 = !DILocalVariable(name: "obedit", scope: !9236, file: !3, line: 1951, type: !2609)
!9346 = !DILocation(line: 1951, column: 10, scope: !9236)
!9347 = !DILocation(line: 1953, column: 25, scope: !9236)
!9348 = !DILocation(line: 1953, column: 10, scope: !9236)
!9349 = !DILocation(line: 1953, column: 8, scope: !9236)
!9350 = !DILocation(line: 1954, column: 32, scope: !9236)
!9351 = !DILocation(line: 1954, column: 11, scope: !9236)
!9352 = !DILocation(line: 1954, column: 9, scope: !9236)
!9353 = !DILocation(line: 1955, column: 28, scope: !9236)
!9354 = !DILocation(line: 1955, column: 9, scope: !9236)
!9355 = !DILocation(line: 1955, column: 7, scope: !9236)
!9356 = !DILocation(line: 1957, column: 25, scope: !9236)
!9357 = !DILocation(line: 1957, column: 29, scope: !9236)
!9358 = !DILocation(line: 1957, column: 10, scope: !9236)
!9359 = !DILocation(line: 1957, column: 8, scope: !9236)
!9360 = !DILocation(line: 1959, column: 6, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9236, file: !3, line: 1959, column: 6)
!9362 = !DILocation(line: 1959, column: 6, scope: !9236)
!9363 = !DILocalVariable(name: "i", scope: !9364, file: !3, line: 1960, type: !22)
!9364 = distinct !DILexicalBlock(scope: !9361, file: !3, line: 1959, column: 16)
!9365 = !DILocation(line: 1960, column: 7, scope: !9364)
!9366 = !DILocation(line: 1962, column: 17, scope: !9364)
!9367 = !DILocation(line: 1962, column: 21, scope: !9364)
!9368 = !DILocation(line: 1962, column: 35, scope: !9364)
!9369 = !DILocation(line: 1962, column: 42, scope: !9364)
!9370 = !DILocation(line: 1962, column: 3, scope: !9364)
!9371 = !DILocation(line: 1963, column: 19, scope: !9364)
!9372 = !DILocation(line: 1963, column: 23, scope: !9364)
!9373 = !DILocation(line: 1963, column: 41, scope: !9364)
!9374 = !DILocation(line: 1963, column: 48, scope: !9364)
!9375 = !DILocation(line: 1963, column: 3, scope: !9364)
!9376 = !DILocation(line: 1964, column: 19, scope: !9364)
!9377 = !DILocation(line: 1964, column: 23, scope: !9364)
!9378 = !DILocation(line: 1964, column: 44, scope: !9364)
!9379 = !DILocation(line: 1964, column: 51, scope: !9364)
!9380 = !DILocation(line: 1964, column: 3, scope: !9364)
!9381 = !DILocation(line: 1965, column: 15, scope: !9364)
!9382 = !DILocation(line: 1965, column: 19, scope: !9364)
!9383 = !DILocation(line: 1965, column: 41, scope: !9364)
!9384 = !DILocation(line: 1965, column: 48, scope: !9364)
!9385 = !DILocation(line: 1965, column: 3, scope: !9364)
!9386 = !DILocation(line: 1966, column: 19, scope: !9364)
!9387 = !DILocation(line: 1966, column: 23, scope: !9364)
!9388 = !DILocation(line: 1966, column: 45, scope: !9364)
!9389 = !DILocation(line: 1966, column: 52, scope: !9364)
!9390 = !DILocation(line: 1966, column: 3, scope: !9364)
!9391 = !DILocation(line: 1967, column: 16, scope: !9364)
!9392 = !DILocation(line: 1967, column: 20, scope: !9364)
!9393 = !DILocation(line: 1967, column: 33, scope: !9364)
!9394 = !DILocation(line: 1967, column: 40, scope: !9364)
!9395 = !DILocation(line: 1967, column: 3, scope: !9364)
!9396 = !DILocation(line: 1968, column: 16, scope: !9364)
!9397 = !DILocation(line: 1968, column: 20, scope: !9364)
!9398 = !DILocation(line: 1968, column: 40, scope: !9364)
!9399 = !DILocation(line: 1968, column: 47, scope: !9364)
!9400 = !DILocation(line: 1968, column: 3, scope: !9364)
!9401 = !DILocation(line: 1971, column: 10, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 1971, column: 3)
!9403 = !DILocation(line: 1971, column: 8, scope: !9402)
!9404 = !DILocation(line: 1971, column: 15, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9402, file: !3, line: 1971, column: 3)
!9406 = !DILocation(line: 1971, column: 19, scope: !9405)
!9407 = !DILocation(line: 1971, column: 26, scope: !9405)
!9408 = !DILocation(line: 1971, column: 17, scope: !9405)
!9409 = !DILocation(line: 1971, column: 3, scope: !9402)
!9410 = !DILocalVariable(name: "element", scope: !9411, file: !3, line: 1972, type: !2206)
!9411 = distinct !DILexicalBlock(scope: !9405, file: !3, line: 1971, column: 47)
!9412 = !DILocation(line: 1972, column: 15, scope: !9411)
!9413 = !DILocalVariable(name: "itemptr", scope: !9411, file: !3, line: 1973, type: !3813)
!9414 = !DILocation(line: 1973, column: 15, scope: !9411)
!9415 = !DILocation(line: 1974, column: 8, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9411, file: !3, line: 1974, column: 8)
!9417 = !DILocation(line: 1974, column: 15, scope: !9416)
!9418 = !DILocation(line: 1974, column: 20, scope: !9416)
!9419 = !DILocation(line: 1974, column: 8, scope: !9411)
!9420 = !DILocation(line: 1975, column: 15, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 1974, column: 36)
!9422 = !DILocation(line: 1975, column: 22, scope: !9421)
!9423 = !DILocation(line: 1975, column: 38, scope: !9421)
!9424 = !DILocation(line: 1975, column: 13, scope: !9421)
!9425 = !DILocation(line: 1976, column: 4, scope: !9421)
!9426 = !DILocation(line: 1978, column: 26, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 1977, column: 9)
!9428 = !DILocation(line: 1978, column: 33, scope: !9427)
!9429 = !DILocation(line: 1978, column: 49, scope: !9427)
!9430 = !DILocation(line: 1978, column: 16, scope: !9427)
!9431 = !DILocation(line: 1978, column: 54, scope: !9427)
!9432 = !DILocation(line: 1978, column: 13, scope: !9427)
!9433 = !DILocation(line: 1980, column: 23, scope: !9411)
!9434 = !DILocation(line: 1980, column: 27, scope: !9411)
!9435 = !DILocation(line: 1980, column: 4, scope: !9411)
!9436 = !DILocation(line: 1982, column: 40, scope: !9411)
!9437 = !DILocation(line: 1982, column: 4, scope: !9411)
!9438 = !DILocation(line: 1983, column: 43, scope: !9411)
!9439 = !DILocation(line: 1983, column: 52, scope: !9411)
!9440 = !DILocation(line: 1983, column: 4, scope: !9411)
!9441 = !DILocation(line: 1984, column: 3, scope: !9411)
!9442 = !DILocation(line: 1971, column: 43, scope: !9405)
!9443 = !DILocation(line: 1971, column: 3, scope: !9405)
!9444 = distinct !{!9444, !9409, !9445}
!9445 = !DILocation(line: 1984, column: 3, scope: !9402)
!9446 = !DILocation(line: 1986, column: 29, scope: !9364)
!9447 = !DILocation(line: 1986, column: 35, scope: !9364)
!9448 = !DILocation(line: 1986, column: 42, scope: !9364)
!9449 = !DILocation(line: 1986, column: 3, scope: !9364)
!9450 = !DILocation(line: 1987, column: 2, scope: !9364)
!9451 = !DILocation(line: 1989, column: 6, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9236, file: !3, line: 1989, column: 6)
!9453 = !DILocation(line: 1989, column: 6, scope: !9236)
!9454 = !DILocation(line: 1990, column: 23, scope: !9452)
!9455 = !DILocation(line: 1990, column: 3, scope: !9452)
!9456 = !DILocation(line: 1992, column: 39, scope: !9236)
!9457 = !DILocation(line: 1992, column: 25, scope: !9236)
!9458 = !DILocation(line: 1992, column: 43, scope: !9236)
!9459 = !DILocation(line: 1992, column: 49, scope: !9236)
!9460 = !DILocation(line: 1992, column: 56, scope: !9236)
!9461 = !DILocation(line: 1992, column: 2, scope: !9236)
!9462 = !DILocation(line: 1994, column: 20, scope: !9236)
!9463 = !DILocation(line: 1994, column: 28, scope: !9236)
!9464 = !DILocation(line: 1994, column: 2, scope: !9236)
!9465 = !DILocation(line: 1995, column: 24, scope: !9236)
!9466 = !DILocation(line: 1995, column: 46, scope: !9236)
!9467 = !DILocation(line: 1995, column: 54, scope: !9236)
!9468 = !DILocation(line: 1995, column: 2, scope: !9236)
!9469 = !DILocation(line: 1997, column: 15, scope: !9236)
!9470 = !DILocation(line: 1997, column: 2, scope: !9236)
!9471 = !DILocation(line: 1998, column: 2, scope: !9236)
!9472 = !DILocation(line: 1998, column: 6, scope: !9236)
!9473 = !DILocation(line: 1998, column: 17, scope: !9236)
!9474 = !DILocation(line: 1999, column: 1, scope: !9236)
