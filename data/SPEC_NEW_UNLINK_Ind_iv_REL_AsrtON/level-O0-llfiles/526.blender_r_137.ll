; ModuleID = 'blender/source/blender/blenkernel/intern/curve.c'
source_filename = "blender/source/blender/blenkernel/intern/curve.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type { i32 }
%struct.MainLock = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.Curve = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.ListBase, %struct.EditNurb*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.Key*, %struct.Material**, [3 x float], [3 x float], [3 x float], i16, i16, i16, i16, float, float, i32, i16, i16, i32, float, float, float, i16, i16, i16, i16, i32, i32, [4 x i8], i16, i8, i8, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i8*, %struct.EditFont*, [64 x i8], %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.TextBox*, i32, i32, %struct.CharInfo*, %struct.CharInfo, float, float, float, i8, i8, [2 x i8] }
%struct.AnimData = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.EditNurb = type { %struct.ListBase, %struct.GHash*, i32, [4 x i8] }
%struct.GHash = type opaque
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type { %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Path* }
%struct.Path = type { %struct.PathPoint*, i32, float }
%struct.PathPoint = type { [4 x float], [4 x float], float, float }
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rctf = type { float, float, float, float }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.Ipo = type opaque
%struct.Key = type { %struct.ID, %struct.AnimData*, %struct.KeyBlock*, [32 x i8], i32, i32, %struct.ListBase, %struct.Ipo*, %struct.ID*, i16, i16, i16, i16, float, i32 }
%struct.KeyBlock = type { %struct.KeyBlock*, %struct.KeyBlock*, float, float, i16, i16, i16, i16, i32, i32, i8*, [64 x i8], [64 x i8], float, float }
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.EditFont = type { i32*, %struct.CharInfo*, i32*, %struct.CharInfo*, %struct.EditFontSelBox*, [4 x [2 x float]], i32, i32, i32, i32 }
%struct.EditFontSelBox = type { float, float, float, float, float }
%struct.VFont = type { %struct.ID, [1024 x i8], %struct.VFontData*, %struct.PackedFile*, %struct.PackedFile* }
%struct.VFontData = type opaque
%struct.TextBox = type { float, float, float, float }
%struct.CharInfo = type { i16, i16, i8, i8, i16 }
%struct.Nurb = type { %struct.Nurb*, %struct.Nurb*, i16, i16, i16, i16, i32, i32, [2 x i16], i16, i16, i16, i16, i16, i16, float*, float*, %struct.BPoint*, %struct.BezTriple*, i16, i16, i32 }
%struct.BPoint = type { [4 x float], float, float, i16, i16, float, float }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.DispList = type { %struct.DispList*, %struct.DispList*, i16, i16, i32, i32, i16, i16, float*, float*, i32*, i32, i32, i32* }
%struct.BevList = type { %struct.BevList*, %struct.BevList*, i32, i32, i32, i32, i32, i32*, float*, [0 x %struct.BevPoint] }
%struct.BevPoint = type { [3 x float], float, float, float, float, float, float, [3 x float], [3 x float], [4 x float], i16, i16 }
%struct.BevelSort = type { %struct.BevList*, float, i32 }

@MEM_freeN = external dso_local global void (i8*)*, align 8
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [4 x i8] c"str\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"Text\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.2 = private unnamed_addr constant [12 x i8] c"strinfo new\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"textbox\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@G = external dso_local global %struct.Global, align 8
@.str.4 = private unnamed_addr constant [9 x i8] c"boundbox\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"duplicateNurb\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"duplicateNurb2\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"duplicateNurb3\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"duplicateNurb4\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"duplicateNurb5\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"copyNurb\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"copyNurb2\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"copyNurb3\00", align 1
@MEM_recallocN_id = external dso_local global i8* (i8*, i64, i8*)*, align 8
@__func__.BKE_nurb_points_add = private unnamed_addr constant [20 x i8] c"BKE_nurb_points_add\00", align 1
@__func__.BKE_nurb_bezierPoints_add = private unnamed_addr constant [26 x i8] c"BKE_nurb_bezierPoints_add\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"makeNurbfaces1\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"makeNurbfaces3\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"makeNurbfaces4\00", align 1
@.str.16 = private unnamed_addr constant [15 x i8] c"makeNurbfaces5\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"makeNurbcurve1\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"makeNurbcurve3\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"make_orco\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"temp data\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"cu_orco\00", align 1
@.str.22 = private unnamed_addr constant [16 x i8] c"makebevelcurve1\00", align 1
@.str.23 = private unnamed_addr constant [16 x i8] c"makebevelcurve2\00", align 1
@.str.24 = private unnamed_addr constant [18 x i8] c"makebevelcurve p1\00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"makebevelcurve p2\00", align 1
@.str.26 = private unnamed_addr constant [18 x i8] c"makebevelcurve p3\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"makeBevelList1\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"makeBevelList2\00", align 1
@.str.29 = private unnamed_addr constant [22 x i8] c"makeBevelList2_seglen\00", align 1
@.str.30 = private unnamed_addr constant [27 x i8] c"makeBevelList2_segbevcount\00", align 1
@.str.31 = private unnamed_addr constant [17 x i8] c"makeBevelBPoints\00", align 1
@.str.32 = private unnamed_addr constant [24 x i8] c"makeBevelBPoints_seglen\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"makeBevelBPoints_segbevcount\00", align 1
@.str.34 = private unnamed_addr constant [15 x i8] c"makeBevelList3\00", align 1
@.str.35 = private unnamed_addr constant [22 x i8] c"makeBevelList3_seglen\00", align 1
@.str.36 = private unnamed_addr constant [27 x i8] c"makeBevelList3_segbevcount\00", align 1
@.str.37 = private unnamed_addr constant [15 x i8] c"makeBevelList4\00", align 1
@.str.38 = private unnamed_addr constant [15 x i8] c"makeBevelList5\00", align 1
@.str.39 = private unnamed_addr constant [13 x i8] c"switchdirect\00", align 1
@.str.40 = private unnamed_addr constant [8 x i8] c"cu_vcos\00", align 1
@.str.41 = private unnamed_addr constant [15 x i8] c"setsplinetype2\00", align 1
@.str.42 = private unnamed_addr constant [14 x i8] c"setsplinetype\00", align 1
@.str.43 = private unnamed_addr constant [10 x i8] c"makeknots\00", align 1
@.str.44 = private unnamed_addr constant [57 x i8] c"bez nurb curve order is not 3 or 4, should never happen\0A\00", align 1
@__const.make_bevel_list_3D_minimum_twist.vec_1 = private unnamed_addr constant [3 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], align 4
@__const.make_bevel_list_3D_minimum_twist.vec_2 = private unnamed_addr constant [3 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], align 4
@__const.bevel_list_smooth.zaxis = private unnamed_addr constant [3 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_unlink(%struct.Curve* %cu) #0 !dbg !1846 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %a = alloca i32, align 4
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !1850, metadata !DIExpression()), !dbg !1851
  call void @llvm.dbg.declare(metadata i32* %a, metadata !1852, metadata !DIExpression()), !dbg !1853
  store i32 0, i32* %a, align 4, !dbg !1854
  br label %for.cond, !dbg !1856

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %a, align 4, !dbg !1857
  %1 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !1859
  %totcol = getelementptr inbounds %struct.Curve, %struct.Curve* %1, i32 0, i32 22, !dbg !1860
  %2 = load i16, i16* %totcol, align 2, !dbg !1860
  %conv = sext i16 %2 to i32, !dbg !1859
  %cmp = icmp slt i32 %0, %conv, !dbg !1861
  br i1 %cmp, label %for.body, label %for.end, !dbg !1862

for.body:                                         ; preds = %for.cond
  %3 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !1863
  %mat = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 10, !dbg !1866
  %4 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !1866
  %5 = load i32, i32* %a, align 4, !dbg !1867
  %idxprom = sext i32 %5 to i64, !dbg !1863
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %4, i64 %idxprom, !dbg !1863
  %6 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !1863
  %tobool = icmp ne %struct.Material* %6, null, !dbg !1863
  br i1 %tobool, label %if.then, label %if.end, !dbg !1868

if.then:                                          ; preds = %for.body
  %7 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !1869
  %mat2 = getelementptr inbounds %struct.Curve, %struct.Curve* %7, i32 0, i32 10, !dbg !1870
  %8 = load %struct.Material**, %struct.Material*** %mat2, align 8, !dbg !1870
  %9 = load i32, i32* %a, align 4, !dbg !1871
  %idxprom3 = sext i32 %9 to i64, !dbg !1869
  %arrayidx4 = getelementptr inbounds %struct.Material*, %struct.Material** %8, i64 %idxprom3, !dbg !1869
  %10 = load %struct.Material*, %struct.Material** %arrayidx4, align 8, !dbg !1869
  %id = getelementptr inbounds %struct.Material, %struct.Material* %10, i32 0, i32 0, !dbg !1872
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !1873
  %11 = load i32, i32* %us, align 4, !dbg !1874
  %dec = add nsw i32 %11, -1, !dbg !1874
  store i32 %dec, i32* %us, align 4, !dbg !1874
  br label %if.end, !dbg !1869

if.end:                                           ; preds = %if.then, %for.body
  %12 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !1875
  %mat5 = getelementptr inbounds %struct.Curve, %struct.Curve* %12, i32 0, i32 10, !dbg !1876
  %13 = load %struct.Material**, %struct.Material*** %mat5, align 8, !dbg !1876
  %14 = load i32, i32* %a, align 4, !dbg !1877
  %idxprom6 = sext i32 %14 to i64, !dbg !1875
  %arrayidx7 = getelementptr inbounds %struct.Material*, %struct.Material** %13, i64 %idxprom6, !dbg !1875
  store %struct.Material* null, %struct.Material** %arrayidx7, align 8, !dbg !1878
  br label %for.inc, !dbg !1879

for.inc:                                          ; preds = %if.end
  %15 = load i32, i32* %a, align 4, !dbg !1880
  %inc = add nsw i32 %15, 1, !dbg !1880
  store i32 %inc, i32* %a, align 4, !dbg !1880
  br label %for.cond, !dbg !1881, !llvm.loop !1882

for.end:                                          ; preds = %for.cond
  %16 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !1884
  %vfont = getelementptr inbounds %struct.Curve, %struct.Curve* %16, i32 0, i32 55, !dbg !1886
  %17 = load %struct.VFont*, %struct.VFont** %vfont, align 8, !dbg !1886
  %tobool8 = icmp ne %struct.VFont* %17, null, !dbg !1884
  br i1 %tobool8, label %if.then9, label %if.end14, !dbg !1887

if.then9:                                         ; preds = %for.end
  %18 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !1888
  %vfont10 = getelementptr inbounds %struct.Curve, %struct.Curve* %18, i32 0, i32 55, !dbg !1889
  %19 = load %struct.VFont*, %struct.VFont** %vfont10, align 8, !dbg !1889
  %id11 = getelementptr inbounds %struct.VFont, %struct.VFont* %19, i32 0, i32 0, !dbg !1890
  %us12 = getelementptr inbounds %struct.ID, %struct.ID* %id11, i32 0, i32 6, !dbg !1891
  %20 = load i32, i32* %us12, align 4, !dbg !1892
  %dec13 = add nsw i32 %20, -1, !dbg !1892
  store i32 %dec13, i32* %us12, align 4, !dbg !1892
  br label %if.end14, !dbg !1888

if.end14:                                         ; preds = %if.then9, %for.end
  %21 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !1893
  %vfont15 = getelementptr inbounds %struct.Curve, %struct.Curve* %21, i32 0, i32 55, !dbg !1894
  store %struct.VFont* null, %struct.VFont** %vfont15, align 8, !dbg !1895
  %22 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !1896
  %vfontb = getelementptr inbounds %struct.Curve, %struct.Curve* %22, i32 0, i32 56, !dbg !1898
  %23 = load %struct.VFont*, %struct.VFont** %vfontb, align 8, !dbg !1898
  %tobool16 = icmp ne %struct.VFont* %23, null, !dbg !1896
  br i1 %tobool16, label %if.then17, label %if.end22, !dbg !1899

if.then17:                                        ; preds = %if.end14
  %24 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !1900
  %vfontb18 = getelementptr inbounds %struct.Curve, %struct.Curve* %24, i32 0, i32 56, !dbg !1901
  %25 = load %struct.VFont*, %struct.VFont** %vfontb18, align 8, !dbg !1901
  %id19 = getelementptr inbounds %struct.VFont, %struct.VFont* %25, i32 0, i32 0, !dbg !1902
  %us20 = getelementptr inbounds %struct.ID, %struct.ID* %id19, i32 0, i32 6, !dbg !1903
  %26 = load i32, i32* %us20, align 4, !dbg !1904
  %dec21 = add nsw i32 %26, -1, !dbg !1904
  store i32 %dec21, i32* %us20, align 4, !dbg !1904
  br label %if.end22, !dbg !1900

if.end22:                                         ; preds = %if.then17, %if.end14
  %27 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !1905
  %vfontb23 = getelementptr inbounds %struct.Curve, %struct.Curve* %27, i32 0, i32 56, !dbg !1906
  store %struct.VFont* null, %struct.VFont** %vfontb23, align 8, !dbg !1907
  %28 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !1908
  %vfonti = getelementptr inbounds %struct.Curve, %struct.Curve* %28, i32 0, i32 57, !dbg !1910
  %29 = load %struct.VFont*, %struct.VFont** %vfonti, align 8, !dbg !1910
  %tobool24 = icmp ne %struct.VFont* %29, null, !dbg !1908
  br i1 %tobool24, label %if.then25, label %if.end30, !dbg !1911

if.then25:                                        ; preds = %if.end22
  %30 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !1912
  %vfonti26 = getelementptr inbounds %struct.Curve, %struct.Curve* %30, i32 0, i32 57, !dbg !1913
  %31 = load %struct.VFont*, %struct.VFont** %vfonti26, align 8, !dbg !1913
  %id27 = getelementptr inbounds %struct.VFont, %struct.VFont* %31, i32 0, i32 0, !dbg !1914
  %us28 = getelementptr inbounds %struct.ID, %struct.ID* %id27, i32 0, i32 6, !dbg !1915
  %32 = load i32, i32* %us28, align 4, !dbg !1916
  %dec29 = add nsw i32 %32, -1, !dbg !1916
  store i32 %dec29, i32* %us28, align 4, !dbg !1916
  br label %if.end30, !dbg !1912

if.end30:                                         ; preds = %if.then25, %if.end22
  %33 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !1917
  %vfonti31 = getelementptr inbounds %struct.Curve, %struct.Curve* %33, i32 0, i32 57, !dbg !1918
  store %struct.VFont* null, %struct.VFont** %vfonti31, align 8, !dbg !1919
  %34 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !1920
  %vfontbi = getelementptr inbounds %struct.Curve, %struct.Curve* %34, i32 0, i32 58, !dbg !1922
  %35 = load %struct.VFont*, %struct.VFont** %vfontbi, align 8, !dbg !1922
  %tobool32 = icmp ne %struct.VFont* %35, null, !dbg !1920
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !1923

if.then33:                                        ; preds = %if.end30
  %36 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !1924
  %vfontbi34 = getelementptr inbounds %struct.Curve, %struct.Curve* %36, i32 0, i32 58, !dbg !1925
  %37 = load %struct.VFont*, %struct.VFont** %vfontbi34, align 8, !dbg !1925
  %id35 = getelementptr inbounds %struct.VFont, %struct.VFont* %37, i32 0, i32 0, !dbg !1926
  %us36 = getelementptr inbounds %struct.ID, %struct.ID* %id35, i32 0, i32 6, !dbg !1927
  %38 = load i32, i32* %us36, align 4, !dbg !1928
  %dec37 = add nsw i32 %38, -1, !dbg !1928
  store i32 %dec37, i32* %us36, align 4, !dbg !1928
  br label %if.end38, !dbg !1924

if.end38:                                         ; preds = %if.then33, %if.end30
  %39 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !1929
  %vfontbi39 = getelementptr inbounds %struct.Curve, %struct.Curve* %39, i32 0, i32 58, !dbg !1930
  store %struct.VFont* null, %struct.VFont** %vfontbi39, align 8, !dbg !1931
  %40 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !1932
  %key = getelementptr inbounds %struct.Curve, %struct.Curve* %40, i32 0, i32 9, !dbg !1934
  %41 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !1934
  %tobool40 = icmp ne %struct.Key* %41, null, !dbg !1932
  br i1 %tobool40, label %if.then41, label %if.end46, !dbg !1935

if.then41:                                        ; preds = %if.end38
  %42 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !1936
  %key42 = getelementptr inbounds %struct.Curve, %struct.Curve* %42, i32 0, i32 9, !dbg !1937
  %43 = load %struct.Key*, %struct.Key** %key42, align 8, !dbg !1937
  %id43 = getelementptr inbounds %struct.Key, %struct.Key* %43, i32 0, i32 0, !dbg !1938
  %us44 = getelementptr inbounds %struct.ID, %struct.ID* %id43, i32 0, i32 6, !dbg !1939
  %44 = load i32, i32* %us44, align 4, !dbg !1940
  %dec45 = add nsw i32 %44, -1, !dbg !1940
  store i32 %dec45, i32* %us44, align 4, !dbg !1940
  br label %if.end46, !dbg !1936

if.end46:                                         ; preds = %if.then41, %if.end38
  %45 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !1941
  %key47 = getelementptr inbounds %struct.Curve, %struct.Curve* %45, i32 0, i32 9, !dbg !1942
  store %struct.Key* null, %struct.Key** %key47, align 8, !dbg !1943
  ret void, !dbg !1944
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_editfont_free(%struct.Curve* %cu) #0 !dbg !1945 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %ef = alloca %struct.EditFont*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !1946, metadata !DIExpression()), !dbg !1947
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !1948
  %editfont = getelementptr inbounds %struct.Curve, %struct.Curve* %0, i32 0, i32 53, !dbg !1950
  %1 = load %struct.EditFont*, %struct.EditFont** %editfont, align 8, !dbg !1950
  %tobool = icmp ne %struct.EditFont* %1, null, !dbg !1948
  br i1 %tobool, label %if.then, label %if.end22, !dbg !1951

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.EditFont** %ef, metadata !1952, metadata !DIExpression()), !dbg !1956
  %2 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !1957
  %editfont1 = getelementptr inbounds %struct.Curve, %struct.Curve* %2, i32 0, i32 53, !dbg !1958
  %3 = load %struct.EditFont*, %struct.EditFont** %editfont1, align 8, !dbg !1958
  store %struct.EditFont* %3, %struct.EditFont** %ef, align 8, !dbg !1956
  %4 = load %struct.EditFont*, %struct.EditFont** %ef, align 8, !dbg !1959
  %textbuf = getelementptr inbounds %struct.EditFont, %struct.EditFont* %4, i32 0, i32 2, !dbg !1961
  %5 = load i32*, i32** %textbuf, align 8, !dbg !1961
  %tobool2 = icmp ne i32* %5, null, !dbg !1959
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !1962

if.then3:                                         ; preds = %if.then
  %6 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1963
  %7 = load %struct.EditFont*, %struct.EditFont** %ef, align 8, !dbg !1964
  %textbuf4 = getelementptr inbounds %struct.EditFont, %struct.EditFont* %7, i32 0, i32 2, !dbg !1965
  %8 = load i32*, i32** %textbuf4, align 8, !dbg !1965
  %9 = bitcast i32* %8 to i8*, !dbg !1964
  call void %6(i8* %9), !dbg !1963
  br label %if.end, !dbg !1963

if.end:                                           ; preds = %if.then3, %if.then
  %10 = load %struct.EditFont*, %struct.EditFont** %ef, align 8, !dbg !1966
  %textbufinfo = getelementptr inbounds %struct.EditFont, %struct.EditFont* %10, i32 0, i32 3, !dbg !1968
  %11 = load %struct.CharInfo*, %struct.CharInfo** %textbufinfo, align 8, !dbg !1968
  %tobool5 = icmp ne %struct.CharInfo* %11, null, !dbg !1966
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !1969

if.then6:                                         ; preds = %if.end
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1970
  %13 = load %struct.EditFont*, %struct.EditFont** %ef, align 8, !dbg !1971
  %textbufinfo7 = getelementptr inbounds %struct.EditFont, %struct.EditFont* %13, i32 0, i32 3, !dbg !1972
  %14 = load %struct.CharInfo*, %struct.CharInfo** %textbufinfo7, align 8, !dbg !1972
  %15 = bitcast %struct.CharInfo* %14 to i8*, !dbg !1971
  call void %12(i8* %15), !dbg !1970
  br label %if.end8, !dbg !1970

if.end8:                                          ; preds = %if.then6, %if.end
  %16 = load %struct.EditFont*, %struct.EditFont** %ef, align 8, !dbg !1973
  %copybuf = getelementptr inbounds %struct.EditFont, %struct.EditFont* %16, i32 0, i32 0, !dbg !1975
  %17 = load i32*, i32** %copybuf, align 8, !dbg !1975
  %tobool9 = icmp ne i32* %17, null, !dbg !1973
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !1976

if.then10:                                        ; preds = %if.end8
  %18 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1977
  %19 = load %struct.EditFont*, %struct.EditFont** %ef, align 8, !dbg !1978
  %copybuf11 = getelementptr inbounds %struct.EditFont, %struct.EditFont* %19, i32 0, i32 0, !dbg !1979
  %20 = load i32*, i32** %copybuf11, align 8, !dbg !1979
  %21 = bitcast i32* %20 to i8*, !dbg !1978
  call void %18(i8* %21), !dbg !1977
  br label %if.end12, !dbg !1977

if.end12:                                         ; preds = %if.then10, %if.end8
  %22 = load %struct.EditFont*, %struct.EditFont** %ef, align 8, !dbg !1980
  %copybufinfo = getelementptr inbounds %struct.EditFont, %struct.EditFont* %22, i32 0, i32 1, !dbg !1982
  %23 = load %struct.CharInfo*, %struct.CharInfo** %copybufinfo, align 8, !dbg !1982
  %tobool13 = icmp ne %struct.CharInfo* %23, null, !dbg !1980
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !1983

if.then14:                                        ; preds = %if.end12
  %24 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1984
  %25 = load %struct.EditFont*, %struct.EditFont** %ef, align 8, !dbg !1985
  %copybufinfo15 = getelementptr inbounds %struct.EditFont, %struct.EditFont* %25, i32 0, i32 1, !dbg !1986
  %26 = load %struct.CharInfo*, %struct.CharInfo** %copybufinfo15, align 8, !dbg !1986
  %27 = bitcast %struct.CharInfo* %26 to i8*, !dbg !1985
  call void %24(i8* %27), !dbg !1984
  br label %if.end16, !dbg !1984

if.end16:                                         ; preds = %if.then14, %if.end12
  %28 = load %struct.EditFont*, %struct.EditFont** %ef, align 8, !dbg !1987
  %selboxes = getelementptr inbounds %struct.EditFont, %struct.EditFont* %28, i32 0, i32 4, !dbg !1989
  %29 = load %struct.EditFontSelBox*, %struct.EditFontSelBox** %selboxes, align 8, !dbg !1989
  %tobool17 = icmp ne %struct.EditFontSelBox* %29, null, !dbg !1987
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !1990

if.then18:                                        ; preds = %if.end16
  %30 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1991
  %31 = load %struct.EditFont*, %struct.EditFont** %ef, align 8, !dbg !1992
  %selboxes19 = getelementptr inbounds %struct.EditFont, %struct.EditFont* %31, i32 0, i32 4, !dbg !1993
  %32 = load %struct.EditFontSelBox*, %struct.EditFontSelBox** %selboxes19, align 8, !dbg !1993
  %33 = bitcast %struct.EditFontSelBox* %32 to i8*, !dbg !1992
  call void %30(i8* %33), !dbg !1991
  br label %if.end20, !dbg !1991

if.end20:                                         ; preds = %if.then18, %if.end16
  %34 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !1994
  %35 = load %struct.EditFont*, %struct.EditFont** %ef, align 8, !dbg !1995
  %36 = bitcast %struct.EditFont* %35 to i8*, !dbg !1995
  call void %34(i8* %36), !dbg !1994
  %37 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !1996
  %editfont21 = getelementptr inbounds %struct.Curve, %struct.Curve* %37, i32 0, i32 53, !dbg !1997
  store %struct.EditFont* null, %struct.EditFont** %editfont21, align 8, !dbg !1998
  br label %if.end22, !dbg !1999

if.end22:                                         ; preds = %if.end20, %entry
  ret void, !dbg !2000
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_editNurb_keyIndex_free(%struct.EditNurb* %editnurb) #0 !dbg !2001 {
entry:
  %editnurb.addr = alloca %struct.EditNurb*, align 8
  store %struct.EditNurb* %editnurb, %struct.EditNurb** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditNurb** %editnurb.addr, metadata !2004, metadata !DIExpression()), !dbg !2005
  %0 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !2006
  %keyindex = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %0, i32 0, i32 1, !dbg !2008
  %1 = load %struct.GHash*, %struct.GHash** %keyindex, align 8, !dbg !2008
  %tobool = icmp ne %struct.GHash* %1, null, !dbg !2006
  br i1 %tobool, label %if.end, label %if.then, !dbg !2009

if.then:                                          ; preds = %entry
  br label %return, !dbg !2010

if.end:                                           ; preds = %entry
  %2 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !2012
  %keyindex1 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %2, i32 0, i32 1, !dbg !2013
  %3 = load %struct.GHash*, %struct.GHash** %keyindex1, align 8, !dbg !2013
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2014
  call void @BLI_ghash_free(%struct.GHash* %3, void (i8*)* null, void (i8*)* %4), !dbg !2015
  %5 = load %struct.EditNurb*, %struct.EditNurb** %editnurb.addr, align 8, !dbg !2016
  %keyindex2 = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %5, i32 0, i32 1, !dbg !2017
  store %struct.GHash* null, %struct.GHash** %keyindex2, align 8, !dbg !2018
  br label %return, !dbg !2019

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !2019
}

declare dso_local void @BLI_ghash_free(%struct.GHash*, void (i8*)*, void (i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_editNurb_free(%struct.Curve* %cu) #0 !dbg !2020 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !2021, metadata !DIExpression()), !dbg !2022
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2023
  %editnurb = getelementptr inbounds %struct.Curve, %struct.Curve* %0, i32 0, i32 4, !dbg !2025
  %1 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !2025
  %tobool = icmp ne %struct.EditNurb* %1, null, !dbg !2023
  br i1 %tobool, label %if.then, label %if.end, !dbg !2026

if.then:                                          ; preds = %entry
  %2 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2027
  %editnurb1 = getelementptr inbounds %struct.Curve, %struct.Curve* %2, i32 0, i32 4, !dbg !2029
  %3 = load %struct.EditNurb*, %struct.EditNurb** %editnurb1, align 8, !dbg !2029
  %nurbs = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %3, i32 0, i32 0, !dbg !2030
  call void @BKE_nurbList_free(%struct.ListBase* %nurbs), !dbg !2031
  %4 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2032
  %editnurb2 = getelementptr inbounds %struct.Curve, %struct.Curve* %4, i32 0, i32 4, !dbg !2033
  %5 = load %struct.EditNurb*, %struct.EditNurb** %editnurb2, align 8, !dbg !2033
  call void @BKE_curve_editNurb_keyIndex_free(%struct.EditNurb* %5), !dbg !2034
  %6 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2035
  %7 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2036
  %editnurb3 = getelementptr inbounds %struct.Curve, %struct.Curve* %7, i32 0, i32 4, !dbg !2037
  %8 = load %struct.EditNurb*, %struct.EditNurb** %editnurb3, align 8, !dbg !2037
  %9 = bitcast %struct.EditNurb* %8 to i8*, !dbg !2036
  call void %6(i8* %9), !dbg !2035
  %10 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2038
  %editnurb4 = getelementptr inbounds %struct.Curve, %struct.Curve* %10, i32 0, i32 4, !dbg !2039
  store %struct.EditNurb* null, %struct.EditNurb** %editnurb4, align 8, !dbg !2040
  br label %if.end, !dbg !2041

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2042
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurbList_free(%struct.ListBase* %lb) #0 !dbg !2043 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %next = alloca %struct.Nurb*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !2046, metadata !DIExpression()), !dbg !2047
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !2048, metadata !DIExpression()), !dbg !2049
  call void @llvm.dbg.declare(metadata %struct.Nurb** %next, metadata !2050, metadata !DIExpression()), !dbg !2051
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !2052
  %cmp = icmp eq %struct.ListBase* %0, null, !dbg !2054
  br i1 %cmp, label %if.then, label %if.end, !dbg !2055

if.then:                                          ; preds = %entry
  br label %return, !dbg !2056

if.end:                                           ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !2057
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !2058
  %2 = load i8*, i8** %first, align 8, !dbg !2058
  %3 = bitcast i8* %2 to %struct.Nurb*, !dbg !2057
  store %struct.Nurb* %3, %struct.Nurb** %nu, align 8, !dbg !2059
  br label %while.cond, !dbg !2060

while.cond:                                       ; preds = %while.body, %if.end
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !2061
  %tobool = icmp ne %struct.Nurb* %4, null, !dbg !2060
  br i1 %tobool, label %while.body, label %while.end, !dbg !2060

while.body:                                       ; preds = %while.cond
  %5 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !2062
  %next1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %5, i32 0, i32 0, !dbg !2064
  %6 = load %struct.Nurb*, %struct.Nurb** %next1, align 8, !dbg !2064
  store %struct.Nurb* %6, %struct.Nurb** %next, align 8, !dbg !2065
  %7 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !2066
  call void @BKE_nurb_free(%struct.Nurb* %7), !dbg !2067
  %8 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !2068
  store %struct.Nurb* %8, %struct.Nurb** %nu, align 8, !dbg !2069
  br label %while.cond, !dbg !2060, !llvm.loop !2070

while.end:                                        ; preds = %while.cond
  %9 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !2072
  call void @BLI_listbase_clear(%struct.ListBase* %9), !dbg !2073
  br label %return, !dbg !2074

return:                                           ; preds = %while.end, %if.then
  ret void, !dbg !2074
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_free(%struct.Curve* %cu) #0 !dbg !2075 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !2076, metadata !DIExpression()), !dbg !2077
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2078
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %0, i32 0, i32 3, !dbg !2079
  call void @BKE_nurbList_free(%struct.ListBase* %nurb), !dbg !2080
  %1 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2081
  call void @BKE_curve_editfont_free(%struct.Curve* %1), !dbg !2082
  %2 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2083
  call void @BKE_curve_editNurb_free(%struct.Curve* %2), !dbg !2084
  %3 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2085
  call void @BKE_curve_unlink(%struct.Curve* %3), !dbg !2086
  %4 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2087
  %5 = bitcast %struct.Curve* %4 to %struct.ID*, !dbg !2088
  call void @BKE_free_animdata(%struct.ID* %5), !dbg !2089
  %6 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2090
  %mat = getelementptr inbounds %struct.Curve, %struct.Curve* %6, i32 0, i32 10, !dbg !2092
  %7 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !2092
  %tobool = icmp ne %struct.Material** %7, null, !dbg !2090
  br i1 %tobool, label %if.then, label %if.end, !dbg !2093

if.then:                                          ; preds = %entry
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2094
  %9 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2095
  %mat1 = getelementptr inbounds %struct.Curve, %struct.Curve* %9, i32 0, i32 10, !dbg !2096
  %10 = load %struct.Material**, %struct.Material*** %mat1, align 8, !dbg !2096
  %11 = bitcast %struct.Material** %10 to i8*, !dbg !2095
  call void %8(i8* %11), !dbg !2094
  br label %if.end, !dbg !2094

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2097
  %str = getelementptr inbounds %struct.Curve, %struct.Curve* %12, i32 0, i32 52, !dbg !2099
  %13 = load i8*, i8** %str, align 8, !dbg !2099
  %tobool2 = icmp ne i8* %13, null, !dbg !2097
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !2100

if.then3:                                         ; preds = %if.end
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2101
  %15 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2102
  %str4 = getelementptr inbounds %struct.Curve, %struct.Curve* %15, i32 0, i32 52, !dbg !2103
  %16 = load i8*, i8** %str4, align 8, !dbg !2103
  call void %14(i8* %16), !dbg !2101
  br label %if.end5, !dbg !2101

if.end5:                                          ; preds = %if.then3, %if.end
  %17 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2104
  %strinfo = getelementptr inbounds %struct.Curve, %struct.Curve* %17, i32 0, i32 62, !dbg !2106
  %18 = load %struct.CharInfo*, %struct.CharInfo** %strinfo, align 8, !dbg !2106
  %tobool6 = icmp ne %struct.CharInfo* %18, null, !dbg !2104
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !2107

if.then7:                                         ; preds = %if.end5
  %19 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2108
  %20 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2109
  %strinfo8 = getelementptr inbounds %struct.Curve, %struct.Curve* %20, i32 0, i32 62, !dbg !2110
  %21 = load %struct.CharInfo*, %struct.CharInfo** %strinfo8, align 8, !dbg !2110
  %22 = bitcast %struct.CharInfo* %21 to i8*, !dbg !2109
  call void %19(i8* %22), !dbg !2108
  br label %if.end9, !dbg !2108

if.end9:                                          ; preds = %if.then7, %if.end5
  %23 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2111
  %bb = getelementptr inbounds %struct.Curve, %struct.Curve* %23, i32 0, i32 2, !dbg !2113
  %24 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !2113
  %tobool10 = icmp ne %struct.BoundBox* %24, null, !dbg !2111
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !2114

if.then11:                                        ; preds = %if.end9
  %25 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2115
  %26 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2116
  %bb12 = getelementptr inbounds %struct.Curve, %struct.Curve* %26, i32 0, i32 2, !dbg !2117
  %27 = load %struct.BoundBox*, %struct.BoundBox** %bb12, align 8, !dbg !2117
  %28 = bitcast %struct.BoundBox* %27 to i8*, !dbg !2116
  call void %25(i8* %28), !dbg !2115
  br label %if.end13, !dbg !2115

if.end13:                                         ; preds = %if.then11, %if.end9
  %29 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2118
  %tb = getelementptr inbounds %struct.Curve, %struct.Curve* %29, i32 0, i32 59, !dbg !2120
  %30 = load %struct.TextBox*, %struct.TextBox** %tb, align 8, !dbg !2120
  %tobool14 = icmp ne %struct.TextBox* %30, null, !dbg !2118
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !2121

if.then15:                                        ; preds = %if.end13
  %31 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2122
  %32 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2123
  %tb16 = getelementptr inbounds %struct.Curve, %struct.Curve* %32, i32 0, i32 59, !dbg !2124
  %33 = load %struct.TextBox*, %struct.TextBox** %tb16, align 8, !dbg !2124
  %34 = bitcast %struct.TextBox* %33 to i8*, !dbg !2123
  call void %31(i8* %34), !dbg !2122
  br label %if.end17, !dbg !2122

if.end17:                                         ; preds = %if.then15, %if.end13
  ret void, !dbg !2125
}

declare dso_local void @BKE_free_animdata(%struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Curve* @BKE_curve_add(%struct.Main* %bmain, i8* %name, i32 %type) #0 !dbg !2126 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %name.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %cu = alloca %struct.Curve*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !2199, metadata !DIExpression()), !dbg !2200
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !2201, metadata !DIExpression()), !dbg !2202
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !2203, metadata !DIExpression()), !dbg !2204
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !2205, metadata !DIExpression()), !dbg !2206
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !2207
  %1 = load i8*, i8** %name.addr, align 8, !dbg !2208
  %call = call i8* @BKE_libblock_alloc(%struct.Main* %0, i16 signext 21827, i8* %1), !dbg !2209
  %2 = bitcast i8* %call to %struct.Curve*, !dbg !2209
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !2210
  %3 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2211
  %size = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 12, !dbg !2212
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !2211
  call void @copy_v3_fl(float* %arraydecay, float 1.000000e+00), !dbg !2213
  %4 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2214
  %flag = getelementptr inbounds %struct.Curve, %struct.Curve* %4, i32 0, i32 23, !dbg !2215
  store i32 4166, i32* %flag, align 4, !dbg !2216
  %5 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2217
  %pathlen = getelementptr inbounds %struct.Curve, %struct.Curve* %5, i32 0, i32 20, !dbg !2218
  store i32 100, i32* %pathlen, align 4, !dbg !2219
  %6 = load i32, i32* %type.addr, align 4, !dbg !2220
  %cmp = icmp eq i32 %6, 3, !dbg !2221
  %7 = zext i1 %cmp to i64, !dbg !2222
  %cond = select i1 %cmp, i32 4, i32 12, !dbg !2222
  %conv = trunc i32 %cond to i16, !dbg !2222
  %8 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2223
  %resolv = getelementptr inbounds %struct.Curve, %struct.Curve* %8, i32 0, i32 28, !dbg !2224
  store i16 %conv, i16* %resolv, align 2, !dbg !2225
  %9 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2226
  %resolu = getelementptr inbounds %struct.Curve, %struct.Curve* %9, i32 0, i32 27, !dbg !2227
  store i16 %conv, i16* %resolu, align 4, !dbg !2228
  %10 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2229
  %width = getelementptr inbounds %struct.Curve, %struct.Curve* %10, i32 0, i32 24, !dbg !2230
  store float 1.000000e+00, float* %width, align 8, !dbg !2231
  %11 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2232
  %wordspace = getelementptr inbounds %struct.Curve, %struct.Curve* %11, i32 0, i32 41, !dbg !2233
  store float 1.000000e+00, float* %wordspace, align 4, !dbg !2234
  %12 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2235
  %linedist = getelementptr inbounds %struct.Curve, %struct.Curve* %12, i32 0, i32 38, !dbg !2236
  store float 1.000000e+00, float* %linedist, align 8, !dbg !2237
  %13 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2238
  %spacing = getelementptr inbounds %struct.Curve, %struct.Curve* %13, i32 0, i32 37, !dbg !2239
  store float 1.000000e+00, float* %spacing, align 4, !dbg !2240
  %14 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2241
  %fsize = getelementptr inbounds %struct.Curve, %struct.Curve* %14, i32 0, i32 40, !dbg !2242
  store float 1.000000e+00, float* %fsize, align 8, !dbg !2243
  %15 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2244
  %ulheight = getelementptr inbounds %struct.Curve, %struct.Curve* %15, i32 0, i32 43, !dbg !2245
  store float 0x3FA99999A0000000, float* %ulheight, align 4, !dbg !2246
  %16 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2247
  %texflag = getelementptr inbounds %struct.Curve, %struct.Curve* %16, i32 0, i32 15, !dbg !2248
  store i16 1, i16* %texflag, align 2, !dbg !2249
  %17 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2250
  %smallcaps_scale = getelementptr inbounds %struct.Curve, %struct.Curve* %17, i32 0, i32 19, !dbg !2251
  store float 7.500000e-01, float* %smallcaps_scale, align 8, !dbg !2252
  %18 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2253
  %twist_mode = getelementptr inbounds %struct.Curve, %struct.Curve* %18, i32 0, i32 17, !dbg !2254
  store i16 3, i16* %twist_mode, align 2, !dbg !2255
  %19 = load i32, i32* %type.addr, align 4, !dbg !2256
  %conv1 = trunc i32 %19 to i16, !dbg !2256
  %20 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2257
  %type2 = getelementptr inbounds %struct.Curve, %struct.Curve* %20, i32 0, i32 14, !dbg !2258
  store i16 %conv1, i16* %type2, align 4, !dbg !2259
  %21 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2260
  %bevfac1 = getelementptr inbounds %struct.Curve, %struct.Curve* %21, i32 0, i32 65, !dbg !2261
  store float 0.000000e+00, float* %bevfac1, align 4, !dbg !2262
  %22 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2263
  %bevfac2 = getelementptr inbounds %struct.Curve, %struct.Curve* %22, i32 0, i32 66, !dbg !2264
  store float 1.000000e+00, float* %bevfac2, align 8, !dbg !2265
  %23 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2266
  %bevfac1_mapping = getelementptr inbounds %struct.Curve, %struct.Curve* %23, i32 0, i32 67, !dbg !2267
  store i8 0, i8* %bevfac1_mapping, align 4, !dbg !2268
  %24 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2269
  %bevfac2_mapping = getelementptr inbounds %struct.Curve, %struct.Curve* %24, i32 0, i32 68, !dbg !2270
  store i8 0, i8* %bevfac2_mapping, align 1, !dbg !2271
  %call3 = call %struct.BoundBox* @BKE_boundbox_alloc_unit(), !dbg !2272
  %25 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2273
  %bb = getelementptr inbounds %struct.Curve, %struct.Curve* %25, i32 0, i32 2, !dbg !2274
  store %struct.BoundBox* %call3, %struct.BoundBox** %bb, align 8, !dbg !2275
  %26 = load i32, i32* %type.addr, align 4, !dbg !2276
  %cmp4 = icmp eq i32 %26, 4, !dbg !2278
  br i1 %cmp4, label %if.then, label %if.end, !dbg !2279

if.then:                                          ; preds = %entry
  %call6 = call %struct.VFont* @BKE_vfont_builtin_get(), !dbg !2280
  %27 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2282
  %vfontbi = getelementptr inbounds %struct.Curve, %struct.Curve* %27, i32 0, i32 58, !dbg !2283
  store %struct.VFont* %call6, %struct.VFont** %vfontbi, align 8, !dbg !2284
  %28 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2285
  %vfonti = getelementptr inbounds %struct.Curve, %struct.Curve* %28, i32 0, i32 57, !dbg !2286
  store %struct.VFont* %call6, %struct.VFont** %vfonti, align 8, !dbg !2287
  %29 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2288
  %vfontb = getelementptr inbounds %struct.Curve, %struct.Curve* %29, i32 0, i32 56, !dbg !2289
  store %struct.VFont* %call6, %struct.VFont** %vfontb, align 8, !dbg !2290
  %30 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2291
  %vfont = getelementptr inbounds %struct.Curve, %struct.Curve* %30, i32 0, i32 55, !dbg !2292
  store %struct.VFont* %call6, %struct.VFont** %vfont, align 8, !dbg !2293
  %31 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2294
  %vfont7 = getelementptr inbounds %struct.Curve, %struct.Curve* %31, i32 0, i32 55, !dbg !2295
  %32 = load %struct.VFont*, %struct.VFont** %vfont7, align 8, !dbg !2295
  %id = getelementptr inbounds %struct.VFont, %struct.VFont* %32, i32 0, i32 0, !dbg !2296
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 6, !dbg !2297
  %33 = load i32, i32* %us, align 4, !dbg !2298
  %add = add nsw i32 %33, 4, !dbg !2298
  store i32 %add, i32* %us, align 4, !dbg !2298
  %34 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !2299
  %call8 = call i8* %34(i64 12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)), !dbg !2299
  %35 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2300
  %str = getelementptr inbounds %struct.Curve, %struct.Curve* %35, i32 0, i32 52, !dbg !2301
  store i8* %call8, i8** %str, align 8, !dbg !2302
  %36 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2303
  %str9 = getelementptr inbounds %struct.Curve, %struct.Curve* %36, i32 0, i32 52, !dbg !2304
  %37 = load i8*, i8** %str9, align 8, !dbg !2304
  %call10 = call i8* @BLI_strncpy(i8* %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 12), !dbg !2305
  %38 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2306
  %pos = getelementptr inbounds %struct.Curve, %struct.Curve* %38, i32 0, i32 47, !dbg !2307
  store i32 4, i32* %pos, align 4, !dbg !2308
  %39 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2309
  %len_wchar = getelementptr inbounds %struct.Curve, %struct.Curve* %39, i32 0, i32 50, !dbg !2310
  store i32 4, i32* %len_wchar, align 8, !dbg !2311
  %40 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2312
  %len = getelementptr inbounds %struct.Curve, %struct.Curve* %40, i32 0, i32 51, !dbg !2313
  store i32 4, i32* %len, align 4, !dbg !2314
  %41 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2315
  %call11 = call i8* %41(i64 96, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0)), !dbg !2315
  %42 = bitcast i8* %call11 to %struct.CharInfo*, !dbg !2315
  %43 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2316
  %strinfo = getelementptr inbounds %struct.Curve, %struct.Curve* %43, i32 0, i32 62, !dbg !2317
  store %struct.CharInfo* %42, %struct.CharInfo** %strinfo, align 8, !dbg !2318
  %44 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2319
  %actbox = getelementptr inbounds %struct.Curve, %struct.Curve* %44, i32 0, i32 61, !dbg !2320
  store i32 1, i32* %actbox, align 4, !dbg !2321
  %45 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2322
  %totbox = getelementptr inbounds %struct.Curve, %struct.Curve* %45, i32 0, i32 60, !dbg !2323
  store i32 1, i32* %totbox, align 8, !dbg !2324
  %46 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2325
  %call12 = call i8* %46(i64 4096, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0)), !dbg !2325
  %47 = bitcast i8* %call12 to %struct.TextBox*, !dbg !2325
  %48 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2326
  %tb = getelementptr inbounds %struct.Curve, %struct.Curve* %48, i32 0, i32 59, !dbg !2327
  store %struct.TextBox* %47, %struct.TextBox** %tb, align 8, !dbg !2328
  %49 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2329
  %tb13 = getelementptr inbounds %struct.Curve, %struct.Curve* %49, i32 0, i32 59, !dbg !2330
  %50 = load %struct.TextBox*, %struct.TextBox** %tb13, align 8, !dbg !2330
  %arrayidx = getelementptr inbounds %struct.TextBox, %struct.TextBox* %50, i64 0, !dbg !2329
  %h = getelementptr inbounds %struct.TextBox, %struct.TextBox* %arrayidx, i32 0, i32 3, !dbg !2331
  store float 0.000000e+00, float* %h, align 4, !dbg !2332
  %51 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2333
  %tb14 = getelementptr inbounds %struct.Curve, %struct.Curve* %51, i32 0, i32 59, !dbg !2334
  %52 = load %struct.TextBox*, %struct.TextBox** %tb14, align 8, !dbg !2334
  %arrayidx15 = getelementptr inbounds %struct.TextBox, %struct.TextBox* %52, i64 0, !dbg !2333
  %w = getelementptr inbounds %struct.TextBox, %struct.TextBox* %arrayidx15, i32 0, i32 2, !dbg !2335
  store float 0.000000e+00, float* %w, align 4, !dbg !2336
  br label %if.end, !dbg !2337

if.end:                                           ; preds = %if.then, %entry
  %53 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !2338
  ret %struct.Curve* %53, !dbg !2339
}

declare dso_local i8* @BKE_libblock_alloc(%struct.Main*, i16 signext, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_fl(float* %r, float %f) #0 !dbg !2340 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !2344, metadata !DIExpression()), !dbg !2345
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !2346, metadata !DIExpression()), !dbg !2347
  %0 = load float, float* %f.addr, align 4, !dbg !2348
  %1 = load float*, float** %r.addr, align 8, !dbg !2349
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !2349
  store float %0, float* %arrayidx, align 4, !dbg !2350
  %2 = load float, float* %f.addr, align 4, !dbg !2351
  %3 = load float*, float** %r.addr, align 8, !dbg !2352
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !2352
  store float %2, float* %arrayidx1, align 4, !dbg !2353
  %4 = load float, float* %f.addr, align 4, !dbg !2354
  %5 = load float*, float** %r.addr, align 8, !dbg !2355
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 2, !dbg !2355
  store float %4, float* %arrayidx2, align 4, !dbg !2356
  ret void, !dbg !2357
}

declare dso_local %struct.BoundBox* @BKE_boundbox_alloc_unit() #2

declare dso_local %struct.VFont* @BKE_vfont_builtin_get() #2

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Curve* @BKE_curve_copy(%struct.Curve* %cu) #0 !dbg !2358 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %cun = alloca %struct.Curve*, align 8
  %a = alloca i32, align 4
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !2361, metadata !DIExpression()), !dbg !2362
  call void @llvm.dbg.declare(metadata %struct.Curve** %cun, metadata !2363, metadata !DIExpression()), !dbg !2364
  call void @llvm.dbg.declare(metadata i32* %a, metadata !2365, metadata !DIExpression()), !dbg !2366
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2367
  %id = getelementptr inbounds %struct.Curve, %struct.Curve* %0, i32 0, i32 0, !dbg !2368
  %call = call i8* @BKE_libblock_copy(%struct.ID* %id), !dbg !2369
  %1 = bitcast i8* %call to %struct.Curve*, !dbg !2369
  store %struct.Curve* %1, %struct.Curve** %cun, align 8, !dbg !2370
  %2 = load %struct.Curve*, %struct.Curve** %cun, align 8, !dbg !2371
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %2, i32 0, i32 3, !dbg !2372
  call void @BLI_listbase_clear(%struct.ListBase* %nurb), !dbg !2373
  %3 = load %struct.Curve*, %struct.Curve** %cun, align 8, !dbg !2374
  %nurb1 = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 3, !dbg !2375
  %4 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2376
  %nurb2 = getelementptr inbounds %struct.Curve, %struct.Curve* %4, i32 0, i32 3, !dbg !2377
  call void @BKE_nurbList_duplicate(%struct.ListBase* %nurb1, %struct.ListBase* %nurb2), !dbg !2378
  %5 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !2379
  %6 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2380
  %mat = getelementptr inbounds %struct.Curve, %struct.Curve* %6, i32 0, i32 10, !dbg !2381
  %7 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !2381
  %8 = bitcast %struct.Material** %7 to i8*, !dbg !2380
  %call3 = call i8* %5(i8* %8), !dbg !2379
  %9 = bitcast i8* %call3 to %struct.Material**, !dbg !2379
  %10 = load %struct.Curve*, %struct.Curve** %cun, align 8, !dbg !2382
  %mat4 = getelementptr inbounds %struct.Curve, %struct.Curve* %10, i32 0, i32 10, !dbg !2383
  store %struct.Material** %9, %struct.Material*** %mat4, align 8, !dbg !2384
  store i32 0, i32* %a, align 4, !dbg !2385
  br label %for.cond, !dbg !2387

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load i32, i32* %a, align 4, !dbg !2388
  %12 = load %struct.Curve*, %struct.Curve** %cun, align 8, !dbg !2390
  %totcol = getelementptr inbounds %struct.Curve, %struct.Curve* %12, i32 0, i32 22, !dbg !2391
  %13 = load i16, i16* %totcol, align 2, !dbg !2391
  %conv = sext i16 %13 to i32, !dbg !2390
  %cmp = icmp slt i32 %11, %conv, !dbg !2392
  br i1 %cmp, label %for.body, label %for.end, !dbg !2393

for.body:                                         ; preds = %for.cond
  %14 = load %struct.Curve*, %struct.Curve** %cun, align 8, !dbg !2394
  %mat6 = getelementptr inbounds %struct.Curve, %struct.Curve* %14, i32 0, i32 10, !dbg !2396
  %15 = load %struct.Material**, %struct.Material*** %mat6, align 8, !dbg !2396
  %16 = load i32, i32* %a, align 4, !dbg !2397
  %idxprom = sext i32 %16 to i64, !dbg !2394
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %15, i64 %idxprom, !dbg !2394
  %17 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !2394
  %18 = bitcast %struct.Material* %17 to %struct.ID*, !dbg !2398
  call void @id_us_plus(%struct.ID* %18), !dbg !2399
  br label %for.inc, !dbg !2400

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %a, align 4, !dbg !2401
  %inc = add nsw i32 %19, 1, !dbg !2401
  store i32 %inc, i32* %a, align 4, !dbg !2401
  br label %for.cond, !dbg !2402, !llvm.loop !2403

for.end:                                          ; preds = %for.cond
  %20 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !2405
  %21 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2406
  %str = getelementptr inbounds %struct.Curve, %struct.Curve* %21, i32 0, i32 52, !dbg !2407
  %22 = load i8*, i8** %str, align 8, !dbg !2407
  %call7 = call i8* %20(i8* %22), !dbg !2405
  %23 = load %struct.Curve*, %struct.Curve** %cun, align 8, !dbg !2408
  %str8 = getelementptr inbounds %struct.Curve, %struct.Curve* %23, i32 0, i32 52, !dbg !2409
  store i8* %call7, i8** %str8, align 8, !dbg !2410
  %24 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !2411
  %25 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2412
  %strinfo = getelementptr inbounds %struct.Curve, %struct.Curve* %25, i32 0, i32 62, !dbg !2413
  %26 = load %struct.CharInfo*, %struct.CharInfo** %strinfo, align 8, !dbg !2413
  %27 = bitcast %struct.CharInfo* %26 to i8*, !dbg !2412
  %call9 = call i8* %24(i8* %27), !dbg !2411
  %28 = bitcast i8* %call9 to %struct.CharInfo*, !dbg !2411
  %29 = load %struct.Curve*, %struct.Curve** %cun, align 8, !dbg !2414
  %strinfo10 = getelementptr inbounds %struct.Curve, %struct.Curve* %29, i32 0, i32 62, !dbg !2415
  store %struct.CharInfo* %28, %struct.CharInfo** %strinfo10, align 8, !dbg !2416
  %30 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !2417
  %31 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2418
  %tb = getelementptr inbounds %struct.Curve, %struct.Curve* %31, i32 0, i32 59, !dbg !2419
  %32 = load %struct.TextBox*, %struct.TextBox** %tb, align 8, !dbg !2419
  %33 = bitcast %struct.TextBox* %32 to i8*, !dbg !2418
  %call11 = call i8* %30(i8* %33), !dbg !2417
  %34 = bitcast i8* %call11 to %struct.TextBox*, !dbg !2417
  %35 = load %struct.Curve*, %struct.Curve** %cun, align 8, !dbg !2420
  %tb12 = getelementptr inbounds %struct.Curve, %struct.Curve* %35, i32 0, i32 59, !dbg !2421
  store %struct.TextBox* %34, %struct.TextBox** %tb12, align 8, !dbg !2422
  %36 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !2423
  %37 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2424
  %bb = getelementptr inbounds %struct.Curve, %struct.Curve* %37, i32 0, i32 2, !dbg !2425
  %38 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !2425
  %39 = bitcast %struct.BoundBox* %38 to i8*, !dbg !2424
  %call13 = call i8* %36(i8* %39), !dbg !2423
  %40 = bitcast i8* %call13 to %struct.BoundBox*, !dbg !2423
  %41 = load %struct.Curve*, %struct.Curve** %cun, align 8, !dbg !2426
  %bb14 = getelementptr inbounds %struct.Curve, %struct.Curve* %41, i32 0, i32 2, !dbg !2427
  store %struct.BoundBox* %40, %struct.BoundBox** %bb14, align 8, !dbg !2428
  %42 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2429
  %key = getelementptr inbounds %struct.Curve, %struct.Curve* %42, i32 0, i32 9, !dbg !2430
  %43 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !2430
  %call15 = call %struct.Key* @BKE_key_copy(%struct.Key* %43), !dbg !2431
  %44 = load %struct.Curve*, %struct.Curve** %cun, align 8, !dbg !2432
  %key16 = getelementptr inbounds %struct.Curve, %struct.Curve* %44, i32 0, i32 9, !dbg !2433
  store %struct.Key* %call15, %struct.Key** %key16, align 8, !dbg !2434
  %45 = load %struct.Curve*, %struct.Curve** %cun, align 8, !dbg !2435
  %key17 = getelementptr inbounds %struct.Curve, %struct.Curve* %45, i32 0, i32 9, !dbg !2437
  %46 = load %struct.Key*, %struct.Key** %key17, align 8, !dbg !2437
  %tobool = icmp ne %struct.Key* %46, null, !dbg !2435
  br i1 %tobool, label %if.then, label %if.end, !dbg !2438

if.then:                                          ; preds = %for.end
  %47 = load %struct.Curve*, %struct.Curve** %cun, align 8, !dbg !2439
  %48 = bitcast %struct.Curve* %47 to %struct.ID*, !dbg !2440
  %49 = load %struct.Curve*, %struct.Curve** %cun, align 8, !dbg !2441
  %key18 = getelementptr inbounds %struct.Curve, %struct.Curve* %49, i32 0, i32 9, !dbg !2442
  %50 = load %struct.Key*, %struct.Key** %key18, align 8, !dbg !2442
  %from = getelementptr inbounds %struct.Key, %struct.Key* %50, i32 0, i32 8, !dbg !2443
  store %struct.ID* %48, %struct.ID** %from, align 8, !dbg !2444
  br label %if.end, !dbg !2441

if.end:                                           ; preds = %if.then, %for.end
  %51 = load %struct.Curve*, %struct.Curve** %cun, align 8, !dbg !2445
  %editnurb = getelementptr inbounds %struct.Curve, %struct.Curve* %51, i32 0, i32 4, !dbg !2446
  store %struct.EditNurb* null, %struct.EditNurb** %editnurb, align 8, !dbg !2447
  %52 = load %struct.Curve*, %struct.Curve** %cun, align 8, !dbg !2448
  %editfont = getelementptr inbounds %struct.Curve, %struct.Curve* %52, i32 0, i32 53, !dbg !2449
  store %struct.EditFont* null, %struct.EditFont** %editfont, align 8, !dbg !2450
  %53 = load %struct.Curve*, %struct.Curve** %cun, align 8, !dbg !2451
  %vfont = getelementptr inbounds %struct.Curve, %struct.Curve* %53, i32 0, i32 55, !dbg !2452
  %54 = load %struct.VFont*, %struct.VFont** %vfont, align 8, !dbg !2452
  %55 = bitcast %struct.VFont* %54 to %struct.ID*, !dbg !2453
  call void @id_us_plus(%struct.ID* %55), !dbg !2454
  %56 = load %struct.Curve*, %struct.Curve** %cun, align 8, !dbg !2455
  %vfontb = getelementptr inbounds %struct.Curve, %struct.Curve* %56, i32 0, i32 56, !dbg !2456
  %57 = load %struct.VFont*, %struct.VFont** %vfontb, align 8, !dbg !2456
  %58 = bitcast %struct.VFont* %57 to %struct.ID*, !dbg !2457
  call void @id_us_plus(%struct.ID* %58), !dbg !2458
  %59 = load %struct.Curve*, %struct.Curve** %cun, align 8, !dbg !2459
  %vfonti = getelementptr inbounds %struct.Curve, %struct.Curve* %59, i32 0, i32 57, !dbg !2460
  %60 = load %struct.VFont*, %struct.VFont** %vfonti, align 8, !dbg !2460
  %61 = bitcast %struct.VFont* %60 to %struct.ID*, !dbg !2461
  call void @id_us_plus(%struct.ID* %61), !dbg !2462
  %62 = load %struct.Curve*, %struct.Curve** %cun, align 8, !dbg !2463
  %vfontbi = getelementptr inbounds %struct.Curve, %struct.Curve* %62, i32 0, i32 58, !dbg !2464
  %63 = load %struct.VFont*, %struct.VFont** %vfontbi, align 8, !dbg !2464
  %64 = bitcast %struct.VFont* %63 to %struct.ID*, !dbg !2465
  call void @id_us_plus(%struct.ID* %64), !dbg !2466
  %65 = load %struct.Curve*, %struct.Curve** %cun, align 8, !dbg !2467
  ret %struct.Curve* %65, !dbg !2468
}

declare dso_local i8* @BKE_libblock_copy(%struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_listbase_clear(%struct.ListBase* %lb) #0 !dbg !2469 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !2474, metadata !DIExpression()), !dbg !2475
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !2476
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !2477
  store i8* null, i8** %last, align 8, !dbg !2478
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !2479
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !2480
  store i8* null, i8** %first, align 8, !dbg !2481
  ret void, !dbg !2482
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurbList_duplicate(%struct.ListBase* %lb1, %struct.ListBase* %lb2) #0 !dbg !2483 {
entry:
  %lb1.addr = alloca %struct.ListBase*, align 8
  %lb2.addr = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %nun = alloca %struct.Nurb*, align 8
  store %struct.ListBase* %lb1, %struct.ListBase** %lb1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb1.addr, metadata !2486, metadata !DIExpression()), !dbg !2487
  store %struct.ListBase* %lb2, %struct.ListBase** %lb2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb2.addr, metadata !2488, metadata !DIExpression()), !dbg !2489
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !2490, metadata !DIExpression()), !dbg !2491
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nun, metadata !2492, metadata !DIExpression()), !dbg !2493
  %0 = load %struct.ListBase*, %struct.ListBase** %lb1.addr, align 8, !dbg !2494
  call void @BKE_nurbList_free(%struct.ListBase* %0), !dbg !2495
  %1 = load %struct.ListBase*, %struct.ListBase** %lb2.addr, align 8, !dbg !2496
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !2497
  %2 = load i8*, i8** %first, align 8, !dbg !2497
  %3 = bitcast i8* %2 to %struct.Nurb*, !dbg !2496
  store %struct.Nurb* %3, %struct.Nurb** %nu, align 8, !dbg !2498
  br label %while.cond, !dbg !2499

while.cond:                                       ; preds = %while.body, %entry
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !2500
  %tobool = icmp ne %struct.Nurb* %4, null, !dbg !2499
  br i1 %tobool, label %while.body, label %while.end, !dbg !2499

while.body:                                       ; preds = %while.cond
  %5 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !2501
  %call = call %struct.Nurb* @BKE_nurb_duplicate(%struct.Nurb* %5), !dbg !2503
  store %struct.Nurb* %call, %struct.Nurb** %nun, align 8, !dbg !2504
  %6 = load %struct.ListBase*, %struct.ListBase** %lb1.addr, align 8, !dbg !2505
  %7 = load %struct.Nurb*, %struct.Nurb** %nun, align 8, !dbg !2506
  %8 = bitcast %struct.Nurb* %7 to i8*, !dbg !2506
  call void @BLI_addtail(%struct.ListBase* %6, i8* %8), !dbg !2507
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !2508
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 0, !dbg !2509
  %10 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !2509
  store %struct.Nurb* %10, %struct.Nurb** %nu, align 8, !dbg !2510
  br label %while.cond, !dbg !2499, !llvm.loop !2511

while.end:                                        ; preds = %while.cond
  ret void, !dbg !2513
}

declare dso_local void @id_us_plus(%struct.ID*) #2

declare dso_local %struct.Key* @BKE_key_copy(%struct.Key*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_make_local(%struct.Curve* %cu) #0 !dbg !2514 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %bmain = alloca %struct.Main*, align 8
  %ob = alloca %struct.Object*, align 8
  %is_local = alloca i8, align 1
  %is_lib = alloca i8, align 1
  %cu_new = alloca %struct.Curve*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !2515, metadata !DIExpression()), !dbg !2516
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !2517, metadata !DIExpression()), !dbg !2518
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !2519
  store %struct.Main* %0, %struct.Main** %bmain, align 8, !dbg !2518
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !2520, metadata !DIExpression()), !dbg !2523
  call void @llvm.dbg.declare(metadata i8* %is_local, metadata !2524, metadata !DIExpression()), !dbg !2525
  store i8 0, i8* %is_local, align 1, !dbg !2525
  call void @llvm.dbg.declare(metadata i8* %is_lib, metadata !2526, metadata !DIExpression()), !dbg !2527
  store i8 0, i8* %is_lib, align 1, !dbg !2527
  %1 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2528
  %id = getelementptr inbounds %struct.Curve, %struct.Curve* %1, i32 0, i32 0, !dbg !2530
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !2531
  %2 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !2531
  %cmp = icmp eq %struct.Library* %2, null, !dbg !2532
  br i1 %cmp, label %if.then, label %if.end, !dbg !2533

if.then:                                          ; preds = %entry
  br label %if.end66, !dbg !2534

if.end:                                           ; preds = %entry
  %3 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2535
  %id1 = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 0, !dbg !2537
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id1, i32 0, i32 6, !dbg !2538
  %4 = load i32, i32* %us, align 4, !dbg !2538
  %cmp2 = icmp eq i32 %4, 1, !dbg !2539
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !2540

if.then3:                                         ; preds = %if.end
  %5 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !2541
  %6 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2543
  %id4 = getelementptr inbounds %struct.Curve, %struct.Curve* %6, i32 0, i32 0, !dbg !2544
  call void @id_clear_lib_data(%struct.Main* %5, %struct.ID* %id4), !dbg !2545
  %7 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2546
  call void @extern_local_curve(%struct.Curve* %7), !dbg !2547
  br label %if.end66, !dbg !2548

if.end5:                                          ; preds = %if.end
  %8 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !2549
  %object = getelementptr inbounds %struct.Main, %struct.Main* %8, i32 0, i32 13, !dbg !2551
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object, i32 0, i32 0, !dbg !2552
  %9 = load i8*, i8** %first, align 8, !dbg !2552
  %10 = bitcast i8* %9 to %struct.Object*, !dbg !2549
  store %struct.Object* %10, %struct.Object** %ob, align 8, !dbg !2553
  br label %for.cond, !dbg !2554

for.cond:                                         ; preds = %for.inc, %if.end5
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2555
  %tobool = icmp ne %struct.Object* %11, null, !dbg !2555
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2557

land.rhs:                                         ; preds = %for.cond
  %12 = load i8, i8* %is_lib, align 1, !dbg !2558
  %conv = zext i8 %12 to i32, !dbg !2558
  %cmp6 = icmp eq i32 0, %conv, !dbg !2558
  br i1 %cmp6, label %lor.end, label %lor.rhs, !dbg !2558

lor.rhs:                                          ; preds = %land.rhs
  %13 = load i8, i8* %is_local, align 1, !dbg !2558
  %conv8 = zext i8 %13 to i32, !dbg !2558
  %cmp9 = icmp eq i32 0, %conv8, !dbg !2558
  br label %lor.end, !dbg !2558

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %14 = phi i1 [ true, %land.rhs ], [ %cmp9, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %for.cond
  %15 = phi i1 [ false, %for.cond ], [ %14, %lor.end ], !dbg !2559
  br i1 %15, label %for.body, label %for.end, !dbg !2560

for.body:                                         ; preds = %land.end
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2561
  %data = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 19, !dbg !2564
  %17 = load i8*, i8** %data, align 8, !dbg !2564
  %18 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2565
  %19 = bitcast %struct.Curve* %18 to i8*, !dbg !2565
  %cmp11 = icmp eq i8* %17, %19, !dbg !2566
  br i1 %cmp11, label %if.then13, label %if.end19, !dbg !2567

if.then13:                                        ; preds = %for.body
  %20 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2568
  %id14 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 0, !dbg !2571
  %lib15 = getelementptr inbounds %struct.ID, %struct.ID* %id14, i32 0, i32 3, !dbg !2572
  %21 = load %struct.Library*, %struct.Library** %lib15, align 8, !dbg !2572
  %tobool16 = icmp ne %struct.Library* %21, null, !dbg !2568
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !2573

if.then17:                                        ; preds = %if.then13
  store i8 1, i8* %is_lib, align 1, !dbg !2574
  br label %if.end18, !dbg !2575

if.else:                                          ; preds = %if.then13
  store i8 1, i8* %is_local, align 1, !dbg !2576
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then17
  br label %if.end19, !dbg !2577

if.end19:                                         ; preds = %if.end18, %for.body
  br label %for.inc, !dbg !2578

for.inc:                                          ; preds = %if.end19
  %22 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2579
  %id20 = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 0, !dbg !2580
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id20, i32 0, i32 0, !dbg !2581
  %23 = load i8*, i8** %next, align 8, !dbg !2581
  %24 = bitcast i8* %23 to %struct.Object*, !dbg !2579
  store %struct.Object* %24, %struct.Object** %ob, align 8, !dbg !2582
  br label %for.cond, !dbg !2583, !llvm.loop !2584

for.end:                                          ; preds = %land.end
  %25 = load i8, i8* %is_local, align 1, !dbg !2586
  %conv21 = zext i8 %25 to i32, !dbg !2586
  %tobool22 = icmp ne i32 %conv21, 0, !dbg !2586
  br i1 %tobool22, label %land.lhs.true, label %if.else28, !dbg !2588

land.lhs.true:                                    ; preds = %for.end
  %26 = load i8, i8* %is_lib, align 1, !dbg !2589
  %conv23 = zext i8 %26 to i32, !dbg !2589
  %cmp24 = icmp eq i32 %conv23, 0, !dbg !2590
  br i1 %cmp24, label %if.then26, label %if.else28, !dbg !2591

if.then26:                                        ; preds = %land.lhs.true
  %27 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !2592
  %28 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2594
  %id27 = getelementptr inbounds %struct.Curve, %struct.Curve* %28, i32 0, i32 0, !dbg !2595
  call void @id_clear_lib_data(%struct.Main* %27, %struct.ID* %id27), !dbg !2596
  %29 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2597
  call void @extern_local_curve(%struct.Curve* %29), !dbg !2598
  br label %if.end66, !dbg !2599

if.else28:                                        ; preds = %land.lhs.true, %for.end
  %30 = load i8, i8* %is_local, align 1, !dbg !2600
  %conv29 = zext i8 %30 to i32, !dbg !2600
  %tobool30 = icmp ne i32 %conv29, 0, !dbg !2600
  br i1 %tobool30, label %land.lhs.true31, label %if.end65, !dbg !2602

land.lhs.true31:                                  ; preds = %if.else28
  %31 = load i8, i8* %is_lib, align 1, !dbg !2603
  %conv32 = zext i8 %31 to i32, !dbg !2603
  %tobool33 = icmp ne i32 %conv32, 0, !dbg !2603
  br i1 %tobool33, label %if.then34, label %if.end65, !dbg !2604

if.then34:                                        ; preds = %land.lhs.true31
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu_new, metadata !2605, metadata !DIExpression()), !dbg !2607
  %32 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2608
  %call = call %struct.Curve* @BKE_curve_copy(%struct.Curve* %32), !dbg !2609
  store %struct.Curve* %call, %struct.Curve** %cu_new, align 8, !dbg !2607
  %33 = load %struct.Curve*, %struct.Curve** %cu_new, align 8, !dbg !2610
  %id35 = getelementptr inbounds %struct.Curve, %struct.Curve* %33, i32 0, i32 0, !dbg !2611
  %us36 = getelementptr inbounds %struct.ID, %struct.ID* %id35, i32 0, i32 6, !dbg !2612
  store i32 0, i32* %us36, align 4, !dbg !2613
  %34 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !2614
  %35 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2615
  %id37 = getelementptr inbounds %struct.Curve, %struct.Curve* %35, i32 0, i32 0, !dbg !2616
  %lib38 = getelementptr inbounds %struct.ID, %struct.ID* %id37, i32 0, i32 3, !dbg !2617
  %36 = load %struct.Library*, %struct.Library** %lib38, align 8, !dbg !2617
  %37 = load %struct.Curve*, %struct.Curve** %cu_new, align 8, !dbg !2618
  %id39 = getelementptr inbounds %struct.Curve, %struct.Curve* %37, i32 0, i32 0, !dbg !2619
  call void @BKE_id_lib_local_paths(%struct.Main* %34, %struct.Library* %36, %struct.ID* %id39), !dbg !2620
  %38 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !2621
  %object40 = getelementptr inbounds %struct.Main, %struct.Main* %38, i32 0, i32 13, !dbg !2623
  %first41 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object40, i32 0, i32 0, !dbg !2624
  %39 = load i8*, i8** %first41, align 8, !dbg !2624
  %40 = bitcast i8* %39 to %struct.Object*, !dbg !2621
  store %struct.Object* %40, %struct.Object** %ob, align 8, !dbg !2625
  br label %for.cond42, !dbg !2626

for.cond42:                                       ; preds = %for.inc61, %if.then34
  %41 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2627
  %tobool43 = icmp ne %struct.Object* %41, null, !dbg !2629
  br i1 %tobool43, label %for.body44, label %for.end64, !dbg !2629

for.body44:                                       ; preds = %for.cond42
  %42 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2630
  %data45 = getelementptr inbounds %struct.Object, %struct.Object* %42, i32 0, i32 19, !dbg !2633
  %43 = load i8*, i8** %data45, align 8, !dbg !2633
  %44 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2634
  %45 = bitcast %struct.Curve* %44 to i8*, !dbg !2634
  %cmp46 = icmp eq i8* %43, %45, !dbg !2635
  br i1 %cmp46, label %if.then48, label %if.end60, !dbg !2636

if.then48:                                        ; preds = %for.body44
  %46 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2637
  %id49 = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 0, !dbg !2640
  %lib50 = getelementptr inbounds %struct.ID, %struct.ID* %id49, i32 0, i32 3, !dbg !2641
  %47 = load %struct.Library*, %struct.Library** %lib50, align 8, !dbg !2641
  %cmp51 = icmp eq %struct.Library* %47, null, !dbg !2642
  br i1 %cmp51, label %if.then53, label %if.end59, !dbg !2643

if.then53:                                        ; preds = %if.then48
  %48 = load %struct.Curve*, %struct.Curve** %cu_new, align 8, !dbg !2644
  %49 = bitcast %struct.Curve* %48 to i8*, !dbg !2644
  %50 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2646
  %data54 = getelementptr inbounds %struct.Object, %struct.Object* %50, i32 0, i32 19, !dbg !2647
  store i8* %49, i8** %data54, align 8, !dbg !2648
  %51 = load %struct.Curve*, %struct.Curve** %cu_new, align 8, !dbg !2649
  %id55 = getelementptr inbounds %struct.Curve, %struct.Curve* %51, i32 0, i32 0, !dbg !2650
  %us56 = getelementptr inbounds %struct.ID, %struct.ID* %id55, i32 0, i32 6, !dbg !2651
  %52 = load i32, i32* %us56, align 4, !dbg !2652
  %inc = add nsw i32 %52, 1, !dbg !2652
  store i32 %inc, i32* %us56, align 4, !dbg !2652
  %53 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2653
  %id57 = getelementptr inbounds %struct.Curve, %struct.Curve* %53, i32 0, i32 0, !dbg !2654
  %us58 = getelementptr inbounds %struct.ID, %struct.ID* %id57, i32 0, i32 6, !dbg !2655
  %54 = load i32, i32* %us58, align 4, !dbg !2656
  %dec = add nsw i32 %54, -1, !dbg !2656
  store i32 %dec, i32* %us58, align 4, !dbg !2656
  br label %if.end59, !dbg !2657

if.end59:                                         ; preds = %if.then53, %if.then48
  br label %if.end60, !dbg !2658

if.end60:                                         ; preds = %if.end59, %for.body44
  br label %for.inc61, !dbg !2659

for.inc61:                                        ; preds = %if.end60
  %55 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2660
  %id62 = getelementptr inbounds %struct.Object, %struct.Object* %55, i32 0, i32 0, !dbg !2661
  %next63 = getelementptr inbounds %struct.ID, %struct.ID* %id62, i32 0, i32 0, !dbg !2662
  %56 = load i8*, i8** %next63, align 8, !dbg !2662
  %57 = bitcast i8* %56 to %struct.Object*, !dbg !2660
  store %struct.Object* %57, %struct.Object** %ob, align 8, !dbg !2663
  br label %for.cond42, !dbg !2664, !llvm.loop !2665

for.end64:                                        ; preds = %for.cond42
  br label %if.end65, !dbg !2667

if.end65:                                         ; preds = %for.end64, %land.lhs.true31, %if.else28
  br label %if.end66

if.end66:                                         ; preds = %if.then, %if.then3, %if.end65, %if.then26
  ret void, !dbg !2668
}

declare dso_local void @id_clear_lib_data(%struct.Main*, %struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @extern_local_curve(%struct.Curve* %cu) #0 !dbg !2669 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !2670, metadata !DIExpression()), !dbg !2671
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2672
  %vfont = getelementptr inbounds %struct.Curve, %struct.Curve* %0, i32 0, i32 55, !dbg !2673
  %1 = load %struct.VFont*, %struct.VFont** %vfont, align 8, !dbg !2673
  %2 = bitcast %struct.VFont* %1 to %struct.ID*, !dbg !2674
  call void @id_lib_extern(%struct.ID* %2), !dbg !2675
  %3 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2676
  %vfontb = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 56, !dbg !2677
  %4 = load %struct.VFont*, %struct.VFont** %vfontb, align 8, !dbg !2677
  %5 = bitcast %struct.VFont* %4 to %struct.ID*, !dbg !2678
  call void @id_lib_extern(%struct.ID* %5), !dbg !2679
  %6 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2680
  %vfonti = getelementptr inbounds %struct.Curve, %struct.Curve* %6, i32 0, i32 57, !dbg !2681
  %7 = load %struct.VFont*, %struct.VFont** %vfonti, align 8, !dbg !2681
  %8 = bitcast %struct.VFont* %7 to %struct.ID*, !dbg !2682
  call void @id_lib_extern(%struct.ID* %8), !dbg !2683
  %9 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2684
  %vfontbi = getelementptr inbounds %struct.Curve, %struct.Curve* %9, i32 0, i32 58, !dbg !2685
  %10 = load %struct.VFont*, %struct.VFont** %vfontbi, align 8, !dbg !2685
  %11 = bitcast %struct.VFont* %10 to %struct.ID*, !dbg !2686
  call void @id_lib_extern(%struct.ID* %11), !dbg !2687
  %12 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2688
  %mat = getelementptr inbounds %struct.Curve, %struct.Curve* %12, i32 0, i32 10, !dbg !2690
  %13 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !2690
  %tobool = icmp ne %struct.Material** %13, null, !dbg !2688
  br i1 %tobool, label %if.then, label %if.end, !dbg !2691

if.then:                                          ; preds = %entry
  %14 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2692
  %mat1 = getelementptr inbounds %struct.Curve, %struct.Curve* %14, i32 0, i32 10, !dbg !2694
  %15 = load %struct.Material**, %struct.Material*** %mat1, align 8, !dbg !2694
  %16 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2695
  %totcol = getelementptr inbounds %struct.Curve, %struct.Curve* %16, i32 0, i32 22, !dbg !2696
  %17 = load i16, i16* %totcol, align 2, !dbg !2696
  call void @extern_local_matarar(%struct.Material** %15, i16 signext %17), !dbg !2697
  br label %if.end, !dbg !2698

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2699
}

declare dso_local void @BKE_id_lib_local_paths(%struct.Main*, %struct.Library*, %struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ListBase* @BKE_curve_editNurbs_get(%struct.Curve* %cu) #0 !dbg !2700 {
entry:
  %retval = alloca %struct.ListBase*, align 8
  %cu.addr = alloca %struct.Curve*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !2703, metadata !DIExpression()), !dbg !2704
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2705
  %editnurb = getelementptr inbounds %struct.Curve, %struct.Curve* %0, i32 0, i32 4, !dbg !2707
  %1 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !2707
  %tobool = icmp ne %struct.EditNurb* %1, null, !dbg !2705
  br i1 %tobool, label %if.then, label %if.end, !dbg !2708

if.then:                                          ; preds = %entry
  %2 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2709
  %editnurb1 = getelementptr inbounds %struct.Curve, %struct.Curve* %2, i32 0, i32 4, !dbg !2711
  %3 = load %struct.EditNurb*, %struct.EditNurb** %editnurb1, align 8, !dbg !2711
  %nurbs = getelementptr inbounds %struct.EditNurb, %struct.EditNurb* %3, i32 0, i32 0, !dbg !2712
  store %struct.ListBase* %nurbs, %struct.ListBase** %retval, align 8, !dbg !2713
  br label %return, !dbg !2713

if.end:                                           ; preds = %entry
  store %struct.ListBase* null, %struct.ListBase** %retval, align 8, !dbg !2714
  br label %return, !dbg !2714

return:                                           ; preds = %if.end, %if.then
  %4 = load %struct.ListBase*, %struct.ListBase** %retval, align 8, !dbg !2715
  ret %struct.ListBase* %4, !dbg !2715
}

; Function Attrs: noinline nounwind uwtable
define dso_local signext i16 @BKE_curve_type_get(%struct.Curve* %cu) #0 !dbg !2716 {
entry:
  %retval = alloca i16, align 2
  %cu.addr = alloca %struct.Curve*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %type = alloca i32, align 4
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !2719, metadata !DIExpression()), !dbg !2720
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !2721, metadata !DIExpression()), !dbg !2722
  call void @llvm.dbg.declare(metadata i32* %type, metadata !2723, metadata !DIExpression()), !dbg !2724
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2725
  %type1 = getelementptr inbounds %struct.Curve, %struct.Curve* %0, i32 0, i32 14, !dbg !2726
  %1 = load i16, i16* %type1, align 4, !dbg !2726
  %conv = sext i16 %1 to i32, !dbg !2725
  store i32 %conv, i32* %type, align 4, !dbg !2724
  %2 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2727
  %vfont = getelementptr inbounds %struct.Curve, %struct.Curve* %2, i32 0, i32 55, !dbg !2729
  %3 = load %struct.VFont*, %struct.VFont** %vfont, align 8, !dbg !2729
  %tobool = icmp ne %struct.VFont* %3, null, !dbg !2727
  br i1 %tobool, label %if.then, label %if.end, !dbg !2730

if.then:                                          ; preds = %entry
  store i16 4, i16* %retval, align 2, !dbg !2731
  br label %return, !dbg !2731

if.end:                                           ; preds = %entry
  %4 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2733
  %type2 = getelementptr inbounds %struct.Curve, %struct.Curve* %4, i32 0, i32 14, !dbg !2735
  %5 = load i16, i16* %type2, align 4, !dbg !2735
  %tobool3 = icmp ne i16 %5, 0, !dbg !2733
  br i1 %tobool3, label %if.end9, label %if.then4, !dbg !2736

if.then4:                                         ; preds = %if.end
  store i32 2, i32* %type, align 4, !dbg !2737
  %6 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2739
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %6, i32 0, i32 3, !dbg !2741
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb, i32 0, i32 0, !dbg !2742
  %7 = load i8*, i8** %first, align 8, !dbg !2742
  %8 = bitcast i8* %7 to %struct.Nurb*, !dbg !2739
  store %struct.Nurb* %8, %struct.Nurb** %nu, align 8, !dbg !2743
  br label %for.cond, !dbg !2744

for.cond:                                         ; preds = %for.inc, %if.then4
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !2745
  %tobool5 = icmp ne %struct.Nurb* %9, null, !dbg !2747
  br i1 %tobool5, label %for.body, label %for.end, !dbg !2747

for.body:                                         ; preds = %for.cond
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !2748
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 7, !dbg !2751
  %11 = load i32, i32* %pntsv, align 4, !dbg !2751
  %cmp = icmp sgt i32 %11, 1, !dbg !2752
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !2753

if.then7:                                         ; preds = %for.body
  store i32 3, i32* %type, align 4, !dbg !2754
  br label %if.end8, !dbg !2756

if.end8:                                          ; preds = %if.then7, %for.body
  br label %for.inc, !dbg !2757

for.inc:                                          ; preds = %if.end8
  %12 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !2758
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 0, !dbg !2759
  %13 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !2759
  store %struct.Nurb* %13, %struct.Nurb** %nu, align 8, !dbg !2760
  br label %for.cond, !dbg !2761, !llvm.loop !2762

for.end:                                          ; preds = %for.cond
  br label %if.end9, !dbg !2764

if.end9:                                          ; preds = %for.end, %if.end
  %14 = load i32, i32* %type, align 4, !dbg !2765
  %conv10 = trunc i32 %14 to i16, !dbg !2765
  store i16 %conv10, i16* %retval, align 2, !dbg !2766
  br label %return, !dbg !2766

return:                                           ; preds = %if.end9, %if.then
  %15 = load i16, i16* %retval, align 2, !dbg !2767
  ret i16 %15, !dbg !2767
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_curve_dimension_update(%struct.Curve* %cu) #0 !dbg !2768 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %nurbs = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !2769, metadata !DIExpression()), !dbg !2770
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nurbs, metadata !2771, metadata !DIExpression()), !dbg !2772
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2773
  %call = call %struct.ListBase* @BKE_curve_nurbs_get(%struct.Curve* %0), !dbg !2774
  store %struct.ListBase* %call, %struct.ListBase** %nurbs, align 8, !dbg !2772
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !2775, metadata !DIExpression()), !dbg !2776
  %1 = load %struct.ListBase*, %struct.ListBase** %nurbs, align 8, !dbg !2777
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !2778
  %2 = load i8*, i8** %first, align 8, !dbg !2778
  %3 = bitcast i8* %2 to %struct.Nurb*, !dbg !2777
  store %struct.Nurb* %3, %struct.Nurb** %nu, align 8, !dbg !2776
  %4 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2779
  %flag = getelementptr inbounds %struct.Curve, %struct.Curve* %4, i32 0, i32 23, !dbg !2781
  %5 = load i32, i32* %flag, align 4, !dbg !2781
  %and = and i32 %5, 1, !dbg !2782
  %tobool = icmp ne i32 %and, 0, !dbg !2782
  br i1 %tobool, label %if.then, label %if.else, !dbg !2783

if.then:                                          ; preds = %entry
  br label %for.cond, !dbg !2784

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !2786
  %tobool1 = icmp ne %struct.Nurb* %6, null, !dbg !2789
  br i1 %tobool1, label %for.body, label %for.end, !dbg !2789

for.body:                                         ; preds = %for.cond
  %7 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !2790
  %flag2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %7, i32 0, i32 5, !dbg !2792
  %8 = load i16, i16* %flag2, align 2, !dbg !2793
  %conv = sext i16 %8 to i32, !dbg !2793
  %and3 = and i32 %conv, -9, !dbg !2793
  %conv4 = trunc i32 %and3 to i16, !dbg !2793
  store i16 %conv4, i16* %flag2, align 2, !dbg !2793
  br label %for.inc, !dbg !2794

for.inc:                                          ; preds = %for.body
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !2795
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 0, !dbg !2796
  %10 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !2796
  store %struct.Nurb* %10, %struct.Nurb** %nu, align 8, !dbg !2797
  br label %for.cond, !dbg !2798, !llvm.loop !2799

for.end:                                          ; preds = %for.cond
  br label %if.end17, !dbg !2801

if.else:                                          ; preds = %entry
  br label %for.cond5, !dbg !2802

for.cond5:                                        ; preds = %for.inc14, %if.else
  %11 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !2804
  %tobool6 = icmp ne %struct.Nurb* %11, null, !dbg !2807
  br i1 %tobool6, label %for.body7, label %for.end16, !dbg !2807

for.body7:                                        ; preds = %for.cond5
  %12 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !2808
  %flag8 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 5, !dbg !2810
  %13 = load i16, i16* %flag8, align 2, !dbg !2811
  %conv9 = sext i16 %13 to i32, !dbg !2811
  %or = or i32 %conv9, 8, !dbg !2811
  %conv10 = trunc i32 %or to i16, !dbg !2811
  store i16 %conv10, i16* %flag8, align 2, !dbg !2811
  %14 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !2812
  call void @BKE_nurb_test2D(%struct.Nurb* %14), !dbg !2813
  %15 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !2814
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %15, i32 0, i32 2, !dbg !2816
  %16 = load i16, i16* %type, align 8, !dbg !2816
  %conv11 = sext i16 %16 to i32, !dbg !2814
  %cmp = icmp eq i32 %conv11, 1, !dbg !2817
  br i1 %cmp, label %if.then13, label %if.end, !dbg !2818

if.then13:                                        ; preds = %for.body7
  %17 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !2819
  call void @BKE_nurb_handles_calc(%struct.Nurb* %17), !dbg !2820
  br label %if.end, !dbg !2820

if.end:                                           ; preds = %if.then13, %for.body7
  br label %for.inc14, !dbg !2821

for.inc14:                                        ; preds = %if.end
  %18 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !2822
  %next15 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %18, i32 0, i32 0, !dbg !2823
  %19 = load %struct.Nurb*, %struct.Nurb** %next15, align 8, !dbg !2823
  store %struct.Nurb* %19, %struct.Nurb** %nu, align 8, !dbg !2824
  br label %for.cond5, !dbg !2825, !llvm.loop !2826

for.end16:                                        ; preds = %for.cond5
  br label %if.end17

if.end17:                                         ; preds = %for.end16, %for.end
  ret void, !dbg !2828
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ListBase* @BKE_curve_nurbs_get(%struct.Curve* %cu) #0 !dbg !2829 {
entry:
  %retval = alloca %struct.ListBase*, align 8
  %cu.addr = alloca %struct.Curve*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !2832, metadata !DIExpression()), !dbg !2833
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2834
  %editnurb = getelementptr inbounds %struct.Curve, %struct.Curve* %0, i32 0, i32 4, !dbg !2836
  %1 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !2836
  %tobool = icmp ne %struct.EditNurb* %1, null, !dbg !2834
  br i1 %tobool, label %if.then, label %if.end, !dbg !2837

if.then:                                          ; preds = %entry
  %2 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2838
  %call = call %struct.ListBase* @BKE_curve_editNurbs_get(%struct.Curve* %2), !dbg !2840
  store %struct.ListBase* %call, %struct.ListBase** %retval, align 8, !dbg !2841
  br label %return, !dbg !2841

if.end:                                           ; preds = %entry
  %3 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2842
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 3, !dbg !2843
  store %struct.ListBase* %nurb, %struct.ListBase** %retval, align 8, !dbg !2844
  br label %return, !dbg !2844

return:                                           ; preds = %if.end, %if.then
  %4 = load %struct.ListBase*, %struct.ListBase** %retval, align 8, !dbg !2845
  ret %struct.ListBase* %4, !dbg !2845
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurb_test2D(%struct.Nurb* %nu) #0 !dbg !2846 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !2849, metadata !DIExpression()), !dbg !2850
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !2851, metadata !DIExpression()), !dbg !2852
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !2853, metadata !DIExpression()), !dbg !2854
  call void @llvm.dbg.declare(metadata i32* %a, metadata !2855, metadata !DIExpression()), !dbg !2856
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !2857
  %flag = getelementptr inbounds %struct.Nurb, %struct.Nurb* %0, i32 0, i32 5, !dbg !2859
  %1 = load i16, i16* %flag, align 2, !dbg !2859
  %conv = sext i16 %1 to i32, !dbg !2857
  %and = and i32 %conv, 8, !dbg !2860
  %cmp = icmp eq i32 %and, 0, !dbg !2861
  br i1 %cmp, label %if.then, label %if.end, !dbg !2862

if.then:                                          ; preds = %entry
  br label %if.end24, !dbg !2863

if.end:                                           ; preds = %entry
  %2 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !2864
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %2, i32 0, i32 2, !dbg !2866
  %3 = load i16, i16* %type, align 8, !dbg !2866
  %conv2 = sext i16 %3 to i32, !dbg !2864
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !2867
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !2868

if.then5:                                         ; preds = %if.end
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !2869
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 6, !dbg !2871
  %5 = load i32, i32* %pntsu, align 8, !dbg !2871
  store i32 %5, i32* %a, align 4, !dbg !2872
  %6 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !2873
  %bezt6 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 18, !dbg !2874
  %7 = load %struct.BezTriple*, %struct.BezTriple** %bezt6, align 8, !dbg !2874
  store %struct.BezTriple* %7, %struct.BezTriple** %bezt, align 8, !dbg !2875
  br label %while.cond, !dbg !2876

while.cond:                                       ; preds = %while.body, %if.then5
  %8 = load i32, i32* %a, align 4, !dbg !2877
  %dec = add nsw i32 %8, -1, !dbg !2877
  store i32 %dec, i32* %a, align 4, !dbg !2877
  %tobool = icmp ne i32 %8, 0, !dbg !2876
  br i1 %tobool, label %while.body, label %while.end, !dbg !2876

while.body:                                       ; preds = %while.cond
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !2878
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %9, i32 0, i32 0, !dbg !2880
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !2878
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 2, !dbg !2878
  store float 0.000000e+00, float* %arrayidx7, align 4, !dbg !2881
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !2882
  %vec8 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %10, i32 0, i32 0, !dbg !2883
  %arrayidx9 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec8, i64 0, i64 1, !dbg !2882
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx9, i64 0, i64 2, !dbg !2882
  store float 0.000000e+00, float* %arrayidx10, align 4, !dbg !2884
  %11 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !2885
  %vec11 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %11, i32 0, i32 0, !dbg !2886
  %arrayidx12 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec11, i64 0, i64 2, !dbg !2885
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx12, i64 0, i64 2, !dbg !2885
  store float 0.000000e+00, float* %arrayidx13, align 4, !dbg !2887
  %12 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !2888
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %12, i32 1, !dbg !2888
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !2888
  br label %while.cond, !dbg !2876, !llvm.loop !2889

while.end:                                        ; preds = %while.cond
  br label %if.end24, !dbg !2891

if.else:                                          ; preds = %if.end
  %13 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !2892
  %pntsu14 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 6, !dbg !2894
  %14 = load i32, i32* %pntsu14, align 8, !dbg !2894
  %15 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !2895
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %15, i32 0, i32 7, !dbg !2896
  %16 = load i32, i32* %pntsv, align 4, !dbg !2896
  %mul = mul nsw i32 %14, %16, !dbg !2897
  store i32 %mul, i32* %a, align 4, !dbg !2898
  %17 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !2899
  %bp15 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %17, i32 0, i32 17, !dbg !2900
  %18 = load %struct.BPoint*, %struct.BPoint** %bp15, align 8, !dbg !2900
  store %struct.BPoint* %18, %struct.BPoint** %bp, align 8, !dbg !2901
  br label %while.cond16, !dbg !2902

while.cond16:                                     ; preds = %while.body19, %if.else
  %19 = load i32, i32* %a, align 4, !dbg !2903
  %dec17 = add nsw i32 %19, -1, !dbg !2903
  store i32 %dec17, i32* %a, align 4, !dbg !2903
  %tobool18 = icmp ne i32 %19, 0, !dbg !2902
  br i1 %tobool18, label %while.body19, label %while.end23, !dbg !2902

while.body19:                                     ; preds = %while.cond16
  %20 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !2904
  %vec20 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %20, i32 0, i32 0, !dbg !2906
  %arrayidx21 = getelementptr inbounds [4 x float], [4 x float]* %vec20, i64 0, i64 2, !dbg !2904
  store float 0.000000e+00, float* %arrayidx21, align 4, !dbg !2907
  %21 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !2908
  %incdec.ptr22 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %21, i32 1, !dbg !2908
  store %struct.BPoint* %incdec.ptr22, %struct.BPoint** %bp, align 8, !dbg !2908
  br label %while.cond16, !dbg !2902, !llvm.loop !2909

while.end23:                                      ; preds = %while.cond16
  br label %if.end24

if.end24:                                         ; preds = %if.then, %while.end23, %while.end
  ret void, !dbg !2911
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurb_handles_calc(%struct.Nurb* %nu) #0 !dbg !2912 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !2913, metadata !DIExpression()), !dbg !2914
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !2915
  call void @calchandlesNurb_intern(%struct.Nurb* %0, i8 zeroext 0), !dbg !2916
  ret void, !dbg !2917
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_type_test(%struct.Object* %ob) #0 !dbg !2918 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2921, metadata !DIExpression()), !dbg !2922
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2923
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !2924
  %1 = load i8*, i8** %data, align 8, !dbg !2924
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !2923
  %call = call signext i16 @BKE_curve_type_get(%struct.Curve* %2), !dbg !2925
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2926
  %type = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 3, !dbg !2927
  store i16 %call, i16* %type, align 8, !dbg !2928
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2929
  %type1 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 3, !dbg !2931
  %5 = load i16, i16* %type1, align 8, !dbg !2931
  %conv = sext i16 %5 to i32, !dbg !2929
  %cmp = icmp eq i32 %conv, 2, !dbg !2932
  br i1 %cmp, label %if.then, label %if.end, !dbg !2933

if.then:                                          ; preds = %entry
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2934
  %data3 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 19, !dbg !2935
  %7 = load i8*, i8** %data3, align 8, !dbg !2935
  %8 = bitcast i8* %7 to %struct.Curve*, !dbg !2936
  call void @BKE_curve_curve_dimension_update(%struct.Curve* %8), !dbg !2937
  br label %if.end, !dbg !2937

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2938
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_boundbox_calc(%struct.Curve* %cu, float* %r_loc, float* %r_size) #0 !dbg !2939 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %r_loc.addr = alloca float*, align 8
  %r_size.addr = alloca float*, align 8
  %bb = alloca %struct.BoundBox*, align 8
  %min = alloca [3 x float], align 4
  %max = alloca [3 x float], align 4
  %mloc = alloca [3 x float], align 4
  %msize = alloca [3 x float], align 4
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !2942, metadata !DIExpression()), !dbg !2943
  store float* %r_loc, float** %r_loc.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_loc.addr, metadata !2944, metadata !DIExpression()), !dbg !2945
  store float* %r_size, float** %r_size.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_size.addr, metadata !2946, metadata !DIExpression()), !dbg !2947
  call void @llvm.dbg.declare(metadata %struct.BoundBox** %bb, metadata !2948, metadata !DIExpression()), !dbg !2951
  call void @llvm.dbg.declare(metadata [3 x float]* %min, metadata !2952, metadata !DIExpression()), !dbg !2953
  call void @llvm.dbg.declare(metadata [3 x float]* %max, metadata !2954, metadata !DIExpression()), !dbg !2955
  call void @llvm.dbg.declare(metadata [3 x float]* %mloc, metadata !2956, metadata !DIExpression()), !dbg !2957
  call void @llvm.dbg.declare(metadata [3 x float]* %msize, metadata !2958, metadata !DIExpression()), !dbg !2959
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2960
  %bb1 = getelementptr inbounds %struct.Curve, %struct.Curve* %0, i32 0, i32 2, !dbg !2962
  %1 = load %struct.BoundBox*, %struct.BoundBox** %bb1, align 8, !dbg !2962
  %cmp = icmp eq %struct.BoundBox* %1, null, !dbg !2963
  br i1 %cmp, label %if.then, label %if.end, !dbg !2964

if.then:                                          ; preds = %entry
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2965
  %call = call i8* %2(i64 104, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0)), !dbg !2965
  %3 = bitcast i8* %call to %struct.BoundBox*, !dbg !2965
  %4 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2966
  %bb2 = getelementptr inbounds %struct.Curve, %struct.Curve* %4, i32 0, i32 2, !dbg !2967
  store %struct.BoundBox* %3, %struct.BoundBox** %bb2, align 8, !dbg !2968
  br label %if.end, !dbg !2966

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2969
  %bb3 = getelementptr inbounds %struct.Curve, %struct.Curve* %5, i32 0, i32 2, !dbg !2970
  %6 = load %struct.BoundBox*, %struct.BoundBox** %bb3, align 8, !dbg !2970
  store %struct.BoundBox* %6, %struct.BoundBox** %bb, align 8, !dbg !2971
  %7 = load float*, float** %r_loc.addr, align 8, !dbg !2972
  %tobool = icmp ne float* %7, null, !dbg !2972
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !2974

if.then4:                                         ; preds = %if.end
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %mloc, i64 0, i64 0, !dbg !2975
  store float* %arraydecay, float** %r_loc.addr, align 8, !dbg !2976
  br label %if.end5, !dbg !2977

if.end5:                                          ; preds = %if.then4, %if.end
  %8 = load float*, float** %r_size.addr, align 8, !dbg !2978
  %tobool6 = icmp ne float* %8, null, !dbg !2978
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !2980

if.then7:                                         ; preds = %if.end5
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %msize, i64 0, i64 0, !dbg !2981
  store float* %arraydecay8, float** %r_size.addr, align 8, !dbg !2982
  br label %if.end9, !dbg !2983

if.end9:                                          ; preds = %if.then7, %if.end5
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !2984
  store float 0x46293E5940000000, float* %arrayidx, align 4, !dbg !2984
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !2984
  store float 0x46293E5940000000, float* %arrayidx10, align 4, !dbg !2984
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !2984
  store float 0x46293E5940000000, float* %arrayidx11, align 4, !dbg !2984
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 2, !dbg !2984
  store float 0xC6293E5940000000, float* %arrayidx12, align 4, !dbg !2984
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 1, !dbg !2984
  store float 0xC6293E5940000000, float* %arrayidx13, align 4, !dbg !2984
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !2984
  store float 0xC6293E5940000000, float* %arrayidx14, align 4, !dbg !2984
  %9 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !2986
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !2988
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !2989
  %call17 = call zeroext i8 @BKE_curve_minmax(%struct.Curve* %9, i8 zeroext 1, float* %arraydecay15, float* %arraydecay16), !dbg !2990
  %tobool18 = icmp ne i8 %call17, 0, !dbg !2990
  br i1 %tobool18, label %if.end26, label %if.then19, !dbg !2991

if.then19:                                        ; preds = %if.end9
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !2992
  store float -1.000000e+00, float* %arrayidx20, align 4, !dbg !2994
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !2995
  store float -1.000000e+00, float* %arrayidx21, align 4, !dbg !2996
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !2997
  store float -1.000000e+00, float* %arrayidx22, align 4, !dbg !2998
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 2, !dbg !2999
  store float 1.000000e+00, float* %arrayidx23, align 4, !dbg !3000
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 1, !dbg !3001
  store float 1.000000e+00, float* %arrayidx24, align 4, !dbg !3002
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !3003
  store float 1.000000e+00, float* %arrayidx25, align 4, !dbg !3004
  br label %if.end26, !dbg !3005

if.end26:                                         ; preds = %if.then19, %if.end9
  %10 = load float*, float** %r_loc.addr, align 8, !dbg !3006
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !3007
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !3008
  call void @mid_v3_v3v3(float* %10, float* %arraydecay27, float* %arraydecay28), !dbg !3009
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !3010
  %11 = load float, float* %arrayidx29, align 4, !dbg !3010
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !3011
  %12 = load float, float* %arrayidx30, align 4, !dbg !3011
  %sub = fsub float %11, %12, !dbg !3012
  %div = fdiv float %sub, 2.000000e+00, !dbg !3013
  %13 = load float*, float** %r_size.addr, align 8, !dbg !3014
  %arrayidx31 = getelementptr inbounds float, float* %13, i64 0, !dbg !3014
  store float %div, float* %arrayidx31, align 4, !dbg !3015
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 1, !dbg !3016
  %14 = load float, float* %arrayidx32, align 4, !dbg !3016
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !3017
  %15 = load float, float* %arrayidx33, align 4, !dbg !3017
  %sub34 = fsub float %14, %15, !dbg !3018
  %div35 = fdiv float %sub34, 2.000000e+00, !dbg !3019
  %16 = load float*, float** %r_size.addr, align 8, !dbg !3020
  %arrayidx36 = getelementptr inbounds float, float* %16, i64 1, !dbg !3020
  store float %div35, float* %arrayidx36, align 4, !dbg !3021
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 2, !dbg !3022
  %17 = load float, float* %arrayidx37, align 4, !dbg !3022
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !3023
  %18 = load float, float* %arrayidx38, align 4, !dbg !3023
  %sub39 = fsub float %17, %18, !dbg !3024
  %div40 = fdiv float %sub39, 2.000000e+00, !dbg !3025
  %19 = load float*, float** %r_size.addr, align 8, !dbg !3026
  %arrayidx41 = getelementptr inbounds float, float* %19, i64 2, !dbg !3026
  store float %div40, float* %arrayidx41, align 4, !dbg !3027
  %20 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !3028
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !3029
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !3030
  call void @BKE_boundbox_init_from_minmax(%struct.BoundBox* %20, float* %arraydecay42, float* %arraydecay43), !dbg !3031
  %21 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !3032
  %flag = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %21, i32 0, i32 1, !dbg !3033
  %22 = load i32, i32* %flag, align 4, !dbg !3034
  %and = and i32 %22, -3, !dbg !3034
  store i32 %and, i32* %flag, align 4, !dbg !3034
  ret void, !dbg !3035
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_curve_minmax(%struct.Curve* %cu, i8 zeroext %use_radius, float* %min, float* %max) #0 !dbg !3036 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %use_radius.addr = alloca i8, align 1
  %min.addr = alloca float*, align 8
  %max.addr = alloca float*, align 8
  %nurb_lb = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !3039, metadata !DIExpression()), !dbg !3040
  store i8 %use_radius, i8* %use_radius.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_radius.addr, metadata !3041, metadata !DIExpression()), !dbg !3042
  store float* %min, float** %min.addr, align 8
  call void @llvm.dbg.declare(metadata float** %min.addr, metadata !3043, metadata !DIExpression()), !dbg !3044
  store float* %max, float** %max.addr, align 8
  call void @llvm.dbg.declare(metadata float** %max.addr, metadata !3045, metadata !DIExpression()), !dbg !3046
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nurb_lb, metadata !3047, metadata !DIExpression()), !dbg !3048
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !3049
  %call = call %struct.ListBase* @BKE_curve_nurbs_get(%struct.Curve* %0), !dbg !3050
  store %struct.ListBase* %call, %struct.ListBase** %nurb_lb, align 8, !dbg !3048
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !3051, metadata !DIExpression()), !dbg !3052
  %1 = load %struct.ListBase*, %struct.ListBase** %nurb_lb, align 8, !dbg !3053
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !3055
  %2 = load i8*, i8** %first, align 8, !dbg !3055
  %3 = bitcast i8* %2 to %struct.Nurb*, !dbg !3053
  store %struct.Nurb* %3, %struct.Nurb** %nu, align 8, !dbg !3056
  br label %for.cond, !dbg !3057

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3058
  %tobool = icmp ne %struct.Nurb* %4, null, !dbg !3060
  br i1 %tobool, label %for.body, label %for.end, !dbg !3060

for.body:                                         ; preds = %for.cond
  %5 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3061
  %6 = load i8, i8* %use_radius.addr, align 1, !dbg !3062
  %7 = load float*, float** %min.addr, align 8, !dbg !3063
  %8 = load float*, float** %max.addr, align 8, !dbg !3064
  call void @BKE_nurb_minmax(%struct.Nurb* %5, i8 zeroext %6, float* %7, float* %8), !dbg !3065
  br label %for.inc, !dbg !3065

for.inc:                                          ; preds = %for.body
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3066
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 0, !dbg !3067
  %10 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !3067
  store %struct.Nurb* %10, %struct.Nurb** %nu, align 8, !dbg !3068
  br label %for.cond, !dbg !3069, !llvm.loop !3070

for.end:                                          ; preds = %for.cond
  %11 = load %struct.ListBase*, %struct.ListBase** %nurb_lb, align 8, !dbg !3072
  %call1 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %11), !dbg !3073
  %conv = zext i8 %call1 to i32, !dbg !3073
  %cmp = icmp eq i32 %conv, 0, !dbg !3074
  %conv2 = zext i1 %cmp to i32, !dbg !3074
  %conv3 = trunc i32 %conv2 to i8, !dbg !3075
  ret i8 %conv3, !dbg !3076
}

declare dso_local void @mid_v3_v3v3(float*, float*, float*) #2

declare dso_local void @BKE_boundbox_init_from_minmax(%struct.BoundBox*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.BoundBox* @BKE_curve_boundbox_get(%struct.Object* %ob) #0 !dbg !3077 {
entry:
  %retval = alloca %struct.BoundBox*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3080, metadata !DIExpression()), !dbg !3081
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !3082, metadata !DIExpression()), !dbg !3083
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3084
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !3085
  %1 = load i8*, i8** %data, align 8, !dbg !3085
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !3084
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !3083
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3086
  %bb = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 15, !dbg !3088
  %4 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !3088
  %tobool = icmp ne %struct.BoundBox* %4, null, !dbg !3086
  br i1 %tobool, label %if.then, label %if.end, !dbg !3089

if.then:                                          ; preds = %entry
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3090
  %bb1 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 15, !dbg !3091
  %6 = load %struct.BoundBox*, %struct.BoundBox** %bb1, align 8, !dbg !3091
  store %struct.BoundBox* %6, %struct.BoundBox** %retval, align 8, !dbg !3092
  br label %return, !dbg !3092

if.end:                                           ; preds = %entry
  %7 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3093
  %bb2 = getelementptr inbounds %struct.Curve, %struct.Curve* %7, i32 0, i32 2, !dbg !3095
  %8 = load %struct.BoundBox*, %struct.BoundBox** %bb2, align 8, !dbg !3095
  %cmp = icmp eq %struct.BoundBox* %8, null, !dbg !3096
  br i1 %cmp, label %if.then5, label %lor.lhs.false, !dbg !3097

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3098
  %bb3 = getelementptr inbounds %struct.Curve, %struct.Curve* %9, i32 0, i32 2, !dbg !3099
  %10 = load %struct.BoundBox*, %struct.BoundBox** %bb3, align 8, !dbg !3099
  %flag = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %10, i32 0, i32 1, !dbg !3100
  %11 = load i32, i32* %flag, align 4, !dbg !3100
  %and = and i32 %11, 2, !dbg !3101
  %tobool4 = icmp ne i32 %and, 0, !dbg !3101
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !3102

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  %12 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3103
  call void @BKE_curve_texspace_calc(%struct.Curve* %12), !dbg !3105
  br label %if.end6, !dbg !3106

if.end6:                                          ; preds = %if.then5, %lor.lhs.false
  %13 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !3107
  %bb7 = getelementptr inbounds %struct.Curve, %struct.Curve* %13, i32 0, i32 2, !dbg !3108
  %14 = load %struct.BoundBox*, %struct.BoundBox** %bb7, align 8, !dbg !3108
  store %struct.BoundBox* %14, %struct.BoundBox** %retval, align 8, !dbg !3109
  br label %return, !dbg !3109

return:                                           ; preds = %if.end6, %if.then
  %15 = load %struct.BoundBox*, %struct.BoundBox** %retval, align 8, !dbg !3110
  ret %struct.BoundBox* %15, !dbg !3110
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_texspace_calc(%struct.Curve* %cu) #0 !dbg !3111 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %loc = alloca [3 x float], align 4
  %size = alloca [3 x float], align 4
  %a = alloca i32, align 4
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !3112, metadata !DIExpression()), !dbg !3113
  call void @llvm.dbg.declare(metadata [3 x float]* %loc, metadata !3114, metadata !DIExpression()), !dbg !3115
  call void @llvm.dbg.declare(metadata [3 x float]* %size, metadata !3116, metadata !DIExpression()), !dbg !3117
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3118, metadata !DIExpression()), !dbg !3119
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !3120
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !3121
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !3122
  call void @BKE_curve_boundbox_calc(%struct.Curve* %0, float* %arraydecay, float* %arraydecay1), !dbg !3123
  %1 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !3124
  %texflag = getelementptr inbounds %struct.Curve, %struct.Curve* %1, i32 0, i32 15, !dbg !3126
  %2 = load i16, i16* %texflag, align 2, !dbg !3126
  %conv = sext i16 %2 to i32, !dbg !3124
  %and = and i32 %conv, 1, !dbg !3127
  %tobool = icmp ne i32 %and, 0, !dbg !3127
  br i1 %tobool, label %if.then, label %if.end41, !dbg !3128

if.then:                                          ; preds = %entry
  store i32 0, i32* %a, align 4, !dbg !3129
  br label %for.cond, !dbg !3132

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, i32* %a, align 4, !dbg !3133
  %cmp = icmp slt i32 %3, 3, !dbg !3135
  br i1 %cmp, label %for.body, label %for.end, !dbg !3136

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %a, align 4, !dbg !3137
  %idxprom = sext i32 %4 to i64, !dbg !3140
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom, !dbg !3140
  %5 = load float, float* %arrayidx, align 4, !dbg !3140
  %cmp3 = fcmp oeq float %5, 0.000000e+00, !dbg !3141
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !3142

if.then5:                                         ; preds = %for.body
  %6 = load i32, i32* %a, align 4, !dbg !3143
  %idxprom6 = sext i32 %6 to i64, !dbg !3144
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom6, !dbg !3144
  store float 1.000000e+00, float* %arrayidx7, align 4, !dbg !3145
  br label %if.end33, !dbg !3144

if.else:                                          ; preds = %for.body
  %7 = load i32, i32* %a, align 4, !dbg !3146
  %idxprom8 = sext i32 %7 to i64, !dbg !3148
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom8, !dbg !3148
  %8 = load float, float* %arrayidx9, align 4, !dbg !3148
  %cmp10 = fcmp ogt float %8, 0.000000e+00, !dbg !3149
  br i1 %cmp10, label %land.lhs.true, label %if.else19, !dbg !3150

land.lhs.true:                                    ; preds = %if.else
  %9 = load i32, i32* %a, align 4, !dbg !3151
  %idxprom12 = sext i32 %9 to i64, !dbg !3152
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom12, !dbg !3152
  %10 = load float, float* %arrayidx13, align 4, !dbg !3152
  %cmp14 = fcmp olt float %10, 0x3EE4F8B580000000, !dbg !3153
  br i1 %cmp14, label %if.then16, label %if.else19, !dbg !3154

if.then16:                                        ; preds = %land.lhs.true
  %11 = load i32, i32* %a, align 4, !dbg !3155
  %idxprom17 = sext i32 %11 to i64, !dbg !3156
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom17, !dbg !3156
  store float 0x3EE4F8B580000000, float* %arrayidx18, align 4, !dbg !3157
  br label %if.end32, !dbg !3156

if.else19:                                        ; preds = %land.lhs.true, %if.else
  %12 = load i32, i32* %a, align 4, !dbg !3158
  %idxprom20 = sext i32 %12 to i64, !dbg !3160
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom20, !dbg !3160
  %13 = load float, float* %arrayidx21, align 4, !dbg !3160
  %cmp22 = fcmp olt float %13, 0.000000e+00, !dbg !3161
  br i1 %cmp22, label %land.lhs.true24, label %if.end, !dbg !3162

land.lhs.true24:                                  ; preds = %if.else19
  %14 = load i32, i32* %a, align 4, !dbg !3163
  %idxprom25 = sext i32 %14 to i64, !dbg !3164
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom25, !dbg !3164
  %15 = load float, float* %arrayidx26, align 4, !dbg !3164
  %cmp27 = fcmp ogt float %15, 0xBEE4F8B580000000, !dbg !3165
  br i1 %cmp27, label %if.then29, label %if.end, !dbg !3166

if.then29:                                        ; preds = %land.lhs.true24
  %16 = load i32, i32* %a, align 4, !dbg !3167
  %idxprom30 = sext i32 %16 to i64, !dbg !3168
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom30, !dbg !3168
  store float 0xBEE4F8B580000000, float* %arrayidx31, align 4, !dbg !3169
  br label %if.end, !dbg !3168

if.end:                                           ; preds = %if.then29, %land.lhs.true24, %if.else19
  br label %if.end32

if.end32:                                         ; preds = %if.end, %if.then16
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then5
  br label %for.inc, !dbg !3170

for.inc:                                          ; preds = %if.end33
  %17 = load i32, i32* %a, align 4, !dbg !3171
  %inc = add nsw i32 %17, 1, !dbg !3171
  store i32 %inc, i32* %a, align 4, !dbg !3171
  br label %for.cond, !dbg !3172, !llvm.loop !3173

for.end:                                          ; preds = %for.cond
  %18 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !3175
  %loc34 = getelementptr inbounds %struct.Curve, %struct.Curve* %18, i32 0, i32 11, !dbg !3176
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %loc34, i64 0, i64 0, !dbg !3175
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !3177
  call void @copy_v3_v3(float* %arraydecay35, float* %arraydecay36), !dbg !3178
  %19 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !3179
  %size37 = getelementptr inbounds %struct.Curve, %struct.Curve* %19, i32 0, i32 12, !dbg !3180
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %size37, i64 0, i64 0, !dbg !3179
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !3181
  call void @copy_v3_v3(float* %arraydecay38, float* %arraydecay39), !dbg !3182
  %20 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !3183
  %rot = getelementptr inbounds %struct.Curve, %struct.Curve* %20, i32 0, i32 13, !dbg !3184
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %rot, i64 0, i64 0, !dbg !3183
  call void @zero_v3(float* %arraydecay40), !dbg !3185
  br label %if.end41, !dbg !3186

if.end41:                                         ; preds = %for.end, %entry
  ret void, !dbg !3187
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !3188 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3193, metadata !DIExpression()), !dbg !3194
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3195, metadata !DIExpression()), !dbg !3196
  %0 = load float*, float** %a.addr, align 8, !dbg !3197
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3197
  %1 = load float, float* %arrayidx, align 4, !dbg !3197
  %2 = load float*, float** %r.addr, align 8, !dbg !3198
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3198
  store float %1, float* %arrayidx1, align 4, !dbg !3199
  %3 = load float*, float** %a.addr, align 8, !dbg !3200
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !3200
  %4 = load float, float* %arrayidx2, align 4, !dbg !3200
  %5 = load float*, float** %r.addr, align 8, !dbg !3201
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !3201
  store float %4, float* %arrayidx3, align 4, !dbg !3202
  %6 = load float*, float** %a.addr, align 8, !dbg !3203
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !3203
  %7 = load float, float* %arrayidx4, align 4, !dbg !3203
  %8 = load float*, float** %r.addr, align 8, !dbg !3204
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !3204
  store float %7, float* %arrayidx5, align 4, !dbg !3205
  ret void, !dbg !3206
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !3207 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3210, metadata !DIExpression()), !dbg !3211
  %0 = load float*, float** %r.addr, align 8, !dbg !3212
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3212
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !3213
  %1 = load float*, float** %r.addr, align 8, !dbg !3214
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !3214
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !3215
  %2 = load float*, float** %r.addr, align 8, !dbg !3216
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !3216
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !3217
  ret void, !dbg !3218
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_texspace_get(%struct.Curve* %cu, float* %r_loc, float* %r_rot, float* %r_size) #0 !dbg !3219 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %r_loc.addr = alloca float*, align 8
  %r_rot.addr = alloca float*, align 8
  %r_size.addr = alloca float*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !3222, metadata !DIExpression()), !dbg !3223
  store float* %r_loc, float** %r_loc.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_loc.addr, metadata !3224, metadata !DIExpression()), !dbg !3225
  store float* %r_rot, float** %r_rot.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_rot.addr, metadata !3226, metadata !DIExpression()), !dbg !3227
  store float* %r_size, float** %r_size.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_size.addr, metadata !3228, metadata !DIExpression()), !dbg !3229
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !3230
  %bb = getelementptr inbounds %struct.Curve, %struct.Curve* %0, i32 0, i32 2, !dbg !3232
  %1 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !3232
  %cmp = icmp eq %struct.BoundBox* %1, null, !dbg !3233
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3234

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !3235
  %bb1 = getelementptr inbounds %struct.Curve, %struct.Curve* %2, i32 0, i32 2, !dbg !3236
  %3 = load %struct.BoundBox*, %struct.BoundBox** %bb1, align 8, !dbg !3236
  %flag = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %3, i32 0, i32 1, !dbg !3237
  %4 = load i32, i32* %flag, align 4, !dbg !3237
  %and = and i32 %4, 2, !dbg !3238
  %tobool = icmp ne i32 %and, 0, !dbg !3238
  br i1 %tobool, label %if.then, label %if.end, !dbg !3239

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !3240
  call void @BKE_curve_texspace_calc(%struct.Curve* %5), !dbg !3242
  br label %if.end, !dbg !3243

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %6 = load float*, float** %r_loc.addr, align 8, !dbg !3244
  %tobool2 = icmp ne float* %6, null, !dbg !3244
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !3246

if.then3:                                         ; preds = %if.end
  %7 = load float*, float** %r_loc.addr, align 8, !dbg !3247
  %8 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !3248
  %loc = getelementptr inbounds %struct.Curve, %struct.Curve* %8, i32 0, i32 11, !dbg !3249
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !3248
  call void @copy_v3_v3(float* %7, float* %arraydecay), !dbg !3250
  br label %if.end4, !dbg !3250

if.end4:                                          ; preds = %if.then3, %if.end
  %9 = load float*, float** %r_rot.addr, align 8, !dbg !3251
  %tobool5 = icmp ne float* %9, null, !dbg !3251
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !3253

if.then6:                                         ; preds = %if.end4
  %10 = load float*, float** %r_rot.addr, align 8, !dbg !3254
  %11 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !3255
  %rot = getelementptr inbounds %struct.Curve, %struct.Curve* %11, i32 0, i32 13, !dbg !3256
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %rot, i64 0, i64 0, !dbg !3255
  call void @copy_v3_v3(float* %10, float* %arraydecay7), !dbg !3257
  br label %if.end8, !dbg !3257

if.end8:                                          ; preds = %if.then6, %if.end4
  %12 = load float*, float** %r_size.addr, align 8, !dbg !3258
  %tobool9 = icmp ne float* %12, null, !dbg !3258
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !3260

if.then10:                                        ; preds = %if.end8
  %13 = load float*, float** %r_size.addr, align 8, !dbg !3261
  %14 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !3262
  %size = getelementptr inbounds %struct.Curve, %struct.Curve* %14, i32 0, i32 12, !dbg !3263
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !3262
  call void @copy_v3_v3(float* %13, float* %arraydecay11), !dbg !3264
  br label %if.end12, !dbg !3264

if.end12:                                         ; preds = %if.then10, %if.end8
  ret void, !dbg !3265
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_nurbList_index_get_co(%struct.ListBase* %nurb, i32 %index, float* %r_co) #0 !dbg !3266 {
entry:
  %retval = alloca i8, align 1
  %nurb.addr = alloca %struct.ListBase*, align 8
  %index.addr = alloca i32, align 4
  %r_co.addr = alloca float*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %tot = alloca i32, align 4
  %tot_nu = alloca i32, align 4
  store %struct.ListBase* %nurb, %struct.ListBase** %nurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nurb.addr, metadata !3270, metadata !DIExpression()), !dbg !3271
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !3272, metadata !DIExpression()), !dbg !3273
  store float* %r_co, float** %r_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_co.addr, metadata !3274, metadata !DIExpression()), !dbg !3275
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !3276, metadata !DIExpression()), !dbg !3277
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !3278, metadata !DIExpression()), !dbg !3279
  store i32 0, i32* %tot, align 4, !dbg !3279
  %0 = load %struct.ListBase*, %struct.ListBase** %nurb.addr, align 8, !dbg !3280
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !3282
  %1 = load i8*, i8** %first, align 8, !dbg !3282
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !3280
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !3283
  br label %for.cond, !dbg !3284

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3285
  %tobool = icmp ne %struct.Nurb* %3, null, !dbg !3287
  br i1 %tobool, label %for.body, label %for.end, !dbg !3287

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %tot_nu, metadata !3288, metadata !DIExpression()), !dbg !3290
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3291
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 2, !dbg !3293
  %5 = load i16, i16* %type, align 8, !dbg !3293
  %conv = sext i16 %5 to i32, !dbg !3291
  %cmp = icmp eq i32 %conv, 1, !dbg !3294
  br i1 %cmp, label %if.then, label %if.else, !dbg !3295

if.then:                                          ; preds = %for.body
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3296
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 6, !dbg !3298
  %7 = load i32, i32* %pntsu, align 8, !dbg !3298
  store i32 %7, i32* %tot_nu, align 4, !dbg !3299
  %8 = load i32, i32* %index.addr, align 4, !dbg !3300
  %9 = load i32, i32* %tot, align 4, !dbg !3302
  %sub = sub nsw i32 %8, %9, !dbg !3303
  %10 = load i32, i32* %tot_nu, align 4, !dbg !3304
  %cmp2 = icmp slt i32 %sub, %10, !dbg !3305
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !3306

if.then4:                                         ; preds = %if.then
  %11 = load float*, float** %r_co.addr, align 8, !dbg !3307
  %12 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3309
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 18, !dbg !3310
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3310
  %14 = load i32, i32* %index.addr, align 4, !dbg !3311
  %15 = load i32, i32* %tot, align 4, !dbg !3312
  %sub5 = sub nsw i32 %14, %15, !dbg !3313
  %idxprom = sext i32 %sub5 to i64, !dbg !3309
  %arrayidx = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %13, i64 %idxprom, !dbg !3309
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %arrayidx, i32 0, i32 0, !dbg !3314
  %arrayidx6 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 1, !dbg !3309
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx6, i64 0, i64 0, !dbg !3309
  call void @copy_v3_v3(float* %11, float* %arraydecay), !dbg !3315
  store i8 1, i8* %retval, align 1, !dbg !3316
  br label %return, !dbg !3316

if.end:                                           ; preds = %if.then
  br label %if.end18, !dbg !3317

if.else:                                          ; preds = %for.body
  %16 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3318
  %pntsu7 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %16, i32 0, i32 6, !dbg !3320
  %17 = load i32, i32* %pntsu7, align 8, !dbg !3320
  %18 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3321
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %18, i32 0, i32 7, !dbg !3322
  %19 = load i32, i32* %pntsv, align 4, !dbg !3322
  %mul = mul nsw i32 %17, %19, !dbg !3323
  store i32 %mul, i32* %tot_nu, align 4, !dbg !3324
  %20 = load i32, i32* %index.addr, align 4, !dbg !3325
  %21 = load i32, i32* %tot, align 4, !dbg !3327
  %sub8 = sub nsw i32 %20, %21, !dbg !3328
  %22 = load i32, i32* %tot_nu, align 4, !dbg !3329
  %cmp9 = icmp slt i32 %sub8, %22, !dbg !3330
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !3331

if.then11:                                        ; preds = %if.else
  %23 = load float*, float** %r_co.addr, align 8, !dbg !3332
  %24 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3334
  %bp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %24, i32 0, i32 17, !dbg !3335
  %25 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !3335
  %26 = load i32, i32* %index.addr, align 4, !dbg !3336
  %27 = load i32, i32* %tot, align 4, !dbg !3337
  %sub12 = sub nsw i32 %26, %27, !dbg !3338
  %idxprom13 = sext i32 %sub12 to i64, !dbg !3334
  %arrayidx14 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %25, i64 %idxprom13, !dbg !3334
  %vec15 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %arrayidx14, i32 0, i32 0, !dbg !3339
  %arraydecay16 = getelementptr inbounds [4 x float], [4 x float]* %vec15, i64 0, i64 0, !dbg !3334
  call void @copy_v3_v3(float* %23, float* %arraydecay16), !dbg !3340
  store i8 1, i8* %retval, align 1, !dbg !3341
  br label %return, !dbg !3341

if.end17:                                         ; preds = %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.end
  %28 = load i32, i32* %tot_nu, align 4, !dbg !3342
  %29 = load i32, i32* %tot, align 4, !dbg !3343
  %add = add nsw i32 %29, %28, !dbg !3343
  store i32 %add, i32* %tot, align 4, !dbg !3343
  br label %for.inc, !dbg !3344

for.inc:                                          ; preds = %if.end18
  %30 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3345
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %30, i32 0, i32 0, !dbg !3346
  %31 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !3346
  store %struct.Nurb* %31, %struct.Nurb** %nu, align 8, !dbg !3347
  br label %for.cond, !dbg !3348, !llvm.loop !3349

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !3351
  br label %return, !dbg !3351

return:                                           ; preds = %for.end, %if.then11, %if.then4
  %32 = load i8, i8* %retval, align 1, !dbg !3352
  ret i8 %32, !dbg !3352
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_nurbList_verts_count(%struct.ListBase* %nurb) #0 !dbg !3353 {
entry:
  %nurb.addr = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %tot = alloca i32, align 4
  store %struct.ListBase* %nurb, %struct.ListBase** %nurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nurb.addr, metadata !3356, metadata !DIExpression()), !dbg !3357
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !3358, metadata !DIExpression()), !dbg !3359
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !3360, metadata !DIExpression()), !dbg !3361
  store i32 0, i32* %tot, align 4, !dbg !3361
  %0 = load %struct.ListBase*, %struct.ListBase** %nurb.addr, align 8, !dbg !3362
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !3363
  %1 = load i8*, i8** %first, align 8, !dbg !3363
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !3362
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !3364
  br label %while.cond, !dbg !3365

while.cond:                                       ; preds = %if.end7, %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3366
  %tobool = icmp ne %struct.Nurb* %3, null, !dbg !3365
  br i1 %tobool, label %while.body, label %while.end, !dbg !3365

while.body:                                       ; preds = %while.cond
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3367
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 18, !dbg !3370
  %5 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3370
  %tobool1 = icmp ne %struct.BezTriple* %5, null, !dbg !3367
  br i1 %tobool1, label %if.then, label %if.else, !dbg !3371

if.then:                                          ; preds = %while.body
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3372
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 6, !dbg !3373
  %7 = load i32, i32* %pntsu, align 8, !dbg !3373
  %mul = mul nsw i32 3, %7, !dbg !3374
  %8 = load i32, i32* %tot, align 4, !dbg !3375
  %add = add nsw i32 %8, %mul, !dbg !3375
  store i32 %add, i32* %tot, align 4, !dbg !3375
  br label %if.end7, !dbg !3376

if.else:                                          ; preds = %while.body
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3377
  %bp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 17, !dbg !3379
  %10 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !3379
  %tobool2 = icmp ne %struct.BPoint* %10, null, !dbg !3377
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !3380

if.then3:                                         ; preds = %if.else
  %11 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3381
  %pntsu4 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 6, !dbg !3382
  %12 = load i32, i32* %pntsu4, align 8, !dbg !3382
  %13 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3383
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 7, !dbg !3384
  %14 = load i32, i32* %pntsv, align 4, !dbg !3384
  %mul5 = mul nsw i32 %12, %14, !dbg !3385
  %15 = load i32, i32* %tot, align 4, !dbg !3386
  %add6 = add nsw i32 %15, %mul5, !dbg !3386
  store i32 %add6, i32* %tot, align 4, !dbg !3386
  br label %if.end, !dbg !3387

if.end:                                           ; preds = %if.then3, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  %16 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3388
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %16, i32 0, i32 0, !dbg !3389
  %17 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !3389
  store %struct.Nurb* %17, %struct.Nurb** %nu, align 8, !dbg !3390
  br label %while.cond, !dbg !3365, !llvm.loop !3391

while.end:                                        ; preds = %while.cond
  %18 = load i32, i32* %tot, align 4, !dbg !3393
  ret i32 %18, !dbg !3394
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_nurbList_verts_count_without_handles(%struct.ListBase* %nurb) #0 !dbg !3395 {
entry:
  %nurb.addr = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %tot = alloca i32, align 4
  store %struct.ListBase* %nurb, %struct.ListBase** %nurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nurb.addr, metadata !3396, metadata !DIExpression()), !dbg !3397
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !3398, metadata !DIExpression()), !dbg !3399
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !3400, metadata !DIExpression()), !dbg !3401
  store i32 0, i32* %tot, align 4, !dbg !3401
  %0 = load %struct.ListBase*, %struct.ListBase** %nurb.addr, align 8, !dbg !3402
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !3403
  %1 = load i8*, i8** %first, align 8, !dbg !3403
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !3402
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !3404
  br label %while.cond, !dbg !3405

while.cond:                                       ; preds = %if.end6, %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3406
  %tobool = icmp ne %struct.Nurb* %3, null, !dbg !3405
  br i1 %tobool, label %while.body, label %while.end, !dbg !3405

while.body:                                       ; preds = %while.cond
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3407
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 18, !dbg !3410
  %5 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3410
  %tobool1 = icmp ne %struct.BezTriple* %5, null, !dbg !3407
  br i1 %tobool1, label %if.then, label %if.else, !dbg !3411

if.then:                                          ; preds = %while.body
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3412
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 6, !dbg !3413
  %7 = load i32, i32* %pntsu, align 8, !dbg !3413
  %8 = load i32, i32* %tot, align 4, !dbg !3414
  %add = add nsw i32 %8, %7, !dbg !3414
  store i32 %add, i32* %tot, align 4, !dbg !3414
  br label %if.end6, !dbg !3415

if.else:                                          ; preds = %while.body
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3416
  %bp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 17, !dbg !3418
  %10 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !3418
  %tobool2 = icmp ne %struct.BPoint* %10, null, !dbg !3416
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !3419

if.then3:                                         ; preds = %if.else
  %11 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3420
  %pntsu4 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 6, !dbg !3421
  %12 = load i32, i32* %pntsu4, align 8, !dbg !3421
  %13 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3422
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 7, !dbg !3423
  %14 = load i32, i32* %pntsv, align 4, !dbg !3423
  %mul = mul nsw i32 %12, %14, !dbg !3424
  %15 = load i32, i32* %tot, align 4, !dbg !3425
  %add5 = add nsw i32 %15, %mul, !dbg !3425
  store i32 %add5, i32* %tot, align 4, !dbg !3425
  br label %if.end, !dbg !3426

if.end:                                           ; preds = %if.then3, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  %16 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !3427
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %16, i32 0, i32 0, !dbg !3428
  %17 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !3428
  store %struct.Nurb* %17, %struct.Nurb** %nu, align 8, !dbg !3429
  br label %while.cond, !dbg !3405, !llvm.loop !3430

while.end:                                        ; preds = %while.cond
  %18 = load i32, i32* %tot, align 4, !dbg !3432
  ret i32 %18, !dbg !3433
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurb_free(%struct.Nurb* %nu) #0 !dbg !3434 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !3435, metadata !DIExpression()), !dbg !3436
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3437
  %cmp = icmp eq %struct.Nurb* %0, null, !dbg !3439
  br i1 %cmp, label %if.then, label %if.end, !dbg !3440

if.then:                                          ; preds = %entry
  br label %return, !dbg !3441

if.end:                                           ; preds = %entry
  %1 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3442
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %1, i32 0, i32 18, !dbg !3444
  %2 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3444
  %tobool = icmp ne %struct.BezTriple* %2, null, !dbg !3442
  br i1 %tobool, label %if.then1, label %if.end3, !dbg !3445

if.then1:                                         ; preds = %if.end
  %3 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3446
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3447
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 18, !dbg !3448
  %5 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !3448
  %6 = bitcast %struct.BezTriple* %5 to i8*, !dbg !3447
  call void %3(i8* %6), !dbg !3446
  br label %if.end3, !dbg !3446

if.end3:                                          ; preds = %if.then1, %if.end
  %7 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3449
  %bezt4 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %7, i32 0, i32 18, !dbg !3450
  store %struct.BezTriple* null, %struct.BezTriple** %bezt4, align 8, !dbg !3451
  %8 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3452
  %bp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 17, !dbg !3454
  %9 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !3454
  %tobool5 = icmp ne %struct.BPoint* %9, null, !dbg !3452
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !3455

if.then6:                                         ; preds = %if.end3
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3456
  %11 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3457
  %bp7 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 17, !dbg !3458
  %12 = load %struct.BPoint*, %struct.BPoint** %bp7, align 8, !dbg !3458
  %13 = bitcast %struct.BPoint* %12 to i8*, !dbg !3457
  call void %10(i8* %13), !dbg !3456
  br label %if.end8, !dbg !3456

if.end8:                                          ; preds = %if.then6, %if.end3
  %14 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3459
  %bp9 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %14, i32 0, i32 17, !dbg !3460
  store %struct.BPoint* null, %struct.BPoint** %bp9, align 8, !dbg !3461
  %15 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3462
  %knotsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %15, i32 0, i32 15, !dbg !3464
  %16 = load float*, float** %knotsu, align 8, !dbg !3464
  %tobool10 = icmp ne float* %16, null, !dbg !3462
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !3465

if.then11:                                        ; preds = %if.end8
  %17 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3466
  %18 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3467
  %knotsu12 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %18, i32 0, i32 15, !dbg !3468
  %19 = load float*, float** %knotsu12, align 8, !dbg !3468
  %20 = bitcast float* %19 to i8*, !dbg !3467
  call void %17(i8* %20), !dbg !3466
  br label %if.end13, !dbg !3466

if.end13:                                         ; preds = %if.then11, %if.end8
  %21 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3469
  %knotsu14 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 15, !dbg !3470
  store float* null, float** %knotsu14, align 8, !dbg !3471
  %22 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3472
  %knotsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %22, i32 0, i32 16, !dbg !3474
  %23 = load float*, float** %knotsv, align 8, !dbg !3474
  %tobool15 = icmp ne float* %23, null, !dbg !3472
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !3475

if.then16:                                        ; preds = %if.end13
  %24 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3476
  %25 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3477
  %knotsv17 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %25, i32 0, i32 16, !dbg !3478
  %26 = load float*, float** %knotsv17, align 8, !dbg !3478
  %27 = bitcast float* %26 to i8*, !dbg !3477
  call void %24(i8* %27), !dbg !3476
  br label %if.end18, !dbg !3476

if.end18:                                         ; preds = %if.then16, %if.end13
  %28 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3479
  %knotsv19 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %28, i32 0, i32 16, !dbg !3480
  store float* null, float** %knotsv19, align 8, !dbg !3481
  %29 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3482
  %30 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3483
  %31 = bitcast %struct.Nurb* %30 to i8*, !dbg !3483
  call void %29(i8* %31), !dbg !3482
  br label %return, !dbg !3484

return:                                           ; preds = %if.end18, %if.then
  ret void, !dbg !3484
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Nurb* @BKE_nurb_duplicate(%struct.Nurb* %nu) #0 !dbg !3485 {
entry:
  %retval = alloca %struct.Nurb*, align 8
  %nu.addr = alloca %struct.Nurb*, align 8
  %newnu = alloca %struct.Nurb*, align 8
  %len = alloca i32, align 4
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !3488, metadata !DIExpression()), !dbg !3489
  call void @llvm.dbg.declare(metadata %struct.Nurb** %newnu, metadata !3490, metadata !DIExpression()), !dbg !3491
  call void @llvm.dbg.declare(metadata i32* %len, metadata !3492, metadata !DIExpression()), !dbg !3493
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3494
  %call = call i8* %0(i64 88, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0)), !dbg !3494
  %1 = bitcast i8* %call to %struct.Nurb*, !dbg !3495
  store %struct.Nurb* %1, %struct.Nurb** %newnu, align 8, !dbg !3496
  %2 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !3497
  %cmp = icmp eq %struct.Nurb* %2, null, !dbg !3499
  br i1 %cmp, label %if.then, label %if.end, !dbg !3500

if.then:                                          ; preds = %entry
  store %struct.Nurb* null, %struct.Nurb** %retval, align 8, !dbg !3501
  br label %return, !dbg !3501

if.end:                                           ; preds = %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !3502
  %4 = bitcast %struct.Nurb* %3 to i8*, !dbg !3503
  %5 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3504
  %6 = bitcast %struct.Nurb* %5 to i8*, !dbg !3503
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %6, i64 88, i1 false), !dbg !3503
  %7 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3505
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %7, i32 0, i32 18, !dbg !3507
  %8 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3507
  %tobool = icmp ne %struct.BezTriple* %8, null, !dbg !3505
  br i1 %tobool, label %if.then1, label %if.else, !dbg !3508

if.then1:                                         ; preds = %if.end
  %9 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3509
  %10 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3511
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 6, !dbg !3512
  %11 = load i32, i32* %pntsu, align 8, !dbg !3512
  %conv = sext i32 %11 to i64, !dbg !3513
  %mul = mul i64 %conv, 72, !dbg !3514
  %call2 = call i8* %9(i64 %mul, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0)), !dbg !3509
  %12 = bitcast i8* %call2 to %struct.BezTriple*, !dbg !3515
  %13 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !3516
  %bezt3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 18, !dbg !3517
  store %struct.BezTriple* %12, %struct.BezTriple** %bezt3, align 8, !dbg !3518
  %14 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !3519
  %bezt4 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %14, i32 0, i32 18, !dbg !3520
  %15 = load %struct.BezTriple*, %struct.BezTriple** %bezt4, align 8, !dbg !3520
  %16 = bitcast %struct.BezTriple* %15 to i8*, !dbg !3521
  %17 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3522
  %bezt5 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %17, i32 0, i32 18, !dbg !3523
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt5, align 8, !dbg !3523
  %19 = bitcast %struct.BezTriple* %18 to i8*, !dbg !3521
  %20 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3524
  %pntsu6 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %20, i32 0, i32 6, !dbg !3525
  %21 = load i32, i32* %pntsu6, align 8, !dbg !3525
  %conv7 = sext i32 %21 to i64, !dbg !3524
  %mul8 = mul i64 %conv7, 72, !dbg !3526
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %19, i64 %mul8, i1 false), !dbg !3521
  br label %if.end72, !dbg !3527

if.else:                                          ; preds = %if.end
  %22 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3528
  %pntsu9 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %22, i32 0, i32 6, !dbg !3530
  %23 = load i32, i32* %pntsu9, align 8, !dbg !3530
  %24 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3531
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %24, i32 0, i32 7, !dbg !3532
  %25 = load i32, i32* %pntsv, align 4, !dbg !3532
  %mul10 = mul nsw i32 %23, %25, !dbg !3533
  store i32 %mul10, i32* %len, align 4, !dbg !3534
  %26 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3535
  %27 = load i32, i32* %len, align 4, !dbg !3536
  %conv11 = sext i32 %27 to i64, !dbg !3537
  %mul12 = mul i64 %conv11, 36, !dbg !3538
  %call13 = call i8* %26(i64 %mul12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)), !dbg !3535
  %28 = bitcast i8* %call13 to %struct.BPoint*, !dbg !3539
  %29 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !3540
  %bp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %29, i32 0, i32 17, !dbg !3541
  store %struct.BPoint* %28, %struct.BPoint** %bp, align 8, !dbg !3542
  %30 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !3543
  %bp14 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %30, i32 0, i32 17, !dbg !3544
  %31 = load %struct.BPoint*, %struct.BPoint** %bp14, align 8, !dbg !3544
  %32 = bitcast %struct.BPoint* %31 to i8*, !dbg !3545
  %33 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3546
  %bp15 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %33, i32 0, i32 17, !dbg !3547
  %34 = load %struct.BPoint*, %struct.BPoint** %bp15, align 8, !dbg !3547
  %35 = bitcast %struct.BPoint* %34 to i8*, !dbg !3545
  %36 = load i32, i32* %len, align 4, !dbg !3548
  %conv16 = sext i32 %36 to i64, !dbg !3548
  %mul17 = mul i64 %conv16, 36, !dbg !3549
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 %35, i64 %mul17, i1 false), !dbg !3545
  %37 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !3550
  %knotsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %37, i32 0, i32 16, !dbg !3551
  store float* null, float** %knotsv, align 8, !dbg !3552
  %38 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !3553
  %knotsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %38, i32 0, i32 15, !dbg !3554
  store float* null, float** %knotsu, align 8, !dbg !3555
  %39 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3556
  %knotsu18 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %39, i32 0, i32 15, !dbg !3558
  %40 = load float*, float** %knotsu18, align 8, !dbg !3558
  %tobool19 = icmp ne float* %40, null, !dbg !3556
  br i1 %tobool19, label %if.then20, label %if.end39, !dbg !3559

if.then20:                                        ; preds = %if.else
  %41 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3560
  %orderu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %41, i32 0, i32 11, !dbg !3560
  %42 = load i16, i16* %orderu, align 8, !dbg !3560
  %conv21 = sext i16 %42 to i32, !dbg !3560
  %43 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3560
  %pntsu22 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %43, i32 0, i32 6, !dbg !3560
  %44 = load i32, i32* %pntsu22, align 8, !dbg !3560
  %add = add nsw i32 %conv21, %44, !dbg !3560
  %45 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3560
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %45, i32 0, i32 13, !dbg !3560
  %46 = load i16, i16* %flagu, align 4, !dbg !3560
  %conv23 = sext i16 %46 to i32, !dbg !3560
  %and = and i32 %conv23, 1, !dbg !3560
  %tobool24 = icmp ne i32 %and, 0, !dbg !3560
  br i1 %tobool24, label %cond.true, label %cond.false, !dbg !3560

cond.true:                                        ; preds = %if.then20
  %47 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3560
  %orderu25 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %47, i32 0, i32 11, !dbg !3560
  %48 = load i16, i16* %orderu25, align 8, !dbg !3560
  %conv26 = sext i16 %48 to i32, !dbg !3560
  %sub = sub nsw i32 %conv26, 1, !dbg !3560
  br label %cond.end, !dbg !3560

cond.false:                                       ; preds = %if.then20
  br label %cond.end, !dbg !3560

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ 0, %cond.false ], !dbg !3560
  %add27 = add nsw i32 %add, %cond, !dbg !3560
  store i32 %add27, i32* %len, align 4, !dbg !3562
  %49 = load i32, i32* %len, align 4, !dbg !3563
  %tobool28 = icmp ne i32 %49, 0, !dbg !3563
  br i1 %tobool28, label %if.then29, label %if.end38, !dbg !3565

if.then29:                                        ; preds = %cond.end
  %50 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3566
  %51 = load i32, i32* %len, align 4, !dbg !3568
  %conv30 = sext i32 %51 to i64, !dbg !3568
  %mul31 = mul i64 %conv30, 4, !dbg !3569
  %call32 = call i8* %50(i64 %mul31, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)), !dbg !3566
  %52 = bitcast i8* %call32 to float*, !dbg !3566
  %53 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !3570
  %knotsu33 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %53, i32 0, i32 15, !dbg !3571
  store float* %52, float** %knotsu33, align 8, !dbg !3572
  %54 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !3573
  %knotsu34 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %54, i32 0, i32 15, !dbg !3574
  %55 = load float*, float** %knotsu34, align 8, !dbg !3574
  %56 = bitcast float* %55 to i8*, !dbg !3575
  %57 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3576
  %knotsu35 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %57, i32 0, i32 15, !dbg !3577
  %58 = load float*, float** %knotsu35, align 8, !dbg !3577
  %59 = bitcast float* %58 to i8*, !dbg !3575
  %60 = load i32, i32* %len, align 4, !dbg !3578
  %conv36 = sext i32 %60 to i64, !dbg !3578
  %mul37 = mul i64 4, %conv36, !dbg !3579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* align 4 %59, i64 %mul37, i1 false), !dbg !3575
  br label %if.end38, !dbg !3580

if.end38:                                         ; preds = %if.then29, %cond.end
  br label %if.end39, !dbg !3581

if.end39:                                         ; preds = %if.end38, %if.else
  %61 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3582
  %pntsv40 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %61, i32 0, i32 7, !dbg !3584
  %62 = load i32, i32* %pntsv40, align 4, !dbg !3584
  %cmp41 = icmp sgt i32 %62, 1, !dbg !3585
  br i1 %cmp41, label %land.lhs.true, label %if.end71, !dbg !3586

land.lhs.true:                                    ; preds = %if.end39
  %63 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3587
  %knotsv43 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %63, i32 0, i32 16, !dbg !3588
  %64 = load float*, float** %knotsv43, align 8, !dbg !3588
  %tobool44 = icmp ne float* %64, null, !dbg !3587
  br i1 %tobool44, label %if.then45, label %if.end71, !dbg !3589

if.then45:                                        ; preds = %land.lhs.true
  %65 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3590
  %orderv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %65, i32 0, i32 12, !dbg !3590
  %66 = load i16, i16* %orderv, align 2, !dbg !3590
  %conv46 = sext i16 %66 to i32, !dbg !3590
  %67 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3590
  %pntsv47 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %67, i32 0, i32 7, !dbg !3590
  %68 = load i32, i32* %pntsv47, align 4, !dbg !3590
  %add48 = add nsw i32 %conv46, %68, !dbg !3590
  %69 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3590
  %flagv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %69, i32 0, i32 14, !dbg !3590
  %70 = load i16, i16* %flagv, align 2, !dbg !3590
  %conv49 = sext i16 %70 to i32, !dbg !3590
  %and50 = and i32 %conv49, 1, !dbg !3590
  %tobool51 = icmp ne i32 %and50, 0, !dbg !3590
  br i1 %tobool51, label %cond.true52, label %cond.false56, !dbg !3590

cond.true52:                                      ; preds = %if.then45
  %71 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3590
  %orderv53 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %71, i32 0, i32 12, !dbg !3590
  %72 = load i16, i16* %orderv53, align 2, !dbg !3590
  %conv54 = sext i16 %72 to i32, !dbg !3590
  %sub55 = sub nsw i32 %conv54, 1, !dbg !3590
  br label %cond.end57, !dbg !3590

cond.false56:                                     ; preds = %if.then45
  br label %cond.end57, !dbg !3590

cond.end57:                                       ; preds = %cond.false56, %cond.true52
  %cond58 = phi i32 [ %sub55, %cond.true52 ], [ 0, %cond.false56 ], !dbg !3590
  %add59 = add nsw i32 %add48, %cond58, !dbg !3590
  store i32 %add59, i32* %len, align 4, !dbg !3592
  %73 = load i32, i32* %len, align 4, !dbg !3593
  %tobool60 = icmp ne i32 %73, 0, !dbg !3593
  br i1 %tobool60, label %if.then61, label %if.end70, !dbg !3595

if.then61:                                        ; preds = %cond.end57
  %74 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3596
  %75 = load i32, i32* %len, align 4, !dbg !3598
  %conv62 = sext i32 %75 to i64, !dbg !3598
  %mul63 = mul i64 %conv62, 4, !dbg !3599
  %call64 = call i8* %74(i64 %mul63, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)), !dbg !3596
  %76 = bitcast i8* %call64 to float*, !dbg !3596
  %77 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !3600
  %knotsv65 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %77, i32 0, i32 16, !dbg !3601
  store float* %76, float** %knotsv65, align 8, !dbg !3602
  %78 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !3603
  %knotsv66 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %78, i32 0, i32 16, !dbg !3604
  %79 = load float*, float** %knotsv66, align 8, !dbg !3604
  %80 = bitcast float* %79 to i8*, !dbg !3605
  %81 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3606
  %knotsv67 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %81, i32 0, i32 16, !dbg !3607
  %82 = load float*, float** %knotsv67, align 8, !dbg !3607
  %83 = bitcast float* %82 to i8*, !dbg !3605
  %84 = load i32, i32* %len, align 4, !dbg !3608
  %conv68 = sext i32 %84 to i64, !dbg !3608
  %mul69 = mul i64 4, %conv68, !dbg !3609
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 4 %83, i64 %mul69, i1 false), !dbg !3605
  br label %if.end70, !dbg !3610

if.end70:                                         ; preds = %if.then61, %cond.end57
  br label %if.end71, !dbg !3611

if.end71:                                         ; preds = %if.end70, %land.lhs.true, %if.end39
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then1
  %85 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !3612
  store %struct.Nurb* %85, %struct.Nurb** %retval, align 8, !dbg !3613
  br label %return, !dbg !3613

return:                                           ; preds = %if.end72, %if.then
  %86 = load %struct.Nurb*, %struct.Nurb** %retval, align 8, !dbg !3614
  ret %struct.Nurb* %86, !dbg !3614
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Nurb* @BKE_nurb_copy(%struct.Nurb* %src, i32 %pntsu, i32 %pntsv) #0 !dbg !3615 {
entry:
  %src.addr = alloca %struct.Nurb*, align 8
  %pntsu.addr = alloca i32, align 4
  %pntsv.addr = alloca i32, align 4
  %newnu = alloca %struct.Nurb*, align 8
  %sw_ap = alloca i32, align 4
  store %struct.Nurb* %src, %struct.Nurb** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %src.addr, metadata !3618, metadata !DIExpression()), !dbg !3619
  store i32 %pntsu, i32* %pntsu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pntsu.addr, metadata !3620, metadata !DIExpression()), !dbg !3621
  store i32 %pntsv, i32* %pntsv.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pntsv.addr, metadata !3622, metadata !DIExpression()), !dbg !3623
  call void @llvm.dbg.declare(metadata %struct.Nurb** %newnu, metadata !3624, metadata !DIExpression()), !dbg !3625
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3626
  %call = call i8* %0(i64 88, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)), !dbg !3626
  %1 = bitcast i8* %call to %struct.Nurb*, !dbg !3627
  store %struct.Nurb* %1, %struct.Nurb** %newnu, align 8, !dbg !3625
  %2 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !3628
  %3 = bitcast %struct.Nurb* %2 to i8*, !dbg !3629
  %4 = load %struct.Nurb*, %struct.Nurb** %src.addr, align 8, !dbg !3630
  %5 = bitcast %struct.Nurb* %4 to i8*, !dbg !3629
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %5, i64 88, i1 false), !dbg !3629
  %6 = load i32, i32* %pntsu.addr, align 4, !dbg !3631
  %cmp = icmp eq i32 %6, 1, !dbg !3633
  br i1 %cmp, label %if.then, label %if.end, !dbg !3634

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %sw_ap, metadata !3635, metadata !DIExpression()), !dbg !3637
  %7 = load i32, i32* %pntsu.addr, align 4, !dbg !3637
  store i32 %7, i32* %sw_ap, align 4, !dbg !3637
  %8 = load i32, i32* %pntsv.addr, align 4, !dbg !3637
  store i32 %8, i32* %pntsu.addr, align 4, !dbg !3637
  %9 = load i32, i32* %sw_ap, align 4, !dbg !3637
  store i32 %9, i32* %pntsv.addr, align 4, !dbg !3637
  br label %if.end, !dbg !3637

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32, i32* %pntsu.addr, align 4, !dbg !3638
  %11 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !3639
  %pntsu1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 6, !dbg !3640
  store i32 %10, i32* %pntsu1, align 8, !dbg !3641
  %12 = load i32, i32* %pntsv.addr, align 4, !dbg !3642
  %13 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !3643
  %pntsv2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 7, !dbg !3644
  store i32 %12, i32* %pntsv2, align 4, !dbg !3645
  %14 = load %struct.Nurb*, %struct.Nurb** %src.addr, align 8, !dbg !3646
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %14, i32 0, i32 18, !dbg !3648
  %15 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3648
  %tobool = icmp ne %struct.BezTriple* %15, null, !dbg !3646
  br i1 %tobool, label %if.then3, label %if.else, !dbg !3649

if.then3:                                         ; preds = %if.end
  %16 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3650
  %17 = load i32, i32* %pntsu.addr, align 4, !dbg !3652
  %18 = load i32, i32* %pntsv.addr, align 4, !dbg !3653
  %mul = mul nsw i32 %17, %18, !dbg !3654
  %conv = sext i32 %mul to i64, !dbg !3652
  %mul4 = mul i64 %conv, 72, !dbg !3655
  %call5 = call i8* %16(i64 %mul4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)), !dbg !3650
  %19 = bitcast i8* %call5 to %struct.BezTriple*, !dbg !3656
  %20 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !3657
  %bezt6 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %20, i32 0, i32 18, !dbg !3658
  store %struct.BezTriple* %19, %struct.BezTriple** %bezt6, align 8, !dbg !3659
  br label %if.end11, !dbg !3660

if.else:                                          ; preds = %if.end
  %21 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !3661
  %22 = load i32, i32* %pntsu.addr, align 4, !dbg !3663
  %23 = load i32, i32* %pntsv.addr, align 4, !dbg !3664
  %mul7 = mul nsw i32 %22, %23, !dbg !3665
  %conv8 = sext i32 %mul7 to i64, !dbg !3663
  %mul9 = mul i64 %conv8, 36, !dbg !3666
  %call10 = call i8* %21(i64 %mul9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0)), !dbg !3661
  %24 = bitcast i8* %call10 to %struct.BPoint*, !dbg !3667
  %25 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !3668
  %bp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %25, i32 0, i32 17, !dbg !3669
  store %struct.BPoint* %24, %struct.BPoint** %bp, align 8, !dbg !3670
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then3
  %26 = load %struct.Nurb*, %struct.Nurb** %newnu, align 8, !dbg !3671
  ret %struct.Nurb* %26, !dbg !3672
}

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurb_minmax(%struct.Nurb* %nu, i8 zeroext %use_radius, float* %min, float* %max) #0 !dbg !3673 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %use_radius.addr = alloca i8, align 1
  %min.addr = alloca float*, align 8
  %max.addr = alloca float*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  %point = alloca [3 x float], align 4
  %radius_vector = alloca [3 x float], align 4
  %radius_vector39 = alloca [3 x float], align 4
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !3676, metadata !DIExpression()), !dbg !3677
  store i8 %use_radius, i8* %use_radius.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_radius.addr, metadata !3678, metadata !DIExpression()), !dbg !3679
  store float* %min, float** %min.addr, align 8
  call void @llvm.dbg.declare(metadata float** %min.addr, metadata !3680, metadata !DIExpression()), !dbg !3681
  store float* %max, float** %max.addr, align 8
  call void @llvm.dbg.declare(metadata float** %max.addr, metadata !3682, metadata !DIExpression()), !dbg !3683
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !3684, metadata !DIExpression()), !dbg !3685
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !3686, metadata !DIExpression()), !dbg !3687
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3688, metadata !DIExpression()), !dbg !3689
  call void @llvm.dbg.declare(metadata [3 x float]* %point, metadata !3690, metadata !DIExpression()), !dbg !3691
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3692
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %0, i32 0, i32 2, !dbg !3694
  %1 = load i16, i16* %type, align 8, !dbg !3694
  %conv = sext i16 %1 to i32, !dbg !3692
  %cmp = icmp eq i32 %conv, 1, !dbg !3695
  br i1 %cmp, label %if.then, label %if.else26, !dbg !3696

if.then:                                          ; preds = %entry
  %2 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3697
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %2, i32 0, i32 6, !dbg !3699
  %3 = load i32, i32* %pntsu, align 8, !dbg !3699
  store i32 %3, i32* %a, align 4, !dbg !3700
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3701
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 18, !dbg !3702
  %5 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !3702
  store %struct.BezTriple* %5, %struct.BezTriple** %bezt, align 8, !dbg !3703
  br label %while.cond, !dbg !3704

while.cond:                                       ; preds = %if.end, %if.then
  %6 = load i32, i32* %a, align 4, !dbg !3705
  %dec = add nsw i32 %6, -1, !dbg !3705
  store i32 %dec, i32* %a, align 4, !dbg !3705
  %tobool = icmp ne i32 %6, 0, !dbg !3704
  br i1 %tobool, label %while.body, label %while.end, !dbg !3704

while.body:                                       ; preds = %while.cond
  %7 = load i8, i8* %use_radius.addr, align 1, !dbg !3706
  %tobool3 = icmp ne i8 %7, 0, !dbg !3706
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !3709

if.then4:                                         ; preds = %while.body
  call void @llvm.dbg.declare(metadata [3 x float]* %radius_vector, metadata !3710, metadata !DIExpression()), !dbg !3712
  %8 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3713
  %radius = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %8, i32 0, i32 3, !dbg !3714
  %9 = load float, float* %radius, align 4, !dbg !3714
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %radius_vector, i64 0, i64 2, !dbg !3715
  store float %9, float* %arrayidx, align 4, !dbg !3716
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %radius_vector, i64 0, i64 1, !dbg !3717
  store float %9, float* %arrayidx5, align 4, !dbg !3718
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %radius_vector, i64 0, i64 0, !dbg !3719
  store float %9, float* %arrayidx6, align 4, !dbg !3720
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %point, i64 0, i64 0, !dbg !3721
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3722
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %10, i32 0, i32 0, !dbg !3723
  %arrayidx7 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 1, !dbg !3722
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx7, i64 0, i64 0, !dbg !3722
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %radius_vector, i64 0, i64 0, !dbg !3724
  call void @add_v3_v3v3(float* %arraydecay, float* %arraydecay8, float* %arraydecay9), !dbg !3725
  %11 = load float*, float** %min.addr, align 8, !dbg !3726
  %12 = load float*, float** %max.addr, align 8, !dbg !3727
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %point, i64 0, i64 0, !dbg !3728
  call void @minmax_v3v3_v3(float* %11, float* %12, float* %arraydecay10), !dbg !3729
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %point, i64 0, i64 0, !dbg !3730
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3731
  %vec12 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %13, i32 0, i32 0, !dbg !3732
  %arrayidx13 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec12, i64 0, i64 1, !dbg !3731
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx13, i64 0, i64 0, !dbg !3731
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %radius_vector, i64 0, i64 0, !dbg !3733
  call void @sub_v3_v3v3(float* %arraydecay11, float* %arraydecay14, float* %arraydecay15), !dbg !3734
  %14 = load float*, float** %min.addr, align 8, !dbg !3735
  %15 = load float*, float** %max.addr, align 8, !dbg !3736
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %point, i64 0, i64 0, !dbg !3737
  call void @minmax_v3v3_v3(float* %14, float* %15, float* %arraydecay16), !dbg !3738
  br label %if.end, !dbg !3739

if.else:                                          ; preds = %while.body
  %16 = load float*, float** %min.addr, align 8, !dbg !3740
  %17 = load float*, float** %max.addr, align 8, !dbg !3742
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3743
  %vec17 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %18, i32 0, i32 0, !dbg !3744
  %arrayidx18 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec17, i64 0, i64 1, !dbg !3743
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx18, i64 0, i64 0, !dbg !3743
  call void @minmax_v3v3_v3(float* %16, float* %17, float* %arraydecay19), !dbg !3745
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  %19 = load float*, float** %min.addr, align 8, !dbg !3746
  %20 = load float*, float** %max.addr, align 8, !dbg !3747
  %21 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3748
  %vec20 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %21, i32 0, i32 0, !dbg !3749
  %arrayidx21 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec20, i64 0, i64 0, !dbg !3748
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx21, i64 0, i64 0, !dbg !3748
  call void @minmax_v3v3_v3(float* %19, float* %20, float* %arraydecay22), !dbg !3750
  %22 = load float*, float** %min.addr, align 8, !dbg !3751
  %23 = load float*, float** %max.addr, align 8, !dbg !3752
  %24 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3753
  %vec23 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %24, i32 0, i32 0, !dbg !3754
  %arrayidx24 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec23, i64 0, i64 2, !dbg !3753
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx24, i64 0, i64 0, !dbg !3753
  call void @minmax_v3v3_v3(float* %22, float* %23, float* %arraydecay25), !dbg !3755
  %25 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3756
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %25, i32 1, !dbg !3756
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !3756
  br label %while.cond, !dbg !3704, !llvm.loop !3757

while.end:                                        ; preds = %while.cond
  br label %if.end60, !dbg !3759

if.else26:                                        ; preds = %entry
  %26 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3760
  %pntsu27 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %26, i32 0, i32 6, !dbg !3762
  %27 = load i32, i32* %pntsu27, align 8, !dbg !3762
  %28 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3763
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %28, i32 0, i32 7, !dbg !3764
  %29 = load i32, i32* %pntsv, align 4, !dbg !3764
  %mul = mul nsw i32 %27, %29, !dbg !3765
  store i32 %mul, i32* %a, align 4, !dbg !3766
  %30 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3767
  %bp28 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %30, i32 0, i32 17, !dbg !3768
  %31 = load %struct.BPoint*, %struct.BPoint** %bp28, align 8, !dbg !3768
  store %struct.BPoint* %31, %struct.BPoint** %bp, align 8, !dbg !3769
  br label %while.cond29, !dbg !3770

while.cond29:                                     ; preds = %if.end57, %if.else26
  %32 = load i32, i32* %a, align 4, !dbg !3771
  %dec30 = add nsw i32 %32, -1, !dbg !3771
  store i32 %dec30, i32* %a, align 4, !dbg !3771
  %tobool31 = icmp ne i32 %32, 0, !dbg !3770
  br i1 %tobool31, label %while.body32, label %while.end59, !dbg !3770

while.body32:                                     ; preds = %while.cond29
  %33 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3772
  %pntsv33 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %33, i32 0, i32 7, !dbg !3775
  %34 = load i32, i32* %pntsv33, align 4, !dbg !3775
  %cmp34 = icmp eq i32 %34, 1, !dbg !3776
  br i1 %cmp34, label %land.lhs.true, label %if.else54, !dbg !3777

land.lhs.true:                                    ; preds = %while.body32
  %35 = load i8, i8* %use_radius.addr, align 1, !dbg !3778
  %conv36 = zext i8 %35 to i32, !dbg !3778
  %tobool37 = icmp ne i32 %conv36, 0, !dbg !3778
  br i1 %tobool37, label %if.then38, label %if.else54, !dbg !3779

if.then38:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [3 x float]* %radius_vector39, metadata !3780, metadata !DIExpression()), !dbg !3782
  %36 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !3783
  %radius40 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %36, i32 0, i32 5, !dbg !3784
  %37 = load float, float* %radius40, align 4, !dbg !3784
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %radius_vector39, i64 0, i64 2, !dbg !3785
  store float %37, float* %arrayidx41, align 4, !dbg !3786
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %radius_vector39, i64 0, i64 1, !dbg !3787
  store float %37, float* %arrayidx42, align 4, !dbg !3788
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %radius_vector39, i64 0, i64 0, !dbg !3789
  store float %37, float* %arrayidx43, align 4, !dbg !3790
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %point, i64 0, i64 0, !dbg !3791
  %38 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !3792
  %vec45 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %38, i32 0, i32 0, !dbg !3793
  %arraydecay46 = getelementptr inbounds [4 x float], [4 x float]* %vec45, i64 0, i64 0, !dbg !3792
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %radius_vector39, i64 0, i64 0, !dbg !3794
  call void @add_v3_v3v3(float* %arraydecay44, float* %arraydecay46, float* %arraydecay47), !dbg !3795
  %39 = load float*, float** %min.addr, align 8, !dbg !3796
  %40 = load float*, float** %max.addr, align 8, !dbg !3797
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %point, i64 0, i64 0, !dbg !3798
  call void @minmax_v3v3_v3(float* %39, float* %40, float* %arraydecay48), !dbg !3799
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %point, i64 0, i64 0, !dbg !3800
  %41 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !3801
  %vec50 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %41, i32 0, i32 0, !dbg !3802
  %arraydecay51 = getelementptr inbounds [4 x float], [4 x float]* %vec50, i64 0, i64 0, !dbg !3801
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %radius_vector39, i64 0, i64 0, !dbg !3803
  call void @sub_v3_v3v3(float* %arraydecay49, float* %arraydecay51, float* %arraydecay52), !dbg !3804
  %42 = load float*, float** %min.addr, align 8, !dbg !3805
  %43 = load float*, float** %max.addr, align 8, !dbg !3806
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %point, i64 0, i64 0, !dbg !3807
  call void @minmax_v3v3_v3(float* %42, float* %43, float* %arraydecay53), !dbg !3808
  br label %if.end57, !dbg !3809

if.else54:                                        ; preds = %land.lhs.true, %while.body32
  %44 = load float*, float** %min.addr, align 8, !dbg !3810
  %45 = load float*, float** %max.addr, align 8, !dbg !3812
  %46 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !3813
  %vec55 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %46, i32 0, i32 0, !dbg !3814
  %arraydecay56 = getelementptr inbounds [4 x float], [4 x float]* %vec55, i64 0, i64 0, !dbg !3813
  call void @minmax_v3v3_v3(float* %44, float* %45, float* %arraydecay56), !dbg !3815
  br label %if.end57

if.end57:                                         ; preds = %if.else54, %if.then38
  %47 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !3816
  %incdec.ptr58 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %47, i32 1, !dbg !3816
  store %struct.BPoint* %incdec.ptr58, %struct.BPoint** %bp, align 8, !dbg !3816
  br label %while.cond29, !dbg !3770, !llvm.loop !3817

while.end59:                                      ; preds = %while.cond29
  br label %if.end60

if.end60:                                         ; preds = %while.end59, %while.end
  ret void, !dbg !3819
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !3820 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3823, metadata !DIExpression()), !dbg !3824
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3825, metadata !DIExpression()), !dbg !3826
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !3827, metadata !DIExpression()), !dbg !3828
  %0 = load float*, float** %a.addr, align 8, !dbg !3829
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3829
  %1 = load float, float* %arrayidx, align 4, !dbg !3829
  %2 = load float*, float** %b.addr, align 8, !dbg !3830
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3830
  %3 = load float, float* %arrayidx1, align 4, !dbg !3830
  %add = fadd float %1, %3, !dbg !3831
  %4 = load float*, float** %r.addr, align 8, !dbg !3832
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !3832
  store float %add, float* %arrayidx2, align 4, !dbg !3833
  %5 = load float*, float** %a.addr, align 8, !dbg !3834
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !3834
  %6 = load float, float* %arrayidx3, align 4, !dbg !3834
  %7 = load float*, float** %b.addr, align 8, !dbg !3835
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !3835
  %8 = load float, float* %arrayidx4, align 4, !dbg !3835
  %add5 = fadd float %6, %8, !dbg !3836
  %9 = load float*, float** %r.addr, align 8, !dbg !3837
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !3837
  store float %add5, float* %arrayidx6, align 4, !dbg !3838
  %10 = load float*, float** %a.addr, align 8, !dbg !3839
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !3839
  %11 = load float, float* %arrayidx7, align 4, !dbg !3839
  %12 = load float*, float** %b.addr, align 8, !dbg !3840
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !3840
  %13 = load float, float* %arrayidx8, align 4, !dbg !3840
  %add9 = fadd float %11, %13, !dbg !3841
  %14 = load float*, float** %r.addr, align 8, !dbg !3842
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !3842
  store float %add9, float* %arrayidx10, align 4, !dbg !3843
  ret void, !dbg !3844
}

declare dso_local void @minmax_v3v3_v3(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !3845 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3846, metadata !DIExpression()), !dbg !3847
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3848, metadata !DIExpression()), !dbg !3849
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !3850, metadata !DIExpression()), !dbg !3851
  %0 = load float*, float** %a.addr, align 8, !dbg !3852
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3852
  %1 = load float, float* %arrayidx, align 4, !dbg !3852
  %2 = load float*, float** %b.addr, align 8, !dbg !3853
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3853
  %3 = load float, float* %arrayidx1, align 4, !dbg !3853
  %sub = fsub float %1, %3, !dbg !3854
  %4 = load float*, float** %r.addr, align 8, !dbg !3855
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !3855
  store float %sub, float* %arrayidx2, align 4, !dbg !3856
  %5 = load float*, float** %a.addr, align 8, !dbg !3857
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !3857
  %6 = load float, float* %arrayidx3, align 4, !dbg !3857
  %7 = load float*, float** %b.addr, align 8, !dbg !3858
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !3858
  %8 = load float, float* %arrayidx4, align 4, !dbg !3858
  %sub5 = fsub float %6, %8, !dbg !3859
  %9 = load float*, float** %r.addr, align 8, !dbg !3860
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !3860
  store float %sub5, float* %arrayidx6, align 4, !dbg !3861
  %10 = load float*, float** %a.addr, align 8, !dbg !3862
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !3862
  %11 = load float, float* %arrayidx7, align 4, !dbg !3862
  %12 = load float*, float** %b.addr, align 8, !dbg !3863
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !3863
  %13 = load float, float* %arrayidx8, align 4, !dbg !3863
  %sub9 = fsub float %11, %13, !dbg !3864
  %14 = load float*, float** %r.addr, align 8, !dbg !3865
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !3865
  store float %sub9, float* %arrayidx10, align 4, !dbg !3866
  ret void, !dbg !3867
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurb_points_add(%struct.Nurb* %nu, i32 %number) #0 !dbg !3868 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %number.addr = alloca i32, align 4
  %bp = alloca %struct.BPoint*, align 8
  %i = alloca i32, align 4
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !3871, metadata !DIExpression()), !dbg !3872
  store i32 %number, i32* %number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %number.addr, metadata !3873, metadata !DIExpression()), !dbg !3874
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !3875, metadata !DIExpression()), !dbg !3876
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3877, metadata !DIExpression()), !dbg !3878
  %0 = load i8* (i8*, i64, i8*)*, i8* (i8*, i64, i8*)** @MEM_recallocN_id, align 8, !dbg !3879
  %1 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3879
  %bp1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %1, i32 0, i32 17, !dbg !3879
  %2 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !3879
  %3 = bitcast %struct.BPoint* %2 to i8*, !dbg !3879
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3879
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 6, !dbg !3879
  %5 = load i32, i32* %pntsu, align 8, !dbg !3879
  %6 = load i32, i32* %number.addr, align 4, !dbg !3879
  %add = add nsw i32 %5, %6, !dbg !3879
  %conv = sext i32 %add to i64, !dbg !3879
  %mul = mul i64 %conv, 36, !dbg !3879
  %call = call i8* %0(i8* %3, i64 %mul, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.BKE_nurb_points_add, i64 0, i64 0)), !dbg !3879
  %7 = bitcast i8* %call to %struct.BPoint*, !dbg !3879
  %8 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3880
  %bp2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 17, !dbg !3881
  store %struct.BPoint* %7, %struct.BPoint** %bp2, align 8, !dbg !3882
  store i32 0, i32* %i, align 4, !dbg !3883
  %9 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3885
  %bp3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 17, !dbg !3886
  %10 = load %struct.BPoint*, %struct.BPoint** %bp3, align 8, !dbg !3886
  %11 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3887
  %pntsu4 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 6, !dbg !3888
  %12 = load i32, i32* %pntsu4, align 8, !dbg !3888
  %idxprom = sext i32 %12 to i64, !dbg !3885
  %arrayidx = getelementptr inbounds %struct.BPoint, %struct.BPoint* %10, i64 %idxprom, !dbg !3885
  store %struct.BPoint* %arrayidx, %struct.BPoint** %bp, align 8, !dbg !3889
  br label %for.cond, !dbg !3890

for.cond:                                         ; preds = %for.inc, %entry
  %13 = load i32, i32* %i, align 4, !dbg !3891
  %14 = load i32, i32* %number.addr, align 4, !dbg !3893
  %cmp = icmp slt i32 %13, %14, !dbg !3894
  br i1 %cmp, label %for.body, label %for.end, !dbg !3895

for.body:                                         ; preds = %for.cond
  %15 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !3896
  %radius = getelementptr inbounds %struct.BPoint, %struct.BPoint* %15, i32 0, i32 5, !dbg !3898
  store float 1.000000e+00, float* %radius, align 4, !dbg !3899
  br label %for.inc, !dbg !3900

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !3901
  %inc = add nsw i32 %16, 1, !dbg !3901
  store i32 %inc, i32* %i, align 4, !dbg !3901
  %17 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !3902
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %17, i32 1, !dbg !3902
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp, align 8, !dbg !3902
  br label %for.cond, !dbg !3903, !llvm.loop !3904

for.end:                                          ; preds = %for.cond
  %18 = load i32, i32* %number.addr, align 4, !dbg !3906
  %19 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3907
  %pntsu6 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %19, i32 0, i32 6, !dbg !3908
  %20 = load i32, i32* %pntsu6, align 8, !dbg !3909
  %add7 = add nsw i32 %20, %18, !dbg !3909
  store i32 %add7, i32* %pntsu6, align 8, !dbg !3909
  ret void, !dbg !3910
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurb_bezierPoints_add(%struct.Nurb* %nu, i32 %number) #0 !dbg !3911 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %number.addr = alloca i32, align 4
  %bezt = alloca %struct.BezTriple*, align 8
  %i = alloca i32, align 4
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !3912, metadata !DIExpression()), !dbg !3913
  store i32 %number, i32* %number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %number.addr, metadata !3914, metadata !DIExpression()), !dbg !3915
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !3916, metadata !DIExpression()), !dbg !3917
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3918, metadata !DIExpression()), !dbg !3919
  %0 = load i8* (i8*, i64, i8*)*, i8* (i8*, i64, i8*)** @MEM_recallocN_id, align 8, !dbg !3920
  %1 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3920
  %bezt1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %1, i32 0, i32 18, !dbg !3920
  %2 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !3920
  %3 = bitcast %struct.BezTriple* %2 to i8*, !dbg !3920
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3920
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 6, !dbg !3920
  %5 = load i32, i32* %pntsu, align 8, !dbg !3920
  %6 = load i32, i32* %number.addr, align 4, !dbg !3920
  %add = add nsw i32 %5, %6, !dbg !3920
  %conv = sext i32 %add to i64, !dbg !3920
  %mul = mul i64 %conv, 72, !dbg !3920
  %call = call i8* %0(i8* %3, i64 %mul, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.BKE_nurb_bezierPoints_add, i64 0, i64 0)), !dbg !3920
  %7 = bitcast i8* %call to %struct.BezTriple*, !dbg !3920
  %8 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3921
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 18, !dbg !3922
  store %struct.BezTriple* %7, %struct.BezTriple** %bezt2, align 8, !dbg !3923
  store i32 0, i32* %i, align 4, !dbg !3924
  %9 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3926
  %bezt3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 18, !dbg !3927
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt3, align 8, !dbg !3927
  %11 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3928
  %pntsu4 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 6, !dbg !3929
  %12 = load i32, i32* %pntsu4, align 8, !dbg !3929
  %idxprom = sext i32 %12 to i64, !dbg !3926
  %arrayidx = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %10, i64 %idxprom, !dbg !3926
  store %struct.BezTriple* %arrayidx, %struct.BezTriple** %bezt, align 8, !dbg !3930
  br label %for.cond, !dbg !3931

for.cond:                                         ; preds = %for.inc, %entry
  %13 = load i32, i32* %i, align 4, !dbg !3932
  %14 = load i32, i32* %number.addr, align 4, !dbg !3934
  %cmp = icmp slt i32 %13, %14, !dbg !3935
  br i1 %cmp, label %for.body, label %for.end, !dbg !3936

for.body:                                         ; preds = %for.cond
  %15 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3937
  %radius = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %15, i32 0, i32 3, !dbg !3939
  store float 1.000000e+00, float* %radius, align 4, !dbg !3940
  br label %for.inc, !dbg !3941

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !3942
  %inc = add nsw i32 %16, 1, !dbg !3942
  store i32 %inc, i32* %i, align 4, !dbg !3942
  %17 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3943
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %17, i32 1, !dbg !3943
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !3943
  br label %for.cond, !dbg !3944, !llvm.loop !3945

for.end:                                          ; preds = %for.cond
  %18 = load i32, i32* %number.addr, align 4, !dbg !3947
  %19 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3948
  %pntsu6 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %19, i32 0, i32 6, !dbg !3949
  %20 = load i32, i32* %pntsu6, align 8, !dbg !3950
  %add7 = add nsw i32 %20, %18, !dbg !3950
  store i32 %add7, i32* %pntsu6, align 8, !dbg !3950
  ret void, !dbg !3951
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.BezTriple* @BKE_nurb_bezt_get_next(%struct.Nurb* %nu, %struct.BezTriple* %bezt) #0 !dbg !3952 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %bezt.addr = alloca %struct.BezTriple*, align 8
  %bezt_next = alloca %struct.BezTriple*, align 8
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !3956, metadata !DIExpression()), !dbg !3957
  store %struct.BezTriple* %bezt, %struct.BezTriple** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt.addr, metadata !3958, metadata !DIExpression()), !dbg !3959
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt_next, metadata !3960, metadata !DIExpression()), !dbg !3961
  %0 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !3962
  %1 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3964
  %bezt1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %1, i32 0, i32 18, !dbg !3965
  %2 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !3965
  %3 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3966
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %3, i32 0, i32 6, !dbg !3967
  %4 = load i32, i32* %pntsu, align 8, !dbg !3967
  %sub = sub nsw i32 %4, 1, !dbg !3968
  %idxprom = sext i32 %sub to i64, !dbg !3964
  %arrayidx = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %2, i64 %idxprom, !dbg !3964
  %cmp = icmp eq %struct.BezTriple* %0, %arrayidx, !dbg !3969
  br i1 %cmp, label %if.then, label %if.else4, !dbg !3970

if.then:                                          ; preds = %entry
  %5 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3971
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %5, i32 0, i32 13, !dbg !3974
  %6 = load i16, i16* %flagu, align 4, !dbg !3974
  %conv = sext i16 %6 to i32, !dbg !3971
  %and = and i32 %conv, 1, !dbg !3975
  %tobool = icmp ne i32 %and, 0, !dbg !3975
  br i1 %tobool, label %if.then2, label %if.else, !dbg !3976

if.then2:                                         ; preds = %if.then
  %7 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !3977
  %bezt3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %7, i32 0, i32 18, !dbg !3979
  %8 = load %struct.BezTriple*, %struct.BezTriple** %bezt3, align 8, !dbg !3979
  store %struct.BezTriple* %8, %struct.BezTriple** %bezt_next, align 8, !dbg !3980
  br label %if.end, !dbg !3981

if.else:                                          ; preds = %if.then
  store %struct.BezTriple* null, %struct.BezTriple** %bezt_next, align 8, !dbg !3982
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end5, !dbg !3984

if.else4:                                         ; preds = %entry
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !3985
  %add.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %9, i64 1, !dbg !3987
  store %struct.BezTriple* %add.ptr, %struct.BezTriple** %bezt_next, align 8, !dbg !3988
  br label %if.end5

if.end5:                                          ; preds = %if.else4, %if.end
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt_next, align 8, !dbg !3989
  ret %struct.BezTriple* %10, !dbg !3990
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.BPoint* @BKE_nurb_bpoint_get_next(%struct.Nurb* %nu, %struct.BPoint* %bp) #0 !dbg !3991 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %bp.addr = alloca %struct.BPoint*, align 8
  %bp_next = alloca %struct.BPoint*, align 8
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !3995, metadata !DIExpression()), !dbg !3996
  store %struct.BPoint* %bp, %struct.BPoint** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp.addr, metadata !3997, metadata !DIExpression()), !dbg !3998
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp_next, metadata !3999, metadata !DIExpression()), !dbg !4000
  %0 = load %struct.BPoint*, %struct.BPoint** %bp.addr, align 8, !dbg !4001
  %1 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4003
  %bp1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %1, i32 0, i32 17, !dbg !4004
  %2 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !4004
  %3 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4005
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %3, i32 0, i32 6, !dbg !4006
  %4 = load i32, i32* %pntsu, align 8, !dbg !4006
  %sub = sub nsw i32 %4, 1, !dbg !4007
  %idxprom = sext i32 %sub to i64, !dbg !4003
  %arrayidx = getelementptr inbounds %struct.BPoint, %struct.BPoint* %2, i64 %idxprom, !dbg !4003
  %cmp = icmp eq %struct.BPoint* %0, %arrayidx, !dbg !4008
  br i1 %cmp, label %if.then, label %if.else4, !dbg !4009

if.then:                                          ; preds = %entry
  %5 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4010
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %5, i32 0, i32 13, !dbg !4013
  %6 = load i16, i16* %flagu, align 4, !dbg !4013
  %conv = sext i16 %6 to i32, !dbg !4010
  %and = and i32 %conv, 1, !dbg !4014
  %tobool = icmp ne i32 %and, 0, !dbg !4014
  br i1 %tobool, label %if.then2, label %if.else, !dbg !4015

if.then2:                                         ; preds = %if.then
  %7 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4016
  %bp3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %7, i32 0, i32 17, !dbg !4018
  %8 = load %struct.BPoint*, %struct.BPoint** %bp3, align 8, !dbg !4018
  store %struct.BPoint* %8, %struct.BPoint** %bp_next, align 8, !dbg !4019
  br label %if.end, !dbg !4020

if.else:                                          ; preds = %if.then
  store %struct.BPoint* null, %struct.BPoint** %bp_next, align 8, !dbg !4021
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end5, !dbg !4023

if.else4:                                         ; preds = %entry
  %9 = load %struct.BPoint*, %struct.BPoint** %bp.addr, align 8, !dbg !4024
  %add.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %9, i64 1, !dbg !4026
  store %struct.BPoint* %add.ptr, %struct.BPoint** %bp_next, align 8, !dbg !4027
  br label %if.end5

if.end5:                                          ; preds = %if.else4, %if.end
  %10 = load %struct.BPoint*, %struct.BPoint** %bp_next, align 8, !dbg !4028
  ret %struct.BPoint* %10, !dbg !4029
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.BezTriple* @BKE_nurb_bezt_get_prev(%struct.Nurb* %nu, %struct.BezTriple* %bezt) #0 !dbg !4030 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %bezt.addr = alloca %struct.BezTriple*, align 8
  %bezt_prev = alloca %struct.BezTriple*, align 8
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !4031, metadata !DIExpression()), !dbg !4032
  store %struct.BezTriple* %bezt, %struct.BezTriple** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt.addr, metadata !4033, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt_prev, metadata !4035, metadata !DIExpression()), !dbg !4036
  %0 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !4037
  %1 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4039
  %bezt1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %1, i32 0, i32 18, !dbg !4040
  %2 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !4040
  %cmp = icmp eq %struct.BezTriple* %0, %2, !dbg !4041
  br i1 %cmp, label %if.then, label %if.else4, !dbg !4042

if.then:                                          ; preds = %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4043
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %3, i32 0, i32 13, !dbg !4046
  %4 = load i16, i16* %flagu, align 4, !dbg !4046
  %conv = sext i16 %4 to i32, !dbg !4043
  %and = and i32 %conv, 1, !dbg !4047
  %tobool = icmp ne i32 %and, 0, !dbg !4047
  br i1 %tobool, label %if.then2, label %if.else, !dbg !4048

if.then2:                                         ; preds = %if.then
  %5 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4049
  %bezt3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %5, i32 0, i32 18, !dbg !4051
  %6 = load %struct.BezTriple*, %struct.BezTriple** %bezt3, align 8, !dbg !4051
  %7 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4052
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %7, i32 0, i32 6, !dbg !4053
  %8 = load i32, i32* %pntsu, align 8, !dbg !4053
  %sub = sub nsw i32 %8, 1, !dbg !4054
  %idxprom = sext i32 %sub to i64, !dbg !4049
  %arrayidx = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %6, i64 %idxprom, !dbg !4049
  store %struct.BezTriple* %arrayidx, %struct.BezTriple** %bezt_prev, align 8, !dbg !4055
  br label %if.end, !dbg !4056

if.else:                                          ; preds = %if.then
  store %struct.BezTriple* null, %struct.BezTriple** %bezt_prev, align 8, !dbg !4057
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end5, !dbg !4059

if.else4:                                         ; preds = %entry
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !4060
  %add.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %9, i64 -1, !dbg !4062
  store %struct.BezTriple* %add.ptr, %struct.BezTriple** %bezt_prev, align 8, !dbg !4063
  br label %if.end5

if.end5:                                          ; preds = %if.else4, %if.end
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt_prev, align 8, !dbg !4064
  ret %struct.BezTriple* %10, !dbg !4065
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.BPoint* @BKE_nurb_bpoint_get_prev(%struct.Nurb* %nu, %struct.BPoint* %bp) #0 !dbg !4066 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %bp.addr = alloca %struct.BPoint*, align 8
  %bp_prev = alloca %struct.BPoint*, align 8
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !4067, metadata !DIExpression()), !dbg !4068
  store %struct.BPoint* %bp, %struct.BPoint** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp.addr, metadata !4069, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp_prev, metadata !4071, metadata !DIExpression()), !dbg !4072
  %0 = load %struct.BPoint*, %struct.BPoint** %bp.addr, align 8, !dbg !4073
  %1 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4075
  %bp1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %1, i32 0, i32 17, !dbg !4076
  %2 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !4076
  %cmp = icmp eq %struct.BPoint* %0, %2, !dbg !4077
  br i1 %cmp, label %if.then, label %if.else4, !dbg !4078

if.then:                                          ; preds = %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4079
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %3, i32 0, i32 13, !dbg !4082
  %4 = load i16, i16* %flagu, align 4, !dbg !4082
  %conv = sext i16 %4 to i32, !dbg !4079
  %and = and i32 %conv, 1, !dbg !4083
  %tobool = icmp ne i32 %and, 0, !dbg !4083
  br i1 %tobool, label %if.then2, label %if.else, !dbg !4084

if.then2:                                         ; preds = %if.then
  %5 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4085
  %bp3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %5, i32 0, i32 17, !dbg !4087
  %6 = load %struct.BPoint*, %struct.BPoint** %bp3, align 8, !dbg !4087
  %7 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4088
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %7, i32 0, i32 6, !dbg !4089
  %8 = load i32, i32* %pntsu, align 8, !dbg !4089
  %sub = sub nsw i32 %8, 1, !dbg !4090
  %idxprom = sext i32 %sub to i64, !dbg !4085
  %arrayidx = getelementptr inbounds %struct.BPoint, %struct.BPoint* %6, i64 %idxprom, !dbg !4085
  store %struct.BPoint* %arrayidx, %struct.BPoint** %bp_prev, align 8, !dbg !4091
  br label %if.end, !dbg !4092

if.else:                                          ; preds = %if.then
  store %struct.BPoint* null, %struct.BPoint** %bp_prev, align 8, !dbg !4093
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end5, !dbg !4095

if.else4:                                         ; preds = %entry
  %9 = load %struct.BPoint*, %struct.BPoint** %bp.addr, align 8, !dbg !4096
  %add.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %9, i64 -1, !dbg !4098
  store %struct.BPoint* %add.ptr, %struct.BPoint** %bp_prev, align 8, !dbg !4099
  br label %if.end5

if.end5:                                          ; preds = %if.else4, %if.end
  %10 = load %struct.BPoint*, %struct.BPoint** %bp_prev, align 8, !dbg !4100
  ret %struct.BPoint* %10, !dbg !4101
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurb_bezt_calc_normal(%struct.Nurb* %UNUSED_nu, %struct.BezTriple* %bezt, float* %r_normal) #0 !dbg !4102 {
entry:
  %UNUSED_nu.addr = alloca %struct.Nurb*, align 8
  %bezt.addr = alloca %struct.BezTriple*, align 8
  %r_normal.addr = alloca float*, align 8
  %dir_prev = alloca [3 x float], align 4
  %dir_next = alloca [3 x float], align 4
  store %struct.Nurb* %UNUSED_nu, %struct.Nurb** %UNUSED_nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %UNUSED_nu.addr, metadata !4105, metadata !DIExpression()), !dbg !4106
  store %struct.BezTriple* %bezt, %struct.BezTriple** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt.addr, metadata !4107, metadata !DIExpression()), !dbg !4108
  store float* %r_normal, float** %r_normal.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_normal.addr, metadata !4109, metadata !DIExpression()), !dbg !4110
  call void @llvm.dbg.declare(metadata [3 x float]* %dir_prev, metadata !4111, metadata !DIExpression()), !dbg !4112
  call void @llvm.dbg.declare(metadata [3 x float]* %dir_next, metadata !4113, metadata !DIExpression()), !dbg !4114
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %dir_prev, i64 0, i64 0, !dbg !4115
  %0 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !4116
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %0, i32 0, i32 0, !dbg !4117
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !4116
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !4116
  %1 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !4118
  %vec2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %1, i32 0, i32 0, !dbg !4119
  %arrayidx3 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec2, i64 0, i64 1, !dbg !4118
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx3, i64 0, i64 0, !dbg !4118
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay1, float* %arraydecay4), !dbg !4120
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %dir_next, i64 0, i64 0, !dbg !4121
  %2 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !4122
  %vec6 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %2, i32 0, i32 0, !dbg !4123
  %arrayidx7 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec6, i64 0, i64 1, !dbg !4122
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx7, i64 0, i64 0, !dbg !4122
  %3 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !4124
  %vec9 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %3, i32 0, i32 0, !dbg !4125
  %arrayidx10 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec9, i64 0, i64 2, !dbg !4124
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx10, i64 0, i64 0, !dbg !4124
  call void @sub_v3_v3v3(float* %arraydecay5, float* %arraydecay8, float* %arraydecay11), !dbg !4126
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %dir_prev, i64 0, i64 0, !dbg !4127
  %call = call float @normalize_v3(float* %arraydecay12), !dbg !4128
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %dir_next, i64 0, i64 0, !dbg !4129
  %call14 = call float @normalize_v3(float* %arraydecay13), !dbg !4130
  %4 = load float*, float** %r_normal.addr, align 8, !dbg !4131
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %dir_prev, i64 0, i64 0, !dbg !4132
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %dir_next, i64 0, i64 0, !dbg !4133
  call void @add_v3_v3v3(float* %4, float* %arraydecay15, float* %arraydecay16), !dbg !4134
  %5 = load float*, float** %r_normal.addr, align 8, !dbg !4135
  %call17 = call float @normalize_v3(float* %5), !dbg !4136
  ret void, !dbg !4137
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !4138 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !4141, metadata !DIExpression()), !dbg !4142
  %0 = load float*, float** %n.addr, align 8, !dbg !4143
  %1 = load float*, float** %n.addr, align 8, !dbg !4144
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !4145
  ret float %call, !dbg !4146
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurb_bezt_calc_plane(%struct.Nurb* %nu, %struct.BezTriple* %bezt, float* %r_plane) #0 !dbg !4147 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %bezt.addr = alloca %struct.BezTriple*, align 8
  %r_plane.addr = alloca float*, align 8
  %dir_prev = alloca [3 x float], align 4
  %dir_next = alloca [3 x float], align 4
  %bezt_prev = alloca %struct.BezTriple*, align 8
  %bezt_next = alloca %struct.BezTriple*, align 8
  %dir_mid = alloca [3 x float], align 4
  %tvec = alloca [3 x float], align 4
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !4148, metadata !DIExpression()), !dbg !4149
  store %struct.BezTriple* %bezt, %struct.BezTriple** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt.addr, metadata !4150, metadata !DIExpression()), !dbg !4151
  store float* %r_plane, float** %r_plane.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_plane.addr, metadata !4152, metadata !DIExpression()), !dbg !4153
  call void @llvm.dbg.declare(metadata [3 x float]* %dir_prev, metadata !4154, metadata !DIExpression()), !dbg !4155
  call void @llvm.dbg.declare(metadata [3 x float]* %dir_next, metadata !4156, metadata !DIExpression()), !dbg !4157
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %dir_prev, i64 0, i64 0, !dbg !4158
  %0 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !4159
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %0, i32 0, i32 0, !dbg !4160
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !4159
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !4159
  %1 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !4161
  %vec2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %1, i32 0, i32 0, !dbg !4162
  %arrayidx3 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec2, i64 0, i64 1, !dbg !4161
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx3, i64 0, i64 0, !dbg !4161
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay1, float* %arraydecay4), !dbg !4163
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %dir_next, i64 0, i64 0, !dbg !4164
  %2 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !4165
  %vec6 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %2, i32 0, i32 0, !dbg !4166
  %arrayidx7 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec6, i64 0, i64 1, !dbg !4165
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx7, i64 0, i64 0, !dbg !4165
  %3 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !4167
  %vec9 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %3, i32 0, i32 0, !dbg !4168
  %arrayidx10 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec9, i64 0, i64 2, !dbg !4167
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx10, i64 0, i64 0, !dbg !4167
  call void @sub_v3_v3v3(float* %arraydecay5, float* %arraydecay8, float* %arraydecay11), !dbg !4169
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %dir_prev, i64 0, i64 0, !dbg !4170
  %call = call float @normalize_v3(float* %arraydecay12), !dbg !4171
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %dir_next, i64 0, i64 0, !dbg !4172
  %call14 = call float @normalize_v3(float* %arraydecay13), !dbg !4173
  %4 = load float*, float** %r_plane.addr, align 8, !dbg !4174
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %dir_prev, i64 0, i64 0, !dbg !4175
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %dir_next, i64 0, i64 0, !dbg !4176
  call void @cross_v3_v3v3(float* %4, float* %arraydecay15, float* %arraydecay16), !dbg !4177
  %5 = load float*, float** %r_plane.addr, align 8, !dbg !4178
  %call17 = call float @normalize_v3(float* %5), !dbg !4180
  %cmp = fcmp olt float %call17, 0x3E80000000000000, !dbg !4181
  br i1 %cmp, label %if.then, label %if.end44, !dbg !4182

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt_prev, metadata !4183, metadata !DIExpression()), !dbg !4185
  %6 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4186
  %7 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !4187
  %call18 = call %struct.BezTriple* @BKE_nurb_bezt_get_prev(%struct.Nurb* %6, %struct.BezTriple* %7), !dbg !4188
  store %struct.BezTriple* %call18, %struct.BezTriple** %bezt_prev, align 8, !dbg !4185
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt_next, metadata !4189, metadata !DIExpression()), !dbg !4190
  %8 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4191
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !4192
  %call19 = call %struct.BezTriple* @BKE_nurb_bezt_get_next(%struct.Nurb* %8, %struct.BezTriple* %9), !dbg !4193
  store %struct.BezTriple* %call19, %struct.BezTriple** %bezt_next, align 8, !dbg !4190
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt_prev, align 8, !dbg !4194
  %tobool = icmp ne %struct.BezTriple* %10, null, !dbg !4194
  br i1 %tobool, label %if.then20, label %if.end, !dbg !4196

if.then20:                                        ; preds = %if.then
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %dir_prev, i64 0, i64 0, !dbg !4197
  %11 = load %struct.BezTriple*, %struct.BezTriple** %bezt_prev, align 8, !dbg !4199
  %vec22 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %11, i32 0, i32 0, !dbg !4200
  %arrayidx23 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec22, i64 0, i64 1, !dbg !4199
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx23, i64 0, i64 0, !dbg !4199
  %12 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !4201
  %vec25 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %12, i32 0, i32 0, !dbg !4202
  %arrayidx26 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec25, i64 0, i64 1, !dbg !4201
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx26, i64 0, i64 0, !dbg !4201
  call void @sub_v3_v3v3(float* %arraydecay21, float* %arraydecay24, float* %arraydecay27), !dbg !4203
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %dir_prev, i64 0, i64 0, !dbg !4204
  %call29 = call float @normalize_v3(float* %arraydecay28), !dbg !4205
  br label %if.end, !dbg !4206

if.end:                                           ; preds = %if.then20, %if.then
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt_next, align 8, !dbg !4207
  %tobool30 = icmp ne %struct.BezTriple* %13, null, !dbg !4207
  br i1 %tobool30, label %if.then31, label %if.end41, !dbg !4209

if.then31:                                        ; preds = %if.end
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %dir_next, i64 0, i64 0, !dbg !4210
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !4212
  %vec33 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %14, i32 0, i32 0, !dbg !4213
  %arrayidx34 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec33, i64 0, i64 1, !dbg !4212
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx34, i64 0, i64 0, !dbg !4212
  %15 = load %struct.BezTriple*, %struct.BezTriple** %bezt_next, align 8, !dbg !4214
  %vec36 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %15, i32 0, i32 0, !dbg !4215
  %arrayidx37 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec36, i64 0, i64 1, !dbg !4214
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx37, i64 0, i64 0, !dbg !4214
  call void @sub_v3_v3v3(float* %arraydecay32, float* %arraydecay35, float* %arraydecay38), !dbg !4216
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %dir_next, i64 0, i64 0, !dbg !4217
  %call40 = call float @normalize_v3(float* %arraydecay39), !dbg !4218
  br label %if.end41, !dbg !4219

if.end41:                                         ; preds = %if.then31, %if.end
  %16 = load float*, float** %r_plane.addr, align 8, !dbg !4220
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %dir_prev, i64 0, i64 0, !dbg !4221
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %dir_next, i64 0, i64 0, !dbg !4222
  call void @cross_v3_v3v3(float* %16, float* %arraydecay42, float* %arraydecay43), !dbg !4223
  br label %if.end44, !dbg !4224

if.end44:                                         ; preds = %if.end41, %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %dir_mid, metadata !4225, metadata !DIExpression()), !dbg !4227
  call void @llvm.dbg.declare(metadata [3 x float]* %tvec, metadata !4228, metadata !DIExpression()), !dbg !4229
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %dir_mid, i64 0, i64 0, !dbg !4230
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %dir_prev, i64 0, i64 0, !dbg !4231
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %dir_next, i64 0, i64 0, !dbg !4232
  call void @add_v3_v3v3(float* %arraydecay45, float* %arraydecay46, float* %arraydecay47), !dbg !4233
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !4234
  %17 = load float*, float** %r_plane.addr, align 8, !dbg !4235
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %dir_mid, i64 0, i64 0, !dbg !4236
  call void @cross_v3_v3v3(float* %arraydecay48, float* %17, float* %arraydecay49), !dbg !4237
  %18 = load float*, float** %r_plane.addr, align 8, !dbg !4238
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !4239
  call void @copy_v3_v3(float* %18, float* %arraydecay50), !dbg !4240
  %19 = load float*, float** %r_plane.addr, align 8, !dbg !4241
  %call51 = call float @normalize_v3(float* %19), !dbg !4242
  ret void, !dbg !4243
}

; Function Attrs: noinline nounwind uwtable
define internal void @cross_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !4244 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4245, metadata !DIExpression()), !dbg !4246
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4247, metadata !DIExpression()), !dbg !4248
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !4249, metadata !DIExpression()), !dbg !4250
  %0 = load float*, float** %a.addr, align 8, !dbg !4251
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !4251
  %1 = load float, float* %arrayidx, align 4, !dbg !4251
  %2 = load float*, float** %b.addr, align 8, !dbg !4252
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 2, !dbg !4252
  %3 = load float, float* %arrayidx1, align 4, !dbg !4252
  %mul = fmul float %1, %3, !dbg !4253
  %4 = load float*, float** %a.addr, align 8, !dbg !4254
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !4254
  %5 = load float, float* %arrayidx2, align 4, !dbg !4254
  %6 = load float*, float** %b.addr, align 8, !dbg !4255
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !4255
  %7 = load float, float* %arrayidx3, align 4, !dbg !4255
  %mul4 = fmul float %5, %7, !dbg !4256
  %sub = fsub float %mul, %mul4, !dbg !4257
  %8 = load float*, float** %r.addr, align 8, !dbg !4258
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !4258
  store float %sub, float* %arrayidx5, align 4, !dbg !4259
  %9 = load float*, float** %a.addr, align 8, !dbg !4260
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 2, !dbg !4260
  %10 = load float, float* %arrayidx6, align 4, !dbg !4260
  %11 = load float*, float** %b.addr, align 8, !dbg !4261
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 0, !dbg !4261
  %12 = load float, float* %arrayidx7, align 4, !dbg !4261
  %mul8 = fmul float %10, %12, !dbg !4262
  %13 = load float*, float** %a.addr, align 8, !dbg !4263
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 0, !dbg !4263
  %14 = load float, float* %arrayidx9, align 4, !dbg !4263
  %15 = load float*, float** %b.addr, align 8, !dbg !4264
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 2, !dbg !4264
  %16 = load float, float* %arrayidx10, align 4, !dbg !4264
  %mul11 = fmul float %14, %16, !dbg !4265
  %sub12 = fsub float %mul8, %mul11, !dbg !4266
  %17 = load float*, float** %r.addr, align 8, !dbg !4267
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 1, !dbg !4267
  store float %sub12, float* %arrayidx13, align 4, !dbg !4268
  %18 = load float*, float** %a.addr, align 8, !dbg !4269
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 0, !dbg !4269
  %19 = load float, float* %arrayidx14, align 4, !dbg !4269
  %20 = load float*, float** %b.addr, align 8, !dbg !4270
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !4270
  %21 = load float, float* %arrayidx15, align 4, !dbg !4270
  %mul16 = fmul float %19, %21, !dbg !4271
  %22 = load float*, float** %a.addr, align 8, !dbg !4272
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 1, !dbg !4272
  %23 = load float, float* %arrayidx17, align 4, !dbg !4272
  %24 = load float*, float** %b.addr, align 8, !dbg !4273
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !4273
  %25 = load float, float* %arrayidx18, align 4, !dbg !4273
  %mul19 = fmul float %23, %25, !dbg !4274
  %sub20 = fsub float %mul16, %mul19, !dbg !4275
  %26 = load float*, float** %r.addr, align 8, !dbg !4276
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 2, !dbg !4276
  store float %sub20, float* %arrayidx21, align 4, !dbg !4277
  ret void, !dbg !4278
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurb_knot_calc_u(%struct.Nurb* %nu) #0 !dbg !4279 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !4280, metadata !DIExpression()), !dbg !4281
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4282
  call void @makeknots(%struct.Nurb* %0, i16 signext 1), !dbg !4283
  ret void, !dbg !4284
}

; Function Attrs: noinline nounwind uwtable
define internal void @makeknots(%struct.Nurb* %nu, i16 signext %uv) #0 !dbg !4285 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %uv.addr = alloca i16, align 2
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !4288, metadata !DIExpression()), !dbg !4289
  store i16 %uv, i16* %uv.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %uv.addr, metadata !4290, metadata !DIExpression()), !dbg !4291
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4292
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %0, i32 0, i32 2, !dbg !4294
  %1 = load i16, i16* %type, align 8, !dbg !4294
  %conv = sext i16 %1 to i32, !dbg !4292
  %cmp = icmp eq i32 %conv, 4, !dbg !4295
  br i1 %cmp, label %if.then, label %if.end91, !dbg !4296

if.then:                                          ; preds = %entry
  %2 = load i16, i16* %uv.addr, align 2, !dbg !4297
  %conv2 = sext i16 %2 to i32, !dbg !4297
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !4300
  br i1 %cmp3, label %if.then5, label %if.else39, !dbg !4301

if.then5:                                         ; preds = %if.then
  %3 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4302
  %knotsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %3, i32 0, i32 15, !dbg !4305
  %4 = load float*, float** %knotsu, align 8, !dbg !4305
  %tobool = icmp ne float* %4, null, !dbg !4302
  br i1 %tobool, label %if.then6, label %if.end, !dbg !4306

if.then6:                                         ; preds = %if.then5
  %5 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4307
  %6 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4308
  %knotsu7 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 15, !dbg !4309
  %7 = load float*, float** %knotsu7, align 8, !dbg !4309
  %8 = bitcast float* %7 to i8*, !dbg !4308
  call void %5(i8* %8), !dbg !4307
  br label %if.end, !dbg !4307

if.end:                                           ; preds = %if.then6, %if.then5
  %9 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4310
  %call = call zeroext i8 @BKE_nurb_check_valid_u(%struct.Nurb* %9), !dbg !4312
  %tobool8 = icmp ne i8 %call, 0, !dbg !4312
  br i1 %tobool8, label %if.then9, label %if.else36, !dbg !4313

if.then9:                                         ; preds = %if.end
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4314
  %11 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4316
  %orderu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 11, !dbg !4316
  %12 = load i16, i16* %orderu, align 8, !dbg !4316
  %conv10 = sext i16 %12 to i32, !dbg !4316
  %13 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4316
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 6, !dbg !4316
  %14 = load i32, i32* %pntsu, align 8, !dbg !4316
  %add = add nsw i32 %conv10, %14, !dbg !4316
  %15 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4316
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %15, i32 0, i32 13, !dbg !4316
  %16 = load i16, i16* %flagu, align 4, !dbg !4316
  %conv11 = sext i16 %16 to i32, !dbg !4316
  %and = and i32 %conv11, 1, !dbg !4316
  %tobool12 = icmp ne i32 %and, 0, !dbg !4316
  br i1 %tobool12, label %cond.true, label %cond.false, !dbg !4316

cond.true:                                        ; preds = %if.then9
  %17 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4316
  %orderu13 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %17, i32 0, i32 11, !dbg !4316
  %18 = load i16, i16* %orderu13, align 8, !dbg !4316
  %conv14 = sext i16 %18 to i32, !dbg !4316
  %sub = sub nsw i32 %conv14, 1, !dbg !4316
  br label %cond.end, !dbg !4316

cond.false:                                       ; preds = %if.then9
  br label %cond.end, !dbg !4316

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ 0, %cond.false ], !dbg !4316
  %add15 = add nsw i32 %add, %cond, !dbg !4316
  %conv16 = sext i32 %add15 to i64, !dbg !4316
  %mul = mul i64 4, %conv16, !dbg !4317
  %add17 = add i64 4, %mul, !dbg !4318
  %call18 = call i8* %10(i64 %add17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i64 0, i64 0)), !dbg !4314
  %19 = bitcast i8* %call18 to float*, !dbg !4314
  %20 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4319
  %knotsu19 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %20, i32 0, i32 15, !dbg !4320
  store float* %19, float** %knotsu19, align 8, !dbg !4321
  %21 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4322
  %flagu20 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 13, !dbg !4324
  %22 = load i16, i16* %flagu20, align 4, !dbg !4324
  %conv21 = sext i16 %22 to i32, !dbg !4322
  %and22 = and i32 %conv21, 1, !dbg !4325
  %tobool23 = icmp ne i32 %and22, 0, !dbg !4325
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !4326

if.then24:                                        ; preds = %cond.end
  %23 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4327
  %knotsu25 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %23, i32 0, i32 15, !dbg !4329
  %24 = load float*, float** %knotsu25, align 8, !dbg !4329
  %25 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4330
  %pntsu26 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %25, i32 0, i32 6, !dbg !4331
  %26 = load i32, i32* %pntsu26, align 8, !dbg !4331
  %27 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4332
  %orderu27 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %27, i32 0, i32 11, !dbg !4333
  %28 = load i16, i16* %orderu27, align 8, !dbg !4333
  call void @calcknots(float* %24, i32 %26, i16 signext %28, i16 signext 0), !dbg !4334
  %29 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4335
  %knotsu28 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %29, i32 0, i32 15, !dbg !4336
  %30 = load float*, float** %knotsu28, align 8, !dbg !4336
  %31 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4337
  %pntsu29 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %31, i32 0, i32 6, !dbg !4338
  %32 = load i32, i32* %pntsu29, align 8, !dbg !4338
  %33 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4339
  %orderu30 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %33, i32 0, i32 11, !dbg !4340
  %34 = load i16, i16* %orderu30, align 8, !dbg !4340
  call void @makecyclicknots(float* %30, i32 %32, i16 signext %34), !dbg !4341
  br label %if.end35, !dbg !4342

if.else:                                          ; preds = %cond.end
  %35 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4343
  %knotsu31 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %35, i32 0, i32 15, !dbg !4345
  %36 = load float*, float** %knotsu31, align 8, !dbg !4345
  %37 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4346
  %pntsu32 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %37, i32 0, i32 6, !dbg !4347
  %38 = load i32, i32* %pntsu32, align 8, !dbg !4347
  %39 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4348
  %orderu33 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %39, i32 0, i32 11, !dbg !4349
  %40 = load i16, i16* %orderu33, align 8, !dbg !4349
  %41 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4350
  %flagu34 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %41, i32 0, i32 13, !dbg !4351
  %42 = load i16, i16* %flagu34, align 4, !dbg !4351
  call void @calcknots(float* %36, i32 %38, i16 signext %40, i16 signext %42), !dbg !4352
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then24
  br label %if.end38, !dbg !4353

if.else36:                                        ; preds = %if.end
  %43 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4354
  %knotsu37 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %43, i32 0, i32 15, !dbg !4355
  store float* null, float** %knotsu37, align 8, !dbg !4356
  br label %if.end38

if.end38:                                         ; preds = %if.else36, %if.end35
  br label %if.end90, !dbg !4357

if.else39:                                        ; preds = %if.then
  %44 = load i16, i16* %uv.addr, align 2, !dbg !4358
  %conv40 = sext i16 %44 to i32, !dbg !4358
  %cmp41 = icmp eq i32 %conv40, 2, !dbg !4360
  br i1 %cmp41, label %if.then43, label %if.end89, !dbg !4361

if.then43:                                        ; preds = %if.else39
  %45 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4362
  %knotsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %45, i32 0, i32 16, !dbg !4365
  %46 = load float*, float** %knotsv, align 8, !dbg !4365
  %tobool44 = icmp ne float* %46, null, !dbg !4362
  br i1 %tobool44, label %if.then45, label %if.end47, !dbg !4366

if.then45:                                        ; preds = %if.then43
  %47 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4367
  %48 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4368
  %knotsv46 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %48, i32 0, i32 16, !dbg !4369
  %49 = load float*, float** %knotsv46, align 8, !dbg !4369
  %50 = bitcast float* %49 to i8*, !dbg !4368
  call void %47(i8* %50), !dbg !4367
  br label %if.end47, !dbg !4367

if.end47:                                         ; preds = %if.then45, %if.then43
  %51 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4370
  %call48 = call zeroext i8 @BKE_nurb_check_valid_v(%struct.Nurb* %51), !dbg !4372
  %tobool49 = icmp ne i8 %call48, 0, !dbg !4372
  br i1 %tobool49, label %if.then50, label %if.else86, !dbg !4373

if.then50:                                        ; preds = %if.end47
  %52 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4374
  %53 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4376
  %orderv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %53, i32 0, i32 12, !dbg !4376
  %54 = load i16, i16* %orderv, align 2, !dbg !4376
  %conv51 = sext i16 %54 to i32, !dbg !4376
  %55 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4376
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %55, i32 0, i32 7, !dbg !4376
  %56 = load i32, i32* %pntsv, align 4, !dbg !4376
  %add52 = add nsw i32 %conv51, %56, !dbg !4376
  %57 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4376
  %flagv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %57, i32 0, i32 14, !dbg !4376
  %58 = load i16, i16* %flagv, align 2, !dbg !4376
  %conv53 = sext i16 %58 to i32, !dbg !4376
  %and54 = and i32 %conv53, 1, !dbg !4376
  %tobool55 = icmp ne i32 %and54, 0, !dbg !4376
  br i1 %tobool55, label %cond.true56, label %cond.false60, !dbg !4376

cond.true56:                                      ; preds = %if.then50
  %59 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4376
  %orderv57 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %59, i32 0, i32 12, !dbg !4376
  %60 = load i16, i16* %orderv57, align 2, !dbg !4376
  %conv58 = sext i16 %60 to i32, !dbg !4376
  %sub59 = sub nsw i32 %conv58, 1, !dbg !4376
  br label %cond.end61, !dbg !4376

cond.false60:                                     ; preds = %if.then50
  br label %cond.end61, !dbg !4376

cond.end61:                                       ; preds = %cond.false60, %cond.true56
  %cond62 = phi i32 [ %sub59, %cond.true56 ], [ 0, %cond.false60 ], !dbg !4376
  %add63 = add nsw i32 %add52, %cond62, !dbg !4376
  %conv64 = sext i32 %add63 to i64, !dbg !4376
  %mul65 = mul i64 4, %conv64, !dbg !4377
  %add66 = add i64 4, %mul65, !dbg !4378
  %call67 = call i8* %52(i64 %add66, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i64 0, i64 0)), !dbg !4374
  %61 = bitcast i8* %call67 to float*, !dbg !4374
  %62 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4379
  %knotsv68 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %62, i32 0, i32 16, !dbg !4380
  store float* %61, float** %knotsv68, align 8, !dbg !4381
  %63 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4382
  %flagv69 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %63, i32 0, i32 14, !dbg !4384
  %64 = load i16, i16* %flagv69, align 2, !dbg !4384
  %conv70 = sext i16 %64 to i32, !dbg !4382
  %and71 = and i32 %conv70, 1, !dbg !4385
  %tobool72 = icmp ne i32 %and71, 0, !dbg !4385
  br i1 %tobool72, label %if.then73, label %if.else80, !dbg !4386

if.then73:                                        ; preds = %cond.end61
  %65 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4387
  %knotsv74 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %65, i32 0, i32 16, !dbg !4389
  %66 = load float*, float** %knotsv74, align 8, !dbg !4389
  %67 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4390
  %pntsv75 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %67, i32 0, i32 7, !dbg !4391
  %68 = load i32, i32* %pntsv75, align 4, !dbg !4391
  %69 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4392
  %orderv76 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %69, i32 0, i32 12, !dbg !4393
  %70 = load i16, i16* %orderv76, align 2, !dbg !4393
  call void @calcknots(float* %66, i32 %68, i16 signext %70, i16 signext 0), !dbg !4394
  %71 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4395
  %knotsv77 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %71, i32 0, i32 16, !dbg !4396
  %72 = load float*, float** %knotsv77, align 8, !dbg !4396
  %73 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4397
  %pntsv78 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %73, i32 0, i32 7, !dbg !4398
  %74 = load i32, i32* %pntsv78, align 4, !dbg !4398
  %75 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4399
  %orderv79 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %75, i32 0, i32 12, !dbg !4400
  %76 = load i16, i16* %orderv79, align 2, !dbg !4400
  call void @makecyclicknots(float* %72, i32 %74, i16 signext %76), !dbg !4401
  br label %if.end85, !dbg !4402

if.else80:                                        ; preds = %cond.end61
  %77 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4403
  %knotsv81 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %77, i32 0, i32 16, !dbg !4405
  %78 = load float*, float** %knotsv81, align 8, !dbg !4405
  %79 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4406
  %pntsv82 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %79, i32 0, i32 7, !dbg !4407
  %80 = load i32, i32* %pntsv82, align 4, !dbg !4407
  %81 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4408
  %orderv83 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %81, i32 0, i32 12, !dbg !4409
  %82 = load i16, i16* %orderv83, align 2, !dbg !4409
  %83 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4410
  %flagv84 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %83, i32 0, i32 14, !dbg !4411
  %84 = load i16, i16* %flagv84, align 2, !dbg !4411
  call void @calcknots(float* %78, i32 %80, i16 signext %82, i16 signext %84), !dbg !4412
  br label %if.end85

if.end85:                                         ; preds = %if.else80, %if.then73
  br label %if.end88, !dbg !4413

if.else86:                                        ; preds = %if.end47
  %85 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4414
  %knotsv87 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %85, i32 0, i32 16, !dbg !4416
  store float* null, float** %knotsv87, align 8, !dbg !4417
  br label %if.end88

if.end88:                                         ; preds = %if.else86, %if.end85
  br label %if.end89, !dbg !4418

if.end89:                                         ; preds = %if.end88, %if.else39
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.end38
  br label %if.end91, !dbg !4419

if.end91:                                         ; preds = %if.end90, %entry
  ret void, !dbg !4420
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurb_knot_calc_v(%struct.Nurb* %nu) #0 !dbg !4421 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !4422, metadata !DIExpression()), !dbg !4423
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4424
  call void @makeknots(%struct.Nurb* %0, i16 signext 2), !dbg !4425
  ret void, !dbg !4426
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurb_makeFaces(%struct.Nurb* %nu, float* %coord_array, i32 %rowstride, i32 %resolu, i32 %resolv) #0 !dbg !4427 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %coord_array.addr = alloca float*, align 8
  %rowstride.addr = alloca i32, align 4
  %resolu.addr = alloca i32, align 4
  %resolv.addr = alloca i32, align 4
  %bp = alloca %struct.BPoint*, align 8
  %basisu = alloca float*, align 8
  %basis = alloca float*, align 8
  %basisv = alloca float*, align 8
  %sum = alloca float*, align 8
  %fp = alloca float*, align 8
  %in = alloca float*, align 8
  %u = alloca float, align 4
  %v = alloca float, align 4
  %ustart = alloca float, align 4
  %uend = alloca float, align 4
  %ustep = alloca float, align 4
  %vstart = alloca float, align 4
  %vend = alloca float, align 4
  %vstep = alloca float, align 4
  %sumdiv = alloca float, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %iofs = alloca i32, align 4
  %jofs = alloca i32, align 4
  %cycl = alloca i32, align 4
  %len = alloca i32, align 4
  %curu = alloca i32, align 4
  %curv = alloca i32, align 4
  %istart = alloca i32, align 4
  %iend = alloca i32, align 4
  %jsta = alloca i32, align 4
  %jen = alloca i32, align 4
  %jstart = alloca i32*, align 8
  %jend = alloca i32*, align 8
  %ratcomp = alloca i32, align 4
  %totu = alloca i32, align 4
  %totv = alloca i32, align 4
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !4430, metadata !DIExpression()), !dbg !4431
  store float* %coord_array, float** %coord_array.addr, align 8
  call void @llvm.dbg.declare(metadata float** %coord_array.addr, metadata !4432, metadata !DIExpression()), !dbg !4433
  store i32 %rowstride, i32* %rowstride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rowstride.addr, metadata !4434, metadata !DIExpression()), !dbg !4435
  store i32 %resolu, i32* %resolu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %resolu.addr, metadata !4436, metadata !DIExpression()), !dbg !4437
  store i32 %resolv, i32* %resolv.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %resolv.addr, metadata !4438, metadata !DIExpression()), !dbg !4439
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !4440, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.declare(metadata float** %basisu, metadata !4442, metadata !DIExpression()), !dbg !4443
  call void @llvm.dbg.declare(metadata float** %basis, metadata !4444, metadata !DIExpression()), !dbg !4445
  call void @llvm.dbg.declare(metadata float** %basisv, metadata !4446, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.declare(metadata float** %sum, metadata !4448, metadata !DIExpression()), !dbg !4449
  call void @llvm.dbg.declare(metadata float** %fp, metadata !4450, metadata !DIExpression()), !dbg !4451
  call void @llvm.dbg.declare(metadata float** %in, metadata !4452, metadata !DIExpression()), !dbg !4453
  call void @llvm.dbg.declare(metadata float* %u, metadata !4454, metadata !DIExpression()), !dbg !4455
  call void @llvm.dbg.declare(metadata float* %v, metadata !4456, metadata !DIExpression()), !dbg !4457
  call void @llvm.dbg.declare(metadata float* %ustart, metadata !4458, metadata !DIExpression()), !dbg !4459
  call void @llvm.dbg.declare(metadata float* %uend, metadata !4460, metadata !DIExpression()), !dbg !4461
  call void @llvm.dbg.declare(metadata float* %ustep, metadata !4462, metadata !DIExpression()), !dbg !4463
  call void @llvm.dbg.declare(metadata float* %vstart, metadata !4464, metadata !DIExpression()), !dbg !4465
  call void @llvm.dbg.declare(metadata float* %vend, metadata !4466, metadata !DIExpression()), !dbg !4467
  call void @llvm.dbg.declare(metadata float* %vstep, metadata !4468, metadata !DIExpression()), !dbg !4469
  call void @llvm.dbg.declare(metadata float* %sumdiv, metadata !4470, metadata !DIExpression()), !dbg !4471
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4472, metadata !DIExpression()), !dbg !4473
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4474, metadata !DIExpression()), !dbg !4475
  call void @llvm.dbg.declare(metadata i32* %iofs, metadata !4476, metadata !DIExpression()), !dbg !4477
  call void @llvm.dbg.declare(metadata i32* %jofs, metadata !4478, metadata !DIExpression()), !dbg !4479
  call void @llvm.dbg.declare(metadata i32* %cycl, metadata !4480, metadata !DIExpression()), !dbg !4481
  call void @llvm.dbg.declare(metadata i32* %len, metadata !4482, metadata !DIExpression()), !dbg !4483
  call void @llvm.dbg.declare(metadata i32* %curu, metadata !4484, metadata !DIExpression()), !dbg !4485
  call void @llvm.dbg.declare(metadata i32* %curv, metadata !4486, metadata !DIExpression()), !dbg !4487
  call void @llvm.dbg.declare(metadata i32* %istart, metadata !4488, metadata !DIExpression()), !dbg !4489
  call void @llvm.dbg.declare(metadata i32* %iend, metadata !4490, metadata !DIExpression()), !dbg !4491
  call void @llvm.dbg.declare(metadata i32* %jsta, metadata !4492, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.declare(metadata i32* %jen, metadata !4494, metadata !DIExpression()), !dbg !4495
  call void @llvm.dbg.declare(metadata i32** %jstart, metadata !4496, metadata !DIExpression()), !dbg !4497
  call void @llvm.dbg.declare(metadata i32** %jend, metadata !4498, metadata !DIExpression()), !dbg !4499
  call void @llvm.dbg.declare(metadata i32* %ratcomp, metadata !4500, metadata !DIExpression()), !dbg !4501
  call void @llvm.dbg.declare(metadata i32* %totu, metadata !4502, metadata !DIExpression()), !dbg !4503
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4504
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %0, i32 0, i32 6, !dbg !4505
  %1 = load i32, i32* %pntsu, align 8, !dbg !4505
  %2 = load i32, i32* %resolu.addr, align 4, !dbg !4506
  %mul = mul nsw i32 %1, %2, !dbg !4507
  store i32 %mul, i32* %totu, align 4, !dbg !4503
  call void @llvm.dbg.declare(metadata i32* %totv, metadata !4508, metadata !DIExpression()), !dbg !4509
  %3 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4510
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %3, i32 0, i32 7, !dbg !4511
  %4 = load i32, i32* %pntsv, align 4, !dbg !4511
  %5 = load i32, i32* %resolv.addr, align 4, !dbg !4512
  %mul1 = mul nsw i32 %4, %5, !dbg !4513
  store i32 %mul1, i32* %totv, align 4, !dbg !4509
  %6 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4514
  %knotsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 15, !dbg !4516
  %7 = load float*, float** %knotsu, align 8, !dbg !4516
  %cmp = icmp eq float* %7, null, !dbg !4517
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4518

lor.lhs.false:                                    ; preds = %entry
  %8 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4519
  %knotsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 16, !dbg !4520
  %9 = load float*, float** %knotsv, align 8, !dbg !4520
  %cmp2 = icmp eq float* %9, null, !dbg !4521
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4522

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !4523

if.end:                                           ; preds = %lor.lhs.false
  %10 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4524
  %orderu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 11, !dbg !4526
  %11 = load i16, i16* %orderu, align 8, !dbg !4526
  %conv = sext i16 %11 to i32, !dbg !4524
  %12 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4527
  %pntsu3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 6, !dbg !4528
  %13 = load i32, i32* %pntsu3, align 8, !dbg !4528
  %cmp4 = icmp sgt i32 %conv, %13, !dbg !4529
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !4530

if.then6:                                         ; preds = %if.end
  br label %return, !dbg !4531

if.end7:                                          ; preds = %if.end
  %14 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4532
  %orderv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %14, i32 0, i32 12, !dbg !4534
  %15 = load i16, i16* %orderv, align 2, !dbg !4534
  %conv8 = sext i16 %15 to i32, !dbg !4532
  %16 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4535
  %pntsv9 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %16, i32 0, i32 7, !dbg !4536
  %17 = load i32, i32* %pntsv9, align 4, !dbg !4536
  %cmp10 = icmp sgt i32 %conv8, %17, !dbg !4537
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !4538

if.then12:                                        ; preds = %if.end7
  br label %return, !dbg !4539

if.end13:                                         ; preds = %if.end7
  %18 = load float*, float** %coord_array.addr, align 8, !dbg !4540
  %cmp14 = icmp eq float* %18, null, !dbg !4542
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !4543

if.then16:                                        ; preds = %if.end13
  br label %return, !dbg !4544

if.end17:                                         ; preds = %if.end13
  %19 = load i32, i32* %totu, align 4, !dbg !4545
  %20 = load i32, i32* %totv, align 4, !dbg !4546
  %mul18 = mul nsw i32 %19, %20, !dbg !4547
  store i32 %mul18, i32* %len, align 4, !dbg !4548
  %21 = load i32, i32* %len, align 4, !dbg !4549
  %cmp19 = icmp eq i32 %21, 0, !dbg !4551
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !4552

if.then21:                                        ; preds = %if.end17
  br label %return, !dbg !4553

if.end22:                                         ; preds = %if.end17
  %22 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4554
  %23 = load i32, i32* %len, align 4, !dbg !4555
  %conv23 = sext i32 %23 to i64, !dbg !4555
  %mul24 = mul i64 4, %conv23, !dbg !4556
  %call = call i8* %22(i64 %mul24, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0)), !dbg !4554
  %24 = bitcast i8* %call to float*, !dbg !4557
  store float* %24, float** %sum, align 8, !dbg !4558
  %25 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4559
  %bp25 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %25, i32 0, i32 17, !dbg !4560
  %26 = load %struct.BPoint*, %struct.BPoint** %bp25, align 8, !dbg !4560
  store %struct.BPoint* %26, %struct.BPoint** %bp, align 8, !dbg !4561
  %27 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4562
  %pntsu26 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %27, i32 0, i32 6, !dbg !4563
  %28 = load i32, i32* %pntsu26, align 8, !dbg !4563
  %29 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4564
  %pntsv27 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %29, i32 0, i32 7, !dbg !4565
  %30 = load i32, i32* %pntsv27, align 4, !dbg !4565
  %mul28 = mul nsw i32 %28, %30, !dbg !4566
  store i32 %mul28, i32* %i, align 4, !dbg !4567
  store i32 0, i32* %ratcomp, align 4, !dbg !4568
  br label %while.cond, !dbg !4569

while.cond:                                       ; preds = %if.end32, %if.end22
  %31 = load i32, i32* %i, align 4, !dbg !4570
  %dec = add nsw i32 %31, -1, !dbg !4570
  store i32 %dec, i32* %i, align 4, !dbg !4570
  %tobool = icmp ne i32 %31, 0, !dbg !4569
  br i1 %tobool, label %while.body, label %while.end, !dbg !4569

while.body:                                       ; preds = %while.cond
  %32 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !4571
  %vec = getelementptr inbounds %struct.BPoint, %struct.BPoint* %32, i32 0, i32 0, !dbg !4574
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !4571
  %33 = load float, float* %arrayidx, align 4, !dbg !4571
  %cmp29 = fcmp une float %33, 1.000000e+00, !dbg !4575
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !4576

if.then31:                                        ; preds = %while.body
  store i32 1, i32* %ratcomp, align 4, !dbg !4577
  br label %while.end, !dbg !4579

if.end32:                                         ; preds = %while.body
  %34 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !4580
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %34, i32 1, !dbg !4580
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp, align 8, !dbg !4580
  br label %while.cond, !dbg !4569, !llvm.loop !4581

while.end:                                        ; preds = %if.then31, %while.cond
  %35 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4583
  %knotsu33 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %35, i32 0, i32 15, !dbg !4584
  %36 = load float*, float** %knotsu33, align 8, !dbg !4584
  store float* %36, float** %fp, align 8, !dbg !4585
  %37 = load float*, float** %fp, align 8, !dbg !4586
  %38 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4587
  %orderu34 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %38, i32 0, i32 11, !dbg !4588
  %39 = load i16, i16* %orderu34, align 8, !dbg !4588
  %conv35 = sext i16 %39 to i32, !dbg !4587
  %sub = sub nsw i32 %conv35, 1, !dbg !4589
  %idxprom = sext i32 %sub to i64, !dbg !4586
  %arrayidx36 = getelementptr inbounds float, float* %37, i64 %idxprom, !dbg !4586
  %40 = load float, float* %arrayidx36, align 4, !dbg !4586
  store float %40, float* %ustart, align 4, !dbg !4590
  %41 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4591
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %41, i32 0, i32 13, !dbg !4593
  %42 = load i16, i16* %flagu, align 4, !dbg !4593
  %conv37 = sext i16 %42 to i32, !dbg !4591
  %and = and i32 %conv37, 1, !dbg !4594
  %tobool38 = icmp ne i32 %and, 0, !dbg !4594
  br i1 %tobool38, label %if.then39, label %if.else, !dbg !4595

if.then39:                                        ; preds = %while.end
  %43 = load float*, float** %fp, align 8, !dbg !4596
  %44 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4597
  %pntsu40 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %44, i32 0, i32 6, !dbg !4598
  %45 = load i32, i32* %pntsu40, align 8, !dbg !4598
  %46 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4599
  %orderu41 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %46, i32 0, i32 11, !dbg !4600
  %47 = load i16, i16* %orderu41, align 8, !dbg !4600
  %conv42 = sext i16 %47 to i32, !dbg !4599
  %add = add nsw i32 %45, %conv42, !dbg !4601
  %sub43 = sub nsw i32 %add, 1, !dbg !4602
  %idxprom44 = sext i32 %sub43 to i64, !dbg !4596
  %arrayidx45 = getelementptr inbounds float, float* %43, i64 %idxprom44, !dbg !4596
  %48 = load float, float* %arrayidx45, align 4, !dbg !4596
  store float %48, float* %uend, align 4, !dbg !4603
  br label %if.end49, !dbg !4604

if.else:                                          ; preds = %while.end
  %49 = load float*, float** %fp, align 8, !dbg !4605
  %50 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4606
  %pntsu46 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %50, i32 0, i32 6, !dbg !4607
  %51 = load i32, i32* %pntsu46, align 8, !dbg !4607
  %idxprom47 = sext i32 %51 to i64, !dbg !4605
  %arrayidx48 = getelementptr inbounds float, float* %49, i64 %idxprom47, !dbg !4605
  %52 = load float, float* %arrayidx48, align 4, !dbg !4605
  store float %52, float* %uend, align 4, !dbg !4608
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.then39
  %53 = load float, float* %uend, align 4, !dbg !4609
  %54 = load float, float* %ustart, align 4, !dbg !4610
  %sub50 = fsub float %53, %54, !dbg !4611
  %55 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4612
  %flagu51 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %55, i32 0, i32 13, !dbg !4613
  %56 = load i16, i16* %flagu51, align 4, !dbg !4613
  %conv52 = sext i16 %56 to i32, !dbg !4612
  %and53 = and i32 %conv52, 1, !dbg !4614
  %tobool54 = icmp ne i32 %and53, 0, !dbg !4614
  br i1 %tobool54, label %cond.true, label %cond.false, !dbg !4615

cond.true:                                        ; preds = %if.end49
  %57 = load i32, i32* %totu, align 4, !dbg !4616
  br label %cond.end, !dbg !4615

cond.false:                                       ; preds = %if.end49
  %58 = load i32, i32* %totu, align 4, !dbg !4617
  %sub55 = sub nsw i32 %58, 1, !dbg !4618
  br label %cond.end, !dbg !4615

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %57, %cond.true ], [ %sub55, %cond.false ], !dbg !4615
  %conv56 = sitofp i32 %cond to float, !dbg !4619
  %div = fdiv float %sub50, %conv56, !dbg !4620
  store float %div, float* %ustep, align 4, !dbg !4621
  %59 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4622
  %60 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4623
  %orderu57 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %60, i32 0, i32 11, !dbg !4623
  %61 = load i16, i16* %orderu57, align 8, !dbg !4623
  %conv58 = sext i16 %61 to i32, !dbg !4623
  %62 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4623
  %pntsu59 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %62, i32 0, i32 6, !dbg !4623
  %63 = load i32, i32* %pntsu59, align 8, !dbg !4623
  %add60 = add nsw i32 %conv58, %63, !dbg !4623
  %64 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4623
  %flagu61 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %64, i32 0, i32 13, !dbg !4623
  %65 = load i16, i16* %flagu61, align 4, !dbg !4623
  %conv62 = sext i16 %65 to i32, !dbg !4623
  %and63 = and i32 %conv62, 1, !dbg !4623
  %tobool64 = icmp ne i32 %and63, 0, !dbg !4623
  br i1 %tobool64, label %cond.true65, label %cond.false69, !dbg !4623

cond.true65:                                      ; preds = %cond.end
  %66 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4623
  %orderu66 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %66, i32 0, i32 11, !dbg !4623
  %67 = load i16, i16* %orderu66, align 8, !dbg !4623
  %conv67 = sext i16 %67 to i32, !dbg !4623
  %sub68 = sub nsw i32 %conv67, 1, !dbg !4623
  br label %cond.end70, !dbg !4623

cond.false69:                                     ; preds = %cond.end
  br label %cond.end70, !dbg !4623

cond.end70:                                       ; preds = %cond.false69, %cond.true65
  %cond71 = phi i32 [ %sub68, %cond.true65 ], [ 0, %cond.false69 ], !dbg !4623
  %add72 = add nsw i32 %add60, %cond71, !dbg !4623
  %conv73 = sext i32 %add72 to i64, !dbg !4623
  %mul74 = mul i64 4, %conv73, !dbg !4624
  %call75 = call i8* %59(i64 %mul74, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0)), !dbg !4622
  %68 = bitcast i8* %call75 to float*, !dbg !4625
  store float* %68, float** %basisu, align 8, !dbg !4626
  %69 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4627
  %knotsv76 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %69, i32 0, i32 16, !dbg !4628
  %70 = load float*, float** %knotsv76, align 8, !dbg !4628
  store float* %70, float** %fp, align 8, !dbg !4629
  %71 = load float*, float** %fp, align 8, !dbg !4630
  %72 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4631
  %orderv77 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %72, i32 0, i32 12, !dbg !4632
  %73 = load i16, i16* %orderv77, align 2, !dbg !4632
  %conv78 = sext i16 %73 to i32, !dbg !4631
  %sub79 = sub nsw i32 %conv78, 1, !dbg !4633
  %idxprom80 = sext i32 %sub79 to i64, !dbg !4630
  %arrayidx81 = getelementptr inbounds float, float* %71, i64 %idxprom80, !dbg !4630
  %74 = load float, float* %arrayidx81, align 4, !dbg !4630
  store float %74, float* %vstart, align 4, !dbg !4634
  %75 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4635
  %flagv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %75, i32 0, i32 14, !dbg !4637
  %76 = load i16, i16* %flagv, align 2, !dbg !4637
  %conv82 = sext i16 %76 to i32, !dbg !4635
  %and83 = and i32 %conv82, 1, !dbg !4638
  %tobool84 = icmp ne i32 %and83, 0, !dbg !4638
  br i1 %tobool84, label %if.then85, label %if.else93, !dbg !4639

if.then85:                                        ; preds = %cond.end70
  %77 = load float*, float** %fp, align 8, !dbg !4640
  %78 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4641
  %pntsv86 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %78, i32 0, i32 7, !dbg !4642
  %79 = load i32, i32* %pntsv86, align 4, !dbg !4642
  %80 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4643
  %orderv87 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %80, i32 0, i32 12, !dbg !4644
  %81 = load i16, i16* %orderv87, align 2, !dbg !4644
  %conv88 = sext i16 %81 to i32, !dbg !4643
  %add89 = add nsw i32 %79, %conv88, !dbg !4645
  %sub90 = sub nsw i32 %add89, 1, !dbg !4646
  %idxprom91 = sext i32 %sub90 to i64, !dbg !4640
  %arrayidx92 = getelementptr inbounds float, float* %77, i64 %idxprom91, !dbg !4640
  %82 = load float, float* %arrayidx92, align 4, !dbg !4640
  store float %82, float* %vend, align 4, !dbg !4647
  br label %if.end97, !dbg !4648

if.else93:                                        ; preds = %cond.end70
  %83 = load float*, float** %fp, align 8, !dbg !4649
  %84 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4650
  %pntsv94 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %84, i32 0, i32 7, !dbg !4651
  %85 = load i32, i32* %pntsv94, align 4, !dbg !4651
  %idxprom95 = sext i32 %85 to i64, !dbg !4649
  %arrayidx96 = getelementptr inbounds float, float* %83, i64 %idxprom95, !dbg !4649
  %86 = load float, float* %arrayidx96, align 4, !dbg !4649
  store float %86, float* %vend, align 4, !dbg !4652
  br label %if.end97

if.end97:                                         ; preds = %if.else93, %if.then85
  %87 = load float, float* %vend, align 4, !dbg !4653
  %88 = load float, float* %vstart, align 4, !dbg !4654
  %sub98 = fsub float %87, %88, !dbg !4655
  %89 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4656
  %flagv99 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %89, i32 0, i32 14, !dbg !4657
  %90 = load i16, i16* %flagv99, align 2, !dbg !4657
  %conv100 = sext i16 %90 to i32, !dbg !4656
  %and101 = and i32 %conv100, 1, !dbg !4658
  %tobool102 = icmp ne i32 %and101, 0, !dbg !4658
  br i1 %tobool102, label %cond.true103, label %cond.false104, !dbg !4659

cond.true103:                                     ; preds = %if.end97
  %91 = load i32, i32* %totv, align 4, !dbg !4660
  br label %cond.end106, !dbg !4659

cond.false104:                                    ; preds = %if.end97
  %92 = load i32, i32* %totv, align 4, !dbg !4661
  %sub105 = sub nsw i32 %92, 1, !dbg !4662
  br label %cond.end106, !dbg !4659

cond.end106:                                      ; preds = %cond.false104, %cond.true103
  %cond107 = phi i32 [ %91, %cond.true103 ], [ %sub105, %cond.false104 ], !dbg !4659
  %conv108 = sitofp i32 %cond107 to float, !dbg !4663
  %div109 = fdiv float %sub98, %conv108, !dbg !4664
  store float %div109, float* %vstep, align 4, !dbg !4665
  %93 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4666
  %orderv110 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %93, i32 0, i32 12, !dbg !4666
  %94 = load i16, i16* %orderv110, align 2, !dbg !4666
  %conv111 = sext i16 %94 to i32, !dbg !4666
  %95 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4666
  %pntsv112 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %95, i32 0, i32 7, !dbg !4666
  %96 = load i32, i32* %pntsv112, align 4, !dbg !4666
  %add113 = add nsw i32 %conv111, %96, !dbg !4666
  %97 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4666
  %flagv114 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %97, i32 0, i32 14, !dbg !4666
  %98 = load i16, i16* %flagv114, align 2, !dbg !4666
  %conv115 = sext i16 %98 to i32, !dbg !4666
  %and116 = and i32 %conv115, 1, !dbg !4666
  %tobool117 = icmp ne i32 %and116, 0, !dbg !4666
  br i1 %tobool117, label %cond.true118, label %cond.false122, !dbg !4666

cond.true118:                                     ; preds = %cond.end106
  %99 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4666
  %orderv119 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %99, i32 0, i32 12, !dbg !4666
  %100 = load i16, i16* %orderv119, align 2, !dbg !4666
  %conv120 = sext i16 %100 to i32, !dbg !4666
  %sub121 = sub nsw i32 %conv120, 1, !dbg !4666
  br label %cond.end123, !dbg !4666

cond.false122:                                    ; preds = %cond.end106
  br label %cond.end123, !dbg !4666

cond.end123:                                      ; preds = %cond.false122, %cond.true118
  %cond124 = phi i32 [ %sub121, %cond.true118 ], [ 0, %cond.false122 ], !dbg !4666
  %add125 = add nsw i32 %add113, %cond124, !dbg !4666
  store i32 %add125, i32* %len, align 4, !dbg !4667
  %101 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4668
  %102 = load i32, i32* %len, align 4, !dbg !4669
  %conv126 = sext i32 %102 to i64, !dbg !4669
  %mul127 = mul i64 4, %conv126, !dbg !4670
  %103 = load i32, i32* %totv, align 4, !dbg !4671
  %conv128 = sext i32 %103 to i64, !dbg !4671
  %mul129 = mul i64 %mul127, %conv128, !dbg !4672
  %call130 = call i8* %101(i64 %mul129, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0)), !dbg !4668
  %104 = bitcast i8* %call130 to float*, !dbg !4673
  store float* %104, float** %basisv, align 8, !dbg !4674
  %105 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4675
  %106 = load i32, i32* %totv, align 4, !dbg !4676
  %conv131 = sext i32 %106 to i64, !dbg !4676
  %mul132 = mul i64 4, %conv131, !dbg !4677
  %call133 = call i8* %105(i64 %mul132, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0)), !dbg !4675
  %107 = bitcast i8* %call133 to i32*, !dbg !4678
  store i32* %107, i32** %jstart, align 8, !dbg !4679
  %108 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4680
  %109 = load i32, i32* %totv, align 4, !dbg !4681
  %conv134 = sext i32 %109 to i64, !dbg !4681
  %mul135 = mul i64 4, %conv134, !dbg !4682
  %call136 = call i8* %108(i64 %mul135, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i64 0, i64 0)), !dbg !4680
  %110 = bitcast i8* %call136 to i32*, !dbg !4683
  store i32* %110, i32** %jend, align 8, !dbg !4684
  %111 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4685
  %flagv137 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %111, i32 0, i32 14, !dbg !4687
  %112 = load i16, i16* %flagv137, align 2, !dbg !4687
  %conv138 = sext i16 %112 to i32, !dbg !4685
  %and139 = and i32 %conv138, 1, !dbg !4688
  %tobool140 = icmp ne i32 %and139, 0, !dbg !4688
  br i1 %tobool140, label %if.then141, label %if.else145, !dbg !4689

if.then141:                                       ; preds = %cond.end123
  %113 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4690
  %orderv142 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %113, i32 0, i32 12, !dbg !4691
  %114 = load i16, i16* %orderv142, align 2, !dbg !4691
  %conv143 = sext i16 %114 to i32, !dbg !4690
  %sub144 = sub nsw i32 %conv143, 1, !dbg !4692
  store i32 %sub144, i32* %cycl, align 4, !dbg !4693
  br label %if.end146, !dbg !4694

if.else145:                                       ; preds = %cond.end123
  store i32 0, i32* %cycl, align 4, !dbg !4695
  br label %if.end146

if.end146:                                        ; preds = %if.else145, %if.then141
  %115 = load float, float* %vstart, align 4, !dbg !4696
  store float %115, float* %v, align 4, !dbg !4697
  %116 = load float*, float** %basisv, align 8, !dbg !4698
  store float* %116, float** %basis, align 8, !dbg !4699
  %117 = load i32, i32* %totv, align 4, !dbg !4700
  store i32 %117, i32* %curv, align 4, !dbg !4701
  br label %while.cond147, !dbg !4702

while.cond147:                                    ; preds = %cond.end170, %if.end146
  %118 = load i32, i32* %curv, align 4, !dbg !4703
  %dec148 = add nsw i32 %118, -1, !dbg !4703
  store i32 %dec148, i32* %curv, align 4, !dbg !4703
  %tobool149 = icmp ne i32 %118, 0, !dbg !4702
  br i1 %tobool149, label %while.body150, label %while.end176, !dbg !4702

while.body150:                                    ; preds = %while.cond147
  %119 = load float, float* %v, align 4, !dbg !4704
  %120 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4706
  %orderv151 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %120, i32 0, i32 12, !dbg !4707
  %121 = load i16, i16* %orderv151, align 2, !dbg !4707
  %122 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4708
  %pntsv152 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %122, i32 0, i32 7, !dbg !4709
  %123 = load i32, i32* %pntsv152, align 4, !dbg !4709
  %124 = load i32, i32* %cycl, align 4, !dbg !4710
  %add153 = add nsw i32 %123, %124, !dbg !4711
  %125 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4712
  %knotsv154 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %125, i32 0, i32 16, !dbg !4713
  %126 = load float*, float** %knotsv154, align 8, !dbg !4713
  %127 = load float*, float** %basis, align 8, !dbg !4714
  %128 = load i32*, i32** %jstart, align 8, !dbg !4715
  %129 = load i32, i32* %curv, align 4, !dbg !4716
  %idx.ext = sext i32 %129 to i64, !dbg !4717
  %add.ptr = getelementptr inbounds i32, i32* %128, i64 %idx.ext, !dbg !4717
  %130 = load i32*, i32** %jend, align 8, !dbg !4718
  %131 = load i32, i32* %curv, align 4, !dbg !4719
  %idx.ext155 = sext i32 %131 to i64, !dbg !4720
  %add.ptr156 = getelementptr inbounds i32, i32* %130, i64 %idx.ext155, !dbg !4720
  call void @basisNurb(float %119, i16 signext %121, i32 %add153, float* %126, float* %127, i32* %add.ptr, i32* %add.ptr156), !dbg !4721
  %132 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4722
  %orderv157 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %132, i32 0, i32 12, !dbg !4722
  %133 = load i16, i16* %orderv157, align 2, !dbg !4722
  %conv158 = sext i16 %133 to i32, !dbg !4722
  %134 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4722
  %pntsv159 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %134, i32 0, i32 7, !dbg !4722
  %135 = load i32, i32* %pntsv159, align 4, !dbg !4722
  %add160 = add nsw i32 %conv158, %135, !dbg !4722
  %136 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4722
  %flagv161 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %136, i32 0, i32 14, !dbg !4722
  %137 = load i16, i16* %flagv161, align 2, !dbg !4722
  %conv162 = sext i16 %137 to i32, !dbg !4722
  %and163 = and i32 %conv162, 1, !dbg !4722
  %tobool164 = icmp ne i32 %and163, 0, !dbg !4722
  br i1 %tobool164, label %cond.true165, label %cond.false169, !dbg !4722

cond.true165:                                     ; preds = %while.body150
  %138 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4722
  %orderv166 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %138, i32 0, i32 12, !dbg !4722
  %139 = load i16, i16* %orderv166, align 2, !dbg !4722
  %conv167 = sext i16 %139 to i32, !dbg !4722
  %sub168 = sub nsw i32 %conv167, 1, !dbg !4722
  br label %cond.end170, !dbg !4722

cond.false169:                                    ; preds = %while.body150
  br label %cond.end170, !dbg !4722

cond.end170:                                      ; preds = %cond.false169, %cond.true165
  %cond171 = phi i32 [ %sub168, %cond.true165 ], [ 0, %cond.false169 ], !dbg !4722
  %add172 = add nsw i32 %add160, %cond171, !dbg !4722
  %140 = load float*, float** %basis, align 8, !dbg !4723
  %idx.ext173 = sext i32 %add172 to i64, !dbg !4723
  %add.ptr174 = getelementptr inbounds float, float* %140, i64 %idx.ext173, !dbg !4723
  store float* %add.ptr174, float** %basis, align 8, !dbg !4723
  %141 = load float, float* %vstep, align 4, !dbg !4724
  %142 = load float, float* %v, align 4, !dbg !4725
  %add175 = fadd float %142, %141, !dbg !4725
  store float %add175, float* %v, align 4, !dbg !4725
  br label %while.cond147, !dbg !4702, !llvm.loop !4726

while.end176:                                     ; preds = %while.cond147
  %143 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4728
  %flagu177 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %143, i32 0, i32 13, !dbg !4730
  %144 = load i16, i16* %flagu177, align 4, !dbg !4730
  %conv178 = sext i16 %144 to i32, !dbg !4728
  %and179 = and i32 %conv178, 1, !dbg !4731
  %tobool180 = icmp ne i32 %and179, 0, !dbg !4731
  br i1 %tobool180, label %if.then181, label %if.else185, !dbg !4732

if.then181:                                       ; preds = %while.end176
  %145 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4733
  %orderu182 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %145, i32 0, i32 11, !dbg !4734
  %146 = load i16, i16* %orderu182, align 8, !dbg !4734
  %conv183 = sext i16 %146 to i32, !dbg !4733
  %sub184 = sub nsw i32 %conv183, 1, !dbg !4735
  store i32 %sub184, i32* %cycl, align 4, !dbg !4736
  br label %if.end186, !dbg !4737

if.else185:                                       ; preds = %while.end176
  store i32 0, i32* %cycl, align 4, !dbg !4738
  br label %if.end186

if.end186:                                        ; preds = %if.else185, %if.then181
  %147 = load float*, float** %coord_array.addr, align 8, !dbg !4739
  store float* %147, float** %in, align 8, !dbg !4740
  %148 = load float, float* %ustart, align 4, !dbg !4741
  store float %148, float* %u, align 4, !dbg !4742
  %149 = load i32, i32* %totu, align 4, !dbg !4743
  store i32 %149, i32* %curu, align 4, !dbg !4744
  br label %while.cond187, !dbg !4745

while.cond187:                                    ; preds = %if.end364, %if.end186
  %150 = load i32, i32* %curu, align 4, !dbg !4746
  %dec188 = add nsw i32 %150, -1, !dbg !4746
  store i32 %dec188, i32* %curu, align 4, !dbg !4746
  %tobool189 = icmp ne i32 %150, 0, !dbg !4745
  br i1 %tobool189, label %while.body190, label %while.end365, !dbg !4745

while.body190:                                    ; preds = %while.cond187
  %151 = load float, float* %u, align 4, !dbg !4747
  %152 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4749
  %orderu191 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %152, i32 0, i32 11, !dbg !4750
  %153 = load i16, i16* %orderu191, align 8, !dbg !4750
  %154 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4751
  %pntsu192 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %154, i32 0, i32 6, !dbg !4752
  %155 = load i32, i32* %pntsu192, align 8, !dbg !4752
  %156 = load i32, i32* %cycl, align 4, !dbg !4753
  %add193 = add nsw i32 %155, %156, !dbg !4754
  %157 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4755
  %knotsu194 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %157, i32 0, i32 15, !dbg !4756
  %158 = load float*, float** %knotsu194, align 8, !dbg !4756
  %159 = load float*, float** %basisu, align 8, !dbg !4757
  call void @basisNurb(float %151, i16 signext %153, i32 %add193, float* %158, float* %159, i32* %istart, i32* %iend), !dbg !4758
  %160 = load float*, float** %basisv, align 8, !dbg !4759
  store float* %160, float** %basis, align 8, !dbg !4760
  %161 = load i32, i32* %totv, align 4, !dbg !4761
  store i32 %161, i32* %curv, align 4, !dbg !4762
  br label %while.cond195, !dbg !4763

while.cond195:                                    ; preds = %cond.end348, %while.body190
  %162 = load i32, i32* %curv, align 4, !dbg !4764
  %dec196 = add nsw i32 %162, -1, !dbg !4764
  store i32 %dec196, i32* %curv, align 4, !dbg !4764
  %tobool197 = icmp ne i32 %162, 0, !dbg !4763
  br i1 %tobool197, label %while.body198, label %while.end353, !dbg !4763

while.body198:                                    ; preds = %while.cond195
  %163 = load i32*, i32** %jstart, align 8, !dbg !4765
  %164 = load i32, i32* %curv, align 4, !dbg !4767
  %idxprom199 = sext i32 %164 to i64, !dbg !4765
  %arrayidx200 = getelementptr inbounds i32, i32* %163, i64 %idxprom199, !dbg !4765
  %165 = load i32, i32* %arrayidx200, align 4, !dbg !4765
  store i32 %165, i32* %jsta, align 4, !dbg !4768
  %166 = load i32*, i32** %jend, align 8, !dbg !4769
  %167 = load i32, i32* %curv, align 4, !dbg !4770
  %idxprom201 = sext i32 %167 to i64, !dbg !4769
  %arrayidx202 = getelementptr inbounds i32, i32* %166, i64 %idxprom201, !dbg !4769
  %168 = load i32, i32* %arrayidx202, align 4, !dbg !4769
  store i32 %168, i32* %jen, align 4, !dbg !4771
  store float 0.000000e+00, float* %sumdiv, align 4, !dbg !4772
  %169 = load float*, float** %sum, align 8, !dbg !4773
  store float* %169, float** %fp, align 8, !dbg !4774
  %170 = load i32, i32* %jsta, align 4, !dbg !4775
  store i32 %170, i32* %j, align 4, !dbg !4777
  br label %for.cond, !dbg !4778

for.cond:                                         ; preds = %for.inc260, %while.body198
  %171 = load i32, i32* %j, align 4, !dbg !4779
  %172 = load i32, i32* %jen, align 4, !dbg !4781
  %cmp203 = icmp sle i32 %171, %172, !dbg !4782
  br i1 %cmp203, label %for.body, label %for.end262, !dbg !4783

for.body:                                         ; preds = %for.cond
  %173 = load i32, i32* %j, align 4, !dbg !4784
  %174 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4787
  %pntsv205 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %174, i32 0, i32 7, !dbg !4788
  %175 = load i32, i32* %pntsv205, align 4, !dbg !4788
  %cmp206 = icmp sge i32 %173, %175, !dbg !4789
  br i1 %cmp206, label %if.then208, label %if.else211, !dbg !4790

if.then208:                                       ; preds = %for.body
  %176 = load i32, i32* %j, align 4, !dbg !4791
  %177 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4792
  %pntsv209 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %177, i32 0, i32 7, !dbg !4793
  %178 = load i32, i32* %pntsv209, align 4, !dbg !4793
  %sub210 = sub nsw i32 %176, %178, !dbg !4794
  store i32 %sub210, i32* %jofs, align 4, !dbg !4795
  br label %if.end212, !dbg !4796

if.else211:                                       ; preds = %for.body
  %179 = load i32, i32* %j, align 4, !dbg !4797
  store i32 %179, i32* %jofs, align 4, !dbg !4798
  br label %if.end212

if.end212:                                        ; preds = %if.else211, %if.then208
  %180 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4799
  %bp213 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %180, i32 0, i32 17, !dbg !4800
  %181 = load %struct.BPoint*, %struct.BPoint** %bp213, align 8, !dbg !4800
  %182 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4801
  %pntsu214 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %182, i32 0, i32 6, !dbg !4802
  %183 = load i32, i32* %pntsu214, align 8, !dbg !4802
  %184 = load i32, i32* %jofs, align 4, !dbg !4803
  %mul215 = mul nsw i32 %183, %184, !dbg !4804
  %idx.ext216 = sext i32 %mul215 to i64, !dbg !4805
  %add.ptr217 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %181, i64 %idx.ext216, !dbg !4805
  %185 = load i32, i32* %istart, align 4, !dbg !4806
  %idx.ext218 = sext i32 %185 to i64, !dbg !4807
  %add.ptr219 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr217, i64 %idx.ext218, !dbg !4807
  %add.ptr220 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr219, i64 -1, !dbg !4808
  store %struct.BPoint* %add.ptr220, %struct.BPoint** %bp, align 8, !dbg !4809
  %186 = load i32, i32* %istart, align 4, !dbg !4810
  store i32 %186, i32* %i, align 4, !dbg !4812
  br label %for.cond221, !dbg !4813

for.cond221:                                      ; preds = %for.inc, %if.end212
  %187 = load i32, i32* %i, align 4, !dbg !4814
  %188 = load i32, i32* %iend, align 4, !dbg !4816
  %cmp222 = icmp sle i32 %187, %188, !dbg !4817
  br i1 %cmp222, label %for.body224, label %for.end, !dbg !4818

for.body224:                                      ; preds = %for.cond221
  %189 = load i32, i32* %i, align 4, !dbg !4819
  %190 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4822
  %pntsu225 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %190, i32 0, i32 6, !dbg !4823
  %191 = load i32, i32* %pntsu225, align 8, !dbg !4823
  %cmp226 = icmp sge i32 %189, %191, !dbg !4824
  br i1 %cmp226, label %if.then228, label %if.else238, !dbg !4825

if.then228:                                       ; preds = %for.body224
  %192 = load i32, i32* %i, align 4, !dbg !4826
  %193 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4828
  %pntsu229 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %193, i32 0, i32 6, !dbg !4829
  %194 = load i32, i32* %pntsu229, align 8, !dbg !4829
  %sub230 = sub nsw i32 %192, %194, !dbg !4830
  store i32 %sub230, i32* %iofs, align 4, !dbg !4831
  %195 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4832
  %bp231 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %195, i32 0, i32 17, !dbg !4833
  %196 = load %struct.BPoint*, %struct.BPoint** %bp231, align 8, !dbg !4833
  %197 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4834
  %pntsu232 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %197, i32 0, i32 6, !dbg !4835
  %198 = load i32, i32* %pntsu232, align 8, !dbg !4835
  %199 = load i32, i32* %jofs, align 4, !dbg !4836
  %mul233 = mul nsw i32 %198, %199, !dbg !4837
  %idx.ext234 = sext i32 %mul233 to i64, !dbg !4838
  %add.ptr235 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %196, i64 %idx.ext234, !dbg !4838
  %200 = load i32, i32* %iofs, align 4, !dbg !4839
  %idx.ext236 = sext i32 %200 to i64, !dbg !4840
  %add.ptr237 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr235, i64 %idx.ext236, !dbg !4840
  store %struct.BPoint* %add.ptr237, %struct.BPoint** %bp, align 8, !dbg !4841
  br label %if.end240, !dbg !4842

if.else238:                                       ; preds = %for.body224
  %201 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !4843
  %incdec.ptr239 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %201, i32 1, !dbg !4843
  store %struct.BPoint* %incdec.ptr239, %struct.BPoint** %bp, align 8, !dbg !4843
  br label %if.end240

if.end240:                                        ; preds = %if.else238, %if.then228
  %202 = load i32, i32* %ratcomp, align 4, !dbg !4844
  %tobool241 = icmp ne i32 %202, 0, !dbg !4844
  br i1 %tobool241, label %if.then242, label %if.else252, !dbg !4846

if.then242:                                       ; preds = %if.end240
  %203 = load float*, float** %basisu, align 8, !dbg !4847
  %204 = load i32, i32* %i, align 4, !dbg !4849
  %idxprom243 = sext i32 %204 to i64, !dbg !4847
  %arrayidx244 = getelementptr inbounds float, float* %203, i64 %idxprom243, !dbg !4847
  %205 = load float, float* %arrayidx244, align 4, !dbg !4847
  %206 = load float*, float** %basis, align 8, !dbg !4850
  %207 = load i32, i32* %j, align 4, !dbg !4851
  %idxprom245 = sext i32 %207 to i64, !dbg !4850
  %arrayidx246 = getelementptr inbounds float, float* %206, i64 %idxprom245, !dbg !4850
  %208 = load float, float* %arrayidx246, align 4, !dbg !4850
  %mul247 = fmul float %205, %208, !dbg !4852
  %209 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !4853
  %vec248 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %209, i32 0, i32 0, !dbg !4854
  %arrayidx249 = getelementptr inbounds [4 x float], [4 x float]* %vec248, i64 0, i64 3, !dbg !4853
  %210 = load float, float* %arrayidx249, align 4, !dbg !4853
  %mul250 = fmul float %mul247, %210, !dbg !4855
  %211 = load float*, float** %fp, align 8, !dbg !4856
  store float %mul250, float* %211, align 4, !dbg !4857
  %212 = load float*, float** %fp, align 8, !dbg !4858
  %213 = load float, float* %212, align 4, !dbg !4859
  %214 = load float, float* %sumdiv, align 4, !dbg !4860
  %add251 = fadd float %214, %213, !dbg !4860
  store float %add251, float* %sumdiv, align 4, !dbg !4860
  br label %if.end258, !dbg !4861

if.else252:                                       ; preds = %if.end240
  %215 = load float*, float** %basisu, align 8, !dbg !4862
  %216 = load i32, i32* %i, align 4, !dbg !4863
  %idxprom253 = sext i32 %216 to i64, !dbg !4862
  %arrayidx254 = getelementptr inbounds float, float* %215, i64 %idxprom253, !dbg !4862
  %217 = load float, float* %arrayidx254, align 4, !dbg !4862
  %218 = load float*, float** %basis, align 8, !dbg !4864
  %219 = load i32, i32* %j, align 4, !dbg !4865
  %idxprom255 = sext i32 %219 to i64, !dbg !4864
  %arrayidx256 = getelementptr inbounds float, float* %218, i64 %idxprom255, !dbg !4864
  %220 = load float, float* %arrayidx256, align 4, !dbg !4864
  %mul257 = fmul float %217, %220, !dbg !4866
  %221 = load float*, float** %fp, align 8, !dbg !4867
  store float %mul257, float* %221, align 4, !dbg !4868
  br label %if.end258

if.end258:                                        ; preds = %if.else252, %if.then242
  br label %for.inc, !dbg !4869

for.inc:                                          ; preds = %if.end258
  %222 = load i32, i32* %i, align 4, !dbg !4870
  %inc = add nsw i32 %222, 1, !dbg !4870
  store i32 %inc, i32* %i, align 4, !dbg !4870
  %223 = load float*, float** %fp, align 8, !dbg !4871
  %incdec.ptr259 = getelementptr inbounds float, float* %223, i32 1, !dbg !4871
  store float* %incdec.ptr259, float** %fp, align 8, !dbg !4871
  br label %for.cond221, !dbg !4872, !llvm.loop !4873

for.end:                                          ; preds = %for.cond221
  br label %for.inc260, !dbg !4875

for.inc260:                                       ; preds = %for.end
  %224 = load i32, i32* %j, align 4, !dbg !4876
  %inc261 = add nsw i32 %224, 1, !dbg !4876
  store i32 %inc261, i32* %j, align 4, !dbg !4876
  br label %for.cond, !dbg !4877, !llvm.loop !4878

for.end262:                                       ; preds = %for.cond
  %225 = load i32, i32* %ratcomp, align 4, !dbg !4880
  %tobool263 = icmp ne i32 %225, 0, !dbg !4880
  br i1 %tobool263, label %if.then264, label %if.end281, !dbg !4882

if.then264:                                       ; preds = %for.end262
  %226 = load float*, float** %sum, align 8, !dbg !4883
  store float* %226, float** %fp, align 8, !dbg !4885
  %227 = load i32, i32* %jsta, align 4, !dbg !4886
  store i32 %227, i32* %j, align 4, !dbg !4888
  br label %for.cond265, !dbg !4889

for.cond265:                                      ; preds = %for.inc278, %if.then264
  %228 = load i32, i32* %j, align 4, !dbg !4890
  %229 = load i32, i32* %jen, align 4, !dbg !4892
  %cmp266 = icmp sle i32 %228, %229, !dbg !4893
  br i1 %cmp266, label %for.body268, label %for.end280, !dbg !4894

for.body268:                                      ; preds = %for.cond265
  %230 = load i32, i32* %istart, align 4, !dbg !4895
  store i32 %230, i32* %i, align 4, !dbg !4898
  br label %for.cond269, !dbg !4899

for.cond269:                                      ; preds = %for.inc274, %for.body268
  %231 = load i32, i32* %i, align 4, !dbg !4900
  %232 = load i32, i32* %iend, align 4, !dbg !4902
  %cmp270 = icmp sle i32 %231, %232, !dbg !4903
  br i1 %cmp270, label %for.body272, label %for.end277, !dbg !4904

for.body272:                                      ; preds = %for.cond269
  %233 = load float, float* %sumdiv, align 4, !dbg !4905
  %234 = load float*, float** %fp, align 8, !dbg !4907
  %235 = load float, float* %234, align 4, !dbg !4908
  %div273 = fdiv float %235, %233, !dbg !4908
  store float %div273, float* %234, align 4, !dbg !4908
  br label %for.inc274, !dbg !4909

for.inc274:                                       ; preds = %for.body272
  %236 = load i32, i32* %i, align 4, !dbg !4910
  %inc275 = add nsw i32 %236, 1, !dbg !4910
  store i32 %inc275, i32* %i, align 4, !dbg !4910
  %237 = load float*, float** %fp, align 8, !dbg !4911
  %incdec.ptr276 = getelementptr inbounds float, float* %237, i32 1, !dbg !4911
  store float* %incdec.ptr276, float** %fp, align 8, !dbg !4911
  br label %for.cond269, !dbg !4912, !llvm.loop !4913

for.end277:                                       ; preds = %for.cond269
  br label %for.inc278, !dbg !4915

for.inc278:                                       ; preds = %for.end277
  %238 = load i32, i32* %j, align 4, !dbg !4916
  %inc279 = add nsw i32 %238, 1, !dbg !4916
  store i32 %inc279, i32* %j, align 4, !dbg !4916
  br label %for.cond265, !dbg !4917, !llvm.loop !4918

for.end280:                                       ; preds = %for.cond265
  br label %if.end281, !dbg !4920

if.end281:                                        ; preds = %for.end280, %for.end262
  %239 = load float*, float** %in, align 8, !dbg !4921
  call void @zero_v3(float* %239), !dbg !4922
  %240 = load float*, float** %sum, align 8, !dbg !4923
  store float* %240, float** %fp, align 8, !dbg !4924
  %241 = load i32, i32* %jsta, align 4, !dbg !4925
  store i32 %241, i32* %j, align 4, !dbg !4927
  br label %for.cond282, !dbg !4928

for.cond282:                                      ; preds = %for.inc331, %if.end281
  %242 = load i32, i32* %j, align 4, !dbg !4929
  %243 = load i32, i32* %jen, align 4, !dbg !4931
  %cmp283 = icmp sle i32 %242, %243, !dbg !4932
  br i1 %cmp283, label %for.body285, label %for.end333, !dbg !4933

for.body285:                                      ; preds = %for.cond282
  %244 = load i32, i32* %j, align 4, !dbg !4934
  %245 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4937
  %pntsv286 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %245, i32 0, i32 7, !dbg !4938
  %246 = load i32, i32* %pntsv286, align 4, !dbg !4938
  %cmp287 = icmp sge i32 %244, %246, !dbg !4939
  br i1 %cmp287, label %if.then289, label %if.else292, !dbg !4940

if.then289:                                       ; preds = %for.body285
  %247 = load i32, i32* %j, align 4, !dbg !4941
  %248 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4942
  %pntsv290 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %248, i32 0, i32 7, !dbg !4943
  %249 = load i32, i32* %pntsv290, align 4, !dbg !4943
  %sub291 = sub nsw i32 %247, %249, !dbg !4944
  store i32 %sub291, i32* %jofs, align 4, !dbg !4945
  br label %if.end293, !dbg !4946

if.else292:                                       ; preds = %for.body285
  %250 = load i32, i32* %j, align 4, !dbg !4947
  store i32 %250, i32* %jofs, align 4, !dbg !4948
  br label %if.end293

if.end293:                                        ; preds = %if.else292, %if.then289
  %251 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4949
  %bp294 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %251, i32 0, i32 17, !dbg !4950
  %252 = load %struct.BPoint*, %struct.BPoint** %bp294, align 8, !dbg !4950
  %253 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4951
  %pntsu295 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %253, i32 0, i32 6, !dbg !4952
  %254 = load i32, i32* %pntsu295, align 8, !dbg !4952
  %255 = load i32, i32* %jofs, align 4, !dbg !4953
  %mul296 = mul nsw i32 %254, %255, !dbg !4954
  %idx.ext297 = sext i32 %mul296 to i64, !dbg !4955
  %add.ptr298 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %252, i64 %idx.ext297, !dbg !4955
  %256 = load i32, i32* %istart, align 4, !dbg !4956
  %idx.ext299 = sext i32 %256 to i64, !dbg !4957
  %add.ptr300 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr298, i64 %idx.ext299, !dbg !4957
  %add.ptr301 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr300, i64 -1, !dbg !4958
  store %struct.BPoint* %add.ptr301, %struct.BPoint** %bp, align 8, !dbg !4959
  %257 = load i32, i32* %istart, align 4, !dbg !4960
  store i32 %257, i32* %i, align 4, !dbg !4962
  br label %for.cond302, !dbg !4963

for.cond302:                                      ; preds = %for.inc327, %if.end293
  %258 = load i32, i32* %i, align 4, !dbg !4964
  %259 = load i32, i32* %iend, align 4, !dbg !4966
  %cmp303 = icmp sle i32 %258, %259, !dbg !4967
  br i1 %cmp303, label %for.body305, label %for.end330, !dbg !4968

for.body305:                                      ; preds = %for.cond302
  %260 = load i32, i32* %i, align 4, !dbg !4969
  %261 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4972
  %pntsu306 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %261, i32 0, i32 6, !dbg !4973
  %262 = load i32, i32* %pntsu306, align 8, !dbg !4973
  %cmp307 = icmp sge i32 %260, %262, !dbg !4974
  br i1 %cmp307, label %if.then309, label %if.else319, !dbg !4975

if.then309:                                       ; preds = %for.body305
  %263 = load i32, i32* %i, align 4, !dbg !4976
  %264 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4978
  %pntsu310 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %264, i32 0, i32 6, !dbg !4979
  %265 = load i32, i32* %pntsu310, align 8, !dbg !4979
  %sub311 = sub nsw i32 %263, %265, !dbg !4980
  store i32 %sub311, i32* %iofs, align 4, !dbg !4981
  %266 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4982
  %bp312 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %266, i32 0, i32 17, !dbg !4983
  %267 = load %struct.BPoint*, %struct.BPoint** %bp312, align 8, !dbg !4983
  %268 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !4984
  %pntsu313 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %268, i32 0, i32 6, !dbg !4985
  %269 = load i32, i32* %pntsu313, align 8, !dbg !4985
  %270 = load i32, i32* %jofs, align 4, !dbg !4986
  %mul314 = mul nsw i32 %269, %270, !dbg !4987
  %idx.ext315 = sext i32 %mul314 to i64, !dbg !4988
  %add.ptr316 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %267, i64 %idx.ext315, !dbg !4988
  %271 = load i32, i32* %iofs, align 4, !dbg !4989
  %idx.ext317 = sext i32 %271 to i64, !dbg !4990
  %add.ptr318 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr316, i64 %idx.ext317, !dbg !4990
  store %struct.BPoint* %add.ptr318, %struct.BPoint** %bp, align 8, !dbg !4991
  br label %if.end321, !dbg !4992

if.else319:                                       ; preds = %for.body305
  %272 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !4993
  %incdec.ptr320 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %272, i32 1, !dbg !4993
  store %struct.BPoint* %incdec.ptr320, %struct.BPoint** %bp, align 8, !dbg !4993
  br label %if.end321

if.end321:                                        ; preds = %if.else319, %if.then309
  %273 = load float*, float** %fp, align 8, !dbg !4994
  %274 = load float, float* %273, align 4, !dbg !4996
  %cmp322 = fcmp une float %274, 0.000000e+00, !dbg !4997
  br i1 %cmp322, label %if.then324, label %if.end326, !dbg !4998

if.then324:                                       ; preds = %if.end321
  %275 = load float*, float** %in, align 8, !dbg !4999
  %276 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5001
  %vec325 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %276, i32 0, i32 0, !dbg !5002
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %vec325, i64 0, i64 0, !dbg !5001
  %277 = load float*, float** %fp, align 8, !dbg !5003
  %278 = load float, float* %277, align 4, !dbg !5004
  call void @madd_v3_v3fl(float* %275, float* %arraydecay, float %278), !dbg !5005
  br label %if.end326, !dbg !5006

if.end326:                                        ; preds = %if.then324, %if.end321
  br label %for.inc327, !dbg !5007

for.inc327:                                       ; preds = %if.end326
  %279 = load i32, i32* %i, align 4, !dbg !5008
  %inc328 = add nsw i32 %279, 1, !dbg !5008
  store i32 %inc328, i32* %i, align 4, !dbg !5008
  %280 = load float*, float** %fp, align 8, !dbg !5009
  %incdec.ptr329 = getelementptr inbounds float, float* %280, i32 1, !dbg !5009
  store float* %incdec.ptr329, float** %fp, align 8, !dbg !5009
  br label %for.cond302, !dbg !5010, !llvm.loop !5011

for.end330:                                       ; preds = %for.cond302
  br label %for.inc331, !dbg !5013

for.inc331:                                       ; preds = %for.end330
  %281 = load i32, i32* %j, align 4, !dbg !5014
  %inc332 = add nsw i32 %281, 1, !dbg !5014
  store i32 %inc332, i32* %j, align 4, !dbg !5014
  br label %for.cond282, !dbg !5015, !llvm.loop !5016

for.end333:                                       ; preds = %for.cond282
  %282 = load float*, float** %in, align 8, !dbg !5018
  %add.ptr334 = getelementptr inbounds float, float* %282, i64 3, !dbg !5018
  store float* %add.ptr334, float** %in, align 8, !dbg !5018
  %283 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5019
  %orderv335 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %283, i32 0, i32 12, !dbg !5019
  %284 = load i16, i16* %orderv335, align 2, !dbg !5019
  %conv336 = sext i16 %284 to i32, !dbg !5019
  %285 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5019
  %pntsv337 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %285, i32 0, i32 7, !dbg !5019
  %286 = load i32, i32* %pntsv337, align 4, !dbg !5019
  %add338 = add nsw i32 %conv336, %286, !dbg !5019
  %287 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5019
  %flagv339 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %287, i32 0, i32 14, !dbg !5019
  %288 = load i16, i16* %flagv339, align 2, !dbg !5019
  %conv340 = sext i16 %288 to i32, !dbg !5019
  %and341 = and i32 %conv340, 1, !dbg !5019
  %tobool342 = icmp ne i32 %and341, 0, !dbg !5019
  br i1 %tobool342, label %cond.true343, label %cond.false347, !dbg !5019

cond.true343:                                     ; preds = %for.end333
  %289 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5019
  %orderv344 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %289, i32 0, i32 12, !dbg !5019
  %290 = load i16, i16* %orderv344, align 2, !dbg !5019
  %conv345 = sext i16 %290 to i32, !dbg !5019
  %sub346 = sub nsw i32 %conv345, 1, !dbg !5019
  br label %cond.end348, !dbg !5019

cond.false347:                                    ; preds = %for.end333
  br label %cond.end348, !dbg !5019

cond.end348:                                      ; preds = %cond.false347, %cond.true343
  %cond349 = phi i32 [ %sub346, %cond.true343 ], [ 0, %cond.false347 ], !dbg !5019
  %add350 = add nsw i32 %add338, %cond349, !dbg !5019
  %291 = load float*, float** %basis, align 8, !dbg !5020
  %idx.ext351 = sext i32 %add350 to i64, !dbg !5020
  %add.ptr352 = getelementptr inbounds float, float* %291, i64 %idx.ext351, !dbg !5020
  store float* %add.ptr352, float** %basis, align 8, !dbg !5020
  br label %while.cond195, !dbg !4763, !llvm.loop !5021

while.end353:                                     ; preds = %while.cond195
  %292 = load float, float* %ustep, align 4, !dbg !5023
  %293 = load float, float* %u, align 4, !dbg !5024
  %add354 = fadd float %293, %292, !dbg !5024
  store float %add354, float* %u, align 4, !dbg !5024
  %294 = load i32, i32* %rowstride.addr, align 4, !dbg !5025
  %cmp355 = icmp ne i32 %294, 0, !dbg !5027
  br i1 %cmp355, label %if.then357, label %if.end364, !dbg !5028

if.then357:                                       ; preds = %while.end353
  %295 = load float*, float** %in, align 8, !dbg !5029
  %296 = bitcast float* %295 to i8*, !dbg !5030
  %297 = load i32, i32* %rowstride.addr, align 4, !dbg !5031
  %conv358 = sext i32 %297 to i64, !dbg !5031
  %298 = load i32, i32* %totv, align 4, !dbg !5032
  %mul359 = mul nsw i32 3, %298, !dbg !5033
  %conv360 = sext i32 %mul359 to i64, !dbg !5034
  %mul361 = mul i64 %conv360, 4, !dbg !5035
  %sub362 = sub i64 %conv358, %mul361, !dbg !5036
  %add.ptr363 = getelementptr inbounds i8, i8* %296, i64 %sub362, !dbg !5037
  %299 = bitcast i8* %add.ptr363 to float*, !dbg !5038
  store float* %299, float** %in, align 8, !dbg !5039
  br label %if.end364, !dbg !5040

if.end364:                                        ; preds = %if.then357, %while.end353
  br label %while.cond187, !dbg !4745, !llvm.loop !5041

while.end365:                                     ; preds = %while.cond187
  %300 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5043
  %301 = load float*, float** %sum, align 8, !dbg !5044
  %302 = bitcast float* %301 to i8*, !dbg !5044
  call void %300(i8* %302), !dbg !5043
  %303 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5045
  %304 = load float*, float** %basisu, align 8, !dbg !5046
  %305 = bitcast float* %304 to i8*, !dbg !5046
  call void %303(i8* %305), !dbg !5045
  %306 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5047
  %307 = load float*, float** %basisv, align 8, !dbg !5048
  %308 = bitcast float* %307 to i8*, !dbg !5048
  call void %306(i8* %308), !dbg !5047
  %309 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5049
  %310 = load i32*, i32** %jstart, align 8, !dbg !5050
  %311 = bitcast i32* %310 to i8*, !dbg !5050
  call void %309(i8* %311), !dbg !5049
  %312 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5051
  %313 = load i32*, i32** %jend, align 8, !dbg !5052
  %314 = bitcast i32* %313 to i8*, !dbg !5052
  call void %312(i8* %314), !dbg !5051
  br label %return, !dbg !5053

return:                                           ; preds = %while.end365, %if.then21, %if.then16, %if.then12, %if.then6, %if.then
  ret void, !dbg !5053
}

; Function Attrs: noinline nounwind uwtable
define internal void @basisNurb(float %t, i16 signext %order, i32 %pnts, float* %knots, float* %basis, i32* %start, i32* %end) #0 !dbg !5054 {
entry:
  %t.addr = alloca float, align 4
  %order.addr = alloca i16, align 2
  %pnts.addr = alloca i32, align 4
  %knots.addr = alloca float*, align 8
  %basis.addr = alloca float*, align 8
  %start.addr = alloca i32*, align 8
  %end.addr = alloca i32*, align 8
  %d = alloca float, align 4
  %e = alloca float, align 4
  %i = alloca i32, align 4
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %j = alloca i32, align 4
  %orderpluspnts = alloca i32, align 4
  %opp2 = alloca i32, align 4
  %o2 = alloca i32, align 4
  store float %t, float* %t.addr, align 4
  call void @llvm.dbg.declare(metadata float* %t.addr, metadata !5057, metadata !DIExpression()), !dbg !5058
  store i16 %order, i16* %order.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %order.addr, metadata !5059, metadata !DIExpression()), !dbg !5060
  store i32 %pnts, i32* %pnts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pnts.addr, metadata !5061, metadata !DIExpression()), !dbg !5062
  store float* %knots, float** %knots.addr, align 8
  call void @llvm.dbg.declare(metadata float** %knots.addr, metadata !5063, metadata !DIExpression()), !dbg !5064
  store float* %basis, float** %basis.addr, align 8
  call void @llvm.dbg.declare(metadata float** %basis.addr, metadata !5065, metadata !DIExpression()), !dbg !5066
  store i32* %start, i32** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %start.addr, metadata !5067, metadata !DIExpression()), !dbg !5068
  store i32* %end, i32** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %end.addr, metadata !5069, metadata !DIExpression()), !dbg !5070
  call void @llvm.dbg.declare(metadata float* %d, metadata !5071, metadata !DIExpression()), !dbg !5072
  call void @llvm.dbg.declare(metadata float* %e, metadata !5073, metadata !DIExpression()), !dbg !5074
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5075, metadata !DIExpression()), !dbg !5076
  call void @llvm.dbg.declare(metadata i32* %i1, metadata !5077, metadata !DIExpression()), !dbg !5078
  store i32 0, i32* %i1, align 4, !dbg !5078
  call void @llvm.dbg.declare(metadata i32* %i2, metadata !5079, metadata !DIExpression()), !dbg !5080
  store i32 0, i32* %i2, align 4, !dbg !5080
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5081, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.declare(metadata i32* %orderpluspnts, metadata !5083, metadata !DIExpression()), !dbg !5084
  call void @llvm.dbg.declare(metadata i32* %opp2, metadata !5085, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.declare(metadata i32* %o2, metadata !5087, metadata !DIExpression()), !dbg !5088
  %0 = load i16, i16* %order.addr, align 2, !dbg !5089
  %conv = sext i16 %0 to i32, !dbg !5089
  %1 = load i32, i32* %pnts.addr, align 4, !dbg !5090
  %add = add nsw i32 %conv, %1, !dbg !5091
  store i32 %add, i32* %orderpluspnts, align 4, !dbg !5092
  %2 = load i32, i32* %orderpluspnts, align 4, !dbg !5093
  %sub = sub nsw i32 %2, 1, !dbg !5094
  store i32 %sub, i32* %opp2, align 4, !dbg !5095
  %3 = load float, float* %t.addr, align 4, !dbg !5096
  %4 = load float*, float** %knots.addr, align 8, !dbg !5098
  %arrayidx = getelementptr inbounds float, float* %4, i64 0, !dbg !5098
  %5 = load float, float* %arrayidx, align 4, !dbg !5098
  %cmp = fcmp olt float %3, %5, !dbg !5099
  br i1 %cmp, label %if.then, label %if.else, !dbg !5100

if.then:                                          ; preds = %entry
  %6 = load float*, float** %knots.addr, align 8, !dbg !5101
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 0, !dbg !5101
  %7 = load float, float* %arrayidx2, align 4, !dbg !5101
  store float %7, float* %t.addr, align 4, !dbg !5102
  br label %if.end9, !dbg !5103

if.else:                                          ; preds = %entry
  %8 = load float, float* %t.addr, align 4, !dbg !5104
  %9 = load float*, float** %knots.addr, align 8, !dbg !5106
  %10 = load i32, i32* %opp2, align 4, !dbg !5107
  %idxprom = sext i32 %10 to i64, !dbg !5106
  %arrayidx3 = getelementptr inbounds float, float* %9, i64 %idxprom, !dbg !5106
  %11 = load float, float* %arrayidx3, align 4, !dbg !5106
  %cmp4 = fcmp ogt float %8, %11, !dbg !5108
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !5109

if.then6:                                         ; preds = %if.else
  %12 = load float*, float** %knots.addr, align 8, !dbg !5110
  %13 = load i32, i32* %opp2, align 4, !dbg !5111
  %idxprom7 = sext i32 %13 to i64, !dbg !5110
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 %idxprom7, !dbg !5110
  %14 = load float, float* %arrayidx8, align 4, !dbg !5110
  store float %14, float* %t.addr, align 4, !dbg !5112
  br label %if.end, !dbg !5113

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %15 = load i16, i16* %order.addr, align 2, !dbg !5114
  %conv10 = sext i16 %15 to i32, !dbg !5114
  %add11 = add nsw i32 %conv10, 1, !dbg !5115
  store i32 %add11, i32* %o2, align 4, !dbg !5116
  store i32 0, i32* %i, align 4, !dbg !5117
  br label %for.cond, !dbg !5119

for.cond:                                         ; preds = %for.inc, %if.end9
  %16 = load i32, i32* %i, align 4, !dbg !5120
  %17 = load i32, i32* %opp2, align 4, !dbg !5122
  %cmp12 = icmp slt i32 %16, %17, !dbg !5123
  br i1 %cmp12, label %for.body, label %for.end, !dbg !5124

for.body:                                         ; preds = %for.cond
  %18 = load float*, float** %knots.addr, align 8, !dbg !5125
  %19 = load i32, i32* %i, align 4, !dbg !5128
  %idxprom14 = sext i32 %19 to i64, !dbg !5125
  %arrayidx15 = getelementptr inbounds float, float* %18, i64 %idxprom14, !dbg !5125
  %20 = load float, float* %arrayidx15, align 4, !dbg !5125
  %21 = load float*, float** %knots.addr, align 8, !dbg !5129
  %22 = load i32, i32* %i, align 4, !dbg !5130
  %add16 = add nsw i32 %22, 1, !dbg !5131
  %idxprom17 = sext i32 %add16 to i64, !dbg !5129
  %arrayidx18 = getelementptr inbounds float, float* %21, i64 %idxprom17, !dbg !5129
  %23 = load float, float* %arrayidx18, align 4, !dbg !5129
  %cmp19 = fcmp une float %20, %23, !dbg !5132
  br i1 %cmp19, label %land.lhs.true, label %if.else44, !dbg !5133

land.lhs.true:                                    ; preds = %for.body
  %24 = load float, float* %t.addr, align 4, !dbg !5134
  %25 = load float*, float** %knots.addr, align 8, !dbg !5135
  %26 = load i32, i32* %i, align 4, !dbg !5136
  %idxprom21 = sext i32 %26 to i64, !dbg !5135
  %arrayidx22 = getelementptr inbounds float, float* %25, i64 %idxprom21, !dbg !5135
  %27 = load float, float* %arrayidx22, align 4, !dbg !5135
  %cmp23 = fcmp oge float %24, %27, !dbg !5137
  br i1 %cmp23, label %land.lhs.true25, label %if.else44, !dbg !5138

land.lhs.true25:                                  ; preds = %land.lhs.true
  %28 = load float, float* %t.addr, align 4, !dbg !5139
  %29 = load float*, float** %knots.addr, align 8, !dbg !5140
  %30 = load i32, i32* %i, align 4, !dbg !5141
  %add26 = add nsw i32 %30, 1, !dbg !5142
  %idxprom27 = sext i32 %add26 to i64, !dbg !5140
  %arrayidx28 = getelementptr inbounds float, float* %29, i64 %idxprom27, !dbg !5140
  %31 = load float, float* %arrayidx28, align 4, !dbg !5140
  %cmp29 = fcmp ole float %28, %31, !dbg !5143
  br i1 %cmp29, label %if.then31, label %if.else44, !dbg !5144

if.then31:                                        ; preds = %land.lhs.true25
  %32 = load float*, float** %basis.addr, align 8, !dbg !5145
  %33 = load i32, i32* %i, align 4, !dbg !5147
  %idxprom32 = sext i32 %33 to i64, !dbg !5145
  %arrayidx33 = getelementptr inbounds float, float* %32, i64 %idxprom32, !dbg !5145
  store float 1.000000e+00, float* %arrayidx33, align 4, !dbg !5148
  %34 = load i32, i32* %i, align 4, !dbg !5149
  %35 = load i32, i32* %o2, align 4, !dbg !5150
  %sub34 = sub nsw i32 %34, %35, !dbg !5151
  store i32 %sub34, i32* %i1, align 4, !dbg !5152
  %36 = load i32, i32* %i1, align 4, !dbg !5153
  %cmp35 = icmp slt i32 %36, 0, !dbg !5155
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !5156

if.then37:                                        ; preds = %if.then31
  store i32 0, i32* %i1, align 4, !dbg !5157
  br label %if.end38, !dbg !5158

if.end38:                                         ; preds = %if.then37, %if.then31
  %37 = load i32, i32* %i, align 4, !dbg !5159
  store i32 %37, i32* %i2, align 4, !dbg !5160
  %38 = load i32, i32* %i, align 4, !dbg !5161
  %inc = add nsw i32 %38, 1, !dbg !5161
  store i32 %inc, i32* %i, align 4, !dbg !5161
  br label %while.cond, !dbg !5162

while.cond:                                       ; preds = %while.body, %if.end38
  %39 = load i32, i32* %i, align 4, !dbg !5163
  %40 = load i32, i32* %opp2, align 4, !dbg !5164
  %cmp39 = icmp slt i32 %39, %40, !dbg !5165
  br i1 %cmp39, label %while.body, label %while.end, !dbg !5162

while.body:                                       ; preds = %while.cond
  %41 = load float*, float** %basis.addr, align 8, !dbg !5166
  %42 = load i32, i32* %i, align 4, !dbg !5168
  %idxprom41 = sext i32 %42 to i64, !dbg !5166
  %arrayidx42 = getelementptr inbounds float, float* %41, i64 %idxprom41, !dbg !5166
  store float 0.000000e+00, float* %arrayidx42, align 4, !dbg !5169
  %43 = load i32, i32* %i, align 4, !dbg !5170
  %inc43 = add nsw i32 %43, 1, !dbg !5170
  store i32 %inc43, i32* %i, align 4, !dbg !5170
  br label %while.cond, !dbg !5162, !llvm.loop !5171

while.end:                                        ; preds = %while.cond
  br label %for.end, !dbg !5173

if.else44:                                        ; preds = %land.lhs.true25, %land.lhs.true, %for.body
  %44 = load float*, float** %basis.addr, align 8, !dbg !5174
  %45 = load i32, i32* %i, align 4, !dbg !5175
  %idxprom45 = sext i32 %45 to i64, !dbg !5174
  %arrayidx46 = getelementptr inbounds float, float* %44, i64 %idxprom45, !dbg !5174
  store float 0.000000e+00, float* %arrayidx46, align 4, !dbg !5176
  br label %if.end47

if.end47:                                         ; preds = %if.else44
  br label %for.inc, !dbg !5177

for.inc:                                          ; preds = %if.end47
  %46 = load i32, i32* %i, align 4, !dbg !5178
  %inc48 = add nsw i32 %46, 1, !dbg !5178
  store i32 %inc48, i32* %i, align 4, !dbg !5178
  br label %for.cond, !dbg !5179, !llvm.loop !5180

for.end:                                          ; preds = %while.end, %for.cond
  %47 = load float*, float** %basis.addr, align 8, !dbg !5182
  %48 = load i32, i32* %i, align 4, !dbg !5183
  %idxprom49 = sext i32 %48 to i64, !dbg !5182
  %arrayidx50 = getelementptr inbounds float, float* %47, i64 %idxprom49, !dbg !5182
  store float 0.000000e+00, float* %arrayidx50, align 4, !dbg !5184
  store i32 2, i32* %j, align 4, !dbg !5185
  br label %for.cond51, !dbg !5187

for.cond51:                                       ; preds = %for.inc115, %for.end
  %49 = load i32, i32* %j, align 4, !dbg !5188
  %50 = load i16, i16* %order.addr, align 2, !dbg !5190
  %conv52 = sext i16 %50 to i32, !dbg !5190
  %cmp53 = icmp sle i32 %49, %conv52, !dbg !5191
  br i1 %cmp53, label %for.body55, label %for.end117, !dbg !5192

for.body55:                                       ; preds = %for.cond51
  %51 = load i32, i32* %i2, align 4, !dbg !5193
  %52 = load i32, i32* %j, align 4, !dbg !5196
  %add56 = add nsw i32 %51, %52, !dbg !5197
  %53 = load i32, i32* %orderpluspnts, align 4, !dbg !5198
  %cmp57 = icmp sge i32 %add56, %53, !dbg !5199
  br i1 %cmp57, label %if.then59, label %if.end61, !dbg !5200

if.then59:                                        ; preds = %for.body55
  %54 = load i32, i32* %opp2, align 4, !dbg !5201
  %55 = load i32, i32* %j, align 4, !dbg !5202
  %sub60 = sub nsw i32 %54, %55, !dbg !5203
  store i32 %sub60, i32* %i2, align 4, !dbg !5204
  br label %if.end61, !dbg !5205

if.end61:                                         ; preds = %if.then59, %for.body55
  %56 = load i32, i32* %i1, align 4, !dbg !5206
  store i32 %56, i32* %i, align 4, !dbg !5208
  br label %for.cond62, !dbg !5209

for.cond62:                                       ; preds = %for.inc112, %if.end61
  %57 = load i32, i32* %i, align 4, !dbg !5210
  %58 = load i32, i32* %i2, align 4, !dbg !5212
  %cmp63 = icmp sle i32 %57, %58, !dbg !5213
  br i1 %cmp63, label %for.body65, label %for.end114, !dbg !5214

for.body65:                                       ; preds = %for.cond62
  %59 = load float*, float** %basis.addr, align 8, !dbg !5215
  %60 = load i32, i32* %i, align 4, !dbg !5218
  %idxprom66 = sext i32 %60 to i64, !dbg !5215
  %arrayidx67 = getelementptr inbounds float, float* %59, i64 %idxprom66, !dbg !5215
  %61 = load float, float* %arrayidx67, align 4, !dbg !5215
  %cmp68 = fcmp une float %61, 0.000000e+00, !dbg !5219
  br i1 %cmp68, label %if.then70, label %if.else83, !dbg !5220

if.then70:                                        ; preds = %for.body65
  %62 = load float, float* %t.addr, align 4, !dbg !5221
  %63 = load float*, float** %knots.addr, align 8, !dbg !5222
  %64 = load i32, i32* %i, align 4, !dbg !5223
  %idxprom71 = sext i32 %64 to i64, !dbg !5222
  %arrayidx72 = getelementptr inbounds float, float* %63, i64 %idxprom71, !dbg !5222
  %65 = load float, float* %arrayidx72, align 4, !dbg !5222
  %sub73 = fsub float %62, %65, !dbg !5224
  %66 = load float*, float** %basis.addr, align 8, !dbg !5225
  %67 = load i32, i32* %i, align 4, !dbg !5226
  %idxprom74 = sext i32 %67 to i64, !dbg !5225
  %arrayidx75 = getelementptr inbounds float, float* %66, i64 %idxprom74, !dbg !5225
  %68 = load float, float* %arrayidx75, align 4, !dbg !5225
  %mul = fmul float %sub73, %68, !dbg !5227
  %69 = load float*, float** %knots.addr, align 8, !dbg !5228
  %70 = load i32, i32* %i, align 4, !dbg !5229
  %71 = load i32, i32* %j, align 4, !dbg !5230
  %add76 = add nsw i32 %70, %71, !dbg !5231
  %sub77 = sub nsw i32 %add76, 1, !dbg !5232
  %idxprom78 = sext i32 %sub77 to i64, !dbg !5228
  %arrayidx79 = getelementptr inbounds float, float* %69, i64 %idxprom78, !dbg !5228
  %72 = load float, float* %arrayidx79, align 4, !dbg !5228
  %73 = load float*, float** %knots.addr, align 8, !dbg !5233
  %74 = load i32, i32* %i, align 4, !dbg !5234
  %idxprom80 = sext i32 %74 to i64, !dbg !5233
  %arrayidx81 = getelementptr inbounds float, float* %73, i64 %idxprom80, !dbg !5233
  %75 = load float, float* %arrayidx81, align 4, !dbg !5233
  %sub82 = fsub float %72, %75, !dbg !5235
  %div = fdiv float %mul, %sub82, !dbg !5236
  store float %div, float* %d, align 4, !dbg !5237
  br label %if.end84, !dbg !5238

if.else83:                                        ; preds = %for.body65
  store float 0.000000e+00, float* %d, align 4, !dbg !5239
  br label %if.end84

if.end84:                                         ; preds = %if.else83, %if.then70
  %76 = load float*, float** %basis.addr, align 8, !dbg !5240
  %77 = load i32, i32* %i, align 4, !dbg !5242
  %add85 = add nsw i32 %77, 1, !dbg !5243
  %idxprom86 = sext i32 %add85 to i64, !dbg !5240
  %arrayidx87 = getelementptr inbounds float, float* %76, i64 %idxprom86, !dbg !5240
  %78 = load float, float* %arrayidx87, align 4, !dbg !5240
  %cmp88 = fcmp une float %78, 0.000000e+00, !dbg !5244
  br i1 %cmp88, label %if.then90, label %if.else107, !dbg !5245

if.then90:                                        ; preds = %if.end84
  %79 = load float*, float** %knots.addr, align 8, !dbg !5246
  %80 = load i32, i32* %i, align 4, !dbg !5247
  %81 = load i32, i32* %j, align 4, !dbg !5248
  %add91 = add nsw i32 %80, %81, !dbg !5249
  %idxprom92 = sext i32 %add91 to i64, !dbg !5246
  %arrayidx93 = getelementptr inbounds float, float* %79, i64 %idxprom92, !dbg !5246
  %82 = load float, float* %arrayidx93, align 4, !dbg !5246
  %83 = load float, float* %t.addr, align 4, !dbg !5250
  %sub94 = fsub float %82, %83, !dbg !5251
  %84 = load float*, float** %basis.addr, align 8, !dbg !5252
  %85 = load i32, i32* %i, align 4, !dbg !5253
  %add95 = add nsw i32 %85, 1, !dbg !5254
  %idxprom96 = sext i32 %add95 to i64, !dbg !5252
  %arrayidx97 = getelementptr inbounds float, float* %84, i64 %idxprom96, !dbg !5252
  %86 = load float, float* %arrayidx97, align 4, !dbg !5252
  %mul98 = fmul float %sub94, %86, !dbg !5255
  %87 = load float*, float** %knots.addr, align 8, !dbg !5256
  %88 = load i32, i32* %i, align 4, !dbg !5257
  %89 = load i32, i32* %j, align 4, !dbg !5258
  %add99 = add nsw i32 %88, %89, !dbg !5259
  %idxprom100 = sext i32 %add99 to i64, !dbg !5256
  %arrayidx101 = getelementptr inbounds float, float* %87, i64 %idxprom100, !dbg !5256
  %90 = load float, float* %arrayidx101, align 4, !dbg !5256
  %91 = load float*, float** %knots.addr, align 8, !dbg !5260
  %92 = load i32, i32* %i, align 4, !dbg !5261
  %add102 = add nsw i32 %92, 1, !dbg !5262
  %idxprom103 = sext i32 %add102 to i64, !dbg !5260
  %arrayidx104 = getelementptr inbounds float, float* %91, i64 %idxprom103, !dbg !5260
  %93 = load float, float* %arrayidx104, align 4, !dbg !5260
  %sub105 = fsub float %90, %93, !dbg !5263
  %div106 = fdiv float %mul98, %sub105, !dbg !5264
  store float %div106, float* %e, align 4, !dbg !5265
  br label %if.end108, !dbg !5266

if.else107:                                       ; preds = %if.end84
  store float 0.000000e+00, float* %e, align 4, !dbg !5267
  br label %if.end108

if.end108:                                        ; preds = %if.else107, %if.then90
  %94 = load float, float* %d, align 4, !dbg !5268
  %95 = load float, float* %e, align 4, !dbg !5269
  %add109 = fadd float %94, %95, !dbg !5270
  %96 = load float*, float** %basis.addr, align 8, !dbg !5271
  %97 = load i32, i32* %i, align 4, !dbg !5272
  %idxprom110 = sext i32 %97 to i64, !dbg !5271
  %arrayidx111 = getelementptr inbounds float, float* %96, i64 %idxprom110, !dbg !5271
  store float %add109, float* %arrayidx111, align 4, !dbg !5273
  br label %for.inc112, !dbg !5274

for.inc112:                                       ; preds = %if.end108
  %98 = load i32, i32* %i, align 4, !dbg !5275
  %inc113 = add nsw i32 %98, 1, !dbg !5275
  store i32 %inc113, i32* %i, align 4, !dbg !5275
  br label %for.cond62, !dbg !5276, !llvm.loop !5277

for.end114:                                       ; preds = %for.cond62
  br label %for.inc115, !dbg !5279

for.inc115:                                       ; preds = %for.end114
  %99 = load i32, i32* %j, align 4, !dbg !5280
  %inc116 = add nsw i32 %99, 1, !dbg !5280
  store i32 %inc116, i32* %j, align 4, !dbg !5280
  br label %for.cond51, !dbg !5281, !llvm.loop !5282

for.end117:                                       ; preds = %for.cond51
  %100 = load i32*, i32** %start.addr, align 8, !dbg !5284
  store i32 1000, i32* %100, align 4, !dbg !5285
  %101 = load i32*, i32** %end.addr, align 8, !dbg !5286
  store i32 0, i32* %101, align 4, !dbg !5287
  %102 = load i32, i32* %i1, align 4, !dbg !5288
  store i32 %102, i32* %i, align 4, !dbg !5290
  br label %for.cond118, !dbg !5291

for.cond118:                                      ; preds = %for.inc132, %for.end117
  %103 = load i32, i32* %i, align 4, !dbg !5292
  %104 = load i32, i32* %i2, align 4, !dbg !5294
  %cmp119 = icmp sle i32 %103, %104, !dbg !5295
  br i1 %cmp119, label %for.body121, label %for.end134, !dbg !5296

for.body121:                                      ; preds = %for.cond118
  %105 = load float*, float** %basis.addr, align 8, !dbg !5297
  %106 = load i32, i32* %i, align 4, !dbg !5300
  %idxprom122 = sext i32 %106 to i64, !dbg !5297
  %arrayidx123 = getelementptr inbounds float, float* %105, i64 %idxprom122, !dbg !5297
  %107 = load float, float* %arrayidx123, align 4, !dbg !5297
  %cmp124 = fcmp ogt float %107, 0.000000e+00, !dbg !5301
  br i1 %cmp124, label %if.then126, label %if.end131, !dbg !5302

if.then126:                                       ; preds = %for.body121
  %108 = load i32, i32* %i, align 4, !dbg !5303
  %109 = load i32*, i32** %end.addr, align 8, !dbg !5305
  store i32 %108, i32* %109, align 4, !dbg !5306
  %110 = load i32*, i32** %start.addr, align 8, !dbg !5307
  %111 = load i32, i32* %110, align 4, !dbg !5309
  %cmp127 = icmp eq i32 %111, 1000, !dbg !5310
  br i1 %cmp127, label %if.then129, label %if.end130, !dbg !5311

if.then129:                                       ; preds = %if.then126
  %112 = load i32, i32* %i, align 4, !dbg !5312
  %113 = load i32*, i32** %start.addr, align 8, !dbg !5313
  store i32 %112, i32* %113, align 4, !dbg !5314
  br label %if.end130, !dbg !5315

if.end130:                                        ; preds = %if.then129, %if.then126
  br label %if.end131, !dbg !5316

if.end131:                                        ; preds = %if.end130, %for.body121
  br label %for.inc132, !dbg !5317

for.inc132:                                       ; preds = %if.end131
  %114 = load i32, i32* %i, align 4, !dbg !5318
  %inc133 = add nsw i32 %114, 1, !dbg !5318
  store i32 %inc133, i32* %i, align 4, !dbg !5318
  br label %for.cond118, !dbg !5319, !llvm.loop !5320

for.end134:                                       ; preds = %for.cond118
  ret void, !dbg !5322
}

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !5323 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5326, metadata !DIExpression()), !dbg !5327
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5328, metadata !DIExpression()), !dbg !5329
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !5330, metadata !DIExpression()), !dbg !5331
  %0 = load float*, float** %a.addr, align 8, !dbg !5332
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5332
  %1 = load float, float* %arrayidx, align 4, !dbg !5332
  %2 = load float, float* %f.addr, align 4, !dbg !5333
  %mul = fmul float %1, %2, !dbg !5334
  %3 = load float*, float** %r.addr, align 8, !dbg !5335
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !5335
  %4 = load float, float* %arrayidx1, align 4, !dbg !5336
  %add = fadd float %4, %mul, !dbg !5336
  store float %add, float* %arrayidx1, align 4, !dbg !5336
  %5 = load float*, float** %a.addr, align 8, !dbg !5337
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 1, !dbg !5337
  %6 = load float, float* %arrayidx2, align 4, !dbg !5337
  %7 = load float, float* %f.addr, align 4, !dbg !5338
  %mul3 = fmul float %6, %7, !dbg !5339
  %8 = load float*, float** %r.addr, align 8, !dbg !5340
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !5340
  %9 = load float, float* %arrayidx4, align 4, !dbg !5341
  %add5 = fadd float %9, %mul3, !dbg !5341
  store float %add5, float* %arrayidx4, align 4, !dbg !5341
  %10 = load float*, float** %a.addr, align 8, !dbg !5342
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !5342
  %11 = load float, float* %arrayidx6, align 4, !dbg !5342
  %12 = load float, float* %f.addr, align 4, !dbg !5343
  %mul7 = fmul float %11, %12, !dbg !5344
  %13 = load float*, float** %r.addr, align 8, !dbg !5345
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 2, !dbg !5345
  %14 = load float, float* %arrayidx8, align 4, !dbg !5346
  %add9 = fadd float %14, %mul7, !dbg !5346
  store float %add9, float* %arrayidx8, align 4, !dbg !5346
  ret void, !dbg !5347
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurb_makeCurve(%struct.Nurb* %nu, float* %coord_array, float* %tilt_array, float* %radius_array, float* %weight_array, i32 %resolu, i32 %stride) #0 !dbg !5348 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %coord_array.addr = alloca float*, align 8
  %tilt_array.addr = alloca float*, align 8
  %radius_array.addr = alloca float*, align 8
  %weight_array.addr = alloca float*, align 8
  %resolu.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %bp = alloca %struct.BPoint*, align 8
  %u = alloca float, align 4
  %ustart = alloca float, align 4
  %uend = alloca float, align 4
  %ustep = alloca float, align 4
  %sumdiv = alloca float, align 4
  %basisu = alloca float*, align 8
  %sum = alloca float*, align 8
  %fp = alloca float*, align 8
  %coord_fp = alloca float*, align 8
  %tilt_fp = alloca float*, align 8
  %radius_fp = alloca float*, align 8
  %weight_fp = alloca float*, align 8
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  %istart = alloca i32, align 4
  %iend = alloca i32, align 4
  %cycl = alloca i32, align 4
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !5351, metadata !DIExpression()), !dbg !5352
  store float* %coord_array, float** %coord_array.addr, align 8
  call void @llvm.dbg.declare(metadata float** %coord_array.addr, metadata !5353, metadata !DIExpression()), !dbg !5354
  store float* %tilt_array, float** %tilt_array.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tilt_array.addr, metadata !5355, metadata !DIExpression()), !dbg !5356
  store float* %radius_array, float** %radius_array.addr, align 8
  call void @llvm.dbg.declare(metadata float** %radius_array.addr, metadata !5357, metadata !DIExpression()), !dbg !5358
  store float* %weight_array, float** %weight_array.addr, align 8
  call void @llvm.dbg.declare(metadata float** %weight_array.addr, metadata !5359, metadata !DIExpression()), !dbg !5360
  store i32 %resolu, i32* %resolu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %resolu.addr, metadata !5361, metadata !DIExpression()), !dbg !5362
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !5363, metadata !DIExpression()), !dbg !5364
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !5365, metadata !DIExpression()), !dbg !5366
  call void @llvm.dbg.declare(metadata float* %u, metadata !5367, metadata !DIExpression()), !dbg !5368
  call void @llvm.dbg.declare(metadata float* %ustart, metadata !5369, metadata !DIExpression()), !dbg !5370
  call void @llvm.dbg.declare(metadata float* %uend, metadata !5371, metadata !DIExpression()), !dbg !5372
  call void @llvm.dbg.declare(metadata float* %ustep, metadata !5373, metadata !DIExpression()), !dbg !5374
  call void @llvm.dbg.declare(metadata float* %sumdiv, metadata !5375, metadata !DIExpression()), !dbg !5376
  call void @llvm.dbg.declare(metadata float** %basisu, metadata !5377, metadata !DIExpression()), !dbg !5378
  call void @llvm.dbg.declare(metadata float** %sum, metadata !5379, metadata !DIExpression()), !dbg !5380
  call void @llvm.dbg.declare(metadata float** %fp, metadata !5381, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.declare(metadata float** %coord_fp, metadata !5383, metadata !DIExpression()), !dbg !5384
  %0 = load float*, float** %coord_array.addr, align 8, !dbg !5385
  store float* %0, float** %coord_fp, align 8, !dbg !5384
  call void @llvm.dbg.declare(metadata float** %tilt_fp, metadata !5386, metadata !DIExpression()), !dbg !5387
  %1 = load float*, float** %tilt_array.addr, align 8, !dbg !5388
  store float* %1, float** %tilt_fp, align 8, !dbg !5387
  call void @llvm.dbg.declare(metadata float** %radius_fp, metadata !5389, metadata !DIExpression()), !dbg !5390
  %2 = load float*, float** %radius_array.addr, align 8, !dbg !5391
  store float* %2, float** %radius_fp, align 8, !dbg !5390
  call void @llvm.dbg.declare(metadata float** %weight_fp, metadata !5392, metadata !DIExpression()), !dbg !5393
  %3 = load float*, float** %weight_array.addr, align 8, !dbg !5394
  store float* %3, float** %weight_fp, align 8, !dbg !5393
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5395, metadata !DIExpression()), !dbg !5396
  call void @llvm.dbg.declare(metadata i32* %len, metadata !5397, metadata !DIExpression()), !dbg !5398
  call void @llvm.dbg.declare(metadata i32* %istart, metadata !5399, metadata !DIExpression()), !dbg !5400
  call void @llvm.dbg.declare(metadata i32* %iend, metadata !5401, metadata !DIExpression()), !dbg !5402
  call void @llvm.dbg.declare(metadata i32* %cycl, metadata !5403, metadata !DIExpression()), !dbg !5404
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5405
  %knotsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 15, !dbg !5407
  %5 = load float*, float** %knotsu, align 8, !dbg !5407
  %cmp = icmp eq float* %5, null, !dbg !5408
  br i1 %cmp, label %if.then, label %if.end, !dbg !5409

if.then:                                          ; preds = %entry
  br label %return, !dbg !5410

if.end:                                           ; preds = %entry
  %6 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5411
  %orderu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 11, !dbg !5413
  %7 = load i16, i16* %orderu, align 8, !dbg !5413
  %conv = sext i16 %7 to i32, !dbg !5411
  %8 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5414
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 6, !dbg !5415
  %9 = load i32, i32* %pntsu, align 8, !dbg !5415
  %cmp1 = icmp sgt i32 %conv, %9, !dbg !5416
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !5417

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !5418

if.end4:                                          ; preds = %if.end
  %10 = load float*, float** %coord_array.addr, align 8, !dbg !5419
  %cmp5 = icmp eq float* %10, null, !dbg !5421
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !5422

if.then7:                                         ; preds = %if.end4
  br label %return, !dbg !5423

if.end8:                                          ; preds = %if.end4
  %11 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5424
  %pntsu9 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 6, !dbg !5425
  %12 = load i32, i32* %pntsu9, align 8, !dbg !5425
  store i32 %12, i32* %len, align 4, !dbg !5426
  %13 = load i32, i32* %len, align 4, !dbg !5427
  %cmp10 = icmp eq i32 %13, 0, !dbg !5429
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !5430

if.then12:                                        ; preds = %if.end8
  br label %return, !dbg !5431

if.end13:                                         ; preds = %if.end8
  %14 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5432
  %15 = load i32, i32* %len, align 4, !dbg !5433
  %conv14 = sext i32 %15 to i64, !dbg !5433
  %mul = mul i64 4, %conv14, !dbg !5434
  %call = call i8* %14(i64 %mul, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0)), !dbg !5432
  %16 = bitcast i8* %call to float*, !dbg !5435
  store float* %16, float** %sum, align 8, !dbg !5436
  %17 = load i32, i32* %resolu.addr, align 4, !dbg !5437
  %18 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5438
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %18, i32 0, i32 13, !dbg !5438
  %19 = load i16, i16* %flagu, align 4, !dbg !5438
  %conv15 = sext i16 %19 to i32, !dbg !5438
  %and = and i32 %conv15, 1, !dbg !5438
  %tobool = icmp ne i32 %and, 0, !dbg !5438
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5438

cond.true:                                        ; preds = %if.end13
  %20 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5438
  %pntsu16 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %20, i32 0, i32 6, !dbg !5438
  %21 = load i32, i32* %pntsu16, align 8, !dbg !5438
  br label %cond.end, !dbg !5438

cond.false:                                       ; preds = %if.end13
  %22 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5438
  %pntsu17 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %22, i32 0, i32 6, !dbg !5438
  %23 = load i32, i32* %pntsu17, align 8, !dbg !5438
  %sub = sub nsw i32 %23, 1, !dbg !5438
  br label %cond.end, !dbg !5438

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %21, %cond.true ], [ %sub, %cond.false ], !dbg !5438
  %mul18 = mul nsw i32 %17, %cond, !dbg !5439
  store i32 %mul18, i32* %resolu.addr, align 4, !dbg !5440
  %24 = load i32, i32* %resolu.addr, align 4, !dbg !5441
  %cmp19 = icmp eq i32 %24, 0, !dbg !5443
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !5444

if.then21:                                        ; preds = %cond.end
  %25 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5445
  %26 = load float*, float** %sum, align 8, !dbg !5447
  %27 = bitcast float* %26 to i8*, !dbg !5447
  call void %25(i8* %27), !dbg !5445
  br label %return, !dbg !5448

if.end22:                                         ; preds = %cond.end
  %28 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5449
  %knotsu23 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %28, i32 0, i32 15, !dbg !5450
  %29 = load float*, float** %knotsu23, align 8, !dbg !5450
  store float* %29, float** %fp, align 8, !dbg !5451
  %30 = load float*, float** %fp, align 8, !dbg !5452
  %31 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5453
  %orderu24 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %31, i32 0, i32 11, !dbg !5454
  %32 = load i16, i16* %orderu24, align 8, !dbg !5454
  %conv25 = sext i16 %32 to i32, !dbg !5453
  %sub26 = sub nsw i32 %conv25, 1, !dbg !5455
  %idxprom = sext i32 %sub26 to i64, !dbg !5452
  %arrayidx = getelementptr inbounds float, float* %30, i64 %idxprom, !dbg !5452
  %33 = load float, float* %arrayidx, align 4, !dbg !5452
  store float %33, float* %ustart, align 4, !dbg !5456
  %34 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5457
  %flagu27 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %34, i32 0, i32 13, !dbg !5459
  %35 = load i16, i16* %flagu27, align 4, !dbg !5459
  %conv28 = sext i16 %35 to i32, !dbg !5457
  %and29 = and i32 %conv28, 1, !dbg !5460
  %tobool30 = icmp ne i32 %and29, 0, !dbg !5460
  br i1 %tobool30, label %if.then31, label %if.else, !dbg !5461

if.then31:                                        ; preds = %if.end22
  %36 = load float*, float** %fp, align 8, !dbg !5462
  %37 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5463
  %pntsu32 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %37, i32 0, i32 6, !dbg !5464
  %38 = load i32, i32* %pntsu32, align 8, !dbg !5464
  %39 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5465
  %orderu33 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %39, i32 0, i32 11, !dbg !5466
  %40 = load i16, i16* %orderu33, align 8, !dbg !5466
  %conv34 = sext i16 %40 to i32, !dbg !5465
  %add = add nsw i32 %38, %conv34, !dbg !5467
  %sub35 = sub nsw i32 %add, 1, !dbg !5468
  %idxprom36 = sext i32 %sub35 to i64, !dbg !5462
  %arrayidx37 = getelementptr inbounds float, float* %36, i64 %idxprom36, !dbg !5462
  %41 = load float, float* %arrayidx37, align 4, !dbg !5462
  store float %41, float* %uend, align 4, !dbg !5469
  br label %if.end41, !dbg !5470

if.else:                                          ; preds = %if.end22
  %42 = load float*, float** %fp, align 8, !dbg !5471
  %43 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5472
  %pntsu38 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %43, i32 0, i32 6, !dbg !5473
  %44 = load i32, i32* %pntsu38, align 8, !dbg !5473
  %idxprom39 = sext i32 %44 to i64, !dbg !5471
  %arrayidx40 = getelementptr inbounds float, float* %42, i64 %idxprom39, !dbg !5471
  %45 = load float, float* %arrayidx40, align 4, !dbg !5471
  store float %45, float* %uend, align 4, !dbg !5474
  br label %if.end41

if.end41:                                         ; preds = %if.else, %if.then31
  %46 = load float, float* %uend, align 4, !dbg !5475
  %47 = load float, float* %ustart, align 4, !dbg !5476
  %sub42 = fsub float %46, %47, !dbg !5477
  %48 = load i32, i32* %resolu.addr, align 4, !dbg !5478
  %49 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5479
  %flagu43 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %49, i32 0, i32 13, !dbg !5480
  %50 = load i16, i16* %flagu43, align 4, !dbg !5480
  %conv44 = sext i16 %50 to i32, !dbg !5479
  %and45 = and i32 %conv44, 1, !dbg !5481
  %tobool46 = icmp ne i32 %and45, 0, !dbg !5482
  %51 = zext i1 %tobool46 to i64, !dbg !5482
  %cond47 = select i1 %tobool46, i32 0, i32 1, !dbg !5482
  %sub48 = sub nsw i32 %48, %cond47, !dbg !5483
  %conv49 = sitofp i32 %sub48 to float, !dbg !5484
  %div = fdiv float %sub42, %conv49, !dbg !5485
  store float %div, float* %ustep, align 4, !dbg !5486
  %52 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5487
  %53 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5488
  %orderu50 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %53, i32 0, i32 11, !dbg !5488
  %54 = load i16, i16* %orderu50, align 8, !dbg !5488
  %conv51 = sext i16 %54 to i32, !dbg !5488
  %55 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5488
  %pntsu52 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %55, i32 0, i32 6, !dbg !5488
  %56 = load i32, i32* %pntsu52, align 8, !dbg !5488
  %add53 = add nsw i32 %conv51, %56, !dbg !5488
  %57 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5488
  %flagu54 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %57, i32 0, i32 13, !dbg !5488
  %58 = load i16, i16* %flagu54, align 4, !dbg !5488
  %conv55 = sext i16 %58 to i32, !dbg !5488
  %and56 = and i32 %conv55, 1, !dbg !5488
  %tobool57 = icmp ne i32 %and56, 0, !dbg !5488
  br i1 %tobool57, label %cond.true58, label %cond.false62, !dbg !5488

cond.true58:                                      ; preds = %if.end41
  %59 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5488
  %orderu59 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %59, i32 0, i32 11, !dbg !5488
  %60 = load i16, i16* %orderu59, align 8, !dbg !5488
  %conv60 = sext i16 %60 to i32, !dbg !5488
  %sub61 = sub nsw i32 %conv60, 1, !dbg !5488
  br label %cond.end63, !dbg !5488

cond.false62:                                     ; preds = %if.end41
  br label %cond.end63, !dbg !5488

cond.end63:                                       ; preds = %cond.false62, %cond.true58
  %cond64 = phi i32 [ %sub61, %cond.true58 ], [ 0, %cond.false62 ], !dbg !5488
  %add65 = add nsw i32 %add53, %cond64, !dbg !5488
  %conv66 = sext i32 %add65 to i64, !dbg !5488
  %mul67 = mul i64 4, %conv66, !dbg !5489
  %call68 = call i8* %52(i64 %mul67, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0)), !dbg !5487
  %61 = bitcast i8* %call68 to float*, !dbg !5490
  store float* %61, float** %basisu, align 8, !dbg !5491
  %62 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5492
  %flagu69 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %62, i32 0, i32 13, !dbg !5494
  %63 = load i16, i16* %flagu69, align 4, !dbg !5494
  %conv70 = sext i16 %63 to i32, !dbg !5492
  %and71 = and i32 %conv70, 1, !dbg !5495
  %tobool72 = icmp ne i32 %and71, 0, !dbg !5495
  br i1 %tobool72, label %if.then73, label %if.else77, !dbg !5496

if.then73:                                        ; preds = %cond.end63
  %64 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5497
  %orderu74 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %64, i32 0, i32 11, !dbg !5498
  %65 = load i16, i16* %orderu74, align 8, !dbg !5498
  %conv75 = sext i16 %65 to i32, !dbg !5497
  %sub76 = sub nsw i32 %conv75, 1, !dbg !5499
  store i32 %sub76, i32* %cycl, align 4, !dbg !5500
  br label %if.end78, !dbg !5501

if.else77:                                        ; preds = %cond.end63
  store i32 0, i32* %cycl, align 4, !dbg !5502
  br label %if.end78

if.end78:                                         ; preds = %if.else77, %if.then73
  %66 = load float, float* %ustart, align 4, !dbg !5503
  store float %66, float* %u, align 4, !dbg !5504
  br label %while.cond, !dbg !5505

while.cond:                                       ; preds = %if.end182, %if.end78
  %67 = load i32, i32* %resolu.addr, align 4, !dbg !5506
  %dec = add nsw i32 %67, -1, !dbg !5506
  store i32 %dec, i32* %resolu.addr, align 4, !dbg !5506
  %tobool79 = icmp ne i32 %67, 0, !dbg !5505
  br i1 %tobool79, label %while.body, label %while.end, !dbg !5505

while.body:                                       ; preds = %while.cond
  %68 = load float, float* %u, align 4, !dbg !5507
  %69 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5509
  %orderu80 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %69, i32 0, i32 11, !dbg !5510
  %70 = load i16, i16* %orderu80, align 8, !dbg !5510
  %71 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5511
  %pntsu81 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %71, i32 0, i32 6, !dbg !5512
  %72 = load i32, i32* %pntsu81, align 8, !dbg !5512
  %73 = load i32, i32* %cycl, align 4, !dbg !5513
  %add82 = add nsw i32 %72, %73, !dbg !5514
  %74 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5515
  %knotsu83 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %74, i32 0, i32 15, !dbg !5516
  %75 = load float*, float** %knotsu83, align 8, !dbg !5516
  %76 = load float*, float** %basisu, align 8, !dbg !5517
  call void @basisNurb(float %68, i16 signext %70, i32 %add82, float* %75, float* %76, i32* %istart, i32* %iend), !dbg !5518
  store float 0.000000e+00, float* %sumdiv, align 4, !dbg !5519
  %77 = load float*, float** %sum, align 8, !dbg !5520
  store float* %77, float** %fp, align 8, !dbg !5521
  %78 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5522
  %bp84 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %78, i32 0, i32 17, !dbg !5523
  %79 = load %struct.BPoint*, %struct.BPoint** %bp84, align 8, !dbg !5523
  %80 = load i32, i32* %istart, align 4, !dbg !5524
  %idx.ext = sext i32 %80 to i64, !dbg !5525
  %add.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %79, i64 %idx.ext, !dbg !5525
  %add.ptr85 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr, i64 -1, !dbg !5526
  store %struct.BPoint* %add.ptr85, %struct.BPoint** %bp, align 8, !dbg !5527
  %81 = load i32, i32* %istart, align 4, !dbg !5528
  store i32 %81, i32* %i, align 4, !dbg !5530
  br label %for.cond, !dbg !5531

for.cond:                                         ; preds = %for.inc, %while.body
  %82 = load i32, i32* %i, align 4, !dbg !5532
  %83 = load i32, i32* %iend, align 4, !dbg !5534
  %cmp86 = icmp sle i32 %82, %83, !dbg !5535
  br i1 %cmp86, label %for.body, label %for.end, !dbg !5536

for.body:                                         ; preds = %for.cond
  %84 = load i32, i32* %i, align 4, !dbg !5537
  %85 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5540
  %pntsu88 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %85, i32 0, i32 6, !dbg !5541
  %86 = load i32, i32* %pntsu88, align 8, !dbg !5541
  %cmp89 = icmp sge i32 %84, %86, !dbg !5542
  br i1 %cmp89, label %if.then91, label %if.else97, !dbg !5543

if.then91:                                        ; preds = %for.body
  %87 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5544
  %bp92 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %87, i32 0, i32 17, !dbg !5545
  %88 = load %struct.BPoint*, %struct.BPoint** %bp92, align 8, !dbg !5545
  %89 = load i32, i32* %i, align 4, !dbg !5546
  %90 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5547
  %pntsu93 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %90, i32 0, i32 6, !dbg !5548
  %91 = load i32, i32* %pntsu93, align 8, !dbg !5548
  %sub94 = sub nsw i32 %89, %91, !dbg !5549
  %idx.ext95 = sext i32 %sub94 to i64, !dbg !5550
  %add.ptr96 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %88, i64 %idx.ext95, !dbg !5550
  store %struct.BPoint* %add.ptr96, %struct.BPoint** %bp, align 8, !dbg !5551
  br label %if.end98, !dbg !5552

if.else97:                                        ; preds = %for.body
  %92 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5553
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %92, i32 1, !dbg !5553
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp, align 8, !dbg !5553
  br label %if.end98

if.end98:                                         ; preds = %if.else97, %if.then91
  %93 = load float*, float** %basisu, align 8, !dbg !5554
  %94 = load i32, i32* %i, align 4, !dbg !5555
  %idxprom99 = sext i32 %94 to i64, !dbg !5554
  %arrayidx100 = getelementptr inbounds float, float* %93, i64 %idxprom99, !dbg !5554
  %95 = load float, float* %arrayidx100, align 4, !dbg !5554
  %96 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5556
  %vec = getelementptr inbounds %struct.BPoint, %struct.BPoint* %96, i32 0, i32 0, !dbg !5557
  %arrayidx101 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 3, !dbg !5556
  %97 = load float, float* %arrayidx101, align 4, !dbg !5556
  %mul102 = fmul float %95, %97, !dbg !5558
  %98 = load float*, float** %fp, align 8, !dbg !5559
  store float %mul102, float* %98, align 4, !dbg !5560
  %99 = load float*, float** %fp, align 8, !dbg !5561
  %100 = load float, float* %99, align 4, !dbg !5562
  %101 = load float, float* %sumdiv, align 4, !dbg !5563
  %add103 = fadd float %101, %100, !dbg !5563
  store float %add103, float* %sumdiv, align 4, !dbg !5563
  br label %for.inc, !dbg !5564

for.inc:                                          ; preds = %if.end98
  %102 = load i32, i32* %i, align 4, !dbg !5565
  %inc = add nsw i32 %102, 1, !dbg !5565
  store i32 %inc, i32* %i, align 4, !dbg !5565
  %103 = load float*, float** %fp, align 8, !dbg !5566
  %incdec.ptr104 = getelementptr inbounds float, float* %103, i32 1, !dbg !5566
  store float* %incdec.ptr104, float** %fp, align 8, !dbg !5566
  br label %for.cond, !dbg !5567, !llvm.loop !5568

for.end:                                          ; preds = %for.cond
  %104 = load float, float* %sumdiv, align 4, !dbg !5570
  %cmp105 = fcmp une float %104, 0.000000e+00, !dbg !5572
  br i1 %cmp105, label %land.lhs.true, label %if.end121, !dbg !5573

land.lhs.true:                                    ; preds = %for.end
  %105 = load float, float* %sumdiv, align 4, !dbg !5574
  %cmp107 = fcmp olt float %105, 0x3FEFF7CEE0000000, !dbg !5575
  br i1 %cmp107, label %if.then111, label %lor.lhs.false, !dbg !5576

lor.lhs.false:                                    ; preds = %land.lhs.true
  %106 = load float, float* %sumdiv, align 4, !dbg !5577
  %cmp109 = fcmp ogt float %106, 0x3FF00418A0000000, !dbg !5578
  br i1 %cmp109, label %if.then111, label %if.end121, !dbg !5579

if.then111:                                       ; preds = %lor.lhs.false, %land.lhs.true
  %107 = load float*, float** %sum, align 8, !dbg !5580
  store float* %107, float** %fp, align 8, !dbg !5582
  %108 = load i32, i32* %istart, align 4, !dbg !5583
  store i32 %108, i32* %i, align 4, !dbg !5585
  br label %for.cond112, !dbg !5586

for.cond112:                                      ; preds = %for.inc117, %if.then111
  %109 = load i32, i32* %i, align 4, !dbg !5587
  %110 = load i32, i32* %iend, align 4, !dbg !5589
  %cmp113 = icmp sle i32 %109, %110, !dbg !5590
  br i1 %cmp113, label %for.body115, label %for.end120, !dbg !5591

for.body115:                                      ; preds = %for.cond112
  %111 = load float, float* %sumdiv, align 4, !dbg !5592
  %112 = load float*, float** %fp, align 8, !dbg !5594
  %113 = load float, float* %112, align 4, !dbg !5595
  %div116 = fdiv float %113, %111, !dbg !5595
  store float %div116, float* %112, align 4, !dbg !5595
  br label %for.inc117, !dbg !5596

for.inc117:                                       ; preds = %for.body115
  %114 = load i32, i32* %i, align 4, !dbg !5597
  %inc118 = add nsw i32 %114, 1, !dbg !5597
  store i32 %inc118, i32* %i, align 4, !dbg !5597
  %115 = load float*, float** %fp, align 8, !dbg !5598
  %incdec.ptr119 = getelementptr inbounds float, float* %115, i32 1, !dbg !5598
  store float* %incdec.ptr119, float** %fp, align 8, !dbg !5598
  br label %for.cond112, !dbg !5599, !llvm.loop !5600

for.end120:                                       ; preds = %for.cond112
  br label %if.end121, !dbg !5602

if.end121:                                        ; preds = %for.end120, %lor.lhs.false, %for.end
  %116 = load float*, float** %coord_fp, align 8, !dbg !5603
  call void @zero_v3(float* %116), !dbg !5604
  %117 = load float*, float** %sum, align 8, !dbg !5605
  store float* %117, float** %fp, align 8, !dbg !5606
  %118 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5607
  %bp122 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %118, i32 0, i32 17, !dbg !5608
  %119 = load %struct.BPoint*, %struct.BPoint** %bp122, align 8, !dbg !5608
  %120 = load i32, i32* %istart, align 4, !dbg !5609
  %idx.ext123 = sext i32 %120 to i64, !dbg !5610
  %add.ptr124 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %119, i64 %idx.ext123, !dbg !5610
  %add.ptr125 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr124, i64 -1, !dbg !5611
  store %struct.BPoint* %add.ptr125, %struct.BPoint** %bp, align 8, !dbg !5612
  %121 = load i32, i32* %istart, align 4, !dbg !5613
  store i32 %121, i32* %i, align 4, !dbg !5615
  br label %for.cond126, !dbg !5616

for.cond126:                                      ; preds = %for.inc162, %if.end121
  %122 = load i32, i32* %i, align 4, !dbg !5617
  %123 = load i32, i32* %iend, align 4, !dbg !5619
  %cmp127 = icmp sle i32 %122, %123, !dbg !5620
  br i1 %cmp127, label %for.body129, label %for.end165, !dbg !5621

for.body129:                                      ; preds = %for.cond126
  %124 = load i32, i32* %i, align 4, !dbg !5622
  %125 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5625
  %pntsu130 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %125, i32 0, i32 6, !dbg !5626
  %126 = load i32, i32* %pntsu130, align 8, !dbg !5626
  %cmp131 = icmp sge i32 %124, %126, !dbg !5627
  br i1 %cmp131, label %if.then133, label %if.else139, !dbg !5628

if.then133:                                       ; preds = %for.body129
  %127 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5629
  %bp134 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %127, i32 0, i32 17, !dbg !5630
  %128 = load %struct.BPoint*, %struct.BPoint** %bp134, align 8, !dbg !5630
  %129 = load i32, i32* %i, align 4, !dbg !5631
  %130 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !5632
  %pntsu135 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %130, i32 0, i32 6, !dbg !5633
  %131 = load i32, i32* %pntsu135, align 8, !dbg !5633
  %sub136 = sub nsw i32 %129, %131, !dbg !5634
  %idx.ext137 = sext i32 %sub136 to i64, !dbg !5635
  %add.ptr138 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %128, i64 %idx.ext137, !dbg !5635
  store %struct.BPoint* %add.ptr138, %struct.BPoint** %bp, align 8, !dbg !5636
  br label %if.end141, !dbg !5637

if.else139:                                       ; preds = %for.body129
  %132 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5638
  %incdec.ptr140 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %132, i32 1, !dbg !5638
  store %struct.BPoint* %incdec.ptr140, %struct.BPoint** %bp, align 8, !dbg !5638
  br label %if.end141

if.end141:                                        ; preds = %if.else139, %if.then133
  %133 = load float*, float** %fp, align 8, !dbg !5639
  %134 = load float, float* %133, align 4, !dbg !5641
  %cmp142 = fcmp une float %134, 0.000000e+00, !dbg !5642
  br i1 %cmp142, label %if.then144, label %if.end161, !dbg !5643

if.then144:                                       ; preds = %if.end141
  %135 = load float*, float** %coord_fp, align 8, !dbg !5644
  %136 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5646
  %vec145 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %136, i32 0, i32 0, !dbg !5647
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %vec145, i64 0, i64 0, !dbg !5646
  %137 = load float*, float** %fp, align 8, !dbg !5648
  %138 = load float, float* %137, align 4, !dbg !5649
  call void @madd_v3_v3fl(float* %135, float* %arraydecay, float %138), !dbg !5650
  %139 = load float*, float** %tilt_fp, align 8, !dbg !5651
  %tobool146 = icmp ne float* %139, null, !dbg !5651
  br i1 %tobool146, label %if.then147, label %if.end150, !dbg !5653

if.then147:                                       ; preds = %if.then144
  %140 = load float*, float** %fp, align 8, !dbg !5654
  %141 = load float, float* %140, align 4, !dbg !5655
  %142 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5656
  %alfa = getelementptr inbounds %struct.BPoint, %struct.BPoint* %142, i32 0, i32 1, !dbg !5657
  %143 = load float, float* %alfa, align 4, !dbg !5657
  %mul148 = fmul float %141, %143, !dbg !5658
  %144 = load float*, float** %tilt_fp, align 8, !dbg !5659
  %145 = load float, float* %144, align 4, !dbg !5660
  %add149 = fadd float %145, %mul148, !dbg !5660
  store float %add149, float* %144, align 4, !dbg !5660
  br label %if.end150, !dbg !5661

if.end150:                                        ; preds = %if.then147, %if.then144
  %146 = load float*, float** %radius_fp, align 8, !dbg !5662
  %tobool151 = icmp ne float* %146, null, !dbg !5662
  br i1 %tobool151, label %if.then152, label %if.end155, !dbg !5664

if.then152:                                       ; preds = %if.end150
  %147 = load float*, float** %fp, align 8, !dbg !5665
  %148 = load float, float* %147, align 4, !dbg !5666
  %149 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5667
  %radius = getelementptr inbounds %struct.BPoint, %struct.BPoint* %149, i32 0, i32 5, !dbg !5668
  %150 = load float, float* %radius, align 4, !dbg !5668
  %mul153 = fmul float %148, %150, !dbg !5669
  %151 = load float*, float** %radius_fp, align 8, !dbg !5670
  %152 = load float, float* %151, align 4, !dbg !5671
  %add154 = fadd float %152, %mul153, !dbg !5671
  store float %add154, float* %151, align 4, !dbg !5671
  br label %if.end155, !dbg !5672

if.end155:                                        ; preds = %if.then152, %if.end150
  %153 = load float*, float** %weight_fp, align 8, !dbg !5673
  %tobool156 = icmp ne float* %153, null, !dbg !5673
  br i1 %tobool156, label %if.then157, label %if.end160, !dbg !5675

if.then157:                                       ; preds = %if.end155
  %154 = load float*, float** %fp, align 8, !dbg !5676
  %155 = load float, float* %154, align 4, !dbg !5677
  %156 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !5678
  %weight = getelementptr inbounds %struct.BPoint, %struct.BPoint* %156, i32 0, i32 2, !dbg !5679
  %157 = load float, float* %weight, align 4, !dbg !5679
  %mul158 = fmul float %155, %157, !dbg !5680
  %158 = load float*, float** %weight_fp, align 8, !dbg !5681
  %159 = load float, float* %158, align 4, !dbg !5682
  %add159 = fadd float %159, %mul158, !dbg !5682
  store float %add159, float* %158, align 4, !dbg !5682
  br label %if.end160, !dbg !5683

if.end160:                                        ; preds = %if.then157, %if.end155
  br label %if.end161, !dbg !5684

if.end161:                                        ; preds = %if.end160, %if.end141
  br label %for.inc162, !dbg !5685

for.inc162:                                       ; preds = %if.end161
  %160 = load i32, i32* %i, align 4, !dbg !5686
  %inc163 = add nsw i32 %160, 1, !dbg !5686
  store i32 %inc163, i32* %i, align 4, !dbg !5686
  %161 = load float*, float** %fp, align 8, !dbg !5687
  %incdec.ptr164 = getelementptr inbounds float, float* %161, i32 1, !dbg !5687
  store float* %incdec.ptr164, float** %fp, align 8, !dbg !5687
  br label %for.cond126, !dbg !5688, !llvm.loop !5689

for.end165:                                       ; preds = %for.cond126
  %162 = load float*, float** %coord_fp, align 8, !dbg !5691
  %163 = bitcast float* %162 to i8*, !dbg !5692
  %164 = load i32, i32* %stride.addr, align 4, !dbg !5693
  %idx.ext166 = sext i32 %164 to i64, !dbg !5694
  %add.ptr167 = getelementptr inbounds i8, i8* %163, i64 %idx.ext166, !dbg !5694
  %165 = bitcast i8* %add.ptr167 to float*, !dbg !5695
  store float* %165, float** %coord_fp, align 8, !dbg !5696
  %166 = load float*, float** %tilt_fp, align 8, !dbg !5697
  %tobool168 = icmp ne float* %166, null, !dbg !5697
  br i1 %tobool168, label %if.then169, label %if.end172, !dbg !5699

if.then169:                                       ; preds = %for.end165
  %167 = load float*, float** %tilt_fp, align 8, !dbg !5700
  %168 = bitcast float* %167 to i8*, !dbg !5701
  %169 = load i32, i32* %stride.addr, align 4, !dbg !5702
  %idx.ext170 = sext i32 %169 to i64, !dbg !5703
  %add.ptr171 = getelementptr inbounds i8, i8* %168, i64 %idx.ext170, !dbg !5703
  %170 = bitcast i8* %add.ptr171 to float*, !dbg !5704
  store float* %170, float** %tilt_fp, align 8, !dbg !5705
  br label %if.end172, !dbg !5706

if.end172:                                        ; preds = %if.then169, %for.end165
  %171 = load float*, float** %radius_fp, align 8, !dbg !5707
  %tobool173 = icmp ne float* %171, null, !dbg !5707
  br i1 %tobool173, label %if.then174, label %if.end177, !dbg !5709

if.then174:                                       ; preds = %if.end172
  %172 = load float*, float** %radius_fp, align 8, !dbg !5710
  %173 = bitcast float* %172 to i8*, !dbg !5711
  %174 = load i32, i32* %stride.addr, align 4, !dbg !5712
  %idx.ext175 = sext i32 %174 to i64, !dbg !5713
  %add.ptr176 = getelementptr inbounds i8, i8* %173, i64 %idx.ext175, !dbg !5713
  %175 = bitcast i8* %add.ptr176 to float*, !dbg !5714
  store float* %175, float** %radius_fp, align 8, !dbg !5715
  br label %if.end177, !dbg !5716

if.end177:                                        ; preds = %if.then174, %if.end172
  %176 = load float*, float** %weight_fp, align 8, !dbg !5717
  %tobool178 = icmp ne float* %176, null, !dbg !5717
  br i1 %tobool178, label %if.then179, label %if.end182, !dbg !5719

if.then179:                                       ; preds = %if.end177
  %177 = load float*, float** %weight_fp, align 8, !dbg !5720
  %178 = bitcast float* %177 to i8*, !dbg !5721
  %179 = load i32, i32* %stride.addr, align 4, !dbg !5722
  %idx.ext180 = sext i32 %179 to i64, !dbg !5723
  %add.ptr181 = getelementptr inbounds i8, i8* %178, i64 %idx.ext180, !dbg !5723
  %180 = bitcast i8* %add.ptr181 to float*, !dbg !5724
  store float* %180, float** %weight_fp, align 8, !dbg !5725
  br label %if.end182, !dbg !5726

if.end182:                                        ; preds = %if.then179, %if.end177
  %181 = load float, float* %ustep, align 4, !dbg !5727
  %182 = load float, float* %u, align 4, !dbg !5728
  %add183 = fadd float %182, %181, !dbg !5728
  store float %add183, float* %u, align 4, !dbg !5728
  br label %while.cond, !dbg !5505, !llvm.loop !5729

while.end:                                        ; preds = %while.cond
  %183 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5731
  %184 = load float*, float** %sum, align 8, !dbg !5732
  %185 = bitcast float* %184 to i8*, !dbg !5732
  call void %183(i8* %185), !dbg !5731
  %186 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5733
  %187 = load float*, float** %basisu, align 8, !dbg !5734
  %188 = bitcast float* %187 to i8*, !dbg !5734
  call void %186(i8* %188), !dbg !5733
  br label %return, !dbg !5735

return:                                           ; preds = %while.end, %if.then21, %if.then12, %if.then7, %if.then3, %if.then
  ret void, !dbg !5735
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_forward_diff_bezier(float %q0, float %q1, float %q2, float %q3, float* %p, i32 %it, i32 %stride) #0 !dbg !5736 {
entry:
  %q0.addr = alloca float, align 4
  %q1.addr = alloca float, align 4
  %q2.addr = alloca float, align 4
  %q3.addr = alloca float, align 4
  %p.addr = alloca float*, align 8
  %it.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %rt0 = alloca float, align 4
  %rt1 = alloca float, align 4
  %rt2 = alloca float, align 4
  %rt3 = alloca float, align 4
  %f = alloca float, align 4
  %a = alloca i32, align 4
  store float %q0, float* %q0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %q0.addr, metadata !5739, metadata !DIExpression()), !dbg !5740
  store float %q1, float* %q1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %q1.addr, metadata !5741, metadata !DIExpression()), !dbg !5742
  store float %q2, float* %q2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %q2.addr, metadata !5743, metadata !DIExpression()), !dbg !5744
  store float %q3, float* %q3.addr, align 4
  call void @llvm.dbg.declare(metadata float* %q3.addr, metadata !5745, metadata !DIExpression()), !dbg !5746
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !5747, metadata !DIExpression()), !dbg !5748
  store i32 %it, i32* %it.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %it.addr, metadata !5749, metadata !DIExpression()), !dbg !5750
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !5751, metadata !DIExpression()), !dbg !5752
  call void @llvm.dbg.declare(metadata float* %rt0, metadata !5753, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.declare(metadata float* %rt1, metadata !5755, metadata !DIExpression()), !dbg !5756
  call void @llvm.dbg.declare(metadata float* %rt2, metadata !5757, metadata !DIExpression()), !dbg !5758
  call void @llvm.dbg.declare(metadata float* %rt3, metadata !5759, metadata !DIExpression()), !dbg !5760
  call void @llvm.dbg.declare(metadata float* %f, metadata !5761, metadata !DIExpression()), !dbg !5762
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5763, metadata !DIExpression()), !dbg !5764
  %0 = load i32, i32* %it.addr, align 4, !dbg !5765
  %conv = sitofp i32 %0 to float, !dbg !5766
  store float %conv, float* %f, align 4, !dbg !5767
  %1 = load float, float* %q0.addr, align 4, !dbg !5768
  store float %1, float* %rt0, align 4, !dbg !5769
  %2 = load float, float* %q1.addr, align 4, !dbg !5770
  %3 = load float, float* %q0.addr, align 4, !dbg !5771
  %sub = fsub float %2, %3, !dbg !5772
  %mul = fmul float 3.000000e+00, %sub, !dbg !5773
  %4 = load float, float* %f, align 4, !dbg !5774
  %div = fdiv float %mul, %4, !dbg !5775
  store float %div, float* %rt1, align 4, !dbg !5776
  %5 = load float, float* %f, align 4, !dbg !5777
  %6 = load float, float* %f, align 4, !dbg !5778
  %mul1 = fmul float %6, %5, !dbg !5778
  store float %mul1, float* %f, align 4, !dbg !5778
  %7 = load float, float* %q0.addr, align 4, !dbg !5779
  %8 = load float, float* %q1.addr, align 4, !dbg !5780
  %mul2 = fmul float 2.000000e+00, %8, !dbg !5781
  %sub3 = fsub float %7, %mul2, !dbg !5782
  %9 = load float, float* %q2.addr, align 4, !dbg !5783
  %add = fadd float %sub3, %9, !dbg !5784
  %mul4 = fmul float 3.000000e+00, %add, !dbg !5785
  %10 = load float, float* %f, align 4, !dbg !5786
  %div5 = fdiv float %mul4, %10, !dbg !5787
  store float %div5, float* %rt2, align 4, !dbg !5788
  %11 = load i32, i32* %it.addr, align 4, !dbg !5789
  %conv6 = sitofp i32 %11 to float, !dbg !5789
  %12 = load float, float* %f, align 4, !dbg !5790
  %mul7 = fmul float %12, %conv6, !dbg !5790
  store float %mul7, float* %f, align 4, !dbg !5790
  %13 = load float, float* %q3.addr, align 4, !dbg !5791
  %14 = load float, float* %q0.addr, align 4, !dbg !5792
  %sub8 = fsub float %13, %14, !dbg !5793
  %15 = load float, float* %q1.addr, align 4, !dbg !5794
  %16 = load float, float* %q2.addr, align 4, !dbg !5795
  %sub9 = fsub float %15, %16, !dbg !5796
  %mul10 = fmul float 3.000000e+00, %sub9, !dbg !5797
  %add11 = fadd float %sub8, %mul10, !dbg !5798
  %17 = load float, float* %f, align 4, !dbg !5799
  %div12 = fdiv float %add11, %17, !dbg !5800
  store float %div12, float* %rt3, align 4, !dbg !5801
  %18 = load float, float* %rt0, align 4, !dbg !5802
  store float %18, float* %q0.addr, align 4, !dbg !5803
  %19 = load float, float* %rt1, align 4, !dbg !5804
  %20 = load float, float* %rt2, align 4, !dbg !5805
  %add13 = fadd float %19, %20, !dbg !5806
  %21 = load float, float* %rt3, align 4, !dbg !5807
  %add14 = fadd float %add13, %21, !dbg !5808
  store float %add14, float* %q1.addr, align 4, !dbg !5809
  %22 = load float, float* %rt2, align 4, !dbg !5810
  %mul15 = fmul float 2.000000e+00, %22, !dbg !5811
  %23 = load float, float* %rt3, align 4, !dbg !5812
  %mul16 = fmul float 6.000000e+00, %23, !dbg !5813
  %add17 = fadd float %mul15, %mul16, !dbg !5814
  store float %add17, float* %q2.addr, align 4, !dbg !5815
  %24 = load float, float* %rt3, align 4, !dbg !5816
  %mul18 = fmul float 6.000000e+00, %24, !dbg !5817
  store float %mul18, float* %q3.addr, align 4, !dbg !5818
  store i32 0, i32* %a, align 4, !dbg !5819
  br label %for.cond, !dbg !5821

for.cond:                                         ; preds = %for.inc, %entry
  %25 = load i32, i32* %a, align 4, !dbg !5822
  %26 = load i32, i32* %it.addr, align 4, !dbg !5824
  %cmp = icmp sle i32 %25, %26, !dbg !5825
  br i1 %cmp, label %for.body, label %for.end, !dbg !5826

for.body:                                         ; preds = %for.cond
  %27 = load float, float* %q0.addr, align 4, !dbg !5827
  %28 = load float*, float** %p.addr, align 8, !dbg !5829
  store float %27, float* %28, align 4, !dbg !5830
  %29 = load float*, float** %p.addr, align 8, !dbg !5831
  %30 = bitcast float* %29 to i8*, !dbg !5832
  %31 = load i32, i32* %stride.addr, align 4, !dbg !5833
  %idx.ext = sext i32 %31 to i64, !dbg !5834
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 %idx.ext, !dbg !5834
  %32 = bitcast i8* %add.ptr to float*, !dbg !5835
  store float* %32, float** %p.addr, align 8, !dbg !5836
  %33 = load float, float* %q1.addr, align 4, !dbg !5837
  %34 = load float, float* %q0.addr, align 4, !dbg !5838
  %add20 = fadd float %34, %33, !dbg !5838
  store float %add20, float* %q0.addr, align 4, !dbg !5838
  %35 = load float, float* %q2.addr, align 4, !dbg !5839
  %36 = load float, float* %q1.addr, align 4, !dbg !5840
  %add21 = fadd float %36, %35, !dbg !5840
  store float %add21, float* %q1.addr, align 4, !dbg !5840
  %37 = load float, float* %q3.addr, align 4, !dbg !5841
  %38 = load float, float* %q2.addr, align 4, !dbg !5842
  %add22 = fadd float %38, %37, !dbg !5842
  store float %add22, float* %q2.addr, align 4, !dbg !5842
  br label %for.inc, !dbg !5843

for.inc:                                          ; preds = %for.body
  %39 = load i32, i32* %a, align 4, !dbg !5844
  %inc = add nsw i32 %39, 1, !dbg !5844
  store i32 %inc, i32* %a, align 4, !dbg !5844
  br label %for.cond, !dbg !5845, !llvm.loop !5846

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5848
}

; Function Attrs: noinline nounwind uwtable
define dso_local float* @BKE_curve_surf_make_orco(%struct.Object* %ob) #0 !dbg !5849 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %tot = alloca i32, align 4
  %sizeu = alloca i32, align 4
  %sizev = alloca i32, align 4
  %resolu = alloca i32, align 4
  %resolv = alloca i32, align 4
  %fp = alloca float*, align 8
  %coord_array = alloca float*, align 8
  %size = alloca i32, align 4
  %_tdata = alloca float*, align 8
  %tdata = alloca float*, align 8
  %use_b = alloca i32, align 4
  %use_a = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5852, metadata !DIExpression()), !dbg !5853
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !5854, metadata !DIExpression()), !dbg !5855
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5856
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !5857
  %1 = load i8*, i8** %data, align 8, !dbg !5857
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !5856
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !5855
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !5858, metadata !DIExpression()), !dbg !5859
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5860, metadata !DIExpression()), !dbg !5861
  call void @llvm.dbg.declare(metadata i32* %b, metadata !5862, metadata !DIExpression()), !dbg !5863
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !5864, metadata !DIExpression()), !dbg !5865
  store i32 0, i32* %tot, align 4, !dbg !5865
  call void @llvm.dbg.declare(metadata i32* %sizeu, metadata !5866, metadata !DIExpression()), !dbg !5867
  call void @llvm.dbg.declare(metadata i32* %sizev, metadata !5868, metadata !DIExpression()), !dbg !5869
  call void @llvm.dbg.declare(metadata i32* %resolu, metadata !5870, metadata !DIExpression()), !dbg !5871
  call void @llvm.dbg.declare(metadata i32* %resolv, metadata !5872, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.declare(metadata float** %fp, metadata !5874, metadata !DIExpression()), !dbg !5875
  call void @llvm.dbg.declare(metadata float** %coord_array, metadata !5876, metadata !DIExpression()), !dbg !5877
  %3 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5878
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 3, !dbg !5879
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb, i32 0, i32 0, !dbg !5880
  %4 = load i8*, i8** %first, align 8, !dbg !5880
  %5 = bitcast i8* %4 to %struct.Nurb*, !dbg !5878
  store %struct.Nurb* %5, %struct.Nurb** %nu, align 8, !dbg !5881
  br label %while.cond, !dbg !5882

while.cond:                                       ; preds = %if.end29, %entry
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5883
  %tobool = icmp ne %struct.Nurb* %6, null, !dbg !5882
  br i1 %tobool, label %while.body, label %while.end, !dbg !5882

while.body:                                       ; preds = %while.cond
  %7 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5884
  %resolu_ren = getelementptr inbounds %struct.Curve, %struct.Curve* %7, i32 0, i32 29, !dbg !5886
  %8 = load i16, i16* %resolu_ren, align 8, !dbg !5886
  %conv = sext i16 %8 to i32, !dbg !5884
  %tobool1 = icmp ne i32 %conv, 0, !dbg !5884
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !5884

cond.true:                                        ; preds = %while.body
  %9 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5887
  %resolu_ren2 = getelementptr inbounds %struct.Curve, %struct.Curve* %9, i32 0, i32 29, !dbg !5888
  %10 = load i16, i16* %resolu_ren2, align 8, !dbg !5888
  %conv3 = sext i16 %10 to i32, !dbg !5887
  br label %cond.end, !dbg !5884

cond.false:                                       ; preds = %while.body
  %11 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5889
  %resolu4 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 9, !dbg !5890
  %12 = load i16, i16* %resolu4, align 4, !dbg !5890
  %conv5 = sext i16 %12 to i32, !dbg !5889
  br label %cond.end, !dbg !5884

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv3, %cond.true ], [ %conv5, %cond.false ], !dbg !5884
  store i32 %cond, i32* %resolu, align 4, !dbg !5891
  %13 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5892
  %resolv_ren = getelementptr inbounds %struct.Curve, %struct.Curve* %13, i32 0, i32 30, !dbg !5893
  %14 = load i16, i16* %resolv_ren, align 2, !dbg !5893
  %conv6 = sext i16 %14 to i32, !dbg !5892
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !5892
  br i1 %tobool7, label %cond.true8, label %cond.false11, !dbg !5892

cond.true8:                                       ; preds = %cond.end
  %15 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5894
  %resolv_ren9 = getelementptr inbounds %struct.Curve, %struct.Curve* %15, i32 0, i32 30, !dbg !5895
  %16 = load i16, i16* %resolv_ren9, align 2, !dbg !5895
  %conv10 = sext i16 %16 to i32, !dbg !5894
  br label %cond.end14, !dbg !5892

cond.false11:                                     ; preds = %cond.end
  %17 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5896
  %resolv12 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %17, i32 0, i32 10, !dbg !5897
  %18 = load i16, i16* %resolv12, align 2, !dbg !5897
  %conv13 = sext i16 %18 to i32, !dbg !5896
  br label %cond.end14, !dbg !5892

cond.end14:                                       ; preds = %cond.false11, %cond.true8
  %cond15 = phi i32 [ %conv10, %cond.true8 ], [ %conv13, %cond.false11 ], !dbg !5892
  store i32 %cond15, i32* %resolv, align 4, !dbg !5898
  %19 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5899
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %19, i32 0, i32 6, !dbg !5900
  %20 = load i32, i32* %pntsu, align 8, !dbg !5900
  %21 = load i32, i32* %resolu, align 4, !dbg !5901
  %mul = mul nsw i32 %20, %21, !dbg !5902
  store i32 %mul, i32* %sizeu, align 4, !dbg !5903
  %22 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5904
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %22, i32 0, i32 7, !dbg !5905
  %23 = load i32, i32* %pntsv, align 4, !dbg !5905
  %24 = load i32, i32* %resolv, align 4, !dbg !5906
  %mul16 = mul nsw i32 %23, %24, !dbg !5907
  store i32 %mul16, i32* %sizev, align 4, !dbg !5908
  %25 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5909
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %25, i32 0, i32 13, !dbg !5911
  %26 = load i16, i16* %flagu, align 4, !dbg !5911
  %conv17 = sext i16 %26 to i32, !dbg !5909
  %and = and i32 %conv17, 1, !dbg !5912
  %tobool18 = icmp ne i32 %and, 0, !dbg !5912
  br i1 %tobool18, label %if.then, label %if.end, !dbg !5913

if.then:                                          ; preds = %cond.end14
  %27 = load i32, i32* %sizeu, align 4, !dbg !5914
  %inc = add nsw i32 %27, 1, !dbg !5914
  store i32 %inc, i32* %sizeu, align 4, !dbg !5914
  br label %if.end, !dbg !5915

if.end:                                           ; preds = %if.then, %cond.end14
  %28 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5916
  %flagv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %28, i32 0, i32 14, !dbg !5918
  %29 = load i16, i16* %flagv, align 2, !dbg !5918
  %conv19 = sext i16 %29 to i32, !dbg !5916
  %and20 = and i32 %conv19, 1, !dbg !5919
  %tobool21 = icmp ne i32 %and20, 0, !dbg !5919
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !5920

if.then22:                                        ; preds = %if.end
  %30 = load i32, i32* %sizev, align 4, !dbg !5921
  %inc23 = add nsw i32 %30, 1, !dbg !5921
  store i32 %inc23, i32* %sizev, align 4, !dbg !5921
  br label %if.end24, !dbg !5922

if.end24:                                         ; preds = %if.then22, %if.end
  %31 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5923
  %pntsv25 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %31, i32 0, i32 7, !dbg !5925
  %32 = load i32, i32* %pntsv25, align 4, !dbg !5925
  %cmp = icmp sgt i32 %32, 1, !dbg !5926
  br i1 %cmp, label %if.then27, label %if.end29, !dbg !5927

if.then27:                                        ; preds = %if.end24
  %33 = load i32, i32* %sizeu, align 4, !dbg !5928
  %34 = load i32, i32* %sizev, align 4, !dbg !5929
  %mul28 = mul nsw i32 %33, %34, !dbg !5930
  %35 = load i32, i32* %tot, align 4, !dbg !5931
  %add = add nsw i32 %35, %mul28, !dbg !5931
  store i32 %add, i32* %tot, align 4, !dbg !5931
  br label %if.end29, !dbg !5932

if.end29:                                         ; preds = %if.then27, %if.end24
  %36 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5933
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %36, i32 0, i32 0, !dbg !5934
  %37 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !5934
  store %struct.Nurb* %37, %struct.Nurb** %nu, align 8, !dbg !5935
  br label %while.cond, !dbg !5882, !llvm.loop !5936

while.end:                                        ; preds = %while.cond
  %38 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5938
  %39 = load i32, i32* %tot, align 4, !dbg !5939
  %conv30 = sext i32 %39 to i64, !dbg !5939
  %mul31 = mul i64 12, %conv30, !dbg !5940
  %call = call i8* %38(i64 %mul31, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0)), !dbg !5938
  %40 = bitcast i8* %call to float*, !dbg !5938
  store float* %40, float** %coord_array, align 8, !dbg !5941
  store float* %40, float** %fp, align 8, !dbg !5942
  %41 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5943
  %nurb32 = getelementptr inbounds %struct.Curve, %struct.Curve* %41, i32 0, i32 3, !dbg !5944
  %first33 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb32, i32 0, i32 0, !dbg !5945
  %42 = load i8*, i8** %first33, align 8, !dbg !5945
  %43 = bitcast i8* %42 to %struct.Nurb*, !dbg !5943
  store %struct.Nurb* %43, %struct.Nurb** %nu, align 8, !dbg !5946
  br label %while.cond34, !dbg !5947

while.cond34:                                     ; preds = %if.end193, %while.end
  %44 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5948
  %tobool35 = icmp ne %struct.Nurb* %44, null, !dbg !5947
  br i1 %tobool35, label %while.body36, label %while.end195, !dbg !5947

while.body36:                                     ; preds = %while.cond34
  %45 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5949
  %resolu_ren37 = getelementptr inbounds %struct.Curve, %struct.Curve* %45, i32 0, i32 29, !dbg !5951
  %46 = load i16, i16* %resolu_ren37, align 8, !dbg !5951
  %conv38 = sext i16 %46 to i32, !dbg !5949
  %tobool39 = icmp ne i32 %conv38, 0, !dbg !5949
  br i1 %tobool39, label %cond.true40, label %cond.false43, !dbg !5949

cond.true40:                                      ; preds = %while.body36
  %47 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5952
  %resolu_ren41 = getelementptr inbounds %struct.Curve, %struct.Curve* %47, i32 0, i32 29, !dbg !5953
  %48 = load i16, i16* %resolu_ren41, align 8, !dbg !5953
  %conv42 = sext i16 %48 to i32, !dbg !5952
  br label %cond.end46, !dbg !5949

cond.false43:                                     ; preds = %while.body36
  %49 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5954
  %resolu44 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %49, i32 0, i32 9, !dbg !5955
  %50 = load i16, i16* %resolu44, align 4, !dbg !5955
  %conv45 = sext i16 %50 to i32, !dbg !5954
  br label %cond.end46, !dbg !5949

cond.end46:                                       ; preds = %cond.false43, %cond.true40
  %cond47 = phi i32 [ %conv42, %cond.true40 ], [ %conv45, %cond.false43 ], !dbg !5949
  store i32 %cond47, i32* %resolu, align 4, !dbg !5956
  %51 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5957
  %resolv_ren48 = getelementptr inbounds %struct.Curve, %struct.Curve* %51, i32 0, i32 30, !dbg !5958
  %52 = load i16, i16* %resolv_ren48, align 2, !dbg !5958
  %conv49 = sext i16 %52 to i32, !dbg !5957
  %tobool50 = icmp ne i32 %conv49, 0, !dbg !5957
  br i1 %tobool50, label %cond.true51, label %cond.false54, !dbg !5957

cond.true51:                                      ; preds = %cond.end46
  %53 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5959
  %resolv_ren52 = getelementptr inbounds %struct.Curve, %struct.Curve* %53, i32 0, i32 30, !dbg !5960
  %54 = load i16, i16* %resolv_ren52, align 2, !dbg !5960
  %conv53 = sext i16 %54 to i32, !dbg !5959
  br label %cond.end57, !dbg !5957

cond.false54:                                     ; preds = %cond.end46
  %55 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5961
  %resolv55 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %55, i32 0, i32 10, !dbg !5962
  %56 = load i16, i16* %resolv55, align 2, !dbg !5962
  %conv56 = sext i16 %56 to i32, !dbg !5961
  br label %cond.end57, !dbg !5957

cond.end57:                                       ; preds = %cond.false54, %cond.true51
  %cond58 = phi i32 [ %conv53, %cond.true51 ], [ %conv56, %cond.false54 ], !dbg !5957
  store i32 %cond58, i32* %resolv, align 4, !dbg !5963
  %57 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5964
  %pntsv59 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %57, i32 0, i32 7, !dbg !5966
  %58 = load i32, i32* %pntsv59, align 4, !dbg !5966
  %cmp60 = icmp sgt i32 %58, 1, !dbg !5967
  br i1 %cmp60, label %if.then62, label %if.end193, !dbg !5968

if.then62:                                        ; preds = %cond.end57
  %59 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5969
  %pntsu63 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %59, i32 0, i32 6, !dbg !5971
  %60 = load i32, i32* %pntsu63, align 8, !dbg !5971
  %61 = load i32, i32* %resolu, align 4, !dbg !5972
  %mul64 = mul nsw i32 %60, %61, !dbg !5973
  store i32 %mul64, i32* %sizeu, align 4, !dbg !5974
  %62 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5975
  %pntsv65 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %62, i32 0, i32 7, !dbg !5976
  %63 = load i32, i32* %pntsv65, align 4, !dbg !5976
  %64 = load i32, i32* %resolv, align 4, !dbg !5977
  %mul66 = mul nsw i32 %63, %64, !dbg !5978
  store i32 %mul66, i32* %sizev, align 4, !dbg !5979
  %65 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5980
  %flagu67 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %65, i32 0, i32 13, !dbg !5982
  %66 = load i16, i16* %flagu67, align 4, !dbg !5982
  %conv68 = sext i16 %66 to i32, !dbg !5980
  %and69 = and i32 %conv68, 1, !dbg !5983
  %tobool70 = icmp ne i32 %and69, 0, !dbg !5983
  br i1 %tobool70, label %if.then71, label %if.end73, !dbg !5984

if.then71:                                        ; preds = %if.then62
  %67 = load i32, i32* %sizeu, align 4, !dbg !5985
  %inc72 = add nsw i32 %67, 1, !dbg !5985
  store i32 %inc72, i32* %sizeu, align 4, !dbg !5985
  br label %if.end73, !dbg !5986

if.end73:                                         ; preds = %if.then71, %if.then62
  %68 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !5987
  %flagv74 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %68, i32 0, i32 14, !dbg !5989
  %69 = load i16, i16* %flagv74, align 2, !dbg !5989
  %conv75 = sext i16 %69 to i32, !dbg !5987
  %and76 = and i32 %conv75, 1, !dbg !5990
  %tobool77 = icmp ne i32 %and76, 0, !dbg !5990
  br i1 %tobool77, label %if.then78, label %if.end80, !dbg !5991

if.then78:                                        ; preds = %if.end73
  %70 = load i32, i32* %sizev, align 4, !dbg !5992
  %inc79 = add nsw i32 %70, 1, !dbg !5992
  store i32 %inc79, i32* %sizev, align 4, !dbg !5992
  br label %if.end80, !dbg !5993

if.end80:                                         ; preds = %if.then78, %if.end73
  %71 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5994
  %flag = getelementptr inbounds %struct.Curve, %struct.Curve* %71, i32 0, i32 23, !dbg !5996
  %72 = load i32, i32* %flag, align 4, !dbg !5996
  %and81 = and i32 %72, 32, !dbg !5997
  %tobool82 = icmp ne i32 %and81, 0, !dbg !5997
  br i1 %tobool82, label %if.then83, label %if.else117, !dbg !5998

if.then83:                                        ; preds = %if.end80
  store i32 0, i32* %b, align 4, !dbg !5999
  br label %for.cond, !dbg !6002

for.cond:                                         ; preds = %for.inc114, %if.then83
  %73 = load i32, i32* %b, align 4, !dbg !6003
  %74 = load i32, i32* %sizeu, align 4, !dbg !6005
  %cmp84 = icmp slt i32 %73, %74, !dbg !6006
  br i1 %cmp84, label %for.body, label %for.end116, !dbg !6007

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %a, align 4, !dbg !6008
  br label %for.cond86, !dbg !6011

for.cond86:                                       ; preds = %for.inc, %for.body
  %75 = load i32, i32* %a, align 4, !dbg !6012
  %76 = load i32, i32* %sizev, align 4, !dbg !6014
  %cmp87 = icmp slt i32 %75, %76, !dbg !6015
  br i1 %cmp87, label %for.body89, label %for.end, !dbg !6016

for.body89:                                       ; preds = %for.cond86
  %77 = load i32, i32* %sizev, align 4, !dbg !6017
  %cmp90 = icmp slt i32 %77, 2, !dbg !6020
  br i1 %cmp90, label %if.then92, label %if.else, !dbg !6021

if.then92:                                        ; preds = %for.body89
  %78 = load float*, float** %fp, align 8, !dbg !6022
  %arrayidx = getelementptr inbounds float, float* %78, i64 0, !dbg !6022
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !6023
  br label %if.end98, !dbg !6022

if.else:                                          ; preds = %for.body89
  %79 = load i32, i32* %a, align 4, !dbg !6024
  %conv93 = sitofp i32 %79 to float, !dbg !6025
  %mul94 = fmul float 2.000000e+00, %conv93, !dbg !6026
  %80 = load i32, i32* %sizev, align 4, !dbg !6027
  %sub = sub nsw i32 %80, 1, !dbg !6028
  %conv95 = sitofp i32 %sub to float, !dbg !6029
  %div = fdiv float %mul94, %conv95, !dbg !6030
  %add96 = fadd float -1.000000e+00, %div, !dbg !6031
  %81 = load float*, float** %fp, align 8, !dbg !6032
  %arrayidx97 = getelementptr inbounds float, float* %81, i64 0, !dbg !6032
  store float %add96, float* %arrayidx97, align 4, !dbg !6033
  br label %if.end98

if.end98:                                         ; preds = %if.else, %if.then92
  %82 = load i32, i32* %sizeu, align 4, !dbg !6034
  %cmp99 = icmp slt i32 %82, 2, !dbg !6036
  br i1 %cmp99, label %if.then101, label %if.else103, !dbg !6037

if.then101:                                       ; preds = %if.end98
  %83 = load float*, float** %fp, align 8, !dbg !6038
  %arrayidx102 = getelementptr inbounds float, float* %83, i64 1, !dbg !6038
  store float 0.000000e+00, float* %arrayidx102, align 4, !dbg !6039
  br label %if.end111, !dbg !6038

if.else103:                                       ; preds = %if.end98
  %84 = load i32, i32* %b, align 4, !dbg !6040
  %conv104 = sitofp i32 %84 to float, !dbg !6041
  %mul105 = fmul float 2.000000e+00, %conv104, !dbg !6042
  %85 = load i32, i32* %sizeu, align 4, !dbg !6043
  %sub106 = sub nsw i32 %85, 1, !dbg !6044
  %conv107 = sitofp i32 %sub106 to float, !dbg !6045
  %div108 = fdiv float %mul105, %conv107, !dbg !6046
  %add109 = fadd float -1.000000e+00, %div108, !dbg !6047
  %86 = load float*, float** %fp, align 8, !dbg !6048
  %arrayidx110 = getelementptr inbounds float, float* %86, i64 1, !dbg !6048
  store float %add109, float* %arrayidx110, align 4, !dbg !6049
  br label %if.end111

if.end111:                                        ; preds = %if.else103, %if.then101
  %87 = load float*, float** %fp, align 8, !dbg !6050
  %arrayidx112 = getelementptr inbounds float, float* %87, i64 2, !dbg !6050
  store float 0.000000e+00, float* %arrayidx112, align 4, !dbg !6051
  %88 = load float*, float** %fp, align 8, !dbg !6052
  %add.ptr = getelementptr inbounds float, float* %88, i64 3, !dbg !6052
  store float* %add.ptr, float** %fp, align 8, !dbg !6052
  br label %for.inc, !dbg !6053

for.inc:                                          ; preds = %if.end111
  %89 = load i32, i32* %a, align 4, !dbg !6054
  %inc113 = add nsw i32 %89, 1, !dbg !6054
  store i32 %inc113, i32* %a, align 4, !dbg !6054
  br label %for.cond86, !dbg !6055, !llvm.loop !6056

for.end:                                          ; preds = %for.cond86
  br label %for.inc114, !dbg !6058

for.inc114:                                       ; preds = %for.end
  %90 = load i32, i32* %b, align 4, !dbg !6059
  %inc115 = add nsw i32 %90, 1, !dbg !6059
  store i32 %inc115, i32* %b, align 4, !dbg !6059
  br label %for.cond, !dbg !6060, !llvm.loop !6061

for.end116:                                       ; preds = %for.cond
  br label %if.end192, !dbg !6063

if.else117:                                       ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i32* %size, metadata !6064, metadata !DIExpression()), !dbg !6066
  %91 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6067
  %pntsu118 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %91, i32 0, i32 6, !dbg !6068
  %92 = load i32, i32* %pntsu118, align 8, !dbg !6068
  %93 = load i32, i32* %resolu, align 4, !dbg !6069
  %mul119 = mul nsw i32 %92, %93, !dbg !6070
  %94 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6071
  %pntsv120 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %94, i32 0, i32 7, !dbg !6072
  %95 = load i32, i32* %pntsv120, align 4, !dbg !6072
  %96 = load i32, i32* %resolv, align 4, !dbg !6073
  %mul121 = mul nsw i32 %95, %96, !dbg !6074
  %mul122 = mul nsw i32 %mul119, %mul121, !dbg !6075
  %mul123 = mul nsw i32 %mul122, 3, !dbg !6076
  %conv124 = sext i32 %mul123 to i64, !dbg !6077
  %mul125 = mul i64 %conv124, 4, !dbg !6078
  %conv126 = trunc i64 %mul125 to i32, !dbg !6077
  store i32 %conv126, i32* %size, align 4, !dbg !6066
  call void @llvm.dbg.declare(metadata float** %_tdata, metadata !6079, metadata !DIExpression()), !dbg !6080
  %97 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6081
  %98 = load i32, i32* %size, align 4, !dbg !6082
  %conv127 = sext i32 %98 to i64, !dbg !6082
  %call128 = call i8* %97(i64 %conv127, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0)), !dbg !6081
  %99 = bitcast i8* %call128 to float*, !dbg !6081
  store float* %99, float** %_tdata, align 8, !dbg !6080
  call void @llvm.dbg.declare(metadata float** %tdata, metadata !6083, metadata !DIExpression()), !dbg !6084
  %100 = load float*, float** %_tdata, align 8, !dbg !6085
  store float* %100, float** %tdata, align 8, !dbg !6084
  %101 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6086
  %102 = load float*, float** %tdata, align 8, !dbg !6087
  %103 = load i32, i32* %resolu, align 4, !dbg !6088
  %104 = load i32, i32* %resolv, align 4, !dbg !6089
  call void @BKE_nurb_makeFaces(%struct.Nurb* %101, float* %102, i32 0, i32 %103, i32 %104), !dbg !6090
  store i32 0, i32* %b, align 4, !dbg !6091
  br label %for.cond129, !dbg !6093

for.cond129:                                      ; preds = %for.inc189, %if.else117
  %105 = load i32, i32* %b, align 4, !dbg !6094
  %106 = load i32, i32* %sizeu, align 4, !dbg !6096
  %cmp130 = icmp slt i32 %105, %106, !dbg !6097
  br i1 %cmp130, label %for.body132, label %for.end191, !dbg !6098

for.body132:                                      ; preds = %for.cond129
  call void @llvm.dbg.declare(metadata i32* %use_b, metadata !6099, metadata !DIExpression()), !dbg !6101
  %107 = load i32, i32* %b, align 4, !dbg !6102
  store i32 %107, i32* %use_b, align 4, !dbg !6101
  %108 = load i32, i32* %b, align 4, !dbg !6103
  %109 = load i32, i32* %sizeu, align 4, !dbg !6105
  %sub133 = sub nsw i32 %109, 1, !dbg !6106
  %cmp134 = icmp eq i32 %108, %sub133, !dbg !6107
  br i1 %cmp134, label %land.lhs.true, label %if.end141, !dbg !6108

land.lhs.true:                                    ; preds = %for.body132
  %110 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6109
  %flagu136 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %110, i32 0, i32 13, !dbg !6110
  %111 = load i16, i16* %flagu136, align 4, !dbg !6110
  %conv137 = sext i16 %111 to i32, !dbg !6109
  %and138 = and i32 %conv137, 1, !dbg !6111
  %tobool139 = icmp ne i32 %and138, 0, !dbg !6111
  br i1 %tobool139, label %if.then140, label %if.end141, !dbg !6112

if.then140:                                       ; preds = %land.lhs.true
  store i32 0, i32* %use_b, align 4, !dbg !6113
  br label %if.end141, !dbg !6114

if.end141:                                        ; preds = %if.then140, %land.lhs.true, %for.body132
  store i32 0, i32* %a, align 4, !dbg !6115
  br label %for.cond142, !dbg !6117

for.cond142:                                      ; preds = %for.inc186, %if.end141
  %112 = load i32, i32* %a, align 4, !dbg !6118
  %113 = load i32, i32* %sizev, align 4, !dbg !6120
  %cmp143 = icmp slt i32 %112, %113, !dbg !6121
  br i1 %cmp143, label %for.body145, label %for.end188, !dbg !6122

for.body145:                                      ; preds = %for.cond142
  call void @llvm.dbg.declare(metadata i32* %use_a, metadata !6123, metadata !DIExpression()), !dbg !6125
  %114 = load i32, i32* %a, align 4, !dbg !6126
  store i32 %114, i32* %use_a, align 4, !dbg !6125
  %115 = load i32, i32* %a, align 4, !dbg !6127
  %116 = load i32, i32* %sizev, align 4, !dbg !6129
  %sub146 = sub nsw i32 %116, 1, !dbg !6130
  %cmp147 = icmp eq i32 %115, %sub146, !dbg !6131
  br i1 %cmp147, label %land.lhs.true149, label %if.end155, !dbg !6132

land.lhs.true149:                                 ; preds = %for.body145
  %117 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6133
  %flagv150 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %117, i32 0, i32 14, !dbg !6134
  %118 = load i16, i16* %flagv150, align 2, !dbg !6134
  %conv151 = sext i16 %118 to i32, !dbg !6133
  %and152 = and i32 %conv151, 1, !dbg !6135
  %tobool153 = icmp ne i32 %and152, 0, !dbg !6135
  br i1 %tobool153, label %if.then154, label %if.end155, !dbg !6136

if.then154:                                       ; preds = %land.lhs.true149
  store i32 0, i32* %use_a, align 4, !dbg !6137
  br label %if.end155, !dbg !6138

if.end155:                                        ; preds = %if.then154, %land.lhs.true149, %for.body145
  %119 = load float*, float** %_tdata, align 8, !dbg !6139
  %120 = load i32, i32* %use_b, align 4, !dbg !6140
  %121 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6141
  %pntsv156 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %121, i32 0, i32 7, !dbg !6142
  %122 = load i32, i32* %pntsv156, align 4, !dbg !6142
  %123 = load i32, i32* %resolv, align 4, !dbg !6143
  %mul157 = mul nsw i32 %122, %123, !dbg !6144
  %mul158 = mul nsw i32 %120, %mul157, !dbg !6145
  %124 = load i32, i32* %use_a, align 4, !dbg !6146
  %add159 = add nsw i32 %mul158, %124, !dbg !6147
  %mul160 = mul nsw i32 3, %add159, !dbg !6148
  %idx.ext = sext i32 %mul160 to i64, !dbg !6149
  %add.ptr161 = getelementptr inbounds float, float* %119, i64 %idx.ext, !dbg !6149
  store float* %add.ptr161, float** %tdata, align 8, !dbg !6150
  %125 = load float*, float** %tdata, align 8, !dbg !6151
  %arrayidx162 = getelementptr inbounds float, float* %125, i64 0, !dbg !6151
  %126 = load float, float* %arrayidx162, align 4, !dbg !6151
  %127 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6152
  %loc = getelementptr inbounds %struct.Curve, %struct.Curve* %127, i32 0, i32 11, !dbg !6153
  %arrayidx163 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !6152
  %128 = load float, float* %arrayidx163, align 8, !dbg !6152
  %sub164 = fsub float %126, %128, !dbg !6154
  %129 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6155
  %size165 = getelementptr inbounds %struct.Curve, %struct.Curve* %129, i32 0, i32 12, !dbg !6156
  %arrayidx166 = getelementptr inbounds [3 x float], [3 x float]* %size165, i64 0, i64 0, !dbg !6155
  %130 = load float, float* %arrayidx166, align 4, !dbg !6155
  %div167 = fdiv float %sub164, %130, !dbg !6157
  %131 = load float*, float** %fp, align 8, !dbg !6158
  %arrayidx168 = getelementptr inbounds float, float* %131, i64 0, !dbg !6158
  store float %div167, float* %arrayidx168, align 4, !dbg !6159
  %132 = load float*, float** %tdata, align 8, !dbg !6160
  %arrayidx169 = getelementptr inbounds float, float* %132, i64 1, !dbg !6160
  %133 = load float, float* %arrayidx169, align 4, !dbg !6160
  %134 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6161
  %loc170 = getelementptr inbounds %struct.Curve, %struct.Curve* %134, i32 0, i32 11, !dbg !6162
  %arrayidx171 = getelementptr inbounds [3 x float], [3 x float]* %loc170, i64 0, i64 1, !dbg !6161
  %135 = load float, float* %arrayidx171, align 4, !dbg !6161
  %sub172 = fsub float %133, %135, !dbg !6163
  %136 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6164
  %size173 = getelementptr inbounds %struct.Curve, %struct.Curve* %136, i32 0, i32 12, !dbg !6165
  %arrayidx174 = getelementptr inbounds [3 x float], [3 x float]* %size173, i64 0, i64 1, !dbg !6164
  %137 = load float, float* %arrayidx174, align 4, !dbg !6164
  %div175 = fdiv float %sub172, %137, !dbg !6166
  %138 = load float*, float** %fp, align 8, !dbg !6167
  %arrayidx176 = getelementptr inbounds float, float* %138, i64 1, !dbg !6167
  store float %div175, float* %arrayidx176, align 4, !dbg !6168
  %139 = load float*, float** %tdata, align 8, !dbg !6169
  %arrayidx177 = getelementptr inbounds float, float* %139, i64 2, !dbg !6169
  %140 = load float, float* %arrayidx177, align 4, !dbg !6169
  %141 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6170
  %loc178 = getelementptr inbounds %struct.Curve, %struct.Curve* %141, i32 0, i32 11, !dbg !6171
  %arrayidx179 = getelementptr inbounds [3 x float], [3 x float]* %loc178, i64 0, i64 2, !dbg !6170
  %142 = load float, float* %arrayidx179, align 8, !dbg !6170
  %sub180 = fsub float %140, %142, !dbg !6172
  %143 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6173
  %size181 = getelementptr inbounds %struct.Curve, %struct.Curve* %143, i32 0, i32 12, !dbg !6174
  %arrayidx182 = getelementptr inbounds [3 x float], [3 x float]* %size181, i64 0, i64 2, !dbg !6173
  %144 = load float, float* %arrayidx182, align 4, !dbg !6173
  %div183 = fdiv float %sub180, %144, !dbg !6175
  %145 = load float*, float** %fp, align 8, !dbg !6176
  %arrayidx184 = getelementptr inbounds float, float* %145, i64 2, !dbg !6176
  store float %div183, float* %arrayidx184, align 4, !dbg !6177
  %146 = load float*, float** %fp, align 8, !dbg !6178
  %add.ptr185 = getelementptr inbounds float, float* %146, i64 3, !dbg !6178
  store float* %add.ptr185, float** %fp, align 8, !dbg !6178
  br label %for.inc186, !dbg !6179

for.inc186:                                       ; preds = %if.end155
  %147 = load i32, i32* %a, align 4, !dbg !6180
  %inc187 = add nsw i32 %147, 1, !dbg !6180
  store i32 %inc187, i32* %a, align 4, !dbg !6180
  br label %for.cond142, !dbg !6181, !llvm.loop !6182

for.end188:                                       ; preds = %for.cond142
  br label %for.inc189, !dbg !6184

for.inc189:                                       ; preds = %for.end188
  %148 = load i32, i32* %b, align 4, !dbg !6185
  %inc190 = add nsw i32 %148, 1, !dbg !6185
  store i32 %inc190, i32* %b, align 4, !dbg !6185
  br label %for.cond129, !dbg !6186, !llvm.loop !6187

for.end191:                                       ; preds = %for.cond129
  %149 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6189
  %150 = load float*, float** %_tdata, align 8, !dbg !6190
  %151 = bitcast float* %150 to i8*, !dbg !6190
  call void %149(i8* %151), !dbg !6189
  br label %if.end192

if.end192:                                        ; preds = %for.end191, %for.end116
  br label %if.end193, !dbg !6191

if.end193:                                        ; preds = %if.end192, %cond.end57
  %152 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !6192
  %next194 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %152, i32 0, i32 0, !dbg !6193
  %153 = load %struct.Nurb*, %struct.Nurb** %next194, align 8, !dbg !6193
  store %struct.Nurb* %153, %struct.Nurb** %nu, align 8, !dbg !6194
  br label %while.cond34, !dbg !5947, !llvm.loop !6195

while.end195:                                     ; preds = %while.cond34
  %154 = load float*, float** %coord_array, align 8, !dbg !6197
  ret float* %154, !dbg !6198
}

; Function Attrs: noinline nounwind uwtable
define dso_local float* @BKE_curve_make_orco(%struct.Scene* %scene, %struct.Object* %ob, i32* %r_numVerts) #0 !dbg !6199 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %r_numVerts.addr = alloca i32*, align 8
  %cu = alloca %struct.Curve*, align 8
  %dl = alloca %struct.DispList*, align 8
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %fp = alloca float*, align 8
  %coord_array = alloca float*, align 8
  %disp = alloca %struct.ListBase, align 8
  %sizeu = alloca i32, align 4
  %sizev = alloca i32, align 4
  %vert = alloca float*, align 8
  %realv = alloca i32, align 4
  %realu = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6204, metadata !DIExpression()), !dbg !6205
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6206, metadata !DIExpression()), !dbg !6207
  store i32* %r_numVerts, i32** %r_numVerts.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_numVerts.addr, metadata !6208, metadata !DIExpression()), !dbg !6209
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !6210, metadata !DIExpression()), !dbg !6211
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6212
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !6213
  %1 = load i8*, i8** %data, align 8, !dbg !6213
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !6212
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !6211
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !6214, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.declare(metadata i32* %u, metadata !6236, metadata !DIExpression()), !dbg !6237
  call void @llvm.dbg.declare(metadata i32* %v, metadata !6238, metadata !DIExpression()), !dbg !6239
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !6240, metadata !DIExpression()), !dbg !6241
  call void @llvm.dbg.declare(metadata float** %fp, metadata !6242, metadata !DIExpression()), !dbg !6243
  call void @llvm.dbg.declare(metadata float** %coord_array, metadata !6244, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.declare(metadata %struct.ListBase* %disp, metadata !6246, metadata !DIExpression()), !dbg !6247
  %3 = bitcast %struct.ListBase* %disp to i8*, !dbg !6247
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false), !dbg !6247
  %4 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6248
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6249
  call void @BKE_displist_make_curveTypes_forOrco(%struct.Scene* %4, %struct.Object* %5, %struct.ListBase* %disp), !dbg !6250
  store i32 0, i32* %numVerts, align 4, !dbg !6251
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %disp, i32 0, i32 0, !dbg !6252
  %6 = load i8*, i8** %first, align 8, !dbg !6252
  %7 = bitcast i8* %6 to %struct.DispList*, !dbg !6254
  store %struct.DispList* %7, %struct.DispList** %dl, align 8, !dbg !6255
  br label %for.cond, !dbg !6256

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6257
  %tobool = icmp ne %struct.DispList* %8, null, !dbg !6259
  br i1 %tobool, label %for.body, label %for.end, !dbg !6259

for.body:                                         ; preds = %for.cond
  %9 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6260
  %type = getelementptr inbounds %struct.DispList, %struct.DispList* %9, i32 0, i32 2, !dbg !6263
  %10 = load i16, i16* %type, align 8, !dbg !6263
  %conv = sext i16 %10 to i32, !dbg !6260
  %cmp = icmp eq i32 %conv, 4, !dbg !6264
  br i1 %cmp, label %if.then, label %if.else, !dbg !6265

if.then:                                          ; preds = %for.body
  %11 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6266
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %11, i32 0, i32 5, !dbg !6268
  %12 = load i32, i32* %nr, align 8, !dbg !6268
  %13 = load i32, i32* %numVerts, align 4, !dbg !6269
  %add = add nsw i32 %13, %12, !dbg !6269
  store i32 %add, i32* %numVerts, align 4, !dbg !6269
  br label %if.end44, !dbg !6270

if.else:                                          ; preds = %for.body
  %14 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6271
  %type2 = getelementptr inbounds %struct.DispList, %struct.DispList* %14, i32 0, i32 2, !dbg !6273
  %15 = load i16, i16* %type2, align 8, !dbg !6273
  %conv3 = sext i16 %15 to i32, !dbg !6271
  %cmp4 = icmp eq i32 %conv3, 2, !dbg !6274
  br i1 %cmp4, label %if.then6, label %if.end43, !dbg !6275

if.then6:                                         ; preds = %if.else
  %16 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6276
  %flag = getelementptr inbounds %struct.DispList, %struct.DispList* %16, i32 0, i32 3, !dbg !6279
  %17 = load i16, i16* %flag, align 2, !dbg !6279
  %conv7 = sext i16 %17 to i32, !dbg !6276
  %and = and i32 %conv7, 1, !dbg !6280
  %tobool8 = icmp ne i32 %and, 0, !dbg !6280
  br i1 %tobool8, label %if.then9, label %if.else25, !dbg !6281

if.then9:                                         ; preds = %if.then6
  %18 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6282
  %flag10 = getelementptr inbounds %struct.DispList, %struct.DispList* %18, i32 0, i32 3, !dbg !6285
  %19 = load i16, i16* %flag10, align 2, !dbg !6285
  %conv11 = sext i16 %19 to i32, !dbg !6282
  %and12 = and i32 %conv11, 2, !dbg !6286
  %tobool13 = icmp ne i32 %and12, 0, !dbg !6286
  br i1 %tobool13, label %if.then14, label %if.else19, !dbg !6287

if.then14:                                        ; preds = %if.then9
  %20 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6288
  %parts = getelementptr inbounds %struct.DispList, %struct.DispList* %20, i32 0, i32 4, !dbg !6289
  %21 = load i32, i32* %parts, align 4, !dbg !6289
  %add15 = add nsw i32 %21, 1, !dbg !6290
  %22 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6291
  %nr16 = getelementptr inbounds %struct.DispList, %struct.DispList* %22, i32 0, i32 5, !dbg !6292
  %23 = load i32, i32* %nr16, align 8, !dbg !6292
  %add17 = add nsw i32 %23, 1, !dbg !6293
  %mul = mul nsw i32 %add15, %add17, !dbg !6294
  %24 = load i32, i32* %numVerts, align 4, !dbg !6295
  %add18 = add nsw i32 %24, %mul, !dbg !6295
  store i32 %add18, i32* %numVerts, align 4, !dbg !6295
  br label %if.end, !dbg !6296

if.else19:                                        ; preds = %if.then9
  %25 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6297
  %parts20 = getelementptr inbounds %struct.DispList, %struct.DispList* %25, i32 0, i32 4, !dbg !6298
  %26 = load i32, i32* %parts20, align 4, !dbg !6298
  %27 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6299
  %nr21 = getelementptr inbounds %struct.DispList, %struct.DispList* %27, i32 0, i32 5, !dbg !6300
  %28 = load i32, i32* %nr21, align 8, !dbg !6300
  %add22 = add nsw i32 %28, 1, !dbg !6301
  %mul23 = mul nsw i32 %26, %add22, !dbg !6302
  %29 = load i32, i32* %numVerts, align 4, !dbg !6303
  %add24 = add nsw i32 %29, %mul23, !dbg !6303
  store i32 %add24, i32* %numVerts, align 4, !dbg !6303
  br label %if.end

if.end:                                           ; preds = %if.else19, %if.then14
  br label %if.end42, !dbg !6304

if.else25:                                        ; preds = %if.then6
  %30 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6305
  %flag26 = getelementptr inbounds %struct.DispList, %struct.DispList* %30, i32 0, i32 3, !dbg !6307
  %31 = load i16, i16* %flag26, align 2, !dbg !6307
  %conv27 = sext i16 %31 to i32, !dbg !6305
  %and28 = and i32 %conv27, 2, !dbg !6308
  %tobool29 = icmp ne i32 %and28, 0, !dbg !6308
  br i1 %tobool29, label %if.then30, label %if.else36, !dbg !6309

if.then30:                                        ; preds = %if.else25
  %32 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6310
  %parts31 = getelementptr inbounds %struct.DispList, %struct.DispList* %32, i32 0, i32 4, !dbg !6312
  %33 = load i32, i32* %parts31, align 4, !dbg !6312
  %add32 = add nsw i32 %33, 1, !dbg !6313
  %34 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6314
  %nr33 = getelementptr inbounds %struct.DispList, %struct.DispList* %34, i32 0, i32 5, !dbg !6315
  %35 = load i32, i32* %nr33, align 8, !dbg !6315
  %mul34 = mul nsw i32 %add32, %35, !dbg !6316
  %36 = load i32, i32* %numVerts, align 4, !dbg !6317
  %add35 = add nsw i32 %36, %mul34, !dbg !6317
  store i32 %add35, i32* %numVerts, align 4, !dbg !6317
  br label %if.end41, !dbg !6318

if.else36:                                        ; preds = %if.else25
  %37 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6319
  %parts37 = getelementptr inbounds %struct.DispList, %struct.DispList* %37, i32 0, i32 4, !dbg !6320
  %38 = load i32, i32* %parts37, align 4, !dbg !6320
  %39 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6321
  %nr38 = getelementptr inbounds %struct.DispList, %struct.DispList* %39, i32 0, i32 5, !dbg !6322
  %40 = load i32, i32* %nr38, align 8, !dbg !6322
  %mul39 = mul nsw i32 %38, %40, !dbg !6323
  %41 = load i32, i32* %numVerts, align 4, !dbg !6324
  %add40 = add nsw i32 %41, %mul39, !dbg !6324
  store i32 %add40, i32* %numVerts, align 4, !dbg !6324
  br label %if.end41

if.end41:                                         ; preds = %if.else36, %if.then30
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end
  br label %if.end43, !dbg !6325

if.end43:                                         ; preds = %if.end42, %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then
  br label %for.inc, !dbg !6326

for.inc:                                          ; preds = %if.end44
  %42 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6327
  %next = getelementptr inbounds %struct.DispList, %struct.DispList* %42, i32 0, i32 0, !dbg !6328
  %43 = load %struct.DispList*, %struct.DispList** %next, align 8, !dbg !6328
  store %struct.DispList* %43, %struct.DispList** %dl, align 8, !dbg !6329
  br label %for.cond, !dbg !6330, !llvm.loop !6331

for.end:                                          ; preds = %for.cond
  %44 = load i32*, i32** %r_numVerts.addr, align 8, !dbg !6333
  %tobool45 = icmp ne i32* %44, null, !dbg !6333
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !6335

if.then46:                                        ; preds = %for.end
  %45 = load i32, i32* %numVerts, align 4, !dbg !6336
  %46 = load i32*, i32** %r_numVerts.addr, align 8, !dbg !6337
  store i32 %45, i32* %46, align 4, !dbg !6338
  br label %if.end47, !dbg !6339

if.end47:                                         ; preds = %if.then46, %for.end
  %47 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6340
  %48 = load i32, i32* %numVerts, align 4, !dbg !6341
  %conv48 = sext i32 %48 to i64, !dbg !6341
  %mul49 = mul i64 12, %conv48, !dbg !6342
  %call = call i8* %47(i64 %mul49, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0)), !dbg !6340
  %49 = bitcast i8* %call to float*, !dbg !6340
  store float* %49, float** %coord_array, align 8, !dbg !6343
  store float* %49, float** %fp, align 8, !dbg !6344
  %first50 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %disp, i32 0, i32 0, !dbg !6345
  %50 = load i8*, i8** %first50, align 8, !dbg !6345
  %51 = bitcast i8* %50 to %struct.DispList*, !dbg !6347
  store %struct.DispList* %51, %struct.DispList** %dl, align 8, !dbg !6348
  br label %for.cond51, !dbg !6349

for.cond51:                                       ; preds = %for.inc204, %if.end47
  %52 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6350
  %tobool52 = icmp ne %struct.DispList* %52, null, !dbg !6352
  br i1 %tobool52, label %for.body53, label %for.end206, !dbg !6352

for.body53:                                       ; preds = %for.cond51
  %53 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6353
  %type54 = getelementptr inbounds %struct.DispList, %struct.DispList* %53, i32 0, i32 2, !dbg !6356
  %54 = load i16, i16* %type54, align 8, !dbg !6356
  %conv55 = sext i16 %54 to i32, !dbg !6353
  %cmp56 = icmp eq i32 %conv55, 4, !dbg !6357
  br i1 %cmp56, label %if.then58, label %if.else103, !dbg !6358

if.then58:                                        ; preds = %for.body53
  store i32 0, i32* %u, align 4, !dbg !6359
  br label %for.cond59, !dbg !6362

for.cond59:                                       ; preds = %for.inc101, %if.then58
  %55 = load i32, i32* %u, align 4, !dbg !6363
  %56 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6365
  %nr60 = getelementptr inbounds %struct.DispList, %struct.DispList* %56, i32 0, i32 5, !dbg !6366
  %57 = load i32, i32* %nr60, align 8, !dbg !6366
  %cmp61 = icmp slt i32 %55, %57, !dbg !6367
  br i1 %cmp61, label %for.body63, label %for.end102, !dbg !6368

for.body63:                                       ; preds = %for.cond59
  %58 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6369
  %flag64 = getelementptr inbounds %struct.Curve, %struct.Curve* %58, i32 0, i32 23, !dbg !6372
  %59 = load i32, i32* %flag64, align 4, !dbg !6372
  %and65 = and i32 %59, 32, !dbg !6373
  %tobool66 = icmp ne i32 %and65, 0, !dbg !6373
  br i1 %tobool66, label %if.then67, label %if.else75, !dbg !6374

if.then67:                                        ; preds = %for.body63
  %60 = load i32, i32* %u, align 4, !dbg !6375
  %conv68 = sitofp i32 %60 to float, !dbg !6375
  %mul69 = fmul float 2.000000e+00, %conv68, !dbg !6377
  %61 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6378
  %nr70 = getelementptr inbounds %struct.DispList, %struct.DispList* %61, i32 0, i32 5, !dbg !6379
  %62 = load i32, i32* %nr70, align 8, !dbg !6379
  %sub = sub nsw i32 %62, 1, !dbg !6380
  %conv71 = sitofp i32 %sub to float, !dbg !6381
  %div = fdiv float %mul69, %conv71, !dbg !6382
  %sub72 = fsub float %div, 1.000000e+00, !dbg !6383
  %63 = load float*, float** %fp, align 8, !dbg !6384
  %arrayidx = getelementptr inbounds float, float* %63, i64 0, !dbg !6384
  store float %sub72, float* %arrayidx, align 4, !dbg !6385
  %64 = load float*, float** %fp, align 8, !dbg !6386
  %arrayidx73 = getelementptr inbounds float, float* %64, i64 1, !dbg !6386
  store float 0.000000e+00, float* %arrayidx73, align 4, !dbg !6387
  %65 = load float*, float** %fp, align 8, !dbg !6388
  %arrayidx74 = getelementptr inbounds float, float* %65, i64 2, !dbg !6388
  store float 0.000000e+00, float* %arrayidx74, align 4, !dbg !6389
  br label %if.end100, !dbg !6390

if.else75:                                        ; preds = %for.body63
  %66 = load float*, float** %fp, align 8, !dbg !6391
  %67 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6393
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %67, i32 0, i32 8, !dbg !6394
  %68 = load float*, float** %verts, align 8, !dbg !6394
  %69 = load i32, i32* %u, align 4, !dbg !6395
  %mul76 = mul nsw i32 %69, 3, !dbg !6396
  %idxprom = sext i32 %mul76 to i64, !dbg !6393
  %arrayidx77 = getelementptr inbounds float, float* %68, i64 %idxprom, !dbg !6393
  call void @copy_v3_v3(float* %66, float* %arrayidx77), !dbg !6397
  %70 = load float*, float** %fp, align 8, !dbg !6398
  %arrayidx78 = getelementptr inbounds float, float* %70, i64 0, !dbg !6398
  %71 = load float, float* %arrayidx78, align 4, !dbg !6398
  %72 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6399
  %loc = getelementptr inbounds %struct.Curve, %struct.Curve* %72, i32 0, i32 11, !dbg !6400
  %arrayidx79 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !6399
  %73 = load float, float* %arrayidx79, align 8, !dbg !6399
  %sub80 = fsub float %71, %73, !dbg !6401
  %74 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6402
  %size = getelementptr inbounds %struct.Curve, %struct.Curve* %74, i32 0, i32 12, !dbg !6403
  %arrayidx81 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !6402
  %75 = load float, float* %arrayidx81, align 4, !dbg !6402
  %div82 = fdiv float %sub80, %75, !dbg !6404
  %76 = load float*, float** %fp, align 8, !dbg !6405
  %arrayidx83 = getelementptr inbounds float, float* %76, i64 0, !dbg !6405
  store float %div82, float* %arrayidx83, align 4, !dbg !6406
  %77 = load float*, float** %fp, align 8, !dbg !6407
  %arrayidx84 = getelementptr inbounds float, float* %77, i64 1, !dbg !6407
  %78 = load float, float* %arrayidx84, align 4, !dbg !6407
  %79 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6408
  %loc85 = getelementptr inbounds %struct.Curve, %struct.Curve* %79, i32 0, i32 11, !dbg !6409
  %arrayidx86 = getelementptr inbounds [3 x float], [3 x float]* %loc85, i64 0, i64 1, !dbg !6408
  %80 = load float, float* %arrayidx86, align 4, !dbg !6408
  %sub87 = fsub float %78, %80, !dbg !6410
  %81 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6411
  %size88 = getelementptr inbounds %struct.Curve, %struct.Curve* %81, i32 0, i32 12, !dbg !6412
  %arrayidx89 = getelementptr inbounds [3 x float], [3 x float]* %size88, i64 0, i64 1, !dbg !6411
  %82 = load float, float* %arrayidx89, align 4, !dbg !6411
  %div90 = fdiv float %sub87, %82, !dbg !6413
  %83 = load float*, float** %fp, align 8, !dbg !6414
  %arrayidx91 = getelementptr inbounds float, float* %83, i64 1, !dbg !6414
  store float %div90, float* %arrayidx91, align 4, !dbg !6415
  %84 = load float*, float** %fp, align 8, !dbg !6416
  %arrayidx92 = getelementptr inbounds float, float* %84, i64 2, !dbg !6416
  %85 = load float, float* %arrayidx92, align 4, !dbg !6416
  %86 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6417
  %loc93 = getelementptr inbounds %struct.Curve, %struct.Curve* %86, i32 0, i32 11, !dbg !6418
  %arrayidx94 = getelementptr inbounds [3 x float], [3 x float]* %loc93, i64 0, i64 2, !dbg !6417
  %87 = load float, float* %arrayidx94, align 8, !dbg !6417
  %sub95 = fsub float %85, %87, !dbg !6419
  %88 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6420
  %size96 = getelementptr inbounds %struct.Curve, %struct.Curve* %88, i32 0, i32 12, !dbg !6421
  %arrayidx97 = getelementptr inbounds [3 x float], [3 x float]* %size96, i64 0, i64 2, !dbg !6420
  %89 = load float, float* %arrayidx97, align 4, !dbg !6420
  %div98 = fdiv float %sub95, %89, !dbg !6422
  %90 = load float*, float** %fp, align 8, !dbg !6423
  %arrayidx99 = getelementptr inbounds float, float* %90, i64 2, !dbg !6423
  store float %div98, float* %arrayidx99, align 4, !dbg !6424
  br label %if.end100

if.end100:                                        ; preds = %if.else75, %if.then67
  br label %for.inc101, !dbg !6425

for.inc101:                                       ; preds = %if.end100
  %91 = load i32, i32* %u, align 4, !dbg !6426
  %inc = add nsw i32 %91, 1, !dbg !6426
  store i32 %inc, i32* %u, align 4, !dbg !6426
  %92 = load float*, float** %fp, align 8, !dbg !6427
  %add.ptr = getelementptr inbounds float, float* %92, i64 3, !dbg !6427
  store float* %add.ptr, float** %fp, align 8, !dbg !6427
  br label %for.cond59, !dbg !6428, !llvm.loop !6429

for.end102:                                       ; preds = %for.cond59
  br label %if.end203, !dbg !6431

if.else103:                                       ; preds = %for.body53
  %93 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6432
  %type104 = getelementptr inbounds %struct.DispList, %struct.DispList* %93, i32 0, i32 2, !dbg !6434
  %94 = load i16, i16* %type104, align 8, !dbg !6434
  %conv105 = sext i16 %94 to i32, !dbg !6432
  %cmp106 = icmp eq i32 %conv105, 2, !dbg !6435
  br i1 %cmp106, label %if.then108, label %if.end202, !dbg !6436

if.then108:                                       ; preds = %if.else103
  call void @llvm.dbg.declare(metadata i32* %sizeu, metadata !6437, metadata !DIExpression()), !dbg !6439
  %95 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6440
  %nr109 = getelementptr inbounds %struct.DispList, %struct.DispList* %95, i32 0, i32 5, !dbg !6441
  %96 = load i32, i32* %nr109, align 8, !dbg !6441
  store i32 %96, i32* %sizeu, align 4, !dbg !6439
  call void @llvm.dbg.declare(metadata i32* %sizev, metadata !6442, metadata !DIExpression()), !dbg !6443
  %97 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6444
  %parts110 = getelementptr inbounds %struct.DispList, %struct.DispList* %97, i32 0, i32 4, !dbg !6445
  %98 = load i32, i32* %parts110, align 4, !dbg !6445
  store i32 %98, i32* %sizev, align 4, !dbg !6443
  %99 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6446
  %flag111 = getelementptr inbounds %struct.DispList, %struct.DispList* %99, i32 0, i32 3, !dbg !6448
  %100 = load i16, i16* %flag111, align 2, !dbg !6448
  %conv112 = sext i16 %100 to i32, !dbg !6446
  %and113 = and i32 %conv112, 1, !dbg !6449
  %tobool114 = icmp ne i32 %and113, 0, !dbg !6449
  br i1 %tobool114, label %if.then115, label %if.else124, !dbg !6450

if.then115:                                       ; preds = %if.then108
  %101 = load i32, i32* %sizeu, align 4, !dbg !6451
  %inc116 = add nsw i32 %101, 1, !dbg !6451
  store i32 %inc116, i32* %sizeu, align 4, !dbg !6451
  %102 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6453
  %flag117 = getelementptr inbounds %struct.DispList, %struct.DispList* %102, i32 0, i32 3, !dbg !6455
  %103 = load i16, i16* %flag117, align 2, !dbg !6455
  %conv118 = sext i16 %103 to i32, !dbg !6453
  %and119 = and i32 %conv118, 2, !dbg !6456
  %tobool120 = icmp ne i32 %and119, 0, !dbg !6456
  br i1 %tobool120, label %if.then121, label %if.end123, !dbg !6457

if.then121:                                       ; preds = %if.then115
  %104 = load i32, i32* %sizev, align 4, !dbg !6458
  %inc122 = add nsw i32 %104, 1, !dbg !6458
  store i32 %inc122, i32* %sizev, align 4, !dbg !6458
  br label %if.end123, !dbg !6459

if.end123:                                        ; preds = %if.then121, %if.then115
  br label %if.end132, !dbg !6460

if.else124:                                       ; preds = %if.then108
  %105 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6461
  %flag125 = getelementptr inbounds %struct.DispList, %struct.DispList* %105, i32 0, i32 3, !dbg !6463
  %106 = load i16, i16* %flag125, align 2, !dbg !6463
  %conv126 = sext i16 %106 to i32, !dbg !6461
  %and127 = and i32 %conv126, 2, !dbg !6464
  %tobool128 = icmp ne i32 %and127, 0, !dbg !6464
  br i1 %tobool128, label %if.then129, label %if.end131, !dbg !6465

if.then129:                                       ; preds = %if.else124
  %107 = load i32, i32* %sizev, align 4, !dbg !6466
  %inc130 = add nsw i32 %107, 1, !dbg !6466
  store i32 %inc130, i32* %sizev, align 4, !dbg !6466
  br label %if.end131, !dbg !6468

if.end131:                                        ; preds = %if.then129, %if.else124
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.end123
  store i32 0, i32* %u, align 4, !dbg !6469
  br label %for.cond133, !dbg !6471

for.cond133:                                      ; preds = %for.inc199, %if.end132
  %108 = load i32, i32* %u, align 4, !dbg !6472
  %109 = load i32, i32* %sizev, align 4, !dbg !6474
  %cmp134 = icmp slt i32 %108, %109, !dbg !6475
  br i1 %cmp134, label %for.body136, label %for.end201, !dbg !6476

for.body136:                                      ; preds = %for.cond133
  store i32 0, i32* %v, align 4, !dbg !6477
  br label %for.cond137, !dbg !6480

for.cond137:                                      ; preds = %for.inc195, %for.body136
  %110 = load i32, i32* %v, align 4, !dbg !6481
  %111 = load i32, i32* %sizeu, align 4, !dbg !6483
  %cmp138 = icmp slt i32 %110, %111, !dbg !6484
  br i1 %cmp138, label %for.body140, label %for.end198, !dbg !6485

for.body140:                                      ; preds = %for.cond137
  %112 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6486
  %flag141 = getelementptr inbounds %struct.Curve, %struct.Curve* %112, i32 0, i32 23, !dbg !6489
  %113 = load i32, i32* %flag141, align 4, !dbg !6489
  %and142 = and i32 %113, 32, !dbg !6490
  %tobool143 = icmp ne i32 %and142, 0, !dbg !6490
  br i1 %tobool143, label %if.then144, label %if.else160, !dbg !6491

if.then144:                                       ; preds = %for.body140
  %114 = load i32, i32* %u, align 4, !dbg !6492
  %conv145 = sitofp i32 %114 to float, !dbg !6492
  %mul146 = fmul float 2.000000e+00, %conv145, !dbg !6494
  %115 = load i32, i32* %sizev, align 4, !dbg !6495
  %sub147 = sub nsw i32 %115, 1, !dbg !6496
  %conv148 = sitofp i32 %sub147 to float, !dbg !6497
  %div149 = fdiv float %mul146, %conv148, !dbg !6498
  %sub150 = fsub float %div149, 1.000000e+00, !dbg !6499
  %116 = load float*, float** %fp, align 8, !dbg !6500
  %arrayidx151 = getelementptr inbounds float, float* %116, i64 0, !dbg !6500
  store float %sub150, float* %arrayidx151, align 4, !dbg !6501
  %117 = load i32, i32* %v, align 4, !dbg !6502
  %conv152 = sitofp i32 %117 to float, !dbg !6502
  %mul153 = fmul float 2.000000e+00, %conv152, !dbg !6503
  %118 = load i32, i32* %sizeu, align 4, !dbg !6504
  %sub154 = sub nsw i32 %118, 1, !dbg !6505
  %conv155 = sitofp i32 %sub154 to float, !dbg !6506
  %div156 = fdiv float %mul153, %conv155, !dbg !6507
  %sub157 = fsub float %div156, 1.000000e+00, !dbg !6508
  %119 = load float*, float** %fp, align 8, !dbg !6509
  %arrayidx158 = getelementptr inbounds float, float* %119, i64 1, !dbg !6509
  store float %sub157, float* %arrayidx158, align 4, !dbg !6510
  %120 = load float*, float** %fp, align 8, !dbg !6511
  %arrayidx159 = getelementptr inbounds float, float* %120, i64 2, !dbg !6511
  store float 0.000000e+00, float* %arrayidx159, align 4, !dbg !6512
  br label %if.end194, !dbg !6513

if.else160:                                       ; preds = %for.body140
  call void @llvm.dbg.declare(metadata float** %vert, metadata !6514, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.declare(metadata i32* %realv, metadata !6517, metadata !DIExpression()), !dbg !6518
  %121 = load i32, i32* %v, align 4, !dbg !6519
  %122 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6520
  %nr161 = getelementptr inbounds %struct.DispList, %struct.DispList* %122, i32 0, i32 5, !dbg !6521
  %123 = load i32, i32* %nr161, align 8, !dbg !6521
  %rem = srem i32 %121, %123, !dbg !6522
  store i32 %rem, i32* %realv, align 4, !dbg !6518
  call void @llvm.dbg.declare(metadata i32* %realu, metadata !6523, metadata !DIExpression()), !dbg !6524
  %124 = load i32, i32* %u, align 4, !dbg !6525
  %125 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6526
  %parts162 = getelementptr inbounds %struct.DispList, %struct.DispList* %125, i32 0, i32 4, !dbg !6527
  %126 = load i32, i32* %parts162, align 4, !dbg !6527
  %rem163 = srem i32 %124, %126, !dbg !6528
  store i32 %rem163, i32* %realu, align 4, !dbg !6524
  %127 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6529
  %verts164 = getelementptr inbounds %struct.DispList, %struct.DispList* %127, i32 0, i32 8, !dbg !6530
  %128 = load float*, float** %verts164, align 8, !dbg !6530
  %129 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6531
  %nr165 = getelementptr inbounds %struct.DispList, %struct.DispList* %129, i32 0, i32 5, !dbg !6532
  %130 = load i32, i32* %nr165, align 8, !dbg !6532
  %131 = load i32, i32* %realu, align 4, !dbg !6533
  %mul166 = mul nsw i32 %130, %131, !dbg !6534
  %132 = load i32, i32* %realv, align 4, !dbg !6535
  %add167 = add nsw i32 %mul166, %132, !dbg !6536
  %mul168 = mul nsw i32 3, %add167, !dbg !6537
  %idx.ext = sext i32 %mul168 to i64, !dbg !6538
  %add.ptr169 = getelementptr inbounds float, float* %128, i64 %idx.ext, !dbg !6538
  store float* %add.ptr169, float** %vert, align 8, !dbg !6539
  %133 = load float*, float** %fp, align 8, !dbg !6540
  %134 = load float*, float** %vert, align 8, !dbg !6541
  call void @copy_v3_v3(float* %133, float* %134), !dbg !6542
  %135 = load float*, float** %fp, align 8, !dbg !6543
  %arrayidx170 = getelementptr inbounds float, float* %135, i64 0, !dbg !6543
  %136 = load float, float* %arrayidx170, align 4, !dbg !6543
  %137 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6544
  %loc171 = getelementptr inbounds %struct.Curve, %struct.Curve* %137, i32 0, i32 11, !dbg !6545
  %arrayidx172 = getelementptr inbounds [3 x float], [3 x float]* %loc171, i64 0, i64 0, !dbg !6544
  %138 = load float, float* %arrayidx172, align 8, !dbg !6544
  %sub173 = fsub float %136, %138, !dbg !6546
  %139 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6547
  %size174 = getelementptr inbounds %struct.Curve, %struct.Curve* %139, i32 0, i32 12, !dbg !6548
  %arrayidx175 = getelementptr inbounds [3 x float], [3 x float]* %size174, i64 0, i64 0, !dbg !6547
  %140 = load float, float* %arrayidx175, align 4, !dbg !6547
  %div176 = fdiv float %sub173, %140, !dbg !6549
  %141 = load float*, float** %fp, align 8, !dbg !6550
  %arrayidx177 = getelementptr inbounds float, float* %141, i64 0, !dbg !6550
  store float %div176, float* %arrayidx177, align 4, !dbg !6551
  %142 = load float*, float** %fp, align 8, !dbg !6552
  %arrayidx178 = getelementptr inbounds float, float* %142, i64 1, !dbg !6552
  %143 = load float, float* %arrayidx178, align 4, !dbg !6552
  %144 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6553
  %loc179 = getelementptr inbounds %struct.Curve, %struct.Curve* %144, i32 0, i32 11, !dbg !6554
  %arrayidx180 = getelementptr inbounds [3 x float], [3 x float]* %loc179, i64 0, i64 1, !dbg !6553
  %145 = load float, float* %arrayidx180, align 4, !dbg !6553
  %sub181 = fsub float %143, %145, !dbg !6555
  %146 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6556
  %size182 = getelementptr inbounds %struct.Curve, %struct.Curve* %146, i32 0, i32 12, !dbg !6557
  %arrayidx183 = getelementptr inbounds [3 x float], [3 x float]* %size182, i64 0, i64 1, !dbg !6556
  %147 = load float, float* %arrayidx183, align 4, !dbg !6556
  %div184 = fdiv float %sub181, %147, !dbg !6558
  %148 = load float*, float** %fp, align 8, !dbg !6559
  %arrayidx185 = getelementptr inbounds float, float* %148, i64 1, !dbg !6559
  store float %div184, float* %arrayidx185, align 4, !dbg !6560
  %149 = load float*, float** %fp, align 8, !dbg !6561
  %arrayidx186 = getelementptr inbounds float, float* %149, i64 2, !dbg !6561
  %150 = load float, float* %arrayidx186, align 4, !dbg !6561
  %151 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6562
  %loc187 = getelementptr inbounds %struct.Curve, %struct.Curve* %151, i32 0, i32 11, !dbg !6563
  %arrayidx188 = getelementptr inbounds [3 x float], [3 x float]* %loc187, i64 0, i64 2, !dbg !6562
  %152 = load float, float* %arrayidx188, align 8, !dbg !6562
  %sub189 = fsub float %150, %152, !dbg !6564
  %153 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6565
  %size190 = getelementptr inbounds %struct.Curve, %struct.Curve* %153, i32 0, i32 12, !dbg !6566
  %arrayidx191 = getelementptr inbounds [3 x float], [3 x float]* %size190, i64 0, i64 2, !dbg !6565
  %154 = load float, float* %arrayidx191, align 4, !dbg !6565
  %div192 = fdiv float %sub189, %154, !dbg !6567
  %155 = load float*, float** %fp, align 8, !dbg !6568
  %arrayidx193 = getelementptr inbounds float, float* %155, i64 2, !dbg !6568
  store float %div192, float* %arrayidx193, align 4, !dbg !6569
  br label %if.end194

if.end194:                                        ; preds = %if.else160, %if.then144
  br label %for.inc195, !dbg !6570

for.inc195:                                       ; preds = %if.end194
  %156 = load i32, i32* %v, align 4, !dbg !6571
  %inc196 = add nsw i32 %156, 1, !dbg !6571
  store i32 %inc196, i32* %v, align 4, !dbg !6571
  %157 = load float*, float** %fp, align 8, !dbg !6572
  %add.ptr197 = getelementptr inbounds float, float* %157, i64 3, !dbg !6572
  store float* %add.ptr197, float** %fp, align 8, !dbg !6572
  br label %for.cond137, !dbg !6573, !llvm.loop !6574

for.end198:                                       ; preds = %for.cond137
  br label %for.inc199, !dbg !6576

for.inc199:                                       ; preds = %for.end198
  %158 = load i32, i32* %u, align 4, !dbg !6577
  %inc200 = add nsw i32 %158, 1, !dbg !6577
  store i32 %inc200, i32* %u, align 4, !dbg !6577
  br label %for.cond133, !dbg !6578, !llvm.loop !6579

for.end201:                                       ; preds = %for.cond133
  br label %if.end202, !dbg !6581

if.end202:                                        ; preds = %for.end201, %if.else103
  br label %if.end203

if.end203:                                        ; preds = %if.end202, %for.end102
  br label %for.inc204, !dbg !6582

for.inc204:                                       ; preds = %if.end203
  %159 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6583
  %next205 = getelementptr inbounds %struct.DispList, %struct.DispList* %159, i32 0, i32 0, !dbg !6584
  %160 = load %struct.DispList*, %struct.DispList** %next205, align 8, !dbg !6584
  store %struct.DispList* %160, %struct.DispList** %dl, align 8, !dbg !6585
  br label %for.cond51, !dbg !6586, !llvm.loop !6587

for.end206:                                       ; preds = %for.cond51
  call void @BKE_displist_free(%struct.ListBase* %disp), !dbg !6589
  %161 = load float*, float** %coord_array, align 8, !dbg !6590
  ret float* %161, !dbg !6591
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local void @BKE_displist_make_curveTypes_forOrco(%struct.Scene*, %struct.Object*, %struct.ListBase*) #2

declare dso_local void @BKE_displist_free(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_bevel_make(%struct.Scene* %scene, %struct.Object* %ob, %struct.ListBase* %disp, i8 zeroext %for_render, i8 zeroext %use_render_resolution) #0 !dbg !6592 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %disp.addr = alloca %struct.ListBase*, align 8
  %for_render.addr = alloca i8, align 1
  %use_render_resolution.addr = alloca i8, align 1
  %dl = alloca %struct.DispList*, align 8
  %dlnew = alloca %struct.DispList*, align 8
  %bevcu = alloca %struct.Curve*, align 8
  %cu = alloca %struct.Curve*, align 8
  %fp = alloca float*, align 8
  %facx = alloca float, align 4
  %facy = alloca float, align 4
  %angle = alloca float, align 4
  %dangle = alloca float, align 4
  %nr = alloca i32, align 4
  %a = alloca i32, align 4
  %bevdisp = alloca %struct.ListBase, align 8
  %dnr = alloca i16, align 2
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6596, metadata !DIExpression()), !dbg !6597
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6598, metadata !DIExpression()), !dbg !6599
  store %struct.ListBase* %disp, %struct.ListBase** %disp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %disp.addr, metadata !6600, metadata !DIExpression()), !dbg !6601
  store i8 %for_render, i8* %for_render.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %for_render.addr, metadata !6602, metadata !DIExpression()), !dbg !6603
  store i8 %use_render_resolution, i8* %use_render_resolution.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_render_resolution.addr, metadata !6604, metadata !DIExpression()), !dbg !6605
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !6606, metadata !DIExpression()), !dbg !6607
  call void @llvm.dbg.declare(metadata %struct.DispList** %dlnew, metadata !6608, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.declare(metadata %struct.Curve** %bevcu, metadata !6610, metadata !DIExpression()), !dbg !6611
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !6612, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.declare(metadata float** %fp, metadata !6614, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.declare(metadata float* %facx, metadata !6616, metadata !DIExpression()), !dbg !6617
  call void @llvm.dbg.declare(metadata float* %facy, metadata !6618, metadata !DIExpression()), !dbg !6619
  call void @llvm.dbg.declare(metadata float* %angle, metadata !6620, metadata !DIExpression()), !dbg !6621
  call void @llvm.dbg.declare(metadata float* %dangle, metadata !6622, metadata !DIExpression()), !dbg !6623
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !6624, metadata !DIExpression()), !dbg !6625
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6626, metadata !DIExpression()), !dbg !6627
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6628
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !6629
  %1 = load i8*, i8** %data, align 8, !dbg !6629
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !6628
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !6630
  %3 = load %struct.ListBase*, %struct.ListBase** %disp.addr, align 8, !dbg !6631
  call void @BLI_listbase_clear(%struct.ListBase* %3), !dbg !6632
  %4 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6633
  %bevobj = getelementptr inbounds %struct.Curve, %struct.Curve* %4, i32 0, i32 5, !dbg !6635
  %5 = load %struct.Object*, %struct.Object** %bevobj, align 8, !dbg !6635
  %tobool = icmp ne %struct.Object* %5, null, !dbg !6633
  br i1 %tobool, label %if.then, label %if.else76, !dbg !6636

if.then:                                          ; preds = %entry
  %6 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6637
  %bevobj1 = getelementptr inbounds %struct.Curve, %struct.Curve* %6, i32 0, i32 5, !dbg !6640
  %7 = load %struct.Object*, %struct.Object** %bevobj1, align 8, !dbg !6640
  %type = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 3, !dbg !6641
  %8 = load i16, i16* %type, align 8, !dbg !6641
  %conv = sext i16 %8 to i32, !dbg !6637
  %cmp = icmp ne i32 %conv, 2, !dbg !6642
  br i1 %cmp, label %if.then3, label %if.end, !dbg !6643

if.then3:                                         ; preds = %if.then
  br label %if.end317, !dbg !6644

if.end:                                           ; preds = %if.then
  %9 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6645
  %bevobj4 = getelementptr inbounds %struct.Curve, %struct.Curve* %9, i32 0, i32 5, !dbg !6646
  %10 = load %struct.Object*, %struct.Object** %bevobj4, align 8, !dbg !6646
  %data5 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 19, !dbg !6647
  %11 = load i8*, i8** %data5, align 8, !dbg !6647
  %12 = bitcast i8* %11 to %struct.Curve*, !dbg !6645
  store %struct.Curve* %12, %struct.Curve** %bevcu, align 8, !dbg !6648
  %13 = load %struct.Curve*, %struct.Curve** %bevcu, align 8, !dbg !6649
  %ext1 = getelementptr inbounds %struct.Curve, %struct.Curve* %13, i32 0, i32 25, !dbg !6651
  %14 = load float, float* %ext1, align 4, !dbg !6651
  %cmp6 = fcmp oeq float %14, 0.000000e+00, !dbg !6652
  br i1 %cmp6, label %land.lhs.true, label %if.end75, !dbg !6653

land.lhs.true:                                    ; preds = %if.end
  %15 = load %struct.Curve*, %struct.Curve** %bevcu, align 8, !dbg !6654
  %ext2 = getelementptr inbounds %struct.Curve, %struct.Curve* %15, i32 0, i32 26, !dbg !6655
  %16 = load float, float* %ext2, align 8, !dbg !6655
  %cmp8 = fcmp oeq float %16, 0.000000e+00, !dbg !6656
  br i1 %cmp8, label %if.then10, label %if.end75, !dbg !6657

if.then10:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.ListBase* %bevdisp, metadata !6658, metadata !DIExpression()), !dbg !6660
  %17 = bitcast %struct.ListBase* %bevdisp to i8*, !dbg !6660
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false), !dbg !6660
  %18 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6661
  %bevobj11 = getelementptr inbounds %struct.Curve, %struct.Curve* %18, i32 0, i32 5, !dbg !6662
  %19 = load %struct.Object*, %struct.Object** %bevobj11, align 8, !dbg !6662
  %size = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 36, !dbg !6663
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !6661
  %20 = load float, float* %arrayidx, align 4, !dbg !6661
  store float %20, float* %facx, align 4, !dbg !6664
  %21 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6665
  %bevobj12 = getelementptr inbounds %struct.Curve, %struct.Curve* %21, i32 0, i32 5, !dbg !6666
  %22 = load %struct.Object*, %struct.Object** %bevobj12, align 8, !dbg !6666
  %size13 = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 36, !dbg !6667
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %size13, i64 0, i64 1, !dbg !6665
  %23 = load float, float* %arrayidx14, align 4, !dbg !6665
  store float %23, float* %facy, align 4, !dbg !6668
  %24 = load i8, i8* %for_render.addr, align 1, !dbg !6669
  %tobool15 = icmp ne i8 %24, 0, !dbg !6669
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !6671

if.then16:                                        ; preds = %if.then10
  %25 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6672
  %26 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6674
  %bevobj17 = getelementptr inbounds %struct.Curve, %struct.Curve* %26, i32 0, i32 5, !dbg !6675
  %27 = load %struct.Object*, %struct.Object** %bevobj17, align 8, !dbg !6675
  %28 = load i8, i8* %use_render_resolution.addr, align 1, !dbg !6676
  call void @BKE_displist_make_curveTypes_forRender(%struct.Scene* %25, %struct.Object* %27, %struct.ListBase* %bevdisp, %struct.DerivedMesh** null, i8 zeroext 0, i8 zeroext %28), !dbg !6677
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %bevdisp, i32 0, i32 0, !dbg !6678
  %29 = load i8*, i8** %first, align 8, !dbg !6678
  %30 = bitcast i8* %29 to %struct.DispList*, !dbg !6679
  store %struct.DispList* %30, %struct.DispList** %dl, align 8, !dbg !6680
  br label %if.end27, !dbg !6681

if.else:                                          ; preds = %if.then10
  %31 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6682
  %bevobj18 = getelementptr inbounds %struct.Curve, %struct.Curve* %31, i32 0, i32 5, !dbg !6684
  %32 = load %struct.Object*, %struct.Object** %bevobj18, align 8, !dbg !6684
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 118, !dbg !6685
  %33 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !6685
  %tobool19 = icmp ne %struct.CurveCache* %33, null, !dbg !6682
  br i1 %tobool19, label %if.then20, label %if.else25, !dbg !6686

if.then20:                                        ; preds = %if.else
  %34 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6687
  %bevobj21 = getelementptr inbounds %struct.Curve, %struct.Curve* %34, i32 0, i32 5, !dbg !6689
  %35 = load %struct.Object*, %struct.Object** %bevobj21, align 8, !dbg !6689
  %curve_cache22 = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 118, !dbg !6690
  %36 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache22, align 8, !dbg !6690
  %disp23 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %36, i32 0, i32 0, !dbg !6691
  %first24 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %disp23, i32 0, i32 0, !dbg !6692
  %37 = load i8*, i8** %first24, align 8, !dbg !6692
  %38 = bitcast i8* %37 to %struct.DispList*, !dbg !6687
  store %struct.DispList* %38, %struct.DispList** %dl, align 8, !dbg !6693
  br label %if.end26, !dbg !6694

if.else25:                                        ; preds = %if.else
  store %struct.DispList* null, %struct.DispList** %dl, align 8, !dbg !6695
  br label %if.end26

if.end26:                                         ; preds = %if.else25, %if.then20
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then16
  br label %while.cond, !dbg !6697

while.cond:                                       ; preds = %if.end73, %if.end27
  %39 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6698
  %tobool28 = icmp ne %struct.DispList* %39, null, !dbg !6697
  br i1 %tobool28, label %while.body, label %while.end74, !dbg !6697

while.body:                                       ; preds = %while.cond
  %40 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6699
  %type29 = getelementptr inbounds %struct.DispList, %struct.DispList* %40, i32 0, i32 2, !dbg !6699
  %41 = load i16, i16* %type29, align 8, !dbg !6699
  %conv30 = sext i16 %41 to i32, !dbg !6699
  %cmp31 = icmp eq i32 %conv30, 0, !dbg !6699
  br i1 %cmp31, label %if.then37, label %lor.lhs.false, !dbg !6699

lor.lhs.false:                                    ; preds = %while.body
  %42 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6699
  %type33 = getelementptr inbounds %struct.DispList, %struct.DispList* %42, i32 0, i32 2, !dbg !6699
  %43 = load i16, i16* %type33, align 8, !dbg !6699
  %conv34 = sext i16 %43 to i32, !dbg !6699
  %cmp35 = icmp eq i32 %conv34, 1, !dbg !6699
  br i1 %cmp35, label %if.then37, label %if.end73, !dbg !6702

if.then37:                                        ; preds = %lor.lhs.false, %while.body
  %44 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6703
  %call = call i8* %44(i64 72, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22, i64 0, i64 0)), !dbg !6703
  %45 = bitcast i8* %call to %struct.DispList*, !dbg !6703
  store %struct.DispList* %45, %struct.DispList** %dlnew, align 8, !dbg !6705
  %46 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !6706
  %47 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6707
  %48 = bitcast %struct.DispList* %46 to i8*, !dbg !6708
  %49 = bitcast %struct.DispList* %47 to i8*, !dbg !6708
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 72, i1 false), !dbg !6708
  %50 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6709
  %51 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6710
  %parts = getelementptr inbounds %struct.DispList, %struct.DispList* %51, i32 0, i32 4, !dbg !6711
  %52 = load i32, i32* %parts, align 4, !dbg !6711
  %conv38 = sext i32 %52 to i64, !dbg !6710
  %mul = mul i64 12, %conv38, !dbg !6712
  %53 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6713
  %nr39 = getelementptr inbounds %struct.DispList, %struct.DispList* %53, i32 0, i32 5, !dbg !6714
  %54 = load i32, i32* %nr39, align 8, !dbg !6714
  %conv40 = sext i32 %54 to i64, !dbg !6713
  %mul41 = mul i64 %mul, %conv40, !dbg !6715
  %call42 = call i8* %50(i64 %mul41, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22, i64 0, i64 0)), !dbg !6709
  %55 = bitcast i8* %call42 to float*, !dbg !6709
  %56 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !6716
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %56, i32 0, i32 8, !dbg !6717
  store float* %55, float** %verts, align 8, !dbg !6718
  %57 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !6719
  %verts43 = getelementptr inbounds %struct.DispList, %struct.DispList* %57, i32 0, i32 8, !dbg !6720
  %58 = load float*, float** %verts43, align 8, !dbg !6720
  %59 = bitcast float* %58 to i8*, !dbg !6721
  %60 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6722
  %verts44 = getelementptr inbounds %struct.DispList, %struct.DispList* %60, i32 0, i32 8, !dbg !6723
  %61 = load float*, float** %verts44, align 8, !dbg !6723
  %62 = bitcast float* %61 to i8*, !dbg !6721
  %63 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6724
  %parts45 = getelementptr inbounds %struct.DispList, %struct.DispList* %63, i32 0, i32 4, !dbg !6725
  %64 = load i32, i32* %parts45, align 4, !dbg !6725
  %conv46 = sext i32 %64 to i64, !dbg !6724
  %mul47 = mul i64 12, %conv46, !dbg !6726
  %65 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6727
  %nr48 = getelementptr inbounds %struct.DispList, %struct.DispList* %65, i32 0, i32 5, !dbg !6728
  %66 = load i32, i32* %nr48, align 8, !dbg !6728
  %conv49 = sext i32 %66 to i64, !dbg !6727
  %mul50 = mul i64 %mul47, %conv49, !dbg !6729
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %62, i64 %mul50, i1 false), !dbg !6721
  %67 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !6730
  %type51 = getelementptr inbounds %struct.DispList, %struct.DispList* %67, i32 0, i32 2, !dbg !6732
  %68 = load i16, i16* %type51, align 8, !dbg !6732
  %conv52 = sext i16 %68 to i32, !dbg !6730
  %cmp53 = icmp eq i32 %conv52, 1, !dbg !6733
  br i1 %cmp53, label %if.then55, label %if.end58, !dbg !6734

if.then55:                                        ; preds = %if.then37
  %69 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !6735
  %flag = getelementptr inbounds %struct.DispList, %struct.DispList* %69, i32 0, i32 3, !dbg !6736
  %70 = load i16, i16* %flag, align 2, !dbg !6737
  %conv56 = sext i16 %70 to i32, !dbg !6737
  %or = or i32 %conv56, 12, !dbg !6737
  %conv57 = trunc i32 %or to i16, !dbg !6737
  store i16 %conv57, i16* %flag, align 2, !dbg !6737
  br label %if.end58, !dbg !6735

if.end58:                                         ; preds = %if.then55, %if.then37
  %71 = load %struct.ListBase*, %struct.ListBase** %disp.addr, align 8, !dbg !6738
  %72 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !6739
  %73 = bitcast %struct.DispList* %72 to i8*, !dbg !6739
  call void @BLI_addtail(%struct.ListBase* %71, i8* %73), !dbg !6740
  %74 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !6741
  %verts59 = getelementptr inbounds %struct.DispList, %struct.DispList* %74, i32 0, i32 8, !dbg !6742
  %75 = load float*, float** %verts59, align 8, !dbg !6742
  store float* %75, float** %fp, align 8, !dbg !6743
  %76 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !6744
  %parts60 = getelementptr inbounds %struct.DispList, %struct.DispList* %76, i32 0, i32 4, !dbg !6745
  %77 = load i32, i32* %parts60, align 4, !dbg !6745
  %78 = load %struct.DispList*, %struct.DispList** %dlnew, align 8, !dbg !6746
  %nr61 = getelementptr inbounds %struct.DispList, %struct.DispList* %78, i32 0, i32 5, !dbg !6747
  %79 = load i32, i32* %nr61, align 8, !dbg !6747
  %mul62 = mul nsw i32 %77, %79, !dbg !6748
  store i32 %mul62, i32* %nr, align 4, !dbg !6749
  br label %while.cond63, !dbg !6750

while.cond63:                                     ; preds = %while.body65, %if.end58
  %80 = load i32, i32* %nr, align 4, !dbg !6751
  %dec = add nsw i32 %80, -1, !dbg !6751
  store i32 %dec, i32* %nr, align 4, !dbg !6751
  %tobool64 = icmp ne i32 %80, 0, !dbg !6750
  br i1 %tobool64, label %while.body65, label %while.end, !dbg !6750

while.body65:                                     ; preds = %while.cond63
  %81 = load float*, float** %fp, align 8, !dbg !6752
  %arrayidx66 = getelementptr inbounds float, float* %81, i64 1, !dbg !6752
  %82 = load float, float* %arrayidx66, align 4, !dbg !6752
  %83 = load float, float* %facy, align 4, !dbg !6754
  %mul67 = fmul float %82, %83, !dbg !6755
  %84 = load float*, float** %fp, align 8, !dbg !6756
  %arrayidx68 = getelementptr inbounds float, float* %84, i64 2, !dbg !6756
  store float %mul67, float* %arrayidx68, align 4, !dbg !6757
  %85 = load float*, float** %fp, align 8, !dbg !6758
  %arrayidx69 = getelementptr inbounds float, float* %85, i64 0, !dbg !6758
  %86 = load float, float* %arrayidx69, align 4, !dbg !6758
  %fneg = fneg float %86, !dbg !6759
  %87 = load float, float* %facx, align 4, !dbg !6760
  %mul70 = fmul float %fneg, %87, !dbg !6761
  %88 = load float*, float** %fp, align 8, !dbg !6762
  %arrayidx71 = getelementptr inbounds float, float* %88, i64 1, !dbg !6762
  store float %mul70, float* %arrayidx71, align 4, !dbg !6763
  %89 = load float*, float** %fp, align 8, !dbg !6764
  %arrayidx72 = getelementptr inbounds float, float* %89, i64 0, !dbg !6764
  store float 0.000000e+00, float* %arrayidx72, align 4, !dbg !6765
  %90 = load float*, float** %fp, align 8, !dbg !6766
  %add.ptr = getelementptr inbounds float, float* %90, i64 3, !dbg !6766
  store float* %add.ptr, float** %fp, align 8, !dbg !6766
  br label %while.cond63, !dbg !6750, !llvm.loop !6767

while.end:                                        ; preds = %while.cond63
  br label %if.end73, !dbg !6769

if.end73:                                         ; preds = %while.end, %lor.lhs.false
  %91 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6770
  %next = getelementptr inbounds %struct.DispList, %struct.DispList* %91, i32 0, i32 0, !dbg !6771
  %92 = load %struct.DispList*, %struct.DispList** %next, align 8, !dbg !6771
  store %struct.DispList* %92, %struct.DispList** %dl, align 8, !dbg !6772
  br label %while.cond, !dbg !6697, !llvm.loop !6773

while.end74:                                      ; preds = %while.cond
  call void @BKE_displist_free(%struct.ListBase* %bevdisp), !dbg !6775
  br label %if.end75, !dbg !6776

if.end75:                                         ; preds = %while.end74, %land.lhs.true, %if.end
  br label %if.end317, !dbg !6777

if.else76:                                        ; preds = %entry
  %93 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6778
  %ext177 = getelementptr inbounds %struct.Curve, %struct.Curve* %93, i32 0, i32 25, !dbg !6780
  %94 = load float, float* %ext177, align 4, !dbg !6780
  %cmp78 = fcmp oeq float %94, 0.000000e+00, !dbg !6781
  br i1 %cmp78, label %land.lhs.true80, label %if.else85, !dbg !6782

land.lhs.true80:                                  ; preds = %if.else76
  %95 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6783
  %ext281 = getelementptr inbounds %struct.Curve, %struct.Curve* %95, i32 0, i32 26, !dbg !6784
  %96 = load float, float* %ext281, align 8, !dbg !6784
  %cmp82 = fcmp oeq float %96, 0.000000e+00, !dbg !6785
  br i1 %cmp82, label %if.then84, label %if.else85, !dbg !6786

if.then84:                                        ; preds = %land.lhs.true80
  br label %if.end316, !dbg !6787

if.else85:                                        ; preds = %land.lhs.true80, %if.else76
  %97 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6789
  %ext286 = getelementptr inbounds %struct.Curve, %struct.Curve* %97, i32 0, i32 26, !dbg !6791
  %98 = load float, float* %ext286, align 8, !dbg !6791
  %cmp87 = fcmp oeq float %98, 0.000000e+00, !dbg !6792
  br i1 %cmp87, label %if.then89, label %if.else107, !dbg !6793

if.then89:                                        ; preds = %if.else85
  %99 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6794
  %call90 = call i8* %99(i64 72, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23, i64 0, i64 0)), !dbg !6794
  %100 = bitcast i8* %call90 to %struct.DispList*, !dbg !6794
  store %struct.DispList* %100, %struct.DispList** %dl, align 8, !dbg !6796
  %101 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6797
  %call91 = call i8* %101(i64 24, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23, i64 0, i64 0)), !dbg !6797
  %102 = bitcast i8* %call91 to float*, !dbg !6797
  %103 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6798
  %verts92 = getelementptr inbounds %struct.DispList, %struct.DispList* %103, i32 0, i32 8, !dbg !6799
  store float* %102, float** %verts92, align 8, !dbg !6800
  %104 = load %struct.ListBase*, %struct.ListBase** %disp.addr, align 8, !dbg !6801
  %105 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6802
  %106 = bitcast %struct.DispList* %105 to i8*, !dbg !6802
  call void @BLI_addtail(%struct.ListBase* %104, i8* %106), !dbg !6803
  %107 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6804
  %type93 = getelementptr inbounds %struct.DispList, %struct.DispList* %107, i32 0, i32 2, !dbg !6805
  store i16 1, i16* %type93, align 8, !dbg !6806
  %108 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6807
  %parts94 = getelementptr inbounds %struct.DispList, %struct.DispList* %108, i32 0, i32 4, !dbg !6808
  store i32 1, i32* %parts94, align 4, !dbg !6809
  %109 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6810
  %flag95 = getelementptr inbounds %struct.DispList, %struct.DispList* %109, i32 0, i32 3, !dbg !6811
  store i16 12, i16* %flag95, align 2, !dbg !6812
  %110 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6813
  %nr96 = getelementptr inbounds %struct.DispList, %struct.DispList* %110, i32 0, i32 5, !dbg !6814
  store i32 2, i32* %nr96, align 8, !dbg !6815
  %111 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6816
  %verts97 = getelementptr inbounds %struct.DispList, %struct.DispList* %111, i32 0, i32 8, !dbg !6817
  %112 = load float*, float** %verts97, align 8, !dbg !6817
  store float* %112, float** %fp, align 8, !dbg !6818
  %113 = load float*, float** %fp, align 8, !dbg !6819
  %arrayidx98 = getelementptr inbounds float, float* %113, i64 1, !dbg !6819
  store float 0.000000e+00, float* %arrayidx98, align 4, !dbg !6820
  %114 = load float*, float** %fp, align 8, !dbg !6821
  %arrayidx99 = getelementptr inbounds float, float* %114, i64 0, !dbg !6821
  store float 0.000000e+00, float* %arrayidx99, align 4, !dbg !6822
  %115 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6823
  %ext1100 = getelementptr inbounds %struct.Curve, %struct.Curve* %115, i32 0, i32 25, !dbg !6824
  %116 = load float, float* %ext1100, align 4, !dbg !6824
  %fneg101 = fneg float %116, !dbg !6825
  %117 = load float*, float** %fp, align 8, !dbg !6826
  %arrayidx102 = getelementptr inbounds float, float* %117, i64 2, !dbg !6826
  store float %fneg101, float* %arrayidx102, align 4, !dbg !6827
  %118 = load float*, float** %fp, align 8, !dbg !6828
  %arrayidx103 = getelementptr inbounds float, float* %118, i64 4, !dbg !6828
  store float 0.000000e+00, float* %arrayidx103, align 4, !dbg !6829
  %119 = load float*, float** %fp, align 8, !dbg !6830
  %arrayidx104 = getelementptr inbounds float, float* %119, i64 3, !dbg !6830
  store float 0.000000e+00, float* %arrayidx104, align 4, !dbg !6831
  %120 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6832
  %ext1105 = getelementptr inbounds %struct.Curve, %struct.Curve* %120, i32 0, i32 25, !dbg !6833
  %121 = load float, float* %ext1105, align 4, !dbg !6833
  %122 = load float*, float** %fp, align 8, !dbg !6834
  %arrayidx106 = getelementptr inbounds float, float* %122, i64 5, !dbg !6834
  store float %121, float* %arrayidx106, align 4, !dbg !6835
  br label %if.end315, !dbg !6836

if.else107:                                       ; preds = %if.else85
  %123 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6837
  %flag108 = getelementptr inbounds %struct.Curve, %struct.Curve* %123, i32 0, i32 23, !dbg !6839
  %124 = load i32, i32* %flag108, align 4, !dbg !6839
  %and = and i32 %124, 6, !dbg !6840
  %cmp109 = icmp eq i32 %and, 0, !dbg !6841
  br i1 %cmp109, label %land.lhs.true111, label %if.else147, !dbg !6842

land.lhs.true111:                                 ; preds = %if.else107
  %125 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6843
  %ext1112 = getelementptr inbounds %struct.Curve, %struct.Curve* %125, i32 0, i32 25, !dbg !6844
  %126 = load float, float* %ext1112, align 4, !dbg !6844
  %cmp113 = fcmp oeq float %126, 0.000000e+00, !dbg !6845
  br i1 %cmp113, label %if.then115, label %if.else147, !dbg !6846

if.then115:                                       ; preds = %land.lhs.true111
  %127 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6847
  %bevresol = getelementptr inbounds %struct.Curve, %struct.Curve* %127, i32 0, i32 21, !dbg !6849
  %128 = load i16, i16* %bevresol, align 8, !dbg !6849
  %conv116 = sext i16 %128 to i32, !dbg !6847
  %mul117 = mul nsw i32 2, %conv116, !dbg !6850
  %add = add nsw i32 4, %mul117, !dbg !6851
  store i32 %add, i32* %nr, align 4, !dbg !6852
  %129 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6853
  %call118 = call i8* %129(i64 72, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i64 0, i64 0)), !dbg !6853
  %130 = bitcast i8* %call118 to %struct.DispList*, !dbg !6853
  store %struct.DispList* %130, %struct.DispList** %dl, align 8, !dbg !6854
  %131 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6855
  %132 = load i32, i32* %nr, align 4, !dbg !6856
  %conv119 = sext i32 %132 to i64, !dbg !6856
  %mul120 = mul i64 %conv119, 12, !dbg !6857
  %call121 = call i8* %131(i64 %mul120, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i64 0, i64 0)), !dbg !6855
  %133 = bitcast i8* %call121 to float*, !dbg !6855
  %134 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6858
  %verts122 = getelementptr inbounds %struct.DispList, %struct.DispList* %134, i32 0, i32 8, !dbg !6859
  store float* %133, float** %verts122, align 8, !dbg !6860
  %135 = load %struct.ListBase*, %struct.ListBase** %disp.addr, align 8, !dbg !6861
  %136 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6862
  %137 = bitcast %struct.DispList* %136 to i8*, !dbg !6862
  call void @BLI_addtail(%struct.ListBase* %135, i8* %137), !dbg !6863
  %138 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6864
  %type123 = getelementptr inbounds %struct.DispList, %struct.DispList* %138, i32 0, i32 2, !dbg !6865
  store i16 0, i16* %type123, align 8, !dbg !6866
  %139 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6867
  %parts124 = getelementptr inbounds %struct.DispList, %struct.DispList* %139, i32 0, i32 4, !dbg !6868
  store i32 1, i32* %parts124, align 4, !dbg !6869
  %140 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6870
  %flag125 = getelementptr inbounds %struct.DispList, %struct.DispList* %140, i32 0, i32 3, !dbg !6871
  store i16 8, i16* %flag125, align 2, !dbg !6872
  %141 = load i32, i32* %nr, align 4, !dbg !6873
  %142 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6874
  %nr126 = getelementptr inbounds %struct.DispList, %struct.DispList* %142, i32 0, i32 5, !dbg !6875
  store i32 %141, i32* %nr126, align 8, !dbg !6876
  %143 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6877
  %verts127 = getelementptr inbounds %struct.DispList, %struct.DispList* %143, i32 0, i32 8, !dbg !6878
  %144 = load float*, float** %verts127, align 8, !dbg !6878
  store float* %144, float** %fp, align 8, !dbg !6879
  %145 = load i32, i32* %nr, align 4, !dbg !6880
  %conv128 = sitofp i32 %145 to float, !dbg !6881
  %div = fdiv float 0x401921FB60000000, %conv128, !dbg !6882
  store float %div, float* %dangle, align 4, !dbg !6883
  %146 = load i32, i32* %nr, align 4, !dbg !6884
  %sub = sub nsw i32 %146, 1, !dbg !6885
  %sub129 = sub nsw i32 0, %sub, !dbg !6886
  %conv130 = sitofp i32 %sub129 to float, !dbg !6886
  %147 = load float, float* %dangle, align 4, !dbg !6887
  %mul131 = fmul float %conv130, %147, !dbg !6888
  store float %mul131, float* %angle, align 4, !dbg !6889
  store i32 0, i32* %a, align 4, !dbg !6890
  br label %for.cond, !dbg !6892

for.cond:                                         ; preds = %for.inc, %if.then115
  %148 = load i32, i32* %a, align 4, !dbg !6893
  %149 = load i32, i32* %nr, align 4, !dbg !6895
  %cmp132 = icmp slt i32 %148, %149, !dbg !6896
  br i1 %cmp132, label %for.body, label %for.end, !dbg !6897

for.body:                                         ; preds = %for.cond
  %150 = load float*, float** %fp, align 8, !dbg !6898
  %arrayidx134 = getelementptr inbounds float, float* %150, i64 0, !dbg !6898
  store float 0.000000e+00, float* %arrayidx134, align 4, !dbg !6900
  %151 = load float, float* %angle, align 4, !dbg !6901
  %call135 = call float @cosf(float %151) #5, !dbg !6902
  %152 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6903
  %ext2136 = getelementptr inbounds %struct.Curve, %struct.Curve* %152, i32 0, i32 26, !dbg !6904
  %153 = load float, float* %ext2136, align 8, !dbg !6904
  %mul137 = fmul float %call135, %153, !dbg !6905
  %154 = load float*, float** %fp, align 8, !dbg !6906
  %arrayidx138 = getelementptr inbounds float, float* %154, i64 1, !dbg !6906
  store float %mul137, float* %arrayidx138, align 4, !dbg !6907
  %155 = load float, float* %angle, align 4, !dbg !6908
  %call139 = call float @sinf(float %155) #5, !dbg !6909
  %156 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6910
  %ext2140 = getelementptr inbounds %struct.Curve, %struct.Curve* %156, i32 0, i32 26, !dbg !6911
  %157 = load float, float* %ext2140, align 8, !dbg !6911
  %mul141 = fmul float %call139, %157, !dbg !6912
  %158 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6913
  %ext1142 = getelementptr inbounds %struct.Curve, %struct.Curve* %158, i32 0, i32 25, !dbg !6914
  %159 = load float, float* %ext1142, align 4, !dbg !6914
  %sub143 = fsub float %mul141, %159, !dbg !6915
  %160 = load float*, float** %fp, align 8, !dbg !6916
  %arrayidx144 = getelementptr inbounds float, float* %160, i64 2, !dbg !6916
  store float %sub143, float* %arrayidx144, align 4, !dbg !6917
  %161 = load float, float* %dangle, align 4, !dbg !6918
  %162 = load float, float* %angle, align 4, !dbg !6919
  %add145 = fadd float %162, %161, !dbg !6919
  store float %add145, float* %angle, align 4, !dbg !6919
  %163 = load float*, float** %fp, align 8, !dbg !6920
  %add.ptr146 = getelementptr inbounds float, float* %163, i64 3, !dbg !6920
  store float* %add.ptr146, float** %fp, align 8, !dbg !6920
  br label %for.inc, !dbg !6921

for.inc:                                          ; preds = %for.body
  %164 = load i32, i32* %a, align 4, !dbg !6922
  %inc = add nsw i32 %164, 1, !dbg !6922
  store i32 %inc, i32* %a, align 4, !dbg !6922
  br label %for.cond, !dbg !6923, !llvm.loop !6924

for.end:                                          ; preds = %for.cond
  br label %if.end314, !dbg !6926

if.else147:                                       ; preds = %land.lhs.true111, %if.else107
  call void @llvm.dbg.declare(metadata i16* %dnr, metadata !6927, metadata !DIExpression()), !dbg !6929
  %165 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6930
  %flag148 = getelementptr inbounds %struct.Curve, %struct.Curve* %165, i32 0, i32 23, !dbg !6932
  %166 = load i32, i32* %flag148, align 4, !dbg !6932
  %and149 = and i32 %166, 4, !dbg !6933
  %tobool150 = icmp ne i32 %and149, 0, !dbg !6933
  br i1 %tobool150, label %if.then155, label %lor.lhs.false151, !dbg !6934

lor.lhs.false151:                                 ; preds = %if.else147
  %167 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6935
  %flag152 = getelementptr inbounds %struct.Curve, %struct.Curve* %167, i32 0, i32 23, !dbg !6936
  %168 = load i32, i32* %flag152, align 4, !dbg !6936
  %and153 = and i32 %168, 2, !dbg !6937
  %tobool154 = icmp ne i32 %and153, 0, !dbg !6937
  br i1 %tobool154, label %if.end209, label %if.then155, !dbg !6938

if.then155:                                       ; preds = %lor.lhs.false151, %if.else147
  %169 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6939
  %bevresol156 = getelementptr inbounds %struct.Curve, %struct.Curve* %169, i32 0, i32 21, !dbg !6941
  %170 = load i16, i16* %bevresol156, align 8, !dbg !6941
  %conv157 = sext i16 %170 to i32, !dbg !6939
  %add158 = add nsw i32 2, %conv157, !dbg !6942
  store i32 %add158, i32* %nr, align 4, !dbg !6943
  %conv159 = trunc i32 %add158 to i16, !dbg !6944
  store i16 %conv159, i16* %dnr, align 2, !dbg !6945
  %171 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6946
  %flag160 = getelementptr inbounds %struct.Curve, %struct.Curve* %171, i32 0, i32 23, !dbg !6948
  %172 = load i32, i32* %flag160, align 4, !dbg !6948
  %and161 = and i32 %172, 6, !dbg !6949
  %cmp162 = icmp eq i32 %and161, 0, !dbg !6950
  br i1 %cmp162, label %if.then164, label %if.end169, !dbg !6951

if.then164:                                       ; preds = %if.then155
  %173 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6952
  %bevresol165 = getelementptr inbounds %struct.Curve, %struct.Curve* %173, i32 0, i32 21, !dbg !6953
  %174 = load i16, i16* %bevresol165, align 8, !dbg !6953
  %conv166 = sext i16 %174 to i32, !dbg !6952
  %mul167 = mul nsw i32 2, %conv166, !dbg !6954
  %add168 = add nsw i32 3, %mul167, !dbg !6955
  store i32 %add168, i32* %nr, align 4, !dbg !6956
  br label %if.end169, !dbg !6957

if.end169:                                        ; preds = %if.then164, %if.then155
  %175 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6958
  %call170 = call i8* %175(i64 72, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i64 0, i64 0)), !dbg !6958
  %176 = bitcast i8* %call170 to %struct.DispList*, !dbg !6958
  store %struct.DispList* %176, %struct.DispList** %dl, align 8, !dbg !6959
  %177 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6960
  %178 = load i32, i32* %nr, align 4, !dbg !6961
  %conv171 = sext i32 %178 to i64, !dbg !6961
  %mul172 = mul i64 %conv171, 12, !dbg !6962
  %call173 = call i8* %177(i64 %mul172, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i64 0, i64 0)), !dbg !6960
  %179 = bitcast i8* %call173 to float*, !dbg !6960
  %180 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6963
  %verts174 = getelementptr inbounds %struct.DispList, %struct.DispList* %180, i32 0, i32 8, !dbg !6964
  store float* %179, float** %verts174, align 8, !dbg !6965
  %181 = load %struct.ListBase*, %struct.ListBase** %disp.addr, align 8, !dbg !6966
  %182 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6967
  %183 = bitcast %struct.DispList* %182 to i8*, !dbg !6967
  call void @BLI_addtail(%struct.ListBase* %181, i8* %183), !dbg !6968
  %184 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6969
  %type175 = getelementptr inbounds %struct.DispList, %struct.DispList* %184, i32 0, i32 2, !dbg !6970
  store i16 1, i16* %type175, align 8, !dbg !6971
  %185 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6972
  %parts176 = getelementptr inbounds %struct.DispList, %struct.DispList* %185, i32 0, i32 4, !dbg !6973
  store i32 1, i32* %parts176, align 4, !dbg !6974
  %186 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6975
  %flag177 = getelementptr inbounds %struct.DispList, %struct.DispList* %186, i32 0, i32 3, !dbg !6976
  store i16 8, i16* %flag177, align 2, !dbg !6977
  %187 = load i32, i32* %nr, align 4, !dbg !6978
  %188 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6979
  %nr178 = getelementptr inbounds %struct.DispList, %struct.DispList* %188, i32 0, i32 5, !dbg !6980
  store i32 %187, i32* %nr178, align 8, !dbg !6981
  %189 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !6982
  %verts179 = getelementptr inbounds %struct.DispList, %struct.DispList* %189, i32 0, i32 8, !dbg !6983
  %190 = load float*, float** %verts179, align 8, !dbg !6983
  store float* %190, float** %fp, align 8, !dbg !6984
  %191 = load i16, i16* %dnr, align 2, !dbg !6985
  %conv180 = sext i16 %191 to i32, !dbg !6985
  %sub181 = sub nsw i32 %conv180, 1, !dbg !6986
  %conv182 = sitofp i32 %sub181 to double, !dbg !6987
  %div183 = fdiv double 0x3FF921FB54442D18, %conv182, !dbg !6988
  %conv184 = fptrunc double %div183 to float, !dbg !6989
  store float %conv184, float* %dangle, align 4, !dbg !6990
  %192 = load i32, i32* %nr, align 4, !dbg !6991
  %sub185 = sub nsw i32 %192, 1, !dbg !6992
  %sub186 = sub nsw i32 0, %sub185, !dbg !6993
  %conv187 = sitofp i32 %sub186 to float, !dbg !6993
  %193 = load float, float* %dangle, align 4, !dbg !6994
  %mul188 = fmul float %conv187, %193, !dbg !6995
  store float %mul188, float* %angle, align 4, !dbg !6996
  store i32 0, i32* %a, align 4, !dbg !6997
  br label %for.cond189, !dbg !6999

for.cond189:                                      ; preds = %for.inc206, %if.end169
  %194 = load i32, i32* %a, align 4, !dbg !7000
  %195 = load i32, i32* %nr, align 4, !dbg !7002
  %cmp190 = icmp slt i32 %194, %195, !dbg !7003
  br i1 %cmp190, label %for.body192, label %for.end208, !dbg !7004

for.body192:                                      ; preds = %for.cond189
  %196 = load float*, float** %fp, align 8, !dbg !7005
  %arrayidx193 = getelementptr inbounds float, float* %196, i64 0, !dbg !7005
  store float 0.000000e+00, float* %arrayidx193, align 4, !dbg !7007
  %197 = load float, float* %angle, align 4, !dbg !7008
  %call194 = call float @cosf(float %197) #5, !dbg !7009
  %198 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7010
  %ext2195 = getelementptr inbounds %struct.Curve, %struct.Curve* %198, i32 0, i32 26, !dbg !7011
  %199 = load float, float* %ext2195, align 8, !dbg !7011
  %mul196 = fmul float %call194, %199, !dbg !7012
  %200 = load float*, float** %fp, align 8, !dbg !7013
  %arrayidx197 = getelementptr inbounds float, float* %200, i64 1, !dbg !7013
  store float %mul196, float* %arrayidx197, align 4, !dbg !7014
  %201 = load float, float* %angle, align 4, !dbg !7015
  %call198 = call float @sinf(float %201) #5, !dbg !7016
  %202 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7017
  %ext2199 = getelementptr inbounds %struct.Curve, %struct.Curve* %202, i32 0, i32 26, !dbg !7018
  %203 = load float, float* %ext2199, align 8, !dbg !7018
  %mul200 = fmul float %call198, %203, !dbg !7019
  %204 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7020
  %ext1201 = getelementptr inbounds %struct.Curve, %struct.Curve* %204, i32 0, i32 25, !dbg !7021
  %205 = load float, float* %ext1201, align 4, !dbg !7021
  %sub202 = fsub float %mul200, %205, !dbg !7022
  %206 = load float*, float** %fp, align 8, !dbg !7023
  %arrayidx203 = getelementptr inbounds float, float* %206, i64 2, !dbg !7023
  store float %sub202, float* %arrayidx203, align 4, !dbg !7024
  %207 = load float, float* %dangle, align 4, !dbg !7025
  %208 = load float, float* %angle, align 4, !dbg !7026
  %add204 = fadd float %208, %207, !dbg !7026
  store float %add204, float* %angle, align 4, !dbg !7026
  %209 = load float*, float** %fp, align 8, !dbg !7027
  %add.ptr205 = getelementptr inbounds float, float* %209, i64 3, !dbg !7027
  store float* %add.ptr205, float** %fp, align 8, !dbg !7027
  br label %for.inc206, !dbg !7028

for.inc206:                                       ; preds = %for.body192
  %210 = load i32, i32* %a, align 4, !dbg !7029
  %inc207 = add nsw i32 %210, 1, !dbg !7029
  store i32 %inc207, i32* %a, align 4, !dbg !7029
  br label %for.cond189, !dbg !7030, !llvm.loop !7031

for.end208:                                       ; preds = %for.cond189
  br label %if.end209, !dbg !7033

if.end209:                                        ; preds = %for.end208, %lor.lhs.false151
  %211 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7034
  %ext1210 = getelementptr inbounds %struct.Curve, %struct.Curve* %211, i32 0, i32 25, !dbg !7036
  %212 = load float, float* %ext1210, align 4, !dbg !7036
  %cmp211 = fcmp une float %212, 0.000000e+00, !dbg !7037
  br i1 %cmp211, label %if.then213, label %if.end255, !dbg !7038

if.then213:                                       ; preds = %if.end209
  store i32 2, i32* %nr, align 4, !dbg !7039
  %213 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7041
  %call214 = call i8* %213(i64 72, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0)), !dbg !7041
  %214 = bitcast i8* %call214 to %struct.DispList*, !dbg !7041
  store %struct.DispList* %214, %struct.DispList** %dl, align 8, !dbg !7042
  %215 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7043
  %216 = load i32, i32* %nr, align 4, !dbg !7044
  %conv215 = sext i32 %216 to i64, !dbg !7044
  %mul216 = mul i64 %conv215, 12, !dbg !7045
  %call217 = call i8* %215(i64 %mul216, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0)), !dbg !7043
  %217 = bitcast i8* %call217 to float*, !dbg !7043
  %218 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7046
  %verts218 = getelementptr inbounds %struct.DispList, %struct.DispList* %218, i32 0, i32 8, !dbg !7047
  store float* %217, float** %verts218, align 8, !dbg !7048
  %219 = load %struct.ListBase*, %struct.ListBase** %disp.addr, align 8, !dbg !7049
  %220 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7050
  %221 = bitcast %struct.DispList* %220 to i8*, !dbg !7050
  call void @BLI_addtail(%struct.ListBase* %219, i8* %221), !dbg !7051
  %222 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7052
  %type219 = getelementptr inbounds %struct.DispList, %struct.DispList* %222, i32 0, i32 2, !dbg !7053
  store i16 1, i16* %type219, align 8, !dbg !7054
  %223 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7055
  %parts220 = getelementptr inbounds %struct.DispList, %struct.DispList* %223, i32 0, i32 4, !dbg !7056
  store i32 1, i32* %parts220, align 4, !dbg !7057
  %224 = load i32, i32* %nr, align 4, !dbg !7058
  %225 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7059
  %nr221 = getelementptr inbounds %struct.DispList, %struct.DispList* %225, i32 0, i32 5, !dbg !7060
  store i32 %224, i32* %nr221, align 8, !dbg !7061
  %226 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7062
  %verts222 = getelementptr inbounds %struct.DispList, %struct.DispList* %226, i32 0, i32 8, !dbg !7063
  %227 = load float*, float** %verts222, align 8, !dbg !7063
  store float* %227, float** %fp, align 8, !dbg !7064
  %228 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7065
  %ext2223 = getelementptr inbounds %struct.Curve, %struct.Curve* %228, i32 0, i32 26, !dbg !7066
  %229 = load float, float* %ext2223, align 8, !dbg !7066
  %230 = load float*, float** %fp, align 8, !dbg !7067
  %arrayidx224 = getelementptr inbounds float, float* %230, i64 1, !dbg !7067
  store float %229, float* %arrayidx224, align 4, !dbg !7068
  %231 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7069
  %ext1225 = getelementptr inbounds %struct.Curve, %struct.Curve* %231, i32 0, i32 25, !dbg !7070
  %232 = load float, float* %ext1225, align 4, !dbg !7070
  %fneg226 = fneg float %232, !dbg !7071
  %233 = load float*, float** %fp, align 8, !dbg !7072
  %arrayidx227 = getelementptr inbounds float, float* %233, i64 2, !dbg !7072
  store float %fneg226, float* %arrayidx227, align 4, !dbg !7073
  %234 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7074
  %ext2228 = getelementptr inbounds %struct.Curve, %struct.Curve* %234, i32 0, i32 26, !dbg !7075
  %235 = load float, float* %ext2228, align 8, !dbg !7075
  %236 = load float*, float** %fp, align 8, !dbg !7076
  %arrayidx229 = getelementptr inbounds float, float* %236, i64 4, !dbg !7076
  store float %235, float* %arrayidx229, align 4, !dbg !7077
  %237 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7078
  %ext1230 = getelementptr inbounds %struct.Curve, %struct.Curve* %237, i32 0, i32 25, !dbg !7079
  %238 = load float, float* %ext1230, align 4, !dbg !7079
  %239 = load float*, float** %fp, align 8, !dbg !7080
  %arrayidx231 = getelementptr inbounds float, float* %239, i64 5, !dbg !7080
  store float %238, float* %arrayidx231, align 4, !dbg !7081
  %240 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7082
  %flag232 = getelementptr inbounds %struct.Curve, %struct.Curve* %240, i32 0, i32 23, !dbg !7084
  %241 = load i32, i32* %flag232, align 4, !dbg !7084
  %and233 = and i32 %241, 6, !dbg !7085
  %cmp234 = icmp eq i32 %and233, 0, !dbg !7086
  br i1 %cmp234, label %if.then236, label %if.end254, !dbg !7087

if.then236:                                       ; preds = %if.then213
  %242 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !7088
  %243 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7090
  %244 = bitcast %struct.DispList* %243 to i8*, !dbg !7090
  %call237 = call i8* %242(i8* %244), !dbg !7088
  %245 = bitcast i8* %call237 to %struct.DispList*, !dbg !7088
  store %struct.DispList* %245, %struct.DispList** %dl, align 8, !dbg !7091
  %246 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !7092
  %247 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7093
  %verts238 = getelementptr inbounds %struct.DispList, %struct.DispList* %247, i32 0, i32 8, !dbg !7094
  %248 = load float*, float** %verts238, align 8, !dbg !7094
  %249 = bitcast float* %248 to i8*, !dbg !7093
  %call239 = call i8* %246(i8* %249), !dbg !7092
  %250 = bitcast i8* %call239 to float*, !dbg !7092
  %251 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7095
  %verts240 = getelementptr inbounds %struct.DispList, %struct.DispList* %251, i32 0, i32 8, !dbg !7096
  store float* %250, float** %verts240, align 8, !dbg !7097
  %252 = load %struct.ListBase*, %struct.ListBase** %disp.addr, align 8, !dbg !7098
  %253 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7099
  %254 = bitcast %struct.DispList* %253 to i8*, !dbg !7099
  call void @BLI_addtail(%struct.ListBase* %252, i8* %254), !dbg !7100
  %255 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7101
  %verts241 = getelementptr inbounds %struct.DispList, %struct.DispList* %255, i32 0, i32 8, !dbg !7102
  %256 = load float*, float** %verts241, align 8, !dbg !7102
  store float* %256, float** %fp, align 8, !dbg !7103
  %257 = load float*, float** %fp, align 8, !dbg !7104
  %arrayidx242 = getelementptr inbounds float, float* %257, i64 1, !dbg !7104
  %258 = load float, float* %arrayidx242, align 4, !dbg !7104
  %fneg243 = fneg float %258, !dbg !7105
  %259 = load float*, float** %fp, align 8, !dbg !7106
  %arrayidx244 = getelementptr inbounds float, float* %259, i64 1, !dbg !7106
  store float %fneg243, float* %arrayidx244, align 4, !dbg !7107
  %260 = load float*, float** %fp, align 8, !dbg !7108
  %arrayidx245 = getelementptr inbounds float, float* %260, i64 2, !dbg !7108
  %261 = load float, float* %arrayidx245, align 4, !dbg !7108
  %fneg246 = fneg float %261, !dbg !7109
  %262 = load float*, float** %fp, align 8, !dbg !7110
  %arrayidx247 = getelementptr inbounds float, float* %262, i64 2, !dbg !7110
  store float %fneg246, float* %arrayidx247, align 4, !dbg !7111
  %263 = load float*, float** %fp, align 8, !dbg !7112
  %arrayidx248 = getelementptr inbounds float, float* %263, i64 4, !dbg !7112
  %264 = load float, float* %arrayidx248, align 4, !dbg !7112
  %fneg249 = fneg float %264, !dbg !7113
  %265 = load float*, float** %fp, align 8, !dbg !7114
  %arrayidx250 = getelementptr inbounds float, float* %265, i64 4, !dbg !7114
  store float %fneg249, float* %arrayidx250, align 4, !dbg !7115
  %266 = load float*, float** %fp, align 8, !dbg !7116
  %arrayidx251 = getelementptr inbounds float, float* %266, i64 5, !dbg !7116
  %267 = load float, float* %arrayidx251, align 4, !dbg !7116
  %fneg252 = fneg float %267, !dbg !7117
  %268 = load float*, float** %fp, align 8, !dbg !7118
  %arrayidx253 = getelementptr inbounds float, float* %268, i64 5, !dbg !7118
  store float %fneg252, float* %arrayidx253, align 4, !dbg !7119
  br label %if.end254, !dbg !7120

if.end254:                                        ; preds = %if.then236, %if.then213
  br label %if.end255, !dbg !7121

if.end255:                                        ; preds = %if.end254, %if.end209
  %269 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7122
  %flag256 = getelementptr inbounds %struct.Curve, %struct.Curve* %269, i32 0, i32 23, !dbg !7124
  %270 = load i32, i32* %flag256, align 4, !dbg !7124
  %and257 = and i32 %270, 2, !dbg !7125
  %tobool258 = icmp ne i32 %and257, 0, !dbg !7125
  br i1 %tobool258, label %if.then263, label %lor.lhs.false259, !dbg !7126

lor.lhs.false259:                                 ; preds = %if.end255
  %271 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7127
  %flag260 = getelementptr inbounds %struct.Curve, %struct.Curve* %271, i32 0, i32 23, !dbg !7128
  %272 = load i32, i32* %flag260, align 4, !dbg !7128
  %and261 = and i32 %272, 4, !dbg !7129
  %tobool262 = icmp ne i32 %and261, 0, !dbg !7129
  br i1 %tobool262, label %if.end313, label %if.then263, !dbg !7130

if.then263:                                       ; preds = %lor.lhs.false259, %if.end255
  %273 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7131
  %bevresol264 = getelementptr inbounds %struct.Curve, %struct.Curve* %273, i32 0, i32 21, !dbg !7133
  %274 = load i16, i16* %bevresol264, align 8, !dbg !7133
  %conv265 = sext i16 %274 to i32, !dbg !7131
  %add266 = add nsw i32 2, %conv265, !dbg !7134
  store i32 %add266, i32* %nr, align 4, !dbg !7135
  %conv267 = trunc i32 %add266 to i16, !dbg !7136
  store i16 %conv267, i16* %dnr, align 2, !dbg !7137
  %275 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7138
  %flag268 = getelementptr inbounds %struct.Curve, %struct.Curve* %275, i32 0, i32 23, !dbg !7140
  %276 = load i32, i32* %flag268, align 4, !dbg !7140
  %and269 = and i32 %276, 6, !dbg !7141
  %cmp270 = icmp eq i32 %and269, 0, !dbg !7142
  br i1 %cmp270, label %if.then272, label %if.end277, !dbg !7143

if.then272:                                       ; preds = %if.then263
  %277 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7144
  %bevresol273 = getelementptr inbounds %struct.Curve, %struct.Curve* %277, i32 0, i32 21, !dbg !7145
  %278 = load i16, i16* %bevresol273, align 8, !dbg !7145
  %conv274 = sext i16 %278 to i32, !dbg !7144
  %mul275 = mul nsw i32 2, %conv274, !dbg !7146
  %add276 = add nsw i32 3, %mul275, !dbg !7147
  store i32 %add276, i32* %nr, align 4, !dbg !7148
  br label %if.end277, !dbg !7149

if.end277:                                        ; preds = %if.then272, %if.then263
  %279 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7150
  %call278 = call i8* %279(i64 72, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.26, i64 0, i64 0)), !dbg !7150
  %280 = bitcast i8* %call278 to %struct.DispList*, !dbg !7150
  store %struct.DispList* %280, %struct.DispList** %dl, align 8, !dbg !7151
  %281 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7152
  %282 = load i32, i32* %nr, align 4, !dbg !7153
  %conv279 = sext i32 %282 to i64, !dbg !7153
  %mul280 = mul i64 %conv279, 12, !dbg !7154
  %call281 = call i8* %281(i64 %mul280, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.26, i64 0, i64 0)), !dbg !7152
  %283 = bitcast i8* %call281 to float*, !dbg !7152
  %284 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7155
  %verts282 = getelementptr inbounds %struct.DispList, %struct.DispList* %284, i32 0, i32 8, !dbg !7156
  store float* %283, float** %verts282, align 8, !dbg !7157
  %285 = load %struct.ListBase*, %struct.ListBase** %disp.addr, align 8, !dbg !7158
  %286 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7159
  %287 = bitcast %struct.DispList* %286 to i8*, !dbg !7159
  call void @BLI_addtail(%struct.ListBase* %285, i8* %287), !dbg !7160
  %288 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7161
  %type283 = getelementptr inbounds %struct.DispList, %struct.DispList* %288, i32 0, i32 2, !dbg !7162
  store i16 1, i16* %type283, align 8, !dbg !7163
  %289 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7164
  %flag284 = getelementptr inbounds %struct.DispList, %struct.DispList* %289, i32 0, i32 3, !dbg !7165
  store i16 4, i16* %flag284, align 2, !dbg !7166
  %290 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7167
  %parts285 = getelementptr inbounds %struct.DispList, %struct.DispList* %290, i32 0, i32 4, !dbg !7168
  store i32 1, i32* %parts285, align 4, !dbg !7169
  %291 = load i32, i32* %nr, align 4, !dbg !7170
  %292 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7171
  %nr286 = getelementptr inbounds %struct.DispList, %struct.DispList* %292, i32 0, i32 5, !dbg !7172
  store i32 %291, i32* %nr286, align 8, !dbg !7173
  %293 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !7174
  %verts287 = getelementptr inbounds %struct.DispList, %struct.DispList* %293, i32 0, i32 8, !dbg !7175
  %294 = load float*, float** %verts287, align 8, !dbg !7175
  store float* %294, float** %fp, align 8, !dbg !7176
  store float 0.000000e+00, float* %angle, align 4, !dbg !7177
  %295 = load i16, i16* %dnr, align 2, !dbg !7178
  %conv288 = sext i16 %295 to i32, !dbg !7178
  %sub289 = sub nsw i32 %conv288, 1, !dbg !7179
  %conv290 = sitofp i32 %sub289 to double, !dbg !7180
  %div291 = fdiv double 0x3FF921FB54442D18, %conv290, !dbg !7181
  %conv292 = fptrunc double %div291 to float, !dbg !7182
  store float %conv292, float* %dangle, align 4, !dbg !7183
  store i32 0, i32* %a, align 4, !dbg !7184
  br label %for.cond293, !dbg !7186

for.cond293:                                      ; preds = %for.inc310, %if.end277
  %296 = load i32, i32* %a, align 4, !dbg !7187
  %297 = load i32, i32* %nr, align 4, !dbg !7189
  %cmp294 = icmp slt i32 %296, %297, !dbg !7190
  br i1 %cmp294, label %for.body296, label %for.end312, !dbg !7191

for.body296:                                      ; preds = %for.cond293
  %298 = load float*, float** %fp, align 8, !dbg !7192
  %arrayidx297 = getelementptr inbounds float, float* %298, i64 0, !dbg !7192
  store float 0.000000e+00, float* %arrayidx297, align 4, !dbg !7194
  %299 = load float, float* %angle, align 4, !dbg !7195
  %call298 = call float @cosf(float %299) #5, !dbg !7196
  %300 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7197
  %ext2299 = getelementptr inbounds %struct.Curve, %struct.Curve* %300, i32 0, i32 26, !dbg !7198
  %301 = load float, float* %ext2299, align 8, !dbg !7198
  %mul300 = fmul float %call298, %301, !dbg !7199
  %302 = load float*, float** %fp, align 8, !dbg !7200
  %arrayidx301 = getelementptr inbounds float, float* %302, i64 1, !dbg !7200
  store float %mul300, float* %arrayidx301, align 4, !dbg !7201
  %303 = load float, float* %angle, align 4, !dbg !7202
  %call302 = call float @sinf(float %303) #5, !dbg !7203
  %304 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7204
  %ext2303 = getelementptr inbounds %struct.Curve, %struct.Curve* %304, i32 0, i32 26, !dbg !7205
  %305 = load float, float* %ext2303, align 8, !dbg !7205
  %mul304 = fmul float %call302, %305, !dbg !7206
  %306 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7207
  %ext1305 = getelementptr inbounds %struct.Curve, %struct.Curve* %306, i32 0, i32 25, !dbg !7208
  %307 = load float, float* %ext1305, align 4, !dbg !7208
  %add306 = fadd float %mul304, %307, !dbg !7209
  %308 = load float*, float** %fp, align 8, !dbg !7210
  %arrayidx307 = getelementptr inbounds float, float* %308, i64 2, !dbg !7210
  store float %add306, float* %arrayidx307, align 4, !dbg !7211
  %309 = load float, float* %dangle, align 4, !dbg !7212
  %310 = load float, float* %angle, align 4, !dbg !7213
  %add308 = fadd float %310, %309, !dbg !7213
  store float %add308, float* %angle, align 4, !dbg !7213
  %311 = load float*, float** %fp, align 8, !dbg !7214
  %add.ptr309 = getelementptr inbounds float, float* %311, i64 3, !dbg !7214
  store float* %add.ptr309, float** %fp, align 8, !dbg !7214
  br label %for.inc310, !dbg !7215

for.inc310:                                       ; preds = %for.body296
  %312 = load i32, i32* %a, align 4, !dbg !7216
  %inc311 = add nsw i32 %312, 1, !dbg !7216
  store i32 %inc311, i32* %a, align 4, !dbg !7216
  br label %for.cond293, !dbg !7217, !llvm.loop !7218

for.end312:                                       ; preds = %for.cond293
  br label %if.end313, !dbg !7220

if.end313:                                        ; preds = %for.end312, %lor.lhs.false259
  br label %if.end314

if.end314:                                        ; preds = %if.end313, %for.end
  br label %if.end315

if.end315:                                        ; preds = %if.end314, %if.then89
  br label %if.end316

if.end316:                                        ; preds = %if.end315, %if.then84
  br label %if.end317

if.end317:                                        ; preds = %if.then3, %if.end316, %if.end75
  ret void, !dbg !7221
}

declare dso_local void @BKE_displist_make_curveTypes_forRender(%struct.Scene*, %struct.Object*, %struct.ListBase*, %struct.DerivedMesh**, i8 zeroext, i8 zeroext) #2

; Function Attrs: nounwind
declare dso_local float @cosf(float) #4

; Function Attrs: nounwind
declare dso_local float @sinf(float) #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_bevelList_free(%struct.ListBase* %bev) #0 !dbg !7222 {
entry:
  %bev.addr = alloca %struct.ListBase*, align 8
  %bl = alloca %struct.BevList*, align 8
  %blnext = alloca %struct.BevList*, align 8
  store %struct.ListBase* %bev, %struct.ListBase** %bev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %bev.addr, metadata !7223, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.declare(metadata %struct.BevList** %bl, metadata !7225, metadata !DIExpression()), !dbg !7259
  call void @llvm.dbg.declare(metadata %struct.BevList** %blnext, metadata !7260, metadata !DIExpression()), !dbg !7261
  %0 = load %struct.ListBase*, %struct.ListBase** %bev.addr, align 8, !dbg !7262
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !7264
  %1 = load i8*, i8** %first, align 8, !dbg !7264
  %2 = bitcast i8* %1 to %struct.BevList*, !dbg !7262
  store %struct.BevList* %2, %struct.BevList** %bl, align 8, !dbg !7265
  br label %for.cond, !dbg !7266

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7267
  %cmp = icmp ne %struct.BevList* %3, null, !dbg !7269
  br i1 %cmp, label %for.body, label %for.end, !dbg !7270

for.body:                                         ; preds = %for.cond
  %4 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7271
  %next = getelementptr inbounds %struct.BevList, %struct.BevList* %4, i32 0, i32 0, !dbg !7273
  %5 = load %struct.BevList*, %struct.BevList** %next, align 8, !dbg !7273
  store %struct.BevList* %5, %struct.BevList** %blnext, align 8, !dbg !7274
  %6 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7275
  %seglen = getelementptr inbounds %struct.BevList, %struct.BevList* %6, i32 0, i32 8, !dbg !7277
  %7 = load float*, float** %seglen, align 8, !dbg !7277
  %cmp1 = icmp ne float* %7, null, !dbg !7278
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7279

if.then:                                          ; preds = %for.body
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7280
  %9 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7282
  %seglen2 = getelementptr inbounds %struct.BevList, %struct.BevList* %9, i32 0, i32 8, !dbg !7283
  %10 = load float*, float** %seglen2, align 8, !dbg !7283
  %11 = bitcast float* %10 to i8*, !dbg !7282
  call void %8(i8* %11), !dbg !7280
  br label %if.end, !dbg !7284

if.end:                                           ; preds = %if.then, %for.body
  %12 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7285
  %segbevcount = getelementptr inbounds %struct.BevList, %struct.BevList* %12, i32 0, i32 7, !dbg !7287
  %13 = load i32*, i32** %segbevcount, align 8, !dbg !7287
  %cmp3 = icmp ne i32* %13, null, !dbg !7288
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !7289

if.then4:                                         ; preds = %if.end
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7290
  %15 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7292
  %segbevcount5 = getelementptr inbounds %struct.BevList, %struct.BevList* %15, i32 0, i32 7, !dbg !7293
  %16 = load i32*, i32** %segbevcount5, align 8, !dbg !7293
  %17 = bitcast i32* %16 to i8*, !dbg !7292
  call void %14(i8* %17), !dbg !7290
  br label %if.end6, !dbg !7294

if.end6:                                          ; preds = %if.then4, %if.end
  %18 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7295
  %19 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7296
  %20 = bitcast %struct.BevList* %19 to i8*, !dbg !7296
  call void %18(i8* %20), !dbg !7295
  br label %for.inc, !dbg !7297

for.inc:                                          ; preds = %if.end6
  %21 = load %struct.BevList*, %struct.BevList** %blnext, align 8, !dbg !7298
  store %struct.BevList* %21, %struct.BevList** %bl, align 8, !dbg !7299
  br label %for.cond, !dbg !7300, !llvm.loop !7301

for.end:                                          ; preds = %for.cond
  %22 = load %struct.ListBase*, %struct.ListBase** %bev.addr, align 8, !dbg !7303
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %22, i32 0, i32 1, !dbg !7304
  store i8* null, i8** %last, align 8, !dbg !7305
  %23 = load %struct.ListBase*, %struct.ListBase** %bev.addr, align 8, !dbg !7306
  %first7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %23, i32 0, i32 0, !dbg !7307
  store i8* null, i8** %first7, align 8, !dbg !7308
  ret void, !dbg !7309
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_bevelList_make(%struct.Object* %ob, %struct.ListBase* %nurbs, i8 zeroext %for_render) #0 !dbg !7310 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %nurbs.addr = alloca %struct.ListBase*, align 8
  %for_render.addr = alloca i8, align 1
  %cu = alloca %struct.Curve*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %prevbezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %bl = alloca %struct.BevList*, align 8
  %blnew = alloca %struct.BevList*, align 8
  %blnext = alloca %struct.BevList*, align 8
  %bevp = alloca %struct.BevPoint*, align 8
  %bevp2 = alloca %struct.BevPoint*, align 8
  %bevp1 = alloca %struct.BevPoint*, align 8
  %bevp0 = alloca %struct.BevPoint*, align 8
  %treshold = alloca float, align 4
  %min = alloca float, align 4
  %inp = alloca float, align 4
  %seglen = alloca float*, align 8
  %sortdata = alloca %struct.BevelSort*, align 8
  %sd = alloca %struct.BevelSort*, align 8
  %sd1 = alloca %struct.BevelSort*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %nr = alloca i32, align 4
  %poly = alloca i32, align 4
  %resolu = alloca i32, align 4
  %len = alloca i32, align 4
  %segcount = alloca i32, align 4
  %segbevcount = alloca i32*, align 8
  %do_tilt = alloca i8, align 1
  %do_radius = alloca i8, align 1
  %do_weight = alloca i8, align 1
  %is_editmode = alloca i8, align 1
  %bev = alloca %struct.ListBase*, align 8
  %need_seglen = alloca i8, align 1
  %j = alloca i32, align 4
  %j531 = alloca i32, align 4
  %is_cyclic = alloca i8, align 1
  %sw_ap = alloca %struct.BevPoint, align 4
  %bevp900 = alloca %struct.BevPoint*, align 8
  %bevp924 = alloca %struct.BevPoint*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7313, metadata !DIExpression()), !dbg !7314
  store %struct.ListBase* %nurbs, %struct.ListBase** %nurbs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nurbs.addr, metadata !7315, metadata !DIExpression()), !dbg !7316
  store i8 %for_render, i8* %for_render.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %for_render.addr, metadata !7317, metadata !DIExpression()), !dbg !7318
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !7319, metadata !DIExpression()), !dbg !7320
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7321
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !7322
  %1 = load i8*, i8** %data, align 8, !dbg !7322
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !7321
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !7320
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !7323, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !7325, metadata !DIExpression()), !dbg !7326
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %prevbezt, metadata !7327, metadata !DIExpression()), !dbg !7328
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !7329, metadata !DIExpression()), !dbg !7330
  call void @llvm.dbg.declare(metadata %struct.BevList** %bl, metadata !7331, metadata !DIExpression()), !dbg !7332
  call void @llvm.dbg.declare(metadata %struct.BevList** %blnew, metadata !7333, metadata !DIExpression()), !dbg !7334
  call void @llvm.dbg.declare(metadata %struct.BevList** %blnext, metadata !7335, metadata !DIExpression()), !dbg !7336
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp, metadata !7337, metadata !DIExpression()), !dbg !7339
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp2, metadata !7340, metadata !DIExpression()), !dbg !7341
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp1, metadata !7342, metadata !DIExpression()), !dbg !7343
  store %struct.BevPoint* null, %struct.BevPoint** %bevp1, align 8, !dbg !7343
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp0, metadata !7344, metadata !DIExpression()), !dbg !7345
  call void @llvm.dbg.declare(metadata float* %treshold, metadata !7346, metadata !DIExpression()), !dbg !7347
  store float 0x3EE4F8B580000000, float* %treshold, align 4, !dbg !7347
  call void @llvm.dbg.declare(metadata float* %min, metadata !7348, metadata !DIExpression()), !dbg !7349
  call void @llvm.dbg.declare(metadata float* %inp, metadata !7350, metadata !DIExpression()), !dbg !7351
  call void @llvm.dbg.declare(metadata float** %seglen, metadata !7352, metadata !DIExpression()), !dbg !7353
  call void @llvm.dbg.declare(metadata %struct.BevelSort** %sortdata, metadata !7354, metadata !DIExpression()), !dbg !7361
  call void @llvm.dbg.declare(metadata %struct.BevelSort** %sd, metadata !7362, metadata !DIExpression()), !dbg !7363
  call void @llvm.dbg.declare(metadata %struct.BevelSort** %sd1, metadata !7364, metadata !DIExpression()), !dbg !7365
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7366, metadata !DIExpression()), !dbg !7367
  call void @llvm.dbg.declare(metadata i32* %b, metadata !7368, metadata !DIExpression()), !dbg !7369
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !7370, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.declare(metadata i32* %poly, metadata !7372, metadata !DIExpression()), !dbg !7373
  call void @llvm.dbg.declare(metadata i32* %resolu, metadata !7374, metadata !DIExpression()), !dbg !7375
  store i32 0, i32* %resolu, align 4, !dbg !7375
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7376, metadata !DIExpression()), !dbg !7377
  store i32 0, i32* %len, align 4, !dbg !7377
  call void @llvm.dbg.declare(metadata i32* %segcount, metadata !7378, metadata !DIExpression()), !dbg !7379
  call void @llvm.dbg.declare(metadata i32** %segbevcount, metadata !7380, metadata !DIExpression()), !dbg !7381
  call void @llvm.dbg.declare(metadata i8* %do_tilt, metadata !7382, metadata !DIExpression()), !dbg !7383
  call void @llvm.dbg.declare(metadata i8* %do_radius, metadata !7384, metadata !DIExpression()), !dbg !7385
  call void @llvm.dbg.declare(metadata i8* %do_weight, metadata !7386, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.declare(metadata i8* %is_editmode, metadata !7388, metadata !DIExpression()), !dbg !7389
  store i8 0, i8* %is_editmode, align 1, !dbg !7389
  call void @llvm.dbg.declare(metadata %struct.ListBase** %bev, metadata !7390, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.declare(metadata i8* %need_seglen, metadata !7392, metadata !DIExpression()), !dbg !7393
  %3 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7394
  %bevfac1_mapping = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 67, !dbg !7394
  %4 = load i8, i8* %bevfac1_mapping, align 4, !dbg !7394
  %conv = zext i8 %4 to i32, !dbg !7394
  %cmp = icmp eq i32 %conv, 1, !dbg !7394
  br i1 %cmp, label %lor.end14, label %lor.lhs.false, !dbg !7394

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7394
  %bevfac1_mapping2 = getelementptr inbounds %struct.Curve, %struct.Curve* %5, i32 0, i32 67, !dbg !7394
  %6 = load i8, i8* %bevfac1_mapping2, align 4, !dbg !7394
  %conv3 = zext i8 %6 to i32, !dbg !7394
  %cmp4 = icmp eq i32 %conv3, 2, !dbg !7394
  br i1 %cmp4, label %lor.end14, label %lor.rhs, !dbg !7395

lor.rhs:                                          ; preds = %lor.lhs.false
  %7 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7396
  %bevfac2_mapping = getelementptr inbounds %struct.Curve, %struct.Curve* %7, i32 0, i32 68, !dbg !7396
  %8 = load i8, i8* %bevfac2_mapping, align 1, !dbg !7396
  %conv6 = zext i8 %8 to i32, !dbg !7396
  %cmp7 = icmp eq i32 %conv6, 1, !dbg !7396
  br i1 %cmp7, label %lor.end, label %lor.rhs9, !dbg !7396

lor.rhs9:                                         ; preds = %lor.rhs
  %9 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7396
  %bevfac2_mapping10 = getelementptr inbounds %struct.Curve, %struct.Curve* %9, i32 0, i32 68, !dbg !7396
  %10 = load i8, i8* %bevfac2_mapping10, align 1, !dbg !7396
  %conv11 = zext i8 %10 to i32, !dbg !7396
  %cmp12 = icmp eq i32 %conv11, 2, !dbg !7396
  br label %lor.end, !dbg !7396

lor.end:                                          ; preds = %lor.rhs9, %lor.rhs
  %11 = phi i1 [ true, %lor.rhs ], [ %cmp12, %lor.rhs9 ]
  br label %lor.end14, !dbg !7395

lor.end14:                                        ; preds = %lor.end, %lor.lhs.false, %entry
  %12 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %11, %lor.end ]
  %lor.ext = zext i1 %12 to i32, !dbg !7395
  %conv15 = trunc i32 %lor.ext to i8, !dbg !7394
  store i8 %conv15, i8* %need_seglen, align 1, !dbg !7393
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7397
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 118, !dbg !7398
  %14 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !7398
  %bev16 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %14, i32 0, i32 1, !dbg !7399
  store %struct.ListBase* %bev16, %struct.ListBase** %bev, align 8, !dbg !7400
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7401
  %curve_cache17 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 118, !dbg !7402
  %16 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache17, align 8, !dbg !7402
  %bev18 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %16, i32 0, i32 1, !dbg !7403
  call void @BKE_curve_bevelList_free(%struct.ListBase* %bev18), !dbg !7404
  %17 = load %struct.ListBase*, %struct.ListBase** %nurbs.addr, align 8, !dbg !7405
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %17, i32 0, i32 0, !dbg !7406
  %18 = load i8*, i8** %first, align 8, !dbg !7406
  %19 = bitcast i8* %18 to %struct.Nurb*, !dbg !7405
  store %struct.Nurb* %19, %struct.Nurb** %nu, align 8, !dbg !7407
  %20 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7408
  %editnurb = getelementptr inbounds %struct.Curve, %struct.Curve* %20, i32 0, i32 4, !dbg !7410
  %21 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !7410
  %tobool = icmp ne %struct.EditNurb* %21, null, !dbg !7408
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7411

land.lhs.true:                                    ; preds = %lor.end14
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7412
  %type = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 3, !dbg !7413
  %23 = load i16, i16* %type, align 8, !dbg !7413
  %conv19 = sext i16 %23 to i32, !dbg !7412
  %cmp20 = icmp ne i32 %conv19, 4, !dbg !7414
  br i1 %cmp20, label %if.then, label %if.end, !dbg !7415

if.then:                                          ; preds = %land.lhs.true
  store i8 1, i8* %is_editmode, align 1, !dbg !7416
  br label %if.end, !dbg !7418

if.end:                                           ; preds = %if.then, %land.lhs.true, %lor.end14
  br label %for.cond, !dbg !7419

for.cond:                                         ; preds = %for.inc578, %if.end
  %24 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7420
  %tobool22 = icmp ne %struct.Nurb* %24, null, !dbg !7423
  br i1 %tobool22, label %for.body, label %for.end579, !dbg !7423

for.body:                                         ; preds = %for.cond
  %25 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7424
  %hide = getelementptr inbounds %struct.Nurb, %struct.Nurb* %25, i32 0, i32 4, !dbg !7427
  %26 = load i16, i16* %hide, align 4, !dbg !7427
  %conv23 = sext i16 %26 to i32, !dbg !7424
  %tobool24 = icmp ne i32 %conv23, 0, !dbg !7424
  br i1 %tobool24, label %land.lhs.true25, label %if.end29, !dbg !7428

land.lhs.true25:                                  ; preds = %for.body
  %27 = load i8, i8* %is_editmode, align 1, !dbg !7429
  %conv26 = zext i8 %27 to i32, !dbg !7429
  %tobool27 = icmp ne i32 %conv26, 0, !dbg !7429
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !7430

if.then28:                                        ; preds = %land.lhs.true25
  br label %for.inc578, !dbg !7431

if.end29:                                         ; preds = %land.lhs.true25, %for.body
  %28 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7432
  %flag = getelementptr inbounds %struct.Nurb, %struct.Nurb* %28, i32 0, i32 5, !dbg !7432
  %29 = load i16, i16* %flag, align 2, !dbg !7432
  %conv30 = sext i16 %29 to i32, !dbg !7432
  %and = and i32 %conv30, 8, !dbg !7432
  %tobool31 = icmp ne i32 %and, 0, !dbg !7432
  br i1 %tobool31, label %land.rhs, label %land.end, !dbg !7432

land.rhs:                                         ; preds = %if.end29
  %30 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7432
  %flag32 = getelementptr inbounds %struct.Curve, %struct.Curve* %30, i32 0, i32 23, !dbg !7432
  %31 = load i32, i32* %flag32, align 4, !dbg !7432
  %and33 = and i32 %31, 1, !dbg !7432
  %cmp34 = icmp eq i32 %and33, 0, !dbg !7432
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end29
  %32 = phi i1 [ false, %if.end29 ], [ %cmp34, %land.rhs ], !dbg !7433
  %33 = zext i1 %32 to i64, !dbg !7432
  %cond = select i1 %32, i32 0, i32 1, !dbg !7432
  %conv36 = trunc i32 %cond to i8, !dbg !7432
  store i8 %conv36, i8* %do_tilt, align 1, !dbg !7434
  %34 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7435
  %flag37 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %34, i32 0, i32 5, !dbg !7435
  %35 = load i16, i16* %flag37, align 2, !dbg !7435
  %conv38 = sext i16 %35 to i32, !dbg !7435
  %and39 = and i32 %conv38, 8, !dbg !7435
  %tobool40 = icmp ne i32 %and39, 0, !dbg !7435
  br i1 %tobool40, label %land.lhs.true41, label %cond.false, !dbg !7435

land.lhs.true41:                                  ; preds = %land.end
  %36 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7435
  %flag42 = getelementptr inbounds %struct.Curve, %struct.Curve* %36, i32 0, i32 23, !dbg !7435
  %37 = load i32, i32* %flag42, align 4, !dbg !7435
  %and43 = and i32 %37, 1, !dbg !7435
  %cmp44 = icmp eq i32 %and43, 0, !dbg !7435
  br i1 %cmp44, label %cond.true, label %cond.false, !dbg !7435

cond.true:                                        ; preds = %land.lhs.true41
  br i1 false, label %lor.end58, label %lor.lhs.false46, !dbg !7435

cond.false:                                       ; preds = %land.lhs.true41, %land.end
  br i1 true, label %lor.end58, label %lor.lhs.false46, !dbg !7435

lor.lhs.false46:                                  ; preds = %cond.false, %cond.true
  %38 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7435
  %flag47 = getelementptr inbounds %struct.Curve, %struct.Curve* %38, i32 0, i32 23, !dbg !7435
  %39 = load i32, i32* %flag47, align 4, !dbg !7435
  %and48 = and i32 %39, 4096, !dbg !7435
  %tobool49 = icmp ne i32 %and48, 0, !dbg !7435
  br i1 %tobool49, label %lor.end58, label %lor.lhs.false50, !dbg !7435

lor.lhs.false50:                                  ; preds = %lor.lhs.false46
  %40 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7435
  %bevobj = getelementptr inbounds %struct.Curve, %struct.Curve* %40, i32 0, i32 5, !dbg !7435
  %41 = load %struct.Object*, %struct.Object** %bevobj, align 8, !dbg !7435
  %tobool51 = icmp ne %struct.Object* %41, null, !dbg !7435
  br i1 %tobool51, label %lor.end58, label %lor.lhs.false52, !dbg !7435

lor.lhs.false52:                                  ; preds = %lor.lhs.false50
  %42 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7435
  %ext1 = getelementptr inbounds %struct.Curve, %struct.Curve* %42, i32 0, i32 25, !dbg !7435
  %43 = load float, float* %ext1, align 4, !dbg !7435
  %cmp53 = fcmp une float %43, 0.000000e+00, !dbg !7435
  br i1 %cmp53, label %lor.end58, label %lor.rhs55, !dbg !7435

lor.rhs55:                                        ; preds = %lor.lhs.false52
  %44 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7435
  %ext2 = getelementptr inbounds %struct.Curve, %struct.Curve* %44, i32 0, i32 26, !dbg !7435
  %45 = load float, float* %ext2, align 8, !dbg !7435
  %cmp56 = fcmp une float %45, 0.000000e+00, !dbg !7435
  br label %lor.end58, !dbg !7435

lor.end58:                                        ; preds = %lor.rhs55, %lor.lhs.false52, %lor.lhs.false50, %lor.lhs.false46, %cond.false, %cond.true
  %46 = phi i1 [ true, %lor.lhs.false52 ], [ true, %lor.lhs.false50 ], [ true, %lor.lhs.false46 ], [ true, %cond.false ], [ true, %cond.true ], [ %cmp56, %lor.rhs55 ]
  %47 = zext i1 %46 to i64, !dbg !7435
  %cond60 = select i1 %46, i32 1, i32 0, !dbg !7435
  %conv61 = trunc i32 %cond60 to i8, !dbg !7435
  store i8 %conv61, i8* %do_radius, align 1, !dbg !7436
  store i8 1, i8* %do_weight, align 1, !dbg !7437
  %48 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7438
  %call = call zeroext i8 @BKE_nurb_check_valid_u(%struct.Nurb* %48), !dbg !7440
  %tobool62 = icmp ne i8 %call, 0, !dbg !7440
  br i1 %tobool62, label %if.else, label %if.then63, !dbg !7441

if.then63:                                        ; preds = %lor.end58
  %49 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7442
  %call64 = call i8* %49(i64 136, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0)), !dbg !7442
  %50 = bitcast i8* %call64 to %struct.BevList*, !dbg !7442
  store %struct.BevList* %50, %struct.BevList** %bl, align 8, !dbg !7444
  %51 = load %struct.ListBase*, %struct.ListBase** %bev, align 8, !dbg !7445
  %52 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7446
  %53 = bitcast %struct.BevList* %52 to i8*, !dbg !7446
  call void @BLI_addtail(%struct.ListBase* %51, i8* %53), !dbg !7447
  %54 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7448
  %nr65 = getelementptr inbounds %struct.BevList, %struct.BevList* %54, i32 0, i32 2, !dbg !7449
  store i32 0, i32* %nr65, align 8, !dbg !7450
  %55 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7451
  %charidx = getelementptr inbounds %struct.Nurb, %struct.Nurb* %55, i32 0, i32 21, !dbg !7452
  %56 = load i32, i32* %charidx, align 4, !dbg !7452
  %57 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7453
  %charidx66 = getelementptr inbounds %struct.BevList, %struct.BevList* %57, i32 0, i32 6, !dbg !7454
  store i32 %56, i32* %charidx66, align 8, !dbg !7455
  br label %if.end577, !dbg !7456

if.else:                                          ; preds = %lor.end58
  %58 = load i8, i8* %for_render.addr, align 1, !dbg !7457
  %conv67 = zext i8 %58 to i32, !dbg !7457
  %tobool68 = icmp ne i32 %conv67, 0, !dbg !7457
  br i1 %tobool68, label %land.lhs.true69, label %if.else76, !dbg !7460

land.lhs.true69:                                  ; preds = %if.else
  %59 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7461
  %resolu_ren = getelementptr inbounds %struct.Curve, %struct.Curve* %59, i32 0, i32 29, !dbg !7462
  %60 = load i16, i16* %resolu_ren, align 8, !dbg !7462
  %conv70 = sext i16 %60 to i32, !dbg !7461
  %cmp71 = icmp ne i32 %conv70, 0, !dbg !7463
  br i1 %cmp71, label %if.then73, label %if.else76, !dbg !7464

if.then73:                                        ; preds = %land.lhs.true69
  %61 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7465
  %resolu_ren74 = getelementptr inbounds %struct.Curve, %struct.Curve* %61, i32 0, i32 29, !dbg !7466
  %62 = load i16, i16* %resolu_ren74, align 8, !dbg !7466
  %conv75 = sext i16 %62 to i32, !dbg !7465
  store i32 %conv75, i32* %resolu, align 4, !dbg !7467
  br label %if.end79, !dbg !7468

if.else76:                                        ; preds = %land.lhs.true69, %if.else
  %63 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7469
  %resolu77 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %63, i32 0, i32 9, !dbg !7470
  %64 = load i16, i16* %resolu77, align 4, !dbg !7470
  %conv78 = sext i16 %64 to i32, !dbg !7469
  store i32 %conv78, i32* %resolu, align 4, !dbg !7471
  br label %if.end79

if.end79:                                         ; preds = %if.else76, %if.then73
  %65 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7472
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %65, i32 0, i32 13, !dbg !7472
  %66 = load i16, i16* %flagu, align 4, !dbg !7472
  %conv80 = sext i16 %66 to i32, !dbg !7472
  %and81 = and i32 %conv80, 1, !dbg !7472
  %tobool82 = icmp ne i32 %and81, 0, !dbg !7472
  br i1 %tobool82, label %cond.true83, label %cond.false84, !dbg !7472

cond.true83:                                      ; preds = %if.end79
  %67 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7472
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %67, i32 0, i32 6, !dbg !7472
  %68 = load i32, i32* %pntsu, align 8, !dbg !7472
  br label %cond.end, !dbg !7472

cond.false84:                                     ; preds = %if.end79
  %69 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7472
  %pntsu85 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %69, i32 0, i32 6, !dbg !7472
  %70 = load i32, i32* %pntsu85, align 8, !dbg !7472
  %sub = sub nsw i32 %70, 1, !dbg !7472
  br label %cond.end, !dbg !7472

cond.end:                                         ; preds = %cond.false84, %cond.true83
  %cond86 = phi i32 [ %68, %cond.true83 ], [ %sub, %cond.false84 ], !dbg !7472
  store i32 %cond86, i32* %segcount, align 4, !dbg !7473
  %71 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7474
  %type87 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %71, i32 0, i32 2, !dbg !7476
  %72 = load i16, i16* %type87, align 8, !dbg !7476
  %conv88 = sext i16 %72 to i32, !dbg !7474
  %cmp89 = icmp eq i32 %conv88, 0, !dbg !7477
  br i1 %cmp89, label %if.then91, label %if.else162, !dbg !7478

if.then91:                                        ; preds = %cond.end
  %73 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7479
  %pntsu92 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %73, i32 0, i32 6, !dbg !7481
  %74 = load i32, i32* %pntsu92, align 8, !dbg !7481
  store i32 %74, i32* %len, align 4, !dbg !7482
  %75 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7483
  %76 = load i32, i32* %len, align 4, !dbg !7484
  %conv93 = sext i32 %76 to i64, !dbg !7484
  %mul = mul i64 %conv93, 80, !dbg !7485
  %add = add i64 56, %mul, !dbg !7486
  %call94 = call i8* %75(i64 %add, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i64 0, i64 0)), !dbg !7483
  %77 = bitcast i8* %call94 to %struct.BevList*, !dbg !7483
  store %struct.BevList* %77, %struct.BevList** %bl, align 8, !dbg !7487
  %78 = load i8, i8* %need_seglen, align 1, !dbg !7488
  %conv95 = zext i8 %78 to i32, !dbg !7488
  %tobool96 = icmp ne i32 %conv95, 0, !dbg !7488
  br i1 %tobool96, label %land.lhs.true97, label %if.end112, !dbg !7490

land.lhs.true97:                                  ; preds = %if.then91
  %79 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7491
  %flagu98 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %79, i32 0, i32 13, !dbg !7492
  %80 = load i16, i16* %flagu98, align 4, !dbg !7492
  %conv99 = sext i16 %80 to i32, !dbg !7491
  %and100 = and i32 %conv99, 1, !dbg !7493
  %cmp101 = icmp eq i32 %and100, 0, !dbg !7494
  br i1 %cmp101, label %if.then103, label %if.end112, !dbg !7495

if.then103:                                       ; preds = %land.lhs.true97
  %81 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7496
  %82 = load i32, i32* %segcount, align 4, !dbg !7498
  %conv104 = sext i32 %82 to i64, !dbg !7498
  %mul105 = mul i64 %conv104, 4, !dbg !7499
  %call106 = call i8* %81(i64 %mul105, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i64 0, i64 0)), !dbg !7496
  %83 = bitcast i8* %call106 to float*, !dbg !7496
  %84 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7500
  %seglen107 = getelementptr inbounds %struct.BevList, %struct.BevList* %84, i32 0, i32 8, !dbg !7501
  store float* %83, float** %seglen107, align 8, !dbg !7502
  %85 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7503
  %86 = load i32, i32* %segcount, align 4, !dbg !7504
  %conv108 = sext i32 %86 to i64, !dbg !7504
  %mul109 = mul i64 %conv108, 4, !dbg !7505
  %call110 = call i8* %85(i64 %mul109, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.30, i64 0, i64 0)), !dbg !7503
  %87 = bitcast i8* %call110 to i32*, !dbg !7503
  %88 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7506
  %segbevcount111 = getelementptr inbounds %struct.BevList, %struct.BevList* %88, i32 0, i32 7, !dbg !7507
  store i32* %87, i32** %segbevcount111, align 8, !dbg !7508
  br label %if.end112, !dbg !7509

if.end112:                                        ; preds = %if.then103, %land.lhs.true97, %if.then91
  %89 = load %struct.ListBase*, %struct.ListBase** %bev, align 8, !dbg !7510
  %90 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7511
  %91 = bitcast %struct.BevList* %90 to i8*, !dbg !7511
  call void @BLI_addtail(%struct.ListBase* %89, i8* %91), !dbg !7512
  %92 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7513
  %flagu113 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %92, i32 0, i32 13, !dbg !7514
  %93 = load i16, i16* %flagu113, align 4, !dbg !7514
  %conv114 = sext i16 %93 to i32, !dbg !7513
  %and115 = and i32 %conv114, 1, !dbg !7515
  %tobool116 = icmp ne i32 %and115, 0, !dbg !7516
  %94 = zext i1 %tobool116 to i64, !dbg !7516
  %cond117 = select i1 %tobool116, i32 0, i32 -1, !dbg !7516
  %95 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7517
  %poly118 = getelementptr inbounds %struct.BevList, %struct.BevList* %95, i32 0, i32 4, !dbg !7518
  store i32 %cond117, i32* %poly118, align 8, !dbg !7519
  %96 = load i32, i32* %len, align 4, !dbg !7520
  %97 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7521
  %nr119 = getelementptr inbounds %struct.BevList, %struct.BevList* %97, i32 0, i32 2, !dbg !7522
  store i32 %96, i32* %nr119, align 8, !dbg !7523
  %98 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7524
  %dupe_nr = getelementptr inbounds %struct.BevList, %struct.BevList* %98, i32 0, i32 3, !dbg !7525
  store i32 0, i32* %dupe_nr, align 4, !dbg !7526
  %99 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7527
  %charidx120 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %99, i32 0, i32 21, !dbg !7528
  %100 = load i32, i32* %charidx120, align 4, !dbg !7528
  %101 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7529
  %charidx121 = getelementptr inbounds %struct.BevList, %struct.BevList* %101, i32 0, i32 6, !dbg !7530
  store i32 %100, i32* %charidx121, align 8, !dbg !7531
  %102 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7532
  %bevpoints = getelementptr inbounds %struct.BevList, %struct.BevList* %102, i32 0, i32 9, !dbg !7533
  %arraydecay = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints, i64 0, i64 0, !dbg !7532
  store %struct.BevPoint* %arraydecay, %struct.BevPoint** %bevp, align 8, !dbg !7534
  %103 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7535
  %offset = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %103, i32 0, i32 4, !dbg !7536
  store float 0.000000e+00, float* %offset, align 4, !dbg !7537
  %104 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7538
  %bp122 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %104, i32 0, i32 17, !dbg !7539
  %105 = load %struct.BPoint*, %struct.BPoint** %bp122, align 8, !dbg !7539
  store %struct.BPoint* %105, %struct.BPoint** %bp, align 8, !dbg !7540
  %106 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7541
  %seglen123 = getelementptr inbounds %struct.BevList, %struct.BevList* %106, i32 0, i32 8, !dbg !7542
  %107 = load float*, float** %seglen123, align 8, !dbg !7542
  store float* %107, float** %seglen, align 8, !dbg !7543
  %108 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7544
  %segbevcount124 = getelementptr inbounds %struct.BevList, %struct.BevList* %108, i32 0, i32 7, !dbg !7545
  %109 = load i32*, i32** %segbevcount124, align 8, !dbg !7545
  store i32* %109, i32** %segbevcount, align 8, !dbg !7546
  br label %while.cond, !dbg !7547

while.cond:                                       ; preds = %if.end154, %if.end112
  %110 = load i32, i32* %len, align 4, !dbg !7548
  %dec = add nsw i32 %110, -1, !dbg !7548
  store i32 %dec, i32* %len, align 4, !dbg !7548
  %tobool125 = icmp ne i32 %110, 0, !dbg !7547
  br i1 %tobool125, label %while.body, label %while.end, !dbg !7547

while.body:                                       ; preds = %while.cond
  %111 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7549
  %vec = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %111, i32 0, i32 0, !dbg !7551
  %arraydecay126 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !7549
  %112 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7552
  %vec127 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %112, i32 0, i32 0, !dbg !7553
  %arraydecay128 = getelementptr inbounds [4 x float], [4 x float]* %vec127, i64 0, i64 0, !dbg !7552
  call void @copy_v3_v3(float* %arraydecay126, float* %arraydecay128), !dbg !7554
  %113 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7555
  %alfa = getelementptr inbounds %struct.BPoint, %struct.BPoint* %113, i32 0, i32 1, !dbg !7556
  %114 = load float, float* %alfa, align 4, !dbg !7556
  %115 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7557
  %alfa129 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %115, i32 0, i32 1, !dbg !7558
  store float %114, float* %alfa129, align 4, !dbg !7559
  %116 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7560
  %radius = getelementptr inbounds %struct.BPoint, %struct.BPoint* %116, i32 0, i32 5, !dbg !7561
  %117 = load float, float* %radius, align 4, !dbg !7561
  %118 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7562
  %radius130 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %118, i32 0, i32 2, !dbg !7563
  store float %117, float* %radius130, align 4, !dbg !7564
  %119 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7565
  %weight = getelementptr inbounds %struct.BPoint, %struct.BPoint* %119, i32 0, i32 2, !dbg !7566
  %120 = load float, float* %weight, align 4, !dbg !7566
  %121 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7567
  %weight131 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %121, i32 0, i32 3, !dbg !7568
  store float %120, float* %weight131, align 4, !dbg !7569
  %122 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7570
  %split_tag = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %122, i32 0, i32 10, !dbg !7571
  store i16 1, i16* %split_tag, align 4, !dbg !7572
  %123 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7573
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %123, i32 1, !dbg !7573
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp, align 8, !dbg !7573
  %124 = load float*, float** %seglen, align 8, !dbg !7574
  %cmp132 = icmp ne float* %124, null, !dbg !7576
  br i1 %cmp132, label %land.lhs.true134, label %if.else152, !dbg !7577

land.lhs.true134:                                 ; preds = %while.body
  %125 = load i32, i32* %len, align 4, !dbg !7578
  %cmp135 = icmp ne i32 %125, 0, !dbg !7579
  br i1 %cmp135, label %if.then137, label %if.else152, !dbg !7580

if.then137:                                       ; preds = %land.lhs.true134
  %126 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7581
  %vec138 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %126, i32 0, i32 0, !dbg !7583
  %arraydecay139 = getelementptr inbounds [3 x float], [3 x float]* %vec138, i64 0, i64 0, !dbg !7581
  %127 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !7584
  %vec140 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %127, i32 0, i32 0, !dbg !7585
  %arraydecay141 = getelementptr inbounds [4 x float], [4 x float]* %vec140, i64 0, i64 0, !dbg !7584
  %call142 = call float @len_v3v3(float* %arraydecay139, float* %arraydecay141), !dbg !7586
  %128 = load float*, float** %seglen, align 8, !dbg !7587
  store float %call142, float* %128, align 4, !dbg !7588
  %129 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7589
  %incdec.ptr143 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %129, i32 1, !dbg !7589
  store %struct.BevPoint* %incdec.ptr143, %struct.BevPoint** %bevp, align 8, !dbg !7589
  %130 = load float*, float** %seglen, align 8, !dbg !7590
  %131 = load float, float* %130, align 4, !dbg !7591
  %132 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7592
  %offset144 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %132, i32 0, i32 4, !dbg !7593
  store float %131, float* %offset144, align 4, !dbg !7594
  %133 = load float*, float** %seglen, align 8, !dbg !7595
  %134 = load float, float* %133, align 4, !dbg !7597
  %cmp145 = fcmp ogt float %134, 0x3EE4F8B580000000, !dbg !7598
  br i1 %cmp145, label %if.then147, label %if.else148, !dbg !7599

if.then147:                                       ; preds = %if.then137
  %135 = load i32*, i32** %segbevcount, align 8, !dbg !7600
  store i32 1, i32* %135, align 4, !dbg !7601
  br label %if.end149, !dbg !7602

if.else148:                                       ; preds = %if.then137
  %136 = load i32*, i32** %segbevcount, align 8, !dbg !7603
  store i32 0, i32* %136, align 4, !dbg !7604
  br label %if.end149

if.end149:                                        ; preds = %if.else148, %if.then147
  %137 = load float*, float** %seglen, align 8, !dbg !7605
  %incdec.ptr150 = getelementptr inbounds float, float* %137, i32 1, !dbg !7605
  store float* %incdec.ptr150, float** %seglen, align 8, !dbg !7605
  %138 = load i32*, i32** %segbevcount, align 8, !dbg !7606
  %incdec.ptr151 = getelementptr inbounds i32, i32* %138, i32 1, !dbg !7606
  store i32* %incdec.ptr151, i32** %segbevcount, align 8, !dbg !7606
  br label %if.end154, !dbg !7607

if.else152:                                       ; preds = %land.lhs.true134, %while.body
  %139 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7608
  %incdec.ptr153 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %139, i32 1, !dbg !7608
  store %struct.BevPoint* %incdec.ptr153, %struct.BevPoint** %bevp, align 8, !dbg !7608
  br label %if.end154

if.end154:                                        ; preds = %if.else152, %if.end149
  br label %while.cond, !dbg !7547, !llvm.loop !7610

while.end:                                        ; preds = %while.cond
  %140 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7612
  %flagu155 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %140, i32 0, i32 13, !dbg !7614
  %141 = load i16, i16* %flagu155, align 4, !dbg !7614
  %conv156 = sext i16 %141 to i32, !dbg !7612
  %and157 = and i32 %conv156, 1, !dbg !7615
  %cmp158 = icmp eq i32 %and157, 0, !dbg !7616
  br i1 %cmp158, label %if.then160, label %if.end161, !dbg !7617

if.then160:                                       ; preds = %while.end
  %142 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7618
  %143 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7620
  call void @bevlist_firstlast_direction_calc_from_bpoint(%struct.Nurb* %142, %struct.BevList* %143), !dbg !7621
  br label %if.end161, !dbg !7622

if.end161:                                        ; preds = %if.then160, %while.end
  br label %if.end576, !dbg !7623

if.else162:                                       ; preds = %cond.end
  %144 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7624
  %type163 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %144, i32 0, i32 2, !dbg !7626
  %145 = load i16, i16* %type163, align 8, !dbg !7626
  %conv164 = sext i16 %145 to i32, !dbg !7624
  %cmp165 = icmp eq i32 %conv164, 1, !dbg !7627
  br i1 %cmp165, label %if.then167, label %if.else455, !dbg !7628

if.then167:                                       ; preds = %if.else162
  %146 = load i32, i32* %segcount, align 4, !dbg !7629
  %147 = load i32, i32* %resolu, align 4, !dbg !7631
  %mul168 = mul nsw i32 %146, %147, !dbg !7632
  %add169 = add nsw i32 %mul168, 1, !dbg !7633
  store i32 %add169, i32* %len, align 4, !dbg !7634
  %148 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7635
  %149 = load i32, i32* %len, align 4, !dbg !7636
  %conv170 = sext i32 %149 to i64, !dbg !7636
  %mul171 = mul i64 %conv170, 80, !dbg !7637
  %add172 = add i64 56, %mul171, !dbg !7638
  %call173 = call i8* %148(i64 %add172, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.31, i64 0, i64 0)), !dbg !7635
  %150 = bitcast i8* %call173 to %struct.BevList*, !dbg !7635
  store %struct.BevList* %150, %struct.BevList** %bl, align 8, !dbg !7639
  %151 = load i8, i8* %need_seglen, align 1, !dbg !7640
  %conv174 = zext i8 %151 to i32, !dbg !7640
  %tobool175 = icmp ne i32 %conv174, 0, !dbg !7640
  br i1 %tobool175, label %land.lhs.true176, label %if.end191, !dbg !7642

land.lhs.true176:                                 ; preds = %if.then167
  %152 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7643
  %flagu177 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %152, i32 0, i32 13, !dbg !7644
  %153 = load i16, i16* %flagu177, align 4, !dbg !7644
  %conv178 = sext i16 %153 to i32, !dbg !7643
  %and179 = and i32 %conv178, 1, !dbg !7645
  %cmp180 = icmp eq i32 %and179, 0, !dbg !7646
  br i1 %cmp180, label %if.then182, label %if.end191, !dbg !7647

if.then182:                                       ; preds = %land.lhs.true176
  %154 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7648
  %155 = load i32, i32* %segcount, align 4, !dbg !7650
  %conv183 = sext i32 %155 to i64, !dbg !7650
  %mul184 = mul i64 %conv183, 4, !dbg !7651
  %call185 = call i8* %154(i64 %mul184, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.32, i64 0, i64 0)), !dbg !7648
  %156 = bitcast i8* %call185 to float*, !dbg !7648
  %157 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7652
  %seglen186 = getelementptr inbounds %struct.BevList, %struct.BevList* %157, i32 0, i32 8, !dbg !7653
  store float* %156, float** %seglen186, align 8, !dbg !7654
  %158 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7655
  %159 = load i32, i32* %segcount, align 4, !dbg !7656
  %conv187 = sext i32 %159 to i64, !dbg !7656
  %mul188 = mul i64 %conv187, 4, !dbg !7657
  %call189 = call i8* %158(i64 %mul188, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i64 0, i64 0)), !dbg !7655
  %160 = bitcast i8* %call189 to i32*, !dbg !7655
  %161 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7658
  %segbevcount190 = getelementptr inbounds %struct.BevList, %struct.BevList* %161, i32 0, i32 7, !dbg !7659
  store i32* %160, i32** %segbevcount190, align 8, !dbg !7660
  br label %if.end191, !dbg !7661

if.end191:                                        ; preds = %if.then182, %land.lhs.true176, %if.then167
  %162 = load %struct.ListBase*, %struct.ListBase** %bev, align 8, !dbg !7662
  %163 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7663
  %164 = bitcast %struct.BevList* %163 to i8*, !dbg !7663
  call void @BLI_addtail(%struct.ListBase* %162, i8* %164), !dbg !7664
  %165 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7665
  %flagu192 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %165, i32 0, i32 13, !dbg !7666
  %166 = load i16, i16* %flagu192, align 4, !dbg !7666
  %conv193 = sext i16 %166 to i32, !dbg !7665
  %and194 = and i32 %conv193, 1, !dbg !7667
  %tobool195 = icmp ne i32 %and194, 0, !dbg !7668
  %167 = zext i1 %tobool195 to i64, !dbg !7668
  %cond196 = select i1 %tobool195, i32 0, i32 -1, !dbg !7668
  %168 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7669
  %poly197 = getelementptr inbounds %struct.BevList, %struct.BevList* %168, i32 0, i32 4, !dbg !7670
  store i32 %cond196, i32* %poly197, align 8, !dbg !7671
  %169 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7672
  %charidx198 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %169, i32 0, i32 21, !dbg !7673
  %170 = load i32, i32* %charidx198, align 4, !dbg !7673
  %171 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7674
  %charidx199 = getelementptr inbounds %struct.BevList, %struct.BevList* %171, i32 0, i32 6, !dbg !7675
  store i32 %170, i32* %charidx199, align 8, !dbg !7676
  %172 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7677
  %bevpoints200 = getelementptr inbounds %struct.BevList, %struct.BevList* %172, i32 0, i32 9, !dbg !7678
  %arraydecay201 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints200, i64 0, i64 0, !dbg !7677
  store %struct.BevPoint* %arraydecay201, %struct.BevPoint** %bevp, align 8, !dbg !7679
  %173 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7680
  %seglen202 = getelementptr inbounds %struct.BevList, %struct.BevList* %173, i32 0, i32 8, !dbg !7681
  %174 = load float*, float** %seglen202, align 8, !dbg !7681
  store float* %174, float** %seglen, align 8, !dbg !7682
  %175 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7683
  %segbevcount203 = getelementptr inbounds %struct.BevList, %struct.BevList* %175, i32 0, i32 7, !dbg !7684
  %176 = load i32*, i32** %segbevcount203, align 8, !dbg !7684
  store i32* %176, i32** %segbevcount, align 8, !dbg !7685
  %177 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7686
  %offset204 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %177, i32 0, i32 4, !dbg !7687
  store float 0.000000e+00, float* %offset204, align 4, !dbg !7688
  %178 = load float*, float** %seglen, align 8, !dbg !7689
  %cmp205 = icmp ne float* %178, null, !dbg !7691
  br i1 %cmp205, label %if.then207, label %if.end208, !dbg !7692

if.then207:                                       ; preds = %if.end191
  %179 = load float*, float** %seglen, align 8, !dbg !7693
  store float 0.000000e+00, float* %179, align 4, !dbg !7695
  %180 = load i32*, i32** %segbevcount, align 8, !dbg !7696
  store i32 0, i32* %180, align 4, !dbg !7697
  br label %if.end208, !dbg !7698

if.end208:                                        ; preds = %if.then207, %if.end191
  %181 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7699
  %pntsu209 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %181, i32 0, i32 6, !dbg !7700
  %182 = load i32, i32* %pntsu209, align 8, !dbg !7700
  %sub210 = sub nsw i32 %182, 1, !dbg !7701
  store i32 %sub210, i32* %a, align 4, !dbg !7702
  %183 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7703
  %bezt211 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %183, i32 0, i32 18, !dbg !7704
  %184 = load %struct.BezTriple*, %struct.BezTriple** %bezt211, align 8, !dbg !7704
  store %struct.BezTriple* %184, %struct.BezTriple** %bezt, align 8, !dbg !7705
  %185 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7706
  %flagu212 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %185, i32 0, i32 13, !dbg !7708
  %186 = load i16, i16* %flagu212, align 4, !dbg !7708
  %conv213 = sext i16 %186 to i32, !dbg !7706
  %and214 = and i32 %conv213, 1, !dbg !7709
  %tobool215 = icmp ne i32 %and214, 0, !dbg !7709
  br i1 %tobool215, label %if.then216, label %if.else220, !dbg !7710

if.then216:                                       ; preds = %if.end208
  %187 = load i32, i32* %a, align 4, !dbg !7711
  %inc = add nsw i32 %187, 1, !dbg !7711
  store i32 %inc, i32* %a, align 4, !dbg !7711
  %188 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7713
  %bezt217 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %188, i32 0, i32 18, !dbg !7714
  %189 = load %struct.BezTriple*, %struct.BezTriple** %bezt217, align 8, !dbg !7714
  %190 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7715
  %pntsu218 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %190, i32 0, i32 6, !dbg !7716
  %191 = load i32, i32* %pntsu218, align 8, !dbg !7716
  %sub219 = sub nsw i32 %191, 1, !dbg !7717
  %idx.ext = sext i32 %sub219 to i64, !dbg !7718
  %add.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %189, i64 %idx.ext, !dbg !7718
  store %struct.BezTriple* %add.ptr, %struct.BezTriple** %prevbezt, align 8, !dbg !7719
  br label %if.end222, !dbg !7720

if.else220:                                       ; preds = %if.end208
  %192 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7721
  store %struct.BezTriple* %192, %struct.BezTriple** %prevbezt, align 8, !dbg !7723
  %193 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7724
  %incdec.ptr221 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %193, i32 1, !dbg !7724
  store %struct.BezTriple* %incdec.ptr221, %struct.BezTriple** %bezt, align 8, !dbg !7724
  br label %if.end222

if.end222:                                        ; preds = %if.else220, %if.then216
  %194 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7725
  %dir = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %194, i32 0, i32 7, !dbg !7726
  %arraydecay223 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !7725
  %195 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7727
  %vec224 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %195, i32 0, i32 0, !dbg !7728
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec224, i64 0, i64 2, !dbg !7727
  %arraydecay225 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !7727
  %196 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7729
  %vec226 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %196, i32 0, i32 0, !dbg !7730
  %arrayidx227 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec226, i64 0, i64 1, !dbg !7729
  %arraydecay228 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx227, i64 0, i64 0, !dbg !7729
  call void @sub_v3_v3v3(float* %arraydecay223, float* %arraydecay225, float* %arraydecay228), !dbg !7731
  %197 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7732
  %dir229 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %197, i32 0, i32 7, !dbg !7733
  %arraydecay230 = getelementptr inbounds [3 x float], [3 x float]* %dir229, i64 0, i64 0, !dbg !7732
  %call231 = call float @normalize_v3(float* %arraydecay230), !dbg !7734
  br label %while.cond232, !dbg !7735

while.cond232:                                    ; preds = %if.end421, %if.end222
  %198 = load i32, i32* %a, align 4, !dbg !7736
  %dec233 = add nsw i32 %198, -1, !dbg !7736
  store i32 %dec233, i32* %a, align 4, !dbg !7736
  %tobool234 = icmp ne i32 %198, 0, !dbg !7735
  br i1 %tobool234, label %while.body235, label %while.end423, !dbg !7735

while.body235:                                    ; preds = %while.cond232
  %199 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7737
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %199, i32 0, i32 6, !dbg !7740
  %200 = load i8, i8* %h2, align 2, !dbg !7740
  %conv236 = zext i8 %200 to i32, !dbg !7737
  %cmp237 = icmp eq i32 %conv236, 2, !dbg !7741
  br i1 %cmp237, label %land.lhs.true239, label %if.else279, !dbg !7742

land.lhs.true239:                                 ; preds = %while.body235
  %201 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7743
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %201, i32 0, i32 5, !dbg !7744
  %202 = load i8, i8* %h1, align 1, !dbg !7744
  %conv240 = zext i8 %202 to i32, !dbg !7743
  %cmp241 = icmp eq i32 %conv240, 2, !dbg !7745
  br i1 %cmp241, label %if.then243, label %if.else279, !dbg !7746

if.then243:                                       ; preds = %land.lhs.true239
  %203 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7747
  %vec244 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %203, i32 0, i32 0, !dbg !7749
  %arraydecay245 = getelementptr inbounds [3 x float], [3 x float]* %vec244, i64 0, i64 0, !dbg !7747
  %204 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7750
  %vec246 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %204, i32 0, i32 0, !dbg !7751
  %arrayidx247 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec246, i64 0, i64 1, !dbg !7750
  %arraydecay248 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx247, i64 0, i64 0, !dbg !7750
  call void @copy_v3_v3(float* %arraydecay245, float* %arraydecay248), !dbg !7752
  %205 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7753
  %alfa249 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %205, i32 0, i32 1, !dbg !7754
  %206 = load float, float* %alfa249, align 4, !dbg !7754
  %207 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7755
  %alfa250 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %207, i32 0, i32 1, !dbg !7756
  store float %206, float* %alfa250, align 4, !dbg !7757
  %208 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7758
  %radius251 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %208, i32 0, i32 3, !dbg !7759
  %209 = load float, float* %radius251, align 4, !dbg !7759
  %210 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7760
  %radius252 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %210, i32 0, i32 2, !dbg !7761
  store float %209, float* %radius252, align 4, !dbg !7762
  %211 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7763
  %weight253 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %211, i32 0, i32 2, !dbg !7764
  %212 = load float, float* %weight253, align 4, !dbg !7764
  %213 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7765
  %weight254 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %213, i32 0, i32 3, !dbg !7766
  store float %212, float* %weight254, align 4, !dbg !7767
  %214 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7768
  %split_tag255 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %214, i32 0, i32 10, !dbg !7769
  store i16 1, i16* %split_tag255, align 4, !dbg !7770
  %215 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7771
  %dupe_tag = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %215, i32 0, i32 11, !dbg !7772
  store i16 0, i16* %dupe_tag, align 2, !dbg !7773
  %216 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7774
  %incdec.ptr256 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %216, i32 1, !dbg !7774
  store %struct.BevPoint* %incdec.ptr256, %struct.BevPoint** %bevp, align 8, !dbg !7774
  %217 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7775
  %nr257 = getelementptr inbounds %struct.BevList, %struct.BevList* %217, i32 0, i32 2, !dbg !7776
  %218 = load i32, i32* %nr257, align 8, !dbg !7777
  %inc258 = add nsw i32 %218, 1, !dbg !7777
  store i32 %inc258, i32* %nr257, align 8, !dbg !7777
  %219 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7778
  %dupe_nr259 = getelementptr inbounds %struct.BevList, %struct.BevList* %219, i32 0, i32 3, !dbg !7779
  store i32 1, i32* %dupe_nr259, align 4, !dbg !7780
  %220 = load float*, float** %seglen, align 8, !dbg !7781
  %cmp260 = icmp ne float* %220, null, !dbg !7783
  br i1 %cmp260, label %if.then262, label %if.end278, !dbg !7784

if.then262:                                       ; preds = %if.then243
  %221 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7785
  %vec263 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %221, i32 0, i32 0, !dbg !7787
  %arrayidx264 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec263, i64 0, i64 1, !dbg !7785
  %arraydecay265 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx264, i64 0, i64 0, !dbg !7785
  %222 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7788
  %vec266 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %222, i32 0, i32 0, !dbg !7789
  %arrayidx267 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec266, i64 0, i64 1, !dbg !7788
  %arraydecay268 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx267, i64 0, i64 0, !dbg !7788
  %call269 = call float @len_v3v3(float* %arraydecay265, float* %arraydecay268), !dbg !7790
  %223 = load float*, float** %seglen, align 8, !dbg !7791
  store float %call269, float* %223, align 4, !dbg !7792
  %224 = load float*, float** %seglen, align 8, !dbg !7793
  %225 = load float, float* %224, align 4, !dbg !7794
  %226 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7795
  %offset270 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %226, i32 0, i32 4, !dbg !7796
  store float %225, float* %offset270, align 4, !dbg !7797
  %227 = load float*, float** %seglen, align 8, !dbg !7798
  %incdec.ptr271 = getelementptr inbounds float, float* %227, i32 1, !dbg !7798
  store float* %incdec.ptr271, float** %seglen, align 8, !dbg !7798
  %228 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7799
  %offset272 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %228, i32 0, i32 4, !dbg !7801
  %229 = load float, float* %offset272, align 4, !dbg !7801
  %cmp273 = fcmp ogt float %229, 0x3EE4F8B580000000, !dbg !7802
  br i1 %cmp273, label %if.then275, label %if.end276, !dbg !7803

if.then275:                                       ; preds = %if.then262
  %230 = load i32*, i32** %segbevcount, align 8, !dbg !7804
  store i32 1, i32* %230, align 4, !dbg !7805
  br label %if.end276, !dbg !7806

if.end276:                                        ; preds = %if.then275, %if.then262
  %231 = load i32*, i32** %segbevcount, align 8, !dbg !7807
  %incdec.ptr277 = getelementptr inbounds i32, i32* %231, i32 1, !dbg !7807
  store i32* %incdec.ptr277, i32** %segbevcount, align 8, !dbg !7807
  br label %if.end278, !dbg !7808

if.end278:                                        ; preds = %if.end276, %if.then243
  br label %if.end421, !dbg !7809

if.else279:                                       ; preds = %land.lhs.true239, %while.body235
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7810, metadata !DIExpression()), !dbg !7812
  store i32 0, i32* %j, align 4, !dbg !7813
  br label %for.cond280, !dbg !7815

for.cond280:                                      ; preds = %for.inc, %if.else279
  %232 = load i32, i32* %j, align 4, !dbg !7816
  %cmp281 = icmp slt i32 %232, 3, !dbg !7818
  br i1 %cmp281, label %for.body283, label %for.end, !dbg !7819

for.body283:                                      ; preds = %for.cond280
  %233 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7820
  %vec284 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %233, i32 0, i32 0, !dbg !7822
  %arrayidx285 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec284, i64 0, i64 1, !dbg !7820
  %234 = load i32, i32* %j, align 4, !dbg !7823
  %idxprom = sext i32 %234 to i64, !dbg !7820
  %arrayidx286 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx285, i64 0, i64 %idxprom, !dbg !7820
  %235 = load float, float* %arrayidx286, align 4, !dbg !7820
  %236 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7824
  %vec287 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %236, i32 0, i32 0, !dbg !7825
  %arrayidx288 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec287, i64 0, i64 2, !dbg !7824
  %237 = load i32, i32* %j, align 4, !dbg !7826
  %idxprom289 = sext i32 %237 to i64, !dbg !7824
  %arrayidx290 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx288, i64 0, i64 %idxprom289, !dbg !7824
  %238 = load float, float* %arrayidx290, align 4, !dbg !7824
  %239 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7827
  %vec291 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %239, i32 0, i32 0, !dbg !7828
  %arrayidx292 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec291, i64 0, i64 0, !dbg !7827
  %240 = load i32, i32* %j, align 4, !dbg !7829
  %idxprom293 = sext i32 %240 to i64, !dbg !7827
  %arrayidx294 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx292, i64 0, i64 %idxprom293, !dbg !7827
  %241 = load float, float* %arrayidx294, align 4, !dbg !7827
  %242 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7830
  %vec295 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %242, i32 0, i32 0, !dbg !7831
  %arrayidx296 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec295, i64 0, i64 1, !dbg !7830
  %243 = load i32, i32* %j, align 4, !dbg !7832
  %idxprom297 = sext i32 %243 to i64, !dbg !7830
  %arrayidx298 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx296, i64 0, i64 %idxprom297, !dbg !7830
  %244 = load float, float* %arrayidx298, align 4, !dbg !7830
  %245 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7833
  %vec299 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %245, i32 0, i32 0, !dbg !7834
  %246 = load i32, i32* %j, align 4, !dbg !7835
  %idxprom300 = sext i32 %246 to i64, !dbg !7833
  %arrayidx301 = getelementptr inbounds [3 x float], [3 x float]* %vec299, i64 0, i64 %idxprom300, !dbg !7833
  %247 = load i32, i32* %resolu, align 4, !dbg !7836
  call void @BKE_curve_forward_diff_bezier(float %235, float %238, float %241, float %244, float* %arrayidx301, i32 %247, i32 80), !dbg !7837
  br label %for.inc, !dbg !7838

for.inc:                                          ; preds = %for.body283
  %248 = load i32, i32* %j, align 4, !dbg !7839
  %inc302 = add nsw i32 %248, 1, !dbg !7839
  store i32 %inc302, i32* %j, align 4, !dbg !7839
  br label %for.cond280, !dbg !7840, !llvm.loop !7841

for.end:                                          ; preds = %for.cond280
  %249 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7843
  %250 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7844
  %251 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7845
  %252 = load i8, i8* %do_tilt, align 1, !dbg !7846
  %conv303 = zext i8 %252 to i32, !dbg !7846
  %tobool304 = icmp ne i32 %conv303, 0, !dbg !7846
  br i1 %tobool304, label %cond.true305, label %cond.false307, !dbg !7846

cond.true305:                                     ; preds = %for.end
  %253 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7847
  %alfa306 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %253, i32 0, i32 1, !dbg !7848
  br label %cond.end308, !dbg !7846

cond.false307:                                    ; preds = %for.end
  br label %cond.end308, !dbg !7846

cond.end308:                                      ; preds = %cond.false307, %cond.true305
  %cond309 = phi float* [ %alfa306, %cond.true305 ], [ null, %cond.false307 ], !dbg !7846
  %254 = load i8, i8* %do_radius, align 1, !dbg !7849
  %conv310 = zext i8 %254 to i32, !dbg !7849
  %tobool311 = icmp ne i32 %conv310, 0, !dbg !7849
  br i1 %tobool311, label %cond.true312, label %cond.false314, !dbg !7849

cond.true312:                                     ; preds = %cond.end308
  %255 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7850
  %radius313 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %255, i32 0, i32 2, !dbg !7851
  br label %cond.end315, !dbg !7849

cond.false314:                                    ; preds = %cond.end308
  br label %cond.end315, !dbg !7849

cond.end315:                                      ; preds = %cond.false314, %cond.true312
  %cond316 = phi float* [ %radius313, %cond.true312 ], [ null, %cond.false314 ], !dbg !7849
  %256 = load i8, i8* %do_weight, align 1, !dbg !7852
  %conv317 = zext i8 %256 to i32, !dbg !7852
  %tobool318 = icmp ne i32 %conv317, 0, !dbg !7852
  br i1 %tobool318, label %cond.true319, label %cond.false321, !dbg !7852

cond.true319:                                     ; preds = %cond.end315
  %257 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7853
  %weight320 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %257, i32 0, i32 3, !dbg !7854
  br label %cond.end322, !dbg !7852

cond.false321:                                    ; preds = %cond.end315
  br label %cond.end322, !dbg !7852

cond.end322:                                      ; preds = %cond.false321, %cond.true319
  %cond323 = phi float* [ %weight320, %cond.true319 ], [ null, %cond.false321 ], !dbg !7852
  %258 = load i32, i32* %resolu, align 4, !dbg !7855
  call void @alfa_bezpart(%struct.BezTriple* %249, %struct.BezTriple* %250, %struct.Nurb* %251, float* %cond309, float* %cond316, float* %cond323, i32 %258, i32 80), !dbg !7856
  %259 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !7857
  %twist_mode = getelementptr inbounds %struct.Curve, %struct.Curve* %259, i32 0, i32 17, !dbg !7859
  %260 = load i16, i16* %twist_mode, align 2, !dbg !7859
  %conv324 = sext i16 %260 to i32, !dbg !7857
  %cmp325 = icmp eq i32 %conv324, 4, !dbg !7860
  br i1 %cmp325, label %if.then327, label %if.end341, !dbg !7861

if.then327:                                       ; preds = %cond.end322
  %261 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7862
  %vec328 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %261, i32 0, i32 0, !dbg !7864
  %arrayidx329 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec328, i64 0, i64 1, !dbg !7862
  %arraydecay330 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx329, i64 0, i64 0, !dbg !7862
  %262 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7865
  %vec331 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %262, i32 0, i32 0, !dbg !7866
  %arrayidx332 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec331, i64 0, i64 2, !dbg !7865
  %arraydecay333 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx332, i64 0, i64 0, !dbg !7865
  %263 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7867
  %vec334 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %263, i32 0, i32 0, !dbg !7868
  %arrayidx335 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec334, i64 0, i64 0, !dbg !7867
  %arraydecay336 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx335, i64 0, i64 0, !dbg !7867
  %264 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7869
  %vec337 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %264, i32 0, i32 0, !dbg !7870
  %arrayidx338 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec337, i64 0, i64 1, !dbg !7869
  %arraydecay339 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx338, i64 0, i64 0, !dbg !7869
  %265 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7871
  %tan = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %265, i32 0, i32 8, !dbg !7872
  %arraydecay340 = getelementptr inbounds [3 x float], [3 x float]* %tan, i64 0, i64 0, !dbg !7871
  %266 = load i32, i32* %resolu, align 4, !dbg !7873
  call void @forward_diff_bezier_cotangent(float* %arraydecay330, float* %arraydecay333, float* %arraydecay336, float* %arraydecay339, float* %arraydecay340, i32 %266, i32 80), !dbg !7874
  br label %if.end341, !dbg !7875

if.end341:                                        ; preds = %if.then327, %cond.end322
  %267 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7876
  %h1342 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %267, i32 0, i32 5, !dbg !7878
  %268 = load i8, i8* %h1342, align 1, !dbg !7878
  %conv343 = zext i8 %268 to i32, !dbg !7876
  %269 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7879
  %h2344 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %269, i32 0, i32 6, !dbg !7880
  %270 = load i8, i8* %h2344, align 2, !dbg !7880
  %conv345 = zext i8 %270 to i32, !dbg !7879
  %cmp346 = icmp eq i32 %conv343, %conv345, !dbg !7881
  br i1 %cmp346, label %if.then348, label %if.else361, !dbg !7882

if.then348:                                       ; preds = %if.end341
  %271 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7883
  %h1349 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %271, i32 0, i32 5, !dbg !7886
  %272 = load i8, i8* %h1349, align 1, !dbg !7886
  %conv350 = zext i8 %272 to i32, !dbg !7883
  %cmp351 = icmp eq i32 %conv350, 0, !dbg !7887
  br i1 %cmp351, label %if.then358, label %lor.lhs.false353, !dbg !7888

lor.lhs.false353:                                 ; preds = %if.then348
  %273 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7889
  %h1354 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %273, i32 0, i32 5, !dbg !7890
  %274 = load i8, i8* %h1354, align 1, !dbg !7890
  %conv355 = zext i8 %274 to i32, !dbg !7889
  %cmp356 = icmp eq i32 %conv355, 2, !dbg !7891
  br i1 %cmp356, label %if.then358, label %if.end360, !dbg !7892

if.then358:                                       ; preds = %lor.lhs.false353, %if.then348
  %275 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7893
  %split_tag359 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %275, i32 0, i32 10, !dbg !7894
  store i16 1, i16* %split_tag359, align 4, !dbg !7895
  br label %if.end360, !dbg !7893

if.end360:                                        ; preds = %if.then358, %lor.lhs.false353
  br label %if.end387, !dbg !7896

if.else361:                                       ; preds = %if.end341
  %276 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7897
  %h1362 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %276, i32 0, i32 5, !dbg !7900
  %277 = load i8, i8* %h1362, align 1, !dbg !7900
  %conv363 = zext i8 %277 to i32, !dbg !7897
  %cmp364 = icmp eq i32 %conv363, 0, !dbg !7901
  br i1 %cmp364, label %if.then371, label %lor.lhs.false366, !dbg !7902

lor.lhs.false366:                                 ; preds = %if.else361
  %278 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7903
  %h1367 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %278, i32 0, i32 5, !dbg !7904
  %279 = load i8, i8* %h1367, align 1, !dbg !7904
  %conv368 = zext i8 %279 to i32, !dbg !7903
  %cmp369 = icmp eq i32 %conv368, 2, !dbg !7905
  br i1 %cmp369, label %if.then371, label %if.else373, !dbg !7906

if.then371:                                       ; preds = %lor.lhs.false366, %if.else361
  %280 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7907
  %split_tag372 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %280, i32 0, i32 10, !dbg !7908
  store i16 1, i16* %split_tag372, align 4, !dbg !7909
  br label %if.end386, !dbg !7907

if.else373:                                       ; preds = %lor.lhs.false366
  %281 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7910
  %h2374 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %281, i32 0, i32 6, !dbg !7912
  %282 = load i8, i8* %h2374, align 2, !dbg !7912
  %conv375 = zext i8 %282 to i32, !dbg !7910
  %cmp376 = icmp eq i32 %conv375, 0, !dbg !7913
  br i1 %cmp376, label %if.then383, label %lor.lhs.false378, !dbg !7914

lor.lhs.false378:                                 ; preds = %if.else373
  %283 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7915
  %h2379 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %283, i32 0, i32 6, !dbg !7916
  %284 = load i8, i8* %h2379, align 2, !dbg !7916
  %conv380 = zext i8 %284 to i32, !dbg !7915
  %cmp381 = icmp eq i32 %conv380, 2, !dbg !7917
  br i1 %cmp381, label %if.then383, label %if.end385, !dbg !7918

if.then383:                                       ; preds = %lor.lhs.false378, %if.else373
  %285 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7919
  %split_tag384 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %285, i32 0, i32 10, !dbg !7920
  store i16 1, i16* %split_tag384, align 4, !dbg !7921
  br label %if.end385, !dbg !7919

if.end385:                                        ; preds = %if.then383, %lor.lhs.false378
  br label %if.end386

if.end386:                                        ; preds = %if.end385, %if.then371
  br label %if.end387

if.end387:                                        ; preds = %if.end386, %if.end360
  %286 = load float*, float** %seglen, align 8, !dbg !7922
  %cmp388 = icmp ne float* %286, null, !dbg !7924
  br i1 %cmp388, label %if.then390, label %if.else415, !dbg !7925

if.then390:                                       ; preds = %if.end387
  %287 = load float*, float** %seglen, align 8, !dbg !7926
  store float 0.000000e+00, float* %287, align 4, !dbg !7928
  %288 = load i32*, i32** %segbevcount, align 8, !dbg !7929
  store i32 0, i32* %288, align 4, !dbg !7930
  store i32 0, i32* %j, align 4, !dbg !7931
  br label %for.cond391, !dbg !7933

for.cond391:                                      ; preds = %for.inc410, %if.then390
  %289 = load i32, i32* %j, align 4, !dbg !7934
  %290 = load i32, i32* %resolu, align 4, !dbg !7936
  %cmp392 = icmp slt i32 %289, %290, !dbg !7937
  br i1 %cmp392, label %for.body394, label %for.end412, !dbg !7938

for.body394:                                      ; preds = %for.cond391
  %291 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7939
  store %struct.BevPoint* %291, %struct.BevPoint** %bevp0, align 8, !dbg !7941
  %292 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7942
  %incdec.ptr395 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %292, i32 1, !dbg !7942
  store %struct.BevPoint* %incdec.ptr395, %struct.BevPoint** %bevp, align 8, !dbg !7942
  %293 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !7943
  %vec396 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %293, i32 0, i32 0, !dbg !7944
  %arraydecay397 = getelementptr inbounds [3 x float], [3 x float]* %vec396, i64 0, i64 0, !dbg !7943
  %294 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7945
  %vec398 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %294, i32 0, i32 0, !dbg !7946
  %arraydecay399 = getelementptr inbounds [3 x float], [3 x float]* %vec398, i64 0, i64 0, !dbg !7945
  %call400 = call float @len_v3v3(float* %arraydecay397, float* %arraydecay399), !dbg !7947
  %295 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7948
  %offset401 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %295, i32 0, i32 4, !dbg !7949
  store float %call400, float* %offset401, align 4, !dbg !7950
  %296 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7951
  %offset402 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %296, i32 0, i32 4, !dbg !7953
  %297 = load float, float* %offset402, align 4, !dbg !7953
  %cmp403 = fcmp ogt float %297, 0x3EE4F8B580000000, !dbg !7954
  br i1 %cmp403, label %if.then405, label %if.end409, !dbg !7955

if.then405:                                       ; preds = %for.body394
  %298 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7956
  %offset406 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %298, i32 0, i32 4, !dbg !7958
  %299 = load float, float* %offset406, align 4, !dbg !7958
  %300 = load float*, float** %seglen, align 8, !dbg !7959
  %301 = load float, float* %300, align 4, !dbg !7960
  %add407 = fadd float %301, %299, !dbg !7960
  store float %add407, float* %300, align 4, !dbg !7960
  %302 = load i32*, i32** %segbevcount, align 8, !dbg !7961
  %303 = load i32, i32* %302, align 4, !dbg !7962
  %add408 = add nsw i32 %303, 1, !dbg !7962
  store i32 %add408, i32* %302, align 4, !dbg !7962
  br label %if.end409, !dbg !7963

if.end409:                                        ; preds = %if.then405, %for.body394
  br label %for.inc410, !dbg !7964

for.inc410:                                       ; preds = %if.end409
  %304 = load i32, i32* %j, align 4, !dbg !7965
  %inc411 = add nsw i32 %304, 1, !dbg !7965
  store i32 %inc411, i32* %j, align 4, !dbg !7965
  br label %for.cond391, !dbg !7966, !llvm.loop !7967

for.end412:                                       ; preds = %for.cond391
  %305 = load float*, float** %seglen, align 8, !dbg !7969
  %incdec.ptr413 = getelementptr inbounds float, float* %305, i32 1, !dbg !7969
  store float* %incdec.ptr413, float** %seglen, align 8, !dbg !7969
  %306 = load i32*, i32** %segbevcount, align 8, !dbg !7970
  %incdec.ptr414 = getelementptr inbounds i32, i32* %306, i32 1, !dbg !7970
  store i32* %incdec.ptr414, i32** %segbevcount, align 8, !dbg !7970
  br label %if.end418, !dbg !7971

if.else415:                                       ; preds = %if.end387
  %307 = load i32, i32* %resolu, align 4, !dbg !7972
  %308 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7974
  %idx.ext416 = sext i32 %307 to i64, !dbg !7974
  %add.ptr417 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %308, i64 %idx.ext416, !dbg !7974
  store %struct.BevPoint* %add.ptr417, %struct.BevPoint** %bevp, align 8, !dbg !7974
  br label %if.end418

if.end418:                                        ; preds = %if.else415, %for.end412
  %309 = load i32, i32* %resolu, align 4, !dbg !7975
  %310 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !7976
  %nr419 = getelementptr inbounds %struct.BevList, %struct.BevList* %310, i32 0, i32 2, !dbg !7977
  %311 = load i32, i32* %nr419, align 8, !dbg !7978
  %add420 = add nsw i32 %311, %309, !dbg !7978
  store i32 %add420, i32* %nr419, align 8, !dbg !7978
  br label %if.end421

if.end421:                                        ; preds = %if.end418, %if.end278
  %312 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7979
  store %struct.BezTriple* %312, %struct.BezTriple** %prevbezt, align 8, !dbg !7980
  %313 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !7981
  %incdec.ptr422 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %313, i32 1, !dbg !7981
  store %struct.BezTriple* %incdec.ptr422, %struct.BezTriple** %bezt, align 8, !dbg !7981
  br label %while.cond232, !dbg !7735, !llvm.loop !7982

while.end423:                                     ; preds = %while.cond232
  %314 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !7984
  %flagu424 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %314, i32 0, i32 13, !dbg !7986
  %315 = load i16, i16* %flagu424, align 4, !dbg !7986
  %conv425 = sext i16 %315 to i32, !dbg !7984
  %and426 = and i32 %conv425, 1, !dbg !7987
  %cmp427 = icmp eq i32 %and426, 0, !dbg !7988
  br i1 %cmp427, label %if.then429, label %if.end454, !dbg !7989

if.then429:                                       ; preds = %while.end423
  %316 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7990
  %vec430 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %316, i32 0, i32 0, !dbg !7992
  %arraydecay431 = getelementptr inbounds [3 x float], [3 x float]* %vec430, i64 0, i64 0, !dbg !7990
  %317 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7993
  %vec432 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %317, i32 0, i32 0, !dbg !7994
  %arrayidx433 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec432, i64 0, i64 1, !dbg !7993
  %arraydecay434 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx433, i64 0, i64 0, !dbg !7993
  call void @copy_v3_v3(float* %arraydecay431, float* %arraydecay434), !dbg !7995
  %318 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !7996
  %alfa435 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %318, i32 0, i32 1, !dbg !7997
  %319 = load float, float* %alfa435, align 4, !dbg !7997
  %320 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !7998
  %alfa436 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %320, i32 0, i32 1, !dbg !7999
  store float %319, float* %alfa436, align 4, !dbg !8000
  %321 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !8001
  %radius437 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %321, i32 0, i32 3, !dbg !8002
  %322 = load float, float* %radius437, align 4, !dbg !8002
  %323 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8003
  %radius438 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %323, i32 0, i32 2, !dbg !8004
  store float %322, float* %radius438, align 4, !dbg !8005
  %324 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !8006
  %weight439 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %324, i32 0, i32 2, !dbg !8007
  %325 = load float, float* %weight439, align 4, !dbg !8007
  %326 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8008
  %weight440 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %326, i32 0, i32 3, !dbg !8009
  store float %325, float* %weight440, align 4, !dbg !8010
  %327 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8011
  %dir441 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %327, i32 0, i32 7, !dbg !8012
  %arraydecay442 = getelementptr inbounds [3 x float], [3 x float]* %dir441, i64 0, i64 0, !dbg !8011
  %328 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !8013
  %vec443 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %328, i32 0, i32 0, !dbg !8014
  %arrayidx444 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec443, i64 0, i64 1, !dbg !8013
  %arraydecay445 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx444, i64 0, i64 0, !dbg !8013
  %329 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt, align 8, !dbg !8015
  %vec446 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %329, i32 0, i32 0, !dbg !8016
  %arrayidx447 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec446, i64 0, i64 0, !dbg !8015
  %arraydecay448 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx447, i64 0, i64 0, !dbg !8015
  call void @sub_v3_v3v3(float* %arraydecay442, float* %arraydecay445, float* %arraydecay448), !dbg !8017
  %330 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8018
  %dir449 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %330, i32 0, i32 7, !dbg !8019
  %arraydecay450 = getelementptr inbounds [3 x float], [3 x float]* %dir449, i64 0, i64 0, !dbg !8018
  %call451 = call float @normalize_v3(float* %arraydecay450), !dbg !8020
  %331 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8021
  %nr452 = getelementptr inbounds %struct.BevList, %struct.BevList* %331, i32 0, i32 2, !dbg !8022
  %332 = load i32, i32* %nr452, align 8, !dbg !8023
  %inc453 = add nsw i32 %332, 1, !dbg !8023
  store i32 %inc453, i32* %nr452, align 8, !dbg !8023
  br label %if.end454, !dbg !8024

if.end454:                                        ; preds = %if.then429, %while.end423
  br label %if.end575, !dbg !8025

if.else455:                                       ; preds = %if.else162
  %333 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8026
  %type456 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %333, i32 0, i32 2, !dbg !8028
  %334 = load i16, i16* %type456, align 8, !dbg !8028
  %conv457 = sext i16 %334 to i32, !dbg !8026
  %cmp458 = icmp eq i32 %conv457, 4, !dbg !8029
  br i1 %cmp458, label %if.then460, label %if.end574, !dbg !8030

if.then460:                                       ; preds = %if.else455
  %335 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8031
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %335, i32 0, i32 7, !dbg !8034
  %336 = load i32, i32* %pntsv, align 4, !dbg !8034
  %cmp461 = icmp eq i32 %336, 1, !dbg !8035
  br i1 %cmp461, label %if.then463, label %if.end573, !dbg !8036

if.then463:                                       ; preds = %if.then460
  %337 = load i32, i32* %resolu, align 4, !dbg !8037
  %338 = load i32, i32* %segcount, align 4, !dbg !8039
  %mul464 = mul nsw i32 %337, %338, !dbg !8040
  store i32 %mul464, i32* %len, align 4, !dbg !8041
  %339 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8042
  %340 = load i32, i32* %len, align 4, !dbg !8043
  %conv465 = sext i32 %340 to i64, !dbg !8043
  %mul466 = mul i64 %conv465, 80, !dbg !8044
  %add467 = add i64 56, %mul466, !dbg !8045
  %call468 = call i8* %339(i64 %add467, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i64 0, i64 0)), !dbg !8042
  %341 = bitcast i8* %call468 to %struct.BevList*, !dbg !8042
  store %struct.BevList* %341, %struct.BevList** %bl, align 8, !dbg !8046
  %342 = load i8, i8* %need_seglen, align 1, !dbg !8047
  %conv469 = zext i8 %342 to i32, !dbg !8047
  %tobool470 = icmp ne i32 %conv469, 0, !dbg !8047
  br i1 %tobool470, label %land.lhs.true471, label %if.end486, !dbg !8049

land.lhs.true471:                                 ; preds = %if.then463
  %343 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8050
  %flagu472 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %343, i32 0, i32 13, !dbg !8051
  %344 = load i16, i16* %flagu472, align 4, !dbg !8051
  %conv473 = sext i16 %344 to i32, !dbg !8050
  %and474 = and i32 %conv473, 1, !dbg !8052
  %cmp475 = icmp eq i32 %and474, 0, !dbg !8053
  br i1 %cmp475, label %if.then477, label %if.end486, !dbg !8054

if.then477:                                       ; preds = %land.lhs.true471
  %345 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8055
  %346 = load i32, i32* %segcount, align 4, !dbg !8057
  %conv478 = sext i32 %346 to i64, !dbg !8057
  %mul479 = mul i64 %conv478, 4, !dbg !8058
  %call480 = call i8* %345(i64 %mul479, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.35, i64 0, i64 0)), !dbg !8055
  %347 = bitcast i8* %call480 to float*, !dbg !8055
  %348 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8059
  %seglen481 = getelementptr inbounds %struct.BevList, %struct.BevList* %348, i32 0, i32 8, !dbg !8060
  store float* %347, float** %seglen481, align 8, !dbg !8061
  %349 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8062
  %350 = load i32, i32* %segcount, align 4, !dbg !8063
  %conv482 = sext i32 %350 to i64, !dbg !8063
  %mul483 = mul i64 %conv482, 4, !dbg !8064
  %call484 = call i8* %349(i64 %mul483, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i64 0, i64 0)), !dbg !8062
  %351 = bitcast i8* %call484 to i32*, !dbg !8062
  %352 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8065
  %segbevcount485 = getelementptr inbounds %struct.BevList, %struct.BevList* %352, i32 0, i32 7, !dbg !8066
  store i32* %351, i32** %segbevcount485, align 8, !dbg !8067
  br label %if.end486, !dbg !8068

if.end486:                                        ; preds = %if.then477, %land.lhs.true471, %if.then463
  %353 = load %struct.ListBase*, %struct.ListBase** %bev, align 8, !dbg !8069
  %354 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8070
  %355 = bitcast %struct.BevList* %354 to i8*, !dbg !8070
  call void @BLI_addtail(%struct.ListBase* %353, i8* %355), !dbg !8071
  %356 = load i32, i32* %len, align 4, !dbg !8072
  %357 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8073
  %nr487 = getelementptr inbounds %struct.BevList, %struct.BevList* %357, i32 0, i32 2, !dbg !8074
  store i32 %356, i32* %nr487, align 8, !dbg !8075
  %358 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8076
  %dupe_nr488 = getelementptr inbounds %struct.BevList, %struct.BevList* %358, i32 0, i32 3, !dbg !8077
  store i32 0, i32* %dupe_nr488, align 4, !dbg !8078
  %359 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8079
  %flagu489 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %359, i32 0, i32 13, !dbg !8080
  %360 = load i16, i16* %flagu489, align 4, !dbg !8080
  %conv490 = sext i16 %360 to i32, !dbg !8079
  %and491 = and i32 %conv490, 1, !dbg !8081
  %tobool492 = icmp ne i32 %and491, 0, !dbg !8082
  %361 = zext i1 %tobool492 to i64, !dbg !8082
  %cond493 = select i1 %tobool492, i32 0, i32 -1, !dbg !8082
  %362 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8083
  %poly494 = getelementptr inbounds %struct.BevList, %struct.BevList* %362, i32 0, i32 4, !dbg !8084
  store i32 %cond493, i32* %poly494, align 8, !dbg !8085
  %363 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8086
  %charidx495 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %363, i32 0, i32 21, !dbg !8087
  %364 = load i32, i32* %charidx495, align 4, !dbg !8087
  %365 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8088
  %charidx496 = getelementptr inbounds %struct.BevList, %struct.BevList* %365, i32 0, i32 6, !dbg !8089
  store i32 %364, i32* %charidx496, align 8, !dbg !8090
  %366 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8091
  %bevpoints497 = getelementptr inbounds %struct.BevList, %struct.BevList* %366, i32 0, i32 9, !dbg !8092
  %arraydecay498 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints497, i64 0, i64 0, !dbg !8091
  store %struct.BevPoint* %arraydecay498, %struct.BevPoint** %bevp, align 8, !dbg !8093
  %367 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8094
  %seglen499 = getelementptr inbounds %struct.BevList, %struct.BevList* %367, i32 0, i32 8, !dbg !8095
  %368 = load float*, float** %seglen499, align 8, !dbg !8095
  store float* %368, float** %seglen, align 8, !dbg !8096
  %369 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8097
  %segbevcount500 = getelementptr inbounds %struct.BevList, %struct.BevList* %369, i32 0, i32 7, !dbg !8098
  %370 = load i32*, i32** %segbevcount500, align 8, !dbg !8098
  store i32* %370, i32** %segbevcount, align 8, !dbg !8099
  %371 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8100
  %372 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8101
  %vec501 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %372, i32 0, i32 0, !dbg !8102
  %arrayidx502 = getelementptr inbounds [3 x float], [3 x float]* %vec501, i64 0, i64 0, !dbg !8101
  %373 = load i8, i8* %do_tilt, align 1, !dbg !8103
  %conv503 = zext i8 %373 to i32, !dbg !8103
  %tobool504 = icmp ne i32 %conv503, 0, !dbg !8103
  br i1 %tobool504, label %cond.true505, label %cond.false507, !dbg !8103

cond.true505:                                     ; preds = %if.end486
  %374 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8104
  %alfa506 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %374, i32 0, i32 1, !dbg !8105
  br label %cond.end508, !dbg !8103

cond.false507:                                    ; preds = %if.end486
  br label %cond.end508, !dbg !8103

cond.end508:                                      ; preds = %cond.false507, %cond.true505
  %cond509 = phi float* [ %alfa506, %cond.true505 ], [ null, %cond.false507 ], !dbg !8103
  %375 = load i8, i8* %do_radius, align 1, !dbg !8106
  %conv510 = zext i8 %375 to i32, !dbg !8106
  %tobool511 = icmp ne i32 %conv510, 0, !dbg !8106
  br i1 %tobool511, label %cond.true512, label %cond.false514, !dbg !8106

cond.true512:                                     ; preds = %cond.end508
  %376 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8107
  %radius513 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %376, i32 0, i32 2, !dbg !8108
  br label %cond.end515, !dbg !8106

cond.false514:                                    ; preds = %cond.end508
  br label %cond.end515, !dbg !8106

cond.end515:                                      ; preds = %cond.false514, %cond.true512
  %cond516 = phi float* [ %radius513, %cond.true512 ], [ null, %cond.false514 ], !dbg !8106
  %377 = load i8, i8* %do_weight, align 1, !dbg !8109
  %conv517 = zext i8 %377 to i32, !dbg !8109
  %tobool518 = icmp ne i32 %conv517, 0, !dbg !8109
  br i1 %tobool518, label %cond.true519, label %cond.false521, !dbg !8109

cond.true519:                                     ; preds = %cond.end515
  %378 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8110
  %weight520 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %378, i32 0, i32 3, !dbg !8111
  br label %cond.end522, !dbg !8109

cond.false521:                                    ; preds = %cond.end515
  br label %cond.end522, !dbg !8109

cond.end522:                                      ; preds = %cond.false521, %cond.true519
  %cond523 = phi float* [ %weight520, %cond.true519 ], [ null, %cond.false521 ], !dbg !8109
  %379 = load i32, i32* %resolu, align 4, !dbg !8112
  call void @BKE_nurb_makeCurve(%struct.Nurb* %371, float* %arrayidx502, float* %cond509, float* %cond516, float* %cond523, i32 %379, i32 80), !dbg !8113
  %380 = load float*, float** %seglen, align 8, !dbg !8114
  %cmp524 = icmp ne float* %380, null, !dbg !8116
  br i1 %cmp524, label %if.then526, label %if.end565, !dbg !8117

if.then526:                                       ; preds = %cond.end522
  %381 = load i32, i32* %segcount, align 4, !dbg !8118
  store i32 %381, i32* %nr, align 4, !dbg !8120
  %382 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8121
  store %struct.BevPoint* %382, %struct.BevPoint** %bevp0, align 8, !dbg !8122
  %383 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8123
  %incdec.ptr527 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %383, i32 1, !dbg !8123
  store %struct.BevPoint* %incdec.ptr527, %struct.BevPoint** %bevp, align 8, !dbg !8123
  br label %while.cond528, !dbg !8124

while.cond528:                                    ; preds = %for.end560, %if.then526
  %384 = load i32, i32* %nr, align 4, !dbg !8125
  %tobool529 = icmp ne i32 %384, 0, !dbg !8124
  br i1 %tobool529, label %while.body530, label %while.end564, !dbg !8124

while.body530:                                    ; preds = %while.cond528
  call void @llvm.dbg.declare(metadata i32* %j531, metadata !8126, metadata !DIExpression()), !dbg !8128
  %385 = load float*, float** %seglen, align 8, !dbg !8129
  store float 0.000000e+00, float* %385, align 4, !dbg !8130
  %386 = load i32*, i32** %segbevcount, align 8, !dbg !8131
  store i32 0, i32* %386, align 4, !dbg !8132
  store i32 0, i32* %j531, align 4, !dbg !8133
  br label %for.cond532, !dbg !8135

for.cond532:                                      ; preds = %for.inc558, %while.body530
  %387 = load i32, i32* %j531, align 4, !dbg !8136
  %388 = load i32, i32* %nr, align 4, !dbg !8138
  %cmp533 = icmp eq i32 %388, 1, !dbg !8139
  br i1 %cmp533, label %cond.true535, label %cond.false537, !dbg !8140

cond.true535:                                     ; preds = %for.cond532
  %389 = load i32, i32* %resolu, align 4, !dbg !8141
  %sub536 = sub nsw i32 %389, 1, !dbg !8142
  br label %cond.end538, !dbg !8140

cond.false537:                                    ; preds = %for.cond532
  %390 = load i32, i32* %resolu, align 4, !dbg !8143
  br label %cond.end538, !dbg !8140

cond.end538:                                      ; preds = %cond.false537, %cond.true535
  %cond539 = phi i32 [ %sub536, %cond.true535 ], [ %390, %cond.false537 ], !dbg !8140
  %cmp540 = icmp slt i32 %387, %cond539, !dbg !8144
  br i1 %cmp540, label %for.body542, label %for.end560, !dbg !8145

for.body542:                                      ; preds = %cond.end538
  %391 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !8146
  %vec543 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %391, i32 0, i32 0, !dbg !8148
  %arraydecay544 = getelementptr inbounds [3 x float], [3 x float]* %vec543, i64 0, i64 0, !dbg !8146
  %392 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8149
  %vec545 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %392, i32 0, i32 0, !dbg !8150
  %arraydecay546 = getelementptr inbounds [3 x float], [3 x float]* %vec545, i64 0, i64 0, !dbg !8149
  %call547 = call float @len_v3v3(float* %arraydecay544, float* %arraydecay546), !dbg !8151
  %393 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8152
  %offset548 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %393, i32 0, i32 4, !dbg !8153
  store float %call547, float* %offset548, align 4, !dbg !8154
  %394 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8155
  %offset549 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %394, i32 0, i32 4, !dbg !8157
  %395 = load float, float* %offset549, align 4, !dbg !8157
  %cmp550 = fcmp ogt float %395, 0x3EE4F8B580000000, !dbg !8158
  br i1 %cmp550, label %if.then552, label %if.end556, !dbg !8159

if.then552:                                       ; preds = %for.body542
  %396 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8160
  %offset553 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %396, i32 0, i32 4, !dbg !8162
  %397 = load float, float* %offset553, align 4, !dbg !8162
  %398 = load float*, float** %seglen, align 8, !dbg !8163
  %399 = load float, float* %398, align 4, !dbg !8164
  %add554 = fadd float %399, %397, !dbg !8164
  store float %add554, float* %398, align 4, !dbg !8164
  %400 = load i32*, i32** %segbevcount, align 8, !dbg !8165
  %401 = load i32, i32* %400, align 4, !dbg !8166
  %add555 = add nsw i32 %401, 1, !dbg !8166
  store i32 %add555, i32* %400, align 4, !dbg !8166
  br label %if.end556, !dbg !8167

if.end556:                                        ; preds = %if.then552, %for.body542
  %402 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8168
  store %struct.BevPoint* %402, %struct.BevPoint** %bevp0, align 8, !dbg !8169
  %403 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8170
  %incdec.ptr557 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %403, i32 1, !dbg !8170
  store %struct.BevPoint* %incdec.ptr557, %struct.BevPoint** %bevp, align 8, !dbg !8170
  br label %for.inc558, !dbg !8171

for.inc558:                                       ; preds = %if.end556
  %404 = load i32, i32* %j531, align 4, !dbg !8172
  %inc559 = add nsw i32 %404, 1, !dbg !8172
  store i32 %inc559, i32* %j531, align 4, !dbg !8172
  br label %for.cond532, !dbg !8173, !llvm.loop !8174

for.end560:                                       ; preds = %cond.end538
  %405 = load float*, float** %seglen, align 8, !dbg !8176
  %incdec.ptr561 = getelementptr inbounds float, float* %405, i32 1, !dbg !8176
  store float* %incdec.ptr561, float** %seglen, align 8, !dbg !8176
  %406 = load i32*, i32** %segbevcount, align 8, !dbg !8177
  %incdec.ptr562 = getelementptr inbounds i32, i32* %406, i32 1, !dbg !8177
  store i32* %incdec.ptr562, i32** %segbevcount, align 8, !dbg !8177
  %407 = load i32, i32* %nr, align 4, !dbg !8178
  %dec563 = add nsw i32 %407, -1, !dbg !8178
  store i32 %dec563, i32* %nr, align 4, !dbg !8178
  br label %while.cond528, !dbg !8124, !llvm.loop !8179

while.end564:                                     ; preds = %while.cond528
  br label %if.end565, !dbg !8181

if.end565:                                        ; preds = %while.end564, %cond.end522
  %408 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8182
  %flagu566 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %408, i32 0, i32 13, !dbg !8184
  %409 = load i16, i16* %flagu566, align 4, !dbg !8184
  %conv567 = sext i16 %409 to i32, !dbg !8182
  %and568 = and i32 %conv567, 1, !dbg !8185
  %cmp569 = icmp eq i32 %and568, 0, !dbg !8186
  br i1 %cmp569, label %if.then571, label %if.end572, !dbg !8187

if.then571:                                       ; preds = %if.end565
  %410 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8188
  %411 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8190
  call void @bevlist_firstlast_direction_calc_from_bpoint(%struct.Nurb* %410, %struct.BevList* %411), !dbg !8191
  br label %if.end572, !dbg !8192

if.end572:                                        ; preds = %if.then571, %if.end565
  br label %if.end573, !dbg !8193

if.end573:                                        ; preds = %if.end572, %if.then460
  br label %if.end574, !dbg !8194

if.end574:                                        ; preds = %if.end573, %if.else455
  br label %if.end575

if.end575:                                        ; preds = %if.end574, %if.end454
  br label %if.end576

if.end576:                                        ; preds = %if.end575, %if.end161
  br label %if.end577

if.end577:                                        ; preds = %if.end576, %if.then63
  br label %for.inc578, !dbg !8195

for.inc578:                                       ; preds = %if.end577, %if.then28
  %412 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !8196
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %412, i32 0, i32 0, !dbg !8197
  %413 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !8197
  store %struct.Nurb* %413, %struct.Nurb** %nu, align 8, !dbg !8198
  br label %for.cond, !dbg !8199, !llvm.loop !8200

for.end579:                                       ; preds = %for.cond
  %414 = load %struct.ListBase*, %struct.ListBase** %bev, align 8, !dbg !8202
  %first580 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %414, i32 0, i32 0, !dbg !8203
  %415 = load i8*, i8** %first580, align 8, !dbg !8203
  %416 = bitcast i8* %415 to %struct.BevList*, !dbg !8202
  store %struct.BevList* %416, %struct.BevList** %bl, align 8, !dbg !8204
  br label %while.cond581, !dbg !8205

while.cond581:                                    ; preds = %if.end655, %for.end579
  %417 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8206
  %tobool582 = icmp ne %struct.BevList* %417, null, !dbg !8205
  br i1 %tobool582, label %while.body583, label %while.end657, !dbg !8205

while.body583:                                    ; preds = %while.cond581
  %418 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8207
  %nr584 = getelementptr inbounds %struct.BevList, %struct.BevList* %418, i32 0, i32 2, !dbg !8210
  %419 = load i32, i32* %nr584, align 8, !dbg !8210
  %tobool585 = icmp ne i32 %419, 0, !dbg !8207
  br i1 %tobool585, label %if.then586, label %if.end655, !dbg !8211

if.then586:                                       ; preds = %while.body583
  call void @llvm.dbg.declare(metadata i8* %is_cyclic, metadata !8212, metadata !DIExpression()), !dbg !8214
  %420 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8215
  %poly587 = getelementptr inbounds %struct.BevList, %struct.BevList* %420, i32 0, i32 4, !dbg !8216
  %421 = load i32, i32* %poly587, align 8, !dbg !8216
  %cmp588 = icmp ne i32 %421, -1, !dbg !8217
  %conv589 = zext i1 %cmp588 to i32, !dbg !8217
  %conv590 = trunc i32 %conv589 to i8, !dbg !8215
  store i8 %conv590, i8* %is_cyclic, align 1, !dbg !8214
  %422 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8218
  %nr591 = getelementptr inbounds %struct.BevList, %struct.BevList* %422, i32 0, i32 2, !dbg !8219
  %423 = load i32, i32* %nr591, align 8, !dbg !8219
  store i32 %423, i32* %nr, align 4, !dbg !8220
  %424 = load i8, i8* %is_cyclic, align 1, !dbg !8221
  %tobool592 = icmp ne i8 %424, 0, !dbg !8221
  br i1 %tobool592, label %if.then593, label %if.else599, !dbg !8223

if.then593:                                       ; preds = %if.then586
  %425 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8224
  %bevpoints594 = getelementptr inbounds %struct.BevList, %struct.BevList* %425, i32 0, i32 9, !dbg !8226
  %arraydecay595 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints594, i64 0, i64 0, !dbg !8224
  store %struct.BevPoint* %arraydecay595, %struct.BevPoint** %bevp1, align 8, !dbg !8227
  %426 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !8228
  %427 = load i32, i32* %nr, align 4, !dbg !8229
  %sub596 = sub nsw i32 %427, 1, !dbg !8230
  %idx.ext597 = sext i32 %sub596 to i64, !dbg !8231
  %add.ptr598 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %426, i64 %idx.ext597, !dbg !8231
  store %struct.BevPoint* %add.ptr598, %struct.BevPoint** %bevp0, align 8, !dbg !8232
  br label %if.end604, !dbg !8233

if.else599:                                       ; preds = %if.then586
  %428 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8234
  %bevpoints600 = getelementptr inbounds %struct.BevList, %struct.BevList* %428, i32 0, i32 9, !dbg !8236
  %arraydecay601 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints600, i64 0, i64 0, !dbg !8234
  store %struct.BevPoint* %arraydecay601, %struct.BevPoint** %bevp0, align 8, !dbg !8237
  %429 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !8238
  %offset602 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %429, i32 0, i32 4, !dbg !8239
  store float 0.000000e+00, float* %offset602, align 4, !dbg !8240
  %430 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !8241
  %add.ptr603 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %430, i64 1, !dbg !8242
  store %struct.BevPoint* %add.ptr603, %struct.BevPoint** %bevp1, align 8, !dbg !8243
  br label %if.end604

if.end604:                                        ; preds = %if.else599, %if.then593
  %431 = load i32, i32* %nr, align 4, !dbg !8244
  %dec605 = add nsw i32 %431, -1, !dbg !8244
  store i32 %dec605, i32* %nr, align 4, !dbg !8244
  br label %while.cond606, !dbg !8245

while.cond606:                                    ; preds = %if.end652, %if.end604
  %432 = load i32, i32* %nr, align 4, !dbg !8246
  %dec607 = add nsw i32 %432, -1, !dbg !8246
  store i32 %dec607, i32* %nr, align 4, !dbg !8246
  %tobool608 = icmp ne i32 %432, 0, !dbg !8245
  br i1 %tobool608, label %while.body609, label %while.end654, !dbg !8245

while.body609:                                    ; preds = %while.cond606
  %433 = load float*, float** %seglen, align 8, !dbg !8247
  %cmp610 = icmp ne float* %433, null, !dbg !8250
  br i1 %cmp610, label %if.then612, label %if.else621, !dbg !8251

if.then612:                                       ; preds = %while.body609
  %434 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !8252
  %offset613 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %434, i32 0, i32 4, !dbg !8255
  %435 = load float, float* %offset613, align 4, !dbg !8255
  %436 = call float @llvm.fabs.f32(float %435), !dbg !8256
  %cmp614 = fcmp olt float %436, 0x3EE4F8B580000000, !dbg !8257
  br i1 %cmp614, label %if.then616, label %if.end620, !dbg !8258

if.then616:                                       ; preds = %if.then612
  %437 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !8259
  %dupe_tag617 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %437, i32 0, i32 11, !dbg !8261
  store i16 1, i16* %dupe_tag617, align 2, !dbg !8262
  %438 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8263
  %dupe_nr618 = getelementptr inbounds %struct.BevList, %struct.BevList* %438, i32 0, i32 3, !dbg !8264
  %439 = load i32, i32* %dupe_nr618, align 4, !dbg !8265
  %inc619 = add nsw i32 %439, 1, !dbg !8265
  store i32 %inc619, i32* %dupe_nr618, align 4, !dbg !8265
  br label %if.end620, !dbg !8266

if.end620:                                        ; preds = %if.then616, %if.then612
  br label %if.end652, !dbg !8267

if.else621:                                       ; preds = %while.body609
  %440 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !8268
  %vec622 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %440, i32 0, i32 0, !dbg !8271
  %arrayidx623 = getelementptr inbounds [3 x float], [3 x float]* %vec622, i64 0, i64 0, !dbg !8268
  %441 = load float, float* %arrayidx623, align 4, !dbg !8268
  %442 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !8272
  %vec624 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %442, i32 0, i32 0, !dbg !8273
  %arrayidx625 = getelementptr inbounds [3 x float], [3 x float]* %vec624, i64 0, i64 0, !dbg !8272
  %443 = load float, float* %arrayidx625, align 4, !dbg !8272
  %sub626 = fsub float %441, %443, !dbg !8274
  %444 = call float @llvm.fabs.f32(float %sub626), !dbg !8275
  %cmp627 = fcmp olt float %444, 0x3EE4F8B580000000, !dbg !8276
  br i1 %cmp627, label %if.then629, label %if.end651, !dbg !8277

if.then629:                                       ; preds = %if.else621
  %445 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !8278
  %vec630 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %445, i32 0, i32 0, !dbg !8281
  %arrayidx631 = getelementptr inbounds [3 x float], [3 x float]* %vec630, i64 0, i64 1, !dbg !8278
  %446 = load float, float* %arrayidx631, align 4, !dbg !8278
  %447 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !8282
  %vec632 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %447, i32 0, i32 0, !dbg !8283
  %arrayidx633 = getelementptr inbounds [3 x float], [3 x float]* %vec632, i64 0, i64 1, !dbg !8282
  %448 = load float, float* %arrayidx633, align 4, !dbg !8282
  %sub634 = fsub float %446, %448, !dbg !8284
  %449 = call float @llvm.fabs.f32(float %sub634), !dbg !8285
  %cmp635 = fcmp olt float %449, 0x3EE4F8B580000000, !dbg !8286
  br i1 %cmp635, label %if.then637, label %if.end650, !dbg !8287

if.then637:                                       ; preds = %if.then629
  %450 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !8288
  %vec638 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %450, i32 0, i32 0, !dbg !8291
  %arrayidx639 = getelementptr inbounds [3 x float], [3 x float]* %vec638, i64 0, i64 2, !dbg !8288
  %451 = load float, float* %arrayidx639, align 4, !dbg !8288
  %452 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !8292
  %vec640 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %452, i32 0, i32 0, !dbg !8293
  %arrayidx641 = getelementptr inbounds [3 x float], [3 x float]* %vec640, i64 0, i64 2, !dbg !8292
  %453 = load float, float* %arrayidx641, align 4, !dbg !8292
  %sub642 = fsub float %451, %453, !dbg !8294
  %454 = call float @llvm.fabs.f32(float %sub642), !dbg !8295
  %cmp643 = fcmp olt float %454, 0x3EE4F8B580000000, !dbg !8296
  br i1 %cmp643, label %if.then645, label %if.end649, !dbg !8297

if.then645:                                       ; preds = %if.then637
  %455 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !8298
  %dupe_tag646 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %455, i32 0, i32 11, !dbg !8300
  store i16 1, i16* %dupe_tag646, align 2, !dbg !8301
  %456 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8302
  %dupe_nr647 = getelementptr inbounds %struct.BevList, %struct.BevList* %456, i32 0, i32 3, !dbg !8303
  %457 = load i32, i32* %dupe_nr647, align 4, !dbg !8304
  %inc648 = add nsw i32 %457, 1, !dbg !8304
  store i32 %inc648, i32* %dupe_nr647, align 4, !dbg !8304
  br label %if.end649, !dbg !8305

if.end649:                                        ; preds = %if.then645, %if.then637
  br label %if.end650, !dbg !8306

if.end650:                                        ; preds = %if.end649, %if.then629
  br label %if.end651, !dbg !8307

if.end651:                                        ; preds = %if.end650, %if.else621
  br label %if.end652

if.end652:                                        ; preds = %if.end651, %if.end620
  %458 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !8308
  store %struct.BevPoint* %458, %struct.BevPoint** %bevp0, align 8, !dbg !8309
  %459 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !8310
  %incdec.ptr653 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %459, i32 1, !dbg !8310
  store %struct.BevPoint* %incdec.ptr653, %struct.BevPoint** %bevp1, align 8, !dbg !8310
  br label %while.cond606, !dbg !8245, !llvm.loop !8311

while.end654:                                     ; preds = %while.cond606
  br label %if.end655, !dbg !8313

if.end655:                                        ; preds = %while.end654, %while.body583
  %460 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8314
  %next656 = getelementptr inbounds %struct.BevList, %struct.BevList* %460, i32 0, i32 0, !dbg !8315
  %461 = load %struct.BevList*, %struct.BevList** %next656, align 8, !dbg !8315
  store %struct.BevList* %461, %struct.BevList** %bl, align 8, !dbg !8316
  br label %while.cond581, !dbg !8205, !llvm.loop !8317

while.end657:                                     ; preds = %while.cond581
  %462 = load %struct.ListBase*, %struct.ListBase** %bev, align 8, !dbg !8319
  %first658 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %462, i32 0, i32 0, !dbg !8320
  %463 = load i8*, i8** %first658, align 8, !dbg !8320
  %464 = bitcast i8* %463 to %struct.BevList*, !dbg !8319
  store %struct.BevList* %464, %struct.BevList** %bl, align 8, !dbg !8321
  br label %while.cond659, !dbg !8322

while.cond659:                                    ; preds = %if.end703, %while.end657
  %465 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8323
  %tobool660 = icmp ne %struct.BevList* %465, null, !dbg !8322
  br i1 %tobool660, label %while.body661, label %while.end704, !dbg !8322

while.body661:                                    ; preds = %while.cond659
  %466 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8324
  %next662 = getelementptr inbounds %struct.BevList, %struct.BevList* %466, i32 0, i32 0, !dbg !8326
  %467 = load %struct.BevList*, %struct.BevList** %next662, align 8, !dbg !8326
  store %struct.BevList* %467, %struct.BevList** %blnext, align 8, !dbg !8327
  %468 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8328
  %nr663 = getelementptr inbounds %struct.BevList, %struct.BevList* %468, i32 0, i32 2, !dbg !8330
  %469 = load i32, i32* %nr663, align 8, !dbg !8330
  %tobool664 = icmp ne i32 %469, 0, !dbg !8328
  br i1 %tobool664, label %land.lhs.true665, label %if.end703, !dbg !8331

land.lhs.true665:                                 ; preds = %while.body661
  %470 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8332
  %dupe_nr666 = getelementptr inbounds %struct.BevList, %struct.BevList* %470, i32 0, i32 3, !dbg !8333
  %471 = load i32, i32* %dupe_nr666, align 4, !dbg !8333
  %tobool667 = icmp ne i32 %471, 0, !dbg !8332
  br i1 %tobool667, label %if.then668, label %if.end703, !dbg !8334

if.then668:                                       ; preds = %land.lhs.true665
  %472 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8335
  %nr669 = getelementptr inbounds %struct.BevList, %struct.BevList* %472, i32 0, i32 2, !dbg !8337
  %473 = load i32, i32* %nr669, align 8, !dbg !8337
  %474 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8338
  %dupe_nr670 = getelementptr inbounds %struct.BevList, %struct.BevList* %474, i32 0, i32 3, !dbg !8339
  %475 = load i32, i32* %dupe_nr670, align 4, !dbg !8339
  %sub671 = sub nsw i32 %473, %475, !dbg !8340
  %add672 = add nsw i32 %sub671, 1, !dbg !8341
  store i32 %add672, i32* %nr, align 4, !dbg !8342
  %476 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8343
  %477 = load i32, i32* %nr, align 4, !dbg !8344
  %conv673 = sext i32 %477 to i64, !dbg !8344
  %mul674 = mul i64 %conv673, 80, !dbg !8345
  %add675 = add i64 56, %mul674, !dbg !8346
  %call676 = call i8* %476(i64 %add675, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i64 0, i64 0)), !dbg !8343
  %478 = bitcast i8* %call676 to %struct.BevList*, !dbg !8343
  store %struct.BevList* %478, %struct.BevList** %blnew, align 8, !dbg !8347
  %479 = load %struct.BevList*, %struct.BevList** %blnew, align 8, !dbg !8348
  %480 = bitcast %struct.BevList* %479 to i8*, !dbg !8349
  %481 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8350
  %482 = bitcast %struct.BevList* %481 to i8*, !dbg !8349
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %480, i8* align 8 %482, i64 56, i1 false), !dbg !8349
  %483 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8351
  %segbevcount677 = getelementptr inbounds %struct.BevList, %struct.BevList* %483, i32 0, i32 7, !dbg !8352
  %484 = load i32*, i32** %segbevcount677, align 8, !dbg !8352
  %485 = load %struct.BevList*, %struct.BevList** %blnew, align 8, !dbg !8353
  %segbevcount678 = getelementptr inbounds %struct.BevList, %struct.BevList* %485, i32 0, i32 7, !dbg !8354
  store i32* %484, i32** %segbevcount678, align 8, !dbg !8355
  %486 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8356
  %seglen679 = getelementptr inbounds %struct.BevList, %struct.BevList* %486, i32 0, i32 8, !dbg !8357
  %487 = load float*, float** %seglen679, align 8, !dbg !8357
  %488 = load %struct.BevList*, %struct.BevList** %blnew, align 8, !dbg !8358
  %seglen680 = getelementptr inbounds %struct.BevList, %struct.BevList* %488, i32 0, i32 8, !dbg !8359
  store float* %487, float** %seglen680, align 8, !dbg !8360
  %489 = load %struct.BevList*, %struct.BevList** %blnew, align 8, !dbg !8361
  %nr681 = getelementptr inbounds %struct.BevList, %struct.BevList* %489, i32 0, i32 2, !dbg !8362
  store i32 0, i32* %nr681, align 8, !dbg !8363
  %490 = load %struct.ListBase*, %struct.ListBase** %bev, align 8, !dbg !8364
  %491 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8365
  %492 = bitcast %struct.BevList* %491 to i8*, !dbg !8365
  call void @BLI_remlink(%struct.ListBase* %490, i8* %492), !dbg !8366
  %493 = load %struct.ListBase*, %struct.ListBase** %bev, align 8, !dbg !8367
  %494 = load %struct.BevList*, %struct.BevList** %blnext, align 8, !dbg !8368
  %495 = bitcast %struct.BevList* %494 to i8*, !dbg !8368
  %496 = load %struct.BevList*, %struct.BevList** %blnew, align 8, !dbg !8369
  %497 = bitcast %struct.BevList* %496 to i8*, !dbg !8369
  call void @BLI_insertlinkbefore(%struct.ListBase* %493, i8* %495, i8* %497), !dbg !8370
  %498 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8371
  %bevpoints682 = getelementptr inbounds %struct.BevList, %struct.BevList* %498, i32 0, i32 9, !dbg !8372
  %arraydecay683 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints682, i64 0, i64 0, !dbg !8371
  store %struct.BevPoint* %arraydecay683, %struct.BevPoint** %bevp0, align 8, !dbg !8373
  %499 = load %struct.BevList*, %struct.BevList** %blnew, align 8, !dbg !8374
  %bevpoints684 = getelementptr inbounds %struct.BevList, %struct.BevList* %499, i32 0, i32 9, !dbg !8375
  %arraydecay685 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints684, i64 0, i64 0, !dbg !8374
  store %struct.BevPoint* %arraydecay685, %struct.BevPoint** %bevp1, align 8, !dbg !8376
  %500 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8377
  %nr686 = getelementptr inbounds %struct.BevList, %struct.BevList* %500, i32 0, i32 2, !dbg !8378
  %501 = load i32, i32* %nr686, align 8, !dbg !8378
  store i32 %501, i32* %nr, align 4, !dbg !8379
  br label %while.cond687, !dbg !8380

while.cond687:                                    ; preds = %if.end699, %if.then668
  %502 = load i32, i32* %nr, align 4, !dbg !8381
  %dec688 = add nsw i32 %502, -1, !dbg !8381
  store i32 %dec688, i32* %nr, align 4, !dbg !8381
  %tobool689 = icmp ne i32 %502, 0, !dbg !8380
  br i1 %tobool689, label %while.body690, label %while.end701, !dbg !8380

while.body690:                                    ; preds = %while.cond687
  %503 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !8382
  %dupe_tag691 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %503, i32 0, i32 11, !dbg !8385
  %504 = load i16, i16* %dupe_tag691, align 2, !dbg !8385
  %conv692 = sext i16 %504 to i32, !dbg !8382
  %cmp693 = icmp eq i32 %conv692, 0, !dbg !8386
  br i1 %cmp693, label %if.then695, label %if.end699, !dbg !8387

if.then695:                                       ; preds = %while.body690
  %505 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !8388
  %506 = bitcast %struct.BevPoint* %505 to i8*, !dbg !8390
  %507 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !8391
  %508 = bitcast %struct.BevPoint* %507 to i8*, !dbg !8390
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %506, i8* align 4 %508, i64 80, i1 false), !dbg !8390
  %509 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !8392
  %incdec.ptr696 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %509, i32 1, !dbg !8392
  store %struct.BevPoint* %incdec.ptr696, %struct.BevPoint** %bevp1, align 8, !dbg !8392
  %510 = load %struct.BevList*, %struct.BevList** %blnew, align 8, !dbg !8393
  %nr697 = getelementptr inbounds %struct.BevList, %struct.BevList* %510, i32 0, i32 2, !dbg !8394
  %511 = load i32, i32* %nr697, align 8, !dbg !8395
  %inc698 = add nsw i32 %511, 1, !dbg !8395
  store i32 %inc698, i32* %nr697, align 8, !dbg !8395
  br label %if.end699, !dbg !8396

if.end699:                                        ; preds = %if.then695, %while.body690
  %512 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !8397
  %incdec.ptr700 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %512, i32 1, !dbg !8397
  store %struct.BevPoint* %incdec.ptr700, %struct.BevPoint** %bevp0, align 8, !dbg !8397
  br label %while.cond687, !dbg !8380, !llvm.loop !8398

while.end701:                                     ; preds = %while.cond687
  %513 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8400
  %514 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8401
  %515 = bitcast %struct.BevList* %514 to i8*, !dbg !8401
  call void %513(i8* %515), !dbg !8400
  %516 = load %struct.BevList*, %struct.BevList** %blnew, align 8, !dbg !8402
  %dupe_nr702 = getelementptr inbounds %struct.BevList, %struct.BevList* %516, i32 0, i32 3, !dbg !8403
  store i32 0, i32* %dupe_nr702, align 4, !dbg !8404
  br label %if.end703, !dbg !8405

if.end703:                                        ; preds = %while.end701, %land.lhs.true665, %while.body661
  %517 = load %struct.BevList*, %struct.BevList** %blnext, align 8, !dbg !8406
  store %struct.BevList* %517, %struct.BevList** %bl, align 8, !dbg !8407
  br label %while.cond659, !dbg !8322, !llvm.loop !8408

while.end704:                                     ; preds = %while.cond659
  %518 = load %struct.ListBase*, %struct.ListBase** %bev, align 8, !dbg !8410
  %first705 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %518, i32 0, i32 0, !dbg !8411
  %519 = load i8*, i8** %first705, align 8, !dbg !8411
  %520 = bitcast i8* %519 to %struct.BevList*, !dbg !8410
  store %struct.BevList* %520, %struct.BevList** %bl, align 8, !dbg !8412
  store i32 0, i32* %poly, align 4, !dbg !8413
  br label %while.cond706, !dbg !8414

while.cond706:                                    ; preds = %if.end718, %while.end704
  %521 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8415
  %tobool707 = icmp ne %struct.BevList* %521, null, !dbg !8414
  br i1 %tobool707, label %while.body708, label %while.end720, !dbg !8414

while.body708:                                    ; preds = %while.cond706
  %522 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8416
  %nr709 = getelementptr inbounds %struct.BevList, %struct.BevList* %522, i32 0, i32 2, !dbg !8419
  %523 = load i32, i32* %nr709, align 8, !dbg !8419
  %tobool710 = icmp ne i32 %523, 0, !dbg !8416
  br i1 %tobool710, label %land.lhs.true711, label %if.end718, !dbg !8420

land.lhs.true711:                                 ; preds = %while.body708
  %524 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8421
  %poly712 = getelementptr inbounds %struct.BevList, %struct.BevList* %524, i32 0, i32 4, !dbg !8422
  %525 = load i32, i32* %poly712, align 8, !dbg !8422
  %cmp713 = icmp sge i32 %525, 0, !dbg !8423
  br i1 %cmp713, label %if.then715, label %if.end718, !dbg !8424

if.then715:                                       ; preds = %land.lhs.true711
  %526 = load i32, i32* %poly, align 4, !dbg !8425
  %inc716 = add nsw i32 %526, 1, !dbg !8425
  store i32 %inc716, i32* %poly, align 4, !dbg !8425
  %527 = load i32, i32* %poly, align 4, !dbg !8427
  %528 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8428
  %poly717 = getelementptr inbounds %struct.BevList, %struct.BevList* %528, i32 0, i32 4, !dbg !8429
  store i32 %527, i32* %poly717, align 8, !dbg !8430
  %529 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8431
  %hole = getelementptr inbounds %struct.BevList, %struct.BevList* %529, i32 0, i32 5, !dbg !8432
  store i32 0, i32* %hole, align 4, !dbg !8433
  br label %if.end718, !dbg !8434

if.end718:                                        ; preds = %if.then715, %land.lhs.true711, %while.body708
  %530 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8435
  %next719 = getelementptr inbounds %struct.BevList, %struct.BevList* %530, i32 0, i32 0, !dbg !8436
  %531 = load %struct.BevList*, %struct.BevList** %next719, align 8, !dbg !8436
  store %struct.BevList* %531, %struct.BevList** %bl, align 8, !dbg !8437
  br label %while.cond706, !dbg !8414, !llvm.loop !8438

while.end720:                                     ; preds = %while.cond706
  %532 = load i32, i32* %poly, align 4, !dbg !8440
  %cmp721 = icmp sgt i32 %532, 0, !dbg !8442
  br i1 %cmp721, label %if.then723, label %if.end886, !dbg !8443

if.then723:                                       ; preds = %while.end720
  %533 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8444
  %534 = load i32, i32* %poly, align 4, !dbg !8446
  %conv724 = sext i32 %534 to i64, !dbg !8446
  %mul725 = mul i64 16, %conv724, !dbg !8447
  %call726 = call i8* %533(i64 %mul725, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i64 0, i64 0)), !dbg !8444
  %535 = bitcast i8* %call726 to %struct.BevelSort*, !dbg !8444
  store %struct.BevelSort* %535, %struct.BevelSort** %sortdata, align 8, !dbg !8448
  store %struct.BevelSort* %535, %struct.BevelSort** %sd, align 8, !dbg !8449
  %536 = load %struct.ListBase*, %struct.ListBase** %bev, align 8, !dbg !8450
  %first727 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %536, i32 0, i32 0, !dbg !8451
  %537 = load i8*, i8** %first727, align 8, !dbg !8451
  %538 = bitcast i8* %537 to %struct.BevList*, !dbg !8450
  store %struct.BevList* %538, %struct.BevList** %bl, align 8, !dbg !8452
  br label %while.cond728, !dbg !8453

while.cond728:                                    ; preds = %if.end808, %if.then723
  %539 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8454
  %tobool729 = icmp ne %struct.BevList* %539, null, !dbg !8453
  br i1 %tobool729, label %while.body730, label %while.end810, !dbg !8453

while.body730:                                    ; preds = %while.cond728
  %540 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8455
  %poly731 = getelementptr inbounds %struct.BevList, %struct.BevList* %540, i32 0, i32 4, !dbg !8458
  %541 = load i32, i32* %poly731, align 8, !dbg !8458
  %cmp732 = icmp sgt i32 %541, 0, !dbg !8459
  br i1 %cmp732, label %if.then734, label %if.end808, !dbg !8460

if.then734:                                       ; preds = %while.body730
  store float 3.000000e+05, float* %min, align 4, !dbg !8461
  %542 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8463
  %bevpoints735 = getelementptr inbounds %struct.BevList, %struct.BevList* %542, i32 0, i32 9, !dbg !8464
  %arraydecay736 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints735, i64 0, i64 0, !dbg !8463
  store %struct.BevPoint* %arraydecay736, %struct.BevPoint** %bevp, align 8, !dbg !8465
  %543 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8466
  %nr737 = getelementptr inbounds %struct.BevList, %struct.BevList* %543, i32 0, i32 2, !dbg !8467
  %544 = load i32, i32* %nr737, align 8, !dbg !8467
  store i32 %544, i32* %nr, align 4, !dbg !8468
  br label %while.cond738, !dbg !8469

while.cond738:                                    ; preds = %if.end749, %if.then734
  %545 = load i32, i32* %nr, align 4, !dbg !8470
  %dec739 = add nsw i32 %545, -1, !dbg !8470
  store i32 %dec739, i32* %nr, align 4, !dbg !8470
  %tobool740 = icmp ne i32 %545, 0, !dbg !8469
  br i1 %tobool740, label %while.body741, label %while.end751, !dbg !8469

while.body741:                                    ; preds = %while.cond738
  %546 = load float, float* %min, align 4, !dbg !8471
  %547 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8474
  %vec742 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %547, i32 0, i32 0, !dbg !8475
  %arrayidx743 = getelementptr inbounds [3 x float], [3 x float]* %vec742, i64 0, i64 0, !dbg !8474
  %548 = load float, float* %arrayidx743, align 4, !dbg !8474
  %cmp744 = fcmp ogt float %546, %548, !dbg !8476
  br i1 %cmp744, label %if.then746, label %if.end749, !dbg !8477

if.then746:                                       ; preds = %while.body741
  %549 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8478
  %vec747 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %549, i32 0, i32 0, !dbg !8480
  %arrayidx748 = getelementptr inbounds [3 x float], [3 x float]* %vec747, i64 0, i64 0, !dbg !8478
  %550 = load float, float* %arrayidx748, align 4, !dbg !8478
  store float %550, float* %min, align 4, !dbg !8481
  %551 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8482
  store %struct.BevPoint* %551, %struct.BevPoint** %bevp1, align 8, !dbg !8483
  br label %if.end749, !dbg !8484

if.end749:                                        ; preds = %if.then746, %while.body741
  %552 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8485
  %incdec.ptr750 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %552, i32 1, !dbg !8485
  store %struct.BevPoint* %incdec.ptr750, %struct.BevPoint** %bevp, align 8, !dbg !8485
  br label %while.cond738, !dbg !8469, !llvm.loop !8486

while.end751:                                     ; preds = %while.cond738
  %553 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8488
  %554 = load %struct.BevelSort*, %struct.BevelSort** %sd, align 8, !dbg !8489
  %bl752 = getelementptr inbounds %struct.BevelSort, %struct.BevelSort* %554, i32 0, i32 0, !dbg !8490
  store %struct.BevList* %553, %struct.BevList** %bl752, align 8, !dbg !8491
  %555 = load float, float* %min, align 4, !dbg !8492
  %556 = load %struct.BevelSort*, %struct.BevelSort** %sd, align 8, !dbg !8493
  %left = getelementptr inbounds %struct.BevelSort, %struct.BevelSort* %556, i32 0, i32 1, !dbg !8494
  store float %555, float* %left, align 8, !dbg !8495
  %557 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8496
  %bevpoints753 = getelementptr inbounds %struct.BevList, %struct.BevList* %557, i32 0, i32 9, !dbg !8497
  %arraydecay754 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints753, i64 0, i64 0, !dbg !8496
  store %struct.BevPoint* %arraydecay754, %struct.BevPoint** %bevp, align 8, !dbg !8498
  %558 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !8499
  %559 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8501
  %cmp755 = icmp eq %struct.BevPoint* %558, %559, !dbg !8502
  br i1 %cmp755, label %if.then757, label %if.else762, !dbg !8503

if.then757:                                       ; preds = %while.end751
  %560 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8504
  %561 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8505
  %nr758 = getelementptr inbounds %struct.BevList, %struct.BevList* %561, i32 0, i32 2, !dbg !8506
  %562 = load i32, i32* %nr758, align 8, !dbg !8506
  %sub759 = sub nsw i32 %562, 1, !dbg !8507
  %idx.ext760 = sext i32 %sub759 to i64, !dbg !8508
  %add.ptr761 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %560, i64 %idx.ext760, !dbg !8508
  store %struct.BevPoint* %add.ptr761, %struct.BevPoint** %bevp0, align 8, !dbg !8509
  br label %if.end764, !dbg !8510

if.else762:                                       ; preds = %while.end751
  %563 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !8511
  %add.ptr763 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %563, i64 -1, !dbg !8512
  store %struct.BevPoint* %add.ptr763, %struct.BevPoint** %bevp0, align 8, !dbg !8513
  br label %if.end764

if.end764:                                        ; preds = %if.else762, %if.then757
  %564 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8514
  %565 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8515
  %nr765 = getelementptr inbounds %struct.BevList, %struct.BevList* %565, i32 0, i32 2, !dbg !8516
  %566 = load i32, i32* %nr765, align 8, !dbg !8516
  %sub766 = sub nsw i32 %566, 1, !dbg !8517
  %idx.ext767 = sext i32 %sub766 to i64, !dbg !8518
  %add.ptr768 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %564, i64 %idx.ext767, !dbg !8518
  store %struct.BevPoint* %add.ptr768, %struct.BevPoint** %bevp, align 8, !dbg !8519
  %567 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !8520
  %568 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !8522
  %cmp769 = icmp eq %struct.BevPoint* %567, %568, !dbg !8523
  br i1 %cmp769, label %if.then771, label %if.else774, !dbg !8524

if.then771:                                       ; preds = %if.end764
  %569 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8525
  %bevpoints772 = getelementptr inbounds %struct.BevList, %struct.BevList* %569, i32 0, i32 9, !dbg !8526
  %arraydecay773 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints772, i64 0, i64 0, !dbg !8525
  store %struct.BevPoint* %arraydecay773, %struct.BevPoint** %bevp2, align 8, !dbg !8527
  br label %if.end776, !dbg !8528

if.else774:                                       ; preds = %if.end764
  %570 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !8529
  %add.ptr775 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %570, i64 1, !dbg !8530
  store %struct.BevPoint* %add.ptr775, %struct.BevPoint** %bevp2, align 8, !dbg !8531
  br label %if.end776

if.end776:                                        ; preds = %if.else774, %if.then771
  %571 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !8532
  %vec777 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %571, i32 0, i32 0, !dbg !8533
  %arrayidx778 = getelementptr inbounds [3 x float], [3 x float]* %vec777, i64 0, i64 0, !dbg !8532
  %572 = load float, float* %arrayidx778, align 4, !dbg !8532
  %573 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !8534
  %vec779 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %573, i32 0, i32 0, !dbg !8535
  %arrayidx780 = getelementptr inbounds [3 x float], [3 x float]* %vec779, i64 0, i64 0, !dbg !8534
  %574 = load float, float* %arrayidx780, align 4, !dbg !8534
  %sub781 = fsub float %572, %574, !dbg !8536
  %575 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !8537
  %vec782 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %575, i32 0, i32 0, !dbg !8538
  %arrayidx783 = getelementptr inbounds [3 x float], [3 x float]* %vec782, i64 0, i64 1, !dbg !8537
  %576 = load float, float* %arrayidx783, align 4, !dbg !8537
  %577 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !8539
  %vec784 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %577, i32 0, i32 0, !dbg !8540
  %arrayidx785 = getelementptr inbounds [3 x float], [3 x float]* %vec784, i64 0, i64 1, !dbg !8539
  %578 = load float, float* %arrayidx785, align 4, !dbg !8539
  %sub786 = fsub float %576, %578, !dbg !8541
  %mul787 = fmul float %sub781, %sub786, !dbg !8542
  %579 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !8543
  %vec788 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %579, i32 0, i32 0, !dbg !8544
  %arrayidx789 = getelementptr inbounds [3 x float], [3 x float]* %vec788, i64 0, i64 1, !dbg !8543
  %580 = load float, float* %arrayidx789, align 4, !dbg !8543
  %581 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !8545
  %vec790 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %581, i32 0, i32 0, !dbg !8546
  %arrayidx791 = getelementptr inbounds [3 x float], [3 x float]* %vec790, i64 0, i64 1, !dbg !8545
  %582 = load float, float* %arrayidx791, align 4, !dbg !8545
  %sub792 = fsub float %580, %582, !dbg !8547
  %583 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !8548
  %vec793 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %583, i32 0, i32 0, !dbg !8549
  %arrayidx794 = getelementptr inbounds [3 x float], [3 x float]* %vec793, i64 0, i64 0, !dbg !8548
  %584 = load float, float* %arrayidx794, align 4, !dbg !8548
  %585 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !8550
  %vec795 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %585, i32 0, i32 0, !dbg !8551
  %arrayidx796 = getelementptr inbounds [3 x float], [3 x float]* %vec795, i64 0, i64 0, !dbg !8550
  %586 = load float, float* %arrayidx796, align 4, !dbg !8550
  %sub797 = fsub float %584, %586, !dbg !8552
  %mul798 = fmul float %sub792, %sub797, !dbg !8553
  %add799 = fadd float %mul787, %mul798, !dbg !8554
  store float %add799, float* %inp, align 4, !dbg !8555
  %587 = load float, float* %inp, align 4, !dbg !8556
  %cmp800 = fcmp ogt float %587, 0.000000e+00, !dbg !8558
  br i1 %cmp800, label %if.then802, label %if.else804, !dbg !8559

if.then802:                                       ; preds = %if.end776
  %588 = load %struct.BevelSort*, %struct.BevelSort** %sd, align 8, !dbg !8560
  %dir803 = getelementptr inbounds %struct.BevelSort, %struct.BevelSort* %588, i32 0, i32 2, !dbg !8561
  store i32 1, i32* %dir803, align 4, !dbg !8562
  br label %if.end806, !dbg !8560

if.else804:                                       ; preds = %if.end776
  %589 = load %struct.BevelSort*, %struct.BevelSort** %sd, align 8, !dbg !8563
  %dir805 = getelementptr inbounds %struct.BevelSort, %struct.BevelSort* %589, i32 0, i32 2, !dbg !8564
  store i32 0, i32* %dir805, align 4, !dbg !8565
  br label %if.end806

if.end806:                                        ; preds = %if.else804, %if.then802
  %590 = load %struct.BevelSort*, %struct.BevelSort** %sd, align 8, !dbg !8566
  %incdec.ptr807 = getelementptr inbounds %struct.BevelSort, %struct.BevelSort* %590, i32 1, !dbg !8566
  store %struct.BevelSort* %incdec.ptr807, %struct.BevelSort** %sd, align 8, !dbg !8566
  br label %if.end808, !dbg !8567

if.end808:                                        ; preds = %if.end806, %while.body730
  %591 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8568
  %next809 = getelementptr inbounds %struct.BevList, %struct.BevList* %591, i32 0, i32 0, !dbg !8569
  %592 = load %struct.BevList*, %struct.BevList** %next809, align 8, !dbg !8569
  store %struct.BevList* %592, %struct.BevList** %bl, align 8, !dbg !8570
  br label %while.cond728, !dbg !8453, !llvm.loop !8571

while.end810:                                     ; preds = %while.cond728
  %593 = load %struct.BevelSort*, %struct.BevelSort** %sortdata, align 8, !dbg !8573
  %594 = bitcast %struct.BevelSort* %593 to i8*, !dbg !8573
  %595 = load i32, i32* %poly, align 4, !dbg !8574
  %conv811 = sext i32 %595 to i64, !dbg !8574
  call void @qsort(i8* %594, i64 %conv811, i64 16, i32 (i8*, i8*)* @vergxcobev), !dbg !8575
  %596 = load %struct.BevelSort*, %struct.BevelSort** %sortdata, align 8, !dbg !8576
  %add.ptr812 = getelementptr inbounds %struct.BevelSort, %struct.BevelSort* %596, i64 1, !dbg !8577
  store %struct.BevelSort* %add.ptr812, %struct.BevelSort** %sd, align 8, !dbg !8578
  store i32 1, i32* %a, align 4, !dbg !8579
  br label %for.cond813, !dbg !8581

for.cond813:                                      ; preds = %for.inc846, %while.end810
  %597 = load i32, i32* %a, align 4, !dbg !8582
  %598 = load i32, i32* %poly, align 4, !dbg !8584
  %cmp814 = icmp slt i32 %597, %598, !dbg !8585
  br i1 %cmp814, label %for.body816, label %for.end849, !dbg !8586

for.body816:                                      ; preds = %for.cond813
  %599 = load %struct.BevelSort*, %struct.BevelSort** %sd, align 8, !dbg !8587
  %bl817 = getelementptr inbounds %struct.BevelSort, %struct.BevelSort* %599, i32 0, i32 0, !dbg !8589
  %600 = load %struct.BevList*, %struct.BevList** %bl817, align 8, !dbg !8589
  store %struct.BevList* %600, %struct.BevList** %bl, align 8, !dbg !8590
  %601 = load %struct.BevelSort*, %struct.BevelSort** %sortdata, align 8, !dbg !8591
  %602 = load i32, i32* %a, align 4, !dbg !8592
  %sub818 = sub nsw i32 %602, 1, !dbg !8593
  %idx.ext819 = sext i32 %sub818 to i64, !dbg !8594
  %add.ptr820 = getelementptr inbounds %struct.BevelSort, %struct.BevelSort* %601, i64 %idx.ext819, !dbg !8594
  store %struct.BevelSort* %add.ptr820, %struct.BevelSort** %sd1, align 8, !dbg !8595
  %603 = load i32, i32* %a, align 4, !dbg !8596
  %sub821 = sub nsw i32 %603, 1, !dbg !8598
  store i32 %sub821, i32* %b, align 4, !dbg !8599
  br label %for.cond822, !dbg !8600

for.cond822:                                      ; preds = %for.inc842, %for.body816
  %604 = load i32, i32* %b, align 4, !dbg !8601
  %cmp823 = icmp sge i32 %604, 0, !dbg !8603
  br i1 %cmp823, label %for.body825, label %for.end845, !dbg !8604

for.body825:                                      ; preds = %for.cond822
  %605 = load %struct.BevelSort*, %struct.BevelSort** %sd1, align 8, !dbg !8605
  %bl826 = getelementptr inbounds %struct.BevelSort, %struct.BevelSort* %605, i32 0, i32 0, !dbg !8608
  %606 = load %struct.BevList*, %struct.BevList** %bl826, align 8, !dbg !8608
  %charidx827 = getelementptr inbounds %struct.BevList, %struct.BevList* %606, i32 0, i32 6, !dbg !8609
  %607 = load i32, i32* %charidx827, align 8, !dbg !8609
  %608 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8610
  %charidx828 = getelementptr inbounds %struct.BevList, %struct.BevList* %608, i32 0, i32 6, !dbg !8611
  %609 = load i32, i32* %charidx828, align 8, !dbg !8611
  %cmp829 = icmp eq i32 %607, %609, !dbg !8612
  br i1 %cmp829, label %if.then831, label %if.end841, !dbg !8613

if.then831:                                       ; preds = %for.body825
  %610 = load %struct.BevelSort*, %struct.BevelSort** %sd1, align 8, !dbg !8614
  %bl832 = getelementptr inbounds %struct.BevelSort, %struct.BevelSort* %610, i32 0, i32 0, !dbg !8617
  %611 = load %struct.BevList*, %struct.BevList** %bl832, align 8, !dbg !8617
  %612 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8618
  %call833 = call zeroext i8 @bevelinside(%struct.BevList* %611, %struct.BevList* %612), !dbg !8619
  %tobool834 = icmp ne i8 %call833, 0, !dbg !8619
  br i1 %tobool834, label %if.then835, label %if.end840, !dbg !8620

if.then835:                                       ; preds = %if.then831
  %613 = load %struct.BevelSort*, %struct.BevelSort** %sd1, align 8, !dbg !8621
  %bl836 = getelementptr inbounds %struct.BevelSort, %struct.BevelSort* %613, i32 0, i32 0, !dbg !8623
  %614 = load %struct.BevList*, %struct.BevList** %bl836, align 8, !dbg !8623
  %hole837 = getelementptr inbounds %struct.BevList, %struct.BevList* %614, i32 0, i32 5, !dbg !8624
  %615 = load i32, i32* %hole837, align 4, !dbg !8624
  %sub838 = sub nsw i32 1, %615, !dbg !8625
  %616 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8626
  %hole839 = getelementptr inbounds %struct.BevList, %struct.BevList* %616, i32 0, i32 5, !dbg !8627
  store i32 %sub838, i32* %hole839, align 4, !dbg !8628
  br label %for.end845, !dbg !8629

if.end840:                                        ; preds = %if.then831
  br label %if.end841, !dbg !8630

if.end841:                                        ; preds = %if.end840, %for.body825
  br label %for.inc842, !dbg !8631

for.inc842:                                       ; preds = %if.end841
  %617 = load i32, i32* %b, align 4, !dbg !8632
  %dec843 = add nsw i32 %617, -1, !dbg !8632
  store i32 %dec843, i32* %b, align 4, !dbg !8632
  %618 = load %struct.BevelSort*, %struct.BevelSort** %sd1, align 8, !dbg !8633
  %incdec.ptr844 = getelementptr inbounds %struct.BevelSort, %struct.BevelSort* %618, i32 -1, !dbg !8633
  store %struct.BevelSort* %incdec.ptr844, %struct.BevelSort** %sd1, align 8, !dbg !8633
  br label %for.cond822, !dbg !8634, !llvm.loop !8635

for.end845:                                       ; preds = %if.then835, %for.cond822
  br label %for.inc846, !dbg !8637

for.inc846:                                       ; preds = %for.end845
  %619 = load i32, i32* %a, align 4, !dbg !8638
  %inc847 = add nsw i32 %619, 1, !dbg !8638
  store i32 %inc847, i32* %a, align 4, !dbg !8638
  %620 = load %struct.BevelSort*, %struct.BevelSort** %sd, align 8, !dbg !8639
  %incdec.ptr848 = getelementptr inbounds %struct.BevelSort, %struct.BevelSort* %620, i32 1, !dbg !8639
  store %struct.BevelSort* %incdec.ptr848, %struct.BevelSort** %sd, align 8, !dbg !8639
  br label %for.cond813, !dbg !8640, !llvm.loop !8641

for.end849:                                       ; preds = %for.cond813
  %621 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8643
  %flag850 = getelementptr inbounds %struct.Curve, %struct.Curve* %621, i32 0, i32 23, !dbg !8645
  %622 = load i32, i32* %flag850, align 4, !dbg !8645
  %and851 = and i32 %622, 1, !dbg !8646
  %cmp852 = icmp eq i32 %and851, 0, !dbg !8647
  br i1 %cmp852, label %if.then854, label %if.end885, !dbg !8648

if.then854:                                       ; preds = %for.end849
  %623 = load %struct.BevelSort*, %struct.BevelSort** %sortdata, align 8, !dbg !8649
  store %struct.BevelSort* %623, %struct.BevelSort** %sd, align 8, !dbg !8651
  store i32 0, i32* %a, align 4, !dbg !8652
  br label %for.cond855, !dbg !8654

for.cond855:                                      ; preds = %for.inc881, %if.then854
  %624 = load i32, i32* %a, align 4, !dbg !8655
  %625 = load i32, i32* %poly, align 4, !dbg !8657
  %cmp856 = icmp slt i32 %624, %625, !dbg !8658
  br i1 %cmp856, label %for.body858, label %for.end884, !dbg !8659

for.body858:                                      ; preds = %for.cond855
  %626 = load %struct.BevelSort*, %struct.BevelSort** %sd, align 8, !dbg !8660
  %bl859 = getelementptr inbounds %struct.BevelSort, %struct.BevelSort* %626, i32 0, i32 0, !dbg !8663
  %627 = load %struct.BevList*, %struct.BevList** %bl859, align 8, !dbg !8663
  %hole860 = getelementptr inbounds %struct.BevList, %struct.BevList* %627, i32 0, i32 5, !dbg !8664
  %628 = load i32, i32* %hole860, align 4, !dbg !8664
  %629 = load %struct.BevelSort*, %struct.BevelSort** %sd, align 8, !dbg !8665
  %dir861 = getelementptr inbounds %struct.BevelSort, %struct.BevelSort* %629, i32 0, i32 2, !dbg !8666
  %630 = load i32, i32* %dir861, align 4, !dbg !8666
  %cmp862 = icmp eq i32 %628, %630, !dbg !8667
  br i1 %cmp862, label %if.then864, label %if.end880, !dbg !8668

if.then864:                                       ; preds = %for.body858
  %631 = load %struct.BevelSort*, %struct.BevelSort** %sd, align 8, !dbg !8669
  %bl865 = getelementptr inbounds %struct.BevelSort, %struct.BevelSort* %631, i32 0, i32 0, !dbg !8671
  %632 = load %struct.BevList*, %struct.BevList** %bl865, align 8, !dbg !8671
  store %struct.BevList* %632, %struct.BevList** %bl, align 8, !dbg !8672
  %633 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8673
  %bevpoints866 = getelementptr inbounds %struct.BevList, %struct.BevList* %633, i32 0, i32 9, !dbg !8674
  %arraydecay867 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints866, i64 0, i64 0, !dbg !8673
  store %struct.BevPoint* %arraydecay867, %struct.BevPoint** %bevp1, align 8, !dbg !8675
  %634 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !8676
  %635 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8677
  %nr868 = getelementptr inbounds %struct.BevList, %struct.BevList* %635, i32 0, i32 2, !dbg !8678
  %636 = load i32, i32* %nr868, align 8, !dbg !8678
  %sub869 = sub nsw i32 %636, 1, !dbg !8679
  %idx.ext870 = sext i32 %sub869 to i64, !dbg !8680
  %add.ptr871 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %634, i64 %idx.ext870, !dbg !8680
  store %struct.BevPoint* %add.ptr871, %struct.BevPoint** %bevp2, align 8, !dbg !8681
  %637 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8682
  %nr872 = getelementptr inbounds %struct.BevList, %struct.BevList* %637, i32 0, i32 2, !dbg !8683
  %638 = load i32, i32* %nr872, align 8, !dbg !8683
  %div = sdiv i32 %638, 2, !dbg !8684
  store i32 %div, i32* %nr, align 4, !dbg !8685
  br label %while.cond873, !dbg !8686

while.cond873:                                    ; preds = %while.body876, %if.then864
  %639 = load i32, i32* %nr, align 4, !dbg !8687
  %dec874 = add nsw i32 %639, -1, !dbg !8687
  store i32 %dec874, i32* %nr, align 4, !dbg !8687
  %tobool875 = icmp ne i32 %639, 0, !dbg !8686
  br i1 %tobool875, label %while.body876, label %while.end879, !dbg !8686

while.body876:                                    ; preds = %while.cond873
  call void @llvm.dbg.declare(metadata %struct.BevPoint* %sw_ap, metadata !8688, metadata !DIExpression()), !dbg !8691
  %640 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !8691
  %641 = bitcast %struct.BevPoint* %sw_ap to i8*, !dbg !8691
  %642 = bitcast %struct.BevPoint* %640 to i8*, !dbg !8691
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %641, i8* align 4 %642, i64 80, i1 false), !dbg !8691
  %643 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !8691
  %644 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !8691
  %645 = bitcast %struct.BevPoint* %643 to i8*, !dbg !8691
  %646 = bitcast %struct.BevPoint* %644 to i8*, !dbg !8691
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %645, i8* align 4 %646, i64 80, i1 false), !dbg !8691
  %647 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !8691
  %648 = bitcast %struct.BevPoint* %647 to i8*, !dbg !8691
  %649 = bitcast %struct.BevPoint* %sw_ap to i8*, !dbg !8691
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %648, i8* align 4 %649, i64 80, i1 false), !dbg !8691
  %650 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !8692
  %incdec.ptr877 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %650, i32 1, !dbg !8692
  store %struct.BevPoint* %incdec.ptr877, %struct.BevPoint** %bevp1, align 8, !dbg !8692
  %651 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !8693
  %incdec.ptr878 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %651, i32 -1, !dbg !8693
  store %struct.BevPoint* %incdec.ptr878, %struct.BevPoint** %bevp2, align 8, !dbg !8693
  br label %while.cond873, !dbg !8686, !llvm.loop !8694

while.end879:                                     ; preds = %while.cond873
  br label %if.end880, !dbg !8696

if.end880:                                        ; preds = %while.end879, %for.body858
  br label %for.inc881, !dbg !8697

for.inc881:                                       ; preds = %if.end880
  %652 = load i32, i32* %a, align 4, !dbg !8698
  %inc882 = add nsw i32 %652, 1, !dbg !8698
  store i32 %inc882, i32* %a, align 4, !dbg !8698
  %653 = load %struct.BevelSort*, %struct.BevelSort** %sd, align 8, !dbg !8699
  %incdec.ptr883 = getelementptr inbounds %struct.BevelSort, %struct.BevelSort* %653, i32 1, !dbg !8699
  store %struct.BevelSort* %incdec.ptr883, %struct.BevelSort** %sd, align 8, !dbg !8699
  br label %for.cond855, !dbg !8700, !llvm.loop !8701

for.end884:                                       ; preds = %for.cond855
  br label %if.end885, !dbg !8703

if.end885:                                        ; preds = %for.end884, %for.end849
  %654 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8704
  %655 = load %struct.BevelSort*, %struct.BevelSort** %sortdata, align 8, !dbg !8705
  %656 = bitcast %struct.BevelSort* %655 to i8*, !dbg !8705
  call void %654(i8* %656), !dbg !8704
  br label %if.end886, !dbg !8706

if.end886:                                        ; preds = %if.end885, %while.end720
  %657 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8707
  %flag887 = getelementptr inbounds %struct.Curve, %struct.Curve* %657, i32 0, i32 23, !dbg !8709
  %658 = load i32, i32* %flag887, align 4, !dbg !8709
  %and888 = and i32 %658, 1, !dbg !8710
  %cmp889 = icmp eq i32 %and888, 0, !dbg !8711
  br i1 %cmp889, label %if.then891, label %if.else915, !dbg !8712

if.then891:                                       ; preds = %if.end886
  %659 = load %struct.ListBase*, %struct.ListBase** %bev, align 8, !dbg !8713
  %first892 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %659, i32 0, i32 0, !dbg !8716
  %660 = load i8*, i8** %first892, align 8, !dbg !8716
  %661 = bitcast i8* %660 to %struct.BevList*, !dbg !8713
  store %struct.BevList* %661, %struct.BevList** %bl, align 8, !dbg !8717
  br label %for.cond893, !dbg !8718

for.cond893:                                      ; preds = %for.inc912, %if.then891
  %662 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8719
  %tobool894 = icmp ne %struct.BevList* %662, null, !dbg !8721
  br i1 %tobool894, label %for.body895, label %for.end914, !dbg !8721

for.body895:                                      ; preds = %for.cond893
  %663 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8722
  %nr896 = getelementptr inbounds %struct.BevList, %struct.BevList* %663, i32 0, i32 2, !dbg !8725
  %664 = load i32, i32* %nr896, align 8, !dbg !8725
  %cmp897 = icmp slt i32 %664, 2, !dbg !8726
  br i1 %cmp897, label %if.then899, label %if.else904, !dbg !8727

if.then899:                                       ; preds = %for.body895
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp900, metadata !8728, metadata !DIExpression()), !dbg !8730
  %665 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8731
  %bevpoints901 = getelementptr inbounds %struct.BevList, %struct.BevList* %665, i32 0, i32 9, !dbg !8732
  %arraydecay902 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints901, i64 0, i64 0, !dbg !8731
  store %struct.BevPoint* %arraydecay902, %struct.BevPoint** %bevp900, align 8, !dbg !8730
  %666 = load %struct.BevPoint*, %struct.BevPoint** %bevp900, align 8, !dbg !8733
  %quat = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %666, i32 0, i32 9, !dbg !8734
  %arraydecay903 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !8733
  call void @unit_qt(float* %arraydecay903), !dbg !8735
  br label %if.end911, !dbg !8736

if.else904:                                       ; preds = %for.body895
  %667 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8737
  %nr905 = getelementptr inbounds %struct.BevList, %struct.BevList* %667, i32 0, i32 2, !dbg !8739
  %668 = load i32, i32* %nr905, align 8, !dbg !8739
  %cmp906 = icmp eq i32 %668, 2, !dbg !8740
  br i1 %cmp906, label %if.then908, label %if.else909, !dbg !8741

if.then908:                                       ; preds = %if.else904
  %669 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8742
  call void @make_bevel_list_segment_2D(%struct.BevList* %669), !dbg !8744
  br label %if.end910, !dbg !8745

if.else909:                                       ; preds = %if.else904
  %670 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8746
  call void @make_bevel_list_2D(%struct.BevList* %670), !dbg !8748
  br label %if.end910

if.end910:                                        ; preds = %if.else909, %if.then908
  br label %if.end911

if.end911:                                        ; preds = %if.end910, %if.then899
  br label %for.inc912, !dbg !8749

for.inc912:                                       ; preds = %if.end911
  %671 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8750
  %next913 = getelementptr inbounds %struct.BevList, %struct.BevList* %671, i32 0, i32 0, !dbg !8751
  %672 = load %struct.BevList*, %struct.BevList** %next913, align 8, !dbg !8751
  store %struct.BevList* %672, %struct.BevList** %bl, align 8, !dbg !8752
  br label %for.cond893, !dbg !8753, !llvm.loop !8754

for.end914:                                       ; preds = %for.cond893
  br label %if.end945, !dbg !8756

if.else915:                                       ; preds = %if.end886
  %673 = load %struct.ListBase*, %struct.ListBase** %bev, align 8, !dbg !8757
  %first916 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %673, i32 0, i32 0, !dbg !8760
  %674 = load i8*, i8** %first916, align 8, !dbg !8760
  %675 = bitcast i8* %674 to %struct.BevList*, !dbg !8757
  store %struct.BevList* %675, %struct.BevList** %bl, align 8, !dbg !8761
  br label %for.cond917, !dbg !8762

for.cond917:                                      ; preds = %for.inc942, %if.else915
  %676 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8763
  %tobool918 = icmp ne %struct.BevList* %676, null, !dbg !8765
  br i1 %tobool918, label %for.body919, label %for.end944, !dbg !8765

for.body919:                                      ; preds = %for.cond917
  %677 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8766
  %nr920 = getelementptr inbounds %struct.BevList, %struct.BevList* %677, i32 0, i32 2, !dbg !8769
  %678 = load i32, i32* %nr920, align 8, !dbg !8769
  %cmp921 = icmp slt i32 %678, 2, !dbg !8770
  br i1 %cmp921, label %if.then923, label %if.else929, !dbg !8771

if.then923:                                       ; preds = %for.body919
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp924, metadata !8772, metadata !DIExpression()), !dbg !8774
  %679 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8775
  %bevpoints925 = getelementptr inbounds %struct.BevList, %struct.BevList* %679, i32 0, i32 9, !dbg !8776
  %arraydecay926 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints925, i64 0, i64 0, !dbg !8775
  store %struct.BevPoint* %arraydecay926, %struct.BevPoint** %bevp924, align 8, !dbg !8774
  %680 = load %struct.BevPoint*, %struct.BevPoint** %bevp924, align 8, !dbg !8777
  %quat927 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %680, i32 0, i32 9, !dbg !8778
  %arraydecay928 = getelementptr inbounds [4 x float], [4 x float]* %quat927, i64 0, i64 0, !dbg !8777
  call void @unit_qt(float* %arraydecay928), !dbg !8779
  br label %if.end941, !dbg !8780

if.else929:                                       ; preds = %for.body919
  %681 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8781
  %nr930 = getelementptr inbounds %struct.BevList, %struct.BevList* %681, i32 0, i32 2, !dbg !8783
  %682 = load i32, i32* %nr930, align 8, !dbg !8783
  %cmp931 = icmp eq i32 %682, 2, !dbg !8784
  br i1 %cmp931, label %if.then933, label %if.else934, !dbg !8785

if.then933:                                       ; preds = %if.else929
  %683 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8786
  call void @make_bevel_list_segment_3D(%struct.BevList* %683), !dbg !8788
  br label %if.end940, !dbg !8789

if.else934:                                       ; preds = %if.else929
  %684 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8790
  %685 = load i32, i32* %resolu, align 4, !dbg !8792
  %conv935 = sitofp i32 %685 to float, !dbg !8792
  %686 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8793
  %twist_smooth = getelementptr inbounds %struct.Curve, %struct.Curve* %686, i32 0, i32 18, !dbg !8794
  %687 = load float, float* %twist_smooth, align 4, !dbg !8794
  %mul936 = fmul float %conv935, %687, !dbg !8795
  %conv937 = fptosi float %mul936 to i32, !dbg !8796
  %688 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8797
  %twist_mode938 = getelementptr inbounds %struct.Curve, %struct.Curve* %688, i32 0, i32 17, !dbg !8798
  %689 = load i16, i16* %twist_mode938, align 2, !dbg !8798
  %conv939 = sext i16 %689 to i32, !dbg !8797
  call void @make_bevel_list_3D(%struct.BevList* %684, i32 %conv937, i32 %conv939), !dbg !8799
  br label %if.end940

if.end940:                                        ; preds = %if.else934, %if.then933
  br label %if.end941

if.end941:                                        ; preds = %if.end940, %if.then923
  br label %for.inc942, !dbg !8800

for.inc942:                                       ; preds = %if.end941
  %690 = load %struct.BevList*, %struct.BevList** %bl, align 8, !dbg !8801
  %next943 = getelementptr inbounds %struct.BevList, %struct.BevList* %690, i32 0, i32 0, !dbg !8802
  %691 = load %struct.BevList*, %struct.BevList** %next943, align 8, !dbg !8802
  store %struct.BevList* %691, %struct.BevList** %bl, align 8, !dbg !8803
  br label %for.cond917, !dbg !8804, !llvm.loop !8805

for.end944:                                       ; preds = %for.cond917
  br label %if.end945

if.end945:                                        ; preds = %for.end944, %for.end914
  ret void, !dbg !8807
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_nurb_check_valid_u(%struct.Nurb* %nu) #0 !dbg !8808 {
entry:
  %retval = alloca i8, align 1
  %nu.addr = alloca %struct.Nurb*, align 8
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !8811, metadata !DIExpression()), !dbg !8812
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !8813
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %0, i32 0, i32 6, !dbg !8815
  %1 = load i32, i32* %pntsu, align 8, !dbg !8815
  %cmp = icmp sle i32 %1, 1, !dbg !8816
  br i1 %cmp, label %if.then, label %if.end, !dbg !8817

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !8818
  br label %return, !dbg !8818

if.end:                                           ; preds = %entry
  %2 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !8819
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %2, i32 0, i32 2, !dbg !8821
  %3 = load i16, i16* %type, align 8, !dbg !8821
  %conv = sext i16 %3 to i32, !dbg !8819
  %cmp1 = icmp ne i32 %conv, 4, !dbg !8822
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !8823

if.then3:                                         ; preds = %if.end
  store i8 1, i8* %retval, align 1, !dbg !8824
  br label %return, !dbg !8824

if.end4:                                          ; preds = %if.end
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !8825
  %pntsu5 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 6, !dbg !8827
  %5 = load i32, i32* %pntsu5, align 8, !dbg !8827
  %6 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !8828
  %orderu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 11, !dbg !8829
  %7 = load i16, i16* %orderu, align 8, !dbg !8829
  %conv6 = sext i16 %7 to i32, !dbg !8828
  %cmp7 = icmp slt i32 %5, %conv6, !dbg !8830
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !8831

if.then9:                                         ; preds = %if.end4
  store i8 0, i8* %retval, align 1, !dbg !8832
  br label %return, !dbg !8832

if.end10:                                         ; preds = %if.end4
  %8 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !8833
  %flag = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 5, !dbg !8835
  %9 = load i16, i16* %flag, align 2, !dbg !8835
  %conv11 = sext i16 %9 to i32, !dbg !8833
  %and = and i32 %conv11, 1, !dbg !8836
  %cmp12 = icmp eq i32 %and, 0, !dbg !8837
  br i1 %cmp12, label %land.lhs.true, label %if.end34, !dbg !8838

land.lhs.true:                                    ; preds = %if.end10
  %10 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !8839
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 13, !dbg !8840
  %11 = load i16, i16* %flagu, align 4, !dbg !8840
  %conv14 = sext i16 %11 to i32, !dbg !8839
  %and15 = and i32 %conv14, 4, !dbg !8841
  %tobool = icmp ne i32 %and15, 0, !dbg !8841
  br i1 %tobool, label %if.then16, label %if.end34, !dbg !8842

if.then16:                                        ; preds = %land.lhs.true
  %12 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !8843
  %orderu17 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 11, !dbg !8846
  %13 = load i16, i16* %orderu17, align 8, !dbg !8846
  %conv18 = sext i16 %13 to i32, !dbg !8843
  %cmp19 = icmp eq i32 %conv18, 4, !dbg !8847
  br i1 %cmp19, label %if.then21, label %if.else, !dbg !8848

if.then21:                                        ; preds = %if.then16
  %14 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !8849
  %pntsu22 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %14, i32 0, i32 6, !dbg !8852
  %15 = load i32, i32* %pntsu22, align 8, !dbg !8852
  %cmp23 = icmp slt i32 %15, 5, !dbg !8853
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !8854

if.then25:                                        ; preds = %if.then21
  store i8 0, i8* %retval, align 1, !dbg !8855
  br label %return, !dbg !8855

if.end26:                                         ; preds = %if.then21
  br label %if.end33, !dbg !8856

if.else:                                          ; preds = %if.then16
  %16 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !8857
  %orderu27 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %16, i32 0, i32 11, !dbg !8860
  %17 = load i16, i16* %orderu27, align 8, !dbg !8860
  %conv28 = sext i16 %17 to i32, !dbg !8857
  %cmp29 = icmp ne i32 %conv28, 3, !dbg !8861
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !8862

if.then31:                                        ; preds = %if.else
  store i8 0, i8* %retval, align 1, !dbg !8863
  br label %return, !dbg !8863

if.end32:                                         ; preds = %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end26
  br label %if.end34, !dbg !8864

if.end34:                                         ; preds = %if.end33, %land.lhs.true, %if.end10
  store i8 1, i8* %retval, align 1, !dbg !8865
  br label %return, !dbg !8865

return:                                           ; preds = %if.end34, %if.then31, %if.then25, %if.then9, %if.then3, %if.then
  %18 = load i8, i8* %retval, align 1, !dbg !8866
  ret i8 %18, !dbg !8866
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3v3(float* %a, float* %b) #0 !dbg !8867 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8870, metadata !DIExpression()), !dbg !8871
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8872, metadata !DIExpression()), !dbg !8873
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !8874, metadata !DIExpression()), !dbg !8875
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !8876
  %0 = load float*, float** %b.addr, align 8, !dbg !8877
  %1 = load float*, float** %a.addr, align 8, !dbg !8878
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !8879
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !8880
  %call = call float @len_v3(float* %arraydecay1), !dbg !8881
  ret float %call, !dbg !8882
}

; Function Attrs: noinline nounwind uwtable
define internal void @bevlist_firstlast_direction_calc_from_bpoint(%struct.Nurb* %nu, %struct.BevList* %bl) #0 !dbg !8883 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %bl.addr = alloca %struct.BevList*, align 8
  %first_bp = alloca %struct.BPoint*, align 8
  %last_bp = alloca %struct.BPoint*, align 8
  %first_bevp = alloca %struct.BevPoint*, align 8
  %last_bevp = alloca %struct.BevPoint*, align 8
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !8886, metadata !DIExpression()), !dbg !8887
  store %struct.BevList* %bl, %struct.BevList** %bl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BevList** %bl.addr, metadata !8888, metadata !DIExpression()), !dbg !8889
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !8890
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %0, i32 0, i32 6, !dbg !8892
  %1 = load i32, i32* %pntsu, align 8, !dbg !8892
  %cmp = icmp sgt i32 %1, 1, !dbg !8893
  br i1 %cmp, label %if.then, label %if.end, !dbg !8894

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BPoint** %first_bp, metadata !8895, metadata !DIExpression()), !dbg !8897
  %2 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !8898
  %bp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %2, i32 0, i32 17, !dbg !8899
  %3 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !8899
  store %struct.BPoint* %3, %struct.BPoint** %first_bp, align 8, !dbg !8897
  call void @llvm.dbg.declare(metadata %struct.BPoint** %last_bp, metadata !8900, metadata !DIExpression()), !dbg !8901
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !8902
  %bp1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 17, !dbg !8903
  %5 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !8903
  %6 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !8904
  %pntsu2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 6, !dbg !8905
  %7 = load i32, i32* %pntsu2, align 8, !dbg !8905
  %sub = sub nsw i32 %7, 1, !dbg !8906
  %idx.ext = sext i32 %sub to i64, !dbg !8907
  %add.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %5, i64 %idx.ext, !dbg !8907
  store %struct.BPoint* %add.ptr, %struct.BPoint** %last_bp, align 8, !dbg !8901
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %first_bevp, metadata !8908, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %last_bevp, metadata !8910, metadata !DIExpression()), !dbg !8911
  %8 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !8912
  %bevpoints = getelementptr inbounds %struct.BevList, %struct.BevList* %8, i32 0, i32 9, !dbg !8913
  %arraydecay = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints, i64 0, i64 0, !dbg !8912
  store %struct.BevPoint* %arraydecay, %struct.BevPoint** %first_bevp, align 8, !dbg !8914
  %9 = load %struct.BevPoint*, %struct.BevPoint** %first_bevp, align 8, !dbg !8915
  %10 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !8916
  %nr = getelementptr inbounds %struct.BevList, %struct.BevList* %10, i32 0, i32 2, !dbg !8917
  %11 = load i32, i32* %nr, align 8, !dbg !8917
  %sub3 = sub nsw i32 %11, 1, !dbg !8918
  %idx.ext4 = sext i32 %sub3 to i64, !dbg !8919
  %add.ptr5 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %9, i64 %idx.ext4, !dbg !8919
  store %struct.BevPoint* %add.ptr5, %struct.BevPoint** %last_bevp, align 8, !dbg !8920
  %12 = load %struct.BevPoint*, %struct.BevPoint** %first_bevp, align 8, !dbg !8921
  %dir = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %12, i32 0, i32 7, !dbg !8922
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !8921
  %13 = load %struct.BPoint*, %struct.BPoint** %first_bp, align 8, !dbg !8923
  %add.ptr7 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %13, i64 1, !dbg !8924
  %vec = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr7, i32 0, i32 0, !dbg !8925
  %arraydecay8 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !8926
  %14 = load %struct.BPoint*, %struct.BPoint** %first_bp, align 8, !dbg !8927
  %vec9 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %14, i32 0, i32 0, !dbg !8928
  %arraydecay10 = getelementptr inbounds [4 x float], [4 x float]* %vec9, i64 0, i64 0, !dbg !8927
  call void @sub_v3_v3v3(float* %arraydecay6, float* %arraydecay8, float* %arraydecay10), !dbg !8929
  %15 = load %struct.BevPoint*, %struct.BevPoint** %first_bevp, align 8, !dbg !8930
  %dir11 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %15, i32 0, i32 7, !dbg !8931
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %dir11, i64 0, i64 0, !dbg !8930
  %call = call float @normalize_v3(float* %arraydecay12), !dbg !8932
  %16 = load %struct.BevPoint*, %struct.BevPoint** %last_bevp, align 8, !dbg !8933
  %dir13 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %16, i32 0, i32 7, !dbg !8934
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %dir13, i64 0, i64 0, !dbg !8933
  %17 = load %struct.BPoint*, %struct.BPoint** %last_bp, align 8, !dbg !8935
  %vec15 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %17, i32 0, i32 0, !dbg !8936
  %arraydecay16 = getelementptr inbounds [4 x float], [4 x float]* %vec15, i64 0, i64 0, !dbg !8935
  %18 = load %struct.BPoint*, %struct.BPoint** %last_bp, align 8, !dbg !8937
  %add.ptr17 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %18, i64 -1, !dbg !8938
  %vec18 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %add.ptr17, i32 0, i32 0, !dbg !8939
  %arraydecay19 = getelementptr inbounds [4 x float], [4 x float]* %vec18, i64 0, i64 0, !dbg !8940
  call void @sub_v3_v3v3(float* %arraydecay14, float* %arraydecay16, float* %arraydecay19), !dbg !8941
  %19 = load %struct.BevPoint*, %struct.BevPoint** %last_bevp, align 8, !dbg !8942
  %dir20 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %19, i32 0, i32 7, !dbg !8943
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %dir20, i64 0, i64 0, !dbg !8942
  %call22 = call float @normalize_v3(float* %arraydecay21), !dbg !8944
  br label %if.end, !dbg !8945

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8946
}

; Function Attrs: noinline nounwind uwtable
define internal void @alfa_bezpart(%struct.BezTriple* %prevbezt, %struct.BezTriple* %bezt, %struct.Nurb* %nu, float* %tilt_array, float* %radius_array, float* %weight_array, i32 %resolu, i32 %stride) #0 !dbg !8947 {
entry:
  %prevbezt.addr = alloca %struct.BezTriple*, align 8
  %bezt.addr = alloca %struct.BezTriple*, align 8
  %nu.addr = alloca %struct.Nurb*, align 8
  %tilt_array.addr = alloca float*, align 8
  %radius_array.addr = alloca float*, align 8
  %weight_array.addr = alloca float*, align 8
  %resolu.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %pprev = alloca %struct.BezTriple*, align 8
  %next = alloca %struct.BezTriple*, align 8
  %last = alloca %struct.BezTriple*, align 8
  %fac = alloca float, align 4
  %dfac = alloca float, align 4
  %t = alloca [4 x float], align 16
  %a = alloca i32, align 4
  store %struct.BezTriple* %prevbezt, %struct.BezTriple** %prevbezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %prevbezt.addr, metadata !8950, metadata !DIExpression()), !dbg !8951
  store %struct.BezTriple* %bezt, %struct.BezTriple** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt.addr, metadata !8952, metadata !DIExpression()), !dbg !8953
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !8954, metadata !DIExpression()), !dbg !8955
  store float* %tilt_array, float** %tilt_array.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tilt_array.addr, metadata !8956, metadata !DIExpression()), !dbg !8957
  store float* %radius_array, float** %radius_array.addr, align 8
  call void @llvm.dbg.declare(metadata float** %radius_array.addr, metadata !8958, metadata !DIExpression()), !dbg !8959
  store float* %weight_array, float** %weight_array.addr, align 8
  call void @llvm.dbg.declare(metadata float** %weight_array.addr, metadata !8960, metadata !DIExpression()), !dbg !8961
  store i32 %resolu, i32* %resolu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %resolu.addr, metadata !8962, metadata !DIExpression()), !dbg !8963
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !8964, metadata !DIExpression()), !dbg !8965
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %pprev, metadata !8966, metadata !DIExpression()), !dbg !8967
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %next, metadata !8968, metadata !DIExpression()), !dbg !8969
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %last, metadata !8970, metadata !DIExpression()), !dbg !8971
  call void @llvm.dbg.declare(metadata float* %fac, metadata !8972, metadata !DIExpression()), !dbg !8973
  call void @llvm.dbg.declare(metadata float* %dfac, metadata !8974, metadata !DIExpression()), !dbg !8975
  call void @llvm.dbg.declare(metadata [4 x float]* %t, metadata !8976, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8978, metadata !DIExpression()), !dbg !8979
  %0 = load float*, float** %tilt_array.addr, align 8, !dbg !8980
  %cmp = icmp eq float* %0, null, !dbg !8982
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8983

land.lhs.true:                                    ; preds = %entry
  %1 = load float*, float** %radius_array.addr, align 8, !dbg !8984
  %cmp1 = icmp eq float* %1, null, !dbg !8985
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8986

if.then:                                          ; preds = %land.lhs.true
  br label %for.end, !dbg !8987

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !8988
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %2, i32 0, i32 18, !dbg !8989
  %3 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !8989
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !8990
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 6, !dbg !8991
  %5 = load i32, i32* %pntsu, align 8, !dbg !8991
  %sub = sub nsw i32 %5, 1, !dbg !8992
  %idx.ext = sext i32 %sub to i64, !dbg !8993
  %add.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %3, i64 %idx.ext, !dbg !8993
  store %struct.BezTriple* %add.ptr, %struct.BezTriple** %last, align 8, !dbg !8994
  %6 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt.addr, align 8, !dbg !8995
  %7 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !8997
  %bezt3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %7, i32 0, i32 18, !dbg !8998
  %8 = load %struct.BezTriple*, %struct.BezTriple** %bezt3, align 8, !dbg !8998
  %cmp4 = icmp eq %struct.BezTriple* %6, %8, !dbg !8999
  br i1 %cmp4, label %if.then5, label %if.else8, !dbg !9000

if.then5:                                         ; preds = %if.end
  %9 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !9001
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 13, !dbg !9004
  %10 = load i16, i16* %flagu, align 4, !dbg !9004
  %conv = sext i16 %10 to i32, !dbg !9001
  %and = and i32 %conv, 1, !dbg !9005
  %tobool = icmp ne i32 %and, 0, !dbg !9005
  br i1 %tobool, label %if.then6, label %if.else, !dbg !9006

if.then6:                                         ; preds = %if.then5
  %11 = load %struct.BezTriple*, %struct.BezTriple** %last, align 8, !dbg !9007
  store %struct.BezTriple* %11, %struct.BezTriple** %pprev, align 8, !dbg !9008
  br label %if.end7, !dbg !9009

if.else:                                          ; preds = %if.then5
  %12 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt.addr, align 8, !dbg !9010
  store %struct.BezTriple* %12, %struct.BezTriple** %pprev, align 8, !dbg !9011
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then6
  br label %if.end10, !dbg !9012

if.else8:                                         ; preds = %if.end
  %13 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt.addr, align 8, !dbg !9013
  %add.ptr9 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %13, i64 -1, !dbg !9014
  store %struct.BezTriple* %add.ptr9, %struct.BezTriple** %pprev, align 8, !dbg !9015
  br label %if.end10

if.end10:                                         ; preds = %if.else8, %if.end7
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !9016
  %15 = load %struct.BezTriple*, %struct.BezTriple** %last, align 8, !dbg !9018
  %cmp11 = icmp eq %struct.BezTriple* %14, %15, !dbg !9019
  br i1 %cmp11, label %if.then13, label %if.else22, !dbg !9020

if.then13:                                        ; preds = %if.end10
  %16 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !9021
  %flagu14 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %16, i32 0, i32 13, !dbg !9024
  %17 = load i16, i16* %flagu14, align 4, !dbg !9024
  %conv15 = sext i16 %17 to i32, !dbg !9021
  %and16 = and i32 %conv15, 1, !dbg !9025
  %tobool17 = icmp ne i32 %and16, 0, !dbg !9025
  br i1 %tobool17, label %if.then18, label %if.else20, !dbg !9026

if.then18:                                        ; preds = %if.then13
  %18 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !9027
  %bezt19 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %18, i32 0, i32 18, !dbg !9028
  %19 = load %struct.BezTriple*, %struct.BezTriple** %bezt19, align 8, !dbg !9028
  store %struct.BezTriple* %19, %struct.BezTriple** %next, align 8, !dbg !9029
  br label %if.end21, !dbg !9030

if.else20:                                        ; preds = %if.then13
  %20 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !9031
  store %struct.BezTriple* %20, %struct.BezTriple** %next, align 8, !dbg !9032
  br label %if.end21

if.end21:                                         ; preds = %if.else20, %if.then18
  br label %if.end24, !dbg !9033

if.else22:                                        ; preds = %if.end10
  %21 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !9034
  %add.ptr23 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %21, i64 1, !dbg !9035
  store %struct.BezTriple* %add.ptr23, %struct.BezTriple** %next, align 8, !dbg !9036
  br label %if.end24

if.end24:                                         ; preds = %if.else22, %if.end21
  store float 0.000000e+00, float* %fac, align 4, !dbg !9037
  %22 = load i32, i32* %resolu.addr, align 4, !dbg !9038
  %conv25 = sitofp i32 %22 to float, !dbg !9039
  %div = fdiv float 1.000000e+00, %conv25, !dbg !9040
  store float %div, float* %dfac, align 4, !dbg !9041
  store i32 0, i32* %a, align 4, !dbg !9042
  br label %for.cond, !dbg !9044

for.cond:                                         ; preds = %for.inc, %if.end24
  %23 = load i32, i32* %a, align 4, !dbg !9045
  %24 = load i32, i32* %resolu.addr, align 4, !dbg !9047
  %cmp26 = icmp slt i32 %23, %24, !dbg !9048
  br i1 %cmp26, label %for.body, label %for.end, !dbg !9049

for.body:                                         ; preds = %for.cond
  %25 = load float*, float** %tilt_array.addr, align 8, !dbg !9050
  %tobool28 = icmp ne float* %25, null, !dbg !9050
  br i1 %tobool28, label %if.then29, label %if.end63, !dbg !9053

if.then29:                                        ; preds = %for.body
  %26 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !9054
  %tilt_interp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %26, i32 0, i32 19, !dbg !9057
  %27 = load i16, i16* %tilt_interp, align 8, !dbg !9057
  %conv30 = sext i16 %27 to i32, !dbg !9054
  %cmp31 = icmp eq i32 %conv30, 3, !dbg !9058
  br i1 %cmp31, label %if.then33, label %if.else43, !dbg !9059

if.then33:                                        ; preds = %if.then29
  %28 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt.addr, align 8, !dbg !9060
  %alfa = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %28, i32 0, i32 1, !dbg !9062
  %29 = load float, float* %alfa, align 4, !dbg !9062
  %30 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !9063
  %alfa34 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %30, i32 0, i32 1, !dbg !9064
  %31 = load float, float* %alfa34, align 4, !dbg !9064
  %32 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt.addr, align 8, !dbg !9065
  %alfa35 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %32, i32 0, i32 1, !dbg !9066
  %33 = load float, float* %alfa35, align 4, !dbg !9066
  %sub36 = fsub float %31, %33, !dbg !9067
  %34 = load float, float* %fac, align 4, !dbg !9068
  %mul = fmul float 3.000000e+00, %34, !dbg !9069
  %35 = load float, float* %fac, align 4, !dbg !9070
  %mul37 = fmul float %mul, %35, !dbg !9071
  %36 = load float, float* %fac, align 4, !dbg !9072
  %mul38 = fmul float 2.000000e+00, %36, !dbg !9073
  %37 = load float, float* %fac, align 4, !dbg !9074
  %mul39 = fmul float %mul38, %37, !dbg !9075
  %38 = load float, float* %fac, align 4, !dbg !9076
  %mul40 = fmul float %mul39, %38, !dbg !9077
  %sub41 = fsub float %mul37, %mul40, !dbg !9078
  %mul42 = fmul float %sub36, %sub41, !dbg !9079
  %add = fadd float %29, %mul42, !dbg !9080
  %39 = load float*, float** %tilt_array.addr, align 8, !dbg !9081
  store float %add, float* %39, align 4, !dbg !9082
  br label %if.end60, !dbg !9083

if.else43:                                        ; preds = %if.then29
  %40 = load float, float* %fac, align 4, !dbg !9084
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 0, !dbg !9086
  %41 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !9087
  %tilt_interp44 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %41, i32 0, i32 19, !dbg !9088
  %42 = load i16, i16* %tilt_interp44, align 8, !dbg !9088
  %conv45 = sext i16 %42 to i32, !dbg !9087
  call void @key_curve_position_weights(float %40, float* %arraydecay, i32 %conv45), !dbg !9089
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 0, !dbg !9090
  %43 = load float, float* %arrayidx, align 16, !dbg !9090
  %44 = load %struct.BezTriple*, %struct.BezTriple** %pprev, align 8, !dbg !9091
  %alfa46 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %44, i32 0, i32 1, !dbg !9092
  %45 = load float, float* %alfa46, align 4, !dbg !9092
  %mul47 = fmul float %43, %45, !dbg !9093
  %arrayidx48 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 1, !dbg !9094
  %46 = load float, float* %arrayidx48, align 4, !dbg !9094
  %47 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt.addr, align 8, !dbg !9095
  %alfa49 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %47, i32 0, i32 1, !dbg !9096
  %48 = load float, float* %alfa49, align 4, !dbg !9096
  %mul50 = fmul float %46, %48, !dbg !9097
  %add51 = fadd float %mul47, %mul50, !dbg !9098
  %arrayidx52 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 2, !dbg !9099
  %49 = load float, float* %arrayidx52, align 8, !dbg !9099
  %50 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !9100
  %alfa53 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %50, i32 0, i32 1, !dbg !9101
  %51 = load float, float* %alfa53, align 4, !dbg !9101
  %mul54 = fmul float %49, %51, !dbg !9102
  %add55 = fadd float %add51, %mul54, !dbg !9103
  %arrayidx56 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 3, !dbg !9104
  %52 = load float, float* %arrayidx56, align 4, !dbg !9104
  %53 = load %struct.BezTriple*, %struct.BezTriple** %next, align 8, !dbg !9105
  %alfa57 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %53, i32 0, i32 1, !dbg !9106
  %54 = load float, float* %alfa57, align 4, !dbg !9106
  %mul58 = fmul float %52, %54, !dbg !9107
  %add59 = fadd float %add55, %mul58, !dbg !9108
  %55 = load float*, float** %tilt_array.addr, align 8, !dbg !9109
  store float %add59, float* %55, align 4, !dbg !9110
  br label %if.end60

if.end60:                                         ; preds = %if.else43, %if.then33
  %56 = load float*, float** %tilt_array.addr, align 8, !dbg !9111
  %57 = bitcast float* %56 to i8*, !dbg !9112
  %58 = load i32, i32* %stride.addr, align 4, !dbg !9113
  %idx.ext61 = sext i32 %58 to i64, !dbg !9114
  %add.ptr62 = getelementptr inbounds i8, i8* %57, i64 %idx.ext61, !dbg !9114
  %59 = bitcast i8* %add.ptr62 to float*, !dbg !9115
  store float* %59, float** %tilt_array.addr, align 8, !dbg !9116
  br label %if.end63, !dbg !9117

if.end63:                                         ; preds = %if.end60, %for.body
  %60 = load float*, float** %radius_array.addr, align 8, !dbg !9118
  %tobool64 = icmp ne float* %60, null, !dbg !9118
  br i1 %tobool64, label %if.then65, label %if.end113, !dbg !9120

if.then65:                                        ; preds = %if.end63
  %61 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !9121
  %radius_interp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %61, i32 0, i32 20, !dbg !9124
  %62 = load i16, i16* %radius_interp, align 2, !dbg !9124
  %conv66 = sext i16 %62 to i32, !dbg !9121
  %cmp67 = icmp eq i32 %conv66, 3, !dbg !9125
  br i1 %cmp67, label %if.then69, label %if.else81, !dbg !9126

if.then69:                                        ; preds = %if.then65
  %63 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt.addr, align 8, !dbg !9127
  %radius = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %63, i32 0, i32 3, !dbg !9129
  %64 = load float, float* %radius, align 4, !dbg !9129
  %65 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !9130
  %radius70 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %65, i32 0, i32 3, !dbg !9131
  %66 = load float, float* %radius70, align 4, !dbg !9131
  %67 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt.addr, align 8, !dbg !9132
  %radius71 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %67, i32 0, i32 3, !dbg !9133
  %68 = load float, float* %radius71, align 4, !dbg !9133
  %sub72 = fsub float %66, %68, !dbg !9134
  %69 = load float, float* %fac, align 4, !dbg !9135
  %mul73 = fmul float 3.000000e+00, %69, !dbg !9136
  %70 = load float, float* %fac, align 4, !dbg !9137
  %mul74 = fmul float %mul73, %70, !dbg !9138
  %71 = load float, float* %fac, align 4, !dbg !9139
  %mul75 = fmul float 2.000000e+00, %71, !dbg !9140
  %72 = load float, float* %fac, align 4, !dbg !9141
  %mul76 = fmul float %mul75, %72, !dbg !9142
  %73 = load float, float* %fac, align 4, !dbg !9143
  %mul77 = fmul float %mul76, %73, !dbg !9144
  %sub78 = fsub float %mul74, %mul77, !dbg !9145
  %mul79 = fmul float %sub72, %sub78, !dbg !9146
  %add80 = fadd float %64, %mul79, !dbg !9147
  %74 = load float*, float** %radius_array.addr, align 8, !dbg !9148
  store float %add80, float* %74, align 4, !dbg !9149
  br label %if.end110, !dbg !9150

if.else81:                                        ; preds = %if.then65
  %75 = load float*, float** %tilt_array.addr, align 8, !dbg !9151
  %cmp82 = icmp eq float* %75, null, !dbg !9154
  br i1 %cmp82, label %if.then90, label %lor.lhs.false, !dbg !9155

lor.lhs.false:                                    ; preds = %if.else81
  %76 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !9156
  %tilt_interp84 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %76, i32 0, i32 19, !dbg !9157
  %77 = load i16, i16* %tilt_interp84, align 8, !dbg !9157
  %conv85 = sext i16 %77 to i32, !dbg !9156
  %78 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !9158
  %radius_interp86 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %78, i32 0, i32 20, !dbg !9159
  %79 = load i16, i16* %radius_interp86, align 2, !dbg !9159
  %conv87 = sext i16 %79 to i32, !dbg !9158
  %cmp88 = icmp ne i32 %conv85, %conv87, !dbg !9160
  br i1 %cmp88, label %if.then90, label %if.end94, !dbg !9161

if.then90:                                        ; preds = %lor.lhs.false, %if.else81
  %80 = load float, float* %fac, align 4, !dbg !9162
  %arraydecay91 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 0, !dbg !9164
  %81 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !9165
  %radius_interp92 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %81, i32 0, i32 20, !dbg !9166
  %82 = load i16, i16* %radius_interp92, align 2, !dbg !9166
  %conv93 = sext i16 %82 to i32, !dbg !9165
  call void @key_curve_position_weights(float %80, float* %arraydecay91, i32 %conv93), !dbg !9167
  br label %if.end94, !dbg !9168

if.end94:                                         ; preds = %if.then90, %lor.lhs.false
  %arrayidx95 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 0, !dbg !9169
  %83 = load float, float* %arrayidx95, align 16, !dbg !9169
  %84 = load %struct.BezTriple*, %struct.BezTriple** %pprev, align 8, !dbg !9170
  %radius96 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %84, i32 0, i32 3, !dbg !9171
  %85 = load float, float* %radius96, align 4, !dbg !9171
  %mul97 = fmul float %83, %85, !dbg !9172
  %arrayidx98 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 1, !dbg !9173
  %86 = load float, float* %arrayidx98, align 4, !dbg !9173
  %87 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt.addr, align 8, !dbg !9174
  %radius99 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %87, i32 0, i32 3, !dbg !9175
  %88 = load float, float* %radius99, align 4, !dbg !9175
  %mul100 = fmul float %86, %88, !dbg !9176
  %add101 = fadd float %mul97, %mul100, !dbg !9177
  %arrayidx102 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 2, !dbg !9178
  %89 = load float, float* %arrayidx102, align 8, !dbg !9178
  %90 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !9179
  %radius103 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %90, i32 0, i32 3, !dbg !9180
  %91 = load float, float* %radius103, align 4, !dbg !9180
  %mul104 = fmul float %89, %91, !dbg !9181
  %add105 = fadd float %add101, %mul104, !dbg !9182
  %arrayidx106 = getelementptr inbounds [4 x float], [4 x float]* %t, i64 0, i64 3, !dbg !9183
  %92 = load float, float* %arrayidx106, align 4, !dbg !9183
  %93 = load %struct.BezTriple*, %struct.BezTriple** %next, align 8, !dbg !9184
  %radius107 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %93, i32 0, i32 3, !dbg !9185
  %94 = load float, float* %radius107, align 4, !dbg !9185
  %mul108 = fmul float %92, %94, !dbg !9186
  %add109 = fadd float %add105, %mul108, !dbg !9187
  %95 = load float*, float** %radius_array.addr, align 8, !dbg !9188
  store float %add109, float* %95, align 4, !dbg !9189
  br label %if.end110

if.end110:                                        ; preds = %if.end94, %if.then69
  %96 = load float*, float** %radius_array.addr, align 8, !dbg !9190
  %97 = bitcast float* %96 to i8*, !dbg !9191
  %98 = load i32, i32* %stride.addr, align 4, !dbg !9192
  %idx.ext111 = sext i32 %98 to i64, !dbg !9193
  %add.ptr112 = getelementptr inbounds i8, i8* %97, i64 %idx.ext111, !dbg !9193
  %99 = bitcast i8* %add.ptr112 to float*, !dbg !9194
  store float* %99, float** %radius_array.addr, align 8, !dbg !9195
  br label %if.end113, !dbg !9196

if.end113:                                        ; preds = %if.end110, %if.end63
  %100 = load float*, float** %weight_array.addr, align 8, !dbg !9197
  %tobool114 = icmp ne float* %100, null, !dbg !9197
  br i1 %tobool114, label %if.then115, label %if.end129, !dbg !9199

if.then115:                                       ; preds = %if.end113
  %101 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt.addr, align 8, !dbg !9200
  %weight = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %101, i32 0, i32 2, !dbg !9202
  %102 = load float, float* %weight, align 4, !dbg !9202
  %103 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !9203
  %weight116 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %103, i32 0, i32 2, !dbg !9204
  %104 = load float, float* %weight116, align 4, !dbg !9204
  %105 = load %struct.BezTriple*, %struct.BezTriple** %prevbezt.addr, align 8, !dbg !9205
  %weight117 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %105, i32 0, i32 2, !dbg !9206
  %106 = load float, float* %weight117, align 4, !dbg !9206
  %sub118 = fsub float %104, %106, !dbg !9207
  %107 = load float, float* %fac, align 4, !dbg !9208
  %mul119 = fmul float 3.000000e+00, %107, !dbg !9209
  %108 = load float, float* %fac, align 4, !dbg !9210
  %mul120 = fmul float %mul119, %108, !dbg !9211
  %109 = load float, float* %fac, align 4, !dbg !9212
  %mul121 = fmul float 2.000000e+00, %109, !dbg !9213
  %110 = load float, float* %fac, align 4, !dbg !9214
  %mul122 = fmul float %mul121, %110, !dbg !9215
  %111 = load float, float* %fac, align 4, !dbg !9216
  %mul123 = fmul float %mul122, %111, !dbg !9217
  %sub124 = fsub float %mul120, %mul123, !dbg !9218
  %mul125 = fmul float %sub118, %sub124, !dbg !9219
  %add126 = fadd float %102, %mul125, !dbg !9220
  %112 = load float*, float** %weight_array.addr, align 8, !dbg !9221
  store float %add126, float* %112, align 4, !dbg !9222
  %113 = load float*, float** %weight_array.addr, align 8, !dbg !9223
  %114 = bitcast float* %113 to i8*, !dbg !9224
  %115 = load i32, i32* %stride.addr, align 4, !dbg !9225
  %idx.ext127 = sext i32 %115 to i64, !dbg !9226
  %add.ptr128 = getelementptr inbounds i8, i8* %114, i64 %idx.ext127, !dbg !9226
  %116 = bitcast i8* %add.ptr128 to float*, !dbg !9227
  store float* %116, float** %weight_array.addr, align 8, !dbg !9228
  br label %if.end129, !dbg !9229

if.end129:                                        ; preds = %if.then115, %if.end113
  br label %for.inc, !dbg !9230

for.inc:                                          ; preds = %if.end129
  %117 = load i32, i32* %a, align 4, !dbg !9231
  %inc = add nsw i32 %117, 1, !dbg !9231
  store i32 %inc, i32* %a, align 4, !dbg !9231
  %118 = load float, float* %dfac, align 4, !dbg !9232
  %119 = load float, float* %fac, align 4, !dbg !9233
  %add130 = fadd float %119, %118, !dbg !9233
  store float %add130, float* %fac, align 4, !dbg !9233
  br label %for.cond, !dbg !9234, !llvm.loop !9235

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !9237
}

; Function Attrs: noinline nounwind uwtable
define internal void @forward_diff_bezier_cotangent(float* %p0, float* %p1, float* %p2, float* %p3, float* %p, i32 %it, i32 %stride) #0 !dbg !9238 {
entry:
  %p0.addr = alloca float*, align 8
  %p1.addr = alloca float*, align 8
  %p2.addr = alloca float*, align 8
  %p3.addr = alloca float*, align 8
  %p.addr = alloca float*, align 8
  %it.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %a = alloca i32, align 4
  %t = alloca float, align 4
  %i = alloca i32, align 4
  store float* %p0, float** %p0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p0.addr, metadata !9241, metadata !DIExpression()), !dbg !9242
  store float* %p1, float** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p1.addr, metadata !9243, metadata !DIExpression()), !dbg !9244
  store float* %p2, float** %p2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p2.addr, metadata !9245, metadata !DIExpression()), !dbg !9246
  store float* %p3, float** %p3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p3.addr, metadata !9247, metadata !DIExpression()), !dbg !9248
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !9249, metadata !DIExpression()), !dbg !9250
  store i32 %it, i32* %it.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %it.addr, metadata !9251, metadata !DIExpression()), !dbg !9252
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !9253, metadata !DIExpression()), !dbg !9254
  call void @llvm.dbg.declare(metadata i32* %a, metadata !9255, metadata !DIExpression()), !dbg !9256
  store i32 0, i32* %a, align 4, !dbg !9257
  br label %for.cond, !dbg !9259

for.cond:                                         ; preds = %for.inc25, %entry
  %0 = load i32, i32* %a, align 4, !dbg !9260
  %1 = load i32, i32* %it.addr, align 4, !dbg !9262
  %cmp = icmp sle i32 %0, %1, !dbg !9263
  br i1 %cmp, label %for.body, label %for.end27, !dbg !9264

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %t, metadata !9265, metadata !DIExpression()), !dbg !9267
  %2 = load i32, i32* %a, align 4, !dbg !9268
  %conv = sitofp i32 %2 to float, !dbg !9269
  %3 = load i32, i32* %it.addr, align 4, !dbg !9270
  %conv1 = sitofp i32 %3 to float, !dbg !9271
  %div = fdiv float %conv, %conv1, !dbg !9272
  store float %div, float* %t, align 4, !dbg !9267
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9273, metadata !DIExpression()), !dbg !9274
  store i32 0, i32* %i, align 4, !dbg !9275
  br label %for.cond2, !dbg !9277

for.cond2:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %i, align 4, !dbg !9278
  %cmp3 = icmp slt i32 %4, 3, !dbg !9280
  br i1 %cmp3, label %for.body5, label %for.end, !dbg !9281

for.body5:                                        ; preds = %for.cond2
  %5 = load float, float* %t, align 4, !dbg !9282
  %mul = fmul float -6.000000e+00, %5, !dbg !9284
  %add = fadd float %mul, 6.000000e+00, !dbg !9285
  %6 = load float*, float** %p0.addr, align 8, !dbg !9286
  %7 = load i32, i32* %i, align 4, !dbg !9287
  %idxprom = sext i32 %7 to i64, !dbg !9286
  %arrayidx = getelementptr inbounds float, float* %6, i64 %idxprom, !dbg !9286
  %8 = load float, float* %arrayidx, align 4, !dbg !9286
  %mul6 = fmul float %add, %8, !dbg !9288
  %9 = load float, float* %t, align 4, !dbg !9289
  %mul7 = fmul float 1.800000e+01, %9, !dbg !9290
  %sub = fsub float %mul7, 1.200000e+01, !dbg !9291
  %10 = load float*, float** %p1.addr, align 8, !dbg !9292
  %11 = load i32, i32* %i, align 4, !dbg !9293
  %idxprom8 = sext i32 %11 to i64, !dbg !9292
  %arrayidx9 = getelementptr inbounds float, float* %10, i64 %idxprom8, !dbg !9292
  %12 = load float, float* %arrayidx9, align 4, !dbg !9292
  %mul10 = fmul float %sub, %12, !dbg !9294
  %add11 = fadd float %mul6, %mul10, !dbg !9295
  %13 = load float, float* %t, align 4, !dbg !9296
  %mul12 = fmul float -1.800000e+01, %13, !dbg !9297
  %add13 = fadd float %mul12, 6.000000e+00, !dbg !9298
  %14 = load float*, float** %p2.addr, align 8, !dbg !9299
  %15 = load i32, i32* %i, align 4, !dbg !9300
  %idxprom14 = sext i32 %15 to i64, !dbg !9299
  %arrayidx15 = getelementptr inbounds float, float* %14, i64 %idxprom14, !dbg !9299
  %16 = load float, float* %arrayidx15, align 4, !dbg !9299
  %mul16 = fmul float %add13, %16, !dbg !9301
  %add17 = fadd float %add11, %mul16, !dbg !9302
  %17 = load float, float* %t, align 4, !dbg !9303
  %mul18 = fmul float 6.000000e+00, %17, !dbg !9304
  %18 = load float*, float** %p3.addr, align 8, !dbg !9305
  %19 = load i32, i32* %i, align 4, !dbg !9306
  %idxprom19 = sext i32 %19 to i64, !dbg !9305
  %arrayidx20 = getelementptr inbounds float, float* %18, i64 %idxprom19, !dbg !9305
  %20 = load float, float* %arrayidx20, align 4, !dbg !9305
  %mul21 = fmul float %mul18, %20, !dbg !9307
  %add22 = fadd float %add17, %mul21, !dbg !9308
  %21 = load float*, float** %p.addr, align 8, !dbg !9309
  %22 = load i32, i32* %i, align 4, !dbg !9310
  %idxprom23 = sext i32 %22 to i64, !dbg !9309
  %arrayidx24 = getelementptr inbounds float, float* %21, i64 %idxprom23, !dbg !9309
  store float %add22, float* %arrayidx24, align 4, !dbg !9311
  br label %for.inc, !dbg !9312

for.inc:                                          ; preds = %for.body5
  %23 = load i32, i32* %i, align 4, !dbg !9313
  %inc = add nsw i32 %23, 1, !dbg !9313
  store i32 %inc, i32* %i, align 4, !dbg !9313
  br label %for.cond2, !dbg !9314, !llvm.loop !9315

for.end:                                          ; preds = %for.cond2
  %24 = load float*, float** %p.addr, align 8, !dbg !9317
  %call = call float @normalize_v3(float* %24), !dbg !9318
  %25 = load float*, float** %p.addr, align 8, !dbg !9319
  %26 = bitcast float* %25 to i8*, !dbg !9320
  %27 = load i32, i32* %stride.addr, align 4, !dbg !9321
  %idx.ext = sext i32 %27 to i64, !dbg !9322
  %add.ptr = getelementptr inbounds i8, i8* %26, i64 %idx.ext, !dbg !9322
  %28 = bitcast i8* %add.ptr to float*, !dbg !9323
  store float* %28, float** %p.addr, align 8, !dbg !9324
  br label %for.inc25, !dbg !9325

for.inc25:                                        ; preds = %for.end
  %29 = load i32, i32* %a, align 4, !dbg !9326
  %inc26 = add nsw i32 %29, 1, !dbg !9326
  store i32 %inc26, i32* %a, align 4, !dbg !9326
  br label %for.cond, !dbg !9327, !llvm.loop !9328

for.end27:                                        ; preds = %for.cond
  ret void, !dbg !9330
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #2

declare dso_local void @BLI_insertlinkbefore(%struct.ListBase*, i8*, i8*) #2

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @vergxcobev(i8* %a1, i8* %a2) #0 !dbg !9331 {
entry:
  %retval = alloca i32, align 4
  %a1.addr = alloca i8*, align 8
  %a2.addr = alloca i8*, align 8
  %x1 = alloca %struct.BevelSort*, align 8
  %x2 = alloca %struct.BevelSort*, align 8
  store i8* %a1, i8** %a1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a1.addr, metadata !9336, metadata !DIExpression()), !dbg !9337
  store i8* %a2, i8** %a2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a2.addr, metadata !9338, metadata !DIExpression()), !dbg !9339
  call void @llvm.dbg.declare(metadata %struct.BevelSort** %x1, metadata !9340, metadata !DIExpression()), !dbg !9343
  %0 = load i8*, i8** %a1.addr, align 8, !dbg !9344
  %1 = bitcast i8* %0 to %struct.BevelSort*, !dbg !9344
  store %struct.BevelSort* %1, %struct.BevelSort** %x1, align 8, !dbg !9343
  call void @llvm.dbg.declare(metadata %struct.BevelSort** %x2, metadata !9345, metadata !DIExpression()), !dbg !9346
  %2 = load i8*, i8** %a2.addr, align 8, !dbg !9347
  %3 = bitcast i8* %2 to %struct.BevelSort*, !dbg !9347
  store %struct.BevelSort* %3, %struct.BevelSort** %x2, align 8, !dbg !9346
  %4 = load %struct.BevelSort*, %struct.BevelSort** %x1, align 8, !dbg !9348
  %left = getelementptr inbounds %struct.BevelSort, %struct.BevelSort* %4, i32 0, i32 1, !dbg !9350
  %5 = load float, float* %left, align 8, !dbg !9350
  %6 = load %struct.BevelSort*, %struct.BevelSort** %x2, align 8, !dbg !9351
  %left1 = getelementptr inbounds %struct.BevelSort, %struct.BevelSort* %6, i32 0, i32 1, !dbg !9352
  %7 = load float, float* %left1, align 8, !dbg !9352
  %cmp = fcmp ogt float %5, %7, !dbg !9353
  br i1 %cmp, label %if.then, label %if.else, !dbg !9354

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !9355
  br label %return, !dbg !9355

if.else:                                          ; preds = %entry
  %8 = load %struct.BevelSort*, %struct.BevelSort** %x1, align 8, !dbg !9356
  %left2 = getelementptr inbounds %struct.BevelSort, %struct.BevelSort* %8, i32 0, i32 1, !dbg !9358
  %9 = load float, float* %left2, align 8, !dbg !9358
  %10 = load %struct.BevelSort*, %struct.BevelSort** %x2, align 8, !dbg !9359
  %left3 = getelementptr inbounds %struct.BevelSort, %struct.BevelSort* %10, i32 0, i32 1, !dbg !9360
  %11 = load float, float* %left3, align 8, !dbg !9360
  %cmp4 = fcmp olt float %9, %11, !dbg !9361
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !9362

if.then5:                                         ; preds = %if.else
  store i32 -1, i32* %retval, align 4, !dbg !9363
  br label %return, !dbg !9363

if.end:                                           ; preds = %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9364
  br label %return, !dbg !9364

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !9365
  ret i32 %12, !dbg !9365
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @bevelinside(%struct.BevList* %bl1, %struct.BevList* %bl2) #0 !dbg !9366 {
entry:
  %bl1.addr = alloca %struct.BevList*, align 8
  %bl2.addr = alloca %struct.BevList*, align 8
  %bevp = alloca %struct.BevPoint*, align 8
  %prevbevp = alloca %struct.BevPoint*, align 8
  %min = alloca float, align 4
  %max = alloca float, align 4
  %vec = alloca [3 x float], align 4
  %hvec1 = alloca [3 x float], align 4
  %hvec2 = alloca [3 x float], align 4
  %lab = alloca float, align 4
  %mu = alloca float, align 4
  %nr = alloca i32, align 4
  %links = alloca i32, align 4
  %rechts = alloca i32, align 4
  %mode = alloca i32, align 4
  store %struct.BevList* %bl1, %struct.BevList** %bl1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BevList** %bl1.addr, metadata !9369, metadata !DIExpression()), !dbg !9370
  store %struct.BevList* %bl2, %struct.BevList** %bl2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BevList** %bl2.addr, metadata !9371, metadata !DIExpression()), !dbg !9372
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp, metadata !9373, metadata !DIExpression()), !dbg !9374
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %prevbevp, metadata !9375, metadata !DIExpression()), !dbg !9376
  call void @llvm.dbg.declare(metadata float* %min, metadata !9377, metadata !DIExpression()), !dbg !9378
  call void @llvm.dbg.declare(metadata float* %max, metadata !9379, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !9381, metadata !DIExpression()), !dbg !9382
  call void @llvm.dbg.declare(metadata [3 x float]* %hvec1, metadata !9383, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.declare(metadata [3 x float]* %hvec2, metadata !9385, metadata !DIExpression()), !dbg !9386
  call void @llvm.dbg.declare(metadata float* %lab, metadata !9387, metadata !DIExpression()), !dbg !9388
  call void @llvm.dbg.declare(metadata float* %mu, metadata !9389, metadata !DIExpression()), !dbg !9390
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !9391, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.declare(metadata i32* %links, metadata !9393, metadata !DIExpression()), !dbg !9394
  store i32 0, i32* %links, align 4, !dbg !9394
  call void @llvm.dbg.declare(metadata i32* %rechts, metadata !9395, metadata !DIExpression()), !dbg !9396
  store i32 0, i32* %rechts, align 4, !dbg !9396
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !9397, metadata !DIExpression()), !dbg !9398
  %0 = load %struct.BevList*, %struct.BevList** %bl2.addr, align 8, !dbg !9399
  %bevpoints = getelementptr inbounds %struct.BevList, %struct.BevList* %0, i32 0, i32 9, !dbg !9400
  %arraydecay = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints, i64 0, i64 0, !dbg !9399
  store %struct.BevPoint* %arraydecay, %struct.BevPoint** %bevp, align 8, !dbg !9401
  %1 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !9402
  %vec1 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %1, i32 0, i32 0, !dbg !9403
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %vec1, i64 0, i64 0, !dbg !9402
  %2 = load float, float* %arrayidx, align 4, !dbg !9402
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %hvec1, i64 0, i64 0, !dbg !9404
  store float %2, float* %arrayidx2, align 4, !dbg !9405
  %3 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !9406
  %vec3 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %3, i32 0, i32 0, !dbg !9407
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %vec3, i64 0, i64 1, !dbg !9406
  %4 = load float, float* %arrayidx4, align 4, !dbg !9406
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %hvec1, i64 0, i64 1, !dbg !9408
  store float %4, float* %arrayidx5, align 4, !dbg !9409
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %hvec1, i64 0, i64 2, !dbg !9410
  store float 0.000000e+00, float* %arrayidx6, align 4, !dbg !9411
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %hvec2, i64 0, i64 0, !dbg !9412
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %hvec1, i64 0, i64 0, !dbg !9413
  call void @copy_v3_v3(float* %arraydecay7, float* %arraydecay8), !dbg !9414
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %hvec2, i64 0, i64 0, !dbg !9415
  %5 = load float, float* %arrayidx9, align 4, !dbg !9416
  %add = fadd float %5, 1.000000e+03, !dbg !9416
  store float %add, float* %arrayidx9, align 4, !dbg !9416
  %6 = load %struct.BevList*, %struct.BevList** %bl1.addr, align 8, !dbg !9417
  %bevpoints10 = getelementptr inbounds %struct.BevList, %struct.BevList* %6, i32 0, i32 9, !dbg !9418
  %arraydecay11 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints10, i64 0, i64 0, !dbg !9417
  store %struct.BevPoint* %arraydecay11, %struct.BevPoint** %bevp, align 8, !dbg !9419
  %7 = load %struct.BevList*, %struct.BevList** %bl1.addr, align 8, !dbg !9420
  %nr12 = getelementptr inbounds %struct.BevList, %struct.BevList* %7, i32 0, i32 2, !dbg !9421
  %8 = load i32, i32* %nr12, align 8, !dbg !9421
  store i32 %8, i32* %nr, align 4, !dbg !9422
  %9 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !9423
  %10 = load i32, i32* %nr, align 4, !dbg !9424
  %sub = sub nsw i32 %10, 1, !dbg !9425
  %idx.ext = sext i32 %sub to i64, !dbg !9426
  %add.ptr = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %9, i64 %idx.ext, !dbg !9426
  store %struct.BevPoint* %add.ptr, %struct.BevPoint** %prevbevp, align 8, !dbg !9427
  br label %while.cond, !dbg !9428

while.cond:                                       ; preds = %if.end45, %entry
  %11 = load i32, i32* %nr, align 4, !dbg !9429
  %dec = add nsw i32 %11, -1, !dbg !9429
  store i32 %dec, i32* %nr, align 4, !dbg !9429
  %tobool = icmp ne i32 %11, 0, !dbg !9428
  br i1 %tobool, label %while.body, label %while.end, !dbg !9428

while.body:                                       ; preds = %while.cond
  %12 = load %struct.BevPoint*, %struct.BevPoint** %prevbevp, align 8, !dbg !9430
  %vec13 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %12, i32 0, i32 0, !dbg !9432
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %vec13, i64 0, i64 1, !dbg !9430
  %13 = load float, float* %arrayidx14, align 4, !dbg !9430
  store float %13, float* %min, align 4, !dbg !9433
  %14 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !9434
  %vec15 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %14, i32 0, i32 0, !dbg !9435
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %vec15, i64 0, i64 1, !dbg !9434
  %15 = load float, float* %arrayidx16, align 4, !dbg !9434
  store float %15, float* %max, align 4, !dbg !9436
  %16 = load float, float* %max, align 4, !dbg !9437
  %17 = load float, float* %min, align 4, !dbg !9439
  %cmp = fcmp olt float %16, %17, !dbg !9440
  br i1 %cmp, label %if.then, label %if.end, !dbg !9441

if.then:                                          ; preds = %while.body
  %18 = load float, float* %max, align 4, !dbg !9442
  store float %18, float* %min, align 4, !dbg !9444
  %19 = load %struct.BevPoint*, %struct.BevPoint** %prevbevp, align 8, !dbg !9445
  %vec17 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %19, i32 0, i32 0, !dbg !9446
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %vec17, i64 0, i64 1, !dbg !9445
  %20 = load float, float* %arrayidx18, align 4, !dbg !9445
  store float %20, float* %max, align 4, !dbg !9447
  br label %if.end, !dbg !9448

if.end:                                           ; preds = %if.then, %while.body
  %21 = load float, float* %min, align 4, !dbg !9449
  %22 = load float, float* %max, align 4, !dbg !9451
  %cmp19 = fcmp une float %21, %22, !dbg !9452
  br i1 %cmp19, label %if.then20, label %if.end45, !dbg !9453

if.then20:                                        ; preds = %if.end
  %23 = load float, float* %min, align 4, !dbg !9454
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %hvec1, i64 0, i64 1, !dbg !9457
  %24 = load float, float* %arrayidx21, align 4, !dbg !9457
  %cmp22 = fcmp ole float %23, %24, !dbg !9458
  br i1 %cmp22, label %land.lhs.true, label %if.end44, !dbg !9459

land.lhs.true:                                    ; preds = %if.then20
  %25 = load float, float* %max, align 4, !dbg !9460
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %hvec1, i64 0, i64 1, !dbg !9461
  %26 = load float, float* %arrayidx23, align 4, !dbg !9461
  %cmp24 = fcmp oge float %25, %26, !dbg !9462
  br i1 %cmp24, label %if.then25, label %if.end44, !dbg !9463

if.then25:                                        ; preds = %land.lhs.true
  %27 = load %struct.BevPoint*, %struct.BevPoint** %prevbevp, align 8, !dbg !9464
  %vec26 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %27, i32 0, i32 0, !dbg !9466
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %vec26, i64 0, i64 0, !dbg !9464
  %28 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !9467
  %vec28 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %28, i32 0, i32 0, !dbg !9468
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %vec28, i64 0, i64 0, !dbg !9467
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %hvec1, i64 0, i64 0, !dbg !9469
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %hvec2, i64 0, i64 0, !dbg !9470
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9471
  %call = call i32 @cu_isectLL(float* %arraydecay27, float* %arraydecay29, float* %arraydecay30, float* %arraydecay31, i16 signext 0, i16 signext 1, float* %lab, float* %mu, float* %arraydecay32), !dbg !9472
  store i32 %call, i32* %mode, align 4, !dbg !9473
  %29 = load i32, i32* %mode, align 4, !dbg !9474
  %cmp33 = icmp sge i32 %29, 0, !dbg !9476
  br i1 %cmp33, label %land.lhs.true34, label %if.end43, !dbg !9477

land.lhs.true34:                                  ; preds = %if.then25
  %30 = load float, float* %lab, align 4, !dbg !9478
  %cmp35 = fcmp une float %30, 0.000000e+00, !dbg !9479
  br i1 %cmp35, label %if.then36, label %if.end43, !dbg !9480

if.then36:                                        ; preds = %land.lhs.true34
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9481
  %31 = load float, float* %arrayidx37, align 4, !dbg !9481
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %hvec1, i64 0, i64 0, !dbg !9484
  %32 = load float, float* %arrayidx38, align 4, !dbg !9484
  %cmp39 = fcmp olt float %31, %32, !dbg !9485
  br i1 %cmp39, label %if.then40, label %if.else, !dbg !9486

if.then40:                                        ; preds = %if.then36
  %33 = load i32, i32* %links, align 4, !dbg !9487
  %inc = add nsw i32 %33, 1, !dbg !9487
  store i32 %inc, i32* %links, align 4, !dbg !9487
  br label %if.end42, !dbg !9488

if.else:                                          ; preds = %if.then36
  %34 = load i32, i32* %rechts, align 4, !dbg !9489
  %inc41 = add nsw i32 %34, 1, !dbg !9489
  store i32 %inc41, i32* %rechts, align 4, !dbg !9489
  br label %if.end42

if.end42:                                         ; preds = %if.else, %if.then40
  br label %if.end43, !dbg !9490

if.end43:                                         ; preds = %if.end42, %land.lhs.true34, %if.then25
  br label %if.end44, !dbg !9491

if.end44:                                         ; preds = %if.end43, %land.lhs.true, %if.then20
  br label %if.end45, !dbg !9492

if.end45:                                         ; preds = %if.end44, %if.end
  %35 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !9493
  store %struct.BevPoint* %35, %struct.BevPoint** %prevbevp, align 8, !dbg !9494
  %36 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !9495
  %incdec.ptr = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %36, i32 1, !dbg !9495
  store %struct.BevPoint* %incdec.ptr, %struct.BevPoint** %bevp, align 8, !dbg !9495
  br label %while.cond, !dbg !9428, !llvm.loop !9496

while.end:                                        ; preds = %while.cond
  %37 = load i32, i32* %links, align 4, !dbg !9498
  %and = and i32 %37, 1, !dbg !9499
  %tobool46 = icmp ne i32 %and, 0, !dbg !9499
  br i1 %tobool46, label %land.rhs, label %land.end, !dbg !9500

land.rhs:                                         ; preds = %while.end
  %38 = load i32, i32* %rechts, align 4, !dbg !9501
  %and47 = and i32 %38, 1, !dbg !9502
  %tobool48 = icmp ne i32 %and47, 0, !dbg !9500
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.end
  %39 = phi i1 [ false, %while.end ], [ %tobool48, %land.rhs ], !dbg !9503
  %land.ext = zext i1 %39 to i32, !dbg !9500
  %conv = trunc i32 %land.ext to i8, !dbg !9504
  ret i8 %conv, !dbg !9505
}

declare dso_local void @unit_qt(float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @make_bevel_list_segment_2D(%struct.BevList* %bl) #0 !dbg !9506 {
entry:
  %bl.addr = alloca %struct.BevList*, align 8
  %bevp2 = alloca %struct.BevPoint*, align 8
  %bevp1 = alloca %struct.BevPoint*, align 8
  %x1 = alloca float, align 4
  %y1 = alloca float, align 4
  store %struct.BevList* %bl, %struct.BevList** %bl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BevList** %bl.addr, metadata !9509, metadata !DIExpression()), !dbg !9510
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp2, metadata !9511, metadata !DIExpression()), !dbg !9512
  %0 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !9513
  %bevpoints = getelementptr inbounds %struct.BevList, %struct.BevList* %0, i32 0, i32 9, !dbg !9514
  %arraydecay = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints, i64 0, i64 0, !dbg !9513
  store %struct.BevPoint* %arraydecay, %struct.BevPoint** %bevp2, align 8, !dbg !9512
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp1, metadata !9515, metadata !DIExpression()), !dbg !9516
  %1 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !9517
  %add.ptr = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %1, i64 1, !dbg !9518
  store %struct.BevPoint* %add.ptr, %struct.BevPoint** %bevp1, align 8, !dbg !9516
  call void @llvm.dbg.declare(metadata float* %x1, metadata !9519, metadata !DIExpression()), !dbg !9520
  %2 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9521
  %vec = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %2, i32 0, i32 0, !dbg !9522
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9521
  %3 = load float, float* %arrayidx, align 4, !dbg !9521
  %4 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !9523
  %vec1 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %4, i32 0, i32 0, !dbg !9524
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %vec1, i64 0, i64 0, !dbg !9523
  %5 = load float, float* %arrayidx2, align 4, !dbg !9523
  %sub = fsub float %3, %5, !dbg !9525
  store float %sub, float* %x1, align 4, !dbg !9520
  call void @llvm.dbg.declare(metadata float* %y1, metadata !9526, metadata !DIExpression()), !dbg !9527
  %6 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9528
  %vec3 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %6, i32 0, i32 0, !dbg !9529
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %vec3, i64 0, i64 1, !dbg !9528
  %7 = load float, float* %arrayidx4, align 4, !dbg !9528
  %8 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !9530
  %vec5 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %8, i32 0, i32 0, !dbg !9531
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %vec5, i64 0, i64 1, !dbg !9530
  %9 = load float, float* %arrayidx6, align 4, !dbg !9530
  %sub7 = fsub float %7, %9, !dbg !9532
  store float %sub7, float* %y1, align 4, !dbg !9527
  %10 = load float, float* %x1, align 4, !dbg !9533
  %11 = load float, float* %y1, align 4, !dbg !9534
  %12 = load float, float* %x1, align 4, !dbg !9535
  %fneg = fneg float %12, !dbg !9536
  %13 = load float, float* %y1, align 4, !dbg !9537
  %fneg8 = fneg float %13, !dbg !9538
  %14 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9539
  %sina = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %14, i32 0, i32 5, !dbg !9540
  %15 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9541
  %cosa = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %15, i32 0, i32 6, !dbg !9542
  call void @calc_bevel_sin_cos(float %10, float %11, float %fneg, float %fneg8, float* %sina, float* %cosa), !dbg !9543
  %16 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9544
  %sina9 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %16, i32 0, i32 5, !dbg !9545
  %17 = load float, float* %sina9, align 4, !dbg !9545
  %18 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !9546
  %sina10 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %18, i32 0, i32 5, !dbg !9547
  store float %17, float* %sina10, align 4, !dbg !9548
  %19 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9549
  %cosa11 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %19, i32 0, i32 6, !dbg !9550
  %20 = load float, float* %cosa11, align 4, !dbg !9550
  %21 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !9551
  %cosa12 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %21, i32 0, i32 6, !dbg !9552
  store float %20, float* %cosa12, align 4, !dbg !9553
  %22 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !9554
  call void @make_bevel_list_segment_3D(%struct.BevList* %22), !dbg !9555
  ret void, !dbg !9556
}

; Function Attrs: noinline nounwind uwtable
define internal void @make_bevel_list_2D(%struct.BevList* %bl) #0 !dbg !9557 {
entry:
  %bl.addr = alloca %struct.BevList*, align 8
  %bevp0 = alloca %struct.BevPoint*, align 8
  %bevp1 = alloca %struct.BevPoint*, align 8
  %bevp2 = alloca %struct.BevPoint*, align 8
  %nr = alloca i32, align 4
  %x1 = alloca float, align 4
  %x2 = alloca float, align 4
  %y1 = alloca float, align 4
  %y2 = alloca float, align 4
  %bevp = alloca %struct.BevPoint*, align 8
  %angle = alloca float, align 4
  store %struct.BevList* %bl, %struct.BevList** %bl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BevList** %bl.addr, metadata !9558, metadata !DIExpression()), !dbg !9559
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp0, metadata !9560, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp1, metadata !9562, metadata !DIExpression()), !dbg !9563
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp2, metadata !9564, metadata !DIExpression()), !dbg !9565
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !9566, metadata !DIExpression()), !dbg !9567
  %0 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !9568
  %poly = getelementptr inbounds %struct.BevList, %struct.BevList* %0, i32 0, i32 4, !dbg !9570
  %1 = load i32, i32* %poly, align 8, !dbg !9570
  %cmp = icmp ne i32 %1, -1, !dbg !9571
  br i1 %cmp, label %if.then, label %if.else, !dbg !9572

if.then:                                          ; preds = %entry
  %2 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !9573
  %bevpoints = getelementptr inbounds %struct.BevList, %struct.BevList* %2, i32 0, i32 9, !dbg !9575
  %arraydecay = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints, i64 0, i64 0, !dbg !9573
  store %struct.BevPoint* %arraydecay, %struct.BevPoint** %bevp2, align 8, !dbg !9576
  %3 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !9577
  %4 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !9578
  %nr1 = getelementptr inbounds %struct.BevList, %struct.BevList* %4, i32 0, i32 2, !dbg !9579
  %5 = load i32, i32* %nr1, align 8, !dbg !9579
  %sub = sub nsw i32 %5, 1, !dbg !9580
  %idx.ext = sext i32 %sub to i64, !dbg !9581
  %add.ptr = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %3, i64 %idx.ext, !dbg !9581
  store %struct.BevPoint* %add.ptr, %struct.BevPoint** %bevp1, align 8, !dbg !9582
  %6 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9583
  %add.ptr2 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %6, i64 -1, !dbg !9584
  store %struct.BevPoint* %add.ptr2, %struct.BevPoint** %bevp0, align 8, !dbg !9585
  %7 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !9586
  %nr3 = getelementptr inbounds %struct.BevList, %struct.BevList* %7, i32 0, i32 2, !dbg !9587
  %8 = load i32, i32* %nr3, align 8, !dbg !9587
  store i32 %8, i32* %nr, align 4, !dbg !9588
  br label %if.end, !dbg !9589

if.else:                                          ; preds = %entry
  %9 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !9590
  %bevpoints4 = getelementptr inbounds %struct.BevList, %struct.BevList* %9, i32 0, i32 9, !dbg !9592
  %arraydecay5 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints4, i64 0, i64 0, !dbg !9590
  store %struct.BevPoint* %arraydecay5, %struct.BevPoint** %bevp0, align 8, !dbg !9593
  %10 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !9594
  %add.ptr6 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %10, i64 1, !dbg !9595
  store %struct.BevPoint* %add.ptr6, %struct.BevPoint** %bevp1, align 8, !dbg !9596
  %11 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9597
  %add.ptr7 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %11, i64 1, !dbg !9598
  store %struct.BevPoint* %add.ptr7, %struct.BevPoint** %bevp2, align 8, !dbg !9599
  %12 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !9600
  %nr8 = getelementptr inbounds %struct.BevList, %struct.BevList* %12, i32 0, i32 2, !dbg !9601
  %13 = load i32, i32* %nr8, align 8, !dbg !9601
  %sub9 = sub nsw i32 %13, 2, !dbg !9602
  store i32 %sub9, i32* %nr, align 4, !dbg !9603
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !9604

while.cond:                                       ; preds = %while.body, %if.end
  %14 = load i32, i32* %nr, align 4, !dbg !9605
  %dec = add nsw i32 %14, -1, !dbg !9605
  store i32 %dec, i32* %nr, align 4, !dbg !9605
  %tobool = icmp ne i32 %14, 0, !dbg !9604
  br i1 %tobool, label %while.body, label %while.end, !dbg !9604

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata float* %x1, metadata !9606, metadata !DIExpression()), !dbg !9608
  %15 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9609
  %vec = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %15, i32 0, i32 0, !dbg !9610
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9609
  %16 = load float, float* %arrayidx, align 4, !dbg !9609
  %17 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !9611
  %vec10 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %17, i32 0, i32 0, !dbg !9612
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %vec10, i64 0, i64 0, !dbg !9611
  %18 = load float, float* %arrayidx11, align 4, !dbg !9611
  %sub12 = fsub float %16, %18, !dbg !9613
  store float %sub12, float* %x1, align 4, !dbg !9608
  call void @llvm.dbg.declare(metadata float* %x2, metadata !9614, metadata !DIExpression()), !dbg !9615
  %19 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9616
  %vec13 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %19, i32 0, i32 0, !dbg !9617
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %vec13, i64 0, i64 0, !dbg !9616
  %20 = load float, float* %arrayidx14, align 4, !dbg !9616
  %21 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !9618
  %vec15 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %21, i32 0, i32 0, !dbg !9619
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %vec15, i64 0, i64 0, !dbg !9618
  %22 = load float, float* %arrayidx16, align 4, !dbg !9618
  %sub17 = fsub float %20, %22, !dbg !9620
  store float %sub17, float* %x2, align 4, !dbg !9615
  call void @llvm.dbg.declare(metadata float* %y1, metadata !9621, metadata !DIExpression()), !dbg !9622
  %23 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9623
  %vec18 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %23, i32 0, i32 0, !dbg !9624
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %vec18, i64 0, i64 1, !dbg !9623
  %24 = load float, float* %arrayidx19, align 4, !dbg !9623
  %25 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !9625
  %vec20 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %25, i32 0, i32 0, !dbg !9626
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %vec20, i64 0, i64 1, !dbg !9625
  %26 = load float, float* %arrayidx21, align 4, !dbg !9625
  %sub22 = fsub float %24, %26, !dbg !9627
  store float %sub22, float* %y1, align 4, !dbg !9622
  call void @llvm.dbg.declare(metadata float* %y2, metadata !9628, metadata !DIExpression()), !dbg !9629
  %27 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9630
  %vec23 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %27, i32 0, i32 0, !dbg !9631
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %vec23, i64 0, i64 1, !dbg !9630
  %28 = load float, float* %arrayidx24, align 4, !dbg !9630
  %29 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !9632
  %vec25 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %29, i32 0, i32 0, !dbg !9633
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %vec25, i64 0, i64 1, !dbg !9632
  %30 = load float, float* %arrayidx26, align 4, !dbg !9632
  %sub27 = fsub float %28, %30, !dbg !9634
  store float %sub27, float* %y2, align 4, !dbg !9629
  %31 = load float, float* %x1, align 4, !dbg !9635
  %32 = load float, float* %y1, align 4, !dbg !9636
  %33 = load float, float* %x2, align 4, !dbg !9637
  %34 = load float, float* %y2, align 4, !dbg !9638
  %35 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9639
  %sina = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %35, i32 0, i32 5, !dbg !9640
  %36 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9641
  %cosa = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %36, i32 0, i32 6, !dbg !9642
  call void @calc_bevel_sin_cos(float %31, float %32, float %33, float %34, float* %sina, float* %cosa), !dbg !9643
  %37 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9644
  %dir = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %37, i32 0, i32 7, !dbg !9645
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !9644
  %38 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !9646
  %vec29 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %38, i32 0, i32 0, !dbg !9647
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %vec29, i64 0, i64 0, !dbg !9646
  %39 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9648
  %vec31 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %39, i32 0, i32 0, !dbg !9649
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %vec31, i64 0, i64 0, !dbg !9648
  %40 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !9650
  %vec33 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %40, i32 0, i32 0, !dbg !9651
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %vec33, i64 0, i64 0, !dbg !9650
  call void @bisect_v3_v3v3v3(float* %arraydecay28, float* %arraydecay30, float* %arraydecay32, float* %arraydecay34), !dbg !9652
  %41 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9653
  %quat = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %41, i32 0, i32 9, !dbg !9654
  %arraydecay35 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !9653
  %42 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9655
  %dir36 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %42, i32 0, i32 7, !dbg !9656
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %dir36, i64 0, i64 0, !dbg !9655
  call void @vec_to_quat(float* %arraydecay35, float* %arraydecay37, i16 signext 5, i16 signext 1), !dbg !9657
  %43 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9658
  store %struct.BevPoint* %43, %struct.BevPoint** %bevp0, align 8, !dbg !9659
  %44 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !9660
  store %struct.BevPoint* %44, %struct.BevPoint** %bevp1, align 8, !dbg !9661
  %45 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !9662
  %incdec.ptr = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %45, i32 1, !dbg !9662
  store %struct.BevPoint* %incdec.ptr, %struct.BevPoint** %bevp2, align 8, !dbg !9662
  br label %while.cond, !dbg !9604, !llvm.loop !9663

while.end:                                        ; preds = %while.cond
  %46 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !9665
  %poly38 = getelementptr inbounds %struct.BevList, %struct.BevList* %46, i32 0, i32 4, !dbg !9667
  %47 = load i32, i32* %poly38, align 8, !dbg !9667
  %cmp39 = icmp eq i32 %47, -1, !dbg !9668
  br i1 %cmp39, label %if.then40, label %if.end76, !dbg !9669

if.then40:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp, metadata !9670, metadata !DIExpression()), !dbg !9672
  call void @llvm.dbg.declare(metadata float* %angle, metadata !9673, metadata !DIExpression()), !dbg !9674
  %48 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !9675
  %bevpoints41 = getelementptr inbounds %struct.BevList, %struct.BevList* %48, i32 0, i32 9, !dbg !9676
  %arraydecay42 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints41, i64 0, i64 0, !dbg !9675
  store %struct.BevPoint* %arraydecay42, %struct.BevPoint** %bevp, align 8, !dbg !9677
  %49 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !9678
  %dir43 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %49, i32 0, i32 7, !dbg !9679
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %dir43, i64 0, i64 0, !dbg !9678
  %50 = load float, float* %arrayidx44, align 4, !dbg !9678
  %51 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !9680
  %dir45 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %51, i32 0, i32 7, !dbg !9681
  %arrayidx46 = getelementptr inbounds [3 x float], [3 x float]* %dir45, i64 0, i64 1, !dbg !9680
  %52 = load float, float* %arrayidx46, align 4, !dbg !9680
  %call = call float @atan2f(float %50, float %52) #5, !dbg !9682
  %sub47 = fsub float %call, 0x3FF921FB60000000, !dbg !9683
  store float %sub47, float* %angle, align 4, !dbg !9684
  %53 = load float, float* %angle, align 4, !dbg !9685
  %call48 = call float @sinf(float %53) #5, !dbg !9686
  %54 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !9687
  %sina49 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %54, i32 0, i32 5, !dbg !9688
  store float %call48, float* %sina49, align 4, !dbg !9689
  %55 = load float, float* %angle, align 4, !dbg !9690
  %call50 = call float @cosf(float %55) #5, !dbg !9691
  %56 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !9692
  %cosa51 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %56, i32 0, i32 6, !dbg !9693
  store float %call50, float* %cosa51, align 4, !dbg !9694
  %57 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !9695
  %quat52 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %57, i32 0, i32 9, !dbg !9696
  %arraydecay53 = getelementptr inbounds [4 x float], [4 x float]* %quat52, i64 0, i64 0, !dbg !9695
  %58 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !9697
  %dir54 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %58, i32 0, i32 7, !dbg !9698
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %dir54, i64 0, i64 0, !dbg !9697
  call void @vec_to_quat(float* %arraydecay53, float* %arraydecay55, i16 signext 5, i16 signext 1), !dbg !9699
  %59 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !9700
  %bevpoints56 = getelementptr inbounds %struct.BevList, %struct.BevList* %59, i32 0, i32 9, !dbg !9701
  %arraydecay57 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints56, i64 0, i64 0, !dbg !9700
  store %struct.BevPoint* %arraydecay57, %struct.BevPoint** %bevp, align 8, !dbg !9702
  %60 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !9703
  %nr58 = getelementptr inbounds %struct.BevList, %struct.BevList* %60, i32 0, i32 2, !dbg !9704
  %61 = load i32, i32* %nr58, align 8, !dbg !9704
  %sub59 = sub nsw i32 %61, 1, !dbg !9705
  %62 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !9706
  %idx.ext60 = sext i32 %sub59 to i64, !dbg !9706
  %add.ptr61 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %62, i64 %idx.ext60, !dbg !9706
  store %struct.BevPoint* %add.ptr61, %struct.BevPoint** %bevp, align 8, !dbg !9706
  %63 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !9707
  %dir62 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %63, i32 0, i32 7, !dbg !9708
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %dir62, i64 0, i64 0, !dbg !9707
  %64 = load float, float* %arrayidx63, align 4, !dbg !9707
  %65 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !9709
  %dir64 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %65, i32 0, i32 7, !dbg !9710
  %arrayidx65 = getelementptr inbounds [3 x float], [3 x float]* %dir64, i64 0, i64 1, !dbg !9709
  %66 = load float, float* %arrayidx65, align 4, !dbg !9709
  %call66 = call float @atan2f(float %64, float %66) #5, !dbg !9711
  %sub67 = fsub float %call66, 0x3FF921FB60000000, !dbg !9712
  store float %sub67, float* %angle, align 4, !dbg !9713
  %67 = load float, float* %angle, align 4, !dbg !9714
  %call68 = call float @sinf(float %67) #5, !dbg !9715
  %68 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !9716
  %sina69 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %68, i32 0, i32 5, !dbg !9717
  store float %call68, float* %sina69, align 4, !dbg !9718
  %69 = load float, float* %angle, align 4, !dbg !9719
  %call70 = call float @cosf(float %69) #5, !dbg !9720
  %70 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !9721
  %cosa71 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %70, i32 0, i32 6, !dbg !9722
  store float %call70, float* %cosa71, align 4, !dbg !9723
  %71 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !9724
  %quat72 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %71, i32 0, i32 9, !dbg !9725
  %arraydecay73 = getelementptr inbounds [4 x float], [4 x float]* %quat72, i64 0, i64 0, !dbg !9724
  %72 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !9726
  %dir74 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %72, i32 0, i32 7, !dbg !9727
  %arraydecay75 = getelementptr inbounds [3 x float], [3 x float]* %dir74, i64 0, i64 0, !dbg !9726
  call void @vec_to_quat(float* %arraydecay73, float* %arraydecay75, i16 signext 5, i16 signext 1), !dbg !9728
  br label %if.end76, !dbg !9729

if.end76:                                         ; preds = %if.then40, %while.end
  ret void, !dbg !9730
}

; Function Attrs: noinline nounwind uwtable
define internal void @make_bevel_list_segment_3D(%struct.BevList* %bl) #0 !dbg !9731 {
entry:
  %bl.addr = alloca %struct.BevList*, align 8
  %q = alloca [4 x float], align 16
  %bevp2 = alloca %struct.BevPoint*, align 8
  %bevp1 = alloca %struct.BevPoint*, align 8
  store %struct.BevList* %bl, %struct.BevList** %bl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BevList** %bl.addr, metadata !9732, metadata !DIExpression()), !dbg !9733
  call void @llvm.dbg.declare(metadata [4 x float]* %q, metadata !9734, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp2, metadata !9736, metadata !DIExpression()), !dbg !9737
  %0 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !9738
  %bevpoints = getelementptr inbounds %struct.BevList, %struct.BevList* %0, i32 0, i32 9, !dbg !9739
  %arraydecay = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints, i64 0, i64 0, !dbg !9738
  store %struct.BevPoint* %arraydecay, %struct.BevPoint** %bevp2, align 8, !dbg !9737
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp1, metadata !9740, metadata !DIExpression()), !dbg !9741
  %1 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !9742
  %add.ptr = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %1, i64 1, !dbg !9743
  store %struct.BevPoint* %add.ptr, %struct.BevPoint** %bevp1, align 8, !dbg !9741
  %2 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9744
  %dir = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %2, i32 0, i32 7, !dbg !9745
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !9744
  %3 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9746
  %vec = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %3, i32 0, i32 0, !dbg !9747
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9746
  %4 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !9748
  %vec3 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %4, i32 0, i32 0, !dbg !9749
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %vec3, i64 0, i64 0, !dbg !9748
  call void @sub_v3_v3v3(float* %arraydecay1, float* %arraydecay2, float* %arraydecay4), !dbg !9750
  %5 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9751
  %dir5 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %5, i32 0, i32 7, !dbg !9752
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %dir5, i64 0, i64 0, !dbg !9751
  %call = call float @normalize_v3(float* %arraydecay6), !dbg !9753
  %6 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9754
  %quat = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %6, i32 0, i32 9, !dbg !9755
  %arraydecay7 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !9754
  %7 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9756
  %dir8 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %7, i32 0, i32 7, !dbg !9757
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %dir8, i64 0, i64 0, !dbg !9756
  call void @vec_to_quat(float* %arraydecay7, float* %arraydecay9, i16 signext 5, i16 signext 1), !dbg !9758
  %arraydecay10 = getelementptr inbounds [4 x float], [4 x float]* %q, i64 0, i64 0, !dbg !9759
  %8 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9760
  %dir11 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %8, i32 0, i32 7, !dbg !9761
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %dir11, i64 0, i64 0, !dbg !9760
  %9 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9762
  %alfa = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %9, i32 0, i32 1, !dbg !9763
  %10 = load float, float* %alfa, align 4, !dbg !9763
  call void @axis_angle_to_quat(float* %arraydecay10, float* %arraydecay12, float %10), !dbg !9764
  %11 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9765
  %quat13 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %11, i32 0, i32 9, !dbg !9766
  %arraydecay14 = getelementptr inbounds [4 x float], [4 x float]* %quat13, i64 0, i64 0, !dbg !9765
  %arraydecay15 = getelementptr inbounds [4 x float], [4 x float]* %q, i64 0, i64 0, !dbg !9767
  %12 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9768
  %quat16 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %12, i32 0, i32 9, !dbg !9769
  %arraydecay17 = getelementptr inbounds [4 x float], [4 x float]* %quat16, i64 0, i64 0, !dbg !9768
  call void @mul_qt_qtqt(float* %arraydecay14, float* %arraydecay15, float* %arraydecay17), !dbg !9770
  %13 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9771
  %quat18 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %13, i32 0, i32 9, !dbg !9772
  %arraydecay19 = getelementptr inbounds [4 x float], [4 x float]* %quat18, i64 0, i64 0, !dbg !9771
  %call20 = call float @normalize_qt(float* %arraydecay19), !dbg !9773
  %14 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !9774
  %dir21 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %14, i32 0, i32 7, !dbg !9775
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %dir21, i64 0, i64 0, !dbg !9774
  %15 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9776
  %dir23 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %15, i32 0, i32 7, !dbg !9777
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %dir23, i64 0, i64 0, !dbg !9776
  call void @copy_v3_v3(float* %arraydecay22, float* %arraydecay24), !dbg !9778
  %16 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !9779
  %quat25 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %16, i32 0, i32 9, !dbg !9780
  %arraydecay26 = getelementptr inbounds [4 x float], [4 x float]* %quat25, i64 0, i64 0, !dbg !9779
  %17 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !9781
  %quat27 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %17, i32 0, i32 9, !dbg !9782
  %arraydecay28 = getelementptr inbounds [4 x float], [4 x float]* %quat27, i64 0, i64 0, !dbg !9781
  call void @copy_qt_qt(float* %arraydecay26, float* %arraydecay28), !dbg !9783
  ret void, !dbg !9784
}

; Function Attrs: noinline nounwind uwtable
define internal void @make_bevel_list_3D(%struct.BevList* %bl, i32 %smooth_iter, i32 %twist_mode) #0 !dbg !9785 {
entry:
  %bl.addr = alloca %struct.BevList*, align 8
  %smooth_iter.addr = alloca i32, align 4
  %twist_mode.addr = alloca i32, align 4
  store %struct.BevList* %bl, %struct.BevList** %bl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BevList** %bl.addr, metadata !9788, metadata !DIExpression()), !dbg !9789
  store i32 %smooth_iter, i32* %smooth_iter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %smooth_iter.addr, metadata !9790, metadata !DIExpression()), !dbg !9791
  store i32 %twist_mode, i32* %twist_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %twist_mode.addr, metadata !9792, metadata !DIExpression()), !dbg !9793
  %0 = load i32, i32* %twist_mode.addr, align 4, !dbg !9794
  switch i32 %0, label %sw.default [
    i32 4, label %sw.bb
    i32 3, label %sw.bb1
  ], !dbg !9795

sw.bb:                                            ; preds = %entry
  %1 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !9796
  call void @make_bevel_list_3D_tangent(%struct.BevList* %1), !dbg !9798
  br label %sw.epilog, !dbg !9799

sw.bb1:                                           ; preds = %entry
  %2 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !9800
  call void @make_bevel_list_3D_minimum_twist(%struct.BevList* %2), !dbg !9801
  br label %sw.epilog, !dbg !9802

sw.default:                                       ; preds = %entry
  %3 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !9803
  call void @make_bevel_list_3D_zup(%struct.BevList* %3), !dbg !9804
  br label %sw.epilog, !dbg !9805

sw.epilog:                                        ; preds = %sw.default, %sw.bb1, %sw.bb
  %4 = load i32, i32* %smooth_iter.addr, align 4, !dbg !9806
  %tobool = icmp ne i32 %4, 0, !dbg !9806
  br i1 %tobool, label %if.then, label %if.end, !dbg !9808

if.then:                                          ; preds = %sw.epilog
  %5 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !9809
  %6 = load i32, i32* %smooth_iter.addr, align 4, !dbg !9810
  call void @bevel_list_smooth(%struct.BevList* %5, i32 %6), !dbg !9811
  br label %if.end, !dbg !9811

if.end:                                           ; preds = %if.then, %sw.epilog
  %7 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !9812
  call void @bevel_list_apply_tilt(%struct.BevList* %7), !dbg !9813
  ret void, !dbg !9814
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurb_handle_calc(%struct.BezTriple* %bezt, %struct.BezTriple* %prev, %struct.BezTriple* %next, i8 zeroext %is_fcurve) #0 !dbg !9815 {
entry:
  %bezt.addr = alloca %struct.BezTriple*, align 8
  %prev.addr = alloca %struct.BezTriple*, align 8
  %next.addr = alloca %struct.BezTriple*, align 8
  %is_fcurve.addr = alloca i8, align 1
  store %struct.BezTriple* %bezt, %struct.BezTriple** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt.addr, metadata !9818, metadata !DIExpression()), !dbg !9819
  store %struct.BezTriple* %prev, %struct.BezTriple** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %prev.addr, metadata !9820, metadata !DIExpression()), !dbg !9821
  store %struct.BezTriple* %next, %struct.BezTriple** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %next.addr, metadata !9822, metadata !DIExpression()), !dbg !9823
  store i8 %is_fcurve, i8* %is_fcurve.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_fcurve.addr, metadata !9824, metadata !DIExpression()), !dbg !9825
  %0 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !9826
  %1 = load %struct.BezTriple*, %struct.BezTriple** %prev.addr, align 8, !dbg !9827
  %2 = load %struct.BezTriple*, %struct.BezTriple** %next.addr, align 8, !dbg !9828
  %3 = load i8, i8* %is_fcurve.addr, align 1, !dbg !9829
  call void @calchandleNurb_intern(%struct.BezTriple* %0, %struct.BezTriple* %1, %struct.BezTriple* %2, i8 zeroext %3, i8 zeroext 0), !dbg !9830
  ret void, !dbg !9831
}

; Function Attrs: noinline nounwind uwtable
define internal void @calchandleNurb_intern(%struct.BezTriple* %bezt, %struct.BezTriple* %prev, %struct.BezTriple* %next, i8 zeroext %is_fcurve, i8 zeroext %skip_align) #0 !dbg !9832 {
entry:
  %bezt.addr = alloca %struct.BezTriple*, align 8
  %prev.addr = alloca %struct.BezTriple*, align 8
  %next.addr = alloca %struct.BezTriple*, align 8
  %is_fcurve.addr = alloca i8, align 1
  %skip_align.addr = alloca i8, align 1
  %p1 = alloca float*, align 8
  %p2 = alloca float*, align 8
  %p3 = alloca float*, align 8
  %pt = alloca [3 x float], align 4
  %dvec_a = alloca [3 x float], align 4
  %dvec_b = alloca [3 x float], align 4
  %len = alloca float, align 4
  %len_a = alloca float, align 4
  %len_b = alloca float, align 4
  %len_ratio = alloca float, align 4
  %eps = alloca float, align 4
  %tvec = alloca [3 x float], align 4
  %leftviolate = alloca i8, align 1
  %rightviolate = alloca i8, align 1
  %ydiff1 = alloca float, align 4
  %ydiff2 = alloca float, align 4
  %ydiff1246 = alloca float, align 4
  %ydiff2254 = alloca float, align 4
  %h1_x = alloca float, align 4
  %h2_x = alloca float, align 4
  store %struct.BezTriple* %bezt, %struct.BezTriple** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt.addr, metadata !9835, metadata !DIExpression()), !dbg !9836
  store %struct.BezTriple* %prev, %struct.BezTriple** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %prev.addr, metadata !9837, metadata !DIExpression()), !dbg !9838
  store %struct.BezTriple* %next, %struct.BezTriple** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %next.addr, metadata !9839, metadata !DIExpression()), !dbg !9840
  store i8 %is_fcurve, i8* %is_fcurve.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_fcurve.addr, metadata !9841, metadata !DIExpression()), !dbg !9842
  store i8 %skip_align, i8* %skip_align.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %skip_align.addr, metadata !9843, metadata !DIExpression()), !dbg !9844
  call void @llvm.dbg.declare(metadata float** %p1, metadata !9845, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.declare(metadata float** %p2, metadata !9847, metadata !DIExpression()), !dbg !9848
  call void @llvm.dbg.declare(metadata float** %p3, metadata !9849, metadata !DIExpression()), !dbg !9850
  call void @llvm.dbg.declare(metadata [3 x float]* %pt, metadata !9851, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.declare(metadata [3 x float]* %dvec_a, metadata !9853, metadata !DIExpression()), !dbg !9854
  call void @llvm.dbg.declare(metadata [3 x float]* %dvec_b, metadata !9855, metadata !DIExpression()), !dbg !9856
  call void @llvm.dbg.declare(metadata float* %len, metadata !9857, metadata !DIExpression()), !dbg !9858
  call void @llvm.dbg.declare(metadata float* %len_a, metadata !9859, metadata !DIExpression()), !dbg !9860
  call void @llvm.dbg.declare(metadata float* %len_b, metadata !9861, metadata !DIExpression()), !dbg !9862
  call void @llvm.dbg.declare(metadata float* %len_ratio, metadata !9863, metadata !DIExpression()), !dbg !9864
  call void @llvm.dbg.declare(metadata float* %eps, metadata !9865, metadata !DIExpression()), !dbg !9866
  store float 0x3EE4F8B580000000, float* %eps, align 4, !dbg !9866
  %0 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !9867
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %0, i32 0, i32 5, !dbg !9869
  %1 = load i8, i8* %h1, align 1, !dbg !9869
  %conv = zext i8 %1 to i32, !dbg !9867
  %cmp = icmp eq i32 %conv, 0, !dbg !9870
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9871

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !9872
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %2, i32 0, i32 6, !dbg !9873
  %3 = load i8, i8* %h2, align 2, !dbg !9873
  %conv2 = zext i8 %3 to i32, !dbg !9872
  %cmp3 = icmp eq i32 %conv2, 0, !dbg !9874
  br i1 %cmp3, label %if.then, label %if.end, !dbg !9875

if.then:                                          ; preds = %land.lhs.true
  br label %if.end599, !dbg !9876

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !9878
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %4, i32 0, i32 0, !dbg !9879
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 1, !dbg !9878
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !9878
  store float* %arraydecay, float** %p2, align 8, !dbg !9880
  %5 = load %struct.BezTriple*, %struct.BezTriple** %prev.addr, align 8, !dbg !9881
  %cmp5 = icmp eq %struct.BezTriple* %5, null, !dbg !9883
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !9884

if.then7:                                         ; preds = %if.end
  %6 = load %struct.BezTriple*, %struct.BezTriple** %next.addr, align 8, !dbg !9885
  %vec8 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %6, i32 0, i32 0, !dbg !9887
  %arrayidx9 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec8, i64 0, i64 1, !dbg !9885
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx9, i64 0, i64 0, !dbg !9885
  store float* %arraydecay10, float** %p3, align 8, !dbg !9888
  %7 = load float*, float** %p2, align 8, !dbg !9889
  %arrayidx11 = getelementptr inbounds float, float* %7, i64 0, !dbg !9889
  %8 = load float, float* %arrayidx11, align 4, !dbg !9889
  %mul = fmul float 2.000000e+00, %8, !dbg !9890
  %9 = load float*, float** %p3, align 8, !dbg !9891
  %arrayidx12 = getelementptr inbounds float, float* %9, i64 0, !dbg !9891
  %10 = load float, float* %arrayidx12, align 4, !dbg !9891
  %sub = fsub float %mul, %10, !dbg !9892
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %pt, i64 0, i64 0, !dbg !9893
  store float %sub, float* %arrayidx13, align 4, !dbg !9894
  %11 = load float*, float** %p2, align 8, !dbg !9895
  %arrayidx14 = getelementptr inbounds float, float* %11, i64 1, !dbg !9895
  %12 = load float, float* %arrayidx14, align 4, !dbg !9895
  %mul15 = fmul float 2.000000e+00, %12, !dbg !9896
  %13 = load float*, float** %p3, align 8, !dbg !9897
  %arrayidx16 = getelementptr inbounds float, float* %13, i64 1, !dbg !9897
  %14 = load float, float* %arrayidx16, align 4, !dbg !9897
  %sub17 = fsub float %mul15, %14, !dbg !9898
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %pt, i64 0, i64 1, !dbg !9899
  store float %sub17, float* %arrayidx18, align 4, !dbg !9900
  %15 = load float*, float** %p2, align 8, !dbg !9901
  %arrayidx19 = getelementptr inbounds float, float* %15, i64 2, !dbg !9901
  %16 = load float, float* %arrayidx19, align 4, !dbg !9901
  %mul20 = fmul float 2.000000e+00, %16, !dbg !9902
  %17 = load float*, float** %p3, align 8, !dbg !9903
  %arrayidx21 = getelementptr inbounds float, float* %17, i64 2, !dbg !9903
  %18 = load float, float* %arrayidx21, align 4, !dbg !9903
  %sub22 = fsub float %mul20, %18, !dbg !9904
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %pt, i64 0, i64 2, !dbg !9905
  store float %sub22, float* %arrayidx23, align 4, !dbg !9906
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %pt, i64 0, i64 0, !dbg !9907
  store float* %arraydecay24, float** %p1, align 8, !dbg !9908
  br label %if.end28, !dbg !9909

if.else:                                          ; preds = %if.end
  %19 = load %struct.BezTriple*, %struct.BezTriple** %prev.addr, align 8, !dbg !9910
  %vec25 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %19, i32 0, i32 0, !dbg !9912
  %arrayidx26 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec25, i64 0, i64 1, !dbg !9910
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx26, i64 0, i64 0, !dbg !9910
  store float* %arraydecay27, float** %p1, align 8, !dbg !9913
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then7
  %20 = load %struct.BezTriple*, %struct.BezTriple** %next.addr, align 8, !dbg !9914
  %cmp29 = icmp eq %struct.BezTriple* %20, null, !dbg !9916
  br i1 %cmp29, label %if.then31, label %if.else48, !dbg !9917

if.then31:                                        ; preds = %if.end28
  %21 = load float*, float** %p2, align 8, !dbg !9918
  %arrayidx32 = getelementptr inbounds float, float* %21, i64 0, !dbg !9918
  %22 = load float, float* %arrayidx32, align 4, !dbg !9918
  %mul33 = fmul float 2.000000e+00, %22, !dbg !9920
  %23 = load float*, float** %p1, align 8, !dbg !9921
  %arrayidx34 = getelementptr inbounds float, float* %23, i64 0, !dbg !9921
  %24 = load float, float* %arrayidx34, align 4, !dbg !9921
  %sub35 = fsub float %mul33, %24, !dbg !9922
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %pt, i64 0, i64 0, !dbg !9923
  store float %sub35, float* %arrayidx36, align 4, !dbg !9924
  %25 = load float*, float** %p2, align 8, !dbg !9925
  %arrayidx37 = getelementptr inbounds float, float* %25, i64 1, !dbg !9925
  %26 = load float, float* %arrayidx37, align 4, !dbg !9925
  %mul38 = fmul float 2.000000e+00, %26, !dbg !9926
  %27 = load float*, float** %p1, align 8, !dbg !9927
  %arrayidx39 = getelementptr inbounds float, float* %27, i64 1, !dbg !9927
  %28 = load float, float* %arrayidx39, align 4, !dbg !9927
  %sub40 = fsub float %mul38, %28, !dbg !9928
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %pt, i64 0, i64 1, !dbg !9929
  store float %sub40, float* %arrayidx41, align 4, !dbg !9930
  %29 = load float*, float** %p2, align 8, !dbg !9931
  %arrayidx42 = getelementptr inbounds float, float* %29, i64 2, !dbg !9931
  %30 = load float, float* %arrayidx42, align 4, !dbg !9931
  %mul43 = fmul float 2.000000e+00, %30, !dbg !9932
  %31 = load float*, float** %p1, align 8, !dbg !9933
  %arrayidx44 = getelementptr inbounds float, float* %31, i64 2, !dbg !9933
  %32 = load float, float* %arrayidx44, align 4, !dbg !9933
  %sub45 = fsub float %mul43, %32, !dbg !9934
  %arrayidx46 = getelementptr inbounds [3 x float], [3 x float]* %pt, i64 0, i64 2, !dbg !9935
  store float %sub45, float* %arrayidx46, align 4, !dbg !9936
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %pt, i64 0, i64 0, !dbg !9937
  store float* %arraydecay47, float** %p3, align 8, !dbg !9938
  br label %if.end52, !dbg !9939

if.else48:                                        ; preds = %if.end28
  %33 = load %struct.BezTriple*, %struct.BezTriple** %next.addr, align 8, !dbg !9940
  %vec49 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %33, i32 0, i32 0, !dbg !9942
  %arrayidx50 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec49, i64 0, i64 1, !dbg !9940
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx50, i64 0, i64 0, !dbg !9940
  store float* %arraydecay51, float** %p3, align 8, !dbg !9943
  br label %if.end52

if.end52:                                         ; preds = %if.else48, %if.then31
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %dvec_a, i64 0, i64 0, !dbg !9944
  %34 = load float*, float** %p2, align 8, !dbg !9945
  %35 = load float*, float** %p1, align 8, !dbg !9946
  call void @sub_v3_v3v3(float* %arraydecay53, float* %34, float* %35), !dbg !9947
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %dvec_b, i64 0, i64 0, !dbg !9948
  %36 = load float*, float** %p3, align 8, !dbg !9949
  %37 = load float*, float** %p2, align 8, !dbg !9950
  call void @sub_v3_v3v3(float* %arraydecay54, float* %36, float* %37), !dbg !9951
  %38 = load i8, i8* %is_fcurve.addr, align 1, !dbg !9952
  %tobool = icmp ne i8 %38, 0, !dbg !9952
  br i1 %tobool, label %if.then55, label %if.else58, !dbg !9954

if.then55:                                        ; preds = %if.end52
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %dvec_a, i64 0, i64 0, !dbg !9955
  %39 = load float, float* %arrayidx56, align 4, !dbg !9955
  store float %39, float* %len_a, align 4, !dbg !9957
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %dvec_b, i64 0, i64 0, !dbg !9958
  %40 = load float, float* %arrayidx57, align 4, !dbg !9958
  store float %40, float* %len_b, align 4, !dbg !9959
  br label %if.end62, !dbg !9960

if.else58:                                        ; preds = %if.end52
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %dvec_a, i64 0, i64 0, !dbg !9961
  %call = call float @len_v3(float* %arraydecay59), !dbg !9963
  store float %call, float* %len_a, align 4, !dbg !9964
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %dvec_b, i64 0, i64 0, !dbg !9965
  %call61 = call float @len_v3(float* %arraydecay60), !dbg !9966
  store float %call61, float* %len_b, align 4, !dbg !9967
  br label %if.end62

if.end62:                                         ; preds = %if.else58, %if.then55
  %41 = load float, float* %len_a, align 4, !dbg !9968
  %cmp63 = fcmp oeq float %41, 0.000000e+00, !dbg !9970
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !9971

if.then65:                                        ; preds = %if.end62
  store float 1.000000e+00, float* %len_a, align 4, !dbg !9972
  br label %if.end66, !dbg !9973

if.end66:                                         ; preds = %if.then65, %if.end62
  %42 = load float, float* %len_b, align 4, !dbg !9974
  %cmp67 = fcmp oeq float %42, 0.000000e+00, !dbg !9976
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !9977

if.then69:                                        ; preds = %if.end66
  store float 1.000000e+00, float* %len_b, align 4, !dbg !9978
  br label %if.end70, !dbg !9979

if.end70:                                         ; preds = %if.then69, %if.end66
  %43 = load float, float* %len_a, align 4, !dbg !9980
  %44 = load float, float* %len_b, align 4, !dbg !9981
  %div = fdiv float %43, %44, !dbg !9982
  store float %div, float* %len_ratio, align 4, !dbg !9983
  %45 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !9984
  %h171 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %45, i32 0, i32 5, !dbg !9984
  %46 = load i8, i8* %h171, align 1, !dbg !9984
  %conv72 = zext i8 %46 to i32, !dbg !9984
  %cmp73 = icmp eq i32 %conv72, 1, !dbg !9984
  br i1 %cmp73, label %if.then89, label %lor.lhs.false, !dbg !9984

lor.lhs.false:                                    ; preds = %if.end70
  %47 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !9984
  %h175 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %47, i32 0, i32 5, !dbg !9984
  %48 = load i8, i8* %h175, align 1, !dbg !9984
  %conv76 = zext i8 %48 to i32, !dbg !9984
  %cmp77 = icmp eq i32 %conv76, 4, !dbg !9984
  br i1 %cmp77, label %if.then89, label %lor.lhs.false79, !dbg !9986

lor.lhs.false79:                                  ; preds = %lor.lhs.false
  %49 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !9987
  %h280 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %49, i32 0, i32 6, !dbg !9987
  %50 = load i8, i8* %h280, align 2, !dbg !9987
  %conv81 = zext i8 %50 to i32, !dbg !9987
  %cmp82 = icmp eq i32 %conv81, 1, !dbg !9987
  br i1 %cmp82, label %if.then89, label %lor.lhs.false84, !dbg !9987

lor.lhs.false84:                                  ; preds = %lor.lhs.false79
  %51 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !9987
  %h285 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %51, i32 0, i32 6, !dbg !9987
  %52 = load i8, i8* %h285, align 2, !dbg !9987
  %conv86 = zext i8 %52 to i32, !dbg !9987
  %cmp87 = icmp eq i32 %conv86, 4, !dbg !9987
  br i1 %cmp87, label %if.then89, label %if.end361, !dbg !9988

if.then89:                                        ; preds = %lor.lhs.false84, %lor.lhs.false79, %lor.lhs.false, %if.end70
  call void @llvm.dbg.declare(metadata [3 x float]* %tvec, metadata !9989, metadata !DIExpression()), !dbg !9991
  %arrayidx90 = getelementptr inbounds [3 x float], [3 x float]* %dvec_b, i64 0, i64 0, !dbg !9992
  %53 = load float, float* %arrayidx90, align 4, !dbg !9992
  %54 = load float, float* %len_b, align 4, !dbg !9993
  %div91 = fdiv float %53, %54, !dbg !9994
  %arrayidx92 = getelementptr inbounds [3 x float], [3 x float]* %dvec_a, i64 0, i64 0, !dbg !9995
  %55 = load float, float* %arrayidx92, align 4, !dbg !9995
  %56 = load float, float* %len_a, align 4, !dbg !9996
  %div93 = fdiv float %55, %56, !dbg !9997
  %add = fadd float %div91, %div93, !dbg !9998
  %arrayidx94 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !9999
  store float %add, float* %arrayidx94, align 4, !dbg !10000
  %arrayidx95 = getelementptr inbounds [3 x float], [3 x float]* %dvec_b, i64 0, i64 1, !dbg !10001
  %57 = load float, float* %arrayidx95, align 4, !dbg !10001
  %58 = load float, float* %len_b, align 4, !dbg !10002
  %div96 = fdiv float %57, %58, !dbg !10003
  %arrayidx97 = getelementptr inbounds [3 x float], [3 x float]* %dvec_a, i64 0, i64 1, !dbg !10004
  %59 = load float, float* %arrayidx97, align 4, !dbg !10004
  %60 = load float, float* %len_a, align 4, !dbg !10005
  %div98 = fdiv float %59, %60, !dbg !10006
  %add99 = fadd float %div96, %div98, !dbg !10007
  %arrayidx100 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 1, !dbg !10008
  store float %add99, float* %arrayidx100, align 4, !dbg !10009
  %arrayidx101 = getelementptr inbounds [3 x float], [3 x float]* %dvec_b, i64 0, i64 2, !dbg !10010
  %61 = load float, float* %arrayidx101, align 4, !dbg !10010
  %62 = load float, float* %len_b, align 4, !dbg !10011
  %div102 = fdiv float %61, %62, !dbg !10012
  %arrayidx103 = getelementptr inbounds [3 x float], [3 x float]* %dvec_a, i64 0, i64 2, !dbg !10013
  %63 = load float, float* %arrayidx103, align 4, !dbg !10013
  %64 = load float, float* %len_a, align 4, !dbg !10014
  %div104 = fdiv float %63, %64, !dbg !10015
  %add105 = fadd float %div102, %div104, !dbg !10016
  %arrayidx106 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 2, !dbg !10017
  store float %add105, float* %arrayidx106, align 4, !dbg !10018
  %65 = load i8, i8* %is_fcurve.addr, align 1, !dbg !10019
  %tobool107 = icmp ne i8 %65, 0, !dbg !10019
  br i1 %tobool107, label %if.then108, label %if.else110, !dbg !10021

if.then108:                                       ; preds = %if.then89
  %arrayidx109 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !10022
  %66 = load float, float* %arrayidx109, align 4, !dbg !10022
  store float %66, float* %len, align 4, !dbg !10024
  br label %if.end113, !dbg !10025

if.else110:                                       ; preds = %if.then89
  %arraydecay111 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !10026
  %call112 = call float @len_v3(float* %arraydecay111), !dbg !10028
  store float %call112, float* %len, align 4, !dbg !10029
  br label %if.end113

if.end113:                                        ; preds = %if.else110, %if.then108
  %67 = load float, float* %len, align 4, !dbg !10030
  %mul114 = fmul float %67, 0x40047DBF40000000, !dbg !10030
  store float %mul114, float* %len, align 4, !dbg !10030
  %68 = load float, float* %len, align 4, !dbg !10031
  %cmp115 = fcmp une float %68, 0.000000e+00, !dbg !10033
  br i1 %cmp115, label %if.then117, label %if.end360, !dbg !10034

if.then117:                                       ; preds = %if.end113
  call void @llvm.dbg.declare(metadata i8* %leftviolate, metadata !10035, metadata !DIExpression()), !dbg !10037
  store i8 0, i8* %leftviolate, align 1, !dbg !10037
  call void @llvm.dbg.declare(metadata i8* %rightviolate, metadata !10038, metadata !DIExpression()), !dbg !10039
  store i8 0, i8* %rightviolate, align 1, !dbg !10039
  %69 = load float, float* %len_a, align 4, !dbg !10040
  %70 = load float, float* %len_b, align 4, !dbg !10042
  %mul118 = fmul float 5.000000e+00, %70, !dbg !10043
  %cmp119 = fcmp ogt float %69, %mul118, !dbg !10044
  br i1 %cmp119, label %if.then121, label %if.end123, !dbg !10045

if.then121:                                       ; preds = %if.then117
  %71 = load float, float* %len_b, align 4, !dbg !10046
  %mul122 = fmul float 5.000000e+00, %71, !dbg !10047
  store float %mul122, float* %len_a, align 4, !dbg !10048
  br label %if.end123, !dbg !10049

if.end123:                                        ; preds = %if.then121, %if.then117
  %72 = load float, float* %len_b, align 4, !dbg !10050
  %73 = load float, float* %len_a, align 4, !dbg !10052
  %mul124 = fmul float 5.000000e+00, %73, !dbg !10053
  %cmp125 = fcmp ogt float %72, %mul124, !dbg !10054
  br i1 %cmp125, label %if.then127, label %if.end129, !dbg !10055

if.then127:                                       ; preds = %if.end123
  %74 = load float, float* %len_a, align 4, !dbg !10056
  %mul128 = fmul float 5.000000e+00, %74, !dbg !10057
  store float %mul128, float* %len_b, align 4, !dbg !10058
  br label %if.end129, !dbg !10059

if.end129:                                        ; preds = %if.then127, %if.end123
  %75 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10060
  %h1130 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %75, i32 0, i32 5, !dbg !10060
  %76 = load i8, i8* %h1130, align 1, !dbg !10060
  %conv131 = zext i8 %76 to i32, !dbg !10060
  %cmp132 = icmp eq i32 %conv131, 1, !dbg !10060
  br i1 %cmp132, label %if.then139, label %lor.lhs.false134, !dbg !10060

lor.lhs.false134:                                 ; preds = %if.end129
  %77 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10060
  %h1135 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %77, i32 0, i32 5, !dbg !10060
  %78 = load i8, i8* %h1135, align 1, !dbg !10060
  %conv136 = zext i8 %78 to i32, !dbg !10060
  %cmp137 = icmp eq i32 %conv136, 4, !dbg !10060
  br i1 %cmp137, label %if.then139, label %if.end223, !dbg !10062

if.then139:                                       ; preds = %lor.lhs.false134, %if.end129
  %79 = load float, float* %len, align 4, !dbg !10063
  %80 = load float, float* %len_a, align 4, !dbg !10065
  %div140 = fdiv float %80, %79, !dbg !10065
  store float %div140, float* %len_a, align 4, !dbg !10065
  %81 = load float*, float** %p2, align 8, !dbg !10066
  %add.ptr = getelementptr inbounds float, float* %81, i64 -3, !dbg !10066
  %82 = load float*, float** %p2, align 8, !dbg !10067
  %arraydecay141 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !10068
  %83 = load float, float* %len_a, align 4, !dbg !10069
  %fneg = fneg float %83, !dbg !10070
  call void @madd_v3_v3v3fl(float* %add.ptr, float* %82, float* %arraydecay141, float %fneg), !dbg !10071
  %84 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10072
  %h1142 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %84, i32 0, i32 5, !dbg !10074
  %85 = load i8, i8* %h1142, align 1, !dbg !10074
  %conv143 = zext i8 %85 to i32, !dbg !10072
  %cmp144 = icmp eq i32 %conv143, 4, !dbg !10075
  br i1 %cmp144, label %land.lhs.true146, label %if.end222, !dbg !10076

land.lhs.true146:                                 ; preds = %if.then139
  %86 = load %struct.BezTriple*, %struct.BezTriple** %next.addr, align 8, !dbg !10077
  %tobool147 = icmp ne %struct.BezTriple* %86, null, !dbg !10077
  br i1 %tobool147, label %land.lhs.true148, label %if.end222, !dbg !10078

land.lhs.true148:                                 ; preds = %land.lhs.true146
  %87 = load %struct.BezTriple*, %struct.BezTriple** %prev.addr, align 8, !dbg !10079
  %tobool149 = icmp ne %struct.BezTriple* %87, null, !dbg !10079
  br i1 %tobool149, label %if.then150, label %if.end222, !dbg !10080

if.then150:                                       ; preds = %land.lhs.true148
  call void @llvm.dbg.declare(metadata float* %ydiff1, metadata !10081, metadata !DIExpression()), !dbg !10083
  %88 = load %struct.BezTriple*, %struct.BezTriple** %prev.addr, align 8, !dbg !10084
  %vec151 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %88, i32 0, i32 0, !dbg !10085
  %arrayidx152 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec151, i64 0, i64 1, !dbg !10084
  %arrayidx153 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx152, i64 0, i64 1, !dbg !10084
  %89 = load float, float* %arrayidx153, align 4, !dbg !10084
  %90 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10086
  %vec154 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %90, i32 0, i32 0, !dbg !10087
  %arrayidx155 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec154, i64 0, i64 1, !dbg !10086
  %arrayidx156 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx155, i64 0, i64 1, !dbg !10086
  %91 = load float, float* %arrayidx156, align 4, !dbg !10086
  %sub157 = fsub float %89, %91, !dbg !10088
  store float %sub157, float* %ydiff1, align 4, !dbg !10083
  call void @llvm.dbg.declare(metadata float* %ydiff2, metadata !10089, metadata !DIExpression()), !dbg !10090
  %92 = load %struct.BezTriple*, %struct.BezTriple** %next.addr, align 8, !dbg !10091
  %vec158 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %92, i32 0, i32 0, !dbg !10092
  %arrayidx159 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec158, i64 0, i64 1, !dbg !10091
  %arrayidx160 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx159, i64 0, i64 1, !dbg !10091
  %93 = load float, float* %arrayidx160, align 4, !dbg !10091
  %94 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10093
  %vec161 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %94, i32 0, i32 0, !dbg !10094
  %arrayidx162 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec161, i64 0, i64 1, !dbg !10093
  %arrayidx163 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx162, i64 0, i64 1, !dbg !10093
  %95 = load float, float* %arrayidx163, align 4, !dbg !10093
  %sub164 = fsub float %93, %95, !dbg !10095
  store float %sub164, float* %ydiff2, align 4, !dbg !10090
  %96 = load float, float* %ydiff1, align 4, !dbg !10096
  %cmp165 = fcmp ole float %96, 0.000000e+00, !dbg !10098
  br i1 %cmp165, label %land.lhs.true167, label %lor.lhs.false170, !dbg !10099

land.lhs.true167:                                 ; preds = %if.then150
  %97 = load float, float* %ydiff2, align 4, !dbg !10100
  %cmp168 = fcmp ole float %97, 0.000000e+00, !dbg !10101
  br i1 %cmp168, label %if.then176, label %lor.lhs.false170, !dbg !10102

lor.lhs.false170:                                 ; preds = %land.lhs.true167, %if.then150
  %98 = load float, float* %ydiff1, align 4, !dbg !10103
  %cmp171 = fcmp oge float %98, 0.000000e+00, !dbg !10104
  br i1 %cmp171, label %land.lhs.true173, label %if.else183, !dbg !10105

land.lhs.true173:                                 ; preds = %lor.lhs.false170
  %99 = load float, float* %ydiff2, align 4, !dbg !10106
  %cmp174 = fcmp oge float %99, 0.000000e+00, !dbg !10107
  br i1 %cmp174, label %if.then176, label %if.else183, !dbg !10108

if.then176:                                       ; preds = %land.lhs.true173, %land.lhs.true167
  %100 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10109
  %vec177 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %100, i32 0, i32 0, !dbg !10111
  %arrayidx178 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec177, i64 0, i64 1, !dbg !10109
  %arrayidx179 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx178, i64 0, i64 1, !dbg !10109
  %101 = load float, float* %arrayidx179, align 4, !dbg !10109
  %102 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10112
  %vec180 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %102, i32 0, i32 0, !dbg !10113
  %arrayidx181 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec180, i64 0, i64 0, !dbg !10112
  %arrayidx182 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx181, i64 0, i64 1, !dbg !10112
  store float %101, float* %arrayidx182, align 4, !dbg !10114
  br label %if.end221, !dbg !10115

if.else183:                                       ; preds = %land.lhs.true173, %lor.lhs.false170
  %103 = load float, float* %ydiff1, align 4, !dbg !10116
  %cmp184 = fcmp ole float %103, 0.000000e+00, !dbg !10119
  br i1 %cmp184, label %if.then186, label %if.else203, !dbg !10120

if.then186:                                       ; preds = %if.else183
  %104 = load %struct.BezTriple*, %struct.BezTriple** %prev.addr, align 8, !dbg !10121
  %vec187 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %104, i32 0, i32 0, !dbg !10124
  %arrayidx188 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec187, i64 0, i64 1, !dbg !10121
  %arrayidx189 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx188, i64 0, i64 1, !dbg !10121
  %105 = load float, float* %arrayidx189, align 4, !dbg !10121
  %106 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10125
  %vec190 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %106, i32 0, i32 0, !dbg !10126
  %arrayidx191 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec190, i64 0, i64 0, !dbg !10125
  %arrayidx192 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx191, i64 0, i64 1, !dbg !10125
  %107 = load float, float* %arrayidx192, align 4, !dbg !10125
  %cmp193 = fcmp ogt float %105, %107, !dbg !10127
  br i1 %cmp193, label %if.then195, label %if.end202, !dbg !10128

if.then195:                                       ; preds = %if.then186
  %108 = load %struct.BezTriple*, %struct.BezTriple** %prev.addr, align 8, !dbg !10129
  %vec196 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %108, i32 0, i32 0, !dbg !10131
  %arrayidx197 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec196, i64 0, i64 1, !dbg !10129
  %arrayidx198 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx197, i64 0, i64 1, !dbg !10129
  %109 = load float, float* %arrayidx198, align 4, !dbg !10129
  %110 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10132
  %vec199 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %110, i32 0, i32 0, !dbg !10133
  %arrayidx200 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec199, i64 0, i64 0, !dbg !10132
  %arrayidx201 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx200, i64 0, i64 1, !dbg !10132
  store float %109, float* %arrayidx201, align 4, !dbg !10134
  store i8 1, i8* %leftviolate, align 1, !dbg !10135
  br label %if.end202, !dbg !10136

if.end202:                                        ; preds = %if.then195, %if.then186
  br label %if.end220, !dbg !10137

if.else203:                                       ; preds = %if.else183
  %111 = load %struct.BezTriple*, %struct.BezTriple** %prev.addr, align 8, !dbg !10138
  %vec204 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %111, i32 0, i32 0, !dbg !10141
  %arrayidx205 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec204, i64 0, i64 1, !dbg !10138
  %arrayidx206 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx205, i64 0, i64 1, !dbg !10138
  %112 = load float, float* %arrayidx206, align 4, !dbg !10138
  %113 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10142
  %vec207 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %113, i32 0, i32 0, !dbg !10143
  %arrayidx208 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec207, i64 0, i64 0, !dbg !10142
  %arrayidx209 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx208, i64 0, i64 1, !dbg !10142
  %114 = load float, float* %arrayidx209, align 4, !dbg !10142
  %cmp210 = fcmp olt float %112, %114, !dbg !10144
  br i1 %cmp210, label %if.then212, label %if.end219, !dbg !10145

if.then212:                                       ; preds = %if.else203
  %115 = load %struct.BezTriple*, %struct.BezTriple** %prev.addr, align 8, !dbg !10146
  %vec213 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %115, i32 0, i32 0, !dbg !10148
  %arrayidx214 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec213, i64 0, i64 1, !dbg !10146
  %arrayidx215 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx214, i64 0, i64 1, !dbg !10146
  %116 = load float, float* %arrayidx215, align 4, !dbg !10146
  %117 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10149
  %vec216 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %117, i32 0, i32 0, !dbg !10150
  %arrayidx217 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec216, i64 0, i64 0, !dbg !10149
  %arrayidx218 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx217, i64 0, i64 1, !dbg !10149
  store float %116, float* %arrayidx218, align 4, !dbg !10151
  store i8 1, i8* %leftviolate, align 1, !dbg !10152
  br label %if.end219, !dbg !10153

if.end219:                                        ; preds = %if.then212, %if.else203
  br label %if.end220

if.end220:                                        ; preds = %if.end219, %if.end202
  br label %if.end221

if.end221:                                        ; preds = %if.end220, %if.then176
  br label %if.end222, !dbg !10154

if.end222:                                        ; preds = %if.end221, %land.lhs.true148, %land.lhs.true146, %if.then139
  br label %if.end223, !dbg !10155

if.end223:                                        ; preds = %if.end222, %lor.lhs.false134
  %118 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10156
  %h2224 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %118, i32 0, i32 6, !dbg !10156
  %119 = load i8, i8* %h2224, align 2, !dbg !10156
  %conv225 = zext i8 %119 to i32, !dbg !10156
  %cmp226 = icmp eq i32 %conv225, 1, !dbg !10156
  br i1 %cmp226, label %if.then233, label %lor.lhs.false228, !dbg !10156

lor.lhs.false228:                                 ; preds = %if.end223
  %120 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10156
  %h2229 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %120, i32 0, i32 6, !dbg !10156
  %121 = load i8, i8* %h2229, align 2, !dbg !10156
  %conv230 = zext i8 %121 to i32, !dbg !10156
  %cmp231 = icmp eq i32 %conv230, 4, !dbg !10156
  br i1 %cmp231, label %if.then233, label %if.end320, !dbg !10158

if.then233:                                       ; preds = %lor.lhs.false228, %if.end223
  %122 = load float, float* %len, align 4, !dbg !10159
  %123 = load float, float* %len_b, align 4, !dbg !10161
  %div234 = fdiv float %123, %122, !dbg !10161
  store float %div234, float* %len_b, align 4, !dbg !10161
  %124 = load float*, float** %p2, align 8, !dbg !10162
  %add.ptr235 = getelementptr inbounds float, float* %124, i64 3, !dbg !10162
  %125 = load float*, float** %p2, align 8, !dbg !10163
  %arraydecay236 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !10164
  %126 = load float, float* %len_b, align 4, !dbg !10165
  call void @madd_v3_v3v3fl(float* %add.ptr235, float* %125, float* %arraydecay236, float %126), !dbg !10166
  %127 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10167
  %h2237 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %127, i32 0, i32 6, !dbg !10169
  %128 = load i8, i8* %h2237, align 2, !dbg !10169
  %conv238 = zext i8 %128 to i32, !dbg !10167
  %cmp239 = icmp eq i32 %conv238, 4, !dbg !10170
  br i1 %cmp239, label %land.lhs.true241, label %if.end319, !dbg !10171

land.lhs.true241:                                 ; preds = %if.then233
  %129 = load %struct.BezTriple*, %struct.BezTriple** %next.addr, align 8, !dbg !10172
  %tobool242 = icmp ne %struct.BezTriple* %129, null, !dbg !10172
  br i1 %tobool242, label %land.lhs.true243, label %if.end319, !dbg !10173

land.lhs.true243:                                 ; preds = %land.lhs.true241
  %130 = load %struct.BezTriple*, %struct.BezTriple** %prev.addr, align 8, !dbg !10174
  %tobool244 = icmp ne %struct.BezTriple* %130, null, !dbg !10174
  br i1 %tobool244, label %if.then245, label %if.end319, !dbg !10175

if.then245:                                       ; preds = %land.lhs.true243
  call void @llvm.dbg.declare(metadata float* %ydiff1246, metadata !10176, metadata !DIExpression()), !dbg !10178
  %131 = load %struct.BezTriple*, %struct.BezTriple** %prev.addr, align 8, !dbg !10179
  %vec247 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %131, i32 0, i32 0, !dbg !10180
  %arrayidx248 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec247, i64 0, i64 1, !dbg !10179
  %arrayidx249 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx248, i64 0, i64 1, !dbg !10179
  %132 = load float, float* %arrayidx249, align 4, !dbg !10179
  %133 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10181
  %vec250 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %133, i32 0, i32 0, !dbg !10182
  %arrayidx251 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec250, i64 0, i64 1, !dbg !10181
  %arrayidx252 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx251, i64 0, i64 1, !dbg !10181
  %134 = load float, float* %arrayidx252, align 4, !dbg !10181
  %sub253 = fsub float %132, %134, !dbg !10183
  store float %sub253, float* %ydiff1246, align 4, !dbg !10178
  call void @llvm.dbg.declare(metadata float* %ydiff2254, metadata !10184, metadata !DIExpression()), !dbg !10185
  %135 = load %struct.BezTriple*, %struct.BezTriple** %next.addr, align 8, !dbg !10186
  %vec255 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %135, i32 0, i32 0, !dbg !10187
  %arrayidx256 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec255, i64 0, i64 1, !dbg !10186
  %arrayidx257 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx256, i64 0, i64 1, !dbg !10186
  %136 = load float, float* %arrayidx257, align 4, !dbg !10186
  %137 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10188
  %vec258 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %137, i32 0, i32 0, !dbg !10189
  %arrayidx259 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec258, i64 0, i64 1, !dbg !10188
  %arrayidx260 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx259, i64 0, i64 1, !dbg !10188
  %138 = load float, float* %arrayidx260, align 4, !dbg !10188
  %sub261 = fsub float %136, %138, !dbg !10190
  store float %sub261, float* %ydiff2254, align 4, !dbg !10185
  %139 = load float, float* %ydiff1246, align 4, !dbg !10191
  %cmp262 = fcmp ole float %139, 0.000000e+00, !dbg !10193
  br i1 %cmp262, label %land.lhs.true264, label %lor.lhs.false267, !dbg !10194

land.lhs.true264:                                 ; preds = %if.then245
  %140 = load float, float* %ydiff2254, align 4, !dbg !10195
  %cmp265 = fcmp ole float %140, 0.000000e+00, !dbg !10196
  br i1 %cmp265, label %if.then273, label %lor.lhs.false267, !dbg !10197

lor.lhs.false267:                                 ; preds = %land.lhs.true264, %if.then245
  %141 = load float, float* %ydiff1246, align 4, !dbg !10198
  %cmp268 = fcmp oge float %141, 0.000000e+00, !dbg !10199
  br i1 %cmp268, label %land.lhs.true270, label %if.else280, !dbg !10200

land.lhs.true270:                                 ; preds = %lor.lhs.false267
  %142 = load float, float* %ydiff2254, align 4, !dbg !10201
  %cmp271 = fcmp oge float %142, 0.000000e+00, !dbg !10202
  br i1 %cmp271, label %if.then273, label %if.else280, !dbg !10203

if.then273:                                       ; preds = %land.lhs.true270, %land.lhs.true264
  %143 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10204
  %vec274 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %143, i32 0, i32 0, !dbg !10206
  %arrayidx275 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec274, i64 0, i64 1, !dbg !10204
  %arrayidx276 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx275, i64 0, i64 1, !dbg !10204
  %144 = load float, float* %arrayidx276, align 4, !dbg !10204
  %145 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10207
  %vec277 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %145, i32 0, i32 0, !dbg !10208
  %arrayidx278 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec277, i64 0, i64 2, !dbg !10207
  %arrayidx279 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx278, i64 0, i64 1, !dbg !10207
  store float %144, float* %arrayidx279, align 4, !dbg !10209
  br label %if.end318, !dbg !10210

if.else280:                                       ; preds = %land.lhs.true270, %lor.lhs.false267
  %146 = load float, float* %ydiff1246, align 4, !dbg !10211
  %cmp281 = fcmp ole float %146, 0.000000e+00, !dbg !10214
  br i1 %cmp281, label %if.then283, label %if.else300, !dbg !10215

if.then283:                                       ; preds = %if.else280
  %147 = load %struct.BezTriple*, %struct.BezTriple** %next.addr, align 8, !dbg !10216
  %vec284 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %147, i32 0, i32 0, !dbg !10219
  %arrayidx285 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec284, i64 0, i64 1, !dbg !10216
  %arrayidx286 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx285, i64 0, i64 1, !dbg !10216
  %148 = load float, float* %arrayidx286, align 4, !dbg !10216
  %149 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10220
  %vec287 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %149, i32 0, i32 0, !dbg !10221
  %arrayidx288 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec287, i64 0, i64 2, !dbg !10220
  %arrayidx289 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx288, i64 0, i64 1, !dbg !10220
  %150 = load float, float* %arrayidx289, align 4, !dbg !10220
  %cmp290 = fcmp olt float %148, %150, !dbg !10222
  br i1 %cmp290, label %if.then292, label %if.end299, !dbg !10223

if.then292:                                       ; preds = %if.then283
  %151 = load %struct.BezTriple*, %struct.BezTriple** %next.addr, align 8, !dbg !10224
  %vec293 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %151, i32 0, i32 0, !dbg !10226
  %arrayidx294 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec293, i64 0, i64 1, !dbg !10224
  %arrayidx295 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx294, i64 0, i64 1, !dbg !10224
  %152 = load float, float* %arrayidx295, align 4, !dbg !10224
  %153 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10227
  %vec296 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %153, i32 0, i32 0, !dbg !10228
  %arrayidx297 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec296, i64 0, i64 2, !dbg !10227
  %arrayidx298 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx297, i64 0, i64 1, !dbg !10227
  store float %152, float* %arrayidx298, align 4, !dbg !10229
  store i8 1, i8* %rightviolate, align 1, !dbg !10230
  br label %if.end299, !dbg !10231

if.end299:                                        ; preds = %if.then292, %if.then283
  br label %if.end317, !dbg !10232

if.else300:                                       ; preds = %if.else280
  %154 = load %struct.BezTriple*, %struct.BezTriple** %next.addr, align 8, !dbg !10233
  %vec301 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %154, i32 0, i32 0, !dbg !10236
  %arrayidx302 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec301, i64 0, i64 1, !dbg !10233
  %arrayidx303 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx302, i64 0, i64 1, !dbg !10233
  %155 = load float, float* %arrayidx303, align 4, !dbg !10233
  %156 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10237
  %vec304 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %156, i32 0, i32 0, !dbg !10238
  %arrayidx305 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec304, i64 0, i64 2, !dbg !10237
  %arrayidx306 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx305, i64 0, i64 1, !dbg !10237
  %157 = load float, float* %arrayidx306, align 4, !dbg !10237
  %cmp307 = fcmp ogt float %155, %157, !dbg !10239
  br i1 %cmp307, label %if.then309, label %if.end316, !dbg !10240

if.then309:                                       ; preds = %if.else300
  %158 = load %struct.BezTriple*, %struct.BezTriple** %next.addr, align 8, !dbg !10241
  %vec310 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %158, i32 0, i32 0, !dbg !10243
  %arrayidx311 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec310, i64 0, i64 1, !dbg !10241
  %arrayidx312 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx311, i64 0, i64 1, !dbg !10241
  %159 = load float, float* %arrayidx312, align 4, !dbg !10241
  %160 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10244
  %vec313 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %160, i32 0, i32 0, !dbg !10245
  %arrayidx314 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec313, i64 0, i64 2, !dbg !10244
  %arrayidx315 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx314, i64 0, i64 1, !dbg !10244
  store float %159, float* %arrayidx315, align 4, !dbg !10246
  store i8 1, i8* %rightviolate, align 1, !dbg !10247
  br label %if.end316, !dbg !10248

if.end316:                                        ; preds = %if.then309, %if.else300
  br label %if.end317

if.end317:                                        ; preds = %if.end316, %if.end299
  br label %if.end318

if.end318:                                        ; preds = %if.end317, %if.then273
  br label %if.end319, !dbg !10249

if.end319:                                        ; preds = %if.end318, %land.lhs.true243, %land.lhs.true241, %if.then233
  br label %if.end320, !dbg !10250

if.end320:                                        ; preds = %if.end319, %lor.lhs.false228
  %161 = load i8, i8* %leftviolate, align 1, !dbg !10251
  %conv321 = zext i8 %161 to i32, !dbg !10251
  %tobool322 = icmp ne i32 %conv321, 0, !dbg !10251
  br i1 %tobool322, label %if.then326, label %lor.lhs.false323, !dbg !10253

lor.lhs.false323:                                 ; preds = %if.end320
  %162 = load i8, i8* %rightviolate, align 1, !dbg !10254
  %conv324 = zext i8 %162 to i32, !dbg !10254
  %tobool325 = icmp ne i32 %conv324, 0, !dbg !10254
  br i1 %tobool325, label %if.then326, label %if.end359, !dbg !10255

if.then326:                                       ; preds = %lor.lhs.false323, %if.end320
  call void @llvm.dbg.declare(metadata float* %h1_x, metadata !10256, metadata !DIExpression()), !dbg !10259
  %163 = load float*, float** %p2, align 8, !dbg !10260
  %add.ptr327 = getelementptr inbounds float, float* %163, i64 -3, !dbg !10260
  %arrayidx328 = getelementptr inbounds float, float* %add.ptr327, i64 0, !dbg !10260
  %164 = load float, float* %arrayidx328, align 4, !dbg !10260
  %165 = load float*, float** %p2, align 8, !dbg !10261
  %arrayidx329 = getelementptr inbounds float, float* %165, i64 0, !dbg !10261
  %166 = load float, float* %arrayidx329, align 4, !dbg !10261
  %sub330 = fsub float %164, %166, !dbg !10262
  store float %sub330, float* %h1_x, align 4, !dbg !10259
  call void @llvm.dbg.declare(metadata float* %h2_x, metadata !10263, metadata !DIExpression()), !dbg !10264
  %167 = load float*, float** %p2, align 8, !dbg !10265
  %arrayidx331 = getelementptr inbounds float, float* %167, i64 0, !dbg !10265
  %168 = load float, float* %arrayidx331, align 4, !dbg !10265
  %169 = load float*, float** %p2, align 8, !dbg !10266
  %add.ptr332 = getelementptr inbounds float, float* %169, i64 3, !dbg !10266
  %arrayidx333 = getelementptr inbounds float, float* %add.ptr332, i64 0, !dbg !10266
  %170 = load float, float* %arrayidx333, align 4, !dbg !10266
  %sub334 = fsub float %168, %170, !dbg !10267
  store float %sub334, float* %h2_x, align 4, !dbg !10264
  %171 = load i8, i8* %leftviolate, align 1, !dbg !10268
  %tobool335 = icmp ne i8 %171, 0, !dbg !10268
  br i1 %tobool335, label %if.then336, label %if.else347, !dbg !10270

if.then336:                                       ; preds = %if.then326
  %172 = load float*, float** %p2, align 8, !dbg !10271
  %arrayidx337 = getelementptr inbounds float, float* %172, i64 1, !dbg !10271
  %173 = load float, float* %arrayidx337, align 4, !dbg !10271
  %174 = load float*, float** %p2, align 8, !dbg !10273
  %arrayidx338 = getelementptr inbounds float, float* %174, i64 1, !dbg !10273
  %175 = load float, float* %arrayidx338, align 4, !dbg !10273
  %176 = load float*, float** %p2, align 8, !dbg !10274
  %add.ptr339 = getelementptr inbounds float, float* %176, i64 -3, !dbg !10274
  %arrayidx340 = getelementptr inbounds float, float* %add.ptr339, i64 1, !dbg !10274
  %177 = load float, float* %arrayidx340, align 4, !dbg !10274
  %sub341 = fsub float %175, %177, !dbg !10275
  %178 = load float, float* %h1_x, align 4, !dbg !10276
  %div342 = fdiv float %sub341, %178, !dbg !10277
  %179 = load float, float* %h2_x, align 4, !dbg !10278
  %mul343 = fmul float %div342, %179, !dbg !10279
  %add344 = fadd float %173, %mul343, !dbg !10280
  %180 = load float*, float** %p2, align 8, !dbg !10281
  %add.ptr345 = getelementptr inbounds float, float* %180, i64 3, !dbg !10281
  %arrayidx346 = getelementptr inbounds float, float* %add.ptr345, i64 1, !dbg !10281
  store float %add344, float* %arrayidx346, align 4, !dbg !10282
  br label %if.end358, !dbg !10283

if.else347:                                       ; preds = %if.then326
  %181 = load float*, float** %p2, align 8, !dbg !10284
  %arrayidx348 = getelementptr inbounds float, float* %181, i64 1, !dbg !10284
  %182 = load float, float* %arrayidx348, align 4, !dbg !10284
  %183 = load float*, float** %p2, align 8, !dbg !10286
  %arrayidx349 = getelementptr inbounds float, float* %183, i64 1, !dbg !10286
  %184 = load float, float* %arrayidx349, align 4, !dbg !10286
  %185 = load float*, float** %p2, align 8, !dbg !10287
  %add.ptr350 = getelementptr inbounds float, float* %185, i64 3, !dbg !10287
  %arrayidx351 = getelementptr inbounds float, float* %add.ptr350, i64 1, !dbg !10287
  %186 = load float, float* %arrayidx351, align 4, !dbg !10287
  %sub352 = fsub float %184, %186, !dbg !10288
  %187 = load float, float* %h2_x, align 4, !dbg !10289
  %div353 = fdiv float %sub352, %187, !dbg !10290
  %188 = load float, float* %h1_x, align 4, !dbg !10291
  %mul354 = fmul float %div353, %188, !dbg !10292
  %add355 = fadd float %182, %mul354, !dbg !10293
  %189 = load float*, float** %p2, align 8, !dbg !10294
  %add.ptr356 = getelementptr inbounds float, float* %189, i64 -3, !dbg !10294
  %arrayidx357 = getelementptr inbounds float, float* %add.ptr356, i64 1, !dbg !10294
  store float %add355, float* %arrayidx357, align 4, !dbg !10295
  br label %if.end358

if.end358:                                        ; preds = %if.else347, %if.then336
  br label %if.end359, !dbg !10296

if.end359:                                        ; preds = %if.end358, %lor.lhs.false323
  br label %if.end360, !dbg !10297

if.end360:                                        ; preds = %if.end359, %if.end113
  br label %if.end361, !dbg !10298

if.end361:                                        ; preds = %if.end360, %lor.lhs.false84
  %190 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10299
  %h1362 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %190, i32 0, i32 5, !dbg !10301
  %191 = load i8, i8* %h1362, align 1, !dbg !10301
  %conv363 = zext i8 %191 to i32, !dbg !10299
  %cmp364 = icmp eq i32 %conv363, 2, !dbg !10302
  br i1 %cmp364, label %if.then366, label %if.end369, !dbg !10303

if.then366:                                       ; preds = %if.end361
  %192 = load float*, float** %p2, align 8, !dbg !10304
  %add.ptr367 = getelementptr inbounds float, float* %192, i64 -3, !dbg !10304
  %193 = load float*, float** %p2, align 8, !dbg !10306
  %arraydecay368 = getelementptr inbounds [3 x float], [3 x float]* %dvec_a, i64 0, i64 0, !dbg !10307
  call void @madd_v3_v3v3fl(float* %add.ptr367, float* %193, float* %arraydecay368, float 0xBFD5555560000000), !dbg !10308
  br label %if.end369, !dbg !10309

if.end369:                                        ; preds = %if.then366, %if.end361
  %194 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10310
  %h2370 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %194, i32 0, i32 6, !dbg !10312
  %195 = load i8, i8* %h2370, align 2, !dbg !10312
  %conv371 = zext i8 %195 to i32, !dbg !10310
  %cmp372 = icmp eq i32 %conv371, 2, !dbg !10313
  br i1 %cmp372, label %if.then374, label %if.end377, !dbg !10314

if.then374:                                       ; preds = %if.end369
  %196 = load float*, float** %p2, align 8, !dbg !10315
  %add.ptr375 = getelementptr inbounds float, float* %196, i64 3, !dbg !10315
  %197 = load float*, float** %p2, align 8, !dbg !10317
  %arraydecay376 = getelementptr inbounds [3 x float], [3 x float]* %dvec_b, i64 0, i64 0, !dbg !10318
  call void @madd_v3_v3v3fl(float* %add.ptr375, float* %197, float* %arraydecay376, float 0x3FD5555560000000), !dbg !10319
  br label %if.end377, !dbg !10320

if.end377:                                        ; preds = %if.then374, %if.end369
  %198 = load i8, i8* %skip_align.addr, align 1, !dbg !10321
  %conv378 = zext i8 %198 to i32, !dbg !10321
  %tobool379 = icmp ne i32 %conv378, 0, !dbg !10321
  br i1 %tobool379, label %if.then410, label %lor.lhs.false380, !dbg !10323

lor.lhs.false380:                                 ; preds = %if.end377
  %199 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10324
  %h1381 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %199, i32 0, i32 5, !dbg !10324
  %200 = load i8, i8* %h1381, align 1, !dbg !10324
  %conv382 = zext i8 %200 to i32, !dbg !10324
  %cmp383 = icmp eq i32 0, %conv382, !dbg !10324
  br i1 %cmp383, label %if.then410, label %lor.lhs.false385, !dbg !10324

lor.lhs.false385:                                 ; preds = %lor.lhs.false380
  %201 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10324
  %h2386 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %201, i32 0, i32 6, !dbg !10324
  %202 = load i8, i8* %h2386, align 2, !dbg !10324
  %conv387 = zext i8 %202 to i32, !dbg !10324
  %cmp388 = icmp eq i32 0, %conv387, !dbg !10324
  br i1 %cmp388, label %if.then410, label %lor.lhs.false390, !dbg !10325

lor.lhs.false390:                                 ; preds = %lor.lhs.false385
  %203 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10326
  %h1391 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %203, i32 0, i32 5, !dbg !10326
  %204 = load i8, i8* %h1391, align 1, !dbg !10326
  %conv392 = zext i8 %204 to i32, !dbg !10326
  %cmp393 = icmp eq i32 3, %conv392, !dbg !10326
  br i1 %cmp393, label %if.end411, label %lor.lhs.false395, !dbg !10326

lor.lhs.false395:                                 ; preds = %lor.lhs.false390
  %205 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10326
  %h2396 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %205, i32 0, i32 6, !dbg !10326
  %206 = load i8, i8* %h2396, align 2, !dbg !10326
  %conv397 = zext i8 %206 to i32, !dbg !10326
  %cmp398 = icmp eq i32 3, %conv397, !dbg !10326
  br i1 %cmp398, label %if.end411, label %land.lhs.true400, !dbg !10327

land.lhs.true400:                                 ; preds = %lor.lhs.false395
  %207 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10328
  %h1401 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %207, i32 0, i32 5, !dbg !10328
  %208 = load i8, i8* %h1401, align 1, !dbg !10328
  %conv402 = zext i8 %208 to i32, !dbg !10328
  %cmp403 = icmp eq i32 5, %conv402, !dbg !10328
  br i1 %cmp403, label %if.end411, label %lor.lhs.false405, !dbg !10328

lor.lhs.false405:                                 ; preds = %land.lhs.true400
  %209 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10328
  %h2406 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %209, i32 0, i32 6, !dbg !10328
  %210 = load i8, i8* %h2406, align 2, !dbg !10328
  %conv407 = zext i8 %210 to i32, !dbg !10328
  %cmp408 = icmp eq i32 5, %conv407, !dbg !10328
  br i1 %cmp408, label %if.end411, label %if.then410, !dbg !10329

if.then410:                                       ; preds = %lor.lhs.false405, %lor.lhs.false385, %lor.lhs.false380, %if.end377
  br label %if.end599, !dbg !10330

if.end411:                                        ; preds = %lor.lhs.false405, %land.lhs.true400, %lor.lhs.false395, %lor.lhs.false390
  %211 = load float*, float** %p2, align 8, !dbg !10332
  %212 = load float*, float** %p2, align 8, !dbg !10333
  %add.ptr412 = getelementptr inbounds float, float* %212, i64 -3, !dbg !10333
  %call413 = call float @len_v3v3(float* %211, float* %add.ptr412), !dbg !10334
  store float %call413, float* %len_a, align 4, !dbg !10335
  %213 = load float*, float** %p2, align 8, !dbg !10336
  %214 = load float*, float** %p2, align 8, !dbg !10337
  %add.ptr414 = getelementptr inbounds float, float* %214, i64 3, !dbg !10337
  %call415 = call float @len_v3v3(float* %213, float* %add.ptr414), !dbg !10338
  store float %call415, float* %len_b, align 4, !dbg !10339
  %215 = load float, float* %len_a, align 4, !dbg !10340
  %cmp416 = fcmp oeq float %215, 0.000000e+00, !dbg !10342
  br i1 %cmp416, label %if.then418, label %if.end419, !dbg !10343

if.then418:                                       ; preds = %if.end411
  store float 1.000000e+00, float* %len_a, align 4, !dbg !10344
  br label %if.end419, !dbg !10345

if.end419:                                        ; preds = %if.then418, %if.end411
  %216 = load float, float* %len_b, align 4, !dbg !10346
  %cmp420 = fcmp oeq float %216, 0.000000e+00, !dbg !10348
  br i1 %cmp420, label %if.then422, label %if.end423, !dbg !10349

if.then422:                                       ; preds = %if.end419
  store float 1.000000e+00, float* %len_b, align 4, !dbg !10350
  br label %if.end423, !dbg !10351

if.end423:                                        ; preds = %if.then422, %if.end419
  %217 = load float, float* %len_a, align 4, !dbg !10352
  %218 = load float, float* %len_b, align 4, !dbg !10353
  %div424 = fdiv float %217, %218, !dbg !10354
  store float %div424, float* %len_ratio, align 4, !dbg !10355
  %219 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10356
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %219, i32 0, i32 7, !dbg !10358
  %220 = load i8, i8* %f1, align 1, !dbg !10358
  %conv425 = zext i8 %220 to i32, !dbg !10356
  %and = and i32 %conv425, 1, !dbg !10359
  %tobool426 = icmp ne i32 %and, 0, !dbg !10359
  br i1 %tobool426, label %if.then427, label %if.else513, !dbg !10360

if.then427:                                       ; preds = %if.end423
  %221 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10361
  %h2428 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %221, i32 0, i32 6, !dbg !10361
  %222 = load i8, i8* %h2428, align 2, !dbg !10361
  %conv429 = zext i8 %222 to i32, !dbg !10361
  %cmp430 = icmp eq i32 %conv429, 3, !dbg !10361
  br i1 %cmp430, label %if.then437, label %lor.lhs.false432, !dbg !10361

lor.lhs.false432:                                 ; preds = %if.then427
  %223 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10361
  %h2433 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %223, i32 0, i32 6, !dbg !10361
  %224 = load i8, i8* %h2433, align 2, !dbg !10361
  %conv434 = zext i8 %224 to i32, !dbg !10361
  %cmp435 = icmp eq i32 %conv434, 5, !dbg !10361
  br i1 %cmp435, label %if.then437, label %if.end470, !dbg !10364

if.then437:                                       ; preds = %lor.lhs.false432, %if.then427
  %225 = load float, float* %len_a, align 4, !dbg !10365
  %cmp438 = fcmp ogt float %225, 0x3EE4F8B580000000, !dbg !10368
  br i1 %cmp438, label %if.then440, label %if.end469, !dbg !10369

if.then440:                                       ; preds = %if.then437
  %226 = load float, float* %len_ratio, align 4, !dbg !10370
  %div441 = fdiv float 1.000000e+00, %226, !dbg !10372
  store float %div441, float* %len, align 4, !dbg !10373
  %227 = load float*, float** %p2, align 8, !dbg !10374
  %arrayidx442 = getelementptr inbounds float, float* %227, i64 0, !dbg !10374
  %228 = load float, float* %arrayidx442, align 4, !dbg !10374
  %229 = load float, float* %len, align 4, !dbg !10375
  %230 = load float*, float** %p2, align 8, !dbg !10376
  %arrayidx443 = getelementptr inbounds float, float* %230, i64 0, !dbg !10376
  %231 = load float, float* %arrayidx443, align 4, !dbg !10376
  %232 = load float*, float** %p2, align 8, !dbg !10377
  %add.ptr444 = getelementptr inbounds float, float* %232, i64 -3, !dbg !10377
  %arrayidx445 = getelementptr inbounds float, float* %add.ptr444, i64 0, !dbg !10377
  %233 = load float, float* %arrayidx445, align 4, !dbg !10377
  %sub446 = fsub float %231, %233, !dbg !10378
  %mul447 = fmul float %229, %sub446, !dbg !10379
  %add448 = fadd float %228, %mul447, !dbg !10380
  %234 = load float*, float** %p2, align 8, !dbg !10381
  %add.ptr449 = getelementptr inbounds float, float* %234, i64 3, !dbg !10381
  %arrayidx450 = getelementptr inbounds float, float* %add.ptr449, i64 0, !dbg !10381
  store float %add448, float* %arrayidx450, align 4, !dbg !10382
  %235 = load float*, float** %p2, align 8, !dbg !10383
  %arrayidx451 = getelementptr inbounds float, float* %235, i64 1, !dbg !10383
  %236 = load float, float* %arrayidx451, align 4, !dbg !10383
  %237 = load float, float* %len, align 4, !dbg !10384
  %238 = load float*, float** %p2, align 8, !dbg !10385
  %arrayidx452 = getelementptr inbounds float, float* %238, i64 1, !dbg !10385
  %239 = load float, float* %arrayidx452, align 4, !dbg !10385
  %240 = load float*, float** %p2, align 8, !dbg !10386
  %add.ptr453 = getelementptr inbounds float, float* %240, i64 -3, !dbg !10386
  %arrayidx454 = getelementptr inbounds float, float* %add.ptr453, i64 1, !dbg !10386
  %241 = load float, float* %arrayidx454, align 4, !dbg !10386
  %sub455 = fsub float %239, %241, !dbg !10387
  %mul456 = fmul float %237, %sub455, !dbg !10388
  %add457 = fadd float %236, %mul456, !dbg !10389
  %242 = load float*, float** %p2, align 8, !dbg !10390
  %add.ptr458 = getelementptr inbounds float, float* %242, i64 3, !dbg !10390
  %arrayidx459 = getelementptr inbounds float, float* %add.ptr458, i64 1, !dbg !10390
  store float %add457, float* %arrayidx459, align 4, !dbg !10391
  %243 = load float*, float** %p2, align 8, !dbg !10392
  %arrayidx460 = getelementptr inbounds float, float* %243, i64 2, !dbg !10392
  %244 = load float, float* %arrayidx460, align 4, !dbg !10392
  %245 = load float, float* %len, align 4, !dbg !10393
  %246 = load float*, float** %p2, align 8, !dbg !10394
  %arrayidx461 = getelementptr inbounds float, float* %246, i64 2, !dbg !10394
  %247 = load float, float* %arrayidx461, align 4, !dbg !10394
  %248 = load float*, float** %p2, align 8, !dbg !10395
  %add.ptr462 = getelementptr inbounds float, float* %248, i64 -3, !dbg !10395
  %arrayidx463 = getelementptr inbounds float, float* %add.ptr462, i64 2, !dbg !10395
  %249 = load float, float* %arrayidx463, align 4, !dbg !10395
  %sub464 = fsub float %247, %249, !dbg !10396
  %mul465 = fmul float %245, %sub464, !dbg !10397
  %add466 = fadd float %244, %mul465, !dbg !10398
  %250 = load float*, float** %p2, align 8, !dbg !10399
  %add.ptr467 = getelementptr inbounds float, float* %250, i64 3, !dbg !10399
  %arrayidx468 = getelementptr inbounds float, float* %add.ptr467, i64 2, !dbg !10399
  store float %add466, float* %arrayidx468, align 4, !dbg !10400
  br label %if.end469, !dbg !10401

if.end469:                                        ; preds = %if.then440, %if.then437
  br label %if.end470, !dbg !10402

if.end470:                                        ; preds = %if.end469, %lor.lhs.false432
  %251 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10403
  %h1471 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %251, i32 0, i32 5, !dbg !10403
  %252 = load i8, i8* %h1471, align 1, !dbg !10403
  %conv472 = zext i8 %252 to i32, !dbg !10403
  %cmp473 = icmp eq i32 %conv472, 3, !dbg !10403
  br i1 %cmp473, label %if.then480, label %lor.lhs.false475, !dbg !10403

lor.lhs.false475:                                 ; preds = %if.end470
  %253 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10403
  %h1476 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %253, i32 0, i32 5, !dbg !10403
  %254 = load i8, i8* %h1476, align 1, !dbg !10403
  %conv477 = zext i8 %254 to i32, !dbg !10403
  %cmp478 = icmp eq i32 %conv477, 5, !dbg !10403
  br i1 %cmp478, label %if.then480, label %if.end512, !dbg !10405

if.then480:                                       ; preds = %lor.lhs.false475, %if.end470
  %255 = load float, float* %len_b, align 4, !dbg !10406
  %cmp481 = fcmp ogt float %255, 0x3EE4F8B580000000, !dbg !10409
  br i1 %cmp481, label %if.then483, label %if.end511, !dbg !10410

if.then483:                                       ; preds = %if.then480
  %256 = load float, float* %len_ratio, align 4, !dbg !10411
  store float %256, float* %len, align 4, !dbg !10413
  %257 = load float*, float** %p2, align 8, !dbg !10414
  %arrayidx484 = getelementptr inbounds float, float* %257, i64 0, !dbg !10414
  %258 = load float, float* %arrayidx484, align 4, !dbg !10414
  %259 = load float, float* %len, align 4, !dbg !10415
  %260 = load float*, float** %p2, align 8, !dbg !10416
  %arrayidx485 = getelementptr inbounds float, float* %260, i64 0, !dbg !10416
  %261 = load float, float* %arrayidx485, align 4, !dbg !10416
  %262 = load float*, float** %p2, align 8, !dbg !10417
  %add.ptr486 = getelementptr inbounds float, float* %262, i64 3, !dbg !10417
  %arrayidx487 = getelementptr inbounds float, float* %add.ptr486, i64 0, !dbg !10417
  %263 = load float, float* %arrayidx487, align 4, !dbg !10417
  %sub488 = fsub float %261, %263, !dbg !10418
  %mul489 = fmul float %259, %sub488, !dbg !10419
  %add490 = fadd float %258, %mul489, !dbg !10420
  %264 = load float*, float** %p2, align 8, !dbg !10421
  %add.ptr491 = getelementptr inbounds float, float* %264, i64 -3, !dbg !10421
  %arrayidx492 = getelementptr inbounds float, float* %add.ptr491, i64 0, !dbg !10421
  store float %add490, float* %arrayidx492, align 4, !dbg !10422
  %265 = load float*, float** %p2, align 8, !dbg !10423
  %arrayidx493 = getelementptr inbounds float, float* %265, i64 1, !dbg !10423
  %266 = load float, float* %arrayidx493, align 4, !dbg !10423
  %267 = load float, float* %len, align 4, !dbg !10424
  %268 = load float*, float** %p2, align 8, !dbg !10425
  %arrayidx494 = getelementptr inbounds float, float* %268, i64 1, !dbg !10425
  %269 = load float, float* %arrayidx494, align 4, !dbg !10425
  %270 = load float*, float** %p2, align 8, !dbg !10426
  %add.ptr495 = getelementptr inbounds float, float* %270, i64 3, !dbg !10426
  %arrayidx496 = getelementptr inbounds float, float* %add.ptr495, i64 1, !dbg !10426
  %271 = load float, float* %arrayidx496, align 4, !dbg !10426
  %sub497 = fsub float %269, %271, !dbg !10427
  %mul498 = fmul float %267, %sub497, !dbg !10428
  %add499 = fadd float %266, %mul498, !dbg !10429
  %272 = load float*, float** %p2, align 8, !dbg !10430
  %add.ptr500 = getelementptr inbounds float, float* %272, i64 -3, !dbg !10430
  %arrayidx501 = getelementptr inbounds float, float* %add.ptr500, i64 1, !dbg !10430
  store float %add499, float* %arrayidx501, align 4, !dbg !10431
  %273 = load float*, float** %p2, align 8, !dbg !10432
  %arrayidx502 = getelementptr inbounds float, float* %273, i64 2, !dbg !10432
  %274 = load float, float* %arrayidx502, align 4, !dbg !10432
  %275 = load float, float* %len, align 4, !dbg !10433
  %276 = load float*, float** %p2, align 8, !dbg !10434
  %arrayidx503 = getelementptr inbounds float, float* %276, i64 2, !dbg !10434
  %277 = load float, float* %arrayidx503, align 4, !dbg !10434
  %278 = load float*, float** %p2, align 8, !dbg !10435
  %add.ptr504 = getelementptr inbounds float, float* %278, i64 3, !dbg !10435
  %arrayidx505 = getelementptr inbounds float, float* %add.ptr504, i64 2, !dbg !10435
  %279 = load float, float* %arrayidx505, align 4, !dbg !10435
  %sub506 = fsub float %277, %279, !dbg !10436
  %mul507 = fmul float %275, %sub506, !dbg !10437
  %add508 = fadd float %274, %mul507, !dbg !10438
  %280 = load float*, float** %p2, align 8, !dbg !10439
  %add.ptr509 = getelementptr inbounds float, float* %280, i64 -3, !dbg !10439
  %arrayidx510 = getelementptr inbounds float, float* %add.ptr509, i64 2, !dbg !10439
  store float %add508, float* %arrayidx510, align 4, !dbg !10440
  br label %if.end511, !dbg !10441

if.end511:                                        ; preds = %if.then483, %if.then480
  br label %if.end512, !dbg !10442

if.end512:                                        ; preds = %if.end511, %lor.lhs.false475
  br label %if.end599, !dbg !10443

if.else513:                                       ; preds = %if.end423
  %281 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10444
  %h1514 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %281, i32 0, i32 5, !dbg !10444
  %282 = load i8, i8* %h1514, align 1, !dbg !10444
  %conv515 = zext i8 %282 to i32, !dbg !10444
  %cmp516 = icmp eq i32 %conv515, 3, !dbg !10444
  br i1 %cmp516, label %if.then523, label %lor.lhs.false518, !dbg !10444

lor.lhs.false518:                                 ; preds = %if.else513
  %283 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10444
  %h1519 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %283, i32 0, i32 5, !dbg !10444
  %284 = load i8, i8* %h1519, align 1, !dbg !10444
  %conv520 = zext i8 %284 to i32, !dbg !10444
  %cmp521 = icmp eq i32 %conv520, 5, !dbg !10444
  br i1 %cmp521, label %if.then523, label %if.end555, !dbg !10447

if.then523:                                       ; preds = %lor.lhs.false518, %if.else513
  %285 = load float, float* %len_b, align 4, !dbg !10448
  %cmp524 = fcmp ogt float %285, 0x3EE4F8B580000000, !dbg !10451
  br i1 %cmp524, label %if.then526, label %if.end554, !dbg !10452

if.then526:                                       ; preds = %if.then523
  %286 = load float, float* %len_ratio, align 4, !dbg !10453
  store float %286, float* %len, align 4, !dbg !10455
  %287 = load float*, float** %p2, align 8, !dbg !10456
  %arrayidx527 = getelementptr inbounds float, float* %287, i64 0, !dbg !10456
  %288 = load float, float* %arrayidx527, align 4, !dbg !10456
  %289 = load float, float* %len, align 4, !dbg !10457
  %290 = load float*, float** %p2, align 8, !dbg !10458
  %arrayidx528 = getelementptr inbounds float, float* %290, i64 0, !dbg !10458
  %291 = load float, float* %arrayidx528, align 4, !dbg !10458
  %292 = load float*, float** %p2, align 8, !dbg !10459
  %add.ptr529 = getelementptr inbounds float, float* %292, i64 3, !dbg !10459
  %arrayidx530 = getelementptr inbounds float, float* %add.ptr529, i64 0, !dbg !10459
  %293 = load float, float* %arrayidx530, align 4, !dbg !10459
  %sub531 = fsub float %291, %293, !dbg !10460
  %mul532 = fmul float %289, %sub531, !dbg !10461
  %add533 = fadd float %288, %mul532, !dbg !10462
  %294 = load float*, float** %p2, align 8, !dbg !10463
  %add.ptr534 = getelementptr inbounds float, float* %294, i64 -3, !dbg !10463
  %arrayidx535 = getelementptr inbounds float, float* %add.ptr534, i64 0, !dbg !10463
  store float %add533, float* %arrayidx535, align 4, !dbg !10464
  %295 = load float*, float** %p2, align 8, !dbg !10465
  %arrayidx536 = getelementptr inbounds float, float* %295, i64 1, !dbg !10465
  %296 = load float, float* %arrayidx536, align 4, !dbg !10465
  %297 = load float, float* %len, align 4, !dbg !10466
  %298 = load float*, float** %p2, align 8, !dbg !10467
  %arrayidx537 = getelementptr inbounds float, float* %298, i64 1, !dbg !10467
  %299 = load float, float* %arrayidx537, align 4, !dbg !10467
  %300 = load float*, float** %p2, align 8, !dbg !10468
  %add.ptr538 = getelementptr inbounds float, float* %300, i64 3, !dbg !10468
  %arrayidx539 = getelementptr inbounds float, float* %add.ptr538, i64 1, !dbg !10468
  %301 = load float, float* %arrayidx539, align 4, !dbg !10468
  %sub540 = fsub float %299, %301, !dbg !10469
  %mul541 = fmul float %297, %sub540, !dbg !10470
  %add542 = fadd float %296, %mul541, !dbg !10471
  %302 = load float*, float** %p2, align 8, !dbg !10472
  %add.ptr543 = getelementptr inbounds float, float* %302, i64 -3, !dbg !10472
  %arrayidx544 = getelementptr inbounds float, float* %add.ptr543, i64 1, !dbg !10472
  store float %add542, float* %arrayidx544, align 4, !dbg !10473
  %303 = load float*, float** %p2, align 8, !dbg !10474
  %arrayidx545 = getelementptr inbounds float, float* %303, i64 2, !dbg !10474
  %304 = load float, float* %arrayidx545, align 4, !dbg !10474
  %305 = load float, float* %len, align 4, !dbg !10475
  %306 = load float*, float** %p2, align 8, !dbg !10476
  %arrayidx546 = getelementptr inbounds float, float* %306, i64 2, !dbg !10476
  %307 = load float, float* %arrayidx546, align 4, !dbg !10476
  %308 = load float*, float** %p2, align 8, !dbg !10477
  %add.ptr547 = getelementptr inbounds float, float* %308, i64 3, !dbg !10477
  %arrayidx548 = getelementptr inbounds float, float* %add.ptr547, i64 2, !dbg !10477
  %309 = load float, float* %arrayidx548, align 4, !dbg !10477
  %sub549 = fsub float %307, %309, !dbg !10478
  %mul550 = fmul float %305, %sub549, !dbg !10479
  %add551 = fadd float %304, %mul550, !dbg !10480
  %310 = load float*, float** %p2, align 8, !dbg !10481
  %add.ptr552 = getelementptr inbounds float, float* %310, i64 -3, !dbg !10481
  %arrayidx553 = getelementptr inbounds float, float* %add.ptr552, i64 2, !dbg !10481
  store float %add551, float* %arrayidx553, align 4, !dbg !10482
  br label %if.end554, !dbg !10483

if.end554:                                        ; preds = %if.then526, %if.then523
  br label %if.end555, !dbg !10484

if.end555:                                        ; preds = %if.end554, %lor.lhs.false518
  %311 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10485
  %h2556 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %311, i32 0, i32 6, !dbg !10485
  %312 = load i8, i8* %h2556, align 2, !dbg !10485
  %conv557 = zext i8 %312 to i32, !dbg !10485
  %cmp558 = icmp eq i32 %conv557, 3, !dbg !10485
  br i1 %cmp558, label %if.then565, label %lor.lhs.false560, !dbg !10485

lor.lhs.false560:                                 ; preds = %if.end555
  %313 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10485
  %h2561 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %313, i32 0, i32 6, !dbg !10485
  %314 = load i8, i8* %h2561, align 2, !dbg !10485
  %conv562 = zext i8 %314 to i32, !dbg !10485
  %cmp563 = icmp eq i32 %conv562, 5, !dbg !10485
  br i1 %cmp563, label %if.then565, label %if.end598, !dbg !10487

if.then565:                                       ; preds = %lor.lhs.false560, %if.end555
  %315 = load float, float* %len_a, align 4, !dbg !10488
  %cmp566 = fcmp ogt float %315, 0x3EE4F8B580000000, !dbg !10491
  br i1 %cmp566, label %if.then568, label %if.end597, !dbg !10492

if.then568:                                       ; preds = %if.then565
  %316 = load float, float* %len_ratio, align 4, !dbg !10493
  %div569 = fdiv float 1.000000e+00, %316, !dbg !10495
  store float %div569, float* %len, align 4, !dbg !10496
  %317 = load float*, float** %p2, align 8, !dbg !10497
  %arrayidx570 = getelementptr inbounds float, float* %317, i64 0, !dbg !10497
  %318 = load float, float* %arrayidx570, align 4, !dbg !10497
  %319 = load float, float* %len, align 4, !dbg !10498
  %320 = load float*, float** %p2, align 8, !dbg !10499
  %arrayidx571 = getelementptr inbounds float, float* %320, i64 0, !dbg !10499
  %321 = load float, float* %arrayidx571, align 4, !dbg !10499
  %322 = load float*, float** %p2, align 8, !dbg !10500
  %add.ptr572 = getelementptr inbounds float, float* %322, i64 -3, !dbg !10500
  %arrayidx573 = getelementptr inbounds float, float* %add.ptr572, i64 0, !dbg !10500
  %323 = load float, float* %arrayidx573, align 4, !dbg !10500
  %sub574 = fsub float %321, %323, !dbg !10501
  %mul575 = fmul float %319, %sub574, !dbg !10502
  %add576 = fadd float %318, %mul575, !dbg !10503
  %324 = load float*, float** %p2, align 8, !dbg !10504
  %add.ptr577 = getelementptr inbounds float, float* %324, i64 3, !dbg !10504
  %arrayidx578 = getelementptr inbounds float, float* %add.ptr577, i64 0, !dbg !10504
  store float %add576, float* %arrayidx578, align 4, !dbg !10505
  %325 = load float*, float** %p2, align 8, !dbg !10506
  %arrayidx579 = getelementptr inbounds float, float* %325, i64 1, !dbg !10506
  %326 = load float, float* %arrayidx579, align 4, !dbg !10506
  %327 = load float, float* %len, align 4, !dbg !10507
  %328 = load float*, float** %p2, align 8, !dbg !10508
  %arrayidx580 = getelementptr inbounds float, float* %328, i64 1, !dbg !10508
  %329 = load float, float* %arrayidx580, align 4, !dbg !10508
  %330 = load float*, float** %p2, align 8, !dbg !10509
  %add.ptr581 = getelementptr inbounds float, float* %330, i64 -3, !dbg !10509
  %arrayidx582 = getelementptr inbounds float, float* %add.ptr581, i64 1, !dbg !10509
  %331 = load float, float* %arrayidx582, align 4, !dbg !10509
  %sub583 = fsub float %329, %331, !dbg !10510
  %mul584 = fmul float %327, %sub583, !dbg !10511
  %add585 = fadd float %326, %mul584, !dbg !10512
  %332 = load float*, float** %p2, align 8, !dbg !10513
  %add.ptr586 = getelementptr inbounds float, float* %332, i64 3, !dbg !10513
  %arrayidx587 = getelementptr inbounds float, float* %add.ptr586, i64 1, !dbg !10513
  store float %add585, float* %arrayidx587, align 4, !dbg !10514
  %333 = load float*, float** %p2, align 8, !dbg !10515
  %arrayidx588 = getelementptr inbounds float, float* %333, i64 2, !dbg !10515
  %334 = load float, float* %arrayidx588, align 4, !dbg !10515
  %335 = load float, float* %len, align 4, !dbg !10516
  %336 = load float*, float** %p2, align 8, !dbg !10517
  %arrayidx589 = getelementptr inbounds float, float* %336, i64 2, !dbg !10517
  %337 = load float, float* %arrayidx589, align 4, !dbg !10517
  %338 = load float*, float** %p2, align 8, !dbg !10518
  %add.ptr590 = getelementptr inbounds float, float* %338, i64 -3, !dbg !10518
  %arrayidx591 = getelementptr inbounds float, float* %add.ptr590, i64 2, !dbg !10518
  %339 = load float, float* %arrayidx591, align 4, !dbg !10518
  %sub592 = fsub float %337, %339, !dbg !10519
  %mul593 = fmul float %335, %sub592, !dbg !10520
  %add594 = fadd float %334, %mul593, !dbg !10521
  %340 = load float*, float** %p2, align 8, !dbg !10522
  %add.ptr595 = getelementptr inbounds float, float* %340, i64 3, !dbg !10522
  %arrayidx596 = getelementptr inbounds float, float* %add.ptr595, i64 2, !dbg !10522
  store float %add594, float* %arrayidx596, align 4, !dbg !10523
  br label %if.end597, !dbg !10524

if.end597:                                        ; preds = %if.then568, %if.then565
  br label %if.end598, !dbg !10525

if.end598:                                        ; preds = %if.end597, %lor.lhs.false560
  br label %if.end599

if.end599:                                        ; preds = %if.then, %if.then410, %if.end598, %if.end512
  ret void, !dbg !10526
}

; Function Attrs: noinline nounwind uwtable
define internal void @calchandlesNurb_intern(%struct.Nurb* %nu, i8 zeroext %skip_align) #0 !dbg !10527 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %skip_align.addr = alloca i8, align 1
  %bezt = alloca %struct.BezTriple*, align 8
  %prev = alloca %struct.BezTriple*, align 8
  %next = alloca %struct.BezTriple*, align 8
  %a = alloca i32, align 4
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !10530, metadata !DIExpression()), !dbg !10531
  store i8 %skip_align, i8* %skip_align.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %skip_align.addr, metadata !10532, metadata !DIExpression()), !dbg !10533
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !10534, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %prev, metadata !10536, metadata !DIExpression()), !dbg !10537
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %next, metadata !10538, metadata !DIExpression()), !dbg !10539
  call void @llvm.dbg.declare(metadata i32* %a, metadata !10540, metadata !DIExpression()), !dbg !10541
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !10542
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %0, i32 0, i32 2, !dbg !10544
  %1 = load i16, i16* %type, align 8, !dbg !10544
  %conv = sext i16 %1 to i32, !dbg !10542
  %cmp = icmp ne i32 %conv, 1, !dbg !10545
  br i1 %cmp, label %if.then, label %if.end, !dbg !10546

if.then:                                          ; preds = %entry
  br label %while.end, !dbg !10547

if.end:                                           ; preds = %entry
  %2 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !10548
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %2, i32 0, i32 6, !dbg !10550
  %3 = load i32, i32* %pntsu, align 8, !dbg !10550
  %cmp2 = icmp slt i32 %3, 2, !dbg !10551
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !10552

if.then4:                                         ; preds = %if.end
  br label %while.end, !dbg !10553

if.end5:                                          ; preds = %if.end
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !10554
  %pntsu6 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 6, !dbg !10555
  %5 = load i32, i32* %pntsu6, align 8, !dbg !10555
  store i32 %5, i32* %a, align 4, !dbg !10556
  %6 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !10557
  %bezt7 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 18, !dbg !10558
  %7 = load %struct.BezTriple*, %struct.BezTriple** %bezt7, align 8, !dbg !10558
  store %struct.BezTriple* %7, %struct.BezTriple** %bezt, align 8, !dbg !10559
  %8 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !10560
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 13, !dbg !10562
  %9 = load i16, i16* %flagu, align 4, !dbg !10562
  %conv8 = sext i16 %9 to i32, !dbg !10560
  %and = and i32 %conv8, 1, !dbg !10563
  %tobool = icmp ne i32 %and, 0, !dbg !10563
  br i1 %tobool, label %if.then9, label %if.else, !dbg !10564

if.then9:                                         ; preds = %if.end5
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10565
  %11 = load i32, i32* %a, align 4, !dbg !10566
  %sub = sub nsw i32 %11, 1, !dbg !10567
  %idx.ext = sext i32 %sub to i64, !dbg !10568
  %add.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %10, i64 %idx.ext, !dbg !10568
  store %struct.BezTriple* %add.ptr, %struct.BezTriple** %prev, align 8, !dbg !10569
  br label %if.end10, !dbg !10570

if.else:                                          ; preds = %if.end5
  store %struct.BezTriple* null, %struct.BezTriple** %prev, align 8, !dbg !10571
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then9
  %12 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10572
  %add.ptr11 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %12, i64 1, !dbg !10573
  store %struct.BezTriple* %add.ptr11, %struct.BezTriple** %next, align 8, !dbg !10574
  br label %while.cond, !dbg !10575

while.cond:                                       ; preds = %if.end25, %if.end10
  %13 = load i32, i32* %a, align 4, !dbg !10576
  %dec = add nsw i32 %13, -1, !dbg !10576
  store i32 %dec, i32* %a, align 4, !dbg !10576
  %tobool12 = icmp ne i32 %13, 0, !dbg !10575
  br i1 %tobool12, label %while.body, label %while.end, !dbg !10575

while.body:                                       ; preds = %while.cond
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10577
  %15 = load %struct.BezTriple*, %struct.BezTriple** %prev, align 8, !dbg !10579
  %16 = load %struct.BezTriple*, %struct.BezTriple** %next, align 8, !dbg !10580
  %17 = load i8, i8* %skip_align.addr, align 1, !dbg !10581
  call void @calchandleNurb_intern(%struct.BezTriple* %14, %struct.BezTriple* %15, %struct.BezTriple* %16, i8 zeroext 0, i8 zeroext %17), !dbg !10582
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10583
  store %struct.BezTriple* %18, %struct.BezTriple** %prev, align 8, !dbg !10584
  %19 = load i32, i32* %a, align 4, !dbg !10585
  %cmp13 = icmp eq i32 %19, 1, !dbg !10587
  br i1 %cmp13, label %if.then15, label %if.else24, !dbg !10588

if.then15:                                        ; preds = %while.body
  %20 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !10589
  %flagu16 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %20, i32 0, i32 13, !dbg !10592
  %21 = load i16, i16* %flagu16, align 4, !dbg !10592
  %conv17 = sext i16 %21 to i32, !dbg !10589
  %and18 = and i32 %conv17, 1, !dbg !10593
  %tobool19 = icmp ne i32 %and18, 0, !dbg !10593
  br i1 %tobool19, label %if.then20, label %if.else22, !dbg !10594

if.then20:                                        ; preds = %if.then15
  %22 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !10595
  %bezt21 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %22, i32 0, i32 18, !dbg !10596
  %23 = load %struct.BezTriple*, %struct.BezTriple** %bezt21, align 8, !dbg !10596
  store %struct.BezTriple* %23, %struct.BezTriple** %next, align 8, !dbg !10597
  br label %if.end23, !dbg !10598

if.else22:                                        ; preds = %if.then15
  store %struct.BezTriple* null, %struct.BezTriple** %next, align 8, !dbg !10599
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then20
  br label %if.end25, !dbg !10600

if.else24:                                        ; preds = %while.body
  %24 = load %struct.BezTriple*, %struct.BezTriple** %next, align 8, !dbg !10601
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %24, i32 1, !dbg !10601
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %next, align 8, !dbg !10601
  br label %if.end25

if.end25:                                         ; preds = %if.else24, %if.end23
  %25 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10602
  %incdec.ptr26 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %25, i32 1, !dbg !10602
  store %struct.BezTriple* %incdec.ptr26, %struct.BezTriple** %bezt, align 8, !dbg !10602
  br label %while.cond, !dbg !10575, !llvm.loop !10603

while.end:                                        ; preds = %if.then, %if.then4, %while.cond
  ret void, !dbg !10605
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurb_handle_calc_simple(%struct.Nurb* %nu, %struct.BezTriple* %bezt) #0 !dbg !10606 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %bezt.addr = alloca %struct.BezTriple*, align 8
  %prev = alloca %struct.BezTriple*, align 8
  %next = alloca %struct.BezTriple*, align 8
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !10609, metadata !DIExpression()), !dbg !10610
  store %struct.BezTriple* %bezt, %struct.BezTriple** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt.addr, metadata !10611, metadata !DIExpression()), !dbg !10612
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !10613
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %0, i32 0, i32 6, !dbg !10615
  %1 = load i32, i32* %pntsu, align 8, !dbg !10615
  %cmp = icmp sgt i32 %1, 1, !dbg !10616
  br i1 %cmp, label %if.then, label %if.end, !dbg !10617

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %prev, metadata !10618, metadata !DIExpression()), !dbg !10620
  %2 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !10621
  %3 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10622
  %call = call %struct.BezTriple* @BKE_nurb_bezt_get_prev(%struct.Nurb* %2, %struct.BezTriple* %3), !dbg !10623
  store %struct.BezTriple* %call, %struct.BezTriple** %prev, align 8, !dbg !10620
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %next, metadata !10624, metadata !DIExpression()), !dbg !10625
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !10626
  %5 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10627
  %call1 = call %struct.BezTriple* @BKE_nurb_bezt_get_next(%struct.Nurb* %4, %struct.BezTriple* %5), !dbg !10628
  store %struct.BezTriple* %call1, %struct.BezTriple** %next, align 8, !dbg !10625
  %6 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10629
  %7 = load %struct.BezTriple*, %struct.BezTriple** %prev, align 8, !dbg !10630
  %8 = load %struct.BezTriple*, %struct.BezTriple** %next, align 8, !dbg !10631
  call void @BKE_nurb_handle_calc(%struct.BezTriple* %6, %struct.BezTriple* %7, %struct.BezTriple* %8, i8 zeroext 0), !dbg !10632
  br label %if.end, !dbg !10633

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10634
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurb_bezt_handle_test(%struct.BezTriple* %bezt, i8 zeroext %use_handle) #0 !dbg !10635 {
entry:
  %bezt.addr = alloca %struct.BezTriple*, align 8
  %use_handle.addr = alloca i8, align 1
  %flag = alloca i16, align 2
  store %struct.BezTriple* %bezt, %struct.BezTriple** %bezt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt.addr, metadata !10638, metadata !DIExpression()), !dbg !10639
  store i8 %use_handle, i8* %use_handle.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_handle.addr, metadata !10640, metadata !DIExpression()), !dbg !10641
  call void @llvm.dbg.declare(metadata i16* %flag, metadata !10642, metadata !DIExpression()), !dbg !10643
  store i16 0, i16* %flag, align 2, !dbg !10643
  %0 = load i8, i8* %use_handle.addr, align 1, !dbg !10644
  %tobool = icmp ne i8 %0, 0, !dbg !10644
  br i1 %tobool, label %if.then, label %if.else, !dbg !10646

if.then:                                          ; preds = %entry
  %1 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10647
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %1, i32 0, i32 7, !dbg !10650
  %2 = load i8, i8* %f1, align 1, !dbg !10650
  %conv = zext i8 %2 to i32, !dbg !10647
  %and = and i32 %conv, 1, !dbg !10651
  %tobool1 = icmp ne i32 %and, 0, !dbg !10651
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !10652

if.then2:                                         ; preds = %if.then
  %3 = load i16, i16* %flag, align 2, !dbg !10653
  %conv3 = sext i16 %3 to i32, !dbg !10653
  %or = or i32 %conv3, 1, !dbg !10653
  %conv4 = trunc i32 %or to i16, !dbg !10653
  store i16 %conv4, i16* %flag, align 2, !dbg !10653
  br label %if.end, !dbg !10654

if.end:                                           ; preds = %if.then2, %if.then
  %4 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10655
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %4, i32 0, i32 8, !dbg !10657
  %5 = load i8, i8* %f2, align 4, !dbg !10657
  %conv5 = zext i8 %5 to i32, !dbg !10655
  %and6 = and i32 %conv5, 1, !dbg !10658
  %tobool7 = icmp ne i32 %and6, 0, !dbg !10658
  br i1 %tobool7, label %if.then8, label %if.end12, !dbg !10659

if.then8:                                         ; preds = %if.end
  %6 = load i16, i16* %flag, align 2, !dbg !10660
  %conv9 = sext i16 %6 to i32, !dbg !10660
  %or10 = or i32 %conv9, 2, !dbg !10660
  %conv11 = trunc i32 %or10 to i16, !dbg !10660
  store i16 %conv11, i16* %flag, align 2, !dbg !10660
  br label %if.end12, !dbg !10661

if.end12:                                         ; preds = %if.then8, %if.end
  %7 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10662
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %7, i32 0, i32 9, !dbg !10664
  %8 = load i8, i8* %f3, align 1, !dbg !10664
  %conv13 = zext i8 %8 to i32, !dbg !10662
  %and14 = and i32 %conv13, 1, !dbg !10665
  %tobool15 = icmp ne i32 %and14, 0, !dbg !10665
  br i1 %tobool15, label %if.then16, label %if.end20, !dbg !10666

if.then16:                                        ; preds = %if.end12
  %9 = load i16, i16* %flag, align 2, !dbg !10667
  %conv17 = sext i16 %9 to i32, !dbg !10667
  %or18 = or i32 %conv17, 4, !dbg !10667
  %conv19 = trunc i32 %or18 to i16, !dbg !10667
  store i16 %conv19, i16* %flag, align 2, !dbg !10667
  br label %if.end20, !dbg !10668

if.end20:                                         ; preds = %if.then16, %if.end12
  br label %if.end26, !dbg !10669

if.else:                                          ; preds = %entry
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10670
  %f221 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %10, i32 0, i32 8, !dbg !10672
  %11 = load i8, i8* %f221, align 4, !dbg !10672
  %conv22 = zext i8 %11 to i32, !dbg !10670
  %and23 = and i32 %conv22, 1, !dbg !10673
  %tobool24 = icmp ne i32 %and23, 0, !dbg !10674
  %12 = zext i1 %tobool24 to i64, !dbg !10674
  %cond = select i1 %tobool24, i32 7, i32 0, !dbg !10674
  %conv25 = trunc i32 %cond to i16, !dbg !10674
  store i16 %conv25, i16* %flag, align 2, !dbg !10675
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.end20
  %13 = load i16, i16* %flag, align 2, !dbg !10676
  %conv27 = sext i16 %13 to i32, !dbg !10676
  %cmp = icmp eq i32 %conv27, 0, !dbg !10676
  br i1 %cmp, label %if.end95, label %lor.lhs.false, !dbg !10676

lor.lhs.false:                                    ; preds = %if.end26
  %14 = load i16, i16* %flag, align 2, !dbg !10676
  %conv29 = sext i16 %14 to i32, !dbg !10676
  %cmp30 = icmp eq i32 %conv29, 7, !dbg !10676
  br i1 %cmp30, label %if.end95, label %if.then32, !dbg !10678

if.then32:                                        ; preds = %lor.lhs.false
  %15 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10679
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %15, i32 0, i32 5, !dbg !10679
  %16 = load i8, i8* %h1, align 1, !dbg !10679
  %conv33 = zext i8 %16 to i32, !dbg !10679
  %cmp34 = icmp eq i32 %conv33, 1, !dbg !10679
  br i1 %cmp34, label %if.then41, label %lor.lhs.false36, !dbg !10679

lor.lhs.false36:                                  ; preds = %if.then32
  %17 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10679
  %h137 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %17, i32 0, i32 5, !dbg !10679
  %18 = load i8, i8* %h137, align 1, !dbg !10679
  %conv38 = zext i8 %18 to i32, !dbg !10679
  %cmp39 = icmp eq i32 %conv38, 4, !dbg !10679
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !10682

if.then41:                                        ; preds = %lor.lhs.false36, %if.then32
  %19 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10683
  %h142 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %19, i32 0, i32 5, !dbg !10685
  store i8 3, i8* %h142, align 1, !dbg !10686
  br label %if.end43, !dbg !10687

if.end43:                                         ; preds = %if.then41, %lor.lhs.false36
  %20 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10688
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %20, i32 0, i32 6, !dbg !10688
  %21 = load i8, i8* %h2, align 2, !dbg !10688
  %conv44 = zext i8 %21 to i32, !dbg !10688
  %cmp45 = icmp eq i32 %conv44, 1, !dbg !10688
  br i1 %cmp45, label %if.then52, label %lor.lhs.false47, !dbg !10688

lor.lhs.false47:                                  ; preds = %if.end43
  %22 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10688
  %h248 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %22, i32 0, i32 6, !dbg !10688
  %23 = load i8, i8* %h248, align 2, !dbg !10688
  %conv49 = zext i8 %23 to i32, !dbg !10688
  %cmp50 = icmp eq i32 %conv49, 4, !dbg !10688
  br i1 %cmp50, label %if.then52, label %if.end54, !dbg !10690

if.then52:                                        ; preds = %lor.lhs.false47, %if.end43
  %24 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10691
  %h253 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %24, i32 0, i32 6, !dbg !10693
  store i8 3, i8* %h253, align 2, !dbg !10694
  br label %if.end54, !dbg !10695

if.end54:                                         ; preds = %if.then52, %lor.lhs.false47
  %25 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10696
  %h155 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %25, i32 0, i32 5, !dbg !10698
  %26 = load i8, i8* %h155, align 1, !dbg !10698
  %conv56 = zext i8 %26 to i32, !dbg !10696
  %cmp57 = icmp eq i32 %conv56, 2, !dbg !10699
  br i1 %cmp57, label %if.then59, label %if.end73, !dbg !10700

if.then59:                                        ; preds = %if.end54
  %27 = load i16, i16* %flag, align 2, !dbg !10701
  %conv60 = sext i16 %27 to i32, !dbg !10701
  %and61 = and i32 %conv60, 1, !dbg !10704
  %tobool62 = icmp ne i32 %and61, 0, !dbg !10705
  %lnot = xor i1 %tobool62, true, !dbg !10705
  %lnot.ext = zext i1 %lnot to i32, !dbg !10705
  %28 = load i16, i16* %flag, align 2, !dbg !10706
  %conv63 = sext i16 %28 to i32, !dbg !10706
  %and64 = and i32 %conv63, 2, !dbg !10707
  %tobool65 = icmp ne i32 %and64, 0, !dbg !10708
  %lnot66 = xor i1 %tobool65, true, !dbg !10708
  %lnot.ext67 = zext i1 %lnot66 to i32, !dbg !10708
  %cmp68 = icmp ne i32 %lnot.ext, %lnot.ext67, !dbg !10709
  br i1 %cmp68, label %if.then70, label %if.end72, !dbg !10710

if.then70:                                        ; preds = %if.then59
  %29 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10711
  %h171 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %29, i32 0, i32 5, !dbg !10713
  store i8 0, i8* %h171, align 1, !dbg !10714
  br label %if.end72, !dbg !10715

if.end72:                                         ; preds = %if.then70, %if.then59
  br label %if.end73, !dbg !10716

if.end73:                                         ; preds = %if.end72, %if.end54
  %30 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10717
  %h274 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %30, i32 0, i32 6, !dbg !10719
  %31 = load i8, i8* %h274, align 2, !dbg !10719
  %conv75 = zext i8 %31 to i32, !dbg !10717
  %cmp76 = icmp eq i32 %conv75, 2, !dbg !10720
  br i1 %cmp76, label %if.then78, label %if.end94, !dbg !10721

if.then78:                                        ; preds = %if.end73
  %32 = load i16, i16* %flag, align 2, !dbg !10722
  %conv79 = sext i16 %32 to i32, !dbg !10722
  %and80 = and i32 %conv79, 4, !dbg !10725
  %tobool81 = icmp ne i32 %and80, 0, !dbg !10726
  %lnot82 = xor i1 %tobool81, true, !dbg !10726
  %lnot.ext83 = zext i1 %lnot82 to i32, !dbg !10726
  %33 = load i16, i16* %flag, align 2, !dbg !10727
  %conv84 = sext i16 %33 to i32, !dbg !10727
  %and85 = and i32 %conv84, 2, !dbg !10728
  %tobool86 = icmp ne i32 %and85, 0, !dbg !10729
  %lnot87 = xor i1 %tobool86, true, !dbg !10729
  %lnot.ext88 = zext i1 %lnot87 to i32, !dbg !10729
  %cmp89 = icmp ne i32 %lnot.ext83, %lnot.ext88, !dbg !10730
  br i1 %cmp89, label %if.then91, label %if.end93, !dbg !10731

if.then91:                                        ; preds = %if.then78
  %34 = load %struct.BezTriple*, %struct.BezTriple** %bezt.addr, align 8, !dbg !10732
  %h292 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %34, i32 0, i32 6, !dbg !10734
  store i8 0, i8* %h292, align 2, !dbg !10735
  br label %if.end93, !dbg !10736

if.end93:                                         ; preds = %if.then91, %if.then78
  br label %if.end94, !dbg !10737

if.end94:                                         ; preds = %if.end93, %if.end73
  br label %if.end95, !dbg !10738

if.end95:                                         ; preds = %if.end94, %lor.lhs.false, %if.end26
  ret void, !dbg !10739
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurb_handles_test(%struct.Nurb* %nu, i8 zeroext %use_handle) #0 !dbg !10740 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %use_handle.addr = alloca i8, align 1
  %bezt = alloca %struct.BezTriple*, align 8
  %a = alloca i32, align 4
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !10743, metadata !DIExpression()), !dbg !10744
  store i8 %use_handle, i8* %use_handle.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_handle.addr, metadata !10745, metadata !DIExpression()), !dbg !10746
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !10747, metadata !DIExpression()), !dbg !10748
  call void @llvm.dbg.declare(metadata i32* %a, metadata !10749, metadata !DIExpression()), !dbg !10750
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !10751
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %0, i32 0, i32 2, !dbg !10753
  %1 = load i16, i16* %type, align 8, !dbg !10753
  %conv = sext i16 %1 to i32, !dbg !10751
  %cmp = icmp ne i32 %conv, 1, !dbg !10754
  br i1 %cmp, label %if.then, label %if.end, !dbg !10755

if.then:                                          ; preds = %entry
  br label %return, !dbg !10756

if.end:                                           ; preds = %entry
  %2 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !10757
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %2, i32 0, i32 18, !dbg !10758
  %3 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !10758
  store %struct.BezTriple* %3, %struct.BezTriple** %bezt, align 8, !dbg !10759
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !10760
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 6, !dbg !10761
  %5 = load i32, i32* %pntsu, align 8, !dbg !10761
  store i32 %5, i32* %a, align 4, !dbg !10762
  br label %while.cond, !dbg !10763

while.cond:                                       ; preds = %while.body, %if.end
  %6 = load i32, i32* %a, align 4, !dbg !10764
  %dec = add nsw i32 %6, -1, !dbg !10764
  store i32 %dec, i32* %a, align 4, !dbg !10764
  %tobool = icmp ne i32 %6, 0, !dbg !10763
  br i1 %tobool, label %while.body, label %while.end, !dbg !10763

while.body:                                       ; preds = %while.cond
  %7 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10765
  %8 = load i8, i8* %use_handle.addr, align 1, !dbg !10767
  call void @BKE_nurb_bezt_handle_test(%struct.BezTriple* %7, i8 zeroext %8), !dbg !10768
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10769
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %9, i32 1, !dbg !10769
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !10769
  br label %while.cond, !dbg !10763, !llvm.loop !10770

while.end:                                        ; preds = %while.cond
  %10 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !10772
  call void @BKE_nurb_handles_calc(%struct.Nurb* %10), !dbg !10773
  br label %return, !dbg !10774

return:                                           ; preds = %while.end, %if.then
  ret void, !dbg !10774
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurb_handles_autocalc(%struct.Nurb* %nu, i32 %flag) #0 !dbg !10775 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %flag.addr = alloca i32, align 4
  %eps = alloca float, align 4
  %eps_sq = alloca float, align 4
  %bezt2 = alloca %struct.BezTriple*, align 8
  %bezt1 = alloca %struct.BezTriple*, align 8
  %bezt0 = alloca %struct.BezTriple*, align 8
  %i = alloca i32, align 4
  %align = alloca i8, align 1
  %leftsmall = alloca i8, align 1
  %rightsmall = alloca i8, align 1
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !10776, metadata !DIExpression()), !dbg !10777
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !10778, metadata !DIExpression()), !dbg !10779
  call void @llvm.dbg.declare(metadata float* %eps, metadata !10780, metadata !DIExpression()), !dbg !10781
  store float 0x3F1A36E2E0000000, float* %eps, align 4, !dbg !10781
  call void @llvm.dbg.declare(metadata float* %eps_sq, metadata !10782, metadata !DIExpression()), !dbg !10783
  store float 0x3E45798EC0000000, float* %eps_sq, align 4, !dbg !10783
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt2, metadata !10784, metadata !DIExpression()), !dbg !10785
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt1, metadata !10786, metadata !DIExpression()), !dbg !10787
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt0, metadata !10788, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10790, metadata !DIExpression()), !dbg !10791
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !10792
  %cmp = icmp eq %struct.Nurb* %0, null, !dbg !10794
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10795

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !10796
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %1, i32 0, i32 18, !dbg !10797
  %2 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !10797
  %cmp1 = icmp eq %struct.BezTriple* %2, null, !dbg !10798
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10799

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !10800

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !10801
  %bezt3 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %3, i32 0, i32 18, !dbg !10802
  %4 = load %struct.BezTriple*, %struct.BezTriple** %bezt3, align 8, !dbg !10802
  store %struct.BezTriple* %4, %struct.BezTriple** %bezt2, align 8, !dbg !10803
  %5 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !10804
  %6 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !10805
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 6, !dbg !10806
  %7 = load i32, i32* %pntsu, align 8, !dbg !10806
  %sub = sub nsw i32 %7, 1, !dbg !10807
  %idx.ext = sext i32 %sub to i64, !dbg !10808
  %add.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %5, i64 %idx.ext, !dbg !10808
  store %struct.BezTriple* %add.ptr, %struct.BezTriple** %bezt1, align 8, !dbg !10809
  %8 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10810
  %add.ptr4 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %8, i64 -1, !dbg !10811
  store %struct.BezTriple* %add.ptr4, %struct.BezTriple** %bezt0, align 8, !dbg !10812
  %9 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !10813
  %pntsu5 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 6, !dbg !10814
  %10 = load i32, i32* %pntsu5, align 8, !dbg !10814
  store i32 %10, i32* %i, align 4, !dbg !10815
  br label %while.cond, !dbg !10816

while.cond:                                       ; preds = %if.end131, %if.end
  %11 = load i32, i32* %i, align 4, !dbg !10817
  %dec = add nsw i32 %11, -1, !dbg !10817
  store i32 %dec, i32* %i, align 4, !dbg !10817
  %tobool = icmp ne i32 %11, 0, !dbg !10816
  br i1 %tobool, label %while.body, label %while.end, !dbg !10816

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %align, metadata !10818, metadata !DIExpression()), !dbg !10820
  store i8 0, i8* %align, align 1, !dbg !10820
  call void @llvm.dbg.declare(metadata i8* %leftsmall, metadata !10821, metadata !DIExpression()), !dbg !10822
  store i8 0, i8* %leftsmall, align 1, !dbg !10822
  call void @llvm.dbg.declare(metadata i8* %rightsmall, metadata !10823, metadata !DIExpression()), !dbg !10824
  store i8 0, i8* %rightsmall, align 1, !dbg !10824
  %12 = load i32, i32* %flag.addr, align 4, !dbg !10825
  %cmp6 = icmp eq i32 %12, 0, !dbg !10827
  br i1 %cmp6, label %if.then9, label %lor.lhs.false7, !dbg !10828

lor.lhs.false7:                                   ; preds = %while.body
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10829
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %13, i32 0, i32 7, !dbg !10830
  %14 = load i8, i8* %f1, align 1, !dbg !10830
  %conv = zext i8 %14 to i32, !dbg !10829
  %15 = load i32, i32* %flag.addr, align 4, !dbg !10831
  %and = and i32 %conv, %15, !dbg !10832
  %tobool8 = icmp ne i32 %and, 0, !dbg !10832
  br i1 %tobool8, label %if.then9, label %if.end48, !dbg !10833

if.then9:                                         ; preds = %lor.lhs.false7, %while.body
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10834
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %16, i32 0, i32 5, !dbg !10836
  store i8 0, i8* %h1, align 1, !dbg !10837
  %17 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10838
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %17, i32 0, i32 0, !dbg !10840
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 1, !dbg !10838
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !10838
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt0, align 8, !dbg !10841
  %vec10 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %18, i32 0, i32 0, !dbg !10842
  %arrayidx11 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec10, i64 0, i64 1, !dbg !10841
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx11, i64 0, i64 0, !dbg !10841
  %call = call float @len_squared_v3v3(float* %arraydecay, float* %arraydecay12), !dbg !10843
  %cmp13 = fcmp olt float %call, 0x3E45798EC0000000, !dbg !10844
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !10845

if.then15:                                        ; preds = %if.then9
  %19 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10846
  %h116 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %19, i32 0, i32 5, !dbg !10848
  store i8 2, i8* %h116, align 1, !dbg !10849
  store i8 1, i8* %leftsmall, align 1, !dbg !10850
  br label %if.end47, !dbg !10851

if.else:                                          ; preds = %if.then9
  %20 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10852
  %vec17 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %20, i32 0, i32 0, !dbg !10855
  %arrayidx18 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec17, i64 0, i64 1, !dbg !10852
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx18, i64 0, i64 0, !dbg !10852
  %21 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10856
  %vec20 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %21, i32 0, i32 0, !dbg !10857
  %arrayidx21 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec20, i64 0, i64 0, !dbg !10856
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx21, i64 0, i64 0, !dbg !10856
  %22 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10858
  %vec23 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %22, i32 0, i32 0, !dbg !10859
  %arrayidx24 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec23, i64 0, i64 2, !dbg !10858
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx24, i64 0, i64 0, !dbg !10858
  %call26 = call float @dist_squared_to_line_v3(float* %arraydecay19, float* %arraydecay22, float* %arraydecay25), !dbg !10860
  %cmp27 = fcmp olt float %call26, 0x3E45798EC0000000, !dbg !10861
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !10862

if.then29:                                        ; preds = %if.else
  store i8 1, i8* %align, align 1, !dbg !10863
  %23 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10865
  %h130 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %23, i32 0, i32 5, !dbg !10866
  store i8 3, i8* %h130, align 1, !dbg !10867
  br label %if.end31, !dbg !10868

if.end31:                                         ; preds = %if.then29, %if.else
  %24 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10869
  %vec32 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %24, i32 0, i32 0, !dbg !10871
  %arrayidx33 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec32, i64 0, i64 0, !dbg !10869
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx33, i64 0, i64 0, !dbg !10869
  %25 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10872
  %vec35 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %25, i32 0, i32 0, !dbg !10873
  %arrayidx36 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec35, i64 0, i64 1, !dbg !10872
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx36, i64 0, i64 0, !dbg !10872
  %26 = load %struct.BezTriple*, %struct.BezTriple** %bezt0, align 8, !dbg !10874
  %vec38 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %26, i32 0, i32 0, !dbg !10875
  %arrayidx39 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec38, i64 0, i64 1, !dbg !10874
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx39, i64 0, i64 0, !dbg !10874
  %call41 = call float @dist_squared_to_line_v3(float* %arraydecay34, float* %arraydecay37, float* %arraydecay40), !dbg !10876
  %cmp42 = fcmp olt float %call41, 0x3E45798EC0000000, !dbg !10877
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !10878

if.then44:                                        ; preds = %if.end31
  %27 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10879
  %h145 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %27, i32 0, i32 5, !dbg !10880
  store i8 2, i8* %h145, align 1, !dbg !10881
  br label %if.end46, !dbg !10879

if.end46:                                         ; preds = %if.then44, %if.end31
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then15
  br label %if.end48, !dbg !10882

if.end48:                                         ; preds = %if.end47, %lor.lhs.false7
  %28 = load i32, i32* %flag.addr, align 4, !dbg !10883
  %cmp49 = icmp eq i32 %28, 0, !dbg !10885
  br i1 %cmp49, label %if.then55, label %lor.lhs.false51, !dbg !10886

lor.lhs.false51:                                  ; preds = %if.end48
  %29 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10887
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %29, i32 0, i32 9, !dbg !10888
  %30 = load i8, i8* %f3, align 1, !dbg !10888
  %conv52 = zext i8 %30 to i32, !dbg !10887
  %31 = load i32, i32* %flag.addr, align 4, !dbg !10889
  %and53 = and i32 %conv52, %31, !dbg !10890
  %tobool54 = icmp ne i32 %and53, 0, !dbg !10890
  br i1 %tobool54, label %if.then55, label %if.end88, !dbg !10891

if.then55:                                        ; preds = %lor.lhs.false51, %if.end48
  %32 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10892
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %32, i32 0, i32 6, !dbg !10894
  store i8 0, i8* %h2, align 2, !dbg !10895
  %33 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10896
  %vec56 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %33, i32 0, i32 0, !dbg !10898
  %arrayidx57 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec56, i64 0, i64 1, !dbg !10896
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx57, i64 0, i64 0, !dbg !10896
  %34 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !10899
  %vec59 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %34, i32 0, i32 0, !dbg !10900
  %arrayidx60 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec59, i64 0, i64 1, !dbg !10899
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx60, i64 0, i64 0, !dbg !10899
  %call62 = call float @len_squared_v3v3(float* %arraydecay58, float* %arraydecay61), !dbg !10901
  %cmp63 = fcmp olt float %call62, 0x3E45798EC0000000, !dbg !10902
  br i1 %cmp63, label %if.then65, label %if.else67, !dbg !10903

if.then65:                                        ; preds = %if.then55
  %35 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10904
  %h266 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %35, i32 0, i32 6, !dbg !10906
  store i8 2, i8* %h266, align 2, !dbg !10907
  store i8 1, i8* %rightsmall, align 1, !dbg !10908
  br label %if.end87, !dbg !10909

if.else67:                                        ; preds = %if.then55
  %36 = load i8, i8* %align, align 1, !dbg !10910
  %tobool68 = icmp ne i8 %36, 0, !dbg !10910
  br i1 %tobool68, label %if.then69, label %if.end71, !dbg !10913

if.then69:                                        ; preds = %if.else67
  %37 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10914
  %h270 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %37, i32 0, i32 6, !dbg !10915
  store i8 3, i8* %h270, align 2, !dbg !10916
  br label %if.end71, !dbg !10914

if.end71:                                         ; preds = %if.then69, %if.else67
  %38 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10917
  %vec72 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %38, i32 0, i32 0, !dbg !10919
  %arrayidx73 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec72, i64 0, i64 2, !dbg !10917
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx73, i64 0, i64 0, !dbg !10917
  %39 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10920
  %vec75 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %39, i32 0, i32 0, !dbg !10921
  %arrayidx76 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec75, i64 0, i64 1, !dbg !10920
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx76, i64 0, i64 0, !dbg !10920
  %40 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !10922
  %vec78 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %40, i32 0, i32 0, !dbg !10923
  %arrayidx79 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec78, i64 0, i64 1, !dbg !10922
  %arraydecay80 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx79, i64 0, i64 0, !dbg !10922
  %call81 = call float @dist_squared_to_line_v3(float* %arraydecay74, float* %arraydecay77, float* %arraydecay80), !dbg !10924
  %cmp82 = fcmp olt float %call81, 0x3E45798EC0000000, !dbg !10925
  br i1 %cmp82, label %if.then84, label %if.end86, !dbg !10926

if.then84:                                        ; preds = %if.end71
  %41 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10927
  %h285 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %41, i32 0, i32 6, !dbg !10928
  store i8 2, i8* %h285, align 2, !dbg !10929
  br label %if.end86, !dbg !10927

if.end86:                                         ; preds = %if.then84, %if.end71
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.then65
  br label %if.end88, !dbg !10930

if.end88:                                         ; preds = %if.end87, %lor.lhs.false51
  %42 = load i8, i8* %leftsmall, align 1, !dbg !10931
  %conv89 = zext i8 %42 to i32, !dbg !10931
  %tobool90 = icmp ne i32 %conv89, 0, !dbg !10931
  br i1 %tobool90, label %land.lhs.true, label %if.end97, !dbg !10933

land.lhs.true:                                    ; preds = %if.end88
  %43 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10934
  %h291 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %43, i32 0, i32 6, !dbg !10935
  %44 = load i8, i8* %h291, align 2, !dbg !10935
  %conv92 = zext i8 %44 to i32, !dbg !10934
  %cmp93 = icmp eq i32 %conv92, 3, !dbg !10936
  br i1 %cmp93, label %if.then95, label %if.end97, !dbg !10937

if.then95:                                        ; preds = %land.lhs.true
  %45 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10938
  %h296 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %45, i32 0, i32 6, !dbg !10939
  store i8 0, i8* %h296, align 2, !dbg !10940
  br label %if.end97, !dbg !10938

if.end97:                                         ; preds = %if.then95, %land.lhs.true, %if.end88
  %46 = load i8, i8* %rightsmall, align 1, !dbg !10941
  %conv98 = zext i8 %46 to i32, !dbg !10941
  %tobool99 = icmp ne i32 %conv98, 0, !dbg !10941
  br i1 %tobool99, label %land.lhs.true100, label %if.end107, !dbg !10943

land.lhs.true100:                                 ; preds = %if.end97
  %47 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10944
  %h1101 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %47, i32 0, i32 5, !dbg !10945
  %48 = load i8, i8* %h1101, align 1, !dbg !10945
  %conv102 = zext i8 %48 to i32, !dbg !10944
  %cmp103 = icmp eq i32 %conv102, 3, !dbg !10946
  br i1 %cmp103, label %if.then105, label %if.end107, !dbg !10947

if.then105:                                       ; preds = %land.lhs.true100
  %49 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10948
  %h1106 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %49, i32 0, i32 5, !dbg !10949
  store i8 0, i8* %h1106, align 1, !dbg !10950
  br label %if.end107, !dbg !10948

if.end107:                                        ; preds = %if.then105, %land.lhs.true100, %if.end97
  %50 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10951
  %h1108 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %50, i32 0, i32 5, !dbg !10953
  %51 = load i8, i8* %h1108, align 1, !dbg !10953
  %conv109 = zext i8 %51 to i32, !dbg !10951
  %cmp110 = icmp eq i32 %conv109, 3, !dbg !10954
  br i1 %cmp110, label %land.lhs.true112, label %if.end119, !dbg !10955

land.lhs.true112:                                 ; preds = %if.end107
  %52 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10956
  %h2113 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %52, i32 0, i32 6, !dbg !10957
  %53 = load i8, i8* %h2113, align 2, !dbg !10957
  %conv114 = zext i8 %53 to i32, !dbg !10956
  %cmp115 = icmp eq i32 %conv114, 2, !dbg !10958
  br i1 %cmp115, label %if.then117, label %if.end119, !dbg !10959

if.then117:                                       ; preds = %land.lhs.true112
  %54 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10960
  %h1118 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %54, i32 0, i32 5, !dbg !10961
  store i8 0, i8* %h1118, align 1, !dbg !10962
  br label %if.end119, !dbg !10960

if.end119:                                        ; preds = %if.then117, %land.lhs.true112, %if.end107
  %55 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10963
  %h2120 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %55, i32 0, i32 6, !dbg !10965
  %56 = load i8, i8* %h2120, align 2, !dbg !10965
  %conv121 = zext i8 %56 to i32, !dbg !10963
  %cmp122 = icmp eq i32 %conv121, 3, !dbg !10966
  br i1 %cmp122, label %land.lhs.true124, label %if.end131, !dbg !10967

land.lhs.true124:                                 ; preds = %if.end119
  %57 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10968
  %h1125 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %57, i32 0, i32 5, !dbg !10969
  %58 = load i8, i8* %h1125, align 1, !dbg !10969
  %conv126 = zext i8 %58 to i32, !dbg !10968
  %cmp127 = icmp eq i32 %conv126, 2, !dbg !10970
  br i1 %cmp127, label %if.then129, label %if.end131, !dbg !10971

if.then129:                                       ; preds = %land.lhs.true124
  %59 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10972
  %h2130 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %59, i32 0, i32 6, !dbg !10973
  store i8 0, i8* %h2130, align 2, !dbg !10974
  br label %if.end131, !dbg !10972

if.end131:                                        ; preds = %if.then129, %land.lhs.true124, %if.end119
  %60 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !10975
  store %struct.BezTriple* %60, %struct.BezTriple** %bezt0, align 8, !dbg !10976
  %61 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !10977
  store %struct.BezTriple* %61, %struct.BezTriple** %bezt1, align 8, !dbg !10978
  %62 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !10979
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %62, i32 1, !dbg !10979
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt2, align 8, !dbg !10979
  br label %while.cond, !dbg !10816, !llvm.loop !10980

while.end:                                        ; preds = %while.cond
  %63 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !10982
  call void @BKE_nurb_handles_calc(%struct.Nurb* %63), !dbg !10983
  br label %return, !dbg !10984

return:                                           ; preds = %while.end, %if.then
  ret void, !dbg !10984
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v3v3(float* %a, float* %b) #0 !dbg !10985 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !10986, metadata !DIExpression()), !dbg !10987
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !10988, metadata !DIExpression()), !dbg !10989
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !10990, metadata !DIExpression()), !dbg !10991
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !10992
  %0 = load float*, float** %b.addr, align 8, !dbg !10993
  %1 = load float*, float** %a.addr, align 8, !dbg !10994
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !10995
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !10996
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !10997
  %call = call float @dot_v3v3(float* %arraydecay1, float* %arraydecay2), !dbg !10998
  ret float %call, !dbg !10999
}

declare dso_local float @dist_squared_to_line_v3(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurbList_handles_autocalc(%struct.ListBase* %editnurb, i32 %flag) #0 !dbg !11000 {
entry:
  %editnurb.addr = alloca %struct.ListBase*, align 8
  %flag.addr = alloca i32, align 4
  %nu = alloca %struct.Nurb*, align 8
  store %struct.ListBase* %editnurb, %struct.ListBase** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb.addr, metadata !11003, metadata !DIExpression()), !dbg !11004
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !11005, metadata !DIExpression()), !dbg !11006
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !11007, metadata !DIExpression()), !dbg !11008
  %0 = load %struct.ListBase*, %struct.ListBase** %editnurb.addr, align 8, !dbg !11009
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !11010
  %1 = load i8*, i8** %first, align 8, !dbg !11010
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !11009
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !11011
  br label %while.cond, !dbg !11012

while.cond:                                       ; preds = %while.body, %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11013
  %tobool = icmp ne %struct.Nurb* %3, null, !dbg !11012
  br i1 %tobool, label %while.body, label %while.end, !dbg !11012

while.body:                                       ; preds = %while.cond
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11014
  %5 = load i32, i32* %flag.addr, align 4, !dbg !11016
  call void @BKE_nurb_handles_autocalc(%struct.Nurb* %4, i32 %5), !dbg !11017
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11018
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 0, !dbg !11019
  %7 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !11019
  store %struct.Nurb* %7, %struct.Nurb** %nu, align 8, !dbg !11020
  br label %while.cond, !dbg !11012, !llvm.loop !11021

while.end:                                        ; preds = %while.cond
  ret void, !dbg !11023
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurbList_handles_set(%struct.ListBase* %editnurb, i8 zeroext %code) #0 !dbg !11024 {
entry:
  %editnurb.addr = alloca %struct.ListBase*, align 8
  %code.addr = alloca i8, align 1
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %a = alloca i32, align 4
  %h_new = alloca i8, align 1
  store %struct.ListBase* %editnurb, %struct.ListBase** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb.addr, metadata !11027, metadata !DIExpression()), !dbg !11028
  store i8 %code, i8* %code.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %code.addr, metadata !11029, metadata !DIExpression()), !dbg !11030
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !11031, metadata !DIExpression()), !dbg !11032
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !11033, metadata !DIExpression()), !dbg !11034
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11035, metadata !DIExpression()), !dbg !11036
  %0 = load i8, i8* %code.addr, align 1, !dbg !11037
  %conv = zext i8 %0 to i32, !dbg !11037
  %cmp = icmp eq i32 %conv, 1, !dbg !11037
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11037

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8, i8* %code.addr, align 1, !dbg !11037
  %conv2 = zext i8 %1 to i32, !dbg !11037
  %cmp3 = icmp eq i32 %conv2, 2, !dbg !11037
  br i1 %cmp3, label %if.then, label %if.else, !dbg !11039

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct.ListBase*, %struct.ListBase** %editnurb.addr, align 8, !dbg !11040
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %2, i32 0, i32 0, !dbg !11042
  %3 = load i8*, i8** %first, align 8, !dbg !11042
  %4 = bitcast i8* %3 to %struct.Nurb*, !dbg !11040
  store %struct.Nurb* %4, %struct.Nurb** %nu, align 8, !dbg !11043
  br label %while.cond, !dbg !11044

while.cond:                                       ; preds = %if.end64, %if.then
  %5 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11045
  %tobool = icmp ne %struct.Nurb* %5, null, !dbg !11044
  br i1 %tobool, label %while.body, label %while.end65, !dbg !11044

while.body:                                       ; preds = %while.cond
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11046
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 2, !dbg !11049
  %7 = load i16, i16* %type, align 8, !dbg !11049
  %conv5 = sext i16 %7 to i32, !dbg !11046
  %cmp6 = icmp eq i32 %conv5, 1, !dbg !11050
  br i1 %cmp6, label %if.then8, label %if.end64, !dbg !11051

if.then8:                                         ; preds = %while.body
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11052
  %bezt9 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 18, !dbg !11054
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt9, align 8, !dbg !11054
  store %struct.BezTriple* %9, %struct.BezTriple** %bezt, align 8, !dbg !11055
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11056
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 6, !dbg !11057
  %11 = load i32, i32* %pntsu, align 8, !dbg !11057
  store i32 %11, i32* %a, align 4, !dbg !11058
  br label %while.cond10, !dbg !11059

while.cond10:                                     ; preds = %if.end63, %if.then8
  %12 = load i32, i32* %a, align 4, !dbg !11060
  %dec = add nsw i32 %12, -1, !dbg !11060
  store i32 %dec, i32* %a, align 4, !dbg !11060
  %tobool11 = icmp ne i32 %12, 0, !dbg !11059
  br i1 %tobool11, label %while.body12, label %while.end, !dbg !11059

while.body12:                                     ; preds = %while.cond10
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11061
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %13, i32 0, i32 7, !dbg !11064
  %14 = load i8, i8* %f1, align 1, !dbg !11064
  %conv13 = zext i8 %14 to i32, !dbg !11061
  %and = and i32 %conv13, 1, !dbg !11065
  %tobool14 = icmp ne i32 %and, 0, !dbg !11065
  br i1 %tobool14, label %if.then19, label %lor.lhs.false15, !dbg !11066

lor.lhs.false15:                                  ; preds = %while.body12
  %15 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11067
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %15, i32 0, i32 9, !dbg !11068
  %16 = load i8, i8* %f3, align 1, !dbg !11068
  %conv16 = zext i8 %16 to i32, !dbg !11067
  %and17 = and i32 %conv16, 1, !dbg !11069
  %tobool18 = icmp ne i32 %and17, 0, !dbg !11069
  br i1 %tobool18, label %if.then19, label %if.end63, !dbg !11070

if.then19:                                        ; preds = %lor.lhs.false15, %while.body12
  %17 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11071
  %f120 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %17, i32 0, i32 7, !dbg !11074
  %18 = load i8, i8* %f120, align 1, !dbg !11074
  %conv21 = zext i8 %18 to i32, !dbg !11071
  %and22 = and i32 %conv21, 1, !dbg !11075
  %tobool23 = icmp ne i32 %and22, 0, !dbg !11075
  br i1 %tobool23, label %if.then24, label %if.end, !dbg !11076

if.then24:                                        ; preds = %if.then19
  %19 = load i8, i8* %code.addr, align 1, !dbg !11077
  %20 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11078
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %20, i32 0, i32 5, !dbg !11079
  store i8 %19, i8* %h1, align 1, !dbg !11080
  br label %if.end, !dbg !11078

if.end:                                           ; preds = %if.then24, %if.then19
  %21 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11081
  %f325 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %21, i32 0, i32 9, !dbg !11083
  %22 = load i8, i8* %f325, align 1, !dbg !11083
  %conv26 = zext i8 %22 to i32, !dbg !11081
  %and27 = and i32 %conv26, 1, !dbg !11084
  %tobool28 = icmp ne i32 %and27, 0, !dbg !11084
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !11085

if.then29:                                        ; preds = %if.end
  %23 = load i8, i8* %code.addr, align 1, !dbg !11086
  %24 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11087
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %24, i32 0, i32 6, !dbg !11088
  store i8 %23, i8* %h2, align 2, !dbg !11089
  br label %if.end30, !dbg !11087

if.end30:                                         ; preds = %if.then29, %if.end
  %25 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11090
  %h131 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %25, i32 0, i32 5, !dbg !11092
  %26 = load i8, i8* %h131, align 1, !dbg !11092
  %conv32 = zext i8 %26 to i32, !dbg !11090
  %27 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11093
  %h233 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %27, i32 0, i32 6, !dbg !11094
  %28 = load i8, i8* %h233, align 2, !dbg !11094
  %conv34 = zext i8 %28 to i32, !dbg !11093
  %cmp35 = icmp ne i32 %conv32, %conv34, !dbg !11095
  br i1 %cmp35, label %if.then37, label %if.end62, !dbg !11096

if.then37:                                        ; preds = %if.end30
  %29 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11097
  %h138 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %29, i32 0, i32 5, !dbg !11097
  %30 = load i8, i8* %h138, align 1, !dbg !11097
  %conv39 = zext i8 %30 to i32, !dbg !11097
  %cmp40 = icmp eq i32 %conv39, 3, !dbg !11097
  br i1 %cmp40, label %if.then47, label %lor.lhs.false42, !dbg !11097

lor.lhs.false42:                                  ; preds = %if.then37
  %31 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11097
  %h143 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %31, i32 0, i32 5, !dbg !11097
  %32 = load i8, i8* %h143, align 1, !dbg !11097
  %conv44 = zext i8 %32 to i32, !dbg !11097
  %cmp45 = icmp eq i32 %conv44, 1, !dbg !11097
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !11100

if.then47:                                        ; preds = %lor.lhs.false42, %if.then37
  %33 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11101
  %h148 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %33, i32 0, i32 5, !dbg !11102
  store i8 0, i8* %h148, align 1, !dbg !11103
  br label %if.end49, !dbg !11101

if.end49:                                         ; preds = %if.then47, %lor.lhs.false42
  %34 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11104
  %h250 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %34, i32 0, i32 6, !dbg !11104
  %35 = load i8, i8* %h250, align 2, !dbg !11104
  %conv51 = zext i8 %35 to i32, !dbg !11104
  %cmp52 = icmp eq i32 %conv51, 3, !dbg !11104
  br i1 %cmp52, label %if.then59, label %lor.lhs.false54, !dbg !11104

lor.lhs.false54:                                  ; preds = %if.end49
  %36 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11104
  %h255 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %36, i32 0, i32 6, !dbg !11104
  %37 = load i8, i8* %h255, align 2, !dbg !11104
  %conv56 = zext i8 %37 to i32, !dbg !11104
  %cmp57 = icmp eq i32 %conv56, 1, !dbg !11104
  br i1 %cmp57, label %if.then59, label %if.end61, !dbg !11106

if.then59:                                        ; preds = %lor.lhs.false54, %if.end49
  %38 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11107
  %h260 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %38, i32 0, i32 6, !dbg !11108
  store i8 0, i8* %h260, align 2, !dbg !11109
  br label %if.end61, !dbg !11107

if.end61:                                         ; preds = %if.then59, %lor.lhs.false54
  br label %if.end62, !dbg !11110

if.end62:                                         ; preds = %if.end61, %if.end30
  br label %if.end63, !dbg !11111

if.end63:                                         ; preds = %if.end62, %lor.lhs.false15
  %39 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11112
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %39, i32 1, !dbg !11112
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !11112
  br label %while.cond10, !dbg !11059, !llvm.loop !11113

while.end:                                        ; preds = %while.cond10
  %40 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11115
  call void @nurb_handles_calc__align_selected(%struct.Nurb* %40), !dbg !11116
  br label %if.end64, !dbg !11117

if.end64:                                         ; preds = %while.end, %while.body
  %41 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11118
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %41, i32 0, i32 0, !dbg !11119
  %42 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !11119
  store %struct.Nurb* %42, %struct.Nurb** %nu, align 8, !dbg !11120
  br label %while.cond, !dbg !11044, !llvm.loop !11121

while.end65:                                      ; preds = %while.cond
  br label %if.end154, !dbg !11123

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i8* %h_new, metadata !11124, metadata !DIExpression()), !dbg !11126
  store i8 0, i8* %h_new, align 1, !dbg !11126
  %43 = load i8, i8* %code.addr, align 1, !dbg !11127
  %conv66 = zext i8 %43 to i32, !dbg !11127
  %cmp67 = icmp eq i32 %conv66, 5, !dbg !11129
  br i1 %cmp67, label %if.then69, label %if.else70, !dbg !11130

if.then69:                                        ; preds = %if.else
  store i8 3, i8* %h_new, align 1, !dbg !11131
  br label %if.end118, !dbg !11133

if.else70:                                        ; preds = %if.else
  %44 = load i8, i8* %code.addr, align 1, !dbg !11134
  %conv71 = zext i8 %44 to i32, !dbg !11134
  %cmp72 = icmp eq i32 %conv71, 6, !dbg !11136
  br i1 %cmp72, label %if.then74, label %if.else75, !dbg !11137

if.then74:                                        ; preds = %if.else70
  store i8 0, i8* %h_new, align 1, !dbg !11138
  br label %if.end117, !dbg !11140

if.else75:                                        ; preds = %if.else70
  %45 = load %struct.ListBase*, %struct.ListBase** %editnurb.addr, align 8, !dbg !11141
  %first76 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %45, i32 0, i32 0, !dbg !11144
  %46 = load i8*, i8** %first76, align 8, !dbg !11144
  %47 = bitcast i8* %46 to %struct.Nurb*, !dbg !11141
  store %struct.Nurb* %47, %struct.Nurb** %nu, align 8, !dbg !11145
  br label %for.cond, !dbg !11146

for.cond:                                         ; preds = %for.inc, %if.else75
  %48 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11147
  %tobool77 = icmp ne %struct.Nurb* %48, null, !dbg !11149
  br i1 %tobool77, label %for.body, label %for.end, !dbg !11149

for.body:                                         ; preds = %for.cond
  %49 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11150
  %type78 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %49, i32 0, i32 2, !dbg !11153
  %50 = load i16, i16* %type78, align 8, !dbg !11153
  %conv79 = sext i16 %50 to i32, !dbg !11150
  %cmp80 = icmp eq i32 %conv79, 1, !dbg !11154
  br i1 %cmp80, label %if.then82, label %if.end111, !dbg !11155

if.then82:                                        ; preds = %for.body
  %51 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11156
  %bezt83 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %51, i32 0, i32 18, !dbg !11158
  %52 = load %struct.BezTriple*, %struct.BezTriple** %bezt83, align 8, !dbg !11158
  store %struct.BezTriple* %52, %struct.BezTriple** %bezt, align 8, !dbg !11159
  %53 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11160
  %pntsu84 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %53, i32 0, i32 6, !dbg !11161
  %54 = load i32, i32* %pntsu84, align 8, !dbg !11161
  store i32 %54, i32* %a, align 4, !dbg !11162
  br label %while.cond85, !dbg !11163

while.cond85:                                     ; preds = %if.end108, %if.then82
  %55 = load i32, i32* %a, align 4, !dbg !11164
  %dec86 = add nsw i32 %55, -1, !dbg !11164
  store i32 %dec86, i32* %a, align 4, !dbg !11164
  %tobool87 = icmp ne i32 %55, 0, !dbg !11163
  br i1 %tobool87, label %while.body88, label %while.end110, !dbg !11163

while.body88:                                     ; preds = %while.cond85
  %56 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11165
  %f189 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %56, i32 0, i32 7, !dbg !11168
  %57 = load i8, i8* %f189, align 1, !dbg !11168
  %conv90 = zext i8 %57 to i32, !dbg !11165
  %and91 = and i32 %conv90, 1, !dbg !11169
  %tobool92 = icmp ne i32 %and91, 0, !dbg !11169
  br i1 %tobool92, label %land.lhs.true, label %lor.lhs.false97, !dbg !11170

land.lhs.true:                                    ; preds = %while.body88
  %58 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11171
  %h193 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %58, i32 0, i32 5, !dbg !11172
  %59 = load i8, i8* %h193, align 1, !dbg !11172
  %conv94 = zext i8 %59 to i32, !dbg !11171
  %cmp95 = icmp ne i32 %conv94, 0, !dbg !11173
  br i1 %cmp95, label %if.then107, label %lor.lhs.false97, !dbg !11174

lor.lhs.false97:                                  ; preds = %land.lhs.true, %while.body88
  %60 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11175
  %f398 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %60, i32 0, i32 9, !dbg !11176
  %61 = load i8, i8* %f398, align 1, !dbg !11176
  %conv99 = zext i8 %61 to i32, !dbg !11175
  %and100 = and i32 %conv99, 1, !dbg !11177
  %tobool101 = icmp ne i32 %and100, 0, !dbg !11177
  br i1 %tobool101, label %land.lhs.true102, label %if.end108, !dbg !11178

land.lhs.true102:                                 ; preds = %lor.lhs.false97
  %62 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11179
  %h2103 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %62, i32 0, i32 6, !dbg !11180
  %63 = load i8, i8* %h2103, align 2, !dbg !11180
  %conv104 = zext i8 %63 to i32, !dbg !11179
  %cmp105 = icmp ne i32 %conv104, 0, !dbg !11181
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !11182

if.then107:                                       ; preds = %land.lhs.true102, %land.lhs.true
  store i8 1, i8* %h_new, align 1, !dbg !11183
  br label %while.end110, !dbg !11185

if.end108:                                        ; preds = %land.lhs.true102, %lor.lhs.false97
  %64 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11186
  %incdec.ptr109 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %64, i32 1, !dbg !11186
  store %struct.BezTriple* %incdec.ptr109, %struct.BezTriple** %bezt, align 8, !dbg !11186
  br label %while.cond85, !dbg !11163, !llvm.loop !11187

while.end110:                                     ; preds = %if.then107, %while.cond85
  br label %if.end111, !dbg !11189

if.end111:                                        ; preds = %while.end110, %for.body
  br label %for.inc, !dbg !11190

for.inc:                                          ; preds = %if.end111
  %65 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11191
  %next112 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %65, i32 0, i32 0, !dbg !11192
  %66 = load %struct.Nurb*, %struct.Nurb** %next112, align 8, !dbg !11192
  store %struct.Nurb* %66, %struct.Nurb** %nu, align 8, !dbg !11193
  br label %for.cond, !dbg !11194, !llvm.loop !11195

for.end:                                          ; preds = %for.cond
  %67 = load i8, i8* %h_new, align 1, !dbg !11197
  %conv113 = zext i8 %67 to i32, !dbg !11197
  %cmp114 = icmp eq i32 %conv113, 0, !dbg !11198
  %68 = zext i1 %cmp114 to i64, !dbg !11199
  %cond = select i1 %cmp114, i32 3, i32 0, !dbg !11199
  %conv116 = trunc i32 %cond to i8, !dbg !11199
  store i8 %conv116, i8* %h_new, align 1, !dbg !11200
  br label %if.end117

if.end117:                                        ; preds = %for.end, %if.then74
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.then69
  %69 = load %struct.ListBase*, %struct.ListBase** %editnurb.addr, align 8, !dbg !11201
  %first119 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %69, i32 0, i32 0, !dbg !11203
  %70 = load i8*, i8** %first119, align 8, !dbg !11203
  %71 = bitcast i8* %70 to %struct.Nurb*, !dbg !11201
  store %struct.Nurb* %71, %struct.Nurb** %nu, align 8, !dbg !11204
  br label %for.cond120, !dbg !11205

for.cond120:                                      ; preds = %for.inc151, %if.end118
  %72 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11206
  %tobool121 = icmp ne %struct.Nurb* %72, null, !dbg !11208
  br i1 %tobool121, label %for.body122, label %for.end153, !dbg !11208

for.body122:                                      ; preds = %for.cond120
  %73 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11209
  %type123 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %73, i32 0, i32 2, !dbg !11212
  %74 = load i16, i16* %type123, align 8, !dbg !11212
  %conv124 = sext i16 %74 to i32, !dbg !11209
  %cmp125 = icmp eq i32 %conv124, 1, !dbg !11213
  br i1 %cmp125, label %if.then127, label %if.end150, !dbg !11214

if.then127:                                       ; preds = %for.body122
  %75 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11215
  %bezt128 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %75, i32 0, i32 18, !dbg !11217
  %76 = load %struct.BezTriple*, %struct.BezTriple** %bezt128, align 8, !dbg !11217
  store %struct.BezTriple* %76, %struct.BezTriple** %bezt, align 8, !dbg !11218
  %77 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11219
  %pntsu129 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %77, i32 0, i32 6, !dbg !11220
  %78 = load i32, i32* %pntsu129, align 8, !dbg !11220
  store i32 %78, i32* %a, align 4, !dbg !11221
  br label %while.cond130, !dbg !11222

while.cond130:                                    ; preds = %if.end147, %if.then127
  %79 = load i32, i32* %a, align 4, !dbg !11223
  %dec131 = add nsw i32 %79, -1, !dbg !11223
  store i32 %dec131, i32* %a, align 4, !dbg !11223
  %tobool132 = icmp ne i32 %79, 0, !dbg !11222
  br i1 %tobool132, label %while.body133, label %while.end149, !dbg !11222

while.body133:                                    ; preds = %while.cond130
  %80 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11224
  %f1134 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %80, i32 0, i32 7, !dbg !11227
  %81 = load i8, i8* %f1134, align 1, !dbg !11227
  %conv135 = zext i8 %81 to i32, !dbg !11224
  %and136 = and i32 %conv135, 1, !dbg !11228
  %tobool137 = icmp ne i32 %and136, 0, !dbg !11228
  br i1 %tobool137, label %if.then138, label %if.end140, !dbg !11229

if.then138:                                       ; preds = %while.body133
  %82 = load i8, i8* %h_new, align 1, !dbg !11230
  %83 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11231
  %h1139 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %83, i32 0, i32 5, !dbg !11232
  store i8 %82, i8* %h1139, align 1, !dbg !11233
  br label %if.end140, !dbg !11231

if.end140:                                        ; preds = %if.then138, %while.body133
  %84 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11234
  %f3141 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %84, i32 0, i32 9, !dbg !11236
  %85 = load i8, i8* %f3141, align 1, !dbg !11236
  %conv142 = zext i8 %85 to i32, !dbg !11234
  %and143 = and i32 %conv142, 1, !dbg !11237
  %tobool144 = icmp ne i32 %and143, 0, !dbg !11237
  br i1 %tobool144, label %if.then145, label %if.end147, !dbg !11238

if.then145:                                       ; preds = %if.end140
  %86 = load i8, i8* %h_new, align 1, !dbg !11239
  %87 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11240
  %h2146 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %87, i32 0, i32 6, !dbg !11241
  store i8 %86, i8* %h2146, align 2, !dbg !11242
  br label %if.end147, !dbg !11240

if.end147:                                        ; preds = %if.then145, %if.end140
  %88 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11243
  %incdec.ptr148 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %88, i32 1, !dbg !11243
  store %struct.BezTriple* %incdec.ptr148, %struct.BezTriple** %bezt, align 8, !dbg !11243
  br label %while.cond130, !dbg !11222, !llvm.loop !11244

while.end149:                                     ; preds = %while.cond130
  %89 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11246
  call void @nurb_handles_calc__align_selected(%struct.Nurb* %89), !dbg !11247
  br label %if.end150, !dbg !11248

if.end150:                                        ; preds = %while.end149, %for.body122
  br label %for.inc151, !dbg !11249

for.inc151:                                       ; preds = %if.end150
  %90 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11250
  %next152 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %90, i32 0, i32 0, !dbg !11251
  %91 = load %struct.Nurb*, %struct.Nurb** %next152, align 8, !dbg !11251
  store %struct.Nurb* %91, %struct.Nurb** %nu, align 8, !dbg !11252
  br label %for.cond120, !dbg !11253, !llvm.loop !11254

for.end153:                                       ; preds = %for.cond120
  br label %if.end154

if.end154:                                        ; preds = %for.end153, %while.end65
  ret void, !dbg !11256
}

; Function Attrs: noinline nounwind uwtable
define internal void @nurb_handles_calc__align_selected(%struct.Nurb* %nu) #0 !dbg !11257 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !11258, metadata !DIExpression()), !dbg !11259
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11260
  call void @nurbList_handles_swap_select(%struct.Nurb* %0), !dbg !11261
  %1 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11262
  call void @BKE_nurb_handles_calc(%struct.Nurb* %1), !dbg !11263
  %2 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11264
  call void @nurbList_handles_swap_select(%struct.Nurb* %2), !dbg !11265
  ret void, !dbg !11266
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurbList_handles_recalculate(%struct.ListBase* %editnurb, i8 zeroext %calc_length, i8 zeroext %flag) #0 !dbg !11267 {
entry:
  %editnurb.addr = alloca %struct.ListBase*, align 8
  %calc_length.addr = alloca i8, align 1
  %flag.addr = alloca i8, align 1
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %a = alloca i32, align 4
  %changed = alloca i8, align 1
  %h1_select = alloca i8, align 1
  %h2_select = alloca i8, align 1
  %h1_back = alloca i8, align 1
  %h2_back = alloca i8, align 1
  %co1_back = alloca [3 x float], align 4
  %co2_back = alloca [3 x float], align 4
  store %struct.ListBase* %editnurb, %struct.ListBase** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb.addr, metadata !11270, metadata !DIExpression()), !dbg !11271
  store i8 %calc_length, i8* %calc_length.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %calc_length.addr, metadata !11272, metadata !DIExpression()), !dbg !11273
  store i8 %flag, i8* %flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %flag.addr, metadata !11274, metadata !DIExpression()), !dbg !11275
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !11276, metadata !DIExpression()), !dbg !11277
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !11278, metadata !DIExpression()), !dbg !11279
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11280, metadata !DIExpression()), !dbg !11281
  %0 = load %struct.ListBase*, %struct.ListBase** %editnurb.addr, align 8, !dbg !11282
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !11284
  %1 = load i8*, i8** %first, align 8, !dbg !11284
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !11282
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !11285
  br label %for.cond, !dbg !11286

for.cond:                                         ; preds = %for.inc79, %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11287
  %tobool = icmp ne %struct.Nurb* %3, null, !dbg !11289
  br i1 %tobool, label %for.body, label %for.end80, !dbg !11289

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11290
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 2, !dbg !11293
  %5 = load i16, i16* %type, align 8, !dbg !11293
  %conv = sext i16 %5 to i32, !dbg !11290
  %cmp = icmp eq i32 %conv, 1, !dbg !11294
  br i1 %cmp, label %if.then, label %if.end78, !dbg !11295

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !11296, metadata !DIExpression()), !dbg !11298
  store i8 0, i8* %changed, align 1, !dbg !11298
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11299
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 6, !dbg !11301
  %7 = load i32, i32* %pntsu, align 8, !dbg !11301
  store i32 %7, i32* %a, align 4, !dbg !11302
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11303
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 18, !dbg !11304
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !11304
  store %struct.BezTriple* %9, %struct.BezTriple** %bezt, align 8, !dbg !11305
  br label %for.cond3, !dbg !11306

for.cond3:                                        ; preds = %for.inc, %if.then
  %10 = load i32, i32* %a, align 4, !dbg !11307
  %dec = add nsw i32 %10, -1, !dbg !11307
  store i32 %dec, i32* %a, align 4, !dbg !11307
  %tobool4 = icmp ne i32 %10, 0, !dbg !11309
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !11309

for.body5:                                        ; preds = %for.cond3
  call void @llvm.dbg.declare(metadata i8* %h1_select, metadata !11310, metadata !DIExpression()), !dbg !11312
  %11 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11313
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %11, i32 0, i32 7, !dbg !11314
  %12 = load i8, i8* %f1, align 1, !dbg !11314
  %conv6 = zext i8 %12 to i32, !dbg !11313
  %13 = load i8, i8* %flag.addr, align 1, !dbg !11315
  %conv7 = zext i8 %13 to i32, !dbg !11315
  %and = and i32 %conv6, %conv7, !dbg !11316
  %14 = load i8, i8* %flag.addr, align 1, !dbg !11317
  %conv8 = zext i8 %14 to i32, !dbg !11317
  %cmp9 = icmp eq i32 %and, %conv8, !dbg !11318
  %conv10 = zext i1 %cmp9 to i32, !dbg !11318
  %conv11 = trunc i32 %conv10 to i8, !dbg !11319
  store i8 %conv11, i8* %h1_select, align 1, !dbg !11312
  call void @llvm.dbg.declare(metadata i8* %h2_select, metadata !11320, metadata !DIExpression()), !dbg !11321
  %15 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11322
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %15, i32 0, i32 9, !dbg !11323
  %16 = load i8, i8* %f3, align 1, !dbg !11323
  %conv12 = zext i8 %16 to i32, !dbg !11322
  %17 = load i8, i8* %flag.addr, align 1, !dbg !11324
  %conv13 = zext i8 %17 to i32, !dbg !11324
  %and14 = and i32 %conv12, %conv13, !dbg !11325
  %18 = load i8, i8* %flag.addr, align 1, !dbg !11326
  %conv15 = zext i8 %18 to i32, !dbg !11326
  %cmp16 = icmp eq i32 %and14, %conv15, !dbg !11327
  %conv17 = zext i1 %cmp16 to i32, !dbg !11327
  %conv18 = trunc i32 %conv17 to i8, !dbg !11328
  store i8 %conv18, i8* %h2_select, align 1, !dbg !11321
  %19 = load i8, i8* %h1_select, align 1, !dbg !11329
  %conv19 = zext i8 %19 to i32, !dbg !11329
  %tobool20 = icmp ne i32 %conv19, 0, !dbg !11329
  br i1 %tobool20, label %if.then23, label %lor.lhs.false, !dbg !11331

lor.lhs.false:                                    ; preds = %for.body5
  %20 = load i8, i8* %h2_select, align 1, !dbg !11332
  %conv21 = zext i8 %20 to i32, !dbg !11332
  %tobool22 = icmp ne i32 %conv21, 0, !dbg !11332
  br i1 %tobool22, label %if.then23, label %if.end74, !dbg !11333

if.then23:                                        ; preds = %lor.lhs.false, %for.body5
  call void @llvm.dbg.declare(metadata i8* %h1_back, metadata !11334, metadata !DIExpression()), !dbg !11336
  call void @llvm.dbg.declare(metadata i8* %h2_back, metadata !11337, metadata !DIExpression()), !dbg !11338
  call void @llvm.dbg.declare(metadata [3 x float]* %co1_back, metadata !11339, metadata !DIExpression()), !dbg !11340
  call void @llvm.dbg.declare(metadata [3 x float]* %co2_back, metadata !11341, metadata !DIExpression()), !dbg !11342
  %21 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11343
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %21, i32 0, i32 5, !dbg !11344
  %22 = load i8, i8* %h1, align 1, !dbg !11344
  store i8 %22, i8* %h1_back, align 1, !dbg !11345
  %23 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11346
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %23, i32 0, i32 6, !dbg !11347
  %24 = load i8, i8* %h2, align 2, !dbg !11347
  store i8 %24, i8* %h2_back, align 1, !dbg !11348
  %25 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11349
  %h124 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %25, i32 0, i32 5, !dbg !11350
  store i8 1, i8* %h124, align 1, !dbg !11351
  %26 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11352
  %h225 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %26, i32 0, i32 6, !dbg !11353
  store i8 1, i8* %h225, align 2, !dbg !11354
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co1_back, i64 0, i64 0, !dbg !11355
  %27 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11356
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %27, i32 0, i32 0, !dbg !11357
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !11356
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !11356
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay26), !dbg !11358
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %co2_back, i64 0, i64 0, !dbg !11359
  %28 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11360
  %vec28 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %28, i32 0, i32 0, !dbg !11361
  %arrayidx29 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec28, i64 0, i64 2, !dbg !11360
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx29, i64 0, i64 0, !dbg !11360
  call void @copy_v3_v3(float* %arraydecay27, float* %arraydecay30), !dbg !11362
  %29 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11363
  %30 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11364
  call void @BKE_nurb_handle_calc_simple(%struct.Nurb* %29, %struct.BezTriple* %30), !dbg !11365
  %31 = load i8, i8* %h1_back, align 1, !dbg !11366
  %32 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11367
  %h131 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %32, i32 0, i32 5, !dbg !11368
  store i8 %31, i8* %h131, align 1, !dbg !11369
  %33 = load i8, i8* %h2_back, align 1, !dbg !11370
  %34 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11371
  %h232 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %34, i32 0, i32 6, !dbg !11372
  store i8 %33, i8* %h232, align 2, !dbg !11373
  %35 = load i8, i8* %h1_select, align 1, !dbg !11374
  %tobool33 = icmp ne i8 %35, 0, !dbg !11374
  br i1 %tobool33, label %if.then34, label %if.else, !dbg !11376

if.then34:                                        ; preds = %if.then23
  %36 = load i8, i8* %calc_length.addr, align 1, !dbg !11377
  %tobool35 = icmp ne i8 %36, 0, !dbg !11377
  br i1 %tobool35, label %if.end, label %if.then36, !dbg !11380

if.then36:                                        ; preds = %if.then34
  %37 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11381
  %vec37 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %37, i32 0, i32 0, !dbg !11383
  %arrayidx38 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec37, i64 0, i64 0, !dbg !11381
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx38, i64 0, i64 0, !dbg !11381
  %38 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11384
  %vec40 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %38, i32 0, i32 0, !dbg !11385
  %arrayidx41 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec40, i64 0, i64 1, !dbg !11384
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx41, i64 0, i64 0, !dbg !11384
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %co1_back, i64 0, i64 0, !dbg !11386
  %39 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11387
  %vec44 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %39, i32 0, i32 0, !dbg !11388
  %arrayidx45 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec44, i64 0, i64 1, !dbg !11387
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx45, i64 0, i64 0, !dbg !11387
  %call = call float @len_v3v3(float* %arraydecay43, float* %arraydecay46), !dbg !11389
  call void @dist_ensure_v3_v3fl(float* %arraydecay39, float* %arraydecay42, float %call), !dbg !11390
  br label %if.end, !dbg !11391

if.end:                                           ; preds = %if.then36, %if.then34
  br label %if.end51, !dbg !11392

if.else:                                          ; preds = %if.then23
  %40 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11393
  %vec47 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %40, i32 0, i32 0, !dbg !11395
  %arrayidx48 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec47, i64 0, i64 0, !dbg !11393
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx48, i64 0, i64 0, !dbg !11393
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %co1_back, i64 0, i64 0, !dbg !11396
  call void @copy_v3_v3(float* %arraydecay49, float* %arraydecay50), !dbg !11397
  br label %if.end51

if.end51:                                         ; preds = %if.else, %if.end
  %41 = load i8, i8* %h2_select, align 1, !dbg !11398
  %tobool52 = icmp ne i8 %41, 0, !dbg !11398
  br i1 %tobool52, label %if.then53, label %if.else68, !dbg !11400

if.then53:                                        ; preds = %if.end51
  %42 = load i8, i8* %calc_length.addr, align 1, !dbg !11401
  %tobool54 = icmp ne i8 %42, 0, !dbg !11401
  br i1 %tobool54, label %if.end67, label %if.then55, !dbg !11404

if.then55:                                        ; preds = %if.then53
  %43 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11405
  %vec56 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %43, i32 0, i32 0, !dbg !11407
  %arrayidx57 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec56, i64 0, i64 2, !dbg !11405
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx57, i64 0, i64 0, !dbg !11405
  %44 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11408
  %vec59 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %44, i32 0, i32 0, !dbg !11409
  %arrayidx60 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec59, i64 0, i64 1, !dbg !11408
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx60, i64 0, i64 0, !dbg !11408
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %co2_back, i64 0, i64 0, !dbg !11410
  %45 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11411
  %vec63 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %45, i32 0, i32 0, !dbg !11412
  %arrayidx64 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec63, i64 0, i64 1, !dbg !11411
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx64, i64 0, i64 0, !dbg !11411
  %call66 = call float @len_v3v3(float* %arraydecay62, float* %arraydecay65), !dbg !11413
  call void @dist_ensure_v3_v3fl(float* %arraydecay58, float* %arraydecay61, float %call66), !dbg !11414
  br label %if.end67, !dbg !11415

if.end67:                                         ; preds = %if.then55, %if.then53
  br label %if.end73, !dbg !11416

if.else68:                                        ; preds = %if.end51
  %46 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11417
  %vec69 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %46, i32 0, i32 0, !dbg !11419
  %arrayidx70 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec69, i64 0, i64 2, !dbg !11417
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx70, i64 0, i64 0, !dbg !11417
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %co2_back, i64 0, i64 0, !dbg !11420
  call void @copy_v3_v3(float* %arraydecay71, float* %arraydecay72), !dbg !11421
  br label %if.end73

if.end73:                                         ; preds = %if.else68, %if.end67
  store i8 1, i8* %changed, align 1, !dbg !11422
  br label %if.end74, !dbg !11423

if.end74:                                         ; preds = %if.end73, %lor.lhs.false
  br label %for.inc, !dbg !11424

for.inc:                                          ; preds = %if.end74
  %47 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11425
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %47, i32 1, !dbg !11425
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !11425
  br label %for.cond3, !dbg !11426, !llvm.loop !11427

for.end:                                          ; preds = %for.cond3
  %48 = load i8, i8* %changed, align 1, !dbg !11429
  %tobool75 = icmp ne i8 %48, 0, !dbg !11429
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !11431

if.then76:                                        ; preds = %for.end
  %49 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11432
  call void @BKE_nurb_handles_calc(%struct.Nurb* %49), !dbg !11434
  br label %if.end77, !dbg !11435

if.end77:                                         ; preds = %if.then76, %for.end
  br label %if.end78, !dbg !11436

if.end78:                                         ; preds = %if.end77, %for.body
  br label %for.inc79, !dbg !11437

for.inc79:                                        ; preds = %if.end78
  %50 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11438
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %50, i32 0, i32 0, !dbg !11439
  %51 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !11439
  store %struct.Nurb* %51, %struct.Nurb** %nu, align 8, !dbg !11440
  br label %for.cond, !dbg !11441, !llvm.loop !11442

for.end80:                                        ; preds = %for.cond
  ret void, !dbg !11444
}

declare dso_local void @dist_ensure_v3_v3fl(float*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurbList_flag_set(%struct.ListBase* %editnurb, i16 signext %flag) #0 !dbg !11445 {
entry:
  %editnurb.addr = alloca %struct.ListBase*, align 8
  %flag.addr = alloca i16, align 2
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  store %struct.ListBase* %editnurb, %struct.ListBase** %editnurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %editnurb.addr, metadata !11448, metadata !DIExpression()), !dbg !11449
  store i16 %flag, i16* %flag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %flag.addr, metadata !11450, metadata !DIExpression()), !dbg !11451
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !11452, metadata !DIExpression()), !dbg !11453
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !11454, metadata !DIExpression()), !dbg !11455
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !11456, metadata !DIExpression()), !dbg !11457
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11458, metadata !DIExpression()), !dbg !11459
  %0 = load %struct.ListBase*, %struct.ListBase** %editnurb.addr, align 8, !dbg !11460
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !11462
  %1 = load i8*, i8** %first, align 8, !dbg !11462
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !11460
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !11463
  br label %for.cond, !dbg !11464

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11465
  %tobool = icmp ne %struct.Nurb* %3, null, !dbg !11467
  br i1 %tobool, label %for.body, label %for.end, !dbg !11467

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11468
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 2, !dbg !11471
  %5 = load i16, i16* %type, align 8, !dbg !11471
  %conv = sext i16 %5 to i32, !dbg !11468
  %cmp = icmp eq i32 %conv, 1, !dbg !11472
  br i1 %cmp, label %if.then, label %if.else, !dbg !11473

if.then:                                          ; preds = %for.body
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11474
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 6, !dbg !11476
  %7 = load i32, i32* %pntsu, align 8, !dbg !11476
  store i32 %7, i32* %a, align 4, !dbg !11477
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11478
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 18, !dbg !11479
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !11479
  store %struct.BezTriple* %9, %struct.BezTriple** %bezt, align 8, !dbg !11480
  br label %while.cond, !dbg !11481

while.cond:                                       ; preds = %while.body, %if.then
  %10 = load i32, i32* %a, align 4, !dbg !11482
  %dec = add nsw i32 %10, -1, !dbg !11482
  store i32 %dec, i32* %a, align 4, !dbg !11482
  %tobool3 = icmp ne i32 %10, 0, !dbg !11481
  br i1 %tobool3, label %while.body, label %while.end, !dbg !11481

while.body:                                       ; preds = %while.cond
  %11 = load i16, i16* %flag.addr, align 2, !dbg !11483
  %conv4 = trunc i16 %11 to i8, !dbg !11483
  %12 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11485
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %12, i32 0, i32 9, !dbg !11486
  store i8 %conv4, i8* %f3, align 1, !dbg !11487
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11488
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %13, i32 0, i32 8, !dbg !11489
  store i8 %conv4, i8* %f2, align 4, !dbg !11490
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11491
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %14, i32 0, i32 7, !dbg !11492
  store i8 %conv4, i8* %f1, align 1, !dbg !11493
  %15 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11494
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %15, i32 1, !dbg !11494
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !11494
  br label %while.cond, !dbg !11481, !llvm.loop !11495

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !11497

if.else:                                          ; preds = %for.body
  %16 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11498
  %pntsu5 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %16, i32 0, i32 6, !dbg !11500
  %17 = load i32, i32* %pntsu5, align 8, !dbg !11500
  %18 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11501
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %18, i32 0, i32 7, !dbg !11502
  %19 = load i32, i32* %pntsv, align 4, !dbg !11502
  %mul = mul nsw i32 %17, %19, !dbg !11503
  store i32 %mul, i32* %a, align 4, !dbg !11504
  %20 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11505
  %bp6 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %20, i32 0, i32 17, !dbg !11506
  %21 = load %struct.BPoint*, %struct.BPoint** %bp6, align 8, !dbg !11506
  store %struct.BPoint* %21, %struct.BPoint** %bp, align 8, !dbg !11507
  br label %while.cond7, !dbg !11508

while.cond7:                                      ; preds = %while.body10, %if.else
  %22 = load i32, i32* %a, align 4, !dbg !11509
  %dec8 = add nsw i32 %22, -1, !dbg !11509
  store i32 %dec8, i32* %a, align 4, !dbg !11509
  %tobool9 = icmp ne i32 %22, 0, !dbg !11508
  br i1 %tobool9, label %while.body10, label %while.end13, !dbg !11508

while.body10:                                     ; preds = %while.cond7
  %23 = load i16, i16* %flag.addr, align 2, !dbg !11510
  %24 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11512
  %f111 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %24, i32 0, i32 3, !dbg !11513
  store i16 %23, i16* %f111, align 4, !dbg !11514
  %25 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11515
  %incdec.ptr12 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %25, i32 1, !dbg !11515
  store %struct.BPoint* %incdec.ptr12, %struct.BPoint** %bp, align 8, !dbg !11515
  br label %while.cond7, !dbg !11508, !llvm.loop !11516

while.end13:                                      ; preds = %while.cond7
  br label %if.end

if.end:                                           ; preds = %while.end13, %while.end
  br label %for.inc, !dbg !11518

for.inc:                                          ; preds = %if.end
  %26 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11519
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %26, i32 0, i32 0, !dbg !11520
  %27 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !11520
  store %struct.Nurb* %27, %struct.Nurb** %nu, align 8, !dbg !11521
  br label %for.cond, !dbg !11522, !llvm.loop !11523

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11525
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_nurb_direction_switch(%struct.Nurb* %nu) #0 !dbg !11526 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %bezt1 = alloca %struct.BezTriple*, align 8
  %bezt2 = alloca %struct.BezTriple*, align 8
  %bp1 = alloca %struct.BPoint*, align 8
  %bp2 = alloca %struct.BPoint*, align 8
  %fp1 = alloca float*, align 8
  %fp2 = alloca float*, align 8
  %tempf = alloca float*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %sw_ap = alloca %struct.BezTriple, align 4
  %sw_ap27 = alloca i8, align 1
  %sw_ap30 = alloca i8, align 1
  %sw_ap36 = alloca i8, align 1
  %sw_ap41 = alloca i8, align 1
  %sw_ap71 = alloca %struct.BPoint, align 4
  %sw_ap120 = alloca float, align 4
  %sw_ap213 = alloca %struct.BPoint, align 4
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !11527, metadata !DIExpression()), !dbg !11528
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt1, metadata !11529, metadata !DIExpression()), !dbg !11530
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt2, metadata !11531, metadata !DIExpression()), !dbg !11532
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp1, metadata !11533, metadata !DIExpression()), !dbg !11534
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp2, metadata !11535, metadata !DIExpression()), !dbg !11536
  call void @llvm.dbg.declare(metadata float** %fp1, metadata !11537, metadata !DIExpression()), !dbg !11538
  call void @llvm.dbg.declare(metadata float** %fp2, metadata !11539, metadata !DIExpression()), !dbg !11540
  call void @llvm.dbg.declare(metadata float** %tempf, metadata !11541, metadata !DIExpression()), !dbg !11542
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11543, metadata !DIExpression()), !dbg !11544
  call void @llvm.dbg.declare(metadata i32* %b, metadata !11545, metadata !DIExpression()), !dbg !11546
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11547
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %0, i32 0, i32 6, !dbg !11549
  %1 = load i32, i32* %pntsu, align 8, !dbg !11549
  %cmp = icmp eq i32 %1, 1, !dbg !11550
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11551

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11552
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %2, i32 0, i32 7, !dbg !11553
  %3 = load i32, i32* %pntsv, align 4, !dbg !11553
  %cmp1 = icmp eq i32 %3, 1, !dbg !11554
  br i1 %cmp1, label %if.then, label %if.end, !dbg !11555

if.then:                                          ; preds = %land.lhs.true
  br label %if.end219, !dbg !11556

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11558
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 2, !dbg !11560
  %5 = load i16, i16* %type, align 8, !dbg !11560
  %conv = sext i16 %5 to i32, !dbg !11558
  %cmp2 = icmp eq i32 %conv, 1, !dbg !11561
  br i1 %cmp2, label %if.then4, label %if.else55, !dbg !11562

if.then4:                                         ; preds = %if.end
  %6 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11563
  %pntsu5 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 6, !dbg !11565
  %7 = load i32, i32* %pntsu5, align 8, !dbg !11565
  store i32 %7, i32* %a, align 4, !dbg !11566
  %8 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11567
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 18, !dbg !11568
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11568
  store %struct.BezTriple* %9, %struct.BezTriple** %bezt1, align 8, !dbg !11569
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !11570
  %11 = load i32, i32* %a, align 4, !dbg !11571
  %sub = sub nsw i32 %11, 1, !dbg !11572
  %idx.ext = sext i32 %sub to i64, !dbg !11573
  %add.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %10, i64 %idx.ext, !dbg !11573
  store %struct.BezTriple* %add.ptr, %struct.BezTriple** %bezt2, align 8, !dbg !11574
  %12 = load i32, i32* %a, align 4, !dbg !11575
  %and = and i32 %12, 1, !dbg !11577
  %tobool = icmp ne i32 %and, 0, !dbg !11577
  br i1 %tobool, label %if.then6, label %if.end7, !dbg !11578

if.then6:                                         ; preds = %if.then4
  %13 = load i32, i32* %a, align 4, !dbg !11579
  %add = add nsw i32 %13, 1, !dbg !11579
  store i32 %add, i32* %a, align 4, !dbg !11579
  br label %if.end7, !dbg !11580

if.end7:                                          ; preds = %if.then6, %if.then4
  %14 = load i32, i32* %a, align 4, !dbg !11581
  %div = sdiv i32 %14, 2, !dbg !11581
  store i32 %div, i32* %a, align 4, !dbg !11581
  br label %while.cond, !dbg !11582

while.cond:                                       ; preds = %if.end53, %if.end7
  %15 = load i32, i32* %a, align 4, !dbg !11583
  %cmp8 = icmp sgt i32 %15, 0, !dbg !11584
  br i1 %cmp8, label %while.body, label %while.end, !dbg !11582

while.body:                                       ; preds = %while.cond
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !11585
  %17 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !11588
  %cmp10 = icmp ne %struct.BezTriple* %16, %17, !dbg !11589
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !11590

if.then12:                                        ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.BezTriple* %sw_ap, metadata !11591, metadata !DIExpression()), !dbg !11594
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !11594
  %19 = bitcast %struct.BezTriple* %sw_ap to i8*, !dbg !11594
  %20 = bitcast %struct.BezTriple* %18 to i8*, !dbg !11594
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 72, i1 false), !dbg !11594
  %21 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !11594
  %22 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !11594
  %23 = bitcast %struct.BezTriple* %21 to i8*, !dbg !11594
  %24 = bitcast %struct.BezTriple* %22 to i8*, !dbg !11594
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 4 %24, i64 72, i1 false), !dbg !11594
  %25 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !11594
  %26 = bitcast %struct.BezTriple* %25 to i8*, !dbg !11594
  %27 = bitcast %struct.BezTriple* %sw_ap to i8*, !dbg !11594
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %27, i64 72, i1 false), !dbg !11594
  br label %if.end13, !dbg !11595

if.end13:                                         ; preds = %if.then12, %while.body
  %28 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !11596
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %28, i32 0, i32 0, !dbg !11597
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !11596
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !11596
  %29 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !11598
  %vec14 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %29, i32 0, i32 0, !dbg !11599
  %arrayidx15 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec14, i64 0, i64 2, !dbg !11598
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx15, i64 0, i64 0, !dbg !11598
  call void @swap_v3_v3(float* %arraydecay, float* %arraydecay16), !dbg !11600
  %30 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !11601
  %31 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !11603
  %cmp17 = icmp ne %struct.BezTriple* %30, %31, !dbg !11604
  br i1 %cmp17, label %if.then19, label %if.end26, !dbg !11605

if.then19:                                        ; preds = %if.end13
  %32 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !11606
  %vec20 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %32, i32 0, i32 0, !dbg !11608
  %arrayidx21 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec20, i64 0, i64 0, !dbg !11606
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx21, i64 0, i64 0, !dbg !11606
  %33 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !11609
  %vec23 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %33, i32 0, i32 0, !dbg !11610
  %arrayidx24 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec23, i64 0, i64 2, !dbg !11609
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx24, i64 0, i64 0, !dbg !11609
  call void @swap_v3_v3(float* %arraydecay22, float* %arraydecay25), !dbg !11611
  br label %if.end26, !dbg !11612

if.end26:                                         ; preds = %if.then19, %if.end13
  call void @llvm.dbg.declare(metadata i8* %sw_ap27, metadata !11613, metadata !DIExpression()), !dbg !11615
  %34 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !11615
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %34, i32 0, i32 5, !dbg !11615
  %35 = load i8, i8* %h1, align 1, !dbg !11615
  store i8 %35, i8* %sw_ap27, align 1, !dbg !11615
  %36 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !11615
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %36, i32 0, i32 6, !dbg !11615
  %37 = load i8, i8* %h2, align 2, !dbg !11615
  %38 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !11615
  %h128 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %38, i32 0, i32 5, !dbg !11615
  store i8 %37, i8* %h128, align 1, !dbg !11615
  %39 = load i8, i8* %sw_ap27, align 1, !dbg !11615
  %40 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !11615
  %h229 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %40, i32 0, i32 6, !dbg !11615
  store i8 %39, i8* %h229, align 2, !dbg !11615
  call void @llvm.dbg.declare(metadata i8* %sw_ap30, metadata !11616, metadata !DIExpression()), !dbg !11618
  %41 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !11618
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %41, i32 0, i32 7, !dbg !11618
  %42 = load i8, i8* %f1, align 1, !dbg !11618
  store i8 %42, i8* %sw_ap30, align 1, !dbg !11618
  %43 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !11618
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %43, i32 0, i32 9, !dbg !11618
  %44 = load i8, i8* %f3, align 1, !dbg !11618
  %45 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !11618
  %f131 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %45, i32 0, i32 7, !dbg !11618
  store i8 %44, i8* %f131, align 1, !dbg !11618
  %46 = load i8, i8* %sw_ap30, align 1, !dbg !11618
  %47 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !11618
  %f332 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %47, i32 0, i32 9, !dbg !11618
  store i8 %46, i8* %f332, align 1, !dbg !11618
  %48 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !11619
  %49 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !11621
  %cmp33 = icmp ne %struct.BezTriple* %48, %49, !dbg !11622
  br i1 %cmp33, label %if.then35, label %if.else, !dbg !11623

if.then35:                                        ; preds = %if.end26
  call void @llvm.dbg.declare(metadata i8* %sw_ap36, metadata !11624, metadata !DIExpression()), !dbg !11627
  %50 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !11627
  %h137 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %50, i32 0, i32 5, !dbg !11627
  %51 = load i8, i8* %h137, align 1, !dbg !11627
  store i8 %51, i8* %sw_ap36, align 1, !dbg !11627
  %52 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !11627
  %h238 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %52, i32 0, i32 6, !dbg !11627
  %53 = load i8, i8* %h238, align 2, !dbg !11627
  %54 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !11627
  %h139 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %54, i32 0, i32 5, !dbg !11627
  store i8 %53, i8* %h139, align 1, !dbg !11627
  %55 = load i8, i8* %sw_ap36, align 1, !dbg !11627
  %56 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !11627
  %h240 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %56, i32 0, i32 6, !dbg !11627
  store i8 %55, i8* %h240, align 2, !dbg !11627
  call void @llvm.dbg.declare(metadata i8* %sw_ap41, metadata !11628, metadata !DIExpression()), !dbg !11630
  %57 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !11630
  %f142 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %57, i32 0, i32 7, !dbg !11630
  %58 = load i8, i8* %f142, align 1, !dbg !11630
  store i8 %58, i8* %sw_ap41, align 1, !dbg !11630
  %59 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !11630
  %f343 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %59, i32 0, i32 9, !dbg !11630
  %60 = load i8, i8* %f343, align 1, !dbg !11630
  %61 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !11630
  %f144 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %61, i32 0, i32 7, !dbg !11630
  store i8 %60, i8* %f144, align 1, !dbg !11630
  %62 = load i8, i8* %sw_ap41, align 1, !dbg !11630
  %63 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !11630
  %f345 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %63, i32 0, i32 9, !dbg !11630
  store i8 %62, i8* %f345, align 1, !dbg !11630
  %64 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !11631
  %alfa = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %64, i32 0, i32 1, !dbg !11632
  %65 = load float, float* %alfa, align 4, !dbg !11632
  %fneg = fneg float %65, !dbg !11633
  %66 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !11634
  %alfa46 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %66, i32 0, i32 1, !dbg !11635
  store float %fneg, float* %alfa46, align 4, !dbg !11636
  %67 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !11637
  %alfa47 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %67, i32 0, i32 1, !dbg !11638
  %68 = load float, float* %alfa47, align 4, !dbg !11638
  %fneg48 = fneg float %68, !dbg !11639
  %69 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !11640
  %alfa49 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %69, i32 0, i32 1, !dbg !11641
  store float %fneg48, float* %alfa49, align 4, !dbg !11642
  br label %if.end53, !dbg !11643

if.else:                                          ; preds = %if.end26
  %70 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !11644
  %alfa50 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %70, i32 0, i32 1, !dbg !11646
  %71 = load float, float* %alfa50, align 4, !dbg !11646
  %fneg51 = fneg float %71, !dbg !11647
  %72 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !11648
  %alfa52 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %72, i32 0, i32 1, !dbg !11649
  store float %fneg51, float* %alfa52, align 4, !dbg !11650
  br label %if.end53

if.end53:                                         ; preds = %if.else, %if.then35
  %73 = load i32, i32* %a, align 4, !dbg !11651
  %dec = add nsw i32 %73, -1, !dbg !11651
  store i32 %dec, i32* %a, align 4, !dbg !11651
  %74 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !11652
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %74, i32 1, !dbg !11652
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt1, align 8, !dbg !11652
  %75 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !11653
  %incdec.ptr54 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %75, i32 -1, !dbg !11653
  store %struct.BezTriple* %incdec.ptr54, %struct.BezTriple** %bezt2, align 8, !dbg !11653
  br label %while.cond, !dbg !11582, !llvm.loop !11654

while.end:                                        ; preds = %while.cond
  br label %if.end219, !dbg !11656

if.else55:                                        ; preds = %if.end
  %76 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11657
  %pntsv56 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %76, i32 0, i32 7, !dbg !11659
  %77 = load i32, i32* %pntsv56, align 4, !dbg !11659
  %cmp57 = icmp eq i32 %77, 1, !dbg !11660
  br i1 %cmp57, label %if.then59, label %if.else191, !dbg !11661

if.then59:                                        ; preds = %if.else55
  %78 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11662
  %pntsu60 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %78, i32 0, i32 6, !dbg !11664
  %79 = load i32, i32* %pntsu60, align 8, !dbg !11664
  store i32 %79, i32* %a, align 4, !dbg !11665
  %80 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11666
  %bp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %80, i32 0, i32 17, !dbg !11667
  %81 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11667
  store %struct.BPoint* %81, %struct.BPoint** %bp1, align 8, !dbg !11668
  %82 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !11669
  %83 = load i32, i32* %a, align 4, !dbg !11670
  %sub61 = sub nsw i32 %83, 1, !dbg !11671
  %idx.ext62 = sext i32 %sub61 to i64, !dbg !11672
  %add.ptr63 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %82, i64 %idx.ext62, !dbg !11672
  store %struct.BPoint* %add.ptr63, %struct.BPoint** %bp2, align 8, !dbg !11673
  %84 = load i32, i32* %a, align 4, !dbg !11674
  %div64 = sdiv i32 %84, 2, !dbg !11674
  store i32 %div64, i32* %a, align 4, !dbg !11674
  br label %while.cond65, !dbg !11675

while.cond65:                                     ; preds = %while.body70, %if.then59
  %85 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !11676
  %86 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !11677
  %cmp66 = icmp ne %struct.BPoint* %85, %86, !dbg !11678
  br i1 %cmp66, label %land.rhs, label %land.end, !dbg !11679

land.rhs:                                         ; preds = %while.cond65
  %87 = load i32, i32* %a, align 4, !dbg !11680
  %cmp68 = icmp sgt i32 %87, 0, !dbg !11681
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond65
  %88 = phi i1 [ false, %while.cond65 ], [ %cmp68, %land.rhs ], !dbg !11682
  br i1 %88, label %while.body70, label %while.end81, !dbg !11675

while.body70:                                     ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.BPoint* %sw_ap71, metadata !11683, metadata !DIExpression()), !dbg !11686
  %89 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !11686
  %90 = bitcast %struct.BPoint* %sw_ap71 to i8*, !dbg !11686
  %91 = bitcast %struct.BPoint* %89 to i8*, !dbg !11686
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %90, i8* align 4 %91, i64 36, i1 false), !dbg !11686
  %92 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !11686
  %93 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !11686
  %94 = bitcast %struct.BPoint* %92 to i8*, !dbg !11686
  %95 = bitcast %struct.BPoint* %93 to i8*, !dbg !11686
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 4 %95, i64 36, i1 false), !dbg !11686
  %96 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !11686
  %97 = bitcast %struct.BPoint* %96 to i8*, !dbg !11686
  %98 = bitcast %struct.BPoint* %sw_ap71 to i8*, !dbg !11686
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %97, i8* align 4 %98, i64 36, i1 false), !dbg !11686
  %99 = load i32, i32* %a, align 4, !dbg !11687
  %dec72 = add nsw i32 %99, -1, !dbg !11687
  store i32 %dec72, i32* %a, align 4, !dbg !11687
  %100 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !11688
  %alfa73 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %100, i32 0, i32 1, !dbg !11689
  %101 = load float, float* %alfa73, align 4, !dbg !11689
  %fneg74 = fneg float %101, !dbg !11690
  %102 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !11691
  %alfa75 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %102, i32 0, i32 1, !dbg !11692
  store float %fneg74, float* %alfa75, align 4, !dbg !11693
  %103 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !11694
  %alfa76 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %103, i32 0, i32 1, !dbg !11695
  %104 = load float, float* %alfa76, align 4, !dbg !11695
  %fneg77 = fneg float %104, !dbg !11696
  %105 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !11697
  %alfa78 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %105, i32 0, i32 1, !dbg !11698
  store float %fneg77, float* %alfa78, align 4, !dbg !11699
  %106 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !11700
  %incdec.ptr79 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %106, i32 1, !dbg !11700
  store %struct.BPoint* %incdec.ptr79, %struct.BPoint** %bp1, align 8, !dbg !11700
  %107 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !11701
  %incdec.ptr80 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %107, i32 -1, !dbg !11701
  store %struct.BPoint* %incdec.ptr80, %struct.BPoint** %bp2, align 8, !dbg !11701
  br label %while.cond65, !dbg !11675, !llvm.loop !11702

while.end81:                                      ; preds = %land.end
  %108 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11704
  %pntsu82 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %108, i32 0, i32 6, !dbg !11706
  %109 = load i32, i32* %pntsu82, align 8, !dbg !11706
  %and83 = and i32 %109, 1, !dbg !11707
  %tobool84 = icmp ne i32 %and83, 0, !dbg !11707
  br i1 %tobool84, label %if.then85, label %if.end89, !dbg !11708

if.then85:                                        ; preds = %while.end81
  %110 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !11709
  %alfa86 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %110, i32 0, i32 1, !dbg !11711
  %111 = load float, float* %alfa86, align 4, !dbg !11711
  %fneg87 = fneg float %111, !dbg !11712
  %112 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !11713
  %alfa88 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %112, i32 0, i32 1, !dbg !11714
  store float %fneg87, float* %alfa88, align 4, !dbg !11715
  br label %if.end89, !dbg !11716

if.end89:                                         ; preds = %if.then85, %while.end81
  %113 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11717
  %type90 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %113, i32 0, i32 2, !dbg !11719
  %114 = load i16, i16* %type90, align 8, !dbg !11719
  %conv91 = sext i16 %114 to i32, !dbg !11717
  %cmp92 = icmp eq i32 %conv91, 4, !dbg !11720
  br i1 %cmp92, label %if.then94, label %if.end190, !dbg !11721

if.then94:                                        ; preds = %if.end89
  %115 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11722
  %knotsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %115, i32 0, i32 15, !dbg !11725
  %116 = load float*, float** %knotsu, align 8, !dbg !11725
  %tobool95 = icmp ne float* %116, null, !dbg !11722
  br i1 %tobool95, label %if.then96, label %if.end189, !dbg !11726

if.then96:                                        ; preds = %if.then94
  %117 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11727
  %orderu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %117, i32 0, i32 11, !dbg !11727
  %118 = load i16, i16* %orderu, align 8, !dbg !11727
  %conv97 = sext i16 %118 to i32, !dbg !11727
  %119 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11727
  %pntsu98 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %119, i32 0, i32 6, !dbg !11727
  %120 = load i32, i32* %pntsu98, align 8, !dbg !11727
  %add99 = add nsw i32 %conv97, %120, !dbg !11727
  %121 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11727
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %121, i32 0, i32 13, !dbg !11727
  %122 = load i16, i16* %flagu, align 4, !dbg !11727
  %conv100 = sext i16 %122 to i32, !dbg !11727
  %and101 = and i32 %conv100, 1, !dbg !11727
  %tobool102 = icmp ne i32 %and101, 0, !dbg !11727
  br i1 %tobool102, label %cond.true, label %cond.false, !dbg !11727

cond.true:                                        ; preds = %if.then96
  %123 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11727
  %orderu103 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %123, i32 0, i32 11, !dbg !11727
  %124 = load i16, i16* %orderu103, align 8, !dbg !11727
  %conv104 = sext i16 %124 to i32, !dbg !11727
  %sub105 = sub nsw i32 %conv104, 1, !dbg !11727
  br label %cond.end, !dbg !11727

cond.false:                                       ; preds = %if.then96
  br label %cond.end, !dbg !11727

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub105, %cond.true ], [ 0, %cond.false ], !dbg !11727
  %add106 = add nsw i32 %add99, %cond, !dbg !11727
  store i32 %add106, i32* %a, align 4, !dbg !11729
  %125 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11730
  %knotsu107 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %125, i32 0, i32 15, !dbg !11731
  %126 = load float*, float** %knotsu107, align 8, !dbg !11731
  store float* %126, float** %fp1, align 8, !dbg !11732
  %127 = load float*, float** %fp1, align 8, !dbg !11733
  %128 = load i32, i32* %a, align 4, !dbg !11734
  %sub108 = sub nsw i32 %128, 1, !dbg !11735
  %idx.ext109 = sext i32 %sub108 to i64, !dbg !11736
  %add.ptr110 = getelementptr inbounds float, float* %127, i64 %idx.ext109, !dbg !11736
  store float* %add.ptr110, float** %fp2, align 8, !dbg !11737
  %129 = load i32, i32* %a, align 4, !dbg !11738
  %div111 = sdiv i32 %129, 2, !dbg !11738
  store i32 %div111, i32* %a, align 4, !dbg !11738
  br label %while.cond112, !dbg !11739

while.cond112:                                    ; preds = %while.body119, %cond.end
  %130 = load float*, float** %fp1, align 8, !dbg !11740
  %131 = load float*, float** %fp2, align 8, !dbg !11741
  %cmp113 = icmp ne float* %130, %131, !dbg !11742
  br i1 %cmp113, label %land.rhs115, label %land.end118, !dbg !11743

land.rhs115:                                      ; preds = %while.cond112
  %132 = load i32, i32* %a, align 4, !dbg !11744
  %cmp116 = icmp sgt i32 %132, 0, !dbg !11745
  br label %land.end118

land.end118:                                      ; preds = %land.rhs115, %while.cond112
  %133 = phi i1 [ false, %while.cond112 ], [ %cmp116, %land.rhs115 ], !dbg !11746
  br i1 %133, label %while.body119, label %while.end124, !dbg !11739

while.body119:                                    ; preds = %land.end118
  call void @llvm.dbg.declare(metadata float* %sw_ap120, metadata !11747, metadata !DIExpression()), !dbg !11750
  %134 = load float*, float** %fp1, align 8, !dbg !11750
  %135 = load float, float* %134, align 4, !dbg !11750
  store float %135, float* %sw_ap120, align 4, !dbg !11750
  %136 = load float*, float** %fp2, align 8, !dbg !11750
  %137 = load float, float* %136, align 4, !dbg !11750
  %138 = load float*, float** %fp1, align 8, !dbg !11750
  store float %137, float* %138, align 4, !dbg !11750
  %139 = load float, float* %sw_ap120, align 4, !dbg !11750
  %140 = load float*, float** %fp2, align 8, !dbg !11750
  store float %139, float* %140, align 4, !dbg !11750
  %141 = load i32, i32* %a, align 4, !dbg !11751
  %dec121 = add nsw i32 %141, -1, !dbg !11751
  store i32 %dec121, i32* %a, align 4, !dbg !11751
  %142 = load float*, float** %fp1, align 8, !dbg !11752
  %incdec.ptr122 = getelementptr inbounds float, float* %142, i32 1, !dbg !11752
  store float* %incdec.ptr122, float** %fp1, align 8, !dbg !11752
  %143 = load float*, float** %fp2, align 8, !dbg !11753
  %incdec.ptr123 = getelementptr inbounds float, float* %143, i32 -1, !dbg !11753
  store float* %incdec.ptr123, float** %fp2, align 8, !dbg !11753
  br label %while.cond112, !dbg !11739, !llvm.loop !11754

while.end124:                                     ; preds = %land.end118
  %144 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11756
  %orderu125 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %144, i32 0, i32 11, !dbg !11756
  %145 = load i16, i16* %orderu125, align 8, !dbg !11756
  %conv126 = sext i16 %145 to i32, !dbg !11756
  %146 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11756
  %pntsu127 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %146, i32 0, i32 6, !dbg !11756
  %147 = load i32, i32* %pntsu127, align 8, !dbg !11756
  %add128 = add nsw i32 %conv126, %147, !dbg !11756
  %148 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11756
  %flagu129 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %148, i32 0, i32 13, !dbg !11756
  %149 = load i16, i16* %flagu129, align 4, !dbg !11756
  %conv130 = sext i16 %149 to i32, !dbg !11756
  %and131 = and i32 %conv130, 1, !dbg !11756
  %tobool132 = icmp ne i32 %and131, 0, !dbg !11756
  br i1 %tobool132, label %cond.true133, label %cond.false137, !dbg !11756

cond.true133:                                     ; preds = %while.end124
  %150 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11756
  %orderu134 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %150, i32 0, i32 11, !dbg !11756
  %151 = load i16, i16* %orderu134, align 8, !dbg !11756
  %conv135 = sext i16 %151 to i32, !dbg !11756
  %sub136 = sub nsw i32 %conv135, 1, !dbg !11756
  br label %cond.end138, !dbg !11756

cond.false137:                                    ; preds = %while.end124
  br label %cond.end138, !dbg !11756

cond.end138:                                      ; preds = %cond.false137, %cond.true133
  %cond139 = phi i32 [ %sub136, %cond.true133 ], [ 0, %cond.false137 ], !dbg !11756
  %add140 = add nsw i32 %add128, %cond139, !dbg !11756
  store i32 %add140, i32* %a, align 4, !dbg !11757
  %152 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11758
  %knotsu141 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %152, i32 0, i32 15, !dbg !11759
  %153 = load float*, float** %knotsu141, align 8, !dbg !11759
  store float* %153, float** %fp1, align 8, !dbg !11760
  %154 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !11761
  %155 = load i32, i32* %a, align 4, !dbg !11762
  %conv142 = sext i32 %155 to i64, !dbg !11762
  %mul = mul i64 4, %conv142, !dbg !11763
  %call = call i8* %154(i64 %mul, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i64 0, i64 0)), !dbg !11761
  %156 = bitcast i8* %call to float*, !dbg !11761
  store float* %156, float** %tempf, align 8, !dbg !11764
  store float* %156, float** %fp2, align 8, !dbg !11765
  %157 = load i32, i32* %a, align 4, !dbg !11766
  %dec143 = add nsw i32 %157, -1, !dbg !11766
  store i32 %dec143, i32* %a, align 4, !dbg !11766
  %158 = load float*, float** %fp1, align 8, !dbg !11767
  %159 = load i32, i32* %a, align 4, !dbg !11768
  %idxprom = sext i32 %159 to i64, !dbg !11767
  %arrayidx144 = getelementptr inbounds float, float* %158, i64 %idxprom, !dbg !11767
  %160 = load float, float* %arrayidx144, align 4, !dbg !11767
  %161 = load float*, float** %fp2, align 8, !dbg !11769
  %162 = load i32, i32* %a, align 4, !dbg !11770
  %idxprom145 = sext i32 %162 to i64, !dbg !11769
  %arrayidx146 = getelementptr inbounds float, float* %161, i64 %idxprom145, !dbg !11769
  store float %160, float* %arrayidx146, align 4, !dbg !11771
  br label %while.cond147, !dbg !11772

while.cond147:                                    ; preds = %while.body150, %cond.end138
  %163 = load i32, i32* %a, align 4, !dbg !11773
  %dec148 = add nsw i32 %163, -1, !dbg !11773
  store i32 %dec148, i32* %a, align 4, !dbg !11773
  %tobool149 = icmp ne i32 %163, 0, !dbg !11772
  br i1 %tobool149, label %while.body150, label %while.end157, !dbg !11772

while.body150:                                    ; preds = %while.cond147
  %164 = load float*, float** %fp1, align 8, !dbg !11774
  %arrayidx151 = getelementptr inbounds float, float* %164, i64 1, !dbg !11774
  %165 = load float, float* %arrayidx151, align 4, !dbg !11774
  %166 = load float*, float** %fp1, align 8, !dbg !11776
  %arrayidx152 = getelementptr inbounds float, float* %166, i64 0, !dbg !11776
  %167 = load float, float* %arrayidx152, align 4, !dbg !11776
  %sub153 = fsub float %165, %167, !dbg !11777
  %168 = call float @llvm.fabs.f32(float %sub153), !dbg !11778
  %169 = load float*, float** %fp2, align 8, !dbg !11779
  %arrayidx154 = getelementptr inbounds float, float* %169, i64 0, !dbg !11779
  store float %168, float* %arrayidx154, align 4, !dbg !11780
  %170 = load float*, float** %fp1, align 8, !dbg !11781
  %incdec.ptr155 = getelementptr inbounds float, float* %170, i32 1, !dbg !11781
  store float* %incdec.ptr155, float** %fp1, align 8, !dbg !11781
  %171 = load float*, float** %fp2, align 8, !dbg !11782
  %incdec.ptr156 = getelementptr inbounds float, float* %171, i32 1, !dbg !11782
  store float* %incdec.ptr156, float** %fp2, align 8, !dbg !11782
  br label %while.cond147, !dbg !11772, !llvm.loop !11783

while.end157:                                     ; preds = %while.cond147
  %172 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11785
  %orderu158 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %172, i32 0, i32 11, !dbg !11785
  %173 = load i16, i16* %orderu158, align 8, !dbg !11785
  %conv159 = sext i16 %173 to i32, !dbg !11785
  %174 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11785
  %pntsu160 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %174, i32 0, i32 6, !dbg !11785
  %175 = load i32, i32* %pntsu160, align 8, !dbg !11785
  %add161 = add nsw i32 %conv159, %175, !dbg !11785
  %176 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11785
  %flagu162 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %176, i32 0, i32 13, !dbg !11785
  %177 = load i16, i16* %flagu162, align 4, !dbg !11785
  %conv163 = sext i16 %177 to i32, !dbg !11785
  %and164 = and i32 %conv163, 1, !dbg !11785
  %tobool165 = icmp ne i32 %and164, 0, !dbg !11785
  br i1 %tobool165, label %cond.true166, label %cond.false170, !dbg !11785

cond.true166:                                     ; preds = %while.end157
  %178 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11785
  %orderu167 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %178, i32 0, i32 11, !dbg !11785
  %179 = load i16, i16* %orderu167, align 8, !dbg !11785
  %conv168 = sext i16 %179 to i32, !dbg !11785
  %sub169 = sub nsw i32 %conv168, 1, !dbg !11785
  br label %cond.end171, !dbg !11785

cond.false170:                                    ; preds = %while.end157
  br label %cond.end171, !dbg !11785

cond.end171:                                      ; preds = %cond.false170, %cond.true166
  %cond172 = phi i32 [ %sub169, %cond.true166 ], [ 0, %cond.false170 ], !dbg !11785
  %add173 = add nsw i32 %add161, %cond172, !dbg !11785
  %sub174 = sub nsw i32 %add173, 1, !dbg !11786
  store i32 %sub174, i32* %a, align 4, !dbg !11787
  %180 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11788
  %knotsu175 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %180, i32 0, i32 15, !dbg !11789
  %181 = load float*, float** %knotsu175, align 8, !dbg !11789
  store float* %181, float** %fp1, align 8, !dbg !11790
  %182 = load float*, float** %tempf, align 8, !dbg !11791
  store float* %182, float** %fp2, align 8, !dbg !11792
  %183 = load float*, float** %fp1, align 8, !dbg !11793
  %arrayidx176 = getelementptr inbounds float, float* %183, i64 0, !dbg !11793
  store float 0.000000e+00, float* %arrayidx176, align 4, !dbg !11794
  %184 = load float*, float** %fp1, align 8, !dbg !11795
  %incdec.ptr177 = getelementptr inbounds float, float* %184, i32 1, !dbg !11795
  store float* %incdec.ptr177, float** %fp1, align 8, !dbg !11795
  br label %while.cond178, !dbg !11796

while.cond178:                                    ; preds = %while.body181, %cond.end171
  %185 = load i32, i32* %a, align 4, !dbg !11797
  %dec179 = add nsw i32 %185, -1, !dbg !11797
  store i32 %dec179, i32* %a, align 4, !dbg !11797
  %tobool180 = icmp ne i32 %185, 0, !dbg !11796
  br i1 %tobool180, label %while.body181, label %while.end188, !dbg !11796

while.body181:                                    ; preds = %while.cond178
  %186 = load float*, float** %fp1, align 8, !dbg !11798
  %arrayidx182 = getelementptr inbounds float, float* %186, i64 -1, !dbg !11798
  %187 = load float, float* %arrayidx182, align 4, !dbg !11798
  %188 = load float*, float** %fp2, align 8, !dbg !11800
  %arrayidx183 = getelementptr inbounds float, float* %188, i64 0, !dbg !11800
  %189 = load float, float* %arrayidx183, align 4, !dbg !11800
  %add184 = fadd float %187, %189, !dbg !11801
  %190 = load float*, float** %fp1, align 8, !dbg !11802
  %arrayidx185 = getelementptr inbounds float, float* %190, i64 0, !dbg !11802
  store float %add184, float* %arrayidx185, align 4, !dbg !11803
  %191 = load float*, float** %fp1, align 8, !dbg !11804
  %incdec.ptr186 = getelementptr inbounds float, float* %191, i32 1, !dbg !11804
  store float* %incdec.ptr186, float** %fp1, align 8, !dbg !11804
  %192 = load float*, float** %fp2, align 8, !dbg !11805
  %incdec.ptr187 = getelementptr inbounds float, float* %192, i32 1, !dbg !11805
  store float* %incdec.ptr187, float** %fp2, align 8, !dbg !11805
  br label %while.cond178, !dbg !11796, !llvm.loop !11806

while.end188:                                     ; preds = %while.cond178
  %193 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11808
  %194 = load float*, float** %tempf, align 8, !dbg !11809
  %195 = bitcast float* %194 to i8*, !dbg !11809
  call void %193(i8* %195), !dbg !11808
  br label %if.end189, !dbg !11810

if.end189:                                        ; preds = %while.end188, %if.then94
  br label %if.end190, !dbg !11811

if.end190:                                        ; preds = %if.end189, %if.end89
  br label %if.end218, !dbg !11812

if.else191:                                       ; preds = %if.else55
  store i32 0, i32* %b, align 4, !dbg !11813
  br label %for.cond, !dbg !11816

for.cond:                                         ; preds = %for.inc, %if.else191
  %196 = load i32, i32* %b, align 4, !dbg !11817
  %197 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11819
  %pntsv192 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %197, i32 0, i32 7, !dbg !11820
  %198 = load i32, i32* %pntsv192, align 4, !dbg !11820
  %cmp193 = icmp slt i32 %196, %198, !dbg !11821
  br i1 %cmp193, label %for.body, label %for.end, !dbg !11822

for.body:                                         ; preds = %for.cond
  %199 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11823
  %bp195 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %199, i32 0, i32 17, !dbg !11825
  %200 = load %struct.BPoint*, %struct.BPoint** %bp195, align 8, !dbg !11825
  %201 = load i32, i32* %b, align 4, !dbg !11826
  %202 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11827
  %pntsu196 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %202, i32 0, i32 6, !dbg !11828
  %203 = load i32, i32* %pntsu196, align 8, !dbg !11828
  %mul197 = mul nsw i32 %201, %203, !dbg !11829
  %idx.ext198 = sext i32 %mul197 to i64, !dbg !11830
  %add.ptr199 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %200, i64 %idx.ext198, !dbg !11830
  store %struct.BPoint* %add.ptr199, %struct.BPoint** %bp1, align 8, !dbg !11831
  %204 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !11832
  %pntsu200 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %204, i32 0, i32 6, !dbg !11833
  %205 = load i32, i32* %pntsu200, align 8, !dbg !11833
  store i32 %205, i32* %a, align 4, !dbg !11834
  %206 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !11835
  %207 = load i32, i32* %a, align 4, !dbg !11836
  %sub201 = sub nsw i32 %207, 1, !dbg !11837
  %idx.ext202 = sext i32 %sub201 to i64, !dbg !11838
  %add.ptr203 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %206, i64 %idx.ext202, !dbg !11838
  store %struct.BPoint* %add.ptr203, %struct.BPoint** %bp2, align 8, !dbg !11839
  %208 = load i32, i32* %a, align 4, !dbg !11840
  %div204 = sdiv i32 %208, 2, !dbg !11840
  store i32 %div204, i32* %a, align 4, !dbg !11840
  br label %while.cond205, !dbg !11841

while.cond205:                                    ; preds = %while.body212, %for.body
  %209 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !11842
  %210 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !11843
  %cmp206 = icmp ne %struct.BPoint* %209, %210, !dbg !11844
  br i1 %cmp206, label %land.rhs208, label %land.end211, !dbg !11845

land.rhs208:                                      ; preds = %while.cond205
  %211 = load i32, i32* %a, align 4, !dbg !11846
  %cmp209 = icmp sgt i32 %211, 0, !dbg !11847
  br label %land.end211

land.end211:                                      ; preds = %land.rhs208, %while.cond205
  %212 = phi i1 [ false, %while.cond205 ], [ %cmp209, %land.rhs208 ], !dbg !11848
  br i1 %212, label %while.body212, label %while.end217, !dbg !11841

while.body212:                                    ; preds = %land.end211
  call void @llvm.dbg.declare(metadata %struct.BPoint* %sw_ap213, metadata !11849, metadata !DIExpression()), !dbg !11852
  %213 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !11852
  %214 = bitcast %struct.BPoint* %sw_ap213 to i8*, !dbg !11852
  %215 = bitcast %struct.BPoint* %213 to i8*, !dbg !11852
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %214, i8* align 4 %215, i64 36, i1 false), !dbg !11852
  %216 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !11852
  %217 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !11852
  %218 = bitcast %struct.BPoint* %216 to i8*, !dbg !11852
  %219 = bitcast %struct.BPoint* %217 to i8*, !dbg !11852
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %218, i8* align 4 %219, i64 36, i1 false), !dbg !11852
  %220 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !11852
  %221 = bitcast %struct.BPoint* %220 to i8*, !dbg !11852
  %222 = bitcast %struct.BPoint* %sw_ap213 to i8*, !dbg !11852
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %221, i8* align 4 %222, i64 36, i1 false), !dbg !11852
  %223 = load i32, i32* %a, align 4, !dbg !11853
  %dec214 = add nsw i32 %223, -1, !dbg !11853
  store i32 %dec214, i32* %a, align 4, !dbg !11853
  %224 = load %struct.BPoint*, %struct.BPoint** %bp1, align 8, !dbg !11854
  %incdec.ptr215 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %224, i32 1, !dbg !11854
  store %struct.BPoint* %incdec.ptr215, %struct.BPoint** %bp1, align 8, !dbg !11854
  %225 = load %struct.BPoint*, %struct.BPoint** %bp2, align 8, !dbg !11855
  %incdec.ptr216 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %225, i32 -1, !dbg !11855
  store %struct.BPoint* %incdec.ptr216, %struct.BPoint** %bp2, align 8, !dbg !11855
  br label %while.cond205, !dbg !11841, !llvm.loop !11856

while.end217:                                     ; preds = %land.end211
  br label %for.inc, !dbg !11858

for.inc:                                          ; preds = %while.end217
  %226 = load i32, i32* %b, align 4, !dbg !11859
  %inc = add nsw i32 %226, 1, !dbg !11859
  store i32 %inc, i32* %b, align 4, !dbg !11859
  br label %for.cond, !dbg !11860, !llvm.loop !11861

for.end:                                          ; preds = %for.cond
  br label %if.end218

if.end218:                                        ; preds = %for.end, %if.end190
  br label %if.end219

if.end219:                                        ; preds = %if.then, %if.end218, %while.end
  ret void, !dbg !11863
}

; Function Attrs: noinline nounwind uwtable
define internal void @swap_v3_v3(float* %a, float* %b) #0 !dbg !11864 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %sw_ap = alloca float, align 4
  %sw_ap4 = alloca float, align 4
  %sw_ap9 = alloca float, align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11867, metadata !DIExpression()), !dbg !11868
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !11869, metadata !DIExpression()), !dbg !11870
  call void @llvm.dbg.declare(metadata float* %sw_ap, metadata !11871, metadata !DIExpression()), !dbg !11873
  %0 = load float*, float** %a.addr, align 8, !dbg !11873
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11873
  %1 = load float, float* %arrayidx, align 4, !dbg !11873
  store float %1, float* %sw_ap, align 4, !dbg !11873
  %2 = load float*, float** %b.addr, align 8, !dbg !11873
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !11873
  %3 = load float, float* %arrayidx1, align 4, !dbg !11873
  %4 = load float*, float** %a.addr, align 8, !dbg !11873
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !11873
  store float %3, float* %arrayidx2, align 4, !dbg !11873
  %5 = load float, float* %sw_ap, align 4, !dbg !11873
  %6 = load float*, float** %b.addr, align 8, !dbg !11873
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 0, !dbg !11873
  store float %5, float* %arrayidx3, align 4, !dbg !11873
  call void @llvm.dbg.declare(metadata float* %sw_ap4, metadata !11874, metadata !DIExpression()), !dbg !11876
  %7 = load float*, float** %a.addr, align 8, !dbg !11876
  %arrayidx5 = getelementptr inbounds float, float* %7, i64 1, !dbg !11876
  %8 = load float, float* %arrayidx5, align 4, !dbg !11876
  store float %8, float* %sw_ap4, align 4, !dbg !11876
  %9 = load float*, float** %b.addr, align 8, !dbg !11876
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !11876
  %10 = load float, float* %arrayidx6, align 4, !dbg !11876
  %11 = load float*, float** %a.addr, align 8, !dbg !11876
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 1, !dbg !11876
  store float %10, float* %arrayidx7, align 4, !dbg !11876
  %12 = load float, float* %sw_ap4, align 4, !dbg !11876
  %13 = load float*, float** %b.addr, align 8, !dbg !11876
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 1, !dbg !11876
  store float %12, float* %arrayidx8, align 4, !dbg !11876
  call void @llvm.dbg.declare(metadata float* %sw_ap9, metadata !11877, metadata !DIExpression()), !dbg !11879
  %14 = load float*, float** %a.addr, align 8, !dbg !11879
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !11879
  %15 = load float, float* %arrayidx10, align 4, !dbg !11879
  store float %15, float* %sw_ap9, align 4, !dbg !11879
  %16 = load float*, float** %b.addr, align 8, !dbg !11879
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 2, !dbg !11879
  %17 = load float, float* %arrayidx11, align 4, !dbg !11879
  %18 = load float*, float** %a.addr, align 8, !dbg !11879
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 2, !dbg !11879
  store float %17, float* %arrayidx12, align 4, !dbg !11879
  %19 = load float, float* %sw_ap9, align 4, !dbg !11879
  %20 = load float*, float** %b.addr, align 8, !dbg !11879
  %arrayidx13 = getelementptr inbounds float, float* %20, i64 2, !dbg !11879
  store float %19, float* %arrayidx13, align 4, !dbg !11879
  ret void, !dbg !11880
}

; Function Attrs: noinline nounwind uwtable
define dso_local [3 x float]* @BKE_curve_nurbs_vertexCos_get(%struct.ListBase* %lb, i32* %r_numVerts) #0 !dbg !11881 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  %r_numVerts.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %co = alloca float*, align 8
  %cos = alloca [3 x float]*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !11885, metadata !DIExpression()), !dbg !11886
  store i32* %r_numVerts, i32** %r_numVerts.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_numVerts.addr, metadata !11887, metadata !DIExpression()), !dbg !11888
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11889, metadata !DIExpression()), !dbg !11890
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !11891, metadata !DIExpression()), !dbg !11892
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !11893
  %call = call i32 @BKE_nurbList_verts_count(%struct.ListBase* %0), !dbg !11894
  %1 = load i32*, i32** %r_numVerts.addr, align 8, !dbg !11895
  store i32 %call, i32* %1, align 4, !dbg !11896
  store i32 %call, i32* %numVerts, align 4, !dbg !11892
  call void @llvm.dbg.declare(metadata float** %co, metadata !11897, metadata !DIExpression()), !dbg !11898
  call void @llvm.dbg.declare(metadata [3 x float]** %cos, metadata !11899, metadata !DIExpression()), !dbg !11900
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !11901
  %3 = load i32, i32* %numVerts, align 4, !dbg !11902
  %conv = sext i32 %3 to i64, !dbg !11902
  %mul = mul i64 12, %conv, !dbg !11903
  %call1 = call i8* %2(i64 %mul, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i64 0, i64 0)), !dbg !11901
  %4 = bitcast i8* %call1 to [3 x float]*, !dbg !11901
  store [3 x float]* %4, [3 x float]** %cos, align 8, !dbg !11900
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !11904, metadata !DIExpression()), !dbg !11905
  %5 = load [3 x float]*, [3 x float]** %cos, align 8, !dbg !11906
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %5, i64 0, !dbg !11906
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !11906
  store float* %arraydecay, float** %co, align 8, !dbg !11907
  %6 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !11908
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %6, i32 0, i32 0, !dbg !11910
  %7 = load i8*, i8** %first, align 8, !dbg !11910
  %8 = bitcast i8* %7 to %struct.Nurb*, !dbg !11908
  store %struct.Nurb* %8, %struct.Nurb** %nu, align 8, !dbg !11911
  br label %for.cond, !dbg !11912

for.cond:                                         ; preds = %for.inc33, %entry
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11913
  %tobool = icmp ne %struct.Nurb* %9, null, !dbg !11915
  br i1 %tobool, label %for.body, label %for.end34, !dbg !11915

for.body:                                         ; preds = %for.cond
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11916
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 2, !dbg !11919
  %11 = load i16, i16* %type, align 8, !dbg !11919
  %conv2 = sext i16 %11 to i32, !dbg !11916
  %cmp = icmp eq i32 %conv2, 1, !dbg !11920
  br i1 %cmp, label %if.then, label %if.else, !dbg !11921

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !11922, metadata !DIExpression()), !dbg !11924
  %12 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11925
  %bezt4 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 18, !dbg !11926
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt4, align 8, !dbg !11926
  store %struct.BezTriple* %13, %struct.BezTriple** %bezt, align 8, !dbg !11924
  store i32 0, i32* %i, align 4, !dbg !11927
  br label %for.cond5, !dbg !11929

for.cond5:                                        ; preds = %for.inc, %if.then
  %14 = load i32, i32* %i, align 4, !dbg !11930
  %15 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11932
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %15, i32 0, i32 6, !dbg !11933
  %16 = load i32, i32* %pntsu, align 8, !dbg !11933
  %cmp6 = icmp slt i32 %14, %16, !dbg !11934
  br i1 %cmp6, label %for.body8, label %for.end, !dbg !11935

for.body8:                                        ; preds = %for.cond5
  %17 = load float*, float** %co, align 8, !dbg !11936
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11938
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %18, i32 0, i32 0, !dbg !11939
  %arrayidx9 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !11938
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx9, i64 0, i64 0, !dbg !11938
  call void @copy_v3_v3(float* %17, float* %arraydecay10), !dbg !11940
  %19 = load float*, float** %co, align 8, !dbg !11941
  %add.ptr = getelementptr inbounds float, float* %19, i64 3, !dbg !11941
  store float* %add.ptr, float** %co, align 8, !dbg !11941
  %20 = load float*, float** %co, align 8, !dbg !11942
  %21 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11943
  %vec11 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %21, i32 0, i32 0, !dbg !11944
  %arrayidx12 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec11, i64 0, i64 1, !dbg !11943
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx12, i64 0, i64 0, !dbg !11943
  call void @copy_v3_v3(float* %20, float* %arraydecay13), !dbg !11945
  %22 = load float*, float** %co, align 8, !dbg !11946
  %add.ptr14 = getelementptr inbounds float, float* %22, i64 3, !dbg !11946
  store float* %add.ptr14, float** %co, align 8, !dbg !11946
  %23 = load float*, float** %co, align 8, !dbg !11947
  %24 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11948
  %vec15 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %24, i32 0, i32 0, !dbg !11949
  %arrayidx16 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec15, i64 0, i64 2, !dbg !11948
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 0, !dbg !11948
  call void @copy_v3_v3(float* %23, float* %arraydecay17), !dbg !11950
  %25 = load float*, float** %co, align 8, !dbg !11951
  %add.ptr18 = getelementptr inbounds float, float* %25, i64 3, !dbg !11951
  store float* %add.ptr18, float** %co, align 8, !dbg !11951
  br label %for.inc, !dbg !11952

for.inc:                                          ; preds = %for.body8
  %26 = load i32, i32* %i, align 4, !dbg !11953
  %inc = add nsw i32 %26, 1, !dbg !11953
  store i32 %inc, i32* %i, align 4, !dbg !11953
  %27 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !11954
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %27, i32 1, !dbg !11954
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !11954
  br label %for.cond5, !dbg !11955, !llvm.loop !11956

for.end:                                          ; preds = %for.cond5
  br label %if.end, !dbg !11958

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !11959, metadata !DIExpression()), !dbg !11961
  %28 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11962
  %bp19 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %28, i32 0, i32 17, !dbg !11963
  %29 = load %struct.BPoint*, %struct.BPoint** %bp19, align 8, !dbg !11963
  store %struct.BPoint* %29, %struct.BPoint** %bp, align 8, !dbg !11961
  store i32 0, i32* %i, align 4, !dbg !11964
  br label %for.cond20, !dbg !11966

for.cond20:                                       ; preds = %for.inc29, %if.else
  %30 = load i32, i32* %i, align 4, !dbg !11967
  %31 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11969
  %pntsu21 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %31, i32 0, i32 6, !dbg !11970
  %32 = load i32, i32* %pntsu21, align 8, !dbg !11970
  %33 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11971
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %33, i32 0, i32 7, !dbg !11972
  %34 = load i32, i32* %pntsv, align 4, !dbg !11972
  %mul22 = mul nsw i32 %32, %34, !dbg !11973
  %cmp23 = icmp slt i32 %30, %mul22, !dbg !11974
  br i1 %cmp23, label %for.body25, label %for.end32, !dbg !11975

for.body25:                                       ; preds = %for.cond20
  %35 = load float*, float** %co, align 8, !dbg !11976
  %36 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11978
  %vec26 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %36, i32 0, i32 0, !dbg !11979
  %arraydecay27 = getelementptr inbounds [4 x float], [4 x float]* %vec26, i64 0, i64 0, !dbg !11978
  call void @copy_v3_v3(float* %35, float* %arraydecay27), !dbg !11980
  %37 = load float*, float** %co, align 8, !dbg !11981
  %add.ptr28 = getelementptr inbounds float, float* %37, i64 3, !dbg !11981
  store float* %add.ptr28, float** %co, align 8, !dbg !11981
  br label %for.inc29, !dbg !11982

for.inc29:                                        ; preds = %for.body25
  %38 = load i32, i32* %i, align 4, !dbg !11983
  %inc30 = add nsw i32 %38, 1, !dbg !11983
  store i32 %inc30, i32* %i, align 4, !dbg !11983
  %39 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !11984
  %incdec.ptr31 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %39, i32 1, !dbg !11984
  store %struct.BPoint* %incdec.ptr31, %struct.BPoint** %bp, align 8, !dbg !11984
  br label %for.cond20, !dbg !11985, !llvm.loop !11986

for.end32:                                        ; preds = %for.cond20
  br label %if.end

if.end:                                           ; preds = %for.end32, %for.end
  br label %for.inc33, !dbg !11988

for.inc33:                                        ; preds = %if.end
  %40 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !11989
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %40, i32 0, i32 0, !dbg !11990
  %41 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !11990
  store %struct.Nurb* %41, %struct.Nurb** %nu, align 8, !dbg !11991
  br label %for.cond, !dbg !11992, !llvm.loop !11993

for.end34:                                        ; preds = %for.cond
  %42 = load [3 x float]*, [3 x float]** %cos, align 8, !dbg !11995
  ret [3 x float]* %42, !dbg !11996
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BK_curve_nurbs_vertexCos_apply(%struct.ListBase* %lb, [3 x float]* %vertexCos) #0 !dbg !11997 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  %vertexCos.addr = alloca [3 x float]*, align 8
  %co = alloca float*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %i = alloca i32, align 4
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !12000, metadata !DIExpression()), !dbg !12001
  store [3 x float]* %vertexCos, [3 x float]** %vertexCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexCos.addr, metadata !12002, metadata !DIExpression()), !dbg !12003
  call void @llvm.dbg.declare(metadata float** %co, metadata !12004, metadata !DIExpression()), !dbg !12005
  %0 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !12006
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %0, i64 0, !dbg !12006
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !12006
  store float* %arraydecay, float** %co, align 8, !dbg !12005
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !12007, metadata !DIExpression()), !dbg !12008
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12009, metadata !DIExpression()), !dbg !12010
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !12011
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !12013
  %2 = load i8*, i8** %first, align 8, !dbg !12013
  %3 = bitcast i8* %2 to %struct.Nurb*, !dbg !12011
  store %struct.Nurb* %3, %struct.Nurb** %nu, align 8, !dbg !12014
  br label %for.cond, !dbg !12015

for.cond:                                         ; preds = %for.inc30, %entry
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12016
  %tobool = icmp ne %struct.Nurb* %4, null, !dbg !12018
  br i1 %tobool, label %for.body, label %for.end31, !dbg !12018

for.body:                                         ; preds = %for.cond
  %5 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12019
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %5, i32 0, i32 2, !dbg !12022
  %6 = load i16, i16* %type, align 8, !dbg !12022
  %conv = sext i16 %6 to i32, !dbg !12019
  %cmp = icmp eq i32 %conv, 1, !dbg !12023
  br i1 %cmp, label %if.then, label %if.else, !dbg !12024

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !12025, metadata !DIExpression()), !dbg !12027
  %7 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12028
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %7, i32 0, i32 18, !dbg !12029
  %8 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !12029
  store %struct.BezTriple* %8, %struct.BezTriple** %bezt, align 8, !dbg !12027
  store i32 0, i32* %i, align 4, !dbg !12030
  br label %for.cond3, !dbg !12032

for.cond3:                                        ; preds = %for.inc, %if.then
  %9 = load i32, i32* %i, align 4, !dbg !12033
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12035
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 6, !dbg !12036
  %11 = load i32, i32* %pntsu, align 8, !dbg !12036
  %cmp4 = icmp slt i32 %9, %11, !dbg !12037
  br i1 %cmp4, label %for.body6, label %for.end, !dbg !12038

for.body6:                                        ; preds = %for.cond3
  %12 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12039
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %12, i32 0, i32 0, !dbg !12041
  %arrayidx7 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !12039
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx7, i64 0, i64 0, !dbg !12039
  %13 = load float*, float** %co, align 8, !dbg !12042
  call void @copy_v3_v3(float* %arraydecay8, float* %13), !dbg !12043
  %14 = load float*, float** %co, align 8, !dbg !12044
  %add.ptr = getelementptr inbounds float, float* %14, i64 3, !dbg !12044
  store float* %add.ptr, float** %co, align 8, !dbg !12044
  %15 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12045
  %vec9 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %15, i32 0, i32 0, !dbg !12046
  %arrayidx10 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec9, i64 0, i64 1, !dbg !12045
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx10, i64 0, i64 0, !dbg !12045
  %16 = load float*, float** %co, align 8, !dbg !12047
  call void @copy_v3_v3(float* %arraydecay11, float* %16), !dbg !12048
  %17 = load float*, float** %co, align 8, !dbg !12049
  %add.ptr12 = getelementptr inbounds float, float* %17, i64 3, !dbg !12049
  store float* %add.ptr12, float** %co, align 8, !dbg !12049
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12050
  %vec13 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %18, i32 0, i32 0, !dbg !12051
  %arrayidx14 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec13, i64 0, i64 2, !dbg !12050
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx14, i64 0, i64 0, !dbg !12050
  %19 = load float*, float** %co, align 8, !dbg !12052
  call void @copy_v3_v3(float* %arraydecay15, float* %19), !dbg !12053
  %20 = load float*, float** %co, align 8, !dbg !12054
  %add.ptr16 = getelementptr inbounds float, float* %20, i64 3, !dbg !12054
  store float* %add.ptr16, float** %co, align 8, !dbg !12054
  br label %for.inc, !dbg !12055

for.inc:                                          ; preds = %for.body6
  %21 = load i32, i32* %i, align 4, !dbg !12056
  %inc = add nsw i32 %21, 1, !dbg !12056
  store i32 %inc, i32* %i, align 4, !dbg !12056
  %22 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12057
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %22, i32 1, !dbg !12057
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !12057
  br label %for.cond3, !dbg !12058, !llvm.loop !12059

for.end:                                          ; preds = %for.cond3
  br label %if.end, !dbg !12061

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !12062, metadata !DIExpression()), !dbg !12064
  %23 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12065
  %bp17 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %23, i32 0, i32 17, !dbg !12066
  %24 = load %struct.BPoint*, %struct.BPoint** %bp17, align 8, !dbg !12066
  store %struct.BPoint* %24, %struct.BPoint** %bp, align 8, !dbg !12064
  store i32 0, i32* %i, align 4, !dbg !12067
  br label %for.cond18, !dbg !12069

for.cond18:                                       ; preds = %for.inc26, %if.else
  %25 = load i32, i32* %i, align 4, !dbg !12070
  %26 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12072
  %pntsu19 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %26, i32 0, i32 6, !dbg !12073
  %27 = load i32, i32* %pntsu19, align 8, !dbg !12073
  %28 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12074
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %28, i32 0, i32 7, !dbg !12075
  %29 = load i32, i32* %pntsv, align 4, !dbg !12075
  %mul = mul nsw i32 %27, %29, !dbg !12076
  %cmp20 = icmp slt i32 %25, %mul, !dbg !12077
  br i1 %cmp20, label %for.body22, label %for.end29, !dbg !12078

for.body22:                                       ; preds = %for.cond18
  %30 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12079
  %vec23 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %30, i32 0, i32 0, !dbg !12081
  %arraydecay24 = getelementptr inbounds [4 x float], [4 x float]* %vec23, i64 0, i64 0, !dbg !12079
  %31 = load float*, float** %co, align 8, !dbg !12082
  call void @copy_v3_v3(float* %arraydecay24, float* %31), !dbg !12083
  %32 = load float*, float** %co, align 8, !dbg !12084
  %add.ptr25 = getelementptr inbounds float, float* %32, i64 3, !dbg !12084
  store float* %add.ptr25, float** %co, align 8, !dbg !12084
  br label %for.inc26, !dbg !12085

for.inc26:                                        ; preds = %for.body22
  %33 = load i32, i32* %i, align 4, !dbg !12086
  %inc27 = add nsw i32 %33, 1, !dbg !12086
  store i32 %inc27, i32* %i, align 4, !dbg !12086
  %34 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12087
  %incdec.ptr28 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %34, i32 1, !dbg !12087
  store %struct.BPoint* %incdec.ptr28, %struct.BPoint** %bp, align 8, !dbg !12087
  br label %for.cond18, !dbg !12088, !llvm.loop !12089

for.end29:                                        ; preds = %for.cond18
  br label %if.end

if.end:                                           ; preds = %for.end29, %for.end
  %35 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12091
  call void @calchandlesNurb_intern(%struct.Nurb* %35, i8 zeroext 1), !dbg !12092
  br label %for.inc30, !dbg !12093

for.inc30:                                        ; preds = %if.end
  %36 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12094
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %36, i32 0, i32 0, !dbg !12095
  %37 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !12095
  store %struct.Nurb* %37, %struct.Nurb** %nu, align 8, !dbg !12096
  br label %for.cond, !dbg !12097, !llvm.loop !12098

for.end31:                                        ; preds = %for.cond
  ret void, !dbg !12100
}

; Function Attrs: noinline nounwind uwtable
define dso_local [3 x float]* @BKE_curve_nurbs_keyVertexCos_get(%struct.ListBase* %lb, float* %key) #0 !dbg !12101 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  %key.addr = alloca float*, align 8
  %i = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %co = alloca float*, align 8
  %cos = alloca [3 x float]*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !12104, metadata !DIExpression()), !dbg !12105
  store float* %key, float** %key.addr, align 8
  call void @llvm.dbg.declare(metadata float** %key.addr, metadata !12106, metadata !DIExpression()), !dbg !12107
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12108, metadata !DIExpression()), !dbg !12109
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !12110, metadata !DIExpression()), !dbg !12111
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !12112
  %call = call i32 @BKE_nurbList_verts_count(%struct.ListBase* %0), !dbg !12113
  store i32 %call, i32* %numVerts, align 4, !dbg !12111
  call void @llvm.dbg.declare(metadata float** %co, metadata !12114, metadata !DIExpression()), !dbg !12115
  call void @llvm.dbg.declare(metadata [3 x float]** %cos, metadata !12116, metadata !DIExpression()), !dbg !12117
  %1 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !12118
  %2 = load i32, i32* %numVerts, align 4, !dbg !12119
  %conv = sext i32 %2 to i64, !dbg !12119
  %mul = mul i64 12, %conv, !dbg !12120
  %call1 = call i8* %1(i64 %mul, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i64 0, i64 0)), !dbg !12118
  %3 = bitcast i8* %call1 to [3 x float]*, !dbg !12118
  store [3 x float]* %3, [3 x float]** %cos, align 8, !dbg !12117
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !12121, metadata !DIExpression()), !dbg !12122
  %4 = load [3 x float]*, [3 x float]** %cos, align 8, !dbg !12123
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %4, i64 0, !dbg !12123
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !12123
  store float* %arraydecay, float** %co, align 8, !dbg !12124
  %5 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !12125
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !12127
  %6 = load i8*, i8** %first, align 8, !dbg !12127
  %7 = bitcast i8* %6 to %struct.Nurb*, !dbg !12125
  store %struct.Nurb* %7, %struct.Nurb** %nu, align 8, !dbg !12128
  br label %for.cond, !dbg !12129

for.cond:                                         ; preds = %for.inc29, %entry
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12130
  %tobool = icmp ne %struct.Nurb* %8, null, !dbg !12132
  br i1 %tobool, label %for.body, label %for.end30, !dbg !12132

for.body:                                         ; preds = %for.cond
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12133
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 2, !dbg !12136
  %10 = load i16, i16* %type, align 8, !dbg !12136
  %conv2 = sext i16 %10 to i32, !dbg !12133
  %cmp = icmp eq i32 %conv2, 1, !dbg !12137
  br i1 %cmp, label %if.then, label %if.else, !dbg !12138

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !12139, metadata !DIExpression()), !dbg !12141
  %11 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12142
  %bezt4 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 18, !dbg !12143
  %12 = load %struct.BezTriple*, %struct.BezTriple** %bezt4, align 8, !dbg !12143
  store %struct.BezTriple* %12, %struct.BezTriple** %bezt, align 8, !dbg !12141
  store i32 0, i32* %i, align 4, !dbg !12144
  br label %for.cond5, !dbg !12146

for.cond5:                                        ; preds = %for.inc, %if.then
  %13 = load i32, i32* %i, align 4, !dbg !12147
  %14 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12149
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %14, i32 0, i32 6, !dbg !12150
  %15 = load i32, i32* %pntsu, align 8, !dbg !12150
  %cmp6 = icmp slt i32 %13, %15, !dbg !12151
  br i1 %cmp6, label %for.body8, label %for.end, !dbg !12152

for.body8:                                        ; preds = %for.cond5
  %16 = load float*, float** %co, align 8, !dbg !12153
  %17 = load float*, float** %key.addr, align 8, !dbg !12155
  call void @copy_v3_v3(float* %16, float* %17), !dbg !12156
  %18 = load float*, float** %co, align 8, !dbg !12157
  %add.ptr = getelementptr inbounds float, float* %18, i64 3, !dbg !12157
  store float* %add.ptr, float** %co, align 8, !dbg !12157
  %19 = load float*, float** %key.addr, align 8, !dbg !12158
  %add.ptr9 = getelementptr inbounds float, float* %19, i64 3, !dbg !12158
  store float* %add.ptr9, float** %key.addr, align 8, !dbg !12158
  %20 = load float*, float** %co, align 8, !dbg !12159
  %21 = load float*, float** %key.addr, align 8, !dbg !12160
  call void @copy_v3_v3(float* %20, float* %21), !dbg !12161
  %22 = load float*, float** %co, align 8, !dbg !12162
  %add.ptr10 = getelementptr inbounds float, float* %22, i64 3, !dbg !12162
  store float* %add.ptr10, float** %co, align 8, !dbg !12162
  %23 = load float*, float** %key.addr, align 8, !dbg !12163
  %add.ptr11 = getelementptr inbounds float, float* %23, i64 3, !dbg !12163
  store float* %add.ptr11, float** %key.addr, align 8, !dbg !12163
  %24 = load float*, float** %co, align 8, !dbg !12164
  %25 = load float*, float** %key.addr, align 8, !dbg !12165
  call void @copy_v3_v3(float* %24, float* %25), !dbg !12166
  %26 = load float*, float** %co, align 8, !dbg !12167
  %add.ptr12 = getelementptr inbounds float, float* %26, i64 3, !dbg !12167
  store float* %add.ptr12, float** %co, align 8, !dbg !12167
  %27 = load float*, float** %key.addr, align 8, !dbg !12168
  %add.ptr13 = getelementptr inbounds float, float* %27, i64 3, !dbg !12168
  store float* %add.ptr13, float** %key.addr, align 8, !dbg !12168
  %28 = load float*, float** %key.addr, align 8, !dbg !12169
  %add.ptr14 = getelementptr inbounds float, float* %28, i64 3, !dbg !12169
  store float* %add.ptr14, float** %key.addr, align 8, !dbg !12169
  br label %for.inc, !dbg !12170

for.inc:                                          ; preds = %for.body8
  %29 = load i32, i32* %i, align 4, !dbg !12171
  %inc = add nsw i32 %29, 1, !dbg !12171
  store i32 %inc, i32* %i, align 4, !dbg !12171
  %30 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12172
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %30, i32 1, !dbg !12172
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !12172
  br label %for.cond5, !dbg !12173, !llvm.loop !12174

for.end:                                          ; preds = %for.cond5
  br label %if.end, !dbg !12176

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !12177, metadata !DIExpression()), !dbg !12179
  %31 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12180
  %bp15 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %31, i32 0, i32 17, !dbg !12181
  %32 = load %struct.BPoint*, %struct.BPoint** %bp15, align 8, !dbg !12181
  store %struct.BPoint* %32, %struct.BPoint** %bp, align 8, !dbg !12179
  store i32 0, i32* %i, align 4, !dbg !12182
  br label %for.cond16, !dbg !12184

for.cond16:                                       ; preds = %for.inc25, %if.else
  %33 = load i32, i32* %i, align 4, !dbg !12185
  %34 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12187
  %pntsu17 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %34, i32 0, i32 6, !dbg !12188
  %35 = load i32, i32* %pntsu17, align 8, !dbg !12188
  %36 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12189
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %36, i32 0, i32 7, !dbg !12190
  %37 = load i32, i32* %pntsv, align 4, !dbg !12190
  %mul18 = mul nsw i32 %35, %37, !dbg !12191
  %cmp19 = icmp slt i32 %33, %mul18, !dbg !12192
  br i1 %cmp19, label %for.body21, label %for.end28, !dbg !12193

for.body21:                                       ; preds = %for.cond16
  %38 = load float*, float** %co, align 8, !dbg !12194
  %39 = load float*, float** %key.addr, align 8, !dbg !12196
  call void @copy_v3_v3(float* %38, float* %39), !dbg !12197
  %40 = load float*, float** %co, align 8, !dbg !12198
  %add.ptr22 = getelementptr inbounds float, float* %40, i64 3, !dbg !12198
  store float* %add.ptr22, float** %co, align 8, !dbg !12198
  %41 = load float*, float** %key.addr, align 8, !dbg !12199
  %add.ptr23 = getelementptr inbounds float, float* %41, i64 3, !dbg !12199
  store float* %add.ptr23, float** %key.addr, align 8, !dbg !12199
  %42 = load float*, float** %key.addr, align 8, !dbg !12200
  %incdec.ptr24 = getelementptr inbounds float, float* %42, i32 1, !dbg !12200
  store float* %incdec.ptr24, float** %key.addr, align 8, !dbg !12200
  br label %for.inc25, !dbg !12201

for.inc25:                                        ; preds = %for.body21
  %43 = load i32, i32* %i, align 4, !dbg !12202
  %inc26 = add nsw i32 %43, 1, !dbg !12202
  store i32 %inc26, i32* %i, align 4, !dbg !12202
  %44 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12203
  %incdec.ptr27 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %44, i32 1, !dbg !12203
  store %struct.BPoint* %incdec.ptr27, %struct.BPoint** %bp, align 8, !dbg !12203
  br label %for.cond16, !dbg !12204, !llvm.loop !12205

for.end28:                                        ; preds = %for.cond16
  br label %if.end

if.end:                                           ; preds = %for.end28, %for.end
  br label %for.inc29, !dbg !12207

for.inc29:                                        ; preds = %if.end
  %45 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12208
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %45, i32 0, i32 0, !dbg !12209
  %46 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !12209
  store %struct.Nurb* %46, %struct.Nurb** %nu, align 8, !dbg !12210
  br label %for.cond, !dbg !12211, !llvm.loop !12212

for.end30:                                        ; preds = %for.cond
  %47 = load [3 x float]*, [3 x float]** %cos, align 8, !dbg !12214
  ret [3 x float]* %47, !dbg !12215
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_nurbs_keyVertexTilts_apply(%struct.ListBase* %lb, float* %key) #0 !dbg !12216 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  %key.addr = alloca float*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %i = alloca i32, align 4
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !12219, metadata !DIExpression()), !dbg !12220
  store float* %key, float** %key.addr, align 8
  call void @llvm.dbg.declare(metadata float** %key.addr, metadata !12221, metadata !DIExpression()), !dbg !12222
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !12223, metadata !DIExpression()), !dbg !12224
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12225, metadata !DIExpression()), !dbg !12226
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !12227
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !12229
  %1 = load i8*, i8** %first, align 8, !dbg !12229
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !12227
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !12230
  br label %for.cond, !dbg !12231

for.cond:                                         ; preds = %for.inc21, %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12232
  %tobool = icmp ne %struct.Nurb* %3, null, !dbg !12234
  br i1 %tobool, label %for.body, label %for.end22, !dbg !12234

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12235
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 2, !dbg !12238
  %5 = load i16, i16* %type, align 8, !dbg !12238
  %conv = sext i16 %5 to i32, !dbg !12235
  %cmp = icmp eq i32 %conv, 1, !dbg !12239
  br i1 %cmp, label %if.then, label %if.else, !dbg !12240

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !12241, metadata !DIExpression()), !dbg !12243
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12244
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 18, !dbg !12245
  %7 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !12245
  store %struct.BezTriple* %7, %struct.BezTriple** %bezt, align 8, !dbg !12243
  store i32 0, i32* %i, align 4, !dbg !12246
  br label %for.cond3, !dbg !12248

for.cond3:                                        ; preds = %for.inc, %if.then
  %8 = load i32, i32* %i, align 4, !dbg !12249
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12251
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 6, !dbg !12252
  %10 = load i32, i32* %pntsu, align 8, !dbg !12252
  %cmp4 = icmp slt i32 %8, %10, !dbg !12253
  br i1 %cmp4, label %for.body6, label %for.end, !dbg !12254

for.body6:                                        ; preds = %for.cond3
  %11 = load float*, float** %key.addr, align 8, !dbg !12255
  %add.ptr = getelementptr inbounds float, float* %11, i64 9, !dbg !12255
  store float* %add.ptr, float** %key.addr, align 8, !dbg !12255
  %12 = load float*, float** %key.addr, align 8, !dbg !12257
  %13 = load float, float* %12, align 4, !dbg !12258
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12259
  %alfa = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %14, i32 0, i32 1, !dbg !12260
  store float %13, float* %alfa, align 4, !dbg !12261
  %15 = load float*, float** %key.addr, align 8, !dbg !12262
  %add.ptr7 = getelementptr inbounds float, float* %15, i64 3, !dbg !12262
  store float* %add.ptr7, float** %key.addr, align 8, !dbg !12262
  br label %for.inc, !dbg !12263

for.inc:                                          ; preds = %for.body6
  %16 = load i32, i32* %i, align 4, !dbg !12264
  %inc = add nsw i32 %16, 1, !dbg !12264
  store i32 %inc, i32* %i, align 4, !dbg !12264
  %17 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12265
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %17, i32 1, !dbg !12265
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !12265
  br label %for.cond3, !dbg !12266, !llvm.loop !12267

for.end:                                          ; preds = %for.cond3
  br label %if.end, !dbg !12269

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !12270, metadata !DIExpression()), !dbg !12272
  %18 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12273
  %bp8 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %18, i32 0, i32 17, !dbg !12274
  %19 = load %struct.BPoint*, %struct.BPoint** %bp8, align 8, !dbg !12274
  store %struct.BPoint* %19, %struct.BPoint** %bp, align 8, !dbg !12272
  store i32 0, i32* %i, align 4, !dbg !12275
  br label %for.cond9, !dbg !12277

for.cond9:                                        ; preds = %for.inc17, %if.else
  %20 = load i32, i32* %i, align 4, !dbg !12278
  %21 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12280
  %pntsu10 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 6, !dbg !12281
  %22 = load i32, i32* %pntsu10, align 8, !dbg !12281
  %23 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12282
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %23, i32 0, i32 7, !dbg !12283
  %24 = load i32, i32* %pntsv, align 4, !dbg !12283
  %mul = mul nsw i32 %22, %24, !dbg !12284
  %cmp11 = icmp slt i32 %20, %mul, !dbg !12285
  br i1 %cmp11, label %for.body13, label %for.end20, !dbg !12286

for.body13:                                       ; preds = %for.cond9
  %25 = load float*, float** %key.addr, align 8, !dbg !12287
  %add.ptr14 = getelementptr inbounds float, float* %25, i64 3, !dbg !12287
  store float* %add.ptr14, float** %key.addr, align 8, !dbg !12287
  %26 = load float*, float** %key.addr, align 8, !dbg !12289
  %27 = load float, float* %26, align 4, !dbg !12290
  %28 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12291
  %alfa15 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %28, i32 0, i32 1, !dbg !12292
  store float %27, float* %alfa15, align 4, !dbg !12293
  %29 = load float*, float** %key.addr, align 8, !dbg !12294
  %incdec.ptr16 = getelementptr inbounds float, float* %29, i32 1, !dbg !12294
  store float* %incdec.ptr16, float** %key.addr, align 8, !dbg !12294
  br label %for.inc17, !dbg !12295

for.inc17:                                        ; preds = %for.body13
  %30 = load i32, i32* %i, align 4, !dbg !12296
  %inc18 = add nsw i32 %30, 1, !dbg !12296
  store i32 %inc18, i32* %i, align 4, !dbg !12296
  %31 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12297
  %incdec.ptr19 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %31, i32 1, !dbg !12297
  store %struct.BPoint* %incdec.ptr19, %struct.BPoint** %bp, align 8, !dbg !12297
  br label %for.cond9, !dbg !12298, !llvm.loop !12299

for.end20:                                        ; preds = %for.cond9
  br label %if.end

if.end:                                           ; preds = %for.end20, %for.end
  br label %for.inc21, !dbg !12301

for.inc21:                                        ; preds = %if.end
  %32 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !12302
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %32, i32 0, i32 0, !dbg !12303
  %33 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !12303
  store %struct.Nurb* %33, %struct.Nurb** %nu, align 8, !dbg !12304
  br label %for.cond, !dbg !12305, !llvm.loop !12306

for.end22:                                        ; preds = %for.cond
  ret void, !dbg !12308
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_nurb_check_valid_v(%struct.Nurb* %nu) #0 !dbg !12309 {
entry:
  %retval = alloca i8, align 1
  %nu.addr = alloca %struct.Nurb*, align 8
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !12310, metadata !DIExpression()), !dbg !12311
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12312
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %0, i32 0, i32 7, !dbg !12314
  %1 = load i32, i32* %pntsv, align 4, !dbg !12314
  %cmp = icmp sle i32 %1, 1, !dbg !12315
  br i1 %cmp, label %if.then, label %if.end, !dbg !12316

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !12317
  br label %return, !dbg !12317

if.end:                                           ; preds = %entry
  %2 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12318
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %2, i32 0, i32 2, !dbg !12320
  %3 = load i16, i16* %type, align 8, !dbg !12320
  %conv = sext i16 %3 to i32, !dbg !12318
  %cmp1 = icmp ne i32 %conv, 4, !dbg !12321
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !12322

if.then3:                                         ; preds = %if.end
  store i8 1, i8* %retval, align 1, !dbg !12323
  br label %return, !dbg !12323

if.end4:                                          ; preds = %if.end
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12324
  %pntsv5 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 7, !dbg !12326
  %5 = load i32, i32* %pntsv5, align 4, !dbg !12326
  %6 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12327
  %orderv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 12, !dbg !12328
  %7 = load i16, i16* %orderv, align 2, !dbg !12328
  %conv6 = sext i16 %7 to i32, !dbg !12327
  %cmp7 = icmp slt i32 %5, %conv6, !dbg !12329
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !12330

if.then9:                                         ; preds = %if.end4
  store i8 0, i8* %retval, align 1, !dbg !12331
  br label %return, !dbg !12331

if.end10:                                         ; preds = %if.end4
  %8 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12332
  %flag = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 5, !dbg !12334
  %9 = load i16, i16* %flag, align 2, !dbg !12334
  %conv11 = sext i16 %9 to i32, !dbg !12332
  %and = and i32 %conv11, 1, !dbg !12335
  %cmp12 = icmp eq i32 %and, 0, !dbg !12336
  br i1 %cmp12, label %land.lhs.true, label %if.end34, !dbg !12337

land.lhs.true:                                    ; preds = %if.end10
  %10 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12338
  %flagv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 14, !dbg !12339
  %11 = load i16, i16* %flagv, align 2, !dbg !12339
  %conv14 = sext i16 %11 to i32, !dbg !12338
  %and15 = and i32 %conv14, 4, !dbg !12340
  %tobool = icmp ne i32 %and15, 0, !dbg !12340
  br i1 %tobool, label %if.then16, label %if.end34, !dbg !12341

if.then16:                                        ; preds = %land.lhs.true
  %12 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12342
  %orderv17 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 12, !dbg !12345
  %13 = load i16, i16* %orderv17, align 2, !dbg !12345
  %conv18 = sext i16 %13 to i32, !dbg !12342
  %cmp19 = icmp eq i32 %conv18, 4, !dbg !12346
  br i1 %cmp19, label %if.then21, label %if.else, !dbg !12347

if.then21:                                        ; preds = %if.then16
  %14 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12348
  %pntsv22 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %14, i32 0, i32 7, !dbg !12351
  %15 = load i32, i32* %pntsv22, align 4, !dbg !12351
  %cmp23 = icmp slt i32 %15, 5, !dbg !12352
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !12353

if.then25:                                        ; preds = %if.then21
  store i8 0, i8* %retval, align 1, !dbg !12354
  br label %return, !dbg !12354

if.end26:                                         ; preds = %if.then21
  br label %if.end33, !dbg !12355

if.else:                                          ; preds = %if.then16
  %16 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12356
  %orderv27 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %16, i32 0, i32 12, !dbg !12359
  %17 = load i16, i16* %orderv27, align 2, !dbg !12359
  %conv28 = sext i16 %17 to i32, !dbg !12356
  %cmp29 = icmp ne i32 %conv28, 3, !dbg !12360
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !12361

if.then31:                                        ; preds = %if.else
  store i8 0, i8* %retval, align 1, !dbg !12362
  br label %return, !dbg !12362

if.end32:                                         ; preds = %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end26
  br label %if.end34, !dbg !12363

if.end34:                                         ; preds = %if.end33, %land.lhs.true, %if.end10
  store i8 1, i8* %retval, align 1, !dbg !12364
  br label %return, !dbg !12364

return:                                           ; preds = %if.end34, %if.then31, %if.then25, %if.then9, %if.then3, %if.then
  %18 = load i8, i8* %retval, align 1, !dbg !12365
  ret i8 %18, !dbg !12365
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_nurb_check_valid_uv(%struct.Nurb* %nu) #0 !dbg !12366 {
entry:
  %retval = alloca i8, align 1
  %nu.addr = alloca %struct.Nurb*, align 8
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !12367, metadata !DIExpression()), !dbg !12368
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12369
  %call = call zeroext i8 @BKE_nurb_check_valid_u(%struct.Nurb* %0), !dbg !12371
  %tobool = icmp ne i8 %call, 0, !dbg !12371
  br i1 %tobool, label %if.end, label %if.then, !dbg !12372

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !12373
  br label %return, !dbg !12373

if.end:                                           ; preds = %entry
  %1 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12374
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %1, i32 0, i32 7, !dbg !12376
  %2 = load i32, i32* %pntsv, align 4, !dbg !12376
  %cmp = icmp sgt i32 %2, 1, !dbg !12377
  br i1 %cmp, label %land.lhs.true, label %if.end4, !dbg !12378

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12379
  %call1 = call zeroext i8 @BKE_nurb_check_valid_v(%struct.Nurb* %3), !dbg !12380
  %tobool2 = icmp ne i8 %call1, 0, !dbg !12380
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !12381

if.then3:                                         ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !12382
  br label %return, !dbg !12382

if.end4:                                          ; preds = %land.lhs.true, %if.end
  store i8 1, i8* %retval, align 1, !dbg !12383
  br label %return, !dbg !12383

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %4 = load i8, i8* %retval, align 1, !dbg !12384
  ret i8 %4, !dbg !12384
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_nurb_order_clamp_u(%struct.Nurb* %nu) #0 !dbg !12385 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %changed = alloca i8, align 1
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !12386, metadata !DIExpression()), !dbg !12387
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !12388, metadata !DIExpression()), !dbg !12389
  store i8 0, i8* %changed, align 1, !dbg !12389
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12390
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %0, i32 0, i32 6, !dbg !12392
  %1 = load i32, i32* %pntsu, align 8, !dbg !12392
  %2 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12393
  %orderu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %2, i32 0, i32 11, !dbg !12394
  %3 = load i16, i16* %orderu, align 8, !dbg !12394
  %conv = sext i16 %3 to i32, !dbg !12393
  %cmp = icmp slt i32 %1, %conv, !dbg !12395
  br i1 %cmp, label %if.then, label %if.end, !dbg !12396

if.then:                                          ; preds = %entry
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12397
  %pntsu2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 6, !dbg !12399
  %5 = load i32, i32* %pntsu2, align 8, !dbg !12399
  %call = call i32 @max_ii(i32 2, i32 %5), !dbg !12400
  %conv3 = trunc i32 %call to i16, !dbg !12400
  %6 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12401
  %orderu4 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 11, !dbg !12402
  store i16 %conv3, i16* %orderu4, align 8, !dbg !12403
  store i8 1, i8* %changed, align 1, !dbg !12404
  br label %if.end, !dbg !12405

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12406
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %7, i32 0, i32 13, !dbg !12408
  %8 = load i16, i16* %flagu, align 4, !dbg !12408
  %conv5 = sext i16 %8 to i32, !dbg !12406
  %and = and i32 %conv5, 1, !dbg !12409
  %cmp6 = icmp eq i32 %and, 0, !dbg !12410
  br i1 %cmp6, label %land.lhs.true, label %if.end26, !dbg !12411

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12412
  %flagu8 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 13, !dbg !12413
  %10 = load i16, i16* %flagu8, align 4, !dbg !12413
  %conv9 = sext i16 %10 to i32, !dbg !12412
  %and10 = and i32 %conv9, 4, !dbg !12414
  %tobool = icmp ne i32 %and10, 0, !dbg !12414
  br i1 %tobool, label %if.then11, label %if.end26, !dbg !12415

if.then11:                                        ; preds = %land.lhs.true
  %11 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12416
  %orderu12 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 11, !dbg !12416
  %12 = load i16, i16* %orderu12, align 8, !dbg !12416
  %conv13 = sext i16 %12 to i32, !dbg !12416
  %cmp14 = icmp slt i32 %conv13, 3, !dbg !12416
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !12420

if.then16:                                        ; preds = %if.then11
  %13 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12416
  %orderu17 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 11, !dbg !12416
  store i16 3, i16* %orderu17, align 8, !dbg !12416
  br label %if.end25, !dbg !12416

if.else:                                          ; preds = %if.then11
  %14 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12421
  %orderu18 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %14, i32 0, i32 11, !dbg !12421
  %15 = load i16, i16* %orderu18, align 8, !dbg !12421
  %conv19 = sext i16 %15 to i32, !dbg !12421
  %cmp20 = icmp sgt i32 %conv19, 4, !dbg !12421
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !12416

if.then22:                                        ; preds = %if.else
  %16 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12421
  %orderu23 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %16, i32 0, i32 11, !dbg !12421
  store i16 4, i16* %orderu23, align 8, !dbg !12421
  br label %if.end24, !dbg !12421

if.end24:                                         ; preds = %if.then22, %if.else
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then16
  store i8 1, i8* %changed, align 1, !dbg !12423
  br label %if.end26, !dbg !12424

if.end26:                                         ; preds = %if.end25, %land.lhs.true, %if.end
  %17 = load i8, i8* %changed, align 1, !dbg !12425
  ret i8 %17, !dbg !12426
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @max_ii(i32 %a, i32 %b) #0 !dbg !12427 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !12431, metadata !DIExpression()), !dbg !12432
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !12433, metadata !DIExpression()), !dbg !12434
  %0 = load i32, i32* %b.addr, align 4, !dbg !12435
  %1 = load i32, i32* %a.addr, align 4, !dbg !12436
  %cmp = icmp slt i32 %0, %1, !dbg !12437
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12438

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !12439
  br label %cond.end, !dbg !12438

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !12440
  br label %cond.end, !dbg !12438

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !12438
  ret i32 %cond, !dbg !12441
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_nurb_order_clamp_v(%struct.Nurb* %nu) #0 !dbg !12442 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %changed = alloca i8, align 1
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !12443, metadata !DIExpression()), !dbg !12444
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !12445, metadata !DIExpression()), !dbg !12446
  store i8 0, i8* %changed, align 1, !dbg !12446
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12447
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %0, i32 0, i32 7, !dbg !12449
  %1 = load i32, i32* %pntsv, align 4, !dbg !12449
  %2 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12450
  %orderv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %2, i32 0, i32 12, !dbg !12451
  %3 = load i16, i16* %orderv, align 2, !dbg !12451
  %conv = sext i16 %3 to i32, !dbg !12450
  %cmp = icmp slt i32 %1, %conv, !dbg !12452
  br i1 %cmp, label %if.then, label %if.end, !dbg !12453

if.then:                                          ; preds = %entry
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12454
  %pntsv2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 7, !dbg !12456
  %5 = load i32, i32* %pntsv2, align 4, !dbg !12456
  %call = call i32 @max_ii(i32 2, i32 %5), !dbg !12457
  %conv3 = trunc i32 %call to i16, !dbg !12457
  %6 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12458
  %orderv4 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 12, !dbg !12459
  store i16 %conv3, i16* %orderv4, align 2, !dbg !12460
  store i8 1, i8* %changed, align 1, !dbg !12461
  br label %if.end, !dbg !12462

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12463
  %flagv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %7, i32 0, i32 14, !dbg !12465
  %8 = load i16, i16* %flagv, align 2, !dbg !12465
  %conv5 = sext i16 %8 to i32, !dbg !12463
  %and = and i32 %conv5, 1, !dbg !12466
  %cmp6 = icmp eq i32 %and, 0, !dbg !12467
  br i1 %cmp6, label %land.lhs.true, label %if.end26, !dbg !12468

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12469
  %flagv8 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 14, !dbg !12470
  %10 = load i16, i16* %flagv8, align 2, !dbg !12470
  %conv9 = sext i16 %10 to i32, !dbg !12469
  %and10 = and i32 %conv9, 4, !dbg !12471
  %tobool = icmp ne i32 %and10, 0, !dbg !12471
  br i1 %tobool, label %if.then11, label %if.end26, !dbg !12472

if.then11:                                        ; preds = %land.lhs.true
  %11 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12473
  %orderv12 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 12, !dbg !12473
  %12 = load i16, i16* %orderv12, align 2, !dbg !12473
  %conv13 = sext i16 %12 to i32, !dbg !12473
  %cmp14 = icmp slt i32 %conv13, 3, !dbg !12473
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !12477

if.then16:                                        ; preds = %if.then11
  %13 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12473
  %orderv17 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 12, !dbg !12473
  store i16 3, i16* %orderv17, align 2, !dbg !12473
  br label %if.end25, !dbg !12473

if.else:                                          ; preds = %if.then11
  %14 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12478
  %orderv18 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %14, i32 0, i32 12, !dbg !12478
  %15 = load i16, i16* %orderv18, align 2, !dbg !12478
  %conv19 = sext i16 %15 to i32, !dbg !12478
  %cmp20 = icmp sgt i32 %conv19, 4, !dbg !12478
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !12473

if.then22:                                        ; preds = %if.else
  %16 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12478
  %orderv23 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %16, i32 0, i32 12, !dbg !12478
  store i16 4, i16* %orderv23, align 2, !dbg !12478
  br label %if.end24, !dbg !12478

if.end24:                                         ; preds = %if.then22, %if.else
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then16
  store i8 1, i8* %changed, align 1, !dbg !12480
  br label %if.end26, !dbg !12481

if.end26:                                         ; preds = %if.end25, %land.lhs.true, %if.end
  %17 = load i8, i8* %changed, align 1, !dbg !12482
  ret i8 %17, !dbg !12483
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_nurb_type_convert(%struct.Nurb* %nu, i16 signext %type, i8 zeroext %use_handles) #0 !dbg !12484 {
entry:
  %retval = alloca i8, align 1
  %nu.addr = alloca %struct.Nurb*, align 8
  %type.addr = alloca i16, align 2
  %use_handles.addr = alloca i8, align 1
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %a = alloca i32, align 4
  %c = alloca i32, align 4
  %nr = alloca i32, align 4
  %f = alloca i8*, align 8
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !12488, metadata !DIExpression()), !dbg !12489
  store i16 %type, i16* %type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %type.addr, metadata !12490, metadata !DIExpression()), !dbg !12491
  store i8 %use_handles, i8* %use_handles.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_handles.addr, metadata !12492, metadata !DIExpression()), !dbg !12493
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !12494, metadata !DIExpression()), !dbg !12495
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !12496, metadata !DIExpression()), !dbg !12497
  call void @llvm.dbg.declare(metadata i32* %a, metadata !12498, metadata !DIExpression()), !dbg !12499
  call void @llvm.dbg.declare(metadata i32* %c, metadata !12500, metadata !DIExpression()), !dbg !12501
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !12502, metadata !DIExpression()), !dbg !12503
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12504
  %type1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %0, i32 0, i32 2, !dbg !12506
  %1 = load i16, i16* %type1, align 8, !dbg !12506
  %conv = sext i16 %1 to i32, !dbg !12504
  %cmp = icmp eq i32 %conv, 0, !dbg !12507
  br i1 %cmp, label %if.then, label %if.else40, !dbg !12508

if.then:                                          ; preds = %entry
  %2 = load i16, i16* %type.addr, align 2, !dbg !12509
  %conv3 = sext i16 %2 to i32, !dbg !12509
  %cmp4 = icmp eq i32 %conv3, 1, !dbg !12512
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !12513

if.then6:                                         ; preds = %if.then
  %3 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12514
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %3, i32 0, i32 6, !dbg !12516
  %4 = load i32, i32* %pntsu, align 8, !dbg !12516
  store i32 %4, i32* %nr, align 4, !dbg !12517
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !12518
  %6 = load i32, i32* %nr, align 4, !dbg !12519
  %conv7 = sext i32 %6 to i64, !dbg !12519
  %mul = mul i64 %conv7, 72, !dbg !12520
  %call = call i8* %5(i64 %mul, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41, i64 0, i64 0)), !dbg !12518
  %7 = bitcast i8* %call to %struct.BezTriple*, !dbg !12521
  store %struct.BezTriple* %7, %struct.BezTriple** %bezt, align 8, !dbg !12522
  %8 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12523
  %9 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12524
  %bezt8 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 18, !dbg !12525
  store %struct.BezTriple* %8, %struct.BezTriple** %bezt8, align 8, !dbg !12526
  %10 = load i32, i32* %nr, align 4, !dbg !12527
  store i32 %10, i32* %a, align 4, !dbg !12528
  %11 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12529
  %bp9 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %11, i32 0, i32 17, !dbg !12530
  %12 = load %struct.BPoint*, %struct.BPoint** %bp9, align 8, !dbg !12530
  store %struct.BPoint* %12, %struct.BPoint** %bp, align 8, !dbg !12531
  br label %while.cond, !dbg !12532

while.cond:                                       ; preds = %while.body, %if.then6
  %13 = load i32, i32* %a, align 4, !dbg !12533
  %dec = add nsw i32 %13, -1, !dbg !12533
  store i32 %dec, i32* %a, align 4, !dbg !12533
  %tobool = icmp ne i32 %13, 0, !dbg !12532
  br i1 %tobool, label %while.body, label %while.end, !dbg !12532

while.body:                                       ; preds = %while.cond
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12534
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %14, i32 0, i32 0, !dbg !12536
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 1, !dbg !12534
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !12534
  %15 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12537
  %vec10 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %15, i32 0, i32 0, !dbg !12538
  %arraydecay11 = getelementptr inbounds [4 x float], [4 x float]* %vec10, i64 0, i64 0, !dbg !12537
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay11), !dbg !12539
  %16 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12540
  %f1 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %16, i32 0, i32 3, !dbg !12541
  %17 = load i16, i16* %f1, align 4, !dbg !12541
  %conv12 = trunc i16 %17 to i8, !dbg !12540
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12542
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %18, i32 0, i32 9, !dbg !12543
  store i8 %conv12, i8* %f3, align 1, !dbg !12544
  %19 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12545
  %f2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %19, i32 0, i32 8, !dbg !12546
  store i8 %conv12, i8* %f2, align 4, !dbg !12547
  %20 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12548
  %f113 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %20, i32 0, i32 7, !dbg !12549
  store i8 %conv12, i8* %f113, align 1, !dbg !12550
  %21 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12551
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %21, i32 0, i32 6, !dbg !12552
  store i8 2, i8* %h2, align 2, !dbg !12553
  %22 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12554
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %22, i32 0, i32 5, !dbg !12555
  store i8 2, i8* %h1, align 1, !dbg !12556
  %23 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12557
  %weight = getelementptr inbounds %struct.BPoint, %struct.BPoint* %23, i32 0, i32 2, !dbg !12558
  %24 = load float, float* %weight, align 4, !dbg !12558
  %25 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12559
  %weight14 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %25, i32 0, i32 2, !dbg !12560
  store float %24, float* %weight14, align 4, !dbg !12561
  %26 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12562
  %radius = getelementptr inbounds %struct.BPoint, %struct.BPoint* %26, i32 0, i32 5, !dbg !12563
  %27 = load float, float* %radius, align 4, !dbg !12563
  %28 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12564
  %radius15 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %28, i32 0, i32 3, !dbg !12565
  store float %27, float* %radius15, align 4, !dbg !12566
  %29 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12567
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %29, i32 1, !dbg !12567
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp, align 8, !dbg !12567
  %30 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12568
  %incdec.ptr16 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %30, i32 1, !dbg !12568
  store %struct.BezTriple* %incdec.ptr16, %struct.BezTriple** %bezt, align 8, !dbg !12568
  br label %while.cond, !dbg !12532, !llvm.loop !12569

while.end:                                        ; preds = %while.cond
  %31 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12571
  %32 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12572
  %bp17 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %32, i32 0, i32 17, !dbg !12573
  %33 = load %struct.BPoint*, %struct.BPoint** %bp17, align 8, !dbg !12573
  %34 = bitcast %struct.BPoint* %33 to i8*, !dbg !12572
  call void %31(i8* %34), !dbg !12571
  %35 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12574
  %bp18 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %35, i32 0, i32 17, !dbg !12575
  store %struct.BPoint* null, %struct.BPoint** %bp18, align 8, !dbg !12576
  %36 = load i32, i32* %nr, align 4, !dbg !12577
  %37 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12578
  %pntsu19 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %37, i32 0, i32 6, !dbg !12579
  store i32 %36, i32* %pntsu19, align 8, !dbg !12580
  %38 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12581
  %type20 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %38, i32 0, i32 2, !dbg !12582
  store i16 1, i16* %type20, align 8, !dbg !12583
  %39 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12584
  call void @BKE_nurb_handles_calc(%struct.Nurb* %39), !dbg !12585
  br label %if.end39, !dbg !12586

if.else:                                          ; preds = %if.then
  %40 = load i16, i16* %type.addr, align 2, !dbg !12587
  %conv21 = sext i16 %40 to i32, !dbg !12587
  %cmp22 = icmp eq i32 %conv21, 4, !dbg !12589
  br i1 %cmp22, label %if.then24, label %if.end, !dbg !12590

if.then24:                                        ; preds = %if.else
  %41 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12591
  %type25 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %41, i32 0, i32 2, !dbg !12593
  store i16 4, i16* %type25, align 8, !dbg !12594
  %42 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12595
  %orderu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %42, i32 0, i32 11, !dbg !12596
  store i16 4, i16* %orderu, align 8, !dbg !12597
  %43 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12598
  %flagu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %43, i32 0, i32 13, !dbg !12599
  %44 = load i16, i16* %flagu, align 4, !dbg !12600
  %conv26 = sext i16 %44 to i32, !dbg !12600
  %and = and i32 %conv26, 1, !dbg !12600
  %conv27 = trunc i32 %and to i16, !dbg !12600
  store i16 %conv27, i16* %flagu, align 4, !dbg !12600
  %45 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12601
  call void @BKE_nurb_knot_calc_u(%struct.Nurb* %45), !dbg !12602
  %46 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12603
  %pntsu28 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %46, i32 0, i32 6, !dbg !12604
  %47 = load i32, i32* %pntsu28, align 8, !dbg !12604
  %48 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12605
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %48, i32 0, i32 7, !dbg !12606
  %49 = load i32, i32* %pntsv, align 4, !dbg !12606
  %mul29 = mul nsw i32 %47, %49, !dbg !12607
  store i32 %mul29, i32* %a, align 4, !dbg !12608
  %50 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12609
  %bp30 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %50, i32 0, i32 17, !dbg !12610
  %51 = load %struct.BPoint*, %struct.BPoint** %bp30, align 8, !dbg !12610
  store %struct.BPoint* %51, %struct.BPoint** %bp, align 8, !dbg !12611
  br label %while.cond31, !dbg !12612

while.cond31:                                     ; preds = %while.body34, %if.then24
  %52 = load i32, i32* %a, align 4, !dbg !12613
  %dec32 = add nsw i32 %52, -1, !dbg !12613
  store i32 %dec32, i32* %a, align 4, !dbg !12613
  %tobool33 = icmp ne i32 %52, 0, !dbg !12612
  br i1 %tobool33, label %while.body34, label %while.end38, !dbg !12612

while.body34:                                     ; preds = %while.cond31
  %53 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12614
  %vec35 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %53, i32 0, i32 0, !dbg !12616
  %arrayidx36 = getelementptr inbounds [4 x float], [4 x float]* %vec35, i64 0, i64 3, !dbg !12614
  store float 1.000000e+00, float* %arrayidx36, align 4, !dbg !12617
  %54 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12618
  %incdec.ptr37 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %54, i32 1, !dbg !12618
  store %struct.BPoint* %incdec.ptr37, %struct.BPoint** %bp, align 8, !dbg !12618
  br label %while.cond31, !dbg !12612, !llvm.loop !12619

while.end38:                                      ; preds = %while.cond31
  br label %if.end, !dbg !12621

if.end:                                           ; preds = %while.end38, %if.else
  br label %if.end39

if.end39:                                         ; preds = %if.end, %while.end
  br label %if.end229, !dbg !12622

if.else40:                                        ; preds = %entry
  %55 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12623
  %type41 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %55, i32 0, i32 2, !dbg !12625
  %56 = load i16, i16* %type41, align 8, !dbg !12625
  %conv42 = sext i16 %56 to i32, !dbg !12623
  %cmp43 = icmp eq i32 %conv42, 1, !dbg !12626
  br i1 %cmp43, label %if.then45, label %if.else145, !dbg !12627

if.then45:                                        ; preds = %if.else40
  %57 = load i16, i16* %type.addr, align 2, !dbg !12628
  %conv46 = sext i16 %57 to i32, !dbg !12628
  %cmp47 = icmp eq i32 %conv46, 0, !dbg !12631
  br i1 %cmp47, label %if.then52, label %lor.lhs.false, !dbg !12632

lor.lhs.false:                                    ; preds = %if.then45
  %58 = load i16, i16* %type.addr, align 2, !dbg !12633
  %conv49 = sext i16 %58 to i32, !dbg !12633
  %cmp50 = icmp eq i32 %conv49, 4, !dbg !12634
  br i1 %cmp50, label %if.then52, label %if.end144, !dbg !12635

if.then52:                                        ; preds = %lor.lhs.false, %if.then45
  %59 = load i8, i8* %use_handles.addr, align 1, !dbg !12636
  %conv53 = zext i8 %59 to i32, !dbg !12636
  %tobool54 = icmp ne i32 %conv53, 0, !dbg !12636
  br i1 %tobool54, label %cond.true, label %cond.false, !dbg !12636

cond.true:                                        ; preds = %if.then52
  %60 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12638
  %pntsu55 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %60, i32 0, i32 6, !dbg !12639
  %61 = load i32, i32* %pntsu55, align 8, !dbg !12639
  %mul56 = mul nsw i32 3, %61, !dbg !12640
  br label %cond.end, !dbg !12636

cond.false:                                       ; preds = %if.then52
  %62 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12641
  %pntsu57 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %62, i32 0, i32 6, !dbg !12642
  %63 = load i32, i32* %pntsu57, align 8, !dbg !12642
  br label %cond.end, !dbg !12636

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul56, %cond.true ], [ %63, %cond.false ], !dbg !12636
  store i32 %cond, i32* %nr, align 4, !dbg !12643
  %64 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !12644
  %65 = load i32, i32* %nr, align 4, !dbg !12645
  %conv58 = sext i32 %65 to i64, !dbg !12645
  %mul59 = mul i64 %conv58, 36, !dbg !12646
  %call60 = call i8* %64(i64 %mul59, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i64 0, i64 0)), !dbg !12644
  %66 = bitcast i8* %call60 to %struct.BPoint*, !dbg !12644
  %67 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12647
  %bp61 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %67, i32 0, i32 17, !dbg !12648
  store %struct.BPoint* %66, %struct.BPoint** %bp61, align 8, !dbg !12649
  %68 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12650
  %pntsu62 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %68, i32 0, i32 6, !dbg !12651
  %69 = load i32, i32* %pntsu62, align 8, !dbg !12651
  store i32 %69, i32* %a, align 4, !dbg !12652
  %70 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12653
  %bezt63 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %70, i32 0, i32 18, !dbg !12654
  %71 = load %struct.BezTriple*, %struct.BezTriple** %bezt63, align 8, !dbg !12654
  store %struct.BezTriple* %71, %struct.BezTriple** %bezt, align 8, !dbg !12655
  %72 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12656
  %bp64 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %72, i32 0, i32 17, !dbg !12657
  %73 = load %struct.BPoint*, %struct.BPoint** %bp64, align 8, !dbg !12657
  store %struct.BPoint* %73, %struct.BPoint** %bp, align 8, !dbg !12658
  br label %while.cond65, !dbg !12659

while.cond65:                                     ; preds = %if.end123, %cond.end
  %74 = load i32, i32* %a, align 4, !dbg !12660
  %dec66 = add nsw i32 %74, -1, !dbg !12660
  store i32 %dec66, i32* %a, align 4, !dbg !12660
  %tobool67 = icmp ne i32 %74, 0, !dbg !12659
  br i1 %tobool67, label %while.body68, label %while.end125, !dbg !12659

while.body68:                                     ; preds = %while.cond65
  %75 = load i16, i16* %type.addr, align 2, !dbg !12661
  %conv69 = sext i16 %75 to i32, !dbg !12661
  %cmp70 = icmp eq i32 %conv69, 0, !dbg !12664
  br i1 %cmp70, label %land.lhs.true, label %lor.lhs.false81, !dbg !12665

land.lhs.true:                                    ; preds = %while.body68
  %76 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12666
  %h172 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %76, i32 0, i32 5, !dbg !12667
  %77 = load i8, i8* %h172, align 1, !dbg !12667
  %conv73 = zext i8 %77 to i32, !dbg !12666
  %cmp74 = icmp eq i32 %conv73, 2, !dbg !12668
  br i1 %cmp74, label %land.lhs.true76, label %lor.lhs.false81, !dbg !12669

land.lhs.true76:                                  ; preds = %land.lhs.true
  %78 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12670
  %h277 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %78, i32 0, i32 6, !dbg !12671
  %79 = load i8, i8* %h277, align 2, !dbg !12671
  %conv78 = zext i8 %79 to i32, !dbg !12670
  %cmp79 = icmp eq i32 %conv78, 2, !dbg !12672
  br i1 %cmp79, label %if.then85, label %lor.lhs.false81, !dbg !12673

lor.lhs.false81:                                  ; preds = %land.lhs.true76, %land.lhs.true, %while.body68
  %80 = load i8, i8* %use_handles.addr, align 1, !dbg !12674
  %conv82 = zext i8 %80 to i32, !dbg !12674
  %cmp83 = icmp eq i32 %conv82, 0, !dbg !12675
  br i1 %cmp83, label %if.then85, label %if.else104, !dbg !12676

if.then85:                                        ; preds = %lor.lhs.false81, %land.lhs.true76
  %81 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12677
  %vec86 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %81, i32 0, i32 0, !dbg !12679
  %arraydecay87 = getelementptr inbounds [4 x float], [4 x float]* %vec86, i64 0, i64 0, !dbg !12677
  %82 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12680
  %vec88 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %82, i32 0, i32 0, !dbg !12681
  %arrayidx89 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec88, i64 0, i64 1, !dbg !12680
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx89, i64 0, i64 0, !dbg !12680
  call void @copy_v3_v3(float* %arraydecay87, float* %arraydecay90), !dbg !12682
  %83 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12683
  %vec91 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %83, i32 0, i32 0, !dbg !12684
  %arrayidx92 = getelementptr inbounds [4 x float], [4 x float]* %vec91, i64 0, i64 3, !dbg !12683
  store float 1.000000e+00, float* %arrayidx92, align 4, !dbg !12685
  %84 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12686
  %f293 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %84, i32 0, i32 8, !dbg !12687
  %85 = load i8, i8* %f293, align 4, !dbg !12687
  %conv94 = zext i8 %85 to i16, !dbg !12686
  %86 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12688
  %f195 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %86, i32 0, i32 3, !dbg !12689
  store i16 %conv94, i16* %f195, align 4, !dbg !12690
  %87 = load i8, i8* %use_handles.addr, align 1, !dbg !12691
  %tobool96 = icmp ne i8 %87, 0, !dbg !12691
  br i1 %tobool96, label %if.then97, label %if.end98, !dbg !12693

if.then97:                                        ; preds = %if.then85
  %88 = load i32, i32* %nr, align 4, !dbg !12694
  %sub = sub nsw i32 %88, 2, !dbg !12694
  store i32 %sub, i32* %nr, align 4, !dbg !12694
  br label %if.end98, !dbg !12695

if.end98:                                         ; preds = %if.then97, %if.then85
  %89 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12696
  %radius99 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %89, i32 0, i32 3, !dbg !12697
  %90 = load float, float* %radius99, align 4, !dbg !12697
  %91 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12698
  %radius100 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %91, i32 0, i32 5, !dbg !12699
  store float %90, float* %radius100, align 4, !dbg !12700
  %92 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12701
  %weight101 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %92, i32 0, i32 2, !dbg !12702
  %93 = load float, float* %weight101, align 4, !dbg !12702
  %94 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12703
  %weight102 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %94, i32 0, i32 2, !dbg !12704
  store float %93, float* %weight102, align 4, !dbg !12705
  %95 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12706
  %incdec.ptr103 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %95, i32 1, !dbg !12706
  store %struct.BPoint* %incdec.ptr103, %struct.BPoint** %bp, align 8, !dbg !12706
  br label %if.end123, !dbg !12707

if.else104:                                       ; preds = %lor.lhs.false81
  call void @llvm.dbg.declare(metadata i8** %f, metadata !12708, metadata !DIExpression()), !dbg !12710
  %96 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12711
  %f1105 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %96, i32 0, i32 7, !dbg !12712
  store i8* %f1105, i8** %f, align 8, !dbg !12710
  store i32 0, i32* %c, align 4, !dbg !12713
  br label %for.cond, !dbg !12715

for.cond:                                         ; preds = %for.inc, %if.else104
  %97 = load i32, i32* %c, align 4, !dbg !12716
  %cmp106 = icmp slt i32 %97, 3, !dbg !12718
  br i1 %cmp106, label %for.body, label %for.end, !dbg !12719

for.body:                                         ; preds = %for.cond
  %98 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12720
  %vec108 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %98, i32 0, i32 0, !dbg !12722
  %arraydecay109 = getelementptr inbounds [4 x float], [4 x float]* %vec108, i64 0, i64 0, !dbg !12720
  %99 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12723
  %vec110 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %99, i32 0, i32 0, !dbg !12724
  %100 = load i32, i32* %c, align 4, !dbg !12725
  %idxprom = sext i32 %100 to i64, !dbg !12723
  %arrayidx111 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec110, i64 0, i64 %idxprom, !dbg !12723
  %arraydecay112 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx111, i64 0, i64 0, !dbg !12723
  call void @copy_v3_v3(float* %arraydecay109, float* %arraydecay112), !dbg !12726
  %101 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12727
  %vec113 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %101, i32 0, i32 0, !dbg !12728
  %arrayidx114 = getelementptr inbounds [4 x float], [4 x float]* %vec113, i64 0, i64 3, !dbg !12727
  store float 1.000000e+00, float* %arrayidx114, align 4, !dbg !12729
  %102 = load i8*, i8** %f, align 8, !dbg !12730
  %103 = load i8, i8* %102, align 1, !dbg !12731
  %conv115 = zext i8 %103 to i16, !dbg !12731
  %104 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12732
  %f1116 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %104, i32 0, i32 3, !dbg !12733
  store i16 %conv115, i16* %f1116, align 4, !dbg !12734
  %105 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12735
  %radius117 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %105, i32 0, i32 3, !dbg !12736
  %106 = load float, float* %radius117, align 4, !dbg !12736
  %107 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12737
  %radius118 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %107, i32 0, i32 5, !dbg !12738
  store float %106, float* %radius118, align 4, !dbg !12739
  %108 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12740
  %weight119 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %108, i32 0, i32 2, !dbg !12741
  %109 = load float, float* %weight119, align 4, !dbg !12741
  %110 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12742
  %weight120 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %110, i32 0, i32 2, !dbg !12743
  store float %109, float* %weight120, align 4, !dbg !12744
  %111 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12745
  %incdec.ptr121 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %111, i32 1, !dbg !12745
  store %struct.BPoint* %incdec.ptr121, %struct.BPoint** %bp, align 8, !dbg !12745
  br label %for.inc, !dbg !12746

for.inc:                                          ; preds = %for.body
  %112 = load i32, i32* %c, align 4, !dbg !12747
  %inc = add nsw i32 %112, 1, !dbg !12747
  store i32 %inc, i32* %c, align 4, !dbg !12747
  %113 = load i8*, i8** %f, align 8, !dbg !12748
  %incdec.ptr122 = getelementptr inbounds i8, i8* %113, i32 1, !dbg !12748
  store i8* %incdec.ptr122, i8** %f, align 8, !dbg !12748
  br label %for.cond, !dbg !12749, !llvm.loop !12750

for.end:                                          ; preds = %for.cond
  br label %if.end123

if.end123:                                        ; preds = %for.end, %if.end98
  %114 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12752
  %incdec.ptr124 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %114, i32 1, !dbg !12752
  store %struct.BezTriple* %incdec.ptr124, %struct.BezTriple** %bezt, align 8, !dbg !12752
  br label %while.cond65, !dbg !12659, !llvm.loop !12753

while.end125:                                     ; preds = %while.cond65
  %115 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12755
  %116 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12756
  %bezt126 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %116, i32 0, i32 18, !dbg !12757
  %117 = load %struct.BezTriple*, %struct.BezTriple** %bezt126, align 8, !dbg !12757
  %118 = bitcast %struct.BezTriple* %117 to i8*, !dbg !12756
  call void %115(i8* %118), !dbg !12755
  %119 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12758
  %bezt127 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %119, i32 0, i32 18, !dbg !12759
  store %struct.BezTriple* null, %struct.BezTriple** %bezt127, align 8, !dbg !12760
  %120 = load i32, i32* %nr, align 4, !dbg !12761
  %121 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12762
  %pntsu128 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %121, i32 0, i32 6, !dbg !12763
  store i32 %120, i32* %pntsu128, align 8, !dbg !12764
  %122 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12765
  %pntsv129 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %122, i32 0, i32 7, !dbg !12766
  store i32 1, i32* %pntsv129, align 4, !dbg !12767
  %123 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12768
  %orderu130 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %123, i32 0, i32 11, !dbg !12769
  store i16 4, i16* %orderu130, align 8, !dbg !12770
  %124 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12771
  %orderv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %124, i32 0, i32 12, !dbg !12772
  store i16 1, i16* %orderv, align 2, !dbg !12773
  %125 = load i16, i16* %type.addr, align 2, !dbg !12774
  %126 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12775
  %type131 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %126, i32 0, i32 2, !dbg !12776
  store i16 %125, i16* %type131, align 8, !dbg !12777
  %127 = load i16, i16* %type.addr, align 2, !dbg !12778
  %conv132 = sext i16 %127 to i32, !dbg !12778
  %cmp133 = icmp eq i32 %conv132, 4, !dbg !12780
  br i1 %cmp133, label %if.then135, label %if.end143, !dbg !12781

if.then135:                                       ; preds = %while.end125
  %128 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12782
  %flagu136 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %128, i32 0, i32 13, !dbg !12784
  %129 = load i16, i16* %flagu136, align 4, !dbg !12785
  %conv137 = sext i16 %129 to i32, !dbg !12785
  %and138 = and i32 %conv137, 1, !dbg !12785
  %conv139 = trunc i32 %and138 to i16, !dbg !12785
  store i16 %conv139, i16* %flagu136, align 4, !dbg !12785
  %130 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12786
  %flagu140 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %130, i32 0, i32 13, !dbg !12787
  %131 = load i16, i16* %flagu140, align 4, !dbg !12788
  %conv141 = sext i16 %131 to i32, !dbg !12788
  %or = or i32 %conv141, 4, !dbg !12788
  %conv142 = trunc i32 %or to i16, !dbg !12788
  store i16 %conv142, i16* %flagu140, align 4, !dbg !12788
  %132 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12789
  call void @BKE_nurb_knot_calc_u(%struct.Nurb* %132), !dbg !12790
  br label %if.end143, !dbg !12791

if.end143:                                        ; preds = %if.then135, %while.end125
  br label %if.end144, !dbg !12792

if.end144:                                        ; preds = %if.end143, %lor.lhs.false
  br label %if.end228, !dbg !12793

if.else145:                                       ; preds = %if.else40
  %133 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12794
  %type146 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %133, i32 0, i32 2, !dbg !12796
  %134 = load i16, i16* %type146, align 8, !dbg !12796
  %conv147 = sext i16 %134 to i32, !dbg !12794
  %cmp148 = icmp eq i32 %conv147, 4, !dbg !12797
  br i1 %cmp148, label %if.then150, label %if.end227, !dbg !12798

if.then150:                                       ; preds = %if.else145
  %135 = load i16, i16* %type.addr, align 2, !dbg !12799
  %conv151 = sext i16 %135 to i32, !dbg !12799
  %cmp152 = icmp eq i32 %conv151, 0, !dbg !12802
  br i1 %cmp152, label %if.then154, label %if.else166, !dbg !12803

if.then154:                                       ; preds = %if.then150
  %136 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12804
  %type155 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %136, i32 0, i32 2, !dbg !12806
  store i16 0, i16* %type155, align 8, !dbg !12807
  %137 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12808
  %knotsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %137, i32 0, i32 15, !dbg !12810
  %138 = load float*, float** %knotsu, align 8, !dbg !12810
  %tobool156 = icmp ne float* %138, null, !dbg !12808
  br i1 %tobool156, label %if.then157, label %if.end159, !dbg !12811

if.then157:                                       ; preds = %if.then154
  %139 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12812
  %140 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12813
  %knotsu158 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %140, i32 0, i32 15, !dbg !12814
  %141 = load float*, float** %knotsu158, align 8, !dbg !12814
  %142 = bitcast float* %141 to i8*, !dbg !12813
  call void %139(i8* %142), !dbg !12812
  br label %if.end159, !dbg !12812

if.end159:                                        ; preds = %if.then157, %if.then154
  %143 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12815
  %knotsu160 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %143, i32 0, i32 15, !dbg !12816
  store float* null, float** %knotsu160, align 8, !dbg !12817
  %144 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12818
  %knotsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %144, i32 0, i32 16, !dbg !12820
  %145 = load float*, float** %knotsv, align 8, !dbg !12820
  %tobool161 = icmp ne float* %145, null, !dbg !12818
  br i1 %tobool161, label %if.then162, label %if.end164, !dbg !12821

if.then162:                                       ; preds = %if.end159
  %146 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12822
  %147 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12823
  %knotsv163 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %147, i32 0, i32 16, !dbg !12824
  %148 = load float*, float** %knotsv163, align 8, !dbg !12824
  %149 = bitcast float* %148 to i8*, !dbg !12823
  call void %146(i8* %149), !dbg !12822
  br label %if.end164, !dbg !12822

if.end164:                                        ; preds = %if.then162, %if.end159
  %150 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12825
  %knotsv165 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %150, i32 0, i32 16, !dbg !12826
  store float* null, float** %knotsv165, align 8, !dbg !12827
  br label %if.end226, !dbg !12828

if.else166:                                       ; preds = %if.then150
  %151 = load i16, i16* %type.addr, align 2, !dbg !12829
  %conv167 = sext i16 %151 to i32, !dbg !12829
  %cmp168 = icmp eq i32 %conv167, 1, !dbg !12831
  br i1 %cmp168, label %if.then170, label %if.end225, !dbg !12832

if.then170:                                       ; preds = %if.else166
  %152 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12833
  %pntsu171 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %152, i32 0, i32 6, !dbg !12835
  %153 = load i32, i32* %pntsu171, align 8, !dbg !12835
  %div = sdiv i32 %153, 3, !dbg !12836
  store i32 %div, i32* %nr, align 4, !dbg !12837
  %154 = load i32, i32* %nr, align 4, !dbg !12838
  %cmp172 = icmp slt i32 %154, 2, !dbg !12840
  br i1 %cmp172, label %if.then174, label %if.else175, !dbg !12841

if.then174:                                       ; preds = %if.then170
  store i8 0, i8* %retval, align 1, !dbg !12842
  br label %return, !dbg !12842

if.else175:                                       ; preds = %if.then170
  %155 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !12844
  %156 = load i32, i32* %nr, align 4, !dbg !12846
  %conv176 = sext i32 %156 to i64, !dbg !12846
  %mul177 = mul i64 %conv176, 72, !dbg !12847
  %call178 = call i8* %155(i64 %mul177, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41, i64 0, i64 0)), !dbg !12844
  %157 = bitcast i8* %call178 to %struct.BezTriple*, !dbg !12844
  store %struct.BezTriple* %157, %struct.BezTriple** %bezt, align 8, !dbg !12848
  %158 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12849
  %159 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12850
  %bezt179 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %159, i32 0, i32 18, !dbg !12851
  store %struct.BezTriple* %158, %struct.BezTriple** %bezt179, align 8, !dbg !12852
  %160 = load i32, i32* %nr, align 4, !dbg !12853
  store i32 %160, i32* %a, align 4, !dbg !12854
  %161 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12855
  %bp180 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %161, i32 0, i32 17, !dbg !12856
  %162 = load %struct.BPoint*, %struct.BPoint** %bp180, align 8, !dbg !12856
  store %struct.BPoint* %162, %struct.BPoint** %bp, align 8, !dbg !12857
  br label %while.cond181, !dbg !12858

while.cond181:                                    ; preds = %while.body184, %if.else175
  %163 = load i32, i32* %a, align 4, !dbg !12859
  %dec182 = add nsw i32 %163, -1, !dbg !12859
  store i32 %dec182, i32* %a, align 4, !dbg !12859
  %tobool183 = icmp ne i32 %163, 0, !dbg !12858
  br i1 %tobool183, label %while.body184, label %while.end217, !dbg !12858

while.body184:                                    ; preds = %while.cond181
  %164 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12860
  %vec185 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %164, i32 0, i32 0, !dbg !12862
  %arrayidx186 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec185, i64 0, i64 0, !dbg !12860
  %arraydecay187 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx186, i64 0, i64 0, !dbg !12860
  %165 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12863
  %vec188 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %165, i32 0, i32 0, !dbg !12864
  %arraydecay189 = getelementptr inbounds [4 x float], [4 x float]* %vec188, i64 0, i64 0, !dbg !12863
  call void @copy_v3_v3(float* %arraydecay187, float* %arraydecay189), !dbg !12865
  %166 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12866
  %f1190 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %166, i32 0, i32 3, !dbg !12867
  %167 = load i16, i16* %f1190, align 4, !dbg !12867
  %conv191 = trunc i16 %167 to i8, !dbg !12866
  %168 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12868
  %f1192 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %168, i32 0, i32 7, !dbg !12869
  store i8 %conv191, i8* %f1192, align 1, !dbg !12870
  %169 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12871
  %incdec.ptr193 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %169, i32 1, !dbg !12871
  store %struct.BPoint* %incdec.ptr193, %struct.BPoint** %bp, align 8, !dbg !12871
  %170 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12872
  %vec194 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %170, i32 0, i32 0, !dbg !12873
  %arrayidx195 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec194, i64 0, i64 1, !dbg !12872
  %arraydecay196 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx195, i64 0, i64 0, !dbg !12872
  %171 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12874
  %vec197 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %171, i32 0, i32 0, !dbg !12875
  %arraydecay198 = getelementptr inbounds [4 x float], [4 x float]* %vec197, i64 0, i64 0, !dbg !12874
  call void @copy_v3_v3(float* %arraydecay196, float* %arraydecay198), !dbg !12876
  %172 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12877
  %f1199 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %172, i32 0, i32 3, !dbg !12878
  %173 = load i16, i16* %f1199, align 4, !dbg !12878
  %conv200 = trunc i16 %173 to i8, !dbg !12877
  %174 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12879
  %f2201 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %174, i32 0, i32 8, !dbg !12880
  store i8 %conv200, i8* %f2201, align 4, !dbg !12881
  %175 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12882
  %incdec.ptr202 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %175, i32 1, !dbg !12882
  store %struct.BPoint* %incdec.ptr202, %struct.BPoint** %bp, align 8, !dbg !12882
  %176 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12883
  %vec203 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %176, i32 0, i32 0, !dbg !12884
  %arrayidx204 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec203, i64 0, i64 2, !dbg !12883
  %arraydecay205 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx204, i64 0, i64 0, !dbg !12883
  %177 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12885
  %vec206 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %177, i32 0, i32 0, !dbg !12886
  %arraydecay207 = getelementptr inbounds [4 x float], [4 x float]* %vec206, i64 0, i64 0, !dbg !12885
  call void @copy_v3_v3(float* %arraydecay205, float* %arraydecay207), !dbg !12887
  %178 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12888
  %f1208 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %178, i32 0, i32 3, !dbg !12889
  %179 = load i16, i16* %f1208, align 4, !dbg !12889
  %conv209 = trunc i16 %179 to i8, !dbg !12888
  %180 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12890
  %f3210 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %180, i32 0, i32 9, !dbg !12891
  store i8 %conv209, i8* %f3210, align 1, !dbg !12892
  %181 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12893
  %radius211 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %181, i32 0, i32 5, !dbg !12894
  %182 = load float, float* %radius211, align 4, !dbg !12894
  %183 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12895
  %radius212 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %183, i32 0, i32 3, !dbg !12896
  store float %182, float* %radius212, align 4, !dbg !12897
  %184 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12898
  %weight213 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %184, i32 0, i32 2, !dbg !12899
  %185 = load float, float* %weight213, align 4, !dbg !12899
  %186 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12900
  %weight214 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %186, i32 0, i32 2, !dbg !12901
  store float %185, float* %weight214, align 4, !dbg !12902
  %187 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12903
  %incdec.ptr215 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %187, i32 1, !dbg !12903
  store %struct.BPoint* %incdec.ptr215, %struct.BPoint** %bp, align 8, !dbg !12903
  %188 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !12904
  %incdec.ptr216 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %188, i32 1, !dbg !12904
  store %struct.BezTriple* %incdec.ptr216, %struct.BezTriple** %bezt, align 8, !dbg !12904
  br label %while.cond181, !dbg !12858, !llvm.loop !12905

while.end217:                                     ; preds = %while.cond181
  %189 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12907
  %190 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12908
  %bp218 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %190, i32 0, i32 17, !dbg !12909
  %191 = load %struct.BPoint*, %struct.BPoint** %bp218, align 8, !dbg !12909
  %192 = bitcast %struct.BPoint* %191 to i8*, !dbg !12908
  call void %189(i8* %192), !dbg !12907
  %193 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12910
  %bp219 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %193, i32 0, i32 17, !dbg !12911
  store %struct.BPoint* null, %struct.BPoint** %bp219, align 8, !dbg !12912
  %194 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12913
  %195 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12914
  %knotsu220 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %195, i32 0, i32 15, !dbg !12915
  %196 = load float*, float** %knotsu220, align 8, !dbg !12915
  %197 = bitcast float* %196 to i8*, !dbg !12914
  call void %194(i8* %197), !dbg !12913
  %198 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12916
  %knotsu221 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %198, i32 0, i32 15, !dbg !12917
  store float* null, float** %knotsu221, align 8, !dbg !12918
  %199 = load i32, i32* %nr, align 4, !dbg !12919
  %200 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12920
  %pntsu222 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %200, i32 0, i32 6, !dbg !12921
  store i32 %199, i32* %pntsu222, align 8, !dbg !12922
  %201 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12923
  %type223 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %201, i32 0, i32 2, !dbg !12924
  store i16 1, i16* %type223, align 8, !dbg !12925
  br label %if.end224

if.end224:                                        ; preds = %while.end217
  br label %if.end225, !dbg !12926

if.end225:                                        ; preds = %if.end224, %if.else166
  br label %if.end226

if.end226:                                        ; preds = %if.end225, %if.end164
  br label %if.end227, !dbg !12927

if.end227:                                        ; preds = %if.end226, %if.else145
  br label %if.end228

if.end228:                                        ; preds = %if.end227, %if.end144
  br label %if.end229

if.end229:                                        ; preds = %if.end228, %if.end39
  store i8 1, i8* %retval, align 1, !dbg !12928
  br label %return, !dbg !12928

return:                                           ; preds = %if.end229, %if.then174
  %202 = load i8, i8* %retval, align 1, !dbg !12929
  ret i8 %202, !dbg !12929
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_nurb_active_set(%struct.Curve* %cu, %struct.Nurb* %nu) #0 !dbg !12930 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %nu.addr = alloca %struct.Nurb*, align 8
  %nurbs = alloca %struct.ListBase*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !12933, metadata !DIExpression()), !dbg !12934
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !12935, metadata !DIExpression()), !dbg !12936
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12937
  %cmp = icmp eq %struct.Nurb* %0, null, !dbg !12939
  br i1 %cmp, label %if.then, label %if.else, !dbg !12940

if.then:                                          ; preds = %entry
  %1 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !12941
  %actnu = getelementptr inbounds %struct.Curve, %struct.Curve* %1, i32 0, i32 31, !dbg !12943
  store i32 -1, i32* %actnu, align 4, !dbg !12944
  br label %if.end, !dbg !12945

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nurbs, metadata !12946, metadata !DIExpression()), !dbg !12948
  %2 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !12949
  %call = call %struct.ListBase* @BKE_curve_editNurbs_get(%struct.Curve* %2), !dbg !12950
  store %struct.ListBase* %call, %struct.ListBase** %nurbs, align 8, !dbg !12948
  %3 = load %struct.ListBase*, %struct.ListBase** %nurbs, align 8, !dbg !12951
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !12952
  %5 = bitcast %struct.Nurb* %4 to i8*, !dbg !12952
  %call1 = call i32 @BLI_findindex(%struct.ListBase* %3, i8* %5), !dbg !12953
  %6 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !12954
  %actnu2 = getelementptr inbounds %struct.Curve, %struct.Curve* %6, i32 0, i32 31, !dbg !12955
  store i32 %call1, i32* %actnu2, align 4, !dbg !12956
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !12957
}

declare dso_local i32 @BLI_findindex(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Nurb* @BKE_curve_nurb_active_get(%struct.Curve* %cu) #0 !dbg !12958 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %nurbs = alloca %struct.ListBase*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !12961, metadata !DIExpression()), !dbg !12962
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nurbs, metadata !12963, metadata !DIExpression()), !dbg !12964
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !12965
  %call = call %struct.ListBase* @BKE_curve_editNurbs_get(%struct.Curve* %0), !dbg !12966
  store %struct.ListBase* %call, %struct.ListBase** %nurbs, align 8, !dbg !12964
  %1 = load %struct.ListBase*, %struct.ListBase** %nurbs, align 8, !dbg !12967
  %2 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !12968
  %actnu = getelementptr inbounds %struct.Curve, %struct.Curve* %2, i32 0, i32 31, !dbg !12969
  %3 = load i32, i32* %actnu, align 4, !dbg !12969
  %call1 = call i8* @BLI_findlink(%struct.ListBase* %1, i32 %3), !dbg !12970
  %4 = bitcast i8* %call1 to %struct.Nurb*, !dbg !12970
  ret %struct.Nurb* %4, !dbg !12971
}

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BKE_curve_vert_active_get(%struct.Curve* %cu) #0 !dbg !12972 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %vert = alloca i8*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !12975, metadata !DIExpression()), !dbg !12976
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !12977, metadata !DIExpression()), !dbg !12978
  store %struct.Nurb* null, %struct.Nurb** %nu, align 8, !dbg !12978
  call void @llvm.dbg.declare(metadata i8** %vert, metadata !12979, metadata !DIExpression()), !dbg !12980
  store i8* null, i8** %vert, align 8, !dbg !12980
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !12981
  %call = call zeroext i8 @BKE_curve_nurb_vert_active_get(%struct.Curve* %0, %struct.Nurb** %nu, i8** %vert), !dbg !12982
  %1 = load i8*, i8** %vert, align 8, !dbg !12983
  ret i8* %1, !dbg !12984
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_curve_nurb_vert_active_get(%struct.Curve* %cu, %struct.Nurb** %r_nu, i8** %r_vert) #0 !dbg !12985 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %r_nu.addr = alloca %struct.Nurb**, align 8
  %r_vert.addr = alloca i8**, align 8
  %nu = alloca %struct.Nurb*, align 8
  %vert = alloca i8*, align 8
  %nurbs = alloca %struct.ListBase*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !12990, metadata !DIExpression()), !dbg !12991
  store %struct.Nurb** %r_nu, %struct.Nurb*** %r_nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb*** %r_nu.addr, metadata !12992, metadata !DIExpression()), !dbg !12993
  store i8** %r_vert, i8*** %r_vert.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %r_vert.addr, metadata !12994, metadata !DIExpression()), !dbg !12995
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !12996, metadata !DIExpression()), !dbg !12997
  store %struct.Nurb* null, %struct.Nurb** %nu, align 8, !dbg !12997
  call void @llvm.dbg.declare(metadata i8** %vert, metadata !12998, metadata !DIExpression()), !dbg !12999
  store i8* null, i8** %vert, align 8, !dbg !12999
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13000
  %actvert = getelementptr inbounds %struct.Curve, %struct.Curve* %0, i32 0, i32 32, !dbg !13002
  %1 = load i32, i32* %actvert, align 8, !dbg !13002
  %cmp = icmp ne i32 %1, -1, !dbg !13003
  br i1 %cmp, label %if.then, label %if.end11, !dbg !13004

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nurbs, metadata !13005, metadata !DIExpression()), !dbg !13007
  %2 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13008
  %call = call %struct.ListBase* @BKE_curve_editNurbs_get(%struct.Curve* %2), !dbg !13009
  store %struct.ListBase* %call, %struct.ListBase** %nurbs, align 8, !dbg !13007
  %3 = load %struct.ListBase*, %struct.ListBase** %nurbs, align 8, !dbg !13010
  %4 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13011
  %actnu = getelementptr inbounds %struct.Curve, %struct.Curve* %4, i32 0, i32 31, !dbg !13012
  %5 = load i32, i32* %actnu, align 4, !dbg !13012
  %call1 = call i8* @BLI_findlink(%struct.ListBase* %3, i32 %5), !dbg !13013
  %6 = bitcast i8* %call1 to %struct.Nurb*, !dbg !13013
  store %struct.Nurb* %6, %struct.Nurb** %nu, align 8, !dbg !13014
  %7 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13015
  %tobool = icmp ne %struct.Nurb* %7, null, !dbg !13015
  br i1 %tobool, label %if.then2, label %if.end10, !dbg !13017

if.then2:                                         ; preds = %if.then
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13018
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 2, !dbg !13021
  %9 = load i16, i16* %type, align 8, !dbg !13021
  %conv = sext i16 %9 to i32, !dbg !13018
  %cmp3 = icmp eq i32 %conv, 1, !dbg !13022
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !13023

if.then5:                                         ; preds = %if.then2
  %10 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13024
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %10, i32 0, i32 18, !dbg !13026
  %11 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13026
  %12 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13027
  %actvert6 = getelementptr inbounds %struct.Curve, %struct.Curve* %12, i32 0, i32 32, !dbg !13028
  %13 = load i32, i32* %actvert6, align 8, !dbg !13028
  %idxprom = sext i32 %13 to i64, !dbg !13024
  %arrayidx = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %11, i64 %idxprom, !dbg !13024
  %14 = bitcast %struct.BezTriple* %arrayidx to i8*, !dbg !13029
  store i8* %14, i8** %vert, align 8, !dbg !13030
  br label %if.end, !dbg !13031

if.else:                                          ; preds = %if.then2
  %15 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13032
  %bp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %15, i32 0, i32 17, !dbg !13034
  %16 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !13034
  %17 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13035
  %actvert7 = getelementptr inbounds %struct.Curve, %struct.Curve* %17, i32 0, i32 32, !dbg !13036
  %18 = load i32, i32* %actvert7, align 8, !dbg !13036
  %idxprom8 = sext i32 %18 to i64, !dbg !13032
  %arrayidx9 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %16, i64 %idxprom8, !dbg !13032
  %19 = bitcast %struct.BPoint* %arrayidx9 to i8*, !dbg !13037
  store i8* %19, i8** %vert, align 8, !dbg !13038
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %if.end10, !dbg !13039

if.end10:                                         ; preds = %if.end, %if.then
  br label %if.end11, !dbg !13040

if.end11:                                         ; preds = %if.end10, %entry
  %20 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13041
  %21 = load %struct.Nurb**, %struct.Nurb*** %r_nu.addr, align 8, !dbg !13042
  store %struct.Nurb* %20, %struct.Nurb** %21, align 8, !dbg !13043
  %22 = load i8*, i8** %vert, align 8, !dbg !13044
  %23 = load i8**, i8*** %r_vert.addr, align 8, !dbg !13045
  store i8* %22, i8** %23, align 8, !dbg !13046
  %24 = load i8**, i8*** %r_vert.addr, align 8, !dbg !13047
  %25 = load i8*, i8** %24, align 8, !dbg !13048
  %cmp12 = icmp ne i8* %25, null, !dbg !13049
  %conv13 = zext i1 %cmp12 to i32, !dbg !13049
  %conv14 = trunc i32 %conv13 to i8, !dbg !13050
  ret i8 %conv14, !dbg !13051
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_nurb_vert_active_set(%struct.Curve* %cu, %struct.Nurb* %nu, i8* %vert) #0 !dbg !13052 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %nu.addr = alloca %struct.Nurb*, align 8
  %vert.addr = alloca i8*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !13055, metadata !DIExpression()), !dbg !13056
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !13057, metadata !DIExpression()), !dbg !13058
  store i8* %vert, i8** %vert.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vert.addr, metadata !13059, metadata !DIExpression()), !dbg !13060
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !13061
  %tobool = icmp ne %struct.Nurb* %0, null, !dbg !13061
  br i1 %tobool, label %if.then, label %if.else15, !dbg !13063

if.then:                                          ; preds = %entry
  %1 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13064
  %2 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !13066
  call void @BKE_curve_nurb_active_set(%struct.Curve* %1, %struct.Nurb* %2), !dbg !13067
  %3 = load i8*, i8** %vert.addr, align 8, !dbg !13068
  %tobool1 = icmp ne i8* %3, null, !dbg !13068
  br i1 %tobool1, label %if.then2, label %if.else12, !dbg !13070

if.then2:                                         ; preds = %if.then
  %4 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !13071
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 2, !dbg !13074
  %5 = load i16, i16* %type, align 8, !dbg !13074
  %conv = sext i16 %5 to i32, !dbg !13071
  %cmp = icmp eq i32 %conv, 1, !dbg !13075
  br i1 %cmp, label %if.then4, label %if.else, !dbg !13076

if.then4:                                         ; preds = %if.then2
  %6 = load i8*, i8** %vert.addr, align 8, !dbg !13077
  %7 = bitcast i8* %6 to %struct.BezTriple*, !dbg !13079
  %8 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !13080
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 18, !dbg !13081
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13081
  %sub.ptr.lhs.cast = ptrtoint %struct.BezTriple* %7 to i64, !dbg !13082
  %sub.ptr.rhs.cast = ptrtoint %struct.BezTriple* %9 to i64, !dbg !13082
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13082
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 72, !dbg !13082
  %conv5 = trunc i64 %sub.ptr.div to i32, !dbg !13079
  %10 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13083
  %actvert = getelementptr inbounds %struct.Curve, %struct.Curve* %10, i32 0, i32 32, !dbg !13084
  store i32 %conv5, i32* %actvert, align 8, !dbg !13085
  br label %if.end, !dbg !13086

if.else:                                          ; preds = %if.then2
  %11 = load i8*, i8** %vert.addr, align 8, !dbg !13087
  %12 = bitcast i8* %11 to %struct.BPoint*, !dbg !13089
  %13 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !13090
  %bp = getelementptr inbounds %struct.Nurb, %struct.Nurb* %13, i32 0, i32 17, !dbg !13091
  %14 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !13091
  %sub.ptr.lhs.cast6 = ptrtoint %struct.BPoint* %12 to i64, !dbg !13092
  %sub.ptr.rhs.cast7 = ptrtoint %struct.BPoint* %14 to i64, !dbg !13092
  %sub.ptr.sub8 = sub i64 %sub.ptr.lhs.cast6, %sub.ptr.rhs.cast7, !dbg !13092
  %sub.ptr.div9 = sdiv exact i64 %sub.ptr.sub8, 36, !dbg !13092
  %conv10 = trunc i64 %sub.ptr.div9 to i32, !dbg !13089
  %15 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13093
  %actvert11 = getelementptr inbounds %struct.Curve, %struct.Curve* %15, i32 0, i32 32, !dbg !13094
  store i32 %conv10, i32* %actvert11, align 8, !dbg !13095
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end14, !dbg !13096

if.else12:                                        ; preds = %if.then
  %16 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13097
  %actvert13 = getelementptr inbounds %struct.Curve, %struct.Curve* %16, i32 0, i32 32, !dbg !13099
  store i32 -1, i32* %actvert13, align 8, !dbg !13100
  br label %if.end14

if.end14:                                         ; preds = %if.else12, %if.end
  br label %if.end17, !dbg !13101

if.else15:                                        ; preds = %entry
  %17 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13102
  %actvert16 = getelementptr inbounds %struct.Curve, %struct.Curve* %17, i32 0, i32 32, !dbg !13104
  store i32 -1, i32* %actvert16, align 8, !dbg !13105
  %18 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13106
  %actnu = getelementptr inbounds %struct.Curve, %struct.Curve* %18, i32 0, i32 31, !dbg !13107
  store i32 -1, i32* %actnu, align 4, !dbg !13108
  br label %if.end17

if.end17:                                         ; preds = %if.else15, %if.end14
  ret void, !dbg !13109
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_nurb_vert_active_validate(%struct.Curve* %cu) #0 !dbg !13110 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %vert = alloca i8*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !13111, metadata !DIExpression()), !dbg !13112
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !13113, metadata !DIExpression()), !dbg !13114
  call void @llvm.dbg.declare(metadata i8** %vert, metadata !13115, metadata !DIExpression()), !dbg !13116
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13117
  %call = call zeroext i8 @BKE_curve_nurb_vert_active_get(%struct.Curve* %0, %struct.Nurb** %nu, i8** %vert), !dbg !13119
  %tobool = icmp ne i8 %call, 0, !dbg !13119
  br i1 %tobool, label %if.then, label %if.end16, !dbg !13120

if.then:                                          ; preds = %entry
  %1 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13121
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %1, i32 0, i32 2, !dbg !13124
  %2 = load i16, i16* %type, align 8, !dbg !13124
  %conv = sext i16 %2 to i32, !dbg !13121
  %cmp = icmp eq i32 %conv, 1, !dbg !13125
  br i1 %cmp, label %if.then2, label %if.else, !dbg !13126

if.then2:                                         ; preds = %if.then
  %3 = load i8*, i8** %vert, align 8, !dbg !13127
  %4 = bitcast i8* %3 to %struct.BezTriple*, !dbg !13130
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %4, i32 0, i32 7, !dbg !13131
  %5 = load i8, i8* %f1, align 1, !dbg !13131
  %conv3 = zext i8 %5 to i32, !dbg !13132
  %and = and i32 %conv3, 1, !dbg !13133
  %cmp4 = icmp eq i32 %and, 0, !dbg !13134
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !13135

if.then6:                                         ; preds = %if.then2
  %6 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13136
  %actvert = getelementptr inbounds %struct.Curve, %struct.Curve* %6, i32 0, i32 32, !dbg !13138
  store i32 -1, i32* %actvert, align 8, !dbg !13139
  br label %if.end, !dbg !13140

if.end:                                           ; preds = %if.then6, %if.then2
  br label %if.end15, !dbg !13141

if.else:                                          ; preds = %if.then
  %7 = load i8*, i8** %vert, align 8, !dbg !13142
  %8 = bitcast i8* %7 to %struct.BPoint*, !dbg !13145
  %f17 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %8, i32 0, i32 3, !dbg !13146
  %9 = load i16, i16* %f17, align 4, !dbg !13146
  %conv8 = sext i16 %9 to i32, !dbg !13147
  %and9 = and i32 %conv8, 1, !dbg !13148
  %cmp10 = icmp eq i32 %and9, 0, !dbg !13149
  br i1 %cmp10, label %if.then12, label %if.end14, !dbg !13150

if.then12:                                        ; preds = %if.else
  %10 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13151
  %actvert13 = getelementptr inbounds %struct.Curve, %struct.Curve* %10, i32 0, i32 32, !dbg !13153
  store i32 -1, i32* %actvert13, align 8, !dbg !13154
  br label %if.end14, !dbg !13155

if.end14:                                         ; preds = %if.then12, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.end
  br label %if.end16, !dbg !13156

if.end16:                                         ; preds = %if.end15, %entry
  ret void, !dbg !13157
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %lb) #0 !dbg !13158 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !13163, metadata !DIExpression()), !dbg !13164
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !13165
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !13166
  %1 = load i8*, i8** %first, align 8, !dbg !13166
  %cmp = icmp eq i8* %1, null, !dbg !13167
  %conv = zext i1 %cmp to i32, !dbg !13167
  %conv1 = trunc i32 %conv to i8, !dbg !13168
  ret i8 %conv1, !dbg !13169
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_curve_center_median(%struct.Curve* %cu, float* %cent) #0 !dbg !13170 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %cent.addr = alloca float*, align 8
  %nurb_lb = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %total = alloca i32, align 4
  %i = alloca i32, align 4
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !13173, metadata !DIExpression()), !dbg !13174
  store float* %cent, float** %cent.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cent.addr, metadata !13175, metadata !DIExpression()), !dbg !13176
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nurb_lb, metadata !13177, metadata !DIExpression()), !dbg !13178
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13179
  %call = call %struct.ListBase* @BKE_curve_nurbs_get(%struct.Curve* %0), !dbg !13180
  store %struct.ListBase* %call, %struct.ListBase** %nurb_lb, align 8, !dbg !13178
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !13181, metadata !DIExpression()), !dbg !13182
  call void @llvm.dbg.declare(metadata i32* %total, metadata !13183, metadata !DIExpression()), !dbg !13184
  store i32 0, i32* %total, align 4, !dbg !13184
  %1 = load float*, float** %cent.addr, align 8, !dbg !13185
  call void @zero_v3(float* %1), !dbg !13186
  %2 = load %struct.ListBase*, %struct.ListBase** %nurb_lb, align 8, !dbg !13187
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %2, i32 0, i32 0, !dbg !13189
  %3 = load i8*, i8** %first, align 8, !dbg !13189
  %4 = bitcast i8* %3 to %struct.Nurb*, !dbg !13187
  store %struct.Nurb* %4, %struct.Nurb** %nu, align 8, !dbg !13190
  br label %for.cond, !dbg !13191

for.cond:                                         ; preds = %for.inc25, %entry
  %5 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13192
  %tobool = icmp ne %struct.Nurb* %5, null, !dbg !13194
  br i1 %tobool, label %for.body, label %for.end26, !dbg !13194

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13195, metadata !DIExpression()), !dbg !13197
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13198
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 2, !dbg !13200
  %7 = load i16, i16* %type, align 8, !dbg !13200
  %conv = sext i16 %7 to i32, !dbg !13198
  %cmp = icmp eq i32 %conv, 1, !dbg !13201
  br i1 %cmp, label %if.then, label %if.else, !dbg !13202

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !13203, metadata !DIExpression()), !dbg !13205
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13206
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 6, !dbg !13207
  %9 = load i32, i32* %pntsu, align 8, !dbg !13207
  store i32 %9, i32* %i, align 4, !dbg !13208
  %10 = load i32, i32* %i, align 4, !dbg !13209
  %mul = mul nsw i32 %10, 3, !dbg !13210
  %11 = load i32, i32* %total, align 4, !dbg !13211
  %add = add nsw i32 %11, %mul, !dbg !13211
  store i32 %add, i32* %total, align 4, !dbg !13211
  %12 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13212
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %12, i32 0, i32 18, !dbg !13214
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !13214
  store %struct.BezTriple* %13, %struct.BezTriple** %bezt, align 8, !dbg !13215
  br label %for.cond3, !dbg !13216

for.cond3:                                        ; preds = %for.inc, %if.then
  %14 = load i32, i32* %i, align 4, !dbg !13217
  %dec = add nsw i32 %14, -1, !dbg !13217
  store i32 %dec, i32* %i, align 4, !dbg !13217
  %tobool4 = icmp ne i32 %14, 0, !dbg !13219
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !13219

for.body5:                                        ; preds = %for.cond3
  %15 = load float*, float** %cent.addr, align 8, !dbg !13220
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13222
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %16, i32 0, i32 0, !dbg !13223
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !13222
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !13222
  call void @add_v3_v3(float* %15, float* %arraydecay), !dbg !13224
  %17 = load float*, float** %cent.addr, align 8, !dbg !13225
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13226
  %vec6 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %18, i32 0, i32 0, !dbg !13227
  %arrayidx7 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec6, i64 0, i64 1, !dbg !13226
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx7, i64 0, i64 0, !dbg !13226
  call void @add_v3_v3(float* %17, float* %arraydecay8), !dbg !13228
  %19 = load float*, float** %cent.addr, align 8, !dbg !13229
  %20 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13230
  %vec9 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %20, i32 0, i32 0, !dbg !13231
  %arrayidx10 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec9, i64 0, i64 2, !dbg !13230
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx10, i64 0, i64 0, !dbg !13230
  call void @add_v3_v3(float* %19, float* %arraydecay11), !dbg !13232
  br label %for.inc, !dbg !13233

for.inc:                                          ; preds = %for.body5
  %21 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13234
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %21, i32 1, !dbg !13234
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !13234
  br label %for.cond3, !dbg !13235, !llvm.loop !13236

for.end:                                          ; preds = %for.cond3
  br label %if.end, !dbg !13238

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !13239, metadata !DIExpression()), !dbg !13241
  %22 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13242
  %pntsu12 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %22, i32 0, i32 6, !dbg !13243
  %23 = load i32, i32* %pntsu12, align 8, !dbg !13243
  %24 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13244
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %24, i32 0, i32 7, !dbg !13245
  %25 = load i32, i32* %pntsv, align 4, !dbg !13245
  %mul13 = mul nsw i32 %23, %25, !dbg !13246
  store i32 %mul13, i32* %i, align 4, !dbg !13247
  %26 = load i32, i32* %i, align 4, !dbg !13248
  %27 = load i32, i32* %total, align 4, !dbg !13249
  %add14 = add nsw i32 %27, %26, !dbg !13249
  store i32 %add14, i32* %total, align 4, !dbg !13249
  %28 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13250
  %bp15 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %28, i32 0, i32 17, !dbg !13252
  %29 = load %struct.BPoint*, %struct.BPoint** %bp15, align 8, !dbg !13252
  store %struct.BPoint* %29, %struct.BPoint** %bp, align 8, !dbg !13253
  br label %for.cond16, !dbg !13254

for.cond16:                                       ; preds = %for.inc22, %if.else
  %30 = load i32, i32* %i, align 4, !dbg !13255
  %dec17 = add nsw i32 %30, -1, !dbg !13255
  store i32 %dec17, i32* %i, align 4, !dbg !13255
  %tobool18 = icmp ne i32 %30, 0, !dbg !13257
  br i1 %tobool18, label %for.body19, label %for.end24, !dbg !13257

for.body19:                                       ; preds = %for.cond16
  %31 = load float*, float** %cent.addr, align 8, !dbg !13258
  %32 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !13260
  %vec20 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %32, i32 0, i32 0, !dbg !13261
  %arraydecay21 = getelementptr inbounds [4 x float], [4 x float]* %vec20, i64 0, i64 0, !dbg !13260
  call void @add_v3_v3(float* %31, float* %arraydecay21), !dbg !13262
  br label %for.inc22, !dbg !13263

for.inc22:                                        ; preds = %for.body19
  %33 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !13264
  %incdec.ptr23 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %33, i32 1, !dbg !13264
  store %struct.BPoint* %incdec.ptr23, %struct.BPoint** %bp, align 8, !dbg !13264
  br label %for.cond16, !dbg !13265, !llvm.loop !13266

for.end24:                                        ; preds = %for.cond16
  br label %if.end

if.end:                                           ; preds = %for.end24, %for.end
  br label %for.inc25, !dbg !13268

for.inc25:                                        ; preds = %if.end
  %34 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13269
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %34, i32 0, i32 0, !dbg !13270
  %35 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !13270
  store %struct.Nurb* %35, %struct.Nurb** %nu, align 8, !dbg !13271
  br label %for.cond, !dbg !13272, !llvm.loop !13273

for.end26:                                        ; preds = %for.cond
  %36 = load i32, i32* %total, align 4, !dbg !13275
  %tobool27 = icmp ne i32 %36, 0, !dbg !13275
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !13277

if.then28:                                        ; preds = %for.end26
  %37 = load float*, float** %cent.addr, align 8, !dbg !13278
  %38 = load i32, i32* %total, align 4, !dbg !13280
  %conv29 = sitofp i32 %38 to float, !dbg !13281
  %div = fdiv float 1.000000e+00, %conv29, !dbg !13282
  call void @mul_v3_fl(float* %37, float %div), !dbg !13283
  br label %if.end30, !dbg !13284

if.end30:                                         ; preds = %if.then28, %for.end26
  %39 = load i32, i32* %total, align 4, !dbg !13285
  %cmp31 = icmp ne i32 %39, 0, !dbg !13286
  %conv32 = zext i1 %cmp31 to i32, !dbg !13286
  %conv33 = trunc i32 %conv32 to i8, !dbg !13287
  ret i8 %conv33, !dbg !13288
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !13289 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !13290, metadata !DIExpression()), !dbg !13291
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !13292, metadata !DIExpression()), !dbg !13293
  %0 = load float*, float** %a.addr, align 8, !dbg !13294
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !13294
  %1 = load float, float* %arrayidx, align 4, !dbg !13294
  %2 = load float*, float** %r.addr, align 8, !dbg !13295
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !13295
  %3 = load float, float* %arrayidx1, align 4, !dbg !13296
  %add = fadd float %3, %1, !dbg !13296
  store float %add, float* %arrayidx1, align 4, !dbg !13296
  %4 = load float*, float** %a.addr, align 8, !dbg !13297
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !13297
  %5 = load float, float* %arrayidx2, align 4, !dbg !13297
  %6 = load float*, float** %r.addr, align 8, !dbg !13298
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !13298
  %7 = load float, float* %arrayidx3, align 4, !dbg !13299
  %add4 = fadd float %7, %5, !dbg !13299
  store float %add4, float* %arrayidx3, align 4, !dbg !13299
  %8 = load float*, float** %a.addr, align 8, !dbg !13300
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !13300
  %9 = load float, float* %arrayidx5, align 4, !dbg !13300
  %10 = load float*, float** %r.addr, align 8, !dbg !13301
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !13301
  %11 = load float, float* %arrayidx6, align 4, !dbg !13302
  %add7 = fadd float %11, %9, !dbg !13302
  store float %add7, float* %arrayidx6, align 4, !dbg !13302
  ret void, !dbg !13303
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !13304 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !13305, metadata !DIExpression()), !dbg !13306
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !13307, metadata !DIExpression()), !dbg !13308
  %0 = load float, float* %f.addr, align 4, !dbg !13309
  %1 = load float*, float** %r.addr, align 8, !dbg !13310
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !13310
  %2 = load float, float* %arrayidx, align 4, !dbg !13311
  %mul = fmul float %2, %0, !dbg !13311
  store float %mul, float* %arrayidx, align 4, !dbg !13311
  %3 = load float, float* %f.addr, align 4, !dbg !13312
  %4 = load float*, float** %r.addr, align 8, !dbg !13313
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !13313
  %5 = load float, float* %arrayidx1, align 4, !dbg !13314
  %mul2 = fmul float %5, %3, !dbg !13314
  store float %mul2, float* %arrayidx1, align 4, !dbg !13314
  %6 = load float, float* %f.addr, align 4, !dbg !13315
  %7 = load float*, float** %r.addr, align 8, !dbg !13316
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !13316
  %8 = load float, float* %arrayidx3, align 4, !dbg !13317
  %mul4 = fmul float %8, %6, !dbg !13317
  store float %mul4, float* %arrayidx3, align 4, !dbg !13317
  ret void, !dbg !13318
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_curve_center_bounds(%struct.Curve* %cu, float* %cent) #0 !dbg !13319 {
entry:
  %retval = alloca i8, align 1
  %cu.addr = alloca %struct.Curve*, align 8
  %cent.addr = alloca float*, align 8
  %min = alloca [3 x float], align 4
  %max = alloca [3 x float], align 4
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !13320, metadata !DIExpression()), !dbg !13321
  store float* %cent, float** %cent.addr, align 8
  call void @llvm.dbg.declare(metadata float** %cent.addr, metadata !13322, metadata !DIExpression()), !dbg !13323
  call void @llvm.dbg.declare(metadata [3 x float]* %min, metadata !13324, metadata !DIExpression()), !dbg !13325
  call void @llvm.dbg.declare(metadata [3 x float]* %max, metadata !13326, metadata !DIExpression()), !dbg !13327
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !13328
  store float 0x46293E5940000000, float* %arrayidx, align 4, !dbg !13328
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !13328
  store float 0x46293E5940000000, float* %arrayidx1, align 4, !dbg !13328
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !13328
  store float 0x46293E5940000000, float* %arrayidx2, align 4, !dbg !13328
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 2, !dbg !13328
  store float 0xC6293E5940000000, float* %arrayidx3, align 4, !dbg !13328
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 1, !dbg !13328
  store float 0xC6293E5940000000, float* %arrayidx4, align 4, !dbg !13328
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !13328
  store float 0xC6293E5940000000, float* %arrayidx5, align 4, !dbg !13328
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13330
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !13332
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !13333
  %call = call zeroext i8 @BKE_curve_minmax(%struct.Curve* %0, i8 zeroext 0, float* %arraydecay, float* %arraydecay6), !dbg !13334
  %tobool = icmp ne i8 %call, 0, !dbg !13334
  br i1 %tobool, label %if.then, label %if.end, !dbg !13335

if.then:                                          ; preds = %entry
  %1 = load float*, float** %cent.addr, align 8, !dbg !13336
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !13338
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !13339
  call void @mid_v3_v3v3(float* %1, float* %arraydecay7, float* %arraydecay8), !dbg !13340
  store i8 1, i8* %retval, align 1, !dbg !13341
  br label %return, !dbg !13341

if.end:                                           ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !13342
  br label %return, !dbg !13342

return:                                           ; preds = %if.end, %if.then
  %2 = load i8, i8* %retval, align 1, !dbg !13343
  ret i8 %2, !dbg !13343
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_transform_ex(%struct.Curve* %cu, [4 x float]* %mat, i8 zeroext %do_keys, float %unit_scale) #0 !dbg !13344 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  %do_keys.addr = alloca i8, align 1
  %unit_scale.addr = alloca float, align 4
  %nu = alloca %struct.Nurb*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %i = alloca i32, align 4
  %kb = alloca %struct.KeyBlock*, align 8
  %fp = alloca float*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !13348, metadata !DIExpression()), !dbg !13349
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !13350, metadata !DIExpression()), !dbg !13351
  store i8 %do_keys, i8* %do_keys.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_keys.addr, metadata !13352, metadata !DIExpression()), !dbg !13353
  store float %unit_scale, float* %unit_scale.addr, align 4
  call void @llvm.dbg.declare(metadata float* %unit_scale.addr, metadata !13354, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !13356, metadata !DIExpression()), !dbg !13357
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !13358, metadata !DIExpression()), !dbg !13359
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !13360, metadata !DIExpression()), !dbg !13361
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13362, metadata !DIExpression()), !dbg !13363
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13364
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %0, i32 0, i32 3, !dbg !13366
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb, i32 0, i32 0, !dbg !13367
  %1 = load i8*, i8** %first, align 8, !dbg !13367
  %2 = bitcast i8* %1 to %struct.Nurb*, !dbg !13364
  store %struct.Nurb* %2, %struct.Nurb** %nu, align 8, !dbg !13368
  br label %for.cond, !dbg !13369

for.cond:                                         ; preds = %for.inc24, %entry
  %3 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13370
  %tobool = icmp ne %struct.Nurb* %3, null, !dbg !13372
  br i1 %tobool, label %for.body, label %for.end25, !dbg !13372

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13373
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %4, i32 0, i32 2, !dbg !13376
  %5 = load i16, i16* %type, align 8, !dbg !13376
  %conv = sext i16 %5 to i32, !dbg !13373
  %cmp = icmp eq i32 %conv, 1, !dbg !13377
  br i1 %cmp, label %if.then, label %if.else, !dbg !13378

if.then:                                          ; preds = %for.body
  %6 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13379
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %6, i32 0, i32 6, !dbg !13381
  %7 = load i32, i32* %pntsu, align 8, !dbg !13381
  store i32 %7, i32* %i, align 4, !dbg !13382
  %8 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13383
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %8, i32 0, i32 18, !dbg !13385
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !13385
  store %struct.BezTriple* %9, %struct.BezTriple** %bezt, align 8, !dbg !13386
  br label %for.cond3, !dbg !13387

for.cond3:                                        ; preds = %for.inc, %if.then
  %10 = load i32, i32* %i, align 4, !dbg !13388
  %dec = add nsw i32 %10, -1, !dbg !13388
  store i32 %dec, i32* %i, align 4, !dbg !13388
  %tobool4 = icmp ne i32 %10, 0, !dbg !13390
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !13390

for.body5:                                        ; preds = %for.cond3
  %11 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !13391
  %12 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13393
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %12, i32 0, i32 0, !dbg !13394
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !13393
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !13393
  call void @mul_m4_v3([4 x float]* %11, float* %arraydecay), !dbg !13395
  %13 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !13396
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13397
  %vec6 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %14, i32 0, i32 0, !dbg !13398
  %arrayidx7 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec6, i64 0, i64 1, !dbg !13397
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx7, i64 0, i64 0, !dbg !13397
  call void @mul_m4_v3([4 x float]* %13, float* %arraydecay8), !dbg !13399
  %15 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !13400
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13401
  %vec9 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %16, i32 0, i32 0, !dbg !13402
  %arrayidx10 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec9, i64 0, i64 2, !dbg !13401
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx10, i64 0, i64 0, !dbg !13401
  call void @mul_m4_v3([4 x float]* %15, float* %arraydecay11), !dbg !13403
  %17 = load float, float* %unit_scale.addr, align 4, !dbg !13404
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13405
  %radius = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %18, i32 0, i32 3, !dbg !13406
  %19 = load float, float* %radius, align 4, !dbg !13407
  %mul = fmul float %19, %17, !dbg !13407
  store float %mul, float* %radius, align 4, !dbg !13407
  br label %for.inc, !dbg !13408

for.inc:                                          ; preds = %for.body5
  %20 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13409
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %20, i32 1, !dbg !13409
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !13409
  br label %for.cond3, !dbg !13410, !llvm.loop !13411

for.end:                                          ; preds = %for.cond3
  %21 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13413
  call void @BKE_nurb_handles_calc(%struct.Nurb* %21), !dbg !13414
  br label %if.end, !dbg !13415

if.else:                                          ; preds = %for.body
  %22 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13416
  %pntsu12 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %22, i32 0, i32 6, !dbg !13418
  %23 = load i32, i32* %pntsu12, align 8, !dbg !13418
  %24 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13419
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %24, i32 0, i32 7, !dbg !13420
  %25 = load i32, i32* %pntsv, align 4, !dbg !13420
  %mul13 = mul nsw i32 %23, %25, !dbg !13421
  store i32 %mul13, i32* %i, align 4, !dbg !13422
  %26 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13423
  %bp14 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %26, i32 0, i32 17, !dbg !13425
  %27 = load %struct.BPoint*, %struct.BPoint** %bp14, align 8, !dbg !13425
  store %struct.BPoint* %27, %struct.BPoint** %bp, align 8, !dbg !13426
  br label %for.cond15, !dbg !13427

for.cond15:                                       ; preds = %for.inc21, %if.else
  %28 = load i32, i32* %i, align 4, !dbg !13428
  %dec16 = add nsw i32 %28, -1, !dbg !13428
  store i32 %dec16, i32* %i, align 4, !dbg !13428
  %tobool17 = icmp ne i32 %28, 0, !dbg !13430
  br i1 %tobool17, label %for.body18, label %for.end23, !dbg !13430

for.body18:                                       ; preds = %for.cond15
  %29 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !13431
  %30 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !13432
  %vec19 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %30, i32 0, i32 0, !dbg !13433
  %arraydecay20 = getelementptr inbounds [4 x float], [4 x float]* %vec19, i64 0, i64 0, !dbg !13432
  call void @mul_m4_v3([4 x float]* %29, float* %arraydecay20), !dbg !13434
  br label %for.inc21, !dbg !13434

for.inc21:                                        ; preds = %for.body18
  %31 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !13435
  %incdec.ptr22 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %31, i32 1, !dbg !13435
  store %struct.BPoint* %incdec.ptr22, %struct.BPoint** %bp, align 8, !dbg !13435
  br label %for.cond15, !dbg !13436, !llvm.loop !13437

for.end23:                                        ; preds = %for.cond15
  br label %if.end

if.end:                                           ; preds = %for.end23, %for.end
  br label %for.inc24, !dbg !13439

for.inc24:                                        ; preds = %if.end
  %32 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13440
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %32, i32 0, i32 0, !dbg !13441
  %33 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !13441
  store %struct.Nurb* %33, %struct.Nurb** %nu, align 8, !dbg !13442
  br label %for.cond, !dbg !13443, !llvm.loop !13444

for.end25:                                        ; preds = %for.cond
  %34 = load i8, i8* %do_keys.addr, align 1, !dbg !13446
  %conv26 = zext i8 %34 to i32, !dbg !13446
  %tobool27 = icmp ne i32 %conv26, 0, !dbg !13446
  br i1 %tobool27, label %land.lhs.true, label %if.end44, !dbg !13448

land.lhs.true:                                    ; preds = %for.end25
  %35 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13449
  %key = getelementptr inbounds %struct.Curve, %struct.Curve* %35, i32 0, i32 9, !dbg !13450
  %36 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !13450
  %tobool28 = icmp ne %struct.Key* %36, null, !dbg !13449
  br i1 %tobool28, label %if.then29, label %if.end44, !dbg !13451

if.then29:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !13452, metadata !DIExpression()), !dbg !13454
  %37 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13455
  %key30 = getelementptr inbounds %struct.Curve, %struct.Curve* %37, i32 0, i32 9, !dbg !13457
  %38 = load %struct.Key*, %struct.Key** %key30, align 8, !dbg !13457
  %block = getelementptr inbounds %struct.Key, %struct.Key* %38, i32 0, i32 6, !dbg !13458
  %first31 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block, i32 0, i32 0, !dbg !13459
  %39 = load i8*, i8** %first31, align 8, !dbg !13459
  %40 = bitcast i8* %39 to %struct.KeyBlock*, !dbg !13455
  store %struct.KeyBlock* %40, %struct.KeyBlock** %kb, align 8, !dbg !13460
  br label %for.cond32, !dbg !13461

for.cond32:                                       ; preds = %for.inc41, %if.then29
  %41 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !13462
  %tobool33 = icmp ne %struct.KeyBlock* %41, null, !dbg !13464
  br i1 %tobool33, label %for.body34, label %for.end43, !dbg !13464

for.body34:                                       ; preds = %for.cond32
  call void @llvm.dbg.declare(metadata float** %fp, metadata !13465, metadata !DIExpression()), !dbg !13467
  %42 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !13468
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %42, i32 0, i32 10, !dbg !13469
  %43 = load i8*, i8** %data, align 8, !dbg !13469
  %44 = bitcast i8* %43 to float*, !dbg !13468
  store float* %44, float** %fp, align 8, !dbg !13467
  %45 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !13470
  %totelem = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %45, i32 0, i32 8, !dbg !13472
  %46 = load i32, i32* %totelem, align 8, !dbg !13472
  store i32 %46, i32* %i, align 4, !dbg !13473
  br label %for.cond35, !dbg !13474

for.cond35:                                       ; preds = %for.inc39, %for.body34
  %47 = load i32, i32* %i, align 4, !dbg !13475
  %dec36 = add nsw i32 %47, -1, !dbg !13475
  store i32 %dec36, i32* %i, align 4, !dbg !13475
  %tobool37 = icmp ne i32 %47, 0, !dbg !13477
  br i1 %tobool37, label %for.body38, label %for.end40, !dbg !13477

for.body38:                                       ; preds = %for.cond35
  %48 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !13478
  %49 = load float*, float** %fp, align 8, !dbg !13480
  call void @mul_m4_v3([4 x float]* %48, float* %49), !dbg !13481
  br label %for.inc39, !dbg !13482

for.inc39:                                        ; preds = %for.body38
  %50 = load float*, float** %fp, align 8, !dbg !13483
  %add.ptr = getelementptr inbounds float, float* %50, i64 3, !dbg !13483
  store float* %add.ptr, float** %fp, align 8, !dbg !13483
  br label %for.cond35, !dbg !13484, !llvm.loop !13485

for.end40:                                        ; preds = %for.cond35
  br label %for.inc41, !dbg !13487

for.inc41:                                        ; preds = %for.end40
  %51 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !13488
  %next42 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %51, i32 0, i32 0, !dbg !13489
  %52 = load %struct.KeyBlock*, %struct.KeyBlock** %next42, align 8, !dbg !13489
  store %struct.KeyBlock* %52, %struct.KeyBlock** %kb, align 8, !dbg !13490
  br label %for.cond32, !dbg !13491, !llvm.loop !13492

for.end43:                                        ; preds = %for.cond32
  br label %if.end44, !dbg !13494

if.end44:                                         ; preds = %for.end43, %land.lhs.true, %for.end25
  ret void, !dbg !13495
}

declare dso_local void @mul_m4_v3([4 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_transform(%struct.Curve* %cu, [4 x float]* %mat, i8 zeroext %do_keys) #0 !dbg !13496 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  %do_keys.addr = alloca i8, align 1
  %unit_scale = alloca float, align 4
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !13499, metadata !DIExpression()), !dbg !13500
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !13501, metadata !DIExpression()), !dbg !13502
  store i8 %do_keys, i8* %do_keys.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_keys.addr, metadata !13503, metadata !DIExpression()), !dbg !13504
  call void @llvm.dbg.declare(metadata float* %unit_scale, metadata !13505, metadata !DIExpression()), !dbg !13506
  %0 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !13507
  %call = call float @mat4_to_scale([4 x float]* %0), !dbg !13508
  store float %call, float* %unit_scale, align 4, !dbg !13506
  %1 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13509
  %2 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !13510
  %3 = load i8, i8* %do_keys.addr, align 1, !dbg !13511
  %4 = load float, float* %unit_scale, align 4, !dbg !13512
  call void @BKE_curve_transform_ex(%struct.Curve* %1, [4 x float]* %2, i8 zeroext %3, float %4), !dbg !13513
  ret void, !dbg !13514
}

declare dso_local float @mat4_to_scale([4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_translate(%struct.Curve* %cu, float* %offset, i8 zeroext %do_keys) #0 !dbg !13515 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %offset.addr = alloca float*, align 8
  %do_keys.addr = alloca i8, align 1
  %nurb_lb = alloca %struct.ListBase*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %i = alloca i32, align 4
  %bezt = alloca %struct.BezTriple*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %kb = alloca %struct.KeyBlock*, align 8
  %fp = alloca float*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !13518, metadata !DIExpression()), !dbg !13519
  store float* %offset, float** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata float** %offset.addr, metadata !13520, metadata !DIExpression()), !dbg !13521
  store i8 %do_keys, i8* %do_keys.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_keys.addr, metadata !13522, metadata !DIExpression()), !dbg !13523
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nurb_lb, metadata !13524, metadata !DIExpression()), !dbg !13525
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13526
  %call = call %struct.ListBase* @BKE_curve_nurbs_get(%struct.Curve* %0), !dbg !13527
  store %struct.ListBase* %call, %struct.ListBase** %nurb_lb, align 8, !dbg !13525
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !13528, metadata !DIExpression()), !dbg !13529
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13530, metadata !DIExpression()), !dbg !13531
  %1 = load %struct.ListBase*, %struct.ListBase** %nurb_lb, align 8, !dbg !13532
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !13534
  %2 = load i8*, i8** %first, align 8, !dbg !13534
  %3 = bitcast i8* %2 to %struct.Nurb*, !dbg !13532
  store %struct.Nurb* %3, %struct.Nurb** %nu, align 8, !dbg !13535
  br label %for.cond, !dbg !13536

for.cond:                                         ; preds = %for.inc23, %entry
  %4 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13537
  %tobool = icmp ne %struct.Nurb* %4, null, !dbg !13539
  br i1 %tobool, label %for.body, label %for.end24, !dbg !13539

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !13540, metadata !DIExpression()), !dbg !13542
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !13543, metadata !DIExpression()), !dbg !13544
  %5 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13545
  %type = getelementptr inbounds %struct.Nurb, %struct.Nurb* %5, i32 0, i32 2, !dbg !13547
  %6 = load i16, i16* %type, align 8, !dbg !13547
  %conv = sext i16 %6 to i32, !dbg !13545
  %cmp = icmp eq i32 %conv, 1, !dbg !13548
  br i1 %cmp, label %if.then, label %if.else, !dbg !13549

if.then:                                          ; preds = %for.body
  %7 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13550
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %7, i32 0, i32 6, !dbg !13552
  %8 = load i32, i32* %pntsu, align 8, !dbg !13552
  store i32 %8, i32* %i, align 4, !dbg !13553
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13554
  %bezt2 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %9, i32 0, i32 18, !dbg !13556
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt2, align 8, !dbg !13556
  store %struct.BezTriple* %10, %struct.BezTriple** %bezt, align 8, !dbg !13557
  br label %for.cond3, !dbg !13558

for.cond3:                                        ; preds = %for.inc, %if.then
  %11 = load i32, i32* %i, align 4, !dbg !13559
  %dec = add nsw i32 %11, -1, !dbg !13559
  store i32 %dec, i32* %i, align 4, !dbg !13559
  %tobool4 = icmp ne i32 %11, 0, !dbg !13561
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !13561

for.body5:                                        ; preds = %for.cond3
  %12 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13562
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %12, i32 0, i32 0, !dbg !13564
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !13562
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !13562
  %13 = load float*, float** %offset.addr, align 8, !dbg !13565
  call void @add_v3_v3(float* %arraydecay, float* %13), !dbg !13566
  %14 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13567
  %vec6 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %14, i32 0, i32 0, !dbg !13568
  %arrayidx7 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec6, i64 0, i64 1, !dbg !13567
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx7, i64 0, i64 0, !dbg !13567
  %15 = load float*, float** %offset.addr, align 8, !dbg !13569
  call void @add_v3_v3(float* %arraydecay8, float* %15), !dbg !13570
  %16 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13571
  %vec9 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %16, i32 0, i32 0, !dbg !13572
  %arrayidx10 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec9, i64 0, i64 2, !dbg !13571
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx10, i64 0, i64 0, !dbg !13571
  %17 = load float*, float** %offset.addr, align 8, !dbg !13573
  call void @add_v3_v3(float* %arraydecay11, float* %17), !dbg !13574
  br label %for.inc, !dbg !13575

for.inc:                                          ; preds = %for.body5
  %18 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !13576
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %18, i32 1, !dbg !13576
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !13576
  br label %for.cond3, !dbg !13577, !llvm.loop !13578

for.end:                                          ; preds = %for.cond3
  br label %if.end, !dbg !13580

if.else:                                          ; preds = %for.body
  %19 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13581
  %pntsu12 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %19, i32 0, i32 6, !dbg !13583
  %20 = load i32, i32* %pntsu12, align 8, !dbg !13583
  %21 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13584
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 7, !dbg !13585
  %22 = load i32, i32* %pntsv, align 4, !dbg !13585
  %mul = mul nsw i32 %20, %22, !dbg !13586
  store i32 %mul, i32* %i, align 4, !dbg !13587
  %23 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13588
  %bp13 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %23, i32 0, i32 17, !dbg !13590
  %24 = load %struct.BPoint*, %struct.BPoint** %bp13, align 8, !dbg !13590
  store %struct.BPoint* %24, %struct.BPoint** %bp, align 8, !dbg !13591
  br label %for.cond14, !dbg !13592

for.cond14:                                       ; preds = %for.inc20, %if.else
  %25 = load i32, i32* %i, align 4, !dbg !13593
  %dec15 = add nsw i32 %25, -1, !dbg !13593
  store i32 %dec15, i32* %i, align 4, !dbg !13593
  %tobool16 = icmp ne i32 %25, 0, !dbg !13595
  br i1 %tobool16, label %for.body17, label %for.end22, !dbg !13595

for.body17:                                       ; preds = %for.cond14
  %26 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !13596
  %vec18 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %26, i32 0, i32 0, !dbg !13598
  %arraydecay19 = getelementptr inbounds [4 x float], [4 x float]* %vec18, i64 0, i64 0, !dbg !13596
  %27 = load float*, float** %offset.addr, align 8, !dbg !13599
  call void @add_v3_v3(float* %arraydecay19, float* %27), !dbg !13600
  br label %for.inc20, !dbg !13601

for.inc20:                                        ; preds = %for.body17
  %28 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !13602
  %incdec.ptr21 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %28, i32 1, !dbg !13602
  store %struct.BPoint* %incdec.ptr21, %struct.BPoint** %bp, align 8, !dbg !13602
  br label %for.cond14, !dbg !13603, !llvm.loop !13604

for.end22:                                        ; preds = %for.cond14
  br label %if.end

if.end:                                           ; preds = %for.end22, %for.end
  br label %for.inc23, !dbg !13606

for.inc23:                                        ; preds = %if.end
  %29 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13607
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %29, i32 0, i32 0, !dbg !13608
  %30 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !13608
  store %struct.Nurb* %30, %struct.Nurb** %nu, align 8, !dbg !13609
  br label %for.cond, !dbg !13610, !llvm.loop !13611

for.end24:                                        ; preds = %for.cond
  %31 = load i8, i8* %do_keys.addr, align 1, !dbg !13613
  %conv25 = zext i8 %31 to i32, !dbg !13613
  %tobool26 = icmp ne i32 %conv25, 0, !dbg !13613
  br i1 %tobool26, label %land.lhs.true, label %if.end43, !dbg !13615

land.lhs.true:                                    ; preds = %for.end24
  %32 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13616
  %key = getelementptr inbounds %struct.Curve, %struct.Curve* %32, i32 0, i32 9, !dbg !13617
  %33 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !13617
  %tobool27 = icmp ne %struct.Key* %33, null, !dbg !13616
  br i1 %tobool27, label %if.then28, label %if.end43, !dbg !13618

if.then28:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !13619, metadata !DIExpression()), !dbg !13621
  %34 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13622
  %key29 = getelementptr inbounds %struct.Curve, %struct.Curve* %34, i32 0, i32 9, !dbg !13624
  %35 = load %struct.Key*, %struct.Key** %key29, align 8, !dbg !13624
  %block = getelementptr inbounds %struct.Key, %struct.Key* %35, i32 0, i32 6, !dbg !13625
  %first30 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block, i32 0, i32 0, !dbg !13626
  %36 = load i8*, i8** %first30, align 8, !dbg !13626
  %37 = bitcast i8* %36 to %struct.KeyBlock*, !dbg !13622
  store %struct.KeyBlock* %37, %struct.KeyBlock** %kb, align 8, !dbg !13627
  br label %for.cond31, !dbg !13628

for.cond31:                                       ; preds = %for.inc40, %if.then28
  %38 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !13629
  %tobool32 = icmp ne %struct.KeyBlock* %38, null, !dbg !13631
  br i1 %tobool32, label %for.body33, label %for.end42, !dbg !13631

for.body33:                                       ; preds = %for.cond31
  call void @llvm.dbg.declare(metadata float** %fp, metadata !13632, metadata !DIExpression()), !dbg !13634
  %39 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !13635
  %data = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %39, i32 0, i32 10, !dbg !13636
  %40 = load i8*, i8** %data, align 8, !dbg !13636
  %41 = bitcast i8* %40 to float*, !dbg !13635
  store float* %41, float** %fp, align 8, !dbg !13634
  %42 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !13637
  %totelem = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %42, i32 0, i32 8, !dbg !13639
  %43 = load i32, i32* %totelem, align 8, !dbg !13639
  store i32 %43, i32* %i, align 4, !dbg !13640
  br label %for.cond34, !dbg !13641

for.cond34:                                       ; preds = %for.inc38, %for.body33
  %44 = load i32, i32* %i, align 4, !dbg !13642
  %dec35 = add nsw i32 %44, -1, !dbg !13642
  store i32 %dec35, i32* %i, align 4, !dbg !13642
  %tobool36 = icmp ne i32 %44, 0, !dbg !13644
  br i1 %tobool36, label %for.body37, label %for.end39, !dbg !13644

for.body37:                                       ; preds = %for.cond34
  %45 = load float*, float** %fp, align 8, !dbg !13645
  %46 = load float*, float** %offset.addr, align 8, !dbg !13647
  call void @add_v3_v3(float* %45, float* %46), !dbg !13648
  br label %for.inc38, !dbg !13649

for.inc38:                                        ; preds = %for.body37
  %47 = load float*, float** %fp, align 8, !dbg !13650
  %add.ptr = getelementptr inbounds float, float* %47, i64 3, !dbg !13650
  store float* %add.ptr, float** %fp, align 8, !dbg !13650
  br label %for.cond34, !dbg !13651, !llvm.loop !13652

for.end39:                                        ; preds = %for.cond34
  br label %for.inc40, !dbg !13654

for.inc40:                                        ; preds = %for.end39
  %48 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !13655
  %next41 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %48, i32 0, i32 0, !dbg !13656
  %49 = load %struct.KeyBlock*, %struct.KeyBlock** %next41, align 8, !dbg !13656
  store %struct.KeyBlock* %49, %struct.KeyBlock** %kb, align 8, !dbg !13657
  br label %for.cond31, !dbg !13658, !llvm.loop !13659

for.end42:                                        ; preds = %for.cond31
  br label %if.end43, !dbg !13661

if.end43:                                         ; preds = %for.end42, %land.lhs.true, %for.end24
  ret void, !dbg !13662
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_material_index_remove(%struct.Curve* %cu, i32 %index) #0 !dbg !13663 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %index.addr = alloca i32, align 4
  %curvetype = alloca i32, align 4
  %info = alloca %struct.CharInfo*, align 8
  %i = alloca i32, align 4
  %nu = alloca %struct.Nurb*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !13666, metadata !DIExpression()), !dbg !13667
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !13668, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.declare(metadata i32* %curvetype, metadata !13670, metadata !DIExpression()), !dbg !13671
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13672
  %call = call signext i16 @BKE_curve_type_get(%struct.Curve* %0), !dbg !13673
  %conv = sext i16 %call to i32, !dbg !13673
  store i32 %conv, i32* %curvetype, align 4, !dbg !13671
  %1 = load i32, i32* %curvetype, align 4, !dbg !13674
  %cmp = icmp eq i32 %1, 4, !dbg !13676
  br i1 %cmp, label %if.then, label %if.else, !dbg !13677

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.CharInfo** %info, metadata !13678, metadata !DIExpression()), !dbg !13680
  %2 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13681
  %strinfo = getelementptr inbounds %struct.Curve, %struct.Curve* %2, i32 0, i32 62, !dbg !13682
  %3 = load %struct.CharInfo*, %struct.CharInfo** %strinfo, align 8, !dbg !13682
  store %struct.CharInfo* %3, %struct.CharInfo** %info, align 8, !dbg !13680
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13683, metadata !DIExpression()), !dbg !13684
  %4 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13685
  %len_wchar = getelementptr inbounds %struct.Curve, %struct.Curve* %4, i32 0, i32 50, !dbg !13687
  %5 = load i32, i32* %len_wchar, align 8, !dbg !13687
  %sub = sub nsw i32 %5, 1, !dbg !13688
  store i32 %sub, i32* %i, align 4, !dbg !13689
  br label %for.cond, !dbg !13690

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32, i32* %i, align 4, !dbg !13691
  %cmp2 = icmp sge i32 %6, 0, !dbg !13693
  br i1 %cmp2, label %for.body, label %for.end, !dbg !13694

for.body:                                         ; preds = %for.cond
  %7 = load %struct.CharInfo*, %struct.CharInfo** %info, align 8, !dbg !13695
  %mat_nr = getelementptr inbounds %struct.CharInfo, %struct.CharInfo* %7, i32 0, i32 1, !dbg !13698
  %8 = load i16, i16* %mat_nr, align 2, !dbg !13698
  %conv4 = sext i16 %8 to i32, !dbg !13695
  %tobool = icmp ne i32 %conv4, 0, !dbg !13695
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !13699

land.lhs.true:                                    ; preds = %for.body
  %9 = load %struct.CharInfo*, %struct.CharInfo** %info, align 8, !dbg !13700
  %mat_nr5 = getelementptr inbounds %struct.CharInfo, %struct.CharInfo* %9, i32 0, i32 1, !dbg !13701
  %10 = load i16, i16* %mat_nr5, align 2, !dbg !13701
  %conv6 = sext i16 %10 to i32, !dbg !13700
  %11 = load i32, i32* %index.addr, align 4, !dbg !13702
  %cmp7 = icmp sge i32 %conv6, %11, !dbg !13703
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !13704

if.then9:                                         ; preds = %land.lhs.true
  %12 = load %struct.CharInfo*, %struct.CharInfo** %info, align 8, !dbg !13705
  %mat_nr10 = getelementptr inbounds %struct.CharInfo, %struct.CharInfo* %12, i32 0, i32 1, !dbg !13707
  %13 = load i16, i16* %mat_nr10, align 2, !dbg !13708
  %dec = add i16 %13, -1, !dbg !13708
  store i16 %dec, i16* %mat_nr10, align 2, !dbg !13708
  br label %if.end, !dbg !13709

if.end:                                           ; preds = %if.then9, %land.lhs.true, %for.body
  br label %for.inc, !dbg !13710

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %i, align 4, !dbg !13711
  %dec11 = add nsw i32 %14, -1, !dbg !13711
  store i32 %dec11, i32* %i, align 4, !dbg !13711
  %15 = load %struct.CharInfo*, %struct.CharInfo** %info, align 8, !dbg !13712
  %incdec.ptr = getelementptr inbounds %struct.CharInfo, %struct.CharInfo* %15, i32 1, !dbg !13712
  store %struct.CharInfo* %incdec.ptr, %struct.CharInfo** %info, align 8, !dbg !13712
  br label %for.cond, !dbg !13713, !llvm.loop !13714

for.end:                                          ; preds = %for.cond
  br label %if.end34, !dbg !13716

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !13717, metadata !DIExpression()), !dbg !13719
  %16 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13720
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %16, i32 0, i32 3, !dbg !13722
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb, i32 0, i32 0, !dbg !13723
  %17 = load i8*, i8** %first, align 8, !dbg !13723
  %18 = bitcast i8* %17 to %struct.Nurb*, !dbg !13720
  store %struct.Nurb* %18, %struct.Nurb** %nu, align 8, !dbg !13724
  br label %for.cond12, !dbg !13725

for.cond12:                                       ; preds = %for.inc32, %if.else
  %19 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13726
  %tobool13 = icmp ne %struct.Nurb* %19, null, !dbg !13728
  br i1 %tobool13, label %for.body14, label %for.end33, !dbg !13728

for.body14:                                       ; preds = %for.cond12
  %20 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13729
  %mat_nr15 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %20, i32 0, i32 3, !dbg !13732
  %21 = load i16, i16* %mat_nr15, align 2, !dbg !13732
  %conv16 = sext i16 %21 to i32, !dbg !13729
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !13729
  br i1 %tobool17, label %land.lhs.true18, label %if.end31, !dbg !13733

land.lhs.true18:                                  ; preds = %for.body14
  %22 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13734
  %mat_nr19 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %22, i32 0, i32 3, !dbg !13735
  %23 = load i16, i16* %mat_nr19, align 2, !dbg !13735
  %conv20 = sext i16 %23 to i32, !dbg !13734
  %24 = load i32, i32* %index.addr, align 4, !dbg !13736
  %cmp21 = icmp sge i32 %conv20, %24, !dbg !13737
  br i1 %cmp21, label %if.then23, label %if.end31, !dbg !13738

if.then23:                                        ; preds = %land.lhs.true18
  %25 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13739
  %mat_nr24 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %25, i32 0, i32 3, !dbg !13741
  %26 = load i16, i16* %mat_nr24, align 2, !dbg !13742
  %dec25 = add i16 %26, -1, !dbg !13742
  store i16 %dec25, i16* %mat_nr24, align 2, !dbg !13742
  %27 = load i32, i32* %curvetype, align 4, !dbg !13743
  %cmp26 = icmp eq i32 %27, 2, !dbg !13745
  br i1 %cmp26, label %if.then28, label %if.end30, !dbg !13746

if.then28:                                        ; preds = %if.then23
  %28 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13747
  %charidx = getelementptr inbounds %struct.Nurb, %struct.Nurb* %28, i32 0, i32 21, !dbg !13749
  %29 = load i32, i32* %charidx, align 4, !dbg !13750
  %dec29 = add nsw i32 %29, -1, !dbg !13750
  store i32 %dec29, i32* %charidx, align 4, !dbg !13750
  br label %if.end30, !dbg !13751

if.end30:                                         ; preds = %if.then28, %if.then23
  br label %if.end31, !dbg !13752

if.end31:                                         ; preds = %if.end30, %land.lhs.true18, %for.body14
  br label %for.inc32, !dbg !13753

for.inc32:                                        ; preds = %if.end31
  %30 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13754
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %30, i32 0, i32 0, !dbg !13755
  %31 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !13755
  store %struct.Nurb* %31, %struct.Nurb** %nu, align 8, !dbg !13756
  br label %for.cond12, !dbg !13757, !llvm.loop !13758

for.end33:                                        ; preds = %for.cond12
  br label %if.end34

if.end34:                                         ; preds = %for.end33, %for.end
  ret void, !dbg !13760
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_material_index_clear(%struct.Curve* %cu) #0 !dbg !13761 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %curvetype = alloca i32, align 4
  %info = alloca %struct.CharInfo*, align 8
  %i = alloca i32, align 4
  %nu = alloca %struct.Nurb*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !13762, metadata !DIExpression()), !dbg !13763
  call void @llvm.dbg.declare(metadata i32* %curvetype, metadata !13764, metadata !DIExpression()), !dbg !13765
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13766
  %call = call signext i16 @BKE_curve_type_get(%struct.Curve* %0), !dbg !13767
  %conv = sext i16 %call to i32, !dbg !13767
  store i32 %conv, i32* %curvetype, align 4, !dbg !13765
  %1 = load i32, i32* %curvetype, align 4, !dbg !13768
  %cmp = icmp eq i32 %1, 4, !dbg !13770
  br i1 %cmp, label %if.then, label %if.else, !dbg !13771

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.CharInfo** %info, metadata !13772, metadata !DIExpression()), !dbg !13774
  %2 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13775
  %strinfo = getelementptr inbounds %struct.Curve, %struct.Curve* %2, i32 0, i32 62, !dbg !13776
  %3 = load %struct.CharInfo*, %struct.CharInfo** %strinfo, align 8, !dbg !13776
  store %struct.CharInfo* %3, %struct.CharInfo** %info, align 8, !dbg !13774
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13777, metadata !DIExpression()), !dbg !13778
  %4 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13779
  %len_wchar = getelementptr inbounds %struct.Curve, %struct.Curve* %4, i32 0, i32 50, !dbg !13781
  %5 = load i32, i32* %len_wchar, align 8, !dbg !13781
  %sub = sub nsw i32 %5, 1, !dbg !13782
  store i32 %sub, i32* %i, align 4, !dbg !13783
  br label %for.cond, !dbg !13784

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32, i32* %i, align 4, !dbg !13785
  %cmp2 = icmp sge i32 %6, 0, !dbg !13787
  br i1 %cmp2, label %for.body, label %for.end, !dbg !13788

for.body:                                         ; preds = %for.cond
  %7 = load %struct.CharInfo*, %struct.CharInfo** %info, align 8, !dbg !13789
  %mat_nr = getelementptr inbounds %struct.CharInfo, %struct.CharInfo* %7, i32 0, i32 1, !dbg !13791
  store i16 0, i16* %mat_nr, align 2, !dbg !13792
  br label %for.inc, !dbg !13793

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !13794
  %dec = add nsw i32 %8, -1, !dbg !13794
  store i32 %dec, i32* %i, align 4, !dbg !13794
  %9 = load %struct.CharInfo*, %struct.CharInfo** %info, align 8, !dbg !13795
  %incdec.ptr = getelementptr inbounds %struct.CharInfo, %struct.CharInfo* %9, i32 1, !dbg !13795
  store %struct.CharInfo* %incdec.ptr, %struct.CharInfo** %info, align 8, !dbg !13795
  br label %for.cond, !dbg !13796, !llvm.loop !13797

for.end:                                          ; preds = %for.cond
  br label %if.end12, !dbg !13799

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !13800, metadata !DIExpression()), !dbg !13802
  %10 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13803
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %10, i32 0, i32 3, !dbg !13805
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb, i32 0, i32 0, !dbg !13806
  %11 = load i8*, i8** %first, align 8, !dbg !13806
  %12 = bitcast i8* %11 to %struct.Nurb*, !dbg !13803
  store %struct.Nurb* %12, %struct.Nurb** %nu, align 8, !dbg !13807
  br label %for.cond4, !dbg !13808

for.cond4:                                        ; preds = %for.inc10, %if.else
  %13 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13809
  %tobool = icmp ne %struct.Nurb* %13, null, !dbg !13811
  br i1 %tobool, label %for.body5, label %for.end11, !dbg !13811

for.body5:                                        ; preds = %for.cond4
  %14 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13812
  %mat_nr6 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %14, i32 0, i32 3, !dbg !13814
  store i16 0, i16* %mat_nr6, align 2, !dbg !13815
  %15 = load i32, i32* %curvetype, align 4, !dbg !13816
  %cmp7 = icmp eq i32 %15, 2, !dbg !13818
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !13819

if.then9:                                         ; preds = %for.body5
  %16 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13820
  %charidx = getelementptr inbounds %struct.Nurb, %struct.Nurb* %16, i32 0, i32 21, !dbg !13822
  store i32 0, i32* %charidx, align 4, !dbg !13823
  br label %if.end, !dbg !13824

if.end:                                           ; preds = %if.then9, %for.body5
  br label %for.inc10, !dbg !13825

for.inc10:                                        ; preds = %if.end
  %17 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13826
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %17, i32 0, i32 0, !dbg !13827
  %18 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !13827
  store %struct.Nurb* %18, %struct.Nurb** %nu, align 8, !dbg !13828
  br label %for.cond4, !dbg !13829, !llvm.loop !13830

for.end11:                                        ; preds = %for.cond4
  br label %if.end12

if.end12:                                         ; preds = %for.end11, %for.end
  ret void, !dbg !13832
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_curve_material_index_validate(%struct.Curve* %cu) #0 !dbg !13833 {
entry:
  %retval = alloca i32, align 4
  %cu.addr = alloca %struct.Curve*, align 8
  %curvetype = alloca i32, align 4
  %is_valid = alloca i8, align 1
  %info = alloca %struct.CharInfo*, align 8
  %max_idx = alloca i32, align 4
  %i = alloca i32, align 4
  %nu = alloca %struct.Nurb*, align 8
  %max_idx11 = alloca i32, align 4
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !13836, metadata !DIExpression()), !dbg !13837
  call void @llvm.dbg.declare(metadata i32* %curvetype, metadata !13838, metadata !DIExpression()), !dbg !13839
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13840
  %call = call signext i16 @BKE_curve_type_get(%struct.Curve* %0), !dbg !13841
  %conv = sext i16 %call to i32, !dbg !13841
  store i32 %conv, i32* %curvetype, align 4, !dbg !13839
  call void @llvm.dbg.declare(metadata i8* %is_valid, metadata !13842, metadata !DIExpression()), !dbg !13843
  store i8 1, i8* %is_valid, align 1, !dbg !13843
  %1 = load i32, i32* %curvetype, align 4, !dbg !13844
  %cmp = icmp eq i32 %1, 4, !dbg !13846
  br i1 %cmp, label %if.then, label %if.else, !dbg !13847

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.CharInfo** %info, metadata !13848, metadata !DIExpression()), !dbg !13852
  %2 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13853
  %strinfo = getelementptr inbounds %struct.Curve, %struct.Curve* %2, i32 0, i32 62, !dbg !13854
  %3 = load %struct.CharInfo*, %struct.CharInfo** %strinfo, align 8, !dbg !13854
  store %struct.CharInfo* %3, %struct.CharInfo** %info, align 8, !dbg !13852
  call void @llvm.dbg.declare(metadata i32* %max_idx, metadata !13855, metadata !DIExpression()), !dbg !13856
  %4 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13857
  %totcol = getelementptr inbounds %struct.Curve, %struct.Curve* %4, i32 0, i32 22, !dbg !13858
  %5 = load i16, i16* %totcol, align 2, !dbg !13858
  %conv2 = sext i16 %5 to i32, !dbg !13857
  %call3 = call i32 @max_ii(i32 0, i32 %conv2), !dbg !13859
  store i32 %call3, i32* %max_idx, align 4, !dbg !13856
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13860, metadata !DIExpression()), !dbg !13861
  %6 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13862
  %len_wchar = getelementptr inbounds %struct.Curve, %struct.Curve* %6, i32 0, i32 50, !dbg !13864
  %7 = load i32, i32* %len_wchar, align 8, !dbg !13864
  %sub = sub nsw i32 %7, 1, !dbg !13865
  store i32 %sub, i32* %i, align 4, !dbg !13866
  br label %for.cond, !dbg !13867

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load i32, i32* %i, align 4, !dbg !13868
  %cmp4 = icmp sge i32 %8, 0, !dbg !13870
  br i1 %cmp4, label %for.body, label %for.end, !dbg !13871

for.body:                                         ; preds = %for.cond
  %9 = load %struct.CharInfo*, %struct.CharInfo** %info, align 8, !dbg !13872
  %mat_nr = getelementptr inbounds %struct.CharInfo, %struct.CharInfo* %9, i32 0, i32 1, !dbg !13875
  %10 = load i16, i16* %mat_nr, align 2, !dbg !13875
  %conv6 = sext i16 %10 to i32, !dbg !13872
  %11 = load i32, i32* %max_idx, align 4, !dbg !13876
  %cmp7 = icmp sgt i32 %conv6, %11, !dbg !13877
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !13878

if.then9:                                         ; preds = %for.body
  %12 = load %struct.CharInfo*, %struct.CharInfo** %info, align 8, !dbg !13879
  %mat_nr10 = getelementptr inbounds %struct.CharInfo, %struct.CharInfo* %12, i32 0, i32 1, !dbg !13881
  store i16 0, i16* %mat_nr10, align 2, !dbg !13882
  store i8 0, i8* %is_valid, align 1, !dbg !13883
  br label %if.end, !dbg !13884

if.end:                                           ; preds = %if.then9, %for.body
  br label %for.inc, !dbg !13885

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !dbg !13886
  %dec = add nsw i32 %13, -1, !dbg !13886
  store i32 %dec, i32* %i, align 4, !dbg !13886
  %14 = load %struct.CharInfo*, %struct.CharInfo** %info, align 8, !dbg !13887
  %incdec.ptr = getelementptr inbounds %struct.CharInfo, %struct.CharInfo* %14, i32 1, !dbg !13887
  store %struct.CharInfo* %incdec.ptr, %struct.CharInfo** %info, align 8, !dbg !13887
  br label %for.cond, !dbg !13888, !llvm.loop !13889

for.end:                                          ; preds = %for.cond
  br label %if.end31, !dbg !13891

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !13892, metadata !DIExpression()), !dbg !13894
  call void @llvm.dbg.declare(metadata i32* %max_idx11, metadata !13895, metadata !DIExpression()), !dbg !13896
  %15 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13897
  %totcol12 = getelementptr inbounds %struct.Curve, %struct.Curve* %15, i32 0, i32 22, !dbg !13898
  %16 = load i16, i16* %totcol12, align 2, !dbg !13898
  %conv13 = sext i16 %16 to i32, !dbg !13897
  %sub14 = sub nsw i32 %conv13, 1, !dbg !13899
  %call15 = call i32 @max_ii(i32 0, i32 %sub14), !dbg !13900
  store i32 %call15, i32* %max_idx11, align 4, !dbg !13896
  %17 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13901
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %17, i32 0, i32 3, !dbg !13903
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb, i32 0, i32 0, !dbg !13904
  %18 = load i8*, i8** %first, align 8, !dbg !13904
  %19 = bitcast i8* %18 to %struct.Nurb*, !dbg !13901
  store %struct.Nurb* %19, %struct.Nurb** %nu, align 8, !dbg !13905
  br label %for.cond16, !dbg !13906

for.cond16:                                       ; preds = %for.inc29, %if.else
  %20 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13907
  %tobool = icmp ne %struct.Nurb* %20, null, !dbg !13909
  br i1 %tobool, label %for.body17, label %for.end30, !dbg !13909

for.body17:                                       ; preds = %for.cond16
  %21 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13910
  %mat_nr18 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %21, i32 0, i32 3, !dbg !13913
  %22 = load i16, i16* %mat_nr18, align 2, !dbg !13913
  %conv19 = sext i16 %22 to i32, !dbg !13910
  %23 = load i32, i32* %max_idx11, align 4, !dbg !13914
  %cmp20 = icmp sgt i32 %conv19, %23, !dbg !13915
  br i1 %cmp20, label %if.then22, label %if.end28, !dbg !13916

if.then22:                                        ; preds = %for.body17
  %24 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13917
  %mat_nr23 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %24, i32 0, i32 3, !dbg !13919
  store i16 0, i16* %mat_nr23, align 2, !dbg !13920
  %25 = load i32, i32* %curvetype, align 4, !dbg !13921
  %cmp24 = icmp eq i32 %25, 2, !dbg !13923
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !13924

if.then26:                                        ; preds = %if.then22
  %26 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13925
  %charidx = getelementptr inbounds %struct.Nurb, %struct.Nurb* %26, i32 0, i32 21, !dbg !13927
  store i32 0, i32* %charidx, align 4, !dbg !13928
  br label %if.end27, !dbg !13929

if.end27:                                         ; preds = %if.then26, %if.then22
  store i8 0, i8* %is_valid, align 1, !dbg !13930
  br label %if.end28, !dbg !13931

if.end28:                                         ; preds = %if.end27, %for.body17
  br label %for.inc29, !dbg !13932

for.inc29:                                        ; preds = %if.end28
  %27 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !13933
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %27, i32 0, i32 0, !dbg !13934
  %28 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !13934
  store %struct.Nurb* %28, %struct.Nurb** %nu, align 8, !dbg !13935
  br label %for.cond16, !dbg !13936, !llvm.loop !13937

for.end30:                                        ; preds = %for.cond16
  br label %if.end31

if.end31:                                         ; preds = %for.end30, %for.end
  %29 = load i8, i8* %is_valid, align 1, !dbg !13939
  %tobool32 = icmp ne i8 %29, 0, !dbg !13939
  br i1 %tobool32, label %if.else34, label %if.then33, !dbg !13941

if.then33:                                        ; preds = %if.end31
  %30 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13942
  %id = getelementptr inbounds %struct.Curve, %struct.Curve* %30, i32 0, i32 0, !dbg !13944
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 2), !dbg !13945
  store i32 1, i32* %retval, align 4, !dbg !13946
  br label %return, !dbg !13946

if.else34:                                        ; preds = %if.end31
  store i32 0, i32* %retval, align 4, !dbg !13947
  br label %return, !dbg !13947

return:                                           ; preds = %if.else34, %if.then33
  %31 = load i32, i32* %retval, align 4, !dbg !13949
  ret i32 %31, !dbg !13949
}

declare dso_local void @DAG_id_tag_update(%struct.ID*, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_curve_rect_from_textbox(%struct.Curve* %cu, %struct.TextBox* %tb, %struct.rctf* %r_rect) #0 !dbg !13950 {
entry:
  %cu.addr = alloca %struct.Curve*, align 8
  %tb.addr = alloca %struct.TextBox*, align 8
  %r_rect.addr = alloca %struct.rctf*, align 8
  store %struct.Curve* %cu, %struct.Curve** %cu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu.addr, metadata !13958, metadata !DIExpression()), !dbg !13959
  store %struct.TextBox* %tb, %struct.TextBox** %tb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TextBox** %tb.addr, metadata !13960, metadata !DIExpression()), !dbg !13961
  store %struct.rctf* %r_rect, %struct.rctf** %r_rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %r_rect.addr, metadata !13962, metadata !DIExpression()), !dbg !13963
  %0 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13964
  %xof = getelementptr inbounds %struct.Curve, %struct.Curve* %0, i32 0, i32 44, !dbg !13965
  %1 = load float, float* %xof, align 8, !dbg !13965
  %2 = load %struct.TextBox*, %struct.TextBox** %tb.addr, align 8, !dbg !13966
  %x = getelementptr inbounds %struct.TextBox, %struct.TextBox* %2, i32 0, i32 0, !dbg !13967
  %3 = load float, float* %x, align 4, !dbg !13967
  %add = fadd float %1, %3, !dbg !13968
  %4 = load %struct.rctf*, %struct.rctf** %r_rect.addr, align 8, !dbg !13969
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %4, i32 0, i32 0, !dbg !13970
  store float %add, float* %xmin, align 4, !dbg !13971
  %5 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13972
  %yof = getelementptr inbounds %struct.Curve, %struct.Curve* %5, i32 0, i32 45, !dbg !13973
  %6 = load float, float* %yof, align 4, !dbg !13973
  %7 = load %struct.TextBox*, %struct.TextBox** %tb.addr, align 8, !dbg !13974
  %y = getelementptr inbounds %struct.TextBox, %struct.TextBox* %7, i32 0, i32 1, !dbg !13975
  %8 = load float, float* %y, align 4, !dbg !13975
  %add1 = fadd float %6, %8, !dbg !13976
  %9 = load %struct.Curve*, %struct.Curve** %cu.addr, align 8, !dbg !13977
  %fsize = getelementptr inbounds %struct.Curve, %struct.Curve* %9, i32 0, i32 40, !dbg !13978
  %10 = load float, float* %fsize, align 8, !dbg !13978
  %add2 = fadd float %add1, %10, !dbg !13979
  %11 = load %struct.rctf*, %struct.rctf** %r_rect.addr, align 8, !dbg !13980
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %11, i32 0, i32 3, !dbg !13981
  store float %add2, float* %ymax, align 4, !dbg !13982
  %12 = load %struct.rctf*, %struct.rctf** %r_rect.addr, align 8, !dbg !13983
  %xmin3 = getelementptr inbounds %struct.rctf, %struct.rctf* %12, i32 0, i32 0, !dbg !13984
  %13 = load float, float* %xmin3, align 4, !dbg !13984
  %14 = load %struct.TextBox*, %struct.TextBox** %tb.addr, align 8, !dbg !13985
  %w = getelementptr inbounds %struct.TextBox, %struct.TextBox* %14, i32 0, i32 2, !dbg !13986
  %15 = load float, float* %w, align 4, !dbg !13986
  %add4 = fadd float %13, %15, !dbg !13987
  %16 = load %struct.rctf*, %struct.rctf** %r_rect.addr, align 8, !dbg !13988
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %16, i32 0, i32 1, !dbg !13989
  store float %add4, float* %xmax, align 4, !dbg !13990
  %17 = load %struct.rctf*, %struct.rctf** %r_rect.addr, align 8, !dbg !13991
  %ymax5 = getelementptr inbounds %struct.rctf, %struct.rctf* %17, i32 0, i32 3, !dbg !13992
  %18 = load float, float* %ymax5, align 4, !dbg !13992
  %19 = load %struct.TextBox*, %struct.TextBox** %tb.addr, align 8, !dbg !13993
  %h = getelementptr inbounds %struct.TextBox, %struct.TextBox* %19, i32 0, i32 3, !dbg !13994
  %20 = load float, float* %h, align 4, !dbg !13994
  %sub = fsub float %18, %20, !dbg !13995
  %21 = load %struct.rctf*, %struct.rctf** %r_rect.addr, align 8, !dbg !13996
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %21, i32 0, i32 2, !dbg !13997
  store float %sub, float* %ymin, align 4, !dbg !13998
  ret void, !dbg !13999
}

declare dso_local void @id_lib_extern(%struct.ID*) #2

declare dso_local void @extern_local_matarar(%struct.Material**, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !14000 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !14003, metadata !DIExpression()), !dbg !14004
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !14005, metadata !DIExpression()), !dbg !14006
  call void @llvm.dbg.declare(metadata float* %d, metadata !14007, metadata !DIExpression()), !dbg !14008
  %0 = load float*, float** %a.addr, align 8, !dbg !14009
  %1 = load float*, float** %a.addr, align 8, !dbg !14010
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !14011
  store float %call, float* %d, align 4, !dbg !14008
  %2 = load float, float* %d, align 4, !dbg !14012
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !14014
  br i1 %cmp, label %if.then, label %if.else, !dbg !14015

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !14016
  %call1 = call float @sqrtf(float %3) #5, !dbg !14018
  store float %call1, float* %d, align 4, !dbg !14019
  %4 = load float*, float** %r.addr, align 8, !dbg !14020
  %5 = load float*, float** %a.addr, align 8, !dbg !14021
  %6 = load float, float* %d, align 4, !dbg !14022
  %div = fdiv float 1.000000e+00, %6, !dbg !14023
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !14024
  br label %if.end, !dbg !14025

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !14026
  call void @zero_v3(float* %7), !dbg !14028
  store float 0.000000e+00, float* %d, align 4, !dbg !14029
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !14030
  ret float %8, !dbg !14031
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !14032 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !14033, metadata !DIExpression()), !dbg !14034
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !14035, metadata !DIExpression()), !dbg !14036
  %0 = load float*, float** %a.addr, align 8, !dbg !14037
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !14037
  %1 = load float, float* %arrayidx, align 4, !dbg !14037
  %2 = load float*, float** %b.addr, align 8, !dbg !14038
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !14038
  %3 = load float, float* %arrayidx1, align 4, !dbg !14038
  %mul = fmul float %1, %3, !dbg !14039
  %4 = load float*, float** %a.addr, align 8, !dbg !14040
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !14040
  %5 = load float, float* %arrayidx2, align 4, !dbg !14040
  %6 = load float*, float** %b.addr, align 8, !dbg !14041
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !14041
  %7 = load float, float* %arrayidx3, align 4, !dbg !14041
  %mul4 = fmul float %5, %7, !dbg !14042
  %add = fadd float %mul, %mul4, !dbg !14043
  %8 = load float*, float** %a.addr, align 8, !dbg !14044
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !14044
  %9 = load float, float* %arrayidx5, align 4, !dbg !14044
  %10 = load float*, float** %b.addr, align 8, !dbg !14045
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !14045
  %11 = load float, float* %arrayidx6, align 4, !dbg !14045
  %mul7 = fmul float %9, %11, !dbg !14046
  %add8 = fadd float %add, %mul7, !dbg !14047
  ret float %add8, !dbg !14048
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !14049 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !14050, metadata !DIExpression()), !dbg !14051
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !14052, metadata !DIExpression()), !dbg !14053
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !14054, metadata !DIExpression()), !dbg !14055
  %0 = load float*, float** %a.addr, align 8, !dbg !14056
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !14056
  %1 = load float, float* %arrayidx, align 4, !dbg !14056
  %2 = load float, float* %f.addr, align 4, !dbg !14057
  %mul = fmul float %1, %2, !dbg !14058
  %3 = load float*, float** %r.addr, align 8, !dbg !14059
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !14059
  store float %mul, float* %arrayidx1, align 4, !dbg !14060
  %4 = load float*, float** %a.addr, align 8, !dbg !14061
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !14061
  %5 = load float, float* %arrayidx2, align 4, !dbg !14061
  %6 = load float, float* %f.addr, align 4, !dbg !14062
  %mul3 = fmul float %5, %6, !dbg !14063
  %7 = load float*, float** %r.addr, align 8, !dbg !14064
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !14064
  store float %mul3, float* %arrayidx4, align 4, !dbg !14065
  %8 = load float*, float** %a.addr, align 8, !dbg !14066
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !14066
  %9 = load float, float* %arrayidx5, align 4, !dbg !14066
  %10 = load float, float* %f.addr, align 4, !dbg !14067
  %mul6 = fmul float %9, %10, !dbg !14068
  %11 = load float*, float** %r.addr, align 8, !dbg !14069
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !14069
  store float %mul6, float* %arrayidx7, align 4, !dbg !14070
  ret void, !dbg !14071
}

; Function Attrs: noinline nounwind uwtable
define internal void @calcknots(float* %knots, i32 %pnts, i16 signext %order, i16 signext %flag) #0 !dbg !14072 {
entry:
  %knots.addr = alloca float*, align 8
  %pnts.addr = alloca i32, align 4
  %order.addr = alloca i16, align 2
  %flag.addr = alloca i16, align 2
  %pnts_order = alloca i32, align 4
  %k = alloca float, align 4
  %a = alloca i32, align 4
  store float* %knots, float** %knots.addr, align 8
  call void @llvm.dbg.declare(metadata float** %knots.addr, metadata !14075, metadata !DIExpression()), !dbg !14076
  store i32 %pnts, i32* %pnts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pnts.addr, metadata !14077, metadata !DIExpression()), !dbg !14078
  store i16 %order, i16* %order.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %order.addr, metadata !14079, metadata !DIExpression()), !dbg !14080
  store i16 %flag, i16* %flag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %flag.addr, metadata !14081, metadata !DIExpression()), !dbg !14082
  call void @llvm.dbg.declare(metadata i32* %pnts_order, metadata !14083, metadata !DIExpression()), !dbg !14084
  %0 = load i32, i32* %pnts.addr, align 4, !dbg !14085
  %1 = load i16, i16* %order.addr, align 2, !dbg !14086
  %conv = sext i16 %1 to i32, !dbg !14086
  %add = add nsw i32 %0, %conv, !dbg !14087
  store i32 %add, i32* %pnts_order, align 4, !dbg !14084
  call void @llvm.dbg.declare(metadata float* %k, metadata !14088, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.declare(metadata i32* %a, metadata !14090, metadata !DIExpression()), !dbg !14091
  %2 = load i16, i16* %flag.addr, align 2, !dbg !14092
  %conv1 = sext i16 %2 to i32, !dbg !14092
  %and = and i32 %conv1, 6, !dbg !14093
  switch i32 %and, label %sw.default [
    i32 2, label %sw.bb
    i32 4, label %sw.bb9
  ], !dbg !14094

sw.bb:                                            ; preds = %entry
  store float 0.000000e+00, float* %k, align 4, !dbg !14095
  store i32 1, i32* %a, align 4, !dbg !14097
  br label %for.cond, !dbg !14099

for.cond:                                         ; preds = %for.inc, %sw.bb
  %3 = load i32, i32* %a, align 4, !dbg !14100
  %4 = load i32, i32* %pnts_order, align 4, !dbg !14102
  %cmp = icmp sle i32 %3, %4, !dbg !14103
  br i1 %cmp, label %for.body, label %for.end, !dbg !14104

for.body:                                         ; preds = %for.cond
  %5 = load float, float* %k, align 4, !dbg !14105
  %6 = load float*, float** %knots.addr, align 8, !dbg !14107
  %7 = load i32, i32* %a, align 4, !dbg !14108
  %sub = sub nsw i32 %7, 1, !dbg !14109
  %idxprom = sext i32 %sub to i64, !dbg !14107
  %arrayidx = getelementptr inbounds float, float* %6, i64 %idxprom, !dbg !14107
  store float %5, float* %arrayidx, align 4, !dbg !14110
  %8 = load i32, i32* %a, align 4, !dbg !14111
  %9 = load i16, i16* %order.addr, align 2, !dbg !14113
  %conv3 = sext i16 %9 to i32, !dbg !14113
  %cmp4 = icmp sge i32 %8, %conv3, !dbg !14114
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !14115

land.lhs.true:                                    ; preds = %for.body
  %10 = load i32, i32* %a, align 4, !dbg !14116
  %11 = load i32, i32* %pnts.addr, align 4, !dbg !14117
  %cmp6 = icmp sle i32 %10, %11, !dbg !14118
  br i1 %cmp6, label %if.then, label %if.end, !dbg !14119

if.then:                                          ; preds = %land.lhs.true
  %12 = load float, float* %k, align 4, !dbg !14120
  %add8 = fadd float %12, 1.000000e+00, !dbg !14120
  store float %add8, float* %k, align 4, !dbg !14120
  br label %if.end, !dbg !14121

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !14122

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %a, align 4, !dbg !14123
  %inc = add nsw i32 %13, 1, !dbg !14123
  store i32 %inc, i32* %a, align 4, !dbg !14123
  br label %for.cond, !dbg !14124, !llvm.loop !14125

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !14127

sw.bb9:                                           ; preds = %entry
  %14 = load i16, i16* %order.addr, align 2, !dbg !14128
  %conv10 = sext i16 %14 to i32, !dbg !14128
  %cmp11 = icmp eq i32 %conv10, 4, !dbg !14130
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !14131

if.then13:                                        ; preds = %sw.bb9
  store float 0x3FD5C28F60000000, float* %k, align 4, !dbg !14132
  store i32 0, i32* %a, align 4, !dbg !14134
  br label %for.cond14, !dbg !14136

for.cond14:                                       ; preds = %for.inc21, %if.then13
  %15 = load i32, i32* %a, align 4, !dbg !14137
  %16 = load i32, i32* %pnts_order, align 4, !dbg !14139
  %cmp15 = icmp slt i32 %15, %16, !dbg !14140
  br i1 %cmp15, label %for.body17, label %for.end23, !dbg !14141

for.body17:                                       ; preds = %for.cond14
  %17 = load float, float* %k, align 4, !dbg !14142
  %18 = call float @llvm.floor.f32(float %17), !dbg !14144
  %19 = load float*, float** %knots.addr, align 8, !dbg !14145
  %20 = load i32, i32* %a, align 4, !dbg !14146
  %idxprom18 = sext i32 %20 to i64, !dbg !14145
  %arrayidx19 = getelementptr inbounds float, float* %19, i64 %idxprom18, !dbg !14145
  store float %18, float* %arrayidx19, align 4, !dbg !14147
  %21 = load float, float* %k, align 4, !dbg !14148
  %add20 = fadd float %21, 0x3FD5555560000000, !dbg !14148
  store float %add20, float* %k, align 4, !dbg !14148
  br label %for.inc21, !dbg !14149

for.inc21:                                        ; preds = %for.body17
  %22 = load i32, i32* %a, align 4, !dbg !14150
  %inc22 = add nsw i32 %22, 1, !dbg !14150
  store i32 %inc22, i32* %a, align 4, !dbg !14150
  br label %for.cond14, !dbg !14151, !llvm.loop !14152

for.end23:                                        ; preds = %for.cond14
  br label %if.end48, !dbg !14154

if.else:                                          ; preds = %sw.bb9
  %23 = load i16, i16* %order.addr, align 2, !dbg !14155
  %conv24 = sext i16 %23 to i32, !dbg !14155
  %cmp25 = icmp eq i32 %conv24, 3, !dbg !14157
  br i1 %cmp25, label %if.then27, label %if.else46, !dbg !14158

if.then27:                                        ; preds = %if.else
  store float 0x3FE3333340000000, float* %k, align 4, !dbg !14159
  store i32 0, i32* %a, align 4, !dbg !14161
  br label %for.cond28, !dbg !14163

for.cond28:                                       ; preds = %for.inc43, %if.then27
  %24 = load i32, i32* %a, align 4, !dbg !14164
  %25 = load i32, i32* %pnts_order, align 4, !dbg !14166
  %cmp29 = icmp slt i32 %24, %25, !dbg !14167
  br i1 %cmp29, label %for.body31, label %for.end45, !dbg !14168

for.body31:                                       ; preds = %for.cond28
  %26 = load i32, i32* %a, align 4, !dbg !14169
  %27 = load i16, i16* %order.addr, align 2, !dbg !14172
  %conv32 = sext i16 %27 to i32, !dbg !14172
  %cmp33 = icmp sge i32 %26, %conv32, !dbg !14173
  br i1 %cmp33, label %land.lhs.true35, label %if.end40, !dbg !14174

land.lhs.true35:                                  ; preds = %for.body31
  %28 = load i32, i32* %a, align 4, !dbg !14175
  %29 = load i32, i32* %pnts.addr, align 4, !dbg !14176
  %cmp36 = icmp sle i32 %28, %29, !dbg !14177
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !14178

if.then38:                                        ; preds = %land.lhs.true35
  %30 = load float, float* %k, align 4, !dbg !14179
  %add39 = fadd float %30, 5.000000e-01, !dbg !14179
  store float %add39, float* %k, align 4, !dbg !14179
  br label %if.end40, !dbg !14180

if.end40:                                         ; preds = %if.then38, %land.lhs.true35, %for.body31
  %31 = load float, float* %k, align 4, !dbg !14181
  %32 = call float @llvm.floor.f32(float %31), !dbg !14182
  %33 = load float*, float** %knots.addr, align 8, !dbg !14183
  %34 = load i32, i32* %a, align 4, !dbg !14184
  %idxprom41 = sext i32 %34 to i64, !dbg !14183
  %arrayidx42 = getelementptr inbounds float, float* %33, i64 %idxprom41, !dbg !14183
  store float %32, float* %arrayidx42, align 4, !dbg !14185
  br label %for.inc43, !dbg !14186

for.inc43:                                        ; preds = %if.end40
  %35 = load i32, i32* %a, align 4, !dbg !14187
  %inc44 = add nsw i32 %35, 1, !dbg !14187
  store i32 %inc44, i32* %a, align 4, !dbg !14187
  br label %for.cond28, !dbg !14188, !llvm.loop !14189

for.end45:                                        ; preds = %for.cond28
  br label %if.end47, !dbg !14191

if.else46:                                        ; preds = %if.else
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.44, i64 0, i64 0)), !dbg !14192
  br label %if.end47

if.end47:                                         ; preds = %if.else46, %for.end45
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %for.end23
  br label %sw.epilog, !dbg !14194

sw.default:                                       ; preds = %entry
  store i32 0, i32* %a, align 4, !dbg !14195
  br label %for.cond49, !dbg !14197

for.cond49:                                       ; preds = %for.inc56, %sw.default
  %36 = load i32, i32* %a, align 4, !dbg !14198
  %37 = load i32, i32* %pnts_order, align 4, !dbg !14200
  %cmp50 = icmp slt i32 %36, %37, !dbg !14201
  br i1 %cmp50, label %for.body52, label %for.end58, !dbg !14202

for.body52:                                       ; preds = %for.cond49
  %38 = load i32, i32* %a, align 4, !dbg !14203
  %conv53 = sitofp i32 %38 to float, !dbg !14205
  %39 = load float*, float** %knots.addr, align 8, !dbg !14206
  %40 = load i32, i32* %a, align 4, !dbg !14207
  %idxprom54 = sext i32 %40 to i64, !dbg !14206
  %arrayidx55 = getelementptr inbounds float, float* %39, i64 %idxprom54, !dbg !14206
  store float %conv53, float* %arrayidx55, align 4, !dbg !14208
  br label %for.inc56, !dbg !14209

for.inc56:                                        ; preds = %for.body52
  %41 = load i32, i32* %a, align 4, !dbg !14210
  %inc57 = add nsw i32 %41, 1, !dbg !14210
  store i32 %inc57, i32* %a, align 4, !dbg !14210
  br label %for.cond49, !dbg !14211, !llvm.loop !14212

for.end58:                                        ; preds = %for.cond49
  br label %sw.epilog, !dbg !14214

sw.epilog:                                        ; preds = %for.end58, %if.end48, %for.end
  ret void, !dbg !14215
}

; Function Attrs: noinline nounwind uwtable
define internal void @makecyclicknots(float* %knots, i32 %pnts, i16 signext %order) #0 !dbg !14216 {
entry:
  %knots.addr = alloca float*, align 8
  %pnts.addr = alloca i32, align 4
  %order.addr = alloca i16, align 2
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %order2 = alloca i32, align 4
  %c = alloca i32, align 4
  store float* %knots, float** %knots.addr, align 8
  call void @llvm.dbg.declare(metadata float** %knots.addr, metadata !14219, metadata !DIExpression()), !dbg !14220
  store i32 %pnts, i32* %pnts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pnts.addr, metadata !14221, metadata !DIExpression()), !dbg !14222
  store i16 %order, i16* %order.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %order.addr, metadata !14223, metadata !DIExpression()), !dbg !14224
  call void @llvm.dbg.declare(metadata i32* %a, metadata !14225, metadata !DIExpression()), !dbg !14226
  call void @llvm.dbg.declare(metadata i32* %b, metadata !14227, metadata !DIExpression()), !dbg !14228
  call void @llvm.dbg.declare(metadata i32* %order2, metadata !14229, metadata !DIExpression()), !dbg !14230
  call void @llvm.dbg.declare(metadata i32* %c, metadata !14231, metadata !DIExpression()), !dbg !14232
  %0 = load float*, float** %knots.addr, align 8, !dbg !14233
  %cmp = icmp eq float* %0, null, !dbg !14235
  br i1 %cmp, label %if.then, label %if.end, !dbg !14236

if.then:                                          ; preds = %entry
  br label %for.end48, !dbg !14237

if.end:                                           ; preds = %entry
  %1 = load i16, i16* %order.addr, align 2, !dbg !14238
  %conv = sext i16 %1 to i32, !dbg !14238
  %sub = sub nsw i32 %conv, 1, !dbg !14239
  store i32 %sub, i32* %order2, align 4, !dbg !14240
  %2 = load i16, i16* %order.addr, align 2, !dbg !14241
  %conv1 = sext i16 %2 to i32, !dbg !14241
  %cmp2 = icmp sgt i32 %conv1, 2, !dbg !14243
  br i1 %cmp2, label %if.then4, label %if.end24, !dbg !14244

if.then4:                                         ; preds = %if.end
  %3 = load i32, i32* %pnts.addr, align 4, !dbg !14245
  %4 = load i32, i32* %order2, align 4, !dbg !14247
  %add = add nsw i32 %3, %4, !dbg !14248
  store i32 %add, i32* %b, align 4, !dbg !14249
  store i32 1, i32* %a, align 4, !dbg !14250
  br label %for.cond, !dbg !14252

for.cond:                                         ; preds = %for.inc, %if.then4
  %5 = load i32, i32* %a, align 4, !dbg !14253
  %6 = load i32, i32* %order2, align 4, !dbg !14255
  %cmp5 = icmp slt i32 %5, %6, !dbg !14256
  br i1 %cmp5, label %for.body, label %for.end, !dbg !14257

for.body:                                         ; preds = %for.cond
  %7 = load float*, float** %knots.addr, align 8, !dbg !14258
  %8 = load i32, i32* %b, align 4, !dbg !14261
  %idxprom = sext i32 %8 to i64, !dbg !14258
  %arrayidx = getelementptr inbounds float, float* %7, i64 %idxprom, !dbg !14258
  %9 = load float, float* %arrayidx, align 4, !dbg !14258
  %10 = load float*, float** %knots.addr, align 8, !dbg !14262
  %11 = load i32, i32* %b, align 4, !dbg !14263
  %12 = load i32, i32* %a, align 4, !dbg !14264
  %sub7 = sub nsw i32 %11, %12, !dbg !14265
  %idxprom8 = sext i32 %sub7 to i64, !dbg !14262
  %arrayidx9 = getelementptr inbounds float, float* %10, i64 %idxprom8, !dbg !14262
  %13 = load float, float* %arrayidx9, align 4, !dbg !14262
  %cmp10 = fcmp une float %9, %13, !dbg !14266
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !14267

if.then12:                                        ; preds = %for.body
  br label %for.end, !dbg !14268

if.end13:                                         ; preds = %for.body
  br label %for.inc, !dbg !14269

for.inc:                                          ; preds = %if.end13
  %14 = load i32, i32* %a, align 4, !dbg !14270
  %inc = add nsw i32 %14, 1, !dbg !14270
  store i32 %inc, i32* %a, align 4, !dbg !14270
  br label %for.cond, !dbg !14271, !llvm.loop !14272

for.end:                                          ; preds = %if.then12, %for.cond
  %15 = load i32, i32* %a, align 4, !dbg !14274
  %16 = load i32, i32* %order2, align 4, !dbg !14276
  %cmp14 = icmp eq i32 %15, %16, !dbg !14277
  br i1 %cmp14, label %if.then16, label %if.end23, !dbg !14278

if.then16:                                        ; preds = %for.end
  %17 = load float*, float** %knots.addr, align 8, !dbg !14279
  %18 = load i32, i32* %pnts.addr, align 4, !dbg !14280
  %19 = load i16, i16* %order.addr, align 2, !dbg !14281
  %conv17 = sext i16 %19 to i32, !dbg !14281
  %add18 = add nsw i32 %18, %conv17, !dbg !14282
  %sub19 = sub nsw i32 %add18, 2, !dbg !14283
  %idxprom20 = sext i32 %sub19 to i64, !dbg !14279
  %arrayidx21 = getelementptr inbounds float, float* %17, i64 %idxprom20, !dbg !14279
  %20 = load float, float* %arrayidx21, align 4, !dbg !14284
  %add22 = fadd float %20, 1.000000e+00, !dbg !14284
  store float %add22, float* %arrayidx21, align 4, !dbg !14284
  br label %if.end23, !dbg !14279

if.end23:                                         ; preds = %if.then16, %for.end
  br label %if.end24, !dbg !14285

if.end24:                                         ; preds = %if.end23, %if.end
  %21 = load i16, i16* %order.addr, align 2, !dbg !14286
  %conv25 = sext i16 %21 to i32, !dbg !14286
  store i32 %conv25, i32* %b, align 4, !dbg !14287
  %22 = load i32, i32* %pnts.addr, align 4, !dbg !14288
  %23 = load i16, i16* %order.addr, align 2, !dbg !14289
  %conv26 = sext i16 %23 to i32, !dbg !14289
  %add27 = add nsw i32 %22, %conv26, !dbg !14290
  %24 = load i32, i32* %order2, align 4, !dbg !14291
  %add28 = add nsw i32 %add27, %24, !dbg !14292
  store i32 %add28, i32* %c, align 4, !dbg !14293
  %25 = load i32, i32* %pnts.addr, align 4, !dbg !14294
  %26 = load i32, i32* %order2, align 4, !dbg !14296
  %add29 = add nsw i32 %25, %26, !dbg !14297
  store i32 %add29, i32* %a, align 4, !dbg !14298
  br label %for.cond30, !dbg !14299

for.cond30:                                       ; preds = %for.inc46, %if.end24
  %27 = load i32, i32* %a, align 4, !dbg !14300
  %28 = load i32, i32* %c, align 4, !dbg !14302
  %cmp31 = icmp slt i32 %27, %28, !dbg !14303
  br i1 %cmp31, label %for.body33, label %for.end48, !dbg !14304

for.body33:                                       ; preds = %for.cond30
  %29 = load float*, float** %knots.addr, align 8, !dbg !14305
  %30 = load i32, i32* %a, align 4, !dbg !14307
  %sub34 = sub nsw i32 %30, 1, !dbg !14308
  %idxprom35 = sext i32 %sub34 to i64, !dbg !14305
  %arrayidx36 = getelementptr inbounds float, float* %29, i64 %idxprom35, !dbg !14305
  %31 = load float, float* %arrayidx36, align 4, !dbg !14305
  %32 = load float*, float** %knots.addr, align 8, !dbg !14309
  %33 = load i32, i32* %b, align 4, !dbg !14310
  %idxprom37 = sext i32 %33 to i64, !dbg !14309
  %arrayidx38 = getelementptr inbounds float, float* %32, i64 %idxprom37, !dbg !14309
  %34 = load float, float* %arrayidx38, align 4, !dbg !14309
  %35 = load float*, float** %knots.addr, align 8, !dbg !14311
  %36 = load i32, i32* %b, align 4, !dbg !14312
  %sub39 = sub nsw i32 %36, 1, !dbg !14313
  %idxprom40 = sext i32 %sub39 to i64, !dbg !14311
  %arrayidx41 = getelementptr inbounds float, float* %35, i64 %idxprom40, !dbg !14311
  %37 = load float, float* %arrayidx41, align 4, !dbg !14311
  %sub42 = fsub float %34, %37, !dbg !14314
  %add43 = fadd float %31, %sub42, !dbg !14315
  %38 = load float*, float** %knots.addr, align 8, !dbg !14316
  %39 = load i32, i32* %a, align 4, !dbg !14317
  %idxprom44 = sext i32 %39 to i64, !dbg !14316
  %arrayidx45 = getelementptr inbounds float, float* %38, i64 %idxprom44, !dbg !14316
  store float %add43, float* %arrayidx45, align 4, !dbg !14318
  %40 = load i32, i32* %b, align 4, !dbg !14319
  %dec = add nsw i32 %40, -1, !dbg !14319
  store i32 %dec, i32* %b, align 4, !dbg !14319
  br label %for.inc46, !dbg !14320

for.inc46:                                        ; preds = %for.body33
  %41 = load i32, i32* %a, align 4, !dbg !14321
  %inc47 = add nsw i32 %41, 1, !dbg !14321
  store i32 %inc47, i32* %a, align 4, !dbg !14321
  br label %for.cond30, !dbg !14322, !llvm.loop !14323

for.end48:                                        ; preds = %if.then, %for.cond30
  ret void, !dbg !14325
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.floor.f32(float) #1

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !14326 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !14329, metadata !DIExpression()), !dbg !14330
  %0 = load float*, float** %a.addr, align 8, !dbg !14331
  %1 = load float*, float** %a.addr, align 8, !dbg !14332
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !14333
  %call1 = call float @sqrtf(float %call) #5, !dbg !14334
  ret float %call1, !dbg !14335
}

declare dso_local void @key_curve_position_weights(float, float*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @cu_isectLL(float* %v1, float* %v2, float* %v3, float* %v4, i16 signext %cox, i16 signext %coy, float* %lambda, float* %mu, float* %vec) #0 !dbg !14336 {
entry:
  %retval = alloca i32, align 4
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  %v3.addr = alloca float*, align 8
  %v4.addr = alloca float*, align 8
  %cox.addr = alloca i16, align 2
  %coy.addr = alloca i16, align 2
  %lambda.addr = alloca float*, align 8
  %mu.addr = alloca float*, align 8
  %vec.addr = alloca float*, align 8
  %deler = alloca float, align 4
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !14339, metadata !DIExpression()), !dbg !14340
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !14341, metadata !DIExpression()), !dbg !14342
  store float* %v3, float** %v3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v3.addr, metadata !14343, metadata !DIExpression()), !dbg !14344
  store float* %v4, float** %v4.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v4.addr, metadata !14345, metadata !DIExpression()), !dbg !14346
  store i16 %cox, i16* %cox.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %cox.addr, metadata !14347, metadata !DIExpression()), !dbg !14348
  store i16 %coy, i16* %coy.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %coy.addr, metadata !14349, metadata !DIExpression()), !dbg !14350
  store float* %lambda, float** %lambda.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lambda.addr, metadata !14351, metadata !DIExpression()), !dbg !14352
  store float* %mu, float** %mu.addr, align 8
  call void @llvm.dbg.declare(metadata float** %mu.addr, metadata !14353, metadata !DIExpression()), !dbg !14354
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !14355, metadata !DIExpression()), !dbg !14356
  call void @llvm.dbg.declare(metadata float* %deler, metadata !14357, metadata !DIExpression()), !dbg !14358
  %0 = load float*, float** %v1.addr, align 8, !dbg !14359
  %1 = load i16, i16* %cox.addr, align 2, !dbg !14360
  %idxprom = sext i16 %1 to i64, !dbg !14359
  %arrayidx = getelementptr inbounds float, float* %0, i64 %idxprom, !dbg !14359
  %2 = load float, float* %arrayidx, align 4, !dbg !14359
  %3 = load float*, float** %v2.addr, align 8, !dbg !14361
  %4 = load i16, i16* %cox.addr, align 2, !dbg !14362
  %idxprom1 = sext i16 %4 to i64, !dbg !14361
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 %idxprom1, !dbg !14361
  %5 = load float, float* %arrayidx2, align 4, !dbg !14361
  %sub = fsub float %2, %5, !dbg !14363
  %6 = load float*, float** %v3.addr, align 8, !dbg !14364
  %7 = load i16, i16* %coy.addr, align 2, !dbg !14365
  %idxprom3 = sext i16 %7 to i64, !dbg !14364
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 %idxprom3, !dbg !14364
  %8 = load float, float* %arrayidx4, align 4, !dbg !14364
  %9 = load float*, float** %v4.addr, align 8, !dbg !14366
  %10 = load i16, i16* %coy.addr, align 2, !dbg !14367
  %idxprom5 = sext i16 %10 to i64, !dbg !14366
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 %idxprom5, !dbg !14366
  %11 = load float, float* %arrayidx6, align 4, !dbg !14366
  %sub7 = fsub float %8, %11, !dbg !14368
  %mul = fmul float %sub, %sub7, !dbg !14369
  %12 = load float*, float** %v3.addr, align 8, !dbg !14370
  %13 = load i16, i16* %cox.addr, align 2, !dbg !14371
  %idxprom8 = sext i16 %13 to i64, !dbg !14370
  %arrayidx9 = getelementptr inbounds float, float* %12, i64 %idxprom8, !dbg !14370
  %14 = load float, float* %arrayidx9, align 4, !dbg !14370
  %15 = load float*, float** %v4.addr, align 8, !dbg !14372
  %16 = load i16, i16* %cox.addr, align 2, !dbg !14373
  %idxprom10 = sext i16 %16 to i64, !dbg !14372
  %arrayidx11 = getelementptr inbounds float, float* %15, i64 %idxprom10, !dbg !14372
  %17 = load float, float* %arrayidx11, align 4, !dbg !14372
  %sub12 = fsub float %14, %17, !dbg !14374
  %18 = load float*, float** %v1.addr, align 8, !dbg !14375
  %19 = load i16, i16* %coy.addr, align 2, !dbg !14376
  %idxprom13 = sext i16 %19 to i64, !dbg !14375
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 %idxprom13, !dbg !14375
  %20 = load float, float* %arrayidx14, align 4, !dbg !14375
  %21 = load float*, float** %v2.addr, align 8, !dbg !14377
  %22 = load i16, i16* %coy.addr, align 2, !dbg !14378
  %idxprom15 = sext i16 %22 to i64, !dbg !14377
  %arrayidx16 = getelementptr inbounds float, float* %21, i64 %idxprom15, !dbg !14377
  %23 = load float, float* %arrayidx16, align 4, !dbg !14377
  %sub17 = fsub float %20, %23, !dbg !14379
  %mul18 = fmul float %sub12, %sub17, !dbg !14380
  %sub19 = fsub float %mul, %mul18, !dbg !14381
  store float %sub19, float* %deler, align 4, !dbg !14382
  %24 = load float, float* %deler, align 4, !dbg !14383
  %cmp = fcmp oeq float %24, 0.000000e+00, !dbg !14385
  br i1 %cmp, label %if.then, label %if.end, !dbg !14386

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !14387
  br label %return, !dbg !14387

if.end:                                           ; preds = %entry
  %25 = load float*, float** %v1.addr, align 8, !dbg !14388
  %26 = load i16, i16* %coy.addr, align 2, !dbg !14389
  %idxprom20 = sext i16 %26 to i64, !dbg !14388
  %arrayidx21 = getelementptr inbounds float, float* %25, i64 %idxprom20, !dbg !14388
  %27 = load float, float* %arrayidx21, align 4, !dbg !14388
  %28 = load float*, float** %v3.addr, align 8, !dbg !14390
  %29 = load i16, i16* %coy.addr, align 2, !dbg !14391
  %idxprom22 = sext i16 %29 to i64, !dbg !14390
  %arrayidx23 = getelementptr inbounds float, float* %28, i64 %idxprom22, !dbg !14390
  %30 = load float, float* %arrayidx23, align 4, !dbg !14390
  %sub24 = fsub float %27, %30, !dbg !14392
  %31 = load float*, float** %v3.addr, align 8, !dbg !14393
  %32 = load i16, i16* %cox.addr, align 2, !dbg !14394
  %idxprom25 = sext i16 %32 to i64, !dbg !14393
  %arrayidx26 = getelementptr inbounds float, float* %31, i64 %idxprom25, !dbg !14393
  %33 = load float, float* %arrayidx26, align 4, !dbg !14393
  %34 = load float*, float** %v4.addr, align 8, !dbg !14395
  %35 = load i16, i16* %cox.addr, align 2, !dbg !14396
  %idxprom27 = sext i16 %35 to i64, !dbg !14395
  %arrayidx28 = getelementptr inbounds float, float* %34, i64 %idxprom27, !dbg !14395
  %36 = load float, float* %arrayidx28, align 4, !dbg !14395
  %sub29 = fsub float %33, %36, !dbg !14397
  %mul30 = fmul float %sub24, %sub29, !dbg !14398
  %37 = load float*, float** %v1.addr, align 8, !dbg !14399
  %38 = load i16, i16* %cox.addr, align 2, !dbg !14400
  %idxprom31 = sext i16 %38 to i64, !dbg !14399
  %arrayidx32 = getelementptr inbounds float, float* %37, i64 %idxprom31, !dbg !14399
  %39 = load float, float* %arrayidx32, align 4, !dbg !14399
  %40 = load float*, float** %v3.addr, align 8, !dbg !14401
  %41 = load i16, i16* %cox.addr, align 2, !dbg !14402
  %idxprom33 = sext i16 %41 to i64, !dbg !14401
  %arrayidx34 = getelementptr inbounds float, float* %40, i64 %idxprom33, !dbg !14401
  %42 = load float, float* %arrayidx34, align 4, !dbg !14401
  %sub35 = fsub float %39, %42, !dbg !14403
  %43 = load float*, float** %v3.addr, align 8, !dbg !14404
  %44 = load i16, i16* %coy.addr, align 2, !dbg !14405
  %idxprom36 = sext i16 %44 to i64, !dbg !14404
  %arrayidx37 = getelementptr inbounds float, float* %43, i64 %idxprom36, !dbg !14404
  %45 = load float, float* %arrayidx37, align 4, !dbg !14404
  %46 = load float*, float** %v4.addr, align 8, !dbg !14406
  %47 = load i16, i16* %coy.addr, align 2, !dbg !14407
  %idxprom38 = sext i16 %47 to i64, !dbg !14406
  %arrayidx39 = getelementptr inbounds float, float* %46, i64 %idxprom38, !dbg !14406
  %48 = load float, float* %arrayidx39, align 4, !dbg !14406
  %sub40 = fsub float %45, %48, !dbg !14408
  %mul41 = fmul float %sub35, %sub40, !dbg !14409
  %sub42 = fsub float %mul30, %mul41, !dbg !14410
  %49 = load float*, float** %lambda.addr, align 8, !dbg !14411
  store float %sub42, float* %49, align 4, !dbg !14412
  %50 = load float*, float** %lambda.addr, align 8, !dbg !14413
  %51 = load float, float* %50, align 4, !dbg !14414
  %52 = load float, float* %deler, align 4, !dbg !14415
  %div = fdiv float %51, %52, !dbg !14416
  %fneg = fneg float %div, !dbg !14417
  %53 = load float*, float** %lambda.addr, align 8, !dbg !14418
  store float %fneg, float* %53, align 4, !dbg !14419
  %54 = load float*, float** %v3.addr, align 8, !dbg !14420
  %55 = load i16, i16* %coy.addr, align 2, !dbg !14421
  %idxprom43 = sext i16 %55 to i64, !dbg !14420
  %arrayidx44 = getelementptr inbounds float, float* %54, i64 %idxprom43, !dbg !14420
  %56 = load float, float* %arrayidx44, align 4, !dbg !14420
  %57 = load float*, float** %v4.addr, align 8, !dbg !14422
  %58 = load i16, i16* %coy.addr, align 2, !dbg !14423
  %idxprom45 = sext i16 %58 to i64, !dbg !14422
  %arrayidx46 = getelementptr inbounds float, float* %57, i64 %idxprom45, !dbg !14422
  %59 = load float, float* %arrayidx46, align 4, !dbg !14422
  %sub47 = fsub float %56, %59, !dbg !14424
  store float %sub47, float* %deler, align 4, !dbg !14425
  %60 = load float, float* %deler, align 4, !dbg !14426
  %cmp48 = fcmp oeq float %60, 0.000000e+00, !dbg !14428
  br i1 %cmp48, label %if.then49, label %if.else, !dbg !14429

if.then49:                                        ; preds = %if.end
  %61 = load float*, float** %v3.addr, align 8, !dbg !14430
  %62 = load i16, i16* %cox.addr, align 2, !dbg !14432
  %idxprom50 = sext i16 %62 to i64, !dbg !14430
  %arrayidx51 = getelementptr inbounds float, float* %61, i64 %idxprom50, !dbg !14430
  %63 = load float, float* %arrayidx51, align 4, !dbg !14430
  %64 = load float*, float** %v4.addr, align 8, !dbg !14433
  %65 = load i16, i16* %cox.addr, align 2, !dbg !14434
  %idxprom52 = sext i16 %65 to i64, !dbg !14433
  %arrayidx53 = getelementptr inbounds float, float* %64, i64 %idxprom52, !dbg !14433
  %66 = load float, float* %arrayidx53, align 4, !dbg !14433
  %sub54 = fsub float %63, %66, !dbg !14435
  store float %sub54, float* %deler, align 4, !dbg !14436
  %67 = load float*, float** %lambda.addr, align 8, !dbg !14437
  %68 = load float, float* %67, align 4, !dbg !14438
  %69 = load float*, float** %v2.addr, align 8, !dbg !14439
  %70 = load i16, i16* %cox.addr, align 2, !dbg !14440
  %idxprom55 = sext i16 %70 to i64, !dbg !14439
  %arrayidx56 = getelementptr inbounds float, float* %69, i64 %idxprom55, !dbg !14439
  %71 = load float, float* %arrayidx56, align 4, !dbg !14439
  %72 = load float*, float** %v1.addr, align 8, !dbg !14441
  %73 = load i16, i16* %cox.addr, align 2, !dbg !14442
  %idxprom57 = sext i16 %73 to i64, !dbg !14441
  %arrayidx58 = getelementptr inbounds float, float* %72, i64 %idxprom57, !dbg !14441
  %74 = load float, float* %arrayidx58, align 4, !dbg !14441
  %sub59 = fsub float %71, %74, !dbg !14443
  %mul60 = fmul float %68, %sub59, !dbg !14444
  %75 = load float*, float** %v1.addr, align 8, !dbg !14445
  %76 = load i16, i16* %cox.addr, align 2, !dbg !14446
  %idxprom61 = sext i16 %76 to i64, !dbg !14445
  %arrayidx62 = getelementptr inbounds float, float* %75, i64 %idxprom61, !dbg !14445
  %77 = load float, float* %arrayidx62, align 4, !dbg !14445
  %add = fadd float %mul60, %77, !dbg !14447
  %78 = load float*, float** %v3.addr, align 8, !dbg !14448
  %79 = load i16, i16* %cox.addr, align 2, !dbg !14449
  %idxprom63 = sext i16 %79 to i64, !dbg !14448
  %arrayidx64 = getelementptr inbounds float, float* %78, i64 %idxprom63, !dbg !14448
  %80 = load float, float* %arrayidx64, align 4, !dbg !14448
  %sub65 = fsub float %add, %80, !dbg !14450
  %fneg66 = fneg float %sub65, !dbg !14451
  %81 = load float, float* %deler, align 4, !dbg !14452
  %div67 = fdiv float %fneg66, %81, !dbg !14453
  %82 = load float*, float** %mu.addr, align 8, !dbg !14454
  store float %div67, float* %82, align 4, !dbg !14455
  br label %if.end82, !dbg !14456

if.else:                                          ; preds = %if.end
  %83 = load float*, float** %lambda.addr, align 8, !dbg !14457
  %84 = load float, float* %83, align 4, !dbg !14459
  %85 = load float*, float** %v2.addr, align 8, !dbg !14460
  %86 = load i16, i16* %coy.addr, align 2, !dbg !14461
  %idxprom68 = sext i16 %86 to i64, !dbg !14460
  %arrayidx69 = getelementptr inbounds float, float* %85, i64 %idxprom68, !dbg !14460
  %87 = load float, float* %arrayidx69, align 4, !dbg !14460
  %88 = load float*, float** %v1.addr, align 8, !dbg !14462
  %89 = load i16, i16* %coy.addr, align 2, !dbg !14463
  %idxprom70 = sext i16 %89 to i64, !dbg !14462
  %arrayidx71 = getelementptr inbounds float, float* %88, i64 %idxprom70, !dbg !14462
  %90 = load float, float* %arrayidx71, align 4, !dbg !14462
  %sub72 = fsub float %87, %90, !dbg !14464
  %mul73 = fmul float %84, %sub72, !dbg !14465
  %91 = load float*, float** %v1.addr, align 8, !dbg !14466
  %92 = load i16, i16* %coy.addr, align 2, !dbg !14467
  %idxprom74 = sext i16 %92 to i64, !dbg !14466
  %arrayidx75 = getelementptr inbounds float, float* %91, i64 %idxprom74, !dbg !14466
  %93 = load float, float* %arrayidx75, align 4, !dbg !14466
  %add76 = fadd float %mul73, %93, !dbg !14468
  %94 = load float*, float** %v3.addr, align 8, !dbg !14469
  %95 = load i16, i16* %coy.addr, align 2, !dbg !14470
  %idxprom77 = sext i16 %95 to i64, !dbg !14469
  %arrayidx78 = getelementptr inbounds float, float* %94, i64 %idxprom77, !dbg !14469
  %96 = load float, float* %arrayidx78, align 4, !dbg !14469
  %sub79 = fsub float %add76, %96, !dbg !14471
  %fneg80 = fneg float %sub79, !dbg !14472
  %97 = load float, float* %deler, align 4, !dbg !14473
  %div81 = fdiv float %fneg80, %97, !dbg !14474
  %98 = load float*, float** %mu.addr, align 8, !dbg !14475
  store float %div81, float* %98, align 4, !dbg !14476
  br label %if.end82

if.end82:                                         ; preds = %if.else, %if.then49
  %99 = load float*, float** %lambda.addr, align 8, !dbg !14477
  %100 = load float, float* %99, align 4, !dbg !14478
  %101 = load float*, float** %v2.addr, align 8, !dbg !14479
  %102 = load i16, i16* %cox.addr, align 2, !dbg !14480
  %idxprom83 = sext i16 %102 to i64, !dbg !14479
  %arrayidx84 = getelementptr inbounds float, float* %101, i64 %idxprom83, !dbg !14479
  %103 = load float, float* %arrayidx84, align 4, !dbg !14479
  %104 = load float*, float** %v1.addr, align 8, !dbg !14481
  %105 = load i16, i16* %cox.addr, align 2, !dbg !14482
  %idxprom85 = sext i16 %105 to i64, !dbg !14481
  %arrayidx86 = getelementptr inbounds float, float* %104, i64 %idxprom85, !dbg !14481
  %106 = load float, float* %arrayidx86, align 4, !dbg !14481
  %sub87 = fsub float %103, %106, !dbg !14483
  %mul88 = fmul float %100, %sub87, !dbg !14484
  %107 = load float*, float** %v1.addr, align 8, !dbg !14485
  %108 = load i16, i16* %cox.addr, align 2, !dbg !14486
  %idxprom89 = sext i16 %108 to i64, !dbg !14485
  %arrayidx90 = getelementptr inbounds float, float* %107, i64 %idxprom89, !dbg !14485
  %109 = load float, float* %arrayidx90, align 4, !dbg !14485
  %add91 = fadd float %mul88, %109, !dbg !14487
  %110 = load float*, float** %vec.addr, align 8, !dbg !14488
  %111 = load i16, i16* %cox.addr, align 2, !dbg !14489
  %idxprom92 = sext i16 %111 to i64, !dbg !14488
  %arrayidx93 = getelementptr inbounds float, float* %110, i64 %idxprom92, !dbg !14488
  store float %add91, float* %arrayidx93, align 4, !dbg !14490
  %112 = load float*, float** %lambda.addr, align 8, !dbg !14491
  %113 = load float, float* %112, align 4, !dbg !14492
  %114 = load float*, float** %v2.addr, align 8, !dbg !14493
  %115 = load i16, i16* %coy.addr, align 2, !dbg !14494
  %idxprom94 = sext i16 %115 to i64, !dbg !14493
  %arrayidx95 = getelementptr inbounds float, float* %114, i64 %idxprom94, !dbg !14493
  %116 = load float, float* %arrayidx95, align 4, !dbg !14493
  %117 = load float*, float** %v1.addr, align 8, !dbg !14495
  %118 = load i16, i16* %coy.addr, align 2, !dbg !14496
  %idxprom96 = sext i16 %118 to i64, !dbg !14495
  %arrayidx97 = getelementptr inbounds float, float* %117, i64 %idxprom96, !dbg !14495
  %119 = load float, float* %arrayidx97, align 4, !dbg !14495
  %sub98 = fsub float %116, %119, !dbg !14497
  %mul99 = fmul float %113, %sub98, !dbg !14498
  %120 = load float*, float** %v1.addr, align 8, !dbg !14499
  %121 = load i16, i16* %coy.addr, align 2, !dbg !14500
  %idxprom100 = sext i16 %121 to i64, !dbg !14499
  %arrayidx101 = getelementptr inbounds float, float* %120, i64 %idxprom100, !dbg !14499
  %122 = load float, float* %arrayidx101, align 4, !dbg !14499
  %add102 = fadd float %mul99, %122, !dbg !14501
  %123 = load float*, float** %vec.addr, align 8, !dbg !14502
  %124 = load i16, i16* %coy.addr, align 2, !dbg !14503
  %idxprom103 = sext i16 %124 to i64, !dbg !14502
  %arrayidx104 = getelementptr inbounds float, float* %123, i64 %idxprom103, !dbg !14502
  store float %add102, float* %arrayidx104, align 4, !dbg !14504
  %125 = load float*, float** %lambda.addr, align 8, !dbg !14505
  %126 = load float, float* %125, align 4, !dbg !14507
  %cmp105 = fcmp oge float %126, 0.000000e+00, !dbg !14508
  br i1 %cmp105, label %land.lhs.true, label %if.end120, !dbg !14509

land.lhs.true:                                    ; preds = %if.end82
  %127 = load float*, float** %lambda.addr, align 8, !dbg !14510
  %128 = load float, float* %127, align 4, !dbg !14511
  %cmp106 = fcmp ole float %128, 1.000000e+00, !dbg !14512
  br i1 %cmp106, label %land.lhs.true107, label %if.end120, !dbg !14513

land.lhs.true107:                                 ; preds = %land.lhs.true
  %129 = load float*, float** %mu.addr, align 8, !dbg !14514
  %130 = load float, float* %129, align 4, !dbg !14515
  %cmp108 = fcmp oge float %130, 0.000000e+00, !dbg !14516
  br i1 %cmp108, label %land.lhs.true109, label %if.end120, !dbg !14517

land.lhs.true109:                                 ; preds = %land.lhs.true107
  %131 = load float*, float** %mu.addr, align 8, !dbg !14518
  %132 = load float, float* %131, align 4, !dbg !14519
  %cmp110 = fcmp ole float %132, 1.000000e+00, !dbg !14520
  br i1 %cmp110, label %if.then111, label %if.end120, !dbg !14521

if.then111:                                       ; preds = %land.lhs.true109
  %133 = load float*, float** %lambda.addr, align 8, !dbg !14522
  %134 = load float, float* %133, align 4, !dbg !14525
  %cmp112 = fcmp oeq float %134, 0.000000e+00, !dbg !14526
  br i1 %cmp112, label %if.then118, label %lor.lhs.false, !dbg !14527

lor.lhs.false:                                    ; preds = %if.then111
  %135 = load float*, float** %lambda.addr, align 8, !dbg !14528
  %136 = load float, float* %135, align 4, !dbg !14529
  %cmp113 = fcmp oeq float %136, 1.000000e+00, !dbg !14530
  br i1 %cmp113, label %if.then118, label %lor.lhs.false114, !dbg !14531

lor.lhs.false114:                                 ; preds = %lor.lhs.false
  %137 = load float*, float** %mu.addr, align 8, !dbg !14532
  %138 = load float, float* %137, align 4, !dbg !14533
  %cmp115 = fcmp oeq float %138, 0.000000e+00, !dbg !14534
  br i1 %cmp115, label %if.then118, label %lor.lhs.false116, !dbg !14535

lor.lhs.false116:                                 ; preds = %lor.lhs.false114
  %139 = load float*, float** %mu.addr, align 8, !dbg !14536
  %140 = load float, float* %139, align 4, !dbg !14537
  %cmp117 = fcmp oeq float %140, 1.000000e+00, !dbg !14538
  br i1 %cmp117, label %if.then118, label %if.end119, !dbg !14539

if.then118:                                       ; preds = %lor.lhs.false116, %lor.lhs.false114, %lor.lhs.false, %if.then111
  store i32 1, i32* %retval, align 4, !dbg !14540
  br label %return, !dbg !14540

if.end119:                                        ; preds = %lor.lhs.false116
  store i32 2, i32* %retval, align 4, !dbg !14541
  br label %return, !dbg !14541

if.end120:                                        ; preds = %land.lhs.true109, %land.lhs.true107, %land.lhs.true, %if.end82
  store i32 0, i32* %retval, align 4, !dbg !14542
  br label %return, !dbg !14542

return:                                           ; preds = %if.end120, %if.end119, %if.then118, %if.then
  %141 = load i32, i32* %retval, align 4, !dbg !14543
  ret i32 %141, !dbg !14543
}

; Function Attrs: noinline nounwind uwtable
define internal void @calc_bevel_sin_cos(float %x1, float %y1, float %x2, float %y2, float* %r_sina, float* %r_cosa) #0 !dbg !14544 {
entry:
  %x1.addr = alloca float, align 4
  %y1.addr = alloca float, align 4
  %x2.addr = alloca float, align 4
  %y2.addr = alloca float, align 4
  %r_sina.addr = alloca float*, align 8
  %r_cosa.addr = alloca float*, align 8
  %t01 = alloca float, align 4
  %t02 = alloca float, align 4
  %x3 = alloca float, align 4
  %y3 = alloca float, align 4
  store float %x1, float* %x1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x1.addr, metadata !14547, metadata !DIExpression()), !dbg !14548
  store float %y1, float* %y1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y1.addr, metadata !14549, metadata !DIExpression()), !dbg !14550
  store float %x2, float* %x2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x2.addr, metadata !14551, metadata !DIExpression()), !dbg !14552
  store float %y2, float* %y2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y2.addr, metadata !14553, metadata !DIExpression()), !dbg !14554
  store float* %r_sina, float** %r_sina.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_sina.addr, metadata !14555, metadata !DIExpression()), !dbg !14556
  store float* %r_cosa, float** %r_cosa.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_cosa.addr, metadata !14557, metadata !DIExpression()), !dbg !14558
  call void @llvm.dbg.declare(metadata float* %t01, metadata !14559, metadata !DIExpression()), !dbg !14560
  call void @llvm.dbg.declare(metadata float* %t02, metadata !14561, metadata !DIExpression()), !dbg !14562
  call void @llvm.dbg.declare(metadata float* %x3, metadata !14563, metadata !DIExpression()), !dbg !14564
  call void @llvm.dbg.declare(metadata float* %y3, metadata !14565, metadata !DIExpression()), !dbg !14566
  %0 = load float, float* %x1.addr, align 4, !dbg !14567
  %1 = load float, float* %x1.addr, align 4, !dbg !14568
  %mul = fmul float %0, %1, !dbg !14569
  %2 = load float, float* %y1.addr, align 4, !dbg !14570
  %3 = load float, float* %y1.addr, align 4, !dbg !14571
  %mul1 = fmul float %2, %3, !dbg !14572
  %add = fadd float %mul, %mul1, !dbg !14573
  %call = call float @sqrtf(float %add) #5, !dbg !14574
  store float %call, float* %t01, align 4, !dbg !14575
  %4 = load float, float* %x2.addr, align 4, !dbg !14576
  %5 = load float, float* %x2.addr, align 4, !dbg !14577
  %mul2 = fmul float %4, %5, !dbg !14578
  %6 = load float, float* %y2.addr, align 4, !dbg !14579
  %7 = load float, float* %y2.addr, align 4, !dbg !14580
  %mul3 = fmul float %6, %7, !dbg !14581
  %add4 = fadd float %mul2, %mul3, !dbg !14582
  %call5 = call float @sqrtf(float %add4) #5, !dbg !14583
  store float %call5, float* %t02, align 4, !dbg !14584
  %8 = load float, float* %t01, align 4, !dbg !14585
  %cmp = fcmp oeq float %8, 0.000000e+00, !dbg !14587
  br i1 %cmp, label %if.then, label %if.end, !dbg !14588

if.then:                                          ; preds = %entry
  store float 1.000000e+00, float* %t01, align 4, !dbg !14589
  br label %if.end, !dbg !14590

if.end:                                           ; preds = %if.then, %entry
  %9 = load float, float* %t02, align 4, !dbg !14591
  %cmp6 = fcmp oeq float %9, 0.000000e+00, !dbg !14593
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !14594

if.then7:                                         ; preds = %if.end
  store float 1.000000e+00, float* %t02, align 4, !dbg !14595
  br label %if.end8, !dbg !14596

if.end8:                                          ; preds = %if.then7, %if.end
  %10 = load float, float* %t01, align 4, !dbg !14597
  %11 = load float, float* %x1.addr, align 4, !dbg !14598
  %div = fdiv float %11, %10, !dbg !14598
  store float %div, float* %x1.addr, align 4, !dbg !14598
  %12 = load float, float* %t01, align 4, !dbg !14599
  %13 = load float, float* %y1.addr, align 4, !dbg !14600
  %div9 = fdiv float %13, %12, !dbg !14600
  store float %div9, float* %y1.addr, align 4, !dbg !14600
  %14 = load float, float* %t02, align 4, !dbg !14601
  %15 = load float, float* %x2.addr, align 4, !dbg !14602
  %div10 = fdiv float %15, %14, !dbg !14602
  store float %div10, float* %x2.addr, align 4, !dbg !14602
  %16 = load float, float* %t02, align 4, !dbg !14603
  %17 = load float, float* %y2.addr, align 4, !dbg !14604
  %div11 = fdiv float %17, %16, !dbg !14604
  store float %div11, float* %y2.addr, align 4, !dbg !14604
  %18 = load float, float* %x1.addr, align 4, !dbg !14605
  %19 = load float, float* %x2.addr, align 4, !dbg !14606
  %mul12 = fmul float %18, %19, !dbg !14607
  %20 = load float, float* %y1.addr, align 4, !dbg !14608
  %21 = load float, float* %y2.addr, align 4, !dbg !14609
  %mul13 = fmul float %20, %21, !dbg !14610
  %add14 = fadd float %mul12, %mul13, !dbg !14611
  store float %add14, float* %t02, align 4, !dbg !14612
  %22 = load float, float* %t02, align 4, !dbg !14613
  %23 = call float @llvm.fabs.f32(float %22), !dbg !14615
  %cmp15 = fcmp oge float %23, 1.000000e+00, !dbg !14616
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !14617

if.then16:                                        ; preds = %if.end8
  store float 0x3FF921FB60000000, float* %t02, align 4, !dbg !14618
  br label %if.end19, !dbg !14619

if.else:                                          ; preds = %if.end8
  %24 = load float, float* %t02, align 4, !dbg !14620
  %call17 = call float @saacos(float %24), !dbg !14621
  %div18 = fdiv float %call17, 2.000000e+00, !dbg !14622
  store float %div18, float* %t02, align 4, !dbg !14623
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then16
  %25 = load float, float* %t02, align 4, !dbg !14624
  %call20 = call float @sinf(float %25) #5, !dbg !14625
  store float %call20, float* %t02, align 4, !dbg !14626
  %26 = load float, float* %t02, align 4, !dbg !14627
  %cmp21 = fcmp oeq float %26, 0.000000e+00, !dbg !14629
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !14630

if.then22:                                        ; preds = %if.end19
  store float 1.000000e+00, float* %t02, align 4, !dbg !14631
  br label %if.end23, !dbg !14632

if.end23:                                         ; preds = %if.then22, %if.end19
  %27 = load float, float* %x1.addr, align 4, !dbg !14633
  %28 = load float, float* %x2.addr, align 4, !dbg !14634
  %sub = fsub float %27, %28, !dbg !14635
  store float %sub, float* %x3, align 4, !dbg !14636
  %29 = load float, float* %y1.addr, align 4, !dbg !14637
  %30 = load float, float* %y2.addr, align 4, !dbg !14638
  %sub24 = fsub float %29, %30, !dbg !14639
  store float %sub24, float* %y3, align 4, !dbg !14640
  %31 = load float, float* %x3, align 4, !dbg !14641
  %cmp25 = fcmp oeq float %31, 0.000000e+00, !dbg !14643
  br i1 %cmp25, label %land.lhs.true, label %if.else28, !dbg !14644

land.lhs.true:                                    ; preds = %if.end23
  %32 = load float, float* %y3, align 4, !dbg !14645
  %cmp26 = fcmp oeq float %32, 0.000000e+00, !dbg !14646
  br i1 %cmp26, label %if.then27, label %if.else28, !dbg !14647

if.then27:                                        ; preds = %land.lhs.true
  %33 = load float, float* %y1.addr, align 4, !dbg !14648
  store float %33, float* %x3, align 4, !dbg !14650
  %34 = load float, float* %x1.addr, align 4, !dbg !14651
  %fneg = fneg float %34, !dbg !14652
  store float %fneg, float* %y3, align 4, !dbg !14653
  br label %if.end35, !dbg !14654

if.else28:                                        ; preds = %land.lhs.true, %if.end23
  %35 = load float, float* %x3, align 4, !dbg !14655
  %36 = load float, float* %x3, align 4, !dbg !14657
  %mul29 = fmul float %35, %36, !dbg !14658
  %37 = load float, float* %y3, align 4, !dbg !14659
  %38 = load float, float* %y3, align 4, !dbg !14660
  %mul30 = fmul float %37, %38, !dbg !14661
  %add31 = fadd float %mul29, %mul30, !dbg !14662
  %call32 = call float @sqrtf(float %add31) #5, !dbg !14663
  store float %call32, float* %t01, align 4, !dbg !14664
  %39 = load float, float* %t01, align 4, !dbg !14665
  %40 = load float, float* %x3, align 4, !dbg !14666
  %div33 = fdiv float %40, %39, !dbg !14666
  store float %div33, float* %x3, align 4, !dbg !14666
  %41 = load float, float* %t01, align 4, !dbg !14667
  %42 = load float, float* %y3, align 4, !dbg !14668
  %div34 = fdiv float %42, %41, !dbg !14668
  store float %div34, float* %y3, align 4, !dbg !14668
  br label %if.end35

if.end35:                                         ; preds = %if.else28, %if.then27
  %43 = load float, float* %y3, align 4, !dbg !14669
  %fneg36 = fneg float %43, !dbg !14670
  %44 = load float, float* %t02, align 4, !dbg !14671
  %div37 = fdiv float %fneg36, %44, !dbg !14672
  %45 = load float*, float** %r_sina.addr, align 8, !dbg !14673
  store float %div37, float* %45, align 4, !dbg !14674
  %46 = load float, float* %x3, align 4, !dbg !14675
  %47 = load float, float* %t02, align 4, !dbg !14676
  %div38 = fdiv float %46, %47, !dbg !14677
  %48 = load float*, float** %r_cosa.addr, align 8, !dbg !14678
  store float %div38, float* %48, align 4, !dbg !14679
  ret void, !dbg !14680
}

; Function Attrs: noinline nounwind uwtable
define internal float @saacos(float %fac) #0 !dbg !14681 {
entry:
  %retval = alloca float, align 4
  %fac.addr = alloca float, align 4
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !14684, metadata !DIExpression()), !dbg !14685
  %0 = load float, float* %fac.addr, align 4, !dbg !14686
  %cmp = fcmp ole float %0, -1.000000e+00, !dbg !14686
  br i1 %cmp, label %if.then, label %if.else, !dbg !14688

if.then:                                          ; preds = %entry
  store float 0x400921FB60000000, float* %retval, align 4, !dbg !14689
  br label %return, !dbg !14689

if.else:                                          ; preds = %entry
  %1 = load float, float* %fac.addr, align 4, !dbg !14690
  %cmp1 = fcmp oge float %1, 1.000000e+00, !dbg !14690
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !14692

if.then2:                                         ; preds = %if.else
  store float 0.000000e+00, float* %retval, align 4, !dbg !14693
  br label %return, !dbg !14693

if.else3:                                         ; preds = %if.else
  %2 = load float, float* %fac.addr, align 4, !dbg !14694
  %call = call float @acosf(float %2) #5, !dbg !14695
  store float %call, float* %retval, align 4, !dbg !14696
  br label %return, !dbg !14696

return:                                           ; preds = %if.else3, %if.then2, %if.then
  %3 = load float, float* %retval, align 4, !dbg !14697
  ret float %3, !dbg !14697
}

; Function Attrs: nounwind
declare dso_local float @acosf(float) #4

declare dso_local void @bisect_v3_v3v3v3(float*, float*, float*, float*) #2

declare dso_local void @vec_to_quat(float*, float*, i16 signext, i16 signext) #2

; Function Attrs: nounwind
declare dso_local float @atan2f(float, float) #4

declare dso_local void @axis_angle_to_quat(float*, float*, float) #2

declare dso_local void @mul_qt_qtqt(float*, float*, float*) #2

declare dso_local float @normalize_qt(float*) #2

declare dso_local void @copy_qt_qt(float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @make_bevel_list_3D_tangent(%struct.BevList* %bl) #0 !dbg !14698 {
entry:
  %bl.addr = alloca %struct.BevList*, align 8
  %bevp2 = alloca %struct.BevPoint*, align 8
  %bevp1 = alloca %struct.BevPoint*, align 8
  %bevp0 = alloca %struct.BevPoint*, align 8
  %nr = alloca i32, align 4
  %bevp0_tan = alloca [3 x float], align 4
  %cross_tmp = alloca [3 x float], align 4
  %cross_tmp29 = alloca [3 x float], align 4
  %zero = alloca [3 x float], align 4
  store %struct.BevList* %bl, %struct.BevList** %bl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BevList** %bl.addr, metadata !14699, metadata !DIExpression()), !dbg !14700
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp2, metadata !14701, metadata !DIExpression()), !dbg !14702
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp1, metadata !14703, metadata !DIExpression()), !dbg !14704
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp0, metadata !14705, metadata !DIExpression()), !dbg !14706
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !14707, metadata !DIExpression()), !dbg !14708
  call void @llvm.dbg.declare(metadata [3 x float]* %bevp0_tan, metadata !14709, metadata !DIExpression()), !dbg !14710
  %0 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !14711
  call void @bevel_list_calc_bisect(%struct.BevList* %0), !dbg !14712
  %1 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !14713
  call void @bevel_list_flip_tangents(%struct.BevList* %1), !dbg !14714
  %2 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !14715
  %bevpoints = getelementptr inbounds %struct.BevList, %struct.BevList* %2, i32 0, i32 9, !dbg !14716
  %arraydecay = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints, i64 0, i64 0, !dbg !14715
  store %struct.BevPoint* %arraydecay, %struct.BevPoint** %bevp2, align 8, !dbg !14717
  %3 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !14718
  %4 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !14719
  %nr1 = getelementptr inbounds %struct.BevList, %struct.BevList* %4, i32 0, i32 2, !dbg !14720
  %5 = load i32, i32* %nr1, align 8, !dbg !14720
  %sub = sub nsw i32 %5, 1, !dbg !14721
  %idx.ext = sext i32 %sub to i64, !dbg !14722
  %add.ptr = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %3, i64 %idx.ext, !dbg !14722
  store %struct.BevPoint* %add.ptr, %struct.BevPoint** %bevp1, align 8, !dbg !14723
  %6 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14724
  %add.ptr2 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %6, i64 -1, !dbg !14725
  store %struct.BevPoint* %add.ptr2, %struct.BevPoint** %bevp0, align 8, !dbg !14726
  %7 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !14727
  %nr3 = getelementptr inbounds %struct.BevList, %struct.BevList* %7, i32 0, i32 2, !dbg !14728
  %8 = load i32, i32* %nr3, align 8, !dbg !14728
  store i32 %8, i32* %nr, align 4, !dbg !14729
  br label %while.cond, !dbg !14730

while.cond:                                       ; preds = %while.body, %entry
  %9 = load i32, i32* %nr, align 4, !dbg !14731
  %dec = add nsw i32 %9, -1, !dbg !14731
  store i32 %dec, i32* %nr, align 4, !dbg !14731
  %tobool = icmp ne i32 %9, 0, !dbg !14730
  br i1 %tobool, label %while.body, label %while.end, !dbg !14730

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata [3 x float]* %cross_tmp, metadata !14732, metadata !DIExpression()), !dbg !14734
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %cross_tmp, i64 0, i64 0, !dbg !14735
  %10 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14736
  %tan = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %10, i32 0, i32 8, !dbg !14737
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %tan, i64 0, i64 0, !dbg !14736
  %11 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14738
  %dir = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %11, i32 0, i32 7, !dbg !14739
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !14738
  call void @cross_v3_v3v3(float* %arraydecay4, float* %arraydecay5, float* %arraydecay6), !dbg !14740
  %12 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14741
  %tan7 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %12, i32 0, i32 8, !dbg !14742
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %tan7, i64 0, i64 0, !dbg !14741
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %cross_tmp, i64 0, i64 0, !dbg !14743
  %13 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14744
  %dir10 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %13, i32 0, i32 7, !dbg !14745
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %dir10, i64 0, i64 0, !dbg !14744
  call void @cross_v3_v3v3(float* %arraydecay8, float* %arraydecay9, float* %arraydecay11), !dbg !14746
  %14 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14747
  %tan12 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %14, i32 0, i32 8, !dbg !14748
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %tan12, i64 0, i64 0, !dbg !14747
  %call = call float @normalize_v3(float* %arraydecay13), !dbg !14749
  %15 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14750
  store %struct.BevPoint* %15, %struct.BevPoint** %bevp0, align 8, !dbg !14751
  %16 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !14752
  store %struct.BevPoint* %16, %struct.BevPoint** %bevp1, align 8, !dbg !14753
  %17 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !14754
  %incdec.ptr = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %17, i32 1, !dbg !14754
  store %struct.BevPoint* %incdec.ptr, %struct.BevPoint** %bevp2, align 8, !dbg !14754
  br label %while.cond, !dbg !14730, !llvm.loop !14755

while.end:                                        ; preds = %while.cond
  %18 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !14757
  %bevpoints14 = getelementptr inbounds %struct.BevList, %struct.BevList* %18, i32 0, i32 9, !dbg !14758
  %arraydecay15 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints14, i64 0, i64 0, !dbg !14757
  store %struct.BevPoint* %arraydecay15, %struct.BevPoint** %bevp2, align 8, !dbg !14759
  %19 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !14760
  %20 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !14761
  %nr16 = getelementptr inbounds %struct.BevList, %struct.BevList* %20, i32 0, i32 2, !dbg !14762
  %21 = load i32, i32* %nr16, align 8, !dbg !14762
  %sub17 = sub nsw i32 %21, 1, !dbg !14763
  %idx.ext18 = sext i32 %sub17 to i64, !dbg !14764
  %add.ptr19 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %19, i64 %idx.ext18, !dbg !14764
  store %struct.BevPoint* %add.ptr19, %struct.BevPoint** %bevp1, align 8, !dbg !14765
  %22 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14766
  %add.ptr20 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %22, i64 -1, !dbg !14767
  store %struct.BevPoint* %add.ptr20, %struct.BevPoint** %bevp0, align 8, !dbg !14768
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %bevp0_tan, i64 0, i64 0, !dbg !14769
  %23 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !14770
  %tan22 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %23, i32 0, i32 8, !dbg !14771
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %tan22, i64 0, i64 0, !dbg !14770
  call void @copy_v3_v3(float* %arraydecay21, float* %arraydecay23), !dbg !14772
  %24 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !14773
  %nr24 = getelementptr inbounds %struct.BevList, %struct.BevList* %24, i32 0, i32 2, !dbg !14774
  %25 = load i32, i32* %nr24, align 8, !dbg !14774
  store i32 %25, i32* %nr, align 4, !dbg !14775
  br label %while.cond25, !dbg !14776

while.cond25:                                     ; preds = %while.body28, %while.end
  %26 = load i32, i32* %nr, align 4, !dbg !14777
  %dec26 = add nsw i32 %26, -1, !dbg !14777
  store i32 %dec26, i32* %nr, align 4, !dbg !14777
  %tobool27 = icmp ne i32 %26, 0, !dbg !14776
  br i1 %tobool27, label %while.body28, label %while.end44, !dbg !14776

while.body28:                                     ; preds = %while.cond25
  call void @llvm.dbg.declare(metadata [3 x float]* %cross_tmp29, metadata !14778, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.declare(metadata [3 x float]* %zero, metadata !14781, metadata !DIExpression()), !dbg !14782
  %27 = bitcast [3 x float]* %zero to i8*, !dbg !14782
  call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 12, i1 false), !dbg !14782
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %cross_tmp29, i64 0, i64 0, !dbg !14783
  %28 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14784
  %tan31 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %28, i32 0, i32 8, !dbg !14785
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %tan31, i64 0, i64 0, !dbg !14784
  %29 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14786
  %dir33 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %29, i32 0, i32 7, !dbg !14787
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %dir33, i64 0, i64 0, !dbg !14786
  call void @cross_v3_v3v3(float* %arraydecay30, float* %arraydecay32, float* %arraydecay34), !dbg !14788
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %cross_tmp29, i64 0, i64 0, !dbg !14789
  %call36 = call float @normalize_v3(float* %arraydecay35), !dbg !14790
  %30 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14791
  %quat = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %30, i32 0, i32 9, !dbg !14792
  %arraydecay37 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !14791
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %zero, i64 0, i64 0, !dbg !14793
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %cross_tmp29, i64 0, i64 0, !dbg !14794
  %31 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14795
  %tan40 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %31, i32 0, i32 8, !dbg !14796
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %tan40, i64 0, i64 0, !dbg !14795
  %call42 = call float @tri_to_quat(float* %arraydecay37, float* %arraydecay38, float* %arraydecay39, float* %arraydecay41), !dbg !14797
  %32 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !14798
  store %struct.BevPoint* %32, %struct.BevPoint** %bevp1, align 8, !dbg !14799
  %33 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !14800
  %incdec.ptr43 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %33, i32 1, !dbg !14800
  store %struct.BevPoint* %incdec.ptr43, %struct.BevPoint** %bevp2, align 8, !dbg !14800
  br label %while.cond25, !dbg !14776, !llvm.loop !14801

while.end44:                                      ; preds = %while.cond25
  ret void, !dbg !14803
}

; Function Attrs: noinline nounwind uwtable
define internal void @make_bevel_list_3D_minimum_twist(%struct.BevList* %bl) #0 !dbg !14804 {
entry:
  %bl.addr = alloca %struct.BevList*, align 8
  %bevp2 = alloca %struct.BevPoint*, align 8
  %bevp1 = alloca %struct.BevPoint*, align 8
  %bevp0 = alloca %struct.BevPoint*, align 8
  %nr = alloca i32, align 4
  %q = alloca [4 x float], align 16
  %vec_1 = alloca [3 x float], align 4
  %vec_2 = alloca [3 x float], align 4
  %angle = alloca float, align 4
  %ang_fac = alloca float, align 4
  %cross_tmp = alloca [3 x float], align 4
  %bevp_first = alloca %struct.BevPoint*, align 8
  %bevp_last = alloca %struct.BevPoint*, align 8
  store %struct.BevList* %bl, %struct.BevList** %bl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BevList** %bl.addr, metadata !14805, metadata !DIExpression()), !dbg !14806
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp2, metadata !14807, metadata !DIExpression()), !dbg !14808
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp1, metadata !14809, metadata !DIExpression()), !dbg !14810
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp0, metadata !14811, metadata !DIExpression()), !dbg !14812
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !14813, metadata !DIExpression()), !dbg !14814
  call void @llvm.dbg.declare(metadata [4 x float]* %q, metadata !14815, metadata !DIExpression()), !dbg !14816
  %0 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !14817
  call void @bevel_list_calc_bisect(%struct.BevList* %0), !dbg !14818
  %1 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !14819
  %bevpoints = getelementptr inbounds %struct.BevList, %struct.BevList* %1, i32 0, i32 9, !dbg !14820
  %arraydecay = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints, i64 0, i64 0, !dbg !14819
  store %struct.BevPoint* %arraydecay, %struct.BevPoint** %bevp2, align 8, !dbg !14821
  %2 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !14822
  %3 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !14823
  %nr1 = getelementptr inbounds %struct.BevList, %struct.BevList* %3, i32 0, i32 2, !dbg !14824
  %4 = load i32, i32* %nr1, align 8, !dbg !14824
  %sub = sub nsw i32 %4, 1, !dbg !14825
  %idx.ext = sext i32 %sub to i64, !dbg !14826
  %add.ptr = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %2, i64 %idx.ext, !dbg !14826
  store %struct.BevPoint* %add.ptr, %struct.BevPoint** %bevp1, align 8, !dbg !14827
  %5 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14828
  %add.ptr2 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %5, i64 -1, !dbg !14829
  store %struct.BevPoint* %add.ptr2, %struct.BevPoint** %bevp0, align 8, !dbg !14830
  %6 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !14831
  %nr3 = getelementptr inbounds %struct.BevList, %struct.BevList* %6, i32 0, i32 2, !dbg !14832
  %7 = load i32, i32* %nr3, align 8, !dbg !14832
  store i32 %7, i32* %nr, align 4, !dbg !14833
  br label %while.cond, !dbg !14834

while.cond:                                       ; preds = %if.end, %entry
  %8 = load i32, i32* %nr, align 4, !dbg !14835
  %dec = add nsw i32 %8, -1, !dbg !14835
  store i32 %dec, i32* %nr, align 4, !dbg !14835
  %tobool = icmp ne i32 %8, 0, !dbg !14834
  br i1 %tobool, label %while.body, label %while.end, !dbg !14834

while.body:                                       ; preds = %while.cond
  %9 = load i32, i32* %nr, align 4, !dbg !14836
  %add = add nsw i32 %9, 4, !dbg !14839
  %10 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !14840
  %nr4 = getelementptr inbounds %struct.BevList, %struct.BevList* %10, i32 0, i32 2, !dbg !14841
  %11 = load i32, i32* %nr4, align 8, !dbg !14841
  %cmp = icmp sgt i32 %add, %11, !dbg !14842
  br i1 %cmp, label %if.then, label %if.else, !dbg !14843

if.then:                                          ; preds = %while.body
  %12 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14844
  %quat = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %12, i32 0, i32 9, !dbg !14846
  %arraydecay5 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !14844
  %13 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14847
  %dir = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %13, i32 0, i32 7, !dbg !14848
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !14847
  call void @vec_to_quat(float* %arraydecay5, float* %arraydecay6, i16 signext 5, i16 signext 1), !dbg !14849
  br label %if.end, !dbg !14850

if.else:                                          ; preds = %while.body
  %14 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14851
  %15 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !14853
  call void @minimum_twist_between_two_points(%struct.BevPoint* %14, %struct.BevPoint* %15), !dbg !14854
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %16 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14855
  store %struct.BevPoint* %16, %struct.BevPoint** %bevp0, align 8, !dbg !14856
  %17 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !14857
  store %struct.BevPoint* %17, %struct.BevPoint** %bevp1, align 8, !dbg !14858
  %18 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !14859
  %incdec.ptr = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %18, i32 1, !dbg !14859
  store %struct.BevPoint* %incdec.ptr, %struct.BevPoint** %bevp2, align 8, !dbg !14859
  br label %while.cond, !dbg !14834, !llvm.loop !14860

while.end:                                        ; preds = %while.cond
  %19 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !14862
  %poly = getelementptr inbounds %struct.BevList, %struct.BevList* %19, i32 0, i32 4, !dbg !14864
  %20 = load i32, i32* %poly, align 8, !dbg !14864
  %cmp7 = icmp ne i32 %20, -1, !dbg !14865
  br i1 %cmp7, label %if.then8, label %if.else79, !dbg !14866

if.then8:                                         ; preds = %while.end
  call void @llvm.dbg.declare(metadata [3 x float]* %vec_1, metadata !14867, metadata !DIExpression()), !dbg !14869
  %21 = bitcast [3 x float]* %vec_1 to i8*, !dbg !14869
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 bitcast ([3 x float]* @__const.make_bevel_list_3D_minimum_twist.vec_1 to i8*), i64 12, i1 false), !dbg !14869
  call void @llvm.dbg.declare(metadata [3 x float]* %vec_2, metadata !14870, metadata !DIExpression()), !dbg !14871
  %22 = bitcast [3 x float]* %vec_2 to i8*, !dbg !14871
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 bitcast ([3 x float]* @__const.make_bevel_list_3D_minimum_twist.vec_2 to i8*), i64 12, i1 false), !dbg !14871
  call void @llvm.dbg.declare(metadata float* %angle, metadata !14872, metadata !DIExpression()), !dbg !14873
  call void @llvm.dbg.declare(metadata float* %ang_fac, metadata !14874, metadata !DIExpression()), !dbg !14875
  call void @llvm.dbg.declare(metadata [3 x float]* %cross_tmp, metadata !14876, metadata !DIExpression()), !dbg !14877
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp_first, metadata !14878, metadata !DIExpression()), !dbg !14879
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp_last, metadata !14880, metadata !DIExpression()), !dbg !14881
  %23 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !14882
  %bevpoints9 = getelementptr inbounds %struct.BevList, %struct.BevList* %23, i32 0, i32 9, !dbg !14883
  %arraydecay10 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints9, i64 0, i64 0, !dbg !14882
  store %struct.BevPoint* %arraydecay10, %struct.BevPoint** %bevp_first, align 8, !dbg !14884
  %24 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !14885
  %nr11 = getelementptr inbounds %struct.BevList, %struct.BevList* %24, i32 0, i32 2, !dbg !14886
  %25 = load i32, i32* %nr11, align 8, !dbg !14886
  %sub12 = sub nsw i32 %25, 1, !dbg !14887
  %26 = load %struct.BevPoint*, %struct.BevPoint** %bevp_first, align 8, !dbg !14888
  %idx.ext13 = sext i32 %sub12 to i64, !dbg !14888
  %add.ptr14 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %26, i64 %idx.ext13, !dbg !14888
  store %struct.BevPoint* %add.ptr14, %struct.BevPoint** %bevp_first, align 8, !dbg !14888
  %27 = load %struct.BevPoint*, %struct.BevPoint** %bevp_first, align 8, !dbg !14889
  store %struct.BevPoint* %27, %struct.BevPoint** %bevp_last, align 8, !dbg !14890
  %28 = load %struct.BevPoint*, %struct.BevPoint** %bevp_last, align 8, !dbg !14891
  %incdec.ptr15 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %28, i32 -1, !dbg !14891
  store %struct.BevPoint* %incdec.ptr15, %struct.BevPoint** %bevp_last, align 8, !dbg !14891
  %29 = load %struct.BevPoint*, %struct.BevPoint** %bevp_first, align 8, !dbg !14892
  %quat16 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %29, i32 0, i32 9, !dbg !14893
  %arraydecay17 = getelementptr inbounds [4 x float], [4 x float]* %quat16, i64 0, i64 0, !dbg !14892
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %vec_1, i64 0, i64 0, !dbg !14894
  call void @mul_qt_v3(float* %arraydecay17, float* %arraydecay18), !dbg !14895
  %30 = load %struct.BevPoint*, %struct.BevPoint** %bevp_last, align 8, !dbg !14896
  %quat19 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %30, i32 0, i32 9, !dbg !14897
  %arraydecay20 = getelementptr inbounds [4 x float], [4 x float]* %quat19, i64 0, i64 0, !dbg !14896
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %vec_2, i64 0, i64 0, !dbg !14898
  call void @mul_qt_v3(float* %arraydecay20, float* %arraydecay21), !dbg !14899
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %vec_1, i64 0, i64 0, !dbg !14900
  %call = call float @normalize_v3(float* %arraydecay22), !dbg !14901
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %vec_2, i64 0, i64 0, !dbg !14902
  %call24 = call float @normalize_v3(float* %arraydecay23), !dbg !14903
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %cross_tmp, i64 0, i64 0, !dbg !14904
  %31 = load %struct.BevPoint*, %struct.BevPoint** %bevp_last, align 8, !dbg !14906
  %dir26 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %31, i32 0, i32 7, !dbg !14907
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %dir26, i64 0, i64 0, !dbg !14906
  %32 = load %struct.BevPoint*, %struct.BevPoint** %bevp_first, align 8, !dbg !14908
  %dir28 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %32, i32 0, i32 7, !dbg !14909
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %dir28, i64 0, i64 0, !dbg !14908
  call void @cross_v3_v3v3(float* %arraydecay25, float* %arraydecay27, float* %arraydecay29), !dbg !14910
  %33 = load %struct.BevPoint*, %struct.BevPoint** %bevp_first, align 8, !dbg !14911
  %dir30 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %33, i32 0, i32 7, !dbg !14912
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %dir30, i64 0, i64 0, !dbg !14911
  %34 = load %struct.BevPoint*, %struct.BevPoint** %bevp_last, align 8, !dbg !14913
  %dir32 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %34, i32 0, i32 7, !dbg !14914
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %dir32, i64 0, i64 0, !dbg !14913
  %call34 = call float @angle_normalized_v3v3(float* %arraydecay31, float* %arraydecay33), !dbg !14915
  store float %call34, float* %angle, align 4, !dbg !14916
  %arraydecay35 = getelementptr inbounds [4 x float], [4 x float]* %q, i64 0, i64 0, !dbg !14917
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %cross_tmp, i64 0, i64 0, !dbg !14918
  %35 = load float, float* %angle, align 4, !dbg !14919
  call void @axis_angle_to_quat(float* %arraydecay35, float* %arraydecay36, float %35), !dbg !14920
  %arraydecay37 = getelementptr inbounds [4 x float], [4 x float]* %q, i64 0, i64 0, !dbg !14921
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %vec_2, i64 0, i64 0, !dbg !14922
  call void @mul_qt_v3(float* %arraydecay37, float* %arraydecay38), !dbg !14923
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %vec_1, i64 0, i64 0, !dbg !14924
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %vec_2, i64 0, i64 0, !dbg !14925
  %call41 = call float @angle_normalized_v3v3(float* %arraydecay39, float* %arraydecay40), !dbg !14926
  store float %call41, float* %angle, align 4, !dbg !14927
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %cross_tmp, i64 0, i64 0, !dbg !14928
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %vec_1, i64 0, i64 0, !dbg !14929
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %vec_2, i64 0, i64 0, !dbg !14930
  call void @cross_v3_v3v3(float* %arraydecay42, float* %arraydecay43, float* %arraydecay44), !dbg !14931
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %cross_tmp, i64 0, i64 0, !dbg !14932
  %call46 = call float @normalize_v3(float* %arraydecay45), !dbg !14933
  %36 = load %struct.BevPoint*, %struct.BevPoint** %bevp_first, align 8, !dbg !14934
  %dir47 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %36, i32 0, i32 7, !dbg !14936
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %dir47, i64 0, i64 0, !dbg !14934
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %cross_tmp, i64 0, i64 0, !dbg !14937
  %call50 = call float @angle_normalized_v3v3(float* %arraydecay48, float* %arraydecay49), !dbg !14938
  %cmp51 = fcmp olt float %call50, 0x3FF921FB60000000, !dbg !14939
  br i1 %cmp51, label %if.then52, label %if.end53, !dbg !14940

if.then52:                                        ; preds = %if.then8
  %37 = load float, float* %angle, align 4, !dbg !14941
  %fneg = fneg float %37, !dbg !14942
  store float %fneg, float* %angle, align 4, !dbg !14943
  br label %if.end53, !dbg !14944

if.end53:                                         ; preds = %if.then52, %if.then8
  %38 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !14945
  %bevpoints54 = getelementptr inbounds %struct.BevList, %struct.BevList* %38, i32 0, i32 9, !dbg !14946
  %arraydecay55 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints54, i64 0, i64 0, !dbg !14945
  store %struct.BevPoint* %arraydecay55, %struct.BevPoint** %bevp2, align 8, !dbg !14947
  %39 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !14948
  %40 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !14949
  %nr56 = getelementptr inbounds %struct.BevList, %struct.BevList* %40, i32 0, i32 2, !dbg !14950
  %41 = load i32, i32* %nr56, align 8, !dbg !14950
  %sub57 = sub nsw i32 %41, 1, !dbg !14951
  %idx.ext58 = sext i32 %sub57 to i64, !dbg !14952
  %add.ptr59 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %39, i64 %idx.ext58, !dbg !14952
  store %struct.BevPoint* %add.ptr59, %struct.BevPoint** %bevp1, align 8, !dbg !14953
  %42 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14954
  %add.ptr60 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %42, i64 -1, !dbg !14955
  store %struct.BevPoint* %add.ptr60, %struct.BevPoint** %bevp0, align 8, !dbg !14956
  %43 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !14957
  %nr61 = getelementptr inbounds %struct.BevList, %struct.BevList* %43, i32 0, i32 2, !dbg !14958
  %44 = load i32, i32* %nr61, align 8, !dbg !14958
  store i32 %44, i32* %nr, align 4, !dbg !14959
  br label %while.cond62, !dbg !14960

while.cond62:                                     ; preds = %while.body65, %if.end53
  %45 = load i32, i32* %nr, align 4, !dbg !14961
  %dec63 = add nsw i32 %45, -1, !dbg !14961
  store i32 %dec63, i32* %nr, align 4, !dbg !14961
  %tobool64 = icmp ne i32 %45, 0, !dbg !14960
  br i1 %tobool64, label %while.body65, label %while.end78, !dbg !14960

while.body65:                                     ; preds = %while.cond62
  %46 = load float, float* %angle, align 4, !dbg !14962
  %47 = load i32, i32* %nr, align 4, !dbg !14964
  %conv = sitofp i32 %47 to float, !dbg !14965
  %48 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !14966
  %nr66 = getelementptr inbounds %struct.BevList, %struct.BevList* %48, i32 0, i32 2, !dbg !14967
  %49 = load i32, i32* %nr66, align 8, !dbg !14967
  %conv67 = sitofp i32 %49 to float, !dbg !14966
  %div = fdiv float %conv, %conv67, !dbg !14968
  %sub68 = fsub float 1.000000e+00, %div, !dbg !14969
  %mul = fmul float %46, %sub68, !dbg !14970
  store float %mul, float* %ang_fac, align 4, !dbg !14971
  %arraydecay69 = getelementptr inbounds [4 x float], [4 x float]* %q, i64 0, i64 0, !dbg !14972
  %50 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14973
  %dir70 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %50, i32 0, i32 7, !dbg !14974
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %dir70, i64 0, i64 0, !dbg !14973
  %51 = load float, float* %ang_fac, align 4, !dbg !14975
  call void @axis_angle_to_quat(float* %arraydecay69, float* %arraydecay71, float %51), !dbg !14976
  %52 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14977
  %quat72 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %52, i32 0, i32 9, !dbg !14978
  %arraydecay73 = getelementptr inbounds [4 x float], [4 x float]* %quat72, i64 0, i64 0, !dbg !14977
  %arraydecay74 = getelementptr inbounds [4 x float], [4 x float]* %q, i64 0, i64 0, !dbg !14979
  %53 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14980
  %quat75 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %53, i32 0, i32 9, !dbg !14981
  %arraydecay76 = getelementptr inbounds [4 x float], [4 x float]* %quat75, i64 0, i64 0, !dbg !14980
  call void @mul_qt_qtqt(float* %arraydecay73, float* %arraydecay74, float* %arraydecay76), !dbg !14982
  %54 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14983
  store %struct.BevPoint* %54, %struct.BevPoint** %bevp0, align 8, !dbg !14984
  %55 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !14985
  store %struct.BevPoint* %55, %struct.BevPoint** %bevp1, align 8, !dbg !14986
  %56 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !14987
  %incdec.ptr77 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %56, i32 1, !dbg !14987
  store %struct.BevPoint* %incdec.ptr77, %struct.BevPoint** %bevp2, align 8, !dbg !14987
  br label %while.cond62, !dbg !14960, !llvm.loop !14988

while.end78:                                      ; preds = %while.cond62
  br label %if.end90, !dbg !14990

if.else79:                                        ; preds = %while.end
  %57 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !14991
  %bevpoints80 = getelementptr inbounds %struct.BevList, %struct.BevList* %57, i32 0, i32 9, !dbg !14993
  %arraydecay81 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints80, i64 0, i64 0, !dbg !14991
  store %struct.BevPoint* %arraydecay81, %struct.BevPoint** %bevp1, align 8, !dbg !14994
  %58 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14995
  %add.ptr82 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %58, i64 1, !dbg !14996
  store %struct.BevPoint* %add.ptr82, %struct.BevPoint** %bevp0, align 8, !dbg !14997
  %59 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !14998
  %60 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !14999
  call void @minimum_twist_between_two_points(%struct.BevPoint* %59, %struct.BevPoint* %60), !dbg !15000
  %61 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !15001
  %bevpoints83 = getelementptr inbounds %struct.BevList, %struct.BevList* %61, i32 0, i32 9, !dbg !15002
  %arraydecay84 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints83, i64 0, i64 0, !dbg !15001
  store %struct.BevPoint* %arraydecay84, %struct.BevPoint** %bevp2, align 8, !dbg !15003
  %62 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !15004
  %63 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !15005
  %nr85 = getelementptr inbounds %struct.BevList, %struct.BevList* %63, i32 0, i32 2, !dbg !15006
  %64 = load i32, i32* %nr85, align 8, !dbg !15006
  %sub86 = sub nsw i32 %64, 1, !dbg !15007
  %idx.ext87 = sext i32 %sub86 to i64, !dbg !15008
  %add.ptr88 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %62, i64 %idx.ext87, !dbg !15008
  store %struct.BevPoint* %add.ptr88, %struct.BevPoint** %bevp1, align 8, !dbg !15009
  %65 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15010
  %add.ptr89 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %65, i64 -1, !dbg !15011
  store %struct.BevPoint* %add.ptr89, %struct.BevPoint** %bevp0, align 8, !dbg !15012
  %66 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15013
  %67 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !15014
  call void @minimum_twist_between_two_points(%struct.BevPoint* %66, %struct.BevPoint* %67), !dbg !15015
  br label %if.end90

if.end90:                                         ; preds = %if.else79, %while.end78
  ret void, !dbg !15016
}

; Function Attrs: noinline nounwind uwtable
define internal void @make_bevel_list_3D_zup(%struct.BevList* %bl) #0 !dbg !15017 {
entry:
  %bl.addr = alloca %struct.BevList*, align 8
  %bevp = alloca %struct.BevPoint*, align 8
  %nr = alloca i32, align 4
  store %struct.BevList* %bl, %struct.BevList** %bl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BevList** %bl.addr, metadata !15018, metadata !DIExpression()), !dbg !15019
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp, metadata !15020, metadata !DIExpression()), !dbg !15021
  %0 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !15022
  %bevpoints = getelementptr inbounds %struct.BevList, %struct.BevList* %0, i32 0, i32 9, !dbg !15023
  %arraydecay = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints, i64 0, i64 0, !dbg !15022
  store %struct.BevPoint* %arraydecay, %struct.BevPoint** %bevp, align 8, !dbg !15021
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !15024, metadata !DIExpression()), !dbg !15025
  %1 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !15026
  %nr1 = getelementptr inbounds %struct.BevList, %struct.BevList* %1, i32 0, i32 2, !dbg !15027
  %2 = load i32, i32* %nr1, align 8, !dbg !15027
  store i32 %2, i32* %nr, align 4, !dbg !15025
  %3 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !15028
  call void @bevel_list_calc_bisect(%struct.BevList* %3), !dbg !15029
  br label %while.cond, !dbg !15030

while.cond:                                       ; preds = %while.body, %entry
  %4 = load i32, i32* %nr, align 4, !dbg !15031
  %dec = add nsw i32 %4, -1, !dbg !15031
  store i32 %dec, i32* %nr, align 4, !dbg !15031
  %tobool = icmp ne i32 %4, 0, !dbg !15030
  br i1 %tobool, label %while.body, label %while.end, !dbg !15030

while.body:                                       ; preds = %while.cond
  %5 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !15032
  %quat = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %5, i32 0, i32 9, !dbg !15034
  %arraydecay2 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !15032
  %6 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !15035
  %dir = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %6, i32 0, i32 7, !dbg !15036
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !15035
  call void @vec_to_quat(float* %arraydecay2, float* %arraydecay3, i16 signext 5, i16 signext 1), !dbg !15037
  %7 = load %struct.BevPoint*, %struct.BevPoint** %bevp, align 8, !dbg !15038
  %incdec.ptr = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %7, i32 1, !dbg !15038
  store %struct.BevPoint* %incdec.ptr, %struct.BevPoint** %bevp, align 8, !dbg !15038
  br label %while.cond, !dbg !15030, !llvm.loop !15039

while.end:                                        ; preds = %while.cond
  ret void, !dbg !15041
}

; Function Attrs: noinline nounwind uwtable
define internal void @bevel_list_smooth(%struct.BevList* %bl, i32 %smooth_iter) #0 !dbg !15042 {
entry:
  %bl.addr = alloca %struct.BevList*, align 8
  %smooth_iter.addr = alloca i32, align 4
  %bevp2 = alloca %struct.BevPoint*, align 8
  %bevp1 = alloca %struct.BevPoint*, align 8
  %bevp0 = alloca %struct.BevPoint*, align 8
  %nr = alloca i32, align 4
  %q = alloca [4 x float], align 16
  %bevp0_quat = alloca [4 x float], align 16
  %a = alloca i32, align 4
  %zaxis = alloca [3 x float], align 4
  %cross = alloca [3 x float], align 4
  %q2 = alloca [4 x float], align 16
  store %struct.BevList* %bl, %struct.BevList** %bl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BevList** %bl.addr, metadata !15045, metadata !DIExpression()), !dbg !15046
  store i32 %smooth_iter, i32* %smooth_iter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %smooth_iter.addr, metadata !15047, metadata !DIExpression()), !dbg !15048
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp2, metadata !15049, metadata !DIExpression()), !dbg !15050
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp1, metadata !15051, metadata !DIExpression()), !dbg !15052
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp0, metadata !15053, metadata !DIExpression()), !dbg !15054
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !15055, metadata !DIExpression()), !dbg !15056
  call void @llvm.dbg.declare(metadata [4 x float]* %q, metadata !15057, metadata !DIExpression()), !dbg !15058
  call void @llvm.dbg.declare(metadata [4 x float]* %bevp0_quat, metadata !15059, metadata !DIExpression()), !dbg !15060
  call void @llvm.dbg.declare(metadata i32* %a, metadata !15061, metadata !DIExpression()), !dbg !15062
  store i32 0, i32* %a, align 4, !dbg !15063
  br label %for.cond, !dbg !15065

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %a, align 4, !dbg !15066
  %1 = load i32, i32* %smooth_iter.addr, align 4, !dbg !15068
  %cmp = icmp slt i32 %0, %1, !dbg !15069
  br i1 %cmp, label %for.body, label %for.end, !dbg !15070

for.body:                                         ; preds = %for.cond
  %2 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !15071
  %bevpoints = getelementptr inbounds %struct.BevList, %struct.BevList* %2, i32 0, i32 9, !dbg !15073
  %arraydecay = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints, i64 0, i64 0, !dbg !15071
  store %struct.BevPoint* %arraydecay, %struct.BevPoint** %bevp2, align 8, !dbg !15074
  %3 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !15075
  %4 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !15076
  %nr1 = getelementptr inbounds %struct.BevList, %struct.BevList* %4, i32 0, i32 2, !dbg !15077
  %5 = load i32, i32* %nr1, align 8, !dbg !15077
  %sub = sub nsw i32 %5, 1, !dbg !15078
  %idx.ext = sext i32 %sub to i64, !dbg !15079
  %add.ptr = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %3, i64 %idx.ext, !dbg !15079
  store %struct.BevPoint* %add.ptr, %struct.BevPoint** %bevp1, align 8, !dbg !15080
  %6 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15081
  %add.ptr2 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %6, i64 -1, !dbg !15082
  store %struct.BevPoint* %add.ptr2, %struct.BevPoint** %bevp0, align 8, !dbg !15083
  %7 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !15084
  %nr3 = getelementptr inbounds %struct.BevList, %struct.BevList* %7, i32 0, i32 2, !dbg !15085
  %8 = load i32, i32* %nr3, align 8, !dbg !15085
  store i32 %8, i32* %nr, align 4, !dbg !15086
  %9 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !15087
  %poly = getelementptr inbounds %struct.BevList, %struct.BevList* %9, i32 0, i32 4, !dbg !15089
  %10 = load i32, i32* %poly, align 8, !dbg !15089
  %cmp4 = icmp eq i32 %10, -1, !dbg !15090
  br i1 %cmp4, label %if.then, label %if.end, !dbg !15091

if.then:                                          ; preds = %for.body
  %11 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !15092
  store %struct.BevPoint* %11, %struct.BevPoint** %bevp1, align 8, !dbg !15094
  %12 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !15095
  %incdec.ptr = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %12, i32 1, !dbg !15095
  store %struct.BevPoint* %incdec.ptr, %struct.BevPoint** %bevp2, align 8, !dbg !15095
  %13 = load i32, i32* %nr, align 4, !dbg !15096
  %dec = add nsw i32 %13, -1, !dbg !15096
  store i32 %dec, i32* %nr, align 4, !dbg !15096
  %14 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15097
  store %struct.BevPoint* %14, %struct.BevPoint** %bevp0, align 8, !dbg !15098
  %15 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !15099
  store %struct.BevPoint* %15, %struct.BevPoint** %bevp1, align 8, !dbg !15100
  %16 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !15101
  %incdec.ptr5 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %16, i32 1, !dbg !15101
  store %struct.BevPoint* %incdec.ptr5, %struct.BevPoint** %bevp2, align 8, !dbg !15101
  %17 = load i32, i32* %nr, align 4, !dbg !15102
  %dec6 = add nsw i32 %17, -1, !dbg !15102
  store i32 %dec6, i32* %nr, align 4, !dbg !15102
  br label %if.end, !dbg !15103

if.end:                                           ; preds = %if.then, %for.body
  %arraydecay7 = getelementptr inbounds [4 x float], [4 x float]* %bevp0_quat, i64 0, i64 0, !dbg !15104
  %18 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !15105
  %quat = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %18, i32 0, i32 9, !dbg !15106
  %arraydecay8 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !15105
  call void @copy_qt_qt(float* %arraydecay7, float* %arraydecay8), !dbg !15107
  br label %while.cond, !dbg !15108

while.cond:                                       ; preds = %while.body, %if.end
  %19 = load i32, i32* %nr, align 4, !dbg !15109
  %dec9 = add nsw i32 %19, -1, !dbg !15109
  store i32 %dec9, i32* %nr, align 4, !dbg !15109
  %tobool = icmp ne i32 %19, 0, !dbg !15108
  br i1 %tobool, label %while.body, label %while.end, !dbg !15108

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata [3 x float]* %zaxis, metadata !15110, metadata !DIExpression()), !dbg !15112
  %20 = bitcast [3 x float]* %zaxis to i8*, !dbg !15112
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 bitcast ([3 x float]* @__const.bevel_list_smooth.zaxis to i8*), i64 12, i1 false), !dbg !15112
  call void @llvm.dbg.declare(metadata [3 x float]* %cross, metadata !15113, metadata !DIExpression()), !dbg !15114
  call void @llvm.dbg.declare(metadata [4 x float]* %q2, metadata !15115, metadata !DIExpression()), !dbg !15116
  %arraydecay10 = getelementptr inbounds [4 x float], [4 x float]* %q, i64 0, i64 0, !dbg !15117
  %arraydecay11 = getelementptr inbounds [4 x float], [4 x float]* %bevp0_quat, i64 0, i64 0, !dbg !15118
  %21 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !15119
  %quat12 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %21, i32 0, i32 9, !dbg !15120
  %arraydecay13 = getelementptr inbounds [4 x float], [4 x float]* %quat12, i64 0, i64 0, !dbg !15119
  call void @interp_qt_qtqt(float* %arraydecay10, float* %arraydecay11, float* %arraydecay13, float 5.000000e-01), !dbg !15121
  %arraydecay14 = getelementptr inbounds [4 x float], [4 x float]* %q, i64 0, i64 0, !dbg !15122
  %call = call float @normalize_qt(float* %arraydecay14), !dbg !15123
  %arraydecay15 = getelementptr inbounds [4 x float], [4 x float]* %q, i64 0, i64 0, !dbg !15124
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %zaxis, i64 0, i64 0, !dbg !15125
  call void @mul_qt_v3(float* %arraydecay15, float* %arraydecay16), !dbg !15126
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !15127
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %zaxis, i64 0, i64 0, !dbg !15128
  %22 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15129
  %dir = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %22, i32 0, i32 7, !dbg !15130
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !15129
  call void @cross_v3_v3v3(float* %arraydecay17, float* %arraydecay18, float* %arraydecay19), !dbg !15131
  %arraydecay20 = getelementptr inbounds [4 x float], [4 x float]* %q2, i64 0, i64 0, !dbg !15132
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !15133
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %zaxis, i64 0, i64 0, !dbg !15134
  %23 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15135
  %dir23 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %23, i32 0, i32 7, !dbg !15136
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %dir23, i64 0, i64 0, !dbg !15135
  %call25 = call float @angle_normalized_v3v3(float* %arraydecay22, float* %arraydecay24), !dbg !15137
  call void @axis_angle_to_quat(float* %arraydecay20, float* %arraydecay21, float %call25), !dbg !15138
  %arraydecay26 = getelementptr inbounds [4 x float], [4 x float]* %q2, i64 0, i64 0, !dbg !15139
  %call27 = call float @normalize_qt(float* %arraydecay26), !dbg !15140
  %arraydecay28 = getelementptr inbounds [4 x float], [4 x float]* %bevp0_quat, i64 0, i64 0, !dbg !15141
  %24 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15142
  %quat29 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %24, i32 0, i32 9, !dbg !15143
  %arraydecay30 = getelementptr inbounds [4 x float], [4 x float]* %quat29, i64 0, i64 0, !dbg !15142
  call void @copy_qt_qt(float* %arraydecay28, float* %arraydecay30), !dbg !15144
  %arraydecay31 = getelementptr inbounds [4 x float], [4 x float]* %q, i64 0, i64 0, !dbg !15145
  %arraydecay32 = getelementptr inbounds [4 x float], [4 x float]* %q2, i64 0, i64 0, !dbg !15146
  %arraydecay33 = getelementptr inbounds [4 x float], [4 x float]* %q, i64 0, i64 0, !dbg !15147
  call void @mul_qt_qtqt(float* %arraydecay31, float* %arraydecay32, float* %arraydecay33), !dbg !15148
  %25 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15149
  %quat34 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %25, i32 0, i32 9, !dbg !15150
  %arraydecay35 = getelementptr inbounds [4 x float], [4 x float]* %quat34, i64 0, i64 0, !dbg !15149
  %26 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15151
  %quat36 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %26, i32 0, i32 9, !dbg !15152
  %arraydecay37 = getelementptr inbounds [4 x float], [4 x float]* %quat36, i64 0, i64 0, !dbg !15151
  %arraydecay38 = getelementptr inbounds [4 x float], [4 x float]* %q, i64 0, i64 0, !dbg !15153
  call void @interp_qt_qtqt(float* %arraydecay35, float* %arraydecay37, float* %arraydecay38, float 5.000000e-01), !dbg !15154
  %27 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15155
  %quat39 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %27, i32 0, i32 9, !dbg !15156
  %arraydecay40 = getelementptr inbounds [4 x float], [4 x float]* %quat39, i64 0, i64 0, !dbg !15155
  %call41 = call float @normalize_qt(float* %arraydecay40), !dbg !15157
  %28 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !15158
  store %struct.BevPoint* %28, %struct.BevPoint** %bevp1, align 8, !dbg !15159
  %29 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !15160
  %incdec.ptr42 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %29, i32 1, !dbg !15160
  store %struct.BevPoint* %incdec.ptr42, %struct.BevPoint** %bevp2, align 8, !dbg !15160
  br label %while.cond, !dbg !15108, !llvm.loop !15161

while.end:                                        ; preds = %while.cond
  br label %for.inc, !dbg !15163

for.inc:                                          ; preds = %while.end
  %30 = load i32, i32* %a, align 4, !dbg !15164
  %inc = add nsw i32 %30, 1, !dbg !15164
  store i32 %inc, i32* %a, align 4, !dbg !15164
  br label %for.cond, !dbg !15165, !llvm.loop !15166

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15168
}

; Function Attrs: noinline nounwind uwtable
define internal void @bevel_list_apply_tilt(%struct.BevList* %bl) #0 !dbg !15169 {
entry:
  %bl.addr = alloca %struct.BevList*, align 8
  %bevp2 = alloca %struct.BevPoint*, align 8
  %bevp1 = alloca %struct.BevPoint*, align 8
  %nr = alloca i32, align 4
  %q = alloca [4 x float], align 16
  store %struct.BevList* %bl, %struct.BevList** %bl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BevList** %bl.addr, metadata !15170, metadata !DIExpression()), !dbg !15171
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp2, metadata !15172, metadata !DIExpression()), !dbg !15173
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp1, metadata !15174, metadata !DIExpression()), !dbg !15175
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !15176, metadata !DIExpression()), !dbg !15177
  call void @llvm.dbg.declare(metadata [4 x float]* %q, metadata !15178, metadata !DIExpression()), !dbg !15179
  %0 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !15180
  %bevpoints = getelementptr inbounds %struct.BevList, %struct.BevList* %0, i32 0, i32 9, !dbg !15181
  %arraydecay = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints, i64 0, i64 0, !dbg !15180
  store %struct.BevPoint* %arraydecay, %struct.BevPoint** %bevp2, align 8, !dbg !15182
  %1 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !15183
  %2 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !15184
  %nr1 = getelementptr inbounds %struct.BevList, %struct.BevList* %2, i32 0, i32 2, !dbg !15185
  %3 = load i32, i32* %nr1, align 8, !dbg !15185
  %sub = sub nsw i32 %3, 1, !dbg !15186
  %idx.ext = sext i32 %sub to i64, !dbg !15187
  %add.ptr = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %1, i64 %idx.ext, !dbg !15187
  store %struct.BevPoint* %add.ptr, %struct.BevPoint** %bevp1, align 8, !dbg !15188
  %4 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !15189
  %nr2 = getelementptr inbounds %struct.BevList, %struct.BevList* %4, i32 0, i32 2, !dbg !15190
  %5 = load i32, i32* %nr2, align 8, !dbg !15190
  store i32 %5, i32* %nr, align 4, !dbg !15191
  br label %while.cond, !dbg !15192

while.cond:                                       ; preds = %while.body, %entry
  %6 = load i32, i32* %nr, align 4, !dbg !15193
  %dec = add nsw i32 %6, -1, !dbg !15193
  store i32 %dec, i32* %nr, align 4, !dbg !15193
  %tobool = icmp ne i32 %6, 0, !dbg !15192
  br i1 %tobool, label %while.body, label %while.end, !dbg !15192

while.body:                                       ; preds = %while.cond
  %arraydecay3 = getelementptr inbounds [4 x float], [4 x float]* %q, i64 0, i64 0, !dbg !15194
  %7 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15196
  %dir = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %7, i32 0, i32 7, !dbg !15197
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !15196
  %8 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15198
  %alfa = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %8, i32 0, i32 1, !dbg !15199
  %9 = load float, float* %alfa, align 4, !dbg !15199
  call void @axis_angle_to_quat(float* %arraydecay3, float* %arraydecay4, float %9), !dbg !15200
  %10 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15201
  %quat = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %10, i32 0, i32 9, !dbg !15202
  %arraydecay5 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !15201
  %arraydecay6 = getelementptr inbounds [4 x float], [4 x float]* %q, i64 0, i64 0, !dbg !15203
  %11 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15204
  %quat7 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %11, i32 0, i32 9, !dbg !15205
  %arraydecay8 = getelementptr inbounds [4 x float], [4 x float]* %quat7, i64 0, i64 0, !dbg !15204
  call void @mul_qt_qtqt(float* %arraydecay5, float* %arraydecay6, float* %arraydecay8), !dbg !15206
  %12 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15207
  %quat9 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %12, i32 0, i32 9, !dbg !15208
  %arraydecay10 = getelementptr inbounds [4 x float], [4 x float]* %quat9, i64 0, i64 0, !dbg !15207
  %call = call float @normalize_qt(float* %arraydecay10), !dbg !15209
  %13 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !15210
  store %struct.BevPoint* %13, %struct.BevPoint** %bevp1, align 8, !dbg !15211
  %14 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !15212
  %incdec.ptr = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %14, i32 1, !dbg !15212
  store %struct.BevPoint* %incdec.ptr, %struct.BevPoint** %bevp2, align 8, !dbg !15212
  br label %while.cond, !dbg !15192, !llvm.loop !15213

while.end:                                        ; preds = %while.cond
  ret void, !dbg !15215
}

; Function Attrs: noinline nounwind uwtable
define internal void @bevel_list_calc_bisect(%struct.BevList* %bl) #0 !dbg !15216 {
entry:
  %bl.addr = alloca %struct.BevList*, align 8
  %bevp2 = alloca %struct.BevPoint*, align 8
  %bevp1 = alloca %struct.BevPoint*, align 8
  %bevp0 = alloca %struct.BevPoint*, align 8
  %nr = alloca i32, align 4
  %is_cyclic = alloca i8, align 1
  store %struct.BevList* %bl, %struct.BevList** %bl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BevList** %bl.addr, metadata !15217, metadata !DIExpression()), !dbg !15218
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp2, metadata !15219, metadata !DIExpression()), !dbg !15220
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp1, metadata !15221, metadata !DIExpression()), !dbg !15222
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp0, metadata !15223, metadata !DIExpression()), !dbg !15224
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !15225, metadata !DIExpression()), !dbg !15226
  call void @llvm.dbg.declare(metadata i8* %is_cyclic, metadata !15227, metadata !DIExpression()), !dbg !15228
  %0 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !15229
  %poly = getelementptr inbounds %struct.BevList, %struct.BevList* %0, i32 0, i32 4, !dbg !15230
  %1 = load i32, i32* %poly, align 8, !dbg !15230
  %cmp = icmp ne i32 %1, -1, !dbg !15231
  %conv = zext i1 %cmp to i32, !dbg !15231
  %conv1 = trunc i32 %conv to i8, !dbg !15229
  store i8 %conv1, i8* %is_cyclic, align 1, !dbg !15228
  %2 = load i8, i8* %is_cyclic, align 1, !dbg !15232
  %tobool = icmp ne i8 %2, 0, !dbg !15232
  br i1 %tobool, label %if.then, label %if.else, !dbg !15234

if.then:                                          ; preds = %entry
  %3 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !15235
  %bevpoints = getelementptr inbounds %struct.BevList, %struct.BevList* %3, i32 0, i32 9, !dbg !15237
  %arraydecay = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints, i64 0, i64 0, !dbg !15235
  store %struct.BevPoint* %arraydecay, %struct.BevPoint** %bevp2, align 8, !dbg !15238
  %4 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !15239
  %5 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !15240
  %nr2 = getelementptr inbounds %struct.BevList, %struct.BevList* %5, i32 0, i32 2, !dbg !15241
  %6 = load i32, i32* %nr2, align 8, !dbg !15241
  %sub = sub nsw i32 %6, 1, !dbg !15242
  %idx.ext = sext i32 %sub to i64, !dbg !15243
  %add.ptr = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %4, i64 %idx.ext, !dbg !15243
  store %struct.BevPoint* %add.ptr, %struct.BevPoint** %bevp1, align 8, !dbg !15244
  %7 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15245
  %add.ptr3 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %7, i64 -1, !dbg !15246
  store %struct.BevPoint* %add.ptr3, %struct.BevPoint** %bevp0, align 8, !dbg !15247
  %8 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !15248
  %nr4 = getelementptr inbounds %struct.BevList, %struct.BevList* %8, i32 0, i32 2, !dbg !15249
  %9 = load i32, i32* %nr4, align 8, !dbg !15249
  store i32 %9, i32* %nr, align 4, !dbg !15250
  br label %if.end, !dbg !15251

if.else:                                          ; preds = %entry
  %10 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !15252
  %bevpoints5 = getelementptr inbounds %struct.BevList, %struct.BevList* %10, i32 0, i32 9, !dbg !15254
  %arraydecay6 = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints5, i64 0, i64 0, !dbg !15252
  store %struct.BevPoint* %arraydecay6, %struct.BevPoint** %bevp0, align 8, !dbg !15255
  %11 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !15256
  %add.ptr7 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %11, i64 1, !dbg !15257
  store %struct.BevPoint* %add.ptr7, %struct.BevPoint** %bevp1, align 8, !dbg !15258
  %12 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15259
  %add.ptr8 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %12, i64 1, !dbg !15260
  store %struct.BevPoint* %add.ptr8, %struct.BevPoint** %bevp2, align 8, !dbg !15261
  %13 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !15262
  %nr9 = getelementptr inbounds %struct.BevList, %struct.BevList* %13, i32 0, i32 2, !dbg !15263
  %14 = load i32, i32* %nr9, align 8, !dbg !15263
  %sub10 = sub nsw i32 %14, 2, !dbg !15264
  store i32 %sub10, i32* %nr, align 4, !dbg !15265
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !15266

while.cond:                                       ; preds = %while.body, %if.end
  %15 = load i32, i32* %nr, align 4, !dbg !15267
  %dec = add nsw i32 %15, -1, !dbg !15267
  store i32 %dec, i32* %nr, align 4, !dbg !15267
  %tobool11 = icmp ne i32 %15, 0, !dbg !15266
  br i1 %tobool11, label %while.body, label %while.end, !dbg !15266

while.body:                                       ; preds = %while.cond
  %16 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15268
  %dir = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %16, i32 0, i32 7, !dbg !15270
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !15268
  %17 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !15271
  %vec = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %17, i32 0, i32 0, !dbg !15272
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15271
  %18 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15273
  %vec14 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %18, i32 0, i32 0, !dbg !15274
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %vec14, i64 0, i64 0, !dbg !15273
  %19 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !15275
  %vec16 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %19, i32 0, i32 0, !dbg !15276
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %vec16, i64 0, i64 0, !dbg !15275
  call void @bisect_v3_v3v3v3(float* %arraydecay12, float* %arraydecay13, float* %arraydecay15, float* %arraydecay17), !dbg !15277
  %20 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15278
  store %struct.BevPoint* %20, %struct.BevPoint** %bevp0, align 8, !dbg !15279
  %21 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !15280
  store %struct.BevPoint* %21, %struct.BevPoint** %bevp1, align 8, !dbg !15281
  %22 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !15282
  %incdec.ptr = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %22, i32 1, !dbg !15282
  store %struct.BevPoint* %incdec.ptr, %struct.BevPoint** %bevp2, align 8, !dbg !15282
  br label %while.cond, !dbg !15266, !llvm.loop !15283

while.end:                                        ; preds = %while.cond
  ret void, !dbg !15285
}

; Function Attrs: noinline nounwind uwtable
define internal void @bevel_list_flip_tangents(%struct.BevList* %bl) #0 !dbg !15286 {
entry:
  %bl.addr = alloca %struct.BevList*, align 8
  %bevp2 = alloca %struct.BevPoint*, align 8
  %bevp1 = alloca %struct.BevPoint*, align 8
  %bevp0 = alloca %struct.BevPoint*, align 8
  %nr = alloca i32, align 4
  store %struct.BevList* %bl, %struct.BevList** %bl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BevList** %bl.addr, metadata !15287, metadata !DIExpression()), !dbg !15288
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp2, metadata !15289, metadata !DIExpression()), !dbg !15290
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp1, metadata !15291, metadata !DIExpression()), !dbg !15292
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %bevp0, metadata !15293, metadata !DIExpression()), !dbg !15294
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !15295, metadata !DIExpression()), !dbg !15296
  %0 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !15297
  %bevpoints = getelementptr inbounds %struct.BevList, %struct.BevList* %0, i32 0, i32 9, !dbg !15298
  %arraydecay = getelementptr inbounds [0 x %struct.BevPoint], [0 x %struct.BevPoint]* %bevpoints, i64 0, i64 0, !dbg !15297
  store %struct.BevPoint* %arraydecay, %struct.BevPoint** %bevp2, align 8, !dbg !15299
  %1 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !15300
  %2 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !15301
  %nr1 = getelementptr inbounds %struct.BevList, %struct.BevList* %2, i32 0, i32 2, !dbg !15302
  %3 = load i32, i32* %nr1, align 8, !dbg !15302
  %sub = sub nsw i32 %3, 1, !dbg !15303
  %idx.ext = sext i32 %sub to i64, !dbg !15304
  %add.ptr = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %1, i64 %idx.ext, !dbg !15304
  store %struct.BevPoint* %add.ptr, %struct.BevPoint** %bevp1, align 8, !dbg !15305
  %4 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15306
  %add.ptr2 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %4, i64 -1, !dbg !15307
  store %struct.BevPoint* %add.ptr2, %struct.BevPoint** %bevp0, align 8, !dbg !15308
  %5 = load %struct.BevList*, %struct.BevList** %bl.addr, align 8, !dbg !15309
  %nr3 = getelementptr inbounds %struct.BevList, %struct.BevList* %5, i32 0, i32 2, !dbg !15310
  %6 = load i32, i32* %nr3, align 8, !dbg !15310
  store i32 %6, i32* %nr, align 4, !dbg !15311
  br label %while.cond, !dbg !15312

while.cond:                                       ; preds = %if.end, %entry
  %7 = load i32, i32* %nr, align 4, !dbg !15313
  %dec = add nsw i32 %7, -1, !dbg !15313
  store i32 %dec, i32* %nr, align 4, !dbg !15313
  %tobool = icmp ne i32 %7, 0, !dbg !15312
  br i1 %tobool, label %while.body, label %while.end, !dbg !15312

while.body:                                       ; preds = %while.cond
  %8 = load %struct.BevPoint*, %struct.BevPoint** %bevp0, align 8, !dbg !15314
  %tan = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %8, i32 0, i32 8, !dbg !15317
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %tan, i64 0, i64 0, !dbg !15314
  %9 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15318
  %tan5 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %9, i32 0, i32 8, !dbg !15319
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %tan5, i64 0, i64 0, !dbg !15318
  %call = call float @angle_normalized_v3v3(float* %arraydecay4, float* %arraydecay6), !dbg !15320
  %cmp = fcmp ogt float %call, 0x3FF921FB60000000, !dbg !15321
  br i1 %cmp, label %if.then, label %if.end, !dbg !15322

if.then:                                          ; preds = %while.body
  %10 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15323
  %tan7 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %10, i32 0, i32 8, !dbg !15324
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %tan7, i64 0, i64 0, !dbg !15323
  call void @negate_v3(float* %arraydecay8), !dbg !15325
  br label %if.end, !dbg !15325

if.end:                                           ; preds = %if.then, %while.body
  %11 = load %struct.BevPoint*, %struct.BevPoint** %bevp1, align 8, !dbg !15326
  store %struct.BevPoint* %11, %struct.BevPoint** %bevp0, align 8, !dbg !15327
  %12 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !15328
  store %struct.BevPoint* %12, %struct.BevPoint** %bevp1, align 8, !dbg !15329
  %13 = load %struct.BevPoint*, %struct.BevPoint** %bevp2, align 8, !dbg !15330
  %incdec.ptr = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %13, i32 1, !dbg !15330
  store %struct.BevPoint* %incdec.ptr, %struct.BevPoint** %bevp2, align 8, !dbg !15330
  br label %while.cond, !dbg !15312, !llvm.loop !15331

while.end:                                        ; preds = %while.cond
  ret void, !dbg !15333
}

declare dso_local float @tri_to_quat(float*, float*, float*, float*) #2

declare dso_local float @angle_normalized_v3v3(float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @negate_v3(float* %r) #0 !dbg !15334 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !15335, metadata !DIExpression()), !dbg !15336
  %0 = load float*, float** %r.addr, align 8, !dbg !15337
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !15337
  %1 = load float, float* %arrayidx, align 4, !dbg !15337
  %fneg = fneg float %1, !dbg !15338
  %2 = load float*, float** %r.addr, align 8, !dbg !15339
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !15339
  store float %fneg, float* %arrayidx1, align 4, !dbg !15340
  %3 = load float*, float** %r.addr, align 8, !dbg !15341
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !15341
  %4 = load float, float* %arrayidx2, align 4, !dbg !15341
  %fneg3 = fneg float %4, !dbg !15342
  %5 = load float*, float** %r.addr, align 8, !dbg !15343
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !15343
  store float %fneg3, float* %arrayidx4, align 4, !dbg !15344
  %6 = load float*, float** %r.addr, align 8, !dbg !15345
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !15345
  %7 = load float, float* %arrayidx5, align 4, !dbg !15345
  %fneg6 = fneg float %7, !dbg !15346
  %8 = load float*, float** %r.addr, align 8, !dbg !15347
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !15347
  store float %fneg6, float* %arrayidx7, align 4, !dbg !15348
  ret void, !dbg !15349
}

; Function Attrs: noinline nounwind uwtable
define internal void @minimum_twist_between_two_points(%struct.BevPoint* %current_point, %struct.BevPoint* %previous_point) #0 !dbg !15350 {
entry:
  %current_point.addr = alloca %struct.BevPoint*, align 8
  %previous_point.addr = alloca %struct.BevPoint*, align 8
  %angle = alloca float, align 4
  %q = alloca [4 x float], align 16
  %cross_tmp = alloca [3 x float], align 4
  store %struct.BevPoint* %current_point, %struct.BevPoint** %current_point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %current_point.addr, metadata !15353, metadata !DIExpression()), !dbg !15354
  store %struct.BevPoint* %previous_point, %struct.BevPoint** %previous_point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BevPoint** %previous_point.addr, metadata !15355, metadata !DIExpression()), !dbg !15356
  call void @llvm.dbg.declare(metadata float* %angle, metadata !15357, metadata !DIExpression()), !dbg !15358
  %0 = load %struct.BevPoint*, %struct.BevPoint** %previous_point.addr, align 8, !dbg !15359
  %dir = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %0, i32 0, i32 7, !dbg !15360
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !15359
  %1 = load %struct.BevPoint*, %struct.BevPoint** %current_point.addr, align 8, !dbg !15361
  %dir1 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %1, i32 0, i32 7, !dbg !15362
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %dir1, i64 0, i64 0, !dbg !15361
  %call = call float @angle_normalized_v3v3(float* %arraydecay, float* %arraydecay2), !dbg !15363
  store float %call, float* %angle, align 4, !dbg !15358
  call void @llvm.dbg.declare(metadata [4 x float]* %q, metadata !15364, metadata !DIExpression()), !dbg !15365
  %2 = load float, float* %angle, align 4, !dbg !15366
  %cmp = fcmp ogt float %2, 0.000000e+00, !dbg !15368
  br i1 %cmp, label %if.then, label %if.else, !dbg !15369

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %cross_tmp, metadata !15370, metadata !DIExpression()), !dbg !15372
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %cross_tmp, i64 0, i64 0, !dbg !15373
  %3 = load %struct.BevPoint*, %struct.BevPoint** %previous_point.addr, align 8, !dbg !15374
  %dir4 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %3, i32 0, i32 7, !dbg !15375
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %dir4, i64 0, i64 0, !dbg !15374
  %4 = load %struct.BevPoint*, %struct.BevPoint** %current_point.addr, align 8, !dbg !15376
  %dir6 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %4, i32 0, i32 7, !dbg !15377
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %dir6, i64 0, i64 0, !dbg !15376
  call void @cross_v3_v3v3(float* %arraydecay3, float* %arraydecay5, float* %arraydecay7), !dbg !15378
  %arraydecay8 = getelementptr inbounds [4 x float], [4 x float]* %q, i64 0, i64 0, !dbg !15379
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %cross_tmp, i64 0, i64 0, !dbg !15380
  %5 = load float, float* %angle, align 4, !dbg !15381
  call void @axis_angle_to_quat(float* %arraydecay8, float* %arraydecay9, float %5), !dbg !15382
  %6 = load %struct.BevPoint*, %struct.BevPoint** %current_point.addr, align 8, !dbg !15383
  %quat = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %6, i32 0, i32 9, !dbg !15384
  %arraydecay10 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !15383
  %arraydecay11 = getelementptr inbounds [4 x float], [4 x float]* %q, i64 0, i64 0, !dbg !15385
  %7 = load %struct.BevPoint*, %struct.BevPoint** %previous_point.addr, align 8, !dbg !15386
  %quat12 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %7, i32 0, i32 9, !dbg !15387
  %arraydecay13 = getelementptr inbounds [4 x float], [4 x float]* %quat12, i64 0, i64 0, !dbg !15386
  call void @mul_qt_qtqt(float* %arraydecay10, float* %arraydecay11, float* %arraydecay13), !dbg !15388
  br label %if.end, !dbg !15389

if.else:                                          ; preds = %entry
  %8 = load %struct.BevPoint*, %struct.BevPoint** %current_point.addr, align 8, !dbg !15390
  %quat14 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %8, i32 0, i32 9, !dbg !15392
  %arraydecay15 = getelementptr inbounds [4 x float], [4 x float]* %quat14, i64 0, i64 0, !dbg !15390
  %9 = load %struct.BevPoint*, %struct.BevPoint** %previous_point.addr, align 8, !dbg !15393
  %quat16 = getelementptr inbounds %struct.BevPoint, %struct.BevPoint* %9, i32 0, i32 9, !dbg !15394
  %arraydecay17 = getelementptr inbounds [4 x float], [4 x float]* %quat16, i64 0, i64 0, !dbg !15393
  call void @copy_qt_qt(float* %arraydecay15, float* %arraydecay17), !dbg !15395
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !15396
}

declare dso_local void @mul_qt_v3(float*, float*) #2

declare dso_local void @interp_qt_qtqt(float*, float*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3v3fl(float* %r, float* %a, float* %b, float %f) #0 !dbg !15397 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !15400, metadata !DIExpression()), !dbg !15401
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !15402, metadata !DIExpression()), !dbg !15403
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !15404, metadata !DIExpression()), !dbg !15405
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !15406, metadata !DIExpression()), !dbg !15407
  %0 = load float*, float** %a.addr, align 8, !dbg !15408
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !15408
  %1 = load float, float* %arrayidx, align 4, !dbg !15408
  %2 = load float*, float** %b.addr, align 8, !dbg !15409
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !15409
  %3 = load float, float* %arrayidx1, align 4, !dbg !15409
  %4 = load float, float* %f.addr, align 4, !dbg !15410
  %mul = fmul float %3, %4, !dbg !15411
  %add = fadd float %1, %mul, !dbg !15412
  %5 = load float*, float** %r.addr, align 8, !dbg !15413
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 0, !dbg !15413
  store float %add, float* %arrayidx2, align 4, !dbg !15414
  %6 = load float*, float** %a.addr, align 8, !dbg !15415
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !15415
  %7 = load float, float* %arrayidx3, align 4, !dbg !15415
  %8 = load float*, float** %b.addr, align 8, !dbg !15416
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !15416
  %9 = load float, float* %arrayidx4, align 4, !dbg !15416
  %10 = load float, float* %f.addr, align 4, !dbg !15417
  %mul5 = fmul float %9, %10, !dbg !15418
  %add6 = fadd float %7, %mul5, !dbg !15419
  %11 = load float*, float** %r.addr, align 8, !dbg !15420
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 1, !dbg !15420
  store float %add6, float* %arrayidx7, align 4, !dbg !15421
  %12 = load float*, float** %a.addr, align 8, !dbg !15422
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !15422
  %13 = load float, float* %arrayidx8, align 4, !dbg !15422
  %14 = load float*, float** %b.addr, align 8, !dbg !15423
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 2, !dbg !15423
  %15 = load float, float* %arrayidx9, align 4, !dbg !15423
  %16 = load float, float* %f.addr, align 4, !dbg !15424
  %mul10 = fmul float %15, %16, !dbg !15425
  %add11 = fadd float %13, %mul10, !dbg !15426
  %17 = load float*, float** %r.addr, align 8, !dbg !15427
  %arrayidx12 = getelementptr inbounds float, float* %17, i64 2, !dbg !15427
  store float %add11, float* %arrayidx12, align 4, !dbg !15428
  ret void, !dbg !15429
}

; Function Attrs: noinline nounwind uwtable
define internal void @nurbList_handles_swap_select(%struct.Nurb* %nu) #0 !dbg !15430 {
entry:
  %nu.addr = alloca %struct.Nurb*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %i = alloca i32, align 4
  store %struct.Nurb* %nu, %struct.Nurb** %nu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu.addr, metadata !15431, metadata !DIExpression()), !dbg !15432
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !15433, metadata !DIExpression()), !dbg !15434
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15435, metadata !DIExpression()), !dbg !15436
  %0 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !15437
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %0, i32 0, i32 6, !dbg !15439
  %1 = load i32, i32* %pntsu, align 8, !dbg !15439
  store i32 %1, i32* %i, align 4, !dbg !15440
  %2 = load %struct.Nurb*, %struct.Nurb** %nu.addr, align 8, !dbg !15441
  %bezt1 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %2, i32 0, i32 18, !dbg !15442
  %3 = load %struct.BezTriple*, %struct.BezTriple** %bezt1, align 8, !dbg !15442
  store %struct.BezTriple* %3, %struct.BezTriple** %bezt, align 8, !dbg !15443
  br label %for.cond, !dbg !15444

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !15445
  %dec = add nsw i32 %4, -1, !dbg !15445
  store i32 %dec, i32* %i, align 4, !dbg !15445
  %tobool = icmp ne i32 %4, 0, !dbg !15447
  br i1 %tobool, label %for.body, label %for.end, !dbg !15447

for.body:                                         ; preds = %for.cond
  %5 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !15448
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %5, i32 0, i32 7, !dbg !15451
  %6 = load i8, i8* %f1, align 1, !dbg !15451
  %conv = zext i8 %6 to i32, !dbg !15448
  %and = and i32 %conv, 1, !dbg !15452
  %7 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !15453
  %f3 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %7, i32 0, i32 9, !dbg !15454
  %8 = load i8, i8* %f3, align 1, !dbg !15454
  %conv2 = zext i8 %8 to i32, !dbg !15453
  %and3 = and i32 %conv2, 1, !dbg !15455
  %cmp = icmp ne i32 %and, %and3, !dbg !15456
  br i1 %cmp, label %if.then, label %if.end, !dbg !15457

if.then:                                          ; preds = %for.body
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !15458
  %f15 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %9, i32 0, i32 7, !dbg !15460
  %10 = load i8, i8* %f15, align 1, !dbg !15461
  %conv6 = zext i8 %10 to i32, !dbg !15461
  %xor = xor i32 %conv6, 1, !dbg !15461
  %conv7 = trunc i32 %xor to i8, !dbg !15461
  store i8 %conv7, i8* %f15, align 1, !dbg !15461
  %11 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !15462
  %f38 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %11, i32 0, i32 9, !dbg !15463
  %12 = load i8, i8* %f38, align 1, !dbg !15464
  %conv9 = zext i8 %12 to i32, !dbg !15464
  %xor10 = xor i32 %conv9, 1, !dbg !15464
  %conv11 = trunc i32 %xor10 to i8, !dbg !15464
  store i8 %conv11, i8* %f38, align 1, !dbg !15464
  br label %if.end, !dbg !15465

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !15466

for.inc:                                          ; preds = %if.end
  %13 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !15467
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %13, i32 1, !dbg !15467
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt, align 8, !dbg !15467
  br label %for.cond, !dbg !15468, !llvm.loop !15469

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15471
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1842, !1843, !1844}
!llvm.ident = !{!1845}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !42, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "blender/source/blender/blenkernel/intern/curve.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !18, !24, !28, !36}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 339, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17}
!7 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!9 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!10 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!11 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!12 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!13 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!14 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!15 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!16 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!17 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !19, line: 310, baseType: !5, size: 32, elements: !20)
!19 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "CU_BEVFAC_MAP_RESOLU", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "CU_BEVFAC_MAP_SEGMENT", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "CU_BEVFAC_MAP_SPLINE", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 103, baseType: !5, size: 32, elements: !25)
!25 = !{!26, !27}
!26 = !DIEnumerator(name: "BOUNDBOX_DISABLED", value: 1, isUnsigned: true)
!27 = !DIEnumerator(name: "BOUNDBOX_DIRTY", value: 2, isUnsigned: true)
!28 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBezTriple_Handle", file: !19, line: 361, baseType: !5, size: 32, elements: !29)
!29 = !{!30, !31, !32, !33, !34, !35}
!30 = !DIEnumerator(name: "HD_FREE", value: 0, isUnsigned: true)
!31 = !DIEnumerator(name: "HD_AUTO", value: 1, isUnsigned: true)
!32 = !DIEnumerator(name: "HD_VECT", value: 2, isUnsigned: true)
!33 = !DIEnumerator(name: "HD_ALIGN", value: 3, isUnsigned: true)
!34 = !DIEnumerator(name: "HD_AUTO_ANIM", value: 4, isUnsigned: true)
!35 = !DIEnumerator(name: "HD_ALIGN_DOUBLESIDE", value: 5, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 519, baseType: !5, size: 32, elements: !37)
!37 = !{!38, !39, !40, !41}
!38 = !DIEnumerator(name: "OB_RECALC_OB", value: 1, isUnsigned: true)
!39 = !DIEnumerator(name: "OB_RECALC_DATA", value: 2, isUnsigned: true)
!40 = !DIEnumerator(name: "OB_RECALC_TIME", value: 4, isUnsigned: true)
!41 = !DIEnumerator(name: "OB_RECALC_ALL", value: 7, isUnsigned: true)
!42 = !{!43, !49, !114, !1782, !1817, !1805, !1325, !1840, !1841, !1468, !128, !79}
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !45, line: 130, baseType: !46)
!45 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!46 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !45, line: 117, size: 960, elements: !47)
!47 = !{!48, !50, !51, !53, !72, !76, !78, !80, !81, !82}
!48 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !46, file: !45, line: 118, baseType: !49, size: 64)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !46, file: !45, line: 118, baseType: !49, size: 64, offset: 64)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !46, file: !45, line: 119, baseType: !52, size: 64, offset: 128)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 64)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !46, file: !45, line: 120, baseType: !54, size: 64, offset: 192)
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!55 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !45, line: 136, size: 17600, elements: !56)
!56 = !{!57, !58, !59, !62, !67, !68, !69}
!57 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !55, file: !45, line: 137, baseType: !44, size: 960)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !55, file: !45, line: 138, baseType: !43, size: 64, offset: 960)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !55, file: !45, line: 139, baseType: !60, size: 64, offset: 1024)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 64)
!61 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !45, line: 43, flags: DIFlagFwdDecl)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !55, file: !45, line: 140, baseType: !63, size: 8192, offset: 1088)
!63 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 8192, elements: !65)
!64 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!65 = !{!66}
!66 = !DISubrange(count: 1024)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !55, file: !45, line: 141, baseType: !63, size: 8192, offset: 9280)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !55, file: !45, line: 148, baseType: !54, size: 64, offset: 17472)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !55, file: !45, line: 150, baseType: !70, size: 64, offset: 17536)
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!71 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !45, line: 45, flags: DIFlagFwdDecl)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !46, file: !45, line: 121, baseType: !73, size: 528, offset: 256)
!73 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 528, elements: !74)
!74 = !{!75}
!75 = !DISubrange(count: 66)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !46, file: !45, line: 126, baseType: !77, size: 16, offset: 784)
!77 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !46, file: !45, line: 127, baseType: !79, size: 32, offset: 800)
!79 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !46, file: !45, line: 128, baseType: !79, size: 32, offset: 832)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !46, file: !45, line: 128, baseType: !79, size: 32, offset: 864)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !46, file: !45, line: 129, baseType: !83, size: 64, offset: 896)
!83 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !45, line: 75, baseType: !85)
!85 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !45, line: 62, size: 1024, elements: !86)
!86 = !{!87, !89, !90, !91, !92, !93, !97, !98, !112, !113}
!87 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !85, file: !45, line: 63, baseType: !88, size: 64)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 64)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !85, file: !45, line: 63, baseType: !88, size: 64, offset: 64)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !85, file: !45, line: 64, baseType: !64, size: 8, offset: 128)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !85, file: !45, line: 64, baseType: !64, size: 8, offset: 136)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !85, file: !45, line: 65, baseType: !77, size: 16, offset: 144)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !85, file: !45, line: 66, baseType: !94, size: 512, offset: 160)
!94 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 512, elements: !95)
!95 = !{!96}
!96 = !DISubrange(count: 64)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !85, file: !45, line: 67, baseType: !79, size: 32, offset: 672)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !85, file: !45, line: 69, baseType: !99, size: 256, offset: 704)
!99 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !45, line: 60, baseType: !100)
!100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !45, line: 48, size: 256, elements: !101)
!101 = !{!102, !103, !110, !111}
!102 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !100, file: !45, line: 49, baseType: !49, size: 64)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !100, file: !45, line: 58, baseType: !104, size: 128, offset: 64)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !105, line: 71, baseType: !106)
!105 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !105, line: 69, size: 128, elements: !107)
!107 = !{!108, !109}
!108 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !106, file: !105, line: 70, baseType: !49, size: 64)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !106, file: !105, line: 70, baseType: !49, size: 64, offset: 64)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !100, file: !45, line: 59, baseType: !79, size: 32, offset: 192)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !100, file: !45, line: 59, baseType: !79, size: 32, offset: 224)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !85, file: !45, line: 70, baseType: !79, size: 32, offset: 960)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !85, file: !45, line: 74, baseType: !79, size: 32, offset: 992)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curve", file: !19, line: 273, baseType: !116)
!116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Curve", file: !19, line: 193, size: 4224, elements: !117)
!117 = !{!118, !119, !122, !134, !135, !150, !1625, !1626, !1627, !1628, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1748, !1749, !1761, !1762, !1763, !1764, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !116, file: !19, line: 194, baseType: !44, size: 960)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !116, file: !19, line: 195, baseType: !120, size: 64, offset: 960)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64)
!121 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !19, line: 48, flags: DIFlagFwdDecl)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !116, file: !19, line: 197, baseType: !123, size: 64, offset: 1024)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 64)
!124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !4, line: 97, size: 832, elements: !125)
!125 = !{!126, !132, !133}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !124, file: !4, line: 98, baseType: !127, size: 768)
!127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 768, elements: !129)
!128 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!129 = !{!130, !131}
!130 = !DISubrange(count: 8)
!131 = !DISubrange(count: 3)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !124, file: !4, line: 99, baseType: !79, size: 32, offset: 768)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !124, file: !4, line: 99, baseType: !79, size: 32, offset: 800)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "nurb", scope: !116, file: !19, line: 199, baseType: !104, size: 128, offset: 1088)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "editnurb", scope: !116, file: !19, line: 201, baseType: !136, size: 64, offset: 1216)
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditNurb", file: !19, line: 191, baseType: !138)
!138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditNurb", file: !19, line: 180, size: 256, elements: !139)
!139 = !{!140, !141, !145, !146}
!140 = !DIDerivedType(tag: DW_TAG_member, name: "nurbs", scope: !138, file: !19, line: 182, baseType: !104, size: 128)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "keyindex", scope: !138, file: !19, line: 185, baseType: !142, size: 64, offset: 128)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!143 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !144, line: 48, flags: DIFlagFwdDecl)
!144 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!145 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !138, file: !19, line: 188, baseType: !79, size: 32, offset: 192)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !138, file: !19, line: 190, baseType: !147, size: 32, offset: 224)
!147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 32, elements: !148)
!148 = !{!149}
!149 = !DISubrange(count: 4)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "bevobj", scope: !116, file: !19, line: 203, baseType: !151, size: 64, offset: 1280)
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !4, line: 115, size: 11392, elements: !153)
!153 = !{!154, !155, !156, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !173, !174, !188, !189, !230, !231, !235, !236, !252, !253, !254, !255, !256, !257, !258, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1558, !1561, !1562, !1563, !1564, !1565, !1566, !1569, !1591, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1603, !1606, !1609, !1610, !1613, !1614}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !152, file: !4, line: 116, baseType: !44, size: 960)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !152, file: !4, line: 117, baseType: !120, size: 64, offset: 960)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !152, file: !4, line: 119, baseType: !157, size: 64, offset: 1024)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 64)
!158 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !4, line: 57, flags: DIFlagFwdDecl)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !152, file: !4, line: 121, baseType: !77, size: 16, offset: 1088)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !152, file: !4, line: 121, baseType: !77, size: 16, offset: 1104)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !152, file: !4, line: 122, baseType: !79, size: 32, offset: 1120)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !152, file: !4, line: 122, baseType: !79, size: 32, offset: 1152)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !152, file: !4, line: 122, baseType: !79, size: 32, offset: 1184)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !152, file: !4, line: 123, baseType: !94, size: 512, offset: 1216)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !152, file: !4, line: 124, baseType: !151, size: 64, offset: 1728)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !152, file: !4, line: 124, baseType: !151, size: 64, offset: 1792)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !152, file: !4, line: 127, baseType: !151, size: 64, offset: 1856)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !152, file: !4, line: 127, baseType: !151, size: 64, offset: 1920)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !152, file: !4, line: 127, baseType: !151, size: 64, offset: 1984)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !152, file: !4, line: 128, baseType: !171, size: 64, offset: 2048)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 64)
!172 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !19, line: 44, flags: DIFlagFwdDecl)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !152, file: !4, line: 130, baseType: !123, size: 64, offset: 2112)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !152, file: !4, line: 131, baseType: !175, size: 64, offset: 2176)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !177, line: 486, size: 1600, elements: !178)
!177 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!178 = !{!179, !180, !181, !182, !183, !184, !185, !186, !187}
!179 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !176, file: !177, line: 487, baseType: !44, size: 960)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !176, file: !177, line: 489, baseType: !104, size: 128, offset: 960)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !176, file: !177, line: 490, baseType: !104, size: 128, offset: 1088)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !176, file: !177, line: 491, baseType: !104, size: 128, offset: 1216)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !176, file: !177, line: 492, baseType: !104, size: 128, offset: 1344)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !176, file: !177, line: 494, baseType: !79, size: 32, offset: 1472)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !176, file: !177, line: 495, baseType: !79, size: 32, offset: 1504)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !176, file: !177, line: 497, baseType: !79, size: 32, offset: 1536)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !176, file: !177, line: 498, baseType: !79, size: 32, offset: 1568)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !152, file: !4, line: 132, baseType: !175, size: 64, offset: 2240)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !152, file: !4, line: 133, baseType: !190, size: 64, offset: 2304)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !177, line: 334, size: 1728, elements: !192)
!192 = !{!193, !194, !195, !196, !197, !198, !199, !200, !203, !204, !205, !206, !207, !208, !209, !229}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !191, file: !177, line: 335, baseType: !104, size: 128)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !191, file: !177, line: 336, baseType: !142, size: 64, offset: 128)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !191, file: !177, line: 338, baseType: !77, size: 16, offset: 192)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !191, file: !177, line: 338, baseType: !77, size: 16, offset: 208)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !191, file: !177, line: 339, baseType: !5, size: 32, offset: 224)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !191, file: !177, line: 340, baseType: !79, size: 32, offset: 256)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !191, file: !177, line: 342, baseType: !128, size: 32, offset: 288)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !191, file: !177, line: 343, baseType: !201, size: 96, offset: 320)
!201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 96, elements: !202)
!202 = !{!131}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !191, file: !177, line: 344, baseType: !201, size: 96, offset: 416)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !191, file: !177, line: 347, baseType: !104, size: 128, offset: 512)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !191, file: !177, line: 349, baseType: !79, size: 32, offset: 640)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !191, file: !177, line: 350, baseType: !79, size: 32, offset: 672)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !191, file: !177, line: 351, baseType: !49, size: 64, offset: 704)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !191, file: !177, line: 352, baseType: !49, size: 64, offset: 768)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !191, file: !177, line: 354, baseType: !210, size: 384, offset: 832)
!210 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !177, line: 116, baseType: !211)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !177, line: 94, size: 384, elements: !212)
!212 = !{!213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !211, file: !177, line: 96, baseType: !79, size: 32)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !211, file: !177, line: 96, baseType: !79, size: 32, offset: 32)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !211, file: !177, line: 97, baseType: !79, size: 32, offset: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !211, file: !177, line: 97, baseType: !79, size: 32, offset: 96)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !211, file: !177, line: 99, baseType: !77, size: 16, offset: 128)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !211, file: !177, line: 100, baseType: !77, size: 16, offset: 144)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !211, file: !177, line: 102, baseType: !77, size: 16, offset: 160)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !211, file: !177, line: 105, baseType: !77, size: 16, offset: 176)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !211, file: !177, line: 108, baseType: !77, size: 16, offset: 192)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !211, file: !177, line: 109, baseType: !77, size: 16, offset: 208)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !211, file: !177, line: 111, baseType: !77, size: 16, offset: 224)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !211, file: !177, line: 112, baseType: !77, size: 16, offset: 240)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !211, file: !177, line: 114, baseType: !79, size: 32, offset: 256)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !211, file: !177, line: 114, baseType: !79, size: 32, offset: 288)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !211, file: !177, line: 115, baseType: !79, size: 32, offset: 320)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !211, file: !177, line: 115, baseType: !79, size: 32, offset: 352)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !191, file: !177, line: 355, baseType: !94, size: 512, offset: 1216)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !152, file: !4, line: 134, baseType: !49, size: 64, offset: 2368)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !152, file: !4, line: 136, baseType: !232, size: 64, offset: 2432)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!233 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !234, line: 61, flags: DIFlagFwdDecl)
!234 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!235 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !152, file: !4, line: 138, baseType: !210, size: 384, offset: 2496)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !152, file: !4, line: 139, baseType: !237, size: 64, offset: 2880)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64)
!238 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !177, line: 80, baseType: !239)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !177, line: 72, size: 192, elements: !240)
!240 = !{!241, !248, !249, !250, !251}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !239, file: !177, line: 73, baseType: !242, size: 64)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !177, line: 59, baseType: !244)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !177, line: 56, size: 128, elements: !245)
!245 = !{!246, !247}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !244, file: !177, line: 57, baseType: !201, size: 96)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !244, file: !177, line: 58, baseType: !79, size: 32, offset: 96)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !239, file: !177, line: 74, baseType: !79, size: 32, offset: 64)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !239, file: !177, line: 76, baseType: !79, size: 32, offset: 96)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !239, file: !177, line: 77, baseType: !79, size: 32, offset: 128)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !239, file: !177, line: 79, baseType: !79, size: 32, offset: 160)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !152, file: !4, line: 141, baseType: !104, size: 128, offset: 2944)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !152, file: !4, line: 142, baseType: !104, size: 128, offset: 3072)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !152, file: !4, line: 143, baseType: !104, size: 128, offset: 3200)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !152, file: !4, line: 144, baseType: !104, size: 128, offset: 3328)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !152, file: !4, line: 146, baseType: !79, size: 32, offset: 3456)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !152, file: !4, line: 147, baseType: !79, size: 32, offset: 3488)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !152, file: !4, line: 150, baseType: !259, size: 64, offset: 3520)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64)
!261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !262, line: 93, size: 7552, elements: !263)
!262 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!263 = !{!264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !312, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !379, !380, !381, !382, !383, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !1428, !1429, !1430, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1471}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !261, file: !262, line: 94, baseType: !44, size: 960)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !261, file: !262, line: 95, baseType: !120, size: 64, offset: 960)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !261, file: !262, line: 97, baseType: !77, size: 16, offset: 1024)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !261, file: !262, line: 97, baseType: !77, size: 16, offset: 1040)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !261, file: !262, line: 99, baseType: !128, size: 32, offset: 1056)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !261, file: !262, line: 99, baseType: !128, size: 32, offset: 1088)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !261, file: !262, line: 99, baseType: !128, size: 32, offset: 1120)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !261, file: !262, line: 100, baseType: !128, size: 32, offset: 1152)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !261, file: !262, line: 100, baseType: !128, size: 32, offset: 1184)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !261, file: !262, line: 100, baseType: !128, size: 32, offset: 1216)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !261, file: !262, line: 101, baseType: !128, size: 32, offset: 1248)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !261, file: !262, line: 101, baseType: !128, size: 32, offset: 1280)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !261, file: !262, line: 101, baseType: !128, size: 32, offset: 1312)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !261, file: !262, line: 102, baseType: !128, size: 32, offset: 1344)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !261, file: !262, line: 102, baseType: !128, size: 32, offset: 1376)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !261, file: !262, line: 102, baseType: !128, size: 32, offset: 1408)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !261, file: !262, line: 103, baseType: !128, size: 32, offset: 1440)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !261, file: !262, line: 103, baseType: !128, size: 32, offset: 1472)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !261, file: !262, line: 103, baseType: !128, size: 32, offset: 1504)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !261, file: !262, line: 103, baseType: !128, size: 32, offset: 1536)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !261, file: !262, line: 103, baseType: !128, size: 32, offset: 1568)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !261, file: !262, line: 104, baseType: !128, size: 32, offset: 1600)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !261, file: !262, line: 104, baseType: !128, size: 32, offset: 1632)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !261, file: !262, line: 104, baseType: !128, size: 32, offset: 1664)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !261, file: !262, line: 104, baseType: !128, size: 32, offset: 1696)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !261, file: !262, line: 104, baseType: !128, size: 32, offset: 1728)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !261, file: !262, line: 105, baseType: !128, size: 32, offset: 1760)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !261, file: !262, line: 108, baseType: !292, size: 704, offset: 1792)
!292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !262, line: 53, size: 704, elements: !293)
!293 = !{!294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !292, file: !262, line: 54, baseType: !128, size: 32)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !292, file: !262, line: 55, baseType: !128, size: 32, offset: 32)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !292, file: !262, line: 56, baseType: !128, size: 32, offset: 64)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !292, file: !262, line: 57, baseType: !128, size: 32, offset: 96)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !292, file: !262, line: 59, baseType: !201, size: 96, offset: 128)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !292, file: !262, line: 60, baseType: !201, size: 96, offset: 224)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !292, file: !262, line: 61, baseType: !201, size: 96, offset: 320)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !292, file: !262, line: 63, baseType: !128, size: 32, offset: 416)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !292, file: !262, line: 64, baseType: !128, size: 32, offset: 448)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !292, file: !262, line: 65, baseType: !128, size: 32, offset: 480)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !292, file: !262, line: 67, baseType: !77, size: 16, offset: 512)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !292, file: !262, line: 68, baseType: !77, size: 16, offset: 528)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !292, file: !262, line: 69, baseType: !77, size: 16, offset: 544)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !292, file: !262, line: 70, baseType: !77, size: 16, offset: 560)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !292, file: !262, line: 72, baseType: !128, size: 32, offset: 576)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !292, file: !262, line: 73, baseType: !128, size: 32, offset: 608)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !292, file: !262, line: 74, baseType: !128, size: 32, offset: 640)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !292, file: !262, line: 75, baseType: !128, size: 32, offset: 672)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !261, file: !262, line: 109, baseType: !313, size: 128, offset: 2496)
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !262, line: 79, size: 128, elements: !314)
!314 = !{!315, !316, !317, !318}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !313, file: !262, line: 80, baseType: !79, size: 32)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !313, file: !262, line: 81, baseType: !79, size: 32, offset: 32)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !313, file: !262, line: 82, baseType: !79, size: 32, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !313, file: !262, line: 83, baseType: !79, size: 32, offset: 96)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !261, file: !262, line: 111, baseType: !128, size: 32, offset: 2624)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !261, file: !262, line: 111, baseType: !128, size: 32, offset: 2656)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !261, file: !262, line: 112, baseType: !128, size: 32, offset: 2688)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !261, file: !262, line: 112, baseType: !128, size: 32, offset: 2720)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !261, file: !262, line: 113, baseType: !128, size: 32, offset: 2752)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !261, file: !262, line: 114, baseType: !128, size: 32, offset: 2784)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !261, file: !262, line: 114, baseType: !128, size: 32, offset: 2816)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !261, file: !262, line: 115, baseType: !77, size: 16, offset: 2848)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !261, file: !262, line: 115, baseType: !77, size: 16, offset: 2864)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !261, file: !262, line: 116, baseType: !77, size: 16, offset: 2880)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !261, file: !262, line: 117, baseType: !64, size: 8, offset: 2896)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !261, file: !262, line: 117, baseType: !64, size: 8, offset: 2904)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !261, file: !262, line: 119, baseType: !128, size: 32, offset: 2912)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !261, file: !262, line: 119, baseType: !128, size: 32, offset: 2944)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !261, file: !262, line: 120, baseType: !77, size: 16, offset: 2976)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !261, file: !262, line: 120, baseType: !77, size: 16, offset: 2992)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !261, file: !262, line: 121, baseType: !128, size: 32, offset: 3008)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !261, file: !262, line: 121, baseType: !128, size: 32, offset: 3040)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !261, file: !262, line: 122, baseType: !128, size: 32, offset: 3072)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !261, file: !262, line: 123, baseType: !128, size: 32, offset: 3104)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !261, file: !262, line: 124, baseType: !77, size: 16, offset: 3136)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !261, file: !262, line: 125, baseType: !77, size: 16, offset: 3152)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !261, file: !262, line: 127, baseType: !79, size: 32, offset: 3168)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !261, file: !262, line: 127, baseType: !79, size: 32, offset: 3200)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !261, file: !262, line: 128, baseType: !79, size: 32, offset: 3232)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !261, file: !262, line: 128, baseType: !79, size: 32, offset: 3264)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !261, file: !262, line: 129, baseType: !77, size: 16, offset: 3296)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !261, file: !262, line: 129, baseType: !77, size: 16, offset: 3312)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !261, file: !262, line: 129, baseType: !77, size: 16, offset: 3328)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !261, file: !262, line: 129, baseType: !77, size: 16, offset: 3344)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !261, file: !262, line: 130, baseType: !128, size: 32, offset: 3360)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !261, file: !262, line: 130, baseType: !128, size: 32, offset: 3392)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !261, file: !262, line: 130, baseType: !128, size: 32, offset: 3424)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !261, file: !262, line: 130, baseType: !128, size: 32, offset: 3456)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !261, file: !262, line: 131, baseType: !128, size: 32, offset: 3488)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !261, file: !262, line: 131, baseType: !128, size: 32, offset: 3520)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !261, file: !262, line: 131, baseType: !128, size: 32, offset: 3552)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !261, file: !262, line: 131, baseType: !128, size: 32, offset: 3584)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !261, file: !262, line: 132, baseType: !128, size: 32, offset: 3616)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !261, file: !262, line: 132, baseType: !128, size: 32, offset: 3648)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !261, file: !262, line: 133, baseType: !94, size: 512, offset: 3680)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !261, file: !262, line: 135, baseType: !128, size: 32, offset: 4192)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !261, file: !262, line: 136, baseType: !128, size: 32, offset: 4224)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !261, file: !262, line: 137, baseType: !128, size: 32, offset: 4256)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !261, file: !262, line: 138, baseType: !79, size: 32, offset: 4288)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !261, file: !262, line: 141, baseType: !64, size: 8, offset: 4320)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !261, file: !262, line: 141, baseType: !64, size: 8, offset: 4328)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !261, file: !262, line: 141, baseType: !64, size: 8, offset: 4336)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !261, file: !262, line: 141, baseType: !64, size: 8, offset: 4344)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !261, file: !262, line: 142, baseType: !77, size: 16, offset: 4352)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !261, file: !262, line: 142, baseType: !77, size: 16, offset: 4368)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !261, file: !262, line: 142, baseType: !77, size: 16, offset: 4384)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !261, file: !262, line: 145, baseType: !64, size: 8, offset: 4400)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !261, file: !262, line: 145, baseType: !64, size: 8, offset: 4408)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !261, file: !262, line: 148, baseType: !77, size: 16, offset: 4416)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !261, file: !262, line: 148, baseType: !77, size: 16, offset: 4432)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !261, file: !262, line: 149, baseType: !128, size: 32, offset: 4448)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !261, file: !262, line: 149, baseType: !128, size: 32, offset: 4480)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !261, file: !262, line: 152, baseType: !378, size: 128, offset: 4512)
!378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 128, elements: !148)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !261, file: !262, line: 153, baseType: !128, size: 32, offset: 4640)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !261, file: !262, line: 154, baseType: !128, size: 32, offset: 4672)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !261, file: !262, line: 157, baseType: !77, size: 16, offset: 4704)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !261, file: !262, line: 157, baseType: !77, size: 16, offset: 4720)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !261, file: !262, line: 160, baseType: !384, size: 64, offset: 4736)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !386, line: 113, size: 6208, elements: !387)
!386 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!387 = !{!388, !389, !390, !391, !392, !393, !397}
!388 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !385, file: !386, line: 114, baseType: !77, size: 16)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !385, file: !386, line: 114, baseType: !77, size: 16, offset: 16)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !385, file: !386, line: 115, baseType: !64, size: 8, offset: 32)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !385, file: !386, line: 115, baseType: !64, size: 8, offset: 40)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !385, file: !386, line: 116, baseType: !64, size: 8, offset: 48)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !385, file: !386, line: 117, baseType: !394, size: 8, offset: 56)
!394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 8, elements: !395)
!395 = !{!396}
!396 = !DISubrange(count: 1)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !385, file: !386, line: 119, baseType: !398, size: 6144, offset: 64)
!398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !399, size: 6144, elements: !408)
!399 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !386, line: 109, baseType: !400)
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !386, line: 106, size: 192, elements: !401)
!401 = !{!402, !403, !404, !405, !406, !407}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !400, file: !386, line: 107, baseType: !128, size: 32)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !400, file: !386, line: 107, baseType: !128, size: 32, offset: 32)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !400, file: !386, line: 107, baseType: !128, size: 32, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !400, file: !386, line: 107, baseType: !128, size: 32, offset: 96)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !400, file: !386, line: 107, baseType: !128, size: 32, offset: 128)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !400, file: !386, line: 108, baseType: !79, size: 32, offset: 160)
!408 = !{!409}
!409 = !DISubrange(count: 32)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !261, file: !262, line: 161, baseType: !384, size: 64, offset: 4800)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !261, file: !262, line: 162, baseType: !64, size: 8, offset: 4864)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !261, file: !262, line: 162, baseType: !64, size: 8, offset: 4872)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !261, file: !262, line: 163, baseType: !64, size: 8, offset: 4880)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !261, file: !262, line: 163, baseType: !64, size: 8, offset: 4888)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !261, file: !262, line: 164, baseType: !77, size: 16, offset: 4896)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !261, file: !262, line: 164, baseType: !77, size: 16, offset: 4912)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !261, file: !262, line: 165, baseType: !128, size: 32, offset: 4928)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !261, file: !262, line: 165, baseType: !128, size: 32, offset: 4960)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !261, file: !262, line: 167, baseType: !420, size: 1152, offset: 4992)
!420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 1152, elements: !1426)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !386, line: 57, size: 2496, elements: !423)
!423 = !{!424, !425, !426, !427, !428, !429, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !422, file: !386, line: 59, baseType: !77, size: 16)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !422, file: !386, line: 59, baseType: !77, size: 16, offset: 16)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !422, file: !386, line: 59, baseType: !77, size: 16, offset: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !422, file: !386, line: 59, baseType: !77, size: 16, offset: 48)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !422, file: !386, line: 60, baseType: !151, size: 64, offset: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !422, file: !386, line: 61, baseType: !430, size: 64, offset: 128)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !386, line: 202, size: 3328, elements: !432)
!432 = !{!433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !1274, !1275, !1276, !1277, !1278, !1306, !1307, !1337, !1357, !1365, !1366}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !431, file: !386, line: 203, baseType: !44, size: 960)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !431, file: !386, line: 204, baseType: !120, size: 64, offset: 960)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !431, file: !386, line: 206, baseType: !128, size: 32, offset: 1024)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !431, file: !386, line: 206, baseType: !128, size: 32, offset: 1056)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !431, file: !386, line: 207, baseType: !128, size: 32, offset: 1088)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !431, file: !386, line: 207, baseType: !128, size: 32, offset: 1120)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !431, file: !386, line: 207, baseType: !128, size: 32, offset: 1152)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !431, file: !386, line: 207, baseType: !128, size: 32, offset: 1184)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !431, file: !386, line: 207, baseType: !128, size: 32, offset: 1216)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !431, file: !386, line: 207, baseType: !128, size: 32, offset: 1248)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !431, file: !386, line: 208, baseType: !128, size: 32, offset: 1280)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !431, file: !386, line: 208, baseType: !128, size: 32, offset: 1312)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !431, file: !386, line: 211, baseType: !128, size: 32, offset: 1344)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !431, file: !386, line: 211, baseType: !128, size: 32, offset: 1376)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !431, file: !386, line: 211, baseType: !128, size: 32, offset: 1408)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !431, file: !386, line: 211, baseType: !128, size: 32, offset: 1440)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !431, file: !386, line: 211, baseType: !128, size: 32, offset: 1472)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !431, file: !386, line: 214, baseType: !128, size: 32, offset: 1504)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !431, file: !386, line: 214, baseType: !128, size: 32, offset: 1536)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !431, file: !386, line: 217, baseType: !128, size: 32, offset: 1568)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !431, file: !386, line: 218, baseType: !128, size: 32, offset: 1600)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !431, file: !386, line: 219, baseType: !128, size: 32, offset: 1632)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !431, file: !386, line: 220, baseType: !128, size: 32, offset: 1664)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !431, file: !386, line: 221, baseType: !128, size: 32, offset: 1696)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !431, file: !386, line: 222, baseType: !77, size: 16, offset: 1728)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !431, file: !386, line: 222, baseType: !77, size: 16, offset: 1744)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !431, file: !386, line: 224, baseType: !77, size: 16, offset: 1760)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !431, file: !386, line: 224, baseType: !77, size: 16, offset: 1776)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !431, file: !386, line: 227, baseType: !77, size: 16, offset: 1792)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !431, file: !386, line: 227, baseType: !77, size: 16, offset: 1808)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !431, file: !386, line: 229, baseType: !77, size: 16, offset: 1824)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !431, file: !386, line: 229, baseType: !77, size: 16, offset: 1840)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !431, file: !386, line: 230, baseType: !77, size: 16, offset: 1856)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !431, file: !386, line: 230, baseType: !77, size: 16, offset: 1872)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !431, file: !386, line: 232, baseType: !128, size: 32, offset: 1888)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !431, file: !386, line: 232, baseType: !128, size: 32, offset: 1920)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !431, file: !386, line: 232, baseType: !128, size: 32, offset: 1952)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !431, file: !386, line: 232, baseType: !128, size: 32, offset: 1984)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !431, file: !386, line: 233, baseType: !79, size: 32, offset: 2016)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !431, file: !386, line: 234, baseType: !79, size: 32, offset: 2048)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !431, file: !386, line: 235, baseType: !77, size: 16, offset: 2080)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !431, file: !386, line: 235, baseType: !77, size: 16, offset: 2096)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !431, file: !386, line: 236, baseType: !77, size: 16, offset: 2112)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !431, file: !386, line: 239, baseType: !77, size: 16, offset: 2128)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !431, file: !386, line: 240, baseType: !79, size: 32, offset: 2144)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !431, file: !386, line: 241, baseType: !79, size: 32, offset: 2176)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !431, file: !386, line: 241, baseType: !79, size: 32, offset: 2208)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !431, file: !386, line: 241, baseType: !79, size: 32, offset: 2240)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !431, file: !386, line: 243, baseType: !128, size: 32, offset: 2272)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !431, file: !386, line: 243, baseType: !128, size: 32, offset: 2304)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !431, file: !386, line: 244, baseType: !128, size: 32, offset: 2336)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !431, file: !386, line: 246, baseType: !485, size: 320, offset: 2368)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !486, line: 50, size: 320, elements: !487)
!486 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!487 = !{!488, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !485, file: !486, line: 51, baseType: !489, size: 64)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !234, line: 1216, size: 39680, elements: !491)
!491 = !{!492, !493, !494, !495, !498, !499, !500, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !526, !529, !828, !831, !1129, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1151, !1152, !1153, !1154, !1155, !1163, !1230, !1237, !1238, !1245, !1248, !1254, !1255, !1256, !1257, !1258}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !490, file: !234, line: 1217, baseType: !44, size: 960)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !490, file: !234, line: 1218, baseType: !120, size: 64, offset: 960)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !490, file: !234, line: 1220, baseType: !151, size: 64, offset: 1024)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !490, file: !234, line: 1221, baseType: !496, size: 64, offset: 1088)
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64)
!497 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !234, line: 52, flags: DIFlagFwdDecl)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !490, file: !234, line: 1223, baseType: !489, size: 64, offset: 1152)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !490, file: !234, line: 1225, baseType: !104, size: 128, offset: 1216)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !490, file: !234, line: 1226, baseType: !501, size: 64, offset: 1344)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 64)
!502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !234, line: 69, size: 320, elements: !503)
!503 = !{!504, !505, !506, !507, !508, !509, !510, !511}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !502, file: !234, line: 70, baseType: !501, size: 64)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !502, file: !234, line: 70, baseType: !501, size: 64, offset: 64)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !502, file: !234, line: 71, baseType: !5, size: 32, offset: 128)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !502, file: !234, line: 71, baseType: !5, size: 32, offset: 160)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !502, file: !234, line: 72, baseType: !79, size: 32, offset: 192)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !502, file: !234, line: 73, baseType: !77, size: 16, offset: 224)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !502, file: !234, line: 73, baseType: !77, size: 16, offset: 240)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !502, file: !234, line: 74, baseType: !151, size: 64, offset: 256)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !490, file: !234, line: 1227, baseType: !151, size: 64, offset: 1408)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !490, file: !234, line: 1229, baseType: !201, size: 96, offset: 1472)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !490, file: !234, line: 1230, baseType: !201, size: 96, offset: 1568)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !490, file: !234, line: 1231, baseType: !201, size: 96, offset: 1664)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !490, file: !234, line: 1231, baseType: !201, size: 96, offset: 1760)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !490, file: !234, line: 1233, baseType: !5, size: 32, offset: 1856)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !490, file: !234, line: 1234, baseType: !79, size: 32, offset: 1888)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !490, file: !234, line: 1235, baseType: !5, size: 32, offset: 1920)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !490, file: !234, line: 1237, baseType: !77, size: 16, offset: 1952)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !490, file: !234, line: 1239, baseType: !64, size: 8, offset: 1968)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !490, file: !234, line: 1240, baseType: !394, size: 8, offset: 1976)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !490, file: !234, line: 1242, baseType: !524, size: 64, offset: 1984)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64)
!525 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !262, line: 47, flags: DIFlagFwdDecl)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !490, file: !234, line: 1244, baseType: !527, size: 64, offset: 2048)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!528 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !234, line: 59, flags: DIFlagFwdDecl)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !490, file: !234, line: 1246, baseType: !530, size: 64, offset: 2112)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !234, line: 1067, size: 5184, elements: !532)
!532 = !{!533, !564, !565, !580, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !602, !699, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !748, !749, !750, !751, !752, !753, !754, !755, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !811}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !531, file: !234, line: 1068, baseType: !534, size: 64)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !234, line: 934, baseType: !536)
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !234, line: 925, size: 576, elements: !537)
!537 = !{!538, !555, !556, !557, !558, !560, !563}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !536, file: !234, line: 926, baseType: !539, size: 320)
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !234, line: 830, baseType: !540)
!540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !234, line: 813, size: 320, elements: !541)
!541 = !{!542, !545, !548, !549, !552, !553, !554}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !540, file: !234, line: 814, baseType: !543, size: 64)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !234, line: 51, flags: DIFlagFwdDecl)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !540, file: !234, line: 815, baseType: !546, size: 64, offset: 64)
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!547 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !234, line: 815, flags: DIFlagFwdDecl)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !540, file: !234, line: 818, baseType: !49, size: 64, offset: 128)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !540, file: !234, line: 819, baseType: !550, size: 32, offset: 192)
!550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !551, size: 32, elements: !148)
!551 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !540, file: !234, line: 822, baseType: !79, size: 32, offset: 224)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !540, file: !234, line: 826, baseType: !79, size: 32, offset: 256)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !540, file: !234, line: 829, baseType: !79, size: 32, offset: 288)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !536, file: !234, line: 928, baseType: !77, size: 16, offset: 320)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !536, file: !234, line: 928, baseType: !77, size: 16, offset: 336)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !536, file: !234, line: 929, baseType: !79, size: 32, offset: 352)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !536, file: !234, line: 930, baseType: !559, size: 64, offset: 384)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !536, file: !234, line: 931, baseType: !561, size: 64, offset: 448)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !234, line: 931, flags: DIFlagFwdDecl)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !536, file: !234, line: 933, baseType: !49, size: 64, offset: 512)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !531, file: !234, line: 1069, baseType: !534, size: 64, offset: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !531, file: !234, line: 1070, baseType: !566, size: 64, offset: 128)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !234, line: 916, baseType: !568)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !234, line: 891, size: 704, elements: !569)
!569 = !{!570, !571, !572, !574, !575, !576, !577, !578, !579}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !568, file: !234, line: 892, baseType: !539, size: 320)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !568, file: !234, line: 896, baseType: !79, size: 32, offset: 320)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !568, file: !234, line: 900, baseType: !573, size: 96, offset: 352)
!573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !79, size: 96, elements: !202)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !568, file: !234, line: 903, baseType: !128, size: 32, offset: 448)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !568, file: !234, line: 906, baseType: !79, size: 32, offset: 480)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !568, file: !234, line: 909, baseType: !128, size: 32, offset: 512)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !568, file: !234, line: 912, baseType: !128, size: 32, offset: 544)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !568, file: !234, line: 914, baseType: !151, size: 64, offset: 576)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !568, file: !234, line: 915, baseType: !49, size: 64, offset: 640)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !531, file: !234, line: 1071, baseType: !581, size: 64, offset: 192)
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 64)
!582 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !234, line: 920, baseType: !583)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !234, line: 918, size: 320, elements: !584)
!584 = !{!585}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !583, file: !234, line: 919, baseType: !539, size: 320)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !531, file: !234, line: 1075, baseType: !128, size: 32, offset: 256)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !531, file: !234, line: 1077, baseType: !128, size: 32, offset: 288)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !531, file: !234, line: 1078, baseType: !128, size: 32, offset: 320)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !531, file: !234, line: 1079, baseType: !77, size: 16, offset: 352)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !531, file: !234, line: 1082, baseType: !77, size: 16, offset: 368)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !531, file: !234, line: 1085, baseType: !64, size: 8, offset: 384)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !531, file: !234, line: 1086, baseType: !64, size: 8, offset: 392)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !531, file: !234, line: 1087, baseType: !64, size: 8, offset: 400)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !531, file: !234, line: 1088, baseType: !64, size: 8, offset: 408)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !531, file: !234, line: 1090, baseType: !128, size: 32, offset: 416)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !531, file: !234, line: 1093, baseType: !77, size: 16, offset: 448)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !531, file: !234, line: 1096, baseType: !64, size: 8, offset: 464)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !531, file: !234, line: 1098, baseType: !599, size: 40, offset: 472)
!599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 40, elements: !600)
!600 = !{!601}
!601 = !DISubrange(count: 5)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !531, file: !234, line: 1101, baseType: !603, size: 832, offset: 512)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !234, line: 836, size: 832, elements: !604)
!604 = !{!605, !606, !607, !608, !609, !610, !614, !615, !616, !695, !696, !697, !698}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !603, file: !234, line: 837, baseType: !539, size: 320)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !603, file: !234, line: 839, baseType: !77, size: 16, offset: 320)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !603, file: !234, line: 839, baseType: !77, size: 16, offset: 336)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !603, file: !234, line: 842, baseType: !77, size: 16, offset: 352)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !603, file: !234, line: 842, baseType: !77, size: 16, offset: 368)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !603, file: !234, line: 843, baseType: !611, size: 32, offset: 384)
!611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !77, size: 32, elements: !612)
!612 = !{!613}
!613 = !DISubrange(count: 2)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !603, file: !234, line: 845, baseType: !79, size: 32, offset: 416)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !603, file: !234, line: 847, baseType: !49, size: 64, offset: 448)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !603, file: !234, line: 848, baseType: !617, size: 64, offset: 512)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !486, line: 77, size: 15424, elements: !619)
!619 = !{!620, !621, !622, !625, !628, !631, !634, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !684, !685, !689}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !618, file: !486, line: 78, baseType: !44, size: 960)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !618, file: !486, line: 80, baseType: !63, size: 8192, offset: 960)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !618, file: !486, line: 82, baseType: !623, size: 64, offset: 9152)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!624 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !486, line: 43, flags: DIFlagFwdDecl)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !618, file: !486, line: 83, baseType: !626, size: 64, offset: 9216)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!627 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !45, line: 46, flags: DIFlagFwdDecl)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !618, file: !486, line: 86, baseType: !629, size: 64, offset: 9280)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !486, line: 41, flags: DIFlagFwdDecl)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !618, file: !486, line: 87, baseType: !632, size: 64, offset: 9344)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!633 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !486, line: 44, flags: DIFlagFwdDecl)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !618, file: !486, line: 89, baseType: !635, size: 512, offset: 9408)
!635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !632, size: 512, elements: !636)
!636 = !{!130}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !618, file: !486, line: 90, baseType: !77, size: 16, offset: 9920)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !618, file: !486, line: 90, baseType: !77, size: 16, offset: 9936)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !618, file: !486, line: 92, baseType: !77, size: 16, offset: 9952)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !618, file: !486, line: 92, baseType: !77, size: 16, offset: 9968)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !618, file: !486, line: 93, baseType: !77, size: 16, offset: 9984)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !618, file: !486, line: 93, baseType: !77, size: 16, offset: 10000)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !618, file: !486, line: 94, baseType: !79, size: 32, offset: 10016)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !618, file: !486, line: 97, baseType: !77, size: 16, offset: 10048)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !618, file: !486, line: 97, baseType: !77, size: 16, offset: 10064)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !618, file: !486, line: 98, baseType: !77, size: 16, offset: 10080)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !618, file: !486, line: 98, baseType: !77, size: 16, offset: 10096)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !618, file: !486, line: 99, baseType: !77, size: 16, offset: 10112)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !618, file: !486, line: 99, baseType: !77, size: 16, offset: 10128)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !618, file: !486, line: 100, baseType: !5, size: 32, offset: 10144)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !618, file: !486, line: 101, baseType: !559, size: 64, offset: 10176)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !618, file: !486, line: 103, baseType: !70, size: 64, offset: 10240)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !618, file: !486, line: 104, baseType: !654, size: 64, offset: 10304)
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !45, line: 159, size: 448, elements: !656)
!656 = !{!657, !659, !660, !661, !662, !664}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !655, file: !45, line: 161, baseType: !658, size: 64)
!658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !612)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !655, file: !45, line: 162, baseType: !658, size: 64, offset: 64)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !655, file: !45, line: 163, baseType: !611, size: 32, offset: 128)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !655, file: !45, line: 164, baseType: !611, size: 32, offset: 160)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !655, file: !45, line: 165, baseType: !663, size: 128, offset: 192)
!663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !559, size: 128, elements: !612)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !655, file: !45, line: 166, baseType: !665, size: 128, offset: 320)
!665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, size: 128, elements: !612)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !618, file: !486, line: 107, baseType: !128, size: 32, offset: 10368)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !618, file: !486, line: 108, baseType: !79, size: 32, offset: 10400)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !618, file: !486, line: 109, baseType: !77, size: 16, offset: 10432)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !618, file: !486, line: 110, baseType: !77, size: 16, offset: 10448)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !618, file: !486, line: 113, baseType: !79, size: 32, offset: 10464)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !618, file: !486, line: 113, baseType: !79, size: 32, offset: 10496)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !618, file: !486, line: 114, baseType: !64, size: 8, offset: 10528)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !618, file: !486, line: 114, baseType: !64, size: 8, offset: 10536)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !618, file: !486, line: 115, baseType: !77, size: 16, offset: 10544)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !618, file: !486, line: 116, baseType: !378, size: 128, offset: 10560)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !618, file: !486, line: 119, baseType: !128, size: 32, offset: 10688)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !618, file: !486, line: 119, baseType: !128, size: 32, offset: 10720)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !618, file: !486, line: 122, baseType: !679, size: 512, offset: 10752)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !680, line: 182, baseType: !681)
!680 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !680, line: 180, size: 512, elements: !682)
!682 = !{!683}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !681, file: !680, line: 181, baseType: !94, size: 512)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !618, file: !486, line: 123, baseType: !64, size: 8, offset: 11264)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !618, file: !486, line: 125, baseType: !686, size: 56, offset: 11272)
!686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 56, elements: !687)
!687 = !{!688}
!688 = !DISubrange(count: 7)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !618, file: !486, line: 126, baseType: !690, size: 4096, offset: 11328)
!690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !691, size: 4096, elements: !636)
!691 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !486, line: 69, baseType: !692)
!692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !486, line: 67, size: 512, elements: !693)
!693 = !{!694}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !692, file: !486, line: 68, baseType: !94, size: 512)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !603, file: !234, line: 849, baseType: !617, size: 64, offset: 576)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !603, file: !234, line: 850, baseType: !617, size: 64, offset: 640)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !603, file: !234, line: 851, baseType: !201, size: 96, offset: 704)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !603, file: !234, line: 852, baseType: !128, size: 32, offset: 800)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !531, file: !234, line: 1104, baseType: !700, size: 1344, offset: 1344)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !234, line: 867, size: 1344, elements: !701)
!701 = !{!702, !703, !704, !705, !706, !717, !718, !719, !720, !721, !722, !723, !724, !725}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !700, file: !234, line: 868, baseType: !77, size: 16)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !700, file: !234, line: 869, baseType: !77, size: 16, offset: 16)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !700, file: !234, line: 870, baseType: !77, size: 16, offset: 32)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !700, file: !234, line: 871, baseType: !77, size: 16, offset: 48)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !700, file: !234, line: 873, baseType: !707, size: 896, offset: 64)
!707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !708, size: 896, elements: !687)
!708 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !234, line: 864, baseType: !709)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !234, line: 859, size: 128, elements: !710)
!710 = !{!711, !712, !713, !714, !715, !716}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !709, file: !234, line: 860, baseType: !77, size: 16)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !709, file: !234, line: 861, baseType: !77, size: 16, offset: 16)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !709, file: !234, line: 861, baseType: !77, size: 16, offset: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !709, file: !234, line: 861, baseType: !77, size: 16, offset: 48)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !709, file: !234, line: 862, baseType: !79, size: 32, offset: 64)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !709, file: !234, line: 863, baseType: !128, size: 32, offset: 96)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !700, file: !234, line: 874, baseType: !49, size: 64, offset: 960)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !700, file: !234, line: 876, baseType: !128, size: 32, offset: 1024)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !700, file: !234, line: 876, baseType: !128, size: 32, offset: 1056)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !700, file: !234, line: 878, baseType: !79, size: 32, offset: 1088)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !700, file: !234, line: 879, baseType: !79, size: 32, offset: 1120)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !700, file: !234, line: 881, baseType: !79, size: 32, offset: 1152)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !700, file: !234, line: 881, baseType: !79, size: 32, offset: 1184)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !700, file: !234, line: 883, baseType: !489, size: 64, offset: 1216)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !700, file: !234, line: 884, baseType: !151, size: 64, offset: 1280)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !531, file: !234, line: 1107, baseType: !128, size: 32, offset: 2688)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !531, file: !234, line: 1110, baseType: !128, size: 32, offset: 2720)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !531, file: !234, line: 1113, baseType: !77, size: 16, offset: 2752)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !531, file: !234, line: 1113, baseType: !77, size: 16, offset: 2768)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !531, file: !234, line: 1116, baseType: !64, size: 8, offset: 2784)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !531, file: !234, line: 1117, baseType: !394, size: 8, offset: 2792)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !531, file: !234, line: 1120, baseType: !77, size: 16, offset: 2800)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !531, file: !234, line: 1121, baseType: !128, size: 32, offset: 2816)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !531, file: !234, line: 1122, baseType: !128, size: 32, offset: 2848)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !531, file: !234, line: 1123, baseType: !128, size: 32, offset: 2880)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !531, file: !234, line: 1124, baseType: !128, size: 32, offset: 2912)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !531, file: !234, line: 1125, baseType: !128, size: 32, offset: 2944)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !531, file: !234, line: 1126, baseType: !128, size: 32, offset: 2976)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !531, file: !234, line: 1127, baseType: !128, size: 32, offset: 3008)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !531, file: !234, line: 1128, baseType: !128, size: 32, offset: 3040)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !531, file: !234, line: 1129, baseType: !128, size: 32, offset: 3072)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !531, file: !234, line: 1130, baseType: !128, size: 32, offset: 3104)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !531, file: !234, line: 1131, baseType: !77, size: 16, offset: 3136)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !531, file: !234, line: 1132, baseType: !64, size: 8, offset: 3152)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !531, file: !234, line: 1133, baseType: !64, size: 8, offset: 3160)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !531, file: !234, line: 1134, baseType: !747, size: 24, offset: 3168)
!747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 24, elements: !202)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !531, file: !234, line: 1135, baseType: !64, size: 8, offset: 3192)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !531, file: !234, line: 1138, baseType: !151, size: 64, offset: 3200)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !531, file: !234, line: 1139, baseType: !64, size: 8, offset: 3264)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !531, file: !234, line: 1140, baseType: !64, size: 8, offset: 3272)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !531, file: !234, line: 1141, baseType: !64, size: 8, offset: 3280)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !531, file: !234, line: 1142, baseType: !64, size: 8, offset: 3288)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !531, file: !234, line: 1143, baseType: !64, size: 8, offset: 3296)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !531, file: !234, line: 1144, baseType: !756, size: 64, offset: 3304)
!756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 64, elements: !636)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !531, file: !234, line: 1145, baseType: !756, size: 64, offset: 3368)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !531, file: !234, line: 1148, baseType: !64, size: 8, offset: 3432)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !531, file: !234, line: 1149, baseType: !64, size: 8, offset: 3440)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !531, file: !234, line: 1152, baseType: !64, size: 8, offset: 3448)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !531, file: !234, line: 1152, baseType: !64, size: 8, offset: 3456)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !531, file: !234, line: 1153, baseType: !64, size: 8, offset: 3464)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !531, file: !234, line: 1154, baseType: !77, size: 16, offset: 3472)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !531, file: !234, line: 1154, baseType: !77, size: 16, offset: 3488)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !531, file: !234, line: 1155, baseType: !77, size: 16, offset: 3504)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !531, file: !234, line: 1155, baseType: !77, size: 16, offset: 3520)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !531, file: !234, line: 1156, baseType: !64, size: 8, offset: 3536)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !531, file: !234, line: 1157, baseType: !64, size: 8, offset: 3544)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !531, file: !234, line: 1159, baseType: !64, size: 8, offset: 3552)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !531, file: !234, line: 1160, baseType: !64, size: 8, offset: 3560)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !531, file: !234, line: 1161, baseType: !64, size: 8, offset: 3568)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !531, file: !234, line: 1162, baseType: !64, size: 8, offset: 3576)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !531, file: !234, line: 1165, baseType: !79, size: 32, offset: 3584)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !531, file: !234, line: 1166, baseType: !79, size: 32, offset: 3616)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !531, file: !234, line: 1167, baseType: !79, size: 32, offset: 3648)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !531, file: !234, line: 1168, baseType: !79, size: 32, offset: 3680)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !531, file: !234, line: 1171, baseType: !77, size: 16, offset: 3712)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !531, file: !234, line: 1171, baseType: !77, size: 16, offset: 3728)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !531, file: !234, line: 1172, baseType: !79, size: 32, offset: 3744)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !531, file: !234, line: 1173, baseType: !128, size: 32, offset: 3776)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !531, file: !234, line: 1174, baseType: !128, size: 32, offset: 3808)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !531, file: !234, line: 1177, baseType: !783, size: 1024, offset: 3840)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !234, line: 963, size: 1024, elements: !784)
!784 = !{!785, !786, !787, !788, !789, !790, !791, !792, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !809, !810}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !783, file: !234, line: 965, baseType: !79, size: 32)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !783, file: !234, line: 968, baseType: !128, size: 32, offset: 32)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !783, file: !234, line: 971, baseType: !128, size: 32, offset: 64)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !783, file: !234, line: 974, baseType: !128, size: 32, offset: 96)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !783, file: !234, line: 977, baseType: !201, size: 96, offset: 128)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !783, file: !234, line: 979, baseType: !201, size: 96, offset: 224)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !783, file: !234, line: 982, baseType: !79, size: 32, offset: 320)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !783, file: !234, line: 987, baseType: !793, size: 64, offset: 352)
!793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 64, elements: !612)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !783, file: !234, line: 989, baseType: !128, size: 32, offset: 416)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !783, file: !234, line: 994, baseType: !79, size: 32, offset: 448)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !783, file: !234, line: 995, baseType: !79, size: 32, offset: 480)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !783, file: !234, line: 997, baseType: !64, size: 8, offset: 512)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !783, file: !234, line: 998, baseType: !686, size: 56, offset: 520)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !783, file: !234, line: 1000, baseType: !128, size: 32, offset: 576)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !783, file: !234, line: 1003, baseType: !793, size: 64, offset: 608)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !783, file: !234, line: 1006, baseType: !79, size: 32, offset: 672)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !783, file: !234, line: 1009, baseType: !128, size: 32, offset: 704)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !783, file: !234, line: 1012, baseType: !793, size: 64, offset: 736)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !783, file: !234, line: 1015, baseType: !793, size: 64, offset: 800)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !783, file: !234, line: 1018, baseType: !79, size: 32, offset: 864)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !783, file: !234, line: 1019, baseType: !807, size: 64, offset: 896)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!808 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !234, line: 63, flags: DIFlagFwdDecl)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !783, file: !234, line: 1023, baseType: !128, size: 32, offset: 960)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !783, file: !234, line: 1024, baseType: !79, size: 32, offset: 992)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !531, file: !234, line: 1179, baseType: !812, size: 320, offset: 4864)
!812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !234, line: 1043, size: 320, elements: !813)
!813 = !{!814, !815, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !812, file: !234, line: 1044, baseType: !64, size: 8)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !812, file: !234, line: 1045, baseType: !816, size: 16, offset: 8)
!816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 16, elements: !612)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !812, file: !234, line: 1048, baseType: !64, size: 8, offset: 24)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !812, file: !234, line: 1049, baseType: !128, size: 32, offset: 32)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !812, file: !234, line: 1049, baseType: !128, size: 32, offset: 64)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !812, file: !234, line: 1052, baseType: !128, size: 32, offset: 96)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !812, file: !234, line: 1052, baseType: !128, size: 32, offset: 128)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !812, file: !234, line: 1053, baseType: !64, size: 8, offset: 160)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !812, file: !234, line: 1054, baseType: !747, size: 24, offset: 168)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !812, file: !234, line: 1057, baseType: !128, size: 32, offset: 192)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !812, file: !234, line: 1057, baseType: !128, size: 32, offset: 224)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !812, file: !234, line: 1060, baseType: !128, size: 32, offset: 256)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !812, file: !234, line: 1060, baseType: !128, size: 32, offset: 288)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !490, file: !234, line: 1247, baseType: !829, size: 64, offset: 2176)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !234, line: 60, flags: DIFlagFwdDecl)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !490, file: !234, line: 1251, baseType: !832, size: 31872, offset: 2240)
!832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !234, line: 403, size: 31872, elements: !833)
!833 = !{!834, !917, !937, !946, !966, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1107, !1108, !1109, !1111, !1127, !1128}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !832, file: !234, line: 404, baseType: !835, size: 1984)
!835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !234, line: 259, size: 1984, elements: !836)
!836 = !{!837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !854, !912}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !835, file: !234, line: 260, baseType: !64, size: 8)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !835, file: !234, line: 263, baseType: !64, size: 8, offset: 8)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !835, file: !234, line: 266, baseType: !64, size: 8, offset: 16)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !835, file: !234, line: 267, baseType: !64, size: 8, offset: 24)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !835, file: !234, line: 269, baseType: !64, size: 8, offset: 32)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !835, file: !234, line: 270, baseType: !64, size: 8, offset: 40)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !835, file: !234, line: 276, baseType: !64, size: 8, offset: 48)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !835, file: !234, line: 279, baseType: !64, size: 8, offset: 56)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !835, file: !234, line: 280, baseType: !77, size: 16, offset: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !835, file: !234, line: 280, baseType: !77, size: 16, offset: 80)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !835, file: !234, line: 281, baseType: !128, size: 32, offset: 96)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !835, file: !234, line: 284, baseType: !64, size: 8, offset: 128)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !835, file: !234, line: 285, baseType: !64, size: 8, offset: 136)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !835, file: !234, line: 287, baseType: !851, size: 48, offset: 144)
!851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 48, elements: !852)
!852 = !{!853}
!853 = !DISubrange(count: 6)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !835, file: !234, line: 290, baseType: !855, size: 1280, offset: 192)
!855 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !680, line: 174, baseType: !856)
!856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !680, line: 166, size: 1280, elements: !857)
!857 = !{!858, !859, !860, !861, !862, !863, !864, !911}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !856, file: !680, line: 167, baseType: !79, size: 32)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !856, file: !680, line: 167, baseType: !79, size: 32, offset: 32)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !856, file: !680, line: 168, baseType: !94, size: 512, offset: 64)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !856, file: !680, line: 169, baseType: !94, size: 512, offset: 576)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !856, file: !680, line: 170, baseType: !128, size: 32, offset: 1088)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !856, file: !680, line: 171, baseType: !128, size: 32, offset: 1120)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !856, file: !680, line: 172, baseType: !865, size: 64, offset: 1152)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !680, line: 72, size: 3072, elements: !867)
!867 = !{!868, !869, !870, !871, !872, !881, !882, !907, !908, !909, !910}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !866, file: !680, line: 73, baseType: !79, size: 32)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !866, file: !680, line: 73, baseType: !79, size: 32, offset: 32)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !866, file: !680, line: 74, baseType: !79, size: 32, offset: 64)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !866, file: !680, line: 75, baseType: !79, size: 32, offset: 96)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !866, file: !680, line: 77, baseType: !873, size: 128, offset: 128)
!873 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !874, line: 95, baseType: !875)
!874 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !874, line: 92, size: 128, elements: !876)
!876 = !{!877, !878, !879, !880}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !875, file: !874, line: 93, baseType: !128, size: 32)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !875, file: !874, line: 93, baseType: !128, size: 32, offset: 32)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !875, file: !874, line: 94, baseType: !128, size: 32, offset: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !875, file: !874, line: 94, baseType: !128, size: 32, offset: 96)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !866, file: !680, line: 77, baseType: !873, size: 128, offset: 256)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !866, file: !680, line: 79, baseType: !883, size: 2304, offset: 384)
!883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !884, size: 2304, elements: !148)
!884 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !680, line: 67, baseType: !885)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !680, line: 55, size: 576, elements: !886)
!886 = !{!887, !888, !889, !890, !891, !892, !893, !894, !903, !904, !905, !906}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !885, file: !680, line: 56, baseType: !77, size: 16)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !885, file: !680, line: 56, baseType: !77, size: 16, offset: 16)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !885, file: !680, line: 58, baseType: !128, size: 32, offset: 32)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !885, file: !680, line: 59, baseType: !128, size: 32, offset: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !885, file: !680, line: 59, baseType: !128, size: 32, offset: 96)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !885, file: !680, line: 60, baseType: !793, size: 64, offset: 128)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !885, file: !680, line: 60, baseType: !793, size: 64, offset: 192)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !885, file: !680, line: 61, baseType: !895, size: 64, offset: 256)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !680, line: 47, baseType: !897)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !680, line: 44, size: 96, elements: !898)
!898 = !{!899, !900, !901, !902}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !897, file: !680, line: 45, baseType: !128, size: 32)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !897, file: !680, line: 45, baseType: !128, size: 32, offset: 32)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !897, file: !680, line: 46, baseType: !77, size: 16, offset: 64)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !897, file: !680, line: 46, baseType: !77, size: 16, offset: 80)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !885, file: !680, line: 62, baseType: !895, size: 64, offset: 320)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !885, file: !680, line: 64, baseType: !895, size: 64, offset: 384)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !885, file: !680, line: 65, baseType: !793, size: 64, offset: 448)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !885, file: !680, line: 66, baseType: !793, size: 64, offset: 512)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !866, file: !680, line: 80, baseType: !201, size: 96, offset: 2688)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !866, file: !680, line: 80, baseType: !201, size: 96, offset: 2784)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !866, file: !680, line: 81, baseType: !201, size: 96, offset: 2880)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !866, file: !680, line: 83, baseType: !201, size: 96, offset: 2976)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !856, file: !680, line: 173, baseType: !49, size: 64, offset: 1216)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !835, file: !234, line: 291, baseType: !913, size: 512, offset: 1472)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !680, line: 178, baseType: !914)
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !680, line: 176, size: 512, elements: !915)
!915 = !{!916}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !914, file: !680, line: 177, baseType: !94, size: 512)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !832, file: !234, line: 406, baseType: !918, size: 64, offset: 1984)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !234, line: 80, size: 1472, elements: !920)
!920 = !{!921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !919, file: !234, line: 81, baseType: !49, size: 64)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !919, file: !234, line: 82, baseType: !49, size: 64, offset: 64)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !919, file: !234, line: 83, baseType: !5, size: 32, offset: 128)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !919, file: !234, line: 84, baseType: !5, size: 32, offset: 160)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !919, file: !234, line: 86, baseType: !5, size: 32, offset: 192)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !919, file: !234, line: 87, baseType: !5, size: 32, offset: 224)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !919, file: !234, line: 88, baseType: !5, size: 32, offset: 256)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !919, file: !234, line: 89, baseType: !5, size: 32, offset: 288)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !919, file: !234, line: 90, baseType: !5, size: 32, offset: 320)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !919, file: !234, line: 91, baseType: !5, size: 32, offset: 352)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !919, file: !234, line: 92, baseType: !5, size: 32, offset: 384)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !919, file: !234, line: 93, baseType: !5, size: 32, offset: 416)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !919, file: !234, line: 95, baseType: !934, size: 1024, offset: 448)
!934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 1024, elements: !935)
!935 = !{!936}
!936 = !DISubrange(count: 128)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !832, file: !234, line: 407, baseType: !938, size: 64, offset: 2048)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !234, line: 98, size: 1216, elements: !940)
!940 = !{!941, !942, !943, !944, !945}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !939, file: !234, line: 100, baseType: !49, size: 64)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !939, file: !234, line: 101, baseType: !49, size: 64, offset: 64)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !939, file: !234, line: 103, baseType: !5, size: 32, offset: 128)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !939, file: !234, line: 104, baseType: !5, size: 32, offset: 160)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !939, file: !234, line: 106, baseType: !934, size: 1024, offset: 192)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !832, file: !234, line: 408, baseType: !947, size: 512, offset: 2112)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !234, line: 109, size: 512, elements: !948)
!948 = !{!949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !947, file: !234, line: 111, baseType: !79, size: 32)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !947, file: !234, line: 112, baseType: !79, size: 32, offset: 32)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !947, file: !234, line: 115, baseType: !79, size: 32, offset: 64)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !947, file: !234, line: 116, baseType: !79, size: 32, offset: 96)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !947, file: !234, line: 117, baseType: !79, size: 32, offset: 128)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !947, file: !234, line: 118, baseType: !79, size: 32, offset: 160)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !947, file: !234, line: 119, baseType: !79, size: 32, offset: 192)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !947, file: !234, line: 120, baseType: !79, size: 32, offset: 224)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !947, file: !234, line: 121, baseType: !79, size: 32, offset: 256)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !947, file: !234, line: 122, baseType: !79, size: 32, offset: 288)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !947, file: !234, line: 125, baseType: !79, size: 32, offset: 320)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !947, file: !234, line: 126, baseType: !79, size: 32, offset: 352)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !947, file: !234, line: 127, baseType: !77, size: 16, offset: 384)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !947, file: !234, line: 128, baseType: !77, size: 16, offset: 400)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !947, file: !234, line: 129, baseType: !79, size: 32, offset: 416)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !947, file: !234, line: 130, baseType: !79, size: 32, offset: 448)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !947, file: !234, line: 131, baseType: !79, size: 32, offset: 480)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !832, file: !234, line: 409, baseType: !967, size: 576, offset: 2624)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !234, line: 134, size: 576, elements: !968)
!968 = !{!969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !967, file: !234, line: 135, baseType: !79, size: 32)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !967, file: !234, line: 136, baseType: !79, size: 32, offset: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !967, file: !234, line: 137, baseType: !79, size: 32, offset: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !967, file: !234, line: 138, baseType: !79, size: 32, offset: 96)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !967, file: !234, line: 139, baseType: !79, size: 32, offset: 128)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !967, file: !234, line: 140, baseType: !79, size: 32, offset: 160)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !967, file: !234, line: 141, baseType: !79, size: 32, offset: 192)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !967, file: !234, line: 142, baseType: !79, size: 32, offset: 224)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !967, file: !234, line: 143, baseType: !128, size: 32, offset: 256)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !967, file: !234, line: 144, baseType: !79, size: 32, offset: 288)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !967, file: !234, line: 145, baseType: !79, size: 32, offset: 320)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !967, file: !234, line: 147, baseType: !79, size: 32, offset: 352)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !967, file: !234, line: 148, baseType: !79, size: 32, offset: 384)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !967, file: !234, line: 149, baseType: !79, size: 32, offset: 416)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !967, file: !234, line: 150, baseType: !79, size: 32, offset: 448)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !967, file: !234, line: 151, baseType: !79, size: 32, offset: 480)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !967, file: !234, line: 152, baseType: !83, size: 64, offset: 512)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !832, file: !234, line: 411, baseType: !79, size: 32, offset: 3200)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !832, file: !234, line: 411, baseType: !79, size: 32, offset: 3232)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !832, file: !234, line: 411, baseType: !79, size: 32, offset: 3264)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !832, file: !234, line: 412, baseType: !128, size: 32, offset: 3296)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !832, file: !234, line: 413, baseType: !79, size: 32, offset: 3328)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !832, file: !234, line: 413, baseType: !79, size: 32, offset: 3360)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !832, file: !234, line: 415, baseType: !79, size: 32, offset: 3392)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !832, file: !234, line: 415, baseType: !79, size: 32, offset: 3424)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !832, file: !234, line: 416, baseType: !77, size: 16, offset: 3456)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !832, file: !234, line: 416, baseType: !77, size: 16, offset: 3472)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !832, file: !234, line: 418, baseType: !128, size: 32, offset: 3488)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !832, file: !234, line: 418, baseType: !128, size: 32, offset: 3520)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !832, file: !234, line: 421, baseType: !128, size: 32, offset: 3552)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !832, file: !234, line: 421, baseType: !128, size: 32, offset: 3584)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !832, file: !234, line: 421, baseType: !128, size: 32, offset: 3616)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !832, file: !234, line: 425, baseType: !77, size: 16, offset: 3648)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !832, file: !234, line: 425, baseType: !77, size: 16, offset: 3664)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !832, file: !234, line: 425, baseType: !77, size: 16, offset: 3680)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !832, file: !234, line: 426, baseType: !77, size: 16, offset: 3696)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !832, file: !234, line: 428, baseType: !77, size: 16, offset: 3712)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !832, file: !234, line: 428, baseType: !77, size: 16, offset: 3728)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !832, file: !234, line: 431, baseType: !79, size: 32, offset: 3744)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !832, file: !234, line: 433, baseType: !77, size: 16, offset: 3776)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !832, file: !234, line: 435, baseType: !77, size: 16, offset: 3792)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !832, file: !234, line: 437, baseType: !77, size: 16, offset: 3808)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !832, file: !234, line: 439, baseType: !77, size: 16, offset: 3824)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !832, file: !234, line: 441, baseType: !77, size: 16, offset: 3840)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !832, file: !234, line: 443, baseType: !77, size: 16, offset: 3856)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !832, file: !234, line: 449, baseType: !79, size: 32, offset: 3872)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !832, file: !234, line: 453, baseType: !79, size: 32, offset: 3904)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !832, file: !234, line: 458, baseType: !77, size: 16, offset: 3936)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !832, file: !234, line: 462, baseType: !77, size: 16, offset: 3952)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !832, file: !234, line: 467, baseType: !79, size: 32, offset: 3968)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !832, file: !234, line: 467, baseType: !79, size: 32, offset: 4000)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !832, file: !234, line: 469, baseType: !77, size: 16, offset: 4032)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !832, file: !234, line: 469, baseType: !77, size: 16, offset: 4048)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !832, file: !234, line: 469, baseType: !77, size: 16, offset: 4064)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !832, file: !234, line: 469, baseType: !77, size: 16, offset: 4080)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !832, file: !234, line: 474, baseType: !77, size: 16, offset: 4096)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !832, file: !234, line: 475, baseType: !64, size: 8, offset: 4112)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !832, file: !234, line: 476, baseType: !64, size: 8, offset: 4120)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !832, file: !234, line: 481, baseType: !79, size: 32, offset: 4128)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !832, file: !234, line: 486, baseType: !79, size: 32, offset: 4160)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !832, file: !234, line: 491, baseType: !79, size: 32, offset: 4192)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !832, file: !234, line: 496, baseType: !77, size: 16, offset: 4224)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !832, file: !234, line: 498, baseType: !77, size: 16, offset: 4240)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !832, file: !234, line: 501, baseType: !77, size: 16, offset: 4256)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !832, file: !234, line: 502, baseType: !77, size: 16, offset: 4272)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !832, file: !234, line: 508, baseType: !77, size: 16, offset: 4288)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !832, file: !234, line: 513, baseType: !77, size: 16, offset: 4304)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !832, file: !234, line: 515, baseType: !77, size: 16, offset: 4320)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !832, file: !234, line: 515, baseType: !77, size: 16, offset: 4336)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !832, file: !234, line: 519, baseType: !873, size: 128, offset: 4352)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !832, file: !234, line: 519, baseType: !873, size: 128, offset: 4480)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !832, file: !234, line: 520, baseType: !1041, size: 128, offset: 4608)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !874, line: 89, baseType: !1042)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !874, line: 86, size: 128, elements: !1043)
!1043 = !{!1044, !1045, !1046, !1047}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1042, file: !874, line: 87, baseType: !79, size: 32)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1042, file: !874, line: 87, baseType: !79, size: 32, offset: 32)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1042, file: !874, line: 88, baseType: !79, size: 32, offset: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1042, file: !874, line: 88, baseType: !79, size: 32, offset: 96)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !832, file: !234, line: 523, baseType: !104, size: 128, offset: 4736)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !832, file: !234, line: 524, baseType: !77, size: 16, offset: 4864)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !832, file: !234, line: 527, baseType: !77, size: 16, offset: 4880)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !832, file: !234, line: 532, baseType: !128, size: 32, offset: 4896)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !832, file: !234, line: 532, baseType: !128, size: 32, offset: 4928)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !832, file: !234, line: 534, baseType: !128, size: 32, offset: 4960)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !832, file: !234, line: 538, baseType: !128, size: 32, offset: 4992)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !832, file: !234, line: 542, baseType: !79, size: 32, offset: 5024)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !832, file: !234, line: 545, baseType: !128, size: 32, offset: 5056)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !832, file: !234, line: 545, baseType: !128, size: 32, offset: 5088)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !832, file: !234, line: 545, baseType: !128, size: 32, offset: 5120)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !832, file: !234, line: 548, baseType: !128, size: 32, offset: 5152)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !832, file: !234, line: 551, baseType: !77, size: 16, offset: 5184)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !832, file: !234, line: 551, baseType: !77, size: 16, offset: 5200)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !832, file: !234, line: 551, baseType: !77, size: 16, offset: 5216)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !832, file: !234, line: 551, baseType: !77, size: 16, offset: 5232)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !832, file: !234, line: 552, baseType: !77, size: 16, offset: 5248)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !832, file: !234, line: 552, baseType: !77, size: 16, offset: 5264)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !832, file: !234, line: 553, baseType: !128, size: 32, offset: 5280)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !832, file: !234, line: 553, baseType: !128, size: 32, offset: 5312)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !832, file: !234, line: 554, baseType: !77, size: 16, offset: 5344)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !832, file: !234, line: 554, baseType: !77, size: 16, offset: 5360)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !832, file: !234, line: 555, baseType: !128, size: 32, offset: 5376)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !832, file: !234, line: 555, baseType: !128, size: 32, offset: 5408)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !832, file: !234, line: 558, baseType: !63, size: 8192, offset: 5440)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !832, file: !234, line: 561, baseType: !79, size: 32, offset: 13632)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !832, file: !234, line: 562, baseType: !77, size: 16, offset: 13664)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !832, file: !234, line: 562, baseType: !77, size: 16, offset: 13680)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !832, file: !234, line: 565, baseType: !1077, size: 6144, offset: 13696)
!1077 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 6144, elements: !1078)
!1078 = !{!1079}
!1079 = !DISubrange(count: 768)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !832, file: !234, line: 568, baseType: !378, size: 128, offset: 19840)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !832, file: !234, line: 569, baseType: !378, size: 128, offset: 19968)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !832, file: !234, line: 572, baseType: !64, size: 8, offset: 20096)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !832, file: !234, line: 573, baseType: !64, size: 8, offset: 20104)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !832, file: !234, line: 574, baseType: !64, size: 8, offset: 20112)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !832, file: !234, line: 575, baseType: !599, size: 40, offset: 20120)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !832, file: !234, line: 578, baseType: !79, size: 32, offset: 20160)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !832, file: !234, line: 579, baseType: !77, size: 16, offset: 20192)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !832, file: !234, line: 580, baseType: !77, size: 16, offset: 20208)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !832, file: !234, line: 581, baseType: !128, size: 32, offset: 20224)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !832, file: !234, line: 582, baseType: !128, size: 32, offset: 20256)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !832, file: !234, line: 585, baseType: !77, size: 16, offset: 20288)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !832, file: !234, line: 585, baseType: !77, size: 16, offset: 20304)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !832, file: !234, line: 586, baseType: !128, size: 32, offset: 20320)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !832, file: !234, line: 589, baseType: !77, size: 16, offset: 20352)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !832, file: !234, line: 589, baseType: !77, size: 16, offset: 20368)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !832, file: !234, line: 590, baseType: !79, size: 32, offset: 20384)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !832, file: !234, line: 593, baseType: !77, size: 16, offset: 20416)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !832, file: !234, line: 593, baseType: !77, size: 16, offset: 20432)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !832, file: !234, line: 594, baseType: !77, size: 16, offset: 20448)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !832, file: !234, line: 594, baseType: !77, size: 16, offset: 20464)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !832, file: !234, line: 595, baseType: !128, size: 32, offset: 20480)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !832, file: !234, line: 596, baseType: !128, size: 32, offset: 20512)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !832, file: !234, line: 597, baseType: !1104, size: 64, offset: 20544)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64)
!1105 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1106, line: 44, flags: DIFlagFwdDecl)
!1106 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !832, file: !234, line: 600, baseType: !79, size: 32, offset: 20608)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !832, file: !234, line: 601, baseType: !128, size: 32, offset: 20640)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !832, file: !234, line: 604, baseType: !1110, size: 256, offset: 20672)
!1110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 256, elements: !408)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !832, file: !234, line: 607, baseType: !1112, size: 10880, offset: 20928)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !234, line: 364, size: 10880, elements: !1113)
!1113 = !{!1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1112, file: !234, line: 365, baseType: !835, size: 1984)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1112, file: !234, line: 367, baseType: !63, size: 8192, offset: 1984)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1112, file: !234, line: 369, baseType: !77, size: 16, offset: 10176)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1112, file: !234, line: 369, baseType: !77, size: 16, offset: 10192)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1112, file: !234, line: 370, baseType: !77, size: 16, offset: 10208)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1112, file: !234, line: 370, baseType: !77, size: 16, offset: 10224)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1112, file: !234, line: 372, baseType: !128, size: 32, offset: 10240)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1112, file: !234, line: 373, baseType: !128, size: 32, offset: 10272)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1112, file: !234, line: 375, baseType: !747, size: 24, offset: 10304)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1112, file: !234, line: 376, baseType: !64, size: 8, offset: 10328)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1112, file: !234, line: 378, baseType: !64, size: 8, offset: 10336)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1112, file: !234, line: 379, baseType: !747, size: 24, offset: 10344)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1112, file: !234, line: 381, baseType: !94, size: 512, offset: 10368)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !832, file: !234, line: 609, baseType: !79, size: 32, offset: 31808)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !832, file: !234, line: 610, baseType: !79, size: 32, offset: 31840)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !490, file: !234, line: 1252, baseType: !1130, size: 256, offset: 34112)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !234, line: 158, size: 256, elements: !1131)
!1131 = !{!1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1130, file: !234, line: 159, baseType: !79, size: 32)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1130, file: !234, line: 160, baseType: !128, size: 32, offset: 32)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1130, file: !234, line: 161, baseType: !128, size: 32, offset: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1130, file: !234, line: 162, baseType: !128, size: 32, offset: 96)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1130, file: !234, line: 163, baseType: !79, size: 32, offset: 128)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1130, file: !234, line: 164, baseType: !77, size: 16, offset: 160)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1130, file: !234, line: 165, baseType: !77, size: 16, offset: 176)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1130, file: !234, line: 166, baseType: !128, size: 32, offset: 192)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1130, file: !234, line: 167, baseType: !128, size: 32, offset: 224)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !490, file: !234, line: 1254, baseType: !104, size: 128, offset: 34368)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !490, file: !234, line: 1255, baseType: !104, size: 128, offset: 34496)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !490, file: !234, line: 1257, baseType: !49, size: 64, offset: 34624)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !490, file: !234, line: 1258, baseType: !49, size: 64, offset: 34688)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !490, file: !234, line: 1259, baseType: !49, size: 64, offset: 34752)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !490, file: !234, line: 1260, baseType: !49, size: 64, offset: 34816)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !490, file: !234, line: 1262, baseType: !49, size: 64, offset: 34880)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !490, file: !234, line: 1265, baseType: !1149, size: 64, offset: 34944)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64)
!1150 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !234, line: 1265, flags: DIFlagFwdDecl)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !490, file: !234, line: 1266, baseType: !77, size: 16, offset: 35008)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !490, file: !234, line: 1267, baseType: !77, size: 16, offset: 35024)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !490, file: !234, line: 1270, baseType: !79, size: 32, offset: 35040)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !490, file: !234, line: 1271, baseType: !104, size: 128, offset: 35072)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !490, file: !234, line: 1274, baseType: !1156, size: 128, offset: 35200)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !234, line: 650, size: 128, elements: !1157)
!1157 = !{!1158, !1159, !1160, !1161, !1162}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1156, file: !234, line: 651, baseType: !201, size: 96)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1156, file: !234, line: 652, baseType: !64, size: 8, offset: 96)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1156, file: !234, line: 652, baseType: !64, size: 8, offset: 104)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1156, file: !234, line: 652, baseType: !64, size: 8, offset: 112)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1156, file: !234, line: 652, baseType: !64, size: 8, offset: 120)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !490, file: !234, line: 1275, baseType: !1164, size: 1472, offset: 35328)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !234, line: 676, size: 1472, elements: !1165)
!1165 = !{!1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1178, !1188, !1189, !1190, !1191, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1164, file: !234, line: 679, baseType: !1156, size: 128)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1164, file: !234, line: 680, baseType: !77, size: 16, offset: 128)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1164, file: !234, line: 680, baseType: !77, size: 16, offset: 144)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1164, file: !234, line: 680, baseType: !77, size: 16, offset: 160)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1164, file: !234, line: 680, baseType: !77, size: 16, offset: 176)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1164, file: !234, line: 681, baseType: !77, size: 16, offset: 192)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1164, file: !234, line: 681, baseType: !77, size: 16, offset: 208)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1164, file: !234, line: 681, baseType: !77, size: 16, offset: 224)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1164, file: !234, line: 681, baseType: !77, size: 16, offset: 240)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1164, file: !234, line: 682, baseType: !77, size: 16, offset: 256)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1164, file: !234, line: 682, baseType: !1177, size: 48, offset: 272)
!1177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !77, size: 48, elements: !202)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1164, file: !234, line: 685, baseType: !1179, size: 192, offset: 320)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !234, line: 633, size: 192, elements: !1180)
!1180 = !{!1181, !1182, !1183, !1184, !1185, !1186, !1187}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1179, file: !234, line: 634, baseType: !77, size: 16)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1179, file: !234, line: 634, baseType: !77, size: 16, offset: 16)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1179, file: !234, line: 635, baseType: !77, size: 16, offset: 32)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1179, file: !234, line: 635, baseType: !77, size: 16, offset: 48)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1179, file: !234, line: 636, baseType: !128, size: 32, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1179, file: !234, line: 636, baseType: !128, size: 32, offset: 96)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1179, file: !234, line: 637, baseType: !1104, size: 64, offset: 128)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1164, file: !234, line: 686, baseType: !77, size: 16, offset: 512)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1164, file: !234, line: 686, baseType: !77, size: 16, offset: 528)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1164, file: !234, line: 687, baseType: !128, size: 32, offset: 544)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1164, file: !234, line: 688, baseType: !1192, size: 448, offset: 576)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !234, line: 674, baseType: !1193)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !234, line: 659, size: 448, elements: !1194)
!1194 = !{!1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1193, file: !234, line: 660, baseType: !128, size: 32)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1193, file: !234, line: 661, baseType: !128, size: 32, offset: 32)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1193, file: !234, line: 662, baseType: !128, size: 32, offset: 64)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1193, file: !234, line: 663, baseType: !128, size: 32, offset: 96)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1193, file: !234, line: 664, baseType: !128, size: 32, offset: 128)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1193, file: !234, line: 665, baseType: !128, size: 32, offset: 160)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1193, file: !234, line: 666, baseType: !128, size: 32, offset: 192)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1193, file: !234, line: 667, baseType: !128, size: 32, offset: 224)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1193, file: !234, line: 668, baseType: !128, size: 32, offset: 256)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1193, file: !234, line: 669, baseType: !128, size: 32, offset: 288)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1193, file: !234, line: 670, baseType: !79, size: 32, offset: 320)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1193, file: !234, line: 671, baseType: !128, size: 32, offset: 352)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1193, file: !234, line: 672, baseType: !128, size: 32, offset: 384)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1193, file: !234, line: 673, baseType: !77, size: 16, offset: 416)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1193, file: !234, line: 673, baseType: !77, size: 16, offset: 432)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1164, file: !234, line: 692, baseType: !128, size: 32, offset: 1024)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1164, file: !234, line: 697, baseType: !128, size: 32, offset: 1056)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1164, file: !234, line: 703, baseType: !79, size: 32, offset: 1088)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1164, file: !234, line: 704, baseType: !77, size: 16, offset: 1120)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1164, file: !234, line: 704, baseType: !77, size: 16, offset: 1136)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1164, file: !234, line: 705, baseType: !77, size: 16, offset: 1152)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1164, file: !234, line: 706, baseType: !77, size: 16, offset: 1168)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1164, file: !234, line: 707, baseType: !77, size: 16, offset: 1184)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1164, file: !234, line: 708, baseType: !77, size: 16, offset: 1200)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1164, file: !234, line: 709, baseType: !77, size: 16, offset: 1216)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1164, file: !234, line: 709, baseType: !77, size: 16, offset: 1232)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1164, file: !234, line: 709, baseType: !77, size: 16, offset: 1248)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1164, file: !234, line: 709, baseType: !77, size: 16, offset: 1264)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1164, file: !234, line: 710, baseType: !77, size: 16, offset: 1280)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1164, file: !234, line: 711, baseType: !77, size: 16, offset: 1296)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1164, file: !234, line: 712, baseType: !128, size: 32, offset: 1312)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1164, file: !234, line: 713, baseType: !128, size: 32, offset: 1344)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1164, file: !234, line: 713, baseType: !128, size: 32, offset: 1376)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1164, file: !234, line: 713, baseType: !128, size: 32, offset: 1408)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1164, file: !234, line: 713, baseType: !128, size: 32, offset: 1440)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !490, file: !234, line: 1278, baseType: !1231, size: 64, offset: 36800)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !234, line: 1197, size: 64, elements: !1232)
!1232 = !{!1233, !1234, !1235, !1236}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1231, file: !234, line: 1199, baseType: !128, size: 32)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1231, file: !234, line: 1200, baseType: !64, size: 8, offset: 32)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1231, file: !234, line: 1201, baseType: !64, size: 8, offset: 40)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1231, file: !234, line: 1202, baseType: !77, size: 16, offset: 48)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !490, file: !234, line: 1281, baseType: !232, size: 64, offset: 36864)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !490, file: !234, line: 1284, baseType: !1239, size: 192, offset: 36928)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !234, line: 1208, size: 192, elements: !1240)
!1240 = !{!1241, !1242, !1243, !1244}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1239, file: !234, line: 1209, baseType: !201, size: 96)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1239, file: !234, line: 1210, baseType: !79, size: 32, offset: 96)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1239, file: !234, line: 1210, baseType: !79, size: 32, offset: 128)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1239, file: !234, line: 1210, baseType: !79, size: 32, offset: 160)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !490, file: !234, line: 1287, baseType: !1246, size: 64, offset: 37120)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64)
!1247 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !234, line: 62, flags: DIFlagFwdDecl)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !490, file: !234, line: 1289, baseType: !1249, size: 64, offset: 37184)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1250, line: 27, baseType: !1251)
!1250 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1252, line: 45, baseType: !1253)
!1252 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1253 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !490, file: !234, line: 1290, baseType: !1249, size: 64, offset: 37248)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !490, file: !234, line: 1293, baseType: !855, size: 1280, offset: 37312)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !490, file: !234, line: 1294, baseType: !913, size: 512, offset: 38592)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !490, file: !234, line: 1295, baseType: !679, size: 512, offset: 39104)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !490, file: !234, line: 1298, baseType: !1259, size: 64, offset: 39616)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64)
!1260 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !234, line: 1298, flags: DIFlagFwdDecl)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !485, file: !486, line: 53, baseType: !79, size: 32, offset: 64)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !485, file: !486, line: 54, baseType: !79, size: 32, offset: 96)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !485, file: !486, line: 55, baseType: !79, size: 32, offset: 128)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !485, file: !486, line: 55, baseType: !79, size: 32, offset: 160)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !485, file: !486, line: 56, baseType: !64, size: 8, offset: 192)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !485, file: !486, line: 56, baseType: !64, size: 8, offset: 200)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !485, file: !486, line: 57, baseType: !64, size: 8, offset: 208)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !485, file: !486, line: 57, baseType: !64, size: 8, offset: 216)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !485, file: !486, line: 59, baseType: !77, size: 16, offset: 224)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !485, file: !486, line: 59, baseType: !77, size: 16, offset: 240)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !485, file: !486, line: 59, baseType: !77, size: 16, offset: 256)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !485, file: !486, line: 61, baseType: !77, size: 16, offset: 272)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !485, file: !486, line: 63, baseType: !79, size: 32, offset: 288)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !431, file: !386, line: 248, baseType: !524, size: 64, offset: 2688)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !431, file: !386, line: 249, baseType: !171, size: 64, offset: 2752)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !431, file: !386, line: 250, baseType: !617, size: 64, offset: 2816)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !431, file: !386, line: 251, baseType: !384, size: 64, offset: 2880)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !431, file: !386, line: 252, baseType: !1279, size: 64, offset: 2944)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !386, line: 122, size: 1600, elements: !1281)
!1281 = !{!1282, !1283, !1284, !1288, !1291, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1280, file: !386, line: 123, baseType: !151, size: 64)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1280, file: !386, line: 124, baseType: !617, size: 64, offset: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1280, file: !386, line: 125, baseType: !1285, size: 384, offset: 128)
!1285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1286, size: 384, elements: !852)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!1287 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !680, line: 136, flags: DIFlagFwdDecl)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1280, file: !386, line: 126, baseType: !1289, size: 512, offset: 512)
!1289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 512, elements: !1290)
!1290 = !{!149, !149}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1280, file: !386, line: 127, baseType: !1292, size: 288, offset: 1024)
!1292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 288, elements: !1293)
!1293 = !{!131, !131}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1280, file: !386, line: 128, baseType: !77, size: 16, offset: 1312)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1280, file: !386, line: 128, baseType: !77, size: 16, offset: 1328)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1280, file: !386, line: 129, baseType: !128, size: 32, offset: 1344)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1280, file: !386, line: 129, baseType: !128, size: 32, offset: 1376)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1280, file: !386, line: 130, baseType: !128, size: 32, offset: 1408)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1280, file: !386, line: 131, baseType: !5, size: 32, offset: 1440)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1280, file: !386, line: 132, baseType: !77, size: 16, offset: 1472)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1280, file: !386, line: 132, baseType: !77, size: 16, offset: 1488)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1280, file: !386, line: 133, baseType: !79, size: 32, offset: 1504)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1280, file: !386, line: 133, baseType: !79, size: 32, offset: 1536)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1280, file: !386, line: 134, baseType: !77, size: 16, offset: 1568)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1280, file: !386, line: 134, baseType: !77, size: 16, offset: 1584)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !431, file: !386, line: 253, baseType: !654, size: 64, offset: 3008)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !431, file: !386, line: 254, baseType: !1308, size: 64, offset: 3072)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !386, line: 137, size: 832, elements: !1310)
!1310 = !{!1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1309, file: !386, line: 138, baseType: !77, size: 16)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1309, file: !386, line: 140, baseType: !77, size: 16, offset: 16)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1309, file: !386, line: 141, baseType: !128, size: 32, offset: 32)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1309, file: !386, line: 142, baseType: !128, size: 32, offset: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1309, file: !386, line: 143, baseType: !77, size: 16, offset: 96)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1309, file: !386, line: 144, baseType: !77, size: 16, offset: 112)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1309, file: !386, line: 145, baseType: !79, size: 32, offset: 128)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1309, file: !386, line: 147, baseType: !79, size: 32, offset: 160)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1309, file: !386, line: 149, baseType: !151, size: 64, offset: 192)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1309, file: !386, line: 150, baseType: !79, size: 32, offset: 256)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1309, file: !386, line: 151, baseType: !77, size: 16, offset: 288)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1309, file: !386, line: 152, baseType: !77, size: 16, offset: 304)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1309, file: !386, line: 154, baseType: !49, size: 64, offset: 320)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1309, file: !386, line: 155, baseType: !1325, size: 64, offset: 384)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1309, file: !386, line: 157, baseType: !128, size: 32, offset: 448)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1309, file: !386, line: 158, baseType: !77, size: 16, offset: 480)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1309, file: !386, line: 159, baseType: !77, size: 16, offset: 496)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1309, file: !386, line: 160, baseType: !77, size: 16, offset: 512)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1309, file: !386, line: 161, baseType: !1177, size: 48, offset: 528)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1309, file: !386, line: 162, baseType: !128, size: 32, offset: 576)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1309, file: !386, line: 164, baseType: !128, size: 32, offset: 608)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1309, file: !386, line: 164, baseType: !128, size: 32, offset: 640)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1309, file: !386, line: 164, baseType: !128, size: 32, offset: 672)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1309, file: !386, line: 165, baseType: !384, size: 64, offset: 704)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1309, file: !386, line: 167, baseType: !865, size: 64, offset: 768)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !431, file: !386, line: 255, baseType: !1338, size: 64, offset: 3136)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !386, line: 170, size: 8704, elements: !1340)
!1340 = !{!1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1339, file: !386, line: 171, baseType: !573, size: 96)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1339, file: !386, line: 172, baseType: !79, size: 32, offset: 96)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1339, file: !386, line: 173, baseType: !77, size: 16, offset: 128)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1339, file: !386, line: 174, baseType: !77, size: 16, offset: 144)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1339, file: !386, line: 175, baseType: !77, size: 16, offset: 160)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1339, file: !386, line: 176, baseType: !77, size: 16, offset: 176)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1339, file: !386, line: 177, baseType: !77, size: 16, offset: 192)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1339, file: !386, line: 178, baseType: !77, size: 16, offset: 208)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1339, file: !386, line: 179, baseType: !79, size: 32, offset: 224)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1339, file: !386, line: 181, baseType: !151, size: 64, offset: 256)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1339, file: !386, line: 182, baseType: !128, size: 32, offset: 320)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1339, file: !386, line: 183, baseType: !79, size: 32, offset: 352)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1339, file: !386, line: 184, baseType: !63, size: 8192, offset: 384)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1339, file: !386, line: 187, baseType: !1325, size: 64, offset: 8576)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1339, file: !386, line: 188, baseType: !79, size: 32, offset: 8640)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1339, file: !386, line: 189, baseType: !79, size: 32, offset: 8672)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !431, file: !386, line: 256, baseType: !1358, size: 64, offset: 3200)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !386, line: 193, size: 640, elements: !1360)
!1360 = !{!1361, !1362, !1363, !1364}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1359, file: !386, line: 194, baseType: !151, size: 64)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1359, file: !386, line: 195, baseType: !94, size: 512, offset: 64)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1359, file: !386, line: 197, baseType: !79, size: 32, offset: 576)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1359, file: !386, line: 198, baseType: !79, size: 32, offset: 608)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !431, file: !386, line: 258, baseType: !64, size: 8, offset: 3264)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !431, file: !386, line: 259, baseType: !686, size: 56, offset: 3272)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !422, file: !386, line: 62, baseType: !94, size: 512, offset: 192)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !422, file: !386, line: 64, baseType: !64, size: 8, offset: 704)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !422, file: !386, line: 64, baseType: !64, size: 8, offset: 712)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !422, file: !386, line: 64, baseType: !64, size: 8, offset: 720)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !422, file: !386, line: 64, baseType: !64, size: 8, offset: 728)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !422, file: !386, line: 65, baseType: !201, size: 96, offset: 736)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !422, file: !386, line: 65, baseType: !201, size: 96, offset: 832)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !422, file: !386, line: 65, baseType: !128, size: 32, offset: 928)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !422, file: !386, line: 67, baseType: !77, size: 16, offset: 960)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !422, file: !386, line: 67, baseType: !77, size: 16, offset: 976)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !422, file: !386, line: 67, baseType: !77, size: 16, offset: 992)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !422, file: !386, line: 67, baseType: !77, size: 16, offset: 1008)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !422, file: !386, line: 68, baseType: !77, size: 16, offset: 1024)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !422, file: !386, line: 68, baseType: !77, size: 16, offset: 1040)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !422, file: !386, line: 69, baseType: !64, size: 8, offset: 1056)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !422, file: !386, line: 69, baseType: !686, size: 56, offset: 1064)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !422, file: !386, line: 70, baseType: !128, size: 32, offset: 1120)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !422, file: !386, line: 70, baseType: !128, size: 32, offset: 1152)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !422, file: !386, line: 70, baseType: !128, size: 32, offset: 1184)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !422, file: !386, line: 70, baseType: !128, size: 32, offset: 1216)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !422, file: !386, line: 71, baseType: !128, size: 32, offset: 1248)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !422, file: !386, line: 71, baseType: !128, size: 32, offset: 1280)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !422, file: !386, line: 74, baseType: !128, size: 32, offset: 1312)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !422, file: !386, line: 74, baseType: !128, size: 32, offset: 1344)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !422, file: !386, line: 77, baseType: !128, size: 32, offset: 1376)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !422, file: !386, line: 77, baseType: !128, size: 32, offset: 1408)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !422, file: !386, line: 77, baseType: !128, size: 32, offset: 1440)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !422, file: !386, line: 78, baseType: !128, size: 32, offset: 1472)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !422, file: !386, line: 78, baseType: !128, size: 32, offset: 1504)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !422, file: !386, line: 78, baseType: !128, size: 32, offset: 1536)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !422, file: !386, line: 79, baseType: !128, size: 32, offset: 1568)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !422, file: !386, line: 79, baseType: !128, size: 32, offset: 1600)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !422, file: !386, line: 79, baseType: !128, size: 32, offset: 1632)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !422, file: !386, line: 79, baseType: !128, size: 32, offset: 1664)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !422, file: !386, line: 80, baseType: !128, size: 32, offset: 1696)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !422, file: !386, line: 80, baseType: !128, size: 32, offset: 1728)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !422, file: !386, line: 80, baseType: !128, size: 32, offset: 1760)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !422, file: !386, line: 81, baseType: !128, size: 32, offset: 1792)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !422, file: !386, line: 81, baseType: !128, size: 32, offset: 1824)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !422, file: !386, line: 81, baseType: !128, size: 32, offset: 1856)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !422, file: !386, line: 82, baseType: !128, size: 32, offset: 1888)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !422, file: !386, line: 82, baseType: !128, size: 32, offset: 1920)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !422, file: !386, line: 82, baseType: !128, size: 32, offset: 1952)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !422, file: !386, line: 85, baseType: !128, size: 32, offset: 1984)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !422, file: !386, line: 85, baseType: !128, size: 32, offset: 2016)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !422, file: !386, line: 85, baseType: !128, size: 32, offset: 2048)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !422, file: !386, line: 85, baseType: !128, size: 32, offset: 2080)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !422, file: !386, line: 86, baseType: !128, size: 32, offset: 2112)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !422, file: !386, line: 86, baseType: !128, size: 32, offset: 2144)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !422, file: !386, line: 86, baseType: !128, size: 32, offset: 2176)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !422, file: !386, line: 86, baseType: !128, size: 32, offset: 2208)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !422, file: !386, line: 87, baseType: !128, size: 32, offset: 2240)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !422, file: !386, line: 87, baseType: !128, size: 32, offset: 2272)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !422, file: !386, line: 87, baseType: !128, size: 32, offset: 2304)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !422, file: !386, line: 87, baseType: !128, size: 32, offset: 2336)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !422, file: !386, line: 90, baseType: !128, size: 32, offset: 2368)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !422, file: !386, line: 93, baseType: !128, size: 32, offset: 2400)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !422, file: !386, line: 93, baseType: !128, size: 32, offset: 2432)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !422, file: !386, line: 93, baseType: !128, size: 32, offset: 2464)
!1426 = !{!1427}
!1427 = !DISubrange(count: 18)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !261, file: !262, line: 168, baseType: !524, size: 64, offset: 6144)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !261, file: !262, line: 169, baseType: !171, size: 64, offset: 6208)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !261, file: !262, line: 170, baseType: !1431, size: 64, offset: 6272)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 64)
!1432 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !262, line: 46, flags: DIFlagFwdDecl)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !261, file: !262, line: 171, baseType: !654, size: 64, offset: 6336)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !261, file: !262, line: 174, baseType: !128, size: 32, offset: 6400)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !261, file: !262, line: 174, baseType: !128, size: 32, offset: 6432)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !261, file: !262, line: 174, baseType: !128, size: 32, offset: 6464)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !261, file: !262, line: 175, baseType: !128, size: 32, offset: 6496)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !261, file: !262, line: 175, baseType: !128, size: 32, offset: 6528)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !261, file: !262, line: 176, baseType: !77, size: 16, offset: 6560)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !261, file: !262, line: 176, baseType: !77, size: 16, offset: 6576)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !261, file: !262, line: 179, baseType: !201, size: 96, offset: 6592)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !261, file: !262, line: 179, baseType: !201, size: 96, offset: 6688)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !261, file: !262, line: 180, baseType: !128, size: 32, offset: 6784)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !261, file: !262, line: 180, baseType: !128, size: 32, offset: 6816)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !261, file: !262, line: 180, baseType: !128, size: 32, offset: 6848)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !261, file: !262, line: 181, baseType: !128, size: 32, offset: 6880)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !261, file: !262, line: 181, baseType: !128, size: 32, offset: 6912)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !261, file: !262, line: 182, baseType: !128, size: 32, offset: 6944)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !261, file: !262, line: 182, baseType: !128, size: 32, offset: 6976)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !261, file: !262, line: 183, baseType: !77, size: 16, offset: 7008)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !261, file: !262, line: 183, baseType: !77, size: 16, offset: 7024)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !261, file: !262, line: 185, baseType: !79, size: 32, offset: 7040)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !261, file: !262, line: 186, baseType: !77, size: 16, offset: 7072)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !261, file: !262, line: 187, baseType: !77, size: 16, offset: 7088)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !261, file: !262, line: 190, baseType: !378, size: 128, offset: 7104)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !261, file: !262, line: 191, baseType: !77, size: 16, offset: 7232)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !261, file: !262, line: 192, baseType: !77, size: 16, offset: 7248)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !261, file: !262, line: 195, baseType: !77, size: 16, offset: 7264)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !261, file: !262, line: 196, baseType: !77, size: 16, offset: 7280)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !261, file: !262, line: 197, baseType: !77, size: 16, offset: 7296)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !261, file: !262, line: 198, baseType: !1177, size: 48, offset: 7312)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !261, file: !262, line: 200, baseType: !1463, size: 64, offset: 7360)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !262, line: 86, size: 192, elements: !1465)
!1465 = !{!1466, !1467, !1469, !1470}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1464, file: !262, line: 87, baseType: !617, size: 64)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !1464, file: !262, line: 88, baseType: !1468, size: 64, offset: 64)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !64, size: 64)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1464, file: !262, line: 89, baseType: !79, size: 32, offset: 128)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1464, file: !262, line: 90, baseType: !79, size: 32, offset: 160)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !261, file: !262, line: 202, baseType: !104, size: 128, offset: 7424)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !152, file: !4, line: 151, baseType: !1468, size: 64, offset: 3584)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !152, file: !4, line: 152, baseType: !79, size: 32, offset: 3648)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !152, file: !4, line: 153, baseType: !79, size: 32, offset: 3680)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !152, file: !4, line: 156, baseType: !201, size: 96, offset: 3712)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !152, file: !4, line: 156, baseType: !201, size: 96, offset: 3808)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !152, file: !4, line: 156, baseType: !201, size: 96, offset: 3904)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !152, file: !4, line: 157, baseType: !201, size: 96, offset: 4000)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !152, file: !4, line: 158, baseType: !201, size: 96, offset: 4096)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !152, file: !4, line: 159, baseType: !201, size: 96, offset: 4192)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !152, file: !4, line: 160, baseType: !201, size: 96, offset: 4288)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !152, file: !4, line: 160, baseType: !201, size: 96, offset: 4384)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !152, file: !4, line: 161, baseType: !378, size: 128, offset: 4480)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !152, file: !4, line: 161, baseType: !378, size: 128, offset: 4608)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !152, file: !4, line: 162, baseType: !201, size: 96, offset: 4736)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !152, file: !4, line: 162, baseType: !201, size: 96, offset: 4832)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !152, file: !4, line: 163, baseType: !128, size: 32, offset: 4928)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !152, file: !4, line: 163, baseType: !128, size: 32, offset: 4960)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !152, file: !4, line: 164, baseType: !1289, size: 512, offset: 4992)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !152, file: !4, line: 165, baseType: !1289, size: 512, offset: 5504)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !152, file: !4, line: 166, baseType: !1289, size: 512, offset: 6016)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !152, file: !4, line: 167, baseType: !1289, size: 512, offset: 6528)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !152, file: !4, line: 176, baseType: !1289, size: 512, offset: 7040)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !152, file: !4, line: 178, baseType: !5, size: 32, offset: 7552)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !152, file: !4, line: 180, baseType: !77, size: 16, offset: 7584)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !152, file: !4, line: 181, baseType: !77, size: 16, offset: 7600)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !152, file: !4, line: 183, baseType: !77, size: 16, offset: 7616)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !152, file: !4, line: 183, baseType: !77, size: 16, offset: 7632)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !152, file: !4, line: 184, baseType: !77, size: 16, offset: 7648)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !152, file: !4, line: 184, baseType: !77, size: 16, offset: 7664)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !152, file: !4, line: 185, baseType: !77, size: 16, offset: 7680)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !152, file: !4, line: 186, baseType: !77, size: 16, offset: 7696)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !152, file: !4, line: 187, baseType: !77, size: 16, offset: 7712)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !152, file: !4, line: 188, baseType: !64, size: 8, offset: 7728)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !152, file: !4, line: 189, baseType: !64, size: 8, offset: 7736)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !152, file: !4, line: 192, baseType: !79, size: 32, offset: 7744)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !152, file: !4, line: 192, baseType: !79, size: 32, offset: 7776)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !152, file: !4, line: 192, baseType: !79, size: 32, offset: 7808)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !152, file: !4, line: 192, baseType: !79, size: 32, offset: 7840)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !152, file: !4, line: 194, baseType: !79, size: 32, offset: 7872)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !152, file: !4, line: 202, baseType: !128, size: 32, offset: 7904)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !152, file: !4, line: 202, baseType: !128, size: 32, offset: 7936)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !152, file: !4, line: 202, baseType: !128, size: 32, offset: 7968)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !152, file: !4, line: 211, baseType: !128, size: 32, offset: 8000)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !152, file: !4, line: 212, baseType: !128, size: 32, offset: 8032)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !152, file: !4, line: 213, baseType: !128, size: 32, offset: 8064)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !152, file: !4, line: 214, baseType: !128, size: 32, offset: 8096)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !152, file: !4, line: 215, baseType: !128, size: 32, offset: 8128)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !152, file: !4, line: 216, baseType: !128, size: 32, offset: 8160)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !152, file: !4, line: 219, baseType: !128, size: 32, offset: 8192)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !152, file: !4, line: 220, baseType: !128, size: 32, offset: 8224)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !152, file: !4, line: 221, baseType: !128, size: 32, offset: 8256)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !152, file: !4, line: 224, baseType: !1524, size: 16, offset: 8288)
!1524 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !152, file: !4, line: 224, baseType: !1524, size: 16, offset: 8304)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !152, file: !4, line: 226, baseType: !77, size: 16, offset: 8320)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !152, file: !4, line: 228, baseType: !64, size: 8, offset: 8336)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !152, file: !4, line: 229, baseType: !64, size: 8, offset: 8344)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !152, file: !4, line: 231, baseType: !77, size: 16, offset: 8352)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !152, file: !4, line: 232, baseType: !64, size: 8, offset: 8368)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !152, file: !4, line: 233, baseType: !64, size: 8, offset: 8376)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !152, file: !4, line: 234, baseType: !128, size: 32, offset: 8384)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !152, file: !4, line: 235, baseType: !128, size: 32, offset: 8416)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !152, file: !4, line: 237, baseType: !104, size: 128, offset: 8448)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !152, file: !4, line: 238, baseType: !104, size: 128, offset: 8576)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !152, file: !4, line: 239, baseType: !104, size: 128, offset: 8704)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !152, file: !4, line: 240, baseType: !104, size: 128, offset: 8832)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !152, file: !4, line: 242, baseType: !128, size: 32, offset: 8960)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !152, file: !4, line: 244, baseType: !77, size: 16, offset: 8992)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !152, file: !4, line: 245, baseType: !1524, size: 16, offset: 9008)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !152, file: !4, line: 246, baseType: !378, size: 128, offset: 9024)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !152, file: !4, line: 248, baseType: !79, size: 32, offset: 9152)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !152, file: !4, line: 249, baseType: !79, size: 32, offset: 9184)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !152, file: !4, line: 251, baseType: !1545, size: 64, offset: 9216)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !4, line: 251, flags: DIFlagFwdDecl)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !152, file: !4, line: 253, baseType: !64, size: 8, offset: 9280)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !152, file: !4, line: 254, baseType: !64, size: 8, offset: 9288)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !152, file: !4, line: 255, baseType: !77, size: 16, offset: 9296)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !152, file: !4, line: 256, baseType: !201, size: 96, offset: 9312)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !152, file: !4, line: 258, baseType: !104, size: 128, offset: 9408)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !152, file: !4, line: 259, baseType: !104, size: 128, offset: 9536)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !152, file: !4, line: 260, baseType: !104, size: 128, offset: 9664)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !152, file: !4, line: 261, baseType: !104, size: 128, offset: 9792)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !152, file: !4, line: 263, baseType: !1556, size: 64, offset: 9920)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 64)
!1557 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !4, line: 52, flags: DIFlagFwdDecl)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !152, file: !4, line: 264, baseType: !1559, size: 64, offset: 9984)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64)
!1560 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !4, line: 53, flags: DIFlagFwdDecl)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !152, file: !4, line: 265, baseType: !1431, size: 64, offset: 10048)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !152, file: !4, line: 267, baseType: !64, size: 8, offset: 10112)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !152, file: !4, line: 268, baseType: !64, size: 8, offset: 10120)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !152, file: !4, line: 269, baseType: !77, size: 16, offset: 10128)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !152, file: !4, line: 270, baseType: !128, size: 32, offset: 10144)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !152, file: !4, line: 272, baseType: !1567, size: 64, offset: 10176)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1568 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !4, line: 54, flags: DIFlagFwdDecl)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !152, file: !4, line: 275, baseType: !1570, size: 64, offset: 10240)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !1572, line: 49, size: 448, elements: !1573)
!1572 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_curve.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1573 = !{!1574, !1575, !1576, !1577}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !1571, file: !1572, line: 50, baseType: !104, size: 128)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "bev", scope: !1571, file: !1572, line: 51, baseType: !104, size: 128, offset: 128)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "deformed_nurbs", scope: !1571, file: !1572, line: 52, baseType: !104, size: 128, offset: 256)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !1571, file: !1572, line: 53, baseType: !1578, size: 64, offset: 384)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Path", file: !19, line: 65, size: 128, elements: !1580)
!1580 = !{!1581, !1589, !1590}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1579, file: !19, line: 66, baseType: !1582, size: 64)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 64)
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PathPoint", file: !19, line: 56, size: 320, elements: !1584)
!1584 = !{!1585, !1586, !1587, !1588}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1583, file: !19, line: 57, baseType: !378, size: 128)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !1583, file: !19, line: 58, baseType: !378, size: 128, offset: 128)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1583, file: !19, line: 59, baseType: !128, size: 32, offset: 256)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1583, file: !19, line: 59, baseType: !128, size: 32, offset: 288)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1579, file: !19, line: 67, baseType: !79, size: 32, offset: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "totdist", scope: !1579, file: !19, line: 68, baseType: !128, size: 32, offset: 96)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !152, file: !4, line: 277, baseType: !1592, size: 64, offset: 10304)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 64)
!1593 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !4, line: 56, flags: DIFlagFwdDecl)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !152, file: !4, line: 277, baseType: !1592, size: 64, offset: 10368)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !152, file: !4, line: 278, baseType: !1249, size: 64, offset: 10432)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !152, file: !4, line: 279, baseType: !1249, size: 64, offset: 10496)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !152, file: !4, line: 280, baseType: !5, size: 32, offset: 10560)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !152, file: !4, line: 281, baseType: !5, size: 32, offset: 10592)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !152, file: !4, line: 283, baseType: !104, size: 128, offset: 10624)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !152, file: !4, line: 284, baseType: !104, size: 128, offset: 10752)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !152, file: !4, line: 285, baseType: !1602, size: 64, offset: 10880)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 64)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !152, file: !4, line: 287, baseType: !1604, size: 64, offset: 10944)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64)
!1605 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !4, line: 59, flags: DIFlagFwdDecl)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !152, file: !4, line: 288, baseType: !1607, size: 64, offset: 11008)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !4, line: 288, flags: DIFlagFwdDecl)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !152, file: !4, line: 290, baseType: !793, size: 64, offset: 11072)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !152, file: !4, line: 291, baseType: !1611, size: 64, offset: 11136)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !486, line: 65, baseType: !485)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !152, file: !4, line: 293, baseType: !104, size: 128, offset: 11200)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !152, file: !4, line: 294, baseType: !1615, size: 64, offset: 11328)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!1616 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !4, line: 113, baseType: !1617)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !4, line: 108, size: 256, elements: !1618)
!1618 = !{!1619, !1621, !1622, !1623, !1624}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1617, file: !4, line: 109, baseType: !1620, size: 64)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1617, file: !4, line: 109, baseType: !1620, size: 64, offset: 64)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1617, file: !4, line: 110, baseType: !151, size: 64, offset: 128)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1617, file: !4, line: 111, baseType: !79, size: 32, offset: 192)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1617, file: !4, line: 112, baseType: !128, size: 32, offset: 224)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "taperobj", scope: !116, file: !19, line: 203, baseType: !151, size: 64, offset: 1344)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "textoncurve", scope: !116, file: !19, line: 203, baseType: !151, size: 64, offset: 1408)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !116, file: !19, line: 204, baseType: !171, size: 64, offset: 1472)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !116, file: !19, line: 205, baseType: !1629, size: 64, offset: 1536)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 64)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !1631, line: 73, size: 1792, elements: !1632)
!1631 = !DIFile(filename: "blender/source/blender/makesdna/DNA_key_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1632 = !{!1633, !1634, !1635, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1630, file: !1631, line: 74, baseType: !44, size: 960)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1630, file: !1631, line: 75, baseType: !120, size: 64, offset: 960)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "refkey", scope: !1630, file: !1631, line: 80, baseType: !1636, size: 64, offset: 1024)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 64)
!1637 = !DIDerivedType(tag: DW_TAG_typedef, name: "KeyBlock", file: !1631, line: 70, baseType: !1638)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KeyBlock", file: !1631, line: 45, size: 1472, elements: !1639)
!1639 = !{!1640, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1638, file: !1631, line: 46, baseType: !1641, size: 64)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1638, file: !1631, line: 46, baseType: !1641, size: 64, offset: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1638, file: !1631, line: 48, baseType: !128, size: 32, offset: 128)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !1638, file: !1631, line: 51, baseType: !128, size: 32, offset: 160)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1638, file: !1631, line: 53, baseType: !77, size: 16, offset: 192)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1638, file: !1631, line: 54, baseType: !77, size: 16, offset: 208)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "relative", scope: !1638, file: !1631, line: 56, baseType: !77, size: 16, offset: 224)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1638, file: !1631, line: 57, baseType: !77, size: 16, offset: 240)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "totelem", scope: !1638, file: !1631, line: 59, baseType: !79, size: 32, offset: 256)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1638, file: !1631, line: 60, baseType: !79, size: 32, offset: 288)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1638, file: !1631, line: 62, baseType: !49, size: 64, offset: 320)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1638, file: !1631, line: 63, baseType: !94, size: 512, offset: 384)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !1638, file: !1631, line: 64, baseType: !94, size: 512, offset: 896)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "slidermin", scope: !1638, file: !1631, line: 67, baseType: !128, size: 32, offset: 1408)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "slidermax", scope: !1638, file: !1631, line: 68, baseType: !128, size: 32, offset: 1440)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "elemstr", scope: !1630, file: !1631, line: 85, baseType: !1110, size: 256, offset: 1088)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !1630, file: !1631, line: 86, baseType: !79, size: 32, offset: 1344)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1630, file: !1631, line: 87, baseType: !79, size: 32, offset: 1376)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1630, file: !1631, line: 89, baseType: !104, size: 128, offset: 1408)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1630, file: !1631, line: 90, baseType: !171, size: 64, offset: 1536)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1630, file: !1631, line: 92, baseType: !43, size: 64, offset: 1600)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1630, file: !1631, line: 94, baseType: !77, size: 16, offset: 1664)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !1630, file: !1631, line: 95, baseType: !77, size: 16, offset: 1680)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "slurph", scope: !1630, file: !1631, line: 96, baseType: !77, size: 16, offset: 1696)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1630, file: !1631, line: 97, baseType: !77, size: 16, offset: 1712)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1630, file: !1631, line: 101, baseType: !128, size: 32, offset: 1728)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "uidgen", scope: !1630, file: !1631, line: 104, baseType: !79, size: 32, offset: 1760)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !116, file: !19, line: 206, baseType: !259, size: 64, offset: 1600)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !116, file: !19, line: 209, baseType: !201, size: 96, offset: 1664)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !116, file: !19, line: 210, baseType: !201, size: 96, offset: 1760)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !116, file: !19, line: 211, baseType: !201, size: 96, offset: 1856)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !116, file: !19, line: 213, baseType: !77, size: 16, offset: 1952)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !116, file: !19, line: 215, baseType: !77, size: 16, offset: 1968)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !116, file: !19, line: 216, baseType: !77, size: 16, offset: 1984)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "twist_mode", scope: !116, file: !19, line: 216, baseType: !77, size: 16, offset: 2000)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "twist_smooth", scope: !116, file: !19, line: 217, baseType: !128, size: 32, offset: 2016)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "smallcaps_scale", scope: !116, file: !19, line: 217, baseType: !128, size: 32, offset: 2048)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "pathlen", scope: !116, file: !19, line: 219, baseType: !79, size: 32, offset: 2080)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "bevresol", scope: !116, file: !19, line: 220, baseType: !77, size: 16, offset: 2112)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !116, file: !19, line: 220, baseType: !77, size: 16, offset: 2128)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !116, file: !19, line: 221, baseType: !79, size: 32, offset: 2144)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !116, file: !19, line: 222, baseType: !128, size: 32, offset: 2176)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "ext1", scope: !116, file: !19, line: 222, baseType: !128, size: 32, offset: 2208)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "ext2", scope: !116, file: !19, line: 222, baseType: !128, size: 32, offset: 2240)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !116, file: !19, line: 225, baseType: !77, size: 16, offset: 2272)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !116, file: !19, line: 225, baseType: !77, size: 16, offset: 2288)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "resolu_ren", scope: !116, file: !19, line: 226, baseType: !77, size: 16, offset: 2304)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "resolv_ren", scope: !116, file: !19, line: 226, baseType: !77, size: 16, offset: 2320)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "actnu", scope: !116, file: !19, line: 229, baseType: !79, size: 32, offset: 2336)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "actvert", scope: !116, file: !19, line: 231, baseType: !79, size: 32, offset: 2368)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !116, file: !19, line: 233, baseType: !147, size: 32, offset: 2400)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !116, file: !19, line: 236, baseType: !77, size: 16, offset: 2432)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "spacemode", scope: !116, file: !19, line: 237, baseType: !64, size: 8, offset: 2448)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !116, file: !19, line: 237, baseType: !64, size: 8, offset: 2456)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !116, file: !19, line: 238, baseType: !128, size: 32, offset: 2464)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "linedist", scope: !116, file: !19, line: 238, baseType: !128, size: 32, offset: 2496)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "shear", scope: !116, file: !19, line: 238, baseType: !128, size: 32, offset: 2528)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !116, file: !19, line: 238, baseType: !128, size: 32, offset: 2560)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "wordspace", scope: !116, file: !19, line: 238, baseType: !128, size: 32, offset: 2592)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "ulpos", scope: !116, file: !19, line: 238, baseType: !128, size: 32, offset: 2624)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "ulheight", scope: !116, file: !19, line: 238, baseType: !128, size: 32, offset: 2656)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !116, file: !19, line: 239, baseType: !128, size: 32, offset: 2688)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !116, file: !19, line: 239, baseType: !128, size: 32, offset: 2720)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "linewidth", scope: !116, file: !19, line: 240, baseType: !128, size: 32, offset: 2752)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !116, file: !19, line: 244, baseType: !79, size: 32, offset: 2784)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "selstart", scope: !116, file: !19, line: 245, baseType: !79, size: 32, offset: 2816)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !116, file: !19, line: 245, baseType: !79, size: 32, offset: 2848)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "len_wchar", scope: !116, file: !19, line: 248, baseType: !79, size: 32, offset: 2880)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !116, file: !19, line: 249, baseType: !79, size: 32, offset: 2912)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !116, file: !19, line: 250, baseType: !1468, size: 64, offset: 2944)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "editfont", scope: !116, file: !19, line: 251, baseType: !1712, size: 64, offset: 3008)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditFont", file: !1714, line: 60, size: 704, elements: !1715)
!1714 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_font.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1715 = !{!1716, !1720, !1729, !1730, !1731, !1741, !1744, !1745, !1746, !1747}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "copybuf", scope: !1713, file: !1714, line: 61, baseType: !1717, size: 64)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !1719, line: 74, baseType: !79)
!1719 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "copybufinfo", scope: !1713, file: !1714, line: 62, baseType: !1721, size: 64, offset: 64)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CharInfo", file: !19, line: 168, size: 64, elements: !1723)
!1723 = !{!1724, !1725, !1726, !1727, !1728}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "kern", scope: !1722, file: !19, line: 169, baseType: !77, size: 16)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1722, file: !19, line: 170, baseType: !77, size: 16, offset: 16)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1722, file: !19, line: 171, baseType: !64, size: 8, offset: 32)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1722, file: !19, line: 172, baseType: !64, size: 8, offset: 40)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1722, file: !19, line: 173, baseType: !77, size: 16, offset: 48)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "textbuf", scope: !1713, file: !1714, line: 64, baseType: !1717, size: 64, offset: 128)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "textbufinfo", scope: !1713, file: !1714, line: 65, baseType: !1721, size: 64, offset: 192)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "selboxes", scope: !1713, file: !1714, line: 68, baseType: !1732, size: 64, offset: 256)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64)
!1733 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditFontSelBox", file: !1714, line: 58, baseType: !1734)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditFontSelBox", file: !1714, line: 55, size: 160, elements: !1735)
!1735 = !{!1736, !1737, !1738, !1739, !1740}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1734, file: !1714, line: 56, baseType: !128, size: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1734, file: !1714, line: 56, baseType: !128, size: 32, offset: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1734, file: !1714, line: 56, baseType: !128, size: 32, offset: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1734, file: !1714, line: 56, baseType: !128, size: 32, offset: 96)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1734, file: !1714, line: 57, baseType: !128, size: 32, offset: 128)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "textcurs", scope: !1713, file: !1714, line: 69, baseType: !1742, size: 256, offset: 320)
!1742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 256, elements: !1743)
!1743 = !{!149, !613}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1713, file: !1714, line: 73, baseType: !79, size: 32, offset: 576)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1713, file: !1714, line: 73, baseType: !79, size: 32, offset: 608)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "selstart", scope: !1713, file: !1714, line: 74, baseType: !79, size: 32, offset: 640)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !1713, file: !1714, line: 74, baseType: !79, size: 32, offset: 672)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !116, file: !19, line: 253, baseType: !94, size: 512, offset: 3072)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !116, file: !19, line: 254, baseType: !1750, size: 64, offset: 3584)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 64)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VFont", file: !1752, line: 45, size: 9344, elements: !1753)
!1752 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vfont_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1753 = !{!1754, !1755, !1756, !1759, !1760}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1751, file: !1752, line: 46, baseType: !44, size: 960)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1751, file: !1752, line: 48, baseType: !63, size: 8192, offset: 960)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1751, file: !1752, line: 50, baseType: !1757, size: 64, offset: 9152)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 64)
!1758 = !DICompositeType(tag: DW_TAG_structure_type, name: "VFontData", file: !1752, line: 43, flags: DIFlagFwdDecl)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1751, file: !1752, line: 51, baseType: !70, size: 64, offset: 9216)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "temp_pf", scope: !1751, file: !1752, line: 55, baseType: !70, size: 64, offset: 9280)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "vfontb", scope: !116, file: !19, line: 255, baseType: !1750, size: 64, offset: 3648)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "vfonti", scope: !116, file: !19, line: 256, baseType: !1750, size: 64, offset: 3712)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "vfontbi", scope: !116, file: !19, line: 257, baseType: !1750, size: 64, offset: 3776)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "tb", scope: !116, file: !19, line: 259, baseType: !1765, size: 64, offset: 3840)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextBox", file: !19, line: 176, size: 128, elements: !1767)
!1767 = !{!1768, !1769, !1770, !1771}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1766, file: !19, line: 177, baseType: !128, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1766, file: !19, line: 177, baseType: !128, size: 32, offset: 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1766, file: !19, line: 177, baseType: !128, size: 32, offset: 64)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1766, file: !19, line: 177, baseType: !128, size: 32, offset: 96)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "totbox", scope: !116, file: !19, line: 260, baseType: !79, size: 32, offset: 3904)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "actbox", scope: !116, file: !19, line: 260, baseType: !79, size: 32, offset: 3936)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "strinfo", scope: !116, file: !19, line: 262, baseType: !1721, size: 64, offset: 3968)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "curinfo", scope: !116, file: !19, line: 263, baseType: !1722, size: 64, offset: 4032)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !116, file: !19, line: 267, baseType: !128, size: 32, offset: 4096)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1", scope: !116, file: !19, line: 268, baseType: !128, size: 32, offset: 4128)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2", scope: !116, file: !19, line: 268, baseType: !128, size: 32, offset: 4160)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1_mapping", scope: !116, file: !19, line: 269, baseType: !64, size: 8, offset: 4192)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2_mapping", scope: !116, file: !19, line: 269, baseType: !64, size: 8, offset: 4200)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !116, file: !19, line: 271, baseType: !816, size: 16, offset: 4208)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 64)
!1783 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nurb", file: !19, line: 166, baseType: !1784)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Nurb", file: !19, line: 147, size: 704, elements: !1785)
!1785 = !{!1786, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1816, !1837, !1838, !1839}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1784, file: !19, line: 148, baseType: !1787, size: 64)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1784, file: !19, line: 148, baseType: !1787, size: 64, offset: 64)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1784, file: !19, line: 149, baseType: !77, size: 16, offset: 128)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1784, file: !19, line: 150, baseType: !77, size: 16, offset: 144)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !1784, file: !19, line: 151, baseType: !77, size: 16, offset: 160)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1784, file: !19, line: 151, baseType: !77, size: 16, offset: 176)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "pntsu", scope: !1784, file: !19, line: 152, baseType: !79, size: 32, offset: 192)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "pntsv", scope: !1784, file: !19, line: 152, baseType: !79, size: 32, offset: 224)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1784, file: !19, line: 153, baseType: !611, size: 32, offset: 256)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !1784, file: !19, line: 154, baseType: !77, size: 16, offset: 288)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !1784, file: !19, line: 154, baseType: !77, size: 16, offset: 304)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "orderu", scope: !1784, file: !19, line: 155, baseType: !77, size: 16, offset: 320)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "orderv", scope: !1784, file: !19, line: 155, baseType: !77, size: 16, offset: 336)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flagu", scope: !1784, file: !19, line: 156, baseType: !77, size: 16, offset: 352)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flagv", scope: !1784, file: !19, line: 156, baseType: !77, size: 16, offset: 368)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "knotsu", scope: !1784, file: !19, line: 158, baseType: !1325, size: 64, offset: 384)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "knotsv", scope: !1784, file: !19, line: 158, baseType: !1325, size: 64, offset: 448)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !1784, file: !19, line: 159, baseType: !1805, size: 64, offset: 512)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = !DIDerivedType(tag: DW_TAG_typedef, name: "BPoint", file: !19, line: 141, baseType: !1807)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BPoint", file: !19, line: 136, size: 288, elements: !1808)
!1808 = !{!1809, !1810, !1811, !1812, !1813, !1814, !1815}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1807, file: !19, line: 137, baseType: !378, size: 128)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !1807, file: !19, line: 138, baseType: !128, size: 32, offset: 128)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1807, file: !19, line: 138, baseType: !128, size: 32, offset: 160)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !1807, file: !19, line: 139, baseType: !77, size: 16, offset: 192)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !1807, file: !19, line: 139, baseType: !77, size: 16, offset: 208)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1807, file: !19, line: 140, baseType: !128, size: 32, offset: 224)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1807, file: !19, line: 140, baseType: !128, size: 32, offset: 256)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !1784, file: !19, line: 160, baseType: !1817, size: 64, offset: 576)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !19, line: 133, baseType: !1819)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !19, line: 117, size: 576, elements: !1820)
!1820 = !{!1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1819, file: !19, line: 118, baseType: !1292, size: 288)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !1819, file: !19, line: 119, baseType: !128, size: 32, offset: 288)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1819, file: !19, line: 119, baseType: !128, size: 32, offset: 320)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1819, file: !19, line: 119, baseType: !128, size: 32, offset: 352)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1819, file: !19, line: 121, baseType: !64, size: 8, offset: 384)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !1819, file: !19, line: 123, baseType: !64, size: 8, offset: 392)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !1819, file: !19, line: 123, baseType: !64, size: 8, offset: 400)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !1819, file: !19, line: 124, baseType: !64, size: 8, offset: 408)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !1819, file: !19, line: 124, baseType: !64, size: 8, offset: 416)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !1819, file: !19, line: 124, baseType: !64, size: 8, offset: 424)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !1819, file: !19, line: 126, baseType: !64, size: 8, offset: 432)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !1819, file: !19, line: 128, baseType: !64, size: 8, offset: 440)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1819, file: !19, line: 129, baseType: !128, size: 32, offset: 448)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !1819, file: !19, line: 130, baseType: !128, size: 32, offset: 480)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !1819, file: !19, line: 130, baseType: !128, size: 32, offset: 512)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1819, file: !19, line: 132, baseType: !147, size: 32, offset: 544)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "tilt_interp", scope: !1784, file: !19, line: 162, baseType: !77, size: 16, offset: 640)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "radius_interp", scope: !1784, file: !19, line: 163, baseType: !77, size: 16, offset: 656)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "charidx", scope: !1784, file: !19, line: 165, baseType: !79, size: 32, offset: 672)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !79, size: 64)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64)
!1842 = !{i32 7, !"Dwarf Version", i32 4}
!1843 = !{i32 2, !"Debug Info Version", i32 3}
!1844 = !{i32 1, !"wchar_size", i32 4}
!1845 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!1846 = distinct !DISubprogram(name: "BKE_curve_unlink", scope: !1, file: !1, line: 72, type: !1847, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!1847 = !DISubroutineType(types: !1848)
!1848 = !{null, !114}
!1849 = !{}
!1850 = !DILocalVariable(name: "cu", arg: 1, scope: !1846, file: !1, line: 72, type: !114)
!1851 = !DILocation(line: 72, column: 30, scope: !1846)
!1852 = !DILocalVariable(name: "a", scope: !1846, file: !1, line: 74, type: !79)
!1853 = !DILocation(line: 74, column: 6, scope: !1846)
!1854 = !DILocation(line: 76, column: 9, scope: !1855)
!1855 = distinct !DILexicalBlock(scope: !1846, file: !1, line: 76, column: 2)
!1856 = !DILocation(line: 76, column: 7, scope: !1855)
!1857 = !DILocation(line: 76, column: 14, scope: !1858)
!1858 = distinct !DILexicalBlock(scope: !1855, file: !1, line: 76, column: 2)
!1859 = !DILocation(line: 76, column: 18, scope: !1858)
!1860 = !DILocation(line: 76, column: 22, scope: !1858)
!1861 = !DILocation(line: 76, column: 16, scope: !1858)
!1862 = !DILocation(line: 76, column: 2, scope: !1855)
!1863 = !DILocation(line: 77, column: 7, scope: !1864)
!1864 = distinct !DILexicalBlock(scope: !1865, file: !1, line: 77, column: 7)
!1865 = distinct !DILexicalBlock(scope: !1858, file: !1, line: 76, column: 35)
!1866 = !DILocation(line: 77, column: 11, scope: !1864)
!1867 = !DILocation(line: 77, column: 15, scope: !1864)
!1868 = !DILocation(line: 77, column: 7, scope: !1865)
!1869 = !DILocation(line: 77, column: 19, scope: !1864)
!1870 = !DILocation(line: 77, column: 23, scope: !1864)
!1871 = !DILocation(line: 77, column: 27, scope: !1864)
!1872 = !DILocation(line: 77, column: 31, scope: !1864)
!1873 = !DILocation(line: 77, column: 34, scope: !1864)
!1874 = !DILocation(line: 77, column: 36, scope: !1864)
!1875 = !DILocation(line: 78, column: 3, scope: !1865)
!1876 = !DILocation(line: 78, column: 7, scope: !1865)
!1877 = !DILocation(line: 78, column: 11, scope: !1865)
!1878 = !DILocation(line: 78, column: 14, scope: !1865)
!1879 = !DILocation(line: 79, column: 2, scope: !1865)
!1880 = !DILocation(line: 76, column: 31, scope: !1858)
!1881 = !DILocation(line: 76, column: 2, scope: !1858)
!1882 = distinct !{!1882, !1862, !1883}
!1883 = !DILocation(line: 79, column: 2, scope: !1855)
!1884 = !DILocation(line: 80, column: 6, scope: !1885)
!1885 = distinct !DILexicalBlock(scope: !1846, file: !1, line: 80, column: 6)
!1886 = !DILocation(line: 80, column: 10, scope: !1885)
!1887 = !DILocation(line: 80, column: 6, scope: !1846)
!1888 = !DILocation(line: 81, column: 3, scope: !1885)
!1889 = !DILocation(line: 81, column: 7, scope: !1885)
!1890 = !DILocation(line: 81, column: 14, scope: !1885)
!1891 = !DILocation(line: 81, column: 17, scope: !1885)
!1892 = !DILocation(line: 81, column: 19, scope: !1885)
!1893 = !DILocation(line: 82, column: 2, scope: !1846)
!1894 = !DILocation(line: 82, column: 6, scope: !1846)
!1895 = !DILocation(line: 82, column: 12, scope: !1846)
!1896 = !DILocation(line: 84, column: 6, scope: !1897)
!1897 = distinct !DILexicalBlock(scope: !1846, file: !1, line: 84, column: 6)
!1898 = !DILocation(line: 84, column: 10, scope: !1897)
!1899 = !DILocation(line: 84, column: 6, scope: !1846)
!1900 = !DILocation(line: 85, column: 3, scope: !1897)
!1901 = !DILocation(line: 85, column: 7, scope: !1897)
!1902 = !DILocation(line: 85, column: 15, scope: !1897)
!1903 = !DILocation(line: 85, column: 18, scope: !1897)
!1904 = !DILocation(line: 85, column: 20, scope: !1897)
!1905 = !DILocation(line: 86, column: 2, scope: !1846)
!1906 = !DILocation(line: 86, column: 6, scope: !1846)
!1907 = !DILocation(line: 86, column: 13, scope: !1846)
!1908 = !DILocation(line: 88, column: 6, scope: !1909)
!1909 = distinct !DILexicalBlock(scope: !1846, file: !1, line: 88, column: 6)
!1910 = !DILocation(line: 88, column: 10, scope: !1909)
!1911 = !DILocation(line: 88, column: 6, scope: !1846)
!1912 = !DILocation(line: 89, column: 3, scope: !1909)
!1913 = !DILocation(line: 89, column: 7, scope: !1909)
!1914 = !DILocation(line: 89, column: 15, scope: !1909)
!1915 = !DILocation(line: 89, column: 18, scope: !1909)
!1916 = !DILocation(line: 89, column: 20, scope: !1909)
!1917 = !DILocation(line: 90, column: 2, scope: !1846)
!1918 = !DILocation(line: 90, column: 6, scope: !1846)
!1919 = !DILocation(line: 90, column: 13, scope: !1846)
!1920 = !DILocation(line: 92, column: 6, scope: !1921)
!1921 = distinct !DILexicalBlock(scope: !1846, file: !1, line: 92, column: 6)
!1922 = !DILocation(line: 92, column: 10, scope: !1921)
!1923 = !DILocation(line: 92, column: 6, scope: !1846)
!1924 = !DILocation(line: 93, column: 3, scope: !1921)
!1925 = !DILocation(line: 93, column: 7, scope: !1921)
!1926 = !DILocation(line: 93, column: 16, scope: !1921)
!1927 = !DILocation(line: 93, column: 19, scope: !1921)
!1928 = !DILocation(line: 93, column: 21, scope: !1921)
!1929 = !DILocation(line: 94, column: 2, scope: !1846)
!1930 = !DILocation(line: 94, column: 6, scope: !1846)
!1931 = !DILocation(line: 94, column: 14, scope: !1846)
!1932 = !DILocation(line: 96, column: 6, scope: !1933)
!1933 = distinct !DILexicalBlock(scope: !1846, file: !1, line: 96, column: 6)
!1934 = !DILocation(line: 96, column: 10, scope: !1933)
!1935 = !DILocation(line: 96, column: 6, scope: !1846)
!1936 = !DILocation(line: 97, column: 3, scope: !1933)
!1937 = !DILocation(line: 97, column: 7, scope: !1933)
!1938 = !DILocation(line: 97, column: 12, scope: !1933)
!1939 = !DILocation(line: 97, column: 15, scope: !1933)
!1940 = !DILocation(line: 97, column: 17, scope: !1933)
!1941 = !DILocation(line: 98, column: 2, scope: !1846)
!1942 = !DILocation(line: 98, column: 6, scope: !1846)
!1943 = !DILocation(line: 98, column: 10, scope: !1846)
!1944 = !DILocation(line: 99, column: 1, scope: !1846)
!1945 = distinct !DISubprogram(name: "BKE_curve_editfont_free", scope: !1, file: !1, line: 102, type: !1847, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!1946 = !DILocalVariable(name: "cu", arg: 1, scope: !1945, file: !1, line: 102, type: !114)
!1947 = !DILocation(line: 102, column: 37, scope: !1945)
!1948 = !DILocation(line: 104, column: 6, scope: !1949)
!1949 = distinct !DILexicalBlock(scope: !1945, file: !1, line: 104, column: 6)
!1950 = !DILocation(line: 104, column: 10, scope: !1949)
!1951 = !DILocation(line: 104, column: 6, scope: !1945)
!1952 = !DILocalVariable(name: "ef", scope: !1953, file: !1, line: 105, type: !1954)
!1953 = distinct !DILexicalBlock(scope: !1949, file: !1, line: 104, column: 20)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditFont", file: !1714, line: 76, baseType: !1713)
!1956 = !DILocation(line: 105, column: 13, scope: !1953)
!1957 = !DILocation(line: 105, column: 18, scope: !1953)
!1958 = !DILocation(line: 105, column: 22, scope: !1953)
!1959 = !DILocation(line: 107, column: 7, scope: !1960)
!1960 = distinct !DILexicalBlock(scope: !1953, file: !1, line: 107, column: 7)
!1961 = !DILocation(line: 107, column: 11, scope: !1960)
!1962 = !DILocation(line: 107, column: 7, scope: !1953)
!1963 = !DILocation(line: 108, column: 4, scope: !1960)
!1964 = !DILocation(line: 108, column: 14, scope: !1960)
!1965 = !DILocation(line: 108, column: 18, scope: !1960)
!1966 = !DILocation(line: 109, column: 7, scope: !1967)
!1967 = distinct !DILexicalBlock(scope: !1953, file: !1, line: 109, column: 7)
!1968 = !DILocation(line: 109, column: 11, scope: !1967)
!1969 = !DILocation(line: 109, column: 7, scope: !1953)
!1970 = !DILocation(line: 110, column: 4, scope: !1967)
!1971 = !DILocation(line: 110, column: 14, scope: !1967)
!1972 = !DILocation(line: 110, column: 18, scope: !1967)
!1973 = !DILocation(line: 111, column: 7, scope: !1974)
!1974 = distinct !DILexicalBlock(scope: !1953, file: !1, line: 111, column: 7)
!1975 = !DILocation(line: 111, column: 11, scope: !1974)
!1976 = !DILocation(line: 111, column: 7, scope: !1953)
!1977 = !DILocation(line: 112, column: 4, scope: !1974)
!1978 = !DILocation(line: 112, column: 14, scope: !1974)
!1979 = !DILocation(line: 112, column: 18, scope: !1974)
!1980 = !DILocation(line: 113, column: 7, scope: !1981)
!1981 = distinct !DILexicalBlock(scope: !1953, file: !1, line: 113, column: 7)
!1982 = !DILocation(line: 113, column: 11, scope: !1981)
!1983 = !DILocation(line: 113, column: 7, scope: !1953)
!1984 = !DILocation(line: 114, column: 4, scope: !1981)
!1985 = !DILocation(line: 114, column: 14, scope: !1981)
!1986 = !DILocation(line: 114, column: 18, scope: !1981)
!1987 = !DILocation(line: 115, column: 7, scope: !1988)
!1988 = distinct !DILexicalBlock(scope: !1953, file: !1, line: 115, column: 7)
!1989 = !DILocation(line: 115, column: 11, scope: !1988)
!1990 = !DILocation(line: 115, column: 7, scope: !1953)
!1991 = !DILocation(line: 116, column: 4, scope: !1988)
!1992 = !DILocation(line: 116, column: 14, scope: !1988)
!1993 = !DILocation(line: 116, column: 18, scope: !1988)
!1994 = !DILocation(line: 118, column: 3, scope: !1953)
!1995 = !DILocation(line: 118, column: 13, scope: !1953)
!1996 = !DILocation(line: 119, column: 3, scope: !1953)
!1997 = !DILocation(line: 119, column: 7, scope: !1953)
!1998 = !DILocation(line: 119, column: 16, scope: !1953)
!1999 = !DILocation(line: 120, column: 2, scope: !1953)
!2000 = !DILocation(line: 121, column: 1, scope: !1945)
!2001 = distinct !DISubprogram(name: "BKE_curve_editNurb_keyIndex_free", scope: !1, file: !1, line: 123, type: !2002, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!2002 = !DISubroutineType(types: !2003)
!2003 = !{null, !136}
!2004 = !DILocalVariable(name: "editnurb", arg: 1, scope: !2001, file: !1, line: 123, type: !136)
!2005 = !DILocation(line: 123, column: 49, scope: !2001)
!2006 = !DILocation(line: 125, column: 7, scope: !2007)
!2007 = distinct !DILexicalBlock(scope: !2001, file: !1, line: 125, column: 6)
!2008 = !DILocation(line: 125, column: 17, scope: !2007)
!2009 = !DILocation(line: 125, column: 6, scope: !2001)
!2010 = !DILocation(line: 126, column: 3, scope: !2011)
!2011 = distinct !DILexicalBlock(scope: !2007, file: !1, line: 125, column: 27)
!2012 = !DILocation(line: 128, column: 17, scope: !2001)
!2013 = !DILocation(line: 128, column: 27, scope: !2001)
!2014 = !DILocation(line: 128, column: 43, scope: !2001)
!2015 = !DILocation(line: 128, column: 2, scope: !2001)
!2016 = !DILocation(line: 129, column: 2, scope: !2001)
!2017 = !DILocation(line: 129, column: 12, scope: !2001)
!2018 = !DILocation(line: 129, column: 21, scope: !2001)
!2019 = !DILocation(line: 130, column: 1, scope: !2001)
!2020 = distinct !DISubprogram(name: "BKE_curve_editNurb_free", scope: !1, file: !1, line: 132, type: !1847, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!2021 = !DILocalVariable(name: "cu", arg: 1, scope: !2020, file: !1, line: 132, type: !114)
!2022 = !DILocation(line: 132, column: 37, scope: !2020)
!2023 = !DILocation(line: 134, column: 6, scope: !2024)
!2024 = distinct !DILexicalBlock(scope: !2020, file: !1, line: 134, column: 6)
!2025 = !DILocation(line: 134, column: 10, scope: !2024)
!2026 = !DILocation(line: 134, column: 6, scope: !2020)
!2027 = !DILocation(line: 135, column: 22, scope: !2028)
!2028 = distinct !DILexicalBlock(scope: !2024, file: !1, line: 134, column: 20)
!2029 = !DILocation(line: 135, column: 26, scope: !2028)
!2030 = !DILocation(line: 135, column: 36, scope: !2028)
!2031 = !DILocation(line: 135, column: 3, scope: !2028)
!2032 = !DILocation(line: 136, column: 36, scope: !2028)
!2033 = !DILocation(line: 136, column: 40, scope: !2028)
!2034 = !DILocation(line: 136, column: 3, scope: !2028)
!2035 = !DILocation(line: 137, column: 3, scope: !2028)
!2036 = !DILocation(line: 137, column: 13, scope: !2028)
!2037 = !DILocation(line: 137, column: 17, scope: !2028)
!2038 = !DILocation(line: 138, column: 3, scope: !2028)
!2039 = !DILocation(line: 138, column: 7, scope: !2028)
!2040 = !DILocation(line: 138, column: 16, scope: !2028)
!2041 = !DILocation(line: 139, column: 2, scope: !2028)
!2042 = !DILocation(line: 140, column: 1, scope: !2020)
!2043 = distinct !DISubprogram(name: "BKE_nurbList_free", scope: !1, file: !1, line: 527, type: !2044, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!2044 = !DISubroutineType(types: !2045)
!2045 = !{null, !1602}
!2046 = !DILocalVariable(name: "lb", arg: 1, scope: !2043, file: !1, line: 527, type: !1602)
!2047 = !DILocation(line: 527, column: 34, scope: !2043)
!2048 = !DILocalVariable(name: "nu", scope: !2043, file: !1, line: 529, type: !1782)
!2049 = !DILocation(line: 529, column: 8, scope: !2043)
!2050 = !DILocalVariable(name: "next", scope: !2043, file: !1, line: 529, type: !1782)
!2051 = !DILocation(line: 529, column: 13, scope: !2043)
!2052 = !DILocation(line: 531, column: 6, scope: !2053)
!2053 = distinct !DILexicalBlock(scope: !2043, file: !1, line: 531, column: 6)
!2054 = !DILocation(line: 531, column: 9, scope: !2053)
!2055 = !DILocation(line: 531, column: 6, scope: !2043)
!2056 = !DILocation(line: 531, column: 18, scope: !2053)
!2057 = !DILocation(line: 533, column: 7, scope: !2043)
!2058 = !DILocation(line: 533, column: 11, scope: !2043)
!2059 = !DILocation(line: 533, column: 5, scope: !2043)
!2060 = !DILocation(line: 534, column: 2, scope: !2043)
!2061 = !DILocation(line: 534, column: 9, scope: !2043)
!2062 = !DILocation(line: 535, column: 10, scope: !2063)
!2063 = distinct !DILexicalBlock(scope: !2043, file: !1, line: 534, column: 13)
!2064 = !DILocation(line: 535, column: 14, scope: !2063)
!2065 = !DILocation(line: 535, column: 8, scope: !2063)
!2066 = !DILocation(line: 536, column: 17, scope: !2063)
!2067 = !DILocation(line: 536, column: 3, scope: !2063)
!2068 = !DILocation(line: 537, column: 8, scope: !2063)
!2069 = !DILocation(line: 537, column: 6, scope: !2063)
!2070 = distinct !{!2070, !2060, !2071}
!2071 = !DILocation(line: 538, column: 2, scope: !2043)
!2072 = !DILocation(line: 539, column: 21, scope: !2043)
!2073 = !DILocation(line: 539, column: 2, scope: !2043)
!2074 = !DILocation(line: 540, column: 1, scope: !2043)
!2075 = distinct !DISubprogram(name: "BKE_curve_free", scope: !1, file: !1, line: 143, type: !1847, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!2076 = !DILocalVariable(name: "cu", arg: 1, scope: !2075, file: !1, line: 143, type: !114)
!2077 = !DILocation(line: 143, column: 28, scope: !2075)
!2078 = !DILocation(line: 145, column: 21, scope: !2075)
!2079 = !DILocation(line: 145, column: 25, scope: !2075)
!2080 = !DILocation(line: 145, column: 2, scope: !2075)
!2081 = !DILocation(line: 146, column: 26, scope: !2075)
!2082 = !DILocation(line: 146, column: 2, scope: !2075)
!2083 = !DILocation(line: 148, column: 26, scope: !2075)
!2084 = !DILocation(line: 148, column: 2, scope: !2075)
!2085 = !DILocation(line: 149, column: 19, scope: !2075)
!2086 = !DILocation(line: 149, column: 2, scope: !2075)
!2087 = !DILocation(line: 150, column: 26, scope: !2075)
!2088 = !DILocation(line: 150, column: 20, scope: !2075)
!2089 = !DILocation(line: 150, column: 2, scope: !2075)
!2090 = !DILocation(line: 152, column: 6, scope: !2091)
!2091 = distinct !DILexicalBlock(scope: !2075, file: !1, line: 152, column: 6)
!2092 = !DILocation(line: 152, column: 10, scope: !2091)
!2093 = !DILocation(line: 152, column: 6, scope: !2075)
!2094 = !DILocation(line: 153, column: 3, scope: !2091)
!2095 = !DILocation(line: 153, column: 13, scope: !2091)
!2096 = !DILocation(line: 153, column: 17, scope: !2091)
!2097 = !DILocation(line: 154, column: 6, scope: !2098)
!2098 = distinct !DILexicalBlock(scope: !2075, file: !1, line: 154, column: 6)
!2099 = !DILocation(line: 154, column: 10, scope: !2098)
!2100 = !DILocation(line: 154, column: 6, scope: !2075)
!2101 = !DILocation(line: 155, column: 3, scope: !2098)
!2102 = !DILocation(line: 155, column: 13, scope: !2098)
!2103 = !DILocation(line: 155, column: 17, scope: !2098)
!2104 = !DILocation(line: 156, column: 6, scope: !2105)
!2105 = distinct !DILexicalBlock(scope: !2075, file: !1, line: 156, column: 6)
!2106 = !DILocation(line: 156, column: 10, scope: !2105)
!2107 = !DILocation(line: 156, column: 6, scope: !2075)
!2108 = !DILocation(line: 157, column: 3, scope: !2105)
!2109 = !DILocation(line: 157, column: 13, scope: !2105)
!2110 = !DILocation(line: 157, column: 17, scope: !2105)
!2111 = !DILocation(line: 158, column: 6, scope: !2112)
!2112 = distinct !DILexicalBlock(scope: !2075, file: !1, line: 158, column: 6)
!2113 = !DILocation(line: 158, column: 10, scope: !2112)
!2114 = !DILocation(line: 158, column: 6, scope: !2075)
!2115 = !DILocation(line: 159, column: 3, scope: !2112)
!2116 = !DILocation(line: 159, column: 13, scope: !2112)
!2117 = !DILocation(line: 159, column: 17, scope: !2112)
!2118 = !DILocation(line: 160, column: 6, scope: !2119)
!2119 = distinct !DILexicalBlock(scope: !2075, file: !1, line: 160, column: 6)
!2120 = !DILocation(line: 160, column: 10, scope: !2119)
!2121 = !DILocation(line: 160, column: 6, scope: !2075)
!2122 = !DILocation(line: 161, column: 3, scope: !2119)
!2123 = !DILocation(line: 161, column: 13, scope: !2119)
!2124 = !DILocation(line: 161, column: 17, scope: !2119)
!2125 = !DILocation(line: 162, column: 1, scope: !2075)
!2126 = distinct !DISubprogram(name: "BKE_curve_add", scope: !1, file: !1, line: 164, type: !2127, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!2127 = !DISubroutineType(types: !2128)
!2128 = !{!2129, !2130, !2197, !79}
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 64)
!2131 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !2132, line: 104, baseType: !2133)
!2132 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !2132, line: 53, size: 15232, elements: !2134)
!2134 = !{!2135, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2188, !2194}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2133, file: !2132, line: 54, baseType: !2136, size: 64)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 64)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2133, file: !2132, line: 54, baseType: !2136, size: 64, offset: 64)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2133, file: !2132, line: 55, baseType: !63, size: 8192, offset: 128)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !2133, file: !2132, line: 56, baseType: !77, size: 16, offset: 8320)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !2133, file: !2132, line: 56, baseType: !77, size: 16, offset: 8336)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !2133, file: !2132, line: 57, baseType: !77, size: 16, offset: 8352)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !2133, file: !2132, line: 57, baseType: !77, size: 16, offset: 8368)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !2133, file: !2132, line: 58, baseType: !1249, size: 64, offset: 8384)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !2133, file: !2132, line: 59, baseType: !2145, size: 128, offset: 8448)
!2145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 128, elements: !2146)
!2146 = !{!2147}
!2147 = !DISubrange(count: 16)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !2133, file: !2132, line: 60, baseType: !77, size: 16, offset: 8576)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !2133, file: !2132, line: 62, baseType: !54, size: 64, offset: 8640)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2133, file: !2132, line: 63, baseType: !104, size: 128, offset: 8704)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !2133, file: !2132, line: 64, baseType: !104, size: 128, offset: 8832)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2133, file: !2132, line: 65, baseType: !104, size: 128, offset: 8960)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !2133, file: !2132, line: 66, baseType: !104, size: 128, offset: 9088)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2133, file: !2132, line: 67, baseType: !104, size: 128, offset: 9216)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !2133, file: !2132, line: 68, baseType: !104, size: 128, offset: 9344)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2133, file: !2132, line: 69, baseType: !104, size: 128, offset: 9472)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !2133, file: !2132, line: 70, baseType: !104, size: 128, offset: 9600)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2133, file: !2132, line: 71, baseType: !104, size: 128, offset: 9728)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !2133, file: !2132, line: 72, baseType: !104, size: 128, offset: 9856)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !2133, file: !2132, line: 73, baseType: !104, size: 128, offset: 9984)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2133, file: !2132, line: 74, baseType: !104, size: 128, offset: 10112)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2133, file: !2132, line: 75, baseType: !104, size: 128, offset: 10240)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2133, file: !2132, line: 76, baseType: !104, size: 128, offset: 10368)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !2133, file: !2132, line: 77, baseType: !104, size: 128, offset: 10496)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !2133, file: !2132, line: 78, baseType: !104, size: 128, offset: 10624)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !2133, file: !2132, line: 79, baseType: !104, size: 128, offset: 10752)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !2133, file: !2132, line: 80, baseType: !104, size: 128, offset: 10880)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !2133, file: !2132, line: 81, baseType: !104, size: 128, offset: 11008)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !2133, file: !2132, line: 82, baseType: !104, size: 128, offset: 11136)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !2133, file: !2132, line: 83, baseType: !104, size: 128, offset: 11264)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2133, file: !2132, line: 84, baseType: !104, size: 128, offset: 11392)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !2133, file: !2132, line: 85, baseType: !104, size: 128, offset: 11520)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2133, file: !2132, line: 86, baseType: !104, size: 128, offset: 11648)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2133, file: !2132, line: 87, baseType: !104, size: 128, offset: 11776)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2133, file: !2132, line: 88, baseType: !104, size: 128, offset: 11904)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !2133, file: !2132, line: 89, baseType: !104, size: 128, offset: 12032)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !2133, file: !2132, line: 90, baseType: !104, size: 128, offset: 12160)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !2133, file: !2132, line: 91, baseType: !104, size: 128, offset: 12288)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !2133, file: !2132, line: 92, baseType: !104, size: 128, offset: 12416)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !2133, file: !2132, line: 93, baseType: !104, size: 128, offset: 12544)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !2133, file: !2132, line: 94, baseType: !104, size: 128, offset: 12672)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2133, file: !2132, line: 95, baseType: !104, size: 128, offset: 12800)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !2133, file: !2132, line: 96, baseType: !104, size: 128, offset: 12928)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !2133, file: !2132, line: 98, baseType: !2185, size: 2048, offset: 13056)
!2185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 2048, elements: !2186)
!2186 = !{!2187}
!2187 = !DISubrange(count: 256)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !2133, file: !2132, line: 101, baseType: !2189, size: 64, offset: 15104)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 64)
!2190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !2191, line: 58, size: 32, elements: !2192)
!2191 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_depsgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2192 = !{!2193}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2190, file: !2191, line: 59, baseType: !79, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2133, file: !2132, line: 103, baseType: !2195, size: 64, offset: 15168)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !2132, line: 51, flags: DIFlagFwdDecl)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 64)
!2198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !64)
!2199 = !DILocalVariable(name: "bmain", arg: 1, scope: !2126, file: !1, line: 164, type: !2130)
!2200 = !DILocation(line: 164, column: 28, scope: !2126)
!2201 = !DILocalVariable(name: "name", arg: 2, scope: !2126, file: !1, line: 164, type: !2197)
!2202 = !DILocation(line: 164, column: 47, scope: !2126)
!2203 = !DILocalVariable(name: "type", arg: 3, scope: !2126, file: !1, line: 164, type: !79)
!2204 = !DILocation(line: 164, column: 57, scope: !2126)
!2205 = !DILocalVariable(name: "cu", scope: !2126, file: !1, line: 166, type: !114)
!2206 = !DILocation(line: 166, column: 9, scope: !2126)
!2207 = !DILocation(line: 168, column: 26, scope: !2126)
!2208 = !DILocation(line: 168, column: 40, scope: !2126)
!2209 = !DILocation(line: 168, column: 7, scope: !2126)
!2210 = !DILocation(line: 168, column: 5, scope: !2126)
!2211 = !DILocation(line: 169, column: 13, scope: !2126)
!2212 = !DILocation(line: 169, column: 17, scope: !2126)
!2213 = !DILocation(line: 169, column: 2, scope: !2126)
!2214 = !DILocation(line: 170, column: 2, scope: !2126)
!2215 = !DILocation(line: 170, column: 6, scope: !2126)
!2216 = !DILocation(line: 170, column: 11, scope: !2126)
!2217 = !DILocation(line: 171, column: 2, scope: !2126)
!2218 = !DILocation(line: 171, column: 6, scope: !2126)
!2219 = !DILocation(line: 171, column: 14, scope: !2126)
!2220 = !DILocation(line: 172, column: 29, scope: !2126)
!2221 = !DILocation(line: 172, column: 34, scope: !2126)
!2222 = !DILocation(line: 172, column: 28, scope: !2126)
!2223 = !DILocation(line: 172, column: 15, scope: !2126)
!2224 = !DILocation(line: 172, column: 19, scope: !2126)
!2225 = !DILocation(line: 172, column: 26, scope: !2126)
!2226 = !DILocation(line: 172, column: 2, scope: !2126)
!2227 = !DILocation(line: 172, column: 6, scope: !2126)
!2228 = !DILocation(line: 172, column: 13, scope: !2126)
!2229 = !DILocation(line: 173, column: 2, scope: !2126)
!2230 = !DILocation(line: 173, column: 6, scope: !2126)
!2231 = !DILocation(line: 173, column: 12, scope: !2126)
!2232 = !DILocation(line: 174, column: 2, scope: !2126)
!2233 = !DILocation(line: 174, column: 6, scope: !2126)
!2234 = !DILocation(line: 174, column: 16, scope: !2126)
!2235 = !DILocation(line: 175, column: 16, scope: !2126)
!2236 = !DILocation(line: 175, column: 20, scope: !2126)
!2237 = !DILocation(line: 175, column: 29, scope: !2126)
!2238 = !DILocation(line: 175, column: 2, scope: !2126)
!2239 = !DILocation(line: 175, column: 6, scope: !2126)
!2240 = !DILocation(line: 175, column: 14, scope: !2126)
!2241 = !DILocation(line: 176, column: 2, scope: !2126)
!2242 = !DILocation(line: 176, column: 6, scope: !2126)
!2243 = !DILocation(line: 176, column: 12, scope: !2126)
!2244 = !DILocation(line: 177, column: 2, scope: !2126)
!2245 = !DILocation(line: 177, column: 6, scope: !2126)
!2246 = !DILocation(line: 177, column: 15, scope: !2126)
!2247 = !DILocation(line: 178, column: 2, scope: !2126)
!2248 = !DILocation(line: 178, column: 6, scope: !2126)
!2249 = !DILocation(line: 178, column: 14, scope: !2126)
!2250 = !DILocation(line: 179, column: 2, scope: !2126)
!2251 = !DILocation(line: 179, column: 6, scope: !2126)
!2252 = !DILocation(line: 179, column: 22, scope: !2126)
!2253 = !DILocation(line: 181, column: 2, scope: !2126)
!2254 = !DILocation(line: 181, column: 6, scope: !2126)
!2255 = !DILocation(line: 181, column: 17, scope: !2126)
!2256 = !DILocation(line: 182, column: 13, scope: !2126)
!2257 = !DILocation(line: 182, column: 2, scope: !2126)
!2258 = !DILocation(line: 182, column: 6, scope: !2126)
!2259 = !DILocation(line: 182, column: 11, scope: !2126)
!2260 = !DILocation(line: 183, column: 2, scope: !2126)
!2261 = !DILocation(line: 183, column: 6, scope: !2126)
!2262 = !DILocation(line: 183, column: 14, scope: !2126)
!2263 = !DILocation(line: 184, column: 2, scope: !2126)
!2264 = !DILocation(line: 184, column: 6, scope: !2126)
!2265 = !DILocation(line: 184, column: 14, scope: !2126)
!2266 = !DILocation(line: 185, column: 2, scope: !2126)
!2267 = !DILocation(line: 185, column: 6, scope: !2126)
!2268 = !DILocation(line: 185, column: 22, scope: !2126)
!2269 = !DILocation(line: 186, column: 2, scope: !2126)
!2270 = !DILocation(line: 186, column: 6, scope: !2126)
!2271 = !DILocation(line: 186, column: 22, scope: !2126)
!2272 = !DILocation(line: 188, column: 11, scope: !2126)
!2273 = !DILocation(line: 188, column: 2, scope: !2126)
!2274 = !DILocation(line: 188, column: 6, scope: !2126)
!2275 = !DILocation(line: 188, column: 9, scope: !2126)
!2276 = !DILocation(line: 190, column: 6, scope: !2277)
!2277 = distinct !DILexicalBlock(scope: !2126, file: !1, line: 190, column: 6)
!2278 = !DILocation(line: 190, column: 11, scope: !2277)
!2279 = !DILocation(line: 190, column: 6, scope: !2126)
!2280 = !DILocation(line: 191, column: 55, scope: !2281)
!2281 = distinct !DILexicalBlock(scope: !2277, file: !1, line: 190, column: 23)
!2282 = !DILocation(line: 191, column: 41, scope: !2281)
!2283 = !DILocation(line: 191, column: 45, scope: !2281)
!2284 = !DILocation(line: 191, column: 53, scope: !2281)
!2285 = !DILocation(line: 191, column: 28, scope: !2281)
!2286 = !DILocation(line: 191, column: 32, scope: !2281)
!2287 = !DILocation(line: 191, column: 39, scope: !2281)
!2288 = !DILocation(line: 191, column: 15, scope: !2281)
!2289 = !DILocation(line: 191, column: 19, scope: !2281)
!2290 = !DILocation(line: 191, column: 26, scope: !2281)
!2291 = !DILocation(line: 191, column: 3, scope: !2281)
!2292 = !DILocation(line: 191, column: 7, scope: !2281)
!2293 = !DILocation(line: 191, column: 13, scope: !2281)
!2294 = !DILocation(line: 192, column: 3, scope: !2281)
!2295 = !DILocation(line: 192, column: 7, scope: !2281)
!2296 = !DILocation(line: 192, column: 14, scope: !2281)
!2297 = !DILocation(line: 192, column: 17, scope: !2281)
!2298 = !DILocation(line: 192, column: 20, scope: !2281)
!2299 = !DILocation(line: 193, column: 13, scope: !2281)
!2300 = !DILocation(line: 193, column: 3, scope: !2281)
!2301 = !DILocation(line: 193, column: 7, scope: !2281)
!2302 = !DILocation(line: 193, column: 11, scope: !2281)
!2303 = !DILocation(line: 194, column: 15, scope: !2281)
!2304 = !DILocation(line: 194, column: 19, scope: !2281)
!2305 = !DILocation(line: 194, column: 3, scope: !2281)
!2306 = !DILocation(line: 195, column: 29, scope: !2281)
!2307 = !DILocation(line: 195, column: 33, scope: !2281)
!2308 = !DILocation(line: 195, column: 37, scope: !2281)
!2309 = !DILocation(line: 195, column: 13, scope: !2281)
!2310 = !DILocation(line: 195, column: 17, scope: !2281)
!2311 = !DILocation(line: 195, column: 27, scope: !2281)
!2312 = !DILocation(line: 195, column: 3, scope: !2281)
!2313 = !DILocation(line: 195, column: 7, scope: !2281)
!2314 = !DILocation(line: 195, column: 11, scope: !2281)
!2315 = !DILocation(line: 196, column: 17, scope: !2281)
!2316 = !DILocation(line: 196, column: 3, scope: !2281)
!2317 = !DILocation(line: 196, column: 7, scope: !2281)
!2318 = !DILocation(line: 196, column: 15, scope: !2281)
!2319 = !DILocation(line: 197, column: 16, scope: !2281)
!2320 = !DILocation(line: 197, column: 20, scope: !2281)
!2321 = !DILocation(line: 197, column: 27, scope: !2281)
!2322 = !DILocation(line: 197, column: 3, scope: !2281)
!2323 = !DILocation(line: 197, column: 7, scope: !2281)
!2324 = !DILocation(line: 197, column: 14, scope: !2281)
!2325 = !DILocation(line: 198, column: 12, scope: !2281)
!2326 = !DILocation(line: 198, column: 3, scope: !2281)
!2327 = !DILocation(line: 198, column: 7, scope: !2281)
!2328 = !DILocation(line: 198, column: 10, scope: !2281)
!2329 = !DILocation(line: 199, column: 17, scope: !2281)
!2330 = !DILocation(line: 199, column: 21, scope: !2281)
!2331 = !DILocation(line: 199, column: 27, scope: !2281)
!2332 = !DILocation(line: 199, column: 29, scope: !2281)
!2333 = !DILocation(line: 199, column: 3, scope: !2281)
!2334 = !DILocation(line: 199, column: 7, scope: !2281)
!2335 = !DILocation(line: 199, column: 13, scope: !2281)
!2336 = !DILocation(line: 199, column: 15, scope: !2281)
!2337 = !DILocation(line: 200, column: 2, scope: !2281)
!2338 = !DILocation(line: 202, column: 9, scope: !2126)
!2339 = !DILocation(line: 202, column: 2, scope: !2126)
!2340 = distinct !DISubprogram(name: "copy_v3_fl", scope: !2341, file: !2341, line: 85, type: !2342, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!2341 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2342 = !DISubroutineType(types: !2343)
!2343 = !{null, !1325, !128}
!2344 = !DILocalVariable(name: "r", arg: 1, scope: !2340, file: !2341, line: 85, type: !1325)
!2345 = !DILocation(line: 85, column: 31, scope: !2340)
!2346 = !DILocalVariable(name: "f", arg: 2, scope: !2340, file: !2341, line: 85, type: !128)
!2347 = !DILocation(line: 85, column: 43, scope: !2340)
!2348 = !DILocation(line: 87, column: 9, scope: !2340)
!2349 = !DILocation(line: 87, column: 2, scope: !2340)
!2350 = !DILocation(line: 87, column: 7, scope: !2340)
!2351 = !DILocation(line: 88, column: 9, scope: !2340)
!2352 = !DILocation(line: 88, column: 2, scope: !2340)
!2353 = !DILocation(line: 88, column: 7, scope: !2340)
!2354 = !DILocation(line: 89, column: 9, scope: !2340)
!2355 = !DILocation(line: 89, column: 2, scope: !2340)
!2356 = !DILocation(line: 89, column: 7, scope: !2340)
!2357 = !DILocation(line: 90, column: 1, scope: !2340)
!2358 = distinct !DISubprogram(name: "BKE_curve_copy", scope: !1, file: !1, line: 205, type: !2359, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!2359 = !DISubroutineType(types: !2360)
!2360 = !{!2129, !114}
!2361 = !DILocalVariable(name: "cu", arg: 1, scope: !2358, file: !1, line: 205, type: !114)
!2362 = !DILocation(line: 205, column: 30, scope: !2358)
!2363 = !DILocalVariable(name: "cun", scope: !2358, file: !1, line: 207, type: !114)
!2364 = !DILocation(line: 207, column: 9, scope: !2358)
!2365 = !DILocalVariable(name: "a", scope: !2358, file: !1, line: 208, type: !79)
!2366 = !DILocation(line: 208, column: 6, scope: !2358)
!2367 = !DILocation(line: 210, column: 27, scope: !2358)
!2368 = !DILocation(line: 210, column: 31, scope: !2358)
!2369 = !DILocation(line: 210, column: 8, scope: !2358)
!2370 = !DILocation(line: 210, column: 6, scope: !2358)
!2371 = !DILocation(line: 211, column: 22, scope: !2358)
!2372 = !DILocation(line: 211, column: 27, scope: !2358)
!2373 = !DILocation(line: 211, column: 2, scope: !2358)
!2374 = !DILocation(line: 212, column: 27, scope: !2358)
!2375 = !DILocation(line: 212, column: 32, scope: !2358)
!2376 = !DILocation(line: 212, column: 41, scope: !2358)
!2377 = !DILocation(line: 212, column: 45, scope: !2358)
!2378 = !DILocation(line: 212, column: 2, scope: !2358)
!2379 = !DILocation(line: 214, column: 13, scope: !2358)
!2380 = !DILocation(line: 214, column: 27, scope: !2358)
!2381 = !DILocation(line: 214, column: 31, scope: !2358)
!2382 = !DILocation(line: 214, column: 2, scope: !2358)
!2383 = !DILocation(line: 214, column: 7, scope: !2358)
!2384 = !DILocation(line: 214, column: 11, scope: !2358)
!2385 = !DILocation(line: 215, column: 9, scope: !2386)
!2386 = distinct !DILexicalBlock(scope: !2358, file: !1, line: 215, column: 2)
!2387 = !DILocation(line: 215, column: 7, scope: !2386)
!2388 = !DILocation(line: 215, column: 14, scope: !2389)
!2389 = distinct !DILexicalBlock(scope: !2386, file: !1, line: 215, column: 2)
!2390 = !DILocation(line: 215, column: 18, scope: !2389)
!2391 = !DILocation(line: 215, column: 23, scope: !2389)
!2392 = !DILocation(line: 215, column: 16, scope: !2389)
!2393 = !DILocation(line: 215, column: 2, scope: !2386)
!2394 = !DILocation(line: 216, column: 20, scope: !2395)
!2395 = distinct !DILexicalBlock(scope: !2389, file: !1, line: 215, column: 36)
!2396 = !DILocation(line: 216, column: 25, scope: !2395)
!2397 = !DILocation(line: 216, column: 29, scope: !2395)
!2398 = !DILocation(line: 216, column: 14, scope: !2395)
!2399 = !DILocation(line: 216, column: 3, scope: !2395)
!2400 = !DILocation(line: 217, column: 2, scope: !2395)
!2401 = !DILocation(line: 215, column: 32, scope: !2389)
!2402 = !DILocation(line: 215, column: 2, scope: !2389)
!2403 = distinct !{!2403, !2393, !2404}
!2404 = !DILocation(line: 217, column: 2, scope: !2386)
!2405 = !DILocation(line: 219, column: 13, scope: !2358)
!2406 = !DILocation(line: 219, column: 27, scope: !2358)
!2407 = !DILocation(line: 219, column: 31, scope: !2358)
!2408 = !DILocation(line: 219, column: 2, scope: !2358)
!2409 = !DILocation(line: 219, column: 7, scope: !2358)
!2410 = !DILocation(line: 219, column: 11, scope: !2358)
!2411 = !DILocation(line: 220, column: 17, scope: !2358)
!2412 = !DILocation(line: 220, column: 31, scope: !2358)
!2413 = !DILocation(line: 220, column: 35, scope: !2358)
!2414 = !DILocation(line: 220, column: 2, scope: !2358)
!2415 = !DILocation(line: 220, column: 7, scope: !2358)
!2416 = !DILocation(line: 220, column: 15, scope: !2358)
!2417 = !DILocation(line: 221, column: 12, scope: !2358)
!2418 = !DILocation(line: 221, column: 26, scope: !2358)
!2419 = !DILocation(line: 221, column: 30, scope: !2358)
!2420 = !DILocation(line: 221, column: 2, scope: !2358)
!2421 = !DILocation(line: 221, column: 7, scope: !2358)
!2422 = !DILocation(line: 221, column: 10, scope: !2358)
!2423 = !DILocation(line: 222, column: 12, scope: !2358)
!2424 = !DILocation(line: 222, column: 26, scope: !2358)
!2425 = !DILocation(line: 222, column: 30, scope: !2358)
!2426 = !DILocation(line: 222, column: 2, scope: !2358)
!2427 = !DILocation(line: 222, column: 7, scope: !2358)
!2428 = !DILocation(line: 222, column: 10, scope: !2358)
!2429 = !DILocation(line: 224, column: 26, scope: !2358)
!2430 = !DILocation(line: 224, column: 30, scope: !2358)
!2431 = !DILocation(line: 224, column: 13, scope: !2358)
!2432 = !DILocation(line: 224, column: 2, scope: !2358)
!2433 = !DILocation(line: 224, column: 7, scope: !2358)
!2434 = !DILocation(line: 224, column: 11, scope: !2358)
!2435 = !DILocation(line: 225, column: 6, scope: !2436)
!2436 = distinct !DILexicalBlock(scope: !2358, file: !1, line: 225, column: 6)
!2437 = !DILocation(line: 225, column: 11, scope: !2436)
!2438 = !DILocation(line: 225, column: 6, scope: !2358)
!2439 = !DILocation(line: 225, column: 39, scope: !2436)
!2440 = !DILocation(line: 225, column: 33, scope: !2436)
!2441 = !DILocation(line: 225, column: 16, scope: !2436)
!2442 = !DILocation(line: 225, column: 21, scope: !2436)
!2443 = !DILocation(line: 225, column: 26, scope: !2436)
!2444 = !DILocation(line: 225, column: 31, scope: !2436)
!2445 = !DILocation(line: 227, column: 2, scope: !2358)
!2446 = !DILocation(line: 227, column: 7, scope: !2358)
!2447 = !DILocation(line: 227, column: 16, scope: !2358)
!2448 = !DILocation(line: 228, column: 2, scope: !2358)
!2449 = !DILocation(line: 228, column: 7, scope: !2358)
!2450 = !DILocation(line: 228, column: 16, scope: !2358)
!2451 = !DILocation(line: 235, column: 19, scope: !2358)
!2452 = !DILocation(line: 235, column: 24, scope: !2358)
!2453 = !DILocation(line: 235, column: 13, scope: !2358)
!2454 = !DILocation(line: 235, column: 2, scope: !2358)
!2455 = !DILocation(line: 236, column: 19, scope: !2358)
!2456 = !DILocation(line: 236, column: 24, scope: !2358)
!2457 = !DILocation(line: 236, column: 13, scope: !2358)
!2458 = !DILocation(line: 236, column: 2, scope: !2358)
!2459 = !DILocation(line: 237, column: 19, scope: !2358)
!2460 = !DILocation(line: 237, column: 24, scope: !2358)
!2461 = !DILocation(line: 237, column: 13, scope: !2358)
!2462 = !DILocation(line: 237, column: 2, scope: !2358)
!2463 = !DILocation(line: 238, column: 19, scope: !2358)
!2464 = !DILocation(line: 238, column: 24, scope: !2358)
!2465 = !DILocation(line: 238, column: 13, scope: !2358)
!2466 = !DILocation(line: 238, column: 2, scope: !2358)
!2467 = !DILocation(line: 240, column: 9, scope: !2358)
!2468 = !DILocation(line: 240, column: 2, scope: !2358)
!2469 = distinct !DISubprogram(name: "BLI_listbase_clear", scope: !2470, file: !2470, line: 89, type: !2471, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!2470 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2471 = !DISubroutineType(types: !2472)
!2472 = !{null, !2473}
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 64)
!2474 = !DILocalVariable(name: "lb", arg: 1, scope: !2469, file: !2470, line: 89, type: !2473)
!2475 = !DILocation(line: 89, column: 53, scope: !2469)
!2476 = !DILocation(line: 89, column: 71, scope: !2469)
!2477 = !DILocation(line: 89, column: 75, scope: !2469)
!2478 = !DILocation(line: 89, column: 80, scope: !2469)
!2479 = !DILocation(line: 89, column: 59, scope: !2469)
!2480 = !DILocation(line: 89, column: 63, scope: !2469)
!2481 = !DILocation(line: 89, column: 69, scope: !2469)
!2482 = !DILocation(line: 89, column: 93, scope: !2469)
!2483 = distinct !DISubprogram(name: "BKE_nurbList_duplicate", scope: !1, file: !1, line: 602, type: !2484, scopeLine: 603, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!2484 = !DISubroutineType(types: !2485)
!2485 = !{null, !1602, !1602}
!2486 = !DILocalVariable(name: "lb1", arg: 1, scope: !2483, file: !1, line: 602, type: !1602)
!2487 = !DILocation(line: 602, column: 39, scope: !2483)
!2488 = !DILocalVariable(name: "lb2", arg: 2, scope: !2483, file: !1, line: 602, type: !1602)
!2489 = !DILocation(line: 602, column: 54, scope: !2483)
!2490 = !DILocalVariable(name: "nu", scope: !2483, file: !1, line: 604, type: !1782)
!2491 = !DILocation(line: 604, column: 8, scope: !2483)
!2492 = !DILocalVariable(name: "nun", scope: !2483, file: !1, line: 604, type: !1782)
!2493 = !DILocation(line: 604, column: 13, scope: !2483)
!2494 = !DILocation(line: 606, column: 20, scope: !2483)
!2495 = !DILocation(line: 606, column: 2, scope: !2483)
!2496 = !DILocation(line: 608, column: 7, scope: !2483)
!2497 = !DILocation(line: 608, column: 12, scope: !2483)
!2498 = !DILocation(line: 608, column: 5, scope: !2483)
!2499 = !DILocation(line: 609, column: 2, scope: !2483)
!2500 = !DILocation(line: 609, column: 9, scope: !2483)
!2501 = !DILocation(line: 610, column: 28, scope: !2502)
!2502 = distinct !DILexicalBlock(scope: !2483, file: !1, line: 609, column: 13)
!2503 = !DILocation(line: 610, column: 9, scope: !2502)
!2504 = !DILocation(line: 610, column: 7, scope: !2502)
!2505 = !DILocation(line: 611, column: 15, scope: !2502)
!2506 = !DILocation(line: 611, column: 20, scope: !2502)
!2507 = !DILocation(line: 611, column: 3, scope: !2502)
!2508 = !DILocation(line: 613, column: 8, scope: !2502)
!2509 = !DILocation(line: 613, column: 12, scope: !2502)
!2510 = !DILocation(line: 613, column: 6, scope: !2502)
!2511 = distinct !{!2511, !2499, !2512}
!2512 = !DILocation(line: 614, column: 2, scope: !2483)
!2513 = !DILocation(line: 615, column: 1, scope: !2483)
!2514 = distinct !DISubprogram(name: "BKE_curve_make_local", scope: !1, file: !1, line: 255, type: !1847, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!2515 = !DILocalVariable(name: "cu", arg: 1, scope: !2514, file: !1, line: 255, type: !114)
!2516 = !DILocation(line: 255, column: 34, scope: !2514)
!2517 = !DILocalVariable(name: "bmain", scope: !2514, file: !1, line: 257, type: !2130)
!2518 = !DILocation(line: 257, column: 8, scope: !2514)
!2519 = !DILocation(line: 257, column: 18, scope: !2514)
!2520 = !DILocalVariable(name: "ob", scope: !2514, file: !1, line: 258, type: !2521)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 64)
!2522 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !4, line: 295, baseType: !152)
!2523 = !DILocation(line: 258, column: 10, scope: !2514)
!2524 = !DILocalVariable(name: "is_local", scope: !2514, file: !1, line: 259, type: !551)
!2525 = !DILocation(line: 259, column: 7, scope: !2514)
!2526 = !DILocalVariable(name: "is_lib", scope: !2514, file: !1, line: 259, type: !551)
!2527 = !DILocation(line: 259, column: 25, scope: !2514)
!2528 = !DILocation(line: 266, column: 6, scope: !2529)
!2529 = distinct !DILexicalBlock(scope: !2514, file: !1, line: 266, column: 6)
!2530 = !DILocation(line: 266, column: 10, scope: !2529)
!2531 = !DILocation(line: 266, column: 13, scope: !2529)
!2532 = !DILocation(line: 266, column: 17, scope: !2529)
!2533 = !DILocation(line: 266, column: 6, scope: !2514)
!2534 = !DILocation(line: 267, column: 3, scope: !2529)
!2535 = !DILocation(line: 269, column: 6, scope: !2536)
!2536 = distinct !DILexicalBlock(scope: !2514, file: !1, line: 269, column: 6)
!2537 = !DILocation(line: 269, column: 10, scope: !2536)
!2538 = !DILocation(line: 269, column: 13, scope: !2536)
!2539 = !DILocation(line: 269, column: 16, scope: !2536)
!2540 = !DILocation(line: 269, column: 6, scope: !2514)
!2541 = !DILocation(line: 270, column: 21, scope: !2542)
!2542 = distinct !DILexicalBlock(scope: !2536, file: !1, line: 269, column: 22)
!2543 = !DILocation(line: 270, column: 29, scope: !2542)
!2544 = !DILocation(line: 270, column: 33, scope: !2542)
!2545 = !DILocation(line: 270, column: 3, scope: !2542)
!2546 = !DILocation(line: 271, column: 22, scope: !2542)
!2547 = !DILocation(line: 271, column: 3, scope: !2542)
!2548 = !DILocation(line: 272, column: 3, scope: !2542)
!2549 = !DILocation(line: 275, column: 12, scope: !2550)
!2550 = distinct !DILexicalBlock(scope: !2514, file: !1, line: 275, column: 2)
!2551 = !DILocation(line: 275, column: 19, scope: !2550)
!2552 = !DILocation(line: 275, column: 26, scope: !2550)
!2553 = !DILocation(line: 275, column: 10, scope: !2550)
!2554 = !DILocation(line: 275, column: 7, scope: !2550)
!2555 = !DILocation(line: 275, column: 33, scope: !2556)
!2556 = distinct !DILexicalBlock(scope: !2550, file: !1, line: 275, column: 2)
!2557 = !DILocation(line: 275, column: 36, scope: !2556)
!2558 = !DILocation(line: 275, column: 39, scope: !2556)
!2559 = !DILocation(line: 0, scope: !2556)
!2560 = !DILocation(line: 275, column: 2, scope: !2550)
!2561 = !DILocation(line: 276, column: 7, scope: !2562)
!2562 = distinct !DILexicalBlock(scope: !2563, file: !1, line: 276, column: 7)
!2563 = distinct !DILexicalBlock(scope: !2556, file: !1, line: 275, column: 84)
!2564 = !DILocation(line: 276, column: 11, scope: !2562)
!2565 = !DILocation(line: 276, column: 19, scope: !2562)
!2566 = !DILocation(line: 276, column: 16, scope: !2562)
!2567 = !DILocation(line: 276, column: 7, scope: !2563)
!2568 = !DILocation(line: 277, column: 8, scope: !2569)
!2569 = distinct !DILexicalBlock(scope: !2570, file: !1, line: 277, column: 8)
!2570 = distinct !DILexicalBlock(scope: !2562, file: !1, line: 276, column: 23)
!2571 = !DILocation(line: 277, column: 12, scope: !2569)
!2572 = !DILocation(line: 277, column: 15, scope: !2569)
!2573 = !DILocation(line: 277, column: 8, scope: !2570)
!2574 = !DILocation(line: 277, column: 27, scope: !2569)
!2575 = !DILocation(line: 277, column: 20, scope: !2569)
!2576 = !DILocation(line: 278, column: 18, scope: !2569)
!2577 = !DILocation(line: 279, column: 3, scope: !2570)
!2578 = !DILocation(line: 280, column: 2, scope: !2563)
!2579 = !DILocation(line: 275, column: 71, scope: !2556)
!2580 = !DILocation(line: 275, column: 75, scope: !2556)
!2581 = !DILocation(line: 275, column: 78, scope: !2556)
!2582 = !DILocation(line: 275, column: 69, scope: !2556)
!2583 = !DILocation(line: 275, column: 2, scope: !2556)
!2584 = distinct !{!2584, !2560, !2585}
!2585 = !DILocation(line: 280, column: 2, scope: !2550)
!2586 = !DILocation(line: 282, column: 6, scope: !2587)
!2587 = distinct !DILexicalBlock(scope: !2514, file: !1, line: 282, column: 6)
!2588 = !DILocation(line: 282, column: 15, scope: !2587)
!2589 = !DILocation(line: 282, column: 18, scope: !2587)
!2590 = !DILocation(line: 282, column: 25, scope: !2587)
!2591 = !DILocation(line: 282, column: 6, scope: !2514)
!2592 = !DILocation(line: 283, column: 21, scope: !2593)
!2593 = distinct !DILexicalBlock(scope: !2587, file: !1, line: 282, column: 35)
!2594 = !DILocation(line: 283, column: 29, scope: !2593)
!2595 = !DILocation(line: 283, column: 33, scope: !2593)
!2596 = !DILocation(line: 283, column: 3, scope: !2593)
!2597 = !DILocation(line: 284, column: 22, scope: !2593)
!2598 = !DILocation(line: 284, column: 3, scope: !2593)
!2599 = !DILocation(line: 285, column: 2, scope: !2593)
!2600 = !DILocation(line: 286, column: 11, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2587, file: !1, line: 286, column: 11)
!2602 = !DILocation(line: 286, column: 20, scope: !2601)
!2603 = !DILocation(line: 286, column: 23, scope: !2601)
!2604 = !DILocation(line: 286, column: 11, scope: !2587)
!2605 = !DILocalVariable(name: "cu_new", scope: !2606, file: !1, line: 287, type: !114)
!2606 = distinct !DILexicalBlock(scope: !2601, file: !1, line: 286, column: 31)
!2607 = !DILocation(line: 287, column: 10, scope: !2606)
!2608 = !DILocation(line: 287, column: 34, scope: !2606)
!2609 = !DILocation(line: 287, column: 19, scope: !2606)
!2610 = !DILocation(line: 288, column: 3, scope: !2606)
!2611 = !DILocation(line: 288, column: 11, scope: !2606)
!2612 = !DILocation(line: 288, column: 14, scope: !2606)
!2613 = !DILocation(line: 288, column: 17, scope: !2606)
!2614 = !DILocation(line: 290, column: 26, scope: !2606)
!2615 = !DILocation(line: 290, column: 33, scope: !2606)
!2616 = !DILocation(line: 290, column: 37, scope: !2606)
!2617 = !DILocation(line: 290, column: 40, scope: !2606)
!2618 = !DILocation(line: 290, column: 46, scope: !2606)
!2619 = !DILocation(line: 290, column: 54, scope: !2606)
!2620 = !DILocation(line: 290, column: 3, scope: !2606)
!2621 = !DILocation(line: 292, column: 13, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2606, file: !1, line: 292, column: 3)
!2623 = !DILocation(line: 292, column: 20, scope: !2622)
!2624 = !DILocation(line: 292, column: 27, scope: !2622)
!2625 = !DILocation(line: 292, column: 11, scope: !2622)
!2626 = !DILocation(line: 292, column: 8, scope: !2622)
!2627 = !DILocation(line: 292, column: 34, scope: !2628)
!2628 = distinct !DILexicalBlock(scope: !2622, file: !1, line: 292, column: 3)
!2629 = !DILocation(line: 292, column: 3, scope: !2622)
!2630 = !DILocation(line: 293, column: 8, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2632, file: !1, line: 293, column: 8)
!2632 = distinct !DILexicalBlock(scope: !2628, file: !1, line: 292, column: 56)
!2633 = !DILocation(line: 293, column: 12, scope: !2631)
!2634 = !DILocation(line: 293, column: 20, scope: !2631)
!2635 = !DILocation(line: 293, column: 17, scope: !2631)
!2636 = !DILocation(line: 293, column: 8, scope: !2632)
!2637 = !DILocation(line: 294, column: 9, scope: !2638)
!2638 = distinct !DILexicalBlock(scope: !2639, file: !1, line: 294, column: 9)
!2639 = distinct !DILexicalBlock(scope: !2631, file: !1, line: 293, column: 24)
!2640 = !DILocation(line: 294, column: 13, scope: !2638)
!2641 = !DILocation(line: 294, column: 16, scope: !2638)
!2642 = !DILocation(line: 294, column: 20, scope: !2638)
!2643 = !DILocation(line: 294, column: 9, scope: !2639)
!2644 = !DILocation(line: 295, column: 17, scope: !2645)
!2645 = distinct !DILexicalBlock(scope: !2638, file: !1, line: 294, column: 29)
!2646 = !DILocation(line: 295, column: 6, scope: !2645)
!2647 = !DILocation(line: 295, column: 10, scope: !2645)
!2648 = !DILocation(line: 295, column: 15, scope: !2645)
!2649 = !DILocation(line: 296, column: 6, scope: !2645)
!2650 = !DILocation(line: 296, column: 14, scope: !2645)
!2651 = !DILocation(line: 296, column: 17, scope: !2645)
!2652 = !DILocation(line: 296, column: 19, scope: !2645)
!2653 = !DILocation(line: 297, column: 6, scope: !2645)
!2654 = !DILocation(line: 297, column: 10, scope: !2645)
!2655 = !DILocation(line: 297, column: 13, scope: !2645)
!2656 = !DILocation(line: 297, column: 15, scope: !2645)
!2657 = !DILocation(line: 298, column: 5, scope: !2645)
!2658 = !DILocation(line: 299, column: 4, scope: !2639)
!2659 = !DILocation(line: 300, column: 3, scope: !2632)
!2660 = !DILocation(line: 292, column: 43, scope: !2628)
!2661 = !DILocation(line: 292, column: 47, scope: !2628)
!2662 = !DILocation(line: 292, column: 50, scope: !2628)
!2663 = !DILocation(line: 292, column: 41, scope: !2628)
!2664 = !DILocation(line: 292, column: 3, scope: !2628)
!2665 = distinct !{!2665, !2629, !2666}
!2666 = !DILocation(line: 300, column: 3, scope: !2622)
!2667 = !DILocation(line: 301, column: 2, scope: !2606)
!2668 = !DILocation(line: 302, column: 1, scope: !2514)
!2669 = distinct !DISubprogram(name: "extern_local_curve", scope: !1, file: !1, line: 243, type: !1847, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!2670 = !DILocalVariable(name: "cu", arg: 1, scope: !2669, file: !1, line: 243, type: !114)
!2671 = !DILocation(line: 243, column: 39, scope: !2669)
!2672 = !DILocation(line: 245, column: 22, scope: !2669)
!2673 = !DILocation(line: 245, column: 26, scope: !2669)
!2674 = !DILocation(line: 245, column: 16, scope: !2669)
!2675 = !DILocation(line: 245, column: 2, scope: !2669)
!2676 = !DILocation(line: 246, column: 22, scope: !2669)
!2677 = !DILocation(line: 246, column: 26, scope: !2669)
!2678 = !DILocation(line: 246, column: 16, scope: !2669)
!2679 = !DILocation(line: 246, column: 2, scope: !2669)
!2680 = !DILocation(line: 247, column: 22, scope: !2669)
!2681 = !DILocation(line: 247, column: 26, scope: !2669)
!2682 = !DILocation(line: 247, column: 16, scope: !2669)
!2683 = !DILocation(line: 247, column: 2, scope: !2669)
!2684 = !DILocation(line: 248, column: 22, scope: !2669)
!2685 = !DILocation(line: 248, column: 26, scope: !2669)
!2686 = !DILocation(line: 248, column: 16, scope: !2669)
!2687 = !DILocation(line: 248, column: 2, scope: !2669)
!2688 = !DILocation(line: 250, column: 6, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2669, file: !1, line: 250, column: 6)
!2690 = !DILocation(line: 250, column: 10, scope: !2689)
!2691 = !DILocation(line: 250, column: 6, scope: !2669)
!2692 = !DILocation(line: 251, column: 24, scope: !2693)
!2693 = distinct !DILexicalBlock(scope: !2689, file: !1, line: 250, column: 15)
!2694 = !DILocation(line: 251, column: 28, scope: !2693)
!2695 = !DILocation(line: 251, column: 33, scope: !2693)
!2696 = !DILocation(line: 251, column: 37, scope: !2693)
!2697 = !DILocation(line: 251, column: 3, scope: !2693)
!2698 = !DILocation(line: 252, column: 2, scope: !2693)
!2699 = !DILocation(line: 253, column: 1, scope: !2669)
!2700 = distinct !DISubprogram(name: "BKE_curve_editNurbs_get", scope: !1, file: !1, line: 305, type: !2701, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!2701 = !DISubroutineType(types: !2702)
!2702 = !{!2473, !114}
!2703 = !DILocalVariable(name: "cu", arg: 1, scope: !2700, file: !1, line: 305, type: !114)
!2704 = !DILocation(line: 305, column: 42, scope: !2700)
!2705 = !DILocation(line: 307, column: 6, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2700, file: !1, line: 307, column: 6)
!2707 = !DILocation(line: 307, column: 10, scope: !2706)
!2708 = !DILocation(line: 307, column: 6, scope: !2700)
!2709 = !DILocation(line: 308, column: 11, scope: !2710)
!2710 = distinct !DILexicalBlock(scope: !2706, file: !1, line: 307, column: 20)
!2711 = !DILocation(line: 308, column: 15, scope: !2710)
!2712 = !DILocation(line: 308, column: 25, scope: !2710)
!2713 = !DILocation(line: 308, column: 3, scope: !2710)
!2714 = !DILocation(line: 311, column: 2, scope: !2700)
!2715 = !DILocation(line: 312, column: 1, scope: !2700)
!2716 = distinct !DISubprogram(name: "BKE_curve_type_get", scope: !1, file: !1, line: 314, type: !2717, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!2717 = !DISubroutineType(types: !2718)
!2718 = !{!77, !114}
!2719 = !DILocalVariable(name: "cu", arg: 1, scope: !2716, file: !1, line: 314, type: !114)
!2720 = !DILocation(line: 314, column: 33, scope: !2716)
!2721 = !DILocalVariable(name: "nu", scope: !2716, file: !1, line: 316, type: !1782)
!2722 = !DILocation(line: 316, column: 8, scope: !2716)
!2723 = !DILocalVariable(name: "type", scope: !2716, file: !1, line: 317, type: !79)
!2724 = !DILocation(line: 317, column: 6, scope: !2716)
!2725 = !DILocation(line: 317, column: 13, scope: !2716)
!2726 = !DILocation(line: 317, column: 17, scope: !2716)
!2727 = !DILocation(line: 319, column: 6, scope: !2728)
!2728 = distinct !DILexicalBlock(scope: !2716, file: !1, line: 319, column: 6)
!2729 = !DILocation(line: 319, column: 10, scope: !2728)
!2730 = !DILocation(line: 319, column: 6, scope: !2716)
!2731 = !DILocation(line: 320, column: 3, scope: !2732)
!2732 = distinct !DILexicalBlock(scope: !2728, file: !1, line: 319, column: 17)
!2733 = !DILocation(line: 323, column: 7, scope: !2734)
!2734 = distinct !DILexicalBlock(scope: !2716, file: !1, line: 323, column: 6)
!2735 = !DILocation(line: 323, column: 11, scope: !2734)
!2736 = !DILocation(line: 323, column: 6, scope: !2716)
!2737 = !DILocation(line: 324, column: 8, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !2734, file: !1, line: 323, column: 17)
!2739 = !DILocation(line: 326, column: 13, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2738, file: !1, line: 326, column: 3)
!2741 = !DILocation(line: 326, column: 17, scope: !2740)
!2742 = !DILocation(line: 326, column: 22, scope: !2740)
!2743 = !DILocation(line: 326, column: 11, scope: !2740)
!2744 = !DILocation(line: 326, column: 8, scope: !2740)
!2745 = !DILocation(line: 326, column: 29, scope: !2746)
!2746 = distinct !DILexicalBlock(scope: !2740, file: !1, line: 326, column: 3)
!2747 = !DILocation(line: 326, column: 3, scope: !2740)
!2748 = !DILocation(line: 327, column: 8, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2750, file: !1, line: 327, column: 8)
!2750 = distinct !DILexicalBlock(scope: !2746, file: !1, line: 326, column: 48)
!2751 = !DILocation(line: 327, column: 12, scope: !2749)
!2752 = !DILocation(line: 327, column: 18, scope: !2749)
!2753 = !DILocation(line: 327, column: 8, scope: !2750)
!2754 = !DILocation(line: 328, column: 10, scope: !2755)
!2755 = distinct !DILexicalBlock(scope: !2749, file: !1, line: 327, column: 23)
!2756 = !DILocation(line: 329, column: 4, scope: !2755)
!2757 = !DILocation(line: 330, column: 3, scope: !2750)
!2758 = !DILocation(line: 326, column: 38, scope: !2746)
!2759 = !DILocation(line: 326, column: 42, scope: !2746)
!2760 = !DILocation(line: 326, column: 36, scope: !2746)
!2761 = !DILocation(line: 326, column: 3, scope: !2746)
!2762 = distinct !{!2762, !2747, !2763}
!2763 = !DILocation(line: 330, column: 3, scope: !2740)
!2764 = !DILocation(line: 331, column: 2, scope: !2738)
!2765 = !DILocation(line: 333, column: 9, scope: !2716)
!2766 = !DILocation(line: 333, column: 2, scope: !2716)
!2767 = !DILocation(line: 334, column: 1, scope: !2716)
!2768 = distinct !DISubprogram(name: "BKE_curve_curve_dimension_update", scope: !1, file: !1, line: 336, type: !1847, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!2769 = !DILocalVariable(name: "cu", arg: 1, scope: !2768, file: !1, line: 336, type: !114)
!2770 = !DILocation(line: 336, column: 46, scope: !2768)
!2771 = !DILocalVariable(name: "nurbs", scope: !2768, file: !1, line: 338, type: !1602)
!2772 = !DILocation(line: 338, column: 12, scope: !2768)
!2773 = !DILocation(line: 338, column: 40, scope: !2768)
!2774 = !DILocation(line: 338, column: 20, scope: !2768)
!2775 = !DILocalVariable(name: "nu", scope: !2768, file: !1, line: 339, type: !1782)
!2776 = !DILocation(line: 339, column: 8, scope: !2768)
!2777 = !DILocation(line: 339, column: 13, scope: !2768)
!2778 = !DILocation(line: 339, column: 20, scope: !2768)
!2779 = !DILocation(line: 341, column: 6, scope: !2780)
!2780 = distinct !DILexicalBlock(scope: !2768, file: !1, line: 341, column: 6)
!2781 = !DILocation(line: 341, column: 10, scope: !2780)
!2782 = !DILocation(line: 341, column: 15, scope: !2780)
!2783 = !DILocation(line: 341, column: 6, scope: !2768)
!2784 = !DILocation(line: 342, column: 3, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2780, file: !1, line: 341, column: 24)
!2786 = !DILocation(line: 342, column: 10, scope: !2787)
!2787 = distinct !DILexicalBlock(scope: !2788, file: !1, line: 342, column: 3)
!2788 = distinct !DILexicalBlock(scope: !2785, file: !1, line: 342, column: 3)
!2789 = !DILocation(line: 342, column: 3, scope: !2788)
!2790 = !DILocation(line: 343, column: 4, scope: !2791)
!2791 = distinct !DILexicalBlock(scope: !2787, file: !1, line: 342, column: 29)
!2792 = !DILocation(line: 343, column: 8, scope: !2791)
!2793 = !DILocation(line: 343, column: 13, scope: !2791)
!2794 = !DILocation(line: 344, column: 3, scope: !2791)
!2795 = !DILocation(line: 342, column: 19, scope: !2787)
!2796 = !DILocation(line: 342, column: 23, scope: !2787)
!2797 = !DILocation(line: 342, column: 17, scope: !2787)
!2798 = !DILocation(line: 342, column: 3, scope: !2787)
!2799 = distinct !{!2799, !2789, !2800}
!2800 = !DILocation(line: 344, column: 3, scope: !2788)
!2801 = !DILocation(line: 345, column: 2, scope: !2785)
!2802 = !DILocation(line: 347, column: 3, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2780, file: !1, line: 346, column: 7)
!2804 = !DILocation(line: 347, column: 10, scope: !2805)
!2805 = distinct !DILexicalBlock(scope: !2806, file: !1, line: 347, column: 3)
!2806 = distinct !DILexicalBlock(scope: !2803, file: !1, line: 347, column: 3)
!2807 = !DILocation(line: 347, column: 3, scope: !2806)
!2808 = !DILocation(line: 348, column: 4, scope: !2809)
!2809 = distinct !DILexicalBlock(scope: !2805, file: !1, line: 347, column: 29)
!2810 = !DILocation(line: 348, column: 8, scope: !2809)
!2811 = !DILocation(line: 348, column: 13, scope: !2809)
!2812 = !DILocation(line: 349, column: 20, scope: !2809)
!2813 = !DILocation(line: 349, column: 4, scope: !2809)
!2814 = !DILocation(line: 352, column: 8, scope: !2815)
!2815 = distinct !DILexicalBlock(scope: !2809, file: !1, line: 352, column: 8)
!2816 = !DILocation(line: 352, column: 12, scope: !2815)
!2817 = !DILocation(line: 352, column: 17, scope: !2815)
!2818 = !DILocation(line: 352, column: 8, scope: !2809)
!2819 = !DILocation(line: 353, column: 27, scope: !2815)
!2820 = !DILocation(line: 353, column: 5, scope: !2815)
!2821 = !DILocation(line: 354, column: 3, scope: !2809)
!2822 = !DILocation(line: 347, column: 19, scope: !2805)
!2823 = !DILocation(line: 347, column: 23, scope: !2805)
!2824 = !DILocation(line: 347, column: 17, scope: !2805)
!2825 = !DILocation(line: 347, column: 3, scope: !2805)
!2826 = distinct !{!2826, !2807, !2827}
!2827 = !DILocation(line: 354, column: 3, scope: !2806)
!2828 = !DILocation(line: 356, column: 1, scope: !2768)
!2829 = distinct !DISubprogram(name: "BKE_curve_nurbs_get", scope: !1, file: !1, line: 4138, type: !2830, scopeLine: 4139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!2830 = !DISubroutineType(types: !2831)
!2831 = !{!1602, !114}
!2832 = !DILocalVariable(name: "cu", arg: 1, scope: !2829, file: !1, line: 4138, type: !114)
!2833 = !DILocation(line: 4138, column: 38, scope: !2829)
!2834 = !DILocation(line: 4140, column: 6, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !2829, file: !1, line: 4140, column: 6)
!2836 = !DILocation(line: 4140, column: 10, scope: !2835)
!2837 = !DILocation(line: 4140, column: 6, scope: !2829)
!2838 = !DILocation(line: 4141, column: 34, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2835, file: !1, line: 4140, column: 20)
!2840 = !DILocation(line: 4141, column: 10, scope: !2839)
!2841 = !DILocation(line: 4141, column: 3, scope: !2839)
!2842 = !DILocation(line: 4144, column: 10, scope: !2829)
!2843 = !DILocation(line: 4144, column: 14, scope: !2829)
!2844 = !DILocation(line: 4144, column: 2, scope: !2829)
!2845 = !DILocation(line: 4145, column: 1, scope: !2829)
!2846 = distinct !DISubprogram(name: "BKE_nurb_test2D", scope: !1, file: !1, line: 617, type: !2847, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!2847 = !DISubroutineType(types: !2848)
!2848 = !{null, !1782}
!2849 = !DILocalVariable(name: "nu", arg: 1, scope: !2846, file: !1, line: 617, type: !1782)
!2850 = !DILocation(line: 617, column: 28, scope: !2846)
!2851 = !DILocalVariable(name: "bezt", scope: !2846, file: !1, line: 619, type: !1817)
!2852 = !DILocation(line: 619, column: 13, scope: !2846)
!2853 = !DILocalVariable(name: "bp", scope: !2846, file: !1, line: 620, type: !1805)
!2854 = !DILocation(line: 620, column: 10, scope: !2846)
!2855 = !DILocalVariable(name: "a", scope: !2846, file: !1, line: 621, type: !79)
!2856 = !DILocation(line: 621, column: 6, scope: !2846)
!2857 = !DILocation(line: 623, column: 7, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2846, file: !1, line: 623, column: 6)
!2859 = !DILocation(line: 623, column: 11, scope: !2858)
!2860 = !DILocation(line: 623, column: 16, scope: !2858)
!2861 = !DILocation(line: 623, column: 25, scope: !2858)
!2862 = !DILocation(line: 623, column: 6, scope: !2846)
!2863 = !DILocation(line: 624, column: 3, scope: !2858)
!2864 = !DILocation(line: 626, column: 6, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2846, file: !1, line: 626, column: 6)
!2866 = !DILocation(line: 626, column: 10, scope: !2865)
!2867 = !DILocation(line: 626, column: 15, scope: !2865)
!2868 = !DILocation(line: 626, column: 6, scope: !2846)
!2869 = !DILocation(line: 627, column: 7, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2865, file: !1, line: 626, column: 29)
!2871 = !DILocation(line: 627, column: 11, scope: !2870)
!2872 = !DILocation(line: 627, column: 5, scope: !2870)
!2873 = !DILocation(line: 628, column: 10, scope: !2870)
!2874 = !DILocation(line: 628, column: 14, scope: !2870)
!2875 = !DILocation(line: 628, column: 8, scope: !2870)
!2876 = !DILocation(line: 629, column: 3, scope: !2870)
!2877 = !DILocation(line: 629, column: 11, scope: !2870)
!2878 = !DILocation(line: 630, column: 4, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2870, file: !1, line: 629, column: 15)
!2880 = !DILocation(line: 630, column: 10, scope: !2879)
!2881 = !DILocation(line: 630, column: 20, scope: !2879)
!2882 = !DILocation(line: 631, column: 4, scope: !2879)
!2883 = !DILocation(line: 631, column: 10, scope: !2879)
!2884 = !DILocation(line: 631, column: 20, scope: !2879)
!2885 = !DILocation(line: 632, column: 4, scope: !2879)
!2886 = !DILocation(line: 632, column: 10, scope: !2879)
!2887 = !DILocation(line: 632, column: 20, scope: !2879)
!2888 = !DILocation(line: 633, column: 8, scope: !2879)
!2889 = distinct !{!2889, !2876, !2890}
!2890 = !DILocation(line: 634, column: 3, scope: !2870)
!2891 = !DILocation(line: 635, column: 2, scope: !2870)
!2892 = !DILocation(line: 637, column: 7, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !2865, file: !1, line: 636, column: 7)
!2894 = !DILocation(line: 637, column: 11, scope: !2893)
!2895 = !DILocation(line: 637, column: 19, scope: !2893)
!2896 = !DILocation(line: 637, column: 23, scope: !2893)
!2897 = !DILocation(line: 637, column: 17, scope: !2893)
!2898 = !DILocation(line: 637, column: 5, scope: !2893)
!2899 = !DILocation(line: 638, column: 8, scope: !2893)
!2900 = !DILocation(line: 638, column: 12, scope: !2893)
!2901 = !DILocation(line: 638, column: 6, scope: !2893)
!2902 = !DILocation(line: 639, column: 3, scope: !2893)
!2903 = !DILocation(line: 639, column: 11, scope: !2893)
!2904 = !DILocation(line: 640, column: 4, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2893, file: !1, line: 639, column: 15)
!2906 = !DILocation(line: 640, column: 8, scope: !2905)
!2907 = !DILocation(line: 640, column: 15, scope: !2905)
!2908 = !DILocation(line: 641, column: 6, scope: !2905)
!2909 = distinct !{!2909, !2902, !2910}
!2910 = !DILocation(line: 642, column: 3, scope: !2893)
!2911 = !DILocation(line: 644, column: 1, scope: !2846)
!2912 = distinct !DISubprogram(name: "BKE_nurb_handles_calc", scope: !1, file: !1, line: 3305, type: !2847, scopeLine: 3306, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!2913 = !DILocalVariable(name: "nu", arg: 1, scope: !2912, file: !1, line: 3305, type: !1782)
!2914 = !DILocation(line: 3305, column: 34, scope: !2912)
!2915 = !DILocation(line: 3307, column: 25, scope: !2912)
!2916 = !DILocation(line: 3307, column: 2, scope: !2912)
!2917 = !DILocation(line: 3308, column: 1, scope: !2912)
!2918 = distinct !DISubprogram(name: "BKE_curve_type_test", scope: !1, file: !1, line: 358, type: !2919, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!2919 = !DISubroutineType(types: !2920)
!2920 = !{null, !2521}
!2921 = !DILocalVariable(name: "ob", arg: 1, scope: !2918, file: !1, line: 358, type: !2521)
!2922 = !DILocation(line: 358, column: 34, scope: !2918)
!2923 = !DILocation(line: 360, column: 32, scope: !2918)
!2924 = !DILocation(line: 360, column: 36, scope: !2918)
!2925 = !DILocation(line: 360, column: 13, scope: !2918)
!2926 = !DILocation(line: 360, column: 2, scope: !2918)
!2927 = !DILocation(line: 360, column: 6, scope: !2918)
!2928 = !DILocation(line: 360, column: 11, scope: !2918)
!2929 = !DILocation(line: 362, column: 6, scope: !2930)
!2930 = distinct !DILexicalBlock(scope: !2918, file: !1, line: 362, column: 6)
!2931 = !DILocation(line: 362, column: 10, scope: !2930)
!2932 = !DILocation(line: 362, column: 15, scope: !2930)
!2933 = !DILocation(line: 362, column: 6, scope: !2918)
!2934 = !DILocation(line: 363, column: 45, scope: !2930)
!2935 = !DILocation(line: 363, column: 49, scope: !2930)
!2936 = !DILocation(line: 363, column: 36, scope: !2930)
!2937 = !DILocation(line: 363, column: 3, scope: !2930)
!2938 = !DILocation(line: 364, column: 1, scope: !2918)
!2939 = distinct !DISubprogram(name: "BKE_curve_boundbox_calc", scope: !1, file: !1, line: 366, type: !2940, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!2940 = !DISubroutineType(types: !2941)
!2941 = !{null, !114, !1325, !1325}
!2942 = !DILocalVariable(name: "cu", arg: 1, scope: !2939, file: !1, line: 366, type: !114)
!2943 = !DILocation(line: 366, column: 37, scope: !2939)
!2944 = !DILocalVariable(name: "r_loc", arg: 2, scope: !2939, file: !1, line: 366, type: !1325)
!2945 = !DILocation(line: 366, column: 47, scope: !2939)
!2946 = !DILocalVariable(name: "r_size", arg: 3, scope: !2939, file: !1, line: 366, type: !1325)
!2947 = !DILocation(line: 366, column: 63, scope: !2939)
!2948 = !DILocalVariable(name: "bb", scope: !2939, file: !1, line: 368, type: !2949)
!2949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2950, size: 64)
!2950 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoundBox", file: !4, line: 100, baseType: !124)
!2951 = !DILocation(line: 368, column: 12, scope: !2939)
!2952 = !DILocalVariable(name: "min", scope: !2939, file: !1, line: 369, type: !201)
!2953 = !DILocation(line: 369, column: 8, scope: !2939)
!2954 = !DILocalVariable(name: "max", scope: !2939, file: !1, line: 369, type: !201)
!2955 = !DILocation(line: 369, column: 16, scope: !2939)
!2956 = !DILocalVariable(name: "mloc", scope: !2939, file: !1, line: 370, type: !201)
!2957 = !DILocation(line: 370, column: 8, scope: !2939)
!2958 = !DILocalVariable(name: "msize", scope: !2939, file: !1, line: 370, type: !201)
!2959 = !DILocation(line: 370, column: 17, scope: !2939)
!2960 = !DILocation(line: 372, column: 6, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2939, file: !1, line: 372, column: 6)
!2962 = !DILocation(line: 372, column: 10, scope: !2961)
!2963 = !DILocation(line: 372, column: 13, scope: !2961)
!2964 = !DILocation(line: 372, column: 6, scope: !2939)
!2965 = !DILocation(line: 372, column: 31, scope: !2961)
!2966 = !DILocation(line: 372, column: 22, scope: !2961)
!2967 = !DILocation(line: 372, column: 26, scope: !2961)
!2968 = !DILocation(line: 372, column: 29, scope: !2961)
!2969 = !DILocation(line: 373, column: 7, scope: !2939)
!2970 = !DILocation(line: 373, column: 11, scope: !2939)
!2971 = !DILocation(line: 373, column: 5, scope: !2939)
!2972 = !DILocation(line: 375, column: 7, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2939, file: !1, line: 375, column: 6)
!2974 = !DILocation(line: 375, column: 6, scope: !2939)
!2975 = !DILocation(line: 375, column: 22, scope: !2973)
!2976 = !DILocation(line: 375, column: 20, scope: !2973)
!2977 = !DILocation(line: 375, column: 14, scope: !2973)
!2978 = !DILocation(line: 376, column: 7, scope: !2979)
!2979 = distinct !DILexicalBlock(scope: !2939, file: !1, line: 376, column: 6)
!2980 = !DILocation(line: 376, column: 6, scope: !2939)
!2981 = !DILocation(line: 376, column: 24, scope: !2979)
!2982 = !DILocation(line: 376, column: 22, scope: !2979)
!2983 = !DILocation(line: 376, column: 15, scope: !2979)
!2984 = !DILocation(line: 378, column: 2, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2939, file: !1, line: 378, column: 2)
!2986 = !DILocation(line: 379, column: 24, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2939, file: !1, line: 379, column: 6)
!2988 = !DILocation(line: 379, column: 34, scope: !2987)
!2989 = !DILocation(line: 379, column: 39, scope: !2987)
!2990 = !DILocation(line: 379, column: 7, scope: !2987)
!2991 = !DILocation(line: 379, column: 6, scope: !2939)
!2992 = !DILocation(line: 380, column: 21, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !2987, file: !1, line: 379, column: 45)
!2994 = !DILocation(line: 380, column: 28, scope: !2993)
!2995 = !DILocation(line: 380, column: 12, scope: !2993)
!2996 = !DILocation(line: 380, column: 19, scope: !2993)
!2997 = !DILocation(line: 380, column: 3, scope: !2993)
!2998 = !DILocation(line: 380, column: 10, scope: !2993)
!2999 = !DILocation(line: 381, column: 21, scope: !2993)
!3000 = !DILocation(line: 381, column: 28, scope: !2993)
!3001 = !DILocation(line: 381, column: 12, scope: !2993)
!3002 = !DILocation(line: 381, column: 19, scope: !2993)
!3003 = !DILocation(line: 381, column: 3, scope: !2993)
!3004 = !DILocation(line: 381, column: 10, scope: !2993)
!3005 = !DILocation(line: 382, column: 2, scope: !2993)
!3006 = !DILocation(line: 384, column: 14, scope: !2939)
!3007 = !DILocation(line: 384, column: 21, scope: !2939)
!3008 = !DILocation(line: 384, column: 26, scope: !2939)
!3009 = !DILocation(line: 384, column: 2, scope: !2939)
!3010 = !DILocation(line: 386, column: 15, scope: !2939)
!3011 = !DILocation(line: 386, column: 24, scope: !2939)
!3012 = !DILocation(line: 386, column: 22, scope: !2939)
!3013 = !DILocation(line: 386, column: 32, scope: !2939)
!3014 = !DILocation(line: 386, column: 2, scope: !2939)
!3015 = !DILocation(line: 386, column: 12, scope: !2939)
!3016 = !DILocation(line: 387, column: 15, scope: !2939)
!3017 = !DILocation(line: 387, column: 24, scope: !2939)
!3018 = !DILocation(line: 387, column: 22, scope: !2939)
!3019 = !DILocation(line: 387, column: 32, scope: !2939)
!3020 = !DILocation(line: 387, column: 2, scope: !2939)
!3021 = !DILocation(line: 387, column: 12, scope: !2939)
!3022 = !DILocation(line: 388, column: 15, scope: !2939)
!3023 = !DILocation(line: 388, column: 24, scope: !2939)
!3024 = !DILocation(line: 388, column: 22, scope: !2939)
!3025 = !DILocation(line: 388, column: 32, scope: !2939)
!3026 = !DILocation(line: 388, column: 2, scope: !2939)
!3027 = !DILocation(line: 388, column: 12, scope: !2939)
!3028 = !DILocation(line: 390, column: 32, scope: !2939)
!3029 = !DILocation(line: 390, column: 36, scope: !2939)
!3030 = !DILocation(line: 390, column: 41, scope: !2939)
!3031 = !DILocation(line: 390, column: 2, scope: !2939)
!3032 = !DILocation(line: 392, column: 2, scope: !2939)
!3033 = !DILocation(line: 392, column: 6, scope: !2939)
!3034 = !DILocation(line: 392, column: 11, scope: !2939)
!3035 = !DILocation(line: 393, column: 1, scope: !2939)
!3036 = distinct !DISubprogram(name: "BKE_curve_minmax", scope: !1, file: !1, line: 4253, type: !3037, scopeLine: 4254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!3037 = !DISubroutineType(types: !3038)
!3038 = !{!551, !114, !551, !1325, !1325}
!3039 = !DILocalVariable(name: "cu", arg: 1, scope: !3036, file: !1, line: 4253, type: !114)
!3040 = !DILocation(line: 4253, column: 30, scope: !3036)
!3041 = !DILocalVariable(name: "use_radius", arg: 2, scope: !3036, file: !1, line: 4253, type: !551)
!3042 = !DILocation(line: 4253, column: 39, scope: !3036)
!3043 = !DILocalVariable(name: "min", arg: 3, scope: !3036, file: !1, line: 4253, type: !1325)
!3044 = !DILocation(line: 4253, column: 57, scope: !3036)
!3045 = !DILocalVariable(name: "max", arg: 4, scope: !3036, file: !1, line: 4253, type: !1325)
!3046 = !DILocation(line: 4253, column: 71, scope: !3036)
!3047 = !DILocalVariable(name: "nurb_lb", scope: !3036, file: !1, line: 4255, type: !1602)
!3048 = !DILocation(line: 4255, column: 12, scope: !3036)
!3049 = !DILocation(line: 4255, column: 42, scope: !3036)
!3050 = !DILocation(line: 4255, column: 22, scope: !3036)
!3051 = !DILocalVariable(name: "nu", scope: !3036, file: !1, line: 4256, type: !1782)
!3052 = !DILocation(line: 4256, column: 8, scope: !3036)
!3053 = !DILocation(line: 4258, column: 12, scope: !3054)
!3054 = distinct !DILexicalBlock(scope: !3036, file: !1, line: 4258, column: 2)
!3055 = !DILocation(line: 4258, column: 21, scope: !3054)
!3056 = !DILocation(line: 4258, column: 10, scope: !3054)
!3057 = !DILocation(line: 4258, column: 7, scope: !3054)
!3058 = !DILocation(line: 4258, column: 28, scope: !3059)
!3059 = distinct !DILexicalBlock(scope: !3054, file: !1, line: 4258, column: 2)
!3060 = !DILocation(line: 4258, column: 2, scope: !3054)
!3061 = !DILocation(line: 4259, column: 19, scope: !3059)
!3062 = !DILocation(line: 4259, column: 23, scope: !3059)
!3063 = !DILocation(line: 4259, column: 35, scope: !3059)
!3064 = !DILocation(line: 4259, column: 40, scope: !3059)
!3065 = !DILocation(line: 4259, column: 3, scope: !3059)
!3066 = !DILocation(line: 4258, column: 37, scope: !3059)
!3067 = !DILocation(line: 4258, column: 41, scope: !3059)
!3068 = !DILocation(line: 4258, column: 35, scope: !3059)
!3069 = !DILocation(line: 4258, column: 2, scope: !3059)
!3070 = distinct !{!3070, !3060, !3071}
!3071 = !DILocation(line: 4259, column: 43, scope: !3054)
!3072 = !DILocation(line: 4261, column: 32, scope: !3036)
!3073 = !DILocation(line: 4261, column: 10, scope: !3036)
!3074 = !DILocation(line: 4261, column: 41, scope: !3036)
!3075 = !DILocation(line: 4261, column: 9, scope: !3036)
!3076 = !DILocation(line: 4261, column: 2, scope: !3036)
!3077 = distinct !DISubprogram(name: "BKE_curve_boundbox_get", scope: !1, file: !1, line: 395, type: !3078, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!3078 = !DISubroutineType(types: !3079)
!3079 = !{!123, !2521}
!3080 = !DILocalVariable(name: "ob", arg: 1, scope: !3077, file: !1, line: 395, type: !2521)
!3081 = !DILocation(line: 395, column: 42, scope: !3077)
!3082 = !DILocalVariable(name: "cu", scope: !3077, file: !1, line: 397, type: !114)
!3083 = !DILocation(line: 397, column: 9, scope: !3077)
!3084 = !DILocation(line: 397, column: 14, scope: !3077)
!3085 = !DILocation(line: 397, column: 18, scope: !3077)
!3086 = !DILocation(line: 399, column: 6, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3077, file: !1, line: 399, column: 6)
!3088 = !DILocation(line: 399, column: 10, scope: !3087)
!3089 = !DILocation(line: 399, column: 6, scope: !3077)
!3090 = !DILocation(line: 400, column: 10, scope: !3087)
!3091 = !DILocation(line: 400, column: 14, scope: !3087)
!3092 = !DILocation(line: 400, column: 3, scope: !3087)
!3093 = !DILocation(line: 402, column: 6, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3077, file: !1, line: 402, column: 6)
!3095 = !DILocation(line: 402, column: 10, scope: !3094)
!3096 = !DILocation(line: 402, column: 13, scope: !3094)
!3097 = !DILocation(line: 402, column: 21, scope: !3094)
!3098 = !DILocation(line: 402, column: 25, scope: !3094)
!3099 = !DILocation(line: 402, column: 29, scope: !3094)
!3100 = !DILocation(line: 402, column: 33, scope: !3094)
!3101 = !DILocation(line: 402, column: 38, scope: !3094)
!3102 = !DILocation(line: 402, column: 6, scope: !3077)
!3103 = !DILocation(line: 403, column: 27, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3094, file: !1, line: 402, column: 57)
!3105 = !DILocation(line: 403, column: 3, scope: !3104)
!3106 = !DILocation(line: 404, column: 2, scope: !3104)
!3107 = !DILocation(line: 406, column: 9, scope: !3077)
!3108 = !DILocation(line: 406, column: 13, scope: !3077)
!3109 = !DILocation(line: 406, column: 2, scope: !3077)
!3110 = !DILocation(line: 407, column: 1, scope: !3077)
!3111 = distinct !DISubprogram(name: "BKE_curve_texspace_calc", scope: !1, file: !1, line: 409, type: !1847, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!3112 = !DILocalVariable(name: "cu", arg: 1, scope: !3111, file: !1, line: 409, type: !114)
!3113 = !DILocation(line: 409, column: 37, scope: !3111)
!3114 = !DILocalVariable(name: "loc", scope: !3111, file: !1, line: 411, type: !201)
!3115 = !DILocation(line: 411, column: 8, scope: !3111)
!3116 = !DILocalVariable(name: "size", scope: !3111, file: !1, line: 411, type: !201)
!3117 = !DILocation(line: 411, column: 16, scope: !3111)
!3118 = !DILocalVariable(name: "a", scope: !3111, file: !1, line: 412, type: !79)
!3119 = !DILocation(line: 412, column: 6, scope: !3111)
!3120 = !DILocation(line: 414, column: 26, scope: !3111)
!3121 = !DILocation(line: 414, column: 30, scope: !3111)
!3122 = !DILocation(line: 414, column: 35, scope: !3111)
!3123 = !DILocation(line: 414, column: 2, scope: !3111)
!3124 = !DILocation(line: 416, column: 6, scope: !3125)
!3125 = distinct !DILexicalBlock(scope: !3111, file: !1, line: 416, column: 6)
!3126 = !DILocation(line: 416, column: 10, scope: !3125)
!3127 = !DILocation(line: 416, column: 18, scope: !3125)
!3128 = !DILocation(line: 416, column: 6, scope: !3111)
!3129 = !DILocation(line: 417, column: 10, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !3131, file: !1, line: 417, column: 3)
!3131 = distinct !DILexicalBlock(scope: !3125, file: !1, line: 416, column: 34)
!3132 = !DILocation(line: 417, column: 8, scope: !3130)
!3133 = !DILocation(line: 417, column: 15, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3130, file: !1, line: 417, column: 3)
!3135 = !DILocation(line: 417, column: 17, scope: !3134)
!3136 = !DILocation(line: 417, column: 3, scope: !3130)
!3137 = !DILocation(line: 418, column: 13, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3139, file: !1, line: 418, column: 8)
!3139 = distinct !DILexicalBlock(scope: !3134, file: !1, line: 417, column: 27)
!3140 = !DILocation(line: 418, column: 8, scope: !3138)
!3141 = !DILocation(line: 418, column: 16, scope: !3138)
!3142 = !DILocation(line: 418, column: 8, scope: !3139)
!3143 = !DILocation(line: 418, column: 30, scope: !3138)
!3144 = !DILocation(line: 418, column: 25, scope: !3138)
!3145 = !DILocation(line: 418, column: 33, scope: !3138)
!3146 = !DILocation(line: 419, column: 18, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3138, file: !1, line: 419, column: 13)
!3148 = !DILocation(line: 419, column: 13, scope: !3147)
!3149 = !DILocation(line: 419, column: 21, scope: !3147)
!3150 = !DILocation(line: 419, column: 28, scope: !3147)
!3151 = !DILocation(line: 419, column: 36, scope: !3147)
!3152 = !DILocation(line: 419, column: 31, scope: !3147)
!3153 = !DILocation(line: 419, column: 39, scope: !3147)
!3154 = !DILocation(line: 419, column: 13, scope: !3138)
!3155 = !DILocation(line: 419, column: 56, scope: !3147)
!3156 = !DILocation(line: 419, column: 51, scope: !3147)
!3157 = !DILocation(line: 419, column: 59, scope: !3147)
!3158 = !DILocation(line: 420, column: 18, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3147, file: !1, line: 420, column: 13)
!3160 = !DILocation(line: 420, column: 13, scope: !3159)
!3161 = !DILocation(line: 420, column: 21, scope: !3159)
!3162 = !DILocation(line: 420, column: 28, scope: !3159)
!3163 = !DILocation(line: 420, column: 36, scope: !3159)
!3164 = !DILocation(line: 420, column: 31, scope: !3159)
!3165 = !DILocation(line: 420, column: 39, scope: !3159)
!3166 = !DILocation(line: 420, column: 13, scope: !3147)
!3167 = !DILocation(line: 420, column: 57, scope: !3159)
!3168 = !DILocation(line: 420, column: 52, scope: !3159)
!3169 = !DILocation(line: 420, column: 60, scope: !3159)
!3170 = !DILocation(line: 421, column: 3, scope: !3139)
!3171 = !DILocation(line: 417, column: 23, scope: !3134)
!3172 = !DILocation(line: 417, column: 3, scope: !3134)
!3173 = distinct !{!3173, !3136, !3174}
!3174 = !DILocation(line: 421, column: 3, scope: !3130)
!3175 = !DILocation(line: 423, column: 14, scope: !3131)
!3176 = !DILocation(line: 423, column: 18, scope: !3131)
!3177 = !DILocation(line: 423, column: 23, scope: !3131)
!3178 = !DILocation(line: 423, column: 3, scope: !3131)
!3179 = !DILocation(line: 424, column: 14, scope: !3131)
!3180 = !DILocation(line: 424, column: 18, scope: !3131)
!3181 = !DILocation(line: 424, column: 24, scope: !3131)
!3182 = !DILocation(line: 424, column: 3, scope: !3131)
!3183 = !DILocation(line: 425, column: 11, scope: !3131)
!3184 = !DILocation(line: 425, column: 15, scope: !3131)
!3185 = !DILocation(line: 425, column: 3, scope: !3131)
!3186 = !DILocation(line: 426, column: 2, scope: !3131)
!3187 = !DILocation(line: 427, column: 1, scope: !3111)
!3188 = distinct !DISubprogram(name: "copy_v3_v3", scope: !2341, file: !2341, line: 64, type: !3189, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!3189 = !DISubroutineType(types: !3190)
!3190 = !{null, !1325, !3191}
!3191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3192, size: 64)
!3192 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !128)
!3193 = !DILocalVariable(name: "r", arg: 1, scope: !3188, file: !2341, line: 64, type: !1325)
!3194 = !DILocation(line: 64, column: 31, scope: !3188)
!3195 = !DILocalVariable(name: "a", arg: 2, scope: !3188, file: !2341, line: 64, type: !3191)
!3196 = !DILocation(line: 64, column: 49, scope: !3188)
!3197 = !DILocation(line: 66, column: 9, scope: !3188)
!3198 = !DILocation(line: 66, column: 2, scope: !3188)
!3199 = !DILocation(line: 66, column: 7, scope: !3188)
!3200 = !DILocation(line: 67, column: 9, scope: !3188)
!3201 = !DILocation(line: 67, column: 2, scope: !3188)
!3202 = !DILocation(line: 67, column: 7, scope: !3188)
!3203 = !DILocation(line: 68, column: 9, scope: !3188)
!3204 = !DILocation(line: 68, column: 2, scope: !3188)
!3205 = !DILocation(line: 68, column: 7, scope: !3188)
!3206 = !DILocation(line: 69, column: 1, scope: !3188)
!3207 = distinct !DISubprogram(name: "zero_v3", scope: !2341, file: !2341, line: 43, type: !3208, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!3208 = !DISubroutineType(types: !3209)
!3209 = !{null, !1325}
!3210 = !DILocalVariable(name: "r", arg: 1, scope: !3207, file: !2341, line: 43, type: !1325)
!3211 = !DILocation(line: 43, column: 28, scope: !3207)
!3212 = !DILocation(line: 45, column: 2, scope: !3207)
!3213 = !DILocation(line: 45, column: 7, scope: !3207)
!3214 = !DILocation(line: 46, column: 2, scope: !3207)
!3215 = !DILocation(line: 46, column: 7, scope: !3207)
!3216 = !DILocation(line: 47, column: 2, scope: !3207)
!3217 = !DILocation(line: 47, column: 7, scope: !3207)
!3218 = !DILocation(line: 48, column: 1, scope: !3207)
!3219 = distinct !DISubprogram(name: "BKE_curve_texspace_get", scope: !1, file: !1, line: 429, type: !3220, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!3220 = !DISubroutineType(types: !3221)
!3221 = !{null, !114, !1325, !1325, !1325}
!3222 = !DILocalVariable(name: "cu", arg: 1, scope: !3219, file: !1, line: 429, type: !114)
!3223 = !DILocation(line: 429, column: 36, scope: !3219)
!3224 = !DILocalVariable(name: "r_loc", arg: 2, scope: !3219, file: !1, line: 429, type: !1325)
!3225 = !DILocation(line: 429, column: 46, scope: !3219)
!3226 = !DILocalVariable(name: "r_rot", arg: 3, scope: !3219, file: !1, line: 429, type: !1325)
!3227 = !DILocation(line: 429, column: 62, scope: !3219)
!3228 = !DILocalVariable(name: "r_size", arg: 4, scope: !3219, file: !1, line: 429, type: !1325)
!3229 = !DILocation(line: 429, column: 78, scope: !3219)
!3230 = !DILocation(line: 431, column: 6, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3219, file: !1, line: 431, column: 6)
!3232 = !DILocation(line: 431, column: 10, scope: !3231)
!3233 = !DILocation(line: 431, column: 13, scope: !3231)
!3234 = !DILocation(line: 431, column: 21, scope: !3231)
!3235 = !DILocation(line: 431, column: 25, scope: !3231)
!3236 = !DILocation(line: 431, column: 29, scope: !3231)
!3237 = !DILocation(line: 431, column: 33, scope: !3231)
!3238 = !DILocation(line: 431, column: 38, scope: !3231)
!3239 = !DILocation(line: 431, column: 6, scope: !3219)
!3240 = !DILocation(line: 432, column: 27, scope: !3241)
!3241 = distinct !DILexicalBlock(scope: !3231, file: !1, line: 431, column: 57)
!3242 = !DILocation(line: 432, column: 3, scope: !3241)
!3243 = !DILocation(line: 433, column: 2, scope: !3241)
!3244 = !DILocation(line: 435, column: 6, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3219, file: !1, line: 435, column: 6)
!3246 = !DILocation(line: 435, column: 6, scope: !3219)
!3247 = !DILocation(line: 435, column: 24, scope: !3245)
!3248 = !DILocation(line: 435, column: 32, scope: !3245)
!3249 = !DILocation(line: 435, column: 36, scope: !3245)
!3250 = !DILocation(line: 435, column: 13, scope: !3245)
!3251 = !DILocation(line: 436, column: 6, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3219, file: !1, line: 436, column: 6)
!3253 = !DILocation(line: 436, column: 6, scope: !3219)
!3254 = !DILocation(line: 436, column: 24, scope: !3252)
!3255 = !DILocation(line: 436, column: 32, scope: !3252)
!3256 = !DILocation(line: 436, column: 36, scope: !3252)
!3257 = !DILocation(line: 436, column: 13, scope: !3252)
!3258 = !DILocation(line: 437, column: 6, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3219, file: !1, line: 437, column: 6)
!3260 = !DILocation(line: 437, column: 6, scope: !3219)
!3261 = !DILocation(line: 437, column: 25, scope: !3259)
!3262 = !DILocation(line: 437, column: 33, scope: !3259)
!3263 = !DILocation(line: 437, column: 37, scope: !3259)
!3264 = !DILocation(line: 437, column: 14, scope: !3259)
!3265 = !DILocation(line: 438, column: 1, scope: !3219)
!3266 = distinct !DISubprogram(name: "BKE_nurbList_index_get_co", scope: !1, file: !1, line: 440, type: !3267, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!3267 = !DISubroutineType(types: !3268)
!3268 = !{!551, !1602, !3269, !1325}
!3269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !79)
!3270 = !DILocalVariable(name: "nurb", arg: 1, scope: !3266, file: !1, line: 440, type: !1602)
!3271 = !DILocation(line: 440, column: 42, scope: !3266)
!3272 = !DILocalVariable(name: "index", arg: 2, scope: !3266, file: !1, line: 440, type: !3269)
!3273 = !DILocation(line: 440, column: 58, scope: !3266)
!3274 = !DILocalVariable(name: "r_co", arg: 3, scope: !3266, file: !1, line: 440, type: !1325)
!3275 = !DILocation(line: 440, column: 71, scope: !3266)
!3276 = !DILocalVariable(name: "nu", scope: !3266, file: !1, line: 442, type: !1782)
!3277 = !DILocation(line: 442, column: 8, scope: !3266)
!3278 = !DILocalVariable(name: "tot", scope: !3266, file: !1, line: 443, type: !79)
!3279 = !DILocation(line: 443, column: 6, scope: !3266)
!3280 = !DILocation(line: 445, column: 12, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3266, file: !1, line: 445, column: 2)
!3282 = !DILocation(line: 445, column: 18, scope: !3281)
!3283 = !DILocation(line: 445, column: 10, scope: !3281)
!3284 = !DILocation(line: 445, column: 7, scope: !3281)
!3285 = !DILocation(line: 445, column: 25, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3281, file: !1, line: 445, column: 2)
!3287 = !DILocation(line: 445, column: 2, scope: !3281)
!3288 = !DILocalVariable(name: "tot_nu", scope: !3289, file: !1, line: 446, type: !79)
!3289 = distinct !DILexicalBlock(scope: !3286, file: !1, line: 445, column: 44)
!3290 = !DILocation(line: 446, column: 7, scope: !3289)
!3291 = !DILocation(line: 447, column: 7, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !3289, file: !1, line: 447, column: 7)
!3293 = !DILocation(line: 447, column: 11, scope: !3292)
!3294 = !DILocation(line: 447, column: 16, scope: !3292)
!3295 = !DILocation(line: 447, column: 7, scope: !3289)
!3296 = !DILocation(line: 448, column: 13, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3292, file: !1, line: 447, column: 30)
!3298 = !DILocation(line: 448, column: 17, scope: !3297)
!3299 = !DILocation(line: 448, column: 11, scope: !3297)
!3300 = !DILocation(line: 449, column: 8, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3297, file: !1, line: 449, column: 8)
!3302 = !DILocation(line: 449, column: 16, scope: !3301)
!3303 = !DILocation(line: 449, column: 14, scope: !3301)
!3304 = !DILocation(line: 449, column: 22, scope: !3301)
!3305 = !DILocation(line: 449, column: 20, scope: !3301)
!3306 = !DILocation(line: 449, column: 8, scope: !3297)
!3307 = !DILocation(line: 450, column: 16, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3301, file: !1, line: 449, column: 30)
!3309 = !DILocation(line: 450, column: 22, scope: !3308)
!3310 = !DILocation(line: 450, column: 26, scope: !3308)
!3311 = !DILocation(line: 450, column: 31, scope: !3308)
!3312 = !DILocation(line: 450, column: 39, scope: !3308)
!3313 = !DILocation(line: 450, column: 37, scope: !3308)
!3314 = !DILocation(line: 450, column: 44, scope: !3308)
!3315 = !DILocation(line: 450, column: 5, scope: !3308)
!3316 = !DILocation(line: 451, column: 5, scope: !3308)
!3317 = !DILocation(line: 453, column: 3, scope: !3297)
!3318 = !DILocation(line: 455, column: 13, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3292, file: !1, line: 454, column: 8)
!3320 = !DILocation(line: 455, column: 17, scope: !3319)
!3321 = !DILocation(line: 455, column: 25, scope: !3319)
!3322 = !DILocation(line: 455, column: 29, scope: !3319)
!3323 = !DILocation(line: 455, column: 23, scope: !3319)
!3324 = !DILocation(line: 455, column: 11, scope: !3319)
!3325 = !DILocation(line: 456, column: 8, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3319, file: !1, line: 456, column: 8)
!3327 = !DILocation(line: 456, column: 16, scope: !3326)
!3328 = !DILocation(line: 456, column: 14, scope: !3326)
!3329 = !DILocation(line: 456, column: 22, scope: !3326)
!3330 = !DILocation(line: 456, column: 20, scope: !3326)
!3331 = !DILocation(line: 456, column: 8, scope: !3319)
!3332 = !DILocation(line: 457, column: 16, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3326, file: !1, line: 456, column: 30)
!3334 = !DILocation(line: 457, column: 22, scope: !3333)
!3335 = !DILocation(line: 457, column: 26, scope: !3333)
!3336 = !DILocation(line: 457, column: 29, scope: !3333)
!3337 = !DILocation(line: 457, column: 37, scope: !3333)
!3338 = !DILocation(line: 457, column: 35, scope: !3333)
!3339 = !DILocation(line: 457, column: 42, scope: !3333)
!3340 = !DILocation(line: 457, column: 5, scope: !3333)
!3341 = !DILocation(line: 458, column: 5, scope: !3333)
!3342 = !DILocation(line: 461, column: 10, scope: !3289)
!3343 = !DILocation(line: 461, column: 7, scope: !3289)
!3344 = !DILocation(line: 462, column: 2, scope: !3289)
!3345 = !DILocation(line: 445, column: 34, scope: !3286)
!3346 = !DILocation(line: 445, column: 38, scope: !3286)
!3347 = !DILocation(line: 445, column: 32, scope: !3286)
!3348 = !DILocation(line: 445, column: 2, scope: !3286)
!3349 = distinct !{!3349, !3287, !3350}
!3350 = !DILocation(line: 462, column: 2, scope: !3281)
!3351 = !DILocation(line: 464, column: 2, scope: !3266)
!3352 = !DILocation(line: 465, column: 1, scope: !3266)
!3353 = distinct !DISubprogram(name: "BKE_nurbList_verts_count", scope: !1, file: !1, line: 467, type: !3354, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!3354 = !DISubroutineType(types: !3355)
!3355 = !{!79, !1602}
!3356 = !DILocalVariable(name: "nurb", arg: 1, scope: !3353, file: !1, line: 467, type: !1602)
!3357 = !DILocation(line: 467, column: 40, scope: !3353)
!3358 = !DILocalVariable(name: "nu", scope: !3353, file: !1, line: 469, type: !1782)
!3359 = !DILocation(line: 469, column: 8, scope: !3353)
!3360 = !DILocalVariable(name: "tot", scope: !3353, file: !1, line: 470, type: !79)
!3361 = !DILocation(line: 470, column: 6, scope: !3353)
!3362 = !DILocation(line: 472, column: 7, scope: !3353)
!3363 = !DILocation(line: 472, column: 13, scope: !3353)
!3364 = !DILocation(line: 472, column: 5, scope: !3353)
!3365 = !DILocation(line: 473, column: 2, scope: !3353)
!3366 = !DILocation(line: 473, column: 9, scope: !3353)
!3367 = !DILocation(line: 474, column: 7, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3369, file: !1, line: 474, column: 7)
!3369 = distinct !DILexicalBlock(scope: !3353, file: !1, line: 473, column: 13)
!3370 = !DILocation(line: 474, column: 11, scope: !3368)
!3371 = !DILocation(line: 474, column: 7, scope: !3369)
!3372 = !DILocation(line: 475, column: 15, scope: !3368)
!3373 = !DILocation(line: 475, column: 19, scope: !3368)
!3374 = !DILocation(line: 475, column: 13, scope: !3368)
!3375 = !DILocation(line: 475, column: 8, scope: !3368)
!3376 = !DILocation(line: 475, column: 4, scope: !3368)
!3377 = !DILocation(line: 476, column: 12, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3368, file: !1, line: 476, column: 12)
!3379 = !DILocation(line: 476, column: 16, scope: !3378)
!3380 = !DILocation(line: 476, column: 12, scope: !3368)
!3381 = !DILocation(line: 477, column: 11, scope: !3378)
!3382 = !DILocation(line: 477, column: 15, scope: !3378)
!3383 = !DILocation(line: 477, column: 23, scope: !3378)
!3384 = !DILocation(line: 477, column: 27, scope: !3378)
!3385 = !DILocation(line: 477, column: 21, scope: !3378)
!3386 = !DILocation(line: 477, column: 8, scope: !3378)
!3387 = !DILocation(line: 477, column: 4, scope: !3378)
!3388 = !DILocation(line: 479, column: 8, scope: !3369)
!3389 = !DILocation(line: 479, column: 12, scope: !3369)
!3390 = !DILocation(line: 479, column: 6, scope: !3369)
!3391 = distinct !{!3391, !3365, !3392}
!3392 = !DILocation(line: 480, column: 2, scope: !3353)
!3393 = !DILocation(line: 481, column: 9, scope: !3353)
!3394 = !DILocation(line: 481, column: 2, scope: !3353)
!3395 = distinct !DISubprogram(name: "BKE_nurbList_verts_count_without_handles", scope: !1, file: !1, line: 484, type: !3354, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!3396 = !DILocalVariable(name: "nurb", arg: 1, scope: !3395, file: !1, line: 484, type: !1602)
!3397 = !DILocation(line: 484, column: 56, scope: !3395)
!3398 = !DILocalVariable(name: "nu", scope: !3395, file: !1, line: 486, type: !1782)
!3399 = !DILocation(line: 486, column: 8, scope: !3395)
!3400 = !DILocalVariable(name: "tot", scope: !3395, file: !1, line: 487, type: !79)
!3401 = !DILocation(line: 487, column: 6, scope: !3395)
!3402 = !DILocation(line: 489, column: 7, scope: !3395)
!3403 = !DILocation(line: 489, column: 13, scope: !3395)
!3404 = !DILocation(line: 489, column: 5, scope: !3395)
!3405 = !DILocation(line: 490, column: 2, scope: !3395)
!3406 = !DILocation(line: 490, column: 9, scope: !3395)
!3407 = !DILocation(line: 491, column: 7, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3409, file: !1, line: 491, column: 7)
!3409 = distinct !DILexicalBlock(scope: !3395, file: !1, line: 490, column: 13)
!3410 = !DILocation(line: 491, column: 11, scope: !3408)
!3411 = !DILocation(line: 491, column: 7, scope: !3409)
!3412 = !DILocation(line: 492, column: 11, scope: !3408)
!3413 = !DILocation(line: 492, column: 15, scope: !3408)
!3414 = !DILocation(line: 492, column: 8, scope: !3408)
!3415 = !DILocation(line: 492, column: 4, scope: !3408)
!3416 = !DILocation(line: 493, column: 12, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3408, file: !1, line: 493, column: 12)
!3418 = !DILocation(line: 493, column: 16, scope: !3417)
!3419 = !DILocation(line: 493, column: 12, scope: !3408)
!3420 = !DILocation(line: 494, column: 11, scope: !3417)
!3421 = !DILocation(line: 494, column: 15, scope: !3417)
!3422 = !DILocation(line: 494, column: 23, scope: !3417)
!3423 = !DILocation(line: 494, column: 27, scope: !3417)
!3424 = !DILocation(line: 494, column: 21, scope: !3417)
!3425 = !DILocation(line: 494, column: 8, scope: !3417)
!3426 = !DILocation(line: 494, column: 4, scope: !3417)
!3427 = !DILocation(line: 496, column: 8, scope: !3409)
!3428 = !DILocation(line: 496, column: 12, scope: !3409)
!3429 = !DILocation(line: 496, column: 6, scope: !3409)
!3430 = distinct !{!3430, !3405, !3431}
!3431 = !DILocation(line: 497, column: 2, scope: !3395)
!3432 = !DILocation(line: 498, column: 9, scope: !3395)
!3433 = !DILocation(line: 498, column: 2, scope: !3395)
!3434 = distinct !DISubprogram(name: "BKE_nurb_free", scope: !1, file: !1, line: 503, type: !2847, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!3435 = !DILocalVariable(name: "nu", arg: 1, scope: !3434, file: !1, line: 503, type: !1782)
!3436 = !DILocation(line: 503, column: 26, scope: !3434)
!3437 = !DILocation(line: 506, column: 6, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3434, file: !1, line: 506, column: 6)
!3439 = !DILocation(line: 506, column: 9, scope: !3438)
!3440 = !DILocation(line: 506, column: 6, scope: !3434)
!3441 = !DILocation(line: 506, column: 18, scope: !3438)
!3442 = !DILocation(line: 508, column: 6, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3434, file: !1, line: 508, column: 6)
!3444 = !DILocation(line: 508, column: 10, scope: !3443)
!3445 = !DILocation(line: 508, column: 6, scope: !3434)
!3446 = !DILocation(line: 509, column: 3, scope: !3443)
!3447 = !DILocation(line: 509, column: 13, scope: !3443)
!3448 = !DILocation(line: 509, column: 17, scope: !3443)
!3449 = !DILocation(line: 510, column: 2, scope: !3434)
!3450 = !DILocation(line: 510, column: 6, scope: !3434)
!3451 = !DILocation(line: 510, column: 11, scope: !3434)
!3452 = !DILocation(line: 511, column: 6, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3434, file: !1, line: 511, column: 6)
!3454 = !DILocation(line: 511, column: 10, scope: !3453)
!3455 = !DILocation(line: 511, column: 6, scope: !3434)
!3456 = !DILocation(line: 512, column: 3, scope: !3453)
!3457 = !DILocation(line: 512, column: 13, scope: !3453)
!3458 = !DILocation(line: 512, column: 17, scope: !3453)
!3459 = !DILocation(line: 513, column: 2, scope: !3434)
!3460 = !DILocation(line: 513, column: 6, scope: !3434)
!3461 = !DILocation(line: 513, column: 9, scope: !3434)
!3462 = !DILocation(line: 514, column: 6, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3434, file: !1, line: 514, column: 6)
!3464 = !DILocation(line: 514, column: 10, scope: !3463)
!3465 = !DILocation(line: 514, column: 6, scope: !3434)
!3466 = !DILocation(line: 515, column: 3, scope: !3463)
!3467 = !DILocation(line: 515, column: 13, scope: !3463)
!3468 = !DILocation(line: 515, column: 17, scope: !3463)
!3469 = !DILocation(line: 516, column: 2, scope: !3434)
!3470 = !DILocation(line: 516, column: 6, scope: !3434)
!3471 = !DILocation(line: 516, column: 13, scope: !3434)
!3472 = !DILocation(line: 517, column: 6, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3434, file: !1, line: 517, column: 6)
!3474 = !DILocation(line: 517, column: 10, scope: !3473)
!3475 = !DILocation(line: 517, column: 6, scope: !3434)
!3476 = !DILocation(line: 518, column: 3, scope: !3473)
!3477 = !DILocation(line: 518, column: 13, scope: !3473)
!3478 = !DILocation(line: 518, column: 17, scope: !3473)
!3479 = !DILocation(line: 519, column: 2, scope: !3434)
!3480 = !DILocation(line: 519, column: 6, scope: !3434)
!3481 = !DILocation(line: 519, column: 13, scope: !3434)
!3482 = !DILocation(line: 522, column: 2, scope: !3434)
!3483 = !DILocation(line: 522, column: 12, scope: !3434)
!3484 = !DILocation(line: 524, column: 1, scope: !3434)
!3485 = distinct !DISubprogram(name: "BKE_nurb_duplicate", scope: !1, file: !1, line: 542, type: !3486, scopeLine: 543, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!3486 = !DISubroutineType(types: !3487)
!3487 = !{!1787, !1782}
!3488 = !DILocalVariable(name: "nu", arg: 1, scope: !3485, file: !1, line: 542, type: !1782)
!3489 = !DILocation(line: 542, column: 32, scope: !3485)
!3490 = !DILocalVariable(name: "newnu", scope: !3485, file: !1, line: 544, type: !1782)
!3491 = !DILocation(line: 544, column: 8, scope: !3485)
!3492 = !DILocalVariable(name: "len", scope: !3485, file: !1, line: 545, type: !79)
!3493 = !DILocation(line: 545, column: 6, scope: !3485)
!3494 = !DILocation(line: 547, column: 18, scope: !3485)
!3495 = !DILocation(line: 547, column: 10, scope: !3485)
!3496 = !DILocation(line: 547, column: 8, scope: !3485)
!3497 = !DILocation(line: 548, column: 6, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3485, file: !1, line: 548, column: 6)
!3499 = !DILocation(line: 548, column: 12, scope: !3498)
!3500 = !DILocation(line: 548, column: 6, scope: !3485)
!3501 = !DILocation(line: 548, column: 21, scope: !3498)
!3502 = !DILocation(line: 549, column: 9, scope: !3485)
!3503 = !DILocation(line: 549, column: 2, scope: !3485)
!3504 = !DILocation(line: 549, column: 16, scope: !3485)
!3505 = !DILocation(line: 551, column: 6, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3485, file: !1, line: 551, column: 6)
!3507 = !DILocation(line: 551, column: 10, scope: !3506)
!3508 = !DILocation(line: 551, column: 6, scope: !3485)
!3509 = !DILocation(line: 553, column: 20, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3506, file: !1, line: 551, column: 16)
!3511 = !DILocation(line: 553, column: 33, scope: !3510)
!3512 = !DILocation(line: 553, column: 37, scope: !3510)
!3513 = !DILocation(line: 553, column: 32, scope: !3510)
!3514 = !DILocation(line: 553, column: 44, scope: !3510)
!3515 = !DILocation(line: 553, column: 7, scope: !3510)
!3516 = !DILocation(line: 552, column: 3, scope: !3510)
!3517 = !DILocation(line: 552, column: 10, scope: !3510)
!3518 = !DILocation(line: 552, column: 15, scope: !3510)
!3519 = !DILocation(line: 554, column: 10, scope: !3510)
!3520 = !DILocation(line: 554, column: 17, scope: !3510)
!3521 = !DILocation(line: 554, column: 3, scope: !3510)
!3522 = !DILocation(line: 554, column: 23, scope: !3510)
!3523 = !DILocation(line: 554, column: 27, scope: !3510)
!3524 = !DILocation(line: 554, column: 33, scope: !3510)
!3525 = !DILocation(line: 554, column: 37, scope: !3510)
!3526 = !DILocation(line: 554, column: 43, scope: !3510)
!3527 = !DILocation(line: 555, column: 2, scope: !3510)
!3528 = !DILocation(line: 557, column: 9, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3506, file: !1, line: 556, column: 7)
!3530 = !DILocation(line: 557, column: 13, scope: !3529)
!3531 = !DILocation(line: 557, column: 21, scope: !3529)
!3532 = !DILocation(line: 557, column: 25, scope: !3529)
!3533 = !DILocation(line: 557, column: 19, scope: !3529)
!3534 = !DILocation(line: 557, column: 7, scope: !3529)
!3535 = !DILocation(line: 559, column: 17, scope: !3529)
!3536 = !DILocation(line: 559, column: 30, scope: !3529)
!3537 = !DILocation(line: 559, column: 29, scope: !3529)
!3538 = !DILocation(line: 559, column: 35, scope: !3529)
!3539 = !DILocation(line: 559, column: 7, scope: !3529)
!3540 = !DILocation(line: 558, column: 3, scope: !3529)
!3541 = !DILocation(line: 558, column: 10, scope: !3529)
!3542 = !DILocation(line: 558, column: 13, scope: !3529)
!3543 = !DILocation(line: 560, column: 10, scope: !3529)
!3544 = !DILocation(line: 560, column: 17, scope: !3529)
!3545 = !DILocation(line: 560, column: 3, scope: !3529)
!3546 = !DILocation(line: 560, column: 21, scope: !3529)
!3547 = !DILocation(line: 560, column: 25, scope: !3529)
!3548 = !DILocation(line: 560, column: 29, scope: !3529)
!3549 = !DILocation(line: 560, column: 33, scope: !3529)
!3550 = !DILocation(line: 562, column: 19, scope: !3529)
!3551 = !DILocation(line: 562, column: 26, scope: !3529)
!3552 = !DILocation(line: 562, column: 33, scope: !3529)
!3553 = !DILocation(line: 562, column: 3, scope: !3529)
!3554 = !DILocation(line: 562, column: 10, scope: !3529)
!3555 = !DILocation(line: 562, column: 17, scope: !3529)
!3556 = !DILocation(line: 564, column: 7, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3529, file: !1, line: 564, column: 7)
!3558 = !DILocation(line: 564, column: 11, scope: !3557)
!3559 = !DILocation(line: 564, column: 7, scope: !3529)
!3560 = !DILocation(line: 565, column: 10, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3557, file: !1, line: 564, column: 19)
!3562 = !DILocation(line: 565, column: 8, scope: !3561)
!3563 = !DILocation(line: 566, column: 8, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3561, file: !1, line: 566, column: 8)
!3565 = !DILocation(line: 566, column: 8, scope: !3561)
!3566 = !DILocation(line: 567, column: 21, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3564, file: !1, line: 566, column: 13)
!3568 = !DILocation(line: 567, column: 33, scope: !3567)
!3569 = !DILocation(line: 567, column: 37, scope: !3567)
!3570 = !DILocation(line: 567, column: 5, scope: !3567)
!3571 = !DILocation(line: 567, column: 12, scope: !3567)
!3572 = !DILocation(line: 567, column: 19, scope: !3567)
!3573 = !DILocation(line: 568, column: 12, scope: !3567)
!3574 = !DILocation(line: 568, column: 19, scope: !3567)
!3575 = !DILocation(line: 568, column: 5, scope: !3567)
!3576 = !DILocation(line: 568, column: 27, scope: !3567)
!3577 = !DILocation(line: 568, column: 31, scope: !3567)
!3578 = !DILocation(line: 568, column: 55, scope: !3567)
!3579 = !DILocation(line: 568, column: 53, scope: !3567)
!3580 = !DILocation(line: 569, column: 4, scope: !3567)
!3581 = !DILocation(line: 570, column: 3, scope: !3561)
!3582 = !DILocation(line: 571, column: 7, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3529, file: !1, line: 571, column: 7)
!3584 = !DILocation(line: 571, column: 11, scope: !3583)
!3585 = !DILocation(line: 571, column: 17, scope: !3583)
!3586 = !DILocation(line: 571, column: 21, scope: !3583)
!3587 = !DILocation(line: 571, column: 24, scope: !3583)
!3588 = !DILocation(line: 571, column: 28, scope: !3583)
!3589 = !DILocation(line: 571, column: 7, scope: !3529)
!3590 = !DILocation(line: 572, column: 10, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3583, file: !1, line: 571, column: 36)
!3592 = !DILocation(line: 572, column: 8, scope: !3591)
!3593 = !DILocation(line: 573, column: 8, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3591, file: !1, line: 573, column: 8)
!3595 = !DILocation(line: 573, column: 8, scope: !3591)
!3596 = !DILocation(line: 574, column: 21, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3594, file: !1, line: 573, column: 13)
!3598 = !DILocation(line: 574, column: 33, scope: !3597)
!3599 = !DILocation(line: 574, column: 37, scope: !3597)
!3600 = !DILocation(line: 574, column: 5, scope: !3597)
!3601 = !DILocation(line: 574, column: 12, scope: !3597)
!3602 = !DILocation(line: 574, column: 19, scope: !3597)
!3603 = !DILocation(line: 575, column: 12, scope: !3597)
!3604 = !DILocation(line: 575, column: 19, scope: !3597)
!3605 = !DILocation(line: 575, column: 5, scope: !3597)
!3606 = !DILocation(line: 575, column: 27, scope: !3597)
!3607 = !DILocation(line: 575, column: 31, scope: !3597)
!3608 = !DILocation(line: 575, column: 55, scope: !3597)
!3609 = !DILocation(line: 575, column: 53, scope: !3597)
!3610 = !DILocation(line: 576, column: 4, scope: !3597)
!3611 = !DILocation(line: 577, column: 3, scope: !3591)
!3612 = !DILocation(line: 579, column: 9, scope: !3485)
!3613 = !DILocation(line: 579, column: 2, scope: !3485)
!3614 = !DILocation(line: 580, column: 1, scope: !3485)
!3615 = distinct !DISubprogram(name: "BKE_nurb_copy", scope: !1, file: !1, line: 583, type: !3616, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!3616 = !DISubroutineType(types: !3617)
!3617 = !{!1787, !1782, !79, !79}
!3618 = !DILocalVariable(name: "src", arg: 1, scope: !3615, file: !1, line: 583, type: !1782)
!3619 = !DILocation(line: 583, column: 27, scope: !3615)
!3620 = !DILocalVariable(name: "pntsu", arg: 2, scope: !3615, file: !1, line: 583, type: !79)
!3621 = !DILocation(line: 583, column: 36, scope: !3615)
!3622 = !DILocalVariable(name: "pntsv", arg: 3, scope: !3615, file: !1, line: 583, type: !79)
!3623 = !DILocation(line: 583, column: 47, scope: !3615)
!3624 = !DILocalVariable(name: "newnu", scope: !3615, file: !1, line: 585, type: !1782)
!3625 = !DILocation(line: 585, column: 8, scope: !3615)
!3626 = !DILocation(line: 585, column: 24, scope: !3615)
!3627 = !DILocation(line: 585, column: 16, scope: !3615)
!3628 = !DILocation(line: 586, column: 9, scope: !3615)
!3629 = !DILocation(line: 586, column: 2, scope: !3615)
!3630 = !DILocation(line: 586, column: 16, scope: !3615)
!3631 = !DILocation(line: 588, column: 6, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3615, file: !1, line: 588, column: 6)
!3633 = !DILocation(line: 588, column: 12, scope: !3632)
!3634 = !DILocation(line: 588, column: 6, scope: !3615)
!3635 = !DILocalVariable(name: "sw_ap", scope: !3636, file: !1, line: 588, type: !79)
!3636 = distinct !DILexicalBlock(scope: !3632, file: !1, line: 588, column: 18)
!3637 = !DILocation(line: 588, column: 18, scope: !3636)
!3638 = !DILocation(line: 589, column: 17, scope: !3615)
!3639 = !DILocation(line: 589, column: 2, scope: !3615)
!3640 = !DILocation(line: 589, column: 9, scope: !3615)
!3641 = !DILocation(line: 589, column: 15, scope: !3615)
!3642 = !DILocation(line: 590, column: 17, scope: !3615)
!3643 = !DILocation(line: 590, column: 2, scope: !3615)
!3644 = !DILocation(line: 590, column: 9, scope: !3615)
!3645 = !DILocation(line: 590, column: 15, scope: !3615)
!3646 = !DILocation(line: 592, column: 6, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3615, file: !1, line: 592, column: 6)
!3648 = !DILocation(line: 592, column: 11, scope: !3647)
!3649 = !DILocation(line: 592, column: 6, scope: !3615)
!3650 = !DILocation(line: 593, column: 30, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3647, file: !1, line: 592, column: 17)
!3652 = !DILocation(line: 593, column: 42, scope: !3651)
!3653 = !DILocation(line: 593, column: 50, scope: !3651)
!3654 = !DILocation(line: 593, column: 48, scope: !3651)
!3655 = !DILocation(line: 593, column: 56, scope: !3651)
!3656 = !DILocation(line: 593, column: 17, scope: !3651)
!3657 = !DILocation(line: 593, column: 3, scope: !3651)
!3658 = !DILocation(line: 593, column: 10, scope: !3651)
!3659 = !DILocation(line: 593, column: 15, scope: !3651)
!3660 = !DILocation(line: 594, column: 2, scope: !3651)
!3661 = !DILocation(line: 596, column: 25, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3647, file: !1, line: 595, column: 7)
!3663 = !DILocation(line: 596, column: 37, scope: !3662)
!3664 = !DILocation(line: 596, column: 45, scope: !3662)
!3665 = !DILocation(line: 596, column: 43, scope: !3662)
!3666 = !DILocation(line: 596, column: 51, scope: !3662)
!3667 = !DILocation(line: 596, column: 15, scope: !3662)
!3668 = !DILocation(line: 596, column: 3, scope: !3662)
!3669 = !DILocation(line: 596, column: 10, scope: !3662)
!3670 = !DILocation(line: 596, column: 13, scope: !3662)
!3671 = !DILocation(line: 599, column: 9, scope: !3615)
!3672 = !DILocation(line: 599, column: 2, scope: !3615)
!3673 = distinct !DISubprogram(name: "BKE_nurb_minmax", scope: !1, file: !1, line: 650, type: !3674, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!3674 = !DISubroutineType(types: !3675)
!3675 = !{null, !1782, !551, !1325, !1325}
!3676 = !DILocalVariable(name: "nu", arg: 1, scope: !3673, file: !1, line: 650, type: !1782)
!3677 = !DILocation(line: 650, column: 28, scope: !3673)
!3678 = !DILocalVariable(name: "use_radius", arg: 2, scope: !3673, file: !1, line: 650, type: !551)
!3679 = !DILocation(line: 650, column: 37, scope: !3673)
!3680 = !DILocalVariable(name: "min", arg: 3, scope: !3673, file: !1, line: 650, type: !1325)
!3681 = !DILocation(line: 650, column: 55, scope: !3673)
!3682 = !DILocalVariable(name: "max", arg: 4, scope: !3673, file: !1, line: 650, type: !1325)
!3683 = !DILocation(line: 650, column: 69, scope: !3673)
!3684 = !DILocalVariable(name: "bezt", scope: !3673, file: !1, line: 652, type: !1817)
!3685 = !DILocation(line: 652, column: 13, scope: !3673)
!3686 = !DILocalVariable(name: "bp", scope: !3673, file: !1, line: 653, type: !1805)
!3687 = !DILocation(line: 653, column: 10, scope: !3673)
!3688 = !DILocalVariable(name: "a", scope: !3673, file: !1, line: 654, type: !79)
!3689 = !DILocation(line: 654, column: 6, scope: !3673)
!3690 = !DILocalVariable(name: "point", scope: !3673, file: !1, line: 655, type: !201)
!3691 = !DILocation(line: 655, column: 8, scope: !3673)
!3692 = !DILocation(line: 657, column: 6, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3673, file: !1, line: 657, column: 6)
!3694 = !DILocation(line: 657, column: 10, scope: !3693)
!3695 = !DILocation(line: 657, column: 15, scope: !3693)
!3696 = !DILocation(line: 657, column: 6, scope: !3673)
!3697 = !DILocation(line: 658, column: 7, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3693, file: !1, line: 657, column: 29)
!3699 = !DILocation(line: 658, column: 11, scope: !3698)
!3700 = !DILocation(line: 658, column: 5, scope: !3698)
!3701 = !DILocation(line: 659, column: 10, scope: !3698)
!3702 = !DILocation(line: 659, column: 14, scope: !3698)
!3703 = !DILocation(line: 659, column: 8, scope: !3698)
!3704 = !DILocation(line: 660, column: 3, scope: !3698)
!3705 = !DILocation(line: 660, column: 11, scope: !3698)
!3706 = !DILocation(line: 661, column: 8, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3708, file: !1, line: 661, column: 8)
!3708 = distinct !DILexicalBlock(scope: !3698, file: !1, line: 660, column: 15)
!3709 = !DILocation(line: 661, column: 8, scope: !3708)
!3710 = !DILocalVariable(name: "radius_vector", scope: !3711, file: !1, line: 662, type: !201)
!3711 = distinct !DILexicalBlock(scope: !3707, file: !1, line: 661, column: 20)
!3712 = !DILocation(line: 662, column: 11, scope: !3711)
!3713 = !DILocation(line: 663, column: 62, scope: !3711)
!3714 = !DILocation(line: 663, column: 68, scope: !3711)
!3715 = !DILocation(line: 663, column: 43, scope: !3711)
!3716 = !DILocation(line: 663, column: 60, scope: !3711)
!3717 = !DILocation(line: 663, column: 24, scope: !3711)
!3718 = !DILocation(line: 663, column: 41, scope: !3711)
!3719 = !DILocation(line: 663, column: 5, scope: !3711)
!3720 = !DILocation(line: 663, column: 22, scope: !3711)
!3721 = !DILocation(line: 665, column: 17, scope: !3711)
!3722 = !DILocation(line: 665, column: 24, scope: !3711)
!3723 = !DILocation(line: 665, column: 30, scope: !3711)
!3724 = !DILocation(line: 665, column: 38, scope: !3711)
!3725 = !DILocation(line: 665, column: 5, scope: !3711)
!3726 = !DILocation(line: 666, column: 20, scope: !3711)
!3727 = !DILocation(line: 666, column: 25, scope: !3711)
!3728 = !DILocation(line: 666, column: 30, scope: !3711)
!3729 = !DILocation(line: 666, column: 5, scope: !3711)
!3730 = !DILocation(line: 668, column: 17, scope: !3711)
!3731 = !DILocation(line: 668, column: 24, scope: !3711)
!3732 = !DILocation(line: 668, column: 30, scope: !3711)
!3733 = !DILocation(line: 668, column: 38, scope: !3711)
!3734 = !DILocation(line: 668, column: 5, scope: !3711)
!3735 = !DILocation(line: 669, column: 20, scope: !3711)
!3736 = !DILocation(line: 669, column: 25, scope: !3711)
!3737 = !DILocation(line: 669, column: 30, scope: !3711)
!3738 = !DILocation(line: 669, column: 5, scope: !3711)
!3739 = !DILocation(line: 670, column: 4, scope: !3711)
!3740 = !DILocation(line: 672, column: 20, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3707, file: !1, line: 671, column: 9)
!3742 = !DILocation(line: 672, column: 25, scope: !3741)
!3743 = !DILocation(line: 672, column: 30, scope: !3741)
!3744 = !DILocation(line: 672, column: 36, scope: !3741)
!3745 = !DILocation(line: 672, column: 5, scope: !3741)
!3746 = !DILocation(line: 674, column: 19, scope: !3708)
!3747 = !DILocation(line: 674, column: 24, scope: !3708)
!3748 = !DILocation(line: 674, column: 29, scope: !3708)
!3749 = !DILocation(line: 674, column: 35, scope: !3708)
!3750 = !DILocation(line: 674, column: 4, scope: !3708)
!3751 = !DILocation(line: 675, column: 19, scope: !3708)
!3752 = !DILocation(line: 675, column: 24, scope: !3708)
!3753 = !DILocation(line: 675, column: 29, scope: !3708)
!3754 = !DILocation(line: 675, column: 35, scope: !3708)
!3755 = !DILocation(line: 675, column: 4, scope: !3708)
!3756 = !DILocation(line: 676, column: 8, scope: !3708)
!3757 = distinct !{!3757, !3704, !3758}
!3758 = !DILocation(line: 677, column: 3, scope: !3698)
!3759 = !DILocation(line: 678, column: 2, scope: !3698)
!3760 = !DILocation(line: 680, column: 7, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3693, file: !1, line: 679, column: 7)
!3762 = !DILocation(line: 680, column: 11, scope: !3761)
!3763 = !DILocation(line: 680, column: 19, scope: !3761)
!3764 = !DILocation(line: 680, column: 23, scope: !3761)
!3765 = !DILocation(line: 680, column: 17, scope: !3761)
!3766 = !DILocation(line: 680, column: 5, scope: !3761)
!3767 = !DILocation(line: 681, column: 8, scope: !3761)
!3768 = !DILocation(line: 681, column: 12, scope: !3761)
!3769 = !DILocation(line: 681, column: 6, scope: !3761)
!3770 = !DILocation(line: 682, column: 3, scope: !3761)
!3771 = !DILocation(line: 682, column: 11, scope: !3761)
!3772 = !DILocation(line: 683, column: 8, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3774, file: !1, line: 683, column: 8)
!3774 = distinct !DILexicalBlock(scope: !3761, file: !1, line: 682, column: 15)
!3775 = !DILocation(line: 683, column: 12, scope: !3773)
!3776 = !DILocation(line: 683, column: 18, scope: !3773)
!3777 = !DILocation(line: 683, column: 23, scope: !3773)
!3778 = !DILocation(line: 683, column: 26, scope: !3773)
!3779 = !DILocation(line: 683, column: 8, scope: !3774)
!3780 = !DILocalVariable(name: "radius_vector", scope: !3781, file: !1, line: 684, type: !201)
!3781 = distinct !DILexicalBlock(scope: !3773, file: !1, line: 683, column: 38)
!3782 = !DILocation(line: 684, column: 11, scope: !3781)
!3783 = !DILocation(line: 685, column: 62, scope: !3781)
!3784 = !DILocation(line: 685, column: 66, scope: !3781)
!3785 = !DILocation(line: 685, column: 43, scope: !3781)
!3786 = !DILocation(line: 685, column: 60, scope: !3781)
!3787 = !DILocation(line: 685, column: 24, scope: !3781)
!3788 = !DILocation(line: 685, column: 41, scope: !3781)
!3789 = !DILocation(line: 685, column: 5, scope: !3781)
!3790 = !DILocation(line: 685, column: 22, scope: !3781)
!3791 = !DILocation(line: 687, column: 17, scope: !3781)
!3792 = !DILocation(line: 687, column: 24, scope: !3781)
!3793 = !DILocation(line: 687, column: 28, scope: !3781)
!3794 = !DILocation(line: 687, column: 33, scope: !3781)
!3795 = !DILocation(line: 687, column: 5, scope: !3781)
!3796 = !DILocation(line: 688, column: 20, scope: !3781)
!3797 = !DILocation(line: 688, column: 25, scope: !3781)
!3798 = !DILocation(line: 688, column: 30, scope: !3781)
!3799 = !DILocation(line: 688, column: 5, scope: !3781)
!3800 = !DILocation(line: 690, column: 17, scope: !3781)
!3801 = !DILocation(line: 690, column: 24, scope: !3781)
!3802 = !DILocation(line: 690, column: 28, scope: !3781)
!3803 = !DILocation(line: 690, column: 33, scope: !3781)
!3804 = !DILocation(line: 690, column: 5, scope: !3781)
!3805 = !DILocation(line: 691, column: 20, scope: !3781)
!3806 = !DILocation(line: 691, column: 25, scope: !3781)
!3807 = !DILocation(line: 691, column: 30, scope: !3781)
!3808 = !DILocation(line: 691, column: 5, scope: !3781)
!3809 = !DILocation(line: 692, column: 4, scope: !3781)
!3810 = !DILocation(line: 695, column: 20, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3773, file: !1, line: 693, column: 9)
!3812 = !DILocation(line: 695, column: 25, scope: !3811)
!3813 = !DILocation(line: 695, column: 30, scope: !3811)
!3814 = !DILocation(line: 695, column: 34, scope: !3811)
!3815 = !DILocation(line: 695, column: 5, scope: !3811)
!3816 = !DILocation(line: 697, column: 6, scope: !3774)
!3817 = distinct !{!3817, !3770, !3818}
!3818 = !DILocation(line: 698, column: 3, scope: !3761)
!3819 = !DILocation(line: 700, column: 1, scope: !3673)
!3820 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !2341, file: !2341, line: 309, type: !3821, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!3821 = !DISubroutineType(types: !3822)
!3822 = !{null, !1325, !3191, !3191}
!3823 = !DILocalVariable(name: "r", arg: 1, scope: !3820, file: !2341, line: 309, type: !1325)
!3824 = !DILocation(line: 309, column: 32, scope: !3820)
!3825 = !DILocalVariable(name: "a", arg: 2, scope: !3820, file: !2341, line: 309, type: !3191)
!3826 = !DILocation(line: 309, column: 50, scope: !3820)
!3827 = !DILocalVariable(name: "b", arg: 3, scope: !3820, file: !2341, line: 309, type: !3191)
!3828 = !DILocation(line: 309, column: 68, scope: !3820)
!3829 = !DILocation(line: 311, column: 9, scope: !3820)
!3830 = !DILocation(line: 311, column: 16, scope: !3820)
!3831 = !DILocation(line: 311, column: 14, scope: !3820)
!3832 = !DILocation(line: 311, column: 2, scope: !3820)
!3833 = !DILocation(line: 311, column: 7, scope: !3820)
!3834 = !DILocation(line: 312, column: 9, scope: !3820)
!3835 = !DILocation(line: 312, column: 16, scope: !3820)
!3836 = !DILocation(line: 312, column: 14, scope: !3820)
!3837 = !DILocation(line: 312, column: 2, scope: !3820)
!3838 = !DILocation(line: 312, column: 7, scope: !3820)
!3839 = !DILocation(line: 313, column: 9, scope: !3820)
!3840 = !DILocation(line: 313, column: 16, scope: !3820)
!3841 = !DILocation(line: 313, column: 14, scope: !3820)
!3842 = !DILocation(line: 313, column: 2, scope: !3820)
!3843 = !DILocation(line: 313, column: 7, scope: !3820)
!3844 = !DILocation(line: 314, column: 1, scope: !3820)
!3845 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !2341, file: !2341, line: 357, type: !3821, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!3846 = !DILocalVariable(name: "r", arg: 1, scope: !3845, file: !2341, line: 357, type: !1325)
!3847 = !DILocation(line: 357, column: 32, scope: !3845)
!3848 = !DILocalVariable(name: "a", arg: 2, scope: !3845, file: !2341, line: 357, type: !3191)
!3849 = !DILocation(line: 357, column: 50, scope: !3845)
!3850 = !DILocalVariable(name: "b", arg: 3, scope: !3845, file: !2341, line: 357, type: !3191)
!3851 = !DILocation(line: 357, column: 68, scope: !3845)
!3852 = !DILocation(line: 359, column: 9, scope: !3845)
!3853 = !DILocation(line: 359, column: 16, scope: !3845)
!3854 = !DILocation(line: 359, column: 14, scope: !3845)
!3855 = !DILocation(line: 359, column: 2, scope: !3845)
!3856 = !DILocation(line: 359, column: 7, scope: !3845)
!3857 = !DILocation(line: 360, column: 9, scope: !3845)
!3858 = !DILocation(line: 360, column: 16, scope: !3845)
!3859 = !DILocation(line: 360, column: 14, scope: !3845)
!3860 = !DILocation(line: 360, column: 2, scope: !3845)
!3861 = !DILocation(line: 360, column: 7, scope: !3845)
!3862 = !DILocation(line: 361, column: 9, scope: !3845)
!3863 = !DILocation(line: 361, column: 16, scope: !3845)
!3864 = !DILocation(line: 361, column: 14, scope: !3845)
!3865 = !DILocation(line: 361, column: 2, scope: !3845)
!3866 = !DILocation(line: 361, column: 7, scope: !3845)
!3867 = !DILocation(line: 362, column: 1, scope: !3845)
!3868 = distinct !DISubprogram(name: "BKE_nurb_points_add", scope: !1, file: !1, line: 703, type: !3869, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!3869 = !DISubroutineType(types: !3870)
!3870 = !{null, !1782, !79}
!3871 = !DILocalVariable(name: "nu", arg: 1, scope: !3868, file: !1, line: 703, type: !1782)
!3872 = !DILocation(line: 703, column: 32, scope: !3868)
!3873 = !DILocalVariable(name: "number", arg: 2, scope: !3868, file: !1, line: 703, type: !79)
!3874 = !DILocation(line: 703, column: 40, scope: !3868)
!3875 = !DILocalVariable(name: "bp", scope: !3868, file: !1, line: 705, type: !1805)
!3876 = !DILocation(line: 705, column: 10, scope: !3868)
!3877 = !DILocalVariable(name: "i", scope: !3868, file: !1, line: 706, type: !79)
!3878 = !DILocation(line: 706, column: 6, scope: !3868)
!3879 = !DILocation(line: 708, column: 11, scope: !3868)
!3880 = !DILocation(line: 708, column: 2, scope: !3868)
!3881 = !DILocation(line: 708, column: 6, scope: !3868)
!3882 = !DILocation(line: 708, column: 9, scope: !3868)
!3883 = !DILocation(line: 710, column: 9, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3868, file: !1, line: 710, column: 2)
!3885 = !DILocation(line: 710, column: 20, scope: !3884)
!3886 = !DILocation(line: 710, column: 24, scope: !3884)
!3887 = !DILocation(line: 710, column: 27, scope: !3884)
!3888 = !DILocation(line: 710, column: 31, scope: !3884)
!3889 = !DILocation(line: 710, column: 17, scope: !3884)
!3890 = !DILocation(line: 710, column: 7, scope: !3884)
!3891 = !DILocation(line: 710, column: 39, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3884, file: !1, line: 710, column: 2)
!3893 = !DILocation(line: 710, column: 43, scope: !3892)
!3894 = !DILocation(line: 710, column: 41, scope: !3892)
!3895 = !DILocation(line: 710, column: 2, scope: !3884)
!3896 = !DILocation(line: 711, column: 3, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3892, file: !1, line: 710, column: 62)
!3898 = !DILocation(line: 711, column: 7, scope: !3897)
!3899 = !DILocation(line: 711, column: 14, scope: !3897)
!3900 = !DILocation(line: 712, column: 2, scope: !3897)
!3901 = !DILocation(line: 710, column: 52, scope: !3892)
!3902 = !DILocation(line: 710, column: 58, scope: !3892)
!3903 = !DILocation(line: 710, column: 2, scope: !3892)
!3904 = distinct !{!3904, !3895, !3905}
!3905 = !DILocation(line: 712, column: 2, scope: !3884)
!3906 = !DILocation(line: 714, column: 15, scope: !3868)
!3907 = !DILocation(line: 714, column: 2, scope: !3868)
!3908 = !DILocation(line: 714, column: 6, scope: !3868)
!3909 = !DILocation(line: 714, column: 12, scope: !3868)
!3910 = !DILocation(line: 715, column: 1, scope: !3868)
!3911 = distinct !DISubprogram(name: "BKE_nurb_bezierPoints_add", scope: !1, file: !1, line: 717, type: !3869, scopeLine: 718, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!3912 = !DILocalVariable(name: "nu", arg: 1, scope: !3911, file: !1, line: 717, type: !1782)
!3913 = !DILocation(line: 717, column: 38, scope: !3911)
!3914 = !DILocalVariable(name: "number", arg: 2, scope: !3911, file: !1, line: 717, type: !79)
!3915 = !DILocation(line: 717, column: 46, scope: !3911)
!3916 = !DILocalVariable(name: "bezt", scope: !3911, file: !1, line: 719, type: !1817)
!3917 = !DILocation(line: 719, column: 13, scope: !3911)
!3918 = !DILocalVariable(name: "i", scope: !3911, file: !1, line: 720, type: !79)
!3919 = !DILocation(line: 720, column: 6, scope: !3911)
!3920 = !DILocation(line: 722, column: 13, scope: !3911)
!3921 = !DILocation(line: 722, column: 2, scope: !3911)
!3922 = !DILocation(line: 722, column: 6, scope: !3911)
!3923 = !DILocation(line: 722, column: 11, scope: !3911)
!3924 = !DILocation(line: 724, column: 9, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3911, file: !1, line: 724, column: 2)
!3926 = !DILocation(line: 724, column: 22, scope: !3925)
!3927 = !DILocation(line: 724, column: 26, scope: !3925)
!3928 = !DILocation(line: 724, column: 31, scope: !3925)
!3929 = !DILocation(line: 724, column: 35, scope: !3925)
!3930 = !DILocation(line: 724, column: 19, scope: !3925)
!3931 = !DILocation(line: 724, column: 7, scope: !3925)
!3932 = !DILocation(line: 724, column: 43, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3925, file: !1, line: 724, column: 2)
!3934 = !DILocation(line: 724, column: 47, scope: !3933)
!3935 = !DILocation(line: 724, column: 45, scope: !3933)
!3936 = !DILocation(line: 724, column: 2, scope: !3925)
!3937 = !DILocation(line: 725, column: 3, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3933, file: !1, line: 724, column: 68)
!3939 = !DILocation(line: 725, column: 9, scope: !3938)
!3940 = !DILocation(line: 725, column: 16, scope: !3938)
!3941 = !DILocation(line: 726, column: 2, scope: !3938)
!3942 = !DILocation(line: 724, column: 56, scope: !3933)
!3943 = !DILocation(line: 724, column: 64, scope: !3933)
!3944 = !DILocation(line: 724, column: 2, scope: !3933)
!3945 = distinct !{!3945, !3936, !3946}
!3946 = !DILocation(line: 726, column: 2, scope: !3925)
!3947 = !DILocation(line: 728, column: 15, scope: !3911)
!3948 = !DILocation(line: 728, column: 2, scope: !3911)
!3949 = !DILocation(line: 728, column: 6, scope: !3911)
!3950 = !DILocation(line: 728, column: 12, scope: !3911)
!3951 = !DILocation(line: 729, column: 1, scope: !3911)
!3952 = distinct !DISubprogram(name: "BKE_nurb_bezt_get_next", scope: !1, file: !1, line: 732, type: !3953, scopeLine: 733, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!3953 = !DISubroutineType(types: !3954)
!3954 = !{!3955, !1782, !1817}
!3955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!3956 = !DILocalVariable(name: "nu", arg: 1, scope: !3952, file: !1, line: 732, type: !1782)
!3957 = !DILocation(line: 732, column: 41, scope: !3952)
!3958 = !DILocalVariable(name: "bezt", arg: 2, scope: !3952, file: !1, line: 732, type: !1817)
!3959 = !DILocation(line: 732, column: 56, scope: !3952)
!3960 = !DILocalVariable(name: "bezt_next", scope: !3952, file: !1, line: 734, type: !1817)
!3961 = !DILocation(line: 734, column: 13, scope: !3952)
!3962 = !DILocation(line: 738, column: 6, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3952, file: !1, line: 738, column: 6)
!3964 = !DILocation(line: 738, column: 15, scope: !3963)
!3965 = !DILocation(line: 738, column: 19, scope: !3963)
!3966 = !DILocation(line: 738, column: 24, scope: !3963)
!3967 = !DILocation(line: 738, column: 28, scope: !3963)
!3968 = !DILocation(line: 738, column: 34, scope: !3963)
!3969 = !DILocation(line: 738, column: 11, scope: !3963)
!3970 = !DILocation(line: 738, column: 6, scope: !3952)
!3971 = !DILocation(line: 739, column: 7, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3973, file: !1, line: 739, column: 7)
!3973 = distinct !DILexicalBlock(scope: !3963, file: !1, line: 738, column: 40)
!3974 = !DILocation(line: 739, column: 11, scope: !3972)
!3975 = !DILocation(line: 739, column: 17, scope: !3972)
!3976 = !DILocation(line: 739, column: 7, scope: !3973)
!3977 = !DILocation(line: 740, column: 16, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 739, column: 35)
!3979 = !DILocation(line: 740, column: 20, scope: !3978)
!3980 = !DILocation(line: 740, column: 14, scope: !3978)
!3981 = !DILocation(line: 741, column: 3, scope: !3978)
!3982 = !DILocation(line: 743, column: 14, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3972, file: !1, line: 742, column: 8)
!3984 = !DILocation(line: 745, column: 2, scope: !3973)
!3985 = !DILocation(line: 747, column: 15, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3963, file: !1, line: 746, column: 7)
!3987 = !DILocation(line: 747, column: 20, scope: !3986)
!3988 = !DILocation(line: 747, column: 13, scope: !3986)
!3989 = !DILocation(line: 750, column: 9, scope: !3952)
!3990 = !DILocation(line: 750, column: 2, scope: !3952)
!3991 = distinct !DISubprogram(name: "BKE_nurb_bpoint_get_next", scope: !1, file: !1, line: 753, type: !3992, scopeLine: 754, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!3992 = !DISubroutineType(types: !3993)
!3993 = !{!3994, !1782, !1805}
!3994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!3995 = !DILocalVariable(name: "nu", arg: 1, scope: !3991, file: !1, line: 753, type: !1782)
!3996 = !DILocation(line: 753, column: 40, scope: !3991)
!3997 = !DILocalVariable(name: "bp", arg: 2, scope: !3991, file: !1, line: 753, type: !1805)
!3998 = !DILocation(line: 753, column: 52, scope: !3991)
!3999 = !DILocalVariable(name: "bp_next", scope: !3991, file: !1, line: 755, type: !1805)
!4000 = !DILocation(line: 755, column: 10, scope: !3991)
!4001 = !DILocation(line: 759, column: 6, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3991, file: !1, line: 759, column: 6)
!4003 = !DILocation(line: 759, column: 13, scope: !4002)
!4004 = !DILocation(line: 759, column: 17, scope: !4002)
!4005 = !DILocation(line: 759, column: 20, scope: !4002)
!4006 = !DILocation(line: 759, column: 24, scope: !4002)
!4007 = !DILocation(line: 759, column: 30, scope: !4002)
!4008 = !DILocation(line: 759, column: 9, scope: !4002)
!4009 = !DILocation(line: 759, column: 6, scope: !3991)
!4010 = !DILocation(line: 760, column: 7, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !4012, file: !1, line: 760, column: 7)
!4012 = distinct !DILexicalBlock(scope: !4002, file: !1, line: 759, column: 36)
!4013 = !DILocation(line: 760, column: 11, scope: !4011)
!4014 = !DILocation(line: 760, column: 17, scope: !4011)
!4015 = !DILocation(line: 760, column: 7, scope: !4012)
!4016 = !DILocation(line: 761, column: 14, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !4011, file: !1, line: 760, column: 35)
!4018 = !DILocation(line: 761, column: 18, scope: !4017)
!4019 = !DILocation(line: 761, column: 12, scope: !4017)
!4020 = !DILocation(line: 762, column: 3, scope: !4017)
!4021 = !DILocation(line: 764, column: 12, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4011, file: !1, line: 763, column: 8)
!4023 = !DILocation(line: 766, column: 2, scope: !4012)
!4024 = !DILocation(line: 768, column: 13, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !4002, file: !1, line: 767, column: 7)
!4026 = !DILocation(line: 768, column: 16, scope: !4025)
!4027 = !DILocation(line: 768, column: 11, scope: !4025)
!4028 = !DILocation(line: 771, column: 9, scope: !3991)
!4029 = !DILocation(line: 771, column: 2, scope: !3991)
!4030 = distinct !DISubprogram(name: "BKE_nurb_bezt_get_prev", scope: !1, file: !1, line: 774, type: !3953, scopeLine: 775, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!4031 = !DILocalVariable(name: "nu", arg: 1, scope: !4030, file: !1, line: 774, type: !1782)
!4032 = !DILocation(line: 774, column: 41, scope: !4030)
!4033 = !DILocalVariable(name: "bezt", arg: 2, scope: !4030, file: !1, line: 774, type: !1817)
!4034 = !DILocation(line: 774, column: 56, scope: !4030)
!4035 = !DILocalVariable(name: "bezt_prev", scope: !4030, file: !1, line: 776, type: !1817)
!4036 = !DILocation(line: 776, column: 13, scope: !4030)
!4037 = !DILocation(line: 780, column: 6, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4030, file: !1, line: 780, column: 6)
!4039 = !DILocation(line: 780, column: 14, scope: !4038)
!4040 = !DILocation(line: 780, column: 18, scope: !4038)
!4041 = !DILocation(line: 780, column: 11, scope: !4038)
!4042 = !DILocation(line: 780, column: 6, scope: !4030)
!4043 = !DILocation(line: 781, column: 7, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4045, file: !1, line: 781, column: 7)
!4045 = distinct !DILexicalBlock(scope: !4038, file: !1, line: 780, column: 24)
!4046 = !DILocation(line: 781, column: 11, scope: !4044)
!4047 = !DILocation(line: 781, column: 17, scope: !4044)
!4048 = !DILocation(line: 781, column: 7, scope: !4045)
!4049 = !DILocation(line: 782, column: 17, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4044, file: !1, line: 781, column: 35)
!4051 = !DILocation(line: 782, column: 21, scope: !4050)
!4052 = !DILocation(line: 782, column: 26, scope: !4050)
!4053 = !DILocation(line: 782, column: 30, scope: !4050)
!4054 = !DILocation(line: 782, column: 36, scope: !4050)
!4055 = !DILocation(line: 782, column: 14, scope: !4050)
!4056 = !DILocation(line: 783, column: 3, scope: !4050)
!4057 = !DILocation(line: 785, column: 14, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !4044, file: !1, line: 784, column: 8)
!4059 = !DILocation(line: 787, column: 2, scope: !4045)
!4060 = !DILocation(line: 789, column: 15, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4038, file: !1, line: 788, column: 7)
!4062 = !DILocation(line: 789, column: 20, scope: !4061)
!4063 = !DILocation(line: 789, column: 13, scope: !4061)
!4064 = !DILocation(line: 792, column: 9, scope: !4030)
!4065 = !DILocation(line: 792, column: 2, scope: !4030)
!4066 = distinct !DISubprogram(name: "BKE_nurb_bpoint_get_prev", scope: !1, file: !1, line: 795, type: !3992, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!4067 = !DILocalVariable(name: "nu", arg: 1, scope: !4066, file: !1, line: 795, type: !1782)
!4068 = !DILocation(line: 795, column: 40, scope: !4066)
!4069 = !DILocalVariable(name: "bp", arg: 2, scope: !4066, file: !1, line: 795, type: !1805)
!4070 = !DILocation(line: 795, column: 52, scope: !4066)
!4071 = !DILocalVariable(name: "bp_prev", scope: !4066, file: !1, line: 797, type: !1805)
!4072 = !DILocation(line: 797, column: 10, scope: !4066)
!4073 = !DILocation(line: 801, column: 6, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4066, file: !1, line: 801, column: 6)
!4075 = !DILocation(line: 801, column: 12, scope: !4074)
!4076 = !DILocation(line: 801, column: 16, scope: !4074)
!4077 = !DILocation(line: 801, column: 9, scope: !4074)
!4078 = !DILocation(line: 801, column: 6, scope: !4066)
!4079 = !DILocation(line: 802, column: 7, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4081, file: !1, line: 802, column: 7)
!4081 = distinct !DILexicalBlock(scope: !4074, file: !1, line: 801, column: 20)
!4082 = !DILocation(line: 802, column: 11, scope: !4080)
!4083 = !DILocation(line: 802, column: 17, scope: !4080)
!4084 = !DILocation(line: 802, column: 7, scope: !4081)
!4085 = !DILocation(line: 803, column: 15, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4080, file: !1, line: 802, column: 35)
!4087 = !DILocation(line: 803, column: 19, scope: !4086)
!4088 = !DILocation(line: 803, column: 22, scope: !4086)
!4089 = !DILocation(line: 803, column: 26, scope: !4086)
!4090 = !DILocation(line: 803, column: 32, scope: !4086)
!4091 = !DILocation(line: 803, column: 12, scope: !4086)
!4092 = !DILocation(line: 804, column: 3, scope: !4086)
!4093 = !DILocation(line: 806, column: 12, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4080, file: !1, line: 805, column: 8)
!4095 = !DILocation(line: 808, column: 2, scope: !4081)
!4096 = !DILocation(line: 810, column: 13, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4074, file: !1, line: 809, column: 7)
!4098 = !DILocation(line: 810, column: 16, scope: !4097)
!4099 = !DILocation(line: 810, column: 11, scope: !4097)
!4100 = !DILocation(line: 813, column: 9, scope: !4066)
!4101 = !DILocation(line: 813, column: 2, scope: !4066)
!4102 = distinct !DISubprogram(name: "BKE_nurb_bezt_calc_normal", scope: !1, file: !1, line: 816, type: !4103, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!4103 = !DISubroutineType(types: !4104)
!4104 = !{null, !1787, !3955, !1325}
!4105 = !DILocalVariable(name: "UNUSED_nu", arg: 1, scope: !4102, file: !1, line: 816, type: !1787)
!4106 = !DILocation(line: 816, column: 45, scope: !4102)
!4107 = !DILocalVariable(name: "bezt", arg: 2, scope: !4102, file: !1, line: 816, type: !3955)
!4108 = !DILocation(line: 816, column: 75, scope: !4102)
!4109 = !DILocalVariable(name: "r_normal", arg: 3, scope: !4102, file: !1, line: 816, type: !1325)
!4110 = !DILocation(line: 816, column: 87, scope: !4102)
!4111 = !DILocalVariable(name: "dir_prev", scope: !4102, file: !1, line: 819, type: !201)
!4112 = !DILocation(line: 819, column: 8, scope: !4102)
!4113 = !DILocalVariable(name: "dir_next", scope: !4102, file: !1, line: 819, type: !201)
!4114 = !DILocation(line: 819, column: 21, scope: !4102)
!4115 = !DILocation(line: 821, column: 14, scope: !4102)
!4116 = !DILocation(line: 821, column: 24, scope: !4102)
!4117 = !DILocation(line: 821, column: 30, scope: !4102)
!4118 = !DILocation(line: 821, column: 38, scope: !4102)
!4119 = !DILocation(line: 821, column: 44, scope: !4102)
!4120 = !DILocation(line: 821, column: 2, scope: !4102)
!4121 = !DILocation(line: 822, column: 14, scope: !4102)
!4122 = !DILocation(line: 822, column: 24, scope: !4102)
!4123 = !DILocation(line: 822, column: 30, scope: !4102)
!4124 = !DILocation(line: 822, column: 38, scope: !4102)
!4125 = !DILocation(line: 822, column: 44, scope: !4102)
!4126 = !DILocation(line: 822, column: 2, scope: !4102)
!4127 = !DILocation(line: 824, column: 15, scope: !4102)
!4128 = !DILocation(line: 824, column: 2, scope: !4102)
!4129 = !DILocation(line: 825, column: 15, scope: !4102)
!4130 = !DILocation(line: 825, column: 2, scope: !4102)
!4131 = !DILocation(line: 827, column: 14, scope: !4102)
!4132 = !DILocation(line: 827, column: 24, scope: !4102)
!4133 = !DILocation(line: 827, column: 34, scope: !4102)
!4134 = !DILocation(line: 827, column: 2, scope: !4102)
!4135 = !DILocation(line: 828, column: 15, scope: !4102)
!4136 = !DILocation(line: 828, column: 2, scope: !4102)
!4137 = !DILocation(line: 829, column: 1, scope: !4102)
!4138 = distinct !DISubprogram(name: "normalize_v3", scope: !2341, file: !2341, line: 830, type: !4139, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!4139 = !DISubroutineType(types: !4140)
!4140 = !{!128, !1325}
!4141 = !DILocalVariable(name: "n", arg: 1, scope: !4138, file: !2341, line: 830, type: !1325)
!4142 = !DILocation(line: 830, column: 34, scope: !4138)
!4143 = !DILocation(line: 832, column: 25, scope: !4138)
!4144 = !DILocation(line: 832, column: 28, scope: !4138)
!4145 = !DILocation(line: 832, column: 9, scope: !4138)
!4146 = !DILocation(line: 832, column: 2, scope: !4138)
!4147 = distinct !DISubprogram(name: "BKE_nurb_bezt_calc_plane", scope: !1, file: !1, line: 831, type: !4103, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!4148 = !DILocalVariable(name: "nu", arg: 1, scope: !4147, file: !1, line: 831, type: !1787)
!4149 = !DILocation(line: 831, column: 44, scope: !4147)
!4150 = !DILocalVariable(name: "bezt", arg: 2, scope: !4147, file: !1, line: 831, type: !3955)
!4151 = !DILocation(line: 831, column: 66, scope: !4147)
!4152 = !DILocalVariable(name: "r_plane", arg: 3, scope: !4147, file: !1, line: 831, type: !1325)
!4153 = !DILocation(line: 831, column: 78, scope: !4147)
!4154 = !DILocalVariable(name: "dir_prev", scope: !4147, file: !1, line: 833, type: !201)
!4155 = !DILocation(line: 833, column: 8, scope: !4147)
!4156 = !DILocalVariable(name: "dir_next", scope: !4147, file: !1, line: 833, type: !201)
!4157 = !DILocation(line: 833, column: 21, scope: !4147)
!4158 = !DILocation(line: 835, column: 14, scope: !4147)
!4159 = !DILocation(line: 835, column: 24, scope: !4147)
!4160 = !DILocation(line: 835, column: 30, scope: !4147)
!4161 = !DILocation(line: 835, column: 38, scope: !4147)
!4162 = !DILocation(line: 835, column: 44, scope: !4147)
!4163 = !DILocation(line: 835, column: 2, scope: !4147)
!4164 = !DILocation(line: 836, column: 14, scope: !4147)
!4165 = !DILocation(line: 836, column: 24, scope: !4147)
!4166 = !DILocation(line: 836, column: 30, scope: !4147)
!4167 = !DILocation(line: 836, column: 38, scope: !4147)
!4168 = !DILocation(line: 836, column: 44, scope: !4147)
!4169 = !DILocation(line: 836, column: 2, scope: !4147)
!4170 = !DILocation(line: 838, column: 15, scope: !4147)
!4171 = !DILocation(line: 838, column: 2, scope: !4147)
!4172 = !DILocation(line: 839, column: 15, scope: !4147)
!4173 = !DILocation(line: 839, column: 2, scope: !4147)
!4174 = !DILocation(line: 841, column: 16, scope: !4147)
!4175 = !DILocation(line: 841, column: 25, scope: !4147)
!4176 = !DILocation(line: 841, column: 35, scope: !4147)
!4177 = !DILocation(line: 841, column: 2, scope: !4147)
!4178 = !DILocation(line: 842, column: 19, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4147, file: !1, line: 842, column: 6)
!4180 = !DILocation(line: 842, column: 6, scope: !4179)
!4181 = !DILocation(line: 842, column: 28, scope: !4179)
!4182 = !DILocation(line: 842, column: 6, scope: !4147)
!4183 = !DILocalVariable(name: "bezt_prev", scope: !4184, file: !1, line: 843, type: !1817)
!4184 = distinct !DILexicalBlock(scope: !4179, file: !1, line: 842, column: 43)
!4185 = !DILocation(line: 843, column: 14, scope: !4184)
!4186 = !DILocation(line: 843, column: 49, scope: !4184)
!4187 = !DILocation(line: 843, column: 53, scope: !4184)
!4188 = !DILocation(line: 843, column: 26, scope: !4184)
!4189 = !DILocalVariable(name: "bezt_next", scope: !4184, file: !1, line: 844, type: !1817)
!4190 = !DILocation(line: 844, column: 14, scope: !4184)
!4191 = !DILocation(line: 844, column: 49, scope: !4184)
!4192 = !DILocation(line: 844, column: 53, scope: !4184)
!4193 = !DILocation(line: 844, column: 26, scope: !4184)
!4194 = !DILocation(line: 846, column: 7, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4184, file: !1, line: 846, column: 7)
!4196 = !DILocation(line: 846, column: 7, scope: !4184)
!4197 = !DILocation(line: 847, column: 16, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4195, file: !1, line: 846, column: 18)
!4199 = !DILocation(line: 847, column: 26, scope: !4198)
!4200 = !DILocation(line: 847, column: 37, scope: !4198)
!4201 = !DILocation(line: 847, column: 45, scope: !4198)
!4202 = !DILocation(line: 847, column: 51, scope: !4198)
!4203 = !DILocation(line: 847, column: 4, scope: !4198)
!4204 = !DILocation(line: 848, column: 17, scope: !4198)
!4205 = !DILocation(line: 848, column: 4, scope: !4198)
!4206 = !DILocation(line: 849, column: 3, scope: !4198)
!4207 = !DILocation(line: 850, column: 7, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4184, file: !1, line: 850, column: 7)
!4209 = !DILocation(line: 850, column: 7, scope: !4184)
!4210 = !DILocation(line: 851, column: 16, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4208, file: !1, line: 850, column: 18)
!4212 = !DILocation(line: 851, column: 26, scope: !4211)
!4213 = !DILocation(line: 851, column: 32, scope: !4211)
!4214 = !DILocation(line: 851, column: 40, scope: !4211)
!4215 = !DILocation(line: 851, column: 51, scope: !4211)
!4216 = !DILocation(line: 851, column: 4, scope: !4211)
!4217 = !DILocation(line: 852, column: 17, scope: !4211)
!4218 = !DILocation(line: 852, column: 4, scope: !4211)
!4219 = !DILocation(line: 853, column: 3, scope: !4211)
!4220 = !DILocation(line: 854, column: 17, scope: !4184)
!4221 = !DILocation(line: 854, column: 26, scope: !4184)
!4222 = !DILocation(line: 854, column: 36, scope: !4184)
!4223 = !DILocation(line: 854, column: 3, scope: !4184)
!4224 = !DILocation(line: 855, column: 2, scope: !4184)
!4225 = !DILocalVariable(name: "dir_mid", scope: !4226, file: !1, line: 859, type: !201)
!4226 = distinct !DILexicalBlock(scope: !4147, file: !1, line: 858, column: 2)
!4227 = !DILocation(line: 859, column: 9, scope: !4226)
!4228 = !DILocalVariable(name: "tvec", scope: !4226, file: !1, line: 859, type: !201)
!4229 = !DILocation(line: 859, column: 21, scope: !4226)
!4230 = !DILocation(line: 860, column: 15, scope: !4226)
!4231 = !DILocation(line: 860, column: 24, scope: !4226)
!4232 = !DILocation(line: 860, column: 34, scope: !4226)
!4233 = !DILocation(line: 860, column: 3, scope: !4226)
!4234 = !DILocation(line: 861, column: 17, scope: !4226)
!4235 = !DILocation(line: 861, column: 23, scope: !4226)
!4236 = !DILocation(line: 861, column: 32, scope: !4226)
!4237 = !DILocation(line: 861, column: 3, scope: !4226)
!4238 = !DILocation(line: 862, column: 14, scope: !4226)
!4239 = !DILocation(line: 862, column: 23, scope: !4226)
!4240 = !DILocation(line: 862, column: 3, scope: !4226)
!4241 = !DILocation(line: 865, column: 15, scope: !4147)
!4242 = !DILocation(line: 865, column: 2, scope: !4147)
!4243 = !DILocation(line: 866, column: 1, scope: !4147)
!4244 = distinct !DISubprogram(name: "cross_v3_v3v3", scope: !2341, file: !2341, line: 634, type: !3821, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!4245 = !DILocalVariable(name: "r", arg: 1, scope: !4244, file: !2341, line: 634, type: !1325)
!4246 = !DILocation(line: 634, column: 34, scope: !4244)
!4247 = !DILocalVariable(name: "a", arg: 2, scope: !4244, file: !2341, line: 634, type: !3191)
!4248 = !DILocation(line: 634, column: 52, scope: !4244)
!4249 = !DILocalVariable(name: "b", arg: 3, scope: !4244, file: !2341, line: 634, type: !3191)
!4250 = !DILocation(line: 634, column: 70, scope: !4244)
!4251 = !DILocation(line: 637, column: 9, scope: !4244)
!4252 = !DILocation(line: 637, column: 16, scope: !4244)
!4253 = !DILocation(line: 637, column: 14, scope: !4244)
!4254 = !DILocation(line: 637, column: 23, scope: !4244)
!4255 = !DILocation(line: 637, column: 30, scope: !4244)
!4256 = !DILocation(line: 637, column: 28, scope: !4244)
!4257 = !DILocation(line: 637, column: 21, scope: !4244)
!4258 = !DILocation(line: 637, column: 2, scope: !4244)
!4259 = !DILocation(line: 637, column: 7, scope: !4244)
!4260 = !DILocation(line: 638, column: 9, scope: !4244)
!4261 = !DILocation(line: 638, column: 16, scope: !4244)
!4262 = !DILocation(line: 638, column: 14, scope: !4244)
!4263 = !DILocation(line: 638, column: 23, scope: !4244)
!4264 = !DILocation(line: 638, column: 30, scope: !4244)
!4265 = !DILocation(line: 638, column: 28, scope: !4244)
!4266 = !DILocation(line: 638, column: 21, scope: !4244)
!4267 = !DILocation(line: 638, column: 2, scope: !4244)
!4268 = !DILocation(line: 638, column: 7, scope: !4244)
!4269 = !DILocation(line: 639, column: 9, scope: !4244)
!4270 = !DILocation(line: 639, column: 16, scope: !4244)
!4271 = !DILocation(line: 639, column: 14, scope: !4244)
!4272 = !DILocation(line: 639, column: 23, scope: !4244)
!4273 = !DILocation(line: 639, column: 30, scope: !4244)
!4274 = !DILocation(line: 639, column: 28, scope: !4244)
!4275 = !DILocation(line: 639, column: 21, scope: !4244)
!4276 = !DILocation(line: 639, column: 2, scope: !4244)
!4277 = !DILocation(line: 639, column: 7, scope: !4244)
!4278 = !DILocation(line: 640, column: 1, scope: !4244)
!4279 = distinct !DISubprogram(name: "BKE_nurb_knot_calc_u", scope: !1, file: !1, line: 987, type: !2847, scopeLine: 988, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!4280 = !DILocalVariable(name: "nu", arg: 1, scope: !4279, file: !1, line: 987, type: !1782)
!4281 = !DILocation(line: 987, column: 33, scope: !4279)
!4282 = !DILocation(line: 989, column: 12, scope: !4279)
!4283 = !DILocation(line: 989, column: 2, scope: !4279)
!4284 = !DILocation(line: 990, column: 1, scope: !4279)
!4285 = distinct !DISubprogram(name: "makeknots", scope: !1, file: !1, line: 948, type: !4286, scopeLine: 949, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!4286 = !DISubroutineType(types: !4287)
!4287 = !{null, !1782, !77}
!4288 = !DILocalVariable(name: "nu", arg: 1, scope: !4285, file: !1, line: 948, type: !1782)
!4289 = !DILocation(line: 948, column: 29, scope: !4285)
!4290 = !DILocalVariable(name: "uv", arg: 2, scope: !4285, file: !1, line: 948, type: !77)
!4291 = !DILocation(line: 948, column: 39, scope: !4285)
!4292 = !DILocation(line: 950, column: 6, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4285, file: !1, line: 950, column: 6)
!4294 = !DILocation(line: 950, column: 10, scope: !4293)
!4295 = !DILocation(line: 950, column: 15, scope: !4293)
!4296 = !DILocation(line: 950, column: 6, scope: !4285)
!4297 = !DILocation(line: 951, column: 7, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4299, file: !1, line: 951, column: 7)
!4299 = distinct !DILexicalBlock(scope: !4293, file: !1, line: 950, column: 28)
!4300 = !DILocation(line: 951, column: 10, scope: !4298)
!4301 = !DILocation(line: 951, column: 7, scope: !4299)
!4302 = !DILocation(line: 952, column: 8, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4304, file: !1, line: 952, column: 8)
!4304 = distinct !DILexicalBlock(scope: !4298, file: !1, line: 951, column: 16)
!4305 = !DILocation(line: 952, column: 12, scope: !4303)
!4306 = !DILocation(line: 952, column: 8, scope: !4304)
!4307 = !DILocation(line: 953, column: 5, scope: !4303)
!4308 = !DILocation(line: 953, column: 15, scope: !4303)
!4309 = !DILocation(line: 953, column: 19, scope: !4303)
!4310 = !DILocation(line: 954, column: 31, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4304, file: !1, line: 954, column: 8)
!4312 = !DILocation(line: 954, column: 8, scope: !4311)
!4313 = !DILocation(line: 954, column: 8, scope: !4304)
!4314 = !DILocation(line: 955, column: 18, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4311, file: !1, line: 954, column: 36)
!4316 = !DILocation(line: 955, column: 50, scope: !4315)
!4317 = !DILocation(line: 955, column: 48, scope: !4315)
!4318 = !DILocation(line: 955, column: 32, scope: !4315)
!4319 = !DILocation(line: 955, column: 5, scope: !4315)
!4320 = !DILocation(line: 955, column: 9, scope: !4315)
!4321 = !DILocation(line: 955, column: 16, scope: !4315)
!4322 = !DILocation(line: 956, column: 9, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4315, file: !1, line: 956, column: 9)
!4324 = !DILocation(line: 956, column: 13, scope: !4323)
!4325 = !DILocation(line: 956, column: 19, scope: !4323)
!4326 = !DILocation(line: 956, column: 9, scope: !4315)
!4327 = !DILocation(line: 957, column: 16, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4323, file: !1, line: 956, column: 37)
!4329 = !DILocation(line: 957, column: 20, scope: !4328)
!4330 = !DILocation(line: 957, column: 28, scope: !4328)
!4331 = !DILocation(line: 957, column: 32, scope: !4328)
!4332 = !DILocation(line: 957, column: 39, scope: !4328)
!4333 = !DILocation(line: 957, column: 43, scope: !4328)
!4334 = !DILocation(line: 957, column: 6, scope: !4328)
!4335 = !DILocation(line: 958, column: 22, scope: !4328)
!4336 = !DILocation(line: 958, column: 26, scope: !4328)
!4337 = !DILocation(line: 958, column: 34, scope: !4328)
!4338 = !DILocation(line: 958, column: 38, scope: !4328)
!4339 = !DILocation(line: 958, column: 45, scope: !4328)
!4340 = !DILocation(line: 958, column: 49, scope: !4328)
!4341 = !DILocation(line: 958, column: 6, scope: !4328)
!4342 = !DILocation(line: 959, column: 5, scope: !4328)
!4343 = !DILocation(line: 961, column: 16, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4323, file: !1, line: 960, column: 10)
!4345 = !DILocation(line: 961, column: 20, scope: !4344)
!4346 = !DILocation(line: 961, column: 28, scope: !4344)
!4347 = !DILocation(line: 961, column: 32, scope: !4344)
!4348 = !DILocation(line: 961, column: 39, scope: !4344)
!4349 = !DILocation(line: 961, column: 43, scope: !4344)
!4350 = !DILocation(line: 961, column: 51, scope: !4344)
!4351 = !DILocation(line: 961, column: 55, scope: !4344)
!4352 = !DILocation(line: 961, column: 6, scope: !4344)
!4353 = !DILocation(line: 963, column: 4, scope: !4315)
!4354 = !DILocation(line: 965, column: 5, scope: !4311)
!4355 = !DILocation(line: 965, column: 9, scope: !4311)
!4356 = !DILocation(line: 965, column: 16, scope: !4311)
!4357 = !DILocation(line: 966, column: 3, scope: !4304)
!4358 = !DILocation(line: 967, column: 12, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4298, file: !1, line: 967, column: 12)
!4360 = !DILocation(line: 967, column: 15, scope: !4359)
!4361 = !DILocation(line: 967, column: 12, scope: !4298)
!4362 = !DILocation(line: 968, column: 8, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4364, file: !1, line: 968, column: 8)
!4364 = distinct !DILexicalBlock(scope: !4359, file: !1, line: 967, column: 21)
!4365 = !DILocation(line: 968, column: 12, scope: !4363)
!4366 = !DILocation(line: 968, column: 8, scope: !4364)
!4367 = !DILocation(line: 969, column: 5, scope: !4363)
!4368 = !DILocation(line: 969, column: 15, scope: !4363)
!4369 = !DILocation(line: 969, column: 19, scope: !4363)
!4370 = !DILocation(line: 970, column: 31, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4364, file: !1, line: 970, column: 8)
!4372 = !DILocation(line: 970, column: 8, scope: !4371)
!4373 = !DILocation(line: 970, column: 8, scope: !4364)
!4374 = !DILocation(line: 971, column: 18, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4371, file: !1, line: 970, column: 36)
!4376 = !DILocation(line: 971, column: 50, scope: !4375)
!4377 = !DILocation(line: 971, column: 48, scope: !4375)
!4378 = !DILocation(line: 971, column: 32, scope: !4375)
!4379 = !DILocation(line: 971, column: 5, scope: !4375)
!4380 = !DILocation(line: 971, column: 9, scope: !4375)
!4381 = !DILocation(line: 971, column: 16, scope: !4375)
!4382 = !DILocation(line: 972, column: 9, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4375, file: !1, line: 972, column: 9)
!4384 = !DILocation(line: 972, column: 13, scope: !4383)
!4385 = !DILocation(line: 972, column: 19, scope: !4383)
!4386 = !DILocation(line: 972, column: 9, scope: !4375)
!4387 = !DILocation(line: 973, column: 16, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4383, file: !1, line: 972, column: 37)
!4389 = !DILocation(line: 973, column: 20, scope: !4388)
!4390 = !DILocation(line: 973, column: 28, scope: !4388)
!4391 = !DILocation(line: 973, column: 32, scope: !4388)
!4392 = !DILocation(line: 973, column: 39, scope: !4388)
!4393 = !DILocation(line: 973, column: 43, scope: !4388)
!4394 = !DILocation(line: 973, column: 6, scope: !4388)
!4395 = !DILocation(line: 974, column: 22, scope: !4388)
!4396 = !DILocation(line: 974, column: 26, scope: !4388)
!4397 = !DILocation(line: 974, column: 34, scope: !4388)
!4398 = !DILocation(line: 974, column: 38, scope: !4388)
!4399 = !DILocation(line: 974, column: 45, scope: !4388)
!4400 = !DILocation(line: 974, column: 49, scope: !4388)
!4401 = !DILocation(line: 974, column: 6, scope: !4388)
!4402 = !DILocation(line: 975, column: 5, scope: !4388)
!4403 = !DILocation(line: 977, column: 16, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4383, file: !1, line: 976, column: 10)
!4405 = !DILocation(line: 977, column: 20, scope: !4404)
!4406 = !DILocation(line: 977, column: 28, scope: !4404)
!4407 = !DILocation(line: 977, column: 32, scope: !4404)
!4408 = !DILocation(line: 977, column: 39, scope: !4404)
!4409 = !DILocation(line: 977, column: 43, scope: !4404)
!4410 = !DILocation(line: 977, column: 51, scope: !4404)
!4411 = !DILocation(line: 977, column: 55, scope: !4404)
!4412 = !DILocation(line: 977, column: 6, scope: !4404)
!4413 = !DILocation(line: 979, column: 4, scope: !4375)
!4414 = !DILocation(line: 981, column: 5, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4371, file: !1, line: 980, column: 9)
!4416 = !DILocation(line: 981, column: 9, scope: !4415)
!4417 = !DILocation(line: 981, column: 16, scope: !4415)
!4418 = !DILocation(line: 983, column: 3, scope: !4364)
!4419 = !DILocation(line: 984, column: 2, scope: !4299)
!4420 = !DILocation(line: 985, column: 1, scope: !4285)
!4421 = distinct !DISubprogram(name: "BKE_nurb_knot_calc_v", scope: !1, file: !1, line: 992, type: !2847, scopeLine: 993, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!4422 = !DILocalVariable(name: "nu", arg: 1, scope: !4421, file: !1, line: 992, type: !1782)
!4423 = !DILocation(line: 992, column: 33, scope: !4421)
!4424 = !DILocation(line: 994, column: 12, scope: !4421)
!4425 = !DILocation(line: 994, column: 2, scope: !4421)
!4426 = !DILocation(line: 995, column: 1, scope: !4421)
!4427 = distinct !DISubprogram(name: "BKE_nurb_makeFaces", scope: !1, file: !1, line: 1063, type: !4428, scopeLine: 1065, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!4428 = !DISubroutineType(types: !4429)
!4429 = !{null, !1782, !1325, !79, !79, !79}
!4430 = !DILocalVariable(name: "nu", arg: 1, scope: !4427, file: !1, line: 1063, type: !1782)
!4431 = !DILocation(line: 1063, column: 31, scope: !4427)
!4432 = !DILocalVariable(name: "coord_array", arg: 2, scope: !4427, file: !1, line: 1063, type: !1325)
!4433 = !DILocation(line: 1063, column: 42, scope: !4427)
!4434 = !DILocalVariable(name: "rowstride", arg: 3, scope: !4427, file: !1, line: 1063, type: !79)
!4435 = !DILocation(line: 1063, column: 59, scope: !4427)
!4436 = !DILocalVariable(name: "resolu", arg: 4, scope: !4427, file: !1, line: 1063, type: !79)
!4437 = !DILocation(line: 1063, column: 74, scope: !4427)
!4438 = !DILocalVariable(name: "resolv", arg: 5, scope: !4427, file: !1, line: 1063, type: !79)
!4439 = !DILocation(line: 1063, column: 86, scope: !4427)
!4440 = !DILocalVariable(name: "bp", scope: !4427, file: !1, line: 1066, type: !1805)
!4441 = !DILocation(line: 1066, column: 10, scope: !4427)
!4442 = !DILocalVariable(name: "basisu", scope: !4427, file: !1, line: 1067, type: !1325)
!4443 = !DILocation(line: 1067, column: 9, scope: !4427)
!4444 = !DILocalVariable(name: "basis", scope: !4427, file: !1, line: 1067, type: !1325)
!4445 = !DILocation(line: 1067, column: 18, scope: !4427)
!4446 = !DILocalVariable(name: "basisv", scope: !4427, file: !1, line: 1067, type: !1325)
!4447 = !DILocation(line: 1067, column: 26, scope: !4427)
!4448 = !DILocalVariable(name: "sum", scope: !4427, file: !1, line: 1067, type: !1325)
!4449 = !DILocation(line: 1067, column: 35, scope: !4427)
!4450 = !DILocalVariable(name: "fp", scope: !4427, file: !1, line: 1067, type: !1325)
!4451 = !DILocation(line: 1067, column: 41, scope: !4427)
!4452 = !DILocalVariable(name: "in", scope: !4427, file: !1, line: 1067, type: !1325)
!4453 = !DILocation(line: 1067, column: 46, scope: !4427)
!4454 = !DILocalVariable(name: "u", scope: !4427, file: !1, line: 1068, type: !128)
!4455 = !DILocation(line: 1068, column: 8, scope: !4427)
!4456 = !DILocalVariable(name: "v", scope: !4427, file: !1, line: 1068, type: !128)
!4457 = !DILocation(line: 1068, column: 11, scope: !4427)
!4458 = !DILocalVariable(name: "ustart", scope: !4427, file: !1, line: 1068, type: !128)
!4459 = !DILocation(line: 1068, column: 14, scope: !4427)
!4460 = !DILocalVariable(name: "uend", scope: !4427, file: !1, line: 1068, type: !128)
!4461 = !DILocation(line: 1068, column: 22, scope: !4427)
!4462 = !DILocalVariable(name: "ustep", scope: !4427, file: !1, line: 1068, type: !128)
!4463 = !DILocation(line: 1068, column: 28, scope: !4427)
!4464 = !DILocalVariable(name: "vstart", scope: !4427, file: !1, line: 1068, type: !128)
!4465 = !DILocation(line: 1068, column: 35, scope: !4427)
!4466 = !DILocalVariable(name: "vend", scope: !4427, file: !1, line: 1068, type: !128)
!4467 = !DILocation(line: 1068, column: 43, scope: !4427)
!4468 = !DILocalVariable(name: "vstep", scope: !4427, file: !1, line: 1068, type: !128)
!4469 = !DILocation(line: 1068, column: 49, scope: !4427)
!4470 = !DILocalVariable(name: "sumdiv", scope: !4427, file: !1, line: 1068, type: !128)
!4471 = !DILocation(line: 1068, column: 56, scope: !4427)
!4472 = !DILocalVariable(name: "i", scope: !4427, file: !1, line: 1069, type: !79)
!4473 = !DILocation(line: 1069, column: 6, scope: !4427)
!4474 = !DILocalVariable(name: "j", scope: !4427, file: !1, line: 1069, type: !79)
!4475 = !DILocation(line: 1069, column: 9, scope: !4427)
!4476 = !DILocalVariable(name: "iofs", scope: !4427, file: !1, line: 1069, type: !79)
!4477 = !DILocation(line: 1069, column: 12, scope: !4427)
!4478 = !DILocalVariable(name: "jofs", scope: !4427, file: !1, line: 1069, type: !79)
!4479 = !DILocation(line: 1069, column: 18, scope: !4427)
!4480 = !DILocalVariable(name: "cycl", scope: !4427, file: !1, line: 1069, type: !79)
!4481 = !DILocation(line: 1069, column: 24, scope: !4427)
!4482 = !DILocalVariable(name: "len", scope: !4427, file: !1, line: 1069, type: !79)
!4483 = !DILocation(line: 1069, column: 30, scope: !4427)
!4484 = !DILocalVariable(name: "curu", scope: !4427, file: !1, line: 1069, type: !79)
!4485 = !DILocation(line: 1069, column: 35, scope: !4427)
!4486 = !DILocalVariable(name: "curv", scope: !4427, file: !1, line: 1069, type: !79)
!4487 = !DILocation(line: 1069, column: 41, scope: !4427)
!4488 = !DILocalVariable(name: "istart", scope: !4427, file: !1, line: 1070, type: !79)
!4489 = !DILocation(line: 1070, column: 6, scope: !4427)
!4490 = !DILocalVariable(name: "iend", scope: !4427, file: !1, line: 1070, type: !79)
!4491 = !DILocation(line: 1070, column: 14, scope: !4427)
!4492 = !DILocalVariable(name: "jsta", scope: !4427, file: !1, line: 1070, type: !79)
!4493 = !DILocation(line: 1070, column: 20, scope: !4427)
!4494 = !DILocalVariable(name: "jen", scope: !4427, file: !1, line: 1070, type: !79)
!4495 = !DILocation(line: 1070, column: 26, scope: !4427)
!4496 = !DILocalVariable(name: "jstart", scope: !4427, file: !1, line: 1070, type: !1840)
!4497 = !DILocation(line: 1070, column: 32, scope: !4427)
!4498 = !DILocalVariable(name: "jend", scope: !4427, file: !1, line: 1070, type: !1840)
!4499 = !DILocation(line: 1070, column: 41, scope: !4427)
!4500 = !DILocalVariable(name: "ratcomp", scope: !4427, file: !1, line: 1070, type: !79)
!4501 = !DILocation(line: 1070, column: 47, scope: !4427)
!4502 = !DILocalVariable(name: "totu", scope: !4427, file: !1, line: 1072, type: !79)
!4503 = !DILocation(line: 1072, column: 6, scope: !4427)
!4504 = !DILocation(line: 1072, column: 13, scope: !4427)
!4505 = !DILocation(line: 1072, column: 17, scope: !4427)
!4506 = !DILocation(line: 1072, column: 25, scope: !4427)
!4507 = !DILocation(line: 1072, column: 23, scope: !4427)
!4508 = !DILocalVariable(name: "totv", scope: !4427, file: !1, line: 1072, type: !79)
!4509 = !DILocation(line: 1072, column: 33, scope: !4427)
!4510 = !DILocation(line: 1072, column: 40, scope: !4427)
!4511 = !DILocation(line: 1072, column: 44, scope: !4427)
!4512 = !DILocation(line: 1072, column: 52, scope: !4427)
!4513 = !DILocation(line: 1072, column: 50, scope: !4427)
!4514 = !DILocation(line: 1074, column: 6, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4427, file: !1, line: 1074, column: 6)
!4516 = !DILocation(line: 1074, column: 10, scope: !4515)
!4517 = !DILocation(line: 1074, column: 17, scope: !4515)
!4518 = !DILocation(line: 1074, column: 25, scope: !4515)
!4519 = !DILocation(line: 1074, column: 28, scope: !4515)
!4520 = !DILocation(line: 1074, column: 32, scope: !4515)
!4521 = !DILocation(line: 1074, column: 39, scope: !4515)
!4522 = !DILocation(line: 1074, column: 6, scope: !4427)
!4523 = !DILocation(line: 1075, column: 3, scope: !4515)
!4524 = !DILocation(line: 1076, column: 6, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4427, file: !1, line: 1076, column: 6)
!4526 = !DILocation(line: 1076, column: 10, scope: !4525)
!4527 = !DILocation(line: 1076, column: 19, scope: !4525)
!4528 = !DILocation(line: 1076, column: 23, scope: !4525)
!4529 = !DILocation(line: 1076, column: 17, scope: !4525)
!4530 = !DILocation(line: 1076, column: 6, scope: !4427)
!4531 = !DILocation(line: 1077, column: 3, scope: !4525)
!4532 = !DILocation(line: 1078, column: 6, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4427, file: !1, line: 1078, column: 6)
!4534 = !DILocation(line: 1078, column: 10, scope: !4533)
!4535 = !DILocation(line: 1078, column: 19, scope: !4533)
!4536 = !DILocation(line: 1078, column: 23, scope: !4533)
!4537 = !DILocation(line: 1078, column: 17, scope: !4533)
!4538 = !DILocation(line: 1078, column: 6, scope: !4427)
!4539 = !DILocation(line: 1079, column: 3, scope: !4533)
!4540 = !DILocation(line: 1080, column: 6, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4427, file: !1, line: 1080, column: 6)
!4542 = !DILocation(line: 1080, column: 18, scope: !4541)
!4543 = !DILocation(line: 1080, column: 6, scope: !4427)
!4544 = !DILocation(line: 1081, column: 3, scope: !4541)
!4545 = !DILocation(line: 1084, column: 8, scope: !4427)
!4546 = !DILocation(line: 1084, column: 15, scope: !4427)
!4547 = !DILocation(line: 1084, column: 13, scope: !4427)
!4548 = !DILocation(line: 1084, column: 6, scope: !4427)
!4549 = !DILocation(line: 1085, column: 6, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4427, file: !1, line: 1085, column: 6)
!4551 = !DILocation(line: 1085, column: 10, scope: !4550)
!4552 = !DILocation(line: 1085, column: 6, scope: !4427)
!4553 = !DILocation(line: 1086, column: 3, scope: !4550)
!4554 = !DILocation(line: 1088, column: 17, scope: !4427)
!4555 = !DILocation(line: 1088, column: 45, scope: !4427)
!4556 = !DILocation(line: 1088, column: 43, scope: !4427)
!4557 = !DILocation(line: 1088, column: 8, scope: !4427)
!4558 = !DILocation(line: 1088, column: 6, scope: !4427)
!4559 = !DILocation(line: 1090, column: 7, scope: !4427)
!4560 = !DILocation(line: 1090, column: 11, scope: !4427)
!4561 = !DILocation(line: 1090, column: 5, scope: !4427)
!4562 = !DILocation(line: 1091, column: 6, scope: !4427)
!4563 = !DILocation(line: 1091, column: 10, scope: !4427)
!4564 = !DILocation(line: 1091, column: 18, scope: !4427)
!4565 = !DILocation(line: 1091, column: 22, scope: !4427)
!4566 = !DILocation(line: 1091, column: 16, scope: !4427)
!4567 = !DILocation(line: 1091, column: 4, scope: !4427)
!4568 = !DILocation(line: 1092, column: 10, scope: !4427)
!4569 = !DILocation(line: 1093, column: 2, scope: !4427)
!4570 = !DILocation(line: 1093, column: 10, scope: !4427)
!4571 = !DILocation(line: 1094, column: 7, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4573, file: !1, line: 1094, column: 7)
!4573 = distinct !DILexicalBlock(scope: !4427, file: !1, line: 1093, column: 14)
!4574 = !DILocation(line: 1094, column: 11, scope: !4572)
!4575 = !DILocation(line: 1094, column: 18, scope: !4572)
!4576 = !DILocation(line: 1094, column: 7, scope: !4573)
!4577 = !DILocation(line: 1095, column: 12, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4572, file: !1, line: 1094, column: 27)
!4579 = !DILocation(line: 1096, column: 4, scope: !4578)
!4580 = !DILocation(line: 1098, column: 5, scope: !4573)
!4581 = distinct !{!4581, !4569, !4582}
!4582 = !DILocation(line: 1099, column: 2, scope: !4427)
!4583 = !DILocation(line: 1101, column: 7, scope: !4427)
!4584 = !DILocation(line: 1101, column: 11, scope: !4427)
!4585 = !DILocation(line: 1101, column: 5, scope: !4427)
!4586 = !DILocation(line: 1102, column: 11, scope: !4427)
!4587 = !DILocation(line: 1102, column: 14, scope: !4427)
!4588 = !DILocation(line: 1102, column: 18, scope: !4427)
!4589 = !DILocation(line: 1102, column: 25, scope: !4427)
!4590 = !DILocation(line: 1102, column: 9, scope: !4427)
!4591 = !DILocation(line: 1103, column: 6, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4427, file: !1, line: 1103, column: 6)
!4593 = !DILocation(line: 1103, column: 10, scope: !4592)
!4594 = !DILocation(line: 1103, column: 16, scope: !4592)
!4595 = !DILocation(line: 1103, column: 6, scope: !4427)
!4596 = !DILocation(line: 1104, column: 10, scope: !4592)
!4597 = !DILocation(line: 1104, column: 13, scope: !4592)
!4598 = !DILocation(line: 1104, column: 17, scope: !4592)
!4599 = !DILocation(line: 1104, column: 25, scope: !4592)
!4600 = !DILocation(line: 1104, column: 29, scope: !4592)
!4601 = !DILocation(line: 1104, column: 23, scope: !4592)
!4602 = !DILocation(line: 1104, column: 36, scope: !4592)
!4603 = !DILocation(line: 1104, column: 8, scope: !4592)
!4604 = !DILocation(line: 1104, column: 3, scope: !4592)
!4605 = !DILocation(line: 1106, column: 10, scope: !4592)
!4606 = !DILocation(line: 1106, column: 13, scope: !4592)
!4607 = !DILocation(line: 1106, column: 17, scope: !4592)
!4608 = !DILocation(line: 1106, column: 8, scope: !4592)
!4609 = !DILocation(line: 1107, column: 11, scope: !4427)
!4610 = !DILocation(line: 1107, column: 18, scope: !4427)
!4611 = !DILocation(line: 1107, column: 16, scope: !4427)
!4612 = !DILocation(line: 1107, column: 30, scope: !4427)
!4613 = !DILocation(line: 1107, column: 34, scope: !4427)
!4614 = !DILocation(line: 1107, column: 40, scope: !4427)
!4615 = !DILocation(line: 1107, column: 29, scope: !4427)
!4616 = !DILocation(line: 1107, column: 60, scope: !4427)
!4617 = !DILocation(line: 1107, column: 67, scope: !4427)
!4618 = !DILocation(line: 1107, column: 72, scope: !4427)
!4619 = !DILocation(line: 1107, column: 28, scope: !4427)
!4620 = !DILocation(line: 1107, column: 26, scope: !4427)
!4621 = !DILocation(line: 1107, column: 8, scope: !4427)
!4622 = !DILocation(line: 1109, column: 20, scope: !4427)
!4623 = !DILocation(line: 1109, column: 48, scope: !4427)
!4624 = !DILocation(line: 1109, column: 46, scope: !4427)
!4625 = !DILocation(line: 1109, column: 11, scope: !4427)
!4626 = !DILocation(line: 1109, column: 9, scope: !4427)
!4627 = !DILocation(line: 1111, column: 7, scope: !4427)
!4628 = !DILocation(line: 1111, column: 11, scope: !4427)
!4629 = !DILocation(line: 1111, column: 5, scope: !4427)
!4630 = !DILocation(line: 1112, column: 11, scope: !4427)
!4631 = !DILocation(line: 1112, column: 14, scope: !4427)
!4632 = !DILocation(line: 1112, column: 18, scope: !4427)
!4633 = !DILocation(line: 1112, column: 25, scope: !4427)
!4634 = !DILocation(line: 1112, column: 9, scope: !4427)
!4635 = !DILocation(line: 1114, column: 6, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4427, file: !1, line: 1114, column: 6)
!4637 = !DILocation(line: 1114, column: 10, scope: !4636)
!4638 = !DILocation(line: 1114, column: 16, scope: !4636)
!4639 = !DILocation(line: 1114, column: 6, scope: !4427)
!4640 = !DILocation(line: 1115, column: 10, scope: !4636)
!4641 = !DILocation(line: 1115, column: 13, scope: !4636)
!4642 = !DILocation(line: 1115, column: 17, scope: !4636)
!4643 = !DILocation(line: 1115, column: 25, scope: !4636)
!4644 = !DILocation(line: 1115, column: 29, scope: !4636)
!4645 = !DILocation(line: 1115, column: 23, scope: !4636)
!4646 = !DILocation(line: 1115, column: 36, scope: !4636)
!4647 = !DILocation(line: 1115, column: 8, scope: !4636)
!4648 = !DILocation(line: 1115, column: 3, scope: !4636)
!4649 = !DILocation(line: 1117, column: 10, scope: !4636)
!4650 = !DILocation(line: 1117, column: 13, scope: !4636)
!4651 = !DILocation(line: 1117, column: 17, scope: !4636)
!4652 = !DILocation(line: 1117, column: 8, scope: !4636)
!4653 = !DILocation(line: 1118, column: 11, scope: !4427)
!4654 = !DILocation(line: 1118, column: 18, scope: !4427)
!4655 = !DILocation(line: 1118, column: 16, scope: !4427)
!4656 = !DILocation(line: 1118, column: 30, scope: !4427)
!4657 = !DILocation(line: 1118, column: 34, scope: !4427)
!4658 = !DILocation(line: 1118, column: 40, scope: !4427)
!4659 = !DILocation(line: 1118, column: 29, scope: !4427)
!4660 = !DILocation(line: 1118, column: 60, scope: !4427)
!4661 = !DILocation(line: 1118, column: 67, scope: !4427)
!4662 = !DILocation(line: 1118, column: 72, scope: !4427)
!4663 = !DILocation(line: 1118, column: 28, scope: !4427)
!4664 = !DILocation(line: 1118, column: 26, scope: !4427)
!4665 = !DILocation(line: 1118, column: 8, scope: !4427)
!4666 = !DILocation(line: 1120, column: 8, scope: !4427)
!4667 = !DILocation(line: 1120, column: 6, scope: !4427)
!4668 = !DILocation(line: 1121, column: 20, scope: !4427)
!4669 = !DILocation(line: 1121, column: 48, scope: !4427)
!4670 = !DILocation(line: 1121, column: 46, scope: !4427)
!4671 = !DILocation(line: 1121, column: 54, scope: !4427)
!4672 = !DILocation(line: 1121, column: 52, scope: !4427)
!4673 = !DILocation(line: 1121, column: 11, scope: !4427)
!4674 = !DILocation(line: 1121, column: 9, scope: !4427)
!4675 = !DILocation(line: 1122, column: 18, scope: !4427)
!4676 = !DILocation(line: 1122, column: 46, scope: !4427)
!4677 = !DILocation(line: 1122, column: 44, scope: !4427)
!4678 = !DILocation(line: 1122, column: 11, scope: !4427)
!4679 = !DILocation(line: 1122, column: 9, scope: !4427)
!4680 = !DILocation(line: 1123, column: 16, scope: !4427)
!4681 = !DILocation(line: 1123, column: 44, scope: !4427)
!4682 = !DILocation(line: 1123, column: 42, scope: !4427)
!4683 = !DILocation(line: 1123, column: 9, scope: !4427)
!4684 = !DILocation(line: 1123, column: 7, scope: !4427)
!4685 = !DILocation(line: 1126, column: 6, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4427, file: !1, line: 1126, column: 6)
!4687 = !DILocation(line: 1126, column: 10, scope: !4686)
!4688 = !DILocation(line: 1126, column: 16, scope: !4686)
!4689 = !DILocation(line: 1126, column: 6, scope: !4427)
!4690 = !DILocation(line: 1127, column: 10, scope: !4686)
!4691 = !DILocation(line: 1127, column: 14, scope: !4686)
!4692 = !DILocation(line: 1127, column: 21, scope: !4686)
!4693 = !DILocation(line: 1127, column: 8, scope: !4686)
!4694 = !DILocation(line: 1127, column: 3, scope: !4686)
!4695 = !DILocation(line: 1128, column: 12, scope: !4686)
!4696 = !DILocation(line: 1129, column: 6, scope: !4427)
!4697 = !DILocation(line: 1129, column: 4, scope: !4427)
!4698 = !DILocation(line: 1130, column: 10, scope: !4427)
!4699 = !DILocation(line: 1130, column: 8, scope: !4427)
!4700 = !DILocation(line: 1131, column: 9, scope: !4427)
!4701 = !DILocation(line: 1131, column: 7, scope: !4427)
!4702 = !DILocation(line: 1132, column: 2, scope: !4427)
!4703 = !DILocation(line: 1132, column: 13, scope: !4427)
!4704 = !DILocation(line: 1133, column: 13, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4427, file: !1, line: 1132, column: 17)
!4706 = !DILocation(line: 1133, column: 16, scope: !4705)
!4707 = !DILocation(line: 1133, column: 20, scope: !4705)
!4708 = !DILocation(line: 1133, column: 28, scope: !4705)
!4709 = !DILocation(line: 1133, column: 32, scope: !4705)
!4710 = !DILocation(line: 1133, column: 40, scope: !4705)
!4711 = !DILocation(line: 1133, column: 38, scope: !4705)
!4712 = !DILocation(line: 1133, column: 46, scope: !4705)
!4713 = !DILocation(line: 1133, column: 50, scope: !4705)
!4714 = !DILocation(line: 1133, column: 58, scope: !4705)
!4715 = !DILocation(line: 1133, column: 65, scope: !4705)
!4716 = !DILocation(line: 1133, column: 74, scope: !4705)
!4717 = !DILocation(line: 1133, column: 72, scope: !4705)
!4718 = !DILocation(line: 1133, column: 80, scope: !4705)
!4719 = !DILocation(line: 1133, column: 87, scope: !4705)
!4720 = !DILocation(line: 1133, column: 85, scope: !4705)
!4721 = !DILocation(line: 1133, column: 3, scope: !4705)
!4722 = !DILocation(line: 1134, column: 12, scope: !4705)
!4723 = !DILocation(line: 1134, column: 9, scope: !4705)
!4724 = !DILocation(line: 1135, column: 8, scope: !4705)
!4725 = !DILocation(line: 1135, column: 5, scope: !4705)
!4726 = distinct !{!4726, !4702, !4727}
!4727 = !DILocation(line: 1136, column: 2, scope: !4427)
!4728 = !DILocation(line: 1138, column: 6, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4427, file: !1, line: 1138, column: 6)
!4730 = !DILocation(line: 1138, column: 10, scope: !4729)
!4731 = !DILocation(line: 1138, column: 16, scope: !4729)
!4732 = !DILocation(line: 1138, column: 6, scope: !4427)
!4733 = !DILocation(line: 1139, column: 10, scope: !4729)
!4734 = !DILocation(line: 1139, column: 14, scope: !4729)
!4735 = !DILocation(line: 1139, column: 21, scope: !4729)
!4736 = !DILocation(line: 1139, column: 8, scope: !4729)
!4737 = !DILocation(line: 1139, column: 3, scope: !4729)
!4738 = !DILocation(line: 1141, column: 8, scope: !4729)
!4739 = !DILocation(line: 1142, column: 7, scope: !4427)
!4740 = !DILocation(line: 1142, column: 5, scope: !4427)
!4741 = !DILocation(line: 1143, column: 6, scope: !4427)
!4742 = !DILocation(line: 1143, column: 4, scope: !4427)
!4743 = !DILocation(line: 1144, column: 9, scope: !4427)
!4744 = !DILocation(line: 1144, column: 7, scope: !4427)
!4745 = !DILocation(line: 1145, column: 2, scope: !4427)
!4746 = !DILocation(line: 1145, column: 13, scope: !4427)
!4747 = !DILocation(line: 1146, column: 13, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4427, file: !1, line: 1145, column: 17)
!4749 = !DILocation(line: 1146, column: 16, scope: !4748)
!4750 = !DILocation(line: 1146, column: 20, scope: !4748)
!4751 = !DILocation(line: 1146, column: 28, scope: !4748)
!4752 = !DILocation(line: 1146, column: 32, scope: !4748)
!4753 = !DILocation(line: 1146, column: 40, scope: !4748)
!4754 = !DILocation(line: 1146, column: 38, scope: !4748)
!4755 = !DILocation(line: 1146, column: 46, scope: !4748)
!4756 = !DILocation(line: 1146, column: 50, scope: !4748)
!4757 = !DILocation(line: 1146, column: 58, scope: !4748)
!4758 = !DILocation(line: 1146, column: 3, scope: !4748)
!4759 = !DILocation(line: 1148, column: 11, scope: !4748)
!4760 = !DILocation(line: 1148, column: 9, scope: !4748)
!4761 = !DILocation(line: 1149, column: 10, scope: !4748)
!4762 = !DILocation(line: 1149, column: 8, scope: !4748)
!4763 = !DILocation(line: 1150, column: 3, scope: !4748)
!4764 = !DILocation(line: 1150, column: 14, scope: !4748)
!4765 = !DILocation(line: 1151, column: 11, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4748, file: !1, line: 1150, column: 18)
!4767 = !DILocation(line: 1151, column: 18, scope: !4766)
!4768 = !DILocation(line: 1151, column: 9, scope: !4766)
!4769 = !DILocation(line: 1152, column: 10, scope: !4766)
!4770 = !DILocation(line: 1152, column: 15, scope: !4766)
!4771 = !DILocation(line: 1152, column: 8, scope: !4766)
!4772 = !DILocation(line: 1155, column: 11, scope: !4766)
!4773 = !DILocation(line: 1156, column: 9, scope: !4766)
!4774 = !DILocation(line: 1156, column: 7, scope: !4766)
!4775 = !DILocation(line: 1158, column: 13, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4766, file: !1, line: 1158, column: 4)
!4777 = !DILocation(line: 1158, column: 11, scope: !4776)
!4778 = !DILocation(line: 1158, column: 9, scope: !4776)
!4779 = !DILocation(line: 1158, column: 19, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4776, file: !1, line: 1158, column: 4)
!4781 = !DILocation(line: 1158, column: 24, scope: !4780)
!4782 = !DILocation(line: 1158, column: 21, scope: !4780)
!4783 = !DILocation(line: 1158, column: 4, scope: !4776)
!4784 = !DILocation(line: 1160, column: 9, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4786, file: !1, line: 1160, column: 9)
!4786 = distinct !DILexicalBlock(scope: !4780, file: !1, line: 1158, column: 34)
!4787 = !DILocation(line: 1160, column: 14, scope: !4785)
!4788 = !DILocation(line: 1160, column: 18, scope: !4785)
!4789 = !DILocation(line: 1160, column: 11, scope: !4785)
!4790 = !DILocation(line: 1160, column: 9, scope: !4786)
!4791 = !DILocation(line: 1161, column: 14, scope: !4785)
!4792 = !DILocation(line: 1161, column: 18, scope: !4785)
!4793 = !DILocation(line: 1161, column: 22, scope: !4785)
!4794 = !DILocation(line: 1161, column: 16, scope: !4785)
!4795 = !DILocation(line: 1161, column: 11, scope: !4785)
!4796 = !DILocation(line: 1161, column: 6, scope: !4785)
!4797 = !DILocation(line: 1163, column: 13, scope: !4785)
!4798 = !DILocation(line: 1163, column: 11, scope: !4785)
!4799 = !DILocation(line: 1164, column: 10, scope: !4786)
!4800 = !DILocation(line: 1164, column: 14, scope: !4786)
!4801 = !DILocation(line: 1164, column: 19, scope: !4786)
!4802 = !DILocation(line: 1164, column: 23, scope: !4786)
!4803 = !DILocation(line: 1164, column: 31, scope: !4786)
!4804 = !DILocation(line: 1164, column: 29, scope: !4786)
!4805 = !DILocation(line: 1164, column: 17, scope: !4786)
!4806 = !DILocation(line: 1164, column: 38, scope: !4786)
!4807 = !DILocation(line: 1164, column: 36, scope: !4786)
!4808 = !DILocation(line: 1164, column: 45, scope: !4786)
!4809 = !DILocation(line: 1164, column: 8, scope: !4786)
!4810 = !DILocation(line: 1166, column: 14, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4786, file: !1, line: 1166, column: 5)
!4812 = !DILocation(line: 1166, column: 12, scope: !4811)
!4813 = !DILocation(line: 1166, column: 10, scope: !4811)
!4814 = !DILocation(line: 1166, column: 22, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4811, file: !1, line: 1166, column: 5)
!4816 = !DILocation(line: 1166, column: 27, scope: !4815)
!4817 = !DILocation(line: 1166, column: 24, scope: !4815)
!4818 = !DILocation(line: 1166, column: 5, scope: !4811)
!4819 = !DILocation(line: 1167, column: 10, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4821, file: !1, line: 1167, column: 10)
!4821 = distinct !DILexicalBlock(scope: !4815, file: !1, line: 1166, column: 44)
!4822 = !DILocation(line: 1167, column: 15, scope: !4820)
!4823 = !DILocation(line: 1167, column: 19, scope: !4820)
!4824 = !DILocation(line: 1167, column: 12, scope: !4820)
!4825 = !DILocation(line: 1167, column: 10, scope: !4821)
!4826 = !DILocation(line: 1168, column: 14, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4820, file: !1, line: 1167, column: 26)
!4828 = !DILocation(line: 1168, column: 18, scope: !4827)
!4829 = !DILocation(line: 1168, column: 22, scope: !4827)
!4830 = !DILocation(line: 1168, column: 16, scope: !4827)
!4831 = !DILocation(line: 1168, column: 12, scope: !4827)
!4832 = !DILocation(line: 1169, column: 12, scope: !4827)
!4833 = !DILocation(line: 1169, column: 16, scope: !4827)
!4834 = !DILocation(line: 1169, column: 21, scope: !4827)
!4835 = !DILocation(line: 1169, column: 25, scope: !4827)
!4836 = !DILocation(line: 1169, column: 33, scope: !4827)
!4837 = !DILocation(line: 1169, column: 31, scope: !4827)
!4838 = !DILocation(line: 1169, column: 19, scope: !4827)
!4839 = !DILocation(line: 1169, column: 40, scope: !4827)
!4840 = !DILocation(line: 1169, column: 38, scope: !4827)
!4841 = !DILocation(line: 1169, column: 10, scope: !4827)
!4842 = !DILocation(line: 1170, column: 6, scope: !4827)
!4843 = !DILocation(line: 1172, column: 9, scope: !4820)
!4844 = !DILocation(line: 1174, column: 10, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4821, file: !1, line: 1174, column: 10)
!4846 = !DILocation(line: 1174, column: 10, scope: !4821)
!4847 = !DILocation(line: 1175, column: 13, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4845, file: !1, line: 1174, column: 19)
!4849 = !DILocation(line: 1175, column: 20, scope: !4848)
!4850 = !DILocation(line: 1175, column: 25, scope: !4848)
!4851 = !DILocation(line: 1175, column: 31, scope: !4848)
!4852 = !DILocation(line: 1175, column: 23, scope: !4848)
!4853 = !DILocation(line: 1175, column: 36, scope: !4848)
!4854 = !DILocation(line: 1175, column: 40, scope: !4848)
!4855 = !DILocation(line: 1175, column: 34, scope: !4848)
!4856 = !DILocation(line: 1175, column: 8, scope: !4848)
!4857 = !DILocation(line: 1175, column: 11, scope: !4848)
!4858 = !DILocation(line: 1176, column: 18, scope: !4848)
!4859 = !DILocation(line: 1176, column: 17, scope: !4848)
!4860 = !DILocation(line: 1176, column: 14, scope: !4848)
!4861 = !DILocation(line: 1177, column: 6, scope: !4848)
!4862 = !DILocation(line: 1179, column: 13, scope: !4845)
!4863 = !DILocation(line: 1179, column: 20, scope: !4845)
!4864 = !DILocation(line: 1179, column: 25, scope: !4845)
!4865 = !DILocation(line: 1179, column: 31, scope: !4845)
!4866 = !DILocation(line: 1179, column: 23, scope: !4845)
!4867 = !DILocation(line: 1179, column: 8, scope: !4845)
!4868 = !DILocation(line: 1179, column: 11, scope: !4845)
!4869 = !DILocation(line: 1180, column: 5, scope: !4821)
!4870 = !DILocation(line: 1166, column: 34, scope: !4815)
!4871 = !DILocation(line: 1166, column: 40, scope: !4815)
!4872 = !DILocation(line: 1166, column: 5, scope: !4815)
!4873 = distinct !{!4873, !4818, !4874}
!4874 = !DILocation(line: 1180, column: 5, scope: !4811)
!4875 = !DILocation(line: 1181, column: 4, scope: !4786)
!4876 = !DILocation(line: 1158, column: 30, scope: !4780)
!4877 = !DILocation(line: 1158, column: 4, scope: !4780)
!4878 = distinct !{!4878, !4783, !4879}
!4879 = !DILocation(line: 1181, column: 4, scope: !4776)
!4880 = !DILocation(line: 1183, column: 8, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4766, file: !1, line: 1183, column: 8)
!4882 = !DILocation(line: 1183, column: 8, scope: !4766)
!4883 = !DILocation(line: 1184, column: 10, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4881, file: !1, line: 1183, column: 17)
!4885 = !DILocation(line: 1184, column: 8, scope: !4884)
!4886 = !DILocation(line: 1185, column: 14, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4884, file: !1, line: 1185, column: 5)
!4888 = !DILocation(line: 1185, column: 12, scope: !4887)
!4889 = !DILocation(line: 1185, column: 10, scope: !4887)
!4890 = !DILocation(line: 1185, column: 20, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4887, file: !1, line: 1185, column: 5)
!4892 = !DILocation(line: 1185, column: 25, scope: !4891)
!4893 = !DILocation(line: 1185, column: 22, scope: !4891)
!4894 = !DILocation(line: 1185, column: 5, scope: !4887)
!4895 = !DILocation(line: 1186, column: 15, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4897, file: !1, line: 1186, column: 6)
!4897 = distinct !DILexicalBlock(scope: !4891, file: !1, line: 1185, column: 35)
!4898 = !DILocation(line: 1186, column: 13, scope: !4896)
!4899 = !DILocation(line: 1186, column: 11, scope: !4896)
!4900 = !DILocation(line: 1186, column: 23, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4896, file: !1, line: 1186, column: 6)
!4902 = !DILocation(line: 1186, column: 28, scope: !4901)
!4903 = !DILocation(line: 1186, column: 25, scope: !4901)
!4904 = !DILocation(line: 1186, column: 6, scope: !4896)
!4905 = !DILocation(line: 1187, column: 14, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4901, file: !1, line: 1186, column: 45)
!4907 = !DILocation(line: 1187, column: 8, scope: !4906)
!4908 = !DILocation(line: 1187, column: 11, scope: !4906)
!4909 = !DILocation(line: 1188, column: 6, scope: !4906)
!4910 = !DILocation(line: 1186, column: 35, scope: !4901)
!4911 = !DILocation(line: 1186, column: 41, scope: !4901)
!4912 = !DILocation(line: 1186, column: 6, scope: !4901)
!4913 = distinct !{!4913, !4904, !4914}
!4914 = !DILocation(line: 1188, column: 6, scope: !4896)
!4915 = !DILocation(line: 1189, column: 5, scope: !4897)
!4916 = !DILocation(line: 1185, column: 31, scope: !4891)
!4917 = !DILocation(line: 1185, column: 5, scope: !4891)
!4918 = distinct !{!4918, !4894, !4919}
!4919 = !DILocation(line: 1189, column: 5, scope: !4887)
!4920 = !DILocation(line: 1190, column: 4, scope: !4884)
!4921 = !DILocation(line: 1192, column: 12, scope: !4766)
!4922 = !DILocation(line: 1192, column: 4, scope: !4766)
!4923 = !DILocation(line: 1195, column: 9, scope: !4766)
!4924 = !DILocation(line: 1195, column: 7, scope: !4766)
!4925 = !DILocation(line: 1196, column: 13, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4766, file: !1, line: 1196, column: 4)
!4927 = !DILocation(line: 1196, column: 11, scope: !4926)
!4928 = !DILocation(line: 1196, column: 9, scope: !4926)
!4929 = !DILocation(line: 1196, column: 19, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4926, file: !1, line: 1196, column: 4)
!4931 = !DILocation(line: 1196, column: 24, scope: !4930)
!4932 = !DILocation(line: 1196, column: 21, scope: !4930)
!4933 = !DILocation(line: 1196, column: 4, scope: !4926)
!4934 = !DILocation(line: 1198, column: 9, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4936, file: !1, line: 1198, column: 9)
!4936 = distinct !DILexicalBlock(scope: !4930, file: !1, line: 1196, column: 34)
!4937 = !DILocation(line: 1198, column: 14, scope: !4935)
!4938 = !DILocation(line: 1198, column: 18, scope: !4935)
!4939 = !DILocation(line: 1198, column: 11, scope: !4935)
!4940 = !DILocation(line: 1198, column: 9, scope: !4936)
!4941 = !DILocation(line: 1199, column: 14, scope: !4935)
!4942 = !DILocation(line: 1199, column: 18, scope: !4935)
!4943 = !DILocation(line: 1199, column: 22, scope: !4935)
!4944 = !DILocation(line: 1199, column: 16, scope: !4935)
!4945 = !DILocation(line: 1199, column: 11, scope: !4935)
!4946 = !DILocation(line: 1199, column: 6, scope: !4935)
!4947 = !DILocation(line: 1201, column: 13, scope: !4935)
!4948 = !DILocation(line: 1201, column: 11, scope: !4935)
!4949 = !DILocation(line: 1202, column: 10, scope: !4936)
!4950 = !DILocation(line: 1202, column: 14, scope: !4936)
!4951 = !DILocation(line: 1202, column: 19, scope: !4936)
!4952 = !DILocation(line: 1202, column: 23, scope: !4936)
!4953 = !DILocation(line: 1202, column: 31, scope: !4936)
!4954 = !DILocation(line: 1202, column: 29, scope: !4936)
!4955 = !DILocation(line: 1202, column: 17, scope: !4936)
!4956 = !DILocation(line: 1202, column: 38, scope: !4936)
!4957 = !DILocation(line: 1202, column: 36, scope: !4936)
!4958 = !DILocation(line: 1202, column: 45, scope: !4936)
!4959 = !DILocation(line: 1202, column: 8, scope: !4936)
!4960 = !DILocation(line: 1204, column: 14, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4936, file: !1, line: 1204, column: 5)
!4962 = !DILocation(line: 1204, column: 12, scope: !4961)
!4963 = !DILocation(line: 1204, column: 10, scope: !4961)
!4964 = !DILocation(line: 1204, column: 22, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4961, file: !1, line: 1204, column: 5)
!4966 = !DILocation(line: 1204, column: 27, scope: !4965)
!4967 = !DILocation(line: 1204, column: 24, scope: !4965)
!4968 = !DILocation(line: 1204, column: 5, scope: !4961)
!4969 = !DILocation(line: 1205, column: 10, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4971, file: !1, line: 1205, column: 10)
!4971 = distinct !DILexicalBlock(scope: !4965, file: !1, line: 1204, column: 44)
!4972 = !DILocation(line: 1205, column: 15, scope: !4970)
!4973 = !DILocation(line: 1205, column: 19, scope: !4970)
!4974 = !DILocation(line: 1205, column: 12, scope: !4970)
!4975 = !DILocation(line: 1205, column: 10, scope: !4971)
!4976 = !DILocation(line: 1206, column: 14, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4970, file: !1, line: 1205, column: 26)
!4978 = !DILocation(line: 1206, column: 18, scope: !4977)
!4979 = !DILocation(line: 1206, column: 22, scope: !4977)
!4980 = !DILocation(line: 1206, column: 16, scope: !4977)
!4981 = !DILocation(line: 1206, column: 12, scope: !4977)
!4982 = !DILocation(line: 1207, column: 12, scope: !4977)
!4983 = !DILocation(line: 1207, column: 16, scope: !4977)
!4984 = !DILocation(line: 1207, column: 21, scope: !4977)
!4985 = !DILocation(line: 1207, column: 25, scope: !4977)
!4986 = !DILocation(line: 1207, column: 33, scope: !4977)
!4987 = !DILocation(line: 1207, column: 31, scope: !4977)
!4988 = !DILocation(line: 1207, column: 19, scope: !4977)
!4989 = !DILocation(line: 1207, column: 40, scope: !4977)
!4990 = !DILocation(line: 1207, column: 38, scope: !4977)
!4991 = !DILocation(line: 1207, column: 10, scope: !4977)
!4992 = !DILocation(line: 1208, column: 6, scope: !4977)
!4993 = !DILocation(line: 1210, column: 9, scope: !4970)
!4994 = !DILocation(line: 1212, column: 11, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4971, file: !1, line: 1212, column: 10)
!4996 = !DILocation(line: 1212, column: 10, scope: !4995)
!4997 = !DILocation(line: 1212, column: 14, scope: !4995)
!4998 = !DILocation(line: 1212, column: 10, scope: !4971)
!4999 = !DILocation(line: 1213, column: 20, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4995, file: !1, line: 1212, column: 23)
!5001 = !DILocation(line: 1213, column: 24, scope: !5000)
!5002 = !DILocation(line: 1213, column: 28, scope: !5000)
!5003 = !DILocation(line: 1213, column: 34, scope: !5000)
!5004 = !DILocation(line: 1213, column: 33, scope: !5000)
!5005 = !DILocation(line: 1213, column: 7, scope: !5000)
!5006 = !DILocation(line: 1214, column: 6, scope: !5000)
!5007 = !DILocation(line: 1215, column: 5, scope: !4971)
!5008 = !DILocation(line: 1204, column: 34, scope: !4965)
!5009 = !DILocation(line: 1204, column: 40, scope: !4965)
!5010 = !DILocation(line: 1204, column: 5, scope: !4965)
!5011 = distinct !{!5011, !4968, !5012}
!5012 = !DILocation(line: 1215, column: 5, scope: !4961)
!5013 = !DILocation(line: 1216, column: 4, scope: !4936)
!5014 = !DILocation(line: 1196, column: 30, scope: !4930)
!5015 = !DILocation(line: 1196, column: 4, scope: !4930)
!5016 = distinct !{!5016, !4933, !5017}
!5017 = !DILocation(line: 1216, column: 4, scope: !4926)
!5018 = !DILocation(line: 1218, column: 7, scope: !4766)
!5019 = !DILocation(line: 1219, column: 13, scope: !4766)
!5020 = !DILocation(line: 1219, column: 10, scope: !4766)
!5021 = distinct !{!5021, !4763, !5022}
!5022 = !DILocation(line: 1220, column: 3, scope: !4748)
!5023 = !DILocation(line: 1221, column: 8, scope: !4748)
!5024 = !DILocation(line: 1221, column: 5, scope: !4748)
!5025 = !DILocation(line: 1222, column: 7, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !4748, file: !1, line: 1222, column: 7)
!5027 = !DILocation(line: 1222, column: 17, scope: !5026)
!5028 = !DILocation(line: 1222, column: 7, scope: !4748)
!5029 = !DILocation(line: 1223, column: 39, scope: !5026)
!5030 = !DILocation(line: 1223, column: 21, scope: !5026)
!5031 = !DILocation(line: 1223, column: 46, scope: !5026)
!5032 = !DILocation(line: 1223, column: 62, scope: !5026)
!5033 = !DILocation(line: 1223, column: 60, scope: !5026)
!5034 = !DILocation(line: 1223, column: 58, scope: !5026)
!5035 = !DILocation(line: 1223, column: 67, scope: !5026)
!5036 = !DILocation(line: 1223, column: 56, scope: !5026)
!5037 = !DILocation(line: 1223, column: 43, scope: !5026)
!5038 = !DILocation(line: 1223, column: 9, scope: !5026)
!5039 = !DILocation(line: 1223, column: 7, scope: !5026)
!5040 = !DILocation(line: 1223, column: 4, scope: !5026)
!5041 = distinct !{!5041, !4745, !5042}
!5042 = !DILocation(line: 1224, column: 2, scope: !4427)
!5043 = !DILocation(line: 1227, column: 2, scope: !4427)
!5044 = !DILocation(line: 1227, column: 12, scope: !4427)
!5045 = !DILocation(line: 1228, column: 2, scope: !4427)
!5046 = !DILocation(line: 1228, column: 12, scope: !4427)
!5047 = !DILocation(line: 1229, column: 2, scope: !4427)
!5048 = !DILocation(line: 1229, column: 12, scope: !4427)
!5049 = !DILocation(line: 1230, column: 2, scope: !4427)
!5050 = !DILocation(line: 1230, column: 12, scope: !4427)
!5051 = !DILocation(line: 1231, column: 2, scope: !4427)
!5052 = !DILocation(line: 1231, column: 12, scope: !4427)
!5053 = !DILocation(line: 1232, column: 1, scope: !4427)
!5054 = distinct !DISubprogram(name: "basisNurb", scope: !1, file: !1, line: 997, type: !5055, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!5055 = !DISubroutineType(types: !5056)
!5056 = !{null, !128, !77, !79, !1325, !1325, !1840, !1840}
!5057 = !DILocalVariable(name: "t", arg: 1, scope: !5054, file: !1, line: 997, type: !128)
!5058 = !DILocation(line: 997, column: 29, scope: !5054)
!5059 = !DILocalVariable(name: "order", arg: 2, scope: !5054, file: !1, line: 997, type: !77)
!5060 = !DILocation(line: 997, column: 38, scope: !5054)
!5061 = !DILocalVariable(name: "pnts", arg: 3, scope: !5054, file: !1, line: 997, type: !79)
!5062 = !DILocation(line: 997, column: 49, scope: !5054)
!5063 = !DILocalVariable(name: "knots", arg: 4, scope: !5054, file: !1, line: 997, type: !1325)
!5064 = !DILocation(line: 997, column: 62, scope: !5054)
!5065 = !DILocalVariable(name: "basis", arg: 5, scope: !5054, file: !1, line: 997, type: !1325)
!5066 = !DILocation(line: 997, column: 76, scope: !5054)
!5067 = !DILocalVariable(name: "start", arg: 6, scope: !5054, file: !1, line: 997, type: !1840)
!5068 = !DILocation(line: 997, column: 88, scope: !5054)
!5069 = !DILocalVariable(name: "end", arg: 7, scope: !5054, file: !1, line: 997, type: !1840)
!5070 = !DILocation(line: 997, column: 100, scope: !5054)
!5071 = !DILocalVariable(name: "d", scope: !5054, file: !1, line: 999, type: !128)
!5072 = !DILocation(line: 999, column: 8, scope: !5054)
!5073 = !DILocalVariable(name: "e", scope: !5054, file: !1, line: 999, type: !128)
!5074 = !DILocation(line: 999, column: 11, scope: !5054)
!5075 = !DILocalVariable(name: "i", scope: !5054, file: !1, line: 1000, type: !79)
!5076 = !DILocation(line: 1000, column: 6, scope: !5054)
!5077 = !DILocalVariable(name: "i1", scope: !5054, file: !1, line: 1000, type: !79)
!5078 = !DILocation(line: 1000, column: 9, scope: !5054)
!5079 = !DILocalVariable(name: "i2", scope: !5054, file: !1, line: 1000, type: !79)
!5080 = !DILocation(line: 1000, column: 17, scope: !5054)
!5081 = !DILocalVariable(name: "j", scope: !5054, file: !1, line: 1000, type: !79)
!5082 = !DILocation(line: 1000, column: 25, scope: !5054)
!5083 = !DILocalVariable(name: "orderpluspnts", scope: !5054, file: !1, line: 1000, type: !79)
!5084 = !DILocation(line: 1000, column: 28, scope: !5054)
!5085 = !DILocalVariable(name: "opp2", scope: !5054, file: !1, line: 1000, type: !79)
!5086 = !DILocation(line: 1000, column: 43, scope: !5054)
!5087 = !DILocalVariable(name: "o2", scope: !5054, file: !1, line: 1000, type: !79)
!5088 = !DILocation(line: 1000, column: 49, scope: !5054)
!5089 = !DILocation(line: 1002, column: 18, scope: !5054)
!5090 = !DILocation(line: 1002, column: 26, scope: !5054)
!5091 = !DILocation(line: 1002, column: 24, scope: !5054)
!5092 = !DILocation(line: 1002, column: 16, scope: !5054)
!5093 = !DILocation(line: 1003, column: 9, scope: !5054)
!5094 = !DILocation(line: 1003, column: 23, scope: !5054)
!5095 = !DILocation(line: 1003, column: 7, scope: !5054)
!5096 = !DILocation(line: 1006, column: 6, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5054, file: !1, line: 1006, column: 6)
!5098 = !DILocation(line: 1006, column: 10, scope: !5097)
!5099 = !DILocation(line: 1006, column: 8, scope: !5097)
!5100 = !DILocation(line: 1006, column: 6, scope: !5054)
!5101 = !DILocation(line: 1007, column: 7, scope: !5097)
!5102 = !DILocation(line: 1007, column: 5, scope: !5097)
!5103 = !DILocation(line: 1007, column: 3, scope: !5097)
!5104 = !DILocation(line: 1008, column: 11, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5097, file: !1, line: 1008, column: 11)
!5106 = !DILocation(line: 1008, column: 15, scope: !5105)
!5107 = !DILocation(line: 1008, column: 21, scope: !5105)
!5108 = !DILocation(line: 1008, column: 13, scope: !5105)
!5109 = !DILocation(line: 1008, column: 11, scope: !5097)
!5110 = !DILocation(line: 1009, column: 7, scope: !5105)
!5111 = !DILocation(line: 1009, column: 13, scope: !5105)
!5112 = !DILocation(line: 1009, column: 5, scope: !5105)
!5113 = !DILocation(line: 1009, column: 3, scope: !5105)
!5114 = !DILocation(line: 1012, column: 7, scope: !5054)
!5115 = !DILocation(line: 1012, column: 13, scope: !5054)
!5116 = !DILocation(line: 1012, column: 5, scope: !5054)
!5117 = !DILocation(line: 1013, column: 9, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5054, file: !1, line: 1013, column: 2)
!5119 = !DILocation(line: 1013, column: 7, scope: !5118)
!5120 = !DILocation(line: 1013, column: 14, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5118, file: !1, line: 1013, column: 2)
!5122 = !DILocation(line: 1013, column: 18, scope: !5121)
!5123 = !DILocation(line: 1013, column: 16, scope: !5121)
!5124 = !DILocation(line: 1013, column: 2, scope: !5118)
!5125 = !DILocation(line: 1014, column: 7, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5127, file: !1, line: 1014, column: 7)
!5127 = distinct !DILexicalBlock(scope: !5121, file: !1, line: 1013, column: 29)
!5128 = !DILocation(line: 1014, column: 13, scope: !5126)
!5129 = !DILocation(line: 1014, column: 19, scope: !5126)
!5130 = !DILocation(line: 1014, column: 25, scope: !5126)
!5131 = !DILocation(line: 1014, column: 27, scope: !5126)
!5132 = !DILocation(line: 1014, column: 16, scope: !5126)
!5133 = !DILocation(line: 1014, column: 32, scope: !5126)
!5134 = !DILocation(line: 1014, column: 35, scope: !5126)
!5135 = !DILocation(line: 1014, column: 40, scope: !5126)
!5136 = !DILocation(line: 1014, column: 46, scope: !5126)
!5137 = !DILocation(line: 1014, column: 37, scope: !5126)
!5138 = !DILocation(line: 1014, column: 49, scope: !5126)
!5139 = !DILocation(line: 1014, column: 52, scope: !5126)
!5140 = !DILocation(line: 1014, column: 57, scope: !5126)
!5141 = !DILocation(line: 1014, column: 63, scope: !5126)
!5142 = !DILocation(line: 1014, column: 65, scope: !5126)
!5143 = !DILocation(line: 1014, column: 54, scope: !5126)
!5144 = !DILocation(line: 1014, column: 7, scope: !5127)
!5145 = !DILocation(line: 1015, column: 4, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5126, file: !1, line: 1014, column: 71)
!5147 = !DILocation(line: 1015, column: 10, scope: !5146)
!5148 = !DILocation(line: 1015, column: 13, scope: !5146)
!5149 = !DILocation(line: 1016, column: 9, scope: !5146)
!5150 = !DILocation(line: 1016, column: 13, scope: !5146)
!5151 = !DILocation(line: 1016, column: 11, scope: !5146)
!5152 = !DILocation(line: 1016, column: 7, scope: !5146)
!5153 = !DILocation(line: 1017, column: 8, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5146, file: !1, line: 1017, column: 8)
!5155 = !DILocation(line: 1017, column: 11, scope: !5154)
!5156 = !DILocation(line: 1017, column: 8, scope: !5146)
!5157 = !DILocation(line: 1017, column: 19, scope: !5154)
!5158 = !DILocation(line: 1017, column: 16, scope: !5154)
!5159 = !DILocation(line: 1018, column: 9, scope: !5146)
!5160 = !DILocation(line: 1018, column: 7, scope: !5146)
!5161 = !DILocation(line: 1019, column: 5, scope: !5146)
!5162 = !DILocation(line: 1020, column: 4, scope: !5146)
!5163 = !DILocation(line: 1020, column: 11, scope: !5146)
!5164 = !DILocation(line: 1020, column: 15, scope: !5146)
!5165 = !DILocation(line: 1020, column: 13, scope: !5146)
!5166 = !DILocation(line: 1021, column: 5, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5146, file: !1, line: 1020, column: 21)
!5168 = !DILocation(line: 1021, column: 11, scope: !5167)
!5169 = !DILocation(line: 1021, column: 14, scope: !5167)
!5170 = !DILocation(line: 1022, column: 6, scope: !5167)
!5171 = distinct !{!5171, !5162, !5172}
!5172 = !DILocation(line: 1023, column: 4, scope: !5146)
!5173 = !DILocation(line: 1024, column: 4, scope: !5146)
!5174 = !DILocation(line: 1027, column: 4, scope: !5126)
!5175 = !DILocation(line: 1027, column: 10, scope: !5126)
!5176 = !DILocation(line: 1027, column: 13, scope: !5126)
!5177 = !DILocation(line: 1028, column: 2, scope: !5127)
!5178 = !DILocation(line: 1013, column: 25, scope: !5121)
!5179 = !DILocation(line: 1013, column: 2, scope: !5121)
!5180 = distinct !{!5180, !5124, !5181}
!5181 = !DILocation(line: 1028, column: 2, scope: !5118)
!5182 = !DILocation(line: 1029, column: 2, scope: !5054)
!5183 = !DILocation(line: 1029, column: 8, scope: !5054)
!5184 = !DILocation(line: 1029, column: 11, scope: !5054)
!5185 = !DILocation(line: 1032, column: 9, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5054, file: !1, line: 1032, column: 2)
!5187 = !DILocation(line: 1032, column: 7, scope: !5186)
!5188 = !DILocation(line: 1032, column: 14, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5186, file: !1, line: 1032, column: 2)
!5190 = !DILocation(line: 1032, column: 19, scope: !5189)
!5191 = !DILocation(line: 1032, column: 16, scope: !5189)
!5192 = !DILocation(line: 1032, column: 2, scope: !5186)
!5193 = !DILocation(line: 1034, column: 7, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5195, file: !1, line: 1034, column: 7)
!5195 = distinct !DILexicalBlock(scope: !5189, file: !1, line: 1032, column: 31)
!5196 = !DILocation(line: 1034, column: 12, scope: !5194)
!5197 = !DILocation(line: 1034, column: 10, scope: !5194)
!5198 = !DILocation(line: 1034, column: 17, scope: !5194)
!5199 = !DILocation(line: 1034, column: 14, scope: !5194)
!5200 = !DILocation(line: 1034, column: 7, scope: !5195)
!5201 = !DILocation(line: 1034, column: 37, scope: !5194)
!5202 = !DILocation(line: 1034, column: 44, scope: !5194)
!5203 = !DILocation(line: 1034, column: 42, scope: !5194)
!5204 = !DILocation(line: 1034, column: 35, scope: !5194)
!5205 = !DILocation(line: 1034, column: 32, scope: !5194)
!5206 = !DILocation(line: 1036, column: 12, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5195, file: !1, line: 1036, column: 3)
!5208 = !DILocation(line: 1036, column: 10, scope: !5207)
!5209 = !DILocation(line: 1036, column: 8, scope: !5207)
!5210 = !DILocation(line: 1036, column: 16, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5207, file: !1, line: 1036, column: 3)
!5212 = !DILocation(line: 1036, column: 21, scope: !5211)
!5213 = !DILocation(line: 1036, column: 18, scope: !5211)
!5214 = !DILocation(line: 1036, column: 3, scope: !5207)
!5215 = !DILocation(line: 1037, column: 8, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5217, file: !1, line: 1037, column: 8)
!5217 = distinct !DILexicalBlock(scope: !5211, file: !1, line: 1036, column: 30)
!5218 = !DILocation(line: 1037, column: 14, scope: !5216)
!5219 = !DILocation(line: 1037, column: 17, scope: !5216)
!5220 = !DILocation(line: 1037, column: 8, scope: !5217)
!5221 = !DILocation(line: 1038, column: 11, scope: !5216)
!5222 = !DILocation(line: 1038, column: 15, scope: !5216)
!5223 = !DILocation(line: 1038, column: 21, scope: !5216)
!5224 = !DILocation(line: 1038, column: 13, scope: !5216)
!5225 = !DILocation(line: 1038, column: 27, scope: !5216)
!5226 = !DILocation(line: 1038, column: 33, scope: !5216)
!5227 = !DILocation(line: 1038, column: 25, scope: !5216)
!5228 = !DILocation(line: 1038, column: 40, scope: !5216)
!5229 = !DILocation(line: 1038, column: 46, scope: !5216)
!5230 = !DILocation(line: 1038, column: 50, scope: !5216)
!5231 = !DILocation(line: 1038, column: 48, scope: !5216)
!5232 = !DILocation(line: 1038, column: 52, scope: !5216)
!5233 = !DILocation(line: 1038, column: 59, scope: !5216)
!5234 = !DILocation(line: 1038, column: 65, scope: !5216)
!5235 = !DILocation(line: 1038, column: 57, scope: !5216)
!5236 = !DILocation(line: 1038, column: 37, scope: !5216)
!5237 = !DILocation(line: 1038, column: 7, scope: !5216)
!5238 = !DILocation(line: 1038, column: 5, scope: !5216)
!5239 = !DILocation(line: 1040, column: 7, scope: !5216)
!5240 = !DILocation(line: 1042, column: 8, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5217, file: !1, line: 1042, column: 8)
!5242 = !DILocation(line: 1042, column: 14, scope: !5241)
!5243 = !DILocation(line: 1042, column: 16, scope: !5241)
!5244 = !DILocation(line: 1042, column: 21, scope: !5241)
!5245 = !DILocation(line: 1042, column: 8, scope: !5217)
!5246 = !DILocation(line: 1043, column: 11, scope: !5241)
!5247 = !DILocation(line: 1043, column: 17, scope: !5241)
!5248 = !DILocation(line: 1043, column: 21, scope: !5241)
!5249 = !DILocation(line: 1043, column: 19, scope: !5241)
!5250 = !DILocation(line: 1043, column: 26, scope: !5241)
!5251 = !DILocation(line: 1043, column: 24, scope: !5241)
!5252 = !DILocation(line: 1043, column: 31, scope: !5241)
!5253 = !DILocation(line: 1043, column: 37, scope: !5241)
!5254 = !DILocation(line: 1043, column: 39, scope: !5241)
!5255 = !DILocation(line: 1043, column: 29, scope: !5241)
!5256 = !DILocation(line: 1043, column: 48, scope: !5241)
!5257 = !DILocation(line: 1043, column: 54, scope: !5241)
!5258 = !DILocation(line: 1043, column: 58, scope: !5241)
!5259 = !DILocation(line: 1043, column: 56, scope: !5241)
!5260 = !DILocation(line: 1043, column: 63, scope: !5241)
!5261 = !DILocation(line: 1043, column: 69, scope: !5241)
!5262 = !DILocation(line: 1043, column: 71, scope: !5241)
!5263 = !DILocation(line: 1043, column: 61, scope: !5241)
!5264 = !DILocation(line: 1043, column: 45, scope: !5241)
!5265 = !DILocation(line: 1043, column: 7, scope: !5241)
!5266 = !DILocation(line: 1043, column: 5, scope: !5241)
!5267 = !DILocation(line: 1045, column: 7, scope: !5241)
!5268 = !DILocation(line: 1047, column: 15, scope: !5217)
!5269 = !DILocation(line: 1047, column: 19, scope: !5217)
!5270 = !DILocation(line: 1047, column: 17, scope: !5217)
!5271 = !DILocation(line: 1047, column: 4, scope: !5217)
!5272 = !DILocation(line: 1047, column: 10, scope: !5217)
!5273 = !DILocation(line: 1047, column: 13, scope: !5217)
!5274 = !DILocation(line: 1048, column: 3, scope: !5217)
!5275 = !DILocation(line: 1036, column: 26, scope: !5211)
!5276 = !DILocation(line: 1036, column: 3, scope: !5211)
!5277 = distinct !{!5277, !5214, !5278}
!5278 = !DILocation(line: 1048, column: 3, scope: !5207)
!5279 = !DILocation(line: 1049, column: 2, scope: !5195)
!5280 = !DILocation(line: 1032, column: 27, scope: !5189)
!5281 = !DILocation(line: 1032, column: 2, scope: !5189)
!5282 = distinct !{!5282, !5192, !5283}
!5283 = !DILocation(line: 1049, column: 2, scope: !5186)
!5284 = !DILocation(line: 1051, column: 3, scope: !5054)
!5285 = !DILocation(line: 1051, column: 9, scope: !5054)
!5286 = !DILocation(line: 1052, column: 3, scope: !5054)
!5287 = !DILocation(line: 1052, column: 7, scope: !5054)
!5288 = !DILocation(line: 1054, column: 11, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5054, file: !1, line: 1054, column: 2)
!5290 = !DILocation(line: 1054, column: 9, scope: !5289)
!5291 = !DILocation(line: 1054, column: 7, scope: !5289)
!5292 = !DILocation(line: 1054, column: 15, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5289, file: !1, line: 1054, column: 2)
!5294 = !DILocation(line: 1054, column: 20, scope: !5293)
!5295 = !DILocation(line: 1054, column: 17, scope: !5293)
!5296 = !DILocation(line: 1054, column: 2, scope: !5289)
!5297 = !DILocation(line: 1055, column: 7, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5299, file: !1, line: 1055, column: 7)
!5299 = distinct !DILexicalBlock(scope: !5293, file: !1, line: 1054, column: 29)
!5300 = !DILocation(line: 1055, column: 13, scope: !5298)
!5301 = !DILocation(line: 1055, column: 16, scope: !5298)
!5302 = !DILocation(line: 1055, column: 7, scope: !5299)
!5303 = !DILocation(line: 1056, column: 11, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5298, file: !1, line: 1055, column: 24)
!5305 = !DILocation(line: 1056, column: 5, scope: !5304)
!5306 = !DILocation(line: 1056, column: 9, scope: !5304)
!5307 = !DILocation(line: 1057, column: 9, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5304, file: !1, line: 1057, column: 8)
!5309 = !DILocation(line: 1057, column: 8, scope: !5308)
!5310 = !DILocation(line: 1057, column: 15, scope: !5308)
!5311 = !DILocation(line: 1057, column: 8, scope: !5304)
!5312 = !DILocation(line: 1057, column: 33, scope: !5308)
!5313 = !DILocation(line: 1057, column: 25, scope: !5308)
!5314 = !DILocation(line: 1057, column: 31, scope: !5308)
!5315 = !DILocation(line: 1057, column: 24, scope: !5308)
!5316 = !DILocation(line: 1058, column: 3, scope: !5304)
!5317 = !DILocation(line: 1059, column: 2, scope: !5299)
!5318 = !DILocation(line: 1054, column: 25, scope: !5293)
!5319 = !DILocation(line: 1054, column: 2, scope: !5293)
!5320 = distinct !{!5320, !5296, !5321}
!5321 = !DILocation(line: 1059, column: 2, scope: !5289)
!5322 = !DILocation(line: 1060, column: 1, scope: !5054)
!5323 = distinct !DISubprogram(name: "madd_v3_v3fl", scope: !2341, file: !2341, line: 507, type: !5324, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!5324 = !DISubroutineType(types: !5325)
!5325 = !{null, !1325, !3191, !128}
!5326 = !DILocalVariable(name: "r", arg: 1, scope: !5323, file: !2341, line: 507, type: !1325)
!5327 = !DILocation(line: 507, column: 33, scope: !5323)
!5328 = !DILocalVariable(name: "a", arg: 2, scope: !5323, file: !2341, line: 507, type: !3191)
!5329 = !DILocation(line: 507, column: 51, scope: !5323)
!5330 = !DILocalVariable(name: "f", arg: 3, scope: !5323, file: !2341, line: 507, type: !128)
!5331 = !DILocation(line: 507, column: 63, scope: !5323)
!5332 = !DILocation(line: 509, column: 10, scope: !5323)
!5333 = !DILocation(line: 509, column: 17, scope: !5323)
!5334 = !DILocation(line: 509, column: 15, scope: !5323)
!5335 = !DILocation(line: 509, column: 2, scope: !5323)
!5336 = !DILocation(line: 509, column: 7, scope: !5323)
!5337 = !DILocation(line: 510, column: 10, scope: !5323)
!5338 = !DILocation(line: 510, column: 17, scope: !5323)
!5339 = !DILocation(line: 510, column: 15, scope: !5323)
!5340 = !DILocation(line: 510, column: 2, scope: !5323)
!5341 = !DILocation(line: 510, column: 7, scope: !5323)
!5342 = !DILocation(line: 511, column: 10, scope: !5323)
!5343 = !DILocation(line: 511, column: 17, scope: !5323)
!5344 = !DILocation(line: 511, column: 15, scope: !5323)
!5345 = !DILocation(line: 511, column: 2, scope: !5323)
!5346 = !DILocation(line: 511, column: 7, scope: !5323)
!5347 = !DILocation(line: 512, column: 1, scope: !5323)
!5348 = distinct !DISubprogram(name: "BKE_nurb_makeCurve", scope: !1, file: !1, line: 1239, type: !5349, scopeLine: 1241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!5349 = !DISubroutineType(types: !5350)
!5350 = !{null, !1782, !1325, !1325, !1325, !1325, !79, !79}
!5351 = !DILocalVariable(name: "nu", arg: 1, scope: !5348, file: !1, line: 1239, type: !1782)
!5352 = !DILocation(line: 1239, column: 31, scope: !5348)
!5353 = !DILocalVariable(name: "coord_array", arg: 2, scope: !5348, file: !1, line: 1239, type: !1325)
!5354 = !DILocation(line: 1239, column: 42, scope: !5348)
!5355 = !DILocalVariable(name: "tilt_array", arg: 3, scope: !5348, file: !1, line: 1239, type: !1325)
!5356 = !DILocation(line: 1239, column: 62, scope: !5348)
!5357 = !DILocalVariable(name: "radius_array", arg: 4, scope: !5348, file: !1, line: 1239, type: !1325)
!5358 = !DILocation(line: 1239, column: 81, scope: !5348)
!5359 = !DILocalVariable(name: "weight_array", arg: 5, scope: !5348, file: !1, line: 1239, type: !1325)
!5360 = !DILocation(line: 1239, column: 102, scope: !5348)
!5361 = !DILocalVariable(name: "resolu", arg: 6, scope: !5348, file: !1, line: 1240, type: !79)
!5362 = !DILocation(line: 1240, column: 29, scope: !5348)
!5363 = !DILocalVariable(name: "stride", arg: 7, scope: !5348, file: !1, line: 1240, type: !79)
!5364 = !DILocation(line: 1240, column: 41, scope: !5348)
!5365 = !DILocalVariable(name: "bp", scope: !5348, file: !1, line: 1242, type: !1805)
!5366 = !DILocation(line: 1242, column: 10, scope: !5348)
!5367 = !DILocalVariable(name: "u", scope: !5348, file: !1, line: 1243, type: !128)
!5368 = !DILocation(line: 1243, column: 8, scope: !5348)
!5369 = !DILocalVariable(name: "ustart", scope: !5348, file: !1, line: 1243, type: !128)
!5370 = !DILocation(line: 1243, column: 11, scope: !5348)
!5371 = !DILocalVariable(name: "uend", scope: !5348, file: !1, line: 1243, type: !128)
!5372 = !DILocation(line: 1243, column: 19, scope: !5348)
!5373 = !DILocalVariable(name: "ustep", scope: !5348, file: !1, line: 1243, type: !128)
!5374 = !DILocation(line: 1243, column: 25, scope: !5348)
!5375 = !DILocalVariable(name: "sumdiv", scope: !5348, file: !1, line: 1243, type: !128)
!5376 = !DILocation(line: 1243, column: 32, scope: !5348)
!5377 = !DILocalVariable(name: "basisu", scope: !5348, file: !1, line: 1244, type: !1325)
!5378 = !DILocation(line: 1244, column: 9, scope: !5348)
!5379 = !DILocalVariable(name: "sum", scope: !5348, file: !1, line: 1244, type: !1325)
!5380 = !DILocation(line: 1244, column: 18, scope: !5348)
!5381 = !DILocalVariable(name: "fp", scope: !5348, file: !1, line: 1244, type: !1325)
!5382 = !DILocation(line: 1244, column: 24, scope: !5348)
!5383 = !DILocalVariable(name: "coord_fp", scope: !5348, file: !1, line: 1245, type: !1325)
!5384 = !DILocation(line: 1245, column: 9, scope: !5348)
!5385 = !DILocation(line: 1245, column: 20, scope: !5348)
!5386 = !DILocalVariable(name: "tilt_fp", scope: !5348, file: !1, line: 1245, type: !1325)
!5387 = !DILocation(line: 1245, column: 34, scope: !5348)
!5388 = !DILocation(line: 1245, column: 44, scope: !5348)
!5389 = !DILocalVariable(name: "radius_fp", scope: !5348, file: !1, line: 1245, type: !1325)
!5390 = !DILocation(line: 1245, column: 57, scope: !5348)
!5391 = !DILocation(line: 1245, column: 69, scope: !5348)
!5392 = !DILocalVariable(name: "weight_fp", scope: !5348, file: !1, line: 1245, type: !1325)
!5393 = !DILocation(line: 1245, column: 84, scope: !5348)
!5394 = !DILocation(line: 1245, column: 96, scope: !5348)
!5395 = !DILocalVariable(name: "i", scope: !5348, file: !1, line: 1246, type: !79)
!5396 = !DILocation(line: 1246, column: 6, scope: !5348)
!5397 = !DILocalVariable(name: "len", scope: !5348, file: !1, line: 1246, type: !79)
!5398 = !DILocation(line: 1246, column: 9, scope: !5348)
!5399 = !DILocalVariable(name: "istart", scope: !5348, file: !1, line: 1246, type: !79)
!5400 = !DILocation(line: 1246, column: 14, scope: !5348)
!5401 = !DILocalVariable(name: "iend", scope: !5348, file: !1, line: 1246, type: !79)
!5402 = !DILocation(line: 1246, column: 22, scope: !5348)
!5403 = !DILocalVariable(name: "cycl", scope: !5348, file: !1, line: 1246, type: !79)
!5404 = !DILocation(line: 1246, column: 28, scope: !5348)
!5405 = !DILocation(line: 1248, column: 6, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5348, file: !1, line: 1248, column: 6)
!5407 = !DILocation(line: 1248, column: 10, scope: !5406)
!5408 = !DILocation(line: 1248, column: 17, scope: !5406)
!5409 = !DILocation(line: 1248, column: 6, scope: !5348)
!5410 = !DILocation(line: 1249, column: 3, scope: !5406)
!5411 = !DILocation(line: 1250, column: 6, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5348, file: !1, line: 1250, column: 6)
!5413 = !DILocation(line: 1250, column: 10, scope: !5412)
!5414 = !DILocation(line: 1250, column: 19, scope: !5412)
!5415 = !DILocation(line: 1250, column: 23, scope: !5412)
!5416 = !DILocation(line: 1250, column: 17, scope: !5412)
!5417 = !DILocation(line: 1250, column: 6, scope: !5348)
!5418 = !DILocation(line: 1251, column: 3, scope: !5412)
!5419 = !DILocation(line: 1252, column: 6, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5348, file: !1, line: 1252, column: 6)
!5421 = !DILocation(line: 1252, column: 18, scope: !5420)
!5422 = !DILocation(line: 1252, column: 6, scope: !5348)
!5423 = !DILocation(line: 1253, column: 3, scope: !5420)
!5424 = !DILocation(line: 1256, column: 8, scope: !5348)
!5425 = !DILocation(line: 1256, column: 12, scope: !5348)
!5426 = !DILocation(line: 1256, column: 6, scope: !5348)
!5427 = !DILocation(line: 1257, column: 6, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !5348, file: !1, line: 1257, column: 6)
!5429 = !DILocation(line: 1257, column: 10, scope: !5428)
!5430 = !DILocation(line: 1257, column: 6, scope: !5348)
!5431 = !DILocation(line: 1258, column: 3, scope: !5428)
!5432 = !DILocation(line: 1259, column: 17, scope: !5348)
!5433 = !DILocation(line: 1259, column: 45, scope: !5348)
!5434 = !DILocation(line: 1259, column: 43, scope: !5348)
!5435 = !DILocation(line: 1259, column: 8, scope: !5348)
!5436 = !DILocation(line: 1259, column: 6, scope: !5348)
!5437 = !DILocation(line: 1261, column: 12, scope: !5348)
!5438 = !DILocation(line: 1261, column: 21, scope: !5348)
!5439 = !DILocation(line: 1261, column: 19, scope: !5348)
!5440 = !DILocation(line: 1261, column: 9, scope: !5348)
!5441 = !DILocation(line: 1263, column: 6, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5348, file: !1, line: 1263, column: 6)
!5443 = !DILocation(line: 1263, column: 13, scope: !5442)
!5444 = !DILocation(line: 1263, column: 6, scope: !5348)
!5445 = !DILocation(line: 1264, column: 3, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5442, file: !1, line: 1263, column: 19)
!5447 = !DILocation(line: 1264, column: 13, scope: !5446)
!5448 = !DILocation(line: 1265, column: 3, scope: !5446)
!5449 = !DILocation(line: 1268, column: 7, scope: !5348)
!5450 = !DILocation(line: 1268, column: 11, scope: !5348)
!5451 = !DILocation(line: 1268, column: 5, scope: !5348)
!5452 = !DILocation(line: 1269, column: 11, scope: !5348)
!5453 = !DILocation(line: 1269, column: 14, scope: !5348)
!5454 = !DILocation(line: 1269, column: 18, scope: !5348)
!5455 = !DILocation(line: 1269, column: 25, scope: !5348)
!5456 = !DILocation(line: 1269, column: 9, scope: !5348)
!5457 = !DILocation(line: 1270, column: 6, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5348, file: !1, line: 1270, column: 6)
!5459 = !DILocation(line: 1270, column: 10, scope: !5458)
!5460 = !DILocation(line: 1270, column: 16, scope: !5458)
!5461 = !DILocation(line: 1270, column: 6, scope: !5348)
!5462 = !DILocation(line: 1271, column: 10, scope: !5458)
!5463 = !DILocation(line: 1271, column: 13, scope: !5458)
!5464 = !DILocation(line: 1271, column: 17, scope: !5458)
!5465 = !DILocation(line: 1271, column: 25, scope: !5458)
!5466 = !DILocation(line: 1271, column: 29, scope: !5458)
!5467 = !DILocation(line: 1271, column: 23, scope: !5458)
!5468 = !DILocation(line: 1271, column: 36, scope: !5458)
!5469 = !DILocation(line: 1271, column: 8, scope: !5458)
!5470 = !DILocation(line: 1271, column: 3, scope: !5458)
!5471 = !DILocation(line: 1273, column: 10, scope: !5458)
!5472 = !DILocation(line: 1273, column: 13, scope: !5458)
!5473 = !DILocation(line: 1273, column: 17, scope: !5458)
!5474 = !DILocation(line: 1273, column: 8, scope: !5458)
!5475 = !DILocation(line: 1274, column: 11, scope: !5348)
!5476 = !DILocation(line: 1274, column: 18, scope: !5348)
!5477 = !DILocation(line: 1274, column: 16, scope: !5348)
!5478 = !DILocation(line: 1274, column: 29, scope: !5348)
!5479 = !DILocation(line: 1274, column: 40, scope: !5348)
!5480 = !DILocation(line: 1274, column: 44, scope: !5348)
!5481 = !DILocation(line: 1274, column: 50, scope: !5348)
!5482 = !DILocation(line: 1274, column: 39, scope: !5348)
!5483 = !DILocation(line: 1274, column: 36, scope: !5348)
!5484 = !DILocation(line: 1274, column: 28, scope: !5348)
!5485 = !DILocation(line: 1274, column: 26, scope: !5348)
!5486 = !DILocation(line: 1274, column: 8, scope: !5348)
!5487 = !DILocation(line: 1276, column: 20, scope: !5348)
!5488 = !DILocation(line: 1276, column: 48, scope: !5348)
!5489 = !DILocation(line: 1276, column: 46, scope: !5348)
!5490 = !DILocation(line: 1276, column: 11, scope: !5348)
!5491 = !DILocation(line: 1276, column: 9, scope: !5348)
!5492 = !DILocation(line: 1278, column: 6, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5348, file: !1, line: 1278, column: 6)
!5494 = !DILocation(line: 1278, column: 10, scope: !5493)
!5495 = !DILocation(line: 1278, column: 16, scope: !5493)
!5496 = !DILocation(line: 1278, column: 6, scope: !5348)
!5497 = !DILocation(line: 1279, column: 10, scope: !5493)
!5498 = !DILocation(line: 1279, column: 14, scope: !5493)
!5499 = !DILocation(line: 1279, column: 21, scope: !5493)
!5500 = !DILocation(line: 1279, column: 8, scope: !5493)
!5501 = !DILocation(line: 1279, column: 3, scope: !5493)
!5502 = !DILocation(line: 1281, column: 8, scope: !5493)
!5503 = !DILocation(line: 1283, column: 6, scope: !5348)
!5504 = !DILocation(line: 1283, column: 4, scope: !5348)
!5505 = !DILocation(line: 1284, column: 2, scope: !5348)
!5506 = !DILocation(line: 1284, column: 15, scope: !5348)
!5507 = !DILocation(line: 1285, column: 13, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5348, file: !1, line: 1284, column: 19)
!5509 = !DILocation(line: 1285, column: 16, scope: !5508)
!5510 = !DILocation(line: 1285, column: 20, scope: !5508)
!5511 = !DILocation(line: 1285, column: 28, scope: !5508)
!5512 = !DILocation(line: 1285, column: 32, scope: !5508)
!5513 = !DILocation(line: 1285, column: 40, scope: !5508)
!5514 = !DILocation(line: 1285, column: 38, scope: !5508)
!5515 = !DILocation(line: 1285, column: 46, scope: !5508)
!5516 = !DILocation(line: 1285, column: 50, scope: !5508)
!5517 = !DILocation(line: 1285, column: 58, scope: !5508)
!5518 = !DILocation(line: 1285, column: 3, scope: !5508)
!5519 = !DILocation(line: 1288, column: 10, scope: !5508)
!5520 = !DILocation(line: 1289, column: 8, scope: !5508)
!5521 = !DILocation(line: 1289, column: 6, scope: !5508)
!5522 = !DILocation(line: 1290, column: 8, scope: !5508)
!5523 = !DILocation(line: 1290, column: 12, scope: !5508)
!5524 = !DILocation(line: 1290, column: 17, scope: !5508)
!5525 = !DILocation(line: 1290, column: 15, scope: !5508)
!5526 = !DILocation(line: 1290, column: 24, scope: !5508)
!5527 = !DILocation(line: 1290, column: 6, scope: !5508)
!5528 = !DILocation(line: 1291, column: 12, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5508, file: !1, line: 1291, column: 3)
!5530 = !DILocation(line: 1291, column: 10, scope: !5529)
!5531 = !DILocation(line: 1291, column: 8, scope: !5529)
!5532 = !DILocation(line: 1291, column: 20, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5529, file: !1, line: 1291, column: 3)
!5534 = !DILocation(line: 1291, column: 25, scope: !5533)
!5535 = !DILocation(line: 1291, column: 22, scope: !5533)
!5536 = !DILocation(line: 1291, column: 3, scope: !5529)
!5537 = !DILocation(line: 1292, column: 8, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5539, file: !1, line: 1292, column: 8)
!5539 = distinct !DILexicalBlock(scope: !5533, file: !1, line: 1291, column: 42)
!5540 = !DILocation(line: 1292, column: 13, scope: !5538)
!5541 = !DILocation(line: 1292, column: 17, scope: !5538)
!5542 = !DILocation(line: 1292, column: 10, scope: !5538)
!5543 = !DILocation(line: 1292, column: 8, scope: !5539)
!5544 = !DILocation(line: 1293, column: 10, scope: !5538)
!5545 = !DILocation(line: 1293, column: 14, scope: !5538)
!5546 = !DILocation(line: 1293, column: 20, scope: !5538)
!5547 = !DILocation(line: 1293, column: 24, scope: !5538)
!5548 = !DILocation(line: 1293, column: 28, scope: !5538)
!5549 = !DILocation(line: 1293, column: 22, scope: !5538)
!5550 = !DILocation(line: 1293, column: 17, scope: !5538)
!5551 = !DILocation(line: 1293, column: 8, scope: !5538)
!5552 = !DILocation(line: 1293, column: 5, scope: !5538)
!5553 = !DILocation(line: 1295, column: 7, scope: !5538)
!5554 = !DILocation(line: 1297, column: 10, scope: !5539)
!5555 = !DILocation(line: 1297, column: 17, scope: !5539)
!5556 = !DILocation(line: 1297, column: 22, scope: !5539)
!5557 = !DILocation(line: 1297, column: 26, scope: !5539)
!5558 = !DILocation(line: 1297, column: 20, scope: !5539)
!5559 = !DILocation(line: 1297, column: 5, scope: !5539)
!5560 = !DILocation(line: 1297, column: 8, scope: !5539)
!5561 = !DILocation(line: 1298, column: 15, scope: !5539)
!5562 = !DILocation(line: 1298, column: 14, scope: !5539)
!5563 = !DILocation(line: 1298, column: 11, scope: !5539)
!5564 = !DILocation(line: 1299, column: 3, scope: !5539)
!5565 = !DILocation(line: 1291, column: 32, scope: !5533)
!5566 = !DILocation(line: 1291, column: 38, scope: !5533)
!5567 = !DILocation(line: 1291, column: 3, scope: !5533)
!5568 = distinct !{!5568, !5536, !5569}
!5569 = !DILocation(line: 1299, column: 3, scope: !5529)
!5570 = !DILocation(line: 1300, column: 8, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5508, file: !1, line: 1300, column: 7)
!5572 = !DILocation(line: 1300, column: 15, scope: !5571)
!5573 = !DILocation(line: 1300, column: 24, scope: !5571)
!5574 = !DILocation(line: 1300, column: 28, scope: !5571)
!5575 = !DILocation(line: 1300, column: 35, scope: !5571)
!5576 = !DILocation(line: 1300, column: 44, scope: !5571)
!5577 = !DILocation(line: 1300, column: 47, scope: !5571)
!5578 = !DILocation(line: 1300, column: 54, scope: !5571)
!5579 = !DILocation(line: 1300, column: 7, scope: !5508)
!5580 = !DILocation(line: 1302, column: 9, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5571, file: !1, line: 1300, column: 65)
!5582 = !DILocation(line: 1302, column: 7, scope: !5581)
!5583 = !DILocation(line: 1303, column: 13, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5581, file: !1, line: 1303, column: 4)
!5585 = !DILocation(line: 1303, column: 11, scope: !5584)
!5586 = !DILocation(line: 1303, column: 9, scope: !5584)
!5587 = !DILocation(line: 1303, column: 21, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5584, file: !1, line: 1303, column: 4)
!5589 = !DILocation(line: 1303, column: 26, scope: !5588)
!5590 = !DILocation(line: 1303, column: 23, scope: !5588)
!5591 = !DILocation(line: 1303, column: 4, scope: !5584)
!5592 = !DILocation(line: 1304, column: 12, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5588, file: !1, line: 1303, column: 43)
!5594 = !DILocation(line: 1304, column: 6, scope: !5593)
!5595 = !DILocation(line: 1304, column: 9, scope: !5593)
!5596 = !DILocation(line: 1305, column: 4, scope: !5593)
!5597 = !DILocation(line: 1303, column: 33, scope: !5588)
!5598 = !DILocation(line: 1303, column: 39, scope: !5588)
!5599 = !DILocation(line: 1303, column: 4, scope: !5588)
!5600 = distinct !{!5600, !5591, !5601}
!5601 = !DILocation(line: 1305, column: 4, scope: !5584)
!5602 = !DILocation(line: 1306, column: 3, scope: !5581)
!5603 = !DILocation(line: 1308, column: 11, scope: !5508)
!5604 = !DILocation(line: 1308, column: 3, scope: !5508)
!5605 = !DILocation(line: 1311, column: 8, scope: !5508)
!5606 = !DILocation(line: 1311, column: 6, scope: !5508)
!5607 = !DILocation(line: 1312, column: 8, scope: !5508)
!5608 = !DILocation(line: 1312, column: 12, scope: !5508)
!5609 = !DILocation(line: 1312, column: 17, scope: !5508)
!5610 = !DILocation(line: 1312, column: 15, scope: !5508)
!5611 = !DILocation(line: 1312, column: 24, scope: !5508)
!5612 = !DILocation(line: 1312, column: 6, scope: !5508)
!5613 = !DILocation(line: 1313, column: 12, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5508, file: !1, line: 1313, column: 3)
!5615 = !DILocation(line: 1313, column: 10, scope: !5614)
!5616 = !DILocation(line: 1313, column: 8, scope: !5614)
!5617 = !DILocation(line: 1313, column: 20, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5614, file: !1, line: 1313, column: 3)
!5619 = !DILocation(line: 1313, column: 25, scope: !5618)
!5620 = !DILocation(line: 1313, column: 22, scope: !5618)
!5621 = !DILocation(line: 1313, column: 3, scope: !5614)
!5622 = !DILocation(line: 1314, column: 8, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5624, file: !1, line: 1314, column: 8)
!5624 = distinct !DILexicalBlock(scope: !5618, file: !1, line: 1313, column: 42)
!5625 = !DILocation(line: 1314, column: 13, scope: !5623)
!5626 = !DILocation(line: 1314, column: 17, scope: !5623)
!5627 = !DILocation(line: 1314, column: 10, scope: !5623)
!5628 = !DILocation(line: 1314, column: 8, scope: !5624)
!5629 = !DILocation(line: 1315, column: 10, scope: !5623)
!5630 = !DILocation(line: 1315, column: 14, scope: !5623)
!5631 = !DILocation(line: 1315, column: 20, scope: !5623)
!5632 = !DILocation(line: 1315, column: 24, scope: !5623)
!5633 = !DILocation(line: 1315, column: 28, scope: !5623)
!5634 = !DILocation(line: 1315, column: 22, scope: !5623)
!5635 = !DILocation(line: 1315, column: 17, scope: !5623)
!5636 = !DILocation(line: 1315, column: 8, scope: !5623)
!5637 = !DILocation(line: 1315, column: 5, scope: !5623)
!5638 = !DILocation(line: 1317, column: 7, scope: !5623)
!5639 = !DILocation(line: 1319, column: 9, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5624, file: !1, line: 1319, column: 8)
!5641 = !DILocation(line: 1319, column: 8, scope: !5640)
!5642 = !DILocation(line: 1319, column: 12, scope: !5640)
!5643 = !DILocation(line: 1319, column: 8, scope: !5624)
!5644 = !DILocation(line: 1320, column: 18, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5640, file: !1, line: 1319, column: 21)
!5646 = !DILocation(line: 1320, column: 28, scope: !5645)
!5647 = !DILocation(line: 1320, column: 32, scope: !5645)
!5648 = !DILocation(line: 1320, column: 38, scope: !5645)
!5649 = !DILocation(line: 1320, column: 37, scope: !5645)
!5650 = !DILocation(line: 1320, column: 5, scope: !5645)
!5651 = !DILocation(line: 1322, column: 9, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5645, file: !1, line: 1322, column: 9)
!5653 = !DILocation(line: 1322, column: 9, scope: !5645)
!5654 = !DILocation(line: 1323, column: 22, scope: !5652)
!5655 = !DILocation(line: 1323, column: 21, scope: !5652)
!5656 = !DILocation(line: 1323, column: 28, scope: !5652)
!5657 = !DILocation(line: 1323, column: 32, scope: !5652)
!5658 = !DILocation(line: 1323, column: 26, scope: !5652)
!5659 = !DILocation(line: 1323, column: 8, scope: !5652)
!5660 = !DILocation(line: 1323, column: 17, scope: !5652)
!5661 = !DILocation(line: 1323, column: 6, scope: !5652)
!5662 = !DILocation(line: 1325, column: 9, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5645, file: !1, line: 1325, column: 9)
!5664 = !DILocation(line: 1325, column: 9, scope: !5645)
!5665 = !DILocation(line: 1326, column: 24, scope: !5663)
!5666 = !DILocation(line: 1326, column: 23, scope: !5663)
!5667 = !DILocation(line: 1326, column: 30, scope: !5663)
!5668 = !DILocation(line: 1326, column: 34, scope: !5663)
!5669 = !DILocation(line: 1326, column: 28, scope: !5663)
!5670 = !DILocation(line: 1326, column: 8, scope: !5663)
!5671 = !DILocation(line: 1326, column: 19, scope: !5663)
!5672 = !DILocation(line: 1326, column: 6, scope: !5663)
!5673 = !DILocation(line: 1328, column: 9, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5645, file: !1, line: 1328, column: 9)
!5675 = !DILocation(line: 1328, column: 9, scope: !5645)
!5676 = !DILocation(line: 1329, column: 24, scope: !5674)
!5677 = !DILocation(line: 1329, column: 23, scope: !5674)
!5678 = !DILocation(line: 1329, column: 30, scope: !5674)
!5679 = !DILocation(line: 1329, column: 34, scope: !5674)
!5680 = !DILocation(line: 1329, column: 28, scope: !5674)
!5681 = !DILocation(line: 1329, column: 8, scope: !5674)
!5682 = !DILocation(line: 1329, column: 19, scope: !5674)
!5683 = !DILocation(line: 1329, column: 6, scope: !5674)
!5684 = !DILocation(line: 1330, column: 4, scope: !5645)
!5685 = !DILocation(line: 1331, column: 3, scope: !5624)
!5686 = !DILocation(line: 1313, column: 32, scope: !5618)
!5687 = !DILocation(line: 1313, column: 38, scope: !5618)
!5688 = !DILocation(line: 1313, column: 3, scope: !5618)
!5689 = distinct !{!5689, !5621, !5690}
!5690 = !DILocation(line: 1331, column: 3, scope: !5614)
!5691 = !DILocation(line: 1333, column: 33, scope: !5508)
!5692 = !DILocation(line: 1333, column: 25, scope: !5508)
!5693 = !DILocation(line: 1333, column: 45, scope: !5508)
!5694 = !DILocation(line: 1333, column: 43, scope: !5508)
!5695 = !DILocation(line: 1333, column: 14, scope: !5508)
!5696 = !DILocation(line: 1333, column: 12, scope: !5508)
!5697 = !DILocation(line: 1335, column: 7, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5508, file: !1, line: 1335, column: 7)
!5699 = !DILocation(line: 1335, column: 7, scope: !5508)
!5700 = !DILocation(line: 1336, column: 33, scope: !5698)
!5701 = !DILocation(line: 1336, column: 25, scope: !5698)
!5702 = !DILocation(line: 1336, column: 44, scope: !5698)
!5703 = !DILocation(line: 1336, column: 42, scope: !5698)
!5704 = !DILocation(line: 1336, column: 14, scope: !5698)
!5705 = !DILocation(line: 1336, column: 12, scope: !5698)
!5706 = !DILocation(line: 1336, column: 4, scope: !5698)
!5707 = !DILocation(line: 1337, column: 7, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5508, file: !1, line: 1337, column: 7)
!5709 = !DILocation(line: 1337, column: 7, scope: !5508)
!5710 = !DILocation(line: 1338, column: 35, scope: !5708)
!5711 = !DILocation(line: 1338, column: 27, scope: !5708)
!5712 = !DILocation(line: 1338, column: 48, scope: !5708)
!5713 = !DILocation(line: 1338, column: 46, scope: !5708)
!5714 = !DILocation(line: 1338, column: 16, scope: !5708)
!5715 = !DILocation(line: 1338, column: 14, scope: !5708)
!5716 = !DILocation(line: 1338, column: 4, scope: !5708)
!5717 = !DILocation(line: 1339, column: 7, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5508, file: !1, line: 1339, column: 7)
!5719 = !DILocation(line: 1339, column: 7, scope: !5508)
!5720 = !DILocation(line: 1340, column: 35, scope: !5718)
!5721 = !DILocation(line: 1340, column: 27, scope: !5718)
!5722 = !DILocation(line: 1340, column: 48, scope: !5718)
!5723 = !DILocation(line: 1340, column: 46, scope: !5718)
!5724 = !DILocation(line: 1340, column: 16, scope: !5718)
!5725 = !DILocation(line: 1340, column: 14, scope: !5718)
!5726 = !DILocation(line: 1340, column: 4, scope: !5718)
!5727 = !DILocation(line: 1342, column: 8, scope: !5508)
!5728 = !DILocation(line: 1342, column: 5, scope: !5508)
!5729 = distinct !{!5729, !5505, !5730}
!5730 = !DILocation(line: 1343, column: 2, scope: !5348)
!5731 = !DILocation(line: 1346, column: 2, scope: !5348)
!5732 = !DILocation(line: 1346, column: 12, scope: !5348)
!5733 = !DILocation(line: 1347, column: 2, scope: !5348)
!5734 = !DILocation(line: 1347, column: 12, scope: !5348)
!5735 = !DILocation(line: 1348, column: 1, scope: !5348)
!5736 = distinct !DISubprogram(name: "BKE_curve_forward_diff_bezier", scope: !1, file: !1, line: 1351, type: !5737, scopeLine: 1352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!5737 = !DISubroutineType(types: !5738)
!5738 = !{null, !128, !128, !128, !128, !1325, !79, !79}
!5739 = !DILocalVariable(name: "q0", arg: 1, scope: !5736, file: !1, line: 1351, type: !128)
!5740 = !DILocation(line: 1351, column: 42, scope: !5736)
!5741 = !DILocalVariable(name: "q1", arg: 2, scope: !5736, file: !1, line: 1351, type: !128)
!5742 = !DILocation(line: 1351, column: 52, scope: !5736)
!5743 = !DILocalVariable(name: "q2", arg: 3, scope: !5736, file: !1, line: 1351, type: !128)
!5744 = !DILocation(line: 1351, column: 62, scope: !5736)
!5745 = !DILocalVariable(name: "q3", arg: 4, scope: !5736, file: !1, line: 1351, type: !128)
!5746 = !DILocation(line: 1351, column: 72, scope: !5736)
!5747 = !DILocalVariable(name: "p", arg: 5, scope: !5736, file: !1, line: 1351, type: !1325)
!5748 = !DILocation(line: 1351, column: 83, scope: !5736)
!5749 = !DILocalVariable(name: "it", arg: 6, scope: !5736, file: !1, line: 1351, type: !79)
!5750 = !DILocation(line: 1351, column: 90, scope: !5736)
!5751 = !DILocalVariable(name: "stride", arg: 7, scope: !5736, file: !1, line: 1351, type: !79)
!5752 = !DILocation(line: 1351, column: 98, scope: !5736)
!5753 = !DILocalVariable(name: "rt0", scope: !5736, file: !1, line: 1353, type: !128)
!5754 = !DILocation(line: 1353, column: 8, scope: !5736)
!5755 = !DILocalVariable(name: "rt1", scope: !5736, file: !1, line: 1353, type: !128)
!5756 = !DILocation(line: 1353, column: 13, scope: !5736)
!5757 = !DILocalVariable(name: "rt2", scope: !5736, file: !1, line: 1353, type: !128)
!5758 = !DILocation(line: 1353, column: 18, scope: !5736)
!5759 = !DILocalVariable(name: "rt3", scope: !5736, file: !1, line: 1353, type: !128)
!5760 = !DILocation(line: 1353, column: 23, scope: !5736)
!5761 = !DILocalVariable(name: "f", scope: !5736, file: !1, line: 1353, type: !128)
!5762 = !DILocation(line: 1353, column: 28, scope: !5736)
!5763 = !DILocalVariable(name: "a", scope: !5736, file: !1, line: 1354, type: !79)
!5764 = !DILocation(line: 1354, column: 6, scope: !5736)
!5765 = !DILocation(line: 1356, column: 13, scope: !5736)
!5766 = !DILocation(line: 1356, column: 6, scope: !5736)
!5767 = !DILocation(line: 1356, column: 4, scope: !5736)
!5768 = !DILocation(line: 1357, column: 8, scope: !5736)
!5769 = !DILocation(line: 1357, column: 6, scope: !5736)
!5770 = !DILocation(line: 1358, column: 16, scope: !5736)
!5771 = !DILocation(line: 1358, column: 21, scope: !5736)
!5772 = !DILocation(line: 1358, column: 19, scope: !5736)
!5773 = !DILocation(line: 1358, column: 13, scope: !5736)
!5774 = !DILocation(line: 1358, column: 27, scope: !5736)
!5775 = !DILocation(line: 1358, column: 25, scope: !5736)
!5776 = !DILocation(line: 1358, column: 6, scope: !5736)
!5777 = !DILocation(line: 1359, column: 7, scope: !5736)
!5778 = !DILocation(line: 1359, column: 4, scope: !5736)
!5779 = !DILocation(line: 1360, column: 16, scope: !5736)
!5780 = !DILocation(line: 1360, column: 28, scope: !5736)
!5781 = !DILocation(line: 1360, column: 26, scope: !5736)
!5782 = !DILocation(line: 1360, column: 19, scope: !5736)
!5783 = !DILocation(line: 1360, column: 33, scope: !5736)
!5784 = !DILocation(line: 1360, column: 31, scope: !5736)
!5785 = !DILocation(line: 1360, column: 13, scope: !5736)
!5786 = !DILocation(line: 1360, column: 39, scope: !5736)
!5787 = !DILocation(line: 1360, column: 37, scope: !5736)
!5788 = !DILocation(line: 1360, column: 6, scope: !5736)
!5789 = !DILocation(line: 1361, column: 7, scope: !5736)
!5790 = !DILocation(line: 1361, column: 4, scope: !5736)
!5791 = !DILocation(line: 1362, column: 9, scope: !5736)
!5792 = !DILocation(line: 1362, column: 14, scope: !5736)
!5793 = !DILocation(line: 1362, column: 12, scope: !5736)
!5794 = !DILocation(line: 1362, column: 27, scope: !5736)
!5795 = !DILocation(line: 1362, column: 32, scope: !5736)
!5796 = !DILocation(line: 1362, column: 30, scope: !5736)
!5797 = !DILocation(line: 1362, column: 24, scope: !5736)
!5798 = !DILocation(line: 1362, column: 17, scope: !5736)
!5799 = !DILocation(line: 1362, column: 39, scope: !5736)
!5800 = !DILocation(line: 1362, column: 37, scope: !5736)
!5801 = !DILocation(line: 1362, column: 6, scope: !5736)
!5802 = !DILocation(line: 1364, column: 7, scope: !5736)
!5803 = !DILocation(line: 1364, column: 5, scope: !5736)
!5804 = !DILocation(line: 1365, column: 7, scope: !5736)
!5805 = !DILocation(line: 1365, column: 13, scope: !5736)
!5806 = !DILocation(line: 1365, column: 11, scope: !5736)
!5807 = !DILocation(line: 1365, column: 19, scope: !5736)
!5808 = !DILocation(line: 1365, column: 17, scope: !5736)
!5809 = !DILocation(line: 1365, column: 5, scope: !5736)
!5810 = !DILocation(line: 1366, column: 11, scope: !5736)
!5811 = !DILocation(line: 1366, column: 9, scope: !5736)
!5812 = !DILocation(line: 1366, column: 21, scope: !5736)
!5813 = !DILocation(line: 1366, column: 19, scope: !5736)
!5814 = !DILocation(line: 1366, column: 15, scope: !5736)
!5815 = !DILocation(line: 1366, column: 5, scope: !5736)
!5816 = !DILocation(line: 1367, column: 11, scope: !5736)
!5817 = !DILocation(line: 1367, column: 9, scope: !5736)
!5818 = !DILocation(line: 1367, column: 5, scope: !5736)
!5819 = !DILocation(line: 1369, column: 9, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5736, file: !1, line: 1369, column: 2)
!5821 = !DILocation(line: 1369, column: 7, scope: !5820)
!5822 = !DILocation(line: 1369, column: 14, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5820, file: !1, line: 1369, column: 2)
!5824 = !DILocation(line: 1369, column: 19, scope: !5823)
!5825 = !DILocation(line: 1369, column: 16, scope: !5823)
!5826 = !DILocation(line: 1369, column: 2, scope: !5820)
!5827 = !DILocation(line: 1370, column: 8, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5823, file: !1, line: 1369, column: 28)
!5829 = !DILocation(line: 1370, column: 4, scope: !5828)
!5830 = !DILocation(line: 1370, column: 6, scope: !5828)
!5831 = !DILocation(line: 1371, column: 26, scope: !5828)
!5832 = !DILocation(line: 1371, column: 18, scope: !5828)
!5833 = !DILocation(line: 1371, column: 31, scope: !5828)
!5834 = !DILocation(line: 1371, column: 29, scope: !5828)
!5835 = !DILocation(line: 1371, column: 7, scope: !5828)
!5836 = !DILocation(line: 1371, column: 5, scope: !5828)
!5837 = !DILocation(line: 1372, column: 9, scope: !5828)
!5838 = !DILocation(line: 1372, column: 6, scope: !5828)
!5839 = !DILocation(line: 1373, column: 9, scope: !5828)
!5840 = !DILocation(line: 1373, column: 6, scope: !5828)
!5841 = !DILocation(line: 1374, column: 9, scope: !5828)
!5842 = !DILocation(line: 1374, column: 6, scope: !5828)
!5843 = !DILocation(line: 1375, column: 2, scope: !5828)
!5844 = !DILocation(line: 1369, column: 24, scope: !5823)
!5845 = !DILocation(line: 1369, column: 2, scope: !5823)
!5846 = distinct !{!5846, !5826, !5847}
!5847 = !DILocation(line: 1375, column: 2, scope: !5820)
!5848 = !DILocation(line: 1376, column: 1, scope: !5736)
!5849 = distinct !DISubprogram(name: "BKE_curve_surf_make_orco", scope: !1, file: !1, line: 1403, type: !5850, scopeLine: 1404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!5850 = !DISubroutineType(types: !5851)
!5851 = !{!1325, !2521}
!5852 = !DILocalVariable(name: "ob", arg: 1, scope: !5849, file: !1, line: 1403, type: !2521)
!5853 = !DILocation(line: 1403, column: 41, scope: !5849)
!5854 = !DILocalVariable(name: "cu", scope: !5849, file: !1, line: 1407, type: !114)
!5855 = !DILocation(line: 1407, column: 9, scope: !5849)
!5856 = !DILocation(line: 1407, column: 14, scope: !5849)
!5857 = !DILocation(line: 1407, column: 18, scope: !5849)
!5858 = !DILocalVariable(name: "nu", scope: !5849, file: !1, line: 1408, type: !1782)
!5859 = !DILocation(line: 1408, column: 8, scope: !5849)
!5860 = !DILocalVariable(name: "a", scope: !5849, file: !1, line: 1409, type: !79)
!5861 = !DILocation(line: 1409, column: 6, scope: !5849)
!5862 = !DILocalVariable(name: "b", scope: !5849, file: !1, line: 1409, type: !79)
!5863 = !DILocation(line: 1409, column: 9, scope: !5849)
!5864 = !DILocalVariable(name: "tot", scope: !5849, file: !1, line: 1409, type: !79)
!5865 = !DILocation(line: 1409, column: 12, scope: !5849)
!5866 = !DILocalVariable(name: "sizeu", scope: !5849, file: !1, line: 1410, type: !79)
!5867 = !DILocation(line: 1410, column: 6, scope: !5849)
!5868 = !DILocalVariable(name: "sizev", scope: !5849, file: !1, line: 1410, type: !79)
!5869 = !DILocation(line: 1410, column: 13, scope: !5849)
!5870 = !DILocalVariable(name: "resolu", scope: !5849, file: !1, line: 1411, type: !79)
!5871 = !DILocation(line: 1411, column: 6, scope: !5849)
!5872 = !DILocalVariable(name: "resolv", scope: !5849, file: !1, line: 1411, type: !79)
!5873 = !DILocation(line: 1411, column: 14, scope: !5849)
!5874 = !DILocalVariable(name: "fp", scope: !5849, file: !1, line: 1412, type: !1325)
!5875 = !DILocation(line: 1412, column: 9, scope: !5849)
!5876 = !DILocalVariable(name: "coord_array", scope: !5849, file: !1, line: 1412, type: !1325)
!5877 = !DILocation(line: 1412, column: 14, scope: !5849)
!5878 = !DILocation(line: 1415, column: 7, scope: !5849)
!5879 = !DILocation(line: 1415, column: 11, scope: !5849)
!5880 = !DILocation(line: 1415, column: 16, scope: !5849)
!5881 = !DILocation(line: 1415, column: 5, scope: !5849)
!5882 = !DILocation(line: 1416, column: 2, scope: !5849)
!5883 = !DILocation(line: 1416, column: 9, scope: !5849)
!5884 = !DILocation(line: 1426, column: 12, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5849, file: !1, line: 1416, column: 13)
!5886 = !DILocation(line: 1426, column: 16, scope: !5885)
!5887 = !DILocation(line: 1426, column: 29, scope: !5885)
!5888 = !DILocation(line: 1426, column: 33, scope: !5885)
!5889 = !DILocation(line: 1426, column: 46, scope: !5885)
!5890 = !DILocation(line: 1426, column: 50, scope: !5885)
!5891 = !DILocation(line: 1426, column: 10, scope: !5885)
!5892 = !DILocation(line: 1427, column: 12, scope: !5885)
!5893 = !DILocation(line: 1427, column: 16, scope: !5885)
!5894 = !DILocation(line: 1427, column: 29, scope: !5885)
!5895 = !DILocation(line: 1427, column: 33, scope: !5885)
!5896 = !DILocation(line: 1427, column: 46, scope: !5885)
!5897 = !DILocation(line: 1427, column: 50, scope: !5885)
!5898 = !DILocation(line: 1427, column: 10, scope: !5885)
!5899 = !DILocation(line: 1429, column: 11, scope: !5885)
!5900 = !DILocation(line: 1429, column: 15, scope: !5885)
!5901 = !DILocation(line: 1429, column: 23, scope: !5885)
!5902 = !DILocation(line: 1429, column: 21, scope: !5885)
!5903 = !DILocation(line: 1429, column: 9, scope: !5885)
!5904 = !DILocation(line: 1430, column: 11, scope: !5885)
!5905 = !DILocation(line: 1430, column: 15, scope: !5885)
!5906 = !DILocation(line: 1430, column: 23, scope: !5885)
!5907 = !DILocation(line: 1430, column: 21, scope: !5885)
!5908 = !DILocation(line: 1430, column: 9, scope: !5885)
!5909 = !DILocation(line: 1431, column: 7, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5885, file: !1, line: 1431, column: 7)
!5911 = !DILocation(line: 1431, column: 11, scope: !5910)
!5912 = !DILocation(line: 1431, column: 17, scope: !5910)
!5913 = !DILocation(line: 1431, column: 7, scope: !5885)
!5914 = !DILocation(line: 1431, column: 40, scope: !5910)
!5915 = !DILocation(line: 1431, column: 35, scope: !5910)
!5916 = !DILocation(line: 1432, column: 7, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5885, file: !1, line: 1432, column: 7)
!5918 = !DILocation(line: 1432, column: 11, scope: !5917)
!5919 = !DILocation(line: 1432, column: 17, scope: !5917)
!5920 = !DILocation(line: 1432, column: 7, scope: !5885)
!5921 = !DILocation(line: 1432, column: 40, scope: !5917)
!5922 = !DILocation(line: 1432, column: 35, scope: !5917)
!5923 = !DILocation(line: 1433, column: 7, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5885, file: !1, line: 1433, column: 7)
!5925 = !DILocation(line: 1433, column: 11, scope: !5924)
!5926 = !DILocation(line: 1433, column: 17, scope: !5924)
!5927 = !DILocation(line: 1433, column: 7, scope: !5885)
!5928 = !DILocation(line: 1433, column: 29, scope: !5924)
!5929 = !DILocation(line: 1433, column: 37, scope: !5924)
!5930 = !DILocation(line: 1433, column: 35, scope: !5924)
!5931 = !DILocation(line: 1433, column: 26, scope: !5924)
!5932 = !DILocation(line: 1433, column: 22, scope: !5924)
!5933 = !DILocation(line: 1435, column: 8, scope: !5885)
!5934 = !DILocation(line: 1435, column: 12, scope: !5885)
!5935 = !DILocation(line: 1435, column: 6, scope: !5885)
!5936 = distinct !{!5936, !5882, !5937}
!5937 = !DILocation(line: 1436, column: 2, scope: !5849)
!5938 = !DILocation(line: 1438, column: 21, scope: !5849)
!5939 = !DILocation(line: 1438, column: 53, scope: !5849)
!5940 = !DILocation(line: 1438, column: 51, scope: !5849)
!5941 = !DILocation(line: 1438, column: 19, scope: !5849)
!5942 = !DILocation(line: 1438, column: 5, scope: !5849)
!5943 = !DILocation(line: 1440, column: 7, scope: !5849)
!5944 = !DILocation(line: 1440, column: 11, scope: !5849)
!5945 = !DILocation(line: 1440, column: 16, scope: !5849)
!5946 = !DILocation(line: 1440, column: 5, scope: !5849)
!5947 = !DILocation(line: 1441, column: 2, scope: !5849)
!5948 = !DILocation(line: 1441, column: 9, scope: !5849)
!5949 = !DILocation(line: 1442, column: 12, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5849, file: !1, line: 1441, column: 13)
!5951 = !DILocation(line: 1442, column: 16, scope: !5950)
!5952 = !DILocation(line: 1442, column: 29, scope: !5950)
!5953 = !DILocation(line: 1442, column: 33, scope: !5950)
!5954 = !DILocation(line: 1442, column: 46, scope: !5950)
!5955 = !DILocation(line: 1442, column: 50, scope: !5950)
!5956 = !DILocation(line: 1442, column: 10, scope: !5950)
!5957 = !DILocation(line: 1443, column: 12, scope: !5950)
!5958 = !DILocation(line: 1443, column: 16, scope: !5950)
!5959 = !DILocation(line: 1443, column: 29, scope: !5950)
!5960 = !DILocation(line: 1443, column: 33, scope: !5950)
!5961 = !DILocation(line: 1443, column: 46, scope: !5950)
!5962 = !DILocation(line: 1443, column: 50, scope: !5950)
!5963 = !DILocation(line: 1443, column: 10, scope: !5950)
!5964 = !DILocation(line: 1445, column: 7, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5950, file: !1, line: 1445, column: 7)
!5966 = !DILocation(line: 1445, column: 11, scope: !5965)
!5967 = !DILocation(line: 1445, column: 17, scope: !5965)
!5968 = !DILocation(line: 1445, column: 7, scope: !5950)
!5969 = !DILocation(line: 1446, column: 12, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5965, file: !1, line: 1445, column: 22)
!5971 = !DILocation(line: 1446, column: 16, scope: !5970)
!5972 = !DILocation(line: 1446, column: 24, scope: !5970)
!5973 = !DILocation(line: 1446, column: 22, scope: !5970)
!5974 = !DILocation(line: 1446, column: 10, scope: !5970)
!5975 = !DILocation(line: 1447, column: 12, scope: !5970)
!5976 = !DILocation(line: 1447, column: 16, scope: !5970)
!5977 = !DILocation(line: 1447, column: 24, scope: !5970)
!5978 = !DILocation(line: 1447, column: 22, scope: !5970)
!5979 = !DILocation(line: 1447, column: 10, scope: !5970)
!5980 = !DILocation(line: 1449, column: 8, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5970, file: !1, line: 1449, column: 8)
!5982 = !DILocation(line: 1449, column: 12, scope: !5981)
!5983 = !DILocation(line: 1449, column: 18, scope: !5981)
!5984 = !DILocation(line: 1449, column: 8, scope: !5970)
!5985 = !DILocation(line: 1450, column: 10, scope: !5981)
!5986 = !DILocation(line: 1450, column: 5, scope: !5981)
!5987 = !DILocation(line: 1451, column: 8, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5970, file: !1, line: 1451, column: 8)
!5989 = !DILocation(line: 1451, column: 12, scope: !5988)
!5990 = !DILocation(line: 1451, column: 18, scope: !5988)
!5991 = !DILocation(line: 1451, column: 8, scope: !5970)
!5992 = !DILocation(line: 1452, column: 10, scope: !5988)
!5993 = !DILocation(line: 1452, column: 5, scope: !5988)
!5994 = !DILocation(line: 1454, column: 8, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5970, file: !1, line: 1454, column: 8)
!5996 = !DILocation(line: 1454, column: 12, scope: !5995)
!5997 = !DILocation(line: 1454, column: 17, scope: !5995)
!5998 = !DILocation(line: 1454, column: 8, scope: !5970)
!5999 = !DILocation(line: 1455, column: 12, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !6001, file: !1, line: 1455, column: 5)
!6001 = distinct !DILexicalBlock(scope: !5995, file: !1, line: 1454, column: 31)
!6002 = !DILocation(line: 1455, column: 10, scope: !6000)
!6003 = !DILocation(line: 1455, column: 17, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !6000, file: !1, line: 1455, column: 5)
!6005 = !DILocation(line: 1455, column: 21, scope: !6004)
!6006 = !DILocation(line: 1455, column: 19, scope: !6004)
!6007 = !DILocation(line: 1455, column: 5, scope: !6000)
!6008 = !DILocation(line: 1456, column: 13, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !6010, file: !1, line: 1456, column: 6)
!6010 = distinct !DILexicalBlock(scope: !6004, file: !1, line: 1455, column: 33)
!6011 = !DILocation(line: 1456, column: 11, scope: !6009)
!6012 = !DILocation(line: 1456, column: 18, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6009, file: !1, line: 1456, column: 6)
!6014 = !DILocation(line: 1456, column: 22, scope: !6013)
!6015 = !DILocation(line: 1456, column: 20, scope: !6013)
!6016 = !DILocation(line: 1456, column: 6, scope: !6009)
!6017 = !DILocation(line: 1458, column: 11, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6019, file: !1, line: 1458, column: 11)
!6019 = distinct !DILexicalBlock(scope: !6013, file: !1, line: 1456, column: 34)
!6020 = !DILocation(line: 1458, column: 17, scope: !6018)
!6021 = !DILocation(line: 1458, column: 11, scope: !6019)
!6022 = !DILocation(line: 1459, column: 8, scope: !6018)
!6023 = !DILocation(line: 1459, column: 14, scope: !6018)
!6024 = !DILocation(line: 1461, column: 39, scope: !6018)
!6025 = !DILocation(line: 1461, column: 32, scope: !6018)
!6026 = !DILocation(line: 1461, column: 29, scope: !6018)
!6027 = !DILocation(line: 1461, column: 45, scope: !6018)
!6028 = !DILocation(line: 1461, column: 51, scope: !6018)
!6029 = !DILocation(line: 1461, column: 44, scope: !6018)
!6030 = !DILocation(line: 1461, column: 42, scope: !6018)
!6031 = !DILocation(line: 1461, column: 22, scope: !6018)
!6032 = !DILocation(line: 1461, column: 8, scope: !6018)
!6033 = !DILocation(line: 1461, column: 14, scope: !6018)
!6034 = !DILocation(line: 1463, column: 11, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6019, file: !1, line: 1463, column: 11)
!6036 = !DILocation(line: 1463, column: 17, scope: !6035)
!6037 = !DILocation(line: 1463, column: 11, scope: !6019)
!6038 = !DILocation(line: 1464, column: 8, scope: !6035)
!6039 = !DILocation(line: 1464, column: 14, scope: !6035)
!6040 = !DILocation(line: 1466, column: 39, scope: !6035)
!6041 = !DILocation(line: 1466, column: 32, scope: !6035)
!6042 = !DILocation(line: 1466, column: 29, scope: !6035)
!6043 = !DILocation(line: 1466, column: 45, scope: !6035)
!6044 = !DILocation(line: 1466, column: 51, scope: !6035)
!6045 = !DILocation(line: 1466, column: 44, scope: !6035)
!6046 = !DILocation(line: 1466, column: 42, scope: !6035)
!6047 = !DILocation(line: 1466, column: 22, scope: !6035)
!6048 = !DILocation(line: 1466, column: 8, scope: !6035)
!6049 = !DILocation(line: 1466, column: 14, scope: !6035)
!6050 = !DILocation(line: 1468, column: 7, scope: !6019)
!6051 = !DILocation(line: 1468, column: 13, scope: !6019)
!6052 = !DILocation(line: 1470, column: 10, scope: !6019)
!6053 = !DILocation(line: 1471, column: 6, scope: !6019)
!6054 = !DILocation(line: 1456, column: 30, scope: !6013)
!6055 = !DILocation(line: 1456, column: 6, scope: !6013)
!6056 = distinct !{!6056, !6016, !6057}
!6057 = !DILocation(line: 1471, column: 6, scope: !6009)
!6058 = !DILocation(line: 1472, column: 5, scope: !6010)
!6059 = !DILocation(line: 1455, column: 29, scope: !6004)
!6060 = !DILocation(line: 1455, column: 5, scope: !6004)
!6061 = distinct !{!6061, !6007, !6062}
!6062 = !DILocation(line: 1472, column: 5, scope: !6000)
!6063 = !DILocation(line: 1473, column: 4, scope: !6001)
!6064 = !DILocalVariable(name: "size", scope: !6065, file: !1, line: 1475, type: !79)
!6065 = distinct !DILexicalBlock(scope: !5995, file: !1, line: 1474, column: 9)
!6066 = !DILocation(line: 1475, column: 9, scope: !6065)
!6067 = !DILocation(line: 1475, column: 17, scope: !6065)
!6068 = !DILocation(line: 1475, column: 21, scope: !6065)
!6069 = !DILocation(line: 1475, column: 29, scope: !6065)
!6070 = !DILocation(line: 1475, column: 27, scope: !6065)
!6071 = !DILocation(line: 1475, column: 40, scope: !6065)
!6072 = !DILocation(line: 1475, column: 44, scope: !6065)
!6073 = !DILocation(line: 1475, column: 52, scope: !6065)
!6074 = !DILocation(line: 1475, column: 50, scope: !6065)
!6075 = !DILocation(line: 1475, column: 37, scope: !6065)
!6076 = !DILocation(line: 1475, column: 60, scope: !6065)
!6077 = !DILocation(line: 1475, column: 16, scope: !6065)
!6078 = !DILocation(line: 1475, column: 64, scope: !6065)
!6079 = !DILocalVariable(name: "_tdata", scope: !6065, file: !1, line: 1476, type: !1325)
!6080 = !DILocation(line: 1476, column: 12, scope: !6065)
!6081 = !DILocation(line: 1476, column: 21, scope: !6065)
!6082 = !DILocation(line: 1476, column: 33, scope: !6065)
!6083 = !DILocalVariable(name: "tdata", scope: !6065, file: !1, line: 1477, type: !1325)
!6084 = !DILocation(line: 1477, column: 12, scope: !6065)
!6085 = !DILocation(line: 1477, column: 20, scope: !6065)
!6086 = !DILocation(line: 1479, column: 24, scope: !6065)
!6087 = !DILocation(line: 1479, column: 28, scope: !6065)
!6088 = !DILocation(line: 1479, column: 38, scope: !6065)
!6089 = !DILocation(line: 1479, column: 46, scope: !6065)
!6090 = !DILocation(line: 1479, column: 5, scope: !6065)
!6091 = !DILocation(line: 1481, column: 12, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6065, file: !1, line: 1481, column: 5)
!6093 = !DILocation(line: 1481, column: 10, scope: !6092)
!6094 = !DILocation(line: 1481, column: 17, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6092, file: !1, line: 1481, column: 5)
!6096 = !DILocation(line: 1481, column: 21, scope: !6095)
!6097 = !DILocation(line: 1481, column: 19, scope: !6095)
!6098 = !DILocation(line: 1481, column: 5, scope: !6092)
!6099 = !DILocalVariable(name: "use_b", scope: !6100, file: !1, line: 1482, type: !79)
!6100 = distinct !DILexicalBlock(scope: !6095, file: !1, line: 1481, column: 33)
!6101 = !DILocation(line: 1482, column: 10, scope: !6100)
!6102 = !DILocation(line: 1482, column: 18, scope: !6100)
!6103 = !DILocation(line: 1483, column: 10, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6100, file: !1, line: 1483, column: 10)
!6105 = !DILocation(line: 1483, column: 15, scope: !6104)
!6106 = !DILocation(line: 1483, column: 21, scope: !6104)
!6107 = !DILocation(line: 1483, column: 12, scope: !6104)
!6108 = !DILocation(line: 1483, column: 25, scope: !6104)
!6109 = !DILocation(line: 1483, column: 29, scope: !6104)
!6110 = !DILocation(line: 1483, column: 33, scope: !6104)
!6111 = !DILocation(line: 1483, column: 39, scope: !6104)
!6112 = !DILocation(line: 1483, column: 10, scope: !6100)
!6113 = !DILocation(line: 1484, column: 13, scope: !6104)
!6114 = !DILocation(line: 1484, column: 7, scope: !6104)
!6115 = !DILocation(line: 1486, column: 13, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6100, file: !1, line: 1486, column: 6)
!6117 = !DILocation(line: 1486, column: 11, scope: !6116)
!6118 = !DILocation(line: 1486, column: 18, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6116, file: !1, line: 1486, column: 6)
!6120 = !DILocation(line: 1486, column: 22, scope: !6119)
!6121 = !DILocation(line: 1486, column: 20, scope: !6119)
!6122 = !DILocation(line: 1486, column: 6, scope: !6116)
!6123 = !DILocalVariable(name: "use_a", scope: !6124, file: !1, line: 1487, type: !79)
!6124 = distinct !DILexicalBlock(scope: !6119, file: !1, line: 1486, column: 34)
!6125 = !DILocation(line: 1487, column: 11, scope: !6124)
!6126 = !DILocation(line: 1487, column: 19, scope: !6124)
!6127 = !DILocation(line: 1488, column: 11, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !6124, file: !1, line: 1488, column: 11)
!6129 = !DILocation(line: 1488, column: 16, scope: !6128)
!6130 = !DILocation(line: 1488, column: 22, scope: !6128)
!6131 = !DILocation(line: 1488, column: 13, scope: !6128)
!6132 = !DILocation(line: 1488, column: 26, scope: !6128)
!6133 = !DILocation(line: 1488, column: 30, scope: !6128)
!6134 = !DILocation(line: 1488, column: 34, scope: !6128)
!6135 = !DILocation(line: 1488, column: 40, scope: !6128)
!6136 = !DILocation(line: 1488, column: 11, scope: !6124)
!6137 = !DILocation(line: 1489, column: 14, scope: !6128)
!6138 = !DILocation(line: 1489, column: 8, scope: !6128)
!6139 = !DILocation(line: 1491, column: 15, scope: !6124)
!6140 = !DILocation(line: 1491, column: 29, scope: !6124)
!6141 = !DILocation(line: 1491, column: 38, scope: !6124)
!6142 = !DILocation(line: 1491, column: 42, scope: !6124)
!6143 = !DILocation(line: 1491, column: 50, scope: !6124)
!6144 = !DILocation(line: 1491, column: 48, scope: !6124)
!6145 = !DILocation(line: 1491, column: 35, scope: !6124)
!6146 = !DILocation(line: 1491, column: 60, scope: !6124)
!6147 = !DILocation(line: 1491, column: 58, scope: !6124)
!6148 = !DILocation(line: 1491, column: 26, scope: !6124)
!6149 = !DILocation(line: 1491, column: 22, scope: !6124)
!6150 = !DILocation(line: 1491, column: 13, scope: !6124)
!6151 = !DILocation(line: 1493, column: 16, scope: !6124)
!6152 = !DILocation(line: 1493, column: 27, scope: !6124)
!6153 = !DILocation(line: 1493, column: 31, scope: !6124)
!6154 = !DILocation(line: 1493, column: 25, scope: !6124)
!6155 = !DILocation(line: 1493, column: 41, scope: !6124)
!6156 = !DILocation(line: 1493, column: 45, scope: !6124)
!6157 = !DILocation(line: 1493, column: 39, scope: !6124)
!6158 = !DILocation(line: 1493, column: 7, scope: !6124)
!6159 = !DILocation(line: 1493, column: 13, scope: !6124)
!6160 = !DILocation(line: 1494, column: 16, scope: !6124)
!6161 = !DILocation(line: 1494, column: 27, scope: !6124)
!6162 = !DILocation(line: 1494, column: 31, scope: !6124)
!6163 = !DILocation(line: 1494, column: 25, scope: !6124)
!6164 = !DILocation(line: 1494, column: 41, scope: !6124)
!6165 = !DILocation(line: 1494, column: 45, scope: !6124)
!6166 = !DILocation(line: 1494, column: 39, scope: !6124)
!6167 = !DILocation(line: 1494, column: 7, scope: !6124)
!6168 = !DILocation(line: 1494, column: 13, scope: !6124)
!6169 = !DILocation(line: 1495, column: 16, scope: !6124)
!6170 = !DILocation(line: 1495, column: 27, scope: !6124)
!6171 = !DILocation(line: 1495, column: 31, scope: !6124)
!6172 = !DILocation(line: 1495, column: 25, scope: !6124)
!6173 = !DILocation(line: 1495, column: 41, scope: !6124)
!6174 = !DILocation(line: 1495, column: 45, scope: !6124)
!6175 = !DILocation(line: 1495, column: 39, scope: !6124)
!6176 = !DILocation(line: 1495, column: 7, scope: !6124)
!6177 = !DILocation(line: 1495, column: 13, scope: !6124)
!6178 = !DILocation(line: 1496, column: 10, scope: !6124)
!6179 = !DILocation(line: 1497, column: 6, scope: !6124)
!6180 = !DILocation(line: 1486, column: 30, scope: !6119)
!6181 = !DILocation(line: 1486, column: 6, scope: !6119)
!6182 = distinct !{!6182, !6122, !6183}
!6183 = !DILocation(line: 1497, column: 6, scope: !6116)
!6184 = !DILocation(line: 1498, column: 5, scope: !6100)
!6185 = !DILocation(line: 1481, column: 29, scope: !6095)
!6186 = !DILocation(line: 1481, column: 5, scope: !6095)
!6187 = distinct !{!6187, !6098, !6188}
!6188 = !DILocation(line: 1498, column: 5, scope: !6092)
!6189 = !DILocation(line: 1500, column: 5, scope: !6065)
!6190 = !DILocation(line: 1500, column: 15, scope: !6065)
!6191 = !DILocation(line: 1502, column: 3, scope: !5970)
!6192 = !DILocation(line: 1503, column: 8, scope: !5950)
!6193 = !DILocation(line: 1503, column: 12, scope: !5950)
!6194 = !DILocation(line: 1503, column: 6, scope: !5950)
!6195 = distinct !{!6195, !5947, !6196}
!6196 = !DILocation(line: 1504, column: 2, scope: !5849)
!6197 = !DILocation(line: 1506, column: 9, scope: !5849)
!6198 = !DILocation(line: 1506, column: 2, scope: !5849)
!6199 = distinct !DISubprogram(name: "BKE_curve_make_orco", scope: !1, file: !1, line: 1513, type: !6200, scopeLine: 1514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!6200 = !DISubroutineType(types: !6201)
!6201 = !{!1325, !6202, !2521, !1840}
!6202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6203, size: 64)
!6203 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !234, line: 1299, baseType: !490)
!6204 = !DILocalVariable(name: "scene", arg: 1, scope: !6199, file: !1, line: 1513, type: !6202)
!6205 = !DILocation(line: 1513, column: 35, scope: !6199)
!6206 = !DILocalVariable(name: "ob", arg: 2, scope: !6199, file: !1, line: 1513, type: !2521)
!6207 = !DILocation(line: 1513, column: 50, scope: !6199)
!6208 = !DILocalVariable(name: "r_numVerts", arg: 3, scope: !6199, file: !1, line: 1513, type: !1840)
!6209 = !DILocation(line: 1513, column: 59, scope: !6199)
!6210 = !DILocalVariable(name: "cu", scope: !6199, file: !1, line: 1515, type: !114)
!6211 = !DILocation(line: 1515, column: 9, scope: !6199)
!6212 = !DILocation(line: 1515, column: 14, scope: !6199)
!6213 = !DILocation(line: 1515, column: 18, scope: !6199)
!6214 = !DILocalVariable(name: "dl", scope: !6199, file: !1, line: 1516, type: !6215)
!6215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6216, size: 64)
!6216 = !DIDerivedType(tag: DW_TAG_typedef, name: "DispList", file: !6217, line: 79, baseType: !6218)
!6217 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_displist.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DispList", file: !6217, line: 68, size: 576, elements: !6219)
!6219 = !{!6220, !6222, !6223, !6224, !6225, !6226, !6227, !6228, !6229, !6230, !6231, !6232, !6233, !6234}
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6218, file: !6217, line: 69, baseType: !6221, size: 64)
!6221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6218, size: 64)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6218, file: !6217, line: 69, baseType: !6221, size: 64, offset: 64)
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6218, file: !6217, line: 70, baseType: !77, size: 16, offset: 128)
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6218, file: !6217, line: 70, baseType: !77, size: 16, offset: 144)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "parts", scope: !6218, file: !6217, line: 71, baseType: !79, size: 32, offset: 160)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !6218, file: !6217, line: 71, baseType: !79, size: 32, offset: 192)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !6218, file: !6217, line: 72, baseType: !77, size: 16, offset: 224)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !6218, file: !6217, line: 72, baseType: !77, size: 16, offset: 240)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !6218, file: !6217, line: 73, baseType: !1325, size: 64, offset: 256)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "nors", scope: !6218, file: !6217, line: 73, baseType: !1325, size: 64, offset: 320)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !6218, file: !6217, line: 74, baseType: !1840, size: 64, offset: 384)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "charidx", scope: !6218, file: !6217, line: 75, baseType: !79, size: 32, offset: 448)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "totindex", scope: !6218, file: !6217, line: 76, baseType: !79, size: 32, offset: 480)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "bevelSplitFlag", scope: !6218, file: !6217, line: 78, baseType: !559, size: 64, offset: 512)
!6235 = !DILocation(line: 1516, column: 12, scope: !6199)
!6236 = !DILocalVariable(name: "u", scope: !6199, file: !1, line: 1517, type: !79)
!6237 = !DILocation(line: 1517, column: 6, scope: !6199)
!6238 = !DILocalVariable(name: "v", scope: !6199, file: !1, line: 1517, type: !79)
!6239 = !DILocation(line: 1517, column: 9, scope: !6199)
!6240 = !DILocalVariable(name: "numVerts", scope: !6199, file: !1, line: 1517, type: !79)
!6241 = !DILocation(line: 1517, column: 12, scope: !6199)
!6242 = !DILocalVariable(name: "fp", scope: !6199, file: !1, line: 1518, type: !1325)
!6243 = !DILocation(line: 1518, column: 9, scope: !6199)
!6244 = !DILocalVariable(name: "coord_array", scope: !6199, file: !1, line: 1518, type: !1325)
!6245 = !DILocation(line: 1518, column: 14, scope: !6199)
!6246 = !DILocalVariable(name: "disp", scope: !6199, file: !1, line: 1519, type: !104)
!6247 = !DILocation(line: 1519, column: 11, scope: !6199)
!6248 = !DILocation(line: 1521, column: 39, scope: !6199)
!6249 = !DILocation(line: 1521, column: 46, scope: !6199)
!6250 = !DILocation(line: 1521, column: 2, scope: !6199)
!6251 = !DILocation(line: 1523, column: 11, scope: !6199)
!6252 = !DILocation(line: 1524, column: 17, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6199, file: !1, line: 1524, column: 2)
!6254 = !DILocation(line: 1524, column: 12, scope: !6253)
!6255 = !DILocation(line: 1524, column: 10, scope: !6253)
!6256 = !DILocation(line: 1524, column: 7, scope: !6253)
!6257 = !DILocation(line: 1524, column: 24, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6253, file: !1, line: 1524, column: 2)
!6259 = !DILocation(line: 1524, column: 2, scope: !6253)
!6260 = !DILocation(line: 1525, column: 7, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6262, file: !1, line: 1525, column: 7)
!6262 = distinct !DILexicalBlock(scope: !6258, file: !1, line: 1524, column: 43)
!6263 = !DILocation(line: 1525, column: 11, scope: !6261)
!6264 = !DILocation(line: 1525, column: 16, scope: !6261)
!6265 = !DILocation(line: 1525, column: 7, scope: !6262)
!6266 = !DILocation(line: 1526, column: 16, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6261, file: !1, line: 1525, column: 30)
!6268 = !DILocation(line: 1526, column: 20, scope: !6267)
!6269 = !DILocation(line: 1526, column: 13, scope: !6267)
!6270 = !DILocation(line: 1527, column: 3, scope: !6267)
!6271 = !DILocation(line: 1528, column: 12, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6261, file: !1, line: 1528, column: 12)
!6273 = !DILocation(line: 1528, column: 16, scope: !6272)
!6274 = !DILocation(line: 1528, column: 21, scope: !6272)
!6275 = !DILocation(line: 1528, column: 12, scope: !6261)
!6276 = !DILocation(line: 1532, column: 8, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6278, file: !1, line: 1532, column: 8)
!6278 = distinct !DILexicalBlock(scope: !6272, file: !1, line: 1528, column: 33)
!6279 = !DILocation(line: 1532, column: 12, scope: !6277)
!6280 = !DILocation(line: 1532, column: 17, scope: !6277)
!6281 = !DILocation(line: 1532, column: 8, scope: !6278)
!6282 = !DILocation(line: 1533, column: 9, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6284, file: !1, line: 1533, column: 9)
!6284 = distinct !DILexicalBlock(scope: !6277, file: !1, line: 1532, column: 30)
!6285 = !DILocation(line: 1533, column: 13, scope: !6283)
!6286 = !DILocation(line: 1533, column: 18, scope: !6283)
!6287 = !DILocation(line: 1533, column: 9, scope: !6284)
!6288 = !DILocation(line: 1534, column: 19, scope: !6283)
!6289 = !DILocation(line: 1534, column: 23, scope: !6283)
!6290 = !DILocation(line: 1534, column: 29, scope: !6283)
!6291 = !DILocation(line: 1534, column: 37, scope: !6283)
!6292 = !DILocation(line: 1534, column: 41, scope: !6283)
!6293 = !DILocation(line: 1534, column: 44, scope: !6283)
!6294 = !DILocation(line: 1534, column: 34, scope: !6283)
!6295 = !DILocation(line: 1534, column: 15, scope: !6283)
!6296 = !DILocation(line: 1534, column: 6, scope: !6283)
!6297 = !DILocation(line: 1536, column: 18, scope: !6283)
!6298 = !DILocation(line: 1536, column: 22, scope: !6283)
!6299 = !DILocation(line: 1536, column: 31, scope: !6283)
!6300 = !DILocation(line: 1536, column: 35, scope: !6283)
!6301 = !DILocation(line: 1536, column: 38, scope: !6283)
!6302 = !DILocation(line: 1536, column: 28, scope: !6283)
!6303 = !DILocation(line: 1536, column: 15, scope: !6283)
!6304 = !DILocation(line: 1537, column: 4, scope: !6284)
!6305 = !DILocation(line: 1538, column: 13, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6277, file: !1, line: 1538, column: 13)
!6307 = !DILocation(line: 1538, column: 17, scope: !6306)
!6308 = !DILocation(line: 1538, column: 22, scope: !6306)
!6309 = !DILocation(line: 1538, column: 13, scope: !6277)
!6310 = !DILocation(line: 1539, column: 18, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6306, file: !1, line: 1538, column: 35)
!6312 = !DILocation(line: 1539, column: 22, scope: !6311)
!6313 = !DILocation(line: 1539, column: 28, scope: !6311)
!6314 = !DILocation(line: 1539, column: 35, scope: !6311)
!6315 = !DILocation(line: 1539, column: 39, scope: !6311)
!6316 = !DILocation(line: 1539, column: 33, scope: !6311)
!6317 = !DILocation(line: 1539, column: 14, scope: !6311)
!6318 = !DILocation(line: 1540, column: 4, scope: !6311)
!6319 = !DILocation(line: 1542, column: 17, scope: !6306)
!6320 = !DILocation(line: 1542, column: 21, scope: !6306)
!6321 = !DILocation(line: 1542, column: 29, scope: !6306)
!6322 = !DILocation(line: 1542, column: 33, scope: !6306)
!6323 = !DILocation(line: 1542, column: 27, scope: !6306)
!6324 = !DILocation(line: 1542, column: 14, scope: !6306)
!6325 = !DILocation(line: 1543, column: 3, scope: !6278)
!6326 = !DILocation(line: 1544, column: 2, scope: !6262)
!6327 = !DILocation(line: 1524, column: 33, scope: !6258)
!6328 = !DILocation(line: 1524, column: 37, scope: !6258)
!6329 = !DILocation(line: 1524, column: 31, scope: !6258)
!6330 = !DILocation(line: 1524, column: 2, scope: !6258)
!6331 = distinct !{!6331, !6259, !6332}
!6332 = !DILocation(line: 1544, column: 2, scope: !6253)
!6333 = !DILocation(line: 1546, column: 6, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6199, file: !1, line: 1546, column: 6)
!6335 = !DILocation(line: 1546, column: 6, scope: !6199)
!6336 = !DILocation(line: 1547, column: 17, scope: !6334)
!6337 = !DILocation(line: 1547, column: 4, scope: !6334)
!6338 = !DILocation(line: 1547, column: 15, scope: !6334)
!6339 = !DILocation(line: 1547, column: 3, scope: !6334)
!6340 = !DILocation(line: 1549, column: 21, scope: !6199)
!6341 = !DILocation(line: 1549, column: 53, scope: !6199)
!6342 = !DILocation(line: 1549, column: 51, scope: !6199)
!6343 = !DILocation(line: 1549, column: 19, scope: !6199)
!6344 = !DILocation(line: 1549, column: 5, scope: !6199)
!6345 = !DILocation(line: 1550, column: 17, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6199, file: !1, line: 1550, column: 2)
!6347 = !DILocation(line: 1550, column: 12, scope: !6346)
!6348 = !DILocation(line: 1550, column: 10, scope: !6346)
!6349 = !DILocation(line: 1550, column: 7, scope: !6346)
!6350 = !DILocation(line: 1550, column: 24, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6346, file: !1, line: 1550, column: 2)
!6352 = !DILocation(line: 1550, column: 2, scope: !6346)
!6353 = !DILocation(line: 1551, column: 7, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6355, file: !1, line: 1551, column: 7)
!6355 = distinct !DILexicalBlock(scope: !6351, file: !1, line: 1550, column: 43)
!6356 = !DILocation(line: 1551, column: 11, scope: !6354)
!6357 = !DILocation(line: 1551, column: 16, scope: !6354)
!6358 = !DILocation(line: 1551, column: 7, scope: !6355)
!6359 = !DILocation(line: 1552, column: 11, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6361, file: !1, line: 1552, column: 4)
!6361 = distinct !DILexicalBlock(scope: !6354, file: !1, line: 1551, column: 30)
!6362 = !DILocation(line: 1552, column: 9, scope: !6360)
!6363 = !DILocation(line: 1552, column: 16, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6360, file: !1, line: 1552, column: 4)
!6365 = !DILocation(line: 1552, column: 20, scope: !6364)
!6366 = !DILocation(line: 1552, column: 24, scope: !6364)
!6367 = !DILocation(line: 1552, column: 18, scope: !6364)
!6368 = !DILocation(line: 1552, column: 4, scope: !6360)
!6369 = !DILocation(line: 1553, column: 9, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6371, file: !1, line: 1553, column: 9)
!6371 = distinct !DILexicalBlock(scope: !6364, file: !1, line: 1552, column: 42)
!6372 = !DILocation(line: 1553, column: 13, scope: !6370)
!6373 = !DILocation(line: 1553, column: 18, scope: !6370)
!6374 = !DILocation(line: 1553, column: 9, scope: !6371)
!6375 = !DILocation(line: 1554, column: 21, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6370, file: !1, line: 1553, column: 32)
!6377 = !DILocation(line: 1554, column: 19, scope: !6376)
!6378 = !DILocation(line: 1554, column: 26, scope: !6376)
!6379 = !DILocation(line: 1554, column: 30, scope: !6376)
!6380 = !DILocation(line: 1554, column: 33, scope: !6376)
!6381 = !DILocation(line: 1554, column: 25, scope: !6376)
!6382 = !DILocation(line: 1554, column: 23, scope: !6376)
!6383 = !DILocation(line: 1554, column: 38, scope: !6376)
!6384 = !DILocation(line: 1554, column: 6, scope: !6376)
!6385 = !DILocation(line: 1554, column: 12, scope: !6376)
!6386 = !DILocation(line: 1555, column: 6, scope: !6376)
!6387 = !DILocation(line: 1555, column: 12, scope: !6376)
!6388 = !DILocation(line: 1556, column: 6, scope: !6376)
!6389 = !DILocation(line: 1556, column: 12, scope: !6376)
!6390 = !DILocation(line: 1557, column: 5, scope: !6376)
!6391 = !DILocation(line: 1559, column: 17, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6370, file: !1, line: 1558, column: 10)
!6393 = !DILocation(line: 1559, column: 22, scope: !6392)
!6394 = !DILocation(line: 1559, column: 26, scope: !6392)
!6395 = !DILocation(line: 1559, column: 32, scope: !6392)
!6396 = !DILocation(line: 1559, column: 34, scope: !6392)
!6397 = !DILocation(line: 1559, column: 6, scope: !6392)
!6398 = !DILocation(line: 1561, column: 15, scope: !6392)
!6399 = !DILocation(line: 1561, column: 23, scope: !6392)
!6400 = !DILocation(line: 1561, column: 27, scope: !6392)
!6401 = !DILocation(line: 1561, column: 21, scope: !6392)
!6402 = !DILocation(line: 1561, column: 37, scope: !6392)
!6403 = !DILocation(line: 1561, column: 41, scope: !6392)
!6404 = !DILocation(line: 1561, column: 35, scope: !6392)
!6405 = !DILocation(line: 1561, column: 6, scope: !6392)
!6406 = !DILocation(line: 1561, column: 12, scope: !6392)
!6407 = !DILocation(line: 1562, column: 15, scope: !6392)
!6408 = !DILocation(line: 1562, column: 23, scope: !6392)
!6409 = !DILocation(line: 1562, column: 27, scope: !6392)
!6410 = !DILocation(line: 1562, column: 21, scope: !6392)
!6411 = !DILocation(line: 1562, column: 37, scope: !6392)
!6412 = !DILocation(line: 1562, column: 41, scope: !6392)
!6413 = !DILocation(line: 1562, column: 35, scope: !6392)
!6414 = !DILocation(line: 1562, column: 6, scope: !6392)
!6415 = !DILocation(line: 1562, column: 12, scope: !6392)
!6416 = !DILocation(line: 1563, column: 15, scope: !6392)
!6417 = !DILocation(line: 1563, column: 23, scope: !6392)
!6418 = !DILocation(line: 1563, column: 27, scope: !6392)
!6419 = !DILocation(line: 1563, column: 21, scope: !6392)
!6420 = !DILocation(line: 1563, column: 37, scope: !6392)
!6421 = !DILocation(line: 1563, column: 41, scope: !6392)
!6422 = !DILocation(line: 1563, column: 35, scope: !6392)
!6423 = !DILocation(line: 1563, column: 6, scope: !6392)
!6424 = !DILocation(line: 1563, column: 12, scope: !6392)
!6425 = !DILocation(line: 1565, column: 4, scope: !6371)
!6426 = !DILocation(line: 1552, column: 29, scope: !6364)
!6427 = !DILocation(line: 1552, column: 36, scope: !6364)
!6428 = !DILocation(line: 1552, column: 4, scope: !6364)
!6429 = distinct !{!6429, !6368, !6430}
!6430 = !DILocation(line: 1565, column: 4, scope: !6360)
!6431 = !DILocation(line: 1566, column: 3, scope: !6361)
!6432 = !DILocation(line: 1567, column: 12, scope: !6433)
!6433 = distinct !DILexicalBlock(scope: !6354, file: !1, line: 1567, column: 12)
!6434 = !DILocation(line: 1567, column: 16, scope: !6433)
!6435 = !DILocation(line: 1567, column: 21, scope: !6433)
!6436 = !DILocation(line: 1567, column: 12, scope: !6354)
!6437 = !DILocalVariable(name: "sizeu", scope: !6438, file: !1, line: 1568, type: !79)
!6438 = distinct !DILexicalBlock(scope: !6433, file: !1, line: 1567, column: 33)
!6439 = !DILocation(line: 1568, column: 8, scope: !6438)
!6440 = !DILocation(line: 1568, column: 16, scope: !6438)
!6441 = !DILocation(line: 1568, column: 20, scope: !6438)
!6442 = !DILocalVariable(name: "sizev", scope: !6438, file: !1, line: 1568, type: !79)
!6443 = !DILocation(line: 1568, column: 24, scope: !6438)
!6444 = !DILocation(line: 1568, column: 32, scope: !6438)
!6445 = !DILocation(line: 1568, column: 36, scope: !6438)
!6446 = !DILocation(line: 1571, column: 8, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6438, file: !1, line: 1571, column: 8)
!6448 = !DILocation(line: 1571, column: 12, scope: !6447)
!6449 = !DILocation(line: 1571, column: 17, scope: !6447)
!6450 = !DILocation(line: 1571, column: 8, scope: !6438)
!6451 = !DILocation(line: 1572, column: 10, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6447, file: !1, line: 1571, column: 30)
!6453 = !DILocation(line: 1573, column: 9, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6452, file: !1, line: 1573, column: 9)
!6455 = !DILocation(line: 1573, column: 13, scope: !6454)
!6456 = !DILocation(line: 1573, column: 18, scope: !6454)
!6457 = !DILocation(line: 1573, column: 9, scope: !6452)
!6458 = !DILocation(line: 1574, column: 11, scope: !6454)
!6459 = !DILocation(line: 1574, column: 6, scope: !6454)
!6460 = !DILocation(line: 1575, column: 4, scope: !6452)
!6461 = !DILocation(line: 1576, column: 14, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6447, file: !1, line: 1576, column: 14)
!6463 = !DILocation(line: 1576, column: 18, scope: !6462)
!6464 = !DILocation(line: 1576, column: 23, scope: !6462)
!6465 = !DILocation(line: 1576, column: 14, scope: !6447)
!6466 = !DILocation(line: 1577, column: 10, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6462, file: !1, line: 1576, column: 36)
!6468 = !DILocation(line: 1578, column: 4, scope: !6467)
!6469 = !DILocation(line: 1580, column: 11, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6438, file: !1, line: 1580, column: 4)
!6471 = !DILocation(line: 1580, column: 9, scope: !6470)
!6472 = !DILocation(line: 1580, column: 16, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6470, file: !1, line: 1580, column: 4)
!6474 = !DILocation(line: 1580, column: 20, scope: !6473)
!6475 = !DILocation(line: 1580, column: 18, scope: !6473)
!6476 = !DILocation(line: 1580, column: 4, scope: !6470)
!6477 = !DILocation(line: 1581, column: 12, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6479, file: !1, line: 1581, column: 5)
!6479 = distinct !DILexicalBlock(scope: !6473, file: !1, line: 1580, column: 32)
!6480 = !DILocation(line: 1581, column: 10, scope: !6478)
!6481 = !DILocation(line: 1581, column: 17, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6478, file: !1, line: 1581, column: 5)
!6483 = !DILocation(line: 1581, column: 21, scope: !6482)
!6484 = !DILocation(line: 1581, column: 19, scope: !6482)
!6485 = !DILocation(line: 1581, column: 5, scope: !6478)
!6486 = !DILocation(line: 1582, column: 10, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6488, file: !1, line: 1582, column: 10)
!6488 = distinct !DILexicalBlock(scope: !6482, file: !1, line: 1581, column: 42)
!6489 = !DILocation(line: 1582, column: 14, scope: !6487)
!6490 = !DILocation(line: 1582, column: 19, scope: !6487)
!6491 = !DILocation(line: 1582, column: 10, scope: !6488)
!6492 = !DILocation(line: 1583, column: 22, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6487, file: !1, line: 1582, column: 33)
!6494 = !DILocation(line: 1583, column: 20, scope: !6493)
!6495 = !DILocation(line: 1583, column: 27, scope: !6493)
!6496 = !DILocation(line: 1583, column: 33, scope: !6493)
!6497 = !DILocation(line: 1583, column: 26, scope: !6493)
!6498 = !DILocation(line: 1583, column: 24, scope: !6493)
!6499 = !DILocation(line: 1583, column: 38, scope: !6493)
!6500 = !DILocation(line: 1583, column: 7, scope: !6493)
!6501 = !DILocation(line: 1583, column: 13, scope: !6493)
!6502 = !DILocation(line: 1584, column: 22, scope: !6493)
!6503 = !DILocation(line: 1584, column: 20, scope: !6493)
!6504 = !DILocation(line: 1584, column: 27, scope: !6493)
!6505 = !DILocation(line: 1584, column: 33, scope: !6493)
!6506 = !DILocation(line: 1584, column: 26, scope: !6493)
!6507 = !DILocation(line: 1584, column: 24, scope: !6493)
!6508 = !DILocation(line: 1584, column: 38, scope: !6493)
!6509 = !DILocation(line: 1584, column: 7, scope: !6493)
!6510 = !DILocation(line: 1584, column: 13, scope: !6493)
!6511 = !DILocation(line: 1585, column: 7, scope: !6493)
!6512 = !DILocation(line: 1585, column: 13, scope: !6493)
!6513 = !DILocation(line: 1586, column: 6, scope: !6493)
!6514 = !DILocalVariable(name: "vert", scope: !6515, file: !1, line: 1588, type: !3191)
!6515 = distinct !DILexicalBlock(scope: !6487, file: !1, line: 1587, column: 11)
!6516 = !DILocation(line: 1588, column: 20, scope: !6515)
!6517 = !DILocalVariable(name: "realv", scope: !6515, file: !1, line: 1589, type: !79)
!6518 = !DILocation(line: 1589, column: 11, scope: !6515)
!6519 = !DILocation(line: 1589, column: 19, scope: !6515)
!6520 = !DILocation(line: 1589, column: 23, scope: !6515)
!6521 = !DILocation(line: 1589, column: 27, scope: !6515)
!6522 = !DILocation(line: 1589, column: 21, scope: !6515)
!6523 = !DILocalVariable(name: "realu", scope: !6515, file: !1, line: 1590, type: !79)
!6524 = !DILocation(line: 1590, column: 11, scope: !6515)
!6525 = !DILocation(line: 1590, column: 19, scope: !6515)
!6526 = !DILocation(line: 1590, column: 23, scope: !6515)
!6527 = !DILocation(line: 1590, column: 27, scope: !6515)
!6528 = !DILocation(line: 1590, column: 21, scope: !6515)
!6529 = !DILocation(line: 1592, column: 14, scope: !6515)
!6530 = !DILocation(line: 1592, column: 18, scope: !6515)
!6531 = !DILocation(line: 1592, column: 31, scope: !6515)
!6532 = !DILocation(line: 1592, column: 35, scope: !6515)
!6533 = !DILocation(line: 1592, column: 40, scope: !6515)
!6534 = !DILocation(line: 1592, column: 38, scope: !6515)
!6535 = !DILocation(line: 1592, column: 48, scope: !6515)
!6536 = !DILocation(line: 1592, column: 46, scope: !6515)
!6537 = !DILocation(line: 1592, column: 28, scope: !6515)
!6538 = !DILocation(line: 1592, column: 24, scope: !6515)
!6539 = !DILocation(line: 1592, column: 12, scope: !6515)
!6540 = !DILocation(line: 1593, column: 18, scope: !6515)
!6541 = !DILocation(line: 1593, column: 22, scope: !6515)
!6542 = !DILocation(line: 1593, column: 7, scope: !6515)
!6543 = !DILocation(line: 1595, column: 16, scope: !6515)
!6544 = !DILocation(line: 1595, column: 24, scope: !6515)
!6545 = !DILocation(line: 1595, column: 28, scope: !6515)
!6546 = !DILocation(line: 1595, column: 22, scope: !6515)
!6547 = !DILocation(line: 1595, column: 38, scope: !6515)
!6548 = !DILocation(line: 1595, column: 42, scope: !6515)
!6549 = !DILocation(line: 1595, column: 36, scope: !6515)
!6550 = !DILocation(line: 1595, column: 7, scope: !6515)
!6551 = !DILocation(line: 1595, column: 13, scope: !6515)
!6552 = !DILocation(line: 1596, column: 16, scope: !6515)
!6553 = !DILocation(line: 1596, column: 24, scope: !6515)
!6554 = !DILocation(line: 1596, column: 28, scope: !6515)
!6555 = !DILocation(line: 1596, column: 22, scope: !6515)
!6556 = !DILocation(line: 1596, column: 38, scope: !6515)
!6557 = !DILocation(line: 1596, column: 42, scope: !6515)
!6558 = !DILocation(line: 1596, column: 36, scope: !6515)
!6559 = !DILocation(line: 1596, column: 7, scope: !6515)
!6560 = !DILocation(line: 1596, column: 13, scope: !6515)
!6561 = !DILocation(line: 1597, column: 16, scope: !6515)
!6562 = !DILocation(line: 1597, column: 24, scope: !6515)
!6563 = !DILocation(line: 1597, column: 28, scope: !6515)
!6564 = !DILocation(line: 1597, column: 22, scope: !6515)
!6565 = !DILocation(line: 1597, column: 38, scope: !6515)
!6566 = !DILocation(line: 1597, column: 42, scope: !6515)
!6567 = !DILocation(line: 1597, column: 36, scope: !6515)
!6568 = !DILocation(line: 1597, column: 7, scope: !6515)
!6569 = !DILocation(line: 1597, column: 13, scope: !6515)
!6570 = !DILocation(line: 1599, column: 5, scope: !6488)
!6571 = !DILocation(line: 1581, column: 29, scope: !6482)
!6572 = !DILocation(line: 1581, column: 36, scope: !6482)
!6573 = !DILocation(line: 1581, column: 5, scope: !6482)
!6574 = distinct !{!6574, !6485, !6575}
!6575 = !DILocation(line: 1599, column: 5, scope: !6478)
!6576 = !DILocation(line: 1600, column: 4, scope: !6479)
!6577 = !DILocation(line: 1580, column: 28, scope: !6473)
!6578 = !DILocation(line: 1580, column: 4, scope: !6473)
!6579 = distinct !{!6579, !6476, !6580}
!6580 = !DILocation(line: 1600, column: 4, scope: !6470)
!6581 = !DILocation(line: 1601, column: 3, scope: !6438)
!6582 = !DILocation(line: 1602, column: 2, scope: !6355)
!6583 = !DILocation(line: 1550, column: 33, scope: !6351)
!6584 = !DILocation(line: 1550, column: 37, scope: !6351)
!6585 = !DILocation(line: 1550, column: 31, scope: !6351)
!6586 = !DILocation(line: 1550, column: 2, scope: !6351)
!6587 = distinct !{!6587, !6352, !6588}
!6588 = !DILocation(line: 1602, column: 2, scope: !6346)
!6589 = !DILocation(line: 1604, column: 2, scope: !6199)
!6590 = !DILocation(line: 1606, column: 9, scope: !6199)
!6591 = !DILocation(line: 1606, column: 2, scope: !6199)
!6592 = distinct !DISubprogram(name: "BKE_curve_bevel_make", scope: !1, file: !1, line: 1612, type: !6593, scopeLine: 1614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!6593 = !DISubroutineType(types: !6594)
!6594 = !{null, !6202, !2521, !1602, !6595, !6595}
!6595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !551)
!6596 = !DILocalVariable(name: "scene", arg: 1, scope: !6592, file: !1, line: 1612, type: !6202)
!6597 = !DILocation(line: 1612, column: 34, scope: !6592)
!6598 = !DILocalVariable(name: "ob", arg: 2, scope: !6592, file: !1, line: 1612, type: !2521)
!6599 = !DILocation(line: 1612, column: 49, scope: !6592)
!6600 = !DILocalVariable(name: "disp", arg: 3, scope: !6592, file: !1, line: 1612, type: !1602)
!6601 = !DILocation(line: 1612, column: 63, scope: !6592)
!6602 = !DILocalVariable(name: "for_render", arg: 4, scope: !6592, file: !1, line: 1613, type: !6595)
!6603 = !DILocation(line: 1613, column: 38, scope: !6592)
!6604 = !DILocalVariable(name: "use_render_resolution", arg: 5, scope: !6592, file: !1, line: 1613, type: !6595)
!6605 = !DILocation(line: 1613, column: 61, scope: !6592)
!6606 = !DILocalVariable(name: "dl", scope: !6592, file: !1, line: 1615, type: !6215)
!6607 = !DILocation(line: 1615, column: 12, scope: !6592)
!6608 = !DILocalVariable(name: "dlnew", scope: !6592, file: !1, line: 1615, type: !6215)
!6609 = !DILocation(line: 1615, column: 17, scope: !6592)
!6610 = !DILocalVariable(name: "bevcu", scope: !6592, file: !1, line: 1616, type: !114)
!6611 = !DILocation(line: 1616, column: 9, scope: !6592)
!6612 = !DILocalVariable(name: "cu", scope: !6592, file: !1, line: 1616, type: !114)
!6613 = !DILocation(line: 1616, column: 17, scope: !6592)
!6614 = !DILocalVariable(name: "fp", scope: !6592, file: !1, line: 1617, type: !1325)
!6615 = !DILocation(line: 1617, column: 9, scope: !6592)
!6616 = !DILocalVariable(name: "facx", scope: !6592, file: !1, line: 1617, type: !128)
!6617 = !DILocation(line: 1617, column: 13, scope: !6592)
!6618 = !DILocalVariable(name: "facy", scope: !6592, file: !1, line: 1617, type: !128)
!6619 = !DILocation(line: 1617, column: 19, scope: !6592)
!6620 = !DILocalVariable(name: "angle", scope: !6592, file: !1, line: 1617, type: !128)
!6621 = !DILocation(line: 1617, column: 25, scope: !6592)
!6622 = !DILocalVariable(name: "dangle", scope: !6592, file: !1, line: 1617, type: !128)
!6623 = !DILocation(line: 1617, column: 32, scope: !6592)
!6624 = !DILocalVariable(name: "nr", scope: !6592, file: !1, line: 1618, type: !79)
!6625 = !DILocation(line: 1618, column: 6, scope: !6592)
!6626 = !DILocalVariable(name: "a", scope: !6592, file: !1, line: 1618, type: !79)
!6627 = !DILocation(line: 1618, column: 10, scope: !6592)
!6628 = !DILocation(line: 1620, column: 7, scope: !6592)
!6629 = !DILocation(line: 1620, column: 11, scope: !6592)
!6630 = !DILocation(line: 1620, column: 5, scope: !6592)
!6631 = !DILocation(line: 1621, column: 21, scope: !6592)
!6632 = !DILocation(line: 1621, column: 2, scope: !6592)
!6633 = !DILocation(line: 1626, column: 6, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6592, file: !1, line: 1626, column: 6)
!6635 = !DILocation(line: 1626, column: 10, scope: !6634)
!6636 = !DILocation(line: 1626, column: 6, scope: !6592)
!6637 = !DILocation(line: 1627, column: 7, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6639, file: !1, line: 1627, column: 7)
!6639 = distinct !DILexicalBlock(scope: !6634, file: !1, line: 1626, column: 18)
!6640 = !DILocation(line: 1627, column: 11, scope: !6638)
!6641 = !DILocation(line: 1627, column: 19, scope: !6638)
!6642 = !DILocation(line: 1627, column: 24, scope: !6638)
!6643 = !DILocation(line: 1627, column: 7, scope: !6639)
!6644 = !DILocation(line: 1628, column: 4, scope: !6638)
!6645 = !DILocation(line: 1630, column: 11, scope: !6639)
!6646 = !DILocation(line: 1630, column: 15, scope: !6639)
!6647 = !DILocation(line: 1630, column: 23, scope: !6639)
!6648 = !DILocation(line: 1630, column: 9, scope: !6639)
!6649 = !DILocation(line: 1631, column: 7, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6639, file: !1, line: 1631, column: 7)
!6651 = !DILocation(line: 1631, column: 14, scope: !6650)
!6652 = !DILocation(line: 1631, column: 19, scope: !6650)
!6653 = !DILocation(line: 1631, column: 27, scope: !6650)
!6654 = !DILocation(line: 1631, column: 30, scope: !6650)
!6655 = !DILocation(line: 1631, column: 37, scope: !6650)
!6656 = !DILocation(line: 1631, column: 42, scope: !6650)
!6657 = !DILocation(line: 1631, column: 7, scope: !6639)
!6658 = !DILocalVariable(name: "bevdisp", scope: !6659, file: !1, line: 1632, type: !104)
!6659 = distinct !DILexicalBlock(scope: !6650, file: !1, line: 1631, column: 51)
!6660 = !DILocation(line: 1632, column: 13, scope: !6659)
!6661 = !DILocation(line: 1633, column: 11, scope: !6659)
!6662 = !DILocation(line: 1633, column: 15, scope: !6659)
!6663 = !DILocation(line: 1633, column: 23, scope: !6659)
!6664 = !DILocation(line: 1633, column: 9, scope: !6659)
!6665 = !DILocation(line: 1634, column: 11, scope: !6659)
!6666 = !DILocation(line: 1634, column: 15, scope: !6659)
!6667 = !DILocation(line: 1634, column: 23, scope: !6659)
!6668 = !DILocation(line: 1634, column: 9, scope: !6659)
!6669 = !DILocation(line: 1636, column: 8, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6659, file: !1, line: 1636, column: 8)
!6671 = !DILocation(line: 1636, column: 8, scope: !6659)
!6672 = !DILocation(line: 1637, column: 44, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6670, file: !1, line: 1636, column: 20)
!6674 = !DILocation(line: 1637, column: 51, scope: !6673)
!6675 = !DILocation(line: 1637, column: 55, scope: !6673)
!6676 = !DILocation(line: 1637, column: 86, scope: !6673)
!6677 = !DILocation(line: 1637, column: 5, scope: !6673)
!6678 = !DILocation(line: 1638, column: 18, scope: !6673)
!6679 = !DILocation(line: 1638, column: 10, scope: !6673)
!6680 = !DILocation(line: 1638, column: 8, scope: !6673)
!6681 = !DILocation(line: 1639, column: 4, scope: !6673)
!6682 = !DILocation(line: 1640, column: 13, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6670, file: !1, line: 1640, column: 13)
!6684 = !DILocation(line: 1640, column: 17, scope: !6683)
!6685 = !DILocation(line: 1640, column: 25, scope: !6683)
!6686 = !DILocation(line: 1640, column: 13, scope: !6670)
!6687 = !DILocation(line: 1641, column: 10, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6683, file: !1, line: 1640, column: 38)
!6689 = !DILocation(line: 1641, column: 14, scope: !6688)
!6690 = !DILocation(line: 1641, column: 22, scope: !6688)
!6691 = !DILocation(line: 1641, column: 35, scope: !6688)
!6692 = !DILocation(line: 1641, column: 40, scope: !6688)
!6693 = !DILocation(line: 1641, column: 8, scope: !6688)
!6694 = !DILocation(line: 1642, column: 4, scope: !6688)
!6695 = !DILocation(line: 1645, column: 8, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6683, file: !1, line: 1643, column: 9)
!6697 = !DILocation(line: 1648, column: 4, scope: !6659)
!6698 = !DILocation(line: 1648, column: 11, scope: !6659)
!6699 = !DILocation(line: 1649, column: 9, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6701, file: !1, line: 1649, column: 9)
!6701 = distinct !DILexicalBlock(scope: !6659, file: !1, line: 1648, column: 15)
!6702 = !DILocation(line: 1649, column: 9, scope: !6701)
!6703 = !DILocation(line: 1650, column: 14, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6700, file: !1, line: 1649, column: 43)
!6705 = !DILocation(line: 1650, column: 12, scope: !6704)
!6706 = !DILocation(line: 1651, column: 7, scope: !6704)
!6707 = !DILocation(line: 1651, column: 16, scope: !6704)
!6708 = !DILocation(line: 1651, column: 15, scope: !6704)
!6709 = !DILocation(line: 1652, column: 21, scope: !6704)
!6710 = !DILocation(line: 1652, column: 53, scope: !6704)
!6711 = !DILocation(line: 1652, column: 57, scope: !6704)
!6712 = !DILocation(line: 1652, column: 51, scope: !6704)
!6713 = !DILocation(line: 1652, column: 65, scope: !6704)
!6714 = !DILocation(line: 1652, column: 69, scope: !6704)
!6715 = !DILocation(line: 1652, column: 63, scope: !6704)
!6716 = !DILocation(line: 1652, column: 6, scope: !6704)
!6717 = !DILocation(line: 1652, column: 13, scope: !6704)
!6718 = !DILocation(line: 1652, column: 19, scope: !6704)
!6719 = !DILocation(line: 1653, column: 13, scope: !6704)
!6720 = !DILocation(line: 1653, column: 20, scope: !6704)
!6721 = !DILocation(line: 1653, column: 6, scope: !6704)
!6722 = !DILocation(line: 1653, column: 27, scope: !6704)
!6723 = !DILocation(line: 1653, column: 31, scope: !6704)
!6724 = !DILocation(line: 1653, column: 58, scope: !6704)
!6725 = !DILocation(line: 1653, column: 62, scope: !6704)
!6726 = !DILocation(line: 1653, column: 56, scope: !6704)
!6727 = !DILocation(line: 1653, column: 70, scope: !6704)
!6728 = !DILocation(line: 1653, column: 74, scope: !6704)
!6729 = !DILocation(line: 1653, column: 68, scope: !6704)
!6730 = !DILocation(line: 1655, column: 10, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6704, file: !1, line: 1655, column: 10)
!6732 = !DILocation(line: 1655, column: 17, scope: !6731)
!6733 = !DILocation(line: 1655, column: 22, scope: !6731)
!6734 = !DILocation(line: 1655, column: 10, scope: !6704)
!6735 = !DILocation(line: 1656, column: 7, scope: !6731)
!6736 = !DILocation(line: 1656, column: 14, scope: !6731)
!6737 = !DILocation(line: 1656, column: 19, scope: !6731)
!6738 = !DILocation(line: 1658, column: 18, scope: !6704)
!6739 = !DILocation(line: 1658, column: 24, scope: !6704)
!6740 = !DILocation(line: 1658, column: 6, scope: !6704)
!6741 = !DILocation(line: 1659, column: 11, scope: !6704)
!6742 = !DILocation(line: 1659, column: 18, scope: !6704)
!6743 = !DILocation(line: 1659, column: 9, scope: !6704)
!6744 = !DILocation(line: 1660, column: 11, scope: !6704)
!6745 = !DILocation(line: 1660, column: 18, scope: !6704)
!6746 = !DILocation(line: 1660, column: 26, scope: !6704)
!6747 = !DILocation(line: 1660, column: 33, scope: !6704)
!6748 = !DILocation(line: 1660, column: 24, scope: !6704)
!6749 = !DILocation(line: 1660, column: 9, scope: !6704)
!6750 = !DILocation(line: 1661, column: 6, scope: !6704)
!6751 = !DILocation(line: 1661, column: 15, scope: !6704)
!6752 = !DILocation(line: 1662, column: 15, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6704, file: !1, line: 1661, column: 19)
!6754 = !DILocation(line: 1662, column: 23, scope: !6753)
!6755 = !DILocation(line: 1662, column: 21, scope: !6753)
!6756 = !DILocation(line: 1662, column: 7, scope: !6753)
!6757 = !DILocation(line: 1662, column: 13, scope: !6753)
!6758 = !DILocation(line: 1663, column: 16, scope: !6753)
!6759 = !DILocation(line: 1663, column: 15, scope: !6753)
!6760 = !DILocation(line: 1663, column: 24, scope: !6753)
!6761 = !DILocation(line: 1663, column: 22, scope: !6753)
!6762 = !DILocation(line: 1663, column: 7, scope: !6753)
!6763 = !DILocation(line: 1663, column: 13, scope: !6753)
!6764 = !DILocation(line: 1664, column: 7, scope: !6753)
!6765 = !DILocation(line: 1664, column: 13, scope: !6753)
!6766 = !DILocation(line: 1665, column: 10, scope: !6753)
!6767 = distinct !{!6767, !6750, !6768}
!6768 = !DILocation(line: 1666, column: 6, scope: !6704)
!6769 = !DILocation(line: 1667, column: 5, scope: !6704)
!6770 = !DILocation(line: 1668, column: 10, scope: !6701)
!6771 = !DILocation(line: 1668, column: 14, scope: !6701)
!6772 = !DILocation(line: 1668, column: 8, scope: !6701)
!6773 = distinct !{!6773, !6697, !6774}
!6774 = !DILocation(line: 1669, column: 4, scope: !6659)
!6775 = !DILocation(line: 1671, column: 4, scope: !6659)
!6776 = !DILocation(line: 1672, column: 3, scope: !6659)
!6777 = !DILocation(line: 1673, column: 2, scope: !6639)
!6778 = !DILocation(line: 1674, column: 11, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6634, file: !1, line: 1674, column: 11)
!6780 = !DILocation(line: 1674, column: 15, scope: !6779)
!6781 = !DILocation(line: 1674, column: 20, scope: !6779)
!6782 = !DILocation(line: 1674, column: 28, scope: !6779)
!6783 = !DILocation(line: 1674, column: 31, scope: !6779)
!6784 = !DILocation(line: 1674, column: 35, scope: !6779)
!6785 = !DILocation(line: 1674, column: 40, scope: !6779)
!6786 = !DILocation(line: 1674, column: 11, scope: !6634)
!6787 = !DILocation(line: 1676, column: 2, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6779, file: !1, line: 1674, column: 49)
!6789 = !DILocation(line: 1677, column: 11, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6779, file: !1, line: 1677, column: 11)
!6791 = !DILocation(line: 1677, column: 15, scope: !6790)
!6792 = !DILocation(line: 1677, column: 20, scope: !6790)
!6793 = !DILocation(line: 1677, column: 11, scope: !6779)
!6794 = !DILocation(line: 1678, column: 8, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6790, file: !1, line: 1677, column: 29)
!6796 = !DILocation(line: 1678, column: 6, scope: !6795)
!6797 = !DILocation(line: 1679, column: 15, scope: !6795)
!6798 = !DILocation(line: 1679, column: 3, scope: !6795)
!6799 = !DILocation(line: 1679, column: 7, scope: !6795)
!6800 = !DILocation(line: 1679, column: 13, scope: !6795)
!6801 = !DILocation(line: 1680, column: 15, scope: !6795)
!6802 = !DILocation(line: 1680, column: 21, scope: !6795)
!6803 = !DILocation(line: 1680, column: 3, scope: !6795)
!6804 = !DILocation(line: 1681, column: 3, scope: !6795)
!6805 = !DILocation(line: 1681, column: 7, scope: !6795)
!6806 = !DILocation(line: 1681, column: 12, scope: !6795)
!6807 = !DILocation(line: 1682, column: 3, scope: !6795)
!6808 = !DILocation(line: 1682, column: 7, scope: !6795)
!6809 = !DILocation(line: 1682, column: 13, scope: !6795)
!6810 = !DILocation(line: 1683, column: 3, scope: !6795)
!6811 = !DILocation(line: 1683, column: 7, scope: !6795)
!6812 = !DILocation(line: 1683, column: 12, scope: !6795)
!6813 = !DILocation(line: 1684, column: 3, scope: !6795)
!6814 = !DILocation(line: 1684, column: 7, scope: !6795)
!6815 = !DILocation(line: 1684, column: 10, scope: !6795)
!6816 = !DILocation(line: 1686, column: 8, scope: !6795)
!6817 = !DILocation(line: 1686, column: 12, scope: !6795)
!6818 = !DILocation(line: 1686, column: 6, scope: !6795)
!6819 = !DILocation(line: 1687, column: 11, scope: !6795)
!6820 = !DILocation(line: 1687, column: 17, scope: !6795)
!6821 = !DILocation(line: 1687, column: 3, scope: !6795)
!6822 = !DILocation(line: 1687, column: 9, scope: !6795)
!6823 = !DILocation(line: 1688, column: 12, scope: !6795)
!6824 = !DILocation(line: 1688, column: 16, scope: !6795)
!6825 = !DILocation(line: 1688, column: 11, scope: !6795)
!6826 = !DILocation(line: 1688, column: 3, scope: !6795)
!6827 = !DILocation(line: 1688, column: 9, scope: !6795)
!6828 = !DILocation(line: 1689, column: 11, scope: !6795)
!6829 = !DILocation(line: 1689, column: 17, scope: !6795)
!6830 = !DILocation(line: 1689, column: 3, scope: !6795)
!6831 = !DILocation(line: 1689, column: 9, scope: !6795)
!6832 = !DILocation(line: 1690, column: 11, scope: !6795)
!6833 = !DILocation(line: 1690, column: 15, scope: !6795)
!6834 = !DILocation(line: 1690, column: 3, scope: !6795)
!6835 = !DILocation(line: 1690, column: 9, scope: !6795)
!6836 = !DILocation(line: 1691, column: 2, scope: !6795)
!6837 = !DILocation(line: 1692, column: 13, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6790, file: !1, line: 1692, column: 12)
!6839 = !DILocation(line: 1692, column: 17, scope: !6838)
!6840 = !DILocation(line: 1692, column: 22, scope: !6838)
!6841 = !DILocation(line: 1692, column: 46, scope: !6838)
!6842 = !DILocation(line: 1692, column: 51, scope: !6838)
!6843 = !DILocation(line: 1692, column: 54, scope: !6838)
!6844 = !DILocation(line: 1692, column: 58, scope: !6838)
!6845 = !DILocation(line: 1692, column: 63, scope: !6838)
!6846 = !DILocation(line: 1692, column: 12, scope: !6790)
!6847 = !DILocation(line: 1693, column: 16, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6838, file: !1, line: 1692, column: 72)
!6849 = !DILocation(line: 1693, column: 20, scope: !6848)
!6850 = !DILocation(line: 1693, column: 14, scope: !6848)
!6851 = !DILocation(line: 1693, column: 10, scope: !6848)
!6852 = !DILocation(line: 1693, column: 6, scope: !6848)
!6853 = !DILocation(line: 1695, column: 8, scope: !6848)
!6854 = !DILocation(line: 1695, column: 6, scope: !6848)
!6855 = !DILocation(line: 1696, column: 15, scope: !6848)
!6856 = !DILocation(line: 1696, column: 27, scope: !6848)
!6857 = !DILocation(line: 1696, column: 30, scope: !6848)
!6858 = !DILocation(line: 1696, column: 3, scope: !6848)
!6859 = !DILocation(line: 1696, column: 7, scope: !6848)
!6860 = !DILocation(line: 1696, column: 13, scope: !6848)
!6861 = !DILocation(line: 1697, column: 15, scope: !6848)
!6862 = !DILocation(line: 1697, column: 21, scope: !6848)
!6863 = !DILocation(line: 1697, column: 3, scope: !6848)
!6864 = !DILocation(line: 1698, column: 3, scope: !6848)
!6865 = !DILocation(line: 1698, column: 7, scope: !6848)
!6866 = !DILocation(line: 1698, column: 12, scope: !6848)
!6867 = !DILocation(line: 1699, column: 3, scope: !6848)
!6868 = !DILocation(line: 1699, column: 7, scope: !6848)
!6869 = !DILocation(line: 1699, column: 13, scope: !6848)
!6870 = !DILocation(line: 1700, column: 3, scope: !6848)
!6871 = !DILocation(line: 1700, column: 7, scope: !6848)
!6872 = !DILocation(line: 1700, column: 12, scope: !6848)
!6873 = !DILocation(line: 1701, column: 12, scope: !6848)
!6874 = !DILocation(line: 1701, column: 3, scope: !6848)
!6875 = !DILocation(line: 1701, column: 7, scope: !6848)
!6876 = !DILocation(line: 1701, column: 10, scope: !6848)
!6877 = !DILocation(line: 1704, column: 8, scope: !6848)
!6878 = !DILocation(line: 1704, column: 12, scope: !6848)
!6879 = !DILocation(line: 1704, column: 6, scope: !6848)
!6880 = !DILocation(line: 1705, column: 35, scope: !6848)
!6881 = !DILocation(line: 1705, column: 34, scope: !6848)
!6882 = !DILocation(line: 1705, column: 32, scope: !6848)
!6883 = !DILocation(line: 1705, column: 10, scope: !6848)
!6884 = !DILocation(line: 1706, column: 13, scope: !6848)
!6885 = !DILocation(line: 1706, column: 16, scope: !6848)
!6886 = !DILocation(line: 1706, column: 11, scope: !6848)
!6887 = !DILocation(line: 1706, column: 23, scope: !6848)
!6888 = !DILocation(line: 1706, column: 21, scope: !6848)
!6889 = !DILocation(line: 1706, column: 9, scope: !6848)
!6890 = !DILocation(line: 1708, column: 10, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6848, file: !1, line: 1708, column: 3)
!6892 = !DILocation(line: 1708, column: 8, scope: !6891)
!6893 = !DILocation(line: 1708, column: 15, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6891, file: !1, line: 1708, column: 3)
!6895 = !DILocation(line: 1708, column: 19, scope: !6894)
!6896 = !DILocation(line: 1708, column: 17, scope: !6894)
!6897 = !DILocation(line: 1708, column: 3, scope: !6891)
!6898 = !DILocation(line: 1709, column: 4, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6894, file: !1, line: 1708, column: 28)
!6900 = !DILocation(line: 1709, column: 10, scope: !6899)
!6901 = !DILocation(line: 1710, column: 18, scope: !6899)
!6902 = !DILocation(line: 1710, column: 13, scope: !6899)
!6903 = !DILocation(line: 1710, column: 28, scope: !6899)
!6904 = !DILocation(line: 1710, column: 32, scope: !6899)
!6905 = !DILocation(line: 1710, column: 25, scope: !6899)
!6906 = !DILocation(line: 1710, column: 4, scope: !6899)
!6907 = !DILocation(line: 1710, column: 10, scope: !6899)
!6908 = !DILocation(line: 1711, column: 18, scope: !6899)
!6909 = !DILocation(line: 1711, column: 13, scope: !6899)
!6910 = !DILocation(line: 1711, column: 28, scope: !6899)
!6911 = !DILocation(line: 1711, column: 32, scope: !6899)
!6912 = !DILocation(line: 1711, column: 25, scope: !6899)
!6913 = !DILocation(line: 1711, column: 41, scope: !6899)
!6914 = !DILocation(line: 1711, column: 45, scope: !6899)
!6915 = !DILocation(line: 1711, column: 39, scope: !6899)
!6916 = !DILocation(line: 1711, column: 4, scope: !6899)
!6917 = !DILocation(line: 1711, column: 10, scope: !6899)
!6918 = !DILocation(line: 1712, column: 13, scope: !6899)
!6919 = !DILocation(line: 1712, column: 10, scope: !6899)
!6920 = !DILocation(line: 1713, column: 7, scope: !6899)
!6921 = !DILocation(line: 1714, column: 3, scope: !6899)
!6922 = !DILocation(line: 1708, column: 24, scope: !6894)
!6923 = !DILocation(line: 1708, column: 3, scope: !6894)
!6924 = distinct !{!6924, !6897, !6925}
!6925 = !DILocation(line: 1714, column: 3, scope: !6891)
!6926 = !DILocation(line: 1715, column: 2, scope: !6848)
!6927 = !DILocalVariable(name: "dnr", scope: !6928, file: !1, line: 1717, type: !77)
!6928 = distinct !DILexicalBlock(scope: !6838, file: !1, line: 1716, column: 7)
!6929 = !DILocation(line: 1717, column: 9, scope: !6928)
!6930 = !DILocation(line: 1722, column: 8, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6928, file: !1, line: 1722, column: 7)
!6932 = !DILocation(line: 1722, column: 12, scope: !6931)
!6933 = !DILocation(line: 1722, column: 17, scope: !6931)
!6934 = !DILocation(line: 1722, column: 28, scope: !6931)
!6935 = !DILocation(line: 1722, column: 33, scope: !6931)
!6936 = !DILocation(line: 1722, column: 37, scope: !6931)
!6937 = !DILocation(line: 1722, column: 42, scope: !6931)
!6938 = !DILocation(line: 1722, column: 7, scope: !6928)
!6939 = !DILocation(line: 1723, column: 19, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6931, file: !1, line: 1722, column: 55)
!6941 = !DILocation(line: 1723, column: 23, scope: !6940)
!6942 = !DILocation(line: 1723, column: 17, scope: !6940)
!6943 = !DILocation(line: 1723, column: 13, scope: !6940)
!6944 = !DILocation(line: 1723, column: 10, scope: !6940)
!6945 = !DILocation(line: 1723, column: 8, scope: !6940)
!6946 = !DILocation(line: 1724, column: 10, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6940, file: !1, line: 1724, column: 9)
!6948 = !DILocation(line: 1724, column: 14, scope: !6947)
!6949 = !DILocation(line: 1724, column: 19, scope: !6947)
!6950 = !DILocation(line: 1724, column: 43, scope: !6947)
!6951 = !DILocation(line: 1724, column: 9, scope: !6940)
!6952 = !DILocation(line: 1725, column: 18, scope: !6947)
!6953 = !DILocation(line: 1725, column: 22, scope: !6947)
!6954 = !DILocation(line: 1725, column: 16, scope: !6947)
!6955 = !DILocation(line: 1725, column: 12, scope: !6947)
!6956 = !DILocation(line: 1725, column: 8, scope: !6947)
!6957 = !DILocation(line: 1725, column: 5, scope: !6947)
!6958 = !DILocation(line: 1727, column: 9, scope: !6940)
!6959 = !DILocation(line: 1727, column: 7, scope: !6940)
!6960 = !DILocation(line: 1728, column: 16, scope: !6940)
!6961 = !DILocation(line: 1728, column: 28, scope: !6940)
!6962 = !DILocation(line: 1728, column: 31, scope: !6940)
!6963 = !DILocation(line: 1728, column: 4, scope: !6940)
!6964 = !DILocation(line: 1728, column: 8, scope: !6940)
!6965 = !DILocation(line: 1728, column: 14, scope: !6940)
!6966 = !DILocation(line: 1729, column: 16, scope: !6940)
!6967 = !DILocation(line: 1729, column: 22, scope: !6940)
!6968 = !DILocation(line: 1729, column: 4, scope: !6940)
!6969 = !DILocation(line: 1730, column: 4, scope: !6940)
!6970 = !DILocation(line: 1730, column: 8, scope: !6940)
!6971 = !DILocation(line: 1730, column: 13, scope: !6940)
!6972 = !DILocation(line: 1731, column: 4, scope: !6940)
!6973 = !DILocation(line: 1731, column: 8, scope: !6940)
!6974 = !DILocation(line: 1731, column: 14, scope: !6940)
!6975 = !DILocation(line: 1732, column: 4, scope: !6940)
!6976 = !DILocation(line: 1732, column: 8, scope: !6940)
!6977 = !DILocation(line: 1732, column: 13, scope: !6940)
!6978 = !DILocation(line: 1733, column: 13, scope: !6940)
!6979 = !DILocation(line: 1733, column: 4, scope: !6940)
!6980 = !DILocation(line: 1733, column: 8, scope: !6940)
!6981 = !DILocation(line: 1733, column: 11, scope: !6940)
!6982 = !DILocation(line: 1736, column: 9, scope: !6940)
!6983 = !DILocation(line: 1736, column: 13, scope: !6940)
!6984 = !DILocation(line: 1736, column: 7, scope: !6940)
!6985 = !DILocation(line: 1737, column: 28, scope: !6940)
!6986 = !DILocation(line: 1737, column: 32, scope: !6940)
!6987 = !DILocation(line: 1737, column: 27, scope: !6940)
!6988 = !DILocation(line: 1737, column: 25, scope: !6940)
!6989 = !DILocation(line: 1737, column: 13, scope: !6940)
!6990 = !DILocation(line: 1737, column: 11, scope: !6940)
!6991 = !DILocation(line: 1738, column: 14, scope: !6940)
!6992 = !DILocation(line: 1738, column: 17, scope: !6940)
!6993 = !DILocation(line: 1738, column: 12, scope: !6940)
!6994 = !DILocation(line: 1738, column: 24, scope: !6940)
!6995 = !DILocation(line: 1738, column: 22, scope: !6940)
!6996 = !DILocation(line: 1738, column: 10, scope: !6940)
!6997 = !DILocation(line: 1740, column: 11, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6940, file: !1, line: 1740, column: 4)
!6999 = !DILocation(line: 1740, column: 9, scope: !6998)
!7000 = !DILocation(line: 1740, column: 16, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6998, file: !1, line: 1740, column: 4)
!7002 = !DILocation(line: 1740, column: 20, scope: !7001)
!7003 = !DILocation(line: 1740, column: 18, scope: !7001)
!7004 = !DILocation(line: 1740, column: 4, scope: !6998)
!7005 = !DILocation(line: 1741, column: 5, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !7001, file: !1, line: 1740, column: 29)
!7007 = !DILocation(line: 1741, column: 11, scope: !7006)
!7008 = !DILocation(line: 1742, column: 26, scope: !7006)
!7009 = !DILocation(line: 1742, column: 21, scope: !7006)
!7010 = !DILocation(line: 1742, column: 36, scope: !7006)
!7011 = !DILocation(line: 1742, column: 40, scope: !7006)
!7012 = !DILocation(line: 1742, column: 33, scope: !7006)
!7013 = !DILocation(line: 1742, column: 5, scope: !7006)
!7014 = !DILocation(line: 1742, column: 11, scope: !7006)
!7015 = !DILocation(line: 1743, column: 26, scope: !7006)
!7016 = !DILocation(line: 1743, column: 21, scope: !7006)
!7017 = !DILocation(line: 1743, column: 36, scope: !7006)
!7018 = !DILocation(line: 1743, column: 40, scope: !7006)
!7019 = !DILocation(line: 1743, column: 33, scope: !7006)
!7020 = !DILocation(line: 1743, column: 49, scope: !7006)
!7021 = !DILocation(line: 1743, column: 53, scope: !7006)
!7022 = !DILocation(line: 1743, column: 47, scope: !7006)
!7023 = !DILocation(line: 1743, column: 5, scope: !7006)
!7024 = !DILocation(line: 1743, column: 11, scope: !7006)
!7025 = !DILocation(line: 1744, column: 14, scope: !7006)
!7026 = !DILocation(line: 1744, column: 11, scope: !7006)
!7027 = !DILocation(line: 1745, column: 8, scope: !7006)
!7028 = !DILocation(line: 1746, column: 4, scope: !7006)
!7029 = !DILocation(line: 1740, column: 25, scope: !7001)
!7030 = !DILocation(line: 1740, column: 4, scope: !7001)
!7031 = distinct !{!7031, !7004, !7032}
!7032 = !DILocation(line: 1746, column: 4, scope: !6998)
!7033 = !DILocation(line: 1747, column: 3, scope: !6940)
!7034 = !DILocation(line: 1750, column: 7, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !6928, file: !1, line: 1750, column: 7)
!7036 = !DILocation(line: 1750, column: 11, scope: !7035)
!7037 = !DILocation(line: 1750, column: 16, scope: !7035)
!7038 = !DILocation(line: 1750, column: 7, scope: !6928)
!7039 = !DILocation(line: 1751, column: 7, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7035, file: !1, line: 1750, column: 25)
!7041 = !DILocation(line: 1753, column: 9, scope: !7040)
!7042 = !DILocation(line: 1753, column: 7, scope: !7040)
!7043 = !DILocation(line: 1754, column: 16, scope: !7040)
!7044 = !DILocation(line: 1754, column: 28, scope: !7040)
!7045 = !DILocation(line: 1754, column: 31, scope: !7040)
!7046 = !DILocation(line: 1754, column: 4, scope: !7040)
!7047 = !DILocation(line: 1754, column: 8, scope: !7040)
!7048 = !DILocation(line: 1754, column: 14, scope: !7040)
!7049 = !DILocation(line: 1755, column: 16, scope: !7040)
!7050 = !DILocation(line: 1755, column: 22, scope: !7040)
!7051 = !DILocation(line: 1755, column: 4, scope: !7040)
!7052 = !DILocation(line: 1756, column: 4, scope: !7040)
!7053 = !DILocation(line: 1756, column: 8, scope: !7040)
!7054 = !DILocation(line: 1756, column: 13, scope: !7040)
!7055 = !DILocation(line: 1757, column: 4, scope: !7040)
!7056 = !DILocation(line: 1757, column: 8, scope: !7040)
!7057 = !DILocation(line: 1757, column: 14, scope: !7040)
!7058 = !DILocation(line: 1758, column: 13, scope: !7040)
!7059 = !DILocation(line: 1758, column: 4, scope: !7040)
!7060 = !DILocation(line: 1758, column: 8, scope: !7040)
!7061 = !DILocation(line: 1758, column: 11, scope: !7040)
!7062 = !DILocation(line: 1760, column: 9, scope: !7040)
!7063 = !DILocation(line: 1760, column: 13, scope: !7040)
!7064 = !DILocation(line: 1760, column: 7, scope: !7040)
!7065 = !DILocation(line: 1761, column: 12, scope: !7040)
!7066 = !DILocation(line: 1761, column: 16, scope: !7040)
!7067 = !DILocation(line: 1761, column: 4, scope: !7040)
!7068 = !DILocation(line: 1761, column: 10, scope: !7040)
!7069 = !DILocation(line: 1762, column: 13, scope: !7040)
!7070 = !DILocation(line: 1762, column: 17, scope: !7040)
!7071 = !DILocation(line: 1762, column: 12, scope: !7040)
!7072 = !DILocation(line: 1762, column: 4, scope: !7040)
!7073 = !DILocation(line: 1762, column: 10, scope: !7040)
!7074 = !DILocation(line: 1763, column: 12, scope: !7040)
!7075 = !DILocation(line: 1763, column: 16, scope: !7040)
!7076 = !DILocation(line: 1763, column: 4, scope: !7040)
!7077 = !DILocation(line: 1763, column: 10, scope: !7040)
!7078 = !DILocation(line: 1764, column: 12, scope: !7040)
!7079 = !DILocation(line: 1764, column: 16, scope: !7040)
!7080 = !DILocation(line: 1764, column: 4, scope: !7040)
!7081 = !DILocation(line: 1764, column: 10, scope: !7040)
!7082 = !DILocation(line: 1766, column: 10, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7040, file: !1, line: 1766, column: 9)
!7084 = !DILocation(line: 1766, column: 14, scope: !7083)
!7085 = !DILocation(line: 1766, column: 19, scope: !7083)
!7086 = !DILocation(line: 1766, column: 43, scope: !7083)
!7087 = !DILocation(line: 1766, column: 9, scope: !7040)
!7088 = !DILocation(line: 1767, column: 10, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7083, file: !1, line: 1766, column: 49)
!7090 = !DILocation(line: 1767, column: 24, scope: !7089)
!7091 = !DILocation(line: 1767, column: 8, scope: !7089)
!7092 = !DILocation(line: 1768, column: 17, scope: !7089)
!7093 = !DILocation(line: 1768, column: 31, scope: !7089)
!7094 = !DILocation(line: 1768, column: 35, scope: !7089)
!7095 = !DILocation(line: 1768, column: 5, scope: !7089)
!7096 = !DILocation(line: 1768, column: 9, scope: !7089)
!7097 = !DILocation(line: 1768, column: 15, scope: !7089)
!7098 = !DILocation(line: 1769, column: 17, scope: !7089)
!7099 = !DILocation(line: 1769, column: 23, scope: !7089)
!7100 = !DILocation(line: 1769, column: 5, scope: !7089)
!7101 = !DILocation(line: 1771, column: 10, scope: !7089)
!7102 = !DILocation(line: 1771, column: 14, scope: !7089)
!7103 = !DILocation(line: 1771, column: 8, scope: !7089)
!7104 = !DILocation(line: 1772, column: 14, scope: !7089)
!7105 = !DILocation(line: 1772, column: 13, scope: !7089)
!7106 = !DILocation(line: 1772, column: 5, scope: !7089)
!7107 = !DILocation(line: 1772, column: 11, scope: !7089)
!7108 = !DILocation(line: 1773, column: 14, scope: !7089)
!7109 = !DILocation(line: 1773, column: 13, scope: !7089)
!7110 = !DILocation(line: 1773, column: 5, scope: !7089)
!7111 = !DILocation(line: 1773, column: 11, scope: !7089)
!7112 = !DILocation(line: 1774, column: 14, scope: !7089)
!7113 = !DILocation(line: 1774, column: 13, scope: !7089)
!7114 = !DILocation(line: 1774, column: 5, scope: !7089)
!7115 = !DILocation(line: 1774, column: 11, scope: !7089)
!7116 = !DILocation(line: 1775, column: 14, scope: !7089)
!7117 = !DILocation(line: 1775, column: 13, scope: !7089)
!7118 = !DILocation(line: 1775, column: 5, scope: !7089)
!7119 = !DILocation(line: 1775, column: 11, scope: !7089)
!7120 = !DILocation(line: 1776, column: 4, scope: !7089)
!7121 = !DILocation(line: 1777, column: 3, scope: !7040)
!7122 = !DILocation(line: 1780, column: 8, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !6928, file: !1, line: 1780, column: 7)
!7124 = !DILocation(line: 1780, column: 12, scope: !7123)
!7125 = !DILocation(line: 1780, column: 17, scope: !7123)
!7126 = !DILocation(line: 1780, column: 29, scope: !7123)
!7127 = !DILocation(line: 1780, column: 34, scope: !7123)
!7128 = !DILocation(line: 1780, column: 38, scope: !7123)
!7129 = !DILocation(line: 1780, column: 43, scope: !7123)
!7130 = !DILocation(line: 1780, column: 7, scope: !6928)
!7131 = !DILocation(line: 1781, column: 19, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7123, file: !1, line: 1780, column: 55)
!7133 = !DILocation(line: 1781, column: 23, scope: !7132)
!7134 = !DILocation(line: 1781, column: 17, scope: !7132)
!7135 = !DILocation(line: 1781, column: 13, scope: !7132)
!7136 = !DILocation(line: 1781, column: 10, scope: !7132)
!7137 = !DILocation(line: 1781, column: 8, scope: !7132)
!7138 = !DILocation(line: 1782, column: 10, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7132, file: !1, line: 1782, column: 9)
!7140 = !DILocation(line: 1782, column: 14, scope: !7139)
!7141 = !DILocation(line: 1782, column: 19, scope: !7139)
!7142 = !DILocation(line: 1782, column: 43, scope: !7139)
!7143 = !DILocation(line: 1782, column: 9, scope: !7132)
!7144 = !DILocation(line: 1783, column: 18, scope: !7139)
!7145 = !DILocation(line: 1783, column: 22, scope: !7139)
!7146 = !DILocation(line: 1783, column: 16, scope: !7139)
!7147 = !DILocation(line: 1783, column: 12, scope: !7139)
!7148 = !DILocation(line: 1783, column: 8, scope: !7139)
!7149 = !DILocation(line: 1783, column: 5, scope: !7139)
!7150 = !DILocation(line: 1785, column: 9, scope: !7132)
!7151 = !DILocation(line: 1785, column: 7, scope: !7132)
!7152 = !DILocation(line: 1786, column: 16, scope: !7132)
!7153 = !DILocation(line: 1786, column: 28, scope: !7132)
!7154 = !DILocation(line: 1786, column: 31, scope: !7132)
!7155 = !DILocation(line: 1786, column: 4, scope: !7132)
!7156 = !DILocation(line: 1786, column: 8, scope: !7132)
!7157 = !DILocation(line: 1786, column: 14, scope: !7132)
!7158 = !DILocation(line: 1787, column: 16, scope: !7132)
!7159 = !DILocation(line: 1787, column: 22, scope: !7132)
!7160 = !DILocation(line: 1787, column: 4, scope: !7132)
!7161 = !DILocation(line: 1788, column: 4, scope: !7132)
!7162 = !DILocation(line: 1788, column: 8, scope: !7132)
!7163 = !DILocation(line: 1788, column: 13, scope: !7132)
!7164 = !DILocation(line: 1789, column: 4, scope: !7132)
!7165 = !DILocation(line: 1789, column: 8, scope: !7132)
!7166 = !DILocation(line: 1789, column: 13, scope: !7132)
!7167 = !DILocation(line: 1790, column: 4, scope: !7132)
!7168 = !DILocation(line: 1790, column: 8, scope: !7132)
!7169 = !DILocation(line: 1790, column: 14, scope: !7132)
!7170 = !DILocation(line: 1791, column: 13, scope: !7132)
!7171 = !DILocation(line: 1791, column: 4, scope: !7132)
!7172 = !DILocation(line: 1791, column: 8, scope: !7132)
!7173 = !DILocation(line: 1791, column: 11, scope: !7132)
!7174 = !DILocation(line: 1794, column: 9, scope: !7132)
!7175 = !DILocation(line: 1794, column: 13, scope: !7132)
!7176 = !DILocation(line: 1794, column: 7, scope: !7132)
!7177 = !DILocation(line: 1795, column: 10, scope: !7132)
!7178 = !DILocation(line: 1796, column: 28, scope: !7132)
!7179 = !DILocation(line: 1796, column: 32, scope: !7132)
!7180 = !DILocation(line: 1796, column: 27, scope: !7132)
!7181 = !DILocation(line: 1796, column: 25, scope: !7132)
!7182 = !DILocation(line: 1796, column: 13, scope: !7132)
!7183 = !DILocation(line: 1796, column: 11, scope: !7132)
!7184 = !DILocation(line: 1798, column: 11, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7132, file: !1, line: 1798, column: 4)
!7186 = !DILocation(line: 1798, column: 9, scope: !7185)
!7187 = !DILocation(line: 1798, column: 16, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7185, file: !1, line: 1798, column: 4)
!7189 = !DILocation(line: 1798, column: 20, scope: !7188)
!7190 = !DILocation(line: 1798, column: 18, scope: !7188)
!7191 = !DILocation(line: 1798, column: 4, scope: !7185)
!7192 = !DILocation(line: 1799, column: 5, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7188, file: !1, line: 1798, column: 29)
!7194 = !DILocation(line: 1799, column: 11, scope: !7193)
!7195 = !DILocation(line: 1800, column: 26, scope: !7193)
!7196 = !DILocation(line: 1800, column: 21, scope: !7193)
!7197 = !DILocation(line: 1800, column: 36, scope: !7193)
!7198 = !DILocation(line: 1800, column: 40, scope: !7193)
!7199 = !DILocation(line: 1800, column: 33, scope: !7193)
!7200 = !DILocation(line: 1800, column: 5, scope: !7193)
!7201 = !DILocation(line: 1800, column: 11, scope: !7193)
!7202 = !DILocation(line: 1801, column: 26, scope: !7193)
!7203 = !DILocation(line: 1801, column: 21, scope: !7193)
!7204 = !DILocation(line: 1801, column: 36, scope: !7193)
!7205 = !DILocation(line: 1801, column: 40, scope: !7193)
!7206 = !DILocation(line: 1801, column: 33, scope: !7193)
!7207 = !DILocation(line: 1801, column: 49, scope: !7193)
!7208 = !DILocation(line: 1801, column: 53, scope: !7193)
!7209 = !DILocation(line: 1801, column: 47, scope: !7193)
!7210 = !DILocation(line: 1801, column: 5, scope: !7193)
!7211 = !DILocation(line: 1801, column: 11, scope: !7193)
!7212 = !DILocation(line: 1802, column: 14, scope: !7193)
!7213 = !DILocation(line: 1802, column: 11, scope: !7193)
!7214 = !DILocation(line: 1803, column: 8, scope: !7193)
!7215 = !DILocation(line: 1804, column: 4, scope: !7193)
!7216 = !DILocation(line: 1798, column: 25, scope: !7188)
!7217 = !DILocation(line: 1798, column: 4, scope: !7188)
!7218 = distinct !{!7218, !7191, !7219}
!7219 = !DILocation(line: 1804, column: 4, scope: !7185)
!7220 = !DILocation(line: 1805, column: 3, scope: !7132)
!7221 = !DILocation(line: 1807, column: 1, scope: !6592)
!7222 = distinct !DISubprogram(name: "BKE_curve_bevelList_free", scope: !1, file: !1, line: 2503, type: !2044, scopeLine: 2504, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!7223 = !DILocalVariable(name: "bev", arg: 1, scope: !7222, file: !1, line: 2503, type: !1602)
!7224 = !DILocation(line: 2503, column: 41, scope: !7222)
!7225 = !DILocalVariable(name: "bl", scope: !7222, file: !1, line: 2505, type: !7226)
!7226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7227, size: 64)
!7227 = !DIDerivedType(tag: DW_TAG_typedef, name: "BevList", file: !19, line: 98, baseType: !7228)
!7228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BevList", file: !19, line: 84, size: 448, elements: !7229)
!7229 = !{!7230, !7232, !7233, !7234, !7235, !7236, !7237, !7238, !7239, !7240}
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7228, file: !19, line: 85, baseType: !7231, size: 64)
!7231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7228, size: 64)
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7228, file: !19, line: 85, baseType: !7231, size: 64, offset: 64)
!7233 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !7228, file: !19, line: 86, baseType: !79, size: 32, offset: 128)
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "dupe_nr", scope: !7228, file: !19, line: 86, baseType: !79, size: 32, offset: 160)
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "poly", scope: !7228, file: !19, line: 87, baseType: !79, size: 32, offset: 192)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "hole", scope: !7228, file: !19, line: 87, baseType: !79, size: 32, offset: 224)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "charidx", scope: !7228, file: !19, line: 88, baseType: !79, size: 32, offset: 256)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "segbevcount", scope: !7228, file: !19, line: 89, baseType: !1840, size: 64, offset: 320)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "seglen", scope: !7228, file: !19, line: 90, baseType: !1325, size: 64, offset: 384)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "bevpoints", scope: !7228, file: !19, line: 96, baseType: !7241, offset: 448)
!7241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7242, elements: !7257)
!7242 = !DIDerivedType(tag: DW_TAG_typedef, name: "BevPoint", file: !19, line: 79, baseType: !7243)
!7243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BevPoint", file: !19, line: 74, size: 640, elements: !7244)
!7244 = !{!7245, !7246, !7247, !7248, !7249, !7250, !7251, !7252, !7253, !7254, !7255, !7256}
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !7243, file: !19, line: 75, baseType: !201, size: 96)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !7243, file: !19, line: 75, baseType: !128, size: 32, offset: 96)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !7243, file: !19, line: 75, baseType: !128, size: 32, offset: 128)
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !7243, file: !19, line: 75, baseType: !128, size: 32, offset: 160)
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !7243, file: !19, line: 75, baseType: !128, size: 32, offset: 192)
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "sina", scope: !7243, file: !19, line: 76, baseType: !128, size: 32, offset: 224)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "cosa", scope: !7243, file: !19, line: 76, baseType: !128, size: 32, offset: 256)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !7243, file: !19, line: 77, baseType: !201, size: 96, offset: 288)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "tan", scope: !7243, file: !19, line: 77, baseType: !201, size: 96, offset: 384)
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !7243, file: !19, line: 77, baseType: !378, size: 128, offset: 480)
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "split_tag", scope: !7243, file: !19, line: 78, baseType: !77, size: 16, offset: 608)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "dupe_tag", scope: !7243, file: !19, line: 78, baseType: !77, size: 16, offset: 624)
!7257 = !{!7258}
!7258 = !DISubrange(count: -1)
!7259 = !DILocation(line: 2505, column: 11, scope: !7222)
!7260 = !DILocalVariable(name: "blnext", scope: !7222, file: !1, line: 2505, type: !7226)
!7261 = !DILocation(line: 2505, column: 16, scope: !7222)
!7262 = !DILocation(line: 2506, column: 12, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !7222, file: !1, line: 2506, column: 2)
!7264 = !DILocation(line: 2506, column: 17, scope: !7263)
!7265 = !DILocation(line: 2506, column: 10, scope: !7263)
!7266 = !DILocation(line: 2506, column: 7, scope: !7263)
!7267 = !DILocation(line: 2506, column: 24, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7263, file: !1, line: 2506, column: 2)
!7269 = !DILocation(line: 2506, column: 27, scope: !7268)
!7270 = !DILocation(line: 2506, column: 2, scope: !7263)
!7271 = !DILocation(line: 2507, column: 12, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7268, file: !1, line: 2506, column: 49)
!7273 = !DILocation(line: 2507, column: 16, scope: !7272)
!7274 = !DILocation(line: 2507, column: 10, scope: !7272)
!7275 = !DILocation(line: 2508, column: 7, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7272, file: !1, line: 2508, column: 7)
!7277 = !DILocation(line: 2508, column: 11, scope: !7276)
!7278 = !DILocation(line: 2508, column: 18, scope: !7276)
!7279 = !DILocation(line: 2508, column: 7, scope: !7272)
!7280 = !DILocation(line: 2509, column: 4, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7276, file: !1, line: 2508, column: 27)
!7282 = !DILocation(line: 2509, column: 14, scope: !7281)
!7283 = !DILocation(line: 2509, column: 18, scope: !7281)
!7284 = !DILocation(line: 2510, column: 3, scope: !7281)
!7285 = !DILocation(line: 2511, column: 7, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7272, file: !1, line: 2511, column: 7)
!7287 = !DILocation(line: 2511, column: 11, scope: !7286)
!7288 = !DILocation(line: 2511, column: 23, scope: !7286)
!7289 = !DILocation(line: 2511, column: 7, scope: !7272)
!7290 = !DILocation(line: 2512, column: 4, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7286, file: !1, line: 2511, column: 32)
!7292 = !DILocation(line: 2512, column: 14, scope: !7291)
!7293 = !DILocation(line: 2512, column: 18, scope: !7291)
!7294 = !DILocation(line: 2513, column: 3, scope: !7291)
!7295 = !DILocation(line: 2514, column: 3, scope: !7272)
!7296 = !DILocation(line: 2514, column: 13, scope: !7272)
!7297 = !DILocation(line: 2515, column: 2, scope: !7272)
!7298 = !DILocation(line: 2506, column: 41, scope: !7268)
!7299 = !DILocation(line: 2506, column: 39, scope: !7268)
!7300 = !DILocation(line: 2506, column: 2, scope: !7268)
!7301 = distinct !{!7301, !7270, !7302}
!7302 = !DILocation(line: 2515, column: 2, scope: !7263)
!7303 = !DILocation(line: 2516, column: 15, scope: !7222)
!7304 = !DILocation(line: 2516, column: 20, scope: !7222)
!7305 = !DILocation(line: 2516, column: 25, scope: !7222)
!7306 = !DILocation(line: 2516, column: 2, scope: !7222)
!7307 = !DILocation(line: 2516, column: 7, scope: !7222)
!7308 = !DILocation(line: 2516, column: 13, scope: !7222)
!7309 = !DILocation(line: 2517, column: 1, scope: !7222)
!7310 = distinct !DISubprogram(name: "BKE_curve_bevelList_make", scope: !1, file: !1, line: 2519, type: !7311, scopeLine: 2520, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!7311 = !DISubroutineType(types: !7312)
!7312 = !{null, !2521, !1602, !551}
!7313 = !DILocalVariable(name: "ob", arg: 1, scope: !7310, file: !1, line: 2519, type: !2521)
!7314 = !DILocation(line: 2519, column: 39, scope: !7310)
!7315 = !DILocalVariable(name: "nurbs", arg: 2, scope: !7310, file: !1, line: 2519, type: !1602)
!7316 = !DILocation(line: 2519, column: 53, scope: !7310)
!7317 = !DILocalVariable(name: "for_render", arg: 3, scope: !7310, file: !1, line: 2519, type: !551)
!7318 = !DILocation(line: 2519, column: 65, scope: !7310)
!7319 = !DILocalVariable(name: "cu", scope: !7310, file: !1, line: 2529, type: !114)
!7320 = !DILocation(line: 2529, column: 9, scope: !7310)
!7321 = !DILocation(line: 2529, column: 14, scope: !7310)
!7322 = !DILocation(line: 2529, column: 18, scope: !7310)
!7323 = !DILocalVariable(name: "nu", scope: !7310, file: !1, line: 2530, type: !1782)
!7324 = !DILocation(line: 2530, column: 8, scope: !7310)
!7325 = !DILocalVariable(name: "bezt", scope: !7310, file: !1, line: 2531, type: !1817)
!7326 = !DILocation(line: 2531, column: 13, scope: !7310)
!7327 = !DILocalVariable(name: "prevbezt", scope: !7310, file: !1, line: 2531, type: !1817)
!7328 = !DILocation(line: 2531, column: 20, scope: !7310)
!7329 = !DILocalVariable(name: "bp", scope: !7310, file: !1, line: 2532, type: !1805)
!7330 = !DILocation(line: 2532, column: 10, scope: !7310)
!7331 = !DILocalVariable(name: "bl", scope: !7310, file: !1, line: 2533, type: !7226)
!7332 = !DILocation(line: 2533, column: 11, scope: !7310)
!7333 = !DILocalVariable(name: "blnew", scope: !7310, file: !1, line: 2533, type: !7226)
!7334 = !DILocation(line: 2533, column: 16, scope: !7310)
!7335 = !DILocalVariable(name: "blnext", scope: !7310, file: !1, line: 2533, type: !7226)
!7336 = !DILocation(line: 2533, column: 24, scope: !7310)
!7337 = !DILocalVariable(name: "bevp", scope: !7310, file: !1, line: 2534, type: !7338)
!7338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7242, size: 64)
!7339 = !DILocation(line: 2534, column: 12, scope: !7310)
!7340 = !DILocalVariable(name: "bevp2", scope: !7310, file: !1, line: 2534, type: !7338)
!7341 = !DILocation(line: 2534, column: 19, scope: !7310)
!7342 = !DILocalVariable(name: "bevp1", scope: !7310, file: !1, line: 2534, type: !7338)
!7343 = !DILocation(line: 2534, column: 27, scope: !7310)
!7344 = !DILocalVariable(name: "bevp0", scope: !7310, file: !1, line: 2534, type: !7338)
!7345 = !DILocation(line: 2534, column: 42, scope: !7310)
!7346 = !DILocalVariable(name: "treshold", scope: !7310, file: !1, line: 2535, type: !3192)
!7347 = !DILocation(line: 2535, column: 14, scope: !7310)
!7348 = !DILocalVariable(name: "min", scope: !7310, file: !1, line: 2536, type: !128)
!7349 = !DILocation(line: 2536, column: 8, scope: !7310)
!7350 = !DILocalVariable(name: "inp", scope: !7310, file: !1, line: 2536, type: !128)
!7351 = !DILocation(line: 2536, column: 13, scope: !7310)
!7352 = !DILocalVariable(name: "seglen", scope: !7310, file: !1, line: 2537, type: !1325)
!7353 = !DILocation(line: 2537, column: 9, scope: !7310)
!7354 = !DILocalVariable(name: "sortdata", scope: !7310, file: !1, line: 2538, type: !7355)
!7355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7356, size: 64)
!7356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BevelSort", file: !1, line: 1900, size: 128, elements: !7357)
!7357 = !{!7358, !7359, !7360}
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "bl", scope: !7356, file: !1, line: 1901, baseType: !7226, size: 64)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !7356, file: !1, line: 1902, baseType: !128, size: 32, offset: 64)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !7356, file: !1, line: 1903, baseType: !79, size: 32, offset: 96)
!7361 = !DILocation(line: 2538, column: 20, scope: !7310)
!7362 = !DILocalVariable(name: "sd", scope: !7310, file: !1, line: 2538, type: !7355)
!7363 = !DILocation(line: 2538, column: 31, scope: !7310)
!7364 = !DILocalVariable(name: "sd1", scope: !7310, file: !1, line: 2538, type: !7355)
!7365 = !DILocation(line: 2538, column: 36, scope: !7310)
!7366 = !DILocalVariable(name: "a", scope: !7310, file: !1, line: 2539, type: !79)
!7367 = !DILocation(line: 2539, column: 6, scope: !7310)
!7368 = !DILocalVariable(name: "b", scope: !7310, file: !1, line: 2539, type: !79)
!7369 = !DILocation(line: 2539, column: 9, scope: !7310)
!7370 = !DILocalVariable(name: "nr", scope: !7310, file: !1, line: 2539, type: !79)
!7371 = !DILocation(line: 2539, column: 12, scope: !7310)
!7372 = !DILocalVariable(name: "poly", scope: !7310, file: !1, line: 2539, type: !79)
!7373 = !DILocation(line: 2539, column: 16, scope: !7310)
!7374 = !DILocalVariable(name: "resolu", scope: !7310, file: !1, line: 2539, type: !79)
!7375 = !DILocation(line: 2539, column: 22, scope: !7310)
!7376 = !DILocalVariable(name: "len", scope: !7310, file: !1, line: 2539, type: !79)
!7377 = !DILocation(line: 2539, column: 34, scope: !7310)
!7378 = !DILocalVariable(name: "segcount", scope: !7310, file: !1, line: 2539, type: !79)
!7379 = !DILocation(line: 2539, column: 43, scope: !7310)
!7380 = !DILocalVariable(name: "segbevcount", scope: !7310, file: !1, line: 2540, type: !1840)
!7381 = !DILocation(line: 2540, column: 7, scope: !7310)
!7382 = !DILocalVariable(name: "do_tilt", scope: !7310, file: !1, line: 2541, type: !551)
!7383 = !DILocation(line: 2541, column: 7, scope: !7310)
!7384 = !DILocalVariable(name: "do_radius", scope: !7310, file: !1, line: 2541, type: !551)
!7385 = !DILocation(line: 2541, column: 16, scope: !7310)
!7386 = !DILocalVariable(name: "do_weight", scope: !7310, file: !1, line: 2541, type: !551)
!7387 = !DILocation(line: 2541, column: 27, scope: !7310)
!7388 = !DILocalVariable(name: "is_editmode", scope: !7310, file: !1, line: 2542, type: !551)
!7389 = !DILocation(line: 2542, column: 7, scope: !7310)
!7390 = !DILocalVariable(name: "bev", scope: !7310, file: !1, line: 2543, type: !1602)
!7391 = !DILocation(line: 2543, column: 12, scope: !7310)
!7392 = !DILocalVariable(name: "need_seglen", scope: !7310, file: !1, line: 2546, type: !6595)
!7393 = !DILocation(line: 2546, column: 13, scope: !7310)
!7394 = !DILocation(line: 2547, column: 3, scope: !7310)
!7395 = !DILocation(line: 2547, column: 74, scope: !7310)
!7396 = !DILocation(line: 2548, column: 3, scope: !7310)
!7397 = !DILocation(line: 2551, column: 9, scope: !7310)
!7398 = !DILocation(line: 2551, column: 13, scope: !7310)
!7399 = !DILocation(line: 2551, column: 26, scope: !7310)
!7400 = !DILocation(line: 2551, column: 6, scope: !7310)
!7401 = !DILocation(line: 2558, column: 28, scope: !7310)
!7402 = !DILocation(line: 2558, column: 32, scope: !7310)
!7403 = !DILocation(line: 2558, column: 45, scope: !7310)
!7404 = !DILocation(line: 2558, column: 2, scope: !7310)
!7405 = !DILocation(line: 2559, column: 7, scope: !7310)
!7406 = !DILocation(line: 2559, column: 14, scope: !7310)
!7407 = !DILocation(line: 2559, column: 5, scope: !7310)
!7408 = !DILocation(line: 2560, column: 6, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7310, file: !1, line: 2560, column: 6)
!7410 = !DILocation(line: 2560, column: 10, scope: !7409)
!7411 = !DILocation(line: 2560, column: 19, scope: !7409)
!7412 = !DILocation(line: 2560, column: 22, scope: !7409)
!7413 = !DILocation(line: 2560, column: 26, scope: !7409)
!7414 = !DILocation(line: 2560, column: 31, scope: !7409)
!7415 = !DILocation(line: 2560, column: 6, scope: !7310)
!7416 = !DILocation(line: 2561, column: 15, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7409, file: !1, line: 2560, column: 43)
!7418 = !DILocation(line: 2562, column: 2, scope: !7417)
!7419 = !DILocation(line: 2564, column: 2, scope: !7310)
!7420 = !DILocation(line: 2564, column: 9, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7422, file: !1, line: 2564, column: 2)
!7422 = distinct !DILexicalBlock(scope: !7310, file: !1, line: 2564, column: 2)
!7423 = !DILocation(line: 2564, column: 2, scope: !7422)
!7424 = !DILocation(line: 2566, column: 7, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7426, file: !1, line: 2566, column: 7)
!7426 = distinct !DILexicalBlock(scope: !7421, file: !1, line: 2564, column: 28)
!7427 = !DILocation(line: 2566, column: 11, scope: !7425)
!7428 = !DILocation(line: 2566, column: 16, scope: !7425)
!7429 = !DILocation(line: 2566, column: 19, scope: !7425)
!7430 = !DILocation(line: 2566, column: 7, scope: !7426)
!7431 = !DILocation(line: 2567, column: 4, scope: !7425)
!7432 = !DILocation(line: 2570, column: 13, scope: !7426)
!7433 = !DILocation(line: 0, scope: !7426)
!7434 = !DILocation(line: 2570, column: 11, scope: !7426)
!7435 = !DILocation(line: 2571, column: 15, scope: !7426)
!7436 = !DILocation(line: 2571, column: 13, scope: !7426)
!7437 = !DILocation(line: 2572, column: 13, scope: !7426)
!7438 = !DILocation(line: 2576, column: 31, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7426, file: !1, line: 2576, column: 7)
!7440 = !DILocation(line: 2576, column: 8, scope: !7439)
!7441 = !DILocation(line: 2576, column: 7, scope: !7426)
!7442 = !DILocation(line: 2577, column: 9, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7439, file: !1, line: 2576, column: 36)
!7444 = !DILocation(line: 2577, column: 7, scope: !7443)
!7445 = !DILocation(line: 2578, column: 16, scope: !7443)
!7446 = !DILocation(line: 2578, column: 21, scope: !7443)
!7447 = !DILocation(line: 2578, column: 4, scope: !7443)
!7448 = !DILocation(line: 2579, column: 4, scope: !7443)
!7449 = !DILocation(line: 2579, column: 8, scope: !7443)
!7450 = !DILocation(line: 2579, column: 11, scope: !7443)
!7451 = !DILocation(line: 2580, column: 18, scope: !7443)
!7452 = !DILocation(line: 2580, column: 22, scope: !7443)
!7453 = !DILocation(line: 2580, column: 4, scope: !7443)
!7454 = !DILocation(line: 2580, column: 8, scope: !7443)
!7455 = !DILocation(line: 2580, column: 16, scope: !7443)
!7456 = !DILocation(line: 2581, column: 3, scope: !7443)
!7457 = !DILocation(line: 2583, column: 8, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7459, file: !1, line: 2583, column: 8)
!7459 = distinct !DILexicalBlock(scope: !7439, file: !1, line: 2582, column: 8)
!7460 = !DILocation(line: 2583, column: 19, scope: !7458)
!7461 = !DILocation(line: 2583, column: 22, scope: !7458)
!7462 = !DILocation(line: 2583, column: 26, scope: !7458)
!7463 = !DILocation(line: 2583, column: 37, scope: !7458)
!7464 = !DILocation(line: 2583, column: 8, scope: !7459)
!7465 = !DILocation(line: 2584, column: 14, scope: !7458)
!7466 = !DILocation(line: 2584, column: 18, scope: !7458)
!7467 = !DILocation(line: 2584, column: 12, scope: !7458)
!7468 = !DILocation(line: 2584, column: 5, scope: !7458)
!7469 = !DILocation(line: 2586, column: 14, scope: !7458)
!7470 = !DILocation(line: 2586, column: 18, scope: !7458)
!7471 = !DILocation(line: 2586, column: 12, scope: !7458)
!7472 = !DILocation(line: 2588, column: 15, scope: !7459)
!7473 = !DILocation(line: 2588, column: 13, scope: !7459)
!7474 = !DILocation(line: 2590, column: 8, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7459, file: !1, line: 2590, column: 8)
!7476 = !DILocation(line: 2590, column: 12, scope: !7475)
!7477 = !DILocation(line: 2590, column: 17, scope: !7475)
!7478 = !DILocation(line: 2590, column: 8, scope: !7459)
!7479 = !DILocation(line: 2591, column: 11, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7475, file: !1, line: 2590, column: 29)
!7481 = !DILocation(line: 2591, column: 15, scope: !7480)
!7482 = !DILocation(line: 2591, column: 9, scope: !7480)
!7483 = !DILocation(line: 2592, column: 10, scope: !7480)
!7484 = !DILocation(line: 2592, column: 40, scope: !7480)
!7485 = !DILocation(line: 2592, column: 44, scope: !7480)
!7486 = !DILocation(line: 2592, column: 38, scope: !7480)
!7487 = !DILocation(line: 2592, column: 8, scope: !7480)
!7488 = !DILocation(line: 2593, column: 9, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7480, file: !1, line: 2593, column: 9)
!7490 = !DILocation(line: 2593, column: 21, scope: !7489)
!7491 = !DILocation(line: 2593, column: 25, scope: !7489)
!7492 = !DILocation(line: 2593, column: 29, scope: !7489)
!7493 = !DILocation(line: 2593, column: 35, scope: !7489)
!7494 = !DILocation(line: 2593, column: 53, scope: !7489)
!7495 = !DILocation(line: 2593, column: 9, scope: !7480)
!7496 = !DILocation(line: 2594, column: 19, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7489, file: !1, line: 2593, column: 59)
!7498 = !DILocation(line: 2594, column: 31, scope: !7497)
!7499 = !DILocation(line: 2594, column: 40, scope: !7497)
!7500 = !DILocation(line: 2594, column: 6, scope: !7497)
!7501 = !DILocation(line: 2594, column: 10, scope: !7497)
!7502 = !DILocation(line: 2594, column: 17, scope: !7497)
!7503 = !DILocation(line: 2595, column: 24, scope: !7497)
!7504 = !DILocation(line: 2595, column: 36, scope: !7497)
!7505 = !DILocation(line: 2595, column: 45, scope: !7497)
!7506 = !DILocation(line: 2595, column: 6, scope: !7497)
!7507 = !DILocation(line: 2595, column: 10, scope: !7497)
!7508 = !DILocation(line: 2595, column: 22, scope: !7497)
!7509 = !DILocation(line: 2596, column: 5, scope: !7497)
!7510 = !DILocation(line: 2597, column: 17, scope: !7480)
!7511 = !DILocation(line: 2597, column: 22, scope: !7480)
!7512 = !DILocation(line: 2597, column: 5, scope: !7480)
!7513 = !DILocation(line: 2599, column: 17, scope: !7480)
!7514 = !DILocation(line: 2599, column: 21, scope: !7480)
!7515 = !DILocation(line: 2599, column: 27, scope: !7480)
!7516 = !DILocation(line: 2599, column: 16, scope: !7480)
!7517 = !DILocation(line: 2599, column: 5, scope: !7480)
!7518 = !DILocation(line: 2599, column: 9, scope: !7480)
!7519 = !DILocation(line: 2599, column: 14, scope: !7480)
!7520 = !DILocation(line: 2600, column: 14, scope: !7480)
!7521 = !DILocation(line: 2600, column: 5, scope: !7480)
!7522 = !DILocation(line: 2600, column: 9, scope: !7480)
!7523 = !DILocation(line: 2600, column: 12, scope: !7480)
!7524 = !DILocation(line: 2601, column: 5, scope: !7480)
!7525 = !DILocation(line: 2601, column: 9, scope: !7480)
!7526 = !DILocation(line: 2601, column: 17, scope: !7480)
!7527 = !DILocation(line: 2602, column: 19, scope: !7480)
!7528 = !DILocation(line: 2602, column: 23, scope: !7480)
!7529 = !DILocation(line: 2602, column: 5, scope: !7480)
!7530 = !DILocation(line: 2602, column: 9, scope: !7480)
!7531 = !DILocation(line: 2602, column: 17, scope: !7480)
!7532 = !DILocation(line: 2603, column: 12, scope: !7480)
!7533 = !DILocation(line: 2603, column: 16, scope: !7480)
!7534 = !DILocation(line: 2603, column: 10, scope: !7480)
!7535 = !DILocation(line: 2604, column: 5, scope: !7480)
!7536 = !DILocation(line: 2604, column: 11, scope: !7480)
!7537 = !DILocation(line: 2604, column: 18, scope: !7480)
!7538 = !DILocation(line: 2605, column: 10, scope: !7480)
!7539 = !DILocation(line: 2605, column: 14, scope: !7480)
!7540 = !DILocation(line: 2605, column: 8, scope: !7480)
!7541 = !DILocation(line: 2606, column: 14, scope: !7480)
!7542 = !DILocation(line: 2606, column: 18, scope: !7480)
!7543 = !DILocation(line: 2606, column: 12, scope: !7480)
!7544 = !DILocation(line: 2607, column: 19, scope: !7480)
!7545 = !DILocation(line: 2607, column: 23, scope: !7480)
!7546 = !DILocation(line: 2607, column: 17, scope: !7480)
!7547 = !DILocation(line: 2609, column: 5, scope: !7480)
!7548 = !DILocation(line: 2609, column: 15, scope: !7480)
!7549 = !DILocation(line: 2610, column: 17, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7480, file: !1, line: 2609, column: 19)
!7551 = !DILocation(line: 2610, column: 23, scope: !7550)
!7552 = !DILocation(line: 2610, column: 28, scope: !7550)
!7553 = !DILocation(line: 2610, column: 32, scope: !7550)
!7554 = !DILocation(line: 2610, column: 6, scope: !7550)
!7555 = !DILocation(line: 2611, column: 19, scope: !7550)
!7556 = !DILocation(line: 2611, column: 23, scope: !7550)
!7557 = !DILocation(line: 2611, column: 6, scope: !7550)
!7558 = !DILocation(line: 2611, column: 12, scope: !7550)
!7559 = !DILocation(line: 2611, column: 17, scope: !7550)
!7560 = !DILocation(line: 2612, column: 21, scope: !7550)
!7561 = !DILocation(line: 2612, column: 25, scope: !7550)
!7562 = !DILocation(line: 2612, column: 6, scope: !7550)
!7563 = !DILocation(line: 2612, column: 12, scope: !7550)
!7564 = !DILocation(line: 2612, column: 19, scope: !7550)
!7565 = !DILocation(line: 2613, column: 21, scope: !7550)
!7566 = !DILocation(line: 2613, column: 25, scope: !7550)
!7567 = !DILocation(line: 2613, column: 6, scope: !7550)
!7568 = !DILocation(line: 2613, column: 12, scope: !7550)
!7569 = !DILocation(line: 2613, column: 19, scope: !7550)
!7570 = !DILocation(line: 2614, column: 6, scope: !7550)
!7571 = !DILocation(line: 2614, column: 12, scope: !7550)
!7572 = !DILocation(line: 2614, column: 22, scope: !7550)
!7573 = !DILocation(line: 2615, column: 8, scope: !7550)
!7574 = !DILocation(line: 2616, column: 10, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7550, file: !1, line: 2616, column: 10)
!7576 = !DILocation(line: 2616, column: 17, scope: !7575)
!7577 = !DILocation(line: 2616, column: 25, scope: !7575)
!7578 = !DILocation(line: 2616, column: 28, scope: !7575)
!7579 = !DILocation(line: 2616, column: 32, scope: !7575)
!7580 = !DILocation(line: 2616, column: 10, scope: !7550)
!7581 = !DILocation(line: 2617, column: 26, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7575, file: !1, line: 2616, column: 38)
!7583 = !DILocation(line: 2617, column: 32, scope: !7582)
!7584 = !DILocation(line: 2617, column: 37, scope: !7582)
!7585 = !DILocation(line: 2617, column: 41, scope: !7582)
!7586 = !DILocation(line: 2617, column: 17, scope: !7582)
!7587 = !DILocation(line: 2617, column: 8, scope: !7582)
!7588 = !DILocation(line: 2617, column: 15, scope: !7582)
!7589 = !DILocation(line: 2618, column: 11, scope: !7582)
!7590 = !DILocation(line: 2619, column: 23, scope: !7582)
!7591 = !DILocation(line: 2619, column: 22, scope: !7582)
!7592 = !DILocation(line: 2619, column: 7, scope: !7582)
!7593 = !DILocation(line: 2619, column: 13, scope: !7582)
!7594 = !DILocation(line: 2619, column: 20, scope: !7582)
!7595 = !DILocation(line: 2620, column: 12, scope: !7596)
!7596 = distinct !DILexicalBlock(scope: !7582, file: !1, line: 2620, column: 11)
!7597 = !DILocation(line: 2620, column: 11, scope: !7596)
!7598 = !DILocation(line: 2620, column: 19, scope: !7596)
!7599 = !DILocation(line: 2620, column: 11, scope: !7582)
!7600 = !DILocation(line: 2620, column: 32, scope: !7596)
!7601 = !DILocation(line: 2620, column: 44, scope: !7596)
!7602 = !DILocation(line: 2620, column: 31, scope: !7596)
!7603 = !DILocation(line: 2621, column: 13, scope: !7596)
!7604 = !DILocation(line: 2621, column: 25, scope: !7596)
!7605 = !DILocation(line: 2622, column: 13, scope: !7582)
!7606 = !DILocation(line: 2623, column: 18, scope: !7582)
!7607 = !DILocation(line: 2624, column: 6, scope: !7582)
!7608 = !DILocation(line: 2626, column: 11, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7575, file: !1, line: 2625, column: 11)
!7610 = distinct !{!7610, !7547, !7611}
!7611 = !DILocation(line: 2628, column: 5, scope: !7480)
!7612 = !DILocation(line: 2630, column: 10, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7480, file: !1, line: 2630, column: 9)
!7614 = !DILocation(line: 2630, column: 14, scope: !7613)
!7615 = !DILocation(line: 2630, column: 20, scope: !7613)
!7616 = !DILocation(line: 2630, column: 38, scope: !7613)
!7617 = !DILocation(line: 2630, column: 9, scope: !7480)
!7618 = !DILocation(line: 2631, column: 51, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7613, file: !1, line: 2630, column: 44)
!7620 = !DILocation(line: 2631, column: 55, scope: !7619)
!7621 = !DILocation(line: 2631, column: 6, scope: !7619)
!7622 = !DILocation(line: 2632, column: 5, scope: !7619)
!7623 = !DILocation(line: 2633, column: 4, scope: !7480)
!7624 = !DILocation(line: 2634, column: 13, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7475, file: !1, line: 2634, column: 13)
!7626 = !DILocation(line: 2634, column: 17, scope: !7625)
!7627 = !DILocation(line: 2634, column: 22, scope: !7625)
!7628 = !DILocation(line: 2634, column: 13, scope: !7475)
!7629 = !DILocation(line: 2636, column: 11, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7625, file: !1, line: 2634, column: 36)
!7631 = !DILocation(line: 2636, column: 22, scope: !7630)
!7632 = !DILocation(line: 2636, column: 20, scope: !7630)
!7633 = !DILocation(line: 2636, column: 29, scope: !7630)
!7634 = !DILocation(line: 2636, column: 9, scope: !7630)
!7635 = !DILocation(line: 2638, column: 10, scope: !7630)
!7636 = !DILocation(line: 2638, column: 40, scope: !7630)
!7637 = !DILocation(line: 2638, column: 44, scope: !7630)
!7638 = !DILocation(line: 2638, column: 38, scope: !7630)
!7639 = !DILocation(line: 2638, column: 8, scope: !7630)
!7640 = !DILocation(line: 2639, column: 9, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7630, file: !1, line: 2639, column: 9)
!7642 = !DILocation(line: 2639, column: 21, scope: !7641)
!7643 = !DILocation(line: 2639, column: 25, scope: !7641)
!7644 = !DILocation(line: 2639, column: 29, scope: !7641)
!7645 = !DILocation(line: 2639, column: 35, scope: !7641)
!7646 = !DILocation(line: 2639, column: 53, scope: !7641)
!7647 = !DILocation(line: 2639, column: 9, scope: !7630)
!7648 = !DILocation(line: 2640, column: 19, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7641, file: !1, line: 2639, column: 59)
!7650 = !DILocation(line: 2640, column: 31, scope: !7649)
!7651 = !DILocation(line: 2640, column: 40, scope: !7649)
!7652 = !DILocation(line: 2640, column: 6, scope: !7649)
!7653 = !DILocation(line: 2640, column: 10, scope: !7649)
!7654 = !DILocation(line: 2640, column: 17, scope: !7649)
!7655 = !DILocation(line: 2641, column: 24, scope: !7649)
!7656 = !DILocation(line: 2641, column: 36, scope: !7649)
!7657 = !DILocation(line: 2641, column: 45, scope: !7649)
!7658 = !DILocation(line: 2641, column: 6, scope: !7649)
!7659 = !DILocation(line: 2641, column: 10, scope: !7649)
!7660 = !DILocation(line: 2641, column: 22, scope: !7649)
!7661 = !DILocation(line: 2642, column: 5, scope: !7649)
!7662 = !DILocation(line: 2643, column: 17, scope: !7630)
!7663 = !DILocation(line: 2643, column: 22, scope: !7630)
!7664 = !DILocation(line: 2643, column: 5, scope: !7630)
!7665 = !DILocation(line: 2645, column: 17, scope: !7630)
!7666 = !DILocation(line: 2645, column: 21, scope: !7630)
!7667 = !DILocation(line: 2645, column: 27, scope: !7630)
!7668 = !DILocation(line: 2645, column: 16, scope: !7630)
!7669 = !DILocation(line: 2645, column: 5, scope: !7630)
!7670 = !DILocation(line: 2645, column: 9, scope: !7630)
!7671 = !DILocation(line: 2645, column: 14, scope: !7630)
!7672 = !DILocation(line: 2646, column: 19, scope: !7630)
!7673 = !DILocation(line: 2646, column: 23, scope: !7630)
!7674 = !DILocation(line: 2646, column: 5, scope: !7630)
!7675 = !DILocation(line: 2646, column: 9, scope: !7630)
!7676 = !DILocation(line: 2646, column: 17, scope: !7630)
!7677 = !DILocation(line: 2648, column: 12, scope: !7630)
!7678 = !DILocation(line: 2648, column: 16, scope: !7630)
!7679 = !DILocation(line: 2648, column: 10, scope: !7630)
!7680 = !DILocation(line: 2649, column: 14, scope: !7630)
!7681 = !DILocation(line: 2649, column: 18, scope: !7630)
!7682 = !DILocation(line: 2649, column: 12, scope: !7630)
!7683 = !DILocation(line: 2650, column: 19, scope: !7630)
!7684 = !DILocation(line: 2650, column: 23, scope: !7630)
!7685 = !DILocation(line: 2650, column: 17, scope: !7630)
!7686 = !DILocation(line: 2652, column: 5, scope: !7630)
!7687 = !DILocation(line: 2652, column: 11, scope: !7630)
!7688 = !DILocation(line: 2652, column: 18, scope: !7630)
!7689 = !DILocation(line: 2653, column: 9, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7630, file: !1, line: 2653, column: 9)
!7691 = !DILocation(line: 2653, column: 16, scope: !7690)
!7692 = !DILocation(line: 2653, column: 9, scope: !7630)
!7693 = !DILocation(line: 2654, column: 7, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7690, file: !1, line: 2653, column: 25)
!7695 = !DILocation(line: 2654, column: 14, scope: !7694)
!7696 = !DILocation(line: 2655, column: 7, scope: !7694)
!7697 = !DILocation(line: 2655, column: 19, scope: !7694)
!7698 = !DILocation(line: 2656, column: 5, scope: !7694)
!7699 = !DILocation(line: 2658, column: 9, scope: !7630)
!7700 = !DILocation(line: 2658, column: 13, scope: !7630)
!7701 = !DILocation(line: 2658, column: 19, scope: !7630)
!7702 = !DILocation(line: 2658, column: 7, scope: !7630)
!7703 = !DILocation(line: 2659, column: 12, scope: !7630)
!7704 = !DILocation(line: 2659, column: 16, scope: !7630)
!7705 = !DILocation(line: 2659, column: 10, scope: !7630)
!7706 = !DILocation(line: 2660, column: 9, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7630, file: !1, line: 2660, column: 9)
!7708 = !DILocation(line: 2660, column: 13, scope: !7707)
!7709 = !DILocation(line: 2660, column: 19, scope: !7707)
!7710 = !DILocation(line: 2660, column: 9, scope: !7630)
!7711 = !DILocation(line: 2661, column: 7, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7707, file: !1, line: 2660, column: 37)
!7713 = !DILocation(line: 2662, column: 17, scope: !7712)
!7714 = !DILocation(line: 2662, column: 21, scope: !7712)
!7715 = !DILocation(line: 2662, column: 29, scope: !7712)
!7716 = !DILocation(line: 2662, column: 33, scope: !7712)
!7717 = !DILocation(line: 2662, column: 39, scope: !7712)
!7718 = !DILocation(line: 2662, column: 26, scope: !7712)
!7719 = !DILocation(line: 2662, column: 15, scope: !7712)
!7720 = !DILocation(line: 2663, column: 5, scope: !7712)
!7721 = !DILocation(line: 2665, column: 17, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7707, file: !1, line: 2664, column: 10)
!7723 = !DILocation(line: 2665, column: 15, scope: !7722)
!7724 = !DILocation(line: 2666, column: 10, scope: !7722)
!7725 = !DILocation(line: 2669, column: 17, scope: !7630)
!7726 = !DILocation(line: 2669, column: 23, scope: !7630)
!7727 = !DILocation(line: 2669, column: 28, scope: !7630)
!7728 = !DILocation(line: 2669, column: 38, scope: !7630)
!7729 = !DILocation(line: 2669, column: 46, scope: !7630)
!7730 = !DILocation(line: 2669, column: 56, scope: !7630)
!7731 = !DILocation(line: 2669, column: 5, scope: !7630)
!7732 = !DILocation(line: 2670, column: 18, scope: !7630)
!7733 = !DILocation(line: 2670, column: 24, scope: !7630)
!7734 = !DILocation(line: 2670, column: 5, scope: !7630)
!7735 = !DILocation(line: 2674, column: 5, scope: !7630)
!7736 = !DILocation(line: 2674, column: 13, scope: !7630)
!7737 = !DILocation(line: 2675, column: 10, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7739, file: !1, line: 2675, column: 10)
!7739 = distinct !DILexicalBlock(scope: !7630, file: !1, line: 2674, column: 17)
!7740 = !DILocation(line: 2675, column: 20, scope: !7738)
!7741 = !DILocation(line: 2675, column: 23, scope: !7738)
!7742 = !DILocation(line: 2675, column: 34, scope: !7738)
!7743 = !DILocation(line: 2675, column: 37, scope: !7738)
!7744 = !DILocation(line: 2675, column: 43, scope: !7738)
!7745 = !DILocation(line: 2675, column: 46, scope: !7738)
!7746 = !DILocation(line: 2675, column: 10, scope: !7739)
!7747 = !DILocation(line: 2677, column: 18, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7738, file: !1, line: 2675, column: 58)
!7749 = !DILocation(line: 2677, column: 24, scope: !7748)
!7750 = !DILocation(line: 2677, column: 29, scope: !7748)
!7751 = !DILocation(line: 2677, column: 39, scope: !7748)
!7752 = !DILocation(line: 2677, column: 7, scope: !7748)
!7753 = !DILocation(line: 2678, column: 20, scope: !7748)
!7754 = !DILocation(line: 2678, column: 30, scope: !7748)
!7755 = !DILocation(line: 2678, column: 7, scope: !7748)
!7756 = !DILocation(line: 2678, column: 13, scope: !7748)
!7757 = !DILocation(line: 2678, column: 18, scope: !7748)
!7758 = !DILocation(line: 2679, column: 22, scope: !7748)
!7759 = !DILocation(line: 2679, column: 32, scope: !7748)
!7760 = !DILocation(line: 2679, column: 7, scope: !7748)
!7761 = !DILocation(line: 2679, column: 13, scope: !7748)
!7762 = !DILocation(line: 2679, column: 20, scope: !7748)
!7763 = !DILocation(line: 2680, column: 22, scope: !7748)
!7764 = !DILocation(line: 2680, column: 32, scope: !7748)
!7765 = !DILocation(line: 2680, column: 7, scope: !7748)
!7766 = !DILocation(line: 2680, column: 13, scope: !7748)
!7767 = !DILocation(line: 2680, column: 20, scope: !7748)
!7768 = !DILocation(line: 2681, column: 7, scope: !7748)
!7769 = !DILocation(line: 2681, column: 13, scope: !7748)
!7770 = !DILocation(line: 2681, column: 23, scope: !7748)
!7771 = !DILocation(line: 2682, column: 7, scope: !7748)
!7772 = !DILocation(line: 2682, column: 13, scope: !7748)
!7773 = !DILocation(line: 2682, column: 22, scope: !7748)
!7774 = !DILocation(line: 2683, column: 11, scope: !7748)
!7775 = !DILocation(line: 2684, column: 7, scope: !7748)
!7776 = !DILocation(line: 2684, column: 11, scope: !7748)
!7777 = !DILocation(line: 2684, column: 13, scope: !7748)
!7778 = !DILocation(line: 2685, column: 7, scope: !7748)
!7779 = !DILocation(line: 2685, column: 11, scope: !7748)
!7780 = !DILocation(line: 2685, column: 19, scope: !7748)
!7781 = !DILocation(line: 2686, column: 11, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7748, file: !1, line: 2686, column: 11)
!7783 = !DILocation(line: 2686, column: 18, scope: !7782)
!7784 = !DILocation(line: 2686, column: 11, scope: !7748)
!7785 = !DILocation(line: 2687, column: 27, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7782, file: !1, line: 2686, column: 27)
!7787 = !DILocation(line: 2687, column: 37, scope: !7786)
!7788 = !DILocation(line: 2687, column: 45, scope: !7786)
!7789 = !DILocation(line: 2687, column: 51, scope: !7786)
!7790 = !DILocation(line: 2687, column: 18, scope: !7786)
!7791 = !DILocation(line: 2687, column: 9, scope: !7786)
!7792 = !DILocation(line: 2687, column: 16, scope: !7786)
!7793 = !DILocation(line: 2688, column: 24, scope: !7786)
!7794 = !DILocation(line: 2688, column: 23, scope: !7786)
!7795 = !DILocation(line: 2688, column: 8, scope: !7786)
!7796 = !DILocation(line: 2688, column: 14, scope: !7786)
!7797 = !DILocation(line: 2688, column: 21, scope: !7786)
!7798 = !DILocation(line: 2689, column: 14, scope: !7786)
!7799 = !DILocation(line: 2691, column: 12, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7786, file: !1, line: 2691, column: 12)
!7801 = !DILocation(line: 2691, column: 18, scope: !7800)
!7802 = !DILocation(line: 2691, column: 25, scope: !7800)
!7803 = !DILocation(line: 2691, column: 12, scope: !7786)
!7804 = !DILocation(line: 2691, column: 38, scope: !7800)
!7805 = !DILocation(line: 2691, column: 50, scope: !7800)
!7806 = !DILocation(line: 2691, column: 37, scope: !7800)
!7807 = !DILocation(line: 2692, column: 19, scope: !7786)
!7808 = !DILocation(line: 2693, column: 7, scope: !7786)
!7809 = !DILocation(line: 2694, column: 6, scope: !7748)
!7810 = !DILocalVariable(name: "j", scope: !7811, file: !1, line: 2697, type: !79)
!7811 = distinct !DILexicalBlock(scope: !7738, file: !1, line: 2695, column: 11)
!7812 = !DILocation(line: 2697, column: 11, scope: !7811)
!7813 = !DILocation(line: 2700, column: 14, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7811, file: !1, line: 2700, column: 7)
!7815 = !DILocation(line: 2700, column: 12, scope: !7814)
!7816 = !DILocation(line: 2700, column: 19, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7814, file: !1, line: 2700, column: 7)
!7818 = !DILocation(line: 2700, column: 21, scope: !7817)
!7819 = !DILocation(line: 2700, column: 7, scope: !7814)
!7820 = !DILocation(line: 2701, column: 38, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7817, file: !1, line: 2700, column: 31)
!7822 = !DILocation(line: 2701, column: 48, scope: !7821)
!7823 = !DILocation(line: 2701, column: 55, scope: !7821)
!7824 = !DILocation(line: 2701, column: 60, scope: !7821)
!7825 = !DILocation(line: 2701, column: 70, scope: !7821)
!7826 = !DILocation(line: 2701, column: 77, scope: !7821)
!7827 = !DILocation(line: 2702, column: 38, scope: !7821)
!7828 = !DILocation(line: 2702, column: 44, scope: !7821)
!7829 = !DILocation(line: 2702, column: 51, scope: !7821)
!7830 = !DILocation(line: 2702, column: 60, scope: !7821)
!7831 = !DILocation(line: 2702, column: 66, scope: !7821)
!7832 = !DILocation(line: 2702, column: 73, scope: !7821)
!7833 = !DILocation(line: 2703, column: 40, scope: !7821)
!7834 = !DILocation(line: 2703, column: 46, scope: !7821)
!7835 = !DILocation(line: 2703, column: 50, scope: !7821)
!7836 = !DILocation(line: 2703, column: 55, scope: !7821)
!7837 = !DILocation(line: 2701, column: 8, scope: !7821)
!7838 = !DILocation(line: 2704, column: 7, scope: !7821)
!7839 = !DILocation(line: 2700, column: 27, scope: !7817)
!7840 = !DILocation(line: 2700, column: 7, scope: !7817)
!7841 = distinct !{!7841, !7819, !7842}
!7842 = !DILocation(line: 2704, column: 7, scope: !7814)
!7843 = !DILocation(line: 2707, column: 20, scope: !7811)
!7844 = !DILocation(line: 2707, column: 30, scope: !7811)
!7845 = !DILocation(line: 2707, column: 36, scope: !7811)
!7846 = !DILocation(line: 2708, column: 20, scope: !7811)
!7847 = !DILocation(line: 2708, column: 34, scope: !7811)
!7848 = !DILocation(line: 2708, column: 40, scope: !7811)
!7849 = !DILocation(line: 2709, column: 20, scope: !7811)
!7850 = !DILocation(line: 2709, column: 34, scope: !7811)
!7851 = !DILocation(line: 2709, column: 40, scope: !7811)
!7852 = !DILocation(line: 2710, column: 20, scope: !7811)
!7853 = !DILocation(line: 2710, column: 34, scope: !7811)
!7854 = !DILocation(line: 2710, column: 40, scope: !7811)
!7855 = !DILocation(line: 2711, column: 20, scope: !7811)
!7856 = !DILocation(line: 2707, column: 7, scope: !7811)
!7857 = !DILocation(line: 2714, column: 11, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7811, file: !1, line: 2714, column: 11)
!7859 = !DILocation(line: 2714, column: 15, scope: !7858)
!7860 = !DILocation(line: 2714, column: 26, scope: !7858)
!7861 = !DILocation(line: 2714, column: 11, scope: !7811)
!7862 = !DILocation(line: 2715, column: 38, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7858, file: !1, line: 2714, column: 47)
!7864 = !DILocation(line: 2715, column: 48, scope: !7863)
!7865 = !DILocation(line: 2715, column: 56, scope: !7863)
!7866 = !DILocation(line: 2715, column: 66, scope: !7863)
!7867 = !DILocation(line: 2716, column: 38, scope: !7863)
!7868 = !DILocation(line: 2716, column: 44, scope: !7863)
!7869 = !DILocation(line: 2716, column: 56, scope: !7863)
!7870 = !DILocation(line: 2716, column: 62, scope: !7863)
!7871 = !DILocation(line: 2717, column: 38, scope: !7863)
!7872 = !DILocation(line: 2717, column: 44, scope: !7863)
!7873 = !DILocation(line: 2717, column: 49, scope: !7863)
!7874 = !DILocation(line: 2715, column: 8, scope: !7863)
!7875 = !DILocation(line: 2718, column: 7, scope: !7863)
!7876 = !DILocation(line: 2721, column: 11, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7811, file: !1, line: 2721, column: 11)
!7878 = !DILocation(line: 2721, column: 21, scope: !7877)
!7879 = !DILocation(line: 2721, column: 27, scope: !7877)
!7880 = !DILocation(line: 2721, column: 37, scope: !7877)
!7881 = !DILocation(line: 2721, column: 24, scope: !7877)
!7882 = !DILocation(line: 2721, column: 11, scope: !7811)
!7883 = !DILocation(line: 2722, column: 12, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7885, file: !1, line: 2722, column: 12)
!7885 = distinct !DILexicalBlock(scope: !7877, file: !1, line: 2721, column: 41)
!7886 = !DILocation(line: 2722, column: 22, scope: !7884)
!7887 = !DILocation(line: 2722, column: 25, scope: !7884)
!7888 = !DILocation(line: 2722, column: 30, scope: !7884)
!7889 = !DILocation(line: 2722, column: 33, scope: !7884)
!7890 = !DILocation(line: 2722, column: 43, scope: !7884)
!7891 = !DILocation(line: 2722, column: 46, scope: !7884)
!7892 = !DILocation(line: 2722, column: 12, scope: !7885)
!7893 = !DILocation(line: 2723, column: 9, scope: !7884)
!7894 = !DILocation(line: 2723, column: 15, scope: !7884)
!7895 = !DILocation(line: 2723, column: 25, scope: !7884)
!7896 = !DILocation(line: 2724, column: 7, scope: !7885)
!7897 = !DILocation(line: 2726, column: 12, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7899, file: !1, line: 2726, column: 12)
!7899 = distinct !DILexicalBlock(scope: !7877, file: !1, line: 2725, column: 12)
!7900 = !DILocation(line: 2726, column: 22, scope: !7898)
!7901 = !DILocation(line: 2726, column: 25, scope: !7898)
!7902 = !DILocation(line: 2726, column: 30, scope: !7898)
!7903 = !DILocation(line: 2726, column: 33, scope: !7898)
!7904 = !DILocation(line: 2726, column: 43, scope: !7898)
!7905 = !DILocation(line: 2726, column: 46, scope: !7898)
!7906 = !DILocation(line: 2726, column: 12, scope: !7899)
!7907 = !DILocation(line: 2727, column: 9, scope: !7898)
!7908 = !DILocation(line: 2727, column: 15, scope: !7898)
!7909 = !DILocation(line: 2727, column: 25, scope: !7898)
!7910 = !DILocation(line: 2728, column: 17, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7898, file: !1, line: 2728, column: 17)
!7912 = !DILocation(line: 2728, column: 27, scope: !7911)
!7913 = !DILocation(line: 2728, column: 30, scope: !7911)
!7914 = !DILocation(line: 2728, column: 35, scope: !7911)
!7915 = !DILocation(line: 2728, column: 38, scope: !7911)
!7916 = !DILocation(line: 2728, column: 48, scope: !7911)
!7917 = !DILocation(line: 2728, column: 51, scope: !7911)
!7918 = !DILocation(line: 2728, column: 17, scope: !7898)
!7919 = !DILocation(line: 2729, column: 9, scope: !7911)
!7920 = !DILocation(line: 2729, column: 15, scope: !7911)
!7921 = !DILocation(line: 2729, column: 25, scope: !7911)
!7922 = !DILocation(line: 2733, column: 11, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7811, file: !1, line: 2733, column: 11)
!7924 = !DILocation(line: 2733, column: 18, scope: !7923)
!7925 = !DILocation(line: 2733, column: 11, scope: !7811)
!7926 = !DILocation(line: 2734, column: 9, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7923, file: !1, line: 2733, column: 27)
!7928 = !DILocation(line: 2734, column: 16, scope: !7927)
!7929 = !DILocation(line: 2735, column: 9, scope: !7927)
!7930 = !DILocation(line: 2735, column: 21, scope: !7927)
!7931 = !DILocation(line: 2736, column: 15, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7927, file: !1, line: 2736, column: 8)
!7933 = !DILocation(line: 2736, column: 13, scope: !7932)
!7934 = !DILocation(line: 2736, column: 20, scope: !7935)
!7935 = distinct !DILexicalBlock(scope: !7932, file: !1, line: 2736, column: 8)
!7936 = !DILocation(line: 2736, column: 24, scope: !7935)
!7937 = !DILocation(line: 2736, column: 22, scope: !7935)
!7938 = !DILocation(line: 2736, column: 8, scope: !7932)
!7939 = !DILocation(line: 2737, column: 17, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7935, file: !1, line: 2736, column: 37)
!7941 = !DILocation(line: 2737, column: 15, scope: !7940)
!7942 = !DILocation(line: 2738, column: 13, scope: !7940)
!7943 = !DILocation(line: 2739, column: 33, scope: !7940)
!7944 = !DILocation(line: 2739, column: 40, scope: !7940)
!7945 = !DILocation(line: 2739, column: 45, scope: !7940)
!7946 = !DILocation(line: 2739, column: 51, scope: !7940)
!7947 = !DILocation(line: 2739, column: 24, scope: !7940)
!7948 = !DILocation(line: 2739, column: 9, scope: !7940)
!7949 = !DILocation(line: 2739, column: 15, scope: !7940)
!7950 = !DILocation(line: 2739, column: 22, scope: !7940)
!7951 = !DILocation(line: 2741, column: 13, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7940, file: !1, line: 2741, column: 13)
!7953 = !DILocation(line: 2741, column: 19, scope: !7952)
!7954 = !DILocation(line: 2741, column: 26, scope: !7952)
!7955 = !DILocation(line: 2741, column: 13, scope: !7940)
!7956 = !DILocation(line: 2742, column: 21, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7952, file: !1, line: 2741, column: 38)
!7958 = !DILocation(line: 2742, column: 27, scope: !7957)
!7959 = !DILocation(line: 2742, column: 11, scope: !7957)
!7960 = !DILocation(line: 2742, column: 18, scope: !7957)
!7961 = !DILocation(line: 2743, column: 11, scope: !7957)
!7962 = !DILocation(line: 2743, column: 23, scope: !7957)
!7963 = !DILocation(line: 2744, column: 9, scope: !7957)
!7964 = !DILocation(line: 2745, column: 8, scope: !7940)
!7965 = !DILocation(line: 2736, column: 33, scope: !7935)
!7966 = !DILocation(line: 2736, column: 8, scope: !7935)
!7967 = distinct !{!7967, !7938, !7968}
!7968 = !DILocation(line: 2745, column: 8, scope: !7932)
!7969 = !DILocation(line: 2746, column: 14, scope: !7927)
!7970 = !DILocation(line: 2747, column: 19, scope: !7927)
!7971 = !DILocation(line: 2748, column: 7, scope: !7927)
!7972 = !DILocation(line: 2750, column: 16, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7923, file: !1, line: 2749, column: 12)
!7974 = !DILocation(line: 2750, column: 13, scope: !7973)
!7975 = !DILocation(line: 2752, column: 17, scope: !7811)
!7976 = !DILocation(line: 2752, column: 7, scope: !7811)
!7977 = !DILocation(line: 2752, column: 11, scope: !7811)
!7978 = !DILocation(line: 2752, column: 14, scope: !7811)
!7979 = !DILocation(line: 2754, column: 17, scope: !7739)
!7980 = !DILocation(line: 2754, column: 15, scope: !7739)
!7981 = !DILocation(line: 2755, column: 10, scope: !7739)
!7982 = distinct !{!7982, !7735, !7983}
!7983 = !DILocation(line: 2756, column: 5, scope: !7630)
!7984 = !DILocation(line: 2758, column: 10, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7630, file: !1, line: 2758, column: 9)
!7986 = !DILocation(line: 2758, column: 14, scope: !7985)
!7987 = !DILocation(line: 2758, column: 20, scope: !7985)
!7988 = !DILocation(line: 2758, column: 38, scope: !7985)
!7989 = !DILocation(line: 2758, column: 9, scope: !7630)
!7990 = !DILocation(line: 2759, column: 17, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7985, file: !1, line: 2758, column: 44)
!7992 = !DILocation(line: 2759, column: 23, scope: !7991)
!7993 = !DILocation(line: 2759, column: 28, scope: !7991)
!7994 = !DILocation(line: 2759, column: 38, scope: !7991)
!7995 = !DILocation(line: 2759, column: 6, scope: !7991)
!7996 = !DILocation(line: 2760, column: 19, scope: !7991)
!7997 = !DILocation(line: 2760, column: 29, scope: !7991)
!7998 = !DILocation(line: 2760, column: 6, scope: !7991)
!7999 = !DILocation(line: 2760, column: 12, scope: !7991)
!8000 = !DILocation(line: 2760, column: 17, scope: !7991)
!8001 = !DILocation(line: 2761, column: 21, scope: !7991)
!8002 = !DILocation(line: 2761, column: 31, scope: !7991)
!8003 = !DILocation(line: 2761, column: 6, scope: !7991)
!8004 = !DILocation(line: 2761, column: 12, scope: !7991)
!8005 = !DILocation(line: 2761, column: 19, scope: !7991)
!8006 = !DILocation(line: 2762, column: 21, scope: !7991)
!8007 = !DILocation(line: 2762, column: 31, scope: !7991)
!8008 = !DILocation(line: 2762, column: 6, scope: !7991)
!8009 = !DILocation(line: 2762, column: 12, scope: !7991)
!8010 = !DILocation(line: 2762, column: 19, scope: !7991)
!8011 = !DILocation(line: 2764, column: 18, scope: !7991)
!8012 = !DILocation(line: 2764, column: 24, scope: !7991)
!8013 = !DILocation(line: 2764, column: 29, scope: !7991)
!8014 = !DILocation(line: 2764, column: 39, scope: !7991)
!8015 = !DILocation(line: 2764, column: 47, scope: !7991)
!8016 = !DILocation(line: 2764, column: 57, scope: !7991)
!8017 = !DILocation(line: 2764, column: 6, scope: !7991)
!8018 = !DILocation(line: 2765, column: 19, scope: !7991)
!8019 = !DILocation(line: 2765, column: 25, scope: !7991)
!8020 = !DILocation(line: 2765, column: 6, scope: !7991)
!8021 = !DILocation(line: 2767, column: 6, scope: !7991)
!8022 = !DILocation(line: 2767, column: 10, scope: !7991)
!8023 = !DILocation(line: 2767, column: 12, scope: !7991)
!8024 = !DILocation(line: 2768, column: 5, scope: !7991)
!8025 = !DILocation(line: 2769, column: 4, scope: !7630)
!8026 = !DILocation(line: 2770, column: 13, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !7625, file: !1, line: 2770, column: 13)
!8028 = !DILocation(line: 2770, column: 17, scope: !8027)
!8029 = !DILocation(line: 2770, column: 22, scope: !8027)
!8030 = !DILocation(line: 2770, column: 13, scope: !7625)
!8031 = !DILocation(line: 2771, column: 9, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8033, file: !1, line: 2771, column: 9)
!8033 = distinct !DILexicalBlock(scope: !8027, file: !1, line: 2770, column: 35)
!8034 = !DILocation(line: 2771, column: 13, scope: !8032)
!8035 = !DILocation(line: 2771, column: 19, scope: !8032)
!8036 = !DILocation(line: 2771, column: 9, scope: !8033)
!8037 = !DILocation(line: 2772, column: 13, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8032, file: !1, line: 2771, column: 25)
!8039 = !DILocation(line: 2772, column: 22, scope: !8038)
!8040 = !DILocation(line: 2772, column: 20, scope: !8038)
!8041 = !DILocation(line: 2772, column: 10, scope: !8038)
!8042 = !DILocation(line: 2774, column: 11, scope: !8038)
!8043 = !DILocation(line: 2774, column: 41, scope: !8038)
!8044 = !DILocation(line: 2774, column: 45, scope: !8038)
!8045 = !DILocation(line: 2774, column: 39, scope: !8038)
!8046 = !DILocation(line: 2774, column: 9, scope: !8038)
!8047 = !DILocation(line: 2775, column: 10, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8038, file: !1, line: 2775, column: 10)
!8049 = !DILocation(line: 2775, column: 22, scope: !8048)
!8050 = !DILocation(line: 2775, column: 26, scope: !8048)
!8051 = !DILocation(line: 2775, column: 30, scope: !8048)
!8052 = !DILocation(line: 2775, column: 36, scope: !8048)
!8053 = !DILocation(line: 2775, column: 54, scope: !8048)
!8054 = !DILocation(line: 2775, column: 10, scope: !8038)
!8055 = !DILocation(line: 2776, column: 20, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8048, file: !1, line: 2775, column: 60)
!8057 = !DILocation(line: 2776, column: 32, scope: !8056)
!8058 = !DILocation(line: 2776, column: 41, scope: !8056)
!8059 = !DILocation(line: 2776, column: 7, scope: !8056)
!8060 = !DILocation(line: 2776, column: 11, scope: !8056)
!8061 = !DILocation(line: 2776, column: 18, scope: !8056)
!8062 = !DILocation(line: 2777, column: 25, scope: !8056)
!8063 = !DILocation(line: 2777, column: 37, scope: !8056)
!8064 = !DILocation(line: 2777, column: 46, scope: !8056)
!8065 = !DILocation(line: 2777, column: 7, scope: !8056)
!8066 = !DILocation(line: 2777, column: 11, scope: !8056)
!8067 = !DILocation(line: 2777, column: 23, scope: !8056)
!8068 = !DILocation(line: 2778, column: 6, scope: !8056)
!8069 = !DILocation(line: 2779, column: 18, scope: !8038)
!8070 = !DILocation(line: 2779, column: 23, scope: !8038)
!8071 = !DILocation(line: 2779, column: 6, scope: !8038)
!8072 = !DILocation(line: 2780, column: 15, scope: !8038)
!8073 = !DILocation(line: 2780, column: 6, scope: !8038)
!8074 = !DILocation(line: 2780, column: 10, scope: !8038)
!8075 = !DILocation(line: 2780, column: 13, scope: !8038)
!8076 = !DILocation(line: 2781, column: 6, scope: !8038)
!8077 = !DILocation(line: 2781, column: 10, scope: !8038)
!8078 = !DILocation(line: 2781, column: 18, scope: !8038)
!8079 = !DILocation(line: 2782, column: 18, scope: !8038)
!8080 = !DILocation(line: 2782, column: 22, scope: !8038)
!8081 = !DILocation(line: 2782, column: 28, scope: !8038)
!8082 = !DILocation(line: 2782, column: 17, scope: !8038)
!8083 = !DILocation(line: 2782, column: 6, scope: !8038)
!8084 = !DILocation(line: 2782, column: 10, scope: !8038)
!8085 = !DILocation(line: 2782, column: 15, scope: !8038)
!8086 = !DILocation(line: 2783, column: 20, scope: !8038)
!8087 = !DILocation(line: 2783, column: 24, scope: !8038)
!8088 = !DILocation(line: 2783, column: 6, scope: !8038)
!8089 = !DILocation(line: 2783, column: 10, scope: !8038)
!8090 = !DILocation(line: 2783, column: 18, scope: !8038)
!8091 = !DILocation(line: 2785, column: 13, scope: !8038)
!8092 = !DILocation(line: 2785, column: 17, scope: !8038)
!8093 = !DILocation(line: 2785, column: 11, scope: !8038)
!8094 = !DILocation(line: 2786, column: 15, scope: !8038)
!8095 = !DILocation(line: 2786, column: 19, scope: !8038)
!8096 = !DILocation(line: 2786, column: 13, scope: !8038)
!8097 = !DILocation(line: 2787, column: 20, scope: !8038)
!8098 = !DILocation(line: 2787, column: 24, scope: !8038)
!8099 = !DILocation(line: 2787, column: 18, scope: !8038)
!8100 = !DILocation(line: 2789, column: 25, scope: !8038)
!8101 = !DILocation(line: 2789, column: 30, scope: !8038)
!8102 = !DILocation(line: 2789, column: 36, scope: !8038)
!8103 = !DILocation(line: 2790, column: 25, scope: !8038)
!8104 = !DILocation(line: 2790, column: 41, scope: !8038)
!8105 = !DILocation(line: 2790, column: 47, scope: !8038)
!8106 = !DILocation(line: 2791, column: 25, scope: !8038)
!8107 = !DILocation(line: 2791, column: 41, scope: !8038)
!8108 = !DILocation(line: 2791, column: 47, scope: !8038)
!8109 = !DILocation(line: 2792, column: 25, scope: !8038)
!8110 = !DILocation(line: 2792, column: 41, scope: !8038)
!8111 = !DILocation(line: 2792, column: 47, scope: !8038)
!8112 = !DILocation(line: 2793, column: 25, scope: !8038)
!8113 = !DILocation(line: 2789, column: 6, scope: !8038)
!8114 = !DILocation(line: 2796, column: 10, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8038, file: !1, line: 2796, column: 10)
!8116 = !DILocation(line: 2796, column: 17, scope: !8115)
!8117 = !DILocation(line: 2796, column: 10, scope: !8038)
!8118 = !DILocation(line: 2797, column: 12, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8115, file: !1, line: 2796, column: 26)
!8120 = !DILocation(line: 2797, column: 10, scope: !8119)
!8121 = !DILocation(line: 2798, column: 15, scope: !8119)
!8122 = !DILocation(line: 2798, column: 13, scope: !8119)
!8123 = !DILocation(line: 2799, column: 11, scope: !8119)
!8124 = !DILocation(line: 2800, column: 7, scope: !8119)
!8125 = !DILocation(line: 2800, column: 14, scope: !8119)
!8126 = !DILocalVariable(name: "j", scope: !8127, file: !1, line: 2801, type: !79)
!8127 = distinct !DILexicalBlock(scope: !8119, file: !1, line: 2800, column: 18)
!8128 = !DILocation(line: 2801, column: 12, scope: !8127)
!8129 = !DILocation(line: 2802, column: 9, scope: !8127)
!8130 = !DILocation(line: 2802, column: 16, scope: !8127)
!8131 = !DILocation(line: 2803, column: 9, scope: !8127)
!8132 = !DILocation(line: 2803, column: 21, scope: !8127)
!8133 = !DILocation(line: 2805, column: 15, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8127, file: !1, line: 2805, column: 8)
!8135 = !DILocation(line: 2805, column: 13, scope: !8134)
!8136 = !DILocation(line: 2805, column: 20, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8134, file: !1, line: 2805, column: 8)
!8138 = !DILocation(line: 2805, column: 26, scope: !8137)
!8139 = !DILocation(line: 2805, column: 29, scope: !8137)
!8140 = !DILocation(line: 2805, column: 25, scope: !8137)
!8141 = !DILocation(line: 2805, column: 38, scope: !8137)
!8142 = !DILocation(line: 2805, column: 45, scope: !8137)
!8143 = !DILocation(line: 2805, column: 52, scope: !8137)
!8144 = !DILocation(line: 2805, column: 22, scope: !8137)
!8145 = !DILocation(line: 2805, column: 8, scope: !8134)
!8146 = !DILocation(line: 2806, column: 33, scope: !8147)
!8147 = distinct !DILexicalBlock(scope: !8137, file: !1, line: 2805, column: 66)
!8148 = !DILocation(line: 2806, column: 40, scope: !8147)
!8149 = !DILocation(line: 2806, column: 45, scope: !8147)
!8150 = !DILocation(line: 2806, column: 51, scope: !8147)
!8151 = !DILocation(line: 2806, column: 24, scope: !8147)
!8152 = !DILocation(line: 2806, column: 9, scope: !8147)
!8153 = !DILocation(line: 2806, column: 15, scope: !8147)
!8154 = !DILocation(line: 2806, column: 22, scope: !8147)
!8155 = !DILocation(line: 2807, column: 13, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8147, file: !1, line: 2807, column: 13)
!8157 = !DILocation(line: 2807, column: 19, scope: !8156)
!8158 = !DILocation(line: 2807, column: 26, scope: !8156)
!8159 = !DILocation(line: 2807, column: 13, scope: !8147)
!8160 = !DILocation(line: 2808, column: 21, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8156, file: !1, line: 2807, column: 38)
!8162 = !DILocation(line: 2808, column: 27, scope: !8161)
!8163 = !DILocation(line: 2808, column: 11, scope: !8161)
!8164 = !DILocation(line: 2808, column: 18, scope: !8161)
!8165 = !DILocation(line: 2809, column: 11, scope: !8161)
!8166 = !DILocation(line: 2809, column: 23, scope: !8161)
!8167 = !DILocation(line: 2810, column: 9, scope: !8161)
!8168 = !DILocation(line: 2811, column: 17, scope: !8147)
!8169 = !DILocation(line: 2811, column: 15, scope: !8147)
!8170 = !DILocation(line: 2812, column: 13, scope: !8147)
!8171 = !DILocation(line: 2813, column: 8, scope: !8147)
!8172 = !DILocation(line: 2805, column: 62, scope: !8137)
!8173 = !DILocation(line: 2805, column: 8, scope: !8137)
!8174 = distinct !{!8174, !8145, !8175}
!8175 = !DILocation(line: 2813, column: 8, scope: !8134)
!8176 = !DILocation(line: 2814, column: 14, scope: !8127)
!8177 = !DILocation(line: 2815, column: 19, scope: !8127)
!8178 = !DILocation(line: 2816, column: 10, scope: !8127)
!8179 = distinct !{!8179, !8124, !8180}
!8180 = !DILocation(line: 2817, column: 7, scope: !8119)
!8181 = !DILocation(line: 2818, column: 6, scope: !8119)
!8182 = !DILocation(line: 2820, column: 11, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8038, file: !1, line: 2820, column: 10)
!8184 = !DILocation(line: 2820, column: 15, scope: !8183)
!8185 = !DILocation(line: 2820, column: 21, scope: !8183)
!8186 = !DILocation(line: 2820, column: 39, scope: !8183)
!8187 = !DILocation(line: 2820, column: 10, scope: !8038)
!8188 = !DILocation(line: 2821, column: 52, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8183, file: !1, line: 2820, column: 45)
!8190 = !DILocation(line: 2821, column: 56, scope: !8189)
!8191 = !DILocation(line: 2821, column: 7, scope: !8189)
!8192 = !DILocation(line: 2822, column: 6, scope: !8189)
!8193 = !DILocation(line: 2823, column: 5, scope: !8038)
!8194 = !DILocation(line: 2824, column: 4, scope: !8033)
!8195 = !DILocation(line: 2826, column: 2, scope: !7426)
!8196 = !DILocation(line: 2564, column: 18, scope: !7421)
!8197 = !DILocation(line: 2564, column: 22, scope: !7421)
!8198 = !DILocation(line: 2564, column: 16, scope: !7421)
!8199 = !DILocation(line: 2564, column: 2, scope: !7421)
!8200 = distinct !{!8200, !7423, !8201}
!8201 = !DILocation(line: 2826, column: 2, scope: !7422)
!8202 = !DILocation(line: 2829, column: 7, scope: !7310)
!8203 = !DILocation(line: 2829, column: 12, scope: !7310)
!8204 = !DILocation(line: 2829, column: 5, scope: !7310)
!8205 = !DILocation(line: 2830, column: 2, scope: !7310)
!8206 = !DILocation(line: 2830, column: 9, scope: !7310)
!8207 = !DILocation(line: 2831, column: 7, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8209, file: !1, line: 2831, column: 7)
!8209 = distinct !DILexicalBlock(scope: !7310, file: !1, line: 2830, column: 13)
!8210 = !DILocation(line: 2831, column: 11, scope: !8208)
!8211 = !DILocation(line: 2831, column: 7, scope: !8209)
!8212 = !DILocalVariable(name: "is_cyclic", scope: !8213, file: !1, line: 2832, type: !551)
!8213 = distinct !DILexicalBlock(scope: !8208, file: !1, line: 2831, column: 15)
!8214 = !DILocation(line: 2832, column: 9, scope: !8213)
!8215 = !DILocation(line: 2832, column: 21, scope: !8213)
!8216 = !DILocation(line: 2832, column: 25, scope: !8213)
!8217 = !DILocation(line: 2832, column: 30, scope: !8213)
!8218 = !DILocation(line: 2833, column: 9, scope: !8213)
!8219 = !DILocation(line: 2833, column: 13, scope: !8213)
!8220 = !DILocation(line: 2833, column: 7, scope: !8213)
!8221 = !DILocation(line: 2834, column: 8, scope: !8222)
!8222 = distinct !DILexicalBlock(scope: !8213, file: !1, line: 2834, column: 8)
!8223 = !DILocation(line: 2834, column: 8, scope: !8213)
!8224 = !DILocation(line: 2835, column: 13, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8222, file: !1, line: 2834, column: 19)
!8226 = !DILocation(line: 2835, column: 17, scope: !8225)
!8227 = !DILocation(line: 2835, column: 11, scope: !8225)
!8228 = !DILocation(line: 2836, column: 13, scope: !8225)
!8229 = !DILocation(line: 2836, column: 22, scope: !8225)
!8230 = !DILocation(line: 2836, column: 25, scope: !8225)
!8231 = !DILocation(line: 2836, column: 19, scope: !8225)
!8232 = !DILocation(line: 2836, column: 11, scope: !8225)
!8233 = !DILocation(line: 2837, column: 4, scope: !8225)
!8234 = !DILocation(line: 2839, column: 13, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8222, file: !1, line: 2838, column: 9)
!8236 = !DILocation(line: 2839, column: 17, scope: !8235)
!8237 = !DILocation(line: 2839, column: 11, scope: !8235)
!8238 = !DILocation(line: 2840, column: 5, scope: !8235)
!8239 = !DILocation(line: 2840, column: 12, scope: !8235)
!8240 = !DILocation(line: 2840, column: 19, scope: !8235)
!8241 = !DILocation(line: 2841, column: 13, scope: !8235)
!8242 = !DILocation(line: 2841, column: 19, scope: !8235)
!8243 = !DILocation(line: 2841, column: 11, scope: !8235)
!8244 = !DILocation(line: 2843, column: 6, scope: !8213)
!8245 = !DILocation(line: 2844, column: 4, scope: !8213)
!8246 = !DILocation(line: 2844, column: 13, scope: !8213)
!8247 = !DILocation(line: 2845, column: 9, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8249, file: !1, line: 2845, column: 9)
!8249 = distinct !DILexicalBlock(scope: !8213, file: !1, line: 2844, column: 17)
!8250 = !DILocation(line: 2845, column: 16, scope: !8248)
!8251 = !DILocation(line: 2845, column: 9, scope: !8249)
!8252 = !DILocation(line: 2846, column: 16, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8254, file: !1, line: 2846, column: 10)
!8254 = distinct !DILexicalBlock(scope: !8248, file: !1, line: 2845, column: 25)
!8255 = !DILocation(line: 2846, column: 23, scope: !8253)
!8256 = !DILocation(line: 2846, column: 10, scope: !8253)
!8257 = !DILocation(line: 2846, column: 31, scope: !8253)
!8258 = !DILocation(line: 2846, column: 10, scope: !8254)
!8259 = !DILocation(line: 2847, column: 7, scope: !8260)
!8260 = distinct !DILexicalBlock(scope: !8253, file: !1, line: 2846, column: 43)
!8261 = !DILocation(line: 2847, column: 14, scope: !8260)
!8262 = !DILocation(line: 2847, column: 23, scope: !8260)
!8263 = !DILocation(line: 2848, column: 7, scope: !8260)
!8264 = !DILocation(line: 2848, column: 11, scope: !8260)
!8265 = !DILocation(line: 2848, column: 18, scope: !8260)
!8266 = !DILocation(line: 2849, column: 6, scope: !8260)
!8267 = !DILocation(line: 2850, column: 5, scope: !8254)
!8268 = !DILocation(line: 2852, column: 16, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8270, file: !1, line: 2852, column: 10)
!8270 = distinct !DILexicalBlock(scope: !8248, file: !1, line: 2851, column: 10)
!8271 = !DILocation(line: 2852, column: 23, scope: !8269)
!8272 = !DILocation(line: 2852, column: 32, scope: !8269)
!8273 = !DILocation(line: 2852, column: 39, scope: !8269)
!8274 = !DILocation(line: 2852, column: 30, scope: !8269)
!8275 = !DILocation(line: 2852, column: 10, scope: !8269)
!8276 = !DILocation(line: 2852, column: 47, scope: !8269)
!8277 = !DILocation(line: 2852, column: 10, scope: !8270)
!8278 = !DILocation(line: 2853, column: 17, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8280, file: !1, line: 2853, column: 11)
!8280 = distinct !DILexicalBlock(scope: !8269, file: !1, line: 2852, column: 59)
!8281 = !DILocation(line: 2853, column: 24, scope: !8279)
!8282 = !DILocation(line: 2853, column: 33, scope: !8279)
!8283 = !DILocation(line: 2853, column: 40, scope: !8279)
!8284 = !DILocation(line: 2853, column: 31, scope: !8279)
!8285 = !DILocation(line: 2853, column: 11, scope: !8279)
!8286 = !DILocation(line: 2853, column: 48, scope: !8279)
!8287 = !DILocation(line: 2853, column: 11, scope: !8280)
!8288 = !DILocation(line: 2854, column: 18, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8290, file: !1, line: 2854, column: 12)
!8290 = distinct !DILexicalBlock(scope: !8279, file: !1, line: 2853, column: 60)
!8291 = !DILocation(line: 2854, column: 25, scope: !8289)
!8292 = !DILocation(line: 2854, column: 34, scope: !8289)
!8293 = !DILocation(line: 2854, column: 41, scope: !8289)
!8294 = !DILocation(line: 2854, column: 32, scope: !8289)
!8295 = !DILocation(line: 2854, column: 12, scope: !8289)
!8296 = !DILocation(line: 2854, column: 49, scope: !8289)
!8297 = !DILocation(line: 2854, column: 12, scope: !8290)
!8298 = !DILocation(line: 2855, column: 9, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8289, file: !1, line: 2854, column: 61)
!8300 = !DILocation(line: 2855, column: 16, scope: !8299)
!8301 = !DILocation(line: 2855, column: 25, scope: !8299)
!8302 = !DILocation(line: 2856, column: 9, scope: !8299)
!8303 = !DILocation(line: 2856, column: 13, scope: !8299)
!8304 = !DILocation(line: 2856, column: 20, scope: !8299)
!8305 = !DILocation(line: 2857, column: 8, scope: !8299)
!8306 = !DILocation(line: 2858, column: 7, scope: !8290)
!8307 = !DILocation(line: 2859, column: 6, scope: !8280)
!8308 = !DILocation(line: 2861, column: 13, scope: !8249)
!8309 = !DILocation(line: 2861, column: 11, scope: !8249)
!8310 = !DILocation(line: 2862, column: 10, scope: !8249)
!8311 = distinct !{!8311, !8245, !8312}
!8312 = !DILocation(line: 2863, column: 4, scope: !8213)
!8313 = !DILocation(line: 2864, column: 3, scope: !8213)
!8314 = !DILocation(line: 2865, column: 8, scope: !8209)
!8315 = !DILocation(line: 2865, column: 12, scope: !8209)
!8316 = !DILocation(line: 2865, column: 6, scope: !8209)
!8317 = distinct !{!8317, !8205, !8318}
!8318 = !DILocation(line: 2866, column: 2, scope: !7310)
!8319 = !DILocation(line: 2867, column: 7, scope: !7310)
!8320 = !DILocation(line: 2867, column: 12, scope: !7310)
!8321 = !DILocation(line: 2867, column: 5, scope: !7310)
!8322 = !DILocation(line: 2868, column: 2, scope: !7310)
!8323 = !DILocation(line: 2868, column: 9, scope: !7310)
!8324 = !DILocation(line: 2869, column: 12, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !7310, file: !1, line: 2868, column: 13)
!8326 = !DILocation(line: 2869, column: 16, scope: !8325)
!8327 = !DILocation(line: 2869, column: 10, scope: !8325)
!8328 = !DILocation(line: 2870, column: 7, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8325, file: !1, line: 2870, column: 7)
!8330 = !DILocation(line: 2870, column: 11, scope: !8329)
!8331 = !DILocation(line: 2870, column: 14, scope: !8329)
!8332 = !DILocation(line: 2870, column: 17, scope: !8329)
!8333 = !DILocation(line: 2870, column: 21, scope: !8329)
!8334 = !DILocation(line: 2870, column: 7, scope: !8325)
!8335 = !DILocation(line: 2871, column: 9, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8329, file: !1, line: 2870, column: 30)
!8337 = !DILocation(line: 2871, column: 13, scope: !8336)
!8338 = !DILocation(line: 2871, column: 18, scope: !8336)
!8339 = !DILocation(line: 2871, column: 22, scope: !8336)
!8340 = !DILocation(line: 2871, column: 16, scope: !8336)
!8341 = !DILocation(line: 2871, column: 30, scope: !8336)
!8342 = !DILocation(line: 2871, column: 7, scope: !8336)
!8343 = !DILocation(line: 2872, column: 12, scope: !8336)
!8344 = !DILocation(line: 2872, column: 42, scope: !8336)
!8345 = !DILocation(line: 2872, column: 45, scope: !8336)
!8346 = !DILocation(line: 2872, column: 40, scope: !8336)
!8347 = !DILocation(line: 2872, column: 10, scope: !8336)
!8348 = !DILocation(line: 2873, column: 11, scope: !8336)
!8349 = !DILocation(line: 2873, column: 4, scope: !8336)
!8350 = !DILocation(line: 2873, column: 18, scope: !8336)
!8351 = !DILocation(line: 2874, column: 25, scope: !8336)
!8352 = !DILocation(line: 2874, column: 29, scope: !8336)
!8353 = !DILocation(line: 2874, column: 4, scope: !8336)
!8354 = !DILocation(line: 2874, column: 11, scope: !8336)
!8355 = !DILocation(line: 2874, column: 23, scope: !8336)
!8356 = !DILocation(line: 2875, column: 20, scope: !8336)
!8357 = !DILocation(line: 2875, column: 24, scope: !8336)
!8358 = !DILocation(line: 2875, column: 4, scope: !8336)
!8359 = !DILocation(line: 2875, column: 11, scope: !8336)
!8360 = !DILocation(line: 2875, column: 18, scope: !8336)
!8361 = !DILocation(line: 2876, column: 4, scope: !8336)
!8362 = !DILocation(line: 2876, column: 11, scope: !8336)
!8363 = !DILocation(line: 2876, column: 14, scope: !8336)
!8364 = !DILocation(line: 2877, column: 16, scope: !8336)
!8365 = !DILocation(line: 2877, column: 21, scope: !8336)
!8366 = !DILocation(line: 2877, column: 4, scope: !8336)
!8367 = !DILocation(line: 2878, column: 25, scope: !8336)
!8368 = !DILocation(line: 2878, column: 30, scope: !8336)
!8369 = !DILocation(line: 2878, column: 38, scope: !8336)
!8370 = !DILocation(line: 2878, column: 4, scope: !8336)
!8371 = !DILocation(line: 2879, column: 12, scope: !8336)
!8372 = !DILocation(line: 2879, column: 16, scope: !8336)
!8373 = !DILocation(line: 2879, column: 10, scope: !8336)
!8374 = !DILocation(line: 2880, column: 12, scope: !8336)
!8375 = !DILocation(line: 2880, column: 19, scope: !8336)
!8376 = !DILocation(line: 2880, column: 10, scope: !8336)
!8377 = !DILocation(line: 2881, column: 9, scope: !8336)
!8378 = !DILocation(line: 2881, column: 13, scope: !8336)
!8379 = !DILocation(line: 2881, column: 7, scope: !8336)
!8380 = !DILocation(line: 2882, column: 4, scope: !8336)
!8381 = !DILocation(line: 2882, column: 13, scope: !8336)
!8382 = !DILocation(line: 2883, column: 9, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8384, file: !1, line: 2883, column: 9)
!8384 = distinct !DILexicalBlock(scope: !8336, file: !1, line: 2882, column: 17)
!8385 = !DILocation(line: 2883, column: 16, scope: !8383)
!8386 = !DILocation(line: 2883, column: 25, scope: !8383)
!8387 = !DILocation(line: 2883, column: 9, scope: !8384)
!8388 = !DILocation(line: 2884, column: 13, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8383, file: !1, line: 2883, column: 31)
!8390 = !DILocation(line: 2884, column: 6, scope: !8389)
!8391 = !DILocation(line: 2884, column: 20, scope: !8389)
!8392 = !DILocation(line: 2885, column: 11, scope: !8389)
!8393 = !DILocation(line: 2886, column: 6, scope: !8389)
!8394 = !DILocation(line: 2886, column: 13, scope: !8389)
!8395 = !DILocation(line: 2886, column: 15, scope: !8389)
!8396 = !DILocation(line: 2887, column: 5, scope: !8389)
!8397 = !DILocation(line: 2888, column: 10, scope: !8384)
!8398 = distinct !{!8398, !8380, !8399}
!8399 = !DILocation(line: 2889, column: 4, scope: !8336)
!8400 = !DILocation(line: 2890, column: 4, scope: !8336)
!8401 = !DILocation(line: 2890, column: 14, scope: !8336)
!8402 = !DILocation(line: 2891, column: 4, scope: !8336)
!8403 = !DILocation(line: 2891, column: 11, scope: !8336)
!8404 = !DILocation(line: 2891, column: 19, scope: !8336)
!8405 = !DILocation(line: 2892, column: 3, scope: !8336)
!8406 = !DILocation(line: 2893, column: 8, scope: !8325)
!8407 = !DILocation(line: 2893, column: 6, scope: !8325)
!8408 = distinct !{!8408, !8322, !8409}
!8409 = !DILocation(line: 2894, column: 2, scope: !7310)
!8410 = !DILocation(line: 2897, column: 7, scope: !7310)
!8411 = !DILocation(line: 2897, column: 12, scope: !7310)
!8412 = !DILocation(line: 2897, column: 5, scope: !7310)
!8413 = !DILocation(line: 2898, column: 7, scope: !7310)
!8414 = !DILocation(line: 2899, column: 2, scope: !7310)
!8415 = !DILocation(line: 2899, column: 9, scope: !7310)
!8416 = !DILocation(line: 2900, column: 7, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8418, file: !1, line: 2900, column: 7)
!8418 = distinct !DILexicalBlock(scope: !7310, file: !1, line: 2899, column: 13)
!8419 = !DILocation(line: 2900, column: 11, scope: !8417)
!8420 = !DILocation(line: 2900, column: 14, scope: !8417)
!8421 = !DILocation(line: 2900, column: 17, scope: !8417)
!8422 = !DILocation(line: 2900, column: 21, scope: !8417)
!8423 = !DILocation(line: 2900, column: 26, scope: !8417)
!8424 = !DILocation(line: 2900, column: 7, scope: !8418)
!8425 = !DILocation(line: 2901, column: 8, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8417, file: !1, line: 2900, column: 32)
!8427 = !DILocation(line: 2902, column: 15, scope: !8426)
!8428 = !DILocation(line: 2902, column: 4, scope: !8426)
!8429 = !DILocation(line: 2902, column: 8, scope: !8426)
!8430 = !DILocation(line: 2902, column: 13, scope: !8426)
!8431 = !DILocation(line: 2903, column: 4, scope: !8426)
!8432 = !DILocation(line: 2903, column: 8, scope: !8426)
!8433 = !DILocation(line: 2903, column: 13, scope: !8426)
!8434 = !DILocation(line: 2904, column: 3, scope: !8426)
!8435 = !DILocation(line: 2905, column: 8, scope: !8418)
!8436 = !DILocation(line: 2905, column: 12, scope: !8418)
!8437 = !DILocation(line: 2905, column: 6, scope: !8418)
!8438 = distinct !{!8438, !8414, !8439}
!8439 = !DILocation(line: 2906, column: 2, scope: !7310)
!8440 = !DILocation(line: 2909, column: 6, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !7310, file: !1, line: 2909, column: 6)
!8442 = !DILocation(line: 2909, column: 11, scope: !8441)
!8443 = !DILocation(line: 2909, column: 6, scope: !7310)
!8444 = !DILocation(line: 2910, column: 19, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8441, file: !1, line: 2909, column: 16)
!8446 = !DILocation(line: 2910, column: 58, scope: !8445)
!8447 = !DILocation(line: 2910, column: 56, scope: !8445)
!8448 = !DILocation(line: 2910, column: 17, scope: !8445)
!8449 = !DILocation(line: 2910, column: 6, scope: !8445)
!8450 = !DILocation(line: 2911, column: 8, scope: !8445)
!8451 = !DILocation(line: 2911, column: 13, scope: !8445)
!8452 = !DILocation(line: 2911, column: 6, scope: !8445)
!8453 = !DILocation(line: 2912, column: 3, scope: !8445)
!8454 = !DILocation(line: 2912, column: 10, scope: !8445)
!8455 = !DILocation(line: 2913, column: 8, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8457, file: !1, line: 2913, column: 8)
!8457 = distinct !DILexicalBlock(scope: !8445, file: !1, line: 2912, column: 14)
!8458 = !DILocation(line: 2913, column: 12, scope: !8456)
!8459 = !DILocation(line: 2913, column: 17, scope: !8456)
!8460 = !DILocation(line: 2913, column: 8, scope: !8457)
!8461 = !DILocation(line: 2915, column: 9, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8456, file: !1, line: 2913, column: 22)
!8463 = !DILocation(line: 2916, column: 12, scope: !8462)
!8464 = !DILocation(line: 2916, column: 16, scope: !8462)
!8465 = !DILocation(line: 2916, column: 10, scope: !8462)
!8466 = !DILocation(line: 2917, column: 10, scope: !8462)
!8467 = !DILocation(line: 2917, column: 14, scope: !8462)
!8468 = !DILocation(line: 2917, column: 8, scope: !8462)
!8469 = !DILocation(line: 2918, column: 5, scope: !8462)
!8470 = !DILocation(line: 2918, column: 14, scope: !8462)
!8471 = !DILocation(line: 2919, column: 10, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8473, file: !1, line: 2919, column: 10)
!8473 = distinct !DILexicalBlock(scope: !8462, file: !1, line: 2918, column: 18)
!8474 = !DILocation(line: 2919, column: 16, scope: !8472)
!8475 = !DILocation(line: 2919, column: 22, scope: !8472)
!8476 = !DILocation(line: 2919, column: 14, scope: !8472)
!8477 = !DILocation(line: 2919, column: 10, scope: !8473)
!8478 = !DILocation(line: 2920, column: 13, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8472, file: !1, line: 2919, column: 30)
!8480 = !DILocation(line: 2920, column: 19, scope: !8479)
!8481 = !DILocation(line: 2920, column: 11, scope: !8479)
!8482 = !DILocation(line: 2921, column: 15, scope: !8479)
!8483 = !DILocation(line: 2921, column: 13, scope: !8479)
!8484 = !DILocation(line: 2922, column: 6, scope: !8479)
!8485 = !DILocation(line: 2923, column: 10, scope: !8473)
!8486 = distinct !{!8486, !8469, !8487}
!8487 = !DILocation(line: 2924, column: 5, scope: !8462)
!8488 = !DILocation(line: 2925, column: 14, scope: !8462)
!8489 = !DILocation(line: 2925, column: 5, scope: !8462)
!8490 = !DILocation(line: 2925, column: 9, scope: !8462)
!8491 = !DILocation(line: 2925, column: 12, scope: !8462)
!8492 = !DILocation(line: 2926, column: 16, scope: !8462)
!8493 = !DILocation(line: 2926, column: 5, scope: !8462)
!8494 = !DILocation(line: 2926, column: 9, scope: !8462)
!8495 = !DILocation(line: 2926, column: 14, scope: !8462)
!8496 = !DILocation(line: 2928, column: 12, scope: !8462)
!8497 = !DILocation(line: 2928, column: 16, scope: !8462)
!8498 = !DILocation(line: 2928, column: 10, scope: !8462)
!8499 = !DILocation(line: 2929, column: 9, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8462, file: !1, line: 2929, column: 9)
!8501 = !DILocation(line: 2929, column: 18, scope: !8500)
!8502 = !DILocation(line: 2929, column: 15, scope: !8500)
!8503 = !DILocation(line: 2929, column: 9, scope: !8462)
!8504 = !DILocation(line: 2930, column: 14, scope: !8500)
!8505 = !DILocation(line: 2930, column: 22, scope: !8500)
!8506 = !DILocation(line: 2930, column: 26, scope: !8500)
!8507 = !DILocation(line: 2930, column: 29, scope: !8500)
!8508 = !DILocation(line: 2930, column: 19, scope: !8500)
!8509 = !DILocation(line: 2930, column: 12, scope: !8500)
!8510 = !DILocation(line: 2930, column: 6, scope: !8500)
!8511 = !DILocation(line: 2932, column: 14, scope: !8500)
!8512 = !DILocation(line: 2932, column: 20, scope: !8500)
!8513 = !DILocation(line: 2932, column: 12, scope: !8500)
!8514 = !DILocation(line: 2933, column: 12, scope: !8462)
!8515 = !DILocation(line: 2933, column: 20, scope: !8462)
!8516 = !DILocation(line: 2933, column: 24, scope: !8462)
!8517 = !DILocation(line: 2933, column: 27, scope: !8462)
!8518 = !DILocation(line: 2933, column: 17, scope: !8462)
!8519 = !DILocation(line: 2933, column: 10, scope: !8462)
!8520 = !DILocation(line: 2934, column: 9, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8462, file: !1, line: 2934, column: 9)
!8522 = !DILocation(line: 2934, column: 18, scope: !8521)
!8523 = !DILocation(line: 2934, column: 15, scope: !8521)
!8524 = !DILocation(line: 2934, column: 9, scope: !8462)
!8525 = !DILocation(line: 2935, column: 14, scope: !8521)
!8526 = !DILocation(line: 2935, column: 18, scope: !8521)
!8527 = !DILocation(line: 2935, column: 12, scope: !8521)
!8528 = !DILocation(line: 2935, column: 6, scope: !8521)
!8529 = !DILocation(line: 2937, column: 14, scope: !8521)
!8530 = !DILocation(line: 2937, column: 20, scope: !8521)
!8531 = !DILocation(line: 2937, column: 12, scope: !8521)
!8532 = !DILocation(line: 2939, column: 13, scope: !8462)
!8533 = !DILocation(line: 2939, column: 20, scope: !8462)
!8534 = !DILocation(line: 2939, column: 29, scope: !8462)
!8535 = !DILocation(line: 2939, column: 36, scope: !8462)
!8536 = !DILocation(line: 2939, column: 27, scope: !8462)
!8537 = !DILocation(line: 2939, column: 47, scope: !8462)
!8538 = !DILocation(line: 2939, column: 54, scope: !8462)
!8539 = !DILocation(line: 2939, column: 63, scope: !8462)
!8540 = !DILocation(line: 2939, column: 70, scope: !8462)
!8541 = !DILocation(line: 2939, column: 61, scope: !8462)
!8542 = !DILocation(line: 2939, column: 44, scope: !8462)
!8543 = !DILocation(line: 2940, column: 13, scope: !8462)
!8544 = !DILocation(line: 2940, column: 20, scope: !8462)
!8545 = !DILocation(line: 2940, column: 29, scope: !8462)
!8546 = !DILocation(line: 2940, column: 36, scope: !8462)
!8547 = !DILocation(line: 2940, column: 27, scope: !8462)
!8548 = !DILocation(line: 2940, column: 47, scope: !8462)
!8549 = !DILocation(line: 2940, column: 54, scope: !8462)
!8550 = !DILocation(line: 2940, column: 63, scope: !8462)
!8551 = !DILocation(line: 2940, column: 70, scope: !8462)
!8552 = !DILocation(line: 2940, column: 61, scope: !8462)
!8553 = !DILocation(line: 2940, column: 44, scope: !8462)
!8554 = !DILocation(line: 2939, column: 78, scope: !8462)
!8555 = !DILocation(line: 2939, column: 9, scope: !8462)
!8556 = !DILocation(line: 2942, column: 9, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8462, file: !1, line: 2942, column: 9)
!8558 = !DILocation(line: 2942, column: 13, scope: !8557)
!8559 = !DILocation(line: 2942, column: 9, scope: !8462)
!8560 = !DILocation(line: 2943, column: 6, scope: !8557)
!8561 = !DILocation(line: 2943, column: 10, scope: !8557)
!8562 = !DILocation(line: 2943, column: 14, scope: !8557)
!8563 = !DILocation(line: 2945, column: 6, scope: !8557)
!8564 = !DILocation(line: 2945, column: 10, scope: !8557)
!8565 = !DILocation(line: 2945, column: 14, scope: !8557)
!8566 = !DILocation(line: 2947, column: 7, scope: !8462)
!8567 = !DILocation(line: 2948, column: 4, scope: !8462)
!8568 = !DILocation(line: 2950, column: 9, scope: !8457)
!8569 = !DILocation(line: 2950, column: 13, scope: !8457)
!8570 = !DILocation(line: 2950, column: 7, scope: !8457)
!8571 = distinct !{!8571, !8453, !8572}
!8572 = !DILocation(line: 2951, column: 3, scope: !8445)
!8573 = !DILocation(line: 2952, column: 9, scope: !8445)
!8574 = !DILocation(line: 2952, column: 19, scope: !8445)
!8575 = !DILocation(line: 2952, column: 3, scope: !8445)
!8576 = !DILocation(line: 2954, column: 8, scope: !8445)
!8577 = !DILocation(line: 2954, column: 17, scope: !8445)
!8578 = !DILocation(line: 2954, column: 6, scope: !8445)
!8579 = !DILocation(line: 2955, column: 10, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8445, file: !1, line: 2955, column: 3)
!8581 = !DILocation(line: 2955, column: 8, scope: !8580)
!8582 = !DILocation(line: 2955, column: 15, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8580, file: !1, line: 2955, column: 3)
!8584 = !DILocation(line: 2955, column: 19, scope: !8583)
!8585 = !DILocation(line: 2955, column: 17, scope: !8583)
!8586 = !DILocation(line: 2955, column: 3, scope: !8580)
!8587 = !DILocation(line: 2956, column: 9, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8583, file: !1, line: 2955, column: 36)
!8589 = !DILocation(line: 2956, column: 13, scope: !8588)
!8590 = !DILocation(line: 2956, column: 7, scope: !8588)
!8591 = !DILocation(line: 2957, column: 10, scope: !8588)
!8592 = !DILocation(line: 2957, column: 22, scope: !8588)
!8593 = !DILocation(line: 2957, column: 24, scope: !8588)
!8594 = !DILocation(line: 2957, column: 19, scope: !8588)
!8595 = !DILocation(line: 2957, column: 8, scope: !8588)
!8596 = !DILocation(line: 2958, column: 13, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8588, file: !1, line: 2958, column: 4)
!8598 = !DILocation(line: 2958, column: 15, scope: !8597)
!8599 = !DILocation(line: 2958, column: 11, scope: !8597)
!8600 = !DILocation(line: 2958, column: 9, scope: !8597)
!8601 = !DILocation(line: 2958, column: 20, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8597, file: !1, line: 2958, column: 4)
!8603 = !DILocation(line: 2958, column: 22, scope: !8602)
!8604 = !DILocation(line: 2958, column: 4, scope: !8597)
!8605 = !DILocation(line: 2959, column: 9, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8607, file: !1, line: 2959, column: 9)
!8607 = distinct !DILexicalBlock(scope: !8602, file: !1, line: 2958, column: 40)
!8608 = !DILocation(line: 2959, column: 14, scope: !8606)
!8609 = !DILocation(line: 2959, column: 18, scope: !8606)
!8610 = !DILocation(line: 2959, column: 29, scope: !8606)
!8611 = !DILocation(line: 2959, column: 33, scope: !8606)
!8612 = !DILocation(line: 2959, column: 26, scope: !8606)
!8613 = !DILocation(line: 2959, column: 9, scope: !8607)
!8614 = !DILocation(line: 2960, column: 22, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8616, file: !1, line: 2960, column: 10)
!8616 = distinct !DILexicalBlock(scope: !8606, file: !1, line: 2959, column: 42)
!8617 = !DILocation(line: 2960, column: 27, scope: !8615)
!8618 = !DILocation(line: 2960, column: 31, scope: !8615)
!8619 = !DILocation(line: 2960, column: 10, scope: !8615)
!8620 = !DILocation(line: 2960, column: 10, scope: !8616)
!8621 = !DILocation(line: 2961, column: 22, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8615, file: !1, line: 2960, column: 36)
!8623 = !DILocation(line: 2961, column: 27, scope: !8622)
!8624 = !DILocation(line: 2961, column: 31, scope: !8622)
!8625 = !DILocation(line: 2961, column: 20, scope: !8622)
!8626 = !DILocation(line: 2961, column: 7, scope: !8622)
!8627 = !DILocation(line: 2961, column: 11, scope: !8622)
!8628 = !DILocation(line: 2961, column: 16, scope: !8622)
!8629 = !DILocation(line: 2962, column: 7, scope: !8622)
!8630 = !DILocation(line: 2964, column: 5, scope: !8616)
!8631 = !DILocation(line: 2965, column: 4, scope: !8607)
!8632 = !DILocation(line: 2958, column: 29, scope: !8602)
!8633 = !DILocation(line: 2958, column: 36, scope: !8602)
!8634 = !DILocation(line: 2958, column: 4, scope: !8602)
!8635 = distinct !{!8635, !8604, !8636}
!8636 = !DILocation(line: 2965, column: 4, scope: !8597)
!8637 = !DILocation(line: 2966, column: 3, scope: !8588)
!8638 = !DILocation(line: 2955, column: 26, scope: !8583)
!8639 = !DILocation(line: 2955, column: 32, scope: !8583)
!8640 = !DILocation(line: 2955, column: 3, scope: !8583)
!8641 = distinct !{!8641, !8586, !8642}
!8642 = !DILocation(line: 2966, column: 3, scope: !8580)
!8643 = !DILocation(line: 2969, column: 8, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8445, file: !1, line: 2969, column: 7)
!8645 = !DILocation(line: 2969, column: 12, scope: !8644)
!8646 = !DILocation(line: 2969, column: 17, scope: !8644)
!8647 = !DILocation(line: 2969, column: 26, scope: !8644)
!8648 = !DILocation(line: 2969, column: 7, scope: !8445)
!8649 = !DILocation(line: 2970, column: 9, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8644, file: !1, line: 2969, column: 32)
!8651 = !DILocation(line: 2970, column: 7, scope: !8650)
!8652 = !DILocation(line: 2971, column: 11, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8650, file: !1, line: 2971, column: 4)
!8654 = !DILocation(line: 2971, column: 9, scope: !8653)
!8655 = !DILocation(line: 2971, column: 16, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8653, file: !1, line: 2971, column: 4)
!8657 = !DILocation(line: 2971, column: 20, scope: !8656)
!8658 = !DILocation(line: 2971, column: 18, scope: !8656)
!8659 = !DILocation(line: 2971, column: 4, scope: !8653)
!8660 = !DILocation(line: 2972, column: 9, scope: !8661)
!8661 = distinct !DILexicalBlock(scope: !8662, file: !1, line: 2972, column: 9)
!8662 = distinct !DILexicalBlock(scope: !8656, file: !1, line: 2971, column: 37)
!8663 = !DILocation(line: 2972, column: 13, scope: !8661)
!8664 = !DILocation(line: 2972, column: 17, scope: !8661)
!8665 = !DILocation(line: 2972, column: 25, scope: !8661)
!8666 = !DILocation(line: 2972, column: 29, scope: !8661)
!8667 = !DILocation(line: 2972, column: 22, scope: !8661)
!8668 = !DILocation(line: 2972, column: 9, scope: !8662)
!8669 = !DILocation(line: 2973, column: 11, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8661, file: !1, line: 2972, column: 34)
!8671 = !DILocation(line: 2973, column: 15, scope: !8670)
!8672 = !DILocation(line: 2973, column: 9, scope: !8670)
!8673 = !DILocation(line: 2974, column: 14, scope: !8670)
!8674 = !DILocation(line: 2974, column: 18, scope: !8670)
!8675 = !DILocation(line: 2974, column: 12, scope: !8670)
!8676 = !DILocation(line: 2975, column: 14, scope: !8670)
!8677 = !DILocation(line: 2975, column: 23, scope: !8670)
!8678 = !DILocation(line: 2975, column: 27, scope: !8670)
!8679 = !DILocation(line: 2975, column: 30, scope: !8670)
!8680 = !DILocation(line: 2975, column: 20, scope: !8670)
!8681 = !DILocation(line: 2975, column: 12, scope: !8670)
!8682 = !DILocation(line: 2976, column: 11, scope: !8670)
!8683 = !DILocation(line: 2976, column: 15, scope: !8670)
!8684 = !DILocation(line: 2976, column: 18, scope: !8670)
!8685 = !DILocation(line: 2976, column: 9, scope: !8670)
!8686 = !DILocation(line: 2977, column: 6, scope: !8670)
!8687 = !DILocation(line: 2977, column: 15, scope: !8670)
!8688 = !DILocalVariable(name: "sw_ap", scope: !8689, file: !1, line: 2978, type: !7242)
!8689 = distinct !DILexicalBlock(scope: !8690, file: !1, line: 2978, column: 7)
!8690 = distinct !DILexicalBlock(scope: !8670, file: !1, line: 2977, column: 19)
!8691 = !DILocation(line: 2978, column: 7, scope: !8689)
!8692 = !DILocation(line: 2979, column: 12, scope: !8690)
!8693 = !DILocation(line: 2980, column: 12, scope: !8690)
!8694 = distinct !{!8694, !8686, !8695}
!8695 = !DILocation(line: 2981, column: 6, scope: !8670)
!8696 = !DILocation(line: 2982, column: 5, scope: !8670)
!8697 = !DILocation(line: 2983, column: 4, scope: !8662)
!8698 = !DILocation(line: 2971, column: 27, scope: !8656)
!8699 = !DILocation(line: 2971, column: 33, scope: !8656)
!8700 = !DILocation(line: 2971, column: 4, scope: !8656)
!8701 = distinct !{!8701, !8659, !8702}
!8702 = !DILocation(line: 2983, column: 4, scope: !8653)
!8703 = !DILocation(line: 2984, column: 3, scope: !8650)
!8704 = !DILocation(line: 2985, column: 3, scope: !8445)
!8705 = !DILocation(line: 2985, column: 13, scope: !8445)
!8706 = !DILocation(line: 2986, column: 2, scope: !8445)
!8707 = !DILocation(line: 2989, column: 7, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !7310, file: !1, line: 2989, column: 6)
!8709 = !DILocation(line: 2989, column: 11, scope: !8708)
!8710 = !DILocation(line: 2989, column: 16, scope: !8708)
!8711 = !DILocation(line: 2989, column: 25, scope: !8708)
!8712 = !DILocation(line: 2989, column: 6, scope: !7310)
!8713 = !DILocation(line: 2991, column: 13, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8715, file: !1, line: 2991, column: 3)
!8715 = distinct !DILexicalBlock(scope: !8708, file: !1, line: 2989, column: 31)
!8716 = !DILocation(line: 2991, column: 18, scope: !8714)
!8717 = !DILocation(line: 2991, column: 11, scope: !8714)
!8718 = !DILocation(line: 2991, column: 8, scope: !8714)
!8719 = !DILocation(line: 2991, column: 25, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8714, file: !1, line: 2991, column: 3)
!8721 = !DILocation(line: 2991, column: 3, scope: !8714)
!8722 = !DILocation(line: 2992, column: 8, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8724, file: !1, line: 2992, column: 8)
!8724 = distinct !DILexicalBlock(scope: !8720, file: !1, line: 2991, column: 44)
!8725 = !DILocation(line: 2992, column: 12, scope: !8723)
!8726 = !DILocation(line: 2992, column: 15, scope: !8723)
!8727 = !DILocation(line: 2992, column: 8, scope: !8724)
!8728 = !DILocalVariable(name: "bevp", scope: !8729, file: !1, line: 2993, type: !7338)
!8729 = distinct !DILexicalBlock(scope: !8723, file: !1, line: 2992, column: 20)
!8730 = !DILocation(line: 2993, column: 15, scope: !8729)
!8731 = !DILocation(line: 2993, column: 22, scope: !8729)
!8732 = !DILocation(line: 2993, column: 26, scope: !8729)
!8733 = !DILocation(line: 2994, column: 13, scope: !8729)
!8734 = !DILocation(line: 2994, column: 19, scope: !8729)
!8735 = !DILocation(line: 2994, column: 5, scope: !8729)
!8736 = !DILocation(line: 2995, column: 4, scope: !8729)
!8737 = !DILocation(line: 2996, column: 13, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8723, file: !1, line: 2996, column: 13)
!8739 = !DILocation(line: 2996, column: 17, scope: !8738)
!8740 = !DILocation(line: 2996, column: 20, scope: !8738)
!8741 = !DILocation(line: 2996, column: 13, scope: !8723)
!8742 = !DILocation(line: 2997, column: 32, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8738, file: !1, line: 2996, column: 26)
!8744 = !DILocation(line: 2997, column: 5, scope: !8743)
!8745 = !DILocation(line: 2998, column: 4, scope: !8743)
!8746 = !DILocation(line: 3000, column: 24, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8738, file: !1, line: 2999, column: 9)
!8748 = !DILocation(line: 3000, column: 5, scope: !8747)
!8749 = !DILocation(line: 3002, column: 3, scope: !8724)
!8750 = !DILocation(line: 2991, column: 34, scope: !8720)
!8751 = !DILocation(line: 2991, column: 38, scope: !8720)
!8752 = !DILocation(line: 2991, column: 32, scope: !8720)
!8753 = !DILocation(line: 2991, column: 3, scope: !8720)
!8754 = distinct !{!8754, !8721, !8755}
!8755 = !DILocation(line: 3002, column: 3, scope: !8714)
!8756 = !DILocation(line: 3003, column: 2, scope: !8715)
!8757 = !DILocation(line: 3006, column: 13, scope: !8758)
!8758 = distinct !DILexicalBlock(scope: !8759, file: !1, line: 3006, column: 3)
!8759 = distinct !DILexicalBlock(scope: !8708, file: !1, line: 3004, column: 7)
!8760 = !DILocation(line: 3006, column: 18, scope: !8758)
!8761 = !DILocation(line: 3006, column: 11, scope: !8758)
!8762 = !DILocation(line: 3006, column: 8, scope: !8758)
!8763 = !DILocation(line: 3006, column: 25, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8758, file: !1, line: 3006, column: 3)
!8765 = !DILocation(line: 3006, column: 3, scope: !8758)
!8766 = !DILocation(line: 3007, column: 8, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8768, file: !1, line: 3007, column: 8)
!8768 = distinct !DILexicalBlock(scope: !8764, file: !1, line: 3006, column: 44)
!8769 = !DILocation(line: 3007, column: 12, scope: !8767)
!8770 = !DILocation(line: 3007, column: 15, scope: !8767)
!8771 = !DILocation(line: 3007, column: 8, scope: !8768)
!8772 = !DILocalVariable(name: "bevp", scope: !8773, file: !1, line: 3008, type: !7338)
!8773 = distinct !DILexicalBlock(scope: !8767, file: !1, line: 3007, column: 20)
!8774 = !DILocation(line: 3008, column: 15, scope: !8773)
!8775 = !DILocation(line: 3008, column: 22, scope: !8773)
!8776 = !DILocation(line: 3008, column: 26, scope: !8773)
!8777 = !DILocation(line: 3009, column: 13, scope: !8773)
!8778 = !DILocation(line: 3009, column: 19, scope: !8773)
!8779 = !DILocation(line: 3009, column: 5, scope: !8773)
!8780 = !DILocation(line: 3010, column: 4, scope: !8773)
!8781 = !DILocation(line: 3011, column: 13, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8767, file: !1, line: 3011, column: 13)
!8783 = !DILocation(line: 3011, column: 17, scope: !8782)
!8784 = !DILocation(line: 3011, column: 20, scope: !8782)
!8785 = !DILocation(line: 3011, column: 13, scope: !8767)
!8786 = !DILocation(line: 3012, column: 32, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8782, file: !1, line: 3011, column: 26)
!8788 = !DILocation(line: 3012, column: 5, scope: !8787)
!8789 = !DILocation(line: 3013, column: 4, scope: !8787)
!8790 = !DILocation(line: 3015, column: 24, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8782, file: !1, line: 3014, column: 9)
!8792 = !DILocation(line: 3015, column: 34, scope: !8791)
!8793 = !DILocation(line: 3015, column: 43, scope: !8791)
!8794 = !DILocation(line: 3015, column: 47, scope: !8791)
!8795 = !DILocation(line: 3015, column: 41, scope: !8791)
!8796 = !DILocation(line: 3015, column: 28, scope: !8791)
!8797 = !DILocation(line: 3015, column: 62, scope: !8791)
!8798 = !DILocation(line: 3015, column: 66, scope: !8791)
!8799 = !DILocation(line: 3015, column: 5, scope: !8791)
!8800 = !DILocation(line: 3017, column: 3, scope: !8768)
!8801 = !DILocation(line: 3006, column: 34, scope: !8764)
!8802 = !DILocation(line: 3006, column: 38, scope: !8764)
!8803 = !DILocation(line: 3006, column: 32, scope: !8764)
!8804 = !DILocation(line: 3006, column: 3, scope: !8764)
!8805 = distinct !{!8805, !8765, !8806}
!8806 = !DILocation(line: 3017, column: 3, scope: !8758)
!8807 = !DILocation(line: 3019, column: 1, scope: !7310)
!8808 = distinct !DISubprogram(name: "BKE_nurb_check_valid_u", scope: !1, file: !1, line: 3916, type: !8809, scopeLine: 3917, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!8809 = !DISubroutineType(types: !8810)
!8810 = !{!551, !1787}
!8811 = !DILocalVariable(name: "nu", arg: 1, scope: !8808, file: !1, line: 3916, type: !1787)
!8812 = !DILocation(line: 3916, column: 42, scope: !8808)
!8813 = !DILocation(line: 3918, column: 6, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8808, file: !1, line: 3918, column: 6)
!8815 = !DILocation(line: 3918, column: 10, scope: !8814)
!8816 = !DILocation(line: 3918, column: 16, scope: !8814)
!8817 = !DILocation(line: 3918, column: 6, scope: !8808)
!8818 = !DILocation(line: 3919, column: 3, scope: !8814)
!8819 = !DILocation(line: 3920, column: 6, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8808, file: !1, line: 3920, column: 6)
!8821 = !DILocation(line: 3920, column: 10, scope: !8820)
!8822 = !DILocation(line: 3920, column: 15, scope: !8820)
!8823 = !DILocation(line: 3920, column: 6, scope: !8808)
!8824 = !DILocation(line: 3921, column: 3, scope: !8820)
!8825 = !DILocation(line: 3923, column: 6, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8808, file: !1, line: 3923, column: 6)
!8827 = !DILocation(line: 3923, column: 10, scope: !8826)
!8828 = !DILocation(line: 3923, column: 18, scope: !8826)
!8829 = !DILocation(line: 3923, column: 22, scope: !8826)
!8830 = !DILocation(line: 3923, column: 16, scope: !8826)
!8831 = !DILocation(line: 3923, column: 6, scope: !8808)
!8832 = !DILocation(line: 3923, column: 30, scope: !8826)
!8833 = !DILocation(line: 3924, column: 8, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8808, file: !1, line: 3924, column: 6)
!8835 = !DILocation(line: 3924, column: 12, scope: !8834)
!8836 = !DILocation(line: 3924, column: 17, scope: !8834)
!8837 = !DILocation(line: 3924, column: 35, scope: !8834)
!8838 = !DILocation(line: 3924, column: 41, scope: !8834)
!8839 = !DILocation(line: 3924, column: 45, scope: !8834)
!8840 = !DILocation(line: 3924, column: 49, scope: !8834)
!8841 = !DILocation(line: 3924, column: 55, scope: !8834)
!8842 = !DILocation(line: 3924, column: 6, scope: !8808)
!8843 = !DILocation(line: 3925, column: 7, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !1, line: 3925, column: 7)
!8845 = distinct !DILexicalBlock(scope: !8834, file: !1, line: 3924, column: 74)
!8846 = !DILocation(line: 3925, column: 11, scope: !8844)
!8847 = !DILocation(line: 3925, column: 18, scope: !8844)
!8848 = !DILocation(line: 3925, column: 7, scope: !8845)
!8849 = !DILocation(line: 3926, column: 8, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8851, file: !1, line: 3926, column: 8)
!8851 = distinct !DILexicalBlock(scope: !8844, file: !1, line: 3925, column: 24)
!8852 = !DILocation(line: 3926, column: 12, scope: !8850)
!8853 = !DILocation(line: 3926, column: 18, scope: !8850)
!8854 = !DILocation(line: 3926, column: 8, scope: !8851)
!8855 = !DILocation(line: 3927, column: 5, scope: !8850)
!8856 = !DILocation(line: 3928, column: 3, scope: !8851)
!8857 = !DILocation(line: 3930, column: 8, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8859, file: !1, line: 3930, column: 8)
!8859 = distinct !DILexicalBlock(scope: !8844, file: !1, line: 3929, column: 8)
!8860 = !DILocation(line: 3930, column: 12, scope: !8858)
!8861 = !DILocation(line: 3930, column: 19, scope: !8858)
!8862 = !DILocation(line: 3930, column: 8, scope: !8859)
!8863 = !DILocation(line: 3931, column: 5, scope: !8858)
!8864 = !DILocation(line: 3933, column: 2, scope: !8845)
!8865 = !DILocation(line: 3934, column: 2, scope: !8808)
!8866 = !DILocation(line: 3935, column: 1, scope: !8808)
!8867 = distinct !DISubprogram(name: "len_v3v3", scope: !2341, file: !2341, line: 759, type: !8868, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!8868 = !DISubroutineType(types: !8869)
!8869 = !{!128, !3191, !3191}
!8870 = !DILocalVariable(name: "a", arg: 1, scope: !8867, file: !2341, line: 759, type: !3191)
!8871 = !DILocation(line: 759, column: 36, scope: !8867)
!8872 = !DILocalVariable(name: "b", arg: 2, scope: !8867, file: !2341, line: 759, type: !3191)
!8873 = !DILocation(line: 759, column: 54, scope: !8867)
!8874 = !DILocalVariable(name: "d", scope: !8867, file: !2341, line: 761, type: !201)
!8875 = !DILocation(line: 761, column: 8, scope: !8867)
!8876 = !DILocation(line: 763, column: 14, scope: !8867)
!8877 = !DILocation(line: 763, column: 17, scope: !8867)
!8878 = !DILocation(line: 763, column: 20, scope: !8867)
!8879 = !DILocation(line: 763, column: 2, scope: !8867)
!8880 = !DILocation(line: 764, column: 16, scope: !8867)
!8881 = !DILocation(line: 764, column: 9, scope: !8867)
!8882 = !DILocation(line: 764, column: 2, scope: !8867)
!8883 = distinct !DISubprogram(name: "bevlist_firstlast_direction_calc_from_bpoint", scope: !1, file: !1, line: 2486, type: !8884, scopeLine: 2487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!8884 = !DISubroutineType(types: !8885)
!8885 = !{null, !1782, !7226}
!8886 = !DILocalVariable(name: "nu", arg: 1, scope: !8883, file: !1, line: 2486, type: !1782)
!8887 = !DILocation(line: 2486, column: 64, scope: !8883)
!8888 = !DILocalVariable(name: "bl", arg: 2, scope: !8883, file: !1, line: 2486, type: !7226)
!8889 = !DILocation(line: 2486, column: 77, scope: !8883)
!8890 = !DILocation(line: 2488, column: 6, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8883, file: !1, line: 2488, column: 6)
!8892 = !DILocation(line: 2488, column: 10, scope: !8891)
!8893 = !DILocation(line: 2488, column: 16, scope: !8891)
!8894 = !DILocation(line: 2488, column: 6, scope: !8883)
!8895 = !DILocalVariable(name: "first_bp", scope: !8896, file: !1, line: 2489, type: !1805)
!8896 = distinct !DILexicalBlock(scope: !8891, file: !1, line: 2488, column: 21)
!8897 = !DILocation(line: 2489, column: 11, scope: !8896)
!8898 = !DILocation(line: 2489, column: 22, scope: !8896)
!8899 = !DILocation(line: 2489, column: 26, scope: !8896)
!8900 = !DILocalVariable(name: "last_bp", scope: !8896, file: !1, line: 2489, type: !1805)
!8901 = !DILocation(line: 2489, column: 31, scope: !8896)
!8902 = !DILocation(line: 2489, column: 41, scope: !8896)
!8903 = !DILocation(line: 2489, column: 45, scope: !8896)
!8904 = !DILocation(line: 2489, column: 51, scope: !8896)
!8905 = !DILocation(line: 2489, column: 55, scope: !8896)
!8906 = !DILocation(line: 2489, column: 61, scope: !8896)
!8907 = !DILocation(line: 2489, column: 48, scope: !8896)
!8908 = !DILocalVariable(name: "first_bevp", scope: !8896, file: !1, line: 2490, type: !7338)
!8909 = !DILocation(line: 2490, column: 13, scope: !8896)
!8910 = !DILocalVariable(name: "last_bevp", scope: !8896, file: !1, line: 2490, type: !7338)
!8911 = !DILocation(line: 2490, column: 26, scope: !8896)
!8912 = !DILocation(line: 2492, column: 16, scope: !8896)
!8913 = !DILocation(line: 2492, column: 20, scope: !8896)
!8914 = !DILocation(line: 2492, column: 14, scope: !8896)
!8915 = !DILocation(line: 2493, column: 15, scope: !8896)
!8916 = !DILocation(line: 2493, column: 29, scope: !8896)
!8917 = !DILocation(line: 2493, column: 33, scope: !8896)
!8918 = !DILocation(line: 2493, column: 36, scope: !8896)
!8919 = !DILocation(line: 2493, column: 26, scope: !8896)
!8920 = !DILocation(line: 2493, column: 13, scope: !8896)
!8921 = !DILocation(line: 2495, column: 15, scope: !8896)
!8922 = !DILocation(line: 2495, column: 27, scope: !8896)
!8923 = !DILocation(line: 2495, column: 33, scope: !8896)
!8924 = !DILocation(line: 2495, column: 42, scope: !8896)
!8925 = !DILocation(line: 2495, column: 48, scope: !8896)
!8926 = !DILocation(line: 2495, column: 32, scope: !8896)
!8927 = !DILocation(line: 2495, column: 53, scope: !8896)
!8928 = !DILocation(line: 2495, column: 63, scope: !8896)
!8929 = !DILocation(line: 2495, column: 3, scope: !8896)
!8930 = !DILocation(line: 2496, column: 16, scope: !8896)
!8931 = !DILocation(line: 2496, column: 28, scope: !8896)
!8932 = !DILocation(line: 2496, column: 3, scope: !8896)
!8933 = !DILocation(line: 2498, column: 15, scope: !8896)
!8934 = !DILocation(line: 2498, column: 26, scope: !8896)
!8935 = !DILocation(line: 2498, column: 31, scope: !8896)
!8936 = !DILocation(line: 2498, column: 40, scope: !8896)
!8937 = !DILocation(line: 2498, column: 46, scope: !8896)
!8938 = !DILocation(line: 2498, column: 54, scope: !8896)
!8939 = !DILocation(line: 2498, column: 60, scope: !8896)
!8940 = !DILocation(line: 2498, column: 45, scope: !8896)
!8941 = !DILocation(line: 2498, column: 3, scope: !8896)
!8942 = !DILocation(line: 2499, column: 16, scope: !8896)
!8943 = !DILocation(line: 2499, column: 27, scope: !8896)
!8944 = !DILocation(line: 2499, column: 3, scope: !8896)
!8945 = !DILocation(line: 2500, column: 2, scope: !8896)
!8946 = !DILocation(line: 2501, column: 1, scope: !8883)
!8947 = distinct !DISubprogram(name: "alfa_bezpart", scope: !1, file: !1, line: 1963, type: !8948, scopeLine: 1965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!8948 = !DISubroutineType(types: !8949)
!8949 = !{null, !1817, !1817, !1782, !1325, !1325, !1325, !79, !79}
!8950 = !DILocalVariable(name: "prevbezt", arg: 1, scope: !8947, file: !1, line: 1963, type: !1817)
!8951 = !DILocation(line: 1963, column: 37, scope: !8947)
!8952 = !DILocalVariable(name: "bezt", arg: 2, scope: !8947, file: !1, line: 1963, type: !1817)
!8953 = !DILocation(line: 1963, column: 58, scope: !8947)
!8954 = !DILocalVariable(name: "nu", arg: 3, scope: !8947, file: !1, line: 1963, type: !1782)
!8955 = !DILocation(line: 1963, column: 70, scope: !8947)
!8956 = !DILocalVariable(name: "tilt_array", arg: 4, scope: !8947, file: !1, line: 1963, type: !1325)
!8957 = !DILocation(line: 1963, column: 81, scope: !8947)
!8958 = !DILocalVariable(name: "radius_array", arg: 5, scope: !8947, file: !1, line: 1963, type: !1325)
!8959 = !DILocation(line: 1963, column: 100, scope: !8947)
!8960 = !DILocalVariable(name: "weight_array", arg: 6, scope: !8947, file: !1, line: 1964, type: !1325)
!8961 = !DILocation(line: 1964, column: 33, scope: !8947)
!8962 = !DILocalVariable(name: "resolu", arg: 7, scope: !8947, file: !1, line: 1964, type: !79)
!8963 = !DILocation(line: 1964, column: 51, scope: !8947)
!8964 = !DILocalVariable(name: "stride", arg: 8, scope: !8947, file: !1, line: 1964, type: !79)
!8965 = !DILocation(line: 1964, column: 63, scope: !8947)
!8966 = !DILocalVariable(name: "pprev", scope: !8947, file: !1, line: 1966, type: !1817)
!8967 = !DILocation(line: 1966, column: 13, scope: !8947)
!8968 = !DILocalVariable(name: "next", scope: !8947, file: !1, line: 1966, type: !1817)
!8969 = !DILocation(line: 1966, column: 21, scope: !8947)
!8970 = !DILocalVariable(name: "last", scope: !8947, file: !1, line: 1966, type: !1817)
!8971 = !DILocation(line: 1966, column: 28, scope: !8947)
!8972 = !DILocalVariable(name: "fac", scope: !8947, file: !1, line: 1967, type: !128)
!8973 = !DILocation(line: 1967, column: 8, scope: !8947)
!8974 = !DILocalVariable(name: "dfac", scope: !8947, file: !1, line: 1967, type: !128)
!8975 = !DILocation(line: 1967, column: 13, scope: !8947)
!8976 = !DILocalVariable(name: "t", scope: !8947, file: !1, line: 1967, type: !378)
!8977 = !DILocation(line: 1967, column: 19, scope: !8947)
!8978 = !DILocalVariable(name: "a", scope: !8947, file: !1, line: 1968, type: !79)
!8979 = !DILocation(line: 1968, column: 6, scope: !8947)
!8980 = !DILocation(line: 1970, column: 6, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8947, file: !1, line: 1970, column: 6)
!8982 = !DILocation(line: 1970, column: 17, scope: !8981)
!8983 = !DILocation(line: 1970, column: 25, scope: !8981)
!8984 = !DILocation(line: 1970, column: 28, scope: !8981)
!8985 = !DILocation(line: 1970, column: 41, scope: !8981)
!8986 = !DILocation(line: 1970, column: 6, scope: !8947)
!8987 = !DILocation(line: 1971, column: 3, scope: !8981)
!8988 = !DILocation(line: 1973, column: 9, scope: !8947)
!8989 = !DILocation(line: 1973, column: 13, scope: !8947)
!8990 = !DILocation(line: 1973, column: 21, scope: !8947)
!8991 = !DILocation(line: 1973, column: 25, scope: !8947)
!8992 = !DILocation(line: 1973, column: 31, scope: !8947)
!8993 = !DILocation(line: 1973, column: 18, scope: !8947)
!8994 = !DILocation(line: 1973, column: 7, scope: !8947)
!8995 = !DILocation(line: 1976, column: 6, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8947, file: !1, line: 1976, column: 6)
!8997 = !DILocation(line: 1976, column: 18, scope: !8996)
!8998 = !DILocation(line: 1976, column: 22, scope: !8996)
!8999 = !DILocation(line: 1976, column: 15, scope: !8996)
!9000 = !DILocation(line: 1976, column: 6, scope: !8947)
!9001 = !DILocation(line: 1977, column: 7, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !9003, file: !1, line: 1977, column: 7)
!9003 = distinct !DILexicalBlock(scope: !8996, file: !1, line: 1976, column: 28)
!9004 = !DILocation(line: 1977, column: 11, scope: !9002)
!9005 = !DILocation(line: 1977, column: 17, scope: !9002)
!9006 = !DILocation(line: 1977, column: 7, scope: !9003)
!9007 = !DILocation(line: 1978, column: 12, scope: !9002)
!9008 = !DILocation(line: 1978, column: 10, scope: !9002)
!9009 = !DILocation(line: 1978, column: 4, scope: !9002)
!9010 = !DILocation(line: 1980, column: 12, scope: !9002)
!9011 = !DILocation(line: 1980, column: 10, scope: !9002)
!9012 = !DILocation(line: 1981, column: 2, scope: !9003)
!9013 = !DILocation(line: 1983, column: 11, scope: !8996)
!9014 = !DILocation(line: 1983, column: 20, scope: !8996)
!9015 = !DILocation(line: 1983, column: 9, scope: !8996)
!9016 = !DILocation(line: 1986, column: 6, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !8947, file: !1, line: 1986, column: 6)
!9018 = !DILocation(line: 1986, column: 14, scope: !9017)
!9019 = !DILocation(line: 1986, column: 11, scope: !9017)
!9020 = !DILocation(line: 1986, column: 6, scope: !8947)
!9021 = !DILocation(line: 1987, column: 7, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9023, file: !1, line: 1987, column: 7)
!9023 = distinct !DILexicalBlock(scope: !9017, file: !1, line: 1986, column: 20)
!9024 = !DILocation(line: 1987, column: 11, scope: !9022)
!9025 = !DILocation(line: 1987, column: 17, scope: !9022)
!9026 = !DILocation(line: 1987, column: 7, scope: !9023)
!9027 = !DILocation(line: 1988, column: 11, scope: !9022)
!9028 = !DILocation(line: 1988, column: 15, scope: !9022)
!9029 = !DILocation(line: 1988, column: 9, scope: !9022)
!9030 = !DILocation(line: 1988, column: 4, scope: !9022)
!9031 = !DILocation(line: 1990, column: 11, scope: !9022)
!9032 = !DILocation(line: 1990, column: 9, scope: !9022)
!9033 = !DILocation(line: 1991, column: 2, scope: !9023)
!9034 = !DILocation(line: 1993, column: 10, scope: !9017)
!9035 = !DILocation(line: 1993, column: 15, scope: !9017)
!9036 = !DILocation(line: 1993, column: 8, scope: !9017)
!9037 = !DILocation(line: 1995, column: 6, scope: !8947)
!9038 = !DILocation(line: 1996, column: 23, scope: !8947)
!9039 = !DILocation(line: 1996, column: 16, scope: !8947)
!9040 = !DILocation(line: 1996, column: 14, scope: !8947)
!9041 = !DILocation(line: 1996, column: 7, scope: !8947)
!9042 = !DILocation(line: 1998, column: 9, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !8947, file: !1, line: 1998, column: 2)
!9044 = !DILocation(line: 1998, column: 7, scope: !9043)
!9045 = !DILocation(line: 1998, column: 14, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9043, file: !1, line: 1998, column: 2)
!9047 = !DILocation(line: 1998, column: 18, scope: !9046)
!9048 = !DILocation(line: 1998, column: 16, scope: !9046)
!9049 = !DILocation(line: 1998, column: 2, scope: !9043)
!9050 = !DILocation(line: 1999, column: 7, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9052, file: !1, line: 1999, column: 7)
!9052 = distinct !DILexicalBlock(scope: !9046, file: !1, line: 1998, column: 44)
!9053 = !DILocation(line: 1999, column: 7, scope: !9052)
!9054 = !DILocation(line: 2000, column: 8, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9056, file: !1, line: 2000, column: 8)
!9056 = distinct !DILexicalBlock(scope: !9051, file: !1, line: 1999, column: 19)
!9057 = !DILocation(line: 2000, column: 12, scope: !9055)
!9058 = !DILocation(line: 2000, column: 24, scope: !9055)
!9059 = !DILocation(line: 2000, column: 8, scope: !9056)
!9060 = !DILocation(line: 2001, column: 19, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9055, file: !1, line: 2000, column: 40)
!9062 = !DILocation(line: 2001, column: 29, scope: !9061)
!9063 = !DILocation(line: 2002, column: 7, scope: !9061)
!9064 = !DILocation(line: 2002, column: 13, scope: !9061)
!9065 = !DILocation(line: 2002, column: 20, scope: !9061)
!9066 = !DILocation(line: 2002, column: 30, scope: !9061)
!9067 = !DILocation(line: 2002, column: 18, scope: !9061)
!9068 = !DILocation(line: 2002, column: 46, scope: !9061)
!9069 = !DILocation(line: 2002, column: 44, scope: !9061)
!9070 = !DILocation(line: 2002, column: 52, scope: !9061)
!9071 = !DILocation(line: 2002, column: 50, scope: !9061)
!9072 = !DILocation(line: 2002, column: 65, scope: !9061)
!9073 = !DILocation(line: 2002, column: 63, scope: !9061)
!9074 = !DILocation(line: 2002, column: 71, scope: !9061)
!9075 = !DILocation(line: 2002, column: 69, scope: !9061)
!9076 = !DILocation(line: 2002, column: 77, scope: !9061)
!9077 = !DILocation(line: 2002, column: 75, scope: !9061)
!9078 = !DILocation(line: 2002, column: 56, scope: !9061)
!9079 = !DILocation(line: 2002, column: 36, scope: !9061)
!9080 = !DILocation(line: 2001, column: 34, scope: !9061)
!9081 = !DILocation(line: 2001, column: 6, scope: !9061)
!9082 = !DILocation(line: 2001, column: 17, scope: !9061)
!9083 = !DILocation(line: 2003, column: 4, scope: !9061)
!9084 = !DILocation(line: 2005, column: 32, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9055, file: !1, line: 2004, column: 9)
!9086 = !DILocation(line: 2005, column: 37, scope: !9085)
!9087 = !DILocation(line: 2005, column: 40, scope: !9085)
!9088 = !DILocation(line: 2005, column: 44, scope: !9085)
!9089 = !DILocation(line: 2005, column: 5, scope: !9085)
!9090 = !DILocation(line: 2006, column: 19, scope: !9085)
!9091 = !DILocation(line: 2006, column: 26, scope: !9085)
!9092 = !DILocation(line: 2006, column: 33, scope: !9085)
!9093 = !DILocation(line: 2006, column: 24, scope: !9085)
!9094 = !DILocation(line: 2006, column: 40, scope: !9085)
!9095 = !DILocation(line: 2006, column: 47, scope: !9085)
!9096 = !DILocation(line: 2006, column: 57, scope: !9085)
!9097 = !DILocation(line: 2006, column: 45, scope: !9085)
!9098 = !DILocation(line: 2006, column: 38, scope: !9085)
!9099 = !DILocation(line: 2006, column: 64, scope: !9085)
!9100 = !DILocation(line: 2006, column: 71, scope: !9085)
!9101 = !DILocation(line: 2006, column: 77, scope: !9085)
!9102 = !DILocation(line: 2006, column: 69, scope: !9085)
!9103 = !DILocation(line: 2006, column: 62, scope: !9085)
!9104 = !DILocation(line: 2006, column: 84, scope: !9085)
!9105 = !DILocation(line: 2006, column: 91, scope: !9085)
!9106 = !DILocation(line: 2006, column: 97, scope: !9085)
!9107 = !DILocation(line: 2006, column: 89, scope: !9085)
!9108 = !DILocation(line: 2006, column: 82, scope: !9085)
!9109 = !DILocation(line: 2006, column: 6, scope: !9085)
!9110 = !DILocation(line: 2006, column: 17, scope: !9085)
!9111 = !DILocation(line: 2009, column: 36, scope: !9056)
!9112 = !DILocation(line: 2009, column: 28, scope: !9056)
!9113 = !DILocation(line: 2009, column: 50, scope: !9056)
!9114 = !DILocation(line: 2009, column: 48, scope: !9056)
!9115 = !DILocation(line: 2009, column: 17, scope: !9056)
!9116 = !DILocation(line: 2009, column: 15, scope: !9056)
!9117 = !DILocation(line: 2010, column: 3, scope: !9056)
!9118 = !DILocation(line: 2012, column: 7, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9052, file: !1, line: 2012, column: 7)
!9120 = !DILocation(line: 2012, column: 7, scope: !9052)
!9121 = !DILocation(line: 2013, column: 8, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9123, file: !1, line: 2013, column: 8)
!9123 = distinct !DILexicalBlock(scope: !9119, file: !1, line: 2012, column: 21)
!9124 = !DILocation(line: 2013, column: 12, scope: !9122)
!9125 = !DILocation(line: 2013, column: 26, scope: !9122)
!9126 = !DILocation(line: 2013, column: 8, scope: !9123)
!9127 = !DILocation(line: 2017, column: 21, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9122, file: !1, line: 2013, column: 42)
!9129 = !DILocation(line: 2017, column: 31, scope: !9128)
!9130 = !DILocation(line: 2018, column: 7, scope: !9128)
!9131 = !DILocation(line: 2018, column: 13, scope: !9128)
!9132 = !DILocation(line: 2018, column: 22, scope: !9128)
!9133 = !DILocation(line: 2018, column: 32, scope: !9128)
!9134 = !DILocation(line: 2018, column: 20, scope: !9128)
!9135 = !DILocation(line: 2018, column: 50, scope: !9128)
!9136 = !DILocation(line: 2018, column: 48, scope: !9128)
!9137 = !DILocation(line: 2018, column: 56, scope: !9128)
!9138 = !DILocation(line: 2018, column: 54, scope: !9128)
!9139 = !DILocation(line: 2018, column: 69, scope: !9128)
!9140 = !DILocation(line: 2018, column: 67, scope: !9128)
!9141 = !DILocation(line: 2018, column: 75, scope: !9128)
!9142 = !DILocation(line: 2018, column: 73, scope: !9128)
!9143 = !DILocation(line: 2018, column: 81, scope: !9128)
!9144 = !DILocation(line: 2018, column: 79, scope: !9128)
!9145 = !DILocation(line: 2018, column: 60, scope: !9128)
!9146 = !DILocation(line: 2018, column: 40, scope: !9128)
!9147 = !DILocation(line: 2017, column: 38, scope: !9128)
!9148 = !DILocation(line: 2017, column: 6, scope: !9128)
!9149 = !DILocation(line: 2017, column: 19, scope: !9128)
!9150 = !DILocation(line: 2019, column: 4, scope: !9128)
!9151 = !DILocation(line: 2023, column: 9, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9153, file: !1, line: 2023, column: 9)
!9153 = distinct !DILexicalBlock(scope: !9122, file: !1, line: 2020, column: 9)
!9154 = !DILocation(line: 2023, column: 20, scope: !9152)
!9155 = !DILocation(line: 2023, column: 28, scope: !9152)
!9156 = !DILocation(line: 2023, column: 31, scope: !9152)
!9157 = !DILocation(line: 2023, column: 35, scope: !9152)
!9158 = !DILocation(line: 2023, column: 50, scope: !9152)
!9159 = !DILocation(line: 2023, column: 54, scope: !9152)
!9160 = !DILocation(line: 2023, column: 47, scope: !9152)
!9161 = !DILocation(line: 2023, column: 9, scope: !9153)
!9162 = !DILocation(line: 2024, column: 33, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9152, file: !1, line: 2023, column: 69)
!9164 = !DILocation(line: 2024, column: 38, scope: !9163)
!9165 = !DILocation(line: 2024, column: 41, scope: !9163)
!9166 = !DILocation(line: 2024, column: 45, scope: !9163)
!9167 = !DILocation(line: 2024, column: 6, scope: !9163)
!9168 = !DILocation(line: 2025, column: 5, scope: !9163)
!9169 = !DILocation(line: 2026, column: 21, scope: !9153)
!9170 = !DILocation(line: 2026, column: 28, scope: !9153)
!9171 = !DILocation(line: 2026, column: 35, scope: !9153)
!9172 = !DILocation(line: 2026, column: 26, scope: !9153)
!9173 = !DILocation(line: 2026, column: 44, scope: !9153)
!9174 = !DILocation(line: 2026, column: 51, scope: !9153)
!9175 = !DILocation(line: 2026, column: 61, scope: !9153)
!9176 = !DILocation(line: 2026, column: 49, scope: !9153)
!9177 = !DILocation(line: 2026, column: 42, scope: !9153)
!9178 = !DILocation(line: 2027, column: 6, scope: !9153)
!9179 = !DILocation(line: 2027, column: 13, scope: !9153)
!9180 = !DILocation(line: 2027, column: 19, scope: !9153)
!9181 = !DILocation(line: 2027, column: 11, scope: !9153)
!9182 = !DILocation(line: 2026, column: 68, scope: !9153)
!9183 = !DILocation(line: 2027, column: 28, scope: !9153)
!9184 = !DILocation(line: 2027, column: 35, scope: !9153)
!9185 = !DILocation(line: 2027, column: 41, scope: !9153)
!9186 = !DILocation(line: 2027, column: 33, scope: !9153)
!9187 = !DILocation(line: 2027, column: 26, scope: !9153)
!9188 = !DILocation(line: 2026, column: 6, scope: !9153)
!9189 = !DILocation(line: 2026, column: 19, scope: !9153)
!9190 = !DILocation(line: 2030, column: 38, scope: !9123)
!9191 = !DILocation(line: 2030, column: 30, scope: !9123)
!9192 = !DILocation(line: 2030, column: 54, scope: !9123)
!9193 = !DILocation(line: 2030, column: 52, scope: !9123)
!9194 = !DILocation(line: 2030, column: 19, scope: !9123)
!9195 = !DILocation(line: 2030, column: 17, scope: !9123)
!9196 = !DILocation(line: 2031, column: 3, scope: !9123)
!9197 = !DILocation(line: 2033, column: 7, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9052, file: !1, line: 2033, column: 7)
!9199 = !DILocation(line: 2033, column: 7, scope: !9052)
!9200 = !DILocation(line: 2035, column: 20, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9198, file: !1, line: 2033, column: 21)
!9202 = !DILocation(line: 2035, column: 30, scope: !9201)
!9203 = !DILocation(line: 2036, column: 6, scope: !9201)
!9204 = !DILocation(line: 2036, column: 12, scope: !9201)
!9205 = !DILocation(line: 2036, column: 21, scope: !9201)
!9206 = !DILocation(line: 2036, column: 31, scope: !9201)
!9207 = !DILocation(line: 2036, column: 19, scope: !9201)
!9208 = !DILocation(line: 2036, column: 49, scope: !9201)
!9209 = !DILocation(line: 2036, column: 47, scope: !9201)
!9210 = !DILocation(line: 2036, column: 55, scope: !9201)
!9211 = !DILocation(line: 2036, column: 53, scope: !9201)
!9212 = !DILocation(line: 2036, column: 68, scope: !9201)
!9213 = !DILocation(line: 2036, column: 66, scope: !9201)
!9214 = !DILocation(line: 2036, column: 74, scope: !9201)
!9215 = !DILocation(line: 2036, column: 72, scope: !9201)
!9216 = !DILocation(line: 2036, column: 80, scope: !9201)
!9217 = !DILocation(line: 2036, column: 78, scope: !9201)
!9218 = !DILocation(line: 2036, column: 59, scope: !9201)
!9219 = !DILocation(line: 2036, column: 39, scope: !9201)
!9220 = !DILocation(line: 2035, column: 37, scope: !9201)
!9221 = !DILocation(line: 2035, column: 5, scope: !9201)
!9222 = !DILocation(line: 2035, column: 18, scope: !9201)
!9223 = !DILocation(line: 2038, column: 38, scope: !9201)
!9224 = !DILocation(line: 2038, column: 30, scope: !9201)
!9225 = !DILocation(line: 2038, column: 54, scope: !9201)
!9226 = !DILocation(line: 2038, column: 52, scope: !9201)
!9227 = !DILocation(line: 2038, column: 19, scope: !9201)
!9228 = !DILocation(line: 2038, column: 17, scope: !9201)
!9229 = !DILocation(line: 2039, column: 3, scope: !9201)
!9230 = !DILocation(line: 2040, column: 2, scope: !9052)
!9231 = !DILocation(line: 1998, column: 27, scope: !9046)
!9232 = !DILocation(line: 1998, column: 38, scope: !9046)
!9233 = !DILocation(line: 1998, column: 35, scope: !9046)
!9234 = !DILocation(line: 1998, column: 2, scope: !9046)
!9235 = distinct !{!9235, !9049, !9236}
!9236 = !DILocation(line: 2040, column: 2, scope: !9043)
!9237 = !DILocation(line: 2041, column: 1, scope: !8947)
!9238 = distinct !DISubprogram(name: "forward_diff_bezier_cotangent", scope: !1, file: !1, line: 1378, type: !9239, scopeLine: 1380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!9239 = !DISubroutineType(types: !9240)
!9240 = !{null, !3191, !3191, !3191, !3191, !1325, !79, !79}
!9241 = !DILocalVariable(name: "p0", arg: 1, scope: !9238, file: !1, line: 1378, type: !3191)
!9242 = !DILocation(line: 1378, column: 55, scope: !9238)
!9243 = !DILocalVariable(name: "p1", arg: 2, scope: !9238, file: !1, line: 1378, type: !3191)
!9244 = !DILocation(line: 1378, column: 74, scope: !9238)
!9245 = !DILocalVariable(name: "p2", arg: 3, scope: !9238, file: !1, line: 1378, type: !3191)
!9246 = !DILocation(line: 1378, column: 93, scope: !9238)
!9247 = !DILocalVariable(name: "p3", arg: 4, scope: !9238, file: !1, line: 1378, type: !3191)
!9248 = !DILocation(line: 1378, column: 112, scope: !9238)
!9249 = !DILocalVariable(name: "p", arg: 5, scope: !9238, file: !1, line: 1379, type: !1325)
!9250 = !DILocation(line: 1379, column: 49, scope: !9238)
!9251 = !DILocalVariable(name: "it", arg: 6, scope: !9238, file: !1, line: 1379, type: !79)
!9252 = !DILocation(line: 1379, column: 59, scope: !9238)
!9253 = !DILocalVariable(name: "stride", arg: 7, scope: !9238, file: !1, line: 1379, type: !79)
!9254 = !DILocation(line: 1379, column: 67, scope: !9238)
!9255 = !DILocalVariable(name: "a", scope: !9238, file: !1, line: 1385, type: !79)
!9256 = !DILocation(line: 1385, column: 6, scope: !9238)
!9257 = !DILocation(line: 1386, column: 9, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9238, file: !1, line: 1386, column: 2)
!9259 = !DILocation(line: 1386, column: 7, scope: !9258)
!9260 = !DILocation(line: 1386, column: 14, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9258, file: !1, line: 1386, column: 2)
!9262 = !DILocation(line: 1386, column: 19, scope: !9261)
!9263 = !DILocation(line: 1386, column: 16, scope: !9261)
!9264 = !DILocation(line: 1386, column: 2, scope: !9258)
!9265 = !DILocalVariable(name: "t", scope: !9266, file: !1, line: 1387, type: !128)
!9266 = distinct !DILexicalBlock(scope: !9261, file: !1, line: 1386, column: 28)
!9267 = !DILocation(line: 1387, column: 9, scope: !9266)
!9268 = !DILocation(line: 1387, column: 20, scope: !9266)
!9269 = !DILocation(line: 1387, column: 13, scope: !9266)
!9270 = !DILocation(line: 1387, column: 31, scope: !9266)
!9271 = !DILocation(line: 1387, column: 24, scope: !9266)
!9272 = !DILocation(line: 1387, column: 22, scope: !9266)
!9273 = !DILocalVariable(name: "i", scope: !9266, file: !1, line: 1389, type: !79)
!9274 = !DILocation(line: 1389, column: 7, scope: !9266)
!9275 = !DILocation(line: 1390, column: 10, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9266, file: !1, line: 1390, column: 3)
!9277 = !DILocation(line: 1390, column: 8, scope: !9276)
!9278 = !DILocation(line: 1390, column: 15, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9276, file: !1, line: 1390, column: 3)
!9280 = !DILocation(line: 1390, column: 17, scope: !9279)
!9281 = !DILocation(line: 1390, column: 3, scope: !9276)
!9282 = !DILocation(line: 1391, column: 21, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9279, file: !1, line: 1390, column: 27)
!9284 = !DILocation(line: 1391, column: 19, scope: !9283)
!9285 = !DILocation(line: 1391, column: 23, scope: !9283)
!9286 = !DILocation(line: 1391, column: 34, scope: !9283)
!9287 = !DILocation(line: 1391, column: 37, scope: !9283)
!9288 = !DILocation(line: 1391, column: 32, scope: !9283)
!9289 = !DILocation(line: 1392, column: 21, scope: !9283)
!9290 = !DILocation(line: 1392, column: 19, scope: !9283)
!9291 = !DILocation(line: 1392, column: 23, scope: !9283)
!9292 = !DILocation(line: 1392, column: 34, scope: !9283)
!9293 = !DILocation(line: 1392, column: 37, scope: !9283)
!9294 = !DILocation(line: 1392, column: 32, scope: !9283)
!9295 = !DILocation(line: 1391, column: 40, scope: !9283)
!9296 = !DILocation(line: 1393, column: 21, scope: !9283)
!9297 = !DILocation(line: 1393, column: 19, scope: !9283)
!9298 = !DILocation(line: 1393, column: 23, scope: !9283)
!9299 = !DILocation(line: 1393, column: 34, scope: !9283)
!9300 = !DILocation(line: 1393, column: 37, scope: !9283)
!9301 = !DILocation(line: 1393, column: 32, scope: !9283)
!9302 = !DILocation(line: 1392, column: 40, scope: !9283)
!9303 = !DILocation(line: 1394, column: 21, scope: !9283)
!9304 = !DILocation(line: 1394, column: 19, scope: !9283)
!9305 = !DILocation(line: 1394, column: 34, scope: !9283)
!9306 = !DILocation(line: 1394, column: 37, scope: !9283)
!9307 = !DILocation(line: 1394, column: 32, scope: !9283)
!9308 = !DILocation(line: 1393, column: 40, scope: !9283)
!9309 = !DILocation(line: 1391, column: 4, scope: !9283)
!9310 = !DILocation(line: 1391, column: 6, scope: !9283)
!9311 = !DILocation(line: 1391, column: 9, scope: !9283)
!9312 = !DILocation(line: 1395, column: 3, scope: !9283)
!9313 = !DILocation(line: 1390, column: 23, scope: !9279)
!9314 = !DILocation(line: 1390, column: 3, scope: !9279)
!9315 = distinct !{!9315, !9281, !9316}
!9316 = !DILocation(line: 1395, column: 3, scope: !9276)
!9317 = !DILocation(line: 1396, column: 16, scope: !9266)
!9318 = !DILocation(line: 1396, column: 3, scope: !9266)
!9319 = !DILocation(line: 1397, column: 26, scope: !9266)
!9320 = !DILocation(line: 1397, column: 18, scope: !9266)
!9321 = !DILocation(line: 1397, column: 31, scope: !9266)
!9322 = !DILocation(line: 1397, column: 29, scope: !9266)
!9323 = !DILocation(line: 1397, column: 7, scope: !9266)
!9324 = !DILocation(line: 1397, column: 5, scope: !9266)
!9325 = !DILocation(line: 1398, column: 2, scope: !9266)
!9326 = !DILocation(line: 1386, column: 24, scope: !9261)
!9327 = !DILocation(line: 1386, column: 2, scope: !9261)
!9328 = distinct !{!9328, !9264, !9329}
!9329 = !DILocation(line: 1398, column: 2, scope: !9258)
!9330 = !DILocation(line: 1399, column: 1, scope: !9238)
!9331 = distinct !DISubprogram(name: "vergxcobev", scope: !1, file: !1, line: 1906, type: !9332, scopeLine: 1907, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!9332 = !DISubroutineType(types: !9333)
!9333 = !{!79, !9334, !9334}
!9334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9335, size: 64)
!9335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!9336 = !DILocalVariable(name: "a1", arg: 1, scope: !9331, file: !1, line: 1906, type: !9334)
!9337 = !DILocation(line: 1906, column: 35, scope: !9331)
!9338 = !DILocalVariable(name: "a2", arg: 2, scope: !9331, file: !1, line: 1906, type: !9334)
!9339 = !DILocation(line: 1906, column: 51, scope: !9331)
!9340 = !DILocalVariable(name: "x1", scope: !9331, file: !1, line: 1908, type: !9341)
!9341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9342, size: 64)
!9342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7356)
!9343 = !DILocation(line: 1908, column: 26, scope: !9331)
!9344 = !DILocation(line: 1908, column: 31, scope: !9331)
!9345 = !DILocalVariable(name: "x2", scope: !9331, file: !1, line: 1908, type: !9341)
!9346 = !DILocation(line: 1908, column: 36, scope: !9331)
!9347 = !DILocation(line: 1908, column: 41, scope: !9331)
!9348 = !DILocation(line: 1910, column: 6, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !9331, file: !1, line: 1910, column: 6)
!9350 = !DILocation(line: 1910, column: 10, scope: !9349)
!9351 = !DILocation(line: 1910, column: 17, scope: !9349)
!9352 = !DILocation(line: 1910, column: 21, scope: !9349)
!9353 = !DILocation(line: 1910, column: 15, scope: !9349)
!9354 = !DILocation(line: 1910, column: 6, scope: !9331)
!9355 = !DILocation(line: 1911, column: 3, scope: !9349)
!9356 = !DILocation(line: 1912, column: 11, scope: !9357)
!9357 = distinct !DILexicalBlock(scope: !9349, file: !1, line: 1912, column: 11)
!9358 = !DILocation(line: 1912, column: 15, scope: !9357)
!9359 = !DILocation(line: 1912, column: 22, scope: !9357)
!9360 = !DILocation(line: 1912, column: 26, scope: !9357)
!9361 = !DILocation(line: 1912, column: 20, scope: !9357)
!9362 = !DILocation(line: 1912, column: 11, scope: !9349)
!9363 = !DILocation(line: 1913, column: 3, scope: !9357)
!9364 = !DILocation(line: 1914, column: 2, scope: !9331)
!9365 = !DILocation(line: 1915, column: 1, scope: !9331)
!9366 = distinct !DISubprogram(name: "bevelinside", scope: !1, file: !1, line: 1848, type: !9367, scopeLine: 1849, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!9367 = !DISubroutineType(types: !9368)
!9368 = !{!551, !7226, !7226}
!9369 = !DILocalVariable(name: "bl1", arg: 1, scope: !9366, file: !1, line: 1848, type: !7226)
!9370 = !DILocation(line: 1848, column: 34, scope: !9366)
!9371 = !DILocalVariable(name: "bl2", arg: 2, scope: !9366, file: !1, line: 1848, type: !7226)
!9372 = !DILocation(line: 1848, column: 48, scope: !9366)
!9373 = !DILocalVariable(name: "bevp", scope: !9366, file: !1, line: 1852, type: !7338)
!9374 = !DILocation(line: 1852, column: 12, scope: !9366)
!9375 = !DILocalVariable(name: "prevbevp", scope: !9366, file: !1, line: 1852, type: !7338)
!9376 = !DILocation(line: 1852, column: 19, scope: !9366)
!9377 = !DILocalVariable(name: "min", scope: !9366, file: !1, line: 1853, type: !128)
!9378 = !DILocation(line: 1853, column: 8, scope: !9366)
!9379 = !DILocalVariable(name: "max", scope: !9366, file: !1, line: 1853, type: !128)
!9380 = !DILocation(line: 1853, column: 13, scope: !9366)
!9381 = !DILocalVariable(name: "vec", scope: !9366, file: !1, line: 1853, type: !201)
!9382 = !DILocation(line: 1853, column: 18, scope: !9366)
!9383 = !DILocalVariable(name: "hvec1", scope: !9366, file: !1, line: 1853, type: !201)
!9384 = !DILocation(line: 1853, column: 26, scope: !9366)
!9385 = !DILocalVariable(name: "hvec2", scope: !9366, file: !1, line: 1853, type: !201)
!9386 = !DILocation(line: 1853, column: 36, scope: !9366)
!9387 = !DILocalVariable(name: "lab", scope: !9366, file: !1, line: 1853, type: !128)
!9388 = !DILocation(line: 1853, column: 46, scope: !9366)
!9389 = !DILocalVariable(name: "mu", scope: !9366, file: !1, line: 1853, type: !128)
!9390 = !DILocation(line: 1853, column: 51, scope: !9366)
!9391 = !DILocalVariable(name: "nr", scope: !9366, file: !1, line: 1854, type: !79)
!9392 = !DILocation(line: 1854, column: 6, scope: !9366)
!9393 = !DILocalVariable(name: "links", scope: !9366, file: !1, line: 1854, type: !79)
!9394 = !DILocation(line: 1854, column: 10, scope: !9366)
!9395 = !DILocalVariable(name: "rechts", scope: !9366, file: !1, line: 1854, type: !79)
!9396 = !DILocation(line: 1854, column: 21, scope: !9366)
!9397 = !DILocalVariable(name: "mode", scope: !9366, file: !1, line: 1854, type: !79)
!9398 = !DILocation(line: 1854, column: 33, scope: !9366)
!9399 = !DILocation(line: 1858, column: 9, scope: !9366)
!9400 = !DILocation(line: 1858, column: 14, scope: !9366)
!9401 = !DILocation(line: 1858, column: 7, scope: !9366)
!9402 = !DILocation(line: 1859, column: 13, scope: !9366)
!9403 = !DILocation(line: 1859, column: 19, scope: !9366)
!9404 = !DILocation(line: 1859, column: 2, scope: !9366)
!9405 = !DILocation(line: 1859, column: 11, scope: !9366)
!9406 = !DILocation(line: 1860, column: 13, scope: !9366)
!9407 = !DILocation(line: 1860, column: 19, scope: !9366)
!9408 = !DILocation(line: 1860, column: 2, scope: !9366)
!9409 = !DILocation(line: 1860, column: 11, scope: !9366)
!9410 = !DILocation(line: 1861, column: 2, scope: !9366)
!9411 = !DILocation(line: 1861, column: 11, scope: !9366)
!9412 = !DILocation(line: 1862, column: 13, scope: !9366)
!9413 = !DILocation(line: 1862, column: 20, scope: !9366)
!9414 = !DILocation(line: 1862, column: 2, scope: !9366)
!9415 = !DILocation(line: 1863, column: 2, scope: !9366)
!9416 = !DILocation(line: 1863, column: 11, scope: !9366)
!9417 = !DILocation(line: 1868, column: 9, scope: !9366)
!9418 = !DILocation(line: 1868, column: 14, scope: !9366)
!9419 = !DILocation(line: 1868, column: 7, scope: !9366)
!9420 = !DILocation(line: 1869, column: 7, scope: !9366)
!9421 = !DILocation(line: 1869, column: 12, scope: !9366)
!9422 = !DILocation(line: 1869, column: 5, scope: !9366)
!9423 = !DILocation(line: 1870, column: 13, scope: !9366)
!9424 = !DILocation(line: 1870, column: 21, scope: !9366)
!9425 = !DILocation(line: 1870, column: 24, scope: !9366)
!9426 = !DILocation(line: 1870, column: 18, scope: !9366)
!9427 = !DILocation(line: 1870, column: 11, scope: !9366)
!9428 = !DILocation(line: 1872, column: 2, scope: !9366)
!9429 = !DILocation(line: 1872, column: 11, scope: !9366)
!9430 = !DILocation(line: 1873, column: 9, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9366, file: !1, line: 1872, column: 15)
!9432 = !DILocation(line: 1873, column: 19, scope: !9431)
!9433 = !DILocation(line: 1873, column: 7, scope: !9431)
!9434 = !DILocation(line: 1874, column: 9, scope: !9431)
!9435 = !DILocation(line: 1874, column: 15, scope: !9431)
!9436 = !DILocation(line: 1874, column: 7, scope: !9431)
!9437 = !DILocation(line: 1875, column: 7, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !9431, file: !1, line: 1875, column: 7)
!9439 = !DILocation(line: 1875, column: 13, scope: !9438)
!9440 = !DILocation(line: 1875, column: 11, scope: !9438)
!9441 = !DILocation(line: 1875, column: 7, scope: !9431)
!9442 = !DILocation(line: 1876, column: 10, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9438, file: !1, line: 1875, column: 18)
!9444 = !DILocation(line: 1876, column: 8, scope: !9443)
!9445 = !DILocation(line: 1877, column: 10, scope: !9443)
!9446 = !DILocation(line: 1877, column: 20, scope: !9443)
!9447 = !DILocation(line: 1877, column: 8, scope: !9443)
!9448 = !DILocation(line: 1878, column: 3, scope: !9443)
!9449 = !DILocation(line: 1879, column: 7, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !9431, file: !1, line: 1879, column: 7)
!9451 = !DILocation(line: 1879, column: 14, scope: !9450)
!9452 = !DILocation(line: 1879, column: 11, scope: !9450)
!9453 = !DILocation(line: 1879, column: 7, scope: !9431)
!9454 = !DILocation(line: 1880, column: 8, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9456, file: !1, line: 1880, column: 8)
!9456 = distinct !DILexicalBlock(scope: !9450, file: !1, line: 1879, column: 19)
!9457 = !DILocation(line: 1880, column: 15, scope: !9455)
!9458 = !DILocation(line: 1880, column: 12, scope: !9455)
!9459 = !DILocation(line: 1880, column: 24, scope: !9455)
!9460 = !DILocation(line: 1880, column: 27, scope: !9455)
!9461 = !DILocation(line: 1880, column: 34, scope: !9455)
!9462 = !DILocation(line: 1880, column: 31, scope: !9455)
!9463 = !DILocation(line: 1880, column: 8, scope: !9456)
!9464 = !DILocation(line: 1882, column: 23, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9455, file: !1, line: 1880, column: 44)
!9466 = !DILocation(line: 1882, column: 33, scope: !9465)
!9467 = !DILocation(line: 1882, column: 38, scope: !9465)
!9468 = !DILocation(line: 1882, column: 44, scope: !9465)
!9469 = !DILocation(line: 1882, column: 49, scope: !9465)
!9470 = !DILocation(line: 1882, column: 56, scope: !9465)
!9471 = !DILocation(line: 1882, column: 80, scope: !9465)
!9472 = !DILocation(line: 1882, column: 12, scope: !9465)
!9473 = !DILocation(line: 1882, column: 10, scope: !9465)
!9474 = !DILocation(line: 1886, column: 9, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9465, file: !1, line: 1886, column: 9)
!9476 = !DILocation(line: 1886, column: 14, scope: !9475)
!9477 = !DILocation(line: 1886, column: 19, scope: !9475)
!9478 = !DILocation(line: 1886, column: 22, scope: !9475)
!9479 = !DILocation(line: 1886, column: 26, scope: !9475)
!9480 = !DILocation(line: 1886, column: 9, scope: !9465)
!9481 = !DILocation(line: 1887, column: 10, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9483, file: !1, line: 1887, column: 10)
!9483 = distinct !DILexicalBlock(scope: !9475, file: !1, line: 1886, column: 35)
!9484 = !DILocation(line: 1887, column: 19, scope: !9482)
!9485 = !DILocation(line: 1887, column: 17, scope: !9482)
!9486 = !DILocation(line: 1887, column: 10, scope: !9483)
!9487 = !DILocation(line: 1887, column: 34, scope: !9482)
!9488 = !DILocation(line: 1887, column: 29, scope: !9482)
!9489 = !DILocation(line: 1888, column: 17, scope: !9482)
!9490 = !DILocation(line: 1889, column: 5, scope: !9483)
!9491 = !DILocation(line: 1890, column: 4, scope: !9465)
!9492 = !DILocation(line: 1891, column: 3, scope: !9456)
!9493 = !DILocation(line: 1892, column: 14, scope: !9431)
!9494 = !DILocation(line: 1892, column: 12, scope: !9431)
!9495 = !DILocation(line: 1893, column: 7, scope: !9431)
!9496 = distinct !{!9496, !9428, !9497}
!9497 = !DILocation(line: 1894, column: 2, scope: !9366)
!9498 = !DILocation(line: 1896, column: 10, scope: !9366)
!9499 = !DILocation(line: 1896, column: 16, scope: !9366)
!9500 = !DILocation(line: 1896, column: 21, scope: !9366)
!9501 = !DILocation(line: 1896, column: 25, scope: !9366)
!9502 = !DILocation(line: 1896, column: 32, scope: !9366)
!9503 = !DILocation(line: 0, scope: !9366)
!9504 = !DILocation(line: 1896, column: 9, scope: !9366)
!9505 = !DILocation(line: 1896, column: 2, scope: !9366)
!9506 = distinct !DISubprogram(name: "make_bevel_list_segment_2D", scope: !1, file: !1, line: 2407, type: !9507, scopeLine: 2408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!9507 = !DISubroutineType(types: !9508)
!9508 = !{null, !7226}
!9509 = !DILocalVariable(name: "bl", arg: 1, scope: !9506, file: !1, line: 2407, type: !7226)
!9510 = !DILocation(line: 2407, column: 49, scope: !9506)
!9511 = !DILocalVariable(name: "bevp2", scope: !9506, file: !1, line: 2409, type: !7338)
!9512 = !DILocation(line: 2409, column: 12, scope: !9506)
!9513 = !DILocation(line: 2409, column: 20, scope: !9506)
!9514 = !DILocation(line: 2409, column: 24, scope: !9506)
!9515 = !DILocalVariable(name: "bevp1", scope: !9506, file: !1, line: 2410, type: !7338)
!9516 = !DILocation(line: 2410, column: 12, scope: !9506)
!9517 = !DILocation(line: 2410, column: 20, scope: !9506)
!9518 = !DILocation(line: 2410, column: 26, scope: !9506)
!9519 = !DILocalVariable(name: "x1", scope: !9506, file: !1, line: 2412, type: !3192)
!9520 = !DILocation(line: 2412, column: 14, scope: !9506)
!9521 = !DILocation(line: 2412, column: 19, scope: !9506)
!9522 = !DILocation(line: 2412, column: 26, scope: !9506)
!9523 = !DILocation(line: 2412, column: 35, scope: !9506)
!9524 = !DILocation(line: 2412, column: 42, scope: !9506)
!9525 = !DILocation(line: 2412, column: 33, scope: !9506)
!9526 = !DILocalVariable(name: "y1", scope: !9506, file: !1, line: 2413, type: !3192)
!9527 = !DILocation(line: 2413, column: 14, scope: !9506)
!9528 = !DILocation(line: 2413, column: 19, scope: !9506)
!9529 = !DILocation(line: 2413, column: 26, scope: !9506)
!9530 = !DILocation(line: 2413, column: 35, scope: !9506)
!9531 = !DILocation(line: 2413, column: 42, scope: !9506)
!9532 = !DILocation(line: 2413, column: 33, scope: !9506)
!9533 = !DILocation(line: 2415, column: 21, scope: !9506)
!9534 = !DILocation(line: 2415, column: 25, scope: !9506)
!9535 = !DILocation(line: 2415, column: 30, scope: !9506)
!9536 = !DILocation(line: 2415, column: 29, scope: !9506)
!9537 = !DILocation(line: 2415, column: 35, scope: !9506)
!9538 = !DILocation(line: 2415, column: 34, scope: !9506)
!9539 = !DILocation(line: 2415, column: 41, scope: !9506)
!9540 = !DILocation(line: 2415, column: 48, scope: !9506)
!9541 = !DILocation(line: 2415, column: 57, scope: !9506)
!9542 = !DILocation(line: 2415, column: 64, scope: !9506)
!9543 = !DILocation(line: 2415, column: 2, scope: !9506)
!9544 = !DILocation(line: 2416, column: 16, scope: !9506)
!9545 = !DILocation(line: 2416, column: 23, scope: !9506)
!9546 = !DILocation(line: 2416, column: 2, scope: !9506)
!9547 = !DILocation(line: 2416, column: 9, scope: !9506)
!9548 = !DILocation(line: 2416, column: 14, scope: !9506)
!9549 = !DILocation(line: 2417, column: 16, scope: !9506)
!9550 = !DILocation(line: 2417, column: 23, scope: !9506)
!9551 = !DILocation(line: 2417, column: 2, scope: !9506)
!9552 = !DILocation(line: 2417, column: 9, scope: !9506)
!9553 = !DILocation(line: 2417, column: 14, scope: !9506)
!9554 = !DILocation(line: 2420, column: 29, scope: !9506)
!9555 = !DILocation(line: 2420, column: 2, scope: !9506)
!9556 = !DILocation(line: 2421, column: 1, scope: !9506)
!9557 = distinct !DISubprogram(name: "make_bevel_list_2D", scope: !1, file: !1, line: 2423, type: !9507, scopeLine: 2424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!9558 = !DILocalVariable(name: "bl", arg: 1, scope: !9557, file: !1, line: 2423, type: !7226)
!9559 = !DILocation(line: 2423, column: 41, scope: !9557)
!9560 = !DILocalVariable(name: "bevp0", scope: !9557, file: !1, line: 2428, type: !7338)
!9561 = !DILocation(line: 2428, column: 12, scope: !9557)
!9562 = !DILocalVariable(name: "bevp1", scope: !9557, file: !1, line: 2428, type: !7338)
!9563 = !DILocation(line: 2428, column: 20, scope: !9557)
!9564 = !DILocalVariable(name: "bevp2", scope: !9557, file: !1, line: 2428, type: !7338)
!9565 = !DILocation(line: 2428, column: 28, scope: !9557)
!9566 = !DILocalVariable(name: "nr", scope: !9557, file: !1, line: 2429, type: !79)
!9567 = !DILocation(line: 2429, column: 6, scope: !9557)
!9568 = !DILocation(line: 2431, column: 6, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9557, file: !1, line: 2431, column: 6)
!9570 = !DILocation(line: 2431, column: 10, scope: !9569)
!9571 = !DILocation(line: 2431, column: 15, scope: !9569)
!9572 = !DILocation(line: 2431, column: 6, scope: !9557)
!9573 = !DILocation(line: 2432, column: 11, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9569, file: !1, line: 2431, column: 22)
!9575 = !DILocation(line: 2432, column: 15, scope: !9574)
!9576 = !DILocation(line: 2432, column: 9, scope: !9574)
!9577 = !DILocation(line: 2433, column: 11, scope: !9574)
!9578 = !DILocation(line: 2433, column: 20, scope: !9574)
!9579 = !DILocation(line: 2433, column: 24, scope: !9574)
!9580 = !DILocation(line: 2433, column: 27, scope: !9574)
!9581 = !DILocation(line: 2433, column: 17, scope: !9574)
!9582 = !DILocation(line: 2433, column: 9, scope: !9574)
!9583 = !DILocation(line: 2434, column: 11, scope: !9574)
!9584 = !DILocation(line: 2434, column: 17, scope: !9574)
!9585 = !DILocation(line: 2434, column: 9, scope: !9574)
!9586 = !DILocation(line: 2435, column: 8, scope: !9574)
!9587 = !DILocation(line: 2435, column: 12, scope: !9574)
!9588 = !DILocation(line: 2435, column: 6, scope: !9574)
!9589 = !DILocation(line: 2436, column: 2, scope: !9574)
!9590 = !DILocation(line: 2438, column: 11, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9569, file: !1, line: 2437, column: 7)
!9592 = !DILocation(line: 2438, column: 15, scope: !9591)
!9593 = !DILocation(line: 2438, column: 9, scope: !9591)
!9594 = !DILocation(line: 2439, column: 11, scope: !9591)
!9595 = !DILocation(line: 2439, column: 17, scope: !9591)
!9596 = !DILocation(line: 2439, column: 9, scope: !9591)
!9597 = !DILocation(line: 2440, column: 11, scope: !9591)
!9598 = !DILocation(line: 2440, column: 17, scope: !9591)
!9599 = !DILocation(line: 2440, column: 9, scope: !9591)
!9600 = !DILocation(line: 2442, column: 8, scope: !9591)
!9601 = !DILocation(line: 2442, column: 12, scope: !9591)
!9602 = !DILocation(line: 2442, column: 15, scope: !9591)
!9603 = !DILocation(line: 2442, column: 6, scope: !9591)
!9604 = !DILocation(line: 2445, column: 2, scope: !9557)
!9605 = !DILocation(line: 2445, column: 11, scope: !9557)
!9606 = !DILocalVariable(name: "x1", scope: !9607, file: !1, line: 2446, type: !3192)
!9607 = distinct !DILexicalBlock(scope: !9557, file: !1, line: 2445, column: 15)
!9608 = !DILocation(line: 2446, column: 15, scope: !9607)
!9609 = !DILocation(line: 2446, column: 20, scope: !9607)
!9610 = !DILocation(line: 2446, column: 27, scope: !9607)
!9611 = !DILocation(line: 2446, column: 36, scope: !9607)
!9612 = !DILocation(line: 2446, column: 43, scope: !9607)
!9613 = !DILocation(line: 2446, column: 34, scope: !9607)
!9614 = !DILocalVariable(name: "x2", scope: !9607, file: !1, line: 2447, type: !3192)
!9615 = !DILocation(line: 2447, column: 15, scope: !9607)
!9616 = !DILocation(line: 2447, column: 20, scope: !9607)
!9617 = !DILocation(line: 2447, column: 27, scope: !9607)
!9618 = !DILocation(line: 2447, column: 36, scope: !9607)
!9619 = !DILocation(line: 2447, column: 43, scope: !9607)
!9620 = !DILocation(line: 2447, column: 34, scope: !9607)
!9621 = !DILocalVariable(name: "y1", scope: !9607, file: !1, line: 2448, type: !3192)
!9622 = !DILocation(line: 2448, column: 15, scope: !9607)
!9623 = !DILocation(line: 2448, column: 20, scope: !9607)
!9624 = !DILocation(line: 2448, column: 27, scope: !9607)
!9625 = !DILocation(line: 2448, column: 36, scope: !9607)
!9626 = !DILocation(line: 2448, column: 43, scope: !9607)
!9627 = !DILocation(line: 2448, column: 34, scope: !9607)
!9628 = !DILocalVariable(name: "y2", scope: !9607, file: !1, line: 2449, type: !3192)
!9629 = !DILocation(line: 2449, column: 15, scope: !9607)
!9630 = !DILocation(line: 2449, column: 20, scope: !9607)
!9631 = !DILocation(line: 2449, column: 27, scope: !9607)
!9632 = !DILocation(line: 2449, column: 36, scope: !9607)
!9633 = !DILocation(line: 2449, column: 43, scope: !9607)
!9634 = !DILocation(line: 2449, column: 34, scope: !9607)
!9635 = !DILocation(line: 2451, column: 22, scope: !9607)
!9636 = !DILocation(line: 2451, column: 26, scope: !9607)
!9637 = !DILocation(line: 2451, column: 30, scope: !9607)
!9638 = !DILocation(line: 2451, column: 34, scope: !9607)
!9639 = !DILocation(line: 2451, column: 40, scope: !9607)
!9640 = !DILocation(line: 2451, column: 47, scope: !9607)
!9641 = !DILocation(line: 2451, column: 56, scope: !9607)
!9642 = !DILocation(line: 2451, column: 63, scope: !9607)
!9643 = !DILocation(line: 2451, column: 3, scope: !9607)
!9644 = !DILocation(line: 2455, column: 20, scope: !9607)
!9645 = !DILocation(line: 2455, column: 27, scope: !9607)
!9646 = !DILocation(line: 2455, column: 32, scope: !9607)
!9647 = !DILocation(line: 2455, column: 39, scope: !9607)
!9648 = !DILocation(line: 2455, column: 44, scope: !9607)
!9649 = !DILocation(line: 2455, column: 51, scope: !9607)
!9650 = !DILocation(line: 2455, column: 56, scope: !9607)
!9651 = !DILocation(line: 2455, column: 63, scope: !9607)
!9652 = !DILocation(line: 2455, column: 3, scope: !9607)
!9653 = !DILocation(line: 2456, column: 15, scope: !9607)
!9654 = !DILocation(line: 2456, column: 22, scope: !9607)
!9655 = !DILocation(line: 2456, column: 28, scope: !9607)
!9656 = !DILocation(line: 2456, column: 35, scope: !9607)
!9657 = !DILocation(line: 2456, column: 3, scope: !9607)
!9658 = !DILocation(line: 2459, column: 11, scope: !9607)
!9659 = !DILocation(line: 2459, column: 9, scope: !9607)
!9660 = !DILocation(line: 2460, column: 11, scope: !9607)
!9661 = !DILocation(line: 2460, column: 9, scope: !9607)
!9662 = !DILocation(line: 2461, column: 8, scope: !9607)
!9663 = distinct !{!9663, !9604, !9664}
!9664 = !DILocation(line: 2462, column: 2, scope: !9557)
!9665 = !DILocation(line: 2465, column: 6, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9557, file: !1, line: 2465, column: 6)
!9667 = !DILocation(line: 2465, column: 10, scope: !9666)
!9668 = !DILocation(line: 2465, column: 15, scope: !9666)
!9669 = !DILocation(line: 2465, column: 6, scope: !9557)
!9670 = !DILocalVariable(name: "bevp", scope: !9671, file: !1, line: 2466, type: !7338)
!9671 = distinct !DILexicalBlock(scope: !9666, file: !1, line: 2465, column: 22)
!9672 = !DILocation(line: 2466, column: 13, scope: !9671)
!9673 = !DILocalVariable(name: "angle", scope: !9671, file: !1, line: 2467, type: !128)
!9674 = !DILocation(line: 2467, column: 9, scope: !9671)
!9675 = !DILocation(line: 2470, column: 10, scope: !9671)
!9676 = !DILocation(line: 2470, column: 14, scope: !9671)
!9677 = !DILocation(line: 2470, column: 8, scope: !9671)
!9678 = !DILocation(line: 2471, column: 18, scope: !9671)
!9679 = !DILocation(line: 2471, column: 24, scope: !9671)
!9680 = !DILocation(line: 2471, column: 32, scope: !9671)
!9681 = !DILocation(line: 2471, column: 38, scope: !9671)
!9682 = !DILocation(line: 2471, column: 11, scope: !9671)
!9683 = !DILocation(line: 2471, column: 46, scope: !9671)
!9684 = !DILocation(line: 2471, column: 9, scope: !9671)
!9685 = !DILocation(line: 2472, column: 21, scope: !9671)
!9686 = !DILocation(line: 2472, column: 16, scope: !9671)
!9687 = !DILocation(line: 2472, column: 3, scope: !9671)
!9688 = !DILocation(line: 2472, column: 9, scope: !9671)
!9689 = !DILocation(line: 2472, column: 14, scope: !9671)
!9690 = !DILocation(line: 2473, column: 21, scope: !9671)
!9691 = !DILocation(line: 2473, column: 16, scope: !9671)
!9692 = !DILocation(line: 2473, column: 3, scope: !9671)
!9693 = !DILocation(line: 2473, column: 9, scope: !9671)
!9694 = !DILocation(line: 2473, column: 14, scope: !9671)
!9695 = !DILocation(line: 2474, column: 15, scope: !9671)
!9696 = !DILocation(line: 2474, column: 21, scope: !9671)
!9697 = !DILocation(line: 2474, column: 27, scope: !9671)
!9698 = !DILocation(line: 2474, column: 33, scope: !9671)
!9699 = !DILocation(line: 2474, column: 3, scope: !9671)
!9700 = !DILocation(line: 2477, column: 10, scope: !9671)
!9701 = !DILocation(line: 2477, column: 14, scope: !9671)
!9702 = !DILocation(line: 2477, column: 8, scope: !9671)
!9703 = !DILocation(line: 2478, column: 12, scope: !9671)
!9704 = !DILocation(line: 2478, column: 16, scope: !9671)
!9705 = !DILocation(line: 2478, column: 19, scope: !9671)
!9706 = !DILocation(line: 2478, column: 8, scope: !9671)
!9707 = !DILocation(line: 2479, column: 18, scope: !9671)
!9708 = !DILocation(line: 2479, column: 24, scope: !9671)
!9709 = !DILocation(line: 2479, column: 32, scope: !9671)
!9710 = !DILocation(line: 2479, column: 38, scope: !9671)
!9711 = !DILocation(line: 2479, column: 11, scope: !9671)
!9712 = !DILocation(line: 2479, column: 46, scope: !9671)
!9713 = !DILocation(line: 2479, column: 9, scope: !9671)
!9714 = !DILocation(line: 2480, column: 21, scope: !9671)
!9715 = !DILocation(line: 2480, column: 16, scope: !9671)
!9716 = !DILocation(line: 2480, column: 3, scope: !9671)
!9717 = !DILocation(line: 2480, column: 9, scope: !9671)
!9718 = !DILocation(line: 2480, column: 14, scope: !9671)
!9719 = !DILocation(line: 2481, column: 21, scope: !9671)
!9720 = !DILocation(line: 2481, column: 16, scope: !9671)
!9721 = !DILocation(line: 2481, column: 3, scope: !9671)
!9722 = !DILocation(line: 2481, column: 9, scope: !9671)
!9723 = !DILocation(line: 2481, column: 14, scope: !9671)
!9724 = !DILocation(line: 2482, column: 15, scope: !9671)
!9725 = !DILocation(line: 2482, column: 21, scope: !9671)
!9726 = !DILocation(line: 2482, column: 27, scope: !9671)
!9727 = !DILocation(line: 2482, column: 33, scope: !9671)
!9728 = !DILocation(line: 2482, column: 3, scope: !9671)
!9729 = !DILocation(line: 2483, column: 2, scope: !9671)
!9730 = !DILocation(line: 2484, column: 1, scope: !9557)
!9731 = distinct !DISubprogram(name: "make_bevel_list_segment_3D", scope: !1, file: !1, line: 2386, type: !9507, scopeLine: 2387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!9732 = !DILocalVariable(name: "bl", arg: 1, scope: !9731, file: !1, line: 2386, type: !7226)
!9733 = !DILocation(line: 2386, column: 49, scope: !9731)
!9734 = !DILocalVariable(name: "q", scope: !9731, file: !1, line: 2388, type: !378)
!9735 = !DILocation(line: 2388, column: 8, scope: !9731)
!9736 = !DILocalVariable(name: "bevp2", scope: !9731, file: !1, line: 2390, type: !7338)
!9737 = !DILocation(line: 2390, column: 12, scope: !9731)
!9738 = !DILocation(line: 2390, column: 20, scope: !9731)
!9739 = !DILocation(line: 2390, column: 24, scope: !9731)
!9740 = !DILocalVariable(name: "bevp1", scope: !9731, file: !1, line: 2391, type: !7338)
!9741 = !DILocation(line: 2391, column: 12, scope: !9731)
!9742 = !DILocation(line: 2391, column: 20, scope: !9731)
!9743 = !DILocation(line: 2391, column: 26, scope: !9731)
!9744 = !DILocation(line: 2394, column: 14, scope: !9731)
!9745 = !DILocation(line: 2394, column: 21, scope: !9731)
!9746 = !DILocation(line: 2394, column: 26, scope: !9731)
!9747 = !DILocation(line: 2394, column: 33, scope: !9731)
!9748 = !DILocation(line: 2394, column: 38, scope: !9731)
!9749 = !DILocation(line: 2394, column: 45, scope: !9731)
!9750 = !DILocation(line: 2394, column: 2, scope: !9731)
!9751 = !DILocation(line: 2395, column: 15, scope: !9731)
!9752 = !DILocation(line: 2395, column: 22, scope: !9731)
!9753 = !DILocation(line: 2395, column: 2, scope: !9731)
!9754 = !DILocation(line: 2397, column: 14, scope: !9731)
!9755 = !DILocation(line: 2397, column: 21, scope: !9731)
!9756 = !DILocation(line: 2397, column: 27, scope: !9731)
!9757 = !DILocation(line: 2397, column: 34, scope: !9731)
!9758 = !DILocation(line: 2397, column: 2, scope: !9731)
!9759 = !DILocation(line: 2399, column: 21, scope: !9731)
!9760 = !DILocation(line: 2399, column: 24, scope: !9731)
!9761 = !DILocation(line: 2399, column: 31, scope: !9731)
!9762 = !DILocation(line: 2399, column: 36, scope: !9731)
!9763 = !DILocation(line: 2399, column: 43, scope: !9731)
!9764 = !DILocation(line: 2399, column: 2, scope: !9731)
!9765 = !DILocation(line: 2400, column: 14, scope: !9731)
!9766 = !DILocation(line: 2400, column: 21, scope: !9731)
!9767 = !DILocation(line: 2400, column: 27, scope: !9731)
!9768 = !DILocation(line: 2400, column: 30, scope: !9731)
!9769 = !DILocation(line: 2400, column: 37, scope: !9731)
!9770 = !DILocation(line: 2400, column: 2, scope: !9731)
!9771 = !DILocation(line: 2401, column: 15, scope: !9731)
!9772 = !DILocation(line: 2401, column: 22, scope: !9731)
!9773 = !DILocation(line: 2401, column: 2, scope: !9731)
!9774 = !DILocation(line: 2402, column: 13, scope: !9731)
!9775 = !DILocation(line: 2402, column: 20, scope: !9731)
!9776 = !DILocation(line: 2402, column: 25, scope: !9731)
!9777 = !DILocation(line: 2402, column: 32, scope: !9731)
!9778 = !DILocation(line: 2402, column: 2, scope: !9731)
!9779 = !DILocation(line: 2403, column: 13, scope: !9731)
!9780 = !DILocation(line: 2403, column: 20, scope: !9731)
!9781 = !DILocation(line: 2403, column: 26, scope: !9731)
!9782 = !DILocation(line: 2403, column: 33, scope: !9731)
!9783 = !DILocation(line: 2403, column: 2, scope: !9731)
!9784 = !DILocation(line: 2404, column: 1, scope: !9731)
!9785 = distinct !DISubprogram(name: "make_bevel_list_3D", scope: !1, file: !1, line: 2365, type: !9786, scopeLine: 2366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!9786 = !DISubroutineType(types: !9787)
!9787 = !{null, !7226, !79, !79}
!9788 = !DILocalVariable(name: "bl", arg: 1, scope: !9785, file: !1, line: 2365, type: !7226)
!9789 = !DILocation(line: 2365, column: 41, scope: !9785)
!9790 = !DILocalVariable(name: "smooth_iter", arg: 2, scope: !9785, file: !1, line: 2365, type: !79)
!9791 = !DILocation(line: 2365, column: 49, scope: !9785)
!9792 = !DILocalVariable(name: "twist_mode", arg: 3, scope: !9785, file: !1, line: 2365, type: !79)
!9793 = !DILocation(line: 2365, column: 66, scope: !9785)
!9794 = !DILocation(line: 2367, column: 10, scope: !9785)
!9795 = !DILocation(line: 2367, column: 2, scope: !9785)
!9796 = !DILocation(line: 2369, column: 31, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9785, file: !1, line: 2367, column: 22)
!9798 = !DILocation(line: 2369, column: 4, scope: !9797)
!9799 = !DILocation(line: 2370, column: 4, scope: !9797)
!9800 = !DILocation(line: 2372, column: 37, scope: !9797)
!9801 = !DILocation(line: 2372, column: 4, scope: !9797)
!9802 = !DILocation(line: 2373, column: 4, scope: !9797)
!9803 = !DILocation(line: 2375, column: 27, scope: !9797)
!9804 = !DILocation(line: 2375, column: 4, scope: !9797)
!9805 = !DILocation(line: 2376, column: 4, scope: !9797)
!9806 = !DILocation(line: 2379, column: 6, scope: !9807)
!9807 = distinct !DILexicalBlock(scope: !9785, file: !1, line: 2379, column: 6)
!9808 = !DILocation(line: 2379, column: 6, scope: !9785)
!9809 = !DILocation(line: 2380, column: 21, scope: !9807)
!9810 = !DILocation(line: 2380, column: 25, scope: !9807)
!9811 = !DILocation(line: 2380, column: 3, scope: !9807)
!9812 = !DILocation(line: 2382, column: 24, scope: !9785)
!9813 = !DILocation(line: 2382, column: 2, scope: !9785)
!9814 = !DILocation(line: 2383, column: 1, scope: !9785)
!9815 = distinct !DISubprogram(name: "BKE_nurb_handle_calc", scope: !1, file: !1, line: 3300, type: !9816, scopeLine: 3301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!9816 = !DISubroutineType(types: !9817)
!9817 = !{null, !1817, !1817, !1817, !6595}
!9818 = !DILocalVariable(name: "bezt", arg: 1, scope: !9815, file: !1, line: 3300, type: !1817)
!9819 = !DILocation(line: 3300, column: 38, scope: !9815)
!9820 = !DILocalVariable(name: "prev", arg: 2, scope: !9815, file: !1, line: 3300, type: !1817)
!9821 = !DILocation(line: 3300, column: 55, scope: !9815)
!9822 = !DILocalVariable(name: "next", arg: 3, scope: !9815, file: !1, line: 3300, type: !1817)
!9823 = !DILocation(line: 3300, column: 72, scope: !9815)
!9824 = !DILocalVariable(name: "is_fcurve", arg: 4, scope: !9815, file: !1, line: 3300, type: !6595)
!9825 = !DILocation(line: 3300, column: 89, scope: !9815)
!9826 = !DILocation(line: 3302, column: 24, scope: !9815)
!9827 = !DILocation(line: 3302, column: 30, scope: !9815)
!9828 = !DILocation(line: 3302, column: 36, scope: !9815)
!9829 = !DILocation(line: 3302, column: 42, scope: !9815)
!9830 = !DILocation(line: 3302, column: 2, scope: !9815)
!9831 = !DILocation(line: 3303, column: 1, scope: !9815)
!9832 = distinct !DISubprogram(name: "calchandleNurb_intern", scope: !1, file: !1, line: 3023, type: !9833, scopeLine: 3025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!9833 = !DISubroutineType(types: !9834)
!9834 = !{null, !1817, !1817, !1817, !551, !551}
!9835 = !DILocalVariable(name: "bezt", arg: 1, scope: !9832, file: !1, line: 3023, type: !1817)
!9836 = !DILocation(line: 3023, column: 46, scope: !9832)
!9837 = !DILocalVariable(name: "prev", arg: 2, scope: !9832, file: !1, line: 3023, type: !1817)
!9838 = !DILocation(line: 3023, column: 63, scope: !9832)
!9839 = !DILocalVariable(name: "next", arg: 3, scope: !9832, file: !1, line: 3023, type: !1817)
!9840 = !DILocation(line: 3023, column: 80, scope: !9832)
!9841 = !DILocalVariable(name: "is_fcurve", arg: 4, scope: !9832, file: !1, line: 3024, type: !551)
!9842 = !DILocation(line: 3024, column: 40, scope: !9832)
!9843 = !DILocalVariable(name: "skip_align", arg: 5, scope: !9832, file: !1, line: 3024, type: !551)
!9844 = !DILocation(line: 3024, column: 56, scope: !9832)
!9845 = !DILocalVariable(name: "p1", scope: !9832, file: !1, line: 3030, type: !1325)
!9846 = !DILocation(line: 3030, column: 9, scope: !9832)
!9847 = !DILocalVariable(name: "p2", scope: !9832, file: !1, line: 3030, type: !1325)
!9848 = !DILocation(line: 3030, column: 14, scope: !9832)
!9849 = !DILocalVariable(name: "p3", scope: !9832, file: !1, line: 3030, type: !1325)
!9850 = !DILocation(line: 3030, column: 19, scope: !9832)
!9851 = !DILocalVariable(name: "pt", scope: !9832, file: !1, line: 3030, type: !201)
!9852 = !DILocation(line: 3030, column: 23, scope: !9832)
!9853 = !DILocalVariable(name: "dvec_a", scope: !9832, file: !1, line: 3031, type: !201)
!9854 = !DILocation(line: 3031, column: 8, scope: !9832)
!9855 = !DILocalVariable(name: "dvec_b", scope: !9832, file: !1, line: 3031, type: !201)
!9856 = !DILocation(line: 3031, column: 19, scope: !9832)
!9857 = !DILocalVariable(name: "len", scope: !9832, file: !1, line: 3032, type: !128)
!9858 = !DILocation(line: 3032, column: 8, scope: !9832)
!9859 = !DILocalVariable(name: "len_a", scope: !9832, file: !1, line: 3032, type: !128)
!9860 = !DILocation(line: 3032, column: 13, scope: !9832)
!9861 = !DILocalVariable(name: "len_b", scope: !9832, file: !1, line: 3032, type: !128)
!9862 = !DILocation(line: 3032, column: 20, scope: !9832)
!9863 = !DILocalVariable(name: "len_ratio", scope: !9832, file: !1, line: 3033, type: !128)
!9864 = !DILocation(line: 3033, column: 8, scope: !9832)
!9865 = !DILocalVariable(name: "eps", scope: !9832, file: !1, line: 3034, type: !3192)
!9866 = !DILocation(line: 3034, column: 14, scope: !9832)
!9867 = !DILocation(line: 3036, column: 6, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9832, file: !1, line: 3036, column: 6)
!9869 = !DILocation(line: 3036, column: 12, scope: !9868)
!9870 = !DILocation(line: 3036, column: 15, scope: !9868)
!9871 = !DILocation(line: 3036, column: 20, scope: !9868)
!9872 = !DILocation(line: 3036, column: 23, scope: !9868)
!9873 = !DILocation(line: 3036, column: 29, scope: !9868)
!9874 = !DILocation(line: 3036, column: 32, scope: !9868)
!9875 = !DILocation(line: 3036, column: 6, scope: !9832)
!9876 = !DILocation(line: 3037, column: 3, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9868, file: !1, line: 3036, column: 38)
!9878 = !DILocation(line: 3040, column: 7, scope: !9832)
!9879 = !DILocation(line: 3040, column: 13, scope: !9832)
!9880 = !DILocation(line: 3040, column: 5, scope: !9832)
!9881 = !DILocation(line: 3042, column: 6, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9832, file: !1, line: 3042, column: 6)
!9883 = !DILocation(line: 3042, column: 11, scope: !9882)
!9884 = !DILocation(line: 3042, column: 6, scope: !9832)
!9885 = !DILocation(line: 3043, column: 8, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9882, file: !1, line: 3042, column: 20)
!9887 = !DILocation(line: 3043, column: 14, scope: !9886)
!9888 = !DILocation(line: 3043, column: 6, scope: !9886)
!9889 = !DILocation(line: 3044, column: 18, scope: !9886)
!9890 = !DILocation(line: 3044, column: 16, scope: !9886)
!9891 = !DILocation(line: 3044, column: 26, scope: !9886)
!9892 = !DILocation(line: 3044, column: 24, scope: !9886)
!9893 = !DILocation(line: 3044, column: 3, scope: !9886)
!9894 = !DILocation(line: 3044, column: 9, scope: !9886)
!9895 = !DILocation(line: 3045, column: 18, scope: !9886)
!9896 = !DILocation(line: 3045, column: 16, scope: !9886)
!9897 = !DILocation(line: 3045, column: 26, scope: !9886)
!9898 = !DILocation(line: 3045, column: 24, scope: !9886)
!9899 = !DILocation(line: 3045, column: 3, scope: !9886)
!9900 = !DILocation(line: 3045, column: 9, scope: !9886)
!9901 = !DILocation(line: 3046, column: 18, scope: !9886)
!9902 = !DILocation(line: 3046, column: 16, scope: !9886)
!9903 = !DILocation(line: 3046, column: 26, scope: !9886)
!9904 = !DILocation(line: 3046, column: 24, scope: !9886)
!9905 = !DILocation(line: 3046, column: 3, scope: !9886)
!9906 = !DILocation(line: 3046, column: 9, scope: !9886)
!9907 = !DILocation(line: 3047, column: 8, scope: !9886)
!9908 = !DILocation(line: 3047, column: 6, scope: !9886)
!9909 = !DILocation(line: 3048, column: 2, scope: !9886)
!9910 = !DILocation(line: 3050, column: 8, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9882, file: !1, line: 3049, column: 7)
!9912 = !DILocation(line: 3050, column: 14, scope: !9911)
!9913 = !DILocation(line: 3050, column: 6, scope: !9911)
!9914 = !DILocation(line: 3053, column: 6, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9832, file: !1, line: 3053, column: 6)
!9916 = !DILocation(line: 3053, column: 11, scope: !9915)
!9917 = !DILocation(line: 3053, column: 6, scope: !9832)
!9918 = !DILocation(line: 3054, column: 18, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9915, file: !1, line: 3053, column: 20)
!9920 = !DILocation(line: 3054, column: 16, scope: !9919)
!9921 = !DILocation(line: 3054, column: 26, scope: !9919)
!9922 = !DILocation(line: 3054, column: 24, scope: !9919)
!9923 = !DILocation(line: 3054, column: 3, scope: !9919)
!9924 = !DILocation(line: 3054, column: 9, scope: !9919)
!9925 = !DILocation(line: 3055, column: 18, scope: !9919)
!9926 = !DILocation(line: 3055, column: 16, scope: !9919)
!9927 = !DILocation(line: 3055, column: 26, scope: !9919)
!9928 = !DILocation(line: 3055, column: 24, scope: !9919)
!9929 = !DILocation(line: 3055, column: 3, scope: !9919)
!9930 = !DILocation(line: 3055, column: 9, scope: !9919)
!9931 = !DILocation(line: 3056, column: 18, scope: !9919)
!9932 = !DILocation(line: 3056, column: 16, scope: !9919)
!9933 = !DILocation(line: 3056, column: 26, scope: !9919)
!9934 = !DILocation(line: 3056, column: 24, scope: !9919)
!9935 = !DILocation(line: 3056, column: 3, scope: !9919)
!9936 = !DILocation(line: 3056, column: 9, scope: !9919)
!9937 = !DILocation(line: 3057, column: 8, scope: !9919)
!9938 = !DILocation(line: 3057, column: 6, scope: !9919)
!9939 = !DILocation(line: 3058, column: 2, scope: !9919)
!9940 = !DILocation(line: 3060, column: 8, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9915, file: !1, line: 3059, column: 7)
!9942 = !DILocation(line: 3060, column: 14, scope: !9941)
!9943 = !DILocation(line: 3060, column: 6, scope: !9941)
!9944 = !DILocation(line: 3063, column: 14, scope: !9832)
!9945 = !DILocation(line: 3063, column: 22, scope: !9832)
!9946 = !DILocation(line: 3063, column: 26, scope: !9832)
!9947 = !DILocation(line: 3063, column: 2, scope: !9832)
!9948 = !DILocation(line: 3064, column: 14, scope: !9832)
!9949 = !DILocation(line: 3064, column: 22, scope: !9832)
!9950 = !DILocation(line: 3064, column: 26, scope: !9832)
!9951 = !DILocation(line: 3064, column: 2, scope: !9832)
!9952 = !DILocation(line: 3066, column: 6, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9832, file: !1, line: 3066, column: 6)
!9954 = !DILocation(line: 3066, column: 6, scope: !9832)
!9955 = !DILocation(line: 3067, column: 11, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9953, file: !1, line: 3066, column: 17)
!9957 = !DILocation(line: 3067, column: 9, scope: !9956)
!9958 = !DILocation(line: 3068, column: 11, scope: !9956)
!9959 = !DILocation(line: 3068, column: 9, scope: !9956)
!9960 = !DILocation(line: 3069, column: 2, scope: !9956)
!9961 = !DILocation(line: 3071, column: 18, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9953, file: !1, line: 3070, column: 7)
!9963 = !DILocation(line: 3071, column: 11, scope: !9962)
!9964 = !DILocation(line: 3071, column: 9, scope: !9962)
!9965 = !DILocation(line: 3072, column: 18, scope: !9962)
!9966 = !DILocation(line: 3072, column: 11, scope: !9962)
!9967 = !DILocation(line: 3072, column: 9, scope: !9962)
!9968 = !DILocation(line: 3075, column: 6, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9832, file: !1, line: 3075, column: 6)
!9970 = !DILocation(line: 3075, column: 12, scope: !9969)
!9971 = !DILocation(line: 3075, column: 6, scope: !9832)
!9972 = !DILocation(line: 3075, column: 27, scope: !9969)
!9973 = !DILocation(line: 3075, column: 21, scope: !9969)
!9974 = !DILocation(line: 3076, column: 6, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9832, file: !1, line: 3076, column: 6)
!9976 = !DILocation(line: 3076, column: 12, scope: !9975)
!9977 = !DILocation(line: 3076, column: 6, scope: !9832)
!9978 = !DILocation(line: 3076, column: 27, scope: !9975)
!9979 = !DILocation(line: 3076, column: 21, scope: !9975)
!9980 = !DILocation(line: 3078, column: 14, scope: !9832)
!9981 = !DILocation(line: 3078, column: 22, scope: !9832)
!9982 = !DILocation(line: 3078, column: 20, scope: !9832)
!9983 = !DILocation(line: 3078, column: 12, scope: !9832)
!9984 = !DILocation(line: 3080, column: 6, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9832, file: !1, line: 3080, column: 6)
!9986 = !DILocation(line: 3080, column: 44, scope: !9985)
!9987 = !DILocation(line: 3080, column: 47, scope: !9985)
!9988 = !DILocation(line: 3080, column: 6, scope: !9832)
!9989 = !DILocalVariable(name: "tvec", scope: !9990, file: !1, line: 3081, type: !201)
!9990 = distinct !DILexicalBlock(scope: !9985, file: !1, line: 3080, column: 86)
!9991 = !DILocation(line: 3081, column: 9, scope: !9990)
!9992 = !DILocation(line: 3082, column: 13, scope: !9990)
!9993 = !DILocation(line: 3082, column: 25, scope: !9990)
!9994 = !DILocation(line: 3082, column: 23, scope: !9990)
!9995 = !DILocation(line: 3082, column: 33, scope: !9990)
!9996 = !DILocation(line: 3082, column: 45, scope: !9990)
!9997 = !DILocation(line: 3082, column: 43, scope: !9990)
!9998 = !DILocation(line: 3082, column: 31, scope: !9990)
!9999 = !DILocation(line: 3082, column: 3, scope: !9990)
!10000 = !DILocation(line: 3082, column: 11, scope: !9990)
!10001 = !DILocation(line: 3083, column: 13, scope: !9990)
!10002 = !DILocation(line: 3083, column: 25, scope: !9990)
!10003 = !DILocation(line: 3083, column: 23, scope: !9990)
!10004 = !DILocation(line: 3083, column: 33, scope: !9990)
!10005 = !DILocation(line: 3083, column: 45, scope: !9990)
!10006 = !DILocation(line: 3083, column: 43, scope: !9990)
!10007 = !DILocation(line: 3083, column: 31, scope: !9990)
!10008 = !DILocation(line: 3083, column: 3, scope: !9990)
!10009 = !DILocation(line: 3083, column: 11, scope: !9990)
!10010 = !DILocation(line: 3084, column: 13, scope: !9990)
!10011 = !DILocation(line: 3084, column: 25, scope: !9990)
!10012 = !DILocation(line: 3084, column: 23, scope: !9990)
!10013 = !DILocation(line: 3084, column: 33, scope: !9990)
!10014 = !DILocation(line: 3084, column: 45, scope: !9990)
!10015 = !DILocation(line: 3084, column: 43, scope: !9990)
!10016 = !DILocation(line: 3084, column: 31, scope: !9990)
!10017 = !DILocation(line: 3084, column: 3, scope: !9990)
!10018 = !DILocation(line: 3084, column: 11, scope: !9990)
!10019 = !DILocation(line: 3086, column: 7, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !9990, file: !1, line: 3086, column: 7)
!10021 = !DILocation(line: 3086, column: 7, scope: !9990)
!10022 = !DILocation(line: 3087, column: 10, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10020, file: !1, line: 3086, column: 18)
!10024 = !DILocation(line: 3087, column: 8, scope: !10023)
!10025 = !DILocation(line: 3088, column: 3, scope: !10023)
!10026 = !DILocation(line: 3090, column: 17, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !10020, file: !1, line: 3089, column: 8)
!10028 = !DILocation(line: 3090, column: 10, scope: !10027)
!10029 = !DILocation(line: 3090, column: 8, scope: !10027)
!10030 = !DILocation(line: 3092, column: 7, scope: !9990)
!10031 = !DILocation(line: 3094, column: 7, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !9990, file: !1, line: 3094, column: 7)
!10033 = !DILocation(line: 3094, column: 11, scope: !10032)
!10034 = !DILocation(line: 3094, column: 7, scope: !9990)
!10035 = !DILocalVariable(name: "leftviolate", scope: !10036, file: !1, line: 3096, type: !551)
!10036 = distinct !DILexicalBlock(scope: !10032, file: !1, line: 3094, column: 20)
!10037 = !DILocation(line: 3096, column: 9, scope: !10036)
!10038 = !DILocalVariable(name: "rightviolate", scope: !10036, file: !1, line: 3096, type: !551)
!10039 = !DILocation(line: 3096, column: 30, scope: !10036)
!10040 = !DILocation(line: 3098, column: 8, scope: !10041)
!10041 = distinct !DILexicalBlock(scope: !10036, file: !1, line: 3098, column: 8)
!10042 = !DILocation(line: 3098, column: 23, scope: !10041)
!10043 = !DILocation(line: 3098, column: 21, scope: !10041)
!10044 = !DILocation(line: 3098, column: 14, scope: !10041)
!10045 = !DILocation(line: 3098, column: 8, scope: !10036)
!10046 = !DILocation(line: 3099, column: 20, scope: !10041)
!10047 = !DILocation(line: 3099, column: 18, scope: !10041)
!10048 = !DILocation(line: 3099, column: 11, scope: !10041)
!10049 = !DILocation(line: 3099, column: 5, scope: !10041)
!10050 = !DILocation(line: 3100, column: 8, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10036, file: !1, line: 3100, column: 8)
!10052 = !DILocation(line: 3100, column: 23, scope: !10051)
!10053 = !DILocation(line: 3100, column: 21, scope: !10051)
!10054 = !DILocation(line: 3100, column: 14, scope: !10051)
!10055 = !DILocation(line: 3100, column: 8, scope: !10036)
!10056 = !DILocation(line: 3101, column: 20, scope: !10051)
!10057 = !DILocation(line: 3101, column: 18, scope: !10051)
!10058 = !DILocation(line: 3101, column: 11, scope: !10051)
!10059 = !DILocation(line: 3101, column: 5, scope: !10051)
!10060 = !DILocation(line: 3103, column: 8, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10036, file: !1, line: 3103, column: 8)
!10062 = !DILocation(line: 3103, column: 8, scope: !10036)
!10063 = !DILocation(line: 3104, column: 14, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10061, file: !1, line: 3103, column: 47)
!10065 = !DILocation(line: 3104, column: 11, scope: !10064)
!10066 = !DILocation(line: 3105, column: 20, scope: !10064)
!10067 = !DILocation(line: 3105, column: 27, scope: !10064)
!10068 = !DILocation(line: 3105, column: 31, scope: !10064)
!10069 = !DILocation(line: 3105, column: 38, scope: !10064)
!10070 = !DILocation(line: 3105, column: 37, scope: !10064)
!10071 = !DILocation(line: 3105, column: 5, scope: !10064)
!10072 = !DILocation(line: 3107, column: 10, scope: !10073)
!10073 = distinct !DILexicalBlock(scope: !10064, file: !1, line: 3107, column: 9)
!10074 = !DILocation(line: 3107, column: 16, scope: !10073)
!10075 = !DILocation(line: 3107, column: 19, scope: !10073)
!10076 = !DILocation(line: 3107, column: 36, scope: !10073)
!10077 = !DILocation(line: 3107, column: 39, scope: !10073)
!10078 = !DILocation(line: 3107, column: 44, scope: !10073)
!10079 = !DILocation(line: 3107, column: 47, scope: !10073)
!10080 = !DILocation(line: 3107, column: 9, scope: !10064)
!10081 = !DILocalVariable(name: "ydiff1", scope: !10082, file: !1, line: 3108, type: !128)
!10082 = distinct !DILexicalBlock(scope: !10073, file: !1, line: 3107, column: 53)
!10083 = !DILocation(line: 3108, column: 12, scope: !10082)
!10084 = !DILocation(line: 3108, column: 21, scope: !10082)
!10085 = !DILocation(line: 3108, column: 27, scope: !10082)
!10086 = !DILocation(line: 3108, column: 39, scope: !10082)
!10087 = !DILocation(line: 3108, column: 45, scope: !10082)
!10088 = !DILocation(line: 3108, column: 37, scope: !10082)
!10089 = !DILocalVariable(name: "ydiff2", scope: !10082, file: !1, line: 3109, type: !128)
!10090 = !DILocation(line: 3109, column: 12, scope: !10082)
!10091 = !DILocation(line: 3109, column: 21, scope: !10082)
!10092 = !DILocation(line: 3109, column: 27, scope: !10082)
!10093 = !DILocation(line: 3109, column: 39, scope: !10082)
!10094 = !DILocation(line: 3109, column: 45, scope: !10082)
!10095 = !DILocation(line: 3109, column: 37, scope: !10082)
!10096 = !DILocation(line: 3110, column: 11, scope: !10097)
!10097 = distinct !DILexicalBlock(scope: !10082, file: !1, line: 3110, column: 10)
!10098 = !DILocation(line: 3110, column: 18, scope: !10097)
!10099 = !DILocation(line: 3110, column: 26, scope: !10097)
!10100 = !DILocation(line: 3110, column: 29, scope: !10097)
!10101 = !DILocation(line: 3110, column: 36, scope: !10097)
!10102 = !DILocation(line: 3110, column: 45, scope: !10097)
!10103 = !DILocation(line: 3110, column: 49, scope: !10097)
!10104 = !DILocation(line: 3110, column: 56, scope: !10097)
!10105 = !DILocation(line: 3110, column: 64, scope: !10097)
!10106 = !DILocation(line: 3110, column: 67, scope: !10097)
!10107 = !DILocation(line: 3110, column: 74, scope: !10097)
!10108 = !DILocation(line: 3110, column: 10, scope: !10082)
!10109 = !DILocation(line: 3111, column: 25, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !10097, file: !1, line: 3110, column: 84)
!10111 = !DILocation(line: 3111, column: 31, scope: !10110)
!10112 = !DILocation(line: 3111, column: 7, scope: !10110)
!10113 = !DILocation(line: 3111, column: 13, scope: !10110)
!10114 = !DILocation(line: 3111, column: 23, scope: !10110)
!10115 = !DILocation(line: 3112, column: 6, scope: !10110)
!10116 = !DILocation(line: 3114, column: 11, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10118, file: !1, line: 3114, column: 11)
!10118 = distinct !DILexicalBlock(scope: !10097, file: !1, line: 3113, column: 11)
!10119 = !DILocation(line: 3114, column: 18, scope: !10117)
!10120 = !DILocation(line: 3114, column: 11, scope: !10118)
!10121 = !DILocation(line: 3115, column: 12, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !10123, file: !1, line: 3115, column: 12)
!10123 = distinct !DILexicalBlock(scope: !10117, file: !1, line: 3114, column: 27)
!10124 = !DILocation(line: 3115, column: 18, scope: !10122)
!10125 = !DILocation(line: 3115, column: 30, scope: !10122)
!10126 = !DILocation(line: 3115, column: 36, scope: !10122)
!10127 = !DILocation(line: 3115, column: 28, scope: !10122)
!10128 = !DILocation(line: 3115, column: 12, scope: !10123)
!10129 = !DILocation(line: 3116, column: 27, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10122, file: !1, line: 3115, column: 47)
!10131 = !DILocation(line: 3116, column: 33, scope: !10130)
!10132 = !DILocation(line: 3116, column: 9, scope: !10130)
!10133 = !DILocation(line: 3116, column: 15, scope: !10130)
!10134 = !DILocation(line: 3116, column: 25, scope: !10130)
!10135 = !DILocation(line: 3117, column: 21, scope: !10130)
!10136 = !DILocation(line: 3118, column: 8, scope: !10130)
!10137 = !DILocation(line: 3119, column: 7, scope: !10123)
!10138 = !DILocation(line: 3121, column: 12, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !10140, file: !1, line: 3121, column: 12)
!10140 = distinct !DILexicalBlock(scope: !10117, file: !1, line: 3120, column: 12)
!10141 = !DILocation(line: 3121, column: 18, scope: !10139)
!10142 = !DILocation(line: 3121, column: 30, scope: !10139)
!10143 = !DILocation(line: 3121, column: 36, scope: !10139)
!10144 = !DILocation(line: 3121, column: 28, scope: !10139)
!10145 = !DILocation(line: 3121, column: 12, scope: !10140)
!10146 = !DILocation(line: 3122, column: 27, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10139, file: !1, line: 3121, column: 47)
!10148 = !DILocation(line: 3122, column: 33, scope: !10147)
!10149 = !DILocation(line: 3122, column: 9, scope: !10147)
!10150 = !DILocation(line: 3122, column: 15, scope: !10147)
!10151 = !DILocation(line: 3122, column: 25, scope: !10147)
!10152 = !DILocation(line: 3123, column: 21, scope: !10147)
!10153 = !DILocation(line: 3124, column: 8, scope: !10147)
!10154 = !DILocation(line: 3127, column: 5, scope: !10082)
!10155 = !DILocation(line: 3128, column: 4, scope: !10064)
!10156 = !DILocation(line: 3129, column: 8, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10036, file: !1, line: 3129, column: 8)
!10158 = !DILocation(line: 3129, column: 8, scope: !10036)
!10159 = !DILocation(line: 3130, column: 14, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10157, file: !1, line: 3129, column: 47)
!10161 = !DILocation(line: 3130, column: 11, scope: !10160)
!10162 = !DILocation(line: 3131, column: 20, scope: !10160)
!10163 = !DILocation(line: 3131, column: 27, scope: !10160)
!10164 = !DILocation(line: 3131, column: 31, scope: !10160)
!10165 = !DILocation(line: 3131, column: 38, scope: !10160)
!10166 = !DILocation(line: 3131, column: 5, scope: !10160)
!10167 = !DILocation(line: 3133, column: 10, scope: !10168)
!10168 = distinct !DILexicalBlock(scope: !10160, file: !1, line: 3133, column: 9)
!10169 = !DILocation(line: 3133, column: 16, scope: !10168)
!10170 = !DILocation(line: 3133, column: 19, scope: !10168)
!10171 = !DILocation(line: 3133, column: 36, scope: !10168)
!10172 = !DILocation(line: 3133, column: 39, scope: !10168)
!10173 = !DILocation(line: 3133, column: 44, scope: !10168)
!10174 = !DILocation(line: 3133, column: 47, scope: !10168)
!10175 = !DILocation(line: 3133, column: 9, scope: !10160)
!10176 = !DILocalVariable(name: "ydiff1", scope: !10177, file: !1, line: 3134, type: !128)
!10177 = distinct !DILexicalBlock(scope: !10168, file: !1, line: 3133, column: 53)
!10178 = !DILocation(line: 3134, column: 12, scope: !10177)
!10179 = !DILocation(line: 3134, column: 21, scope: !10177)
!10180 = !DILocation(line: 3134, column: 27, scope: !10177)
!10181 = !DILocation(line: 3134, column: 39, scope: !10177)
!10182 = !DILocation(line: 3134, column: 45, scope: !10177)
!10183 = !DILocation(line: 3134, column: 37, scope: !10177)
!10184 = !DILocalVariable(name: "ydiff2", scope: !10177, file: !1, line: 3135, type: !128)
!10185 = !DILocation(line: 3135, column: 12, scope: !10177)
!10186 = !DILocation(line: 3135, column: 21, scope: !10177)
!10187 = !DILocation(line: 3135, column: 27, scope: !10177)
!10188 = !DILocation(line: 3135, column: 39, scope: !10177)
!10189 = !DILocation(line: 3135, column: 45, scope: !10177)
!10190 = !DILocation(line: 3135, column: 37, scope: !10177)
!10191 = !DILocation(line: 3136, column: 12, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10177, file: !1, line: 3136, column: 11)
!10193 = !DILocation(line: 3136, column: 19, scope: !10192)
!10194 = !DILocation(line: 3136, column: 27, scope: !10192)
!10195 = !DILocation(line: 3136, column: 30, scope: !10192)
!10196 = !DILocation(line: 3136, column: 37, scope: !10192)
!10197 = !DILocation(line: 3136, column: 46, scope: !10192)
!10198 = !DILocation(line: 3136, column: 50, scope: !10192)
!10199 = !DILocation(line: 3136, column: 57, scope: !10192)
!10200 = !DILocation(line: 3136, column: 65, scope: !10192)
!10201 = !DILocation(line: 3136, column: 68, scope: !10192)
!10202 = !DILocation(line: 3136, column: 75, scope: !10192)
!10203 = !DILocation(line: 3136, column: 11, scope: !10177)
!10204 = !DILocation(line: 3137, column: 25, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10192, file: !1, line: 3136, column: 86)
!10206 = !DILocation(line: 3137, column: 31, scope: !10205)
!10207 = !DILocation(line: 3137, column: 7, scope: !10205)
!10208 = !DILocation(line: 3137, column: 13, scope: !10205)
!10209 = !DILocation(line: 3137, column: 23, scope: !10205)
!10210 = !DILocation(line: 3138, column: 6, scope: !10205)
!10211 = !DILocation(line: 3140, column: 11, scope: !10212)
!10212 = distinct !DILexicalBlock(scope: !10213, file: !1, line: 3140, column: 11)
!10213 = distinct !DILexicalBlock(scope: !10192, file: !1, line: 3139, column: 11)
!10214 = !DILocation(line: 3140, column: 18, scope: !10212)
!10215 = !DILocation(line: 3140, column: 11, scope: !10213)
!10216 = !DILocation(line: 3141, column: 12, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10218, file: !1, line: 3141, column: 12)
!10218 = distinct !DILexicalBlock(scope: !10212, file: !1, line: 3140, column: 27)
!10219 = !DILocation(line: 3141, column: 18, scope: !10217)
!10220 = !DILocation(line: 3141, column: 30, scope: !10217)
!10221 = !DILocation(line: 3141, column: 36, scope: !10217)
!10222 = !DILocation(line: 3141, column: 28, scope: !10217)
!10223 = !DILocation(line: 3141, column: 12, scope: !10218)
!10224 = !DILocation(line: 3142, column: 27, scope: !10225)
!10225 = distinct !DILexicalBlock(scope: !10217, file: !1, line: 3141, column: 47)
!10226 = !DILocation(line: 3142, column: 33, scope: !10225)
!10227 = !DILocation(line: 3142, column: 9, scope: !10225)
!10228 = !DILocation(line: 3142, column: 15, scope: !10225)
!10229 = !DILocation(line: 3142, column: 25, scope: !10225)
!10230 = !DILocation(line: 3143, column: 22, scope: !10225)
!10231 = !DILocation(line: 3144, column: 8, scope: !10225)
!10232 = !DILocation(line: 3145, column: 7, scope: !10218)
!10233 = !DILocation(line: 3147, column: 12, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10235, file: !1, line: 3147, column: 12)
!10235 = distinct !DILexicalBlock(scope: !10212, file: !1, line: 3146, column: 12)
!10236 = !DILocation(line: 3147, column: 18, scope: !10234)
!10237 = !DILocation(line: 3147, column: 30, scope: !10234)
!10238 = !DILocation(line: 3147, column: 36, scope: !10234)
!10239 = !DILocation(line: 3147, column: 28, scope: !10234)
!10240 = !DILocation(line: 3147, column: 12, scope: !10235)
!10241 = !DILocation(line: 3148, column: 27, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10234, file: !1, line: 3147, column: 47)
!10243 = !DILocation(line: 3148, column: 33, scope: !10242)
!10244 = !DILocation(line: 3148, column: 9, scope: !10242)
!10245 = !DILocation(line: 3148, column: 15, scope: !10242)
!10246 = !DILocation(line: 3148, column: 25, scope: !10242)
!10247 = !DILocation(line: 3149, column: 22, scope: !10242)
!10248 = !DILocation(line: 3150, column: 8, scope: !10242)
!10249 = !DILocation(line: 3153, column: 5, scope: !10177)
!10250 = !DILocation(line: 3154, column: 4, scope: !10160)
!10251 = !DILocation(line: 3155, column: 8, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !10036, file: !1, line: 3155, column: 8)
!10253 = !DILocation(line: 3155, column: 20, scope: !10252)
!10254 = !DILocation(line: 3155, column: 23, scope: !10252)
!10255 = !DILocation(line: 3155, column: 8, scope: !10036)
!10256 = !DILocalVariable(name: "h1_x", scope: !10257, file: !1, line: 3162, type: !128)
!10257 = distinct !DILexicalBlock(scope: !10258, file: !1, line: 3160, column: 5)
!10258 = distinct !DILexicalBlock(scope: !10252, file: !1, line: 3155, column: 37)
!10259 = !DILocation(line: 3162, column: 12, scope: !10257)
!10260 = !DILocation(line: 3162, column: 19, scope: !10257)
!10261 = !DILocation(line: 3162, column: 30, scope: !10257)
!10262 = !DILocation(line: 3162, column: 28, scope: !10257)
!10263 = !DILocalVariable(name: "h2_x", scope: !10257, file: !1, line: 3163, type: !128)
!10264 = !DILocation(line: 3163, column: 12, scope: !10257)
!10265 = !DILocation(line: 3163, column: 19, scope: !10257)
!10266 = !DILocation(line: 3163, column: 27, scope: !10257)
!10267 = !DILocation(line: 3163, column: 25, scope: !10257)
!10268 = !DILocation(line: 3165, column: 10, scope: !10269)
!10269 = distinct !DILexicalBlock(scope: !10257, file: !1, line: 3165, column: 10)
!10270 = !DILocation(line: 3165, column: 10, scope: !10257)
!10271 = !DILocation(line: 3166, column: 18, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10269, file: !1, line: 3165, column: 23)
!10273 = !DILocation(line: 3166, column: 28, scope: !10272)
!10274 = !DILocation(line: 3166, column: 36, scope: !10272)
!10275 = !DILocation(line: 3166, column: 34, scope: !10272)
!10276 = !DILocation(line: 3166, column: 48, scope: !10272)
!10277 = !DILocation(line: 3166, column: 46, scope: !10272)
!10278 = !DILocation(line: 3166, column: 56, scope: !10272)
!10279 = !DILocation(line: 3166, column: 54, scope: !10272)
!10280 = !DILocation(line: 3166, column: 24, scope: !10272)
!10281 = !DILocation(line: 3166, column: 7, scope: !10272)
!10282 = !DILocation(line: 3166, column: 16, scope: !10272)
!10283 = !DILocation(line: 3167, column: 6, scope: !10272)
!10284 = !DILocation(line: 3169, column: 18, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10269, file: !1, line: 3168, column: 11)
!10286 = !DILocation(line: 3169, column: 28, scope: !10285)
!10287 = !DILocation(line: 3169, column: 36, scope: !10285)
!10288 = !DILocation(line: 3169, column: 34, scope: !10285)
!10289 = !DILocation(line: 3169, column: 48, scope: !10285)
!10290 = !DILocation(line: 3169, column: 46, scope: !10285)
!10291 = !DILocation(line: 3169, column: 56, scope: !10285)
!10292 = !DILocation(line: 3169, column: 54, scope: !10285)
!10293 = !DILocation(line: 3169, column: 24, scope: !10285)
!10294 = !DILocation(line: 3169, column: 7, scope: !10285)
!10295 = !DILocation(line: 3169, column: 16, scope: !10285)
!10296 = !DILocation(line: 3195, column: 4, scope: !10258)
!10297 = !DILocation(line: 3196, column: 3, scope: !10036)
!10298 = !DILocation(line: 3197, column: 2, scope: !9990)
!10299 = !DILocation(line: 3199, column: 6, scope: !10300)
!10300 = distinct !DILexicalBlock(scope: !9832, file: !1, line: 3199, column: 6)
!10301 = !DILocation(line: 3199, column: 12, scope: !10300)
!10302 = !DILocation(line: 3199, column: 15, scope: !10300)
!10303 = !DILocation(line: 3199, column: 6, scope: !9832)
!10304 = !DILocation(line: 3200, column: 18, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10300, file: !1, line: 3199, column: 27)
!10306 = !DILocation(line: 3200, column: 25, scope: !10305)
!10307 = !DILocation(line: 3200, column: 29, scope: !10305)
!10308 = !DILocation(line: 3200, column: 3, scope: !10305)
!10309 = !DILocation(line: 3201, column: 2, scope: !10305)
!10310 = !DILocation(line: 3202, column: 6, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !9832, file: !1, line: 3202, column: 6)
!10312 = !DILocation(line: 3202, column: 12, scope: !10311)
!10313 = !DILocation(line: 3202, column: 15, scope: !10311)
!10314 = !DILocation(line: 3202, column: 6, scope: !9832)
!10315 = !DILocation(line: 3203, column: 18, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10311, file: !1, line: 3202, column: 27)
!10317 = !DILocation(line: 3203, column: 25, scope: !10316)
!10318 = !DILocation(line: 3203, column: 29, scope: !10316)
!10319 = !DILocation(line: 3203, column: 3, scope: !10316)
!10320 = !DILocation(line: 3204, column: 2, scope: !10316)
!10321 = !DILocation(line: 3206, column: 6, scope: !10322)
!10322 = distinct !DILexicalBlock(scope: !9832, file: !1, line: 3206, column: 6)
!10323 = !DILocation(line: 3206, column: 17, scope: !10322)
!10324 = !DILocation(line: 3208, column: 7, scope: !10322)
!10325 = !DILocation(line: 3208, column: 42, scope: !10322)
!10326 = !DILocation(line: 3210, column: 8, scope: !10322)
!10327 = !DILocation(line: 3210, column: 43, scope: !10322)
!10328 = !DILocation(line: 3211, column: 8, scope: !10322)
!10329 = !DILocation(line: 3206, column: 6, scope: !9832)
!10330 = !DILocation(line: 3216, column: 3, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10322, file: !1, line: 3212, column: 2)
!10332 = !DILocation(line: 3219, column: 19, scope: !9832)
!10333 = !DILocation(line: 3219, column: 23, scope: !9832)
!10334 = !DILocation(line: 3219, column: 10, scope: !9832)
!10335 = !DILocation(line: 3219, column: 8, scope: !9832)
!10336 = !DILocation(line: 3220, column: 19, scope: !9832)
!10337 = !DILocation(line: 3220, column: 23, scope: !9832)
!10338 = !DILocation(line: 3220, column: 10, scope: !9832)
!10339 = !DILocation(line: 3220, column: 8, scope: !9832)
!10340 = !DILocation(line: 3222, column: 6, scope: !10341)
!10341 = distinct !DILexicalBlock(scope: !9832, file: !1, line: 3222, column: 6)
!10342 = !DILocation(line: 3222, column: 12, scope: !10341)
!10343 = !DILocation(line: 3222, column: 6, scope: !9832)
!10344 = !DILocation(line: 3222, column: 27, scope: !10341)
!10345 = !DILocation(line: 3222, column: 21, scope: !10341)
!10346 = !DILocation(line: 3223, column: 6, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !9832, file: !1, line: 3223, column: 6)
!10348 = !DILocation(line: 3223, column: 12, scope: !10347)
!10349 = !DILocation(line: 3223, column: 6, scope: !9832)
!10350 = !DILocation(line: 3223, column: 27, scope: !10347)
!10351 = !DILocation(line: 3223, column: 21, scope: !10347)
!10352 = !DILocation(line: 3225, column: 14, scope: !9832)
!10353 = !DILocation(line: 3225, column: 22, scope: !9832)
!10354 = !DILocation(line: 3225, column: 20, scope: !9832)
!10355 = !DILocation(line: 3225, column: 12, scope: !9832)
!10356 = !DILocation(line: 3227, column: 6, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !9832, file: !1, line: 3227, column: 6)
!10358 = !DILocation(line: 3227, column: 12, scope: !10357)
!10359 = !DILocation(line: 3227, column: 15, scope: !10357)
!10360 = !DILocation(line: 3227, column: 6, scope: !9832)
!10361 = !DILocation(line: 3228, column: 7, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10363, file: !1, line: 3228, column: 7)
!10363 = distinct !DILexicalBlock(scope: !10357, file: !1, line: 3227, column: 25)
!10364 = !DILocation(line: 3228, column: 7, scope: !10363)
!10365 = !DILocation(line: 3229, column: 8, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10367, file: !1, line: 3229, column: 8)
!10367 = distinct !DILexicalBlock(scope: !10362, file: !1, line: 3228, column: 54)
!10368 = !DILocation(line: 3229, column: 14, scope: !10366)
!10369 = !DILocation(line: 3229, column: 8, scope: !10367)
!10370 = !DILocation(line: 3230, column: 18, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10366, file: !1, line: 3229, column: 21)
!10372 = !DILocation(line: 3230, column: 16, scope: !10371)
!10373 = !DILocation(line: 3230, column: 9, scope: !10371)
!10374 = !DILocation(line: 3231, column: 16, scope: !10371)
!10375 = !DILocation(line: 3231, column: 24, scope: !10371)
!10376 = !DILocation(line: 3231, column: 31, scope: !10371)
!10377 = !DILocation(line: 3231, column: 39, scope: !10371)
!10378 = !DILocation(line: 3231, column: 37, scope: !10371)
!10379 = !DILocation(line: 3231, column: 28, scope: !10371)
!10380 = !DILocation(line: 3231, column: 22, scope: !10371)
!10381 = !DILocation(line: 3231, column: 5, scope: !10371)
!10382 = !DILocation(line: 3231, column: 14, scope: !10371)
!10383 = !DILocation(line: 3232, column: 16, scope: !10371)
!10384 = !DILocation(line: 3232, column: 24, scope: !10371)
!10385 = !DILocation(line: 3232, column: 31, scope: !10371)
!10386 = !DILocation(line: 3232, column: 39, scope: !10371)
!10387 = !DILocation(line: 3232, column: 37, scope: !10371)
!10388 = !DILocation(line: 3232, column: 28, scope: !10371)
!10389 = !DILocation(line: 3232, column: 22, scope: !10371)
!10390 = !DILocation(line: 3232, column: 5, scope: !10371)
!10391 = !DILocation(line: 3232, column: 14, scope: !10371)
!10392 = !DILocation(line: 3233, column: 16, scope: !10371)
!10393 = !DILocation(line: 3233, column: 24, scope: !10371)
!10394 = !DILocation(line: 3233, column: 31, scope: !10371)
!10395 = !DILocation(line: 3233, column: 39, scope: !10371)
!10396 = !DILocation(line: 3233, column: 37, scope: !10371)
!10397 = !DILocation(line: 3233, column: 28, scope: !10371)
!10398 = !DILocation(line: 3233, column: 22, scope: !10371)
!10399 = !DILocation(line: 3233, column: 5, scope: !10371)
!10400 = !DILocation(line: 3233, column: 14, scope: !10371)
!10401 = !DILocation(line: 3234, column: 4, scope: !10371)
!10402 = !DILocation(line: 3235, column: 3, scope: !10367)
!10403 = !DILocation(line: 3236, column: 7, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10363, file: !1, line: 3236, column: 7)
!10405 = !DILocation(line: 3236, column: 7, scope: !10363)
!10406 = !DILocation(line: 3237, column: 8, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10408, file: !1, line: 3237, column: 8)
!10408 = distinct !DILexicalBlock(scope: !10404, file: !1, line: 3236, column: 54)
!10409 = !DILocation(line: 3237, column: 14, scope: !10407)
!10410 = !DILocation(line: 3237, column: 8, scope: !10408)
!10411 = !DILocation(line: 3238, column: 11, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10407, file: !1, line: 3237, column: 21)
!10413 = !DILocation(line: 3238, column: 9, scope: !10412)
!10414 = !DILocation(line: 3239, column: 16, scope: !10412)
!10415 = !DILocation(line: 3239, column: 24, scope: !10412)
!10416 = !DILocation(line: 3239, column: 31, scope: !10412)
!10417 = !DILocation(line: 3239, column: 39, scope: !10412)
!10418 = !DILocation(line: 3239, column: 37, scope: !10412)
!10419 = !DILocation(line: 3239, column: 28, scope: !10412)
!10420 = !DILocation(line: 3239, column: 22, scope: !10412)
!10421 = !DILocation(line: 3239, column: 5, scope: !10412)
!10422 = !DILocation(line: 3239, column: 14, scope: !10412)
!10423 = !DILocation(line: 3240, column: 16, scope: !10412)
!10424 = !DILocation(line: 3240, column: 24, scope: !10412)
!10425 = !DILocation(line: 3240, column: 31, scope: !10412)
!10426 = !DILocation(line: 3240, column: 39, scope: !10412)
!10427 = !DILocation(line: 3240, column: 37, scope: !10412)
!10428 = !DILocation(line: 3240, column: 28, scope: !10412)
!10429 = !DILocation(line: 3240, column: 22, scope: !10412)
!10430 = !DILocation(line: 3240, column: 5, scope: !10412)
!10431 = !DILocation(line: 3240, column: 14, scope: !10412)
!10432 = !DILocation(line: 3241, column: 16, scope: !10412)
!10433 = !DILocation(line: 3241, column: 24, scope: !10412)
!10434 = !DILocation(line: 3241, column: 31, scope: !10412)
!10435 = !DILocation(line: 3241, column: 39, scope: !10412)
!10436 = !DILocation(line: 3241, column: 37, scope: !10412)
!10437 = !DILocation(line: 3241, column: 28, scope: !10412)
!10438 = !DILocation(line: 3241, column: 22, scope: !10412)
!10439 = !DILocation(line: 3241, column: 5, scope: !10412)
!10440 = !DILocation(line: 3241, column: 14, scope: !10412)
!10441 = !DILocation(line: 3242, column: 4, scope: !10412)
!10442 = !DILocation(line: 3243, column: 3, scope: !10408)
!10443 = !DILocation(line: 3244, column: 2, scope: !10363)
!10444 = !DILocation(line: 3246, column: 7, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10446, file: !1, line: 3246, column: 7)
!10446 = distinct !DILexicalBlock(scope: !10357, file: !1, line: 3245, column: 7)
!10447 = !DILocation(line: 3246, column: 7, scope: !10446)
!10448 = !DILocation(line: 3247, column: 8, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10450, file: !1, line: 3247, column: 8)
!10450 = distinct !DILexicalBlock(scope: !10445, file: !1, line: 3246, column: 54)
!10451 = !DILocation(line: 3247, column: 14, scope: !10449)
!10452 = !DILocation(line: 3247, column: 8, scope: !10450)
!10453 = !DILocation(line: 3248, column: 11, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10449, file: !1, line: 3247, column: 21)
!10455 = !DILocation(line: 3248, column: 9, scope: !10454)
!10456 = !DILocation(line: 3249, column: 16, scope: !10454)
!10457 = !DILocation(line: 3249, column: 24, scope: !10454)
!10458 = !DILocation(line: 3249, column: 31, scope: !10454)
!10459 = !DILocation(line: 3249, column: 39, scope: !10454)
!10460 = !DILocation(line: 3249, column: 37, scope: !10454)
!10461 = !DILocation(line: 3249, column: 28, scope: !10454)
!10462 = !DILocation(line: 3249, column: 22, scope: !10454)
!10463 = !DILocation(line: 3249, column: 5, scope: !10454)
!10464 = !DILocation(line: 3249, column: 14, scope: !10454)
!10465 = !DILocation(line: 3250, column: 16, scope: !10454)
!10466 = !DILocation(line: 3250, column: 24, scope: !10454)
!10467 = !DILocation(line: 3250, column: 31, scope: !10454)
!10468 = !DILocation(line: 3250, column: 39, scope: !10454)
!10469 = !DILocation(line: 3250, column: 37, scope: !10454)
!10470 = !DILocation(line: 3250, column: 28, scope: !10454)
!10471 = !DILocation(line: 3250, column: 22, scope: !10454)
!10472 = !DILocation(line: 3250, column: 5, scope: !10454)
!10473 = !DILocation(line: 3250, column: 14, scope: !10454)
!10474 = !DILocation(line: 3251, column: 16, scope: !10454)
!10475 = !DILocation(line: 3251, column: 24, scope: !10454)
!10476 = !DILocation(line: 3251, column: 31, scope: !10454)
!10477 = !DILocation(line: 3251, column: 39, scope: !10454)
!10478 = !DILocation(line: 3251, column: 37, scope: !10454)
!10479 = !DILocation(line: 3251, column: 28, scope: !10454)
!10480 = !DILocation(line: 3251, column: 22, scope: !10454)
!10481 = !DILocation(line: 3251, column: 5, scope: !10454)
!10482 = !DILocation(line: 3251, column: 14, scope: !10454)
!10483 = !DILocation(line: 3252, column: 4, scope: !10454)
!10484 = !DILocation(line: 3253, column: 3, scope: !10450)
!10485 = !DILocation(line: 3254, column: 7, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10446, file: !1, line: 3254, column: 7)
!10487 = !DILocation(line: 3254, column: 7, scope: !10446)
!10488 = !DILocation(line: 3255, column: 8, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10490, file: !1, line: 3255, column: 8)
!10490 = distinct !DILexicalBlock(scope: !10486, file: !1, line: 3254, column: 54)
!10491 = !DILocation(line: 3255, column: 14, scope: !10489)
!10492 = !DILocation(line: 3255, column: 8, scope: !10490)
!10493 = !DILocation(line: 3256, column: 18, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10489, file: !1, line: 3255, column: 21)
!10495 = !DILocation(line: 3256, column: 16, scope: !10494)
!10496 = !DILocation(line: 3256, column: 9, scope: !10494)
!10497 = !DILocation(line: 3257, column: 16, scope: !10494)
!10498 = !DILocation(line: 3257, column: 24, scope: !10494)
!10499 = !DILocation(line: 3257, column: 31, scope: !10494)
!10500 = !DILocation(line: 3257, column: 39, scope: !10494)
!10501 = !DILocation(line: 3257, column: 37, scope: !10494)
!10502 = !DILocation(line: 3257, column: 28, scope: !10494)
!10503 = !DILocation(line: 3257, column: 22, scope: !10494)
!10504 = !DILocation(line: 3257, column: 5, scope: !10494)
!10505 = !DILocation(line: 3257, column: 14, scope: !10494)
!10506 = !DILocation(line: 3258, column: 16, scope: !10494)
!10507 = !DILocation(line: 3258, column: 24, scope: !10494)
!10508 = !DILocation(line: 3258, column: 31, scope: !10494)
!10509 = !DILocation(line: 3258, column: 39, scope: !10494)
!10510 = !DILocation(line: 3258, column: 37, scope: !10494)
!10511 = !DILocation(line: 3258, column: 28, scope: !10494)
!10512 = !DILocation(line: 3258, column: 22, scope: !10494)
!10513 = !DILocation(line: 3258, column: 5, scope: !10494)
!10514 = !DILocation(line: 3258, column: 14, scope: !10494)
!10515 = !DILocation(line: 3259, column: 16, scope: !10494)
!10516 = !DILocation(line: 3259, column: 24, scope: !10494)
!10517 = !DILocation(line: 3259, column: 31, scope: !10494)
!10518 = !DILocation(line: 3259, column: 39, scope: !10494)
!10519 = !DILocation(line: 3259, column: 37, scope: !10494)
!10520 = !DILocation(line: 3259, column: 28, scope: !10494)
!10521 = !DILocation(line: 3259, column: 22, scope: !10494)
!10522 = !DILocation(line: 3259, column: 5, scope: !10494)
!10523 = !DILocation(line: 3259, column: 14, scope: !10494)
!10524 = !DILocation(line: 3260, column: 4, scope: !10494)
!10525 = !DILocation(line: 3261, column: 3, scope: !10490)
!10526 = !DILocation(line: 3266, column: 1, scope: !9832)
!10527 = distinct !DISubprogram(name: "calchandlesNurb_intern", scope: !1, file: !1, line: 3268, type: !10528, scopeLine: 3269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!10528 = !DISubroutineType(types: !10529)
!10529 = !{null, !1782, !551}
!10530 = !DILocalVariable(name: "nu", arg: 1, scope: !10527, file: !1, line: 3268, type: !1782)
!10531 = !DILocation(line: 3268, column: 42, scope: !10527)
!10532 = !DILocalVariable(name: "skip_align", arg: 2, scope: !10527, file: !1, line: 3268, type: !551)
!10533 = !DILocation(line: 3268, column: 51, scope: !10527)
!10534 = !DILocalVariable(name: "bezt", scope: !10527, file: !1, line: 3270, type: !1817)
!10535 = !DILocation(line: 3270, column: 13, scope: !10527)
!10536 = !DILocalVariable(name: "prev", scope: !10527, file: !1, line: 3270, type: !1817)
!10537 = !DILocation(line: 3270, column: 20, scope: !10527)
!10538 = !DILocalVariable(name: "next", scope: !10527, file: !1, line: 3270, type: !1817)
!10539 = !DILocation(line: 3270, column: 27, scope: !10527)
!10540 = !DILocalVariable(name: "a", scope: !10527, file: !1, line: 3271, type: !79)
!10541 = !DILocation(line: 3271, column: 6, scope: !10527)
!10542 = !DILocation(line: 3273, column: 6, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10527, file: !1, line: 3273, column: 6)
!10544 = !DILocation(line: 3273, column: 10, scope: !10543)
!10545 = !DILocation(line: 3273, column: 15, scope: !10543)
!10546 = !DILocation(line: 3273, column: 6, scope: !10527)
!10547 = !DILocation(line: 3274, column: 3, scope: !10543)
!10548 = !DILocation(line: 3275, column: 6, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10527, file: !1, line: 3275, column: 6)
!10550 = !DILocation(line: 3275, column: 10, scope: !10549)
!10551 = !DILocation(line: 3275, column: 16, scope: !10549)
!10552 = !DILocation(line: 3275, column: 6, scope: !10527)
!10553 = !DILocation(line: 3276, column: 3, scope: !10549)
!10554 = !DILocation(line: 3278, column: 6, scope: !10527)
!10555 = !DILocation(line: 3278, column: 10, scope: !10527)
!10556 = !DILocation(line: 3278, column: 4, scope: !10527)
!10557 = !DILocation(line: 3279, column: 9, scope: !10527)
!10558 = !DILocation(line: 3279, column: 13, scope: !10527)
!10559 = !DILocation(line: 3279, column: 7, scope: !10527)
!10560 = !DILocation(line: 3280, column: 6, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10527, file: !1, line: 3280, column: 6)
!10562 = !DILocation(line: 3280, column: 10, scope: !10561)
!10563 = !DILocation(line: 3280, column: 16, scope: !10561)
!10564 = !DILocation(line: 3280, column: 6, scope: !10527)
!10565 = !DILocation(line: 3280, column: 41, scope: !10561)
!10566 = !DILocation(line: 3280, column: 49, scope: !10561)
!10567 = !DILocation(line: 3280, column: 51, scope: !10561)
!10568 = !DILocation(line: 3280, column: 46, scope: !10561)
!10569 = !DILocation(line: 3280, column: 39, scope: !10561)
!10570 = !DILocation(line: 3280, column: 34, scope: !10561)
!10571 = !DILocation(line: 3281, column: 12, scope: !10561)
!10572 = !DILocation(line: 3282, column: 9, scope: !10527)
!10573 = !DILocation(line: 3282, column: 14, scope: !10527)
!10574 = !DILocation(line: 3282, column: 7, scope: !10527)
!10575 = !DILocation(line: 3284, column: 2, scope: !10527)
!10576 = !DILocation(line: 3284, column: 10, scope: !10527)
!10577 = !DILocation(line: 3285, column: 25, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10527, file: !1, line: 3284, column: 14)
!10579 = !DILocation(line: 3285, column: 31, scope: !10578)
!10580 = !DILocation(line: 3285, column: 37, scope: !10578)
!10581 = !DILocation(line: 3285, column: 46, scope: !10578)
!10582 = !DILocation(line: 3285, column: 3, scope: !10578)
!10583 = !DILocation(line: 3286, column: 10, scope: !10578)
!10584 = !DILocation(line: 3286, column: 8, scope: !10578)
!10585 = !DILocation(line: 3287, column: 7, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10578, file: !1, line: 3287, column: 7)
!10587 = !DILocation(line: 3287, column: 9, scope: !10586)
!10588 = !DILocation(line: 3287, column: 7, scope: !10578)
!10589 = !DILocation(line: 3288, column: 8, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10591, file: !1, line: 3288, column: 8)
!10591 = distinct !DILexicalBlock(scope: !10586, file: !1, line: 3287, column: 15)
!10592 = !DILocation(line: 3288, column: 12, scope: !10590)
!10593 = !DILocation(line: 3288, column: 18, scope: !10590)
!10594 = !DILocation(line: 3288, column: 8, scope: !10591)
!10595 = !DILocation(line: 3289, column: 12, scope: !10590)
!10596 = !DILocation(line: 3289, column: 16, scope: !10590)
!10597 = !DILocation(line: 3289, column: 10, scope: !10590)
!10598 = !DILocation(line: 3289, column: 5, scope: !10590)
!10599 = !DILocation(line: 3291, column: 10, scope: !10590)
!10600 = !DILocation(line: 3292, column: 3, scope: !10591)
!10601 = !DILocation(line: 3294, column: 8, scope: !10586)
!10602 = !DILocation(line: 3296, column: 7, scope: !10578)
!10603 = distinct !{!10603, !10575, !10604}
!10604 = !DILocation(line: 3297, column: 2, scope: !10527)
!10605 = !DILocation(line: 3298, column: 1, scope: !10527)
!10606 = distinct !DISubprogram(name: "BKE_nurb_handle_calc_simple", scope: !1, file: !1, line: 3337, type: !10607, scopeLine: 3338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!10607 = !DISubroutineType(types: !10608)
!10608 = !{null, !1782, !1817}
!10609 = !DILocalVariable(name: "nu", arg: 1, scope: !10606, file: !1, line: 3337, type: !1782)
!10610 = !DILocation(line: 3337, column: 40, scope: !10606)
!10611 = !DILocalVariable(name: "bezt", arg: 2, scope: !10606, file: !1, line: 3337, type: !1817)
!10612 = !DILocation(line: 3337, column: 55, scope: !10606)
!10613 = !DILocation(line: 3339, column: 6, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10606, file: !1, line: 3339, column: 6)
!10615 = !DILocation(line: 3339, column: 10, scope: !10614)
!10616 = !DILocation(line: 3339, column: 16, scope: !10614)
!10617 = !DILocation(line: 3339, column: 6, scope: !10606)
!10618 = !DILocalVariable(name: "prev", scope: !10619, file: !1, line: 3340, type: !1817)
!10619 = distinct !DILexicalBlock(scope: !10614, file: !1, line: 3339, column: 21)
!10620 = !DILocation(line: 3340, column: 14, scope: !10619)
!10621 = !DILocation(line: 3340, column: 44, scope: !10619)
!10622 = !DILocation(line: 3340, column: 48, scope: !10619)
!10623 = !DILocation(line: 3340, column: 21, scope: !10619)
!10624 = !DILocalVariable(name: "next", scope: !10619, file: !1, line: 3341, type: !1817)
!10625 = !DILocation(line: 3341, column: 14, scope: !10619)
!10626 = !DILocation(line: 3341, column: 44, scope: !10619)
!10627 = !DILocation(line: 3341, column: 48, scope: !10619)
!10628 = !DILocation(line: 3341, column: 21, scope: !10619)
!10629 = !DILocation(line: 3342, column: 24, scope: !10619)
!10630 = !DILocation(line: 3342, column: 30, scope: !10619)
!10631 = !DILocation(line: 3342, column: 36, scope: !10619)
!10632 = !DILocation(line: 3342, column: 3, scope: !10619)
!10633 = !DILocation(line: 3343, column: 2, scope: !10619)
!10634 = !DILocation(line: 3344, column: 1, scope: !10606)
!10635 = distinct !DISubprogram(name: "BKE_nurb_bezt_handle_test", scope: !1, file: !1, line: 3351, type: !10636, scopeLine: 3352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!10636 = !DISubroutineType(types: !10637)
!10637 = !{null, !1817, !6595}
!10638 = !DILocalVariable(name: "bezt", arg: 1, scope: !10635, file: !1, line: 3351, type: !1817)
!10639 = !DILocation(line: 3351, column: 43, scope: !10635)
!10640 = !DILocalVariable(name: "use_handle", arg: 2, scope: !10635, file: !1, line: 3351, type: !6595)
!10641 = !DILocation(line: 3351, column: 60, scope: !10635)
!10642 = !DILocalVariable(name: "flag", scope: !10635, file: !1, line: 3353, type: !77)
!10643 = !DILocation(line: 3353, column: 8, scope: !10635)
!10644 = !DILocation(line: 3359, column: 6, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10635, file: !1, line: 3359, column: 6)
!10646 = !DILocation(line: 3359, column: 6, scope: !10635)
!10647 = !DILocation(line: 3360, column: 7, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10649, file: !1, line: 3360, column: 7)
!10649 = distinct !DILexicalBlock(scope: !10645, file: !1, line: 3359, column: 18)
!10650 = !DILocation(line: 3360, column: 13, scope: !10648)
!10651 = !DILocation(line: 3360, column: 16, scope: !10648)
!10652 = !DILocation(line: 3360, column: 7, scope: !10649)
!10653 = !DILocation(line: 3360, column: 31, scope: !10648)
!10654 = !DILocation(line: 3360, column: 26, scope: !10648)
!10655 = !DILocation(line: 3361, column: 7, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10649, file: !1, line: 3361, column: 7)
!10657 = !DILocation(line: 3361, column: 13, scope: !10656)
!10658 = !DILocation(line: 3361, column: 16, scope: !10656)
!10659 = !DILocation(line: 3361, column: 7, scope: !10649)
!10660 = !DILocation(line: 3361, column: 31, scope: !10656)
!10661 = !DILocation(line: 3361, column: 26, scope: !10656)
!10662 = !DILocation(line: 3362, column: 7, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10649, file: !1, line: 3362, column: 7)
!10664 = !DILocation(line: 3362, column: 13, scope: !10663)
!10665 = !DILocation(line: 3362, column: 16, scope: !10663)
!10666 = !DILocation(line: 3362, column: 7, scope: !10649)
!10667 = !DILocation(line: 3362, column: 31, scope: !10663)
!10668 = !DILocation(line: 3362, column: 26, scope: !10663)
!10669 = !DILocation(line: 3363, column: 2, scope: !10649)
!10670 = !DILocation(line: 3365, column: 11, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !10645, file: !1, line: 3364, column: 7)
!10672 = !DILocation(line: 3365, column: 17, scope: !10671)
!10673 = !DILocation(line: 3365, column: 20, scope: !10671)
!10674 = !DILocation(line: 3365, column: 10, scope: !10671)
!10675 = !DILocation(line: 3365, column: 8, scope: !10671)
!10676 = !DILocation(line: 3369, column: 7, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10635, file: !1, line: 3369, column: 6)
!10678 = !DILocation(line: 3369, column: 6, scope: !10635)
!10679 = !DILocation(line: 3370, column: 7, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10681, file: !1, line: 3370, column: 7)
!10681 = distinct !DILexicalBlock(scope: !10677, file: !1, line: 3369, column: 48)
!10682 = !DILocation(line: 3370, column: 7, scope: !10681)
!10683 = !DILocation(line: 3371, column: 4, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10680, file: !1, line: 3370, column: 46)
!10685 = !DILocation(line: 3371, column: 10, scope: !10684)
!10686 = !DILocation(line: 3371, column: 13, scope: !10684)
!10687 = !DILocation(line: 3372, column: 3, scope: !10684)
!10688 = !DILocation(line: 3373, column: 7, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10681, file: !1, line: 3373, column: 7)
!10690 = !DILocation(line: 3373, column: 7, scope: !10681)
!10691 = !DILocation(line: 3374, column: 4, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10689, file: !1, line: 3373, column: 46)
!10693 = !DILocation(line: 3374, column: 10, scope: !10692)
!10694 = !DILocation(line: 3374, column: 13, scope: !10692)
!10695 = !DILocation(line: 3375, column: 3, scope: !10692)
!10696 = !DILocation(line: 3377, column: 7, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10681, file: !1, line: 3377, column: 7)
!10698 = !DILocation(line: 3377, column: 13, scope: !10697)
!10699 = !DILocation(line: 3377, column: 16, scope: !10697)
!10700 = !DILocation(line: 3377, column: 7, scope: !10681)
!10701 = !DILocation(line: 3378, column: 11, scope: !10702)
!10702 = distinct !DILexicalBlock(scope: !10703, file: !1, line: 3378, column: 8)
!10703 = distinct !DILexicalBlock(scope: !10697, file: !1, line: 3377, column: 28)
!10704 = !DILocation(line: 3378, column: 16, scope: !10702)
!10705 = !DILocation(line: 3378, column: 9, scope: !10702)
!10706 = !DILocation(line: 3378, column: 33, scope: !10702)
!10707 = !DILocation(line: 3378, column: 38, scope: !10702)
!10708 = !DILocation(line: 3378, column: 31, scope: !10702)
!10709 = !DILocation(line: 3378, column: 27, scope: !10702)
!10710 = !DILocation(line: 3378, column: 8, scope: !10703)
!10711 = !DILocation(line: 3379, column: 5, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10702, file: !1, line: 3378, column: 50)
!10713 = !DILocation(line: 3379, column: 11, scope: !10712)
!10714 = !DILocation(line: 3379, column: 14, scope: !10712)
!10715 = !DILocation(line: 3380, column: 4, scope: !10712)
!10716 = !DILocation(line: 3381, column: 3, scope: !10703)
!10717 = !DILocation(line: 3382, column: 7, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10681, file: !1, line: 3382, column: 7)
!10719 = !DILocation(line: 3382, column: 13, scope: !10718)
!10720 = !DILocation(line: 3382, column: 16, scope: !10718)
!10721 = !DILocation(line: 3382, column: 7, scope: !10681)
!10722 = !DILocation(line: 3383, column: 11, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10724, file: !1, line: 3383, column: 8)
!10724 = distinct !DILexicalBlock(scope: !10718, file: !1, line: 3382, column: 28)
!10725 = !DILocation(line: 3383, column: 16, scope: !10723)
!10726 = !DILocation(line: 3383, column: 9, scope: !10723)
!10727 = !DILocation(line: 3383, column: 33, scope: !10723)
!10728 = !DILocation(line: 3383, column: 38, scope: !10723)
!10729 = !DILocation(line: 3383, column: 31, scope: !10723)
!10730 = !DILocation(line: 3383, column: 27, scope: !10723)
!10731 = !DILocation(line: 3383, column: 8, scope: !10724)
!10732 = !DILocation(line: 3384, column: 5, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10723, file: !1, line: 3383, column: 50)
!10734 = !DILocation(line: 3384, column: 11, scope: !10733)
!10735 = !DILocation(line: 3384, column: 14, scope: !10733)
!10736 = !DILocation(line: 3385, column: 4, scope: !10733)
!10737 = !DILocation(line: 3386, column: 3, scope: !10724)
!10738 = !DILocation(line: 3387, column: 2, scope: !10681)
!10739 = !DILocation(line: 3393, column: 1, scope: !10635)
!10740 = distinct !DISubprogram(name: "BKE_nurb_handles_test", scope: !1, file: !1, line: 3395, type: !10741, scopeLine: 3396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!10741 = !DISubroutineType(types: !10742)
!10742 = !{null, !1782, !6595}
!10743 = !DILocalVariable(name: "nu", arg: 1, scope: !10740, file: !1, line: 3395, type: !1782)
!10744 = !DILocation(line: 3395, column: 34, scope: !10740)
!10745 = !DILocalVariable(name: "use_handle", arg: 2, scope: !10740, file: !1, line: 3395, type: !6595)
!10746 = !DILocation(line: 3395, column: 49, scope: !10740)
!10747 = !DILocalVariable(name: "bezt", scope: !10740, file: !1, line: 3397, type: !1817)
!10748 = !DILocation(line: 3397, column: 13, scope: !10740)
!10749 = !DILocalVariable(name: "a", scope: !10740, file: !1, line: 3398, type: !79)
!10750 = !DILocation(line: 3398, column: 6, scope: !10740)
!10751 = !DILocation(line: 3400, column: 6, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10740, file: !1, line: 3400, column: 6)
!10753 = !DILocation(line: 3400, column: 10, scope: !10752)
!10754 = !DILocation(line: 3400, column: 15, scope: !10752)
!10755 = !DILocation(line: 3400, column: 6, scope: !10740)
!10756 = !DILocation(line: 3401, column: 3, scope: !10752)
!10757 = !DILocation(line: 3403, column: 9, scope: !10740)
!10758 = !DILocation(line: 3403, column: 13, scope: !10740)
!10759 = !DILocation(line: 3403, column: 7, scope: !10740)
!10760 = !DILocation(line: 3404, column: 6, scope: !10740)
!10761 = !DILocation(line: 3404, column: 10, scope: !10740)
!10762 = !DILocation(line: 3404, column: 4, scope: !10740)
!10763 = !DILocation(line: 3405, column: 2, scope: !10740)
!10764 = !DILocation(line: 3405, column: 10, scope: !10740)
!10765 = !DILocation(line: 3406, column: 29, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10740, file: !1, line: 3405, column: 14)
!10767 = !DILocation(line: 3406, column: 35, scope: !10766)
!10768 = !DILocation(line: 3406, column: 3, scope: !10766)
!10769 = !DILocation(line: 3407, column: 7, scope: !10766)
!10770 = distinct !{!10770, !10763, !10771}
!10771 = !DILocation(line: 3408, column: 2, scope: !10740)
!10772 = !DILocation(line: 3410, column: 24, scope: !10740)
!10773 = !DILocation(line: 3410, column: 2, scope: !10740)
!10774 = !DILocation(line: 3411, column: 1, scope: !10740)
!10775 = distinct !DISubprogram(name: "BKE_nurb_handles_autocalc", scope: !1, file: !1, line: 3413, type: !3869, scopeLine: 3414, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!10776 = !DILocalVariable(name: "nu", arg: 1, scope: !10775, file: !1, line: 3413, type: !1782)
!10777 = !DILocation(line: 3413, column: 38, scope: !10775)
!10778 = !DILocalVariable(name: "flag", arg: 2, scope: !10775, file: !1, line: 3413, type: !79)
!10779 = !DILocation(line: 3413, column: 46, scope: !10775)
!10780 = !DILocalVariable(name: "eps", scope: !10775, file: !1, line: 3416, type: !3192)
!10781 = !DILocation(line: 3416, column: 14, scope: !10775)
!10782 = !DILocalVariable(name: "eps_sq", scope: !10775, file: !1, line: 3417, type: !3192)
!10783 = !DILocation(line: 3417, column: 14, scope: !10775)
!10784 = !DILocalVariable(name: "bezt2", scope: !10775, file: !1, line: 3419, type: !1817)
!10785 = !DILocation(line: 3419, column: 13, scope: !10775)
!10786 = !DILocalVariable(name: "bezt1", scope: !10775, file: !1, line: 3419, type: !1817)
!10787 = !DILocation(line: 3419, column: 21, scope: !10775)
!10788 = !DILocalVariable(name: "bezt0", scope: !10775, file: !1, line: 3419, type: !1817)
!10789 = !DILocation(line: 3419, column: 29, scope: !10775)
!10790 = !DILocalVariable(name: "i", scope: !10775, file: !1, line: 3420, type: !79)
!10791 = !DILocation(line: 3420, column: 6, scope: !10775)
!10792 = !DILocation(line: 3422, column: 6, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10775, file: !1, line: 3422, column: 6)
!10794 = !DILocation(line: 3422, column: 9, scope: !10793)
!10795 = !DILocation(line: 3422, column: 17, scope: !10793)
!10796 = !DILocation(line: 3422, column: 20, scope: !10793)
!10797 = !DILocation(line: 3422, column: 24, scope: !10793)
!10798 = !DILocation(line: 3422, column: 29, scope: !10793)
!10799 = !DILocation(line: 3422, column: 6, scope: !10775)
!10800 = !DILocation(line: 3423, column: 3, scope: !10793)
!10801 = !DILocation(line: 3425, column: 10, scope: !10775)
!10802 = !DILocation(line: 3425, column: 14, scope: !10775)
!10803 = !DILocation(line: 3425, column: 8, scope: !10775)
!10804 = !DILocation(line: 3426, column: 10, scope: !10775)
!10805 = !DILocation(line: 3426, column: 19, scope: !10775)
!10806 = !DILocation(line: 3426, column: 23, scope: !10775)
!10807 = !DILocation(line: 3426, column: 29, scope: !10775)
!10808 = !DILocation(line: 3426, column: 16, scope: !10775)
!10809 = !DILocation(line: 3426, column: 8, scope: !10775)
!10810 = !DILocation(line: 3427, column: 10, scope: !10775)
!10811 = !DILocation(line: 3427, column: 16, scope: !10775)
!10812 = !DILocation(line: 3427, column: 8, scope: !10775)
!10813 = !DILocation(line: 3428, column: 6, scope: !10775)
!10814 = !DILocation(line: 3428, column: 10, scope: !10775)
!10815 = !DILocation(line: 3428, column: 4, scope: !10775)
!10816 = !DILocation(line: 3430, column: 2, scope: !10775)
!10817 = !DILocation(line: 3430, column: 10, scope: !10775)
!10818 = !DILocalVariable(name: "align", scope: !10819, file: !1, line: 3431, type: !551)
!10819 = distinct !DILexicalBlock(scope: !10775, file: !1, line: 3430, column: 14)
!10820 = !DILocation(line: 3431, column: 8, scope: !10819)
!10821 = !DILocalVariable(name: "leftsmall", scope: !10819, file: !1, line: 3431, type: !551)
!10822 = !DILocation(line: 3431, column: 23, scope: !10819)
!10823 = !DILocalVariable(name: "rightsmall", scope: !10819, file: !1, line: 3431, type: !551)
!10824 = !DILocation(line: 3431, column: 42, scope: !10819)
!10825 = !DILocation(line: 3434, column: 7, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10819, file: !1, line: 3434, column: 7)
!10827 = !DILocation(line: 3434, column: 12, scope: !10826)
!10828 = !DILocation(line: 3434, column: 17, scope: !10826)
!10829 = !DILocation(line: 3434, column: 21, scope: !10826)
!10830 = !DILocation(line: 3434, column: 28, scope: !10826)
!10831 = !DILocation(line: 3434, column: 33, scope: !10826)
!10832 = !DILocation(line: 3434, column: 31, scope: !10826)
!10833 = !DILocation(line: 3434, column: 7, scope: !10819)
!10834 = !DILocation(line: 3435, column: 4, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10826, file: !1, line: 3434, column: 41)
!10836 = !DILocation(line: 3435, column: 11, scope: !10835)
!10837 = !DILocation(line: 3435, column: 14, scope: !10835)
!10838 = !DILocation(line: 3437, column: 25, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10835, file: !1, line: 3437, column: 8)
!10840 = !DILocation(line: 3437, column: 32, scope: !10839)
!10841 = !DILocation(line: 3437, column: 40, scope: !10839)
!10842 = !DILocation(line: 3437, column: 47, scope: !10839)
!10843 = !DILocation(line: 3437, column: 8, scope: !10839)
!10844 = !DILocation(line: 3437, column: 55, scope: !10839)
!10845 = !DILocation(line: 3437, column: 8, scope: !10835)
!10846 = !DILocation(line: 3438, column: 5, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10839, file: !1, line: 3437, column: 65)
!10848 = !DILocation(line: 3438, column: 12, scope: !10847)
!10849 = !DILocation(line: 3438, column: 15, scope: !10847)
!10850 = !DILocation(line: 3439, column: 15, scope: !10847)
!10851 = !DILocation(line: 3440, column: 4, scope: !10847)
!10852 = !DILocation(line: 3443, column: 33, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10854, file: !1, line: 3443, column: 9)
!10854 = distinct !DILexicalBlock(scope: !10839, file: !1, line: 3441, column: 9)
!10855 = !DILocation(line: 3443, column: 40, scope: !10853)
!10856 = !DILocation(line: 3443, column: 48, scope: !10853)
!10857 = !DILocation(line: 3443, column: 55, scope: !10853)
!10858 = !DILocation(line: 3443, column: 63, scope: !10853)
!10859 = !DILocation(line: 3443, column: 70, scope: !10853)
!10860 = !DILocation(line: 3443, column: 9, scope: !10853)
!10861 = !DILocation(line: 3443, column: 78, scope: !10853)
!10862 = !DILocation(line: 3443, column: 9, scope: !10854)
!10863 = !DILocation(line: 3444, column: 12, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10853, file: !1, line: 3443, column: 88)
!10865 = !DILocation(line: 3445, column: 6, scope: !10864)
!10866 = !DILocation(line: 3445, column: 13, scope: !10864)
!10867 = !DILocation(line: 3445, column: 16, scope: !10864)
!10868 = !DILocation(line: 3446, column: 5, scope: !10864)
!10869 = !DILocation(line: 3448, column: 33, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10854, file: !1, line: 3448, column: 9)
!10871 = !DILocation(line: 3448, column: 40, scope: !10870)
!10872 = !DILocation(line: 3448, column: 48, scope: !10870)
!10873 = !DILocation(line: 3448, column: 55, scope: !10870)
!10874 = !DILocation(line: 3448, column: 63, scope: !10870)
!10875 = !DILocation(line: 3448, column: 70, scope: !10870)
!10876 = !DILocation(line: 3448, column: 9, scope: !10870)
!10877 = !DILocation(line: 3448, column: 78, scope: !10870)
!10878 = !DILocation(line: 3448, column: 9, scope: !10854)
!10879 = !DILocation(line: 3449, column: 6, scope: !10870)
!10880 = !DILocation(line: 3449, column: 13, scope: !10870)
!10881 = !DILocation(line: 3449, column: 16, scope: !10870)
!10882 = !DILocation(line: 3451, column: 3, scope: !10835)
!10883 = !DILocation(line: 3453, column: 7, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10819, file: !1, line: 3453, column: 7)
!10885 = !DILocation(line: 3453, column: 12, scope: !10884)
!10886 = !DILocation(line: 3453, column: 17, scope: !10884)
!10887 = !DILocation(line: 3453, column: 21, scope: !10884)
!10888 = !DILocation(line: 3453, column: 28, scope: !10884)
!10889 = !DILocation(line: 3453, column: 33, scope: !10884)
!10890 = !DILocation(line: 3453, column: 31, scope: !10884)
!10891 = !DILocation(line: 3453, column: 7, scope: !10819)
!10892 = !DILocation(line: 3454, column: 4, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10884, file: !1, line: 3453, column: 41)
!10894 = !DILocation(line: 3454, column: 11, scope: !10893)
!10895 = !DILocation(line: 3454, column: 14, scope: !10893)
!10896 = !DILocation(line: 3456, column: 25, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !10893, file: !1, line: 3456, column: 8)
!10898 = !DILocation(line: 3456, column: 32, scope: !10897)
!10899 = !DILocation(line: 3456, column: 40, scope: !10897)
!10900 = !DILocation(line: 3456, column: 47, scope: !10897)
!10901 = !DILocation(line: 3456, column: 8, scope: !10897)
!10902 = !DILocation(line: 3456, column: 55, scope: !10897)
!10903 = !DILocation(line: 3456, column: 8, scope: !10893)
!10904 = !DILocation(line: 3457, column: 5, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10897, file: !1, line: 3456, column: 65)
!10906 = !DILocation(line: 3457, column: 12, scope: !10905)
!10907 = !DILocation(line: 3457, column: 15, scope: !10905)
!10908 = !DILocation(line: 3458, column: 16, scope: !10905)
!10909 = !DILocation(line: 3459, column: 4, scope: !10905)
!10910 = !DILocation(line: 3462, column: 9, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10912, file: !1, line: 3462, column: 9)
!10912 = distinct !DILexicalBlock(scope: !10897, file: !1, line: 3460, column: 9)
!10913 = !DILocation(line: 3462, column: 9, scope: !10912)
!10914 = !DILocation(line: 3462, column: 16, scope: !10911)
!10915 = !DILocation(line: 3462, column: 23, scope: !10911)
!10916 = !DILocation(line: 3462, column: 26, scope: !10911)
!10917 = !DILocation(line: 3465, column: 33, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10912, file: !1, line: 3465, column: 9)
!10919 = !DILocation(line: 3465, column: 40, scope: !10918)
!10920 = !DILocation(line: 3465, column: 48, scope: !10918)
!10921 = !DILocation(line: 3465, column: 55, scope: !10918)
!10922 = !DILocation(line: 3465, column: 63, scope: !10918)
!10923 = !DILocation(line: 3465, column: 70, scope: !10918)
!10924 = !DILocation(line: 3465, column: 9, scope: !10918)
!10925 = !DILocation(line: 3465, column: 78, scope: !10918)
!10926 = !DILocation(line: 3465, column: 9, scope: !10912)
!10927 = !DILocation(line: 3466, column: 6, scope: !10918)
!10928 = !DILocation(line: 3466, column: 13, scope: !10918)
!10929 = !DILocation(line: 3466, column: 16, scope: !10918)
!10930 = !DILocation(line: 3468, column: 3, scope: !10893)
!10931 = !DILocation(line: 3469, column: 7, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10819, file: !1, line: 3469, column: 7)
!10933 = !DILocation(line: 3469, column: 17, scope: !10932)
!10934 = !DILocation(line: 3469, column: 20, scope: !10932)
!10935 = !DILocation(line: 3469, column: 27, scope: !10932)
!10936 = !DILocation(line: 3469, column: 30, scope: !10932)
!10937 = !DILocation(line: 3469, column: 7, scope: !10819)
!10938 = !DILocation(line: 3470, column: 4, scope: !10932)
!10939 = !DILocation(line: 3470, column: 11, scope: !10932)
!10940 = !DILocation(line: 3470, column: 14, scope: !10932)
!10941 = !DILocation(line: 3471, column: 7, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10819, file: !1, line: 3471, column: 7)
!10943 = !DILocation(line: 3471, column: 18, scope: !10942)
!10944 = !DILocation(line: 3471, column: 21, scope: !10942)
!10945 = !DILocation(line: 3471, column: 28, scope: !10942)
!10946 = !DILocation(line: 3471, column: 31, scope: !10942)
!10947 = !DILocation(line: 3471, column: 7, scope: !10819)
!10948 = !DILocation(line: 3472, column: 4, scope: !10942)
!10949 = !DILocation(line: 3472, column: 11, scope: !10942)
!10950 = !DILocation(line: 3472, column: 14, scope: !10942)
!10951 = !DILocation(line: 3475, column: 7, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10819, file: !1, line: 3475, column: 7)
!10953 = !DILocation(line: 3475, column: 14, scope: !10952)
!10954 = !DILocation(line: 3475, column: 17, scope: !10952)
!10955 = !DILocation(line: 3475, column: 29, scope: !10952)
!10956 = !DILocation(line: 3475, column: 32, scope: !10952)
!10957 = !DILocation(line: 3475, column: 39, scope: !10952)
!10958 = !DILocation(line: 3475, column: 42, scope: !10952)
!10959 = !DILocation(line: 3475, column: 7, scope: !10819)
!10960 = !DILocation(line: 3476, column: 4, scope: !10952)
!10961 = !DILocation(line: 3476, column: 11, scope: !10952)
!10962 = !DILocation(line: 3476, column: 14, scope: !10952)
!10963 = !DILocation(line: 3477, column: 7, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10819, file: !1, line: 3477, column: 7)
!10965 = !DILocation(line: 3477, column: 14, scope: !10964)
!10966 = !DILocation(line: 3477, column: 17, scope: !10964)
!10967 = !DILocation(line: 3477, column: 29, scope: !10964)
!10968 = !DILocation(line: 3477, column: 32, scope: !10964)
!10969 = !DILocation(line: 3477, column: 39, scope: !10964)
!10970 = !DILocation(line: 3477, column: 42, scope: !10964)
!10971 = !DILocation(line: 3477, column: 7, scope: !10819)
!10972 = !DILocation(line: 3478, column: 4, scope: !10964)
!10973 = !DILocation(line: 3478, column: 11, scope: !10964)
!10974 = !DILocation(line: 3478, column: 14, scope: !10964)
!10975 = !DILocation(line: 3480, column: 11, scope: !10819)
!10976 = !DILocation(line: 3480, column: 9, scope: !10819)
!10977 = !DILocation(line: 3481, column: 11, scope: !10819)
!10978 = !DILocation(line: 3481, column: 9, scope: !10819)
!10979 = !DILocation(line: 3482, column: 8, scope: !10819)
!10980 = distinct !{!10980, !10816, !10981}
!10981 = !DILocation(line: 3483, column: 2, scope: !10775)
!10982 = !DILocation(line: 3485, column: 24, scope: !10775)
!10983 = !DILocation(line: 3485, column: 2, scope: !10775)
!10984 = !DILocation(line: 3486, column: 1, scope: !10775)
!10985 = distinct !DISubprogram(name: "len_squared_v3v3", scope: !2341, file: !2341, line: 727, type: !8868, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!10986 = !DILocalVariable(name: "a", arg: 1, scope: !10985, file: !2341, line: 727, type: !3191)
!10987 = !DILocation(line: 727, column: 44, scope: !10985)
!10988 = !DILocalVariable(name: "b", arg: 2, scope: !10985, file: !2341, line: 727, type: !3191)
!10989 = !DILocation(line: 727, column: 62, scope: !10985)
!10990 = !DILocalVariable(name: "d", scope: !10985, file: !2341, line: 729, type: !201)
!10991 = !DILocation(line: 729, column: 8, scope: !10985)
!10992 = !DILocation(line: 731, column: 14, scope: !10985)
!10993 = !DILocation(line: 731, column: 17, scope: !10985)
!10994 = !DILocation(line: 731, column: 20, scope: !10985)
!10995 = !DILocation(line: 731, column: 2, scope: !10985)
!10996 = !DILocation(line: 732, column: 18, scope: !10985)
!10997 = !DILocation(line: 732, column: 21, scope: !10985)
!10998 = !DILocation(line: 732, column: 9, scope: !10985)
!10999 = !DILocation(line: 732, column: 2, scope: !10985)
!11000 = distinct !DISubprogram(name: "BKE_nurbList_handles_autocalc", scope: !1, file: !1, line: 3488, type: !11001, scopeLine: 3489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!11001 = !DISubroutineType(types: !11002)
!11002 = !{null, !1602, !79}
!11003 = !DILocalVariable(name: "editnurb", arg: 1, scope: !11000, file: !1, line: 3488, type: !1602)
!11004 = !DILocation(line: 3488, column: 46, scope: !11000)
!11005 = !DILocalVariable(name: "flag", arg: 2, scope: !11000, file: !1, line: 3488, type: !79)
!11006 = !DILocation(line: 3488, column: 60, scope: !11000)
!11007 = !DILocalVariable(name: "nu", scope: !11000, file: !1, line: 3490, type: !1782)
!11008 = !DILocation(line: 3490, column: 8, scope: !11000)
!11009 = !DILocation(line: 3492, column: 7, scope: !11000)
!11010 = !DILocation(line: 3492, column: 17, scope: !11000)
!11011 = !DILocation(line: 3492, column: 5, scope: !11000)
!11012 = !DILocation(line: 3493, column: 2, scope: !11000)
!11013 = !DILocation(line: 3493, column: 9, scope: !11000)
!11014 = !DILocation(line: 3494, column: 29, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !11000, file: !1, line: 3493, column: 13)
!11016 = !DILocation(line: 3494, column: 33, scope: !11015)
!11017 = !DILocation(line: 3494, column: 3, scope: !11015)
!11018 = !DILocation(line: 3495, column: 8, scope: !11015)
!11019 = !DILocation(line: 3495, column: 12, scope: !11015)
!11020 = !DILocation(line: 3495, column: 6, scope: !11015)
!11021 = distinct !{!11021, !11012, !11022}
!11022 = !DILocation(line: 3496, column: 2, scope: !11000)
!11023 = !DILocation(line: 3497, column: 1, scope: !11000)
!11024 = distinct !DISubprogram(name: "BKE_nurbList_handles_set", scope: !1, file: !1, line: 3499, type: !11025, scopeLine: 3500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!11025 = !DISubroutineType(types: !11026)
!11026 = !{null, !1602, !2198}
!11027 = !DILocalVariable(name: "editnurb", arg: 1, scope: !11024, file: !1, line: 3499, type: !1602)
!11028 = !DILocation(line: 3499, column: 41, scope: !11024)
!11029 = !DILocalVariable(name: "code", arg: 2, scope: !11024, file: !1, line: 3499, type: !2198)
!11030 = !DILocation(line: 3499, column: 62, scope: !11024)
!11031 = !DILocalVariable(name: "nu", scope: !11024, file: !1, line: 3507, type: !1782)
!11032 = !DILocation(line: 3507, column: 8, scope: !11024)
!11033 = !DILocalVariable(name: "bezt", scope: !11024, file: !1, line: 3508, type: !1817)
!11034 = !DILocation(line: 3508, column: 13, scope: !11024)
!11035 = !DILocalVariable(name: "a", scope: !11024, file: !1, line: 3509, type: !79)
!11036 = !DILocation(line: 3509, column: 6, scope: !11024)
!11037 = !DILocation(line: 3511, column: 6, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11024, file: !1, line: 3511, column: 6)
!11039 = !DILocation(line: 3511, column: 6, scope: !11024)
!11040 = !DILocation(line: 3512, column: 8, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11038, file: !1, line: 3511, column: 36)
!11042 = !DILocation(line: 3512, column: 18, scope: !11041)
!11043 = !DILocation(line: 3512, column: 6, scope: !11041)
!11044 = !DILocation(line: 3513, column: 3, scope: !11041)
!11045 = !DILocation(line: 3513, column: 10, scope: !11041)
!11046 = !DILocation(line: 3514, column: 8, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11048, file: !1, line: 3514, column: 8)
!11048 = distinct !DILexicalBlock(scope: !11041, file: !1, line: 3513, column: 14)
!11049 = !DILocation(line: 3514, column: 12, scope: !11047)
!11050 = !DILocation(line: 3514, column: 17, scope: !11047)
!11051 = !DILocation(line: 3514, column: 8, scope: !11048)
!11052 = !DILocation(line: 3515, column: 12, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11047, file: !1, line: 3514, column: 31)
!11054 = !DILocation(line: 3515, column: 16, scope: !11053)
!11055 = !DILocation(line: 3515, column: 10, scope: !11053)
!11056 = !DILocation(line: 3516, column: 9, scope: !11053)
!11057 = !DILocation(line: 3516, column: 13, scope: !11053)
!11058 = !DILocation(line: 3516, column: 7, scope: !11053)
!11059 = !DILocation(line: 3517, column: 5, scope: !11053)
!11060 = !DILocation(line: 3517, column: 13, scope: !11053)
!11061 = !DILocation(line: 3518, column: 11, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11063, file: !1, line: 3518, column: 10)
!11063 = distinct !DILexicalBlock(scope: !11053, file: !1, line: 3517, column: 17)
!11064 = !DILocation(line: 3518, column: 17, scope: !11062)
!11065 = !DILocation(line: 3518, column: 20, scope: !11062)
!11066 = !DILocation(line: 3518, column: 30, scope: !11062)
!11067 = !DILocation(line: 3518, column: 34, scope: !11062)
!11068 = !DILocation(line: 3518, column: 40, scope: !11062)
!11069 = !DILocation(line: 3518, column: 43, scope: !11062)
!11070 = !DILocation(line: 3518, column: 10, scope: !11063)
!11071 = !DILocation(line: 3519, column: 11, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11073, file: !1, line: 3519, column: 11)
!11073 = distinct !DILexicalBlock(scope: !11062, file: !1, line: 3518, column: 54)
!11074 = !DILocation(line: 3519, column: 17, scope: !11072)
!11075 = !DILocation(line: 3519, column: 20, scope: !11072)
!11076 = !DILocation(line: 3519, column: 11, scope: !11073)
!11077 = !DILocation(line: 3520, column: 19, scope: !11072)
!11078 = !DILocation(line: 3520, column: 8, scope: !11072)
!11079 = !DILocation(line: 3520, column: 14, scope: !11072)
!11080 = !DILocation(line: 3520, column: 17, scope: !11072)
!11081 = !DILocation(line: 3521, column: 11, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11073, file: !1, line: 3521, column: 11)
!11083 = !DILocation(line: 3521, column: 17, scope: !11082)
!11084 = !DILocation(line: 3521, column: 20, scope: !11082)
!11085 = !DILocation(line: 3521, column: 11, scope: !11073)
!11086 = !DILocation(line: 3522, column: 19, scope: !11082)
!11087 = !DILocation(line: 3522, column: 8, scope: !11082)
!11088 = !DILocation(line: 3522, column: 14, scope: !11082)
!11089 = !DILocation(line: 3522, column: 17, scope: !11082)
!11090 = !DILocation(line: 3523, column: 11, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11073, file: !1, line: 3523, column: 11)
!11092 = !DILocation(line: 3523, column: 17, scope: !11091)
!11093 = !DILocation(line: 3523, column: 23, scope: !11091)
!11094 = !DILocation(line: 3523, column: 29, scope: !11091)
!11095 = !DILocation(line: 3523, column: 20, scope: !11091)
!11096 = !DILocation(line: 3523, column: 11, scope: !11073)
!11097 = !DILocation(line: 3524, column: 12, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11099, file: !1, line: 3524, column: 12)
!11099 = distinct !DILexicalBlock(scope: !11091, file: !1, line: 3523, column: 33)
!11100 = !DILocation(line: 3524, column: 12, scope: !11099)
!11101 = !DILocation(line: 3525, column: 9, scope: !11098)
!11102 = !DILocation(line: 3525, column: 15, scope: !11098)
!11103 = !DILocation(line: 3525, column: 18, scope: !11098)
!11104 = !DILocation(line: 3526, column: 12, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11099, file: !1, line: 3526, column: 12)
!11106 = !DILocation(line: 3526, column: 12, scope: !11099)
!11107 = !DILocation(line: 3527, column: 9, scope: !11105)
!11108 = !DILocation(line: 3527, column: 15, scope: !11105)
!11109 = !DILocation(line: 3527, column: 18, scope: !11105)
!11110 = !DILocation(line: 3528, column: 7, scope: !11099)
!11111 = !DILocation(line: 3529, column: 6, scope: !11073)
!11112 = !DILocation(line: 3530, column: 10, scope: !11063)
!11113 = distinct !{!11113, !11059, !11114}
!11114 = !DILocation(line: 3531, column: 5, scope: !11053)
!11115 = !DILocation(line: 3534, column: 39, scope: !11053)
!11116 = !DILocation(line: 3534, column: 5, scope: !11053)
!11117 = !DILocation(line: 3535, column: 4, scope: !11053)
!11118 = !DILocation(line: 3536, column: 9, scope: !11048)
!11119 = !DILocation(line: 3536, column: 13, scope: !11048)
!11120 = !DILocation(line: 3536, column: 7, scope: !11048)
!11121 = distinct !{!11121, !11044, !11122}
!11122 = !DILocation(line: 3537, column: 3, scope: !11041)
!11123 = !DILocation(line: 3538, column: 2, scope: !11041)
!11124 = !DILocalVariable(name: "h_new", scope: !11125, file: !1, line: 3540, type: !64)
!11125 = distinct !DILexicalBlock(scope: !11038, file: !1, line: 3539, column: 7)
!11126 = !DILocation(line: 3540, column: 8, scope: !11125)
!11127 = !DILocation(line: 3543, column: 7, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11125, file: !1, line: 3543, column: 7)
!11129 = !DILocation(line: 3543, column: 12, scope: !11128)
!11130 = !DILocation(line: 3543, column: 7, scope: !11125)
!11131 = !DILocation(line: 3544, column: 10, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11128, file: !1, line: 3543, column: 18)
!11133 = !DILocation(line: 3545, column: 3, scope: !11132)
!11134 = !DILocation(line: 3546, column: 12, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11128, file: !1, line: 3546, column: 12)
!11136 = !DILocation(line: 3546, column: 17, scope: !11135)
!11137 = !DILocation(line: 3546, column: 12, scope: !11128)
!11138 = !DILocation(line: 3547, column: 10, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11135, file: !1, line: 3546, column: 23)
!11140 = !DILocation(line: 3548, column: 3, scope: !11139)
!11141 = !DILocation(line: 3551, column: 14, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11143, file: !1, line: 3551, column: 4)
!11143 = distinct !DILexicalBlock(scope: !11135, file: !1, line: 3549, column: 8)
!11144 = !DILocation(line: 3551, column: 24, scope: !11142)
!11145 = !DILocation(line: 3551, column: 12, scope: !11142)
!11146 = !DILocation(line: 3551, column: 9, scope: !11142)
!11147 = !DILocation(line: 3551, column: 31, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11142, file: !1, line: 3551, column: 4)
!11149 = !DILocation(line: 3551, column: 4, scope: !11142)
!11150 = !DILocation(line: 3552, column: 9, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11152, file: !1, line: 3552, column: 9)
!11152 = distinct !DILexicalBlock(scope: !11148, file: !1, line: 3551, column: 50)
!11153 = !DILocation(line: 3552, column: 13, scope: !11151)
!11154 = !DILocation(line: 3552, column: 18, scope: !11151)
!11155 = !DILocation(line: 3552, column: 9, scope: !11152)
!11156 = !DILocation(line: 3553, column: 13, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11151, file: !1, line: 3552, column: 32)
!11158 = !DILocation(line: 3553, column: 17, scope: !11157)
!11159 = !DILocation(line: 3553, column: 11, scope: !11157)
!11160 = !DILocation(line: 3554, column: 10, scope: !11157)
!11161 = !DILocation(line: 3554, column: 14, scope: !11157)
!11162 = !DILocation(line: 3554, column: 8, scope: !11157)
!11163 = !DILocation(line: 3555, column: 6, scope: !11157)
!11164 = !DILocation(line: 3555, column: 14, scope: !11157)
!11165 = !DILocation(line: 3556, column: 13, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11167, file: !1, line: 3556, column: 11)
!11167 = distinct !DILexicalBlock(scope: !11157, file: !1, line: 3555, column: 18)
!11168 = !DILocation(line: 3556, column: 19, scope: !11166)
!11169 = !DILocation(line: 3556, column: 22, scope: !11166)
!11170 = !DILocation(line: 3556, column: 32, scope: !11166)
!11171 = !DILocation(line: 3556, column: 35, scope: !11166)
!11172 = !DILocation(line: 3556, column: 41, scope: !11166)
!11173 = !DILocation(line: 3556, column: 44, scope: !11166)
!11174 = !DILocation(line: 3556, column: 56, scope: !11166)
!11175 = !DILocation(line: 3557, column: 13, scope: !11166)
!11176 = !DILocation(line: 3557, column: 19, scope: !11166)
!11177 = !DILocation(line: 3557, column: 22, scope: !11166)
!11178 = !DILocation(line: 3557, column: 32, scope: !11166)
!11179 = !DILocation(line: 3557, column: 35, scope: !11166)
!11180 = !DILocation(line: 3557, column: 41, scope: !11166)
!11181 = !DILocation(line: 3557, column: 44, scope: !11166)
!11182 = !DILocation(line: 3556, column: 11, scope: !11167)
!11183 = !DILocation(line: 3559, column: 14, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11166, file: !1, line: 3558, column: 7)
!11185 = !DILocation(line: 3560, column: 8, scope: !11184)
!11186 = !DILocation(line: 3562, column: 11, scope: !11167)
!11187 = distinct !{!11187, !11163, !11188}
!11188 = !DILocation(line: 3563, column: 6, scope: !11157)
!11189 = !DILocation(line: 3564, column: 5, scope: !11157)
!11190 = !DILocation(line: 3565, column: 4, scope: !11152)
!11191 = !DILocation(line: 3551, column: 40, scope: !11148)
!11192 = !DILocation(line: 3551, column: 44, scope: !11148)
!11193 = !DILocation(line: 3551, column: 38, scope: !11148)
!11194 = !DILocation(line: 3551, column: 4, scope: !11148)
!11195 = distinct !{!11195, !11149, !11196}
!11196 = !DILocation(line: 3565, column: 4, scope: !11142)
!11197 = !DILocation(line: 3566, column: 13, scope: !11143)
!11198 = !DILocation(line: 3566, column: 19, scope: !11143)
!11199 = !DILocation(line: 3566, column: 12, scope: !11143)
!11200 = !DILocation(line: 3566, column: 10, scope: !11143)
!11201 = !DILocation(line: 3568, column: 13, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11125, file: !1, line: 3568, column: 3)
!11203 = !DILocation(line: 3568, column: 23, scope: !11202)
!11204 = !DILocation(line: 3568, column: 11, scope: !11202)
!11205 = !DILocation(line: 3568, column: 8, scope: !11202)
!11206 = !DILocation(line: 3568, column: 30, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11202, file: !1, line: 3568, column: 3)
!11208 = !DILocation(line: 3568, column: 3, scope: !11202)
!11209 = !DILocation(line: 3569, column: 8, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11211, file: !1, line: 3569, column: 8)
!11211 = distinct !DILexicalBlock(scope: !11207, file: !1, line: 3568, column: 49)
!11212 = !DILocation(line: 3569, column: 12, scope: !11210)
!11213 = !DILocation(line: 3569, column: 17, scope: !11210)
!11214 = !DILocation(line: 3569, column: 8, scope: !11211)
!11215 = !DILocation(line: 3570, column: 12, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11210, file: !1, line: 3569, column: 31)
!11217 = !DILocation(line: 3570, column: 16, scope: !11216)
!11218 = !DILocation(line: 3570, column: 10, scope: !11216)
!11219 = !DILocation(line: 3571, column: 9, scope: !11216)
!11220 = !DILocation(line: 3571, column: 13, scope: !11216)
!11221 = !DILocation(line: 3571, column: 7, scope: !11216)
!11222 = !DILocation(line: 3572, column: 5, scope: !11216)
!11223 = !DILocation(line: 3572, column: 13, scope: !11216)
!11224 = !DILocation(line: 3573, column: 10, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11226, file: !1, line: 3573, column: 10)
!11226 = distinct !DILexicalBlock(scope: !11216, file: !1, line: 3572, column: 17)
!11227 = !DILocation(line: 3573, column: 16, scope: !11225)
!11228 = !DILocation(line: 3573, column: 19, scope: !11225)
!11229 = !DILocation(line: 3573, column: 10, scope: !11226)
!11230 = !DILocation(line: 3573, column: 40, scope: !11225)
!11231 = !DILocation(line: 3573, column: 29, scope: !11225)
!11232 = !DILocation(line: 3573, column: 35, scope: !11225)
!11233 = !DILocation(line: 3573, column: 38, scope: !11225)
!11234 = !DILocation(line: 3574, column: 10, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11226, file: !1, line: 3574, column: 10)
!11236 = !DILocation(line: 3574, column: 16, scope: !11235)
!11237 = !DILocation(line: 3574, column: 19, scope: !11235)
!11238 = !DILocation(line: 3574, column: 10, scope: !11226)
!11239 = !DILocation(line: 3574, column: 40, scope: !11235)
!11240 = !DILocation(line: 3574, column: 29, scope: !11235)
!11241 = !DILocation(line: 3574, column: 35, scope: !11235)
!11242 = !DILocation(line: 3574, column: 38, scope: !11235)
!11243 = !DILocation(line: 3576, column: 10, scope: !11226)
!11244 = distinct !{!11244, !11222, !11245}
!11245 = !DILocation(line: 3577, column: 5, scope: !11216)
!11246 = !DILocation(line: 3580, column: 39, scope: !11216)
!11247 = !DILocation(line: 3580, column: 5, scope: !11216)
!11248 = !DILocation(line: 3581, column: 4, scope: !11216)
!11249 = !DILocation(line: 3582, column: 3, scope: !11211)
!11250 = !DILocation(line: 3568, column: 39, scope: !11207)
!11251 = !DILocation(line: 3568, column: 43, scope: !11207)
!11252 = !DILocation(line: 3568, column: 37, scope: !11207)
!11253 = !DILocation(line: 3568, column: 3, scope: !11207)
!11254 = distinct !{!11254, !11208, !11255}
!11255 = !DILocation(line: 3582, column: 3, scope: !11202)
!11256 = !DILocation(line: 3584, column: 1, scope: !11024)
!11257 = distinct !DISubprogram(name: "nurb_handles_calc__align_selected", scope: !1, file: !1, line: 3328, type: !2847, scopeLine: 3329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!11258 = !DILocalVariable(name: "nu", arg: 1, scope: !11257, file: !1, line: 3328, type: !1782)
!11259 = !DILocation(line: 3328, column: 53, scope: !11257)
!11260 = !DILocation(line: 3330, column: 31, scope: !11257)
!11261 = !DILocation(line: 3330, column: 2, scope: !11257)
!11262 = !DILocation(line: 3331, column: 24, scope: !11257)
!11263 = !DILocation(line: 3331, column: 2, scope: !11257)
!11264 = !DILocation(line: 3332, column: 31, scope: !11257)
!11265 = !DILocation(line: 3332, column: 2, scope: !11257)
!11266 = !DILocation(line: 3333, column: 1, scope: !11257)
!11267 = distinct !DISubprogram(name: "BKE_nurbList_handles_recalculate", scope: !1, file: !1, line: 3586, type: !11268, scopeLine: 3587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!11268 = !DISubroutineType(types: !11269)
!11269 = !{null, !1602, !6595, !2198}
!11270 = !DILocalVariable(name: "editnurb", arg: 1, scope: !11267, file: !1, line: 3586, type: !1602)
!11271 = !DILocation(line: 3586, column: 49, scope: !11267)
!11272 = !DILocalVariable(name: "calc_length", arg: 2, scope: !11267, file: !1, line: 3586, type: !6595)
!11273 = !DILocation(line: 3586, column: 70, scope: !11267)
!11274 = !DILocalVariable(name: "flag", arg: 3, scope: !11267, file: !1, line: 3586, type: !2198)
!11275 = !DILocation(line: 3586, column: 94, scope: !11267)
!11276 = !DILocalVariable(name: "nu", scope: !11267, file: !1, line: 3588, type: !1782)
!11277 = !DILocation(line: 3588, column: 8, scope: !11267)
!11278 = !DILocalVariable(name: "bezt", scope: !11267, file: !1, line: 3589, type: !1817)
!11279 = !DILocation(line: 3589, column: 13, scope: !11267)
!11280 = !DILocalVariable(name: "a", scope: !11267, file: !1, line: 3590, type: !79)
!11281 = !DILocation(line: 3590, column: 6, scope: !11267)
!11282 = !DILocation(line: 3592, column: 12, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11267, file: !1, line: 3592, column: 2)
!11284 = !DILocation(line: 3592, column: 22, scope: !11283)
!11285 = !DILocation(line: 3592, column: 10, scope: !11283)
!11286 = !DILocation(line: 3592, column: 7, scope: !11283)
!11287 = !DILocation(line: 3592, column: 29, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !11283, file: !1, line: 3592, column: 2)
!11289 = !DILocation(line: 3592, column: 2, scope: !11283)
!11290 = !DILocation(line: 3593, column: 7, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11292, file: !1, line: 3593, column: 7)
!11292 = distinct !DILexicalBlock(scope: !11288, file: !1, line: 3592, column: 48)
!11293 = !DILocation(line: 3593, column: 11, scope: !11291)
!11294 = !DILocation(line: 3593, column: 16, scope: !11291)
!11295 = !DILocation(line: 3593, column: 7, scope: !11292)
!11296 = !DILocalVariable(name: "changed", scope: !11297, file: !1, line: 3594, type: !551)
!11297 = distinct !DILexicalBlock(scope: !11291, file: !1, line: 3593, column: 30)
!11298 = !DILocation(line: 3594, column: 9, scope: !11297)
!11299 = !DILocation(line: 3596, column: 13, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11297, file: !1, line: 3596, column: 4)
!11301 = !DILocation(line: 3596, column: 17, scope: !11300)
!11302 = !DILocation(line: 3596, column: 11, scope: !11300)
!11303 = !DILocation(line: 3596, column: 31, scope: !11300)
!11304 = !DILocation(line: 3596, column: 35, scope: !11300)
!11305 = !DILocation(line: 3596, column: 29, scope: !11300)
!11306 = !DILocation(line: 3596, column: 9, scope: !11300)
!11307 = !DILocation(line: 3596, column: 42, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11300, file: !1, line: 3596, column: 4)
!11309 = !DILocation(line: 3596, column: 4, scope: !11300)
!11310 = !DILocalVariable(name: "h1_select", scope: !11311, file: !1, line: 3598, type: !6595)
!11311 = distinct !DILexicalBlock(scope: !11308, file: !1, line: 3596, column: 54)
!11312 = !DILocation(line: 3598, column: 16, scope: !11311)
!11313 = !DILocation(line: 3598, column: 29, scope: !11311)
!11314 = !DILocation(line: 3598, column: 35, scope: !11311)
!11315 = !DILocation(line: 3598, column: 40, scope: !11311)
!11316 = !DILocation(line: 3598, column: 38, scope: !11311)
!11317 = !DILocation(line: 3598, column: 49, scope: !11311)
!11318 = !DILocation(line: 3598, column: 46, scope: !11311)
!11319 = !DILocation(line: 3598, column: 28, scope: !11311)
!11320 = !DILocalVariable(name: "h2_select", scope: !11311, file: !1, line: 3599, type: !6595)
!11321 = !DILocation(line: 3599, column: 16, scope: !11311)
!11322 = !DILocation(line: 3599, column: 29, scope: !11311)
!11323 = !DILocation(line: 3599, column: 35, scope: !11311)
!11324 = !DILocation(line: 3599, column: 40, scope: !11311)
!11325 = !DILocation(line: 3599, column: 38, scope: !11311)
!11326 = !DILocation(line: 3599, column: 49, scope: !11311)
!11327 = !DILocation(line: 3599, column: 46, scope: !11311)
!11328 = !DILocation(line: 3599, column: 28, scope: !11311)
!11329 = !DILocation(line: 3601, column: 9, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11311, file: !1, line: 3601, column: 9)
!11331 = !DILocation(line: 3601, column: 19, scope: !11330)
!11332 = !DILocation(line: 3601, column: 22, scope: !11330)
!11333 = !DILocation(line: 3601, column: 9, scope: !11311)
!11334 = !DILocalVariable(name: "h1_back", scope: !11335, file: !1, line: 3605, type: !64)
!11335 = distinct !DILexicalBlock(scope: !11330, file: !1, line: 3601, column: 33)
!11336 = !DILocation(line: 3605, column: 11, scope: !11335)
!11337 = !DILocalVariable(name: "h2_back", scope: !11335, file: !1, line: 3605, type: !64)
!11338 = !DILocation(line: 3605, column: 20, scope: !11335)
!11339 = !DILocalVariable(name: "co1_back", scope: !11335, file: !1, line: 3606, type: !201)
!11340 = !DILocation(line: 3606, column: 12, scope: !11335)
!11341 = !DILocalVariable(name: "co2_back", scope: !11335, file: !1, line: 3606, type: !201)
!11342 = !DILocation(line: 3606, column: 25, scope: !11335)
!11343 = !DILocation(line: 3608, column: 16, scope: !11335)
!11344 = !DILocation(line: 3608, column: 22, scope: !11335)
!11345 = !DILocation(line: 3608, column: 14, scope: !11335)
!11346 = !DILocation(line: 3609, column: 16, scope: !11335)
!11347 = !DILocation(line: 3609, column: 22, scope: !11335)
!11348 = !DILocation(line: 3609, column: 14, scope: !11335)
!11349 = !DILocation(line: 3611, column: 6, scope: !11335)
!11350 = !DILocation(line: 3611, column: 12, scope: !11335)
!11351 = !DILocation(line: 3611, column: 15, scope: !11335)
!11352 = !DILocation(line: 3612, column: 6, scope: !11335)
!11353 = !DILocation(line: 3612, column: 12, scope: !11335)
!11354 = !DILocation(line: 3612, column: 15, scope: !11335)
!11355 = !DILocation(line: 3614, column: 17, scope: !11335)
!11356 = !DILocation(line: 3614, column: 27, scope: !11335)
!11357 = !DILocation(line: 3614, column: 33, scope: !11335)
!11358 = !DILocation(line: 3614, column: 6, scope: !11335)
!11359 = !DILocation(line: 3615, column: 17, scope: !11335)
!11360 = !DILocation(line: 3615, column: 27, scope: !11335)
!11361 = !DILocation(line: 3615, column: 33, scope: !11335)
!11362 = !DILocation(line: 3615, column: 6, scope: !11335)
!11363 = !DILocation(line: 3617, column: 34, scope: !11335)
!11364 = !DILocation(line: 3617, column: 38, scope: !11335)
!11365 = !DILocation(line: 3617, column: 6, scope: !11335)
!11366 = !DILocation(line: 3619, column: 17, scope: !11335)
!11367 = !DILocation(line: 3619, column: 6, scope: !11335)
!11368 = !DILocation(line: 3619, column: 12, scope: !11335)
!11369 = !DILocation(line: 3619, column: 15, scope: !11335)
!11370 = !DILocation(line: 3620, column: 17, scope: !11335)
!11371 = !DILocation(line: 3620, column: 6, scope: !11335)
!11372 = !DILocation(line: 3620, column: 12, scope: !11335)
!11373 = !DILocation(line: 3620, column: 15, scope: !11335)
!11374 = !DILocation(line: 3622, column: 10, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11335, file: !1, line: 3622, column: 10)
!11376 = !DILocation(line: 3622, column: 10, scope: !11335)
!11377 = !DILocation(line: 3623, column: 12, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !11379, file: !1, line: 3623, column: 11)
!11379 = distinct !DILexicalBlock(scope: !11375, file: !1, line: 3622, column: 21)
!11380 = !DILocation(line: 3623, column: 11, scope: !11379)
!11381 = !DILocation(line: 3624, column: 28, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11378, file: !1, line: 3623, column: 25)
!11383 = !DILocation(line: 3624, column: 34, scope: !11382)
!11384 = !DILocation(line: 3624, column: 42, scope: !11382)
!11385 = !DILocation(line: 3624, column: 48, scope: !11382)
!11386 = !DILocation(line: 3624, column: 65, scope: !11382)
!11387 = !DILocation(line: 3624, column: 75, scope: !11382)
!11388 = !DILocation(line: 3624, column: 81, scope: !11382)
!11389 = !DILocation(line: 3624, column: 56, scope: !11382)
!11390 = !DILocation(line: 3624, column: 8, scope: !11382)
!11391 = !DILocation(line: 3625, column: 7, scope: !11382)
!11392 = !DILocation(line: 3626, column: 6, scope: !11379)
!11393 = !DILocation(line: 3628, column: 18, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11375, file: !1, line: 3627, column: 11)
!11395 = !DILocation(line: 3628, column: 24, scope: !11394)
!11396 = !DILocation(line: 3628, column: 32, scope: !11394)
!11397 = !DILocation(line: 3628, column: 7, scope: !11394)
!11398 = !DILocation(line: 3631, column: 10, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11335, file: !1, line: 3631, column: 10)
!11400 = !DILocation(line: 3631, column: 10, scope: !11335)
!11401 = !DILocation(line: 3632, column: 12, scope: !11402)
!11402 = distinct !DILexicalBlock(scope: !11403, file: !1, line: 3632, column: 11)
!11403 = distinct !DILexicalBlock(scope: !11399, file: !1, line: 3631, column: 21)
!11404 = !DILocation(line: 3632, column: 11, scope: !11403)
!11405 = !DILocation(line: 3633, column: 28, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11402, file: !1, line: 3632, column: 25)
!11407 = !DILocation(line: 3633, column: 34, scope: !11406)
!11408 = !DILocation(line: 3633, column: 42, scope: !11406)
!11409 = !DILocation(line: 3633, column: 48, scope: !11406)
!11410 = !DILocation(line: 3633, column: 65, scope: !11406)
!11411 = !DILocation(line: 3633, column: 75, scope: !11406)
!11412 = !DILocation(line: 3633, column: 81, scope: !11406)
!11413 = !DILocation(line: 3633, column: 56, scope: !11406)
!11414 = !DILocation(line: 3633, column: 8, scope: !11406)
!11415 = !DILocation(line: 3634, column: 7, scope: !11406)
!11416 = !DILocation(line: 3635, column: 6, scope: !11403)
!11417 = !DILocation(line: 3637, column: 18, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11399, file: !1, line: 3636, column: 11)
!11419 = !DILocation(line: 3637, column: 24, scope: !11418)
!11420 = !DILocation(line: 3637, column: 32, scope: !11418)
!11421 = !DILocation(line: 3637, column: 7, scope: !11418)
!11422 = !DILocation(line: 3640, column: 14, scope: !11335)
!11423 = !DILocation(line: 3641, column: 5, scope: !11335)
!11424 = !DILocation(line: 3642, column: 4, scope: !11311)
!11425 = !DILocation(line: 3596, column: 50, scope: !11308)
!11426 = !DILocation(line: 3596, column: 4, scope: !11308)
!11427 = distinct !{!11427, !11309, !11428}
!11428 = !DILocation(line: 3642, column: 4, scope: !11300)
!11429 = !DILocation(line: 3644, column: 8, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11297, file: !1, line: 3644, column: 8)
!11431 = !DILocation(line: 3644, column: 8, scope: !11297)
!11432 = !DILocation(line: 3646, column: 27, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11430, file: !1, line: 3644, column: 17)
!11434 = !DILocation(line: 3646, column: 5, scope: !11433)
!11435 = !DILocation(line: 3647, column: 4, scope: !11433)
!11436 = !DILocation(line: 3648, column: 3, scope: !11297)
!11437 = !DILocation(line: 3649, column: 2, scope: !11292)
!11438 = !DILocation(line: 3592, column: 38, scope: !11288)
!11439 = !DILocation(line: 3592, column: 42, scope: !11288)
!11440 = !DILocation(line: 3592, column: 36, scope: !11288)
!11441 = !DILocation(line: 3592, column: 2, scope: !11288)
!11442 = distinct !{!11442, !11289, !11443}
!11443 = !DILocation(line: 3649, column: 2, scope: !11283)
!11444 = !DILocation(line: 3650, column: 1, scope: !11267)
!11445 = distinct !DISubprogram(name: "BKE_nurbList_flag_set", scope: !1, file: !1, line: 3652, type: !11446, scopeLine: 3653, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!11446 = !DISubroutineType(types: !11447)
!11447 = !{null, !1602, !77}
!11448 = !DILocalVariable(name: "editnurb", arg: 1, scope: !11445, file: !1, line: 3652, type: !1602)
!11449 = !DILocation(line: 3652, column: 38, scope: !11445)
!11450 = !DILocalVariable(name: "flag", arg: 2, scope: !11445, file: !1, line: 3652, type: !77)
!11451 = !DILocation(line: 3652, column: 54, scope: !11445)
!11452 = !DILocalVariable(name: "nu", scope: !11445, file: !1, line: 3654, type: !1782)
!11453 = !DILocation(line: 3654, column: 8, scope: !11445)
!11454 = !DILocalVariable(name: "bezt", scope: !11445, file: !1, line: 3655, type: !1817)
!11455 = !DILocation(line: 3655, column: 13, scope: !11445)
!11456 = !DILocalVariable(name: "bp", scope: !11445, file: !1, line: 3656, type: !1805)
!11457 = !DILocation(line: 3656, column: 10, scope: !11445)
!11458 = !DILocalVariable(name: "a", scope: !11445, file: !1, line: 3657, type: !79)
!11459 = !DILocation(line: 3657, column: 6, scope: !11445)
!11460 = !DILocation(line: 3659, column: 12, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11445, file: !1, line: 3659, column: 2)
!11462 = !DILocation(line: 3659, column: 22, scope: !11461)
!11463 = !DILocation(line: 3659, column: 10, scope: !11461)
!11464 = !DILocation(line: 3659, column: 7, scope: !11461)
!11465 = !DILocation(line: 3659, column: 29, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11461, file: !1, line: 3659, column: 2)
!11467 = !DILocation(line: 3659, column: 2, scope: !11461)
!11468 = !DILocation(line: 3660, column: 7, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11470, file: !1, line: 3660, column: 7)
!11470 = distinct !DILexicalBlock(scope: !11466, file: !1, line: 3659, column: 48)
!11471 = !DILocation(line: 3660, column: 11, scope: !11469)
!11472 = !DILocation(line: 3660, column: 16, scope: !11469)
!11473 = !DILocation(line: 3660, column: 7, scope: !11470)
!11474 = !DILocation(line: 3661, column: 8, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11469, file: !1, line: 3660, column: 30)
!11476 = !DILocation(line: 3661, column: 12, scope: !11475)
!11477 = !DILocation(line: 3661, column: 6, scope: !11475)
!11478 = !DILocation(line: 3662, column: 11, scope: !11475)
!11479 = !DILocation(line: 3662, column: 15, scope: !11475)
!11480 = !DILocation(line: 3662, column: 9, scope: !11475)
!11481 = !DILocation(line: 3663, column: 4, scope: !11475)
!11482 = !DILocation(line: 3663, column: 12, scope: !11475)
!11483 = !DILocation(line: 3664, column: 38, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11475, file: !1, line: 3663, column: 16)
!11485 = !DILocation(line: 3664, column: 27, scope: !11484)
!11486 = !DILocation(line: 3664, column: 33, scope: !11484)
!11487 = !DILocation(line: 3664, column: 36, scope: !11484)
!11488 = !DILocation(line: 3664, column: 16, scope: !11484)
!11489 = !DILocation(line: 3664, column: 22, scope: !11484)
!11490 = !DILocation(line: 3664, column: 25, scope: !11484)
!11491 = !DILocation(line: 3664, column: 5, scope: !11484)
!11492 = !DILocation(line: 3664, column: 11, scope: !11484)
!11493 = !DILocation(line: 3664, column: 14, scope: !11484)
!11494 = !DILocation(line: 3665, column: 9, scope: !11484)
!11495 = distinct !{!11495, !11481, !11496}
!11496 = !DILocation(line: 3666, column: 4, scope: !11475)
!11497 = !DILocation(line: 3667, column: 3, scope: !11475)
!11498 = !DILocation(line: 3669, column: 8, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11469, file: !1, line: 3668, column: 8)
!11500 = !DILocation(line: 3669, column: 12, scope: !11499)
!11501 = !DILocation(line: 3669, column: 20, scope: !11499)
!11502 = !DILocation(line: 3669, column: 24, scope: !11499)
!11503 = !DILocation(line: 3669, column: 18, scope: !11499)
!11504 = !DILocation(line: 3669, column: 6, scope: !11499)
!11505 = !DILocation(line: 3670, column: 9, scope: !11499)
!11506 = !DILocation(line: 3670, column: 13, scope: !11499)
!11507 = !DILocation(line: 3670, column: 7, scope: !11499)
!11508 = !DILocation(line: 3671, column: 4, scope: !11499)
!11509 = !DILocation(line: 3671, column: 12, scope: !11499)
!11510 = !DILocation(line: 3672, column: 14, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11499, file: !1, line: 3671, column: 16)
!11512 = !DILocation(line: 3672, column: 5, scope: !11511)
!11513 = !DILocation(line: 3672, column: 9, scope: !11511)
!11514 = !DILocation(line: 3672, column: 12, scope: !11511)
!11515 = !DILocation(line: 3673, column: 7, scope: !11511)
!11516 = distinct !{!11516, !11508, !11517}
!11517 = !DILocation(line: 3674, column: 4, scope: !11499)
!11518 = !DILocation(line: 3676, column: 2, scope: !11470)
!11519 = !DILocation(line: 3659, column: 38, scope: !11466)
!11520 = !DILocation(line: 3659, column: 42, scope: !11466)
!11521 = !DILocation(line: 3659, column: 36, scope: !11466)
!11522 = !DILocation(line: 3659, column: 2, scope: !11466)
!11523 = distinct !{!11523, !11467, !11524}
!11524 = !DILocation(line: 3676, column: 2, scope: !11461)
!11525 = !DILocation(line: 3677, column: 1, scope: !11445)
!11526 = distinct !DISubprogram(name: "BKE_nurb_direction_switch", scope: !1, file: !1, line: 3679, type: !2847, scopeLine: 3680, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!11527 = !DILocalVariable(name: "nu", arg: 1, scope: !11526, file: !1, line: 3679, type: !1782)
!11528 = !DILocation(line: 3679, column: 38, scope: !11526)
!11529 = !DILocalVariable(name: "bezt1", scope: !11526, file: !1, line: 3681, type: !1817)
!11530 = !DILocation(line: 3681, column: 13, scope: !11526)
!11531 = !DILocalVariable(name: "bezt2", scope: !11526, file: !1, line: 3681, type: !1817)
!11532 = !DILocation(line: 3681, column: 21, scope: !11526)
!11533 = !DILocalVariable(name: "bp1", scope: !11526, file: !1, line: 3682, type: !1805)
!11534 = !DILocation(line: 3682, column: 10, scope: !11526)
!11535 = !DILocalVariable(name: "bp2", scope: !11526, file: !1, line: 3682, type: !1805)
!11536 = !DILocation(line: 3682, column: 16, scope: !11526)
!11537 = !DILocalVariable(name: "fp1", scope: !11526, file: !1, line: 3683, type: !1325)
!11538 = !DILocation(line: 3683, column: 9, scope: !11526)
!11539 = !DILocalVariable(name: "fp2", scope: !11526, file: !1, line: 3683, type: !1325)
!11540 = !DILocation(line: 3683, column: 15, scope: !11526)
!11541 = !DILocalVariable(name: "tempf", scope: !11526, file: !1, line: 3683, type: !1325)
!11542 = !DILocation(line: 3683, column: 21, scope: !11526)
!11543 = !DILocalVariable(name: "a", scope: !11526, file: !1, line: 3684, type: !79)
!11544 = !DILocation(line: 3684, column: 6, scope: !11526)
!11545 = !DILocalVariable(name: "b", scope: !11526, file: !1, line: 3684, type: !79)
!11546 = !DILocation(line: 3684, column: 9, scope: !11526)
!11547 = !DILocation(line: 3686, column: 6, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11526, file: !1, line: 3686, column: 6)
!11549 = !DILocation(line: 3686, column: 10, scope: !11548)
!11550 = !DILocation(line: 3686, column: 16, scope: !11548)
!11551 = !DILocation(line: 3686, column: 21, scope: !11548)
!11552 = !DILocation(line: 3686, column: 24, scope: !11548)
!11553 = !DILocation(line: 3686, column: 28, scope: !11548)
!11554 = !DILocation(line: 3686, column: 34, scope: !11548)
!11555 = !DILocation(line: 3686, column: 6, scope: !11526)
!11556 = !DILocation(line: 3687, column: 3, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11548, file: !1, line: 3686, column: 40)
!11558 = !DILocation(line: 3690, column: 6, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11526, file: !1, line: 3690, column: 6)
!11560 = !DILocation(line: 3690, column: 10, scope: !11559)
!11561 = !DILocation(line: 3690, column: 15, scope: !11559)
!11562 = !DILocation(line: 3690, column: 6, scope: !11526)
!11563 = !DILocation(line: 3691, column: 7, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !11559, file: !1, line: 3690, column: 29)
!11565 = !DILocation(line: 3691, column: 11, scope: !11564)
!11566 = !DILocation(line: 3691, column: 5, scope: !11564)
!11567 = !DILocation(line: 3692, column: 11, scope: !11564)
!11568 = !DILocation(line: 3692, column: 15, scope: !11564)
!11569 = !DILocation(line: 3692, column: 9, scope: !11564)
!11570 = !DILocation(line: 3693, column: 11, scope: !11564)
!11571 = !DILocation(line: 3693, column: 20, scope: !11564)
!11572 = !DILocation(line: 3693, column: 22, scope: !11564)
!11573 = !DILocation(line: 3693, column: 17, scope: !11564)
!11574 = !DILocation(line: 3693, column: 9, scope: !11564)
!11575 = !DILocation(line: 3694, column: 7, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11564, file: !1, line: 3694, column: 7)
!11577 = !DILocation(line: 3694, column: 9, scope: !11576)
!11578 = !DILocation(line: 3694, column: 7, scope: !11564)
!11579 = !DILocation(line: 3694, column: 16, scope: !11576)
!11580 = !DILocation(line: 3694, column: 14, scope: !11576)
!11581 = !DILocation(line: 3695, column: 5, scope: !11564)
!11582 = !DILocation(line: 3696, column: 3, scope: !11564)
!11583 = !DILocation(line: 3696, column: 10, scope: !11564)
!11584 = !DILocation(line: 3696, column: 12, scope: !11564)
!11585 = !DILocation(line: 3697, column: 8, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11587, file: !1, line: 3697, column: 8)
!11587 = distinct !DILexicalBlock(scope: !11564, file: !1, line: 3696, column: 17)
!11588 = !DILocation(line: 3697, column: 17, scope: !11586)
!11589 = !DILocation(line: 3697, column: 14, scope: !11586)
!11590 = !DILocation(line: 3697, column: 8, scope: !11587)
!11591 = !DILocalVariable(name: "sw_ap", scope: !11592, file: !1, line: 3698, type: !1818)
!11592 = distinct !DILexicalBlock(scope: !11593, file: !1, line: 3698, column: 5)
!11593 = distinct !DILexicalBlock(scope: !11586, file: !1, line: 3697, column: 24)
!11594 = !DILocation(line: 3698, column: 5, scope: !11592)
!11595 = !DILocation(line: 3699, column: 4, scope: !11593)
!11596 = !DILocation(line: 3701, column: 15, scope: !11587)
!11597 = !DILocation(line: 3701, column: 22, scope: !11587)
!11598 = !DILocation(line: 3701, column: 30, scope: !11587)
!11599 = !DILocation(line: 3701, column: 37, scope: !11587)
!11600 = !DILocation(line: 3701, column: 4, scope: !11587)
!11601 = !DILocation(line: 3703, column: 8, scope: !11602)
!11602 = distinct !DILexicalBlock(scope: !11587, file: !1, line: 3703, column: 8)
!11603 = !DILocation(line: 3703, column: 17, scope: !11602)
!11604 = !DILocation(line: 3703, column: 14, scope: !11602)
!11605 = !DILocation(line: 3703, column: 8, scope: !11587)
!11606 = !DILocation(line: 3704, column: 16, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11602, file: !1, line: 3703, column: 24)
!11608 = !DILocation(line: 3704, column: 23, scope: !11607)
!11609 = !DILocation(line: 3704, column: 31, scope: !11607)
!11610 = !DILocation(line: 3704, column: 38, scope: !11607)
!11611 = !DILocation(line: 3704, column: 5, scope: !11607)
!11612 = !DILocation(line: 3705, column: 4, scope: !11607)
!11613 = !DILocalVariable(name: "sw_ap", scope: !11614, file: !1, line: 3707, type: !64)
!11614 = distinct !DILexicalBlock(scope: !11587, file: !1, line: 3707, column: 4)
!11615 = !DILocation(line: 3707, column: 4, scope: !11614)
!11616 = !DILocalVariable(name: "sw_ap", scope: !11617, file: !1, line: 3708, type: !64)
!11617 = distinct !DILexicalBlock(scope: !11587, file: !1, line: 3708, column: 4)
!11618 = !DILocation(line: 3708, column: 4, scope: !11617)
!11619 = !DILocation(line: 3710, column: 8, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11587, file: !1, line: 3710, column: 8)
!11621 = !DILocation(line: 3710, column: 17, scope: !11620)
!11622 = !DILocation(line: 3710, column: 14, scope: !11620)
!11623 = !DILocation(line: 3710, column: 8, scope: !11587)
!11624 = !DILocalVariable(name: "sw_ap", scope: !11625, file: !1, line: 3711, type: !64)
!11625 = distinct !DILexicalBlock(scope: !11626, file: !1, line: 3711, column: 5)
!11626 = distinct !DILexicalBlock(scope: !11620, file: !1, line: 3710, column: 24)
!11627 = !DILocation(line: 3711, column: 5, scope: !11625)
!11628 = !DILocalVariable(name: "sw_ap", scope: !11629, file: !1, line: 3712, type: !64)
!11629 = distinct !DILexicalBlock(scope: !11626, file: !1, line: 3712, column: 5)
!11630 = !DILocation(line: 3712, column: 5, scope: !11629)
!11631 = !DILocation(line: 3713, column: 20, scope: !11626)
!11632 = !DILocation(line: 3713, column: 27, scope: !11626)
!11633 = !DILocation(line: 3713, column: 19, scope: !11626)
!11634 = !DILocation(line: 3713, column: 5, scope: !11626)
!11635 = !DILocation(line: 3713, column: 12, scope: !11626)
!11636 = !DILocation(line: 3713, column: 17, scope: !11626)
!11637 = !DILocation(line: 3714, column: 20, scope: !11626)
!11638 = !DILocation(line: 3714, column: 27, scope: !11626)
!11639 = !DILocation(line: 3714, column: 19, scope: !11626)
!11640 = !DILocation(line: 3714, column: 5, scope: !11626)
!11641 = !DILocation(line: 3714, column: 12, scope: !11626)
!11642 = !DILocation(line: 3714, column: 17, scope: !11626)
!11643 = !DILocation(line: 3715, column: 4, scope: !11626)
!11644 = !DILocation(line: 3717, column: 20, scope: !11645)
!11645 = distinct !DILexicalBlock(scope: !11620, file: !1, line: 3716, column: 9)
!11646 = !DILocation(line: 3717, column: 27, scope: !11645)
!11647 = !DILocation(line: 3717, column: 19, scope: !11645)
!11648 = !DILocation(line: 3717, column: 5, scope: !11645)
!11649 = !DILocation(line: 3717, column: 12, scope: !11645)
!11650 = !DILocation(line: 3717, column: 17, scope: !11645)
!11651 = !DILocation(line: 3719, column: 5, scope: !11587)
!11652 = !DILocation(line: 3720, column: 9, scope: !11587)
!11653 = !DILocation(line: 3721, column: 9, scope: !11587)
!11654 = distinct !{!11654, !11582, !11655}
!11655 = !DILocation(line: 3722, column: 3, scope: !11564)
!11656 = !DILocation(line: 3723, column: 2, scope: !11564)
!11657 = !DILocation(line: 3724, column: 11, scope: !11658)
!11658 = distinct !DILexicalBlock(scope: !11559, file: !1, line: 3724, column: 11)
!11659 = !DILocation(line: 3724, column: 15, scope: !11658)
!11660 = !DILocation(line: 3724, column: 21, scope: !11658)
!11661 = !DILocation(line: 3724, column: 11, scope: !11559)
!11662 = !DILocation(line: 3725, column: 7, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11658, file: !1, line: 3724, column: 27)
!11664 = !DILocation(line: 3725, column: 11, scope: !11663)
!11665 = !DILocation(line: 3725, column: 5, scope: !11663)
!11666 = !DILocation(line: 3726, column: 9, scope: !11663)
!11667 = !DILocation(line: 3726, column: 13, scope: !11663)
!11668 = !DILocation(line: 3726, column: 7, scope: !11663)
!11669 = !DILocation(line: 3727, column: 9, scope: !11663)
!11670 = !DILocation(line: 3727, column: 16, scope: !11663)
!11671 = !DILocation(line: 3727, column: 18, scope: !11663)
!11672 = !DILocation(line: 3727, column: 13, scope: !11663)
!11673 = !DILocation(line: 3727, column: 7, scope: !11663)
!11674 = !DILocation(line: 3728, column: 5, scope: !11663)
!11675 = !DILocation(line: 3729, column: 3, scope: !11663)
!11676 = !DILocation(line: 3729, column: 10, scope: !11663)
!11677 = !DILocation(line: 3729, column: 17, scope: !11663)
!11678 = !DILocation(line: 3729, column: 14, scope: !11663)
!11679 = !DILocation(line: 3729, column: 21, scope: !11663)
!11680 = !DILocation(line: 3729, column: 24, scope: !11663)
!11681 = !DILocation(line: 3729, column: 26, scope: !11663)
!11682 = !DILocation(line: 0, scope: !11663)
!11683 = !DILocalVariable(name: "sw_ap", scope: !11684, file: !1, line: 3730, type: !1806)
!11684 = distinct !DILexicalBlock(scope: !11685, file: !1, line: 3730, column: 4)
!11685 = distinct !DILexicalBlock(scope: !11663, file: !1, line: 3729, column: 31)
!11686 = !DILocation(line: 3730, column: 4, scope: !11684)
!11687 = !DILocation(line: 3731, column: 5, scope: !11685)
!11688 = !DILocation(line: 3732, column: 17, scope: !11685)
!11689 = !DILocation(line: 3732, column: 22, scope: !11685)
!11690 = !DILocation(line: 3732, column: 16, scope: !11685)
!11691 = !DILocation(line: 3732, column: 4, scope: !11685)
!11692 = !DILocation(line: 3732, column: 9, scope: !11685)
!11693 = !DILocation(line: 3732, column: 14, scope: !11685)
!11694 = !DILocation(line: 3733, column: 17, scope: !11685)
!11695 = !DILocation(line: 3733, column: 22, scope: !11685)
!11696 = !DILocation(line: 3733, column: 16, scope: !11685)
!11697 = !DILocation(line: 3733, column: 4, scope: !11685)
!11698 = !DILocation(line: 3733, column: 9, scope: !11685)
!11699 = !DILocation(line: 3733, column: 14, scope: !11685)
!11700 = !DILocation(line: 3734, column: 7, scope: !11685)
!11701 = !DILocation(line: 3735, column: 7, scope: !11685)
!11702 = distinct !{!11702, !11675, !11703}
!11703 = !DILocation(line: 3736, column: 3, scope: !11663)
!11704 = !DILocation(line: 3740, column: 7, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11663, file: !1, line: 3740, column: 7)
!11706 = !DILocation(line: 3740, column: 11, scope: !11705)
!11707 = !DILocation(line: 3740, column: 17, scope: !11705)
!11708 = !DILocation(line: 3740, column: 7, scope: !11663)
!11709 = !DILocation(line: 3741, column: 17, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11705, file: !1, line: 3740, column: 22)
!11711 = !DILocation(line: 3741, column: 22, scope: !11710)
!11712 = !DILocation(line: 3741, column: 16, scope: !11710)
!11713 = !DILocation(line: 3741, column: 4, scope: !11710)
!11714 = !DILocation(line: 3741, column: 9, scope: !11710)
!11715 = !DILocation(line: 3741, column: 14, scope: !11710)
!11716 = !DILocation(line: 3742, column: 3, scope: !11710)
!11717 = !DILocation(line: 3743, column: 7, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !11663, file: !1, line: 3743, column: 7)
!11719 = !DILocation(line: 3743, column: 11, scope: !11718)
!11720 = !DILocation(line: 3743, column: 16, scope: !11718)
!11721 = !DILocation(line: 3743, column: 7, scope: !11663)
!11722 = !DILocation(line: 3745, column: 8, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11724, file: !1, line: 3745, column: 8)
!11724 = distinct !DILexicalBlock(scope: !11718, file: !1, line: 3743, column: 29)
!11725 = !DILocation(line: 3745, column: 12, scope: !11723)
!11726 = !DILocation(line: 3745, column: 8, scope: !11724)
!11727 = !DILocation(line: 3747, column: 9, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11723, file: !1, line: 3745, column: 20)
!11729 = !DILocation(line: 3747, column: 7, scope: !11728)
!11730 = !DILocation(line: 3748, column: 11, scope: !11728)
!11731 = !DILocation(line: 3748, column: 15, scope: !11728)
!11732 = !DILocation(line: 3748, column: 9, scope: !11728)
!11733 = !DILocation(line: 3749, column: 11, scope: !11728)
!11734 = !DILocation(line: 3749, column: 18, scope: !11728)
!11735 = !DILocation(line: 3749, column: 20, scope: !11728)
!11736 = !DILocation(line: 3749, column: 15, scope: !11728)
!11737 = !DILocation(line: 3749, column: 9, scope: !11728)
!11738 = !DILocation(line: 3750, column: 7, scope: !11728)
!11739 = !DILocation(line: 3751, column: 5, scope: !11728)
!11740 = !DILocation(line: 3751, column: 12, scope: !11728)
!11741 = !DILocation(line: 3751, column: 19, scope: !11728)
!11742 = !DILocation(line: 3751, column: 16, scope: !11728)
!11743 = !DILocation(line: 3751, column: 23, scope: !11728)
!11744 = !DILocation(line: 3751, column: 26, scope: !11728)
!11745 = !DILocation(line: 3751, column: 28, scope: !11728)
!11746 = !DILocation(line: 0, scope: !11728)
!11747 = !DILocalVariable(name: "sw_ap", scope: !11748, file: !1, line: 3752, type: !128)
!11748 = distinct !DILexicalBlock(scope: !11749, file: !1, line: 3752, column: 6)
!11749 = distinct !DILexicalBlock(scope: !11728, file: !1, line: 3751, column: 33)
!11750 = !DILocation(line: 3752, column: 6, scope: !11748)
!11751 = !DILocation(line: 3753, column: 7, scope: !11749)
!11752 = !DILocation(line: 3754, column: 9, scope: !11749)
!11753 = !DILocation(line: 3755, column: 9, scope: !11749)
!11754 = distinct !{!11754, !11739, !11755}
!11755 = !DILocation(line: 3756, column: 5, scope: !11728)
!11756 = !DILocation(line: 3758, column: 9, scope: !11728)
!11757 = !DILocation(line: 3758, column: 7, scope: !11728)
!11758 = !DILocation(line: 3759, column: 11, scope: !11728)
!11759 = !DILocation(line: 3759, column: 15, scope: !11728)
!11760 = !DILocation(line: 3759, column: 9, scope: !11728)
!11761 = !DILocation(line: 3760, column: 19, scope: !11728)
!11762 = !DILocation(line: 3760, column: 47, scope: !11728)
!11763 = !DILocation(line: 3760, column: 45, scope: !11728)
!11764 = !DILocation(line: 3760, column: 17, scope: !11728)
!11765 = !DILocation(line: 3760, column: 9, scope: !11728)
!11766 = !DILocation(line: 3761, column: 6, scope: !11728)
!11767 = !DILocation(line: 3762, column: 14, scope: !11728)
!11768 = !DILocation(line: 3762, column: 18, scope: !11728)
!11769 = !DILocation(line: 3762, column: 5, scope: !11728)
!11770 = !DILocation(line: 3762, column: 9, scope: !11728)
!11771 = !DILocation(line: 3762, column: 12, scope: !11728)
!11772 = !DILocation(line: 3763, column: 5, scope: !11728)
!11773 = !DILocation(line: 3763, column: 13, scope: !11728)
!11774 = !DILocation(line: 3764, column: 21, scope: !11775)
!11775 = distinct !DILexicalBlock(scope: !11728, file: !1, line: 3763, column: 17)
!11776 = !DILocation(line: 3764, column: 30, scope: !11775)
!11777 = !DILocation(line: 3764, column: 28, scope: !11775)
!11778 = !DILocation(line: 3764, column: 15, scope: !11775)
!11779 = !DILocation(line: 3764, column: 6, scope: !11775)
!11780 = !DILocation(line: 3764, column: 13, scope: !11775)
!11781 = !DILocation(line: 3765, column: 9, scope: !11775)
!11782 = !DILocation(line: 3766, column: 9, scope: !11775)
!11783 = distinct !{!11783, !11772, !11784}
!11784 = !DILocation(line: 3767, column: 5, scope: !11728)
!11785 = !DILocation(line: 3769, column: 9, scope: !11728)
!11786 = !DILocation(line: 3769, column: 20, scope: !11728)
!11787 = !DILocation(line: 3769, column: 7, scope: !11728)
!11788 = !DILocation(line: 3770, column: 11, scope: !11728)
!11789 = !DILocation(line: 3770, column: 15, scope: !11728)
!11790 = !DILocation(line: 3770, column: 9, scope: !11728)
!11791 = !DILocation(line: 3771, column: 11, scope: !11728)
!11792 = !DILocation(line: 3771, column: 9, scope: !11728)
!11793 = !DILocation(line: 3772, column: 5, scope: !11728)
!11794 = !DILocation(line: 3772, column: 12, scope: !11728)
!11795 = !DILocation(line: 3773, column: 8, scope: !11728)
!11796 = !DILocation(line: 3774, column: 5, scope: !11728)
!11797 = !DILocation(line: 3774, column: 13, scope: !11728)
!11798 = !DILocation(line: 3775, column: 15, scope: !11799)
!11799 = distinct !DILexicalBlock(scope: !11728, file: !1, line: 3774, column: 17)
!11800 = !DILocation(line: 3775, column: 25, scope: !11799)
!11801 = !DILocation(line: 3775, column: 23, scope: !11799)
!11802 = !DILocation(line: 3775, column: 6, scope: !11799)
!11803 = !DILocation(line: 3775, column: 13, scope: !11799)
!11804 = !DILocation(line: 3776, column: 9, scope: !11799)
!11805 = !DILocation(line: 3777, column: 9, scope: !11799)
!11806 = distinct !{!11806, !11796, !11807}
!11807 = !DILocation(line: 3778, column: 5, scope: !11728)
!11808 = !DILocation(line: 3779, column: 5, scope: !11728)
!11809 = !DILocation(line: 3779, column: 15, scope: !11728)
!11810 = !DILocation(line: 3780, column: 4, scope: !11728)
!11811 = !DILocation(line: 3781, column: 3, scope: !11724)
!11812 = !DILocation(line: 3782, column: 2, scope: !11663)
!11813 = !DILocation(line: 3784, column: 10, scope: !11814)
!11814 = distinct !DILexicalBlock(scope: !11815, file: !1, line: 3784, column: 3)
!11815 = distinct !DILexicalBlock(scope: !11658, file: !1, line: 3783, column: 7)
!11816 = !DILocation(line: 3784, column: 8, scope: !11814)
!11817 = !DILocation(line: 3784, column: 15, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11814, file: !1, line: 3784, column: 3)
!11819 = !DILocation(line: 3784, column: 19, scope: !11818)
!11820 = !DILocation(line: 3784, column: 23, scope: !11818)
!11821 = !DILocation(line: 3784, column: 17, scope: !11818)
!11822 = !DILocation(line: 3784, column: 3, scope: !11814)
!11823 = !DILocation(line: 3785, column: 10, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !11818, file: !1, line: 3784, column: 35)
!11825 = !DILocation(line: 3785, column: 14, scope: !11824)
!11826 = !DILocation(line: 3785, column: 19, scope: !11824)
!11827 = !DILocation(line: 3785, column: 23, scope: !11824)
!11828 = !DILocation(line: 3785, column: 27, scope: !11824)
!11829 = !DILocation(line: 3785, column: 21, scope: !11824)
!11830 = !DILocation(line: 3785, column: 17, scope: !11824)
!11831 = !DILocation(line: 3785, column: 8, scope: !11824)
!11832 = !DILocation(line: 3786, column: 8, scope: !11824)
!11833 = !DILocation(line: 3786, column: 12, scope: !11824)
!11834 = !DILocation(line: 3786, column: 6, scope: !11824)
!11835 = !DILocation(line: 3787, column: 10, scope: !11824)
!11836 = !DILocation(line: 3787, column: 17, scope: !11824)
!11837 = !DILocation(line: 3787, column: 19, scope: !11824)
!11838 = !DILocation(line: 3787, column: 14, scope: !11824)
!11839 = !DILocation(line: 3787, column: 8, scope: !11824)
!11840 = !DILocation(line: 3788, column: 6, scope: !11824)
!11841 = !DILocation(line: 3790, column: 4, scope: !11824)
!11842 = !DILocation(line: 3790, column: 11, scope: !11824)
!11843 = !DILocation(line: 3790, column: 18, scope: !11824)
!11844 = !DILocation(line: 3790, column: 15, scope: !11824)
!11845 = !DILocation(line: 3790, column: 22, scope: !11824)
!11846 = !DILocation(line: 3790, column: 25, scope: !11824)
!11847 = !DILocation(line: 3790, column: 27, scope: !11824)
!11848 = !DILocation(line: 0, scope: !11824)
!11849 = !DILocalVariable(name: "sw_ap", scope: !11850, file: !1, line: 3791, type: !1806)
!11850 = distinct !DILexicalBlock(scope: !11851, file: !1, line: 3791, column: 5)
!11851 = distinct !DILexicalBlock(scope: !11824, file: !1, line: 3790, column: 32)
!11852 = !DILocation(line: 3791, column: 5, scope: !11850)
!11853 = !DILocation(line: 3792, column: 6, scope: !11851)
!11854 = !DILocation(line: 3793, column: 8, scope: !11851)
!11855 = !DILocation(line: 3794, column: 8, scope: !11851)
!11856 = distinct !{!11856, !11841, !11857}
!11857 = !DILocation(line: 3795, column: 4, scope: !11824)
!11858 = !DILocation(line: 3796, column: 3, scope: !11824)
!11859 = !DILocation(line: 3784, column: 31, scope: !11818)
!11860 = !DILocation(line: 3784, column: 3, scope: !11818)
!11861 = distinct !{!11861, !11822, !11862}
!11862 = !DILocation(line: 3796, column: 3, scope: !11814)
!11863 = !DILocation(line: 3798, column: 1, scope: !11526)
!11864 = distinct !DISubprogram(name: "swap_v3_v3", scope: !2341, file: !2341, line: 223, type: !11865, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!11865 = !DISubroutineType(types: !11866)
!11866 = !{null, !1325, !1325}
!11867 = !DILocalVariable(name: "a", arg: 1, scope: !11864, file: !2341, line: 223, type: !1325)
!11868 = !DILocation(line: 223, column: 31, scope: !11864)
!11869 = !DILocalVariable(name: "b", arg: 2, scope: !11864, file: !2341, line: 223, type: !1325)
!11870 = !DILocation(line: 223, column: 43, scope: !11864)
!11871 = !DILocalVariable(name: "sw_ap", scope: !11872, file: !2341, line: 225, type: !128)
!11872 = distinct !DILexicalBlock(scope: !11864, file: !2341, line: 225, column: 2)
!11873 = !DILocation(line: 225, column: 2, scope: !11872)
!11874 = !DILocalVariable(name: "sw_ap", scope: !11875, file: !2341, line: 226, type: !128)
!11875 = distinct !DILexicalBlock(scope: !11864, file: !2341, line: 226, column: 2)
!11876 = !DILocation(line: 226, column: 2, scope: !11875)
!11877 = !DILocalVariable(name: "sw_ap", scope: !11878, file: !2341, line: 227, type: !128)
!11878 = distinct !DILexicalBlock(scope: !11864, file: !2341, line: 227, column: 2)
!11879 = !DILocation(line: 227, column: 2, scope: !11878)
!11880 = !DILocation(line: 228, column: 1, scope: !11864)
!11881 = distinct !DISubprogram(name: "BKE_curve_nurbs_vertexCos_get", scope: !1, file: !1, line: 3801, type: !11882, scopeLine: 3802, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!11882 = !DISubroutineType(types: !11883)
!11883 = !{!11884, !1602, !1840}
!11884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!11885 = !DILocalVariable(name: "lb", arg: 1, scope: !11881, file: !1, line: 3801, type: !1602)
!11886 = !DILocation(line: 3801, column: 49, scope: !11881)
!11887 = !DILocalVariable(name: "r_numVerts", arg: 2, scope: !11881, file: !1, line: 3801, type: !1840)
!11888 = !DILocation(line: 3801, column: 58, scope: !11881)
!11889 = !DILocalVariable(name: "i", scope: !11881, file: !1, line: 3803, type: !79)
!11890 = !DILocation(line: 3803, column: 6, scope: !11881)
!11891 = !DILocalVariable(name: "numVerts", scope: !11881, file: !1, line: 3803, type: !79)
!11892 = !DILocation(line: 3803, column: 9, scope: !11881)
!11893 = !DILocation(line: 3803, column: 59, scope: !11881)
!11894 = !DILocation(line: 3803, column: 34, scope: !11881)
!11895 = !DILocation(line: 3803, column: 21, scope: !11881)
!11896 = !DILocation(line: 3803, column: 32, scope: !11881)
!11897 = !DILocalVariable(name: "co", scope: !11881, file: !1, line: 3804, type: !1325)
!11898 = !DILocation(line: 3804, column: 9, scope: !11881)
!11899 = !DILocalVariable(name: "cos", scope: !11881, file: !1, line: 3804, type: !11884)
!11900 = !DILocation(line: 3804, column: 15, scope: !11881)
!11901 = !DILocation(line: 3804, column: 25, scope: !11881)
!11902 = !DILocation(line: 3804, column: 52, scope: !11881)
!11903 = !DILocation(line: 3804, column: 50, scope: !11881)
!11904 = !DILocalVariable(name: "nu", scope: !11881, file: !1, line: 3805, type: !1782)
!11905 = !DILocation(line: 3805, column: 8, scope: !11881)
!11906 = !DILocation(line: 3807, column: 7, scope: !11881)
!11907 = !DILocation(line: 3807, column: 5, scope: !11881)
!11908 = !DILocation(line: 3808, column: 12, scope: !11909)
!11909 = distinct !DILexicalBlock(scope: !11881, file: !1, line: 3808, column: 2)
!11910 = !DILocation(line: 3808, column: 16, scope: !11909)
!11911 = !DILocation(line: 3808, column: 10, scope: !11909)
!11912 = !DILocation(line: 3808, column: 7, scope: !11909)
!11913 = !DILocation(line: 3808, column: 23, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11909, file: !1, line: 3808, column: 2)
!11915 = !DILocation(line: 3808, column: 2, scope: !11909)
!11916 = !DILocation(line: 3809, column: 7, scope: !11917)
!11917 = distinct !DILexicalBlock(scope: !11918, file: !1, line: 3809, column: 7)
!11918 = distinct !DILexicalBlock(scope: !11914, file: !1, line: 3808, column: 42)
!11919 = !DILocation(line: 3809, column: 11, scope: !11917)
!11920 = !DILocation(line: 3809, column: 16, scope: !11917)
!11921 = !DILocation(line: 3809, column: 7, scope: !11918)
!11922 = !DILocalVariable(name: "bezt", scope: !11923, file: !1, line: 3810, type: !1817)
!11923 = distinct !DILexicalBlock(scope: !11917, file: !1, line: 3809, column: 30)
!11924 = !DILocation(line: 3810, column: 15, scope: !11923)
!11925 = !DILocation(line: 3810, column: 22, scope: !11923)
!11926 = !DILocation(line: 3810, column: 26, scope: !11923)
!11927 = !DILocation(line: 3812, column: 11, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11923, file: !1, line: 3812, column: 4)
!11929 = !DILocation(line: 3812, column: 9, scope: !11928)
!11930 = !DILocation(line: 3812, column: 16, scope: !11931)
!11931 = distinct !DILexicalBlock(scope: !11928, file: !1, line: 3812, column: 4)
!11932 = !DILocation(line: 3812, column: 20, scope: !11931)
!11933 = !DILocation(line: 3812, column: 24, scope: !11931)
!11934 = !DILocation(line: 3812, column: 18, scope: !11931)
!11935 = !DILocation(line: 3812, column: 4, scope: !11928)
!11936 = !DILocation(line: 3813, column: 16, scope: !11937)
!11937 = distinct !DILexicalBlock(scope: !11931, file: !1, line: 3812, column: 44)
!11938 = !DILocation(line: 3813, column: 20, scope: !11937)
!11939 = !DILocation(line: 3813, column: 26, scope: !11937)
!11940 = !DILocation(line: 3813, column: 5, scope: !11937)
!11941 = !DILocation(line: 3813, column: 38, scope: !11937)
!11942 = !DILocation(line: 3814, column: 16, scope: !11937)
!11943 = !DILocation(line: 3814, column: 20, scope: !11937)
!11944 = !DILocation(line: 3814, column: 26, scope: !11937)
!11945 = !DILocation(line: 3814, column: 5, scope: !11937)
!11946 = !DILocation(line: 3814, column: 38, scope: !11937)
!11947 = !DILocation(line: 3815, column: 16, scope: !11937)
!11948 = !DILocation(line: 3815, column: 20, scope: !11937)
!11949 = !DILocation(line: 3815, column: 26, scope: !11937)
!11950 = !DILocation(line: 3815, column: 5, scope: !11937)
!11951 = !DILocation(line: 3815, column: 38, scope: !11937)
!11952 = !DILocation(line: 3816, column: 4, scope: !11937)
!11953 = !DILocation(line: 3812, column: 32, scope: !11931)
!11954 = !DILocation(line: 3812, column: 40, scope: !11931)
!11955 = !DILocation(line: 3812, column: 4, scope: !11931)
!11956 = distinct !{!11956, !11935, !11957}
!11957 = !DILocation(line: 3816, column: 4, scope: !11928)
!11958 = !DILocation(line: 3817, column: 3, scope: !11923)
!11959 = !DILocalVariable(name: "bp", scope: !11960, file: !1, line: 3819, type: !1805)
!11960 = distinct !DILexicalBlock(scope: !11917, file: !1, line: 3818, column: 8)
!11961 = !DILocation(line: 3819, column: 12, scope: !11960)
!11962 = !DILocation(line: 3819, column: 17, scope: !11960)
!11963 = !DILocation(line: 3819, column: 21, scope: !11960)
!11964 = !DILocation(line: 3821, column: 11, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11960, file: !1, line: 3821, column: 4)
!11966 = !DILocation(line: 3821, column: 9, scope: !11965)
!11967 = !DILocation(line: 3821, column: 16, scope: !11968)
!11968 = distinct !DILexicalBlock(scope: !11965, file: !1, line: 3821, column: 4)
!11969 = !DILocation(line: 3821, column: 20, scope: !11968)
!11970 = !DILocation(line: 3821, column: 24, scope: !11968)
!11971 = !DILocation(line: 3821, column: 32, scope: !11968)
!11972 = !DILocation(line: 3821, column: 36, scope: !11968)
!11973 = !DILocation(line: 3821, column: 30, scope: !11968)
!11974 = !DILocation(line: 3821, column: 18, scope: !11968)
!11975 = !DILocation(line: 3821, column: 4, scope: !11965)
!11976 = !DILocation(line: 3822, column: 16, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11968, file: !1, line: 3821, column: 54)
!11978 = !DILocation(line: 3822, column: 20, scope: !11977)
!11979 = !DILocation(line: 3822, column: 24, scope: !11977)
!11980 = !DILocation(line: 3822, column: 5, scope: !11977)
!11981 = !DILocation(line: 3822, column: 33, scope: !11977)
!11982 = !DILocation(line: 3823, column: 4, scope: !11977)
!11983 = !DILocation(line: 3821, column: 44, scope: !11968)
!11984 = !DILocation(line: 3821, column: 50, scope: !11968)
!11985 = !DILocation(line: 3821, column: 4, scope: !11968)
!11986 = distinct !{!11986, !11975, !11987}
!11987 = !DILocation(line: 3823, column: 4, scope: !11965)
!11988 = !DILocation(line: 3825, column: 2, scope: !11918)
!11989 = !DILocation(line: 3808, column: 32, scope: !11914)
!11990 = !DILocation(line: 3808, column: 36, scope: !11914)
!11991 = !DILocation(line: 3808, column: 30, scope: !11914)
!11992 = !DILocation(line: 3808, column: 2, scope: !11914)
!11993 = distinct !{!11993, !11915, !11994}
!11994 = !DILocation(line: 3825, column: 2, scope: !11909)
!11995 = !DILocation(line: 3827, column: 9, scope: !11881)
!11996 = !DILocation(line: 3827, column: 2, scope: !11881)
!11997 = distinct !DISubprogram(name: "BK_curve_nurbs_vertexCos_apply", scope: !1, file: !1, line: 3830, type: !11998, scopeLine: 3831, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!11998 = !DISubroutineType(types: !11999)
!11999 = !{null, !1602, !11884}
!12000 = !DILocalVariable(name: "lb", arg: 1, scope: !11997, file: !1, line: 3830, type: !1602)
!12001 = !DILocation(line: 3830, column: 47, scope: !11997)
!12002 = !DILocalVariable(name: "vertexCos", arg: 2, scope: !11997, file: !1, line: 3830, type: !11884)
!12003 = !DILocation(line: 3830, column: 59, scope: !11997)
!12004 = !DILocalVariable(name: "co", scope: !11997, file: !1, line: 3832, type: !3191)
!12005 = !DILocation(line: 3832, column: 15, scope: !11997)
!12006 = !DILocation(line: 3832, column: 20, scope: !11997)
!12007 = !DILocalVariable(name: "nu", scope: !11997, file: !1, line: 3833, type: !1782)
!12008 = !DILocation(line: 3833, column: 8, scope: !11997)
!12009 = !DILocalVariable(name: "i", scope: !11997, file: !1, line: 3834, type: !79)
!12010 = !DILocation(line: 3834, column: 6, scope: !11997)
!12011 = !DILocation(line: 3836, column: 12, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !11997, file: !1, line: 3836, column: 2)
!12013 = !DILocation(line: 3836, column: 16, scope: !12012)
!12014 = !DILocation(line: 3836, column: 10, scope: !12012)
!12015 = !DILocation(line: 3836, column: 7, scope: !12012)
!12016 = !DILocation(line: 3836, column: 23, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !12012, file: !1, line: 3836, column: 2)
!12018 = !DILocation(line: 3836, column: 2, scope: !12012)
!12019 = !DILocation(line: 3837, column: 7, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !12021, file: !1, line: 3837, column: 7)
!12021 = distinct !DILexicalBlock(scope: !12017, file: !1, line: 3836, column: 42)
!12022 = !DILocation(line: 3837, column: 11, scope: !12020)
!12023 = !DILocation(line: 3837, column: 16, scope: !12020)
!12024 = !DILocation(line: 3837, column: 7, scope: !12021)
!12025 = !DILocalVariable(name: "bezt", scope: !12026, file: !1, line: 3838, type: !1817)
!12026 = distinct !DILexicalBlock(scope: !12020, file: !1, line: 3837, column: 30)
!12027 = !DILocation(line: 3838, column: 15, scope: !12026)
!12028 = !DILocation(line: 3838, column: 22, scope: !12026)
!12029 = !DILocation(line: 3838, column: 26, scope: !12026)
!12030 = !DILocation(line: 3840, column: 11, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12026, file: !1, line: 3840, column: 4)
!12032 = !DILocation(line: 3840, column: 9, scope: !12031)
!12033 = !DILocation(line: 3840, column: 16, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12031, file: !1, line: 3840, column: 4)
!12035 = !DILocation(line: 3840, column: 20, scope: !12034)
!12036 = !DILocation(line: 3840, column: 24, scope: !12034)
!12037 = !DILocation(line: 3840, column: 18, scope: !12034)
!12038 = !DILocation(line: 3840, column: 4, scope: !12031)
!12039 = !DILocation(line: 3841, column: 16, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !12034, file: !1, line: 3840, column: 44)
!12041 = !DILocation(line: 3841, column: 22, scope: !12040)
!12042 = !DILocation(line: 3841, column: 30, scope: !12040)
!12043 = !DILocation(line: 3841, column: 5, scope: !12040)
!12044 = !DILocation(line: 3841, column: 38, scope: !12040)
!12045 = !DILocation(line: 3842, column: 16, scope: !12040)
!12046 = !DILocation(line: 3842, column: 22, scope: !12040)
!12047 = !DILocation(line: 3842, column: 30, scope: !12040)
!12048 = !DILocation(line: 3842, column: 5, scope: !12040)
!12049 = !DILocation(line: 3842, column: 38, scope: !12040)
!12050 = !DILocation(line: 3843, column: 16, scope: !12040)
!12051 = !DILocation(line: 3843, column: 22, scope: !12040)
!12052 = !DILocation(line: 3843, column: 30, scope: !12040)
!12053 = !DILocation(line: 3843, column: 5, scope: !12040)
!12054 = !DILocation(line: 3843, column: 38, scope: !12040)
!12055 = !DILocation(line: 3844, column: 4, scope: !12040)
!12056 = !DILocation(line: 3840, column: 32, scope: !12034)
!12057 = !DILocation(line: 3840, column: 40, scope: !12034)
!12058 = !DILocation(line: 3840, column: 4, scope: !12034)
!12059 = distinct !{!12059, !12038, !12060}
!12060 = !DILocation(line: 3844, column: 4, scope: !12031)
!12061 = !DILocation(line: 3845, column: 3, scope: !12026)
!12062 = !DILocalVariable(name: "bp", scope: !12063, file: !1, line: 3847, type: !1805)
!12063 = distinct !DILexicalBlock(scope: !12020, file: !1, line: 3846, column: 8)
!12064 = !DILocation(line: 3847, column: 12, scope: !12063)
!12065 = !DILocation(line: 3847, column: 17, scope: !12063)
!12066 = !DILocation(line: 3847, column: 21, scope: !12063)
!12067 = !DILocation(line: 3849, column: 11, scope: !12068)
!12068 = distinct !DILexicalBlock(scope: !12063, file: !1, line: 3849, column: 4)
!12069 = !DILocation(line: 3849, column: 9, scope: !12068)
!12070 = !DILocation(line: 3849, column: 16, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !12068, file: !1, line: 3849, column: 4)
!12072 = !DILocation(line: 3849, column: 20, scope: !12071)
!12073 = !DILocation(line: 3849, column: 24, scope: !12071)
!12074 = !DILocation(line: 3849, column: 32, scope: !12071)
!12075 = !DILocation(line: 3849, column: 36, scope: !12071)
!12076 = !DILocation(line: 3849, column: 30, scope: !12071)
!12077 = !DILocation(line: 3849, column: 18, scope: !12071)
!12078 = !DILocation(line: 3849, column: 4, scope: !12068)
!12079 = !DILocation(line: 3850, column: 16, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !12071, file: !1, line: 3849, column: 54)
!12081 = !DILocation(line: 3850, column: 20, scope: !12080)
!12082 = !DILocation(line: 3850, column: 25, scope: !12080)
!12083 = !DILocation(line: 3850, column: 5, scope: !12080)
!12084 = !DILocation(line: 3850, column: 33, scope: !12080)
!12085 = !DILocation(line: 3851, column: 4, scope: !12080)
!12086 = !DILocation(line: 3849, column: 44, scope: !12071)
!12087 = !DILocation(line: 3849, column: 50, scope: !12071)
!12088 = !DILocation(line: 3849, column: 4, scope: !12071)
!12089 = distinct !{!12089, !12078, !12090}
!12090 = !DILocation(line: 3851, column: 4, scope: !12068)
!12091 = !DILocation(line: 3854, column: 26, scope: !12021)
!12092 = !DILocation(line: 3854, column: 3, scope: !12021)
!12093 = !DILocation(line: 3855, column: 2, scope: !12021)
!12094 = !DILocation(line: 3836, column: 32, scope: !12017)
!12095 = !DILocation(line: 3836, column: 36, scope: !12017)
!12096 = !DILocation(line: 3836, column: 30, scope: !12017)
!12097 = !DILocation(line: 3836, column: 2, scope: !12017)
!12098 = distinct !{!12098, !12018, !12099}
!12099 = !DILocation(line: 3855, column: 2, scope: !12012)
!12100 = !DILocation(line: 3856, column: 1, scope: !11997)
!12101 = distinct !DISubprogram(name: "BKE_curve_nurbs_keyVertexCos_get", scope: !1, file: !1, line: 3858, type: !12102, scopeLine: 3859, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!12102 = !DISubroutineType(types: !12103)
!12103 = !{!11884, !1602, !1325}
!12104 = !DILocalVariable(name: "lb", arg: 1, scope: !12101, file: !1, line: 3858, type: !1602)
!12105 = !DILocation(line: 3858, column: 52, scope: !12101)
!12106 = !DILocalVariable(name: "key", arg: 2, scope: !12101, file: !1, line: 3858, type: !1325)
!12107 = !DILocation(line: 3858, column: 63, scope: !12101)
!12108 = !DILocalVariable(name: "i", scope: !12101, file: !1, line: 3860, type: !79)
!12109 = !DILocation(line: 3860, column: 6, scope: !12101)
!12110 = !DILocalVariable(name: "numVerts", scope: !12101, file: !1, line: 3860, type: !79)
!12111 = !DILocation(line: 3860, column: 9, scope: !12101)
!12112 = !DILocation(line: 3860, column: 45, scope: !12101)
!12113 = !DILocation(line: 3860, column: 20, scope: !12101)
!12114 = !DILocalVariable(name: "co", scope: !12101, file: !1, line: 3861, type: !1325)
!12115 = !DILocation(line: 3861, column: 9, scope: !12101)
!12116 = !DILocalVariable(name: "cos", scope: !12101, file: !1, line: 3861, type: !11884)
!12117 = !DILocation(line: 3861, column: 15, scope: !12101)
!12118 = !DILocation(line: 3861, column: 25, scope: !12101)
!12119 = !DILocation(line: 3861, column: 52, scope: !12101)
!12120 = !DILocation(line: 3861, column: 50, scope: !12101)
!12121 = !DILocalVariable(name: "nu", scope: !12101, file: !1, line: 3862, type: !1782)
!12122 = !DILocation(line: 3862, column: 8, scope: !12101)
!12123 = !DILocation(line: 3864, column: 7, scope: !12101)
!12124 = !DILocation(line: 3864, column: 5, scope: !12101)
!12125 = !DILocation(line: 3865, column: 12, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !12101, file: !1, line: 3865, column: 2)
!12127 = !DILocation(line: 3865, column: 16, scope: !12126)
!12128 = !DILocation(line: 3865, column: 10, scope: !12126)
!12129 = !DILocation(line: 3865, column: 7, scope: !12126)
!12130 = !DILocation(line: 3865, column: 23, scope: !12131)
!12131 = distinct !DILexicalBlock(scope: !12126, file: !1, line: 3865, column: 2)
!12132 = !DILocation(line: 3865, column: 2, scope: !12126)
!12133 = !DILocation(line: 3866, column: 7, scope: !12134)
!12134 = distinct !DILexicalBlock(scope: !12135, file: !1, line: 3866, column: 7)
!12135 = distinct !DILexicalBlock(scope: !12131, file: !1, line: 3865, column: 42)
!12136 = !DILocation(line: 3866, column: 11, scope: !12134)
!12137 = !DILocation(line: 3866, column: 16, scope: !12134)
!12138 = !DILocation(line: 3866, column: 7, scope: !12135)
!12139 = !DILocalVariable(name: "bezt", scope: !12140, file: !1, line: 3867, type: !1817)
!12140 = distinct !DILexicalBlock(scope: !12134, file: !1, line: 3866, column: 30)
!12141 = !DILocation(line: 3867, column: 15, scope: !12140)
!12142 = !DILocation(line: 3867, column: 22, scope: !12140)
!12143 = !DILocation(line: 3867, column: 26, scope: !12140)
!12144 = !DILocation(line: 3869, column: 11, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12140, file: !1, line: 3869, column: 4)
!12146 = !DILocation(line: 3869, column: 9, scope: !12145)
!12147 = !DILocation(line: 3869, column: 16, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !12145, file: !1, line: 3869, column: 4)
!12149 = !DILocation(line: 3869, column: 20, scope: !12148)
!12150 = !DILocation(line: 3869, column: 24, scope: !12148)
!12151 = !DILocation(line: 3869, column: 18, scope: !12148)
!12152 = !DILocation(line: 3869, column: 4, scope: !12145)
!12153 = !DILocation(line: 3870, column: 16, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12148, file: !1, line: 3869, column: 44)
!12155 = !DILocation(line: 3870, column: 20, scope: !12154)
!12156 = !DILocation(line: 3870, column: 5, scope: !12154)
!12157 = !DILocation(line: 3870, column: 29, scope: !12154)
!12158 = !DILocation(line: 3870, column: 39, scope: !12154)
!12159 = !DILocation(line: 3871, column: 16, scope: !12154)
!12160 = !DILocation(line: 3871, column: 20, scope: !12154)
!12161 = !DILocation(line: 3871, column: 5, scope: !12154)
!12162 = !DILocation(line: 3871, column: 29, scope: !12154)
!12163 = !DILocation(line: 3871, column: 39, scope: !12154)
!12164 = !DILocation(line: 3872, column: 16, scope: !12154)
!12165 = !DILocation(line: 3872, column: 20, scope: !12154)
!12166 = !DILocation(line: 3872, column: 5, scope: !12154)
!12167 = !DILocation(line: 3872, column: 29, scope: !12154)
!12168 = !DILocation(line: 3872, column: 39, scope: !12154)
!12169 = !DILocation(line: 3873, column: 9, scope: !12154)
!12170 = !DILocation(line: 3874, column: 4, scope: !12154)
!12171 = !DILocation(line: 3869, column: 32, scope: !12148)
!12172 = !DILocation(line: 3869, column: 40, scope: !12148)
!12173 = !DILocation(line: 3869, column: 4, scope: !12148)
!12174 = distinct !{!12174, !12152, !12175}
!12175 = !DILocation(line: 3874, column: 4, scope: !12145)
!12176 = !DILocation(line: 3875, column: 3, scope: !12140)
!12177 = !DILocalVariable(name: "bp", scope: !12178, file: !1, line: 3877, type: !1805)
!12178 = distinct !DILexicalBlock(scope: !12134, file: !1, line: 3876, column: 8)
!12179 = !DILocation(line: 3877, column: 12, scope: !12178)
!12180 = !DILocation(line: 3877, column: 17, scope: !12178)
!12181 = !DILocation(line: 3877, column: 21, scope: !12178)
!12182 = !DILocation(line: 3879, column: 11, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12178, file: !1, line: 3879, column: 4)
!12184 = !DILocation(line: 3879, column: 9, scope: !12183)
!12185 = !DILocation(line: 3879, column: 16, scope: !12186)
!12186 = distinct !DILexicalBlock(scope: !12183, file: !1, line: 3879, column: 4)
!12187 = !DILocation(line: 3879, column: 20, scope: !12186)
!12188 = !DILocation(line: 3879, column: 24, scope: !12186)
!12189 = !DILocation(line: 3879, column: 32, scope: !12186)
!12190 = !DILocation(line: 3879, column: 36, scope: !12186)
!12191 = !DILocation(line: 3879, column: 30, scope: !12186)
!12192 = !DILocation(line: 3879, column: 18, scope: !12186)
!12193 = !DILocation(line: 3879, column: 4, scope: !12183)
!12194 = !DILocation(line: 3880, column: 16, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12186, file: !1, line: 3879, column: 54)
!12196 = !DILocation(line: 3880, column: 20, scope: !12195)
!12197 = !DILocation(line: 3880, column: 5, scope: !12195)
!12198 = !DILocation(line: 3880, column: 29, scope: !12195)
!12199 = !DILocation(line: 3880, column: 39, scope: !12195)
!12200 = !DILocation(line: 3881, column: 8, scope: !12195)
!12201 = !DILocation(line: 3882, column: 4, scope: !12195)
!12202 = !DILocation(line: 3879, column: 44, scope: !12186)
!12203 = !DILocation(line: 3879, column: 50, scope: !12186)
!12204 = !DILocation(line: 3879, column: 4, scope: !12186)
!12205 = distinct !{!12205, !12193, !12206}
!12206 = !DILocation(line: 3882, column: 4, scope: !12183)
!12207 = !DILocation(line: 3884, column: 2, scope: !12135)
!12208 = !DILocation(line: 3865, column: 32, scope: !12131)
!12209 = !DILocation(line: 3865, column: 36, scope: !12131)
!12210 = !DILocation(line: 3865, column: 30, scope: !12131)
!12211 = !DILocation(line: 3865, column: 2, scope: !12131)
!12212 = distinct !{!12212, !12132, !12213}
!12213 = !DILocation(line: 3884, column: 2, scope: !12126)
!12214 = !DILocation(line: 3886, column: 9, scope: !12101)
!12215 = !DILocation(line: 3886, column: 2, scope: !12101)
!12216 = distinct !DISubprogram(name: "BKE_curve_nurbs_keyVertexTilts_apply", scope: !1, file: !1, line: 3889, type: !12217, scopeLine: 3890, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!12217 = !DISubroutineType(types: !12218)
!12218 = !{null, !1602, !1325}
!12219 = !DILocalVariable(name: "lb", arg: 1, scope: !12216, file: !1, line: 3889, type: !1602)
!12220 = !DILocation(line: 3889, column: 53, scope: !12216)
!12221 = !DILocalVariable(name: "key", arg: 2, scope: !12216, file: !1, line: 3889, type: !1325)
!12222 = !DILocation(line: 3889, column: 64, scope: !12216)
!12223 = !DILocalVariable(name: "nu", scope: !12216, file: !1, line: 3891, type: !1782)
!12224 = !DILocation(line: 3891, column: 8, scope: !12216)
!12225 = !DILocalVariable(name: "i", scope: !12216, file: !1, line: 3892, type: !79)
!12226 = !DILocation(line: 3892, column: 6, scope: !12216)
!12227 = !DILocation(line: 3894, column: 12, scope: !12228)
!12228 = distinct !DILexicalBlock(scope: !12216, file: !1, line: 3894, column: 2)
!12229 = !DILocation(line: 3894, column: 16, scope: !12228)
!12230 = !DILocation(line: 3894, column: 10, scope: !12228)
!12231 = !DILocation(line: 3894, column: 7, scope: !12228)
!12232 = !DILocation(line: 3894, column: 23, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12228, file: !1, line: 3894, column: 2)
!12234 = !DILocation(line: 3894, column: 2, scope: !12228)
!12235 = !DILocation(line: 3895, column: 7, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12237, file: !1, line: 3895, column: 7)
!12237 = distinct !DILexicalBlock(scope: !12233, file: !1, line: 3894, column: 42)
!12238 = !DILocation(line: 3895, column: 11, scope: !12236)
!12239 = !DILocation(line: 3895, column: 16, scope: !12236)
!12240 = !DILocation(line: 3895, column: 7, scope: !12237)
!12241 = !DILocalVariable(name: "bezt", scope: !12242, file: !1, line: 3896, type: !1817)
!12242 = distinct !DILexicalBlock(scope: !12236, file: !1, line: 3895, column: 30)
!12243 = !DILocation(line: 3896, column: 15, scope: !12242)
!12244 = !DILocation(line: 3896, column: 22, scope: !12242)
!12245 = !DILocation(line: 3896, column: 26, scope: !12242)
!12246 = !DILocation(line: 3898, column: 11, scope: !12247)
!12247 = distinct !DILexicalBlock(scope: !12242, file: !1, line: 3898, column: 4)
!12248 = !DILocation(line: 3898, column: 9, scope: !12247)
!12249 = !DILocation(line: 3898, column: 16, scope: !12250)
!12250 = distinct !DILexicalBlock(scope: !12247, file: !1, line: 3898, column: 4)
!12251 = !DILocation(line: 3898, column: 20, scope: !12250)
!12252 = !DILocation(line: 3898, column: 24, scope: !12250)
!12253 = !DILocation(line: 3898, column: 18, scope: !12250)
!12254 = !DILocation(line: 3898, column: 4, scope: !12247)
!12255 = !DILocation(line: 3899, column: 9, scope: !12256)
!12256 = distinct !DILexicalBlock(scope: !12250, file: !1, line: 3898, column: 44)
!12257 = !DILocation(line: 3900, column: 19, scope: !12256)
!12258 = !DILocation(line: 3900, column: 18, scope: !12256)
!12259 = !DILocation(line: 3900, column: 5, scope: !12256)
!12260 = !DILocation(line: 3900, column: 11, scope: !12256)
!12261 = !DILocation(line: 3900, column: 16, scope: !12256)
!12262 = !DILocation(line: 3901, column: 9, scope: !12256)
!12263 = !DILocation(line: 3902, column: 4, scope: !12256)
!12264 = !DILocation(line: 3898, column: 32, scope: !12250)
!12265 = !DILocation(line: 3898, column: 40, scope: !12250)
!12266 = !DILocation(line: 3898, column: 4, scope: !12250)
!12267 = distinct !{!12267, !12254, !12268}
!12268 = !DILocation(line: 3902, column: 4, scope: !12247)
!12269 = !DILocation(line: 3903, column: 3, scope: !12242)
!12270 = !DILocalVariable(name: "bp", scope: !12271, file: !1, line: 3905, type: !1805)
!12271 = distinct !DILexicalBlock(scope: !12236, file: !1, line: 3904, column: 8)
!12272 = !DILocation(line: 3905, column: 12, scope: !12271)
!12273 = !DILocation(line: 3905, column: 17, scope: !12271)
!12274 = !DILocation(line: 3905, column: 21, scope: !12271)
!12275 = !DILocation(line: 3907, column: 11, scope: !12276)
!12276 = distinct !DILexicalBlock(scope: !12271, file: !1, line: 3907, column: 4)
!12277 = !DILocation(line: 3907, column: 9, scope: !12276)
!12278 = !DILocation(line: 3907, column: 16, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12276, file: !1, line: 3907, column: 4)
!12280 = !DILocation(line: 3907, column: 20, scope: !12279)
!12281 = !DILocation(line: 3907, column: 24, scope: !12279)
!12282 = !DILocation(line: 3907, column: 32, scope: !12279)
!12283 = !DILocation(line: 3907, column: 36, scope: !12279)
!12284 = !DILocation(line: 3907, column: 30, scope: !12279)
!12285 = !DILocation(line: 3907, column: 18, scope: !12279)
!12286 = !DILocation(line: 3907, column: 4, scope: !12276)
!12287 = !DILocation(line: 3908, column: 9, scope: !12288)
!12288 = distinct !DILexicalBlock(scope: !12279, file: !1, line: 3907, column: 54)
!12289 = !DILocation(line: 3909, column: 17, scope: !12288)
!12290 = !DILocation(line: 3909, column: 16, scope: !12288)
!12291 = !DILocation(line: 3909, column: 5, scope: !12288)
!12292 = !DILocation(line: 3909, column: 9, scope: !12288)
!12293 = !DILocation(line: 3909, column: 14, scope: !12288)
!12294 = !DILocation(line: 3910, column: 8, scope: !12288)
!12295 = !DILocation(line: 3911, column: 4, scope: !12288)
!12296 = !DILocation(line: 3907, column: 44, scope: !12279)
!12297 = !DILocation(line: 3907, column: 50, scope: !12279)
!12298 = !DILocation(line: 3907, column: 4, scope: !12279)
!12299 = distinct !{!12299, !12286, !12300}
!12300 = !DILocation(line: 3911, column: 4, scope: !12276)
!12301 = !DILocation(line: 3913, column: 2, scope: !12237)
!12302 = !DILocation(line: 3894, column: 32, scope: !12233)
!12303 = !DILocation(line: 3894, column: 36, scope: !12233)
!12304 = !DILocation(line: 3894, column: 30, scope: !12233)
!12305 = !DILocation(line: 3894, column: 2, scope: !12233)
!12306 = distinct !{!12306, !12234, !12307}
!12307 = !DILocation(line: 3913, column: 2, scope: !12228)
!12308 = !DILocation(line: 3914, column: 1, scope: !12216)
!12309 = distinct !DISubprogram(name: "BKE_nurb_check_valid_v", scope: !1, file: !1, line: 3936, type: !8809, scopeLine: 3937, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!12310 = !DILocalVariable(name: "nu", arg: 1, scope: !12309, file: !1, line: 3936, type: !1787)
!12311 = !DILocation(line: 3936, column: 42, scope: !12309)
!12312 = !DILocation(line: 3938, column: 6, scope: !12313)
!12313 = distinct !DILexicalBlock(scope: !12309, file: !1, line: 3938, column: 6)
!12314 = !DILocation(line: 3938, column: 10, scope: !12313)
!12315 = !DILocation(line: 3938, column: 16, scope: !12313)
!12316 = !DILocation(line: 3938, column: 6, scope: !12309)
!12317 = !DILocation(line: 3939, column: 3, scope: !12313)
!12318 = !DILocation(line: 3940, column: 6, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12309, file: !1, line: 3940, column: 6)
!12320 = !DILocation(line: 3940, column: 10, scope: !12319)
!12321 = !DILocation(line: 3940, column: 15, scope: !12319)
!12322 = !DILocation(line: 3940, column: 6, scope: !12309)
!12323 = !DILocation(line: 3941, column: 3, scope: !12319)
!12324 = !DILocation(line: 3943, column: 6, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12309, file: !1, line: 3943, column: 6)
!12326 = !DILocation(line: 3943, column: 10, scope: !12325)
!12327 = !DILocation(line: 3943, column: 18, scope: !12325)
!12328 = !DILocation(line: 3943, column: 22, scope: !12325)
!12329 = !DILocation(line: 3943, column: 16, scope: !12325)
!12330 = !DILocation(line: 3943, column: 6, scope: !12309)
!12331 = !DILocation(line: 3944, column: 3, scope: !12325)
!12332 = !DILocation(line: 3945, column: 8, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12309, file: !1, line: 3945, column: 6)
!12334 = !DILocation(line: 3945, column: 12, scope: !12333)
!12335 = !DILocation(line: 3945, column: 17, scope: !12333)
!12336 = !DILocation(line: 3945, column: 35, scope: !12333)
!12337 = !DILocation(line: 3945, column: 41, scope: !12333)
!12338 = !DILocation(line: 3945, column: 45, scope: !12333)
!12339 = !DILocation(line: 3945, column: 49, scope: !12333)
!12340 = !DILocation(line: 3945, column: 55, scope: !12333)
!12341 = !DILocation(line: 3945, column: 6, scope: !12309)
!12342 = !DILocation(line: 3946, column: 7, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12344, file: !1, line: 3946, column: 7)
!12344 = distinct !DILexicalBlock(scope: !12333, file: !1, line: 3945, column: 74)
!12345 = !DILocation(line: 3946, column: 11, scope: !12343)
!12346 = !DILocation(line: 3946, column: 18, scope: !12343)
!12347 = !DILocation(line: 3946, column: 7, scope: !12344)
!12348 = !DILocation(line: 3947, column: 8, scope: !12349)
!12349 = distinct !DILexicalBlock(scope: !12350, file: !1, line: 3947, column: 8)
!12350 = distinct !DILexicalBlock(scope: !12343, file: !1, line: 3946, column: 24)
!12351 = !DILocation(line: 3947, column: 12, scope: !12349)
!12352 = !DILocation(line: 3947, column: 18, scope: !12349)
!12353 = !DILocation(line: 3947, column: 8, scope: !12350)
!12354 = !DILocation(line: 3948, column: 5, scope: !12349)
!12355 = !DILocation(line: 3949, column: 3, scope: !12350)
!12356 = !DILocation(line: 3951, column: 8, scope: !12357)
!12357 = distinct !DILexicalBlock(scope: !12358, file: !1, line: 3951, column: 8)
!12358 = distinct !DILexicalBlock(scope: !12343, file: !1, line: 3950, column: 8)
!12359 = !DILocation(line: 3951, column: 12, scope: !12357)
!12360 = !DILocation(line: 3951, column: 19, scope: !12357)
!12361 = !DILocation(line: 3951, column: 8, scope: !12358)
!12362 = !DILocation(line: 3952, column: 5, scope: !12357)
!12363 = !DILocation(line: 3954, column: 2, scope: !12344)
!12364 = !DILocation(line: 3955, column: 2, scope: !12309)
!12365 = !DILocation(line: 3956, column: 1, scope: !12309)
!12366 = distinct !DISubprogram(name: "BKE_nurb_check_valid_uv", scope: !1, file: !1, line: 3958, type: !8809, scopeLine: 3959, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!12367 = !DILocalVariable(name: "nu", arg: 1, scope: !12366, file: !1, line: 3958, type: !1787)
!12368 = !DILocation(line: 3958, column: 43, scope: !12366)
!12369 = !DILocation(line: 3960, column: 30, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12366, file: !1, line: 3960, column: 6)
!12371 = !DILocation(line: 3960, column: 7, scope: !12370)
!12372 = !DILocation(line: 3960, column: 6, scope: !12366)
!12373 = !DILocation(line: 3961, column: 3, scope: !12370)
!12374 = !DILocation(line: 3962, column: 7, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !12366, file: !1, line: 3962, column: 6)
!12376 = !DILocation(line: 3962, column: 11, scope: !12375)
!12377 = !DILocation(line: 3962, column: 17, scope: !12375)
!12378 = !DILocation(line: 3962, column: 22, scope: !12375)
!12379 = !DILocation(line: 3962, column: 49, scope: !12375)
!12380 = !DILocation(line: 3962, column: 26, scope: !12375)
!12381 = !DILocation(line: 3962, column: 6, scope: !12366)
!12382 = !DILocation(line: 3963, column: 3, scope: !12375)
!12383 = !DILocation(line: 3965, column: 2, scope: !12366)
!12384 = !DILocation(line: 3966, column: 1, scope: !12366)
!12385 = distinct !DISubprogram(name: "BKE_nurb_order_clamp_u", scope: !1, file: !1, line: 3968, type: !8809, scopeLine: 3969, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!12386 = !DILocalVariable(name: "nu", arg: 1, scope: !12385, file: !1, line: 3968, type: !1787)
!12387 = !DILocation(line: 3968, column: 42, scope: !12385)
!12388 = !DILocalVariable(name: "changed", scope: !12385, file: !1, line: 3970, type: !551)
!12389 = !DILocation(line: 3970, column: 7, scope: !12385)
!12390 = !DILocation(line: 3971, column: 6, scope: !12391)
!12391 = distinct !DILexicalBlock(scope: !12385, file: !1, line: 3971, column: 6)
!12392 = !DILocation(line: 3971, column: 10, scope: !12391)
!12393 = !DILocation(line: 3971, column: 18, scope: !12391)
!12394 = !DILocation(line: 3971, column: 22, scope: !12391)
!12395 = !DILocation(line: 3971, column: 16, scope: !12391)
!12396 = !DILocation(line: 3971, column: 6, scope: !12385)
!12397 = !DILocation(line: 3972, column: 26, scope: !12398)
!12398 = distinct !DILexicalBlock(scope: !12391, file: !1, line: 3971, column: 30)
!12399 = !DILocation(line: 3972, column: 30, scope: !12398)
!12400 = !DILocation(line: 3972, column: 16, scope: !12398)
!12401 = !DILocation(line: 3972, column: 3, scope: !12398)
!12402 = !DILocation(line: 3972, column: 7, scope: !12398)
!12403 = !DILocation(line: 3972, column: 14, scope: !12398)
!12404 = !DILocation(line: 3973, column: 11, scope: !12398)
!12405 = !DILocation(line: 3974, column: 2, scope: !12398)
!12406 = !DILocation(line: 3975, column: 8, scope: !12407)
!12407 = distinct !DILexicalBlock(scope: !12385, file: !1, line: 3975, column: 6)
!12408 = !DILocation(line: 3975, column: 12, scope: !12407)
!12409 = !DILocation(line: 3975, column: 18, scope: !12407)
!12410 = !DILocation(line: 3975, column: 36, scope: !12407)
!12411 = !DILocation(line: 3975, column: 42, scope: !12407)
!12412 = !DILocation(line: 3975, column: 46, scope: !12407)
!12413 = !DILocation(line: 3975, column: 50, scope: !12407)
!12414 = !DILocation(line: 3975, column: 56, scope: !12407)
!12415 = !DILocation(line: 3975, column: 6, scope: !12385)
!12416 = !DILocation(line: 3976, column: 3, scope: !12417)
!12417 = distinct !DILexicalBlock(scope: !12418, file: !1, line: 3976, column: 3)
!12418 = distinct !DILexicalBlock(scope: !12419, file: !1, line: 3976, column: 3)
!12419 = distinct !DILexicalBlock(scope: !12407, file: !1, line: 3975, column: 75)
!12420 = !DILocation(line: 3976, column: 3, scope: !12418)
!12421 = !DILocation(line: 3976, column: 3, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12417, file: !1, line: 3976, column: 3)
!12423 = !DILocation(line: 3977, column: 11, scope: !12419)
!12424 = !DILocation(line: 3978, column: 2, scope: !12419)
!12425 = !DILocation(line: 3979, column: 9, scope: !12385)
!12426 = !DILocation(line: 3979, column: 2, scope: !12385)
!12427 = distinct !DISubprogram(name: "max_ii", scope: !12428, file: !12428, line: 215, type: !12429, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!12428 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!12429 = !DISubroutineType(types: !12430)
!12430 = !{!79, !79, !79}
!12431 = !DILocalVariable(name: "a", arg: 1, scope: !12427, file: !12428, line: 215, type: !79)
!12432 = !DILocation(line: 215, column: 24, scope: !12427)
!12433 = !DILocalVariable(name: "b", arg: 2, scope: !12427, file: !12428, line: 215, type: !79)
!12434 = !DILocation(line: 215, column: 31, scope: !12427)
!12435 = !DILocation(line: 217, column: 10, scope: !12427)
!12436 = !DILocation(line: 217, column: 14, scope: !12427)
!12437 = !DILocation(line: 217, column: 12, scope: !12427)
!12438 = !DILocation(line: 217, column: 9, scope: !12427)
!12439 = !DILocation(line: 217, column: 19, scope: !12427)
!12440 = !DILocation(line: 217, column: 23, scope: !12427)
!12441 = !DILocation(line: 217, column: 2, scope: !12427)
!12442 = distinct !DISubprogram(name: "BKE_nurb_order_clamp_v", scope: !1, file: !1, line: 3982, type: !8809, scopeLine: 3983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!12443 = !DILocalVariable(name: "nu", arg: 1, scope: !12442, file: !1, line: 3982, type: !1787)
!12444 = !DILocation(line: 3982, column: 42, scope: !12442)
!12445 = !DILocalVariable(name: "changed", scope: !12442, file: !1, line: 3984, type: !551)
!12446 = !DILocation(line: 3984, column: 7, scope: !12442)
!12447 = !DILocation(line: 3985, column: 6, scope: !12448)
!12448 = distinct !DILexicalBlock(scope: !12442, file: !1, line: 3985, column: 6)
!12449 = !DILocation(line: 3985, column: 10, scope: !12448)
!12450 = !DILocation(line: 3985, column: 18, scope: !12448)
!12451 = !DILocation(line: 3985, column: 22, scope: !12448)
!12452 = !DILocation(line: 3985, column: 16, scope: !12448)
!12453 = !DILocation(line: 3985, column: 6, scope: !12442)
!12454 = !DILocation(line: 3986, column: 26, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12448, file: !1, line: 3985, column: 30)
!12456 = !DILocation(line: 3986, column: 30, scope: !12455)
!12457 = !DILocation(line: 3986, column: 16, scope: !12455)
!12458 = !DILocation(line: 3986, column: 3, scope: !12455)
!12459 = !DILocation(line: 3986, column: 7, scope: !12455)
!12460 = !DILocation(line: 3986, column: 14, scope: !12455)
!12461 = !DILocation(line: 3987, column: 11, scope: !12455)
!12462 = !DILocation(line: 3988, column: 2, scope: !12455)
!12463 = !DILocation(line: 3989, column: 8, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12442, file: !1, line: 3989, column: 6)
!12465 = !DILocation(line: 3989, column: 12, scope: !12464)
!12466 = !DILocation(line: 3989, column: 18, scope: !12464)
!12467 = !DILocation(line: 3989, column: 36, scope: !12464)
!12468 = !DILocation(line: 3989, column: 42, scope: !12464)
!12469 = !DILocation(line: 3989, column: 46, scope: !12464)
!12470 = !DILocation(line: 3989, column: 50, scope: !12464)
!12471 = !DILocation(line: 3989, column: 56, scope: !12464)
!12472 = !DILocation(line: 3989, column: 6, scope: !12442)
!12473 = !DILocation(line: 3990, column: 3, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12475, file: !1, line: 3990, column: 3)
!12475 = distinct !DILexicalBlock(scope: !12476, file: !1, line: 3990, column: 3)
!12476 = distinct !DILexicalBlock(scope: !12464, file: !1, line: 3989, column: 75)
!12477 = !DILocation(line: 3990, column: 3, scope: !12475)
!12478 = !DILocation(line: 3990, column: 3, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12474, file: !1, line: 3990, column: 3)
!12480 = !DILocation(line: 3991, column: 11, scope: !12476)
!12481 = !DILocation(line: 3992, column: 2, scope: !12476)
!12482 = !DILocation(line: 3993, column: 9, scope: !12442)
!12483 = !DILocation(line: 3993, column: 2, scope: !12442)
!12484 = distinct !DISubprogram(name: "BKE_nurb_type_convert", scope: !1, file: !1, line: 3999, type: !12485, scopeLine: 4000, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!12485 = !DISubroutineType(types: !12486)
!12486 = !{!551, !1782, !12487, !6595}
!12487 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !77)
!12488 = !DILocalVariable(name: "nu", arg: 1, scope: !12484, file: !1, line: 3999, type: !1782)
!12489 = !DILocation(line: 3999, column: 34, scope: !12484)
!12490 = !DILocalVariable(name: "type", arg: 2, scope: !12484, file: !1, line: 3999, type: !12487)
!12491 = !DILocation(line: 3999, column: 50, scope: !12484)
!12492 = !DILocalVariable(name: "use_handles", arg: 3, scope: !12484, file: !1, line: 3999, type: !6595)
!12493 = !DILocation(line: 3999, column: 67, scope: !12484)
!12494 = !DILocalVariable(name: "bezt", scope: !12484, file: !1, line: 4001, type: !1817)
!12495 = !DILocation(line: 4001, column: 13, scope: !12484)
!12496 = !DILocalVariable(name: "bp", scope: !12484, file: !1, line: 4002, type: !1805)
!12497 = !DILocation(line: 4002, column: 10, scope: !12484)
!12498 = !DILocalVariable(name: "a", scope: !12484, file: !1, line: 4003, type: !79)
!12499 = !DILocation(line: 4003, column: 6, scope: !12484)
!12500 = !DILocalVariable(name: "c", scope: !12484, file: !1, line: 4003, type: !79)
!12501 = !DILocation(line: 4003, column: 9, scope: !12484)
!12502 = !DILocalVariable(name: "nr", scope: !12484, file: !1, line: 4003, type: !79)
!12503 = !DILocation(line: 4003, column: 12, scope: !12484)
!12504 = !DILocation(line: 4005, column: 6, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !12484, file: !1, line: 4005, column: 6)
!12506 = !DILocation(line: 4005, column: 10, scope: !12505)
!12507 = !DILocation(line: 4005, column: 15, scope: !12505)
!12508 = !DILocation(line: 4005, column: 6, scope: !12484)
!12509 = !DILocation(line: 4006, column: 7, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12511, file: !1, line: 4006, column: 7)
!12511 = distinct !DILexicalBlock(scope: !12505, file: !1, line: 4005, column: 27)
!12512 = !DILocation(line: 4006, column: 12, scope: !12510)
!12513 = !DILocation(line: 4006, column: 7, scope: !12511)
!12514 = !DILocation(line: 4007, column: 9, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12510, file: !1, line: 4006, column: 26)
!12516 = !DILocation(line: 4007, column: 13, scope: !12515)
!12517 = !DILocation(line: 4007, column: 7, scope: !12515)
!12518 = !DILocation(line: 4008, column: 24, scope: !12515)
!12519 = !DILocation(line: 4008, column: 36, scope: !12515)
!12520 = !DILocation(line: 4008, column: 39, scope: !12515)
!12521 = !DILocation(line: 4008, column: 11, scope: !12515)
!12522 = !DILocation(line: 4008, column: 9, scope: !12515)
!12523 = !DILocation(line: 4009, column: 15, scope: !12515)
!12524 = !DILocation(line: 4009, column: 4, scope: !12515)
!12525 = !DILocation(line: 4009, column: 8, scope: !12515)
!12526 = !DILocation(line: 4009, column: 13, scope: !12515)
!12527 = !DILocation(line: 4010, column: 8, scope: !12515)
!12528 = !DILocation(line: 4010, column: 6, scope: !12515)
!12529 = !DILocation(line: 4011, column: 9, scope: !12515)
!12530 = !DILocation(line: 4011, column: 13, scope: !12515)
!12531 = !DILocation(line: 4011, column: 7, scope: !12515)
!12532 = !DILocation(line: 4012, column: 4, scope: !12515)
!12533 = !DILocation(line: 4012, column: 12, scope: !12515)
!12534 = !DILocation(line: 4013, column: 16, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12515, file: !1, line: 4012, column: 16)
!12536 = !DILocation(line: 4013, column: 22, scope: !12535)
!12537 = !DILocation(line: 4013, column: 30, scope: !12535)
!12538 = !DILocation(line: 4013, column: 34, scope: !12535)
!12539 = !DILocation(line: 4013, column: 5, scope: !12535)
!12540 = !DILocation(line: 4014, column: 38, scope: !12535)
!12541 = !DILocation(line: 4014, column: 42, scope: !12535)
!12542 = !DILocation(line: 4014, column: 27, scope: !12535)
!12543 = !DILocation(line: 4014, column: 33, scope: !12535)
!12544 = !DILocation(line: 4014, column: 36, scope: !12535)
!12545 = !DILocation(line: 4014, column: 16, scope: !12535)
!12546 = !DILocation(line: 4014, column: 22, scope: !12535)
!12547 = !DILocation(line: 4014, column: 25, scope: !12535)
!12548 = !DILocation(line: 4014, column: 5, scope: !12535)
!12549 = !DILocation(line: 4014, column: 11, scope: !12535)
!12550 = !DILocation(line: 4014, column: 14, scope: !12535)
!12551 = !DILocation(line: 4015, column: 16, scope: !12535)
!12552 = !DILocation(line: 4015, column: 22, scope: !12535)
!12553 = !DILocation(line: 4015, column: 25, scope: !12535)
!12554 = !DILocation(line: 4015, column: 5, scope: !12535)
!12555 = !DILocation(line: 4015, column: 11, scope: !12535)
!12556 = !DILocation(line: 4015, column: 14, scope: !12535)
!12557 = !DILocation(line: 4016, column: 20, scope: !12535)
!12558 = !DILocation(line: 4016, column: 24, scope: !12535)
!12559 = !DILocation(line: 4016, column: 5, scope: !12535)
!12560 = !DILocation(line: 4016, column: 11, scope: !12535)
!12561 = !DILocation(line: 4016, column: 18, scope: !12535)
!12562 = !DILocation(line: 4017, column: 20, scope: !12535)
!12563 = !DILocation(line: 4017, column: 24, scope: !12535)
!12564 = !DILocation(line: 4017, column: 5, scope: !12535)
!12565 = !DILocation(line: 4017, column: 11, scope: !12535)
!12566 = !DILocation(line: 4017, column: 18, scope: !12535)
!12567 = !DILocation(line: 4018, column: 7, scope: !12535)
!12568 = !DILocation(line: 4019, column: 9, scope: !12535)
!12569 = distinct !{!12569, !12532, !12570}
!12570 = !DILocation(line: 4020, column: 4, scope: !12515)
!12571 = !DILocation(line: 4021, column: 4, scope: !12515)
!12572 = !DILocation(line: 4021, column: 14, scope: !12515)
!12573 = !DILocation(line: 4021, column: 18, scope: !12515)
!12574 = !DILocation(line: 4022, column: 4, scope: !12515)
!12575 = !DILocation(line: 4022, column: 8, scope: !12515)
!12576 = !DILocation(line: 4022, column: 11, scope: !12515)
!12577 = !DILocation(line: 4023, column: 16, scope: !12515)
!12578 = !DILocation(line: 4023, column: 4, scope: !12515)
!12579 = !DILocation(line: 4023, column: 8, scope: !12515)
!12580 = !DILocation(line: 4023, column: 14, scope: !12515)
!12581 = !DILocation(line: 4024, column: 4, scope: !12515)
!12582 = !DILocation(line: 4024, column: 8, scope: !12515)
!12583 = !DILocation(line: 4024, column: 13, scope: !12515)
!12584 = !DILocation(line: 4025, column: 26, scope: !12515)
!12585 = !DILocation(line: 4025, column: 4, scope: !12515)
!12586 = !DILocation(line: 4026, column: 3, scope: !12515)
!12587 = !DILocation(line: 4027, column: 12, scope: !12588)
!12588 = distinct !DILexicalBlock(scope: !12510, file: !1, line: 4027, column: 12)
!12589 = !DILocation(line: 4027, column: 17, scope: !12588)
!12590 = !DILocation(line: 4027, column: 12, scope: !12510)
!12591 = !DILocation(line: 4028, column: 4, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !12588, file: !1, line: 4027, column: 30)
!12593 = !DILocation(line: 4028, column: 8, scope: !12592)
!12594 = !DILocation(line: 4028, column: 13, scope: !12592)
!12595 = !DILocation(line: 4029, column: 4, scope: !12592)
!12596 = !DILocation(line: 4029, column: 8, scope: !12592)
!12597 = !DILocation(line: 4029, column: 15, scope: !12592)
!12598 = !DILocation(line: 4030, column: 4, scope: !12592)
!12599 = !DILocation(line: 4030, column: 8, scope: !12592)
!12600 = !DILocation(line: 4030, column: 14, scope: !12592)
!12601 = !DILocation(line: 4031, column: 25, scope: !12592)
!12602 = !DILocation(line: 4031, column: 4, scope: !12592)
!12603 = !DILocation(line: 4032, column: 8, scope: !12592)
!12604 = !DILocation(line: 4032, column: 12, scope: !12592)
!12605 = !DILocation(line: 4032, column: 20, scope: !12592)
!12606 = !DILocation(line: 4032, column: 24, scope: !12592)
!12607 = !DILocation(line: 4032, column: 18, scope: !12592)
!12608 = !DILocation(line: 4032, column: 6, scope: !12592)
!12609 = !DILocation(line: 4033, column: 9, scope: !12592)
!12610 = !DILocation(line: 4033, column: 13, scope: !12592)
!12611 = !DILocation(line: 4033, column: 7, scope: !12592)
!12612 = !DILocation(line: 4034, column: 4, scope: !12592)
!12613 = !DILocation(line: 4034, column: 12, scope: !12592)
!12614 = !DILocation(line: 4035, column: 5, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12592, file: !1, line: 4034, column: 16)
!12616 = !DILocation(line: 4035, column: 9, scope: !12615)
!12617 = !DILocation(line: 4035, column: 16, scope: !12615)
!12618 = !DILocation(line: 4036, column: 7, scope: !12615)
!12619 = distinct !{!12619, !12612, !12620}
!12620 = !DILocation(line: 4037, column: 4, scope: !12592)
!12621 = !DILocation(line: 4038, column: 3, scope: !12592)
!12622 = !DILocation(line: 4039, column: 2, scope: !12511)
!12623 = !DILocation(line: 4040, column: 11, scope: !12624)
!12624 = distinct !DILexicalBlock(scope: !12505, file: !1, line: 4040, column: 11)
!12625 = !DILocation(line: 4040, column: 15, scope: !12624)
!12626 = !DILocation(line: 4040, column: 20, scope: !12624)
!12627 = !DILocation(line: 4040, column: 11, scope: !12505)
!12628 = !DILocation(line: 4041, column: 7, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12630, file: !1, line: 4041, column: 7)
!12630 = distinct !DILexicalBlock(scope: !12624, file: !1, line: 4040, column: 34)
!12631 = !DILocation(line: 4041, column: 12, scope: !12629)
!12632 = !DILocation(line: 4041, column: 23, scope: !12629)
!12633 = !DILocation(line: 4041, column: 26, scope: !12629)
!12634 = !DILocation(line: 4041, column: 31, scope: !12629)
!12635 = !DILocation(line: 4041, column: 7, scope: !12630)
!12636 = !DILocation(line: 4042, column: 9, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !12629, file: !1, line: 4041, column: 44)
!12638 = !DILocation(line: 4042, column: 28, scope: !12637)
!12639 = !DILocation(line: 4042, column: 32, scope: !12637)
!12640 = !DILocation(line: 4042, column: 26, scope: !12637)
!12641 = !DILocation(line: 4042, column: 41, scope: !12637)
!12642 = !DILocation(line: 4042, column: 45, scope: !12637)
!12643 = !DILocation(line: 4042, column: 7, scope: !12637)
!12644 = !DILocation(line: 4043, column: 13, scope: !12637)
!12645 = !DILocation(line: 4043, column: 25, scope: !12637)
!12646 = !DILocation(line: 4043, column: 28, scope: !12637)
!12647 = !DILocation(line: 4043, column: 4, scope: !12637)
!12648 = !DILocation(line: 4043, column: 8, scope: !12637)
!12649 = !DILocation(line: 4043, column: 11, scope: !12637)
!12650 = !DILocation(line: 4044, column: 8, scope: !12637)
!12651 = !DILocation(line: 4044, column: 12, scope: !12637)
!12652 = !DILocation(line: 4044, column: 6, scope: !12637)
!12653 = !DILocation(line: 4045, column: 11, scope: !12637)
!12654 = !DILocation(line: 4045, column: 15, scope: !12637)
!12655 = !DILocation(line: 4045, column: 9, scope: !12637)
!12656 = !DILocation(line: 4046, column: 9, scope: !12637)
!12657 = !DILocation(line: 4046, column: 13, scope: !12637)
!12658 = !DILocation(line: 4046, column: 7, scope: !12637)
!12659 = !DILocation(line: 4047, column: 4, scope: !12637)
!12660 = !DILocation(line: 4047, column: 12, scope: !12637)
!12661 = !DILocation(line: 4048, column: 10, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12663, file: !1, line: 4048, column: 9)
!12663 = distinct !DILexicalBlock(scope: !12637, file: !1, line: 4047, column: 16)
!12664 = !DILocation(line: 4048, column: 15, scope: !12662)
!12665 = !DILocation(line: 4048, column: 26, scope: !12662)
!12666 = !DILocation(line: 4048, column: 29, scope: !12662)
!12667 = !DILocation(line: 4048, column: 35, scope: !12662)
!12668 = !DILocation(line: 4048, column: 38, scope: !12662)
!12669 = !DILocation(line: 4048, column: 49, scope: !12662)
!12670 = !DILocation(line: 4048, column: 52, scope: !12662)
!12671 = !DILocation(line: 4048, column: 58, scope: !12662)
!12672 = !DILocation(line: 4048, column: 61, scope: !12662)
!12673 = !DILocation(line: 4048, column: 73, scope: !12662)
!12674 = !DILocation(line: 4048, column: 77, scope: !12662)
!12675 = !DILocation(line: 4048, column: 89, scope: !12662)
!12676 = !DILocation(line: 4048, column: 9, scope: !12663)
!12677 = !DILocation(line: 4050, column: 17, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12662, file: !1, line: 4048, column: 100)
!12679 = !DILocation(line: 4050, column: 21, scope: !12678)
!12680 = !DILocation(line: 4050, column: 26, scope: !12678)
!12681 = !DILocation(line: 4050, column: 32, scope: !12678)
!12682 = !DILocation(line: 4050, column: 6, scope: !12678)
!12683 = !DILocation(line: 4051, column: 6, scope: !12678)
!12684 = !DILocation(line: 4051, column: 10, scope: !12678)
!12685 = !DILocation(line: 4051, column: 17, scope: !12678)
!12686 = !DILocation(line: 4052, column: 15, scope: !12678)
!12687 = !DILocation(line: 4052, column: 21, scope: !12678)
!12688 = !DILocation(line: 4052, column: 6, scope: !12678)
!12689 = !DILocation(line: 4052, column: 10, scope: !12678)
!12690 = !DILocation(line: 4052, column: 13, scope: !12678)
!12691 = !DILocation(line: 4053, column: 10, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12678, file: !1, line: 4053, column: 10)
!12693 = !DILocation(line: 4053, column: 10, scope: !12678)
!12694 = !DILocation(line: 4053, column: 26, scope: !12692)
!12695 = !DILocation(line: 4053, column: 23, scope: !12692)
!12696 = !DILocation(line: 4054, column: 19, scope: !12678)
!12697 = !DILocation(line: 4054, column: 25, scope: !12678)
!12698 = !DILocation(line: 4054, column: 6, scope: !12678)
!12699 = !DILocation(line: 4054, column: 10, scope: !12678)
!12700 = !DILocation(line: 4054, column: 17, scope: !12678)
!12701 = !DILocation(line: 4055, column: 19, scope: !12678)
!12702 = !DILocation(line: 4055, column: 25, scope: !12678)
!12703 = !DILocation(line: 4055, column: 6, scope: !12678)
!12704 = !DILocation(line: 4055, column: 10, scope: !12678)
!12705 = !DILocation(line: 4055, column: 17, scope: !12678)
!12706 = !DILocation(line: 4056, column: 8, scope: !12678)
!12707 = !DILocation(line: 4057, column: 5, scope: !12678)
!12708 = !DILocalVariable(name: "f", scope: !12709, file: !1, line: 4059, type: !2197)
!12709 = distinct !DILexicalBlock(scope: !12662, file: !1, line: 4058, column: 10)
!12710 = !DILocation(line: 4059, column: 18, scope: !12709)
!12711 = !DILocation(line: 4059, column: 23, scope: !12709)
!12712 = !DILocation(line: 4059, column: 29, scope: !12709)
!12713 = !DILocation(line: 4060, column: 13, scope: !12714)
!12714 = distinct !DILexicalBlock(scope: !12709, file: !1, line: 4060, column: 6)
!12715 = !DILocation(line: 4060, column: 11, scope: !12714)
!12716 = !DILocation(line: 4060, column: 18, scope: !12717)
!12717 = distinct !DILexicalBlock(scope: !12714, file: !1, line: 4060, column: 6)
!12718 = !DILocation(line: 4060, column: 20, scope: !12717)
!12719 = !DILocation(line: 4060, column: 6, scope: !12714)
!12720 = !DILocation(line: 4061, column: 18, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12717, file: !1, line: 4060, column: 35)
!12722 = !DILocation(line: 4061, column: 22, scope: !12721)
!12723 = !DILocation(line: 4061, column: 27, scope: !12721)
!12724 = !DILocation(line: 4061, column: 33, scope: !12721)
!12725 = !DILocation(line: 4061, column: 37, scope: !12721)
!12726 = !DILocation(line: 4061, column: 7, scope: !12721)
!12727 = !DILocation(line: 4062, column: 7, scope: !12721)
!12728 = !DILocation(line: 4062, column: 11, scope: !12721)
!12729 = !DILocation(line: 4062, column: 18, scope: !12721)
!12730 = !DILocation(line: 4063, column: 17, scope: !12721)
!12731 = !DILocation(line: 4063, column: 16, scope: !12721)
!12732 = !DILocation(line: 4063, column: 7, scope: !12721)
!12733 = !DILocation(line: 4063, column: 11, scope: !12721)
!12734 = !DILocation(line: 4063, column: 14, scope: !12721)
!12735 = !DILocation(line: 4064, column: 20, scope: !12721)
!12736 = !DILocation(line: 4064, column: 26, scope: !12721)
!12737 = !DILocation(line: 4064, column: 7, scope: !12721)
!12738 = !DILocation(line: 4064, column: 11, scope: !12721)
!12739 = !DILocation(line: 4064, column: 18, scope: !12721)
!12740 = !DILocation(line: 4065, column: 20, scope: !12721)
!12741 = !DILocation(line: 4065, column: 26, scope: !12721)
!12742 = !DILocation(line: 4065, column: 7, scope: !12721)
!12743 = !DILocation(line: 4065, column: 11, scope: !12721)
!12744 = !DILocation(line: 4065, column: 18, scope: !12721)
!12745 = !DILocation(line: 4066, column: 9, scope: !12721)
!12746 = !DILocation(line: 4067, column: 6, scope: !12721)
!12747 = !DILocation(line: 4060, column: 26, scope: !12717)
!12748 = !DILocation(line: 4060, column: 31, scope: !12717)
!12749 = !DILocation(line: 4060, column: 6, scope: !12717)
!12750 = distinct !{!12750, !12719, !12751}
!12751 = !DILocation(line: 4067, column: 6, scope: !12714)
!12752 = !DILocation(line: 4069, column: 9, scope: !12663)
!12753 = distinct !{!12753, !12659, !12754}
!12754 = !DILocation(line: 4070, column: 4, scope: !12637)
!12755 = !DILocation(line: 4071, column: 4, scope: !12637)
!12756 = !DILocation(line: 4071, column: 14, scope: !12637)
!12757 = !DILocation(line: 4071, column: 18, scope: !12637)
!12758 = !DILocation(line: 4072, column: 4, scope: !12637)
!12759 = !DILocation(line: 4072, column: 8, scope: !12637)
!12760 = !DILocation(line: 4072, column: 13, scope: !12637)
!12761 = !DILocation(line: 4073, column: 16, scope: !12637)
!12762 = !DILocation(line: 4073, column: 4, scope: !12637)
!12763 = !DILocation(line: 4073, column: 8, scope: !12637)
!12764 = !DILocation(line: 4073, column: 14, scope: !12637)
!12765 = !DILocation(line: 4074, column: 4, scope: !12637)
!12766 = !DILocation(line: 4074, column: 8, scope: !12637)
!12767 = !DILocation(line: 4074, column: 14, scope: !12637)
!12768 = !DILocation(line: 4075, column: 4, scope: !12637)
!12769 = !DILocation(line: 4075, column: 8, scope: !12637)
!12770 = !DILocation(line: 4075, column: 15, scope: !12637)
!12771 = !DILocation(line: 4076, column: 4, scope: !12637)
!12772 = !DILocation(line: 4076, column: 8, scope: !12637)
!12773 = !DILocation(line: 4076, column: 15, scope: !12637)
!12774 = !DILocation(line: 4077, column: 15, scope: !12637)
!12775 = !DILocation(line: 4077, column: 4, scope: !12637)
!12776 = !DILocation(line: 4077, column: 8, scope: !12637)
!12777 = !DILocation(line: 4077, column: 13, scope: !12637)
!12778 = !DILocation(line: 4084, column: 8, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !12637, file: !1, line: 4084, column: 8)
!12780 = !DILocation(line: 4084, column: 13, scope: !12779)
!12781 = !DILocation(line: 4084, column: 8, scope: !12637)
!12782 = !DILocation(line: 4085, column: 5, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !12779, file: !1, line: 4084, column: 26)
!12784 = !DILocation(line: 4085, column: 9, scope: !12783)
!12785 = !DILocation(line: 4085, column: 15, scope: !12783)
!12786 = !DILocation(line: 4086, column: 5, scope: !12783)
!12787 = !DILocation(line: 4086, column: 9, scope: !12783)
!12788 = !DILocation(line: 4086, column: 15, scope: !12783)
!12789 = !DILocation(line: 4087, column: 26, scope: !12783)
!12790 = !DILocation(line: 4087, column: 5, scope: !12783)
!12791 = !DILocation(line: 4088, column: 4, scope: !12783)
!12792 = !DILocation(line: 4089, column: 3, scope: !12637)
!12793 = !DILocation(line: 4090, column: 2, scope: !12630)
!12794 = !DILocation(line: 4091, column: 11, scope: !12795)
!12795 = distinct !DILexicalBlock(scope: !12624, file: !1, line: 4091, column: 11)
!12796 = !DILocation(line: 4091, column: 15, scope: !12795)
!12797 = !DILocation(line: 4091, column: 20, scope: !12795)
!12798 = !DILocation(line: 4091, column: 11, scope: !12624)
!12799 = !DILocation(line: 4092, column: 7, scope: !12800)
!12800 = distinct !DILexicalBlock(scope: !12801, file: !1, line: 4092, column: 7)
!12801 = distinct !DILexicalBlock(scope: !12795, file: !1, line: 4091, column: 33)
!12802 = !DILocation(line: 4092, column: 12, scope: !12800)
!12803 = !DILocation(line: 4092, column: 7, scope: !12801)
!12804 = !DILocation(line: 4093, column: 4, scope: !12805)
!12805 = distinct !DILexicalBlock(scope: !12800, file: !1, line: 4092, column: 24)
!12806 = !DILocation(line: 4093, column: 8, scope: !12805)
!12807 = !DILocation(line: 4093, column: 13, scope: !12805)
!12808 = !DILocation(line: 4094, column: 8, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12805, file: !1, line: 4094, column: 8)
!12810 = !DILocation(line: 4094, column: 12, scope: !12809)
!12811 = !DILocation(line: 4094, column: 8, scope: !12805)
!12812 = !DILocation(line: 4094, column: 20, scope: !12809)
!12813 = !DILocation(line: 4094, column: 30, scope: !12809)
!12814 = !DILocation(line: 4094, column: 34, scope: !12809)
!12815 = !DILocation(line: 4095, column: 4, scope: !12805)
!12816 = !DILocation(line: 4095, column: 8, scope: !12805)
!12817 = !DILocation(line: 4095, column: 15, scope: !12805)
!12818 = !DILocation(line: 4096, column: 8, scope: !12819)
!12819 = distinct !DILexicalBlock(scope: !12805, file: !1, line: 4096, column: 8)
!12820 = !DILocation(line: 4096, column: 12, scope: !12819)
!12821 = !DILocation(line: 4096, column: 8, scope: !12805)
!12822 = !DILocation(line: 4096, column: 20, scope: !12819)
!12823 = !DILocation(line: 4096, column: 30, scope: !12819)
!12824 = !DILocation(line: 4096, column: 34, scope: !12819)
!12825 = !DILocation(line: 4097, column: 4, scope: !12805)
!12826 = !DILocation(line: 4097, column: 8, scope: !12805)
!12827 = !DILocation(line: 4097, column: 15, scope: !12805)
!12828 = !DILocation(line: 4098, column: 3, scope: !12805)
!12829 = !DILocation(line: 4099, column: 12, scope: !12830)
!12830 = distinct !DILexicalBlock(scope: !12800, file: !1, line: 4099, column: 12)
!12831 = !DILocation(line: 4099, column: 17, scope: !12830)
!12832 = !DILocation(line: 4099, column: 12, scope: !12800)
!12833 = !DILocation(line: 4100, column: 9, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12830, file: !1, line: 4099, column: 31)
!12835 = !DILocation(line: 4100, column: 13, scope: !12834)
!12836 = !DILocation(line: 4100, column: 19, scope: !12834)
!12837 = !DILocation(line: 4100, column: 7, scope: !12834)
!12838 = !DILocation(line: 4102, column: 8, scope: !12839)
!12839 = distinct !DILexicalBlock(scope: !12834, file: !1, line: 4102, column: 8)
!12840 = !DILocation(line: 4102, column: 11, scope: !12839)
!12841 = !DILocation(line: 4102, column: 8, scope: !12834)
!12842 = !DILocation(line: 4103, column: 5, scope: !12843)
!12843 = distinct !DILexicalBlock(scope: !12839, file: !1, line: 4102, column: 16)
!12844 = !DILocation(line: 4106, column: 12, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12839, file: !1, line: 4105, column: 9)
!12846 = !DILocation(line: 4106, column: 24, scope: !12845)
!12847 = !DILocation(line: 4106, column: 27, scope: !12845)
!12848 = !DILocation(line: 4106, column: 10, scope: !12845)
!12849 = !DILocation(line: 4107, column: 16, scope: !12845)
!12850 = !DILocation(line: 4107, column: 5, scope: !12845)
!12851 = !DILocation(line: 4107, column: 9, scope: !12845)
!12852 = !DILocation(line: 4107, column: 14, scope: !12845)
!12853 = !DILocation(line: 4108, column: 9, scope: !12845)
!12854 = !DILocation(line: 4108, column: 7, scope: !12845)
!12855 = !DILocation(line: 4109, column: 10, scope: !12845)
!12856 = !DILocation(line: 4109, column: 14, scope: !12845)
!12857 = !DILocation(line: 4109, column: 8, scope: !12845)
!12858 = !DILocation(line: 4110, column: 5, scope: !12845)
!12859 = !DILocation(line: 4110, column: 13, scope: !12845)
!12860 = !DILocation(line: 4111, column: 17, scope: !12861)
!12861 = distinct !DILexicalBlock(scope: !12845, file: !1, line: 4110, column: 17)
!12862 = !DILocation(line: 4111, column: 23, scope: !12861)
!12863 = !DILocation(line: 4111, column: 31, scope: !12861)
!12864 = !DILocation(line: 4111, column: 35, scope: !12861)
!12865 = !DILocation(line: 4111, column: 6, scope: !12861)
!12866 = !DILocation(line: 4112, column: 17, scope: !12861)
!12867 = !DILocation(line: 4112, column: 21, scope: !12861)
!12868 = !DILocation(line: 4112, column: 6, scope: !12861)
!12869 = !DILocation(line: 4112, column: 12, scope: !12861)
!12870 = !DILocation(line: 4112, column: 15, scope: !12861)
!12871 = !DILocation(line: 4113, column: 8, scope: !12861)
!12872 = !DILocation(line: 4114, column: 17, scope: !12861)
!12873 = !DILocation(line: 4114, column: 23, scope: !12861)
!12874 = !DILocation(line: 4114, column: 31, scope: !12861)
!12875 = !DILocation(line: 4114, column: 35, scope: !12861)
!12876 = !DILocation(line: 4114, column: 6, scope: !12861)
!12877 = !DILocation(line: 4115, column: 17, scope: !12861)
!12878 = !DILocation(line: 4115, column: 21, scope: !12861)
!12879 = !DILocation(line: 4115, column: 6, scope: !12861)
!12880 = !DILocation(line: 4115, column: 12, scope: !12861)
!12881 = !DILocation(line: 4115, column: 15, scope: !12861)
!12882 = !DILocation(line: 4116, column: 8, scope: !12861)
!12883 = !DILocation(line: 4117, column: 17, scope: !12861)
!12884 = !DILocation(line: 4117, column: 23, scope: !12861)
!12885 = !DILocation(line: 4117, column: 31, scope: !12861)
!12886 = !DILocation(line: 4117, column: 35, scope: !12861)
!12887 = !DILocation(line: 4117, column: 6, scope: !12861)
!12888 = !DILocation(line: 4118, column: 17, scope: !12861)
!12889 = !DILocation(line: 4118, column: 21, scope: !12861)
!12890 = !DILocation(line: 4118, column: 6, scope: !12861)
!12891 = !DILocation(line: 4118, column: 12, scope: !12861)
!12892 = !DILocation(line: 4118, column: 15, scope: !12861)
!12893 = !DILocation(line: 4119, column: 21, scope: !12861)
!12894 = !DILocation(line: 4119, column: 25, scope: !12861)
!12895 = !DILocation(line: 4119, column: 6, scope: !12861)
!12896 = !DILocation(line: 4119, column: 12, scope: !12861)
!12897 = !DILocation(line: 4119, column: 19, scope: !12861)
!12898 = !DILocation(line: 4120, column: 21, scope: !12861)
!12899 = !DILocation(line: 4120, column: 25, scope: !12861)
!12900 = !DILocation(line: 4120, column: 6, scope: !12861)
!12901 = !DILocation(line: 4120, column: 12, scope: !12861)
!12902 = !DILocation(line: 4120, column: 19, scope: !12861)
!12903 = !DILocation(line: 4121, column: 8, scope: !12861)
!12904 = !DILocation(line: 4122, column: 10, scope: !12861)
!12905 = distinct !{!12905, !12858, !12906}
!12906 = !DILocation(line: 4123, column: 5, scope: !12845)
!12907 = !DILocation(line: 4124, column: 5, scope: !12845)
!12908 = !DILocation(line: 4124, column: 15, scope: !12845)
!12909 = !DILocation(line: 4124, column: 19, scope: !12845)
!12910 = !DILocation(line: 4125, column: 5, scope: !12845)
!12911 = !DILocation(line: 4125, column: 9, scope: !12845)
!12912 = !DILocation(line: 4125, column: 12, scope: !12845)
!12913 = !DILocation(line: 4126, column: 5, scope: !12845)
!12914 = !DILocation(line: 4126, column: 15, scope: !12845)
!12915 = !DILocation(line: 4126, column: 19, scope: !12845)
!12916 = !DILocation(line: 4127, column: 5, scope: !12845)
!12917 = !DILocation(line: 4127, column: 9, scope: !12845)
!12918 = !DILocation(line: 4127, column: 16, scope: !12845)
!12919 = !DILocation(line: 4128, column: 17, scope: !12845)
!12920 = !DILocation(line: 4128, column: 5, scope: !12845)
!12921 = !DILocation(line: 4128, column: 9, scope: !12845)
!12922 = !DILocation(line: 4128, column: 15, scope: !12845)
!12923 = !DILocation(line: 4129, column: 5, scope: !12845)
!12924 = !DILocation(line: 4129, column: 9, scope: !12845)
!12925 = !DILocation(line: 4129, column: 14, scope: !12845)
!12926 = !DILocation(line: 4131, column: 3, scope: !12834)
!12927 = !DILocation(line: 4132, column: 2, scope: !12801)
!12928 = !DILocation(line: 4134, column: 2, scope: !12484)
!12929 = !DILocation(line: 4135, column: 1, scope: !12484)
!12930 = distinct !DISubprogram(name: "BKE_curve_nurb_active_set", scope: !1, file: !1, line: 4147, type: !12931, scopeLine: 4148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!12931 = !DISubroutineType(types: !12932)
!12932 = !{null, !114, !1782}
!12933 = !DILocalVariable(name: "cu", arg: 1, scope: !12930, file: !1, line: 4147, type: !114)
!12934 = !DILocation(line: 4147, column: 39, scope: !12930)
!12935 = !DILocalVariable(name: "nu", arg: 2, scope: !12930, file: !1, line: 4147, type: !1782)
!12936 = !DILocation(line: 4147, column: 49, scope: !12930)
!12937 = !DILocation(line: 4149, column: 6, scope: !12938)
!12938 = distinct !DILexicalBlock(scope: !12930, file: !1, line: 4149, column: 6)
!12939 = !DILocation(line: 4149, column: 9, scope: !12938)
!12940 = !DILocation(line: 4149, column: 6, scope: !12930)
!12941 = !DILocation(line: 4150, column: 3, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12938, file: !1, line: 4149, column: 18)
!12943 = !DILocation(line: 4150, column: 7, scope: !12942)
!12944 = !DILocation(line: 4150, column: 13, scope: !12942)
!12945 = !DILocation(line: 4151, column: 2, scope: !12942)
!12946 = !DILocalVariable(name: "nurbs", scope: !12947, file: !1, line: 4153, type: !1602)
!12947 = distinct !DILexicalBlock(scope: !12938, file: !1, line: 4152, column: 7)
!12948 = !DILocation(line: 4153, column: 13, scope: !12947)
!12949 = !DILocation(line: 4153, column: 45, scope: !12947)
!12950 = !DILocation(line: 4153, column: 21, scope: !12947)
!12951 = !DILocation(line: 4154, column: 29, scope: !12947)
!12952 = !DILocation(line: 4154, column: 36, scope: !12947)
!12953 = !DILocation(line: 4154, column: 15, scope: !12947)
!12954 = !DILocation(line: 4154, column: 3, scope: !12947)
!12955 = !DILocation(line: 4154, column: 7, scope: !12947)
!12956 = !DILocation(line: 4154, column: 13, scope: !12947)
!12957 = !DILocation(line: 4156, column: 1, scope: !12930)
!12958 = distinct !DISubprogram(name: "BKE_curve_nurb_active_get", scope: !1, file: !1, line: 4158, type: !12959, scopeLine: 4159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!12959 = !DISubroutineType(types: !12960)
!12960 = !{!1787, !114}
!12961 = !DILocalVariable(name: "cu", arg: 1, scope: !12958, file: !1, line: 4158, type: !114)
!12962 = !DILocation(line: 4158, column: 40, scope: !12958)
!12963 = !DILocalVariable(name: "nurbs", scope: !12958, file: !1, line: 4160, type: !1602)
!12964 = !DILocation(line: 4160, column: 12, scope: !12958)
!12965 = !DILocation(line: 4160, column: 44, scope: !12958)
!12966 = !DILocation(line: 4160, column: 20, scope: !12958)
!12967 = !DILocation(line: 4161, column: 22, scope: !12958)
!12968 = !DILocation(line: 4161, column: 29, scope: !12958)
!12969 = !DILocation(line: 4161, column: 33, scope: !12958)
!12970 = !DILocation(line: 4161, column: 9, scope: !12958)
!12971 = !DILocation(line: 4161, column: 2, scope: !12958)
!12972 = distinct !DISubprogram(name: "BKE_curve_vert_active_get", scope: !1, file: !1, line: 4165, type: !12973, scopeLine: 4166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!12973 = !DISubroutineType(types: !12974)
!12974 = !{!49, !114}
!12975 = !DILocalVariable(name: "cu", arg: 1, scope: !12972, file: !1, line: 4165, type: !114)
!12976 = !DILocation(line: 4165, column: 40, scope: !12972)
!12977 = !DILocalVariable(name: "nu", scope: !12972, file: !1, line: 4167, type: !1782)
!12978 = !DILocation(line: 4167, column: 8, scope: !12972)
!12979 = !DILocalVariable(name: "vert", scope: !12972, file: !1, line: 4168, type: !49)
!12980 = !DILocation(line: 4168, column: 8, scope: !12972)
!12981 = !DILocation(line: 4170, column: 33, scope: !12972)
!12982 = !DILocation(line: 4170, column: 2, scope: !12972)
!12983 = !DILocation(line: 4171, column: 9, scope: !12972)
!12984 = !DILocation(line: 4171, column: 2, scope: !12972)
!12985 = distinct !DISubprogram(name: "BKE_curve_nurb_vert_active_get", scope: !1, file: !1, line: 4200, type: !12986, scopeLine: 4201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!12986 = !DISubroutineType(types: !12987)
!12987 = !{!551, !114, !12988, !12989}
!12988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 64)
!12989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !49, size: 64)
!12990 = !DILocalVariable(name: "cu", arg: 1, scope: !12985, file: !1, line: 4200, type: !114)
!12991 = !DILocation(line: 4200, column: 44, scope: !12985)
!12992 = !DILocalVariable(name: "r_nu", arg: 2, scope: !12985, file: !1, line: 4200, type: !12988)
!12993 = !DILocation(line: 4200, column: 55, scope: !12985)
!12994 = !DILocalVariable(name: "r_vert", arg: 3, scope: !12985, file: !1, line: 4200, type: !12989)
!12995 = !DILocation(line: 4200, column: 68, scope: !12985)
!12996 = !DILocalVariable(name: "nu", scope: !12985, file: !1, line: 4202, type: !1782)
!12997 = !DILocation(line: 4202, column: 8, scope: !12985)
!12998 = !DILocalVariable(name: "vert", scope: !12985, file: !1, line: 4203, type: !49)
!12999 = !DILocation(line: 4203, column: 8, scope: !12985)
!13000 = !DILocation(line: 4205, column: 6, scope: !13001)
!13001 = distinct !DILexicalBlock(scope: !12985, file: !1, line: 4205, column: 6)
!13002 = !DILocation(line: 4205, column: 10, scope: !13001)
!13003 = !DILocation(line: 4205, column: 18, scope: !13001)
!13004 = !DILocation(line: 4205, column: 6, scope: !12985)
!13005 = !DILocalVariable(name: "nurbs", scope: !13006, file: !1, line: 4206, type: !1602)
!13006 = distinct !DILexicalBlock(scope: !13001, file: !1, line: 4205, column: 34)
!13007 = !DILocation(line: 4206, column: 13, scope: !13006)
!13008 = !DILocation(line: 4206, column: 45, scope: !13006)
!13009 = !DILocation(line: 4206, column: 21, scope: !13006)
!13010 = !DILocation(line: 4207, column: 21, scope: !13006)
!13011 = !DILocation(line: 4207, column: 28, scope: !13006)
!13012 = !DILocation(line: 4207, column: 32, scope: !13006)
!13013 = !DILocation(line: 4207, column: 8, scope: !13006)
!13014 = !DILocation(line: 4207, column: 6, scope: !13006)
!13015 = !DILocation(line: 4209, column: 7, scope: !13016)
!13016 = distinct !DILexicalBlock(scope: !13006, file: !1, line: 4209, column: 7)
!13017 = !DILocation(line: 4209, column: 7, scope: !13006)
!13018 = !DILocation(line: 4210, column: 8, scope: !13019)
!13019 = distinct !DILexicalBlock(scope: !13020, file: !1, line: 4210, column: 8)
!13020 = distinct !DILexicalBlock(scope: !13016, file: !1, line: 4209, column: 11)
!13021 = !DILocation(line: 4210, column: 12, scope: !13019)
!13022 = !DILocation(line: 4210, column: 17, scope: !13019)
!13023 = !DILocation(line: 4210, column: 8, scope: !13020)
!13024 = !DILocation(line: 4212, column: 13, scope: !13025)
!13025 = distinct !DILexicalBlock(scope: !13019, file: !1, line: 4210, column: 31)
!13026 = !DILocation(line: 4212, column: 17, scope: !13025)
!13027 = !DILocation(line: 4212, column: 22, scope: !13025)
!13028 = !DILocation(line: 4212, column: 26, scope: !13025)
!13029 = !DILocation(line: 4212, column: 12, scope: !13025)
!13030 = !DILocation(line: 4212, column: 10, scope: !13025)
!13031 = !DILocation(line: 4213, column: 4, scope: !13025)
!13032 = !DILocation(line: 4216, column: 13, scope: !13033)
!13033 = distinct !DILexicalBlock(scope: !13019, file: !1, line: 4214, column: 9)
!13034 = !DILocation(line: 4216, column: 17, scope: !13033)
!13035 = !DILocation(line: 4216, column: 20, scope: !13033)
!13036 = !DILocation(line: 4216, column: 24, scope: !13033)
!13037 = !DILocation(line: 4216, column: 12, scope: !13033)
!13038 = !DILocation(line: 4216, column: 10, scope: !13033)
!13039 = !DILocation(line: 4218, column: 3, scope: !13020)
!13040 = !DILocation(line: 4225, column: 2, scope: !13006)
!13041 = !DILocation(line: 4227, column: 10, scope: !12985)
!13042 = !DILocation(line: 4227, column: 3, scope: !12985)
!13043 = !DILocation(line: 4227, column: 8, scope: !12985)
!13044 = !DILocation(line: 4228, column: 12, scope: !12985)
!13045 = !DILocation(line: 4228, column: 3, scope: !12985)
!13046 = !DILocation(line: 4228, column: 10, scope: !12985)
!13047 = !DILocation(line: 4230, column: 11, scope: !12985)
!13048 = !DILocation(line: 4230, column: 10, scope: !12985)
!13049 = !DILocation(line: 4230, column: 18, scope: !12985)
!13050 = !DILocation(line: 4230, column: 9, scope: !12985)
!13051 = !DILocation(line: 4230, column: 2, scope: !12985)
!13052 = distinct !DISubprogram(name: "BKE_curve_nurb_vert_active_set", scope: !1, file: !1, line: 4175, type: !13053, scopeLine: 4176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!13053 = !DISubroutineType(types: !13054)
!13054 = !{null, !114, !1782, !49}
!13055 = !DILocalVariable(name: "cu", arg: 1, scope: !13052, file: !1, line: 4175, type: !114)
!13056 = !DILocation(line: 4175, column: 44, scope: !13052)
!13057 = !DILocalVariable(name: "nu", arg: 2, scope: !13052, file: !1, line: 4175, type: !1782)
!13058 = !DILocation(line: 4175, column: 54, scope: !13052)
!13059 = !DILocalVariable(name: "vert", arg: 3, scope: !13052, file: !1, line: 4175, type: !49)
!13060 = !DILocation(line: 4175, column: 64, scope: !13052)
!13061 = !DILocation(line: 4177, column: 6, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !13052, file: !1, line: 4177, column: 6)
!13063 = !DILocation(line: 4177, column: 6, scope: !13052)
!13064 = !DILocation(line: 4178, column: 29, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !13062, file: !1, line: 4177, column: 10)
!13066 = !DILocation(line: 4178, column: 33, scope: !13065)
!13067 = !DILocation(line: 4178, column: 3, scope: !13065)
!13068 = !DILocation(line: 4180, column: 7, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13065, file: !1, line: 4180, column: 7)
!13070 = !DILocation(line: 4180, column: 7, scope: !13065)
!13071 = !DILocation(line: 4181, column: 8, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !13073, file: !1, line: 4181, column: 8)
!13073 = distinct !DILexicalBlock(scope: !13069, file: !1, line: 4180, column: 13)
!13074 = !DILocation(line: 4181, column: 12, scope: !13072)
!13075 = !DILocation(line: 4181, column: 17, scope: !13072)
!13076 = !DILocation(line: 4181, column: 8, scope: !13073)
!13077 = !DILocation(line: 4183, column: 32, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13072, file: !1, line: 4181, column: 31)
!13079 = !DILocation(line: 4183, column: 19, scope: !13078)
!13080 = !DILocation(line: 4183, column: 39, scope: !13078)
!13081 = !DILocation(line: 4183, column: 43, scope: !13078)
!13082 = !DILocation(line: 4183, column: 37, scope: !13078)
!13083 = !DILocation(line: 4183, column: 5, scope: !13078)
!13084 = !DILocation(line: 4183, column: 9, scope: !13078)
!13085 = !DILocation(line: 4183, column: 17, scope: !13078)
!13086 = !DILocation(line: 4184, column: 4, scope: !13078)
!13087 = !DILocation(line: 4187, column: 29, scope: !13088)
!13088 = distinct !DILexicalBlock(scope: !13072, file: !1, line: 4185, column: 9)
!13089 = !DILocation(line: 4187, column: 19, scope: !13088)
!13090 = !DILocation(line: 4187, column: 36, scope: !13088)
!13091 = !DILocation(line: 4187, column: 40, scope: !13088)
!13092 = !DILocation(line: 4187, column: 34, scope: !13088)
!13093 = !DILocation(line: 4187, column: 5, scope: !13088)
!13094 = !DILocation(line: 4187, column: 9, scope: !13088)
!13095 = !DILocation(line: 4187, column: 17, scope: !13088)
!13096 = !DILocation(line: 4189, column: 3, scope: !13073)
!13097 = !DILocation(line: 4191, column: 4, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13069, file: !1, line: 4190, column: 8)
!13099 = !DILocation(line: 4191, column: 8, scope: !13098)
!13100 = !DILocation(line: 4191, column: 16, scope: !13098)
!13101 = !DILocation(line: 4193, column: 2, scope: !13065)
!13102 = !DILocation(line: 4195, column: 15, scope: !13103)
!13103 = distinct !DILexicalBlock(scope: !13062, file: !1, line: 4194, column: 7)
!13104 = !DILocation(line: 4195, column: 19, scope: !13103)
!13105 = !DILocation(line: 4195, column: 27, scope: !13103)
!13106 = !DILocation(line: 4195, column: 3, scope: !13103)
!13107 = !DILocation(line: 4195, column: 7, scope: !13103)
!13108 = !DILocation(line: 4195, column: 13, scope: !13103)
!13109 = !DILocation(line: 4197, column: 1, scope: !13052)
!13110 = distinct !DISubprogram(name: "BKE_curve_nurb_vert_active_validate", scope: !1, file: !1, line: 4233, type: !1847, scopeLine: 4234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!13111 = !DILocalVariable(name: "cu", arg: 1, scope: !13110, file: !1, line: 4233, type: !114)
!13112 = !DILocation(line: 4233, column: 49, scope: !13110)
!13113 = !DILocalVariable(name: "nu", scope: !13110, file: !1, line: 4235, type: !1782)
!13114 = !DILocation(line: 4235, column: 8, scope: !13110)
!13115 = !DILocalVariable(name: "vert", scope: !13110, file: !1, line: 4236, type: !49)
!13116 = !DILocation(line: 4236, column: 8, scope: !13110)
!13117 = !DILocation(line: 4238, column: 37, scope: !13118)
!13118 = distinct !DILexicalBlock(scope: !13110, file: !1, line: 4238, column: 6)
!13119 = !DILocation(line: 4238, column: 6, scope: !13118)
!13120 = !DILocation(line: 4238, column: 6, scope: !13110)
!13121 = !DILocation(line: 4239, column: 7, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13123, file: !1, line: 4239, column: 7)
!13123 = distinct !DILexicalBlock(scope: !13118, file: !1, line: 4238, column: 54)
!13124 = !DILocation(line: 4239, column: 11, scope: !13122)
!13125 = !DILocation(line: 4239, column: 16, scope: !13122)
!13126 = !DILocation(line: 4239, column: 7, scope: !13123)
!13127 = !DILocation(line: 4240, column: 23, scope: !13128)
!13128 = distinct !DILexicalBlock(scope: !13129, file: !1, line: 4240, column: 8)
!13129 = distinct !DILexicalBlock(scope: !13122, file: !1, line: 4239, column: 30)
!13130 = !DILocation(line: 4240, column: 10, scope: !13128)
!13131 = !DILocation(line: 4240, column: 30, scope: !13128)
!13132 = !DILocation(line: 4240, column: 9, scope: !13128)
!13133 = !DILocation(line: 4240, column: 33, scope: !13128)
!13134 = !DILocation(line: 4240, column: 43, scope: !13128)
!13135 = !DILocation(line: 4240, column: 8, scope: !13129)
!13136 = !DILocation(line: 4241, column: 5, scope: !13137)
!13137 = distinct !DILexicalBlock(scope: !13128, file: !1, line: 4240, column: 49)
!13138 = !DILocation(line: 4241, column: 9, scope: !13137)
!13139 = !DILocation(line: 4241, column: 17, scope: !13137)
!13140 = !DILocation(line: 4242, column: 4, scope: !13137)
!13141 = !DILocation(line: 4243, column: 3, scope: !13129)
!13142 = !DILocation(line: 4245, column: 20, scope: !13143)
!13143 = distinct !DILexicalBlock(scope: !13144, file: !1, line: 4245, column: 8)
!13144 = distinct !DILexicalBlock(scope: !13122, file: !1, line: 4244, column: 8)
!13145 = !DILocation(line: 4245, column: 10, scope: !13143)
!13146 = !DILocation(line: 4245, column: 27, scope: !13143)
!13147 = !DILocation(line: 4245, column: 9, scope: !13143)
!13148 = !DILocation(line: 4245, column: 30, scope: !13143)
!13149 = !DILocation(line: 4245, column: 40, scope: !13143)
!13150 = !DILocation(line: 4245, column: 8, scope: !13144)
!13151 = !DILocation(line: 4246, column: 5, scope: !13152)
!13152 = distinct !DILexicalBlock(scope: !13143, file: !1, line: 4245, column: 46)
!13153 = !DILocation(line: 4246, column: 9, scope: !13152)
!13154 = !DILocation(line: 4246, column: 17, scope: !13152)
!13155 = !DILocation(line: 4247, column: 4, scope: !13152)
!13156 = !DILocation(line: 4249, column: 2, scope: !13123)
!13157 = !DILocation(line: 4250, column: 1, scope: !13110)
!13158 = distinct !DISubprogram(name: "BLI_listbase_is_empty", scope: !2470, file: !2470, line: 88, type: !13159, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!13159 = !DISubroutineType(types: !13160)
!13160 = !{!551, !13161}
!13161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13162, size: 64)
!13162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !106)
!13163 = !DILocalVariable(name: "lb", arg: 1, scope: !13158, file: !2470, line: 88, type: !13161)
!13164 = !DILocation(line: 88, column: 62, scope: !13158)
!13165 = !DILocation(line: 88, column: 76, scope: !13158)
!13166 = !DILocation(line: 88, column: 80, scope: !13158)
!13167 = !DILocation(line: 88, column: 86, scope: !13158)
!13168 = !DILocation(line: 88, column: 75, scope: !13158)
!13169 = !DILocation(line: 88, column: 68, scope: !13158)
!13170 = distinct !DISubprogram(name: "BKE_curve_center_median", scope: !1, file: !1, line: 4264, type: !13171, scopeLine: 4265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!13171 = !DISubroutineType(types: !13172)
!13172 = !{!551, !114, !1325}
!13173 = !DILocalVariable(name: "cu", arg: 1, scope: !13170, file: !1, line: 4264, type: !114)
!13174 = !DILocation(line: 4264, column: 37, scope: !13170)
!13175 = !DILocalVariable(name: "cent", arg: 2, scope: !13170, file: !1, line: 4264, type: !1325)
!13176 = !DILocation(line: 4264, column: 47, scope: !13170)
!13177 = !DILocalVariable(name: "nurb_lb", scope: !13170, file: !1, line: 4266, type: !1602)
!13178 = !DILocation(line: 4266, column: 12, scope: !13170)
!13179 = !DILocation(line: 4266, column: 42, scope: !13170)
!13180 = !DILocation(line: 4266, column: 22, scope: !13170)
!13181 = !DILocalVariable(name: "nu", scope: !13170, file: !1, line: 4267, type: !1782)
!13182 = !DILocation(line: 4267, column: 8, scope: !13170)
!13183 = !DILocalVariable(name: "total", scope: !13170, file: !1, line: 4268, type: !79)
!13184 = !DILocation(line: 4268, column: 6, scope: !13170)
!13185 = !DILocation(line: 4270, column: 10, scope: !13170)
!13186 = !DILocation(line: 4270, column: 2, scope: !13170)
!13187 = !DILocation(line: 4272, column: 12, scope: !13188)
!13188 = distinct !DILexicalBlock(scope: !13170, file: !1, line: 4272, column: 2)
!13189 = !DILocation(line: 4272, column: 21, scope: !13188)
!13190 = !DILocation(line: 4272, column: 10, scope: !13188)
!13191 = !DILocation(line: 4272, column: 7, scope: !13188)
!13192 = !DILocation(line: 4272, column: 28, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13188, file: !1, line: 4272, column: 2)
!13194 = !DILocation(line: 4272, column: 2, scope: !13188)
!13195 = !DILocalVariable(name: "i", scope: !13196, file: !1, line: 4273, type: !79)
!13196 = distinct !DILexicalBlock(scope: !13193, file: !1, line: 4272, column: 47)
!13197 = !DILocation(line: 4273, column: 7, scope: !13196)
!13198 = !DILocation(line: 4275, column: 7, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !13196, file: !1, line: 4275, column: 7)
!13200 = !DILocation(line: 4275, column: 11, scope: !13199)
!13201 = !DILocation(line: 4275, column: 16, scope: !13199)
!13202 = !DILocation(line: 4275, column: 7, scope: !13196)
!13203 = !DILocalVariable(name: "bezt", scope: !13204, file: !1, line: 4276, type: !1817)
!13204 = distinct !DILexicalBlock(scope: !13199, file: !1, line: 4275, column: 30)
!13205 = !DILocation(line: 4276, column: 15, scope: !13204)
!13206 = !DILocation(line: 4277, column: 8, scope: !13204)
!13207 = !DILocation(line: 4277, column: 12, scope: !13204)
!13208 = !DILocation(line: 4277, column: 6, scope: !13204)
!13209 = !DILocation(line: 4278, column: 13, scope: !13204)
!13210 = !DILocation(line: 4278, column: 15, scope: !13204)
!13211 = !DILocation(line: 4278, column: 10, scope: !13204)
!13212 = !DILocation(line: 4279, column: 16, scope: !13213)
!13213 = distinct !DILexicalBlock(scope: !13204, file: !1, line: 4279, column: 4)
!13214 = !DILocation(line: 4279, column: 20, scope: !13213)
!13215 = !DILocation(line: 4279, column: 14, scope: !13213)
!13216 = !DILocation(line: 4279, column: 9, scope: !13213)
!13217 = !DILocation(line: 4279, column: 27, scope: !13218)
!13218 = distinct !DILexicalBlock(scope: !13213, file: !1, line: 4279, column: 4)
!13219 = !DILocation(line: 4279, column: 4, scope: !13213)
!13220 = !DILocation(line: 4280, column: 15, scope: !13221)
!13221 = distinct !DILexicalBlock(scope: !13218, file: !1, line: 4279, column: 39)
!13222 = !DILocation(line: 4280, column: 21, scope: !13221)
!13223 = !DILocation(line: 4280, column: 27, scope: !13221)
!13224 = !DILocation(line: 4280, column: 5, scope: !13221)
!13225 = !DILocation(line: 4281, column: 15, scope: !13221)
!13226 = !DILocation(line: 4281, column: 21, scope: !13221)
!13227 = !DILocation(line: 4281, column: 27, scope: !13221)
!13228 = !DILocation(line: 4281, column: 5, scope: !13221)
!13229 = !DILocation(line: 4282, column: 15, scope: !13221)
!13230 = !DILocation(line: 4282, column: 21, scope: !13221)
!13231 = !DILocation(line: 4282, column: 27, scope: !13221)
!13232 = !DILocation(line: 4282, column: 5, scope: !13221)
!13233 = !DILocation(line: 4283, column: 4, scope: !13221)
!13234 = !DILocation(line: 4279, column: 35, scope: !13218)
!13235 = !DILocation(line: 4279, column: 4, scope: !13218)
!13236 = distinct !{!13236, !13219, !13237}
!13237 = !DILocation(line: 4283, column: 4, scope: !13213)
!13238 = !DILocation(line: 4284, column: 3, scope: !13204)
!13239 = !DILocalVariable(name: "bp", scope: !13240, file: !1, line: 4286, type: !1805)
!13240 = distinct !DILexicalBlock(scope: !13199, file: !1, line: 4285, column: 8)
!13241 = !DILocation(line: 4286, column: 12, scope: !13240)
!13242 = !DILocation(line: 4287, column: 8, scope: !13240)
!13243 = !DILocation(line: 4287, column: 12, scope: !13240)
!13244 = !DILocation(line: 4287, column: 20, scope: !13240)
!13245 = !DILocation(line: 4287, column: 24, scope: !13240)
!13246 = !DILocation(line: 4287, column: 18, scope: !13240)
!13247 = !DILocation(line: 4287, column: 6, scope: !13240)
!13248 = !DILocation(line: 4288, column: 13, scope: !13240)
!13249 = !DILocation(line: 4288, column: 10, scope: !13240)
!13250 = !DILocation(line: 4289, column: 14, scope: !13251)
!13251 = distinct !DILexicalBlock(scope: !13240, file: !1, line: 4289, column: 4)
!13252 = !DILocation(line: 4289, column: 18, scope: !13251)
!13253 = !DILocation(line: 4289, column: 12, scope: !13251)
!13254 = !DILocation(line: 4289, column: 9, scope: !13251)
!13255 = !DILocation(line: 4289, column: 23, scope: !13256)
!13256 = distinct !DILexicalBlock(scope: !13251, file: !1, line: 4289, column: 4)
!13257 = !DILocation(line: 4289, column: 4, scope: !13251)
!13258 = !DILocation(line: 4290, column: 15, scope: !13259)
!13259 = distinct !DILexicalBlock(scope: !13256, file: !1, line: 4289, column: 33)
!13260 = !DILocation(line: 4290, column: 21, scope: !13259)
!13261 = !DILocation(line: 4290, column: 25, scope: !13259)
!13262 = !DILocation(line: 4290, column: 5, scope: !13259)
!13263 = !DILocation(line: 4291, column: 4, scope: !13259)
!13264 = !DILocation(line: 4289, column: 29, scope: !13256)
!13265 = !DILocation(line: 4289, column: 4, scope: !13256)
!13266 = distinct !{!13266, !13257, !13267}
!13267 = !DILocation(line: 4291, column: 4, scope: !13251)
!13268 = !DILocation(line: 4293, column: 2, scope: !13196)
!13269 = !DILocation(line: 4272, column: 37, scope: !13193)
!13270 = !DILocation(line: 4272, column: 41, scope: !13193)
!13271 = !DILocation(line: 4272, column: 35, scope: !13193)
!13272 = !DILocation(line: 4272, column: 2, scope: !13193)
!13273 = distinct !{!13273, !13194, !13274}
!13274 = !DILocation(line: 4293, column: 2, scope: !13188)
!13275 = !DILocation(line: 4295, column: 6, scope: !13276)
!13276 = distinct !DILexicalBlock(scope: !13170, file: !1, line: 4295, column: 6)
!13277 = !DILocation(line: 4295, column: 6, scope: !13170)
!13278 = !DILocation(line: 4296, column: 13, scope: !13279)
!13279 = distinct !DILexicalBlock(scope: !13276, file: !1, line: 4295, column: 13)
!13280 = !DILocation(line: 4296, column: 33, scope: !13279)
!13281 = !DILocation(line: 4296, column: 26, scope: !13279)
!13282 = !DILocation(line: 4296, column: 24, scope: !13279)
!13283 = !DILocation(line: 4296, column: 3, scope: !13279)
!13284 = !DILocation(line: 4297, column: 2, scope: !13279)
!13285 = !DILocation(line: 4299, column: 10, scope: !13170)
!13286 = !DILocation(line: 4299, column: 16, scope: !13170)
!13287 = !DILocation(line: 4299, column: 9, scope: !13170)
!13288 = !DILocation(line: 4299, column: 2, scope: !13170)
!13289 = distinct !DISubprogram(name: "add_v3_v3", scope: !2341, file: !2341, line: 302, type: !3189, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!13290 = !DILocalVariable(name: "r", arg: 1, scope: !13289, file: !2341, line: 302, type: !1325)
!13291 = !DILocation(line: 302, column: 30, scope: !13289)
!13292 = !DILocalVariable(name: "a", arg: 2, scope: !13289, file: !2341, line: 302, type: !3191)
!13293 = !DILocation(line: 302, column: 48, scope: !13289)
!13294 = !DILocation(line: 304, column: 10, scope: !13289)
!13295 = !DILocation(line: 304, column: 2, scope: !13289)
!13296 = !DILocation(line: 304, column: 7, scope: !13289)
!13297 = !DILocation(line: 305, column: 10, scope: !13289)
!13298 = !DILocation(line: 305, column: 2, scope: !13289)
!13299 = !DILocation(line: 305, column: 7, scope: !13289)
!13300 = !DILocation(line: 306, column: 10, scope: !13289)
!13301 = !DILocation(line: 306, column: 2, scope: !13289)
!13302 = !DILocation(line: 306, column: 7, scope: !13289)
!13303 = !DILocation(line: 307, column: 1, scope: !13289)
!13304 = distinct !DISubprogram(name: "mul_v3_fl", scope: !2341, file: !2341, line: 392, type: !2342, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!13305 = !DILocalVariable(name: "r", arg: 1, scope: !13304, file: !2341, line: 392, type: !1325)
!13306 = !DILocation(line: 392, column: 30, scope: !13304)
!13307 = !DILocalVariable(name: "f", arg: 2, scope: !13304, file: !2341, line: 392, type: !128)
!13308 = !DILocation(line: 392, column: 42, scope: !13304)
!13309 = !DILocation(line: 394, column: 10, scope: !13304)
!13310 = !DILocation(line: 394, column: 2, scope: !13304)
!13311 = !DILocation(line: 394, column: 7, scope: !13304)
!13312 = !DILocation(line: 395, column: 10, scope: !13304)
!13313 = !DILocation(line: 395, column: 2, scope: !13304)
!13314 = !DILocation(line: 395, column: 7, scope: !13304)
!13315 = !DILocation(line: 396, column: 10, scope: !13304)
!13316 = !DILocation(line: 396, column: 2, scope: !13304)
!13317 = !DILocation(line: 396, column: 7, scope: !13304)
!13318 = !DILocation(line: 397, column: 1, scope: !13304)
!13319 = distinct !DISubprogram(name: "BKE_curve_center_bounds", scope: !1, file: !1, line: 4302, type: !13171, scopeLine: 4303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!13320 = !DILocalVariable(name: "cu", arg: 1, scope: !13319, file: !1, line: 4302, type: !114)
!13321 = !DILocation(line: 4302, column: 37, scope: !13319)
!13322 = !DILocalVariable(name: "cent", arg: 2, scope: !13319, file: !1, line: 4302, type: !1325)
!13323 = !DILocation(line: 4302, column: 47, scope: !13319)
!13324 = !DILocalVariable(name: "min", scope: !13319, file: !1, line: 4304, type: !201)
!13325 = !DILocation(line: 4304, column: 8, scope: !13319)
!13326 = !DILocalVariable(name: "max", scope: !13319, file: !1, line: 4304, type: !201)
!13327 = !DILocation(line: 4304, column: 16, scope: !13319)
!13328 = !DILocation(line: 4305, column: 2, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13319, file: !1, line: 4305, column: 2)
!13330 = !DILocation(line: 4306, column: 23, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13319, file: !1, line: 4306, column: 6)
!13332 = !DILocation(line: 4306, column: 34, scope: !13331)
!13333 = !DILocation(line: 4306, column: 39, scope: !13331)
!13334 = !DILocation(line: 4306, column: 6, scope: !13331)
!13335 = !DILocation(line: 4306, column: 6, scope: !13319)
!13336 = !DILocation(line: 4307, column: 15, scope: !13337)
!13337 = distinct !DILexicalBlock(scope: !13331, file: !1, line: 4306, column: 45)
!13338 = !DILocation(line: 4307, column: 21, scope: !13337)
!13339 = !DILocation(line: 4307, column: 26, scope: !13337)
!13340 = !DILocation(line: 4307, column: 3, scope: !13337)
!13341 = !DILocation(line: 4308, column: 3, scope: !13337)
!13342 = !DILocation(line: 4311, column: 2, scope: !13319)
!13343 = !DILocation(line: 4312, column: 1, scope: !13319)
!13344 = distinct !DISubprogram(name: "BKE_curve_transform_ex", scope: !1, file: !1, line: 4315, type: !13345, scopeLine: 4316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!13345 = !DISubroutineType(types: !13346)
!13346 = !{null, !114, !13347, !551, !128}
!13347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!13348 = !DILocalVariable(name: "cu", arg: 1, scope: !13344, file: !1, line: 4315, type: !114)
!13349 = !DILocation(line: 4315, column: 36, scope: !13344)
!13350 = !DILocalVariable(name: "mat", arg: 2, scope: !13344, file: !1, line: 4315, type: !13347)
!13351 = !DILocation(line: 4315, column: 46, scope: !13344)
!13352 = !DILocalVariable(name: "do_keys", arg: 3, scope: !13344, file: !1, line: 4315, type: !551)
!13353 = !DILocation(line: 4315, column: 62, scope: !13344)
!13354 = !DILocalVariable(name: "unit_scale", arg: 4, scope: !13344, file: !1, line: 4315, type: !128)
!13355 = !DILocation(line: 4315, column: 77, scope: !13344)
!13356 = !DILocalVariable(name: "nu", scope: !13344, file: !1, line: 4317, type: !1782)
!13357 = !DILocation(line: 4317, column: 8, scope: !13344)
!13358 = !DILocalVariable(name: "bp", scope: !13344, file: !1, line: 4318, type: !1805)
!13359 = !DILocation(line: 4318, column: 10, scope: !13344)
!13360 = !DILocalVariable(name: "bezt", scope: !13344, file: !1, line: 4319, type: !1817)
!13361 = !DILocation(line: 4319, column: 13, scope: !13344)
!13362 = !DILocalVariable(name: "i", scope: !13344, file: !1, line: 4320, type: !79)
!13363 = !DILocation(line: 4320, column: 6, scope: !13344)
!13364 = !DILocation(line: 4322, column: 12, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13344, file: !1, line: 4322, column: 2)
!13366 = !DILocation(line: 4322, column: 16, scope: !13365)
!13367 = !DILocation(line: 4322, column: 21, scope: !13365)
!13368 = !DILocation(line: 4322, column: 10, scope: !13365)
!13369 = !DILocation(line: 4322, column: 7, scope: !13365)
!13370 = !DILocation(line: 4322, column: 28, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !13365, file: !1, line: 4322, column: 2)
!13372 = !DILocation(line: 4322, column: 2, scope: !13365)
!13373 = !DILocation(line: 4323, column: 7, scope: !13374)
!13374 = distinct !DILexicalBlock(scope: !13375, file: !1, line: 4323, column: 7)
!13375 = distinct !DILexicalBlock(scope: !13371, file: !1, line: 4322, column: 47)
!13376 = !DILocation(line: 4323, column: 11, scope: !13374)
!13377 = !DILocation(line: 4323, column: 16, scope: !13374)
!13378 = !DILocation(line: 4323, column: 7, scope: !13375)
!13379 = !DILocation(line: 4324, column: 8, scope: !13380)
!13380 = distinct !DILexicalBlock(scope: !13374, file: !1, line: 4323, column: 30)
!13381 = !DILocation(line: 4324, column: 12, scope: !13380)
!13382 = !DILocation(line: 4324, column: 6, scope: !13380)
!13383 = !DILocation(line: 4325, column: 16, scope: !13384)
!13384 = distinct !DILexicalBlock(scope: !13380, file: !1, line: 4325, column: 4)
!13385 = !DILocation(line: 4325, column: 20, scope: !13384)
!13386 = !DILocation(line: 4325, column: 14, scope: !13384)
!13387 = !DILocation(line: 4325, column: 9, scope: !13384)
!13388 = !DILocation(line: 4325, column: 27, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13384, file: !1, line: 4325, column: 4)
!13390 = !DILocation(line: 4325, column: 4, scope: !13384)
!13391 = !DILocation(line: 4326, column: 15, scope: !13392)
!13392 = distinct !DILexicalBlock(scope: !13389, file: !1, line: 4325, column: 39)
!13393 = !DILocation(line: 4326, column: 20, scope: !13392)
!13394 = !DILocation(line: 4326, column: 26, scope: !13392)
!13395 = !DILocation(line: 4326, column: 5, scope: !13392)
!13396 = !DILocation(line: 4327, column: 15, scope: !13392)
!13397 = !DILocation(line: 4327, column: 20, scope: !13392)
!13398 = !DILocation(line: 4327, column: 26, scope: !13392)
!13399 = !DILocation(line: 4327, column: 5, scope: !13392)
!13400 = !DILocation(line: 4328, column: 15, scope: !13392)
!13401 = !DILocation(line: 4328, column: 20, scope: !13392)
!13402 = !DILocation(line: 4328, column: 26, scope: !13392)
!13403 = !DILocation(line: 4328, column: 5, scope: !13392)
!13404 = !DILocation(line: 4329, column: 21, scope: !13392)
!13405 = !DILocation(line: 4329, column: 5, scope: !13392)
!13406 = !DILocation(line: 4329, column: 11, scope: !13392)
!13407 = !DILocation(line: 4329, column: 18, scope: !13392)
!13408 = !DILocation(line: 4330, column: 4, scope: !13392)
!13409 = !DILocation(line: 4325, column: 35, scope: !13389)
!13410 = !DILocation(line: 4325, column: 4, scope: !13389)
!13411 = distinct !{!13411, !13390, !13412}
!13412 = !DILocation(line: 4330, column: 4, scope: !13384)
!13413 = !DILocation(line: 4331, column: 26, scope: !13380)
!13414 = !DILocation(line: 4331, column: 4, scope: !13380)
!13415 = !DILocation(line: 4332, column: 3, scope: !13380)
!13416 = !DILocation(line: 4334, column: 8, scope: !13417)
!13417 = distinct !DILexicalBlock(scope: !13374, file: !1, line: 4333, column: 8)
!13418 = !DILocation(line: 4334, column: 12, scope: !13417)
!13419 = !DILocation(line: 4334, column: 20, scope: !13417)
!13420 = !DILocation(line: 4334, column: 24, scope: !13417)
!13421 = !DILocation(line: 4334, column: 18, scope: !13417)
!13422 = !DILocation(line: 4334, column: 6, scope: !13417)
!13423 = !DILocation(line: 4335, column: 14, scope: !13424)
!13424 = distinct !DILexicalBlock(scope: !13417, file: !1, line: 4335, column: 4)
!13425 = !DILocation(line: 4335, column: 18, scope: !13424)
!13426 = !DILocation(line: 4335, column: 12, scope: !13424)
!13427 = !DILocation(line: 4335, column: 9, scope: !13424)
!13428 = !DILocation(line: 4335, column: 23, scope: !13429)
!13429 = distinct !DILexicalBlock(scope: !13424, file: !1, line: 4335, column: 4)
!13430 = !DILocation(line: 4335, column: 4, scope: !13424)
!13431 = !DILocation(line: 4336, column: 15, scope: !13429)
!13432 = !DILocation(line: 4336, column: 20, scope: !13429)
!13433 = !DILocation(line: 4336, column: 24, scope: !13429)
!13434 = !DILocation(line: 4336, column: 5, scope: !13429)
!13435 = !DILocation(line: 4335, column: 29, scope: !13429)
!13436 = !DILocation(line: 4335, column: 4, scope: !13429)
!13437 = distinct !{!13437, !13430, !13438}
!13438 = !DILocation(line: 4336, column: 27, scope: !13424)
!13439 = !DILocation(line: 4338, column: 2, scope: !13375)
!13440 = !DILocation(line: 4322, column: 37, scope: !13371)
!13441 = !DILocation(line: 4322, column: 41, scope: !13371)
!13442 = !DILocation(line: 4322, column: 35, scope: !13371)
!13443 = !DILocation(line: 4322, column: 2, scope: !13371)
!13444 = distinct !{!13444, !13372, !13445}
!13445 = !DILocation(line: 4338, column: 2, scope: !13365)
!13446 = !DILocation(line: 4340, column: 6, scope: !13447)
!13447 = distinct !DILexicalBlock(scope: !13344, file: !1, line: 4340, column: 6)
!13448 = !DILocation(line: 4340, column: 14, scope: !13447)
!13449 = !DILocation(line: 4340, column: 17, scope: !13447)
!13450 = !DILocation(line: 4340, column: 21, scope: !13447)
!13451 = !DILocation(line: 4340, column: 6, scope: !13344)
!13452 = !DILocalVariable(name: "kb", scope: !13453, file: !1, line: 4341, type: !1636)
!13453 = distinct !DILexicalBlock(scope: !13447, file: !1, line: 4340, column: 26)
!13454 = !DILocation(line: 4341, column: 13, scope: !13453)
!13455 = !DILocation(line: 4342, column: 13, scope: !13456)
!13456 = distinct !DILexicalBlock(scope: !13453, file: !1, line: 4342, column: 3)
!13457 = !DILocation(line: 4342, column: 17, scope: !13456)
!13458 = !DILocation(line: 4342, column: 22, scope: !13456)
!13459 = !DILocation(line: 4342, column: 28, scope: !13456)
!13460 = !DILocation(line: 4342, column: 11, scope: !13456)
!13461 = !DILocation(line: 4342, column: 8, scope: !13456)
!13462 = !DILocation(line: 4342, column: 35, scope: !13463)
!13463 = distinct !DILexicalBlock(scope: !13456, file: !1, line: 4342, column: 3)
!13464 = !DILocation(line: 4342, column: 3, scope: !13456)
!13465 = !DILocalVariable(name: "fp", scope: !13466, file: !1, line: 4343, type: !1325)
!13466 = distinct !DILexicalBlock(scope: !13463, file: !1, line: 4342, column: 54)
!13467 = !DILocation(line: 4343, column: 11, scope: !13466)
!13468 = !DILocation(line: 4343, column: 16, scope: !13466)
!13469 = !DILocation(line: 4343, column: 20, scope: !13466)
!13470 = !DILocation(line: 4344, column: 13, scope: !13471)
!13471 = distinct !DILexicalBlock(scope: !13466, file: !1, line: 4344, column: 4)
!13472 = !DILocation(line: 4344, column: 17, scope: !13471)
!13473 = !DILocation(line: 4344, column: 11, scope: !13471)
!13474 = !DILocation(line: 4344, column: 9, scope: !13471)
!13475 = !DILocation(line: 4344, column: 27, scope: !13476)
!13476 = distinct !DILexicalBlock(scope: !13471, file: !1, line: 4344, column: 4)
!13477 = !DILocation(line: 4344, column: 4, scope: !13471)
!13478 = !DILocation(line: 4345, column: 15, scope: !13479)
!13479 = distinct !DILexicalBlock(scope: !13476, file: !1, line: 4344, column: 40)
!13480 = !DILocation(line: 4345, column: 20, scope: !13479)
!13481 = !DILocation(line: 4345, column: 5, scope: !13479)
!13482 = !DILocation(line: 4346, column: 4, scope: !13479)
!13483 = !DILocation(line: 4344, column: 34, scope: !13476)
!13484 = !DILocation(line: 4344, column: 4, scope: !13476)
!13485 = distinct !{!13485, !13477, !13486}
!13486 = !DILocation(line: 4346, column: 4, scope: !13471)
!13487 = !DILocation(line: 4347, column: 3, scope: !13466)
!13488 = !DILocation(line: 4342, column: 44, scope: !13463)
!13489 = !DILocation(line: 4342, column: 48, scope: !13463)
!13490 = !DILocation(line: 4342, column: 42, scope: !13463)
!13491 = !DILocation(line: 4342, column: 3, scope: !13463)
!13492 = distinct !{!13492, !13464, !13493}
!13493 = !DILocation(line: 4347, column: 3, scope: !13456)
!13494 = !DILocation(line: 4348, column: 2, scope: !13453)
!13495 = !DILocation(line: 4349, column: 1, scope: !13344)
!13496 = distinct !DISubprogram(name: "BKE_curve_transform", scope: !1, file: !1, line: 4351, type: !13497, scopeLine: 4352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!13497 = !DISubroutineType(types: !13498)
!13498 = !{null, !114, !13347, !551}
!13499 = !DILocalVariable(name: "cu", arg: 1, scope: !13496, file: !1, line: 4351, type: !114)
!13500 = !DILocation(line: 4351, column: 33, scope: !13496)
!13501 = !DILocalVariable(name: "mat", arg: 2, scope: !13496, file: !1, line: 4351, type: !13347)
!13502 = !DILocation(line: 4351, column: 43, scope: !13496)
!13503 = !DILocalVariable(name: "do_keys", arg: 3, scope: !13496, file: !1, line: 4351, type: !551)
!13504 = !DILocation(line: 4351, column: 59, scope: !13496)
!13505 = !DILocalVariable(name: "unit_scale", scope: !13496, file: !1, line: 4353, type: !128)
!13506 = !DILocation(line: 4353, column: 8, scope: !13496)
!13507 = !DILocation(line: 4353, column: 35, scope: !13496)
!13508 = !DILocation(line: 4353, column: 21, scope: !13496)
!13509 = !DILocation(line: 4354, column: 25, scope: !13496)
!13510 = !DILocation(line: 4354, column: 29, scope: !13496)
!13511 = !DILocation(line: 4354, column: 34, scope: !13496)
!13512 = !DILocation(line: 4354, column: 43, scope: !13496)
!13513 = !DILocation(line: 4354, column: 2, scope: !13496)
!13514 = !DILocation(line: 4355, column: 1, scope: !13496)
!13515 = distinct !DISubprogram(name: "BKE_curve_translate", scope: !1, file: !1, line: 4357, type: !13516, scopeLine: 4358, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!13516 = !DISubroutineType(types: !13517)
!13517 = !{null, !114, !1325, !551}
!13518 = !DILocalVariable(name: "cu", arg: 1, scope: !13515, file: !1, line: 4357, type: !114)
!13519 = !DILocation(line: 4357, column: 33, scope: !13515)
!13520 = !DILocalVariable(name: "offset", arg: 2, scope: !13515, file: !1, line: 4357, type: !1325)
!13521 = !DILocation(line: 4357, column: 43, scope: !13515)
!13522 = !DILocalVariable(name: "do_keys", arg: 3, scope: !13515, file: !1, line: 4357, type: !551)
!13523 = !DILocation(line: 4357, column: 59, scope: !13515)
!13524 = !DILocalVariable(name: "nurb_lb", scope: !13515, file: !1, line: 4359, type: !1602)
!13525 = !DILocation(line: 4359, column: 12, scope: !13515)
!13526 = !DILocation(line: 4359, column: 42, scope: !13515)
!13527 = !DILocation(line: 4359, column: 22, scope: !13515)
!13528 = !DILocalVariable(name: "nu", scope: !13515, file: !1, line: 4360, type: !1782)
!13529 = !DILocation(line: 4360, column: 8, scope: !13515)
!13530 = !DILocalVariable(name: "i", scope: !13515, file: !1, line: 4361, type: !79)
!13531 = !DILocation(line: 4361, column: 6, scope: !13515)
!13532 = !DILocation(line: 4363, column: 12, scope: !13533)
!13533 = distinct !DILexicalBlock(scope: !13515, file: !1, line: 4363, column: 2)
!13534 = !DILocation(line: 4363, column: 21, scope: !13533)
!13535 = !DILocation(line: 4363, column: 10, scope: !13533)
!13536 = !DILocation(line: 4363, column: 7, scope: !13533)
!13537 = !DILocation(line: 4363, column: 28, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13533, file: !1, line: 4363, column: 2)
!13539 = !DILocation(line: 4363, column: 2, scope: !13533)
!13540 = !DILocalVariable(name: "bezt", scope: !13541, file: !1, line: 4364, type: !1817)
!13541 = distinct !DILexicalBlock(scope: !13538, file: !1, line: 4363, column: 47)
!13542 = !DILocation(line: 4364, column: 14, scope: !13541)
!13543 = !DILocalVariable(name: "bp", scope: !13541, file: !1, line: 4365, type: !1805)
!13544 = !DILocation(line: 4365, column: 11, scope: !13541)
!13545 = !DILocation(line: 4367, column: 7, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13541, file: !1, line: 4367, column: 7)
!13547 = !DILocation(line: 4367, column: 11, scope: !13546)
!13548 = !DILocation(line: 4367, column: 16, scope: !13546)
!13549 = !DILocation(line: 4367, column: 7, scope: !13541)
!13550 = !DILocation(line: 4368, column: 8, scope: !13551)
!13551 = distinct !DILexicalBlock(scope: !13546, file: !1, line: 4367, column: 30)
!13552 = !DILocation(line: 4368, column: 12, scope: !13551)
!13553 = !DILocation(line: 4368, column: 6, scope: !13551)
!13554 = !DILocation(line: 4369, column: 16, scope: !13555)
!13555 = distinct !DILexicalBlock(scope: !13551, file: !1, line: 4369, column: 4)
!13556 = !DILocation(line: 4369, column: 20, scope: !13555)
!13557 = !DILocation(line: 4369, column: 14, scope: !13555)
!13558 = !DILocation(line: 4369, column: 9, scope: !13555)
!13559 = !DILocation(line: 4369, column: 27, scope: !13560)
!13560 = distinct !DILexicalBlock(scope: !13555, file: !1, line: 4369, column: 4)
!13561 = !DILocation(line: 4369, column: 4, scope: !13555)
!13562 = !DILocation(line: 4370, column: 15, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13560, file: !1, line: 4369, column: 39)
!13564 = !DILocation(line: 4370, column: 21, scope: !13563)
!13565 = !DILocation(line: 4370, column: 29, scope: !13563)
!13566 = !DILocation(line: 4370, column: 5, scope: !13563)
!13567 = !DILocation(line: 4371, column: 15, scope: !13563)
!13568 = !DILocation(line: 4371, column: 21, scope: !13563)
!13569 = !DILocation(line: 4371, column: 29, scope: !13563)
!13570 = !DILocation(line: 4371, column: 5, scope: !13563)
!13571 = !DILocation(line: 4372, column: 15, scope: !13563)
!13572 = !DILocation(line: 4372, column: 21, scope: !13563)
!13573 = !DILocation(line: 4372, column: 29, scope: !13563)
!13574 = !DILocation(line: 4372, column: 5, scope: !13563)
!13575 = !DILocation(line: 4373, column: 4, scope: !13563)
!13576 = !DILocation(line: 4369, column: 35, scope: !13560)
!13577 = !DILocation(line: 4369, column: 4, scope: !13560)
!13578 = distinct !{!13578, !13561, !13579}
!13579 = !DILocation(line: 4373, column: 4, scope: !13555)
!13580 = !DILocation(line: 4374, column: 3, scope: !13551)
!13581 = !DILocation(line: 4376, column: 8, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13546, file: !1, line: 4375, column: 8)
!13583 = !DILocation(line: 4376, column: 12, scope: !13582)
!13584 = !DILocation(line: 4376, column: 20, scope: !13582)
!13585 = !DILocation(line: 4376, column: 24, scope: !13582)
!13586 = !DILocation(line: 4376, column: 18, scope: !13582)
!13587 = !DILocation(line: 4376, column: 6, scope: !13582)
!13588 = !DILocation(line: 4377, column: 14, scope: !13589)
!13589 = distinct !DILexicalBlock(scope: !13582, file: !1, line: 4377, column: 4)
!13590 = !DILocation(line: 4377, column: 18, scope: !13589)
!13591 = !DILocation(line: 4377, column: 12, scope: !13589)
!13592 = !DILocation(line: 4377, column: 9, scope: !13589)
!13593 = !DILocation(line: 4377, column: 23, scope: !13594)
!13594 = distinct !DILexicalBlock(scope: !13589, file: !1, line: 4377, column: 4)
!13595 = !DILocation(line: 4377, column: 4, scope: !13589)
!13596 = !DILocation(line: 4378, column: 15, scope: !13597)
!13597 = distinct !DILexicalBlock(scope: !13594, file: !1, line: 4377, column: 33)
!13598 = !DILocation(line: 4378, column: 19, scope: !13597)
!13599 = !DILocation(line: 4378, column: 24, scope: !13597)
!13600 = !DILocation(line: 4378, column: 5, scope: !13597)
!13601 = !DILocation(line: 4379, column: 4, scope: !13597)
!13602 = !DILocation(line: 4377, column: 29, scope: !13594)
!13603 = !DILocation(line: 4377, column: 4, scope: !13594)
!13604 = distinct !{!13604, !13595, !13605}
!13605 = !DILocation(line: 4379, column: 4, scope: !13589)
!13606 = !DILocation(line: 4381, column: 2, scope: !13541)
!13607 = !DILocation(line: 4363, column: 37, scope: !13538)
!13608 = !DILocation(line: 4363, column: 41, scope: !13538)
!13609 = !DILocation(line: 4363, column: 35, scope: !13538)
!13610 = !DILocation(line: 4363, column: 2, scope: !13538)
!13611 = distinct !{!13611, !13539, !13612}
!13612 = !DILocation(line: 4381, column: 2, scope: !13533)
!13613 = !DILocation(line: 4383, column: 6, scope: !13614)
!13614 = distinct !DILexicalBlock(scope: !13515, file: !1, line: 4383, column: 6)
!13615 = !DILocation(line: 4383, column: 14, scope: !13614)
!13616 = !DILocation(line: 4383, column: 17, scope: !13614)
!13617 = !DILocation(line: 4383, column: 21, scope: !13614)
!13618 = !DILocation(line: 4383, column: 6, scope: !13515)
!13619 = !DILocalVariable(name: "kb", scope: !13620, file: !1, line: 4384, type: !1636)
!13620 = distinct !DILexicalBlock(scope: !13614, file: !1, line: 4383, column: 26)
!13621 = !DILocation(line: 4384, column: 13, scope: !13620)
!13622 = !DILocation(line: 4385, column: 13, scope: !13623)
!13623 = distinct !DILexicalBlock(scope: !13620, file: !1, line: 4385, column: 3)
!13624 = !DILocation(line: 4385, column: 17, scope: !13623)
!13625 = !DILocation(line: 4385, column: 22, scope: !13623)
!13626 = !DILocation(line: 4385, column: 28, scope: !13623)
!13627 = !DILocation(line: 4385, column: 11, scope: !13623)
!13628 = !DILocation(line: 4385, column: 8, scope: !13623)
!13629 = !DILocation(line: 4385, column: 35, scope: !13630)
!13630 = distinct !DILexicalBlock(scope: !13623, file: !1, line: 4385, column: 3)
!13631 = !DILocation(line: 4385, column: 3, scope: !13623)
!13632 = !DILocalVariable(name: "fp", scope: !13633, file: !1, line: 4386, type: !1325)
!13633 = distinct !DILexicalBlock(scope: !13630, file: !1, line: 4385, column: 54)
!13634 = !DILocation(line: 4386, column: 11, scope: !13633)
!13635 = !DILocation(line: 4386, column: 16, scope: !13633)
!13636 = !DILocation(line: 4386, column: 20, scope: !13633)
!13637 = !DILocation(line: 4387, column: 13, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13633, file: !1, line: 4387, column: 4)
!13639 = !DILocation(line: 4387, column: 17, scope: !13638)
!13640 = !DILocation(line: 4387, column: 11, scope: !13638)
!13641 = !DILocation(line: 4387, column: 9, scope: !13638)
!13642 = !DILocation(line: 4387, column: 27, scope: !13643)
!13643 = distinct !DILexicalBlock(scope: !13638, file: !1, line: 4387, column: 4)
!13644 = !DILocation(line: 4387, column: 4, scope: !13638)
!13645 = !DILocation(line: 4388, column: 15, scope: !13646)
!13646 = distinct !DILexicalBlock(scope: !13643, file: !1, line: 4387, column: 40)
!13647 = !DILocation(line: 4388, column: 19, scope: !13646)
!13648 = !DILocation(line: 4388, column: 5, scope: !13646)
!13649 = !DILocation(line: 4389, column: 4, scope: !13646)
!13650 = !DILocation(line: 4387, column: 34, scope: !13643)
!13651 = !DILocation(line: 4387, column: 4, scope: !13643)
!13652 = distinct !{!13652, !13644, !13653}
!13653 = !DILocation(line: 4389, column: 4, scope: !13638)
!13654 = !DILocation(line: 4390, column: 3, scope: !13633)
!13655 = !DILocation(line: 4385, column: 44, scope: !13630)
!13656 = !DILocation(line: 4385, column: 48, scope: !13630)
!13657 = !DILocation(line: 4385, column: 42, scope: !13630)
!13658 = !DILocation(line: 4385, column: 3, scope: !13630)
!13659 = distinct !{!13659, !13631, !13660}
!13660 = !DILocation(line: 4390, column: 3, scope: !13623)
!13661 = !DILocation(line: 4391, column: 2, scope: !13620)
!13662 = !DILocation(line: 4392, column: 1, scope: !13515)
!13663 = distinct !DISubprogram(name: "BKE_curve_material_index_remove", scope: !1, file: !1, line: 4394, type: !13664, scopeLine: 4395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!13664 = !DISubroutineType(types: !13665)
!13665 = !{null, !114, !79}
!13666 = !DILocalVariable(name: "cu", arg: 1, scope: !13663, file: !1, line: 4394, type: !114)
!13667 = !DILocation(line: 4394, column: 45, scope: !13663)
!13668 = !DILocalVariable(name: "index", arg: 2, scope: !13663, file: !1, line: 4394, type: !79)
!13669 = !DILocation(line: 4394, column: 53, scope: !13663)
!13670 = !DILocalVariable(name: "curvetype", scope: !13663, file: !1, line: 4396, type: !3269)
!13671 = !DILocation(line: 4396, column: 12, scope: !13663)
!13672 = !DILocation(line: 4396, column: 43, scope: !13663)
!13673 = !DILocation(line: 4396, column: 24, scope: !13663)
!13674 = !DILocation(line: 4398, column: 6, scope: !13675)
!13675 = distinct !DILexicalBlock(scope: !13663, file: !1, line: 4398, column: 6)
!13676 = !DILocation(line: 4398, column: 16, scope: !13675)
!13677 = !DILocation(line: 4398, column: 6, scope: !13663)
!13678 = !DILocalVariable(name: "info", scope: !13679, file: !1, line: 4399, type: !1721)
!13679 = distinct !DILexicalBlock(scope: !13675, file: !1, line: 4398, column: 28)
!13680 = !DILocation(line: 4399, column: 20, scope: !13679)
!13681 = !DILocation(line: 4399, column: 27, scope: !13679)
!13682 = !DILocation(line: 4399, column: 31, scope: !13679)
!13683 = !DILocalVariable(name: "i", scope: !13679, file: !1, line: 4400, type: !79)
!13684 = !DILocation(line: 4400, column: 7, scope: !13679)
!13685 = !DILocation(line: 4401, column: 12, scope: !13686)
!13686 = distinct !DILexicalBlock(scope: !13679, file: !1, line: 4401, column: 3)
!13687 = !DILocation(line: 4401, column: 16, scope: !13686)
!13688 = !DILocation(line: 4401, column: 26, scope: !13686)
!13689 = !DILocation(line: 4401, column: 10, scope: !13686)
!13690 = !DILocation(line: 4401, column: 8, scope: !13686)
!13691 = !DILocation(line: 4401, column: 31, scope: !13692)
!13692 = distinct !DILexicalBlock(scope: !13686, file: !1, line: 4401, column: 3)
!13693 = !DILocation(line: 4401, column: 33, scope: !13692)
!13694 = !DILocation(line: 4401, column: 3, scope: !13686)
!13695 = !DILocation(line: 4402, column: 8, scope: !13696)
!13696 = distinct !DILexicalBlock(scope: !13697, file: !1, line: 4402, column: 8)
!13697 = distinct !DILexicalBlock(scope: !13692, file: !1, line: 4401, column: 52)
!13698 = !DILocation(line: 4402, column: 14, scope: !13696)
!13699 = !DILocation(line: 4402, column: 21, scope: !13696)
!13700 = !DILocation(line: 4402, column: 24, scope: !13696)
!13701 = !DILocation(line: 4402, column: 30, scope: !13696)
!13702 = !DILocation(line: 4402, column: 40, scope: !13696)
!13703 = !DILocation(line: 4402, column: 37, scope: !13696)
!13704 = !DILocation(line: 4402, column: 8, scope: !13697)
!13705 = !DILocation(line: 4403, column: 5, scope: !13706)
!13706 = distinct !DILexicalBlock(scope: !13696, file: !1, line: 4402, column: 47)
!13707 = !DILocation(line: 4403, column: 11, scope: !13706)
!13708 = !DILocation(line: 4403, column: 17, scope: !13706)
!13709 = !DILocation(line: 4404, column: 4, scope: !13706)
!13710 = !DILocation(line: 4405, column: 3, scope: !13697)
!13711 = !DILocation(line: 4401, column: 40, scope: !13692)
!13712 = !DILocation(line: 4401, column: 48, scope: !13692)
!13713 = !DILocation(line: 4401, column: 3, scope: !13692)
!13714 = distinct !{!13714, !13694, !13715}
!13715 = !DILocation(line: 4405, column: 3, scope: !13686)
!13716 = !DILocation(line: 4406, column: 2, scope: !13679)
!13717 = !DILocalVariable(name: "nu", scope: !13718, file: !1, line: 4408, type: !1782)
!13718 = distinct !DILexicalBlock(scope: !13675, file: !1, line: 4407, column: 7)
!13719 = !DILocation(line: 4408, column: 9, scope: !13718)
!13720 = !DILocation(line: 4410, column: 13, scope: !13721)
!13721 = distinct !DILexicalBlock(scope: !13718, file: !1, line: 4410, column: 3)
!13722 = !DILocation(line: 4410, column: 17, scope: !13721)
!13723 = !DILocation(line: 4410, column: 22, scope: !13721)
!13724 = !DILocation(line: 4410, column: 11, scope: !13721)
!13725 = !DILocation(line: 4410, column: 8, scope: !13721)
!13726 = !DILocation(line: 4410, column: 29, scope: !13727)
!13727 = distinct !DILexicalBlock(scope: !13721, file: !1, line: 4410, column: 3)
!13728 = !DILocation(line: 4410, column: 3, scope: !13721)
!13729 = !DILocation(line: 4411, column: 8, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13731, file: !1, line: 4411, column: 8)
!13731 = distinct !DILexicalBlock(scope: !13727, file: !1, line: 4410, column: 48)
!13732 = !DILocation(line: 4411, column: 12, scope: !13730)
!13733 = !DILocation(line: 4411, column: 19, scope: !13730)
!13734 = !DILocation(line: 4411, column: 22, scope: !13730)
!13735 = !DILocation(line: 4411, column: 26, scope: !13730)
!13736 = !DILocation(line: 4411, column: 36, scope: !13730)
!13737 = !DILocation(line: 4411, column: 33, scope: !13730)
!13738 = !DILocation(line: 4411, column: 8, scope: !13731)
!13739 = !DILocation(line: 4412, column: 5, scope: !13740)
!13740 = distinct !DILexicalBlock(scope: !13730, file: !1, line: 4411, column: 43)
!13741 = !DILocation(line: 4412, column: 9, scope: !13740)
!13742 = !DILocation(line: 4412, column: 15, scope: !13740)
!13743 = !DILocation(line: 4413, column: 9, scope: !13744)
!13744 = distinct !DILexicalBlock(scope: !13740, file: !1, line: 4413, column: 9)
!13745 = !DILocation(line: 4413, column: 19, scope: !13744)
!13746 = !DILocation(line: 4413, column: 9, scope: !13740)
!13747 = !DILocation(line: 4414, column: 6, scope: !13748)
!13748 = distinct !DILexicalBlock(scope: !13744, file: !1, line: 4413, column: 32)
!13749 = !DILocation(line: 4414, column: 10, scope: !13748)
!13750 = !DILocation(line: 4414, column: 17, scope: !13748)
!13751 = !DILocation(line: 4415, column: 5, scope: !13748)
!13752 = !DILocation(line: 4416, column: 4, scope: !13740)
!13753 = !DILocation(line: 4417, column: 3, scope: !13731)
!13754 = !DILocation(line: 4410, column: 38, scope: !13727)
!13755 = !DILocation(line: 4410, column: 42, scope: !13727)
!13756 = !DILocation(line: 4410, column: 36, scope: !13727)
!13757 = !DILocation(line: 4410, column: 3, scope: !13727)
!13758 = distinct !{!13758, !13728, !13759}
!13759 = !DILocation(line: 4417, column: 3, scope: !13721)
!13760 = !DILocation(line: 4419, column: 1, scope: !13663)
!13761 = distinct !DISubprogram(name: "BKE_curve_material_index_clear", scope: !1, file: !1, line: 4421, type: !1847, scopeLine: 4422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!13762 = !DILocalVariable(name: "cu", arg: 1, scope: !13761, file: !1, line: 4421, type: !114)
!13763 = !DILocation(line: 4421, column: 44, scope: !13761)
!13764 = !DILocalVariable(name: "curvetype", scope: !13761, file: !1, line: 4423, type: !3269)
!13765 = !DILocation(line: 4423, column: 12, scope: !13761)
!13766 = !DILocation(line: 4423, column: 43, scope: !13761)
!13767 = !DILocation(line: 4423, column: 24, scope: !13761)
!13768 = !DILocation(line: 4425, column: 6, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13761, file: !1, line: 4425, column: 6)
!13770 = !DILocation(line: 4425, column: 16, scope: !13769)
!13771 = !DILocation(line: 4425, column: 6, scope: !13761)
!13772 = !DILocalVariable(name: "info", scope: !13773, file: !1, line: 4426, type: !1721)
!13773 = distinct !DILexicalBlock(scope: !13769, file: !1, line: 4425, column: 28)
!13774 = !DILocation(line: 4426, column: 20, scope: !13773)
!13775 = !DILocation(line: 4426, column: 27, scope: !13773)
!13776 = !DILocation(line: 4426, column: 31, scope: !13773)
!13777 = !DILocalVariable(name: "i", scope: !13773, file: !1, line: 4427, type: !79)
!13778 = !DILocation(line: 4427, column: 7, scope: !13773)
!13779 = !DILocation(line: 4428, column: 12, scope: !13780)
!13780 = distinct !DILexicalBlock(scope: !13773, file: !1, line: 4428, column: 3)
!13781 = !DILocation(line: 4428, column: 16, scope: !13780)
!13782 = !DILocation(line: 4428, column: 26, scope: !13780)
!13783 = !DILocation(line: 4428, column: 10, scope: !13780)
!13784 = !DILocation(line: 4428, column: 8, scope: !13780)
!13785 = !DILocation(line: 4428, column: 31, scope: !13786)
!13786 = distinct !DILexicalBlock(scope: !13780, file: !1, line: 4428, column: 3)
!13787 = !DILocation(line: 4428, column: 33, scope: !13786)
!13788 = !DILocation(line: 4428, column: 3, scope: !13780)
!13789 = !DILocation(line: 4429, column: 4, scope: !13790)
!13790 = distinct !DILexicalBlock(scope: !13786, file: !1, line: 4428, column: 52)
!13791 = !DILocation(line: 4429, column: 10, scope: !13790)
!13792 = !DILocation(line: 4429, column: 17, scope: !13790)
!13793 = !DILocation(line: 4430, column: 3, scope: !13790)
!13794 = !DILocation(line: 4428, column: 40, scope: !13786)
!13795 = !DILocation(line: 4428, column: 48, scope: !13786)
!13796 = !DILocation(line: 4428, column: 3, scope: !13786)
!13797 = distinct !{!13797, !13788, !13798}
!13798 = !DILocation(line: 4430, column: 3, scope: !13780)
!13799 = !DILocation(line: 4431, column: 2, scope: !13773)
!13800 = !DILocalVariable(name: "nu", scope: !13801, file: !1, line: 4433, type: !1782)
!13801 = distinct !DILexicalBlock(scope: !13769, file: !1, line: 4432, column: 7)
!13802 = !DILocation(line: 4433, column: 9, scope: !13801)
!13803 = !DILocation(line: 4435, column: 13, scope: !13804)
!13804 = distinct !DILexicalBlock(scope: !13801, file: !1, line: 4435, column: 3)
!13805 = !DILocation(line: 4435, column: 17, scope: !13804)
!13806 = !DILocation(line: 4435, column: 22, scope: !13804)
!13807 = !DILocation(line: 4435, column: 11, scope: !13804)
!13808 = !DILocation(line: 4435, column: 8, scope: !13804)
!13809 = !DILocation(line: 4435, column: 29, scope: !13810)
!13810 = distinct !DILexicalBlock(scope: !13804, file: !1, line: 4435, column: 3)
!13811 = !DILocation(line: 4435, column: 3, scope: !13804)
!13812 = !DILocation(line: 4436, column: 4, scope: !13813)
!13813 = distinct !DILexicalBlock(scope: !13810, file: !1, line: 4435, column: 48)
!13814 = !DILocation(line: 4436, column: 8, scope: !13813)
!13815 = !DILocation(line: 4436, column: 15, scope: !13813)
!13816 = !DILocation(line: 4437, column: 8, scope: !13817)
!13817 = distinct !DILexicalBlock(scope: !13813, file: !1, line: 4437, column: 8)
!13818 = !DILocation(line: 4437, column: 18, scope: !13817)
!13819 = !DILocation(line: 4437, column: 8, scope: !13813)
!13820 = !DILocation(line: 4438, column: 5, scope: !13821)
!13821 = distinct !DILexicalBlock(scope: !13817, file: !1, line: 4437, column: 31)
!13822 = !DILocation(line: 4438, column: 9, scope: !13821)
!13823 = !DILocation(line: 4438, column: 17, scope: !13821)
!13824 = !DILocation(line: 4439, column: 4, scope: !13821)
!13825 = !DILocation(line: 4440, column: 3, scope: !13813)
!13826 = !DILocation(line: 4435, column: 38, scope: !13810)
!13827 = !DILocation(line: 4435, column: 42, scope: !13810)
!13828 = !DILocation(line: 4435, column: 36, scope: !13810)
!13829 = !DILocation(line: 4435, column: 3, scope: !13810)
!13830 = distinct !{!13830, !13811, !13831}
!13831 = !DILocation(line: 4440, column: 3, scope: !13804)
!13832 = !DILocation(line: 4442, column: 1, scope: !13761)
!13833 = distinct !DISubprogram(name: "BKE_curve_material_index_validate", scope: !1, file: !1, line: 4444, type: !13834, scopeLine: 4445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!13834 = !DISubroutineType(types: !13835)
!13835 = !{!79, !114}
!13836 = !DILocalVariable(name: "cu", arg: 1, scope: !13833, file: !1, line: 4444, type: !114)
!13837 = !DILocation(line: 4444, column: 46, scope: !13833)
!13838 = !DILocalVariable(name: "curvetype", scope: !13833, file: !1, line: 4446, type: !3269)
!13839 = !DILocation(line: 4446, column: 12, scope: !13833)
!13840 = !DILocation(line: 4446, column: 43, scope: !13833)
!13841 = !DILocation(line: 4446, column: 24, scope: !13833)
!13842 = !DILocalVariable(name: "is_valid", scope: !13833, file: !1, line: 4447, type: !551)
!13843 = !DILocation(line: 4447, column: 7, scope: !13833)
!13844 = !DILocation(line: 4449, column: 6, scope: !13845)
!13845 = distinct !DILexicalBlock(scope: !13833, file: !1, line: 4449, column: 6)
!13846 = !DILocation(line: 4449, column: 16, scope: !13845)
!13847 = !DILocation(line: 4449, column: 6, scope: !13833)
!13848 = !DILocalVariable(name: "info", scope: !13849, file: !1, line: 4450, type: !13850)
!13849 = distinct !DILexicalBlock(scope: !13845, file: !1, line: 4449, column: 28)
!13850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13851, size: 64)
!13851 = !DIDerivedType(tag: DW_TAG_typedef, name: "CharInfo", file: !19, line: 174, baseType: !1722)
!13852 = !DILocation(line: 4450, column: 13, scope: !13849)
!13853 = !DILocation(line: 4450, column: 20, scope: !13849)
!13854 = !DILocation(line: 4450, column: 24, scope: !13849)
!13855 = !DILocalVariable(name: "max_idx", scope: !13849, file: !1, line: 4451, type: !3269)
!13856 = !DILocation(line: 4451, column: 13, scope: !13849)
!13857 = !DILocation(line: 4451, column: 33, scope: !13849)
!13858 = !DILocation(line: 4451, column: 37, scope: !13849)
!13859 = !DILocation(line: 4451, column: 23, scope: !13849)
!13860 = !DILocalVariable(name: "i", scope: !13849, file: !1, line: 4452, type: !79)
!13861 = !DILocation(line: 4452, column: 7, scope: !13849)
!13862 = !DILocation(line: 4453, column: 12, scope: !13863)
!13863 = distinct !DILexicalBlock(scope: !13849, file: !1, line: 4453, column: 3)
!13864 = !DILocation(line: 4453, column: 16, scope: !13863)
!13865 = !DILocation(line: 4453, column: 26, scope: !13863)
!13866 = !DILocation(line: 4453, column: 10, scope: !13863)
!13867 = !DILocation(line: 4453, column: 8, scope: !13863)
!13868 = !DILocation(line: 4453, column: 31, scope: !13869)
!13869 = distinct !DILexicalBlock(scope: !13863, file: !1, line: 4453, column: 3)
!13870 = !DILocation(line: 4453, column: 33, scope: !13869)
!13871 = !DILocation(line: 4453, column: 3, scope: !13863)
!13872 = !DILocation(line: 4454, column: 8, scope: !13873)
!13873 = distinct !DILexicalBlock(scope: !13874, file: !1, line: 4454, column: 8)
!13874 = distinct !DILexicalBlock(scope: !13869, file: !1, line: 4453, column: 52)
!13875 = !DILocation(line: 4454, column: 14, scope: !13873)
!13876 = !DILocation(line: 4454, column: 23, scope: !13873)
!13877 = !DILocation(line: 4454, column: 21, scope: !13873)
!13878 = !DILocation(line: 4454, column: 8, scope: !13874)
!13879 = !DILocation(line: 4455, column: 5, scope: !13880)
!13880 = distinct !DILexicalBlock(scope: !13873, file: !1, line: 4454, column: 32)
!13881 = !DILocation(line: 4455, column: 11, scope: !13880)
!13882 = !DILocation(line: 4455, column: 18, scope: !13880)
!13883 = !DILocation(line: 4456, column: 14, scope: !13880)
!13884 = !DILocation(line: 4457, column: 4, scope: !13880)
!13885 = !DILocation(line: 4458, column: 3, scope: !13874)
!13886 = !DILocation(line: 4453, column: 40, scope: !13869)
!13887 = !DILocation(line: 4453, column: 48, scope: !13869)
!13888 = !DILocation(line: 4453, column: 3, scope: !13869)
!13889 = distinct !{!13889, !13871, !13890}
!13890 = !DILocation(line: 4458, column: 3, scope: !13863)
!13891 = !DILocation(line: 4459, column: 2, scope: !13849)
!13892 = !DILocalVariable(name: "nu", scope: !13893, file: !1, line: 4461, type: !1782)
!13893 = distinct !DILexicalBlock(scope: !13845, file: !1, line: 4460, column: 7)
!13894 = !DILocation(line: 4461, column: 9, scope: !13893)
!13895 = !DILocalVariable(name: "max_idx", scope: !13893, file: !1, line: 4462, type: !3269)
!13896 = !DILocation(line: 4462, column: 13, scope: !13893)
!13897 = !DILocation(line: 4462, column: 33, scope: !13893)
!13898 = !DILocation(line: 4462, column: 37, scope: !13893)
!13899 = !DILocation(line: 4462, column: 44, scope: !13893)
!13900 = !DILocation(line: 4462, column: 23, scope: !13893)
!13901 = !DILocation(line: 4463, column: 13, scope: !13902)
!13902 = distinct !DILexicalBlock(scope: !13893, file: !1, line: 4463, column: 3)
!13903 = !DILocation(line: 4463, column: 17, scope: !13902)
!13904 = !DILocation(line: 4463, column: 22, scope: !13902)
!13905 = !DILocation(line: 4463, column: 11, scope: !13902)
!13906 = !DILocation(line: 4463, column: 8, scope: !13902)
!13907 = !DILocation(line: 4463, column: 29, scope: !13908)
!13908 = distinct !DILexicalBlock(scope: !13902, file: !1, line: 4463, column: 3)
!13909 = !DILocation(line: 4463, column: 3, scope: !13902)
!13910 = !DILocation(line: 4464, column: 8, scope: !13911)
!13911 = distinct !DILexicalBlock(scope: !13912, file: !1, line: 4464, column: 8)
!13912 = distinct !DILexicalBlock(scope: !13908, file: !1, line: 4463, column: 48)
!13913 = !DILocation(line: 4464, column: 12, scope: !13911)
!13914 = !DILocation(line: 4464, column: 21, scope: !13911)
!13915 = !DILocation(line: 4464, column: 19, scope: !13911)
!13916 = !DILocation(line: 4464, column: 8, scope: !13912)
!13917 = !DILocation(line: 4465, column: 5, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13911, file: !1, line: 4464, column: 30)
!13919 = !DILocation(line: 4465, column: 9, scope: !13918)
!13920 = !DILocation(line: 4465, column: 16, scope: !13918)
!13921 = !DILocation(line: 4466, column: 9, scope: !13922)
!13922 = distinct !DILexicalBlock(scope: !13918, file: !1, line: 4466, column: 9)
!13923 = !DILocation(line: 4466, column: 19, scope: !13922)
!13924 = !DILocation(line: 4466, column: 9, scope: !13918)
!13925 = !DILocation(line: 4467, column: 6, scope: !13926)
!13926 = distinct !DILexicalBlock(scope: !13922, file: !1, line: 4466, column: 32)
!13927 = !DILocation(line: 4467, column: 10, scope: !13926)
!13928 = !DILocation(line: 4467, column: 18, scope: !13926)
!13929 = !DILocation(line: 4468, column: 5, scope: !13926)
!13930 = !DILocation(line: 4469, column: 14, scope: !13918)
!13931 = !DILocation(line: 4470, column: 4, scope: !13918)
!13932 = !DILocation(line: 4471, column: 3, scope: !13912)
!13933 = !DILocation(line: 4463, column: 38, scope: !13908)
!13934 = !DILocation(line: 4463, column: 42, scope: !13908)
!13935 = !DILocation(line: 4463, column: 36, scope: !13908)
!13936 = !DILocation(line: 4463, column: 3, scope: !13908)
!13937 = distinct !{!13937, !13909, !13938}
!13938 = !DILocation(line: 4471, column: 3, scope: !13902)
!13939 = !DILocation(line: 4474, column: 7, scope: !13940)
!13940 = distinct !DILexicalBlock(scope: !13833, file: !1, line: 4474, column: 6)
!13941 = !DILocation(line: 4474, column: 6, scope: !13833)
!13942 = !DILocation(line: 4475, column: 22, scope: !13943)
!13943 = distinct !DILexicalBlock(scope: !13940, file: !1, line: 4474, column: 17)
!13944 = !DILocation(line: 4475, column: 26, scope: !13943)
!13945 = !DILocation(line: 4475, column: 3, scope: !13943)
!13946 = !DILocation(line: 4476, column: 3, scope: !13943)
!13947 = !DILocation(line: 4479, column: 3, scope: !13948)
!13948 = distinct !DILexicalBlock(scope: !13940, file: !1, line: 4478, column: 7)
!13949 = !DILocation(line: 4481, column: 1, scope: !13833)
!13950 = distinct !DISubprogram(name: "BKE_curve_rect_from_textbox", scope: !1, file: !1, line: 4483, type: !13951, scopeLine: 4484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!13951 = !DISubroutineType(types: !13952)
!13952 = !{null, !13953, !13955, !13957}
!13953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13954, size: 64)
!13954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !116)
!13955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13956, size: 64)
!13956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1766)
!13957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!13958 = !DILocalVariable(name: "cu", arg: 1, scope: !13950, file: !1, line: 4483, type: !13953)
!13959 = !DILocation(line: 4483, column: 54, scope: !13950)
!13960 = !DILocalVariable(name: "tb", arg: 2, scope: !13950, file: !1, line: 4483, type: !13955)
!13961 = !DILocation(line: 4483, column: 80, scope: !13950)
!13962 = !DILocalVariable(name: "r_rect", arg: 3, scope: !13950, file: !1, line: 4483, type: !13957)
!13963 = !DILocation(line: 4483, column: 97, scope: !13950)
!13964 = !DILocation(line: 4485, column: 17, scope: !13950)
!13965 = !DILocation(line: 4485, column: 21, scope: !13950)
!13966 = !DILocation(line: 4485, column: 27, scope: !13950)
!13967 = !DILocation(line: 4485, column: 31, scope: !13950)
!13968 = !DILocation(line: 4485, column: 25, scope: !13950)
!13969 = !DILocation(line: 4485, column: 2, scope: !13950)
!13970 = !DILocation(line: 4485, column: 10, scope: !13950)
!13971 = !DILocation(line: 4485, column: 15, scope: !13950)
!13972 = !DILocation(line: 4486, column: 17, scope: !13950)
!13973 = !DILocation(line: 4486, column: 21, scope: !13950)
!13974 = !DILocation(line: 4486, column: 27, scope: !13950)
!13975 = !DILocation(line: 4486, column: 31, scope: !13950)
!13976 = !DILocation(line: 4486, column: 25, scope: !13950)
!13977 = !DILocation(line: 4486, column: 35, scope: !13950)
!13978 = !DILocation(line: 4486, column: 39, scope: !13950)
!13979 = !DILocation(line: 4486, column: 33, scope: !13950)
!13980 = !DILocation(line: 4486, column: 2, scope: !13950)
!13981 = !DILocation(line: 4486, column: 10, scope: !13950)
!13982 = !DILocation(line: 4486, column: 15, scope: !13950)
!13983 = !DILocation(line: 4488, column: 17, scope: !13950)
!13984 = !DILocation(line: 4488, column: 25, scope: !13950)
!13985 = !DILocation(line: 4488, column: 32, scope: !13950)
!13986 = !DILocation(line: 4488, column: 36, scope: !13950)
!13987 = !DILocation(line: 4488, column: 30, scope: !13950)
!13988 = !DILocation(line: 4488, column: 2, scope: !13950)
!13989 = !DILocation(line: 4488, column: 10, scope: !13950)
!13990 = !DILocation(line: 4488, column: 15, scope: !13950)
!13991 = !DILocation(line: 4489, column: 17, scope: !13950)
!13992 = !DILocation(line: 4489, column: 25, scope: !13950)
!13993 = !DILocation(line: 4489, column: 32, scope: !13950)
!13994 = !DILocation(line: 4489, column: 36, scope: !13950)
!13995 = !DILocation(line: 4489, column: 30, scope: !13950)
!13996 = !DILocation(line: 4489, column: 2, scope: !13950)
!13997 = !DILocation(line: 4489, column: 10, scope: !13950)
!13998 = !DILocation(line: 4489, column: 15, scope: !13950)
!13999 = !DILocation(line: 4490, column: 1, scope: !13950)
!14000 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !2341, file: !2341, line: 788, type: !14001, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!14001 = !DISubroutineType(types: !14002)
!14002 = !{!128, !1325, !3191}
!14003 = !DILocalVariable(name: "r", arg: 1, scope: !14000, file: !2341, line: 788, type: !1325)
!14004 = !DILocation(line: 788, column: 37, scope: !14000)
!14005 = !DILocalVariable(name: "a", arg: 2, scope: !14000, file: !2341, line: 788, type: !3191)
!14006 = !DILocation(line: 788, column: 55, scope: !14000)
!14007 = !DILocalVariable(name: "d", scope: !14000, file: !2341, line: 790, type: !128)
!14008 = !DILocation(line: 790, column: 8, scope: !14000)
!14009 = !DILocation(line: 790, column: 21, scope: !14000)
!14010 = !DILocation(line: 790, column: 24, scope: !14000)
!14011 = !DILocation(line: 790, column: 12, scope: !14000)
!14012 = !DILocation(line: 794, column: 6, scope: !14013)
!14013 = distinct !DILexicalBlock(scope: !14000, file: !2341, line: 794, column: 6)
!14014 = !DILocation(line: 794, column: 8, scope: !14013)
!14015 = !DILocation(line: 794, column: 6, scope: !14000)
!14016 = !DILocation(line: 795, column: 13, scope: !14017)
!14017 = distinct !DILexicalBlock(scope: !14013, file: !2341, line: 794, column: 20)
!14018 = !DILocation(line: 795, column: 7, scope: !14017)
!14019 = !DILocation(line: 795, column: 5, scope: !14017)
!14020 = !DILocation(line: 796, column: 15, scope: !14017)
!14021 = !DILocation(line: 796, column: 18, scope: !14017)
!14022 = !DILocation(line: 796, column: 28, scope: !14017)
!14023 = !DILocation(line: 796, column: 26, scope: !14017)
!14024 = !DILocation(line: 796, column: 3, scope: !14017)
!14025 = !DILocation(line: 797, column: 2, scope: !14017)
!14026 = !DILocation(line: 799, column: 11, scope: !14027)
!14027 = distinct !DILexicalBlock(scope: !14013, file: !2341, line: 798, column: 7)
!14028 = !DILocation(line: 799, column: 3, scope: !14027)
!14029 = !DILocation(line: 800, column: 5, scope: !14027)
!14030 = !DILocation(line: 803, column: 9, scope: !14000)
!14031 = !DILocation(line: 803, column: 2, scope: !14000)
!14032 = distinct !DISubprogram(name: "dot_v3v3", scope: !2341, file: !2341, line: 619, type: !8868, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!14033 = !DILocalVariable(name: "a", arg: 1, scope: !14032, file: !2341, line: 619, type: !3191)
!14034 = !DILocation(line: 619, column: 36, scope: !14032)
!14035 = !DILocalVariable(name: "b", arg: 2, scope: !14032, file: !2341, line: 619, type: !3191)
!14036 = !DILocation(line: 619, column: 54, scope: !14032)
!14037 = !DILocation(line: 621, column: 9, scope: !14032)
!14038 = !DILocation(line: 621, column: 16, scope: !14032)
!14039 = !DILocation(line: 621, column: 14, scope: !14032)
!14040 = !DILocation(line: 621, column: 23, scope: !14032)
!14041 = !DILocation(line: 621, column: 30, scope: !14032)
!14042 = !DILocation(line: 621, column: 28, scope: !14032)
!14043 = !DILocation(line: 621, column: 21, scope: !14032)
!14044 = !DILocation(line: 621, column: 37, scope: !14032)
!14045 = !DILocation(line: 621, column: 44, scope: !14032)
!14046 = !DILocation(line: 621, column: 42, scope: !14032)
!14047 = !DILocation(line: 621, column: 35, scope: !14032)
!14048 = !DILocation(line: 621, column: 2, scope: !14032)
!14049 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !2341, file: !2341, line: 399, type: !5324, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!14050 = !DILocalVariable(name: "r", arg: 1, scope: !14049, file: !2341, line: 399, type: !1325)
!14051 = !DILocation(line: 399, column: 32, scope: !14049)
!14052 = !DILocalVariable(name: "a", arg: 2, scope: !14049, file: !2341, line: 399, type: !3191)
!14053 = !DILocation(line: 399, column: 50, scope: !14049)
!14054 = !DILocalVariable(name: "f", arg: 3, scope: !14049, file: !2341, line: 399, type: !128)
!14055 = !DILocation(line: 399, column: 62, scope: !14049)
!14056 = !DILocation(line: 401, column: 9, scope: !14049)
!14057 = !DILocation(line: 401, column: 16, scope: !14049)
!14058 = !DILocation(line: 401, column: 14, scope: !14049)
!14059 = !DILocation(line: 401, column: 2, scope: !14049)
!14060 = !DILocation(line: 401, column: 7, scope: !14049)
!14061 = !DILocation(line: 402, column: 9, scope: !14049)
!14062 = !DILocation(line: 402, column: 16, scope: !14049)
!14063 = !DILocation(line: 402, column: 14, scope: !14049)
!14064 = !DILocation(line: 402, column: 2, scope: !14049)
!14065 = !DILocation(line: 402, column: 7, scope: !14049)
!14066 = !DILocation(line: 403, column: 9, scope: !14049)
!14067 = !DILocation(line: 403, column: 16, scope: !14049)
!14068 = !DILocation(line: 403, column: 14, scope: !14049)
!14069 = !DILocation(line: 403, column: 2, scope: !14049)
!14070 = !DILocation(line: 403, column: 7, scope: !14049)
!14071 = !DILocation(line: 404, column: 1, scope: !14049)
!14072 = distinct !DISubprogram(name: "calcknots", scope: !1, file: !1, line: 871, type: !14073, scopeLine: 872, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!14073 = !DISubroutineType(types: !14074)
!14074 = !{null, !1325, !3269, !12487, !12487}
!14075 = !DILocalVariable(name: "knots", arg: 1, scope: !14072, file: !1, line: 871, type: !1325)
!14076 = !DILocation(line: 871, column: 30, scope: !14072)
!14077 = !DILocalVariable(name: "pnts", arg: 2, scope: !14072, file: !1, line: 871, type: !3269)
!14078 = !DILocation(line: 871, column: 47, scope: !14072)
!14079 = !DILocalVariable(name: "order", arg: 3, scope: !14072, file: !1, line: 871, type: !12487)
!14080 = !DILocation(line: 871, column: 65, scope: !14072)
!14081 = !DILocalVariable(name: "flag", arg: 4, scope: !14072, file: !1, line: 871, type: !12487)
!14082 = !DILocation(line: 871, column: 84, scope: !14072)
!14083 = !DILocalVariable(name: "pnts_order", scope: !14072, file: !1, line: 874, type: !3269)
!14084 = !DILocation(line: 874, column: 12, scope: !14072)
!14085 = !DILocation(line: 874, column: 25, scope: !14072)
!14086 = !DILocation(line: 874, column: 32, scope: !14072)
!14087 = !DILocation(line: 874, column: 30, scope: !14072)
!14088 = !DILocalVariable(name: "k", scope: !14072, file: !1, line: 875, type: !128)
!14089 = !DILocation(line: 875, column: 8, scope: !14072)
!14090 = !DILocalVariable(name: "a", scope: !14072, file: !1, line: 876, type: !79)
!14091 = !DILocation(line: 876, column: 6, scope: !14072)
!14092 = !DILocation(line: 878, column: 10, scope: !14072)
!14093 = !DILocation(line: 878, column: 15, scope: !14072)
!14094 = !DILocation(line: 878, column: 2, scope: !14072)
!14095 = !DILocation(line: 880, column: 6, scope: !14096)
!14096 = distinct !DILexicalBlock(scope: !14072, file: !1, line: 878, column: 54)
!14097 = !DILocation(line: 881, column: 11, scope: !14098)
!14098 = distinct !DILexicalBlock(scope: !14096, file: !1, line: 881, column: 4)
!14099 = !DILocation(line: 881, column: 9, scope: !14098)
!14100 = !DILocation(line: 881, column: 16, scope: !14101)
!14101 = distinct !DILexicalBlock(scope: !14098, file: !1, line: 881, column: 4)
!14102 = !DILocation(line: 881, column: 21, scope: !14101)
!14103 = !DILocation(line: 881, column: 18, scope: !14101)
!14104 = !DILocation(line: 881, column: 4, scope: !14098)
!14105 = !DILocation(line: 882, column: 20, scope: !14106)
!14106 = distinct !DILexicalBlock(scope: !14101, file: !1, line: 881, column: 38)
!14107 = !DILocation(line: 882, column: 5, scope: !14106)
!14108 = !DILocation(line: 882, column: 11, scope: !14106)
!14109 = !DILocation(line: 882, column: 13, scope: !14106)
!14110 = !DILocation(line: 882, column: 18, scope: !14106)
!14111 = !DILocation(line: 883, column: 9, scope: !14112)
!14112 = distinct !DILexicalBlock(scope: !14106, file: !1, line: 883, column: 9)
!14113 = !DILocation(line: 883, column: 14, scope: !14112)
!14114 = !DILocation(line: 883, column: 11, scope: !14112)
!14115 = !DILocation(line: 883, column: 20, scope: !14112)
!14116 = !DILocation(line: 883, column: 23, scope: !14112)
!14117 = !DILocation(line: 883, column: 28, scope: !14112)
!14118 = !DILocation(line: 883, column: 25, scope: !14112)
!14119 = !DILocation(line: 883, column: 9, scope: !14106)
!14120 = !DILocation(line: 884, column: 8, scope: !14112)
!14121 = !DILocation(line: 884, column: 6, scope: !14112)
!14122 = !DILocation(line: 885, column: 4, scope: !14106)
!14123 = !DILocation(line: 881, column: 34, scope: !14101)
!14124 = !DILocation(line: 881, column: 4, scope: !14101)
!14125 = distinct !{!14125, !14104, !14126}
!14126 = !DILocation(line: 885, column: 4, scope: !14098)
!14127 = !DILocation(line: 886, column: 4, scope: !14096)
!14128 = !DILocation(line: 890, column: 8, scope: !14129)
!14129 = distinct !DILexicalBlock(scope: !14096, file: !1, line: 890, column: 8)
!14130 = !DILocation(line: 890, column: 14, scope: !14129)
!14131 = !DILocation(line: 890, column: 8, scope: !14096)
!14132 = !DILocation(line: 891, column: 7, scope: !14133)
!14133 = distinct !DILexicalBlock(scope: !14129, file: !1, line: 890, column: 20)
!14134 = !DILocation(line: 892, column: 12, scope: !14135)
!14135 = distinct !DILexicalBlock(scope: !14133, file: !1, line: 892, column: 5)
!14136 = !DILocation(line: 892, column: 10, scope: !14135)
!14137 = !DILocation(line: 892, column: 17, scope: !14138)
!14138 = distinct !DILexicalBlock(scope: !14135, file: !1, line: 892, column: 5)
!14139 = !DILocation(line: 892, column: 21, scope: !14138)
!14140 = !DILocation(line: 892, column: 19, scope: !14138)
!14141 = !DILocation(line: 892, column: 5, scope: !14135)
!14142 = !DILocation(line: 893, column: 24, scope: !14143)
!14143 = distinct !DILexicalBlock(scope: !14138, file: !1, line: 892, column: 38)
!14144 = !DILocation(line: 893, column: 17, scope: !14143)
!14145 = !DILocation(line: 893, column: 6, scope: !14143)
!14146 = !DILocation(line: 893, column: 12, scope: !14143)
!14147 = !DILocation(line: 893, column: 15, scope: !14143)
!14148 = !DILocation(line: 894, column: 8, scope: !14143)
!14149 = !DILocation(line: 895, column: 5, scope: !14143)
!14150 = !DILocation(line: 892, column: 34, scope: !14138)
!14151 = !DILocation(line: 892, column: 5, scope: !14138)
!14152 = distinct !{!14152, !14141, !14153}
!14153 = !DILocation(line: 895, column: 5, scope: !14135)
!14154 = !DILocation(line: 896, column: 4, scope: !14133)
!14155 = !DILocation(line: 897, column: 13, scope: !14156)
!14156 = distinct !DILexicalBlock(scope: !14129, file: !1, line: 897, column: 13)
!14157 = !DILocation(line: 897, column: 19, scope: !14156)
!14158 = !DILocation(line: 897, column: 13, scope: !14129)
!14159 = !DILocation(line: 898, column: 7, scope: !14160)
!14160 = distinct !DILexicalBlock(scope: !14156, file: !1, line: 897, column: 25)
!14161 = !DILocation(line: 899, column: 12, scope: !14162)
!14162 = distinct !DILexicalBlock(scope: !14160, file: !1, line: 899, column: 5)
!14163 = !DILocation(line: 899, column: 10, scope: !14162)
!14164 = !DILocation(line: 899, column: 17, scope: !14165)
!14165 = distinct !DILexicalBlock(scope: !14162, file: !1, line: 899, column: 5)
!14166 = !DILocation(line: 899, column: 21, scope: !14165)
!14167 = !DILocation(line: 899, column: 19, scope: !14165)
!14168 = !DILocation(line: 899, column: 5, scope: !14162)
!14169 = !DILocation(line: 900, column: 10, scope: !14170)
!14170 = distinct !DILexicalBlock(scope: !14171, file: !1, line: 900, column: 10)
!14171 = distinct !DILexicalBlock(scope: !14165, file: !1, line: 899, column: 38)
!14172 = !DILocation(line: 900, column: 15, scope: !14170)
!14173 = !DILocation(line: 900, column: 12, scope: !14170)
!14174 = !DILocation(line: 900, column: 21, scope: !14170)
!14175 = !DILocation(line: 900, column: 24, scope: !14170)
!14176 = !DILocation(line: 900, column: 29, scope: !14170)
!14177 = !DILocation(line: 900, column: 26, scope: !14170)
!14178 = !DILocation(line: 900, column: 10, scope: !14171)
!14179 = !DILocation(line: 901, column: 9, scope: !14170)
!14180 = !DILocation(line: 901, column: 7, scope: !14170)
!14181 = !DILocation(line: 902, column: 24, scope: !14171)
!14182 = !DILocation(line: 902, column: 17, scope: !14171)
!14183 = !DILocation(line: 902, column: 6, scope: !14171)
!14184 = !DILocation(line: 902, column: 12, scope: !14171)
!14185 = !DILocation(line: 902, column: 15, scope: !14171)
!14186 = !DILocation(line: 903, column: 5, scope: !14171)
!14187 = !DILocation(line: 899, column: 34, scope: !14165)
!14188 = !DILocation(line: 899, column: 5, scope: !14165)
!14189 = distinct !{!14189, !14168, !14190}
!14190 = !DILocation(line: 903, column: 5, scope: !14162)
!14191 = !DILocation(line: 904, column: 4, scope: !14160)
!14192 = !DILocation(line: 906, column: 5, scope: !14193)
!14193 = distinct !DILexicalBlock(scope: !14156, file: !1, line: 905, column: 9)
!14194 = !DILocation(line: 908, column: 4, scope: !14096)
!14195 = !DILocation(line: 910, column: 11, scope: !14196)
!14196 = distinct !DILexicalBlock(scope: !14096, file: !1, line: 910, column: 4)
!14197 = !DILocation(line: 910, column: 9, scope: !14196)
!14198 = !DILocation(line: 910, column: 16, scope: !14199)
!14199 = distinct !DILexicalBlock(scope: !14196, file: !1, line: 910, column: 4)
!14200 = !DILocation(line: 910, column: 20, scope: !14199)
!14201 = !DILocation(line: 910, column: 18, scope: !14199)
!14202 = !DILocation(line: 910, column: 4, scope: !14196)
!14203 = !DILocation(line: 911, column: 23, scope: !14204)
!14204 = distinct !DILexicalBlock(scope: !14199, file: !1, line: 910, column: 37)
!14205 = !DILocation(line: 911, column: 16, scope: !14204)
!14206 = !DILocation(line: 911, column: 5, scope: !14204)
!14207 = !DILocation(line: 911, column: 11, scope: !14204)
!14208 = !DILocation(line: 911, column: 14, scope: !14204)
!14209 = !DILocation(line: 912, column: 4, scope: !14204)
!14210 = !DILocation(line: 910, column: 33, scope: !14199)
!14211 = !DILocation(line: 910, column: 4, scope: !14199)
!14212 = distinct !{!14212, !14202, !14213}
!14213 = !DILocation(line: 912, column: 4, scope: !14196)
!14214 = !DILocation(line: 913, column: 4, scope: !14096)
!14215 = !DILocation(line: 915, column: 1, scope: !14072)
!14216 = distinct !DISubprogram(name: "makecyclicknots", scope: !1, file: !1, line: 917, type: !14217, scopeLine: 919, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!14217 = !DISubroutineType(types: !14218)
!14218 = !{null, !1325, !79, !77}
!14219 = !DILocalVariable(name: "knots", arg: 1, scope: !14216, file: !1, line: 917, type: !1325)
!14220 = !DILocation(line: 917, column: 36, scope: !14216)
!14221 = !DILocalVariable(name: "pnts", arg: 2, scope: !14216, file: !1, line: 917, type: !79)
!14222 = !DILocation(line: 917, column: 47, scope: !14216)
!14223 = !DILocalVariable(name: "order", arg: 3, scope: !14216, file: !1, line: 917, type: !77)
!14224 = !DILocation(line: 917, column: 59, scope: !14216)
!14225 = !DILocalVariable(name: "a", scope: !14216, file: !1, line: 920, type: !79)
!14226 = !DILocation(line: 920, column: 6, scope: !14216)
!14227 = !DILocalVariable(name: "b", scope: !14216, file: !1, line: 920, type: !79)
!14228 = !DILocation(line: 920, column: 9, scope: !14216)
!14229 = !DILocalVariable(name: "order2", scope: !14216, file: !1, line: 920, type: !79)
!14230 = !DILocation(line: 920, column: 12, scope: !14216)
!14231 = !DILocalVariable(name: "c", scope: !14216, file: !1, line: 920, type: !79)
!14232 = !DILocation(line: 920, column: 20, scope: !14216)
!14233 = !DILocation(line: 922, column: 6, scope: !14234)
!14234 = distinct !DILexicalBlock(scope: !14216, file: !1, line: 922, column: 6)
!14235 = !DILocation(line: 922, column: 12, scope: !14234)
!14236 = !DILocation(line: 922, column: 6, scope: !14216)
!14237 = !DILocation(line: 923, column: 3, scope: !14234)
!14238 = !DILocation(line: 925, column: 11, scope: !14216)
!14239 = !DILocation(line: 925, column: 17, scope: !14216)
!14240 = !DILocation(line: 925, column: 9, scope: !14216)
!14241 = !DILocation(line: 928, column: 6, scope: !14242)
!14242 = distinct !DILexicalBlock(scope: !14216, file: !1, line: 928, column: 6)
!14243 = !DILocation(line: 928, column: 12, scope: !14242)
!14244 = !DILocation(line: 928, column: 6, scope: !14216)
!14245 = !DILocation(line: 929, column: 7, scope: !14246)
!14246 = distinct !DILexicalBlock(scope: !14242, file: !1, line: 928, column: 17)
!14247 = !DILocation(line: 929, column: 14, scope: !14246)
!14248 = !DILocation(line: 929, column: 12, scope: !14246)
!14249 = !DILocation(line: 929, column: 5, scope: !14246)
!14250 = !DILocation(line: 930, column: 10, scope: !14251)
!14251 = distinct !DILexicalBlock(scope: !14246, file: !1, line: 930, column: 3)
!14252 = !DILocation(line: 930, column: 8, scope: !14251)
!14253 = !DILocation(line: 930, column: 15, scope: !14254)
!14254 = distinct !DILexicalBlock(scope: !14251, file: !1, line: 930, column: 3)
!14255 = !DILocation(line: 930, column: 19, scope: !14254)
!14256 = !DILocation(line: 930, column: 17, scope: !14254)
!14257 = !DILocation(line: 930, column: 3, scope: !14251)
!14258 = !DILocation(line: 931, column: 8, scope: !14259)
!14259 = distinct !DILexicalBlock(scope: !14260, file: !1, line: 931, column: 8)
!14260 = distinct !DILexicalBlock(scope: !14254, file: !1, line: 930, column: 32)
!14261 = !DILocation(line: 931, column: 14, scope: !14259)
!14262 = !DILocation(line: 931, column: 20, scope: !14259)
!14263 = !DILocation(line: 931, column: 26, scope: !14259)
!14264 = !DILocation(line: 931, column: 30, scope: !14259)
!14265 = !DILocation(line: 931, column: 28, scope: !14259)
!14266 = !DILocation(line: 931, column: 17, scope: !14259)
!14267 = !DILocation(line: 931, column: 8, scope: !14260)
!14268 = !DILocation(line: 932, column: 5, scope: !14259)
!14269 = !DILocation(line: 933, column: 3, scope: !14260)
!14270 = !DILocation(line: 930, column: 28, scope: !14254)
!14271 = !DILocation(line: 930, column: 3, scope: !14254)
!14272 = distinct !{!14272, !14257, !14273}
!14273 = !DILocation(line: 933, column: 3, scope: !14251)
!14274 = !DILocation(line: 934, column: 7, scope: !14275)
!14275 = distinct !DILexicalBlock(scope: !14246, file: !1, line: 934, column: 7)
!14276 = !DILocation(line: 934, column: 12, scope: !14275)
!14277 = !DILocation(line: 934, column: 9, scope: !14275)
!14278 = !DILocation(line: 934, column: 7, scope: !14246)
!14279 = !DILocation(line: 935, column: 4, scope: !14275)
!14280 = !DILocation(line: 935, column: 10, scope: !14275)
!14281 = !DILocation(line: 935, column: 17, scope: !14275)
!14282 = !DILocation(line: 935, column: 15, scope: !14275)
!14283 = !DILocation(line: 935, column: 23, scope: !14275)
!14284 = !DILocation(line: 935, column: 28, scope: !14275)
!14285 = !DILocation(line: 936, column: 2, scope: !14246)
!14286 = !DILocation(line: 938, column: 6, scope: !14216)
!14287 = !DILocation(line: 938, column: 4, scope: !14216)
!14288 = !DILocation(line: 939, column: 6, scope: !14216)
!14289 = !DILocation(line: 939, column: 13, scope: !14216)
!14290 = !DILocation(line: 939, column: 11, scope: !14216)
!14291 = !DILocation(line: 939, column: 21, scope: !14216)
!14292 = !DILocation(line: 939, column: 19, scope: !14216)
!14293 = !DILocation(line: 939, column: 4, scope: !14216)
!14294 = !DILocation(line: 940, column: 11, scope: !14295)
!14295 = distinct !DILexicalBlock(scope: !14216, file: !1, line: 940, column: 2)
!14296 = !DILocation(line: 940, column: 18, scope: !14295)
!14297 = !DILocation(line: 940, column: 16, scope: !14295)
!14298 = !DILocation(line: 940, column: 9, scope: !14295)
!14299 = !DILocation(line: 940, column: 7, scope: !14295)
!14300 = !DILocation(line: 940, column: 26, scope: !14301)
!14301 = distinct !DILexicalBlock(scope: !14295, file: !1, line: 940, column: 2)
!14302 = !DILocation(line: 940, column: 30, scope: !14301)
!14303 = !DILocation(line: 940, column: 28, scope: !14301)
!14304 = !DILocation(line: 940, column: 2, scope: !14295)
!14305 = !DILocation(line: 941, column: 14, scope: !14306)
!14306 = distinct !DILexicalBlock(scope: !14301, file: !1, line: 940, column: 38)
!14307 = !DILocation(line: 941, column: 20, scope: !14306)
!14308 = !DILocation(line: 941, column: 22, scope: !14306)
!14309 = !DILocation(line: 941, column: 30, scope: !14306)
!14310 = !DILocation(line: 941, column: 36, scope: !14306)
!14311 = !DILocation(line: 941, column: 41, scope: !14306)
!14312 = !DILocation(line: 941, column: 47, scope: !14306)
!14313 = !DILocation(line: 941, column: 49, scope: !14306)
!14314 = !DILocation(line: 941, column: 39, scope: !14306)
!14315 = !DILocation(line: 941, column: 27, scope: !14306)
!14316 = !DILocation(line: 941, column: 3, scope: !14306)
!14317 = !DILocation(line: 941, column: 9, scope: !14306)
!14318 = !DILocation(line: 941, column: 12, scope: !14306)
!14319 = !DILocation(line: 942, column: 4, scope: !14306)
!14320 = !DILocation(line: 943, column: 2, scope: !14306)
!14321 = !DILocation(line: 940, column: 34, scope: !14301)
!14322 = !DILocation(line: 940, column: 2, scope: !14301)
!14323 = distinct !{!14323, !14304, !14324}
!14324 = !DILocation(line: 943, column: 2, scope: !14295)
!14325 = !DILocation(line: 944, column: 1, scope: !14216)
!14326 = distinct !DISubprogram(name: "len_v3", scope: !2341, file: !2341, line: 714, type: !14327, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!14327 = !DISubroutineType(types: !14328)
!14328 = !{!128, !3191}
!14329 = !DILocalVariable(name: "a", arg: 1, scope: !14326, file: !2341, line: 714, type: !3191)
!14330 = !DILocation(line: 714, column: 34, scope: !14326)
!14331 = !DILocation(line: 716, column: 24, scope: !14326)
!14332 = !DILocation(line: 716, column: 27, scope: !14326)
!14333 = !DILocation(line: 716, column: 15, scope: !14326)
!14334 = !DILocation(line: 716, column: 9, scope: !14326)
!14335 = !DILocation(line: 716, column: 2, scope: !14326)
!14336 = distinct !DISubprogram(name: "cu_isectLL", scope: !1, file: !1, line: 1809, type: !14337, scopeLine: 1812, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!14337 = !DISubroutineType(types: !14338)
!14338 = !{!79, !3191, !3191, !3191, !3191, !77, !77, !1325, !1325, !1325}
!14339 = !DILocalVariable(name: "v1", arg: 1, scope: !14336, file: !1, line: 1809, type: !3191)
!14340 = !DILocation(line: 1809, column: 35, scope: !14336)
!14341 = !DILocalVariable(name: "v2", arg: 2, scope: !14336, file: !1, line: 1809, type: !3191)
!14342 = !DILocation(line: 1809, column: 54, scope: !14336)
!14343 = !DILocalVariable(name: "v3", arg: 3, scope: !14336, file: !1, line: 1809, type: !3191)
!14344 = !DILocation(line: 1809, column: 73, scope: !14336)
!14345 = !DILocalVariable(name: "v4", arg: 4, scope: !14336, file: !1, line: 1809, type: !3191)
!14346 = !DILocation(line: 1809, column: 92, scope: !14336)
!14347 = !DILocalVariable(name: "cox", arg: 5, scope: !14336, file: !1, line: 1810, type: !77)
!14348 = !DILocation(line: 1810, column: 29, scope: !14336)
!14349 = !DILocalVariable(name: "coy", arg: 6, scope: !14336, file: !1, line: 1810, type: !77)
!14350 = !DILocation(line: 1810, column: 40, scope: !14336)
!14351 = !DILocalVariable(name: "lambda", arg: 7, scope: !14336, file: !1, line: 1811, type: !1325)
!14352 = !DILocation(line: 1811, column: 30, scope: !14336)
!14353 = !DILocalVariable(name: "mu", arg: 8, scope: !14336, file: !1, line: 1811, type: !1325)
!14354 = !DILocation(line: 1811, column: 45, scope: !14336)
!14355 = !DILocalVariable(name: "vec", arg: 9, scope: !14336, file: !1, line: 1811, type: !1325)
!14356 = !DILocation(line: 1811, column: 55, scope: !14336)
!14357 = !DILocalVariable(name: "deler", scope: !14336, file: !1, line: 1819, type: !128)
!14358 = !DILocation(line: 1819, column: 8, scope: !14336)
!14359 = !DILocation(line: 1821, column: 11, scope: !14336)
!14360 = !DILocation(line: 1821, column: 14, scope: !14336)
!14361 = !DILocation(line: 1821, column: 21, scope: !14336)
!14362 = !DILocation(line: 1821, column: 24, scope: !14336)
!14363 = !DILocation(line: 1821, column: 19, scope: !14336)
!14364 = !DILocation(line: 1821, column: 33, scope: !14336)
!14365 = !DILocation(line: 1821, column: 36, scope: !14336)
!14366 = !DILocation(line: 1821, column: 43, scope: !14336)
!14367 = !DILocation(line: 1821, column: 46, scope: !14336)
!14368 = !DILocation(line: 1821, column: 41, scope: !14336)
!14369 = !DILocation(line: 1821, column: 30, scope: !14336)
!14370 = !DILocation(line: 1821, column: 55, scope: !14336)
!14371 = !DILocation(line: 1821, column: 58, scope: !14336)
!14372 = !DILocation(line: 1821, column: 65, scope: !14336)
!14373 = !DILocation(line: 1821, column: 68, scope: !14336)
!14374 = !DILocation(line: 1821, column: 63, scope: !14336)
!14375 = !DILocation(line: 1821, column: 77, scope: !14336)
!14376 = !DILocation(line: 1821, column: 80, scope: !14336)
!14377 = !DILocation(line: 1821, column: 87, scope: !14336)
!14378 = !DILocation(line: 1821, column: 90, scope: !14336)
!14379 = !DILocation(line: 1821, column: 85, scope: !14336)
!14380 = !DILocation(line: 1821, column: 74, scope: !14336)
!14381 = !DILocation(line: 1821, column: 52, scope: !14336)
!14382 = !DILocation(line: 1821, column: 8, scope: !14336)
!14383 = !DILocation(line: 1822, column: 6, scope: !14384)
!14384 = distinct !DILexicalBlock(scope: !14336, file: !1, line: 1822, column: 6)
!14385 = !DILocation(line: 1822, column: 12, scope: !14384)
!14386 = !DILocation(line: 1822, column: 6, scope: !14336)
!14387 = !DILocation(line: 1823, column: 3, scope: !14384)
!14388 = !DILocation(line: 1825, column: 13, scope: !14336)
!14389 = !DILocation(line: 1825, column: 16, scope: !14336)
!14390 = !DILocation(line: 1825, column: 23, scope: !14336)
!14391 = !DILocation(line: 1825, column: 26, scope: !14336)
!14392 = !DILocation(line: 1825, column: 21, scope: !14336)
!14393 = !DILocation(line: 1825, column: 35, scope: !14336)
!14394 = !DILocation(line: 1825, column: 38, scope: !14336)
!14395 = !DILocation(line: 1825, column: 45, scope: !14336)
!14396 = !DILocation(line: 1825, column: 48, scope: !14336)
!14397 = !DILocation(line: 1825, column: 43, scope: !14336)
!14398 = !DILocation(line: 1825, column: 32, scope: !14336)
!14399 = !DILocation(line: 1825, column: 57, scope: !14336)
!14400 = !DILocation(line: 1825, column: 60, scope: !14336)
!14401 = !DILocation(line: 1825, column: 67, scope: !14336)
!14402 = !DILocation(line: 1825, column: 70, scope: !14336)
!14403 = !DILocation(line: 1825, column: 65, scope: !14336)
!14404 = !DILocation(line: 1825, column: 79, scope: !14336)
!14405 = !DILocation(line: 1825, column: 82, scope: !14336)
!14406 = !DILocation(line: 1825, column: 89, scope: !14336)
!14407 = !DILocation(line: 1825, column: 92, scope: !14336)
!14408 = !DILocation(line: 1825, column: 87, scope: !14336)
!14409 = !DILocation(line: 1825, column: 76, scope: !14336)
!14410 = !DILocation(line: 1825, column: 54, scope: !14336)
!14411 = !DILocation(line: 1825, column: 3, scope: !14336)
!14412 = !DILocation(line: 1825, column: 10, scope: !14336)
!14413 = !DILocation(line: 1826, column: 15, scope: !14336)
!14414 = !DILocation(line: 1826, column: 14, scope: !14336)
!14415 = !DILocation(line: 1826, column: 24, scope: !14336)
!14416 = !DILocation(line: 1826, column: 22, scope: !14336)
!14417 = !DILocation(line: 1826, column: 12, scope: !14336)
!14418 = !DILocation(line: 1826, column: 3, scope: !14336)
!14419 = !DILocation(line: 1826, column: 10, scope: !14336)
!14420 = !DILocation(line: 1828, column: 10, scope: !14336)
!14421 = !DILocation(line: 1828, column: 13, scope: !14336)
!14422 = !DILocation(line: 1828, column: 20, scope: !14336)
!14423 = !DILocation(line: 1828, column: 23, scope: !14336)
!14424 = !DILocation(line: 1828, column: 18, scope: !14336)
!14425 = !DILocation(line: 1828, column: 8, scope: !14336)
!14426 = !DILocation(line: 1829, column: 6, scope: !14427)
!14427 = distinct !DILexicalBlock(scope: !14336, file: !1, line: 1829, column: 6)
!14428 = !DILocation(line: 1829, column: 12, scope: !14427)
!14429 = !DILocation(line: 1829, column: 6, scope: !14336)
!14430 = !DILocation(line: 1830, column: 11, scope: !14431)
!14431 = distinct !DILexicalBlock(scope: !14427, file: !1, line: 1829, column: 18)
!14432 = !DILocation(line: 1830, column: 14, scope: !14431)
!14433 = !DILocation(line: 1830, column: 21, scope: !14431)
!14434 = !DILocation(line: 1830, column: 24, scope: !14431)
!14435 = !DILocation(line: 1830, column: 19, scope: !14431)
!14436 = !DILocation(line: 1830, column: 9, scope: !14431)
!14437 = !DILocation(line: 1831, column: 12, scope: !14431)
!14438 = !DILocation(line: 1831, column: 11, scope: !14431)
!14439 = !DILocation(line: 1831, column: 22, scope: !14431)
!14440 = !DILocation(line: 1831, column: 25, scope: !14431)
!14441 = !DILocation(line: 1831, column: 32, scope: !14431)
!14442 = !DILocation(line: 1831, column: 35, scope: !14431)
!14443 = !DILocation(line: 1831, column: 30, scope: !14431)
!14444 = !DILocation(line: 1831, column: 19, scope: !14431)
!14445 = !DILocation(line: 1831, column: 43, scope: !14431)
!14446 = !DILocation(line: 1831, column: 46, scope: !14431)
!14447 = !DILocation(line: 1831, column: 41, scope: !14431)
!14448 = !DILocation(line: 1831, column: 53, scope: !14431)
!14449 = !DILocation(line: 1831, column: 56, scope: !14431)
!14450 = !DILocation(line: 1831, column: 51, scope: !14431)
!14451 = !DILocation(line: 1831, column: 9, scope: !14431)
!14452 = !DILocation(line: 1831, column: 64, scope: !14431)
!14453 = !DILocation(line: 1831, column: 62, scope: !14431)
!14454 = !DILocation(line: 1831, column: 4, scope: !14431)
!14455 = !DILocation(line: 1831, column: 7, scope: !14431)
!14456 = !DILocation(line: 1832, column: 2, scope: !14431)
!14457 = !DILocation(line: 1834, column: 12, scope: !14458)
!14458 = distinct !DILexicalBlock(scope: !14427, file: !1, line: 1833, column: 7)
!14459 = !DILocation(line: 1834, column: 11, scope: !14458)
!14460 = !DILocation(line: 1834, column: 22, scope: !14458)
!14461 = !DILocation(line: 1834, column: 25, scope: !14458)
!14462 = !DILocation(line: 1834, column: 32, scope: !14458)
!14463 = !DILocation(line: 1834, column: 35, scope: !14458)
!14464 = !DILocation(line: 1834, column: 30, scope: !14458)
!14465 = !DILocation(line: 1834, column: 19, scope: !14458)
!14466 = !DILocation(line: 1834, column: 43, scope: !14458)
!14467 = !DILocation(line: 1834, column: 46, scope: !14458)
!14468 = !DILocation(line: 1834, column: 41, scope: !14458)
!14469 = !DILocation(line: 1834, column: 53, scope: !14458)
!14470 = !DILocation(line: 1834, column: 56, scope: !14458)
!14471 = !DILocation(line: 1834, column: 51, scope: !14458)
!14472 = !DILocation(line: 1834, column: 9, scope: !14458)
!14473 = !DILocation(line: 1834, column: 64, scope: !14458)
!14474 = !DILocation(line: 1834, column: 62, scope: !14458)
!14475 = !DILocation(line: 1834, column: 4, scope: !14458)
!14476 = !DILocation(line: 1834, column: 7, scope: !14458)
!14477 = !DILocation(line: 1836, column: 14, scope: !14336)
!14478 = !DILocation(line: 1836, column: 13, scope: !14336)
!14479 = !DILocation(line: 1836, column: 24, scope: !14336)
!14480 = !DILocation(line: 1836, column: 27, scope: !14336)
!14481 = !DILocation(line: 1836, column: 34, scope: !14336)
!14482 = !DILocation(line: 1836, column: 37, scope: !14336)
!14483 = !DILocation(line: 1836, column: 32, scope: !14336)
!14484 = !DILocation(line: 1836, column: 21, scope: !14336)
!14485 = !DILocation(line: 1836, column: 45, scope: !14336)
!14486 = !DILocation(line: 1836, column: 48, scope: !14336)
!14487 = !DILocation(line: 1836, column: 43, scope: !14336)
!14488 = !DILocation(line: 1836, column: 2, scope: !14336)
!14489 = !DILocation(line: 1836, column: 6, scope: !14336)
!14490 = !DILocation(line: 1836, column: 11, scope: !14336)
!14491 = !DILocation(line: 1837, column: 14, scope: !14336)
!14492 = !DILocation(line: 1837, column: 13, scope: !14336)
!14493 = !DILocation(line: 1837, column: 24, scope: !14336)
!14494 = !DILocation(line: 1837, column: 27, scope: !14336)
!14495 = !DILocation(line: 1837, column: 34, scope: !14336)
!14496 = !DILocation(line: 1837, column: 37, scope: !14336)
!14497 = !DILocation(line: 1837, column: 32, scope: !14336)
!14498 = !DILocation(line: 1837, column: 21, scope: !14336)
!14499 = !DILocation(line: 1837, column: 45, scope: !14336)
!14500 = !DILocation(line: 1837, column: 48, scope: !14336)
!14501 = !DILocation(line: 1837, column: 43, scope: !14336)
!14502 = !DILocation(line: 1837, column: 2, scope: !14336)
!14503 = !DILocation(line: 1837, column: 6, scope: !14336)
!14504 = !DILocation(line: 1837, column: 11, scope: !14336)
!14505 = !DILocation(line: 1839, column: 7, scope: !14506)
!14506 = distinct !DILexicalBlock(scope: !14336, file: !1, line: 1839, column: 6)
!14507 = !DILocation(line: 1839, column: 6, scope: !14506)
!14508 = !DILocation(line: 1839, column: 14, scope: !14506)
!14509 = !DILocation(line: 1839, column: 22, scope: !14506)
!14510 = !DILocation(line: 1839, column: 26, scope: !14506)
!14511 = !DILocation(line: 1839, column: 25, scope: !14506)
!14512 = !DILocation(line: 1839, column: 33, scope: !14506)
!14513 = !DILocation(line: 1839, column: 41, scope: !14506)
!14514 = !DILocation(line: 1839, column: 45, scope: !14506)
!14515 = !DILocation(line: 1839, column: 44, scope: !14506)
!14516 = !DILocation(line: 1839, column: 48, scope: !14506)
!14517 = !DILocation(line: 1839, column: 56, scope: !14506)
!14518 = !DILocation(line: 1839, column: 60, scope: !14506)
!14519 = !DILocation(line: 1839, column: 59, scope: !14506)
!14520 = !DILocation(line: 1839, column: 63, scope: !14506)
!14521 = !DILocation(line: 1839, column: 6, scope: !14336)
!14522 = !DILocation(line: 1840, column: 8, scope: !14523)
!14523 = distinct !DILexicalBlock(scope: !14524, file: !1, line: 1840, column: 7)
!14524 = distinct !DILexicalBlock(scope: !14506, file: !1, line: 1839, column: 72)
!14525 = !DILocation(line: 1840, column: 7, scope: !14523)
!14526 = !DILocation(line: 1840, column: 15, scope: !14523)
!14527 = !DILocation(line: 1840, column: 23, scope: !14523)
!14528 = !DILocation(line: 1840, column: 27, scope: !14523)
!14529 = !DILocation(line: 1840, column: 26, scope: !14523)
!14530 = !DILocation(line: 1840, column: 34, scope: !14523)
!14531 = !DILocation(line: 1840, column: 42, scope: !14523)
!14532 = !DILocation(line: 1840, column: 46, scope: !14523)
!14533 = !DILocation(line: 1840, column: 45, scope: !14523)
!14534 = !DILocation(line: 1840, column: 49, scope: !14523)
!14535 = !DILocation(line: 1840, column: 57, scope: !14523)
!14536 = !DILocation(line: 1840, column: 61, scope: !14523)
!14537 = !DILocation(line: 1840, column: 60, scope: !14523)
!14538 = !DILocation(line: 1840, column: 64, scope: !14523)
!14539 = !DILocation(line: 1840, column: 7, scope: !14524)
!14540 = !DILocation(line: 1841, column: 4, scope: !14523)
!14541 = !DILocation(line: 1842, column: 3, scope: !14524)
!14542 = !DILocation(line: 1844, column: 2, scope: !14336)
!14543 = !DILocation(line: 1845, column: 1, scope: !14336)
!14544 = distinct !DISubprogram(name: "calc_bevel_sin_cos", scope: !1, file: !1, line: 1919, type: !14545, scopeLine: 1921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!14545 = !DISubroutineType(types: !14546)
!14546 = !{null, !128, !128, !128, !128, !1325, !1325}
!14547 = !DILocalVariable(name: "x1", arg: 1, scope: !14544, file: !1, line: 1919, type: !128)
!14548 = !DILocation(line: 1919, column: 38, scope: !14544)
!14549 = !DILocalVariable(name: "y1", arg: 2, scope: !14544, file: !1, line: 1919, type: !128)
!14550 = !DILocation(line: 1919, column: 48, scope: !14544)
!14551 = !DILocalVariable(name: "x2", arg: 3, scope: !14544, file: !1, line: 1919, type: !128)
!14552 = !DILocation(line: 1919, column: 58, scope: !14544)
!14553 = !DILocalVariable(name: "y2", arg: 4, scope: !14544, file: !1, line: 1919, type: !128)
!14554 = !DILocation(line: 1919, column: 68, scope: !14544)
!14555 = !DILocalVariable(name: "r_sina", arg: 5, scope: !14544, file: !1, line: 1920, type: !1325)
!14556 = !DILocation(line: 1920, column: 39, scope: !14544)
!14557 = !DILocalVariable(name: "r_cosa", arg: 6, scope: !14544, file: !1, line: 1920, type: !1325)
!14558 = !DILocation(line: 1920, column: 54, scope: !14544)
!14559 = !DILocalVariable(name: "t01", scope: !14544, file: !1, line: 1922, type: !128)
!14560 = !DILocation(line: 1922, column: 8, scope: !14544)
!14561 = !DILocalVariable(name: "t02", scope: !14544, file: !1, line: 1922, type: !128)
!14562 = !DILocation(line: 1922, column: 13, scope: !14544)
!14563 = !DILocalVariable(name: "x3", scope: !14544, file: !1, line: 1922, type: !128)
!14564 = !DILocation(line: 1922, column: 18, scope: !14544)
!14565 = !DILocalVariable(name: "y3", scope: !14544, file: !1, line: 1922, type: !128)
!14566 = !DILocation(line: 1922, column: 22, scope: !14544)
!14567 = !DILocation(line: 1924, column: 14, scope: !14544)
!14568 = !DILocation(line: 1924, column: 19, scope: !14544)
!14569 = !DILocation(line: 1924, column: 17, scope: !14544)
!14570 = !DILocation(line: 1924, column: 24, scope: !14544)
!14571 = !DILocation(line: 1924, column: 29, scope: !14544)
!14572 = !DILocation(line: 1924, column: 27, scope: !14544)
!14573 = !DILocation(line: 1924, column: 22, scope: !14544)
!14574 = !DILocation(line: 1924, column: 8, scope: !14544)
!14575 = !DILocation(line: 1924, column: 6, scope: !14544)
!14576 = !DILocation(line: 1925, column: 14, scope: !14544)
!14577 = !DILocation(line: 1925, column: 19, scope: !14544)
!14578 = !DILocation(line: 1925, column: 17, scope: !14544)
!14579 = !DILocation(line: 1925, column: 24, scope: !14544)
!14580 = !DILocation(line: 1925, column: 29, scope: !14544)
!14581 = !DILocation(line: 1925, column: 27, scope: !14544)
!14582 = !DILocation(line: 1925, column: 22, scope: !14544)
!14583 = !DILocation(line: 1925, column: 8, scope: !14544)
!14584 = !DILocation(line: 1925, column: 6, scope: !14544)
!14585 = !DILocation(line: 1926, column: 6, scope: !14586)
!14586 = distinct !DILexicalBlock(scope: !14544, file: !1, line: 1926, column: 6)
!14587 = !DILocation(line: 1926, column: 10, scope: !14586)
!14588 = !DILocation(line: 1926, column: 6, scope: !14544)
!14589 = !DILocation(line: 1927, column: 7, scope: !14586)
!14590 = !DILocation(line: 1927, column: 3, scope: !14586)
!14591 = !DILocation(line: 1928, column: 6, scope: !14592)
!14592 = distinct !DILexicalBlock(scope: !14544, file: !1, line: 1928, column: 6)
!14593 = !DILocation(line: 1928, column: 10, scope: !14592)
!14594 = !DILocation(line: 1928, column: 6, scope: !14544)
!14595 = !DILocation(line: 1929, column: 7, scope: !14592)
!14596 = !DILocation(line: 1929, column: 3, scope: !14592)
!14597 = !DILocation(line: 1931, column: 8, scope: !14544)
!14598 = !DILocation(line: 1931, column: 5, scope: !14544)
!14599 = !DILocation(line: 1932, column: 8, scope: !14544)
!14600 = !DILocation(line: 1932, column: 5, scope: !14544)
!14601 = !DILocation(line: 1933, column: 8, scope: !14544)
!14602 = !DILocation(line: 1933, column: 5, scope: !14544)
!14603 = !DILocation(line: 1934, column: 8, scope: !14544)
!14604 = !DILocation(line: 1934, column: 5, scope: !14544)
!14605 = !DILocation(line: 1936, column: 8, scope: !14544)
!14606 = !DILocation(line: 1936, column: 13, scope: !14544)
!14607 = !DILocation(line: 1936, column: 11, scope: !14544)
!14608 = !DILocation(line: 1936, column: 18, scope: !14544)
!14609 = !DILocation(line: 1936, column: 23, scope: !14544)
!14610 = !DILocation(line: 1936, column: 21, scope: !14544)
!14611 = !DILocation(line: 1936, column: 16, scope: !14544)
!14612 = !DILocation(line: 1936, column: 6, scope: !14544)
!14613 = !DILocation(line: 1937, column: 12, scope: !14614)
!14614 = distinct !DILexicalBlock(scope: !14544, file: !1, line: 1937, column: 6)
!14615 = !DILocation(line: 1937, column: 6, scope: !14614)
!14616 = !DILocation(line: 1937, column: 17, scope: !14614)
!14617 = !DILocation(line: 1937, column: 6, scope: !14544)
!14618 = !DILocation(line: 1938, column: 7, scope: !14614)
!14619 = !DILocation(line: 1938, column: 3, scope: !14614)
!14620 = !DILocation(line: 1940, column: 17, scope: !14614)
!14621 = !DILocation(line: 1940, column: 10, scope: !14614)
!14622 = !DILocation(line: 1940, column: 23, scope: !14614)
!14623 = !DILocation(line: 1940, column: 7, scope: !14614)
!14624 = !DILocation(line: 1942, column: 13, scope: !14544)
!14625 = !DILocation(line: 1942, column: 8, scope: !14544)
!14626 = !DILocation(line: 1942, column: 6, scope: !14544)
!14627 = !DILocation(line: 1943, column: 6, scope: !14628)
!14628 = distinct !DILexicalBlock(scope: !14544, file: !1, line: 1943, column: 6)
!14629 = !DILocation(line: 1943, column: 10, scope: !14628)
!14630 = !DILocation(line: 1943, column: 6, scope: !14544)
!14631 = !DILocation(line: 1944, column: 7, scope: !14628)
!14632 = !DILocation(line: 1944, column: 3, scope: !14628)
!14633 = !DILocation(line: 1946, column: 7, scope: !14544)
!14634 = !DILocation(line: 1946, column: 12, scope: !14544)
!14635 = !DILocation(line: 1946, column: 10, scope: !14544)
!14636 = !DILocation(line: 1946, column: 5, scope: !14544)
!14637 = !DILocation(line: 1947, column: 7, scope: !14544)
!14638 = !DILocation(line: 1947, column: 12, scope: !14544)
!14639 = !DILocation(line: 1947, column: 10, scope: !14544)
!14640 = !DILocation(line: 1947, column: 5, scope: !14544)
!14641 = !DILocation(line: 1948, column: 6, scope: !14642)
!14642 = distinct !DILexicalBlock(scope: !14544, file: !1, line: 1948, column: 6)
!14643 = !DILocation(line: 1948, column: 9, scope: !14642)
!14644 = !DILocation(line: 1948, column: 14, scope: !14642)
!14645 = !DILocation(line: 1948, column: 17, scope: !14642)
!14646 = !DILocation(line: 1948, column: 20, scope: !14642)
!14647 = !DILocation(line: 1948, column: 6, scope: !14544)
!14648 = !DILocation(line: 1949, column: 8, scope: !14649)
!14649 = distinct !DILexicalBlock(scope: !14642, file: !1, line: 1948, column: 26)
!14650 = !DILocation(line: 1949, column: 6, scope: !14649)
!14651 = !DILocation(line: 1950, column: 9, scope: !14649)
!14652 = !DILocation(line: 1950, column: 8, scope: !14649)
!14653 = !DILocation(line: 1950, column: 6, scope: !14649)
!14654 = !DILocation(line: 1951, column: 2, scope: !14649)
!14655 = !DILocation(line: 1953, column: 15, scope: !14656)
!14656 = distinct !DILexicalBlock(scope: !14642, file: !1, line: 1952, column: 7)
!14657 = !DILocation(line: 1953, column: 20, scope: !14656)
!14658 = !DILocation(line: 1953, column: 18, scope: !14656)
!14659 = !DILocation(line: 1953, column: 25, scope: !14656)
!14660 = !DILocation(line: 1953, column: 30, scope: !14656)
!14661 = !DILocation(line: 1953, column: 28, scope: !14656)
!14662 = !DILocation(line: 1953, column: 23, scope: !14656)
!14663 = !DILocation(line: 1953, column: 9, scope: !14656)
!14664 = !DILocation(line: 1953, column: 7, scope: !14656)
!14665 = !DILocation(line: 1954, column: 9, scope: !14656)
!14666 = !DILocation(line: 1954, column: 6, scope: !14656)
!14667 = !DILocation(line: 1955, column: 9, scope: !14656)
!14668 = !DILocation(line: 1955, column: 6, scope: !14656)
!14669 = !DILocation(line: 1958, column: 13, scope: !14544)
!14670 = !DILocation(line: 1958, column: 12, scope: !14544)
!14671 = !DILocation(line: 1958, column: 18, scope: !14544)
!14672 = !DILocation(line: 1958, column: 16, scope: !14544)
!14673 = !DILocation(line: 1958, column: 3, scope: !14544)
!14674 = !DILocation(line: 1958, column: 10, scope: !14544)
!14675 = !DILocation(line: 1959, column: 13, scope: !14544)
!14676 = !DILocation(line: 1959, column: 18, scope: !14544)
!14677 = !DILocation(line: 1959, column: 16, scope: !14544)
!14678 = !DILocation(line: 1959, column: 3, scope: !14544)
!14679 = !DILocation(line: 1959, column: 10, scope: !14544)
!14680 = !DILocation(line: 1961, column: 1, scope: !14544)
!14681 = distinct !DISubprogram(name: "saacos", scope: !12428, file: !12428, line: 66, type: !14682, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!14682 = !DISubroutineType(types: !14683)
!14683 = !{!128, !128}
!14684 = !DILocalVariable(name: "fac", arg: 1, scope: !14681, file: !12428, line: 66, type: !128)
!14685 = !DILocation(line: 66, column: 28, scope: !14681)
!14686 = !DILocation(line: 68, column: 11, scope: !14687)
!14687 = distinct !DILexicalBlock(scope: !14681, file: !12428, line: 68, column: 11)
!14688 = !DILocation(line: 68, column: 11, scope: !14681)
!14689 = !DILocation(line: 68, column: 35, scope: !14687)
!14690 = !DILocation(line: 69, column: 11, scope: !14691)
!14691 = distinct !DILexicalBlock(scope: !14687, file: !12428, line: 69, column: 11)
!14692 = !DILocation(line: 69, column: 11, scope: !14687)
!14693 = !DILocation(line: 69, column: 35, scope: !14691)
!14694 = !DILocation(line: 70, column: 48, scope: !14691)
!14695 = !DILocation(line: 70, column: 42, scope: !14691)
!14696 = !DILocation(line: 70, column: 35, scope: !14691)
!14697 = !DILocation(line: 71, column: 1, scope: !14681)
!14698 = distinct !DISubprogram(name: "make_bevel_list_3D_tangent", scope: !1, file: !1, line: 2314, type: !9507, scopeLine: 2315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!14699 = !DILocalVariable(name: "bl", arg: 1, scope: !14698, file: !1, line: 2314, type: !7226)
!14700 = !DILocation(line: 2314, column: 49, scope: !14698)
!14701 = !DILocalVariable(name: "bevp2", scope: !14698, file: !1, line: 2316, type: !7338)
!14702 = !DILocation(line: 2316, column: 12, scope: !14698)
!14703 = !DILocalVariable(name: "bevp1", scope: !14698, file: !1, line: 2316, type: !7338)
!14704 = !DILocation(line: 2316, column: 20, scope: !14698)
!14705 = !DILocalVariable(name: "bevp0", scope: !14698, file: !1, line: 2316, type: !7338)
!14706 = !DILocation(line: 2316, column: 28, scope: !14698)
!14707 = !DILocalVariable(name: "nr", scope: !14698, file: !1, line: 2317, type: !79)
!14708 = !DILocation(line: 2317, column: 6, scope: !14698)
!14709 = !DILocalVariable(name: "bevp0_tan", scope: !14698, file: !1, line: 2319, type: !201)
!14710 = !DILocation(line: 2319, column: 8, scope: !14698)
!14711 = !DILocation(line: 2321, column: 25, scope: !14698)
!14712 = !DILocation(line: 2321, column: 2, scope: !14698)
!14713 = !DILocation(line: 2322, column: 27, scope: !14698)
!14714 = !DILocation(line: 2322, column: 2, scope: !14698)
!14715 = !DILocation(line: 2325, column: 10, scope: !14698)
!14716 = !DILocation(line: 2325, column: 14, scope: !14698)
!14717 = !DILocation(line: 2325, column: 8, scope: !14698)
!14718 = !DILocation(line: 2326, column: 10, scope: !14698)
!14719 = !DILocation(line: 2326, column: 19, scope: !14698)
!14720 = !DILocation(line: 2326, column: 23, scope: !14698)
!14721 = !DILocation(line: 2326, column: 26, scope: !14698)
!14722 = !DILocation(line: 2326, column: 16, scope: !14698)
!14723 = !DILocation(line: 2326, column: 8, scope: !14698)
!14724 = !DILocation(line: 2327, column: 10, scope: !14698)
!14725 = !DILocation(line: 2327, column: 16, scope: !14698)
!14726 = !DILocation(line: 2327, column: 8, scope: !14698)
!14727 = !DILocation(line: 2329, column: 7, scope: !14698)
!14728 = !DILocation(line: 2329, column: 11, scope: !14698)
!14729 = !DILocation(line: 2329, column: 5, scope: !14698)
!14730 = !DILocation(line: 2330, column: 2, scope: !14698)
!14731 = !DILocation(line: 2330, column: 11, scope: !14698)
!14732 = !DILocalVariable(name: "cross_tmp", scope: !14733, file: !1, line: 2331, type: !201)
!14733 = distinct !DILexicalBlock(scope: !14698, file: !1, line: 2330, column: 15)
!14734 = !DILocation(line: 2331, column: 9, scope: !14733)
!14735 = !DILocation(line: 2332, column: 17, scope: !14733)
!14736 = !DILocation(line: 2332, column: 28, scope: !14733)
!14737 = !DILocation(line: 2332, column: 35, scope: !14733)
!14738 = !DILocation(line: 2332, column: 40, scope: !14733)
!14739 = !DILocation(line: 2332, column: 47, scope: !14733)
!14740 = !DILocation(line: 2332, column: 3, scope: !14733)
!14741 = !DILocation(line: 2333, column: 17, scope: !14733)
!14742 = !DILocation(line: 2333, column: 24, scope: !14733)
!14743 = !DILocation(line: 2333, column: 29, scope: !14733)
!14744 = !DILocation(line: 2333, column: 40, scope: !14733)
!14745 = !DILocation(line: 2333, column: 47, scope: !14733)
!14746 = !DILocation(line: 2333, column: 3, scope: !14733)
!14747 = !DILocation(line: 2334, column: 16, scope: !14733)
!14748 = !DILocation(line: 2334, column: 23, scope: !14733)
!14749 = !DILocation(line: 2334, column: 3, scope: !14733)
!14750 = !DILocation(line: 2336, column: 11, scope: !14733)
!14751 = !DILocation(line: 2336, column: 9, scope: !14733)
!14752 = !DILocation(line: 2337, column: 11, scope: !14733)
!14753 = !DILocation(line: 2337, column: 9, scope: !14733)
!14754 = !DILocation(line: 2338, column: 8, scope: !14733)
!14755 = distinct !{!14755, !14730, !14756}
!14756 = !DILocation(line: 2339, column: 2, scope: !14698)
!14757 = !DILocation(line: 2343, column: 10, scope: !14698)
!14758 = !DILocation(line: 2343, column: 14, scope: !14698)
!14759 = !DILocation(line: 2343, column: 8, scope: !14698)
!14760 = !DILocation(line: 2344, column: 10, scope: !14698)
!14761 = !DILocation(line: 2344, column: 19, scope: !14698)
!14762 = !DILocation(line: 2344, column: 23, scope: !14698)
!14763 = !DILocation(line: 2344, column: 26, scope: !14698)
!14764 = !DILocation(line: 2344, column: 16, scope: !14698)
!14765 = !DILocation(line: 2344, column: 8, scope: !14698)
!14766 = !DILocation(line: 2345, column: 10, scope: !14698)
!14767 = !DILocation(line: 2345, column: 16, scope: !14698)
!14768 = !DILocation(line: 2345, column: 8, scope: !14698)
!14769 = !DILocation(line: 2347, column: 13, scope: !14698)
!14770 = !DILocation(line: 2347, column: 24, scope: !14698)
!14771 = !DILocation(line: 2347, column: 31, scope: !14698)
!14772 = !DILocation(line: 2347, column: 2, scope: !14698)
!14773 = !DILocation(line: 2349, column: 7, scope: !14698)
!14774 = !DILocation(line: 2349, column: 11, scope: !14698)
!14775 = !DILocation(line: 2349, column: 5, scope: !14698)
!14776 = !DILocation(line: 2350, column: 2, scope: !14698)
!14777 = !DILocation(line: 2350, column: 11, scope: !14698)
!14778 = !DILocalVariable(name: "cross_tmp", scope: !14779, file: !1, line: 2352, type: !201)
!14779 = distinct !DILexicalBlock(scope: !14698, file: !1, line: 2350, column: 15)
!14780 = !DILocation(line: 2352, column: 9, scope: !14779)
!14781 = !DILocalVariable(name: "zero", scope: !14779, file: !1, line: 2353, type: !201)
!14782 = !DILocation(line: 2353, column: 9, scope: !14779)
!14783 = !DILocation(line: 2355, column: 17, scope: !14779)
!14784 = !DILocation(line: 2355, column: 28, scope: !14779)
!14785 = !DILocation(line: 2355, column: 35, scope: !14779)
!14786 = !DILocation(line: 2355, column: 40, scope: !14779)
!14787 = !DILocation(line: 2355, column: 47, scope: !14779)
!14788 = !DILocation(line: 2355, column: 3, scope: !14779)
!14789 = !DILocation(line: 2356, column: 16, scope: !14779)
!14790 = !DILocation(line: 2356, column: 3, scope: !14779)
!14791 = !DILocation(line: 2357, column: 15, scope: !14779)
!14792 = !DILocation(line: 2357, column: 22, scope: !14779)
!14793 = !DILocation(line: 2357, column: 28, scope: !14779)
!14794 = !DILocation(line: 2357, column: 34, scope: !14779)
!14795 = !DILocation(line: 2357, column: 45, scope: !14779)
!14796 = !DILocation(line: 2357, column: 52, scope: !14779)
!14797 = !DILocation(line: 2357, column: 3, scope: !14779)
!14798 = !DILocation(line: 2360, column: 11, scope: !14779)
!14799 = !DILocation(line: 2360, column: 9, scope: !14779)
!14800 = !DILocation(line: 2361, column: 8, scope: !14779)
!14801 = distinct !{!14801, !14776, !14802}
!14802 = !DILocation(line: 2362, column: 2, scope: !14698)
!14803 = !DILocation(line: 2363, column: 1, scope: !14698)
!14804 = distinct !DISubprogram(name: "make_bevel_list_3D_minimum_twist", scope: !1, file: !1, line: 2207, type: !9507, scopeLine: 2208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!14805 = !DILocalVariable(name: "bl", arg: 1, scope: !14804, file: !1, line: 2207, type: !7226)
!14806 = !DILocation(line: 2207, column: 55, scope: !14804)
!14807 = !DILocalVariable(name: "bevp2", scope: !14804, file: !1, line: 2209, type: !7338)
!14808 = !DILocation(line: 2209, column: 12, scope: !14804)
!14809 = !DILocalVariable(name: "bevp1", scope: !14804, file: !1, line: 2209, type: !7338)
!14810 = !DILocation(line: 2209, column: 20, scope: !14804)
!14811 = !DILocalVariable(name: "bevp0", scope: !14804, file: !1, line: 2209, type: !7338)
!14812 = !DILocation(line: 2209, column: 28, scope: !14804)
!14813 = !DILocalVariable(name: "nr", scope: !14804, file: !1, line: 2210, type: !79)
!14814 = !DILocation(line: 2210, column: 6, scope: !14804)
!14815 = !DILocalVariable(name: "q", scope: !14804, file: !1, line: 2211, type: !378)
!14816 = !DILocation(line: 2211, column: 8, scope: !14804)
!14817 = !DILocation(line: 2213, column: 25, scope: !14804)
!14818 = !DILocation(line: 2213, column: 2, scope: !14804)
!14819 = !DILocation(line: 2215, column: 10, scope: !14804)
!14820 = !DILocation(line: 2215, column: 14, scope: !14804)
!14821 = !DILocation(line: 2215, column: 8, scope: !14804)
!14822 = !DILocation(line: 2216, column: 10, scope: !14804)
!14823 = !DILocation(line: 2216, column: 19, scope: !14804)
!14824 = !DILocation(line: 2216, column: 23, scope: !14804)
!14825 = !DILocation(line: 2216, column: 26, scope: !14804)
!14826 = !DILocation(line: 2216, column: 16, scope: !14804)
!14827 = !DILocation(line: 2216, column: 8, scope: !14804)
!14828 = !DILocation(line: 2217, column: 10, scope: !14804)
!14829 = !DILocation(line: 2217, column: 16, scope: !14804)
!14830 = !DILocation(line: 2217, column: 8, scope: !14804)
!14831 = !DILocation(line: 2219, column: 7, scope: !14804)
!14832 = !DILocation(line: 2219, column: 11, scope: !14804)
!14833 = !DILocation(line: 2219, column: 5, scope: !14804)
!14834 = !DILocation(line: 2220, column: 2, scope: !14804)
!14835 = !DILocation(line: 2220, column: 11, scope: !14804)
!14836 = !DILocation(line: 2222, column: 7, scope: !14837)
!14837 = distinct !DILexicalBlock(scope: !14838, file: !1, line: 2222, column: 7)
!14838 = distinct !DILexicalBlock(scope: !14804, file: !1, line: 2220, column: 15)
!14839 = !DILocation(line: 2222, column: 10, scope: !14837)
!14840 = !DILocation(line: 2222, column: 16, scope: !14837)
!14841 = !DILocation(line: 2222, column: 20, scope: !14837)
!14842 = !DILocation(line: 2222, column: 14, scope: !14837)
!14843 = !DILocation(line: 2222, column: 7, scope: !14838)
!14844 = !DILocation(line: 2223, column: 16, scope: !14845)
!14845 = distinct !DILexicalBlock(scope: !14837, file: !1, line: 2222, column: 24)
!14846 = !DILocation(line: 2223, column: 23, scope: !14845)
!14847 = !DILocation(line: 2223, column: 29, scope: !14845)
!14848 = !DILocation(line: 2223, column: 36, scope: !14845)
!14849 = !DILocation(line: 2223, column: 4, scope: !14845)
!14850 = !DILocation(line: 2224, column: 3, scope: !14845)
!14851 = !DILocation(line: 2226, column: 37, scope: !14852)
!14852 = distinct !DILexicalBlock(scope: !14837, file: !1, line: 2225, column: 8)
!14853 = !DILocation(line: 2226, column: 44, scope: !14852)
!14854 = !DILocation(line: 2226, column: 4, scope: !14852)
!14855 = !DILocation(line: 2229, column: 11, scope: !14838)
!14856 = !DILocation(line: 2229, column: 9, scope: !14838)
!14857 = !DILocation(line: 2230, column: 11, scope: !14838)
!14858 = !DILocation(line: 2230, column: 9, scope: !14838)
!14859 = !DILocation(line: 2231, column: 8, scope: !14838)
!14860 = distinct !{!14860, !14834, !14861}
!14861 = !DILocation(line: 2232, column: 2, scope: !14804)
!14862 = !DILocation(line: 2234, column: 6, scope: !14863)
!14863 = distinct !DILexicalBlock(scope: !14804, file: !1, line: 2234, column: 6)
!14864 = !DILocation(line: 2234, column: 10, scope: !14863)
!14865 = !DILocation(line: 2234, column: 15, scope: !14863)
!14866 = !DILocation(line: 2234, column: 6, scope: !14804)
!14867 = !DILocalVariable(name: "vec_1", scope: !14868, file: !1, line: 2247, type: !201)
!14868 = distinct !DILexicalBlock(scope: !14863, file: !1, line: 2234, column: 22)
!14869 = !DILocation(line: 2247, column: 9, scope: !14868)
!14870 = !DILocalVariable(name: "vec_2", scope: !14868, file: !1, line: 2247, type: !201)
!14871 = !DILocation(line: 2247, column: 31, scope: !14868)
!14872 = !DILocalVariable(name: "angle", scope: !14868, file: !1, line: 2247, type: !128)
!14873 = !DILocation(line: 2247, column: 53, scope: !14868)
!14874 = !DILocalVariable(name: "ang_fac", scope: !14868, file: !1, line: 2247, type: !128)
!14875 = !DILocation(line: 2247, column: 60, scope: !14868)
!14876 = !DILocalVariable(name: "cross_tmp", scope: !14868, file: !1, line: 2247, type: !201)
!14877 = !DILocation(line: 2247, column: 69, scope: !14868)
!14878 = !DILocalVariable(name: "bevp_first", scope: !14868, file: !1, line: 2249, type: !7338)
!14879 = !DILocation(line: 2249, column: 13, scope: !14868)
!14880 = !DILocalVariable(name: "bevp_last", scope: !14868, file: !1, line: 2250, type: !7338)
!14881 = !DILocation(line: 2250, column: 13, scope: !14868)
!14882 = !DILocation(line: 2253, column: 16, scope: !14868)
!14883 = !DILocation(line: 2253, column: 20, scope: !14868)
!14884 = !DILocation(line: 2253, column: 14, scope: !14868)
!14885 = !DILocation(line: 2254, column: 17, scope: !14868)
!14886 = !DILocation(line: 2254, column: 21, scope: !14868)
!14887 = !DILocation(line: 2254, column: 24, scope: !14868)
!14888 = !DILocation(line: 2254, column: 14, scope: !14868)
!14889 = !DILocation(line: 2255, column: 15, scope: !14868)
!14890 = !DILocation(line: 2255, column: 13, scope: !14868)
!14891 = !DILocation(line: 2256, column: 12, scope: !14868)
!14892 = !DILocation(line: 2259, column: 13, scope: !14868)
!14893 = !DILocation(line: 2259, column: 25, scope: !14868)
!14894 = !DILocation(line: 2259, column: 31, scope: !14868)
!14895 = !DILocation(line: 2259, column: 3, scope: !14868)
!14896 = !DILocation(line: 2260, column: 13, scope: !14868)
!14897 = !DILocation(line: 2260, column: 24, scope: !14868)
!14898 = !DILocation(line: 2260, column: 30, scope: !14868)
!14899 = !DILocation(line: 2260, column: 3, scope: !14868)
!14900 = !DILocation(line: 2261, column: 16, scope: !14868)
!14901 = !DILocation(line: 2261, column: 3, scope: !14868)
!14902 = !DILocation(line: 2262, column: 16, scope: !14868)
!14903 = !DILocation(line: 2262, column: 3, scope: !14868)
!14904 = !DILocation(line: 2267, column: 18, scope: !14905)
!14905 = distinct !DILexicalBlock(scope: !14868, file: !1, line: 2266, column: 3)
!14906 = !DILocation(line: 2267, column: 29, scope: !14905)
!14907 = !DILocation(line: 2267, column: 40, scope: !14905)
!14908 = !DILocation(line: 2267, column: 45, scope: !14905)
!14909 = !DILocation(line: 2267, column: 57, scope: !14905)
!14910 = !DILocation(line: 2267, column: 4, scope: !14905)
!14911 = !DILocation(line: 2268, column: 34, scope: !14905)
!14912 = !DILocation(line: 2268, column: 46, scope: !14905)
!14913 = !DILocation(line: 2268, column: 51, scope: !14905)
!14914 = !DILocation(line: 2268, column: 62, scope: !14905)
!14915 = !DILocation(line: 2268, column: 12, scope: !14905)
!14916 = !DILocation(line: 2268, column: 10, scope: !14905)
!14917 = !DILocation(line: 2269, column: 23, scope: !14905)
!14918 = !DILocation(line: 2269, column: 26, scope: !14905)
!14919 = !DILocation(line: 2269, column: 37, scope: !14905)
!14920 = !DILocation(line: 2269, column: 4, scope: !14905)
!14921 = !DILocation(line: 2270, column: 14, scope: !14905)
!14922 = !DILocation(line: 2270, column: 17, scope: !14905)
!14923 = !DILocation(line: 2270, column: 4, scope: !14905)
!14924 = !DILocation(line: 2273, column: 33, scope: !14868)
!14925 = !DILocation(line: 2273, column: 40, scope: !14868)
!14926 = !DILocation(line: 2273, column: 11, scope: !14868)
!14927 = !DILocation(line: 2273, column: 9, scope: !14868)
!14928 = !DILocation(line: 2276, column: 17, scope: !14868)
!14929 = !DILocation(line: 2276, column: 28, scope: !14868)
!14930 = !DILocation(line: 2276, column: 35, scope: !14868)
!14931 = !DILocation(line: 2276, column: 3, scope: !14868)
!14932 = !DILocation(line: 2277, column: 16, scope: !14868)
!14933 = !DILocation(line: 2277, column: 3, scope: !14868)
!14934 = !DILocation(line: 2278, column: 29, scope: !14935)
!14935 = distinct !DILexicalBlock(scope: !14868, file: !1, line: 2278, column: 7)
!14936 = !DILocation(line: 2278, column: 41, scope: !14935)
!14937 = !DILocation(line: 2278, column: 46, scope: !14935)
!14938 = !DILocation(line: 2278, column: 7, scope: !14935)
!14939 = !DILocation(line: 2278, column: 57, scope: !14935)
!14940 = !DILocation(line: 2278, column: 7, scope: !14868)
!14941 = !DILocation(line: 2279, column: 13, scope: !14935)
!14942 = !DILocation(line: 2279, column: 12, scope: !14935)
!14943 = !DILocation(line: 2279, column: 10, scope: !14935)
!14944 = !DILocation(line: 2279, column: 4, scope: !14935)
!14945 = !DILocation(line: 2281, column: 11, scope: !14868)
!14946 = !DILocation(line: 2281, column: 15, scope: !14868)
!14947 = !DILocation(line: 2281, column: 9, scope: !14868)
!14948 = !DILocation(line: 2282, column: 11, scope: !14868)
!14949 = !DILocation(line: 2282, column: 20, scope: !14868)
!14950 = !DILocation(line: 2282, column: 24, scope: !14868)
!14951 = !DILocation(line: 2282, column: 27, scope: !14868)
!14952 = !DILocation(line: 2282, column: 17, scope: !14868)
!14953 = !DILocation(line: 2282, column: 9, scope: !14868)
!14954 = !DILocation(line: 2283, column: 11, scope: !14868)
!14955 = !DILocation(line: 2283, column: 17, scope: !14868)
!14956 = !DILocation(line: 2283, column: 9, scope: !14868)
!14957 = !DILocation(line: 2285, column: 8, scope: !14868)
!14958 = !DILocation(line: 2285, column: 12, scope: !14868)
!14959 = !DILocation(line: 2285, column: 6, scope: !14868)
!14960 = !DILocation(line: 2286, column: 3, scope: !14868)
!14961 = !DILocation(line: 2286, column: 12, scope: !14868)
!14962 = !DILocation(line: 2287, column: 14, scope: !14963)
!14963 = distinct !DILexicalBlock(scope: !14868, file: !1, line: 2286, column: 16)
!14964 = !DILocation(line: 2287, column: 38, scope: !14963)
!14965 = !DILocation(line: 2287, column: 31, scope: !14963)
!14966 = !DILocation(line: 2287, column: 43, scope: !14963)
!14967 = !DILocation(line: 2287, column: 47, scope: !14963)
!14968 = !DILocation(line: 2287, column: 41, scope: !14963)
!14969 = !DILocation(line: 2287, column: 28, scope: !14963)
!14970 = !DILocation(line: 2287, column: 20, scope: !14963)
!14971 = !DILocation(line: 2287, column: 12, scope: !14963)
!14972 = !DILocation(line: 2289, column: 23, scope: !14963)
!14973 = !DILocation(line: 2289, column: 26, scope: !14963)
!14974 = !DILocation(line: 2289, column: 33, scope: !14963)
!14975 = !DILocation(line: 2289, column: 38, scope: !14963)
!14976 = !DILocation(line: 2289, column: 4, scope: !14963)
!14977 = !DILocation(line: 2290, column: 16, scope: !14963)
!14978 = !DILocation(line: 2290, column: 23, scope: !14963)
!14979 = !DILocation(line: 2290, column: 29, scope: !14963)
!14980 = !DILocation(line: 2290, column: 32, scope: !14963)
!14981 = !DILocation(line: 2290, column: 39, scope: !14963)
!14982 = !DILocation(line: 2290, column: 4, scope: !14963)
!14983 = !DILocation(line: 2292, column: 12, scope: !14963)
!14984 = !DILocation(line: 2292, column: 10, scope: !14963)
!14985 = !DILocation(line: 2293, column: 12, scope: !14963)
!14986 = !DILocation(line: 2293, column: 10, scope: !14963)
!14987 = !DILocation(line: 2294, column: 9, scope: !14963)
!14988 = distinct !{!14988, !14960, !14989}
!14989 = !DILocation(line: 2295, column: 3, scope: !14868)
!14990 = !DILocation(line: 2296, column: 2, scope: !14868)
!14991 = !DILocation(line: 2303, column: 11, scope: !14992)
!14992 = distinct !DILexicalBlock(scope: !14863, file: !1, line: 2297, column: 7)
!14993 = !DILocation(line: 2303, column: 15, scope: !14992)
!14994 = !DILocation(line: 2303, column: 9, scope: !14992)
!14995 = !DILocation(line: 2304, column: 11, scope: !14992)
!14996 = !DILocation(line: 2304, column: 17, scope: !14992)
!14997 = !DILocation(line: 2304, column: 9, scope: !14992)
!14998 = !DILocation(line: 2305, column: 36, scope: !14992)
!14999 = !DILocation(line: 2305, column: 43, scope: !14992)
!15000 = !DILocation(line: 2305, column: 3, scope: !14992)
!15001 = !DILocation(line: 2307, column: 11, scope: !14992)
!15002 = !DILocation(line: 2307, column: 15, scope: !14992)
!15003 = !DILocation(line: 2307, column: 9, scope: !14992)
!15004 = !DILocation(line: 2308, column: 11, scope: !14992)
!15005 = !DILocation(line: 2308, column: 20, scope: !14992)
!15006 = !DILocation(line: 2308, column: 24, scope: !14992)
!15007 = !DILocation(line: 2308, column: 27, scope: !14992)
!15008 = !DILocation(line: 2308, column: 17, scope: !14992)
!15009 = !DILocation(line: 2308, column: 9, scope: !14992)
!15010 = !DILocation(line: 2309, column: 11, scope: !14992)
!15011 = !DILocation(line: 2309, column: 17, scope: !14992)
!15012 = !DILocation(line: 2309, column: 9, scope: !14992)
!15013 = !DILocation(line: 2310, column: 36, scope: !14992)
!15014 = !DILocation(line: 2310, column: 43, scope: !14992)
!15015 = !DILocation(line: 2310, column: 3, scope: !14992)
!15016 = !DILocation(line: 2312, column: 1, scope: !14804)
!15017 = distinct !DISubprogram(name: "make_bevel_list_3D_zup", scope: !1, file: !1, line: 2178, type: !9507, scopeLine: 2179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!15018 = !DILocalVariable(name: "bl", arg: 1, scope: !15017, file: !1, line: 2178, type: !7226)
!15019 = !DILocation(line: 2178, column: 45, scope: !15017)
!15020 = !DILocalVariable(name: "bevp", scope: !15017, file: !1, line: 2180, type: !7338)
!15021 = !DILocation(line: 2180, column: 12, scope: !15017)
!15022 = !DILocation(line: 2180, column: 19, scope: !15017)
!15023 = !DILocation(line: 2180, column: 23, scope: !15017)
!15024 = !DILocalVariable(name: "nr", scope: !15017, file: !1, line: 2181, type: !79)
!15025 = !DILocation(line: 2181, column: 6, scope: !15017)
!15026 = !DILocation(line: 2181, column: 11, scope: !15017)
!15027 = !DILocation(line: 2181, column: 15, scope: !15017)
!15028 = !DILocation(line: 2183, column: 25, scope: !15017)
!15029 = !DILocation(line: 2183, column: 2, scope: !15017)
!15030 = !DILocation(line: 2185, column: 2, scope: !15017)
!15031 = !DILocation(line: 2185, column: 11, scope: !15017)
!15032 = !DILocation(line: 2186, column: 15, scope: !15033)
!15033 = distinct !DILexicalBlock(scope: !15017, file: !1, line: 2185, column: 15)
!15034 = !DILocation(line: 2186, column: 21, scope: !15033)
!15035 = !DILocation(line: 2186, column: 27, scope: !15033)
!15036 = !DILocation(line: 2186, column: 33, scope: !15033)
!15037 = !DILocation(line: 2186, column: 3, scope: !15033)
!15038 = !DILocation(line: 2187, column: 7, scope: !15033)
!15039 = distinct !{!15039, !15030, !15040}
!15040 = !DILocation(line: 2188, column: 2, scope: !15017)
!15041 = !DILocation(line: 2189, column: 1, scope: !15017)
!15042 = distinct !DISubprogram(name: "bevel_list_smooth", scope: !1, file: !1, line: 2124, type: !15043, scopeLine: 2125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!15043 = !DISubroutineType(types: !15044)
!15044 = !{null, !7226, !79}
!15045 = !DILocalVariable(name: "bl", arg: 1, scope: !15042, file: !1, line: 2124, type: !7226)
!15046 = !DILocation(line: 2124, column: 40, scope: !15042)
!15047 = !DILocalVariable(name: "smooth_iter", arg: 2, scope: !15042, file: !1, line: 2124, type: !79)
!15048 = !DILocation(line: 2124, column: 48, scope: !15042)
!15049 = !DILocalVariable(name: "bevp2", scope: !15042, file: !1, line: 2126, type: !7338)
!15050 = !DILocation(line: 2126, column: 12, scope: !15042)
!15051 = !DILocalVariable(name: "bevp1", scope: !15042, file: !1, line: 2126, type: !7338)
!15052 = !DILocation(line: 2126, column: 20, scope: !15042)
!15053 = !DILocalVariable(name: "bevp0", scope: !15042, file: !1, line: 2126, type: !7338)
!15054 = !DILocation(line: 2126, column: 28, scope: !15042)
!15055 = !DILocalVariable(name: "nr", scope: !15042, file: !1, line: 2127, type: !79)
!15056 = !DILocation(line: 2127, column: 6, scope: !15042)
!15057 = !DILocalVariable(name: "q", scope: !15042, file: !1, line: 2129, type: !378)
!15058 = !DILocation(line: 2129, column: 8, scope: !15042)
!15059 = !DILocalVariable(name: "bevp0_quat", scope: !15042, file: !1, line: 2130, type: !378)
!15060 = !DILocation(line: 2130, column: 8, scope: !15042)
!15061 = !DILocalVariable(name: "a", scope: !15042, file: !1, line: 2131, type: !79)
!15062 = !DILocation(line: 2131, column: 6, scope: !15042)
!15063 = !DILocation(line: 2133, column: 9, scope: !15064)
!15064 = distinct !DILexicalBlock(scope: !15042, file: !1, line: 2133, column: 2)
!15065 = !DILocation(line: 2133, column: 7, scope: !15064)
!15066 = !DILocation(line: 2133, column: 14, scope: !15067)
!15067 = distinct !DILexicalBlock(scope: !15064, file: !1, line: 2133, column: 2)
!15068 = !DILocation(line: 2133, column: 18, scope: !15067)
!15069 = !DILocation(line: 2133, column: 16, scope: !15067)
!15070 = !DILocation(line: 2133, column: 2, scope: !15064)
!15071 = !DILocation(line: 2134, column: 11, scope: !15072)
!15072 = distinct !DILexicalBlock(scope: !15067, file: !1, line: 2133, column: 36)
!15073 = !DILocation(line: 2134, column: 15, scope: !15072)
!15074 = !DILocation(line: 2134, column: 9, scope: !15072)
!15075 = !DILocation(line: 2135, column: 11, scope: !15072)
!15076 = !DILocation(line: 2135, column: 20, scope: !15072)
!15077 = !DILocation(line: 2135, column: 24, scope: !15072)
!15078 = !DILocation(line: 2135, column: 27, scope: !15072)
!15079 = !DILocation(line: 2135, column: 17, scope: !15072)
!15080 = !DILocation(line: 2135, column: 9, scope: !15072)
!15081 = !DILocation(line: 2136, column: 11, scope: !15072)
!15082 = !DILocation(line: 2136, column: 17, scope: !15072)
!15083 = !DILocation(line: 2136, column: 9, scope: !15072)
!15084 = !DILocation(line: 2138, column: 8, scope: !15072)
!15085 = !DILocation(line: 2138, column: 12, scope: !15072)
!15086 = !DILocation(line: 2138, column: 6, scope: !15072)
!15087 = !DILocation(line: 2140, column: 7, scope: !15088)
!15088 = distinct !DILexicalBlock(scope: !15072, file: !1, line: 2140, column: 7)
!15089 = !DILocation(line: 2140, column: 11, scope: !15088)
!15090 = !DILocation(line: 2140, column: 16, scope: !15088)
!15091 = !DILocation(line: 2140, column: 7, scope: !15072)
!15092 = !DILocation(line: 2143, column: 12, scope: !15093)
!15093 = distinct !DILexicalBlock(scope: !15088, file: !1, line: 2140, column: 23)
!15094 = !DILocation(line: 2143, column: 10, scope: !15093)
!15095 = !DILocation(line: 2144, column: 9, scope: !15093)
!15096 = !DILocation(line: 2145, column: 6, scope: !15093)
!15097 = !DILocation(line: 2147, column: 12, scope: !15093)
!15098 = !DILocation(line: 2147, column: 10, scope: !15093)
!15099 = !DILocation(line: 2148, column: 12, scope: !15093)
!15100 = !DILocation(line: 2148, column: 10, scope: !15093)
!15101 = !DILocation(line: 2149, column: 9, scope: !15093)
!15102 = !DILocation(line: 2150, column: 6, scope: !15093)
!15103 = !DILocation(line: 2151, column: 3, scope: !15093)
!15104 = !DILocation(line: 2153, column: 14, scope: !15072)
!15105 = !DILocation(line: 2153, column: 26, scope: !15072)
!15106 = !DILocation(line: 2153, column: 33, scope: !15072)
!15107 = !DILocation(line: 2153, column: 3, scope: !15072)
!15108 = !DILocation(line: 2155, column: 3, scope: !15072)
!15109 = !DILocation(line: 2155, column: 12, scope: !15072)
!15110 = !DILocalVariable(name: "zaxis", scope: !15111, file: !1, line: 2157, type: !201)
!15111 = distinct !DILexicalBlock(scope: !15072, file: !1, line: 2155, column: 16)
!15112 = !DILocation(line: 2157, column: 10, scope: !15111)
!15113 = !DILocalVariable(name: "cross", scope: !15111, file: !1, line: 2157, type: !201)
!15114 = !DILocation(line: 2157, column: 32, scope: !15111)
!15115 = !DILocalVariable(name: "q2", scope: !15111, file: !1, line: 2157, type: !378)
!15116 = !DILocation(line: 2157, column: 42, scope: !15111)
!15117 = !DILocation(line: 2158, column: 19, scope: !15111)
!15118 = !DILocation(line: 2158, column: 22, scope: !15111)
!15119 = !DILocation(line: 2158, column: 34, scope: !15111)
!15120 = !DILocation(line: 2158, column: 41, scope: !15111)
!15121 = !DILocation(line: 2158, column: 4, scope: !15111)
!15122 = !DILocation(line: 2159, column: 17, scope: !15111)
!15123 = !DILocation(line: 2159, column: 4, scope: !15111)
!15124 = !DILocation(line: 2161, column: 14, scope: !15111)
!15125 = !DILocation(line: 2161, column: 17, scope: !15111)
!15126 = !DILocation(line: 2161, column: 4, scope: !15111)
!15127 = !DILocation(line: 2162, column: 18, scope: !15111)
!15128 = !DILocation(line: 2162, column: 25, scope: !15111)
!15129 = !DILocation(line: 2162, column: 32, scope: !15111)
!15130 = !DILocation(line: 2162, column: 39, scope: !15111)
!15131 = !DILocation(line: 2162, column: 4, scope: !15111)
!15132 = !DILocation(line: 2163, column: 23, scope: !15111)
!15133 = !DILocation(line: 2163, column: 27, scope: !15111)
!15134 = !DILocation(line: 2163, column: 56, scope: !15111)
!15135 = !DILocation(line: 2163, column: 63, scope: !15111)
!15136 = !DILocation(line: 2163, column: 70, scope: !15111)
!15137 = !DILocation(line: 2163, column: 34, scope: !15111)
!15138 = !DILocation(line: 2163, column: 4, scope: !15111)
!15139 = !DILocation(line: 2164, column: 17, scope: !15111)
!15140 = !DILocation(line: 2164, column: 4, scope: !15111)
!15141 = !DILocation(line: 2166, column: 15, scope: !15111)
!15142 = !DILocation(line: 2166, column: 27, scope: !15111)
!15143 = !DILocation(line: 2166, column: 34, scope: !15111)
!15144 = !DILocation(line: 2166, column: 4, scope: !15111)
!15145 = !DILocation(line: 2167, column: 16, scope: !15111)
!15146 = !DILocation(line: 2167, column: 19, scope: !15111)
!15147 = !DILocation(line: 2167, column: 23, scope: !15111)
!15148 = !DILocation(line: 2167, column: 4, scope: !15111)
!15149 = !DILocation(line: 2168, column: 19, scope: !15111)
!15150 = !DILocation(line: 2168, column: 26, scope: !15111)
!15151 = !DILocation(line: 2168, column: 32, scope: !15111)
!15152 = !DILocation(line: 2168, column: 39, scope: !15111)
!15153 = !DILocation(line: 2168, column: 45, scope: !15111)
!15154 = !DILocation(line: 2168, column: 4, scope: !15111)
!15155 = !DILocation(line: 2169, column: 17, scope: !15111)
!15156 = !DILocation(line: 2169, column: 24, scope: !15111)
!15157 = !DILocation(line: 2169, column: 4, scope: !15111)
!15158 = !DILocation(line: 2172, column: 12, scope: !15111)
!15159 = !DILocation(line: 2172, column: 10, scope: !15111)
!15160 = !DILocation(line: 2173, column: 9, scope: !15111)
!15161 = distinct !{!15161, !15108, !15162}
!15162 = !DILocation(line: 2174, column: 3, scope: !15072)
!15163 = !DILocation(line: 2175, column: 2, scope: !15072)
!15164 = !DILocation(line: 2133, column: 32, scope: !15067)
!15165 = !DILocation(line: 2133, column: 2, scope: !15067)
!15166 = distinct !{!15166, !15070, !15167}
!15167 = !DILocation(line: 2175, column: 2, scope: !15064)
!15168 = !DILocation(line: 2176, column: 1, scope: !15042)
!15169 = distinct !DISubprogram(name: "bevel_list_apply_tilt", scope: !1, file: !1, line: 2104, type: !9507, scopeLine: 2105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!15170 = !DILocalVariable(name: "bl", arg: 1, scope: !15169, file: !1, line: 2104, type: !7226)
!15171 = !DILocation(line: 2104, column: 44, scope: !15169)
!15172 = !DILocalVariable(name: "bevp2", scope: !15169, file: !1, line: 2106, type: !7338)
!15173 = !DILocation(line: 2106, column: 12, scope: !15169)
!15174 = !DILocalVariable(name: "bevp1", scope: !15169, file: !1, line: 2106, type: !7338)
!15175 = !DILocation(line: 2106, column: 20, scope: !15169)
!15176 = !DILocalVariable(name: "nr", scope: !15169, file: !1, line: 2107, type: !79)
!15177 = !DILocation(line: 2107, column: 6, scope: !15169)
!15178 = !DILocalVariable(name: "q", scope: !15169, file: !1, line: 2108, type: !378)
!15179 = !DILocation(line: 2108, column: 8, scope: !15169)
!15180 = !DILocation(line: 2110, column: 10, scope: !15169)
!15181 = !DILocation(line: 2110, column: 14, scope: !15169)
!15182 = !DILocation(line: 2110, column: 8, scope: !15169)
!15183 = !DILocation(line: 2111, column: 10, scope: !15169)
!15184 = !DILocation(line: 2111, column: 19, scope: !15169)
!15185 = !DILocation(line: 2111, column: 23, scope: !15169)
!15186 = !DILocation(line: 2111, column: 26, scope: !15169)
!15187 = !DILocation(line: 2111, column: 16, scope: !15169)
!15188 = !DILocation(line: 2111, column: 8, scope: !15169)
!15189 = !DILocation(line: 2113, column: 7, scope: !15169)
!15190 = !DILocation(line: 2113, column: 11, scope: !15169)
!15191 = !DILocation(line: 2113, column: 5, scope: !15169)
!15192 = !DILocation(line: 2114, column: 2, scope: !15169)
!15193 = !DILocation(line: 2114, column: 11, scope: !15169)
!15194 = !DILocation(line: 2115, column: 22, scope: !15195)
!15195 = distinct !DILexicalBlock(scope: !15169, file: !1, line: 2114, column: 15)
!15196 = !DILocation(line: 2115, column: 25, scope: !15195)
!15197 = !DILocation(line: 2115, column: 32, scope: !15195)
!15198 = !DILocation(line: 2115, column: 37, scope: !15195)
!15199 = !DILocation(line: 2115, column: 44, scope: !15195)
!15200 = !DILocation(line: 2115, column: 3, scope: !15195)
!15201 = !DILocation(line: 2116, column: 15, scope: !15195)
!15202 = !DILocation(line: 2116, column: 22, scope: !15195)
!15203 = !DILocation(line: 2116, column: 28, scope: !15195)
!15204 = !DILocation(line: 2116, column: 31, scope: !15195)
!15205 = !DILocation(line: 2116, column: 38, scope: !15195)
!15206 = !DILocation(line: 2116, column: 3, scope: !15195)
!15207 = !DILocation(line: 2117, column: 16, scope: !15195)
!15208 = !DILocation(line: 2117, column: 23, scope: !15195)
!15209 = !DILocation(line: 2117, column: 3, scope: !15195)
!15210 = !DILocation(line: 2119, column: 11, scope: !15195)
!15211 = !DILocation(line: 2119, column: 9, scope: !15195)
!15212 = !DILocation(line: 2120, column: 8, scope: !15195)
!15213 = distinct !{!15213, !15192, !15214}
!15214 = !DILocation(line: 2121, column: 2, scope: !15169)
!15215 = !DILocation(line: 2122, column: 1, scope: !15169)
!15216 = distinct !DISubprogram(name: "bevel_list_calc_bisect", scope: !1, file: !1, line: 2047, type: !9507, scopeLine: 2048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!15217 = !DILocalVariable(name: "bl", arg: 1, scope: !15216, file: !1, line: 2047, type: !7226)
!15218 = !DILocation(line: 2047, column: 45, scope: !15216)
!15219 = !DILocalVariable(name: "bevp2", scope: !15216, file: !1, line: 2049, type: !7338)
!15220 = !DILocation(line: 2049, column: 12, scope: !15216)
!15221 = !DILocalVariable(name: "bevp1", scope: !15216, file: !1, line: 2049, type: !7338)
!15222 = !DILocation(line: 2049, column: 20, scope: !15216)
!15223 = !DILocalVariable(name: "bevp0", scope: !15216, file: !1, line: 2049, type: !7338)
!15224 = !DILocation(line: 2049, column: 28, scope: !15216)
!15225 = !DILocalVariable(name: "nr", scope: !15216, file: !1, line: 2050, type: !79)
!15226 = !DILocation(line: 2050, column: 6, scope: !15216)
!15227 = !DILocalVariable(name: "is_cyclic", scope: !15216, file: !1, line: 2051, type: !551)
!15228 = !DILocation(line: 2051, column: 7, scope: !15216)
!15229 = !DILocation(line: 2051, column: 19, scope: !15216)
!15230 = !DILocation(line: 2051, column: 23, scope: !15216)
!15231 = !DILocation(line: 2051, column: 28, scope: !15216)
!15232 = !DILocation(line: 2053, column: 6, scope: !15233)
!15233 = distinct !DILexicalBlock(scope: !15216, file: !1, line: 2053, column: 6)
!15234 = !DILocation(line: 2053, column: 6, scope: !15216)
!15235 = !DILocation(line: 2054, column: 11, scope: !15236)
!15236 = distinct !DILexicalBlock(scope: !15233, file: !1, line: 2053, column: 17)
!15237 = !DILocation(line: 2054, column: 15, scope: !15236)
!15238 = !DILocation(line: 2054, column: 9, scope: !15236)
!15239 = !DILocation(line: 2055, column: 11, scope: !15236)
!15240 = !DILocation(line: 2055, column: 20, scope: !15236)
!15241 = !DILocation(line: 2055, column: 24, scope: !15236)
!15242 = !DILocation(line: 2055, column: 27, scope: !15236)
!15243 = !DILocation(line: 2055, column: 17, scope: !15236)
!15244 = !DILocation(line: 2055, column: 9, scope: !15236)
!15245 = !DILocation(line: 2056, column: 11, scope: !15236)
!15246 = !DILocation(line: 2056, column: 17, scope: !15236)
!15247 = !DILocation(line: 2056, column: 9, scope: !15236)
!15248 = !DILocation(line: 2057, column: 8, scope: !15236)
!15249 = !DILocation(line: 2057, column: 12, scope: !15236)
!15250 = !DILocation(line: 2057, column: 6, scope: !15236)
!15251 = !DILocation(line: 2058, column: 2, scope: !15236)
!15252 = !DILocation(line: 2068, column: 11, scope: !15253)
!15253 = distinct !DILexicalBlock(scope: !15233, file: !1, line: 2059, column: 7)
!15254 = !DILocation(line: 2068, column: 15, scope: !15253)
!15255 = !DILocation(line: 2068, column: 9, scope: !15253)
!15256 = !DILocation(line: 2069, column: 11, scope: !15253)
!15257 = !DILocation(line: 2069, column: 17, scope: !15253)
!15258 = !DILocation(line: 2069, column: 9, scope: !15253)
!15259 = !DILocation(line: 2070, column: 11, scope: !15253)
!15260 = !DILocation(line: 2070, column: 17, scope: !15253)
!15261 = !DILocation(line: 2070, column: 9, scope: !15253)
!15262 = !DILocation(line: 2072, column: 8, scope: !15253)
!15263 = !DILocation(line: 2072, column: 12, scope: !15253)
!15264 = !DILocation(line: 2072, column: 15, scope: !15253)
!15265 = !DILocation(line: 2072, column: 6, scope: !15253)
!15266 = !DILocation(line: 2075, column: 2, scope: !15216)
!15267 = !DILocation(line: 2075, column: 11, scope: !15216)
!15268 = !DILocation(line: 2077, column: 20, scope: !15269)
!15269 = distinct !DILexicalBlock(scope: !15216, file: !1, line: 2075, column: 15)
!15270 = !DILocation(line: 2077, column: 27, scope: !15269)
!15271 = !DILocation(line: 2077, column: 32, scope: !15269)
!15272 = !DILocation(line: 2077, column: 39, scope: !15269)
!15273 = !DILocation(line: 2077, column: 44, scope: !15269)
!15274 = !DILocation(line: 2077, column: 51, scope: !15269)
!15275 = !DILocation(line: 2077, column: 56, scope: !15269)
!15276 = !DILocation(line: 2077, column: 63, scope: !15269)
!15277 = !DILocation(line: 2077, column: 3, scope: !15269)
!15278 = !DILocation(line: 2079, column: 11, scope: !15269)
!15279 = !DILocation(line: 2079, column: 9, scope: !15269)
!15280 = !DILocation(line: 2080, column: 11, scope: !15269)
!15281 = !DILocation(line: 2080, column: 9, scope: !15269)
!15282 = !DILocation(line: 2081, column: 8, scope: !15269)
!15283 = distinct !{!15283, !15266, !15284}
!15284 = !DILocation(line: 2082, column: 2, scope: !15216)
!15285 = !DILocation(line: 2083, column: 1, scope: !15216)
!15286 = distinct !DISubprogram(name: "bevel_list_flip_tangents", scope: !1, file: !1, line: 2084, type: !9507, scopeLine: 2085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!15287 = !DILocalVariable(name: "bl", arg: 1, scope: !15286, file: !1, line: 2084, type: !7226)
!15288 = !DILocation(line: 2084, column: 47, scope: !15286)
!15289 = !DILocalVariable(name: "bevp2", scope: !15286, file: !1, line: 2086, type: !7338)
!15290 = !DILocation(line: 2086, column: 12, scope: !15286)
!15291 = !DILocalVariable(name: "bevp1", scope: !15286, file: !1, line: 2086, type: !7338)
!15292 = !DILocation(line: 2086, column: 20, scope: !15286)
!15293 = !DILocalVariable(name: "bevp0", scope: !15286, file: !1, line: 2086, type: !7338)
!15294 = !DILocation(line: 2086, column: 28, scope: !15286)
!15295 = !DILocalVariable(name: "nr", scope: !15286, file: !1, line: 2087, type: !79)
!15296 = !DILocation(line: 2087, column: 6, scope: !15286)
!15297 = !DILocation(line: 2089, column: 10, scope: !15286)
!15298 = !DILocation(line: 2089, column: 14, scope: !15286)
!15299 = !DILocation(line: 2089, column: 8, scope: !15286)
!15300 = !DILocation(line: 2090, column: 10, scope: !15286)
!15301 = !DILocation(line: 2090, column: 19, scope: !15286)
!15302 = !DILocation(line: 2090, column: 23, scope: !15286)
!15303 = !DILocation(line: 2090, column: 26, scope: !15286)
!15304 = !DILocation(line: 2090, column: 16, scope: !15286)
!15305 = !DILocation(line: 2090, column: 8, scope: !15286)
!15306 = !DILocation(line: 2091, column: 10, scope: !15286)
!15307 = !DILocation(line: 2091, column: 16, scope: !15286)
!15308 = !DILocation(line: 2091, column: 8, scope: !15286)
!15309 = !DILocation(line: 2093, column: 7, scope: !15286)
!15310 = !DILocation(line: 2093, column: 11, scope: !15286)
!15311 = !DILocation(line: 2093, column: 5, scope: !15286)
!15312 = !DILocation(line: 2094, column: 2, scope: !15286)
!15313 = !DILocation(line: 2094, column: 11, scope: !15286)
!15314 = !DILocation(line: 2095, column: 29, scope: !15315)
!15315 = distinct !DILexicalBlock(scope: !15316, file: !1, line: 2095, column: 7)
!15316 = distinct !DILexicalBlock(scope: !15286, file: !1, line: 2094, column: 15)
!15317 = !DILocation(line: 2095, column: 36, scope: !15315)
!15318 = !DILocation(line: 2095, column: 41, scope: !15315)
!15319 = !DILocation(line: 2095, column: 48, scope: !15315)
!15320 = !DILocation(line: 2095, column: 7, scope: !15315)
!15321 = !DILocation(line: 2095, column: 53, scope: !15315)
!15322 = !DILocation(line: 2095, column: 7, scope: !15316)
!15323 = !DILocation(line: 2096, column: 14, scope: !15315)
!15324 = !DILocation(line: 2096, column: 21, scope: !15315)
!15325 = !DILocation(line: 2096, column: 4, scope: !15315)
!15326 = !DILocation(line: 2098, column: 11, scope: !15316)
!15327 = !DILocation(line: 2098, column: 9, scope: !15316)
!15328 = !DILocation(line: 2099, column: 11, scope: !15316)
!15329 = !DILocation(line: 2099, column: 9, scope: !15316)
!15330 = !DILocation(line: 2100, column: 8, scope: !15316)
!15331 = distinct !{!15331, !15312, !15332}
!15332 = !DILocation(line: 2101, column: 2, scope: !15286)
!15333 = !DILocation(line: 2102, column: 1, scope: !15286)
!15334 = distinct !DISubprogram(name: "negate_v3", scope: !2341, file: !2341, line: 576, type: !3208, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!15335 = !DILocalVariable(name: "r", arg: 1, scope: !15334, file: !2341, line: 576, type: !1325)
!15336 = !DILocation(line: 576, column: 30, scope: !15334)
!15337 = !DILocation(line: 578, column: 10, scope: !15334)
!15338 = !DILocation(line: 578, column: 9, scope: !15334)
!15339 = !DILocation(line: 578, column: 2, scope: !15334)
!15340 = !DILocation(line: 578, column: 7, scope: !15334)
!15341 = !DILocation(line: 579, column: 10, scope: !15334)
!15342 = !DILocation(line: 579, column: 9, scope: !15334)
!15343 = !DILocation(line: 579, column: 2, scope: !15334)
!15344 = !DILocation(line: 579, column: 7, scope: !15334)
!15345 = !DILocation(line: 580, column: 10, scope: !15334)
!15346 = !DILocation(line: 580, column: 9, scope: !15334)
!15347 = !DILocation(line: 580, column: 2, scope: !15334)
!15348 = !DILocation(line: 580, column: 7, scope: !15334)
!15349 = !DILocation(line: 581, column: 1, scope: !15334)
!15350 = distinct !DISubprogram(name: "minimum_twist_between_two_points", scope: !1, file: !1, line: 2191, type: !15351, scopeLine: 2192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!15351 = !DISubroutineType(types: !15352)
!15352 = !{null, !7338, !7338}
!15353 = !DILocalVariable(name: "current_point", arg: 1, scope: !15350, file: !1, line: 2191, type: !7338)
!15354 = !DILocation(line: 2191, column: 56, scope: !15350)
!15355 = !DILocalVariable(name: "previous_point", arg: 2, scope: !15350, file: !1, line: 2191, type: !7338)
!15356 = !DILocation(line: 2191, column: 81, scope: !15350)
!15357 = !DILocalVariable(name: "angle", scope: !15350, file: !1, line: 2193, type: !128)
!15358 = !DILocation(line: 2193, column: 8, scope: !15350)
!15359 = !DILocation(line: 2193, column: 38, scope: !15350)
!15360 = !DILocation(line: 2193, column: 54, scope: !15350)
!15361 = !DILocation(line: 2193, column: 59, scope: !15350)
!15362 = !DILocation(line: 2193, column: 74, scope: !15350)
!15363 = !DILocation(line: 2193, column: 16, scope: !15350)
!15364 = !DILocalVariable(name: "q", scope: !15350, file: !1, line: 2194, type: !378)
!15365 = !DILocation(line: 2194, column: 8, scope: !15350)
!15366 = !DILocation(line: 2196, column: 6, scope: !15367)
!15367 = distinct !DILexicalBlock(scope: !15350, file: !1, line: 2196, column: 6)
!15368 = !DILocation(line: 2196, column: 12, scope: !15367)
!15369 = !DILocation(line: 2196, column: 6, scope: !15350)
!15370 = !DILocalVariable(name: "cross_tmp", scope: !15371, file: !1, line: 2197, type: !201)
!15371 = distinct !DILexicalBlock(scope: !15367, file: !1, line: 2196, column: 20)
!15372 = !DILocation(line: 2197, column: 9, scope: !15371)
!15373 = !DILocation(line: 2198, column: 17, scope: !15371)
!15374 = !DILocation(line: 2198, column: 28, scope: !15371)
!15375 = !DILocation(line: 2198, column: 44, scope: !15371)
!15376 = !DILocation(line: 2198, column: 49, scope: !15371)
!15377 = !DILocation(line: 2198, column: 64, scope: !15371)
!15378 = !DILocation(line: 2198, column: 3, scope: !15371)
!15379 = !DILocation(line: 2199, column: 22, scope: !15371)
!15380 = !DILocation(line: 2199, column: 25, scope: !15371)
!15381 = !DILocation(line: 2199, column: 36, scope: !15371)
!15382 = !DILocation(line: 2199, column: 3, scope: !15371)
!15383 = !DILocation(line: 2200, column: 15, scope: !15371)
!15384 = !DILocation(line: 2200, column: 30, scope: !15371)
!15385 = !DILocation(line: 2200, column: 36, scope: !15371)
!15386 = !DILocation(line: 2200, column: 39, scope: !15371)
!15387 = !DILocation(line: 2200, column: 55, scope: !15371)
!15388 = !DILocation(line: 2200, column: 3, scope: !15371)
!15389 = !DILocation(line: 2201, column: 2, scope: !15371)
!15390 = !DILocation(line: 2203, column: 14, scope: !15391)
!15391 = distinct !DILexicalBlock(scope: !15367, file: !1, line: 2202, column: 7)
!15392 = !DILocation(line: 2203, column: 29, scope: !15391)
!15393 = !DILocation(line: 2203, column: 35, scope: !15391)
!15394 = !DILocation(line: 2203, column: 51, scope: !15391)
!15395 = !DILocation(line: 2203, column: 3, scope: !15391)
!15396 = !DILocation(line: 2205, column: 1, scope: !15350)
!15397 = distinct !DISubprogram(name: "madd_v3_v3v3fl", scope: !2341, file: !2341, line: 527, type: !15398, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!15398 = !DISubroutineType(types: !15399)
!15399 = !{null, !1325, !3191, !3191, !128}
!15400 = !DILocalVariable(name: "r", arg: 1, scope: !15397, file: !2341, line: 527, type: !1325)
!15401 = !DILocation(line: 527, column: 35, scope: !15397)
!15402 = !DILocalVariable(name: "a", arg: 2, scope: !15397, file: !2341, line: 527, type: !3191)
!15403 = !DILocation(line: 527, column: 53, scope: !15397)
!15404 = !DILocalVariable(name: "b", arg: 3, scope: !15397, file: !2341, line: 527, type: !3191)
!15405 = !DILocation(line: 527, column: 71, scope: !15397)
!15406 = !DILocalVariable(name: "f", arg: 4, scope: !15397, file: !2341, line: 527, type: !128)
!15407 = !DILocation(line: 527, column: 83, scope: !15397)
!15408 = !DILocation(line: 529, column: 9, scope: !15397)
!15409 = !DILocation(line: 529, column: 16, scope: !15397)
!15410 = !DILocation(line: 529, column: 23, scope: !15397)
!15411 = !DILocation(line: 529, column: 21, scope: !15397)
!15412 = !DILocation(line: 529, column: 14, scope: !15397)
!15413 = !DILocation(line: 529, column: 2, scope: !15397)
!15414 = !DILocation(line: 529, column: 7, scope: !15397)
!15415 = !DILocation(line: 530, column: 9, scope: !15397)
!15416 = !DILocation(line: 530, column: 16, scope: !15397)
!15417 = !DILocation(line: 530, column: 23, scope: !15397)
!15418 = !DILocation(line: 530, column: 21, scope: !15397)
!15419 = !DILocation(line: 530, column: 14, scope: !15397)
!15420 = !DILocation(line: 530, column: 2, scope: !15397)
!15421 = !DILocation(line: 530, column: 7, scope: !15397)
!15422 = !DILocation(line: 531, column: 9, scope: !15397)
!15423 = !DILocation(line: 531, column: 16, scope: !15397)
!15424 = !DILocation(line: 531, column: 23, scope: !15397)
!15425 = !DILocation(line: 531, column: 21, scope: !15397)
!15426 = !DILocation(line: 531, column: 14, scope: !15397)
!15427 = !DILocation(line: 531, column: 2, scope: !15397)
!15428 = !DILocation(line: 531, column: 7, scope: !15397)
!15429 = !DILocation(line: 532, column: 1, scope: !15397)
!15430 = distinct !DISubprogram(name: "nurbList_handles_swap_select", scope: !1, file: !1, line: 3314, type: !2847, scopeLine: 3315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1849)
!15431 = !DILocalVariable(name: "nu", arg: 1, scope: !15430, file: !1, line: 3314, type: !1782)
!15432 = !DILocation(line: 3314, column: 48, scope: !15430)
!15433 = !DILocalVariable(name: "bezt", scope: !15430, file: !1, line: 3316, type: !1817)
!15434 = !DILocation(line: 3316, column: 13, scope: !15430)
!15435 = !DILocalVariable(name: "i", scope: !15430, file: !1, line: 3317, type: !79)
!15436 = !DILocation(line: 3317, column: 6, scope: !15430)
!15437 = !DILocation(line: 3319, column: 11, scope: !15438)
!15438 = distinct !DILexicalBlock(scope: !15430, file: !1, line: 3319, column: 2)
!15439 = !DILocation(line: 3319, column: 15, scope: !15438)
!15440 = !DILocation(line: 3319, column: 9, scope: !15438)
!15441 = !DILocation(line: 3319, column: 29, scope: !15438)
!15442 = !DILocation(line: 3319, column: 33, scope: !15438)
!15443 = !DILocation(line: 3319, column: 27, scope: !15438)
!15444 = !DILocation(line: 3319, column: 7, scope: !15438)
!15445 = !DILocation(line: 3319, column: 40, scope: !15446)
!15446 = distinct !DILexicalBlock(scope: !15438, file: !1, line: 3319, column: 2)
!15447 = !DILocation(line: 3319, column: 2, scope: !15438)
!15448 = !DILocation(line: 3320, column: 8, scope: !15449)
!15449 = distinct !DILexicalBlock(scope: !15450, file: !1, line: 3320, column: 7)
!15450 = distinct !DILexicalBlock(scope: !15446, file: !1, line: 3319, column: 52)
!15451 = !DILocation(line: 3320, column: 14, scope: !15449)
!15452 = !DILocation(line: 3320, column: 17, scope: !15449)
!15453 = !DILocation(line: 3320, column: 31, scope: !15449)
!15454 = !DILocation(line: 3320, column: 37, scope: !15449)
!15455 = !DILocation(line: 3320, column: 40, scope: !15449)
!15456 = !DILocation(line: 3320, column: 27, scope: !15449)
!15457 = !DILocation(line: 3320, column: 7, scope: !15450)
!15458 = !DILocation(line: 3321, column: 4, scope: !15459)
!15459 = distinct !DILexicalBlock(scope: !15449, file: !1, line: 3320, column: 51)
!15460 = !DILocation(line: 3321, column: 10, scope: !15459)
!15461 = !DILocation(line: 3321, column: 13, scope: !15459)
!15462 = !DILocation(line: 3322, column: 4, scope: !15459)
!15463 = !DILocation(line: 3322, column: 10, scope: !15459)
!15464 = !DILocation(line: 3322, column: 13, scope: !15459)
!15465 = !DILocation(line: 3323, column: 3, scope: !15459)
!15466 = !DILocation(line: 3324, column: 2, scope: !15450)
!15467 = !DILocation(line: 3319, column: 48, scope: !15446)
!15468 = !DILocation(line: 3319, column: 2, scope: !15446)
!15469 = distinct !{!15469, !15447, !15470}
!15470 = !DILocation(line: 3324, column: 2, scope: !15438)
!15471 = !DILocation(line: 3325, column: 1, scope: !15430)
