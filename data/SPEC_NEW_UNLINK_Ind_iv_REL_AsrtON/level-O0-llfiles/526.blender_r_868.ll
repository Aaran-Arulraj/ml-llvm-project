; ModuleID = 'blender/source/blender/editors/interface/interface.c'
source_filename = "blender/source/blender/editors/interface/interface.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.StructRNA = type opaque
%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.ListBase = type { i8*, i8* }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.uiBlock = type { %struct.uiBlock*, %struct.uiBlock*, %struct.ListBase, %struct.Panel*, %struct.uiBlock*, %struct.ListBase, %struct.ListBase, %struct.uiLayout*, %struct.ListBase, [128 x i8], [4 x [4 x float]], %struct.rctf, float, i32, void (%struct.bContext*, i8*, i8*)*, i8*, i8*, void (%struct.bContext*, i8*, i8*)*, i8*, void (%struct.bContext*, i8*, i32)*, i8*, void (%struct.bContext*, i8*, i32)*, i8*, i32 (%struct.bContext*, %struct.uiBlock*, %struct.wmEvent*)*, void (%struct.bContext*, i8*, i8*, i8*, %struct.rcti*)*, i8*, i8*, i32, i16, i8, i8, i8, [7 x i8], double, i8*, i8, i8, i8, i8, i32, i32, i32, i32, i32, %struct.rctf, %struct.ListBase, %struct.uiPopupBlockHandle*, %struct.wmOperator*, i8*, %struct.UnitSettings*, [3 x float], i8, [64 x i8], %struct.PieMenuData }
%struct.Panel = type { %struct.Panel*, %struct.Panel*, %struct.PanelType*, %struct.uiLayout*, [64 x i8], [64 x i8], [64 x i8], i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, %struct.Panel*, i8* }
%struct.PanelType = type { %struct.PanelType*, %struct.PanelType*, [64 x i8], [64 x i8], [64 x i8], [64 x i8], [64 x i8], i32, i32, i32, i32 (%struct.bContext*, %struct.PanelType*)*, void (%struct.bContext*, %struct.Panel*)*, void (%struct.bContext*, %struct.Panel*)*, %struct.ExtensionRNA }
%struct.bContext = type opaque
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.uiLayout = type opaque
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.rctf = type { float, float, float, float }
%struct.uiPopupBlockHandle = type { %struct.ARegion*, [2 x float], double, i8, i8, void (%struct.bContext*, i8*, i32)*, void (%struct.bContext*, i8*)*, i8*, %struct.uiPopupBlockCreate, %struct.wmTimer*, %struct.uiKeyNavLock, %struct.wmOperatorType*, %struct.ScrArea*, %struct.ARegion*, i32, i32, i32, i32, [4 x float], i32, i8, [2 x i32] }
%struct.uiPopupBlockCreate = type { %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)*, %struct.uiBlock* (%struct.bContext*, %struct.uiPopupBlockHandle*, i8*)*, i8*, [2 x i32], %struct.ARegion* }
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type opaque
%struct.bNodeTree = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.uiKeyNavLock = type { i8, [2 x i32] }
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.PropertyRNA = type opaque
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.SpaceType = type { %struct.SpaceType*, %struct.SpaceType*, [64 x i8], i32, i32, %struct.SpaceLink* (%struct.bContext*)*, void (%struct.SpaceLink*)*, void (%struct.wmWindowManager*, %struct.ScrArea*)*, void (%struct.wmWindowManager*, %struct.ScrArea*)*, void (%struct.bScreen*, %struct.ScrArea*, %struct.wmNotifier*)*, void (%struct.bContext*, %struct.ScrArea*)*, %struct.SpaceLink* (%struct.SpaceLink*)*, void ()*, void (%struct.wmKeyConfig*)*, void ()*, i32 (%struct.bContext*, i8*, %struct.bContextDataResult*)*, %struct.ListBase, %struct.ListBase, i32 }
%struct.SpaceLink = type opaque
%struct.wmWindowManager = type { %struct.ID, %struct.wmWindow*, %struct.wmWindow*, %struct.ListBase, i32, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ReportList, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.ListBase, %struct.wmTimer*, i8, [7 x i8] }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmKeyConfig = type { %struct.wmKeyConfig*, %struct.wmKeyConfig*, [64 x i8], [64 x i8], %struct.ListBase, i32, i32 }
%struct.wmNotifier = type { %struct.wmNotifier*, %struct.wmNotifier*, %struct.wmWindowManager*, %struct.wmWindow*, i32, i32, i32, i32, i32, i8* }
%struct.bContextDataResult = type opaque
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type { %struct.ARegionType*, %struct.ARegionType*, i32, void (%struct.wmWindowManager*, %struct.ARegion*)*, void (%struct.wmWindowManager*, %struct.ARegion*)*, void (%struct.bContext*, %struct.ARegion*)*, void (%struct.bScreen*, %struct.ScrArea*, %struct.ARegion*, %struct.wmNotifier*)*, void (%struct.ARegion*)*, i8* (i8*)*, void ()*, void (%struct.wmKeyConfig*)*, void (%struct.wmWindow*, %struct.ScrArea*, %struct.ARegion*)*, i32 (%struct.bContext*, i8*, %struct.bContextDataResult*)*, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i16 }
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.PieMenuData = type { [2 x float], [2 x float], [2 x float], [2 x float], double, i32, i32, float }
%struct.uiBut = type { %struct.uiBut*, %struct.uiBut*, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8*, [128 x i8], [400 x i8], %struct.rctf, i8*, float, float, float, float, float, float, [4 x i8], void (%struct.bContext*, i8*, i8*)*, i8*, i8*, void (%struct.bContext*, i8*, i8*)*, i8*, %struct.bContextStore*, i32 (%struct.bContext*, i8*, i8*)*, i8*, void (%struct.bContext*, i8*, i8*, %struct.uiSearchItems*)*, i8*, void (%struct.bContext*, i8*, i8*)*, i8*, i8*, %struct.uiLink*, [2 x i16], i8*, i8*, i32, i8, i8, i8, i8, i8, i16, i16, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)*, void (%struct.bContext*, %struct.uiLayout*, i8*)*, %struct.PointerRNA, %struct.PropertyRNA*, i32, %struct.PointerRNA, %struct.PropertyRNA*, %struct.wmOperatorType*, %struct.PointerRNA*, i16, i8, i8, i8*, %struct.ImBuf*, float, %struct.uiHandleButtonData*, i8*, i8*, double*, float*, i8*, i8*, %struct.uiBlock* }
%struct.bContextStore = type { %struct.bContextStore*, %struct.bContextStore*, %struct.ListBase, i8 }
%struct.uiSearchItems = type opaque
%struct.uiLink = type { i8**, i8***, i16*, i16, i16, i16, i16, %struct.ListBase }
%struct.ImBuf = type opaque
%struct.uiHandleButtonData = type opaque
%struct.uiStyle = type { %struct.uiStyle*, %struct.uiStyle*, [64 x i8], %struct.uiFontStyle, %struct.uiFontStyle, %struct.uiFontStyle, %struct.uiFontStyle, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.uiFontStyle = type { i16, i16, i16, [6 x i8], i16, i16, i16, i16, i16, i16, float, float }
%struct.uiLinkLine = type { %struct.uiLinkLine*, %struct.uiLinkLine*, %struct.uiBut*, %struct.uiBut*, i16, i16 }
%struct.ColorManagedDisplay = type opaque
%struct.AutoComplete = type { i64, i32, i8*, i8* }
%struct.EnumPropertyItem = type { i32, i8*, i32, i8*, i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.uiStringInfo = type { i32, i8* }
%struct.MenuType = type { %struct.MenuType*, %struct.MenuType*, [64 x i8], [64 x i8], [64 x i8], i8*, i32 (%struct.bContext*, %struct.MenuType*)*, void (%struct.bContext*, %struct.Menu*)*, %struct.ExtensionRNA }
%struct.Menu = type { %struct.MenuType*, %struct.uiLayout* }
%union.IDPropertyTemplate = type { %struct.anon.0 }
%struct.anon.0 = type { i8*, i16, i8 }

@.str = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"%s|%s\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@ui_radial_dir_order = dso_local constant [8 x i8] c"\06\02\04\00\07\01\05\03", align 1, !dbg !0
@ui_radial_dir_to_numpad = dso_local constant [8 x i8] c"\08\09\06\03\02\01\04\07", align 1, !dbg !3264
@ui_radial_dir_to_angle = dso_local constant [8 x i16] [i16 90, i16 45, i16 0, i16 315, i16 270, i16 225, i16 180, i16 135], align 16, !dbg !3267
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.2 = private unnamed_addr constant [42 x i8] c"%s: can't get color, should never happen\0A\00", align 1
@__func__.ui_get_but_vectorf = private unnamed_addr constant [19 x i8] c"ui_get_but_vectorf\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"property removed %s: %p\0A\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"%.*f\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@PointerRNA_NULL = external dso_local constant %struct.PointerRNA, align 8
@.str.6 = private unnamed_addr constant [27 x i8] c"UI_OT_reset_default_button\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.8 = private unnamed_addr constant [8 x i8] c"uiBlock\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.9 = private unnamed_addr constant [16 x i8] c"UI UnitSettings\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"inf\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"-inf\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c" px\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"%s%.*f\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"Press a key\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"Shift \00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"Ctrl \00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"Alt \00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"Cmd \00", align 1
@.str.21 = private unnamed_addr constant [13 x i8] c"AutoComplete\00", align 1
@.str.22 = private unnamed_addr constant [21 x i8] c"AutoCompleteTruncate\00", align 1
@.str.23 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"new uilink\00", align 1
@U = external dso_local global %struct.UserDef, align 8
@.str.25 = private unnamed_addr constant [11 x i8] c"uiButOpPtr\00", align 1
@.str.26 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"linkline\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"uiBut\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"ui_def_but str\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@.str.30 = private unnamed_addr constant [33 x i8] c"%s: %s has no enum property set\0A\00", align 1
@__func__.operator_enum_search_cb = private unnamed_addr constant [24 x i8] c"operator_enum_search_cb\00", align 1
@.str.31 = private unnamed_addr constant [37 x i8] c"%s: %s \22%s\22 is not an enum property\0A\00", align 1
@.str.32 = private unnamed_addr constant [31 x i8] c"%s: op->prop for '%s' is NULL\0A\00", align 1
@__func__.operator_enum_call_cb = private unnamed_addr constant [22 x i8] c"operator_enum_call_cb\00", align 1
@__const.ui_but_event_operator_string.val = private unnamed_addr constant { i32, [12 x i8] } { i32 0, [12 x i8] undef }, align 8
@__func__.ui_but_event_operator_string = private unnamed_addr constant [29 x i8] c"ui_but_event_operator_string\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.34 = private unnamed_addr constant [16 x i8] c"WM_OT_call_menu\00", align 1
@.str.35 = private unnamed_addr constant [21 x i8] c"WM_OT_context_toggle\00", align 1
@.str.36 = private unnamed_addr constant [26 x i8] c"WM_OT_context_toggle_enum\00", align 1
@.str.37 = private unnamed_addr constant [24 x i8] c"WM_OT_context_cycle_int\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"WM_OT_context_cycle_enum\00", align 1
@.str.39 = private unnamed_addr constant [26 x i8] c"WM_OT_context_cycle_array\00", align 1
@.str.40 = private unnamed_addr constant [24 x i8] c"WM_OT_context_menu_enum\00", align 1
@RNA_Space = external dso_local global %struct.StructRNA, align 1
@.str.41 = private unnamed_addr constant [14 x i8] c"space_data.%s\00", align 1
@RNA_DopeSheet = external dso_local global %struct.StructRNA, align 1
@.str.42 = private unnamed_addr constant [24 x i8] c"space_data.dopesheet.%s\00", align 1
@RNA_ToolSettings = external dso_local global %struct.StructRNA, align 1
@.str.43 = private unnamed_addr constant [9 x i8] c"scene.%s\00", align 1
@__const.ui_but_event_property_operator_string.val = private unnamed_addr constant { i32, [12 x i8] } { i32 0, [12 x i8] undef }, align 8
@__func__.ui_but_event_property_operator_string = private unnamed_addr constant [38 x i8] c"ui_but_event_property_operator_string\00", align 1
@.str.44 = private unnamed_addr constant [10 x i8] c"data_path\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ui_block_is_menu(%struct.uiBlock* %block) #0 !dbg !3275 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !3281, metadata !DIExpression()), !dbg !3282
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3283
  %flag = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 27, !dbg !3284
  %1 = load i32, i32* %flag, align 8, !dbg !3284
  %and = and i32 %1, 1, !dbg !3285
  %cmp = icmp ne i32 %and, 0, !dbg !3286
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3287

land.rhs:                                         ; preds = %entry
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3288
  %flag1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %2, i32 0, i32 27, !dbg !3289
  %3 = load i32, i32* %flag1, align 8, !dbg !3289
  %and2 = and i32 %3, 256, !dbg !3290
  %cmp3 = icmp eq i32 %and2, 0, !dbg !3291
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !3292
  %land.ext = zext i1 %4 to i32, !dbg !3287
  %conv = trunc i32 %land.ext to i8, !dbg !3293
  ret i8 %conv, !dbg !3294
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ui_block_is_pie_menu(%struct.uiBlock* %block) #0 !dbg !3295 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !3296, metadata !DIExpression()), !dbg !3297
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3298
  %flag = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 27, !dbg !3299
  %1 = load i32, i32* %flag, align 8, !dbg !3299
  %and = and i32 %1, 1048576, !dbg !3300
  %cmp = icmp ne i32 %and, 0, !dbg !3301
  %conv = zext i1 %cmp to i32, !dbg !3301
  %conv1 = trunc i32 %conv to i8, !dbg !3302
  ret i8 %conv1, !dbg !3303
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_block_to_window_fl(%struct.ARegion* %ar, %struct.uiBlock* %block, float* %x, float* %y) #0 !dbg !3304 {
entry:
  %ar.addr = alloca %struct.ARegion*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %x.addr = alloca float*, align 8
  %y.addr = alloca float*, align 8
  %gx = alloca float, align 4
  %gy = alloca float, align 4
  %sx = alloca i32, align 4
  %sy = alloca i32, align 4
  %getsizex = alloca i32, align 4
  %getsizey = alloca i32, align 4
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !3309, metadata !DIExpression()), !dbg !3310
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !3311, metadata !DIExpression()), !dbg !3312
  store float* %x, float** %x.addr, align 8
  call void @llvm.dbg.declare(metadata float** %x.addr, metadata !3313, metadata !DIExpression()), !dbg !3314
  store float* %y, float** %y.addr, align 8
  call void @llvm.dbg.declare(metadata float** %y.addr, metadata !3315, metadata !DIExpression()), !dbg !3316
  call void @llvm.dbg.declare(metadata float* %gx, metadata !3317, metadata !DIExpression()), !dbg !3318
  call void @llvm.dbg.declare(metadata float* %gy, metadata !3319, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.declare(metadata i32* %sx, metadata !3321, metadata !DIExpression()), !dbg !3322
  call void @llvm.dbg.declare(metadata i32* %sy, metadata !3323, metadata !DIExpression()), !dbg !3324
  call void @llvm.dbg.declare(metadata i32* %getsizex, metadata !3325, metadata !DIExpression()), !dbg !3326
  call void @llvm.dbg.declare(metadata i32* %getsizey, metadata !3327, metadata !DIExpression()), !dbg !3328
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3329
  %winrct = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 3, !dbg !3330
  %call = call i32 @BLI_rcti_size_x(%struct.rcti* %winrct), !dbg !3331
  %add = add nsw i32 %call, 1, !dbg !3332
  store i32 %add, i32* %getsizex, align 4, !dbg !3333
  %1 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3334
  %winrct1 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %1, i32 0, i32 3, !dbg !3335
  %call2 = call i32 @BLI_rcti_size_y(%struct.rcti* %winrct1), !dbg !3336
  %add3 = add nsw i32 %call2, 1, !dbg !3337
  store i32 %add3, i32* %getsizey, align 4, !dbg !3338
  %2 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3339
  %winrct4 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %2, i32 0, i32 3, !dbg !3340
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct4, i32 0, i32 0, !dbg !3341
  %3 = load i32, i32* %xmin, align 8, !dbg !3341
  store i32 %3, i32* %sx, align 4, !dbg !3342
  %4 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3343
  %winrct5 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %4, i32 0, i32 3, !dbg !3344
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct5, i32 0, i32 2, !dbg !3345
  %5 = load i32, i32* %ymin, align 8, !dbg !3345
  store i32 %5, i32* %sy, align 4, !dbg !3346
  %6 = load float*, float** %x.addr, align 8, !dbg !3347
  %7 = load float, float* %6, align 4, !dbg !3348
  store float %7, float* %gx, align 4, !dbg !3349
  %8 = load float*, float** %y.addr, align 8, !dbg !3350
  %9 = load float, float* %8, align 4, !dbg !3351
  store float %9, float* %gy, align 4, !dbg !3352
  %10 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3353
  %panel = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %10, i32 0, i32 3, !dbg !3355
  %11 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !3355
  %tobool = icmp ne %struct.Panel* %11, null, !dbg !3353
  br i1 %tobool, label %if.then, label %if.end, !dbg !3356

if.then:                                          ; preds = %entry
  %12 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3357
  %panel6 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %12, i32 0, i32 3, !dbg !3359
  %13 = load %struct.Panel*, %struct.Panel** %panel6, align 8, !dbg !3359
  %ofsx = getelementptr inbounds %struct.Panel, %struct.Panel* %13, i32 0, i32 7, !dbg !3360
  %14 = load i32, i32* %ofsx, align 8, !dbg !3360
  %conv = sitofp i32 %14 to float, !dbg !3357
  %15 = load float, float* %gx, align 4, !dbg !3361
  %add7 = fadd float %15, %conv, !dbg !3361
  store float %add7, float* %gx, align 4, !dbg !3361
  %16 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3362
  %panel8 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %16, i32 0, i32 3, !dbg !3363
  %17 = load %struct.Panel*, %struct.Panel** %panel8, align 8, !dbg !3363
  %ofsy = getelementptr inbounds %struct.Panel, %struct.Panel* %17, i32 0, i32 8, !dbg !3364
  %18 = load i32, i32* %ofsy, align 4, !dbg !3364
  %conv9 = sitofp i32 %18 to float, !dbg !3362
  %19 = load float, float* %gy, align 4, !dbg !3365
  %add10 = fadd float %19, %conv9, !dbg !3365
  store float %add10, float* %gy, align 4, !dbg !3365
  br label %if.end, !dbg !3366

if.end:                                           ; preds = %if.then, %entry
  %20 = load i32, i32* %sx, align 4, !dbg !3367
  %conv11 = sitofp i32 %20 to float, !dbg !3368
  %21 = load i32, i32* %getsizex, align 4, !dbg !3369
  %conv12 = sitofp i32 %21 to float, !dbg !3370
  %22 = load float, float* %gx, align 4, !dbg !3371
  %23 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3372
  %winmat = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %23, i32 0, i32 10, !dbg !3373
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !3372
  %arrayidx13 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !3372
  %24 = load float, float* %arrayidx13, align 8, !dbg !3372
  %mul = fmul float %22, %24, !dbg !3374
  %25 = load float, float* %gy, align 4, !dbg !3375
  %26 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3376
  %winmat14 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %26, i32 0, i32 10, !dbg !3377
  %arrayidx15 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat14, i64 0, i64 1, !dbg !3376
  %arrayidx16 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx15, i64 0, i64 0, !dbg !3376
  %27 = load float, float* %arrayidx16, align 8, !dbg !3376
  %mul17 = fmul float %25, %27, !dbg !3378
  %add18 = fadd float %mul, %mul17, !dbg !3379
  %28 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3380
  %winmat19 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %28, i32 0, i32 10, !dbg !3381
  %arrayidx20 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat19, i64 0, i64 3, !dbg !3380
  %arrayidx21 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx20, i64 0, i64 0, !dbg !3380
  %29 = load float, float* %arrayidx21, align 8, !dbg !3380
  %add22 = fadd float %add18, %29, !dbg !3382
  %mul23 = fmul float 5.000000e-01, %add22, !dbg !3383
  %add24 = fadd float 5.000000e-01, %mul23, !dbg !3384
  %mul25 = fmul float %conv12, %add24, !dbg !3385
  %add26 = fadd float %conv11, %mul25, !dbg !3386
  %30 = load float*, float** %x.addr, align 8, !dbg !3387
  store float %add26, float* %30, align 4, !dbg !3388
  %31 = load i32, i32* %sy, align 4, !dbg !3389
  %conv27 = sitofp i32 %31 to float, !dbg !3390
  %32 = load i32, i32* %getsizey, align 4, !dbg !3391
  %conv28 = sitofp i32 %32 to float, !dbg !3392
  %33 = load float, float* %gx, align 4, !dbg !3393
  %34 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3394
  %winmat29 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %34, i32 0, i32 10, !dbg !3395
  %arrayidx30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat29, i64 0, i64 0, !dbg !3394
  %arrayidx31 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx30, i64 0, i64 1, !dbg !3394
  %35 = load float, float* %arrayidx31, align 4, !dbg !3394
  %mul32 = fmul float %33, %35, !dbg !3396
  %36 = load float, float* %gy, align 4, !dbg !3397
  %37 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3398
  %winmat33 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %37, i32 0, i32 10, !dbg !3399
  %arrayidx34 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat33, i64 0, i64 1, !dbg !3398
  %arrayidx35 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx34, i64 0, i64 1, !dbg !3398
  %38 = load float, float* %arrayidx35, align 4, !dbg !3398
  %mul36 = fmul float %36, %38, !dbg !3400
  %add37 = fadd float %mul32, %mul36, !dbg !3401
  %39 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3402
  %winmat38 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %39, i32 0, i32 10, !dbg !3403
  %arrayidx39 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat38, i64 0, i64 3, !dbg !3402
  %arrayidx40 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx39, i64 0, i64 1, !dbg !3402
  %40 = load float, float* %arrayidx40, align 4, !dbg !3402
  %add41 = fadd float %add37, %40, !dbg !3404
  %mul42 = fmul float 5.000000e-01, %add41, !dbg !3405
  %add43 = fadd float 5.000000e-01, %mul42, !dbg !3406
  %mul44 = fmul float %conv28, %add43, !dbg !3407
  %add45 = fadd float %conv27, %mul44, !dbg !3408
  %41 = load float*, float** %y.addr, align 8, !dbg !3409
  store float %add45, float* %41, align 4, !dbg !3410
  ret void, !dbg !3411
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @BLI_rcti_size_x(%struct.rcti* %rct) #0 !dbg !3412 {
entry:
  %rct.addr = alloca %struct.rcti*, align 8
  store %struct.rcti* %rct, %struct.rcti** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct.addr, metadata !3418, metadata !DIExpression()), !dbg !3419
  %0 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !3420
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 1, !dbg !3421
  %1 = load i32, i32* %xmax, align 4, !dbg !3421
  %2 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !3422
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 0, !dbg !3423
  %3 = load i32, i32* %xmin, align 4, !dbg !3423
  %sub = sub nsw i32 %1, %3, !dbg !3424
  ret i32 %sub, !dbg !3425
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @BLI_rcti_size_y(%struct.rcti* %rct) #0 !dbg !3426 {
entry:
  %rct.addr = alloca %struct.rcti*, align 8
  store %struct.rcti* %rct, %struct.rcti** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct.addr, metadata !3427, metadata !DIExpression()), !dbg !3428
  %0 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !3429
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 3, !dbg !3430
  %1 = load i32, i32* %ymax, align 4, !dbg !3430
  %2 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !3431
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 2, !dbg !3432
  %3 = load i32, i32* %ymin, align 4, !dbg !3432
  %sub = sub nsw i32 %1, %3, !dbg !3433
  ret i32 %sub, !dbg !3434
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_block_to_window(%struct.ARegion* %ar, %struct.uiBlock* %block, i32* %x, i32* %y) #0 !dbg !3435 {
entry:
  %ar.addr = alloca %struct.ARegion*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %x.addr = alloca i32*, align 8
  %y.addr = alloca i32*, align 8
  %fx = alloca float, align 4
  %fy = alloca float, align 4
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !3438, metadata !DIExpression()), !dbg !3439
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !3440, metadata !DIExpression()), !dbg !3441
  store i32* %x, i32** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %x.addr, metadata !3442, metadata !DIExpression()), !dbg !3443
  store i32* %y, i32** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %y.addr, metadata !3444, metadata !DIExpression()), !dbg !3445
  call void @llvm.dbg.declare(metadata float* %fx, metadata !3446, metadata !DIExpression()), !dbg !3447
  call void @llvm.dbg.declare(metadata float* %fy, metadata !3448, metadata !DIExpression()), !dbg !3449
  %0 = load i32*, i32** %x.addr, align 8, !dbg !3450
  %1 = load i32, i32* %0, align 4, !dbg !3451
  %conv = sitofp i32 %1 to float, !dbg !3451
  store float %conv, float* %fx, align 4, !dbg !3452
  %2 = load i32*, i32** %y.addr, align 8, !dbg !3453
  %3 = load i32, i32* %2, align 4, !dbg !3454
  %conv1 = sitofp i32 %3 to float, !dbg !3454
  store float %conv1, float* %fy, align 4, !dbg !3455
  %4 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3456
  %5 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3457
  call void @ui_block_to_window_fl(%struct.ARegion* %4, %struct.uiBlock* %5, float* %fx, float* %fy), !dbg !3458
  %6 = load float, float* %fx, align 4, !dbg !3459
  %add = fadd float %6, 5.000000e-01, !dbg !3460
  %conv2 = fptosi float %add to i32, !dbg !3461
  %7 = load i32*, i32** %x.addr, align 8, !dbg !3462
  store i32 %conv2, i32* %7, align 4, !dbg !3463
  %8 = load float, float* %fy, align 4, !dbg !3464
  %add3 = fadd float %8, 5.000000e-01, !dbg !3465
  %conv4 = fptosi float %add3 to i32, !dbg !3466
  %9 = load i32*, i32** %y.addr, align 8, !dbg !3467
  store i32 %conv4, i32* %9, align 4, !dbg !3468
  ret void, !dbg !3469
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_block_to_window_rctf(%struct.ARegion* %ar, %struct.uiBlock* %block, %struct.rctf* %rct_dst, %struct.rctf* %rct_src) #0 !dbg !3470 {
entry:
  %ar.addr = alloca %struct.ARegion*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %rct_dst.addr = alloca %struct.rctf*, align 8
  %rct_src.addr = alloca %struct.rctf*, align 8
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !3476, metadata !DIExpression()), !dbg !3477
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !3478, metadata !DIExpression()), !dbg !3479
  store %struct.rctf* %rct_dst, %struct.rctf** %rct_dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rct_dst.addr, metadata !3480, metadata !DIExpression()), !dbg !3481
  store %struct.rctf* %rct_src, %struct.rctf** %rct_src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rct_src.addr, metadata !3482, metadata !DIExpression()), !dbg !3483
  %0 = load %struct.rctf*, %struct.rctf** %rct_dst.addr, align 8, !dbg !3484
  %1 = load %struct.rctf*, %struct.rctf** %rct_src.addr, align 8, !dbg !3485
  %2 = bitcast %struct.rctf* %0 to i8*, !dbg !3486
  %3 = bitcast %struct.rctf* %1 to i8*, !dbg !3486
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 16, i1 false), !dbg !3486
  %4 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3487
  %5 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3488
  %6 = load %struct.rctf*, %struct.rctf** %rct_dst.addr, align 8, !dbg !3489
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %6, i32 0, i32 0, !dbg !3490
  %7 = load %struct.rctf*, %struct.rctf** %rct_dst.addr, align 8, !dbg !3491
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %7, i32 0, i32 2, !dbg !3492
  call void @ui_block_to_window_fl(%struct.ARegion* %4, %struct.uiBlock* %5, float* %xmin, float* %ymin), !dbg !3493
  %8 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3494
  %9 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3495
  %10 = load %struct.rctf*, %struct.rctf** %rct_dst.addr, align 8, !dbg !3496
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %10, i32 0, i32 1, !dbg !3497
  %11 = load %struct.rctf*, %struct.rctf** %rct_dst.addr, align 8, !dbg !3498
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %11, i32 0, i32 3, !dbg !3499
  call void @ui_block_to_window_fl(%struct.ARegion* %8, %struct.uiBlock* %9, float* %xmax, float* %ymax), !dbg !3500
  ret void, !dbg !3501
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_window_to_block_fl(%struct.ARegion* %ar, %struct.uiBlock* %block, float* %x, float* %y) #0 !dbg !3502 {
entry:
  %ar.addr = alloca %struct.ARegion*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %x.addr = alloca float*, align 8
  %y.addr = alloca float*, align 8
  %a = alloca float, align 4
  %b = alloca float, align 4
  %c = alloca float, align 4
  %d = alloca float, align 4
  %e = alloca float, align 4
  %f = alloca float, align 4
  %px = alloca float, align 4
  %py = alloca float, align 4
  %sx = alloca i32, align 4
  %sy = alloca i32, align 4
  %getsizex = alloca i32, align 4
  %getsizey = alloca i32, align 4
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !3503, metadata !DIExpression()), !dbg !3504
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !3505, metadata !DIExpression()), !dbg !3506
  store float* %x, float** %x.addr, align 8
  call void @llvm.dbg.declare(metadata float** %x.addr, metadata !3507, metadata !DIExpression()), !dbg !3508
  store float* %y, float** %y.addr, align 8
  call void @llvm.dbg.declare(metadata float** %y.addr, metadata !3509, metadata !DIExpression()), !dbg !3510
  call void @llvm.dbg.declare(metadata float* %a, metadata !3511, metadata !DIExpression()), !dbg !3512
  call void @llvm.dbg.declare(metadata float* %b, metadata !3513, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.declare(metadata float* %c, metadata !3515, metadata !DIExpression()), !dbg !3516
  call void @llvm.dbg.declare(metadata float* %d, metadata !3517, metadata !DIExpression()), !dbg !3518
  call void @llvm.dbg.declare(metadata float* %e, metadata !3519, metadata !DIExpression()), !dbg !3520
  call void @llvm.dbg.declare(metadata float* %f, metadata !3521, metadata !DIExpression()), !dbg !3522
  call void @llvm.dbg.declare(metadata float* %px, metadata !3523, metadata !DIExpression()), !dbg !3524
  call void @llvm.dbg.declare(metadata float* %py, metadata !3525, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.declare(metadata i32* %sx, metadata !3527, metadata !DIExpression()), !dbg !3528
  call void @llvm.dbg.declare(metadata i32* %sy, metadata !3529, metadata !DIExpression()), !dbg !3530
  call void @llvm.dbg.declare(metadata i32* %getsizex, metadata !3531, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.declare(metadata i32* %getsizey, metadata !3533, metadata !DIExpression()), !dbg !3534
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3535
  %winrct = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 3, !dbg !3536
  %call = call i32 @BLI_rcti_size_x(%struct.rcti* %winrct), !dbg !3537
  %add = add nsw i32 %call, 1, !dbg !3538
  store i32 %add, i32* %getsizex, align 4, !dbg !3539
  %1 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3540
  %winrct1 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %1, i32 0, i32 3, !dbg !3541
  %call2 = call i32 @BLI_rcti_size_y(%struct.rcti* %winrct1), !dbg !3542
  %add3 = add nsw i32 %call2, 1, !dbg !3543
  store i32 %add3, i32* %getsizey, align 4, !dbg !3544
  %2 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3545
  %winrct4 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %2, i32 0, i32 3, !dbg !3546
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct4, i32 0, i32 0, !dbg !3547
  %3 = load i32, i32* %xmin, align 8, !dbg !3547
  store i32 %3, i32* %sx, align 4, !dbg !3548
  %4 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3549
  %winrct5 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %4, i32 0, i32 3, !dbg !3550
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct5, i32 0, i32 2, !dbg !3551
  %5 = load i32, i32* %ymin, align 8, !dbg !3551
  store i32 %5, i32* %sy, align 4, !dbg !3552
  %6 = load i32, i32* %getsizex, align 4, !dbg !3553
  %conv = sitofp i32 %6 to float, !dbg !3554
  %mul = fmul float 5.000000e-01, %conv, !dbg !3555
  %7 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3556
  %winmat = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %7, i32 0, i32 10, !dbg !3557
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !3556
  %arrayidx6 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !3556
  %8 = load float, float* %arrayidx6, align 8, !dbg !3556
  %mul7 = fmul float %mul, %8, !dbg !3558
  store float %mul7, float* %a, align 4, !dbg !3559
  %9 = load i32, i32* %getsizex, align 4, !dbg !3560
  %conv8 = sitofp i32 %9 to float, !dbg !3561
  %mul9 = fmul float 5.000000e-01, %conv8, !dbg !3562
  %10 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3563
  %winmat10 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %10, i32 0, i32 10, !dbg !3564
  %arrayidx11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat10, i64 0, i64 1, !dbg !3563
  %arrayidx12 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx11, i64 0, i64 0, !dbg !3563
  %11 = load float, float* %arrayidx12, align 8, !dbg !3563
  %mul13 = fmul float %mul9, %11, !dbg !3565
  store float %mul13, float* %b, align 4, !dbg !3566
  %12 = load i32, i32* %getsizex, align 4, !dbg !3567
  %conv14 = sitofp i32 %12 to float, !dbg !3568
  %mul15 = fmul float 5.000000e-01, %conv14, !dbg !3569
  %13 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3570
  %winmat16 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %13, i32 0, i32 10, !dbg !3571
  %arrayidx17 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat16, i64 0, i64 3, !dbg !3570
  %arrayidx18 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx17, i64 0, i64 0, !dbg !3570
  %14 = load float, float* %arrayidx18, align 8, !dbg !3570
  %add19 = fadd float 1.000000e+00, %14, !dbg !3572
  %mul20 = fmul float %mul15, %add19, !dbg !3573
  store float %mul20, float* %c, align 4, !dbg !3574
  %15 = load i32, i32* %getsizey, align 4, !dbg !3575
  %conv21 = sitofp i32 %15 to float, !dbg !3576
  %mul22 = fmul float 5.000000e-01, %conv21, !dbg !3577
  %16 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3578
  %winmat23 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %16, i32 0, i32 10, !dbg !3579
  %arrayidx24 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat23, i64 0, i64 0, !dbg !3578
  %arrayidx25 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx24, i64 0, i64 1, !dbg !3578
  %17 = load float, float* %arrayidx25, align 4, !dbg !3578
  %mul26 = fmul float %mul22, %17, !dbg !3580
  store float %mul26, float* %d, align 4, !dbg !3581
  %18 = load i32, i32* %getsizey, align 4, !dbg !3582
  %conv27 = sitofp i32 %18 to float, !dbg !3583
  %mul28 = fmul float 5.000000e-01, %conv27, !dbg !3584
  %19 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3585
  %winmat29 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %19, i32 0, i32 10, !dbg !3586
  %arrayidx30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat29, i64 0, i64 1, !dbg !3585
  %arrayidx31 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx30, i64 0, i64 1, !dbg !3585
  %20 = load float, float* %arrayidx31, align 4, !dbg !3585
  %mul32 = fmul float %mul28, %20, !dbg !3587
  store float %mul32, float* %e, align 4, !dbg !3588
  %21 = load i32, i32* %getsizey, align 4, !dbg !3589
  %conv33 = sitofp i32 %21 to float, !dbg !3590
  %mul34 = fmul float 5.000000e-01, %conv33, !dbg !3591
  %22 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3592
  %winmat35 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %22, i32 0, i32 10, !dbg !3593
  %arrayidx36 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat35, i64 0, i64 3, !dbg !3592
  %arrayidx37 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx36, i64 0, i64 1, !dbg !3592
  %23 = load float, float* %arrayidx37, align 4, !dbg !3592
  %add38 = fadd float 1.000000e+00, %23, !dbg !3594
  %mul39 = fmul float %mul34, %add38, !dbg !3595
  store float %mul39, float* %f, align 4, !dbg !3596
  %24 = load float*, float** %x.addr, align 8, !dbg !3597
  %25 = load float, float* %24, align 4, !dbg !3598
  %26 = load i32, i32* %sx, align 4, !dbg !3599
  %conv40 = sitofp i32 %26 to float, !dbg !3599
  %sub = fsub float %25, %conv40, !dbg !3600
  store float %sub, float* %px, align 4, !dbg !3601
  %27 = load float*, float** %y.addr, align 8, !dbg !3602
  %28 = load float, float* %27, align 4, !dbg !3603
  %29 = load i32, i32* %sy, align 4, !dbg !3604
  %conv41 = sitofp i32 %29 to float, !dbg !3604
  %sub42 = fsub float %28, %conv41, !dbg !3605
  store float %sub42, float* %py, align 4, !dbg !3606
  %30 = load float, float* %a, align 4, !dbg !3607
  %31 = load float, float* %py, align 4, !dbg !3608
  %32 = load float, float* %f, align 4, !dbg !3609
  %sub43 = fsub float %31, %32, !dbg !3610
  %mul44 = fmul float %30, %sub43, !dbg !3611
  %33 = load float, float* %d, align 4, !dbg !3612
  %34 = load float, float* %c, align 4, !dbg !3613
  %35 = load float, float* %px, align 4, !dbg !3614
  %sub45 = fsub float %34, %35, !dbg !3615
  %mul46 = fmul float %33, %sub45, !dbg !3616
  %add47 = fadd float %mul44, %mul46, !dbg !3617
  %36 = load float, float* %a, align 4, !dbg !3618
  %37 = load float, float* %e, align 4, !dbg !3619
  %mul48 = fmul float %36, %37, !dbg !3620
  %38 = load float, float* %d, align 4, !dbg !3621
  %39 = load float, float* %b, align 4, !dbg !3622
  %mul49 = fmul float %38, %39, !dbg !3623
  %sub50 = fsub float %mul48, %mul49, !dbg !3624
  %div = fdiv float %add47, %sub50, !dbg !3625
  %40 = load float*, float** %y.addr, align 8, !dbg !3626
  store float %div, float* %40, align 4, !dbg !3627
  %41 = load float, float* %px, align 4, !dbg !3628
  %42 = load float, float* %b, align 4, !dbg !3629
  %43 = load float*, float** %y.addr, align 8, !dbg !3630
  %44 = load float, float* %43, align 4, !dbg !3631
  %mul51 = fmul float %42, %44, !dbg !3632
  %sub52 = fsub float %41, %mul51, !dbg !3633
  %45 = load float, float* %c, align 4, !dbg !3634
  %sub53 = fsub float %sub52, %45, !dbg !3635
  %46 = load float, float* %a, align 4, !dbg !3636
  %div54 = fdiv float %sub53, %46, !dbg !3637
  %47 = load float*, float** %x.addr, align 8, !dbg !3638
  store float %div54, float* %47, align 4, !dbg !3639
  %48 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3640
  %panel = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %48, i32 0, i32 3, !dbg !3642
  %49 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !3642
  %tobool = icmp ne %struct.Panel* %49, null, !dbg !3640
  br i1 %tobool, label %if.then, label %if.end, !dbg !3643

if.then:                                          ; preds = %entry
  %50 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3644
  %panel55 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %50, i32 0, i32 3, !dbg !3646
  %51 = load %struct.Panel*, %struct.Panel** %panel55, align 8, !dbg !3646
  %ofsx = getelementptr inbounds %struct.Panel, %struct.Panel* %51, i32 0, i32 7, !dbg !3647
  %52 = load i32, i32* %ofsx, align 8, !dbg !3647
  %conv56 = sitofp i32 %52 to float, !dbg !3644
  %53 = load float*, float** %x.addr, align 8, !dbg !3648
  %54 = load float, float* %53, align 4, !dbg !3649
  %sub57 = fsub float %54, %conv56, !dbg !3649
  store float %sub57, float* %53, align 4, !dbg !3649
  %55 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3650
  %panel58 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %55, i32 0, i32 3, !dbg !3651
  %56 = load %struct.Panel*, %struct.Panel** %panel58, align 8, !dbg !3651
  %ofsy = getelementptr inbounds %struct.Panel, %struct.Panel* %56, i32 0, i32 8, !dbg !3652
  %57 = load i32, i32* %ofsy, align 4, !dbg !3652
  %conv59 = sitofp i32 %57 to float, !dbg !3650
  %58 = load float*, float** %y.addr, align 8, !dbg !3653
  %59 = load float, float* %58, align 4, !dbg !3654
  %sub60 = fsub float %59, %conv59, !dbg !3654
  store float %sub60, float* %58, align 4, !dbg !3654
  br label %if.end, !dbg !3655

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3656
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_window_to_block(%struct.ARegion* %ar, %struct.uiBlock* %block, i32* %x, i32* %y) #0 !dbg !3657 {
entry:
  %ar.addr = alloca %struct.ARegion*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %x.addr = alloca i32*, align 8
  %y.addr = alloca i32*, align 8
  %fx = alloca float, align 4
  %fy = alloca float, align 4
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !3658, metadata !DIExpression()), !dbg !3659
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !3660, metadata !DIExpression()), !dbg !3661
  store i32* %x, i32** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %x.addr, metadata !3662, metadata !DIExpression()), !dbg !3663
  store i32* %y, i32** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %y.addr, metadata !3664, metadata !DIExpression()), !dbg !3665
  call void @llvm.dbg.declare(metadata float* %fx, metadata !3666, metadata !DIExpression()), !dbg !3667
  call void @llvm.dbg.declare(metadata float* %fy, metadata !3668, metadata !DIExpression()), !dbg !3669
  %0 = load i32*, i32** %x.addr, align 8, !dbg !3670
  %1 = load i32, i32* %0, align 4, !dbg !3671
  %conv = sitofp i32 %1 to float, !dbg !3671
  store float %conv, float* %fx, align 4, !dbg !3672
  %2 = load i32*, i32** %y.addr, align 8, !dbg !3673
  %3 = load i32, i32* %2, align 4, !dbg !3674
  %conv1 = sitofp i32 %3 to float, !dbg !3674
  store float %conv1, float* %fy, align 4, !dbg !3675
  %4 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3676
  %5 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3677
  call void @ui_window_to_block_fl(%struct.ARegion* %4, %struct.uiBlock* %5, float* %fx, float* %fy), !dbg !3678
  %6 = load float, float* %fx, align 4, !dbg !3679
  %add = fadd float %6, 5.000000e-01, !dbg !3680
  %conv2 = fptosi float %add to i32, !dbg !3681
  %7 = load i32*, i32** %x.addr, align 8, !dbg !3682
  store i32 %conv2, i32* %7, align 4, !dbg !3683
  %8 = load float, float* %fy, align 4, !dbg !3684
  %add3 = fadd float %8, 5.000000e-01, !dbg !3685
  %conv4 = fptosi float %add3 to i32, !dbg !3686
  %9 = load i32*, i32** %y.addr, align 8, !dbg !3687
  store i32 %conv4, i32* %9, align 4, !dbg !3688
  ret void, !dbg !3689
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_window_to_region(%struct.ARegion* %ar, i32* %x, i32* %y) #0 !dbg !3690 {
entry:
  %ar.addr = alloca %struct.ARegion*, align 8
  %x.addr = alloca i32*, align 8
  %y.addr = alloca i32*, align 8
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !3693, metadata !DIExpression()), !dbg !3694
  store i32* %x, i32** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %x.addr, metadata !3695, metadata !DIExpression()), !dbg !3696
  store i32* %y, i32** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %y.addr, metadata !3697, metadata !DIExpression()), !dbg !3698
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3699
  %winrct = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 3, !dbg !3700
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct, i32 0, i32 0, !dbg !3701
  %1 = load i32, i32* %xmin, align 8, !dbg !3701
  %2 = load i32*, i32** %x.addr, align 8, !dbg !3702
  %3 = load i32, i32* %2, align 4, !dbg !3703
  %sub = sub nsw i32 %3, %1, !dbg !3703
  store i32 %sub, i32* %2, align 4, !dbg !3703
  %4 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3704
  %winrct1 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %4, i32 0, i32 3, !dbg !3705
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct1, i32 0, i32 2, !dbg !3706
  %5 = load i32, i32* %ymin, align 8, !dbg !3706
  %6 = load i32*, i32** %y.addr, align 8, !dbg !3707
  %7 = load i32, i32* %6, align 4, !dbg !3708
  %sub2 = sub nsw i32 %7, %5, !dbg !3708
  store i32 %sub2, i32* %6, align 4, !dbg !3708
  ret void, !dbg !3709
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_block_translate(%struct.uiBlock* %block, i32 %x, i32 %y) #0 !dbg !3710 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !3713, metadata !DIExpression()), !dbg !3714
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !3715, metadata !DIExpression()), !dbg !3716
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !3717, metadata !DIExpression()), !dbg !3718
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !3719, metadata !DIExpression()), !dbg !3720
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3721
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 2, !dbg !3723
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 0, !dbg !3724
  %1 = load i8*, i8** %first, align 8, !dbg !3724
  %2 = bitcast i8* %1 to %struct.uiBut*, !dbg !3721
  store %struct.uiBut* %2, %struct.uiBut** %but, align 8, !dbg !3725
  br label %for.cond, !dbg !3726

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !3727
  %tobool = icmp ne %struct.uiBut* %3, null, !dbg !3729
  br i1 %tobool, label %for.body, label %for.end, !dbg !3729

for.body:                                         ; preds = %for.cond
  %4 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !3730
  %rect = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 18, !dbg !3732
  %5 = load i32, i32* %x.addr, align 4, !dbg !3733
  %conv = sitofp i32 %5 to float, !dbg !3733
  %6 = load i32, i32* %y.addr, align 4, !dbg !3734
  %conv1 = sitofp i32 %6 to float, !dbg !3734
  call void @BLI_rctf_translate(%struct.rctf* %rect, float %conv, float %conv1), !dbg !3735
  br label %for.inc, !dbg !3736

for.inc:                                          ; preds = %for.body
  %7 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !3737
  %next = getelementptr inbounds %struct.uiBut, %struct.uiBut* %7, i32 0, i32 0, !dbg !3738
  %8 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !3738
  store %struct.uiBut* %8, %struct.uiBut** %but, align 8, !dbg !3739
  br label %for.cond, !dbg !3740, !llvm.loop !3741

for.end:                                          ; preds = %for.cond
  %9 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3743
  %rect2 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %9, i32 0, i32 11, !dbg !3744
  %10 = load i32, i32* %x.addr, align 4, !dbg !3745
  %conv3 = sitofp i32 %10 to float, !dbg !3745
  %11 = load i32, i32* %y.addr, align 4, !dbg !3746
  %conv4 = sitofp i32 %11 to float, !dbg !3746
  call void @BLI_rctf_translate(%struct.rctf* %rect2, float %conv3, float %conv4), !dbg !3747
  ret void, !dbg !3748
}

declare dso_local void @BLI_rctf_translate(%struct.rctf*, float, float) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_bounds_block(%struct.uiBlock* %block) #0 !dbg !3749 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %bt = alloca %struct.uiBut*, align 8
  %xof = alloca i32, align 4
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !3752, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.declare(metadata %struct.uiBut** %bt, metadata !3754, metadata !DIExpression()), !dbg !3755
  call void @llvm.dbg.declare(metadata i32* %xof, metadata !3756, metadata !DIExpression()), !dbg !3757
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3758
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 2, !dbg !3760
  %call = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %buttons), !dbg !3761
  %tobool = icmp ne i8 %call, 0, !dbg !3761
  br i1 %tobool, label %if.then, label %if.else, !dbg !3762

if.then:                                          ; preds = %entry
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3763
  %panel = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 3, !dbg !3766
  %2 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !3766
  %tobool1 = icmp ne %struct.Panel* %2, null, !dbg !3763
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !3767

if.then2:                                         ; preds = %if.then
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3768
  %rect = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %3, i32 0, i32 11, !dbg !3770
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 0, !dbg !3771
  store float 0.000000e+00, float* %xmin, align 8, !dbg !3772
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3773
  %panel3 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %4, i32 0, i32 3, !dbg !3774
  %5 = load %struct.Panel*, %struct.Panel** %panel3, align 8, !dbg !3774
  %sizex = getelementptr inbounds %struct.Panel, %struct.Panel* %5, i32 0, i32 9, !dbg !3775
  %6 = load i32, i32* %sizex, align 8, !dbg !3775
  %conv = sitofp i32 %6 to float, !dbg !3773
  %7 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3776
  %rect4 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %7, i32 0, i32 11, !dbg !3777
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect4, i32 0, i32 1, !dbg !3778
  store float %conv, float* %xmax, align 4, !dbg !3779
  %8 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3780
  %rect5 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %8, i32 0, i32 11, !dbg !3781
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect5, i32 0, i32 2, !dbg !3782
  store float 0.000000e+00, float* %ymin, align 8, !dbg !3783
  %9 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3784
  %panel6 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %9, i32 0, i32 3, !dbg !3785
  %10 = load %struct.Panel*, %struct.Panel** %panel6, align 8, !dbg !3785
  %sizey = getelementptr inbounds %struct.Panel, %struct.Panel* %10, i32 0, i32 10, !dbg !3786
  %11 = load i32, i32* %sizey, align 4, !dbg !3786
  %conv7 = sitofp i32 %11 to float, !dbg !3784
  %12 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3787
  %rect8 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %12, i32 0, i32 11, !dbg !3788
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect8, i32 0, i32 3, !dbg !3789
  store float %conv7, float* %ymax, align 4, !dbg !3790
  br label %if.end, !dbg !3791

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end31, !dbg !3792

if.else:                                          ; preds = %entry
  %13 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3793
  %rect9 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %13, i32 0, i32 11, !dbg !3795
  call void @BLI_rctf_init_minmax(%struct.rctf* %rect9), !dbg !3796
  %14 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3797
  %buttons10 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %14, i32 0, i32 2, !dbg !3799
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons10, i32 0, i32 0, !dbg !3800
  %15 = load i8*, i8** %first, align 8, !dbg !3800
  %16 = bitcast i8* %15 to %struct.uiBut*, !dbg !3797
  store %struct.uiBut* %16, %struct.uiBut** %bt, align 8, !dbg !3801
  br label %for.cond, !dbg !3802

for.cond:                                         ; preds = %for.inc, %if.else
  %17 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !3803
  %tobool11 = icmp ne %struct.uiBut* %17, null, !dbg !3805
  br i1 %tobool11, label %for.body, label %for.end, !dbg !3805

for.body:                                         ; preds = %for.cond
  %18 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3806
  %rect12 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %18, i32 0, i32 11, !dbg !3808
  %19 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !3809
  %rect13 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %19, i32 0, i32 18, !dbg !3810
  call void @BLI_rctf_union(%struct.rctf* %rect12, %struct.rctf* %rect13), !dbg !3811
  br label %for.inc, !dbg !3812

for.inc:                                          ; preds = %for.body
  %20 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !3813
  %next = getelementptr inbounds %struct.uiBut, %struct.uiBut* %20, i32 0, i32 0, !dbg !3814
  %21 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !3814
  store %struct.uiBut* %21, %struct.uiBut** %bt, align 8, !dbg !3815
  br label %for.cond, !dbg !3816, !llvm.loop !3817

for.end:                                          ; preds = %for.cond
  %22 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3819
  %bounds = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %22, i32 0, i32 42, !dbg !3820
  %23 = load i32, i32* %bounds, align 8, !dbg !3820
  %conv14 = sitofp i32 %23 to float, !dbg !3819
  %24 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3821
  %rect15 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %24, i32 0, i32 11, !dbg !3822
  %xmin16 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect15, i32 0, i32 0, !dbg !3823
  %25 = load float, float* %xmin16, align 8, !dbg !3824
  %sub = fsub float %25, %conv14, !dbg !3824
  store float %sub, float* %xmin16, align 8, !dbg !3824
  %26 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3825
  %bounds17 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %26, i32 0, i32 42, !dbg !3826
  %27 = load i32, i32* %bounds17, align 8, !dbg !3826
  %conv18 = sitofp i32 %27 to float, !dbg !3825
  %28 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3827
  %rect19 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %28, i32 0, i32 11, !dbg !3828
  %ymin20 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect19, i32 0, i32 2, !dbg !3829
  %29 = load float, float* %ymin20, align 8, !dbg !3830
  %sub21 = fsub float %29, %conv18, !dbg !3830
  store float %sub21, float* %ymin20, align 8, !dbg !3830
  %30 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3831
  %bounds22 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %30, i32 0, i32 42, !dbg !3832
  %31 = load i32, i32* %bounds22, align 8, !dbg !3832
  %conv23 = sitofp i32 %31 to float, !dbg !3831
  %32 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3833
  %rect24 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %32, i32 0, i32 11, !dbg !3834
  %xmax25 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect24, i32 0, i32 1, !dbg !3835
  %33 = load float, float* %xmax25, align 4, !dbg !3836
  %add = fadd float %33, %conv23, !dbg !3836
  store float %add, float* %xmax25, align 4, !dbg !3836
  %34 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3837
  %bounds26 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %34, i32 0, i32 42, !dbg !3838
  %35 = load i32, i32* %bounds26, align 8, !dbg !3838
  %conv27 = sitofp i32 %35 to float, !dbg !3837
  %36 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3839
  %rect28 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %36, i32 0, i32 11, !dbg !3840
  %ymax29 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect28, i32 0, i32 3, !dbg !3841
  %37 = load float, float* %ymax29, align 4, !dbg !3842
  %add30 = fadd float %37, %conv27, !dbg !3842
  store float %add30, float* %ymax29, align 4, !dbg !3842
  br label %if.end31

if.end31:                                         ; preds = %for.end, %if.end
  %38 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3843
  %rect32 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %38, i32 0, i32 11, !dbg !3844
  %xmin33 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect32, i32 0, i32 0, !dbg !3845
  %39 = load float, float* %xmin33, align 8, !dbg !3845
  %40 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3846
  %rect34 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %40, i32 0, i32 11, !dbg !3847
  %call35 = call float @BLI_rctf_size_x(%struct.rctf* %rect34), !dbg !3848
  %41 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3849
  %minbounds = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %41, i32 0, i32 43, !dbg !3850
  %42 = load i32, i32* %minbounds, align 4, !dbg !3850
  %conv36 = sitofp i32 %42 to float, !dbg !3849
  %call37 = call float @max_ff(float %call35, float %conv36), !dbg !3851
  %add38 = fadd float %39, %call37, !dbg !3852
  %43 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3853
  %rect39 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %43, i32 0, i32 11, !dbg !3854
  %xmax40 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect39, i32 0, i32 1, !dbg !3855
  store float %add38, float* %xmax40, align 4, !dbg !3856
  %44 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3857
  %buttons41 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %44, i32 0, i32 2, !dbg !3858
  %first42 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons41, i32 0, i32 0, !dbg !3859
  %45 = load i8*, i8** %first42, align 8, !dbg !3859
  %46 = bitcast i8* %45 to %struct.uiBut*, !dbg !3857
  store %struct.uiBut* %46, %struct.uiBut** %bt, align 8, !dbg !3860
  %47 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !3861
  %tobool43 = icmp ne %struct.uiBut* %47, null, !dbg !3861
  br i1 %tobool43, label %land.lhs.true, label %if.else47, !dbg !3863

land.lhs.true:                                    ; preds = %if.end31
  %48 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !3864
  %str = getelementptr inbounds %struct.uiBut, %struct.uiBut* %48, i32 0, i32 15, !dbg !3865
  %49 = load i8*, i8** %str, align 8, !dbg !3865
  %call44 = call i32 @strncmp(i8* %49, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 5) #8, !dbg !3866
  %cmp = icmp eq i32 %call44, 0, !dbg !3867
  br i1 %cmp, label %if.then46, label %if.else47, !dbg !3868

if.then46:                                        ; preds = %land.lhs.true
  store i32 10, i32* %xof, align 4, !dbg !3869
  br label %if.end48, !dbg !3870

if.else47:                                        ; preds = %land.lhs.true, %if.end31
  store i32 40, i32* %xof, align 4, !dbg !3871
  br label %if.end48

if.end48:                                         ; preds = %if.else47, %if.then46
  %50 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3872
  %rect49 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %50, i32 0, i32 11, !dbg !3873
  %xmin50 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect49, i32 0, i32 0, !dbg !3874
  %51 = load float, float* %xmin50, align 8, !dbg !3874
  %52 = load i32, i32* %xof, align 4, !dbg !3875
  %conv51 = sitofp i32 %52 to float, !dbg !3875
  %sub52 = fsub float %51, %conv51, !dbg !3876
  %53 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3877
  %safety = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %53, i32 0, i32 44, !dbg !3878
  %xmin53 = getelementptr inbounds %struct.rctf, %struct.rctf* %safety, i32 0, i32 0, !dbg !3879
  store float %sub52, float* %xmin53, align 8, !dbg !3880
  %54 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3881
  %rect54 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %54, i32 0, i32 11, !dbg !3882
  %ymin55 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect54, i32 0, i32 2, !dbg !3883
  %55 = load float, float* %ymin55, align 8, !dbg !3883
  %56 = load i32, i32* %xof, align 4, !dbg !3884
  %conv56 = sitofp i32 %56 to float, !dbg !3884
  %sub57 = fsub float %55, %conv56, !dbg !3885
  %57 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3886
  %safety58 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %57, i32 0, i32 44, !dbg !3887
  %ymin59 = getelementptr inbounds %struct.rctf, %struct.rctf* %safety58, i32 0, i32 2, !dbg !3888
  store float %sub57, float* %ymin59, align 8, !dbg !3889
  %58 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3890
  %rect60 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %58, i32 0, i32 11, !dbg !3891
  %xmax61 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect60, i32 0, i32 1, !dbg !3892
  %59 = load float, float* %xmax61, align 4, !dbg !3892
  %60 = load i32, i32* %xof, align 4, !dbg !3893
  %conv62 = sitofp i32 %60 to float, !dbg !3893
  %add63 = fadd float %59, %conv62, !dbg !3894
  %61 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3895
  %safety64 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %61, i32 0, i32 44, !dbg !3896
  %xmax65 = getelementptr inbounds %struct.rctf, %struct.rctf* %safety64, i32 0, i32 1, !dbg !3897
  store float %add63, float* %xmax65, align 4, !dbg !3898
  %62 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3899
  %rect66 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %62, i32 0, i32 11, !dbg !3900
  %ymax67 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect66, i32 0, i32 3, !dbg !3901
  %63 = load float, float* %ymax67, align 4, !dbg !3901
  %64 = load i32, i32* %xof, align 4, !dbg !3902
  %conv68 = sitofp i32 %64 to float, !dbg !3902
  %add69 = fadd float %63, %conv68, !dbg !3903
  %65 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3904
  %safety70 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %65, i32 0, i32 44, !dbg !3905
  %ymax71 = getelementptr inbounds %struct.rctf, %struct.rctf* %safety70, i32 0, i32 3, !dbg !3906
  store float %add69, float* %ymax71, align 4, !dbg !3907
  ret void, !dbg !3908
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %lb) #0 !dbg !3909 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !3915, metadata !DIExpression()), !dbg !3916
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !3917
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !3918
  %1 = load i8*, i8** %first, align 8, !dbg !3918
  %cmp = icmp eq i8* %1, null, !dbg !3919
  %conv = zext i1 %cmp to i32, !dbg !3919
  %conv1 = trunc i32 %conv to i8, !dbg !3920
  ret i8 %conv1, !dbg !3921
}

declare dso_local void @BLI_rctf_init_minmax(%struct.rctf*) #3

declare dso_local void @BLI_rctf_union(%struct.rctf*, %struct.rctf*) #3

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !3922 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !3926, metadata !DIExpression()), !dbg !3927
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !3928, metadata !DIExpression()), !dbg !3929
  %0 = load float, float* %a.addr, align 4, !dbg !3930
  %1 = load float, float* %b.addr, align 4, !dbg !3931
  %cmp = fcmp ogt float %0, %1, !dbg !3932
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3933

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !3934
  br label %cond.end, !dbg !3933

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !3935
  br label %cond.end, !dbg !3933

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !3933
  ret float %cond, !dbg !3936
}

; Function Attrs: noinline nounwind uwtable
define internal float @BLI_rctf_size_x(%struct.rctf* %rct) #0 !dbg !3937 {
entry:
  %rct.addr = alloca %struct.rctf*, align 8
  store %struct.rctf* %rct, %struct.rctf** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rct.addr, metadata !3942, metadata !DIExpression()), !dbg !3943
  %0 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !3944
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 1, !dbg !3945
  %1 = load float, float* %xmax, align 4, !dbg !3945
  %2 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !3946
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 0, !dbg !3947
  %3 = load float, float* %xmin, align 4, !dbg !3947
  %sub = fsub float %1, %3, !dbg !3948
  ret float %sub, !dbg !3949
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiBoundsBlock(%struct.uiBlock* %block, i32 %addval) #0 !dbg !3950 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %addval.addr = alloca i32, align 4
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !3953, metadata !DIExpression()), !dbg !3954
  store i32 %addval, i32* %addval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addval.addr, metadata !3955, metadata !DIExpression()), !dbg !3956
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3957
  %cmp = icmp eq %struct.uiBlock* %0, null, !dbg !3959
  br i1 %cmp, label %if.then, label %if.end, !dbg !3960

if.then:                                          ; preds = %entry
  br label %return, !dbg !3961

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %addval.addr, align 4, !dbg !3962
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3963
  %bounds = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %2, i32 0, i32 42, !dbg !3964
  store i32 %1, i32* %bounds, align 8, !dbg !3965
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3966
  %bounds_type = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %3, i32 0, i32 39, !dbg !3967
  store i32 1, i32* %bounds_type, align 4, !dbg !3968
  br label %return, !dbg !3969

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !3969
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiTextBoundsBlock(%struct.uiBlock* %block, i32 %addval) #0 !dbg !3970 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %addval.addr = alloca i32, align 4
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !3971, metadata !DIExpression()), !dbg !3972
  store i32 %addval, i32* %addval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addval.addr, metadata !3973, metadata !DIExpression()), !dbg !3974
  %0 = load i32, i32* %addval.addr, align 4, !dbg !3975
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3976
  %bounds = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 42, !dbg !3977
  store i32 %0, i32* %bounds, align 8, !dbg !3978
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3979
  %bounds_type = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %2, i32 0, i32 39, !dbg !3980
  store i32 2, i32* %bounds_type, align 4, !dbg !3981
  ret void, !dbg !3982
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiPopupBoundsBlock(%struct.uiBlock* %block, i32 %addval, i32 %mx, i32 %my) #0 !dbg !3983 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %addval.addr = alloca i32, align 4
  %mx.addr = alloca i32, align 4
  %my.addr = alloca i32, align 4
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !3986, metadata !DIExpression()), !dbg !3987
  store i32 %addval, i32* %addval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addval.addr, metadata !3988, metadata !DIExpression()), !dbg !3989
  store i32 %mx, i32* %mx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mx.addr, metadata !3990, metadata !DIExpression()), !dbg !3991
  store i32 %my, i32* %my.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %my.addr, metadata !3992, metadata !DIExpression()), !dbg !3993
  %0 = load i32, i32* %addval.addr, align 4, !dbg !3994
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3995
  %bounds = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 42, !dbg !3996
  store i32 %0, i32* %bounds, align 8, !dbg !3997
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3998
  %bounds_type = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %2, i32 0, i32 39, !dbg !3999
  store i32 3, i32* %bounds_type, align 4, !dbg !4000
  %3 = load i32, i32* %mx.addr, align 4, !dbg !4001
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4002
  %mx1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %4, i32 0, i32 40, !dbg !4003
  store i32 %3, i32* %mx1, align 8, !dbg !4004
  %5 = load i32, i32* %my.addr, align 4, !dbg !4005
  %6 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4006
  %my2 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %6, i32 0, i32 41, !dbg !4007
  store i32 %5, i32* %my2, align 4, !dbg !4008
  ret void, !dbg !4009
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiMenuPopupBoundsBlock(%struct.uiBlock* %block, i32 %addval, i32 %mx, i32 %my) #0 !dbg !4010 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %addval.addr = alloca i32, align 4
  %mx.addr = alloca i32, align 4
  %my.addr = alloca i32, align 4
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !4011, metadata !DIExpression()), !dbg !4012
  store i32 %addval, i32* %addval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addval.addr, metadata !4013, metadata !DIExpression()), !dbg !4014
  store i32 %mx, i32* %mx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mx.addr, metadata !4015, metadata !DIExpression()), !dbg !4016
  store i32 %my, i32* %my.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %my.addr, metadata !4017, metadata !DIExpression()), !dbg !4018
  %0 = load i32, i32* %addval.addr, align 4, !dbg !4019
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4020
  %bounds = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 42, !dbg !4021
  store i32 %0, i32* %bounds, align 8, !dbg !4022
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4023
  %bounds_type = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %2, i32 0, i32 39, !dbg !4024
  store i32 4, i32* %bounds_type, align 4, !dbg !4025
  %3 = load i32, i32* %mx.addr, align 4, !dbg !4026
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4027
  %mx1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %4, i32 0, i32 40, !dbg !4028
  store i32 %3, i32* %mx1, align 8, !dbg !4029
  %5 = load i32, i32* %my.addr, align 4, !dbg !4030
  %6 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4031
  %my2 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %6, i32 0, i32 41, !dbg !4032
  store i32 %5, i32* %my2, align 4, !dbg !4033
  ret void, !dbg !4034
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiCenteredBoundsBlock(%struct.uiBlock* %block, i32 %addval) #0 !dbg !4035 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %addval.addr = alloca i32, align 4
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !4036, metadata !DIExpression()), !dbg !4037
  store i32 %addval, i32* %addval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addval.addr, metadata !4038, metadata !DIExpression()), !dbg !4039
  %0 = load i32, i32* %addval.addr, align 4, !dbg !4040
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4041
  %bounds = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 42, !dbg !4042
  store i32 %0, i32* %bounds, align 8, !dbg !4043
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4044
  %bounds_type = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %2, i32 0, i32 39, !dbg !4045
  store i32 5, i32* %bounds_type, align 4, !dbg !4046
  ret void, !dbg !4047
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiExplicitBoundsBlock(%struct.uiBlock* %block, i32 %minx, i32 %miny, i32 %maxx, i32 %maxy) #0 !dbg !4048 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %minx.addr = alloca i32, align 4
  %miny.addr = alloca i32, align 4
  %maxx.addr = alloca i32, align 4
  %maxy.addr = alloca i32, align 4
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !4051, metadata !DIExpression()), !dbg !4052
  store i32 %minx, i32* %minx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %minx.addr, metadata !4053, metadata !DIExpression()), !dbg !4054
  store i32 %miny, i32* %miny.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %miny.addr, metadata !4055, metadata !DIExpression()), !dbg !4056
  store i32 %maxx, i32* %maxx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxx.addr, metadata !4057, metadata !DIExpression()), !dbg !4058
  store i32 %maxy, i32* %maxy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxy.addr, metadata !4059, metadata !DIExpression()), !dbg !4060
  %0 = load i32, i32* %minx.addr, align 4, !dbg !4061
  %conv = sitofp i32 %0 to float, !dbg !4061
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4062
  %rect = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 11, !dbg !4063
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 0, !dbg !4064
  store float %conv, float* %xmin, align 8, !dbg !4065
  %2 = load i32, i32* %miny.addr, align 4, !dbg !4066
  %conv1 = sitofp i32 %2 to float, !dbg !4066
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4067
  %rect2 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %3, i32 0, i32 11, !dbg !4068
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect2, i32 0, i32 2, !dbg !4069
  store float %conv1, float* %ymin, align 8, !dbg !4070
  %4 = load i32, i32* %maxx.addr, align 4, !dbg !4071
  %conv3 = sitofp i32 %4 to float, !dbg !4071
  %5 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4072
  %rect4 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %5, i32 0, i32 11, !dbg !4073
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect4, i32 0, i32 1, !dbg !4074
  store float %conv3, float* %xmax, align 4, !dbg !4075
  %6 = load i32, i32* %maxy.addr, align 4, !dbg !4076
  %conv5 = sitofp i32 %6 to float, !dbg !4076
  %7 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4077
  %rect6 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %7, i32 0, i32 11, !dbg !4078
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect6, i32 0, i32 3, !dbg !4079
  store float %conv5, float* %ymax, align 4, !dbg !4080
  %8 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4081
  %bounds_type = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %8, i32 0, i32 39, !dbg !4082
  store i32 0, i32* %bounds_type, align 4, !dbg !4083
  ret void, !dbg !4084
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @ui_but_find_old(%struct.uiBlock* %block_old, %struct.uiBut* %but_new) #0 !dbg !4085 {
entry:
  %block_old.addr = alloca %struct.uiBlock*, align 8
  %but_new.addr = alloca %struct.uiBut*, align 8
  %but_old = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block_old, %struct.uiBlock** %block_old.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block_old.addr, metadata !4090, metadata !DIExpression()), !dbg !4091
  store %struct.uiBut* %but_new, %struct.uiBut** %but_new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but_new.addr, metadata !4092, metadata !DIExpression()), !dbg !4093
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but_old, metadata !4094, metadata !DIExpression()), !dbg !4095
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block_old.addr, align 8, !dbg !4096
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 2, !dbg !4098
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 0, !dbg !4099
  %1 = load i8*, i8** %first, align 8, !dbg !4099
  %2 = bitcast i8* %1 to %struct.uiBut*, !dbg !4096
  store %struct.uiBut* %2, %struct.uiBut** %but_old, align 8, !dbg !4100
  br label %for.cond, !dbg !4101

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.uiBut*, %struct.uiBut** %but_old, align 8, !dbg !4102
  %tobool = icmp ne %struct.uiBut* %3, null, !dbg !4104
  br i1 %tobool, label %for.body, label %for.end, !dbg !4104

for.body:                                         ; preds = %for.cond
  %4 = load %struct.uiBut*, %struct.uiBut** %but_new.addr, align 8, !dbg !4105
  %5 = load %struct.uiBut*, %struct.uiBut** %but_old, align 8, !dbg !4108
  %call = call zeroext i8 @ui_but_equals_old(%struct.uiBut* %4, %struct.uiBut* %5), !dbg !4109
  %tobool1 = icmp ne i8 %call, 0, !dbg !4109
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4110

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !4111

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4113

for.inc:                                          ; preds = %if.end
  %6 = load %struct.uiBut*, %struct.uiBut** %but_old, align 8, !dbg !4114
  %next = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 0, !dbg !4115
  %7 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !4115
  store %struct.uiBut* %7, %struct.uiBut** %but_old, align 8, !dbg !4116
  br label %for.cond, !dbg !4117, !llvm.loop !4118

for.end:                                          ; preds = %if.then, %for.cond
  %8 = load %struct.uiBut*, %struct.uiBut** %but_old, align 8, !dbg !4120
  ret %struct.uiBut* %8, !dbg !4121
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ui_but_equals_old(%struct.uiBut* %but, %struct.uiBut* %oldbut) #0 !dbg !4122 {
entry:
  %retval = alloca i8, align 1
  %but.addr = alloca %struct.uiBut*, align 8
  %oldbut.addr = alloca %struct.uiBut*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !4125, metadata !DIExpression()), !dbg !4126
  store %struct.uiBut* %oldbut, %struct.uiBut** %oldbut.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %oldbut.addr, metadata !4127, metadata !DIExpression()), !dbg !4128
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4129
  %retval1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 8, !dbg !4131
  %1 = load i16, i16* %retval1, align 4, !dbg !4131
  %conv = sext i16 %1 to i32, !dbg !4129
  %2 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !4132
  %retval2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 8, !dbg !4133
  %3 = load i16, i16* %retval2, align 4, !dbg !4133
  %conv3 = sext i16 %3 to i32, !dbg !4132
  %cmp = icmp ne i32 %conv, %conv3, !dbg !4134
  br i1 %cmp, label %if.then, label %if.end, !dbg !4135

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !4136
  br label %return, !dbg !4136

if.end:                                           ; preds = %entry
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4137
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 54, !dbg !4139
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin, i32 0, i32 2, !dbg !4140
  %5 = load i8*, i8** %data, align 8, !dbg !4140
  %6 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !4141
  %rnapoin5 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 54, !dbg !4142
  %data6 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin5, i32 0, i32 2, !dbg !4143
  %7 = load i8*, i8** %data6, align 8, !dbg !4143
  %cmp7 = icmp ne i8* %5, %7, !dbg !4144
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !4145

if.then9:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !4146
  br label %return, !dbg !4146

if.end10:                                         ; preds = %if.end
  %8 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4147
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 55, !dbg !4149
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !4149
  %10 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !4150
  %rnaprop11 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 55, !dbg !4151
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop11, align 8, !dbg !4151
  %cmp12 = icmp ne %struct.PropertyRNA* %9, %11, !dbg !4152
  br i1 %cmp12, label %if.then17, label %lor.lhs.false, !dbg !4153

lor.lhs.false:                                    ; preds = %if.end10
  %12 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4154
  %rnaindex = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 56, !dbg !4155
  %13 = load i32, i32* %rnaindex, align 8, !dbg !4155
  %14 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !4156
  %rnaindex14 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %14, i32 0, i32 56, !dbg !4157
  %15 = load i32, i32* %rnaindex14, align 8, !dbg !4157
  %cmp15 = icmp ne i32 %13, %15, !dbg !4158
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !4159

if.then17:                                        ; preds = %lor.lhs.false, %if.end10
  store i8 0, i8* %retval, align 1, !dbg !4160
  br label %return, !dbg !4160

if.end18:                                         ; preds = %lor.lhs.false
  %16 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4161
  %func = getelementptr inbounds %struct.uiBut, %struct.uiBut* %16, i32 0, i32 27, !dbg !4163
  %17 = load void (%struct.bContext*, i8*, i8*)*, void (%struct.bContext*, i8*, i8*)** %func, align 8, !dbg !4163
  %18 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !4164
  %func19 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %18, i32 0, i32 27, !dbg !4165
  %19 = load void (%struct.bContext*, i8*, i8*)*, void (%struct.bContext*, i8*, i8*)** %func19, align 8, !dbg !4165
  %cmp20 = icmp ne void (%struct.bContext*, i8*, i8*)* %17, %19, !dbg !4166
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !4167

if.then22:                                        ; preds = %if.end18
  store i8 0, i8* %retval, align 1, !dbg !4168
  br label %return, !dbg !4168

if.end23:                                         ; preds = %if.end18
  %20 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4169
  %funcN = getelementptr inbounds %struct.uiBut, %struct.uiBut* %20, i32 0, i32 30, !dbg !4171
  %21 = load void (%struct.bContext*, i8*, i8*)*, void (%struct.bContext*, i8*, i8*)** %funcN, align 8, !dbg !4171
  %22 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !4172
  %funcN24 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %22, i32 0, i32 30, !dbg !4173
  %23 = load void (%struct.bContext*, i8*, i8*)*, void (%struct.bContext*, i8*, i8*)** %funcN24, align 8, !dbg !4173
  %cmp25 = icmp ne void (%struct.bContext*, i8*, i8*)* %21, %23, !dbg !4174
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !4175

if.then27:                                        ; preds = %if.end23
  store i8 0, i8* %retval, align 1, !dbg !4176
  br label %return, !dbg !4176

if.end28:                                         ; preds = %if.end23
  %24 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !4177
  %func_arg1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %24, i32 0, i32 28, !dbg !4179
  %25 = load i8*, i8** %func_arg1, align 8, !dbg !4179
  %26 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !4180
  %27 = bitcast %struct.uiBut* %26 to i8*, !dbg !4180
  %cmp29 = icmp ne i8* %25, %27, !dbg !4181
  br i1 %cmp29, label %land.lhs.true, label %if.end36, !dbg !4182

land.lhs.true:                                    ; preds = %if.end28
  %28 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4183
  %func_arg131 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %28, i32 0, i32 28, !dbg !4184
  %29 = load i8*, i8** %func_arg131, align 8, !dbg !4184
  %30 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !4185
  %func_arg132 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %30, i32 0, i32 28, !dbg !4186
  %31 = load i8*, i8** %func_arg132, align 8, !dbg !4186
  %cmp33 = icmp ne i8* %29, %31, !dbg !4187
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !4188

if.then35:                                        ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !4189
  br label %return, !dbg !4189

if.end36:                                         ; preds = %land.lhs.true, %if.end28
  %32 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !4190
  %func_arg2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %32, i32 0, i32 29, !dbg !4192
  %33 = load i8*, i8** %func_arg2, align 8, !dbg !4192
  %34 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !4193
  %35 = bitcast %struct.uiBut* %34 to i8*, !dbg !4193
  %cmp37 = icmp ne i8* %33, %35, !dbg !4194
  br i1 %cmp37, label %land.lhs.true39, label %if.end45, !dbg !4195

land.lhs.true39:                                  ; preds = %if.end36
  %36 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4196
  %func_arg240 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %36, i32 0, i32 29, !dbg !4197
  %37 = load i8*, i8** %func_arg240, align 8, !dbg !4197
  %38 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !4198
  %func_arg241 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %38, i32 0, i32 29, !dbg !4199
  %39 = load i8*, i8** %func_arg241, align 8, !dbg !4199
  %cmp42 = icmp ne i8* %37, %39, !dbg !4200
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !4201

if.then44:                                        ; preds = %land.lhs.true39
  store i8 0, i8* %retval, align 1, !dbg !4202
  br label %return, !dbg !4202

if.end45:                                         ; preds = %land.lhs.true39, %if.end36
  %40 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4203
  %funcN46 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %40, i32 0, i32 30, !dbg !4205
  %41 = load void (%struct.bContext*, i8*, i8*)*, void (%struct.bContext*, i8*, i8*)** %funcN46, align 8, !dbg !4205
  %tobool = icmp ne void (%struct.bContext*, i8*, i8*)* %41, null, !dbg !4203
  br i1 %tobool, label %if.end60, label %land.lhs.true47, !dbg !4206

land.lhs.true47:                                  ; preds = %if.end45
  %42 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4207
  %poin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %42, i32 0, i32 19, !dbg !4208
  %43 = load i8*, i8** %poin, align 8, !dbg !4208
  %44 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !4209
  %poin48 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %44, i32 0, i32 19, !dbg !4210
  %45 = load i8*, i8** %poin48, align 8, !dbg !4210
  %cmp49 = icmp ne i8* %43, %45, !dbg !4211
  br i1 %cmp49, label %land.lhs.true51, label %lor.lhs.false55, !dbg !4212

land.lhs.true51:                                  ; preds = %land.lhs.true47
  %46 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !4213
  %poin52 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %46, i32 0, i32 19, !dbg !4214
  %47 = load i8*, i8** %poin52, align 8, !dbg !4214
  %48 = bitcast i8* %47 to %struct.uiBut*, !dbg !4215
  %49 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !4216
  %cmp53 = icmp ne %struct.uiBut* %48, %49, !dbg !4217
  br i1 %cmp53, label %if.then59, label %lor.lhs.false55, !dbg !4218

lor.lhs.false55:                                  ; preds = %land.lhs.true51, %land.lhs.true47
  %50 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4219
  %pointype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %50, i32 0, i32 5, !dbg !4220
  %51 = load i32, i32* %pointype, align 4, !dbg !4220
  %52 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !4221
  %pointype56 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %52, i32 0, i32 5, !dbg !4222
  %53 = load i32, i32* %pointype56, align 4, !dbg !4222
  %cmp57 = icmp ne i32 %51, %53, !dbg !4223
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !4224

if.then59:                                        ; preds = %lor.lhs.false55, %land.lhs.true51
  store i8 0, i8* %retval, align 1, !dbg !4225
  br label %return, !dbg !4225

if.end60:                                         ; preds = %lor.lhs.false55, %if.end45
  %54 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4226
  %optype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %54, i32 0, i32 59, !dbg !4228
  %55 = load %struct.wmOperatorType*, %struct.wmOperatorType** %optype, align 8, !dbg !4228
  %56 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !4229
  %optype61 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %56, i32 0, i32 59, !dbg !4230
  %57 = load %struct.wmOperatorType*, %struct.wmOperatorType** %optype61, align 8, !dbg !4230
  %cmp62 = icmp ne %struct.wmOperatorType* %55, %57, !dbg !4231
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !4232

if.then64:                                        ; preds = %if.end60
  store i8 0, i8* %retval, align 1, !dbg !4233
  br label %return, !dbg !4233

if.end65:                                         ; preds = %if.end60
  store i8 1, i8* %retval, align 1, !dbg !4234
  br label %return, !dbg !4234

return:                                           ; preds = %if.end65, %if.then64, %if.then59, %if.then44, %if.then35, %if.then27, %if.then22, %if.then17, %if.then9, %if.then
  %58 = load i8, i8* %retval, align 1, !dbg !4235
  ret i8 %58, !dbg !4235
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @ui_but_find_new(%struct.uiBlock* %block_new, %struct.uiBut* %but_old) #0 !dbg !4236 {
entry:
  %block_new.addr = alloca %struct.uiBlock*, align 8
  %but_old.addr = alloca %struct.uiBut*, align 8
  %but_new = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block_new, %struct.uiBlock** %block_new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block_new.addr, metadata !4237, metadata !DIExpression()), !dbg !4238
  store %struct.uiBut* %but_old, %struct.uiBut** %but_old.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but_old.addr, metadata !4239, metadata !DIExpression()), !dbg !4240
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but_new, metadata !4241, metadata !DIExpression()), !dbg !4242
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block_new.addr, align 8, !dbg !4243
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 2, !dbg !4245
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 0, !dbg !4246
  %1 = load i8*, i8** %first, align 8, !dbg !4246
  %2 = bitcast i8* %1 to %struct.uiBut*, !dbg !4243
  store %struct.uiBut* %2, %struct.uiBut** %but_new, align 8, !dbg !4247
  br label %for.cond, !dbg !4248

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.uiBut*, %struct.uiBut** %but_new, align 8, !dbg !4249
  %tobool = icmp ne %struct.uiBut* %3, null, !dbg !4251
  br i1 %tobool, label %for.body, label %for.end, !dbg !4251

for.body:                                         ; preds = %for.cond
  %4 = load %struct.uiBut*, %struct.uiBut** %but_new, align 8, !dbg !4252
  %5 = load %struct.uiBut*, %struct.uiBut** %but_old.addr, align 8, !dbg !4255
  %call = call zeroext i8 @ui_but_equals_old(%struct.uiBut* %4, %struct.uiBut* %5), !dbg !4256
  %tobool1 = icmp ne i8 %call, 0, !dbg !4256
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4257

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !4258

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4260

for.inc:                                          ; preds = %if.end
  %6 = load %struct.uiBut*, %struct.uiBut** %but_new, align 8, !dbg !4261
  %next = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 0, !dbg !4262
  %7 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !4262
  store %struct.uiBut* %7, %struct.uiBut** %but_new, align 8, !dbg !4263
  br label %for.cond, !dbg !4264, !llvm.loop !4265

for.end:                                          ; preds = %if.then, %for.cond
  %8 = load %struct.uiBut*, %struct.uiBut** %but_new, align 8, !dbg !4267
  ret %struct.uiBut* %8, !dbg !4268
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @uiButActiveOnly(%struct.bContext* %C, %struct.ARegion* %ar, %struct.uiBlock* %block, %struct.uiBut* %but) #0 !dbg !4269 {
entry:
  %retval = alloca i8, align 1
  %C.addr = alloca %struct.bContext*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  %oldblock = alloca %struct.uiBlock*, align 8
  %oldbut = alloca %struct.uiBut*, align 8
  %activate = alloca i8, align 1
  %found = alloca i8, align 1
  %isactive = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4274, metadata !DIExpression()), !dbg !4275
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !4276, metadata !DIExpression()), !dbg !4277
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !4278, metadata !DIExpression()), !dbg !4279
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !4280, metadata !DIExpression()), !dbg !4281
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %oldblock, metadata !4282, metadata !DIExpression()), !dbg !4283
  call void @llvm.dbg.declare(metadata %struct.uiBut** %oldbut, metadata !4284, metadata !DIExpression()), !dbg !4285
  call void @llvm.dbg.declare(metadata i8* %activate, metadata !4286, metadata !DIExpression()), !dbg !4287
  store i8 0, i8* %activate, align 1, !dbg !4287
  call void @llvm.dbg.declare(metadata i8* %found, metadata !4288, metadata !DIExpression()), !dbg !4289
  store i8 0, i8* %found, align 1, !dbg !4289
  call void @llvm.dbg.declare(metadata i8* %isactive, metadata !4290, metadata !DIExpression()), !dbg !4291
  store i8 0, i8* %isactive, align 1, !dbg !4291
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4292
  %oldblock1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 4, !dbg !4293
  %1 = load %struct.uiBlock*, %struct.uiBlock** %oldblock1, align 8, !dbg !4293
  store %struct.uiBlock* %1, %struct.uiBlock** %oldblock, align 8, !dbg !4294
  %2 = load %struct.uiBlock*, %struct.uiBlock** %oldblock, align 8, !dbg !4295
  %tobool = icmp ne %struct.uiBlock* %2, null, !dbg !4295
  br i1 %tobool, label %if.else, label %if.then, !dbg !4297

if.then:                                          ; preds = %entry
  store i8 1, i8* %activate, align 1, !dbg !4298
  br label %if.end7, !dbg !4300

if.else:                                          ; preds = %entry
  %3 = load %struct.uiBlock*, %struct.uiBlock** %oldblock, align 8, !dbg !4301
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4303
  %call = call %struct.uiBut* @ui_but_find_old(%struct.uiBlock* %3, %struct.uiBut* %4), !dbg !4304
  store %struct.uiBut* %call, %struct.uiBut** %oldbut, align 8, !dbg !4305
  %5 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !4306
  %tobool2 = icmp ne %struct.uiBut* %5, null, !dbg !4306
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !4308

if.then3:                                         ; preds = %if.else
  store i8 1, i8* %found, align 1, !dbg !4309
  %6 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !4311
  %active = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 67, !dbg !4313
  %7 = load %struct.uiHandleButtonData*, %struct.uiHandleButtonData** %active, align 8, !dbg !4313
  %tobool4 = icmp ne %struct.uiHandleButtonData* %7, null, !dbg !4311
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !4314

if.then5:                                         ; preds = %if.then3
  store i8 1, i8* %isactive, align 1, !dbg !4315
  br label %if.end, !dbg !4317

if.end:                                           ; preds = %if.then5, %if.then3
  br label %if.end6, !dbg !4318

if.end6:                                          ; preds = %if.end, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.then
  %8 = load i8, i8* %activate, align 1, !dbg !4319
  %conv = zext i8 %8 to i32, !dbg !4319
  %cmp = icmp eq i32 %conv, 1, !dbg !4321
  br i1 %cmp, label %if.then12, label %lor.lhs.false, !dbg !4322

lor.lhs.false:                                    ; preds = %if.end7
  %9 = load i8, i8* %found, align 1, !dbg !4323
  %conv9 = zext i8 %9 to i32, !dbg !4323
  %cmp10 = icmp eq i32 %conv9, 0, !dbg !4324
  br i1 %cmp10, label %if.then12, label %if.else13, !dbg !4325

if.then12:                                        ; preds = %lor.lhs.false, %if.end7
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4326
  %11 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4328
  %12 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4329
  call void @ui_button_activate_do(%struct.bContext* %10, %struct.ARegion* %11, %struct.uiBut* %12), !dbg !4330
  br label %if.end22, !dbg !4331

if.else13:                                        ; preds = %lor.lhs.false
  %13 = load i8, i8* %found, align 1, !dbg !4332
  %conv14 = zext i8 %13 to i32, !dbg !4332
  %cmp15 = icmp eq i32 %conv14, 1, !dbg !4334
  br i1 %cmp15, label %land.lhs.true, label %if.end21, !dbg !4335

land.lhs.true:                                    ; preds = %if.else13
  %14 = load i8, i8* %isactive, align 1, !dbg !4336
  %conv17 = zext i8 %14 to i32, !dbg !4336
  %cmp18 = icmp eq i32 %conv17, 0, !dbg !4337
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !4338

if.then20:                                        ; preds = %land.lhs.true
  %15 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4339
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %15, i32 0, i32 2, !dbg !4341
  %16 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4342
  %17 = bitcast %struct.uiBut* %16 to i8*, !dbg !4342
  call void @BLI_remlink(%struct.ListBase* %buttons, i8* %17), !dbg !4343
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4344
  %19 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4345
  call void @ui_free_but(%struct.bContext* %18, %struct.uiBut* %19), !dbg !4346
  store i8 0, i8* %retval, align 1, !dbg !4347
  br label %return, !dbg !4347

if.end21:                                         ; preds = %land.lhs.true, %if.else13
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then12
  store i8 1, i8* %retval, align 1, !dbg !4348
  br label %return, !dbg !4348

return:                                           ; preds = %if.end22, %if.then20
  %20 = load i8, i8* %retval, align 1, !dbg !4349
  ret i8 %20, !dbg !4349
}

declare dso_local void @ui_button_activate_do(%struct.bContext*, %struct.ARegion*, %struct.uiBut*) #3

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ui_free_but(%struct.bContext* %C, %struct.uiBut* %but) #0 !dbg !4350 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4353, metadata !DIExpression()), !dbg !4354
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !4355, metadata !DIExpression()), !dbg !4356
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4357
  %opptr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 60, !dbg !4359
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %opptr, align 8, !dbg !4359
  %tobool = icmp ne %struct.PointerRNA* %1, null, !dbg !4357
  br i1 %tobool, label %if.then, label %if.end, !dbg !4360

if.then:                                          ; preds = %entry
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4361
  %opptr1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 60, !dbg !4363
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %opptr1, align 8, !dbg !4363
  call void @WM_operator_properties_free(%struct.PointerRNA* %3), !dbg !4364
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4365
  %5 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4366
  %opptr2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 60, !dbg !4367
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %opptr2, align 8, !dbg !4367
  %7 = bitcast %struct.PointerRNA* %6 to i8*, !dbg !4366
  call void %4(i8* %7), !dbg !4365
  br label %if.end, !dbg !4368

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4369
  %func_argN = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 31, !dbg !4371
  %9 = load i8*, i8** %func_argN, align 8, !dbg !4371
  %tobool3 = icmp ne i8* %9, null, !dbg !4369
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !4372

if.then4:                                         ; preds = %if.end
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4373
  %11 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4375
  %func_argN5 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %11, i32 0, i32 31, !dbg !4376
  %12 = load i8*, i8** %func_argN5, align 8, !dbg !4376
  call void %10(i8* %12), !dbg !4373
  br label %if.end6, !dbg !4377

if.end6:                                          ; preds = %if.then4, %if.end
  %13 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4378
  %active = getelementptr inbounds %struct.uiBut, %struct.uiBut* %13, i32 0, i32 67, !dbg !4380
  %14 = load %struct.uiHandleButtonData*, %struct.uiHandleButtonData** %active, align 8, !dbg !4380
  %tobool7 = icmp ne %struct.uiHandleButtonData* %14, null, !dbg !4378
  br i1 %tobool7, label %if.then8, label %if.end17, !dbg !4381

if.then8:                                         ; preds = %if.end6
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4382
  %tobool9 = icmp ne %struct.bContext* %15, null, !dbg !4382
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !4385

if.then10:                                        ; preds = %if.then8
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4386
  %17 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4388
  call void @ui_button_active_free(%struct.bContext* %16, %struct.uiBut* %17), !dbg !4389
  br label %if.end16, !dbg !4390

if.else:                                          ; preds = %if.then8
  %18 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4391
  %active11 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %18, i32 0, i32 67, !dbg !4394
  %19 = load %struct.uiHandleButtonData*, %struct.uiHandleButtonData** %active11, align 8, !dbg !4394
  %tobool12 = icmp ne %struct.uiHandleButtonData* %19, null, !dbg !4391
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !4395

if.then13:                                        ; preds = %if.else
  %20 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4396
  %21 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4398
  %active14 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %21, i32 0, i32 67, !dbg !4399
  %22 = load %struct.uiHandleButtonData*, %struct.uiHandleButtonData** %active14, align 8, !dbg !4399
  %23 = bitcast %struct.uiHandleButtonData* %22 to i8*, !dbg !4398
  call void %20(i8* %23), !dbg !4396
  br label %if.end15, !dbg !4400

if.end15:                                         ; preds = %if.then13, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then10
  br label %if.end17, !dbg !4401

if.end17:                                         ; preds = %if.end16, %if.end6
  %24 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4402
  %str = getelementptr inbounds %struct.uiBut, %struct.uiBut* %24, i32 0, i32 15, !dbg !4404
  %25 = load i8*, i8** %str, align 8, !dbg !4404
  %tobool18 = icmp ne i8* %25, null, !dbg !4402
  br i1 %tobool18, label %land.lhs.true, label %if.end22, !dbg !4405

land.lhs.true:                                    ; preds = %if.end17
  %26 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4406
  %str19 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %26, i32 0, i32 15, !dbg !4407
  %27 = load i8*, i8** %str19, align 8, !dbg !4407
  %28 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4408
  %strdata = getelementptr inbounds %struct.uiBut, %struct.uiBut* %28, i32 0, i32 16, !dbg !4409
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %strdata, i64 0, i64 0, !dbg !4408
  %cmp = icmp ne i8* %27, %arraydecay, !dbg !4410
  br i1 %cmp, label %if.then20, label %if.end22, !dbg !4411

if.then20:                                        ; preds = %land.lhs.true
  %29 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4412
  %30 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4414
  %str21 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %30, i32 0, i32 15, !dbg !4415
  %31 = load i8*, i8** %str21, align 8, !dbg !4415
  call void %29(i8* %31), !dbg !4412
  br label %if.end22, !dbg !4416

if.end22:                                         ; preds = %if.then20, %land.lhs.true, %if.end17
  %32 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4417
  %link = getelementptr inbounds %struct.uiBut, %struct.uiBut* %32, i32 0, i32 40, !dbg !4418
  %33 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !4418
  call void @ui_free_link(%struct.uiLink* %33), !dbg !4419
  %34 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4420
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %34, i32 0, i32 4, !dbg !4422
  %35 = load i32, i32* %type, align 8, !dbg !4422
  %cmp23 = icmp eq i32 %35, 24064, !dbg !4423
  br i1 %cmp23, label %land.lhs.true24, label %if.end28, !dbg !4424

land.lhs.true24:                                  ; preds = %if.end22
  %36 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4425
  %poin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %36, i32 0, i32 19, !dbg !4426
  %37 = load i8*, i8** %poin, align 8, !dbg !4426
  %tobool25 = icmp ne i8* %37, null, !dbg !4425
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !4427

if.then26:                                        ; preds = %land.lhs.true24
  %38 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4428
  %poin27 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %38, i32 0, i32 19, !dbg !4430
  %39 = load i8*, i8** %poin27, align 8, !dbg !4430
  %40 = bitcast i8* %39 to %struct.ImBuf*, !dbg !4431
  call void @IMB_freeImBuf(%struct.ImBuf* %40), !dbg !4432
  br label %if.end28, !dbg !4433

if.end28:                                         ; preds = %if.then26, %land.lhs.true24, %if.end22
  %41 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4434
  %42 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4435
  %43 = bitcast %struct.uiBut* %42 to i8*, !dbg !4435
  call void %41(i8* %43), !dbg !4434
  ret void, !dbg !4436
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiButExecute(%struct.bContext* %C, %struct.uiBut* %but) #0 !dbg !4437 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %active_back = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4438, metadata !DIExpression()), !dbg !4439
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !4440, metadata !DIExpression()), !dbg !4441
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !4442, metadata !DIExpression()), !dbg !4443
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4444
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %0), !dbg !4445
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !4443
  call void @llvm.dbg.declare(metadata i8** %active_back, metadata !4446, metadata !DIExpression()), !dbg !4447
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4448
  %2 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4449
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4450
  call void @ui_button_execute_begin(%struct.bContext* %1, %struct.ARegion* %2, %struct.uiBut* %3, i8** %active_back), !dbg !4451
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4452
  %5 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4453
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4454
  %7 = load i8*, i8** %active_back, align 8, !dbg !4455
  call void @ui_button_execute_end(%struct.bContext* %4, %struct.ARegion* %5, %struct.uiBut* %6, i8* %7), !dbg !4456
  ret void, !dbg !4457
}

declare dso_local %struct.ARegion* @CTX_wm_region(%struct.bContext*) #3

declare dso_local void @ui_button_execute_begin(%struct.bContext*, %struct.ARegion*, %struct.uiBut*, i8**) #3

declare dso_local void @ui_button_execute_end(%struct.bContext*, %struct.ARegion*, %struct.uiBut*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_but_add_shortcut(%struct.uiBut* %but, i8* %shortcut_str, i8 zeroext %do_strip) #0 !dbg !4458 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %shortcut_str.addr = alloca i8*, align 8
  %do_strip.addr = alloca i8, align 1
  %cpoin = alloca i8*, align 8
  %butstr_orig = alloca i8*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !4462, metadata !DIExpression()), !dbg !4463
  store i8* %shortcut_str, i8** %shortcut_str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %shortcut_str.addr, metadata !4464, metadata !DIExpression()), !dbg !4465
  store i8 %do_strip, i8* %do_strip.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_strip.addr, metadata !4466, metadata !DIExpression()), !dbg !4467
  %0 = load i8, i8* %do_strip.addr, align 1, !dbg !4468
  %conv = zext i8 %0 to i32, !dbg !4468
  %tobool = icmp ne i32 %conv, 0, !dbg !4468
  br i1 %tobool, label %land.lhs.true, label %if.end6, !dbg !4470

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4471
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 2, !dbg !4472
  %2 = load i32, i32* %flag, align 8, !dbg !4472
  %and = and i32 %2, 134217728, !dbg !4473
  %tobool1 = icmp ne i32 %and, 0, !dbg !4473
  br i1 %tobool1, label %if.then, label %if.end6, !dbg !4474

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %cpoin, metadata !4475, metadata !DIExpression()), !dbg !4477
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4478
  %str = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 15, !dbg !4479
  %4 = load i8*, i8** %str, align 8, !dbg !4479
  %call = call i8* @strrchr(i8* %4, i32 124) #8, !dbg !4480
  store i8* %call, i8** %cpoin, align 8, !dbg !4477
  %5 = load i8*, i8** %cpoin, align 8, !dbg !4481
  %tobool2 = icmp ne i8* %5, null, !dbg !4481
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !4483

if.then3:                                         ; preds = %if.then
  %6 = load i8*, i8** %cpoin, align 8, !dbg !4484
  store i8 0, i8* %6, align 1, !dbg !4486
  br label %if.end, !dbg !4487

if.end:                                           ; preds = %if.then3, %if.then
  %7 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4488
  %flag4 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %7, i32 0, i32 2, !dbg !4489
  %8 = load i32, i32* %flag4, align 8, !dbg !4490
  %and5 = and i32 %8, -134217729, !dbg !4490
  store i32 %and5, i32* %flag4, align 8, !dbg !4490
  br label %if.end6, !dbg !4491

if.end6:                                          ; preds = %if.end, %land.lhs.true, %entry
  %9 = load i8*, i8** %shortcut_str.addr, align 8, !dbg !4492
  %tobool7 = icmp ne i8* %9, null, !dbg !4492
  br i1 %tobool7, label %if.then8, label %if.end23, !dbg !4494

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i8** %butstr_orig, metadata !4495, metadata !DIExpression()), !dbg !4497
  %10 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4498
  %str9 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 15, !dbg !4500
  %11 = load i8*, i8** %str9, align 8, !dbg !4500
  %12 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4501
  %strdata = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 16, !dbg !4502
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %strdata, i64 0, i64 0, !dbg !4501
  %cmp = icmp ne i8* %11, %arraydecay, !dbg !4503
  br i1 %cmp, label %if.then11, label %if.else, !dbg !4504

if.then11:                                        ; preds = %if.then8
  %13 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4505
  %str12 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %13, i32 0, i32 15, !dbg !4507
  %14 = load i8*, i8** %str12, align 8, !dbg !4507
  store i8* %14, i8** %butstr_orig, align 8, !dbg !4508
  br label %if.end15, !dbg !4509

if.else:                                          ; preds = %if.then8
  %15 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4510
  %str13 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 15, !dbg !4512
  %16 = load i8*, i8** %str13, align 8, !dbg !4512
  %call14 = call i8* @BLI_strdup(i8* %16), !dbg !4513
  store i8* %call14, i8** %butstr_orig, align 8, !dbg !4514
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then11
  %17 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4515
  %strdata16 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %17, i32 0, i32 16, !dbg !4516
  %arraydecay17 = getelementptr inbounds [128 x i8], [128 x i8]* %strdata16, i64 0, i64 0, !dbg !4515
  %18 = load i8*, i8** %butstr_orig, align 8, !dbg !4517
  %19 = load i8*, i8** %shortcut_str.addr, align 8, !dbg !4518
  %call18 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay17, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8* %18, i8* %19), !dbg !4519
  %20 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4520
  %21 = load i8*, i8** %butstr_orig, align 8, !dbg !4521
  call void %20(i8* %21), !dbg !4520
  %22 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4522
  %strdata19 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %22, i32 0, i32 16, !dbg !4523
  %arraydecay20 = getelementptr inbounds [128 x i8], [128 x i8]* %strdata19, i64 0, i64 0, !dbg !4522
  %23 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4524
  %str21 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %23, i32 0, i32 15, !dbg !4525
  store i8* %arraydecay20, i8** %str21, align 8, !dbg !4526
  %24 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4527
  %flag22 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %24, i32 0, i32 2, !dbg !4528
  %25 = load i32, i32* %flag22, align 8, !dbg !4529
  %or = or i32 %25, 134217728, !dbg !4529
  store i32 %or, i32* %flag22, align 8, !dbg !4529
  %26 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4530
  call void @ui_check_but(%struct.uiBut* %26), !dbg !4531
  br label %if.end23, !dbg !4532

if.end23:                                         ; preds = %if.end15, %if.end6
  ret void, !dbg !4533
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #4

declare dso_local i8* @BLI_strdup(i8*) #3

declare dso_local i64 @BLI_snprintf(i8*, i64, i8*, ...) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_check_but(%struct.uiBut* %but) #0 !dbg !4534 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %value = alloca double, align 8
  %value59 = alloca i32, align 4
  %buf = alloca i8*, align 8
  %drawstr_suffix = alloca i8*, align 8
  %slen = alloca i64, align 8
  %new_str = alloca [400 x i8], align 16
  %prec = alloca i32, align 4
  %pstype = alloca i32, align 4
  %prec167 = alloca i32, align 4
  %str188 = alloca [400 x i8], align 16
  %str197 = alloca i8*, align 8
  %str222 = alloca i8*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !4537, metadata !DIExpression()), !dbg !4538
  call void @llvm.dbg.declare(metadata double* %value, metadata !4539, metadata !DIExpression()), !dbg !4540
  store double 0x7FEFFFFFFFFFFFFF, double* %value, align 8, !dbg !4540
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4541
  call void @ui_check_but_select(%struct.uiBut* %0, double* %value), !dbg !4542
  %1 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4543
  %editval = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 70, !dbg !4545
  %2 = load double*, double** %editval, align 8, !dbg !4545
  %tobool = icmp ne double* %2, null, !dbg !4543
  br i1 %tobool, label %if.end8, label %lor.lhs.false, !dbg !4546

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4547
  %editstr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 69, !dbg !4548
  %4 = load i8*, i8** %editstr, align 8, !dbg !4548
  %tobool1 = icmp ne i8* %4, null, !dbg !4547
  br i1 %tobool1, label %if.end8, label %lor.lhs.false2, !dbg !4549

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %5 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4550
  %editvec = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 71, !dbg !4551
  %6 = load float*, float** %editvec, align 8, !dbg !4551
  %tobool3 = icmp ne float* %6, null, !dbg !4550
  br i1 %tobool3, label %if.end8, label %if.then, !dbg !4552

if.then:                                          ; preds = %lor.lhs.false2
  %7 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4553
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %7, i32 0, i32 55, !dbg !4556
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !4556
  %cmp = icmp ne %struct.PropertyRNA* %8, null, !dbg !4557
  br i1 %cmp, label %if.then7, label %lor.lhs.false4, !dbg !4558

lor.lhs.false4:                                   ; preds = %if.then
  %9 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4559
  %poin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 19, !dbg !4560
  %10 = load i8*, i8** %poin, align 8, !dbg !4560
  %tobool5 = icmp ne i8* %10, null, !dbg !4559
  br i1 %tobool5, label %land.lhs.true, label %if.end, !dbg !4561

land.lhs.true:                                    ; preds = %lor.lhs.false4
  %11 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4562
  %pointype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %11, i32 0, i32 5, !dbg !4563
  %12 = load i32, i32* %pointype, align 4, !dbg !4563
  %and = and i32 %12, 224, !dbg !4564
  %tobool6 = icmp ne i32 %and, 0, !dbg !4564
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !4565

if.then7:                                         ; preds = %land.lhs.true, %if.then
  %13 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4566
  call void @ui_set_but_soft_range(%struct.uiBut* %13), !dbg !4568
  br label %if.end, !dbg !4569

if.end:                                           ; preds = %if.then7, %land.lhs.true, %lor.lhs.false4
  br label %if.end8, !dbg !4570

if.end8:                                          ; preds = %if.end, %lor.lhs.false2, %lor.lhs.false, %entry
  %14 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4571
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %14, i32 0, i32 4, !dbg !4572
  %15 = load i32, i32* %type, align 8, !dbg !4572
  switch i32 %15, label %sw.default [
    i32 2560, label %sw.bb
    i32 9216, label %sw.bb
    i32 7168, label %sw.bb
    i32 6656, label %sw.bb25
    i32 17408, label %sw.bb25
  ], !dbg !4573

sw.bb:                                            ; preds = %if.end8, %if.end8, %if.end8
  %16 = load double, double* %value, align 8, !dbg !4574
  %cmp9 = fcmp oeq double %16, 0x7FEFFFFFFFFFFFFF, !dbg !4574
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !4577

if.then10:                                        ; preds = %sw.bb
  %17 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4578
  %call = call double @ui_get_but_val(%struct.uiBut* %17), !dbg !4578
  store double %call, double* %value, align 8, !dbg !4578
  br label %if.end11, !dbg !4578

if.end11:                                         ; preds = %if.then10, %sw.bb
  %18 = load double, double* %value, align 8, !dbg !4580
  %19 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4582
  %hardmin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %19, i32 0, i32 20, !dbg !4583
  %20 = load float, float* %hardmin, align 8, !dbg !4583
  %conv = fpext float %20 to double, !dbg !4584
  %cmp12 = fcmp olt double %18, %conv, !dbg !4585
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !4586

if.then14:                                        ; preds = %if.end11
  %21 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4587
  %22 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4588
  %hardmin15 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %22, i32 0, i32 20, !dbg !4589
  %23 = load float, float* %hardmin15, align 8, !dbg !4589
  %conv16 = fpext float %23 to double, !dbg !4588
  call void @ui_set_but_val(%struct.uiBut* %21, double %conv16), !dbg !4590
  br label %if.end24, !dbg !4590

if.else:                                          ; preds = %if.end11
  %24 = load double, double* %value, align 8, !dbg !4591
  %25 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4593
  %hardmax = getelementptr inbounds %struct.uiBut, %struct.uiBut* %25, i32 0, i32 21, !dbg !4594
  %26 = load float, float* %hardmax, align 4, !dbg !4594
  %conv17 = fpext float %26 to double, !dbg !4595
  %cmp18 = fcmp ogt double %24, %conv17, !dbg !4596
  br i1 %cmp18, label %if.then20, label %if.end23, !dbg !4597

if.then20:                                        ; preds = %if.else
  %27 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4598
  %28 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4599
  %hardmax21 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %28, i32 0, i32 21, !dbg !4600
  %29 = load float, float* %hardmax21, align 4, !dbg !4600
  %conv22 = fpext float %29 to double, !dbg !4599
  call void @ui_set_but_val(%struct.uiBut* %27, double %conv22), !dbg !4601
  br label %if.end23, !dbg !4601

if.end23:                                         ; preds = %if.then20, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then14
  br label %sw.epilog, !dbg !4602

sw.bb25:                                          ; preds = %if.end8, %if.end8
  %30 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4603
  %rnaprop26 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %30, i32 0, i32 55, !dbg !4605
  %31 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop26, align 8, !dbg !4605
  %tobool27 = icmp ne %struct.PropertyRNA* %31, null, !dbg !4603
  br i1 %tobool27, label %lor.lhs.false28, label %if.then33, !dbg !4606

lor.lhs.false28:                                  ; preds = %sw.bb25
  %32 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4607
  %rnaprop29 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %32, i32 0, i32 55, !dbg !4608
  %33 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop29, align 8, !dbg !4608
  %call30 = call i32 @RNA_property_flag(%struct.PropertyRNA* %33), !dbg !4609
  %and31 = and i32 %call30, 4096, !dbg !4610
  %tobool32 = icmp ne i32 %and31, 0, !dbg !4610
  br i1 %tobool32, label %if.then33, label %if.end40, !dbg !4611

if.then33:                                        ; preds = %lor.lhs.false28, %sw.bb25
  %34 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4612
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %34, i32 0, i32 2, !dbg !4615
  %35 = load i32, i32* %flag, align 8, !dbg !4615
  %and34 = and i32 %35, 1, !dbg !4616
  %tobool35 = icmp ne i32 %and34, 0, !dbg !4616
  br i1 %tobool35, label %if.then36, label %if.else37, !dbg !4617

if.then36:                                        ; preds = %if.then33
  %36 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4618
  %iconadd = getelementptr inbounds %struct.uiBut, %struct.uiBut* %36, i32 0, i32 51, !dbg !4619
  store i16 1, i16* %iconadd, align 4, !dbg !4620
  br label %if.end39, !dbg !4618

if.else37:                                        ; preds = %if.then33
  %37 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4621
  %iconadd38 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %37, i32 0, i32 51, !dbg !4622
  store i16 0, i16* %iconadd38, align 4, !dbg !4623
  br label %if.end39

if.end39:                                         ; preds = %if.else37, %if.then36
  br label %if.end40, !dbg !4624

if.end40:                                         ; preds = %if.end39, %lor.lhs.false28
  br label %sw.epilog, !dbg !4625

sw.default:                                       ; preds = %if.end8
  br label %sw.epilog, !dbg !4626

sw.epilog:                                        ; preds = %sw.default, %if.end40, %if.end24
  %38 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4627
  %type41 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %38, i32 0, i32 4, !dbg !4628
  %39 = load i32, i32* %type41, align 8, !dbg !4628
  switch i32 %39, label %sw.default270 [
    i32 5632, label %sw.bb42
    i32 2560, label %sw.bb75
    i32 7168, label %sw.bb75
    i32 5120, label %sw.bb163
    i32 3072, label %sw.bb184
    i32 20992, label %sw.bb184
    i32 26624, label %sw.bb184
    i32 12288, label %sw.bb196
    i32 23552, label %sw.bb215
    i32 13312, label %sw.bb269
    i32 22016, label %sw.bb269
  ], !dbg !4629

sw.bb42:                                          ; preds = %sw.epilog
  %40 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4630
  %rect = getelementptr inbounds %struct.uiBut, %struct.uiBut* %40, i32 0, i32 18, !dbg !4633
  %call43 = call float @BLI_rctf_size_x(%struct.rctf* %rect), !dbg !4634
  %cmp44 = fcmp ogt float %call43, 2.400000e+01, !dbg !4635
  br i1 %cmp44, label %if.then46, label %if.end74, !dbg !4636

if.then46:                                        ; preds = %sw.bb42
  %41 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4637
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %41, i32 0, i32 74, !dbg !4640
  %42 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4640
  %flag47 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %42, i32 0, i32 27, !dbg !4641
  %43 = load i32, i32* %flag47, align 8, !dbg !4641
  %and48 = and i32 %43, 1, !dbg !4642
  %tobool49 = icmp ne i32 %and48, 0, !dbg !4642
  br i1 %tobool49, label %if.then50, label %if.end71, !dbg !4643

if.then50:                                        ; preds = %if.then46
  %44 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4644
  %rnaprop51 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %44, i32 0, i32 55, !dbg !4647
  %45 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop51, align 8, !dbg !4647
  %tobool52 = icmp ne %struct.PropertyRNA* %45, null, !dbg !4644
  br i1 %tobool52, label %land.lhs.true53, label %if.end70, !dbg !4648

land.lhs.true53:                                  ; preds = %if.then50
  %46 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4649
  %rnaprop54 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %46, i32 0, i32 55, !dbg !4650
  %47 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop54, align 8, !dbg !4650
  %call55 = call i32 @RNA_property_type(%struct.PropertyRNA* %47), !dbg !4651
  %cmp56 = icmp eq i32 %call55, 4, !dbg !4652
  br i1 %cmp56, label %if.then58, label %if.end70, !dbg !4653

if.then58:                                        ; preds = %land.lhs.true53
  call void @llvm.dbg.declare(metadata i32* %value59, metadata !4654, metadata !DIExpression()), !dbg !4656
  %48 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4657
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %48, i32 0, i32 54, !dbg !4658
  %49 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4659
  %rnaprop60 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %49, i32 0, i32 55, !dbg !4660
  %50 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop60, align 8, !dbg !4660
  %call61 = call i32 @RNA_property_enum_get(%struct.PointerRNA* %rnapoin, %struct.PropertyRNA* %50), !dbg !4661
  store i32 %call61, i32* %value59, align 4, !dbg !4656
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !4662, metadata !DIExpression()), !dbg !4663
  %51 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4664
  %block62 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %51, i32 0, i32 74, !dbg !4666
  %52 = load %struct.uiBlock*, %struct.uiBlock** %block62, align 8, !dbg !4666
  %evil_C = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %52, i32 0, i32 48, !dbg !4667
  %53 = load i8*, i8** %evil_C, align 8, !dbg !4667
  %54 = bitcast i8* %53 to %struct.bContext*, !dbg !4664
  %55 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4668
  %rnapoin63 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %55, i32 0, i32 54, !dbg !4669
  %56 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4670
  %rnaprop64 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %56, i32 0, i32 55, !dbg !4671
  %57 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop64, align 8, !dbg !4671
  %58 = load i32, i32* %value59, align 4, !dbg !4672
  %call65 = call zeroext i8 @RNA_property_enum_name_gettexted(%struct.bContext* %54, %struct.PointerRNA* %rnapoin63, %struct.PropertyRNA* %57, i32 %58, i8** %buf), !dbg !4673
  %tobool66 = icmp ne i8 %call65, 0, !dbg !4673
  br i1 %tobool66, label %if.then67, label %if.end69, !dbg !4674

if.then67:                                        ; preds = %if.then58
  %59 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4675
  %str = getelementptr inbounds %struct.uiBut, %struct.uiBut* %59, i32 0, i32 15, !dbg !4677
  %60 = load i8*, i8** %str, align 8, !dbg !4677
  %61 = load i8*, i8** %buf, align 8, !dbg !4678
  %call68 = call i8* @BLI_strncpy(i8* %60, i8* %61, i64 128), !dbg !4679
  br label %if.end69, !dbg !4680

if.end69:                                         ; preds = %if.then67, %if.then58
  br label %if.end70, !dbg !4681

if.end70:                                         ; preds = %if.end69, %land.lhs.true53, %if.then50
  br label %if.end71, !dbg !4682

if.end71:                                         ; preds = %if.end70, %if.then46
  %62 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4683
  %drawstr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %62, i32 0, i32 17, !dbg !4684
  %arraydecay = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr, i64 0, i64 0, !dbg !4683
  %63 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4685
  %str72 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %63, i32 0, i32 15, !dbg !4686
  %64 = load i8*, i8** %str72, align 8, !dbg !4686
  %call73 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %64, i64 400), !dbg !4687
  br label %if.end74, !dbg !4688

if.end74:                                         ; preds = %if.end71, %sw.bb42
  br label %sw.epilog275, !dbg !4689

sw.bb75:                                          ; preds = %sw.epilog, %sw.epilog
  %65 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4690
  %editstr76 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %65, i32 0, i32 69, !dbg !4692
  %66 = load i8*, i8** %editstr76, align 8, !dbg !4692
  %tobool77 = icmp ne i8* %66, null, !dbg !4690
  br i1 %tobool77, label %if.end162, label %if.then78, !dbg !4693

if.then78:                                        ; preds = %sw.bb75
  call void @llvm.dbg.declare(metadata i8** %drawstr_suffix, metadata !4694, metadata !DIExpression()), !dbg !4696
  store i8* null, i8** %drawstr_suffix, align 8, !dbg !4696
  call void @llvm.dbg.declare(metadata i64* %slen, metadata !4697, metadata !DIExpression()), !dbg !4698
  %67 = load double, double* %value, align 8, !dbg !4699
  %cmp79 = fcmp oeq double %67, 0x7FEFFFFFFFFFFFFF, !dbg !4699
  br i1 %cmp79, label %if.then81, label %if.end83, !dbg !4701

if.then81:                                        ; preds = %if.then78
  %68 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4702
  %call82 = call double @ui_get_but_val(%struct.uiBut* %68), !dbg !4702
  store double %call82, double* %value, align 8, !dbg !4702
  br label %if.end83, !dbg !4702

if.end83:                                         ; preds = %if.then81, %if.then78
  %69 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4704
  %drawstr84 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %69, i32 0, i32 17, !dbg !4705
  %arraydecay85 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr84, i64 0, i64 0, !dbg !4704
  %70 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4706
  %str86 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %70, i32 0, i32 15, !dbg !4707
  %71 = load i8*, i8** %str86, align 8, !dbg !4707
  %call87 = call i64 @BLI_strncpy_rlen(i8* %arraydecay85, i8* %71, i64 400), !dbg !4708
  store i64 %call87, i64* %slen, align 8, !dbg !4709
  %72 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4710
  %call88 = call zeroext i8 @ui_is_but_float(%struct.uiBut* %72), !dbg !4712
  %tobool89 = icmp ne i8 %call88, 0, !dbg !4712
  br i1 %tobool89, label %if.then90, label %if.else130, !dbg !4713

if.then90:                                        ; preds = %if.end83
  %73 = load double, double* %value, align 8, !dbg !4714
  %cmp91 = fcmp oeq double %73, 0x47EFFFFFE0000000, !dbg !4717
  br i1 %cmp91, label %if.then93, label %if.else97, !dbg !4718

if.then93:                                        ; preds = %if.then90
  %74 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4719
  %drawstr94 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %74, i32 0, i32 17, !dbg !4721
  %arraydecay95 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr94, i64 0, i64 0, !dbg !4719
  %75 = load i64, i64* %slen, align 8, !dbg !4722
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay95, i64 %75, !dbg !4723
  %76 = load i64, i64* %slen, align 8, !dbg !4724
  %sub = sub i64 400, %76, !dbg !4725
  %call96 = call i64 @BLI_strncpy_rlen(i8* %add.ptr, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), i64 %sub), !dbg !4726
  %77 = load i64, i64* %slen, align 8, !dbg !4727
  %add = add i64 %77, %call96, !dbg !4727
  store i64 %add, i64* %slen, align 8, !dbg !4727
  br label %if.end129, !dbg !4728

if.else97:                                        ; preds = %if.then90
  %78 = load double, double* %value, align 8, !dbg !4729
  %cmp98 = fcmp oeq double %78, 0xC7EFFFFFE0000000, !dbg !4731
  br i1 %cmp98, label %if.then100, label %if.else107, !dbg !4732

if.then100:                                       ; preds = %if.else97
  %79 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4733
  %drawstr101 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %79, i32 0, i32 17, !dbg !4735
  %arraydecay102 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr101, i64 0, i64 0, !dbg !4733
  %80 = load i64, i64* %slen, align 8, !dbg !4736
  %add.ptr103 = getelementptr inbounds i8, i8* %arraydecay102, i64 %80, !dbg !4737
  %81 = load i64, i64* %slen, align 8, !dbg !4738
  %sub104 = sub i64 400, %81, !dbg !4739
  %call105 = call i64 @BLI_strncpy_rlen(i8* %add.ptr103, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i64 %sub104), !dbg !4740
  %82 = load i64, i64* %slen, align 8, !dbg !4741
  %add106 = add i64 %82, %call105, !dbg !4741
  store i64 %add106, i64* %slen, align 8, !dbg !4741
  br label %if.end128, !dbg !4742

if.else107:                                       ; preds = %if.else97
  %83 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4743
  %call108 = call zeroext i8 @ui_is_but_unit(%struct.uiBut* %83), !dbg !4745
  %tobool109 = icmp ne i8 %call108, 0, !dbg !4745
  br i1 %tobool109, label %if.then110, label %if.else119, !dbg !4746

if.then110:                                       ; preds = %if.else107
  call void @llvm.dbg.declare(metadata [400 x i8]* %new_str, metadata !4747, metadata !DIExpression()), !dbg !4749
  %84 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4750
  %arraydecay111 = getelementptr inbounds [400 x i8], [400 x i8]* %new_str, i64 0, i64 0, !dbg !4751
  %85 = load double, double* %value, align 8, !dbg !4752
  call void @ui_get_but_string_unit(%struct.uiBut* %84, i8* %arraydecay111, i32 400, double %85, i8 zeroext 1, i32 -1), !dbg !4753
  %86 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4754
  %drawstr112 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %86, i32 0, i32 17, !dbg !4755
  %arraydecay113 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr112, i64 0, i64 0, !dbg !4754
  %87 = load i64, i64* %slen, align 8, !dbg !4756
  %add.ptr114 = getelementptr inbounds i8, i8* %arraydecay113, i64 %87, !dbg !4757
  %arraydecay115 = getelementptr inbounds [400 x i8], [400 x i8]* %new_str, i64 0, i64 0, !dbg !4758
  %88 = load i64, i64* %slen, align 8, !dbg !4759
  %sub116 = sub i64 400, %88, !dbg !4760
  %call117 = call i64 @BLI_strncpy_rlen(i8* %add.ptr114, i8* %arraydecay115, i64 %sub116), !dbg !4761
  %89 = load i64, i64* %slen, align 8, !dbg !4762
  %add118 = add i64 %89, %call117, !dbg !4762
  store i64 %add118, i64* %slen, align 8, !dbg !4762
  br label %if.end127, !dbg !4763

if.else119:                                       ; preds = %if.else107
  call void @llvm.dbg.declare(metadata i32* %prec, metadata !4764, metadata !DIExpression()), !dbg !4767
  %90 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4768
  %91 = load double, double* %value, align 8, !dbg !4769
  %call120 = call i32 @ui_but_float_precision(%struct.uiBut* %90, double %91), !dbg !4770
  store i32 %call120, i32* %prec, align 4, !dbg !4767
  %92 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4771
  %drawstr121 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %92, i32 0, i32 17, !dbg !4772
  %arraydecay122 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr121, i64 0, i64 0, !dbg !4771
  %93 = load i64, i64* %slen, align 8, !dbg !4773
  %add.ptr123 = getelementptr inbounds i8, i8* %arraydecay122, i64 %93, !dbg !4774
  %94 = load i64, i64* %slen, align 8, !dbg !4775
  %sub124 = sub i64 400, %94, !dbg !4776
  %95 = load i32, i32* %prec, align 4, !dbg !4777
  %96 = load double, double* %value, align 8, !dbg !4778
  %call125 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr123, i64 %sub124, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i32 %95, double %96), !dbg !4779
  %97 = load i64, i64* %slen, align 8, !dbg !4780
  %add126 = add i64 %97, %call125, !dbg !4780
  store i64 %add126, i64* %slen, align 8, !dbg !4780
  br label %if.end127

if.end127:                                        ; preds = %if.else119, %if.then110
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.then100
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.then93
  br label %if.end138, !dbg !4781

if.else130:                                       ; preds = %if.end83
  %98 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4782
  %drawstr131 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %98, i32 0, i32 17, !dbg !4784
  %arraydecay132 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr131, i64 0, i64 0, !dbg !4782
  %99 = load i64, i64* %slen, align 8, !dbg !4785
  %add.ptr133 = getelementptr inbounds i8, i8* %arraydecay132, i64 %99, !dbg !4786
  %100 = load i64, i64* %slen, align 8, !dbg !4787
  %sub134 = sub i64 400, %100, !dbg !4788
  %101 = load double, double* %value, align 8, !dbg !4789
  %conv135 = fptosi double %101 to i32, !dbg !4790
  %call136 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %add.ptr133, i64 %sub134, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i32 %conv135), !dbg !4791
  %102 = load i64, i64* %slen, align 8, !dbg !4792
  %add137 = add i64 %102, %call136, !dbg !4792
  store i64 %add137, i64* %slen, align 8, !dbg !4792
  br label %if.end138

if.end138:                                        ; preds = %if.else130, %if.end129
  %103 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4793
  %rnaprop139 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %103, i32 0, i32 55, !dbg !4795
  %104 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop139, align 8, !dbg !4795
  %tobool140 = icmp ne %struct.PropertyRNA* %104, null, !dbg !4793
  br i1 %tobool140, label %if.then141, label %if.end153, !dbg !4796

if.then141:                                       ; preds = %if.end138
  call void @llvm.dbg.declare(metadata i32* %pstype, metadata !4797, metadata !DIExpression()), !dbg !4800
  %105 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4801
  %rnaprop142 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %105, i32 0, i32 55, !dbg !4802
  %106 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop142, align 8, !dbg !4802
  %call143 = call i32 @RNA_property_subtype(%struct.PropertyRNA* %106), !dbg !4803
  store i32 %call143, i32* %pstype, align 4, !dbg !4800
  %107 = load i32, i32* %pstype, align 4, !dbg !4804
  %cmp144 = icmp eq i32 %107, 14, !dbg !4806
  br i1 %cmp144, label %if.then146, label %if.else147, !dbg !4807

if.then146:                                       ; preds = %if.then141
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i8** %drawstr_suffix, align 8, !dbg !4808
  br label %if.end152, !dbg !4810

if.else147:                                       ; preds = %if.then141
  %108 = load i32, i32* %pstype, align 4, !dbg !4811
  %cmp148 = icmp eq i32 %108, 12, !dbg !4813
  br i1 %cmp148, label %if.then150, label %if.end151, !dbg !4814

if.then150:                                       ; preds = %if.else147
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i8** %drawstr_suffix, align 8, !dbg !4815
  br label %if.end151, !dbg !4817

if.end151:                                        ; preds = %if.then150, %if.else147
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.then146
  br label %if.end153, !dbg !4818

if.end153:                                        ; preds = %if.end152, %if.end138
  %109 = load i8*, i8** %drawstr_suffix, align 8, !dbg !4819
  %tobool154 = icmp ne i8* %109, null, !dbg !4819
  br i1 %tobool154, label %if.then155, label %if.end161, !dbg !4821

if.then155:                                       ; preds = %if.end153
  %110 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4822
  %drawstr156 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %110, i32 0, i32 17, !dbg !4824
  %arraydecay157 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr156, i64 0, i64 0, !dbg !4822
  %111 = load i64, i64* %slen, align 8, !dbg !4825
  %add.ptr158 = getelementptr inbounds i8, i8* %arraydecay157, i64 %111, !dbg !4826
  %112 = load i8*, i8** %drawstr_suffix, align 8, !dbg !4827
  %113 = load i64, i64* %slen, align 8, !dbg !4828
  %sub159 = sub i64 400, %113, !dbg !4829
  %call160 = call i8* @BLI_strncpy(i8* %add.ptr158, i8* %112, i64 %sub159), !dbg !4830
  br label %if.end161, !dbg !4831

if.end161:                                        ; preds = %if.then155, %if.end153
  br label %if.end162, !dbg !4832

if.end162:                                        ; preds = %if.end161, %sw.bb75
  br label %sw.epilog275, !dbg !4833

sw.bb163:                                         ; preds = %sw.epilog
  %114 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4834
  %call164 = call zeroext i8 @ui_is_but_float(%struct.uiBut* %114), !dbg !4836
  %tobool165 = icmp ne i8 %call164, 0, !dbg !4836
  br i1 %tobool165, label %if.then166, label %if.else178, !dbg !4837

if.then166:                                       ; preds = %sw.bb163
  call void @llvm.dbg.declare(metadata i32* %prec167, metadata !4838, metadata !DIExpression()), !dbg !4840
  %115 = load double, double* %value, align 8, !dbg !4841
  %cmp168 = fcmp oeq double %115, 0x7FEFFFFFFFFFFFFF, !dbg !4841
  br i1 %cmp168, label %if.then170, label %if.end172, !dbg !4843

if.then170:                                       ; preds = %if.then166
  %116 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4844
  %call171 = call double @ui_get_but_val(%struct.uiBut* %116), !dbg !4844
  store double %call171, double* %value, align 8, !dbg !4844
  br label %if.end172, !dbg !4844

if.end172:                                        ; preds = %if.then170, %if.then166
  %117 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4846
  %118 = load double, double* %value, align 8, !dbg !4847
  %call173 = call i32 @ui_but_float_precision(%struct.uiBut* %117, double %118), !dbg !4848
  store i32 %call173, i32* %prec167, align 4, !dbg !4849
  %119 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4850
  %drawstr174 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %119, i32 0, i32 17, !dbg !4851
  %arraydecay175 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr174, i64 0, i64 0, !dbg !4850
  %120 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4852
  %str176 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %120, i32 0, i32 15, !dbg !4853
  %121 = load i8*, i8** %str176, align 8, !dbg !4853
  %122 = load i32, i32* %prec167, align 4, !dbg !4854
  %123 = load double, double* %value, align 8, !dbg !4855
  %call177 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay175, i64 400, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0), i8* %121, i32 %122, double %123), !dbg !4856
  br label %if.end183, !dbg !4857

if.else178:                                       ; preds = %sw.bb163
  %124 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4858
  %drawstr179 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %124, i32 0, i32 17, !dbg !4860
  %arraydecay180 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr179, i64 0, i64 0, !dbg !4858
  %125 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4861
  %str181 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %125, i32 0, i32 15, !dbg !4862
  %126 = load i8*, i8** %str181, align 8, !dbg !4862
  %call182 = call i8* @BLI_strncpy(i8* %arraydecay180, i8* %126, i64 400), !dbg !4863
  br label %if.end183

if.end183:                                        ; preds = %if.else178, %if.end172
  br label %sw.epilog275, !dbg !4864

sw.bb184:                                         ; preds = %sw.epilog, %sw.epilog, %sw.epilog
  %127 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4865
  %editstr185 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %127, i32 0, i32 69, !dbg !4867
  %128 = load i8*, i8** %editstr185, align 8, !dbg !4867
  %tobool186 = icmp ne i8* %128, null, !dbg !4865
  br i1 %tobool186, label %if.end195, label %if.then187, !dbg !4868

if.then187:                                       ; preds = %sw.bb184
  call void @llvm.dbg.declare(metadata [400 x i8]* %str188, metadata !4869, metadata !DIExpression()), !dbg !4871
  %129 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4872
  %arraydecay189 = getelementptr inbounds [400 x i8], [400 x i8]* %str188, i64 0, i64 0, !dbg !4873
  call void @ui_get_but_string(%struct.uiBut* %129, i8* %arraydecay189, i64 400), !dbg !4874
  %130 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4875
  %drawstr190 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %130, i32 0, i32 17, !dbg !4876
  %arraydecay191 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr190, i64 0, i64 0, !dbg !4875
  %131 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4877
  %str192 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %131, i32 0, i32 15, !dbg !4878
  %132 = load i8*, i8** %str192, align 8, !dbg !4878
  %arraydecay193 = getelementptr inbounds [400 x i8], [400 x i8]* %str188, i64 0, i64 0, !dbg !4879
  %call194 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay191, i64 400, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i8* %132, i8* %arraydecay193), !dbg !4880
  br label %if.end195, !dbg !4881

if.end195:                                        ; preds = %if.then187, %sw.bb184
  br label %sw.epilog275, !dbg !4882

sw.bb196:                                         ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata i8** %str197, metadata !4883, metadata !DIExpression()), !dbg !4885
  %133 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4886
  %flag198 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %133, i32 0, i32 2, !dbg !4888
  %134 = load i32, i32* %flag198, align 8, !dbg !4888
  %and199 = and i32 %134, 1, !dbg !4889
  %tobool200 = icmp ne i32 %and199, 0, !dbg !4889
  br i1 %tobool200, label %if.then201, label %if.else202, !dbg !4890

if.then201:                                       ; preds = %sw.bb196
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0), i8** %str197, align 8, !dbg !4891
  br label %if.end210, !dbg !4893

if.else202:                                       ; preds = %sw.bb196
  %135 = load double, double* %value, align 8, !dbg !4894
  %cmp203 = fcmp oeq double %135, 0x7FEFFFFFFFFFFFFF, !dbg !4894
  br i1 %cmp203, label %if.then205, label %if.end207, !dbg !4897

if.then205:                                       ; preds = %if.else202
  %136 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4898
  %call206 = call double @ui_get_but_val(%struct.uiBut* %136), !dbg !4898
  store double %call206, double* %value, align 8, !dbg !4898
  br label %if.end207, !dbg !4898

if.end207:                                        ; preds = %if.then205, %if.else202
  %137 = load double, double* %value, align 8, !dbg !4900
  %conv208 = fptosi double %137 to i16, !dbg !4901
  %call209 = call i8* @WM_key_event_string(i16 signext %conv208), !dbg !4902
  store i8* %call209, i8** %str197, align 8, !dbg !4903
  br label %if.end210

if.end210:                                        ; preds = %if.end207, %if.then201
  %138 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4904
  %drawstr211 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %138, i32 0, i32 17, !dbg !4905
  %arraydecay212 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr211, i64 0, i64 0, !dbg !4904
  %139 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4906
  %str213 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %139, i32 0, i32 15, !dbg !4907
  %140 = load i8*, i8** %str213, align 8, !dbg !4907
  %141 = load i8*, i8** %str197, align 8, !dbg !4908
  %call214 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay212, i64 400, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i8* %140, i8* %141), !dbg !4909
  br label %sw.epilog275, !dbg !4910

sw.bb215:                                         ; preds = %sw.epilog
  %142 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4911
  %flag216 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %142, i32 0, i32 2, !dbg !4913
  %143 = load i32, i32* %flag216, align 8, !dbg !4913
  %and217 = and i32 %143, 1, !dbg !4914
  %tobool218 = icmp ne i32 %and217, 0, !dbg !4914
  br i1 %tobool218, label %if.then219, label %if.else263, !dbg !4915

if.then219:                                       ; preds = %sw.bb215
  %144 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4916
  %modifier_key = getelementptr inbounds %struct.uiBut, %struct.uiBut* %144, i32 0, i32 50, !dbg !4919
  %145 = load i16, i16* %modifier_key, align 2, !dbg !4919
  %tobool220 = icmp ne i16 %145, 0, !dbg !4916
  br i1 %tobool220, label %if.then221, label %if.else258, !dbg !4920

if.then221:                                       ; preds = %if.then219
  call void @llvm.dbg.declare(metadata i8** %str222, metadata !4921, metadata !DIExpression()), !dbg !4923
  %146 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4924
  %drawstr223 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %146, i32 0, i32 17, !dbg !4925
  %arraydecay224 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr223, i64 0, i64 0, !dbg !4924
  store i8* %arraydecay224, i8** %str222, align 8, !dbg !4923
  %147 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4926
  %drawstr225 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %147, i32 0, i32 17, !dbg !4927
  %arrayidx = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr225, i64 0, i64 0, !dbg !4926
  store i8 0, i8* %arrayidx, align 8, !dbg !4928
  %148 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4929
  %modifier_key226 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %148, i32 0, i32 50, !dbg !4931
  %149 = load i16, i16* %modifier_key226, align 2, !dbg !4931
  %conv227 = sext i16 %149 to i32, !dbg !4929
  %and228 = and i32 %conv227, 1, !dbg !4932
  %tobool229 = icmp ne i32 %and228, 0, !dbg !4932
  br i1 %tobool229, label %if.then230, label %if.end233, !dbg !4933

if.then230:                                       ; preds = %if.then221
  %150 = load i8*, i8** %str222, align 8, !dbg !4934
  %call231 = call i64 @BLI_strcpy_rlen(i8* %150, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0)), !dbg !4935
  %151 = load i8*, i8** %str222, align 8, !dbg !4936
  %add.ptr232 = getelementptr inbounds i8, i8* %151, i64 %call231, !dbg !4936
  store i8* %add.ptr232, i8** %str222, align 8, !dbg !4936
  br label %if.end233, !dbg !4937

if.end233:                                        ; preds = %if.then230, %if.then221
  %152 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4938
  %modifier_key234 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %152, i32 0, i32 50, !dbg !4940
  %153 = load i16, i16* %modifier_key234, align 2, !dbg !4940
  %conv235 = sext i16 %153 to i32, !dbg !4938
  %and236 = and i32 %conv235, 2, !dbg !4941
  %tobool237 = icmp ne i32 %and236, 0, !dbg !4941
  br i1 %tobool237, label %if.then238, label %if.end241, !dbg !4942

if.then238:                                       ; preds = %if.end233
  %154 = load i8*, i8** %str222, align 8, !dbg !4943
  %call239 = call i64 @BLI_strcpy_rlen(i8* %154, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0)), !dbg !4944
  %155 = load i8*, i8** %str222, align 8, !dbg !4945
  %add.ptr240 = getelementptr inbounds i8, i8* %155, i64 %call239, !dbg !4945
  store i8* %add.ptr240, i8** %str222, align 8, !dbg !4945
  br label %if.end241, !dbg !4946

if.end241:                                        ; preds = %if.then238, %if.end233
  %156 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4947
  %modifier_key242 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %156, i32 0, i32 50, !dbg !4949
  %157 = load i16, i16* %modifier_key242, align 2, !dbg !4949
  %conv243 = sext i16 %157 to i32, !dbg !4947
  %and244 = and i32 %conv243, 4, !dbg !4950
  %tobool245 = icmp ne i32 %and244, 0, !dbg !4950
  br i1 %tobool245, label %if.then246, label %if.end249, !dbg !4951

if.then246:                                       ; preds = %if.end241
  %158 = load i8*, i8** %str222, align 8, !dbg !4952
  %call247 = call i64 @BLI_strcpy_rlen(i8* %158, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0)), !dbg !4953
  %159 = load i8*, i8** %str222, align 8, !dbg !4954
  %add.ptr248 = getelementptr inbounds i8, i8* %159, i64 %call247, !dbg !4954
  store i8* %add.ptr248, i8** %str222, align 8, !dbg !4954
  br label %if.end249, !dbg !4955

if.end249:                                        ; preds = %if.then246, %if.end241
  %160 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4956
  %modifier_key250 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %160, i32 0, i32 50, !dbg !4958
  %161 = load i16, i16* %modifier_key250, align 2, !dbg !4958
  %conv251 = sext i16 %161 to i32, !dbg !4956
  %and252 = and i32 %conv251, 8, !dbg !4959
  %tobool253 = icmp ne i32 %and252, 0, !dbg !4959
  br i1 %tobool253, label %if.then254, label %if.end257, !dbg !4960

if.then254:                                       ; preds = %if.end249
  %162 = load i8*, i8** %str222, align 8, !dbg !4961
  %call255 = call i64 @BLI_strcpy_rlen(i8* %162, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0)), !dbg !4962
  %163 = load i8*, i8** %str222, align 8, !dbg !4963
  %add.ptr256 = getelementptr inbounds i8, i8* %163, i64 %call255, !dbg !4963
  store i8* %add.ptr256, i8** %str222, align 8, !dbg !4963
  br label %if.end257, !dbg !4964

if.end257:                                        ; preds = %if.then254, %if.end249
  %164 = load i8*, i8** %str222, align 8, !dbg !4965
  br label %if.end262, !dbg !4966

if.else258:                                       ; preds = %if.then219
  %165 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4967
  %drawstr259 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %165, i32 0, i32 17, !dbg !4969
  %arraydecay260 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr259, i64 0, i64 0, !dbg !4967
  %call261 = call i8* @BLI_strncpy(i8* %arraydecay260, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0), i64 400), !dbg !4970
  br label %if.end262

if.end262:                                        ; preds = %if.else258, %if.end257
  br label %if.end268, !dbg !4971

if.else263:                                       ; preds = %sw.bb215
  %166 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4972
  %drawstr264 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %166, i32 0, i32 17, !dbg !4973
  %arraydecay265 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr264, i64 0, i64 0, !dbg !4972
  %167 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4974
  %str266 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %167, i32 0, i32 15, !dbg !4975
  %168 = load i8*, i8** %str266, align 8, !dbg !4975
  %call267 = call i8* @BLI_strncpy(i8* %arraydecay265, i8* %168, i64 400), !dbg !4976
  br label %if.end268

if.end268:                                        ; preds = %if.else263, %if.end262
  br label %sw.epilog275, !dbg !4977

sw.bb269:                                         ; preds = %sw.epilog, %sw.epilog
  br label %sw.epilog275, !dbg !4978

sw.default270:                                    ; preds = %sw.epilog
  %169 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4979
  %drawstr271 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %169, i32 0, i32 17, !dbg !4980
  %arraydecay272 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr271, i64 0, i64 0, !dbg !4979
  %170 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4981
  %str273 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %170, i32 0, i32 15, !dbg !4982
  %171 = load i8*, i8** %str273, align 8, !dbg !4982
  %call274 = call i8* @BLI_strncpy(i8* %arraydecay272, i8* %171, i64 400), !dbg !4983
  br label %sw.epilog275, !dbg !4984

sw.epilog275:                                     ; preds = %sw.default270, %sw.bb269, %if.end268, %if.end210, %if.end195, %if.end183, %if.end162, %if.end74
  %172 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4985
  %editstr276 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %172, i32 0, i32 69, !dbg !4987
  %173 = load i8*, i8** %editstr276, align 8, !dbg !4987
  %tobool277 = icmp ne i8* %173, null, !dbg !4985
  br i1 %tobool277, label %if.then278, label %if.end281, !dbg !4988

if.then278:                                       ; preds = %sw.epilog275
  %174 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !4989
  %drawstr279 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %174, i32 0, i32 17, !dbg !4990
  %arrayidx280 = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr279, i64 0, i64 0, !dbg !4989
  store i8 0, i8* %arrayidx280, align 8, !dbg !4991
  br label %if.end281, !dbg !4989

if.end281:                                        ; preds = %if.then278, %sw.epilog275
  ret void, !dbg !4992
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiBlockUpdateFromOld(%struct.bContext* %C, %struct.uiBlock* %block) #0 !dbg !4993 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %but_old = alloca %struct.uiBut*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4996, metadata !DIExpression()), !dbg !4997
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !4998, metadata !DIExpression()), !dbg !4999
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but_old, metadata !5000, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !5002, metadata !DIExpression()), !dbg !5003
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5004
  %oldblock = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 4, !dbg !5006
  %1 = load %struct.uiBlock*, %struct.uiBlock** %oldblock, align 8, !dbg !5006
  %tobool = icmp ne %struct.uiBlock* %1, null, !dbg !5004
  br i1 %tobool, label %if.end, label %if.then, !dbg !5007

if.then:                                          ; preds = %entry
  br label %return, !dbg !5008

if.end:                                           ; preds = %entry
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5009
  %oldblock1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %2, i32 0, i32 4, !dbg !5010
  %3 = load %struct.uiBlock*, %struct.uiBlock** %oldblock1, align 8, !dbg !5010
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %3, i32 0, i32 2, !dbg !5011
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 0, !dbg !5012
  %4 = load i8*, i8** %first, align 8, !dbg !5012
  %5 = bitcast i8* %4 to %struct.uiBut*, !dbg !5009
  store %struct.uiBut* %5, %struct.uiBut** %but_old, align 8, !dbg !5013
  %6 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5014
  %oldblock2 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %6, i32 0, i32 4, !dbg !5016
  %7 = load %struct.uiBlock*, %struct.uiBlock** %oldblock2, align 8, !dbg !5016
  %butstore = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %7, i32 0, i32 5, !dbg !5017
  %call = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %butstore), !dbg !5018
  %conv = zext i8 %call to i32, !dbg !5018
  %cmp = icmp eq i32 %conv, 0, !dbg !5019
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !5020

if.then4:                                         ; preds = %if.end
  %8 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5021
  call void @UI_butstore_update(%struct.uiBlock* %8), !dbg !5023
  br label %if.end5, !dbg !5024

if.end5:                                          ; preds = %if.then4, %if.end
  %9 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5025
  %buttons6 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %9, i32 0, i32 2, !dbg !5027
  %first7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons6, i32 0, i32 0, !dbg !5028
  %10 = load i8*, i8** %first7, align 8, !dbg !5028
  %11 = bitcast i8* %10 to %struct.uiBut*, !dbg !5025
  store %struct.uiBut* %11, %struct.uiBut** %but, align 8, !dbg !5029
  br label %for.cond, !dbg !5030

for.cond:                                         ; preds = %for.inc, %if.end5
  %12 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5031
  %tobool8 = icmp ne %struct.uiBut* %12, null, !dbg !5033
  br i1 %tobool8, label %for.body, label %for.end, !dbg !5033

for.body:                                         ; preds = %for.cond
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5034
  %14 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5037
  %call9 = call zeroext i8 @ui_but_update_from_old_block(%struct.bContext* %13, %struct.uiBlock* %14, %struct.uiBut** %but, %struct.uiBut** %but_old), !dbg !5038
  %tobool10 = icmp ne i8 %call9, 0, !dbg !5038
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !5039

if.then11:                                        ; preds = %for.body
  %15 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5040
  call void @ui_check_but(%struct.uiBut* %15), !dbg !5042
  br label %if.end12, !dbg !5043

if.end12:                                         ; preds = %if.then11, %for.body
  br label %for.inc, !dbg !5044

for.inc:                                          ; preds = %if.end12
  %16 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5045
  %next = getelementptr inbounds %struct.uiBut, %struct.uiBut* %16, i32 0, i32 0, !dbg !5046
  %17 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !5046
  store %struct.uiBut* %17, %struct.uiBut** %but, align 8, !dbg !5047
  br label %for.cond, !dbg !5048, !llvm.loop !5049

for.end:                                          ; preds = %for.cond
  %18 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5051
  %oldblock13 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %18, i32 0, i32 4, !dbg !5052
  %19 = load %struct.uiBlock*, %struct.uiBlock** %oldblock13, align 8, !dbg !5052
  %auto_open = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %19, i32 0, i32 31, !dbg !5053
  %20 = load i8, i8* %auto_open, align 8, !dbg !5053
  %21 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5054
  %auto_open14 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %21, i32 0, i32 31, !dbg !5055
  store i8 %20, i8* %auto_open14, align 8, !dbg !5056
  %22 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5057
  %oldblock15 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %22, i32 0, i32 4, !dbg !5058
  %23 = load %struct.uiBlock*, %struct.uiBlock** %oldblock15, align 8, !dbg !5058
  %auto_open_last = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %23, i32 0, i32 33, !dbg !5059
  %24 = load double, double* %auto_open_last, align 8, !dbg !5059
  %25 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5060
  %auto_open_last16 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %25, i32 0, i32 33, !dbg !5061
  store double %24, double* %auto_open_last16, align 8, !dbg !5062
  %26 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5063
  %oldblock17 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %26, i32 0, i32 4, !dbg !5064
  %27 = load %struct.uiBlock*, %struct.uiBlock** %oldblock17, align 8, !dbg !5064
  %tooltipdisabled = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %27, i32 0, i32 37, !dbg !5065
  %28 = load i8, i8* %tooltipdisabled, align 2, !dbg !5065
  %29 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5066
  %tooltipdisabled18 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %29, i32 0, i32 37, !dbg !5067
  store i8 %28, i8* %tooltipdisabled18, align 2, !dbg !5068
  %30 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5069
  %call19 = call float* @ui_block_hsv_get(%struct.uiBlock* %30), !dbg !5070
  %31 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5071
  %oldblock20 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %31, i32 0, i32 4, !dbg !5072
  %32 = load %struct.uiBlock*, %struct.uiBlock** %oldblock20, align 8, !dbg !5072
  %call21 = call float* @ui_block_hsv_get(%struct.uiBlock* %32), !dbg !5073
  call void @copy_v3_v3(float* %call19, float* %call21), !dbg !5074
  %33 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5075
  %oldblock22 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %33, i32 0, i32 4, !dbg !5076
  store %struct.uiBlock* null, %struct.uiBlock** %oldblock22, align 8, !dbg !5077
  br label %return, !dbg !5078

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !5078
}

declare dso_local void @UI_butstore_update(%struct.uiBlock*) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ui_but_update_from_old_block(%struct.bContext* %C, %struct.uiBlock* %block, %struct.uiBut** %but_p, %struct.uiBut** %but_old_p) #0 !dbg !5079 {
entry:
  %retval = alloca i8, align 1
  %C.addr = alloca %struct.bContext*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %but_p.addr = alloca %struct.uiBut**, align 8
  %but_old_p.addr = alloca %struct.uiBut**, align 8
  %drawflag_copy = alloca i32, align 4
  %oldblock = alloca %struct.uiBlock*, align 8
  %oldbut = alloca %struct.uiBut*, align 8
  %but = alloca %struct.uiBut*, align 8
  %found_active = alloca i8, align 1
  %flag_copy = alloca i32, align 4
  %sw_ap = alloca i8*, align 8
  %sw_ap23 = alloca i8*, align 8
  %sw_ap52 = alloca i8*, align 8
  %flag_copy84 = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5083, metadata !DIExpression()), !dbg !5084
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !5085, metadata !DIExpression()), !dbg !5086
  store %struct.uiBut** %but_p, %struct.uiBut*** %but_p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut*** %but_p.addr, metadata !5087, metadata !DIExpression()), !dbg !5088
  store %struct.uiBut** %but_old_p, %struct.uiBut*** %but_old_p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut*** %but_old_p.addr, metadata !5089, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.declare(metadata i32* %drawflag_copy, metadata !5091, metadata !DIExpression()), !dbg !5092
  store i32 0, i32* %drawflag_copy, align 4, !dbg !5092
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %oldblock, metadata !5093, metadata !DIExpression()), !dbg !5094
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5095
  %oldblock1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 4, !dbg !5096
  %1 = load %struct.uiBlock*, %struct.uiBlock** %oldblock1, align 8, !dbg !5096
  store %struct.uiBlock* %1, %struct.uiBlock** %oldblock, align 8, !dbg !5094
  call void @llvm.dbg.declare(metadata %struct.uiBut** %oldbut, metadata !5097, metadata !DIExpression()), !dbg !5098
  store %struct.uiBut* null, %struct.uiBut** %oldbut, align 8, !dbg !5098
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !5099, metadata !DIExpression()), !dbg !5100
  %2 = load %struct.uiBut**, %struct.uiBut*** %but_p.addr, align 8, !dbg !5101
  %3 = load %struct.uiBut*, %struct.uiBut** %2, align 8, !dbg !5102
  store %struct.uiBut* %3, %struct.uiBut** %but, align 8, !dbg !5100
  call void @llvm.dbg.declare(metadata i8* %found_active, metadata !5103, metadata !DIExpression()), !dbg !5104
  store i8 0, i8* %found_active, align 1, !dbg !5104
  %4 = load %struct.uiBut**, %struct.uiBut*** %but_old_p.addr, align 8, !dbg !5105
  %5 = load %struct.uiBut*, %struct.uiBut** %4, align 8, !dbg !5105
  %tobool = icmp ne %struct.uiBut* %5, null, !dbg !5105
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !5105

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5105
  %7 = load %struct.uiBut**, %struct.uiBut*** %but_old_p.addr, align 8, !dbg !5105
  %8 = load %struct.uiBut*, %struct.uiBut** %7, align 8, !dbg !5105
  %call = call zeroext i8 @ui_but_equals_old(%struct.uiBut* %6, %struct.uiBut* %8), !dbg !5105
  %conv = zext i8 %call to i32, !dbg !5105
  %tobool2 = icmp ne i32 %conv, 0, !dbg !5105
  br i1 %tobool2, label %if.then, label %if.else, !dbg !5107

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.uiBut**, %struct.uiBut*** %but_old_p.addr, align 8, !dbg !5108
  %10 = load %struct.uiBut*, %struct.uiBut** %9, align 8, !dbg !5110
  store %struct.uiBut* %10, %struct.uiBut** %oldbut, align 8, !dbg !5111
  br label %if.end, !dbg !5112

if.else:                                          ; preds = %land.lhs.true, %entry
  %11 = load %struct.uiBlock*, %struct.uiBlock** %oldblock, align 8, !dbg !5113
  %12 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5115
  %call3 = call %struct.uiBut* @ui_but_find_old(%struct.uiBlock* %11, %struct.uiBut* %12), !dbg !5116
  store %struct.uiBut* %call3, %struct.uiBut** %oldbut, align 8, !dbg !5117
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5118
  %tobool4 = icmp ne %struct.uiBut* %13, null, !dbg !5118
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !5118

cond.true:                                        ; preds = %if.end
  %14 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5119
  %next = getelementptr inbounds %struct.uiBut, %struct.uiBut* %14, i32 0, i32 0, !dbg !5120
  %15 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !5120
  br label %cond.end, !dbg !5118

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !5118

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.uiBut* [ %15, %cond.true ], [ null, %cond.false ], !dbg !5118
  %16 = load %struct.uiBut**, %struct.uiBut*** %but_old_p.addr, align 8, !dbg !5121
  store %struct.uiBut* %cond, %struct.uiBut** %16, align 8, !dbg !5122
  %17 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5123
  %tobool5 = icmp ne %struct.uiBut* %17, null, !dbg !5123
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !5125

if.then6:                                         ; preds = %cond.end
  %18 = load i8, i8* %found_active, align 1, !dbg !5126
  store i8 %18, i8* %retval, align 1, !dbg !5128
  br label %return, !dbg !5128

if.end7:                                          ; preds = %cond.end
  %19 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5129
  %active = getelementptr inbounds %struct.uiBut, %struct.uiBut* %19, i32 0, i32 67, !dbg !5131
  %20 = load %struct.uiHandleButtonData*, %struct.uiHandleButtonData** %active, align 8, !dbg !5131
  %tobool8 = icmp ne %struct.uiHandleButtonData* %20, null, !dbg !5129
  br i1 %tobool8, label %if.then9, label %if.else83, !dbg !5132

if.then9:                                         ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i32* %flag_copy, metadata !5133, metadata !DIExpression()), !dbg !5135
  store i32 65536, i32* %flag_copy, align 4, !dbg !5135
  store i8 1, i8* %found_active, align 1, !dbg !5136
  %21 = load %struct.uiBlock*, %struct.uiBlock** %oldblock, align 8, !dbg !5137
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %21, i32 0, i32 2, !dbg !5138
  %22 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5139
  %23 = bitcast %struct.uiBut* %22 to i8*, !dbg !5139
  call void @BLI_remlink(%struct.ListBase* %buttons, i8* %23), !dbg !5140
  %24 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5141
  %buttons10 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %24, i32 0, i32 2, !dbg !5142
  %25 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5143
  %26 = bitcast %struct.uiBut* %25 to i8*, !dbg !5143
  %27 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5144
  %28 = bitcast %struct.uiBut* %27 to i8*, !dbg !5144
  call void @BLI_insertlinkafter(%struct.ListBase* %buttons10, i8* %26, i8* %28), !dbg !5145
  %29 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5146
  %30 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5147
  %block11 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %30, i32 0, i32 74, !dbg !5148
  store %struct.uiBlock* %29, %struct.uiBlock** %block11, align 8, !dbg !5149
  %31 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5150
  %32 = load %struct.uiBut**, %struct.uiBut*** %but_p.addr, align 8, !dbg !5151
  store %struct.uiBut* %31, %struct.uiBut** %32, align 8, !dbg !5152
  %33 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5153
  %rect = getelementptr inbounds %struct.uiBut, %struct.uiBut* %33, i32 0, i32 18, !dbg !5154
  %34 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5155
  %rect12 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %34, i32 0, i32 18, !dbg !5156
  %35 = bitcast %struct.rctf* %rect to i8*, !dbg !5156
  %36 = bitcast %struct.rctf* %rect12 to i8*, !dbg !5156
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false), !dbg !5156
  %37 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5157
  %context = getelementptr inbounds %struct.uiBut, %struct.uiBut* %37, i32 0, i32 32, !dbg !5158
  %38 = load %struct.bContextStore*, %struct.bContextStore** %context, align 8, !dbg !5158
  %39 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5159
  %context13 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %39, i32 0, i32 32, !dbg !5160
  store %struct.bContextStore* %38, %struct.bContextStore** %context13, align 8, !dbg !5161
  %40 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5162
  %icon = getelementptr inbounds %struct.uiBut, %struct.uiBut* %40, i32 0, i32 44, !dbg !5163
  %41 = load i32, i32* %icon, align 8, !dbg !5163
  %42 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5164
  %icon14 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %42, i32 0, i32 44, !dbg !5165
  store i32 %41, i32* %icon14, align 8, !dbg !5166
  %43 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5167
  %iconadd = getelementptr inbounds %struct.uiBut, %struct.uiBut* %43, i32 0, i32 51, !dbg !5168
  %44 = load i16, i16* %iconadd, align 4, !dbg !5168
  %45 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5169
  %iconadd15 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %45, i32 0, i32 51, !dbg !5170
  store i16 %44, i16* %iconadd15, align 4, !dbg !5171
  %46 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5172
  %alignnr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %46, i32 0, i32 10, !dbg !5173
  %47 = load i16, i16* %alignnr, align 8, !dbg !5173
  %48 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5174
  %alignnr16 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %48, i32 0, i32 10, !dbg !5175
  store i16 %47, i16* %alignnr16, align 8, !dbg !5176
  %49 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5177
  %poin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %49, i32 0, i32 19, !dbg !5179
  %50 = load i8*, i8** %poin, align 8, !dbg !5179
  %51 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5180
  %52 = bitcast %struct.uiBut* %51 to i8*, !dbg !5181
  %cmp = icmp ne i8* %50, %52, !dbg !5182
  br i1 %cmp, label %if.then18, label %if.end27, !dbg !5183

if.then18:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata i8** %sw_ap, metadata !5184, metadata !DIExpression()), !dbg !5187
  %53 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5187
  %poin19 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %53, i32 0, i32 19, !dbg !5187
  %54 = load i8*, i8** %poin19, align 8, !dbg !5187
  store i8* %54, i8** %sw_ap, align 8, !dbg !5187
  %55 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5187
  %poin20 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %55, i32 0, i32 19, !dbg !5187
  %56 = load i8*, i8** %poin20, align 8, !dbg !5187
  %57 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5187
  %poin21 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %57, i32 0, i32 19, !dbg !5187
  store i8* %56, i8** %poin21, align 8, !dbg !5187
  %58 = load i8*, i8** %sw_ap, align 8, !dbg !5187
  %59 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5187
  %poin22 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %59, i32 0, i32 19, !dbg !5187
  store i8* %58, i8** %poin22, align 8, !dbg !5187
  call void @llvm.dbg.declare(metadata i8** %sw_ap23, metadata !5188, metadata !DIExpression()), !dbg !5190
  %60 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5190
  %func_argN = getelementptr inbounds %struct.uiBut, %struct.uiBut* %60, i32 0, i32 31, !dbg !5190
  %61 = load i8*, i8** %func_argN, align 8, !dbg !5190
  store i8* %61, i8** %sw_ap23, align 8, !dbg !5190
  %62 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5190
  %func_argN24 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %62, i32 0, i32 31, !dbg !5190
  %63 = load i8*, i8** %func_argN24, align 8, !dbg !5190
  %64 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5190
  %func_argN25 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %64, i32 0, i32 31, !dbg !5190
  store i8* %63, i8** %func_argN25, align 8, !dbg !5190
  %65 = load i8*, i8** %sw_ap23, align 8, !dbg !5190
  %66 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5190
  %func_argN26 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %66, i32 0, i32 31, !dbg !5190
  store i8* %65, i8** %func_argN26, align 8, !dbg !5190
  br label %if.end27, !dbg !5191

if.end27:                                         ; preds = %if.then18, %if.then9
  %67 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5192
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %67, i32 0, i32 2, !dbg !5193
  %68 = load i32, i32* %flag, align 8, !dbg !5193
  %and = and i32 %68, -65537, !dbg !5194
  %69 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5195
  %flag28 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %69, i32 0, i32 2, !dbg !5196
  %70 = load i32, i32* %flag28, align 8, !dbg !5196
  %and29 = and i32 %70, 65536, !dbg !5197
  %or = or i32 %and, %and29, !dbg !5198
  %71 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5199
  %flag30 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %71, i32 0, i32 2, !dbg !5200
  store i32 %or, i32* %flag30, align 8, !dbg !5201
  %72 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5202
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %72, i32 0, i32 3, !dbg !5203
  %73 = load i32, i32* %drawflag, align 4, !dbg !5203
  %74 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5204
  %drawflag31 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %74, i32 0, i32 3, !dbg !5205
  %75 = load i32, i32* %drawflag31, align 4, !dbg !5205
  %and32 = and i32 %75, 0, !dbg !5206
  %or33 = or i32 %73, %and32, !dbg !5207
  %76 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5208
  %drawflag34 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %76, i32 0, i32 3, !dbg !5209
  store i32 %or33, i32* %drawflag34, align 4, !dbg !5210
  %77 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5211
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %77, i32 0, i32 4, !dbg !5211
  %78 = load i32, i32* %type, align 8, !dbg !5211
  %cmp35 = icmp eq i32 %78, 1024, !dbg !5211
  br i1 %cmp35, label %if.then40, label %lor.lhs.false, !dbg !5211

lor.lhs.false:                                    ; preds = %if.end27
  %79 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5211
  %type37 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %79, i32 0, i32 4, !dbg !5211
  %80 = load i32, i32* %type37, align 8, !dbg !5211
  %cmp38 = icmp eq i32 %80, 18432, !dbg !5211
  br i1 %cmp38, label %if.then40, label %if.end42, !dbg !5213

if.then40:                                        ; preds = %lor.lhs.false, %if.end27
  %81 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5214
  %hardmax = getelementptr inbounds %struct.uiBut, %struct.uiBut* %81, i32 0, i32 21, !dbg !5215
  %82 = load float, float* %hardmax, align 4, !dbg !5215
  %83 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5216
  %hardmax41 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %83, i32 0, i32 21, !dbg !5217
  store float %82, float* %hardmax41, align 4, !dbg !5218
  br label %if.end42, !dbg !5216

if.end42:                                         ; preds = %if.then40, %lor.lhs.false
  %84 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5219
  %85 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5220
  %86 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5221
  call void @ui_but_update_linklines(%struct.uiBlock* %84, %struct.uiBut* %85, %struct.uiBut* %86), !dbg !5222
  %87 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5223
  %str = getelementptr inbounds %struct.uiBut, %struct.uiBut* %87, i32 0, i32 15, !dbg !5225
  %88 = load i8*, i8** %str, align 8, !dbg !5225
  %89 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5226
  %strdata = getelementptr inbounds %struct.uiBut, %struct.uiBut* %89, i32 0, i32 16, !dbg !5227
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %strdata, i64 0, i64 0, !dbg !5226
  %cmp43 = icmp ne i8* %88, %arraydecay, !dbg !5228
  br i1 %cmp43, label %if.then45, label %if.else64, !dbg !5229

if.then45:                                        ; preds = %if.end42
  %90 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5230
  %str46 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %90, i32 0, i32 15, !dbg !5233
  %91 = load i8*, i8** %str46, align 8, !dbg !5233
  %92 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5234
  %strdata47 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %92, i32 0, i32 16, !dbg !5235
  %arraydecay48 = getelementptr inbounds [128 x i8], [128 x i8]* %strdata47, i64 0, i64 0, !dbg !5234
  %cmp49 = icmp ne i8* %91, %arraydecay48, !dbg !5236
  br i1 %cmp49, label %if.then51, label %if.else57, !dbg !5237

if.then51:                                        ; preds = %if.then45
  call void @llvm.dbg.declare(metadata i8** %sw_ap52, metadata !5238, metadata !DIExpression()), !dbg !5241
  %93 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5241
  %str53 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %93, i32 0, i32 15, !dbg !5241
  %94 = load i8*, i8** %str53, align 8, !dbg !5241
  store i8* %94, i8** %sw_ap52, align 8, !dbg !5241
  %95 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5241
  %str54 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %95, i32 0, i32 15, !dbg !5241
  %96 = load i8*, i8** %str54, align 8, !dbg !5241
  %97 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5241
  %str55 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %97, i32 0, i32 15, !dbg !5241
  store i8* %96, i8** %str55, align 8, !dbg !5241
  %98 = load i8*, i8** %sw_ap52, align 8, !dbg !5241
  %99 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5241
  %str56 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %99, i32 0, i32 15, !dbg !5241
  store i8* %98, i8** %str56, align 8, !dbg !5241
  br label %if.end63, !dbg !5242

if.else57:                                        ; preds = %if.then45
  %100 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5243
  %str58 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %100, i32 0, i32 15, !dbg !5245
  %101 = load i8*, i8** %str58, align 8, !dbg !5245
  %102 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5246
  %str59 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %102, i32 0, i32 15, !dbg !5247
  store i8* %101, i8** %str59, align 8, !dbg !5248
  %103 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5249
  %strdata60 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %103, i32 0, i32 16, !dbg !5250
  %arraydecay61 = getelementptr inbounds [128 x i8], [128 x i8]* %strdata60, i64 0, i64 0, !dbg !5249
  %104 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5251
  %str62 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %104, i32 0, i32 15, !dbg !5252
  store i8* %arraydecay61, i8** %str62, align 8, !dbg !5253
  br label %if.end63

if.end63:                                         ; preds = %if.else57, %if.then51
  br label %if.end81, !dbg !5254

if.else64:                                        ; preds = %if.end42
  %105 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5255
  %str65 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %105, i32 0, i32 15, !dbg !5258
  %106 = load i8*, i8** %str65, align 8, !dbg !5258
  %107 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5259
  %strdata66 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %107, i32 0, i32 16, !dbg !5260
  %arraydecay67 = getelementptr inbounds [128 x i8], [128 x i8]* %strdata66, i64 0, i64 0, !dbg !5259
  %cmp68 = icmp ne i8* %106, %arraydecay67, !dbg !5261
  br i1 %cmp68, label %if.then70, label %if.end75, !dbg !5262

if.then70:                                        ; preds = %if.else64
  %108 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5263
  %109 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5265
  %str71 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %109, i32 0, i32 15, !dbg !5266
  %110 = load i8*, i8** %str71, align 8, !dbg !5266
  call void %108(i8* %110), !dbg !5263
  %111 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5267
  %strdata72 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %111, i32 0, i32 16, !dbg !5268
  %arraydecay73 = getelementptr inbounds [128 x i8], [128 x i8]* %strdata72, i64 0, i64 0, !dbg !5267
  %112 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5269
  %str74 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %112, i32 0, i32 15, !dbg !5270
  store i8* %arraydecay73, i8** %str74, align 8, !dbg !5271
  br label %if.end75, !dbg !5272

if.end75:                                         ; preds = %if.then70, %if.else64
  %113 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5273
  %strdata76 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %113, i32 0, i32 16, !dbg !5274
  %arraydecay77 = getelementptr inbounds [128 x i8], [128 x i8]* %strdata76, i64 0, i64 0, !dbg !5273
  %114 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5275
  %strdata78 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %114, i32 0, i32 16, !dbg !5276
  %arraydecay79 = getelementptr inbounds [128 x i8], [128 x i8]* %strdata78, i64 0, i64 0, !dbg !5275
  %call80 = call i8* @BLI_strncpy(i8* %arraydecay77, i8* %arraydecay79, i64 128), !dbg !5277
  br label %if.end81

if.end81:                                         ; preds = %if.end75, %if.end63
  %115 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5278
  %buttons82 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %115, i32 0, i32 2, !dbg !5279
  %116 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5280
  %117 = bitcast %struct.uiBut* %116 to i8*, !dbg !5280
  call void @BLI_remlink(%struct.ListBase* %buttons82, i8* %117), !dbg !5281
  %118 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5282
  %119 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5283
  call void @ui_free_but(%struct.bContext* %118, %struct.uiBut* %119), !dbg !5284
  br label %if.end92, !dbg !5285

if.else83:                                        ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i32* %flag_copy84, metadata !5286, metadata !DIExpression()), !dbg !5288
  store i32 33554432, i32* %flag_copy84, align 4, !dbg !5288
  %120 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5289
  %flag85 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %120, i32 0, i32 2, !dbg !5290
  %121 = load i32, i32* %flag85, align 8, !dbg !5290
  %and86 = and i32 %121, -33554433, !dbg !5291
  %122 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5292
  %flag87 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %122, i32 0, i32 2, !dbg !5293
  %123 = load i32, i32* %flag87, align 8, !dbg !5293
  %and88 = and i32 %123, 33554432, !dbg !5294
  %or89 = or i32 %and86, %and88, !dbg !5295
  %124 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5296
  %flag90 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %124, i32 0, i32 2, !dbg !5297
  store i32 %or89, i32* %flag90, align 8, !dbg !5298
  %125 = load %struct.uiBlock*, %struct.uiBlock** %oldblock, align 8, !dbg !5299
  %buttons91 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %125, i32 0, i32 2, !dbg !5300
  %126 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5301
  %127 = bitcast %struct.uiBut* %126 to i8*, !dbg !5301
  call void @BLI_remlink(%struct.ListBase* %buttons91, i8* %127), !dbg !5302
  %128 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5303
  %129 = load %struct.uiBut*, %struct.uiBut** %oldbut, align 8, !dbg !5304
  call void @ui_free_but(%struct.bContext* %128, %struct.uiBut* %129), !dbg !5305
  br label %if.end92

if.end92:                                         ; preds = %if.else83, %if.end81
  %130 = load i8, i8* %found_active, align 1, !dbg !5306
  store i8 %130, i8* %retval, align 1, !dbg !5307
  br label %return, !dbg !5307

return:                                           ; preds = %if.end92, %if.then6
  %131 = load i8, i8* %retval, align 1, !dbg !5308
  ret i8 %131, !dbg !5308
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !5309 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5315, metadata !DIExpression()), !dbg !5316
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5317, metadata !DIExpression()), !dbg !5318
  %0 = load float*, float** %a.addr, align 8, !dbg !5319
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5319
  %1 = load float, float* %arrayidx, align 4, !dbg !5319
  %2 = load float*, float** %r.addr, align 8, !dbg !5320
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5320
  store float %1, float* %arrayidx1, align 4, !dbg !5321
  %3 = load float*, float** %a.addr, align 8, !dbg !5322
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !5322
  %4 = load float, float* %arrayidx2, align 4, !dbg !5322
  %5 = load float*, float** %r.addr, align 8, !dbg !5323
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !5323
  store float %4, float* %arrayidx3, align 4, !dbg !5324
  %6 = load float*, float** %a.addr, align 8, !dbg !5325
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !5325
  %7 = load float, float* %arrayidx4, align 4, !dbg !5325
  %8 = load float*, float** %r.addr, align 8, !dbg !5326
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5326
  store float %7, float* %arrayidx5, align 4, !dbg !5327
  ret void, !dbg !5328
}

declare dso_local float* @ui_block_hsv_get(%struct.uiBlock*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiEndBlock_ex(%struct.bContext* %C, %struct.uiBlock* %block, i32* %xy) #0 !dbg !5329 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %xy.addr = alloca i32*, align 8
  %window = alloca %struct.wmWindow*, align 8
  %scene = alloca %struct.Scene*, align 8
  %but = alloca %struct.uiBut*, align 8
  %ot = alloca %struct.wmOperatorType*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5333, metadata !DIExpression()), !dbg !5334
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !5335, metadata !DIExpression()), !dbg !5336
  store i32* %xy, i32** %xy.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %xy.addr, metadata !5337, metadata !DIExpression()), !dbg !5338
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %window, metadata !5339, metadata !DIExpression()), !dbg !5342
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5343
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !5344
  store %struct.wmWindow* %call, %struct.wmWindow** %window, align 8, !dbg !5342
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !5345, metadata !DIExpression()), !dbg !5348
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5349
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !5350
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !5348
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !5351, metadata !DIExpression()), !dbg !5352
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5353
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5354
  call void @uiBlockUpdateFromOld(%struct.bContext* %2, %struct.uiBlock* %3), !dbg !5355
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5356
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %4, i32 0, i32 2, !dbg !5358
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 0, !dbg !5359
  %5 = load i8*, i8** %first, align 8, !dbg !5359
  %6 = bitcast i8* %5 to %struct.uiBut*, !dbg !5356
  store %struct.uiBut* %6, %struct.uiBut** %but, align 8, !dbg !5360
  br label %for.cond, !dbg !5361

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5362
  %tobool = icmp ne %struct.uiBut* %7, null, !dbg !5364
  br i1 %tobool, label %for.body, label %for.end, !dbg !5364

for.body:                                         ; preds = %for.cond
  %8 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5365
  %optype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 59, !dbg !5368
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %optype, align 8, !dbg !5368
  %tobool2 = icmp ne %struct.wmOperatorType* %9, null, !dbg !5365
  br i1 %tobool2, label %if.then, label %if.end15, !dbg !5369

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !5370, metadata !DIExpression()), !dbg !5374
  %10 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5375
  %optype3 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 59, !dbg !5376
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %optype3, align 8, !dbg !5376
  store %struct.wmOperatorType* %11, %struct.wmOperatorType** %ot, align 8, !dbg !5374
  %12 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5377
  %context = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 32, !dbg !5379
  %13 = load %struct.bContextStore*, %struct.bContextStore** %context, align 8, !dbg !5379
  %tobool4 = icmp ne %struct.bContextStore* %13, null, !dbg !5377
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !5380

if.then5:                                         ; preds = %if.then
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5381
  %15 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5382
  %context6 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 32, !dbg !5383
  %16 = load %struct.bContextStore*, %struct.bContextStore** %context6, align 8, !dbg !5383
  call void @CTX_store_set(%struct.bContext* %14, %struct.bContextStore* %16), !dbg !5384
  br label %if.end, !dbg !5384

if.end:                                           ; preds = %if.then5, %if.then
  %17 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !5385
  %cmp = icmp eq %struct.wmOperatorType* %17, null, !dbg !5387
  br i1 %cmp, label %if.then9, label %lor.lhs.false, !dbg !5388

lor.lhs.false:                                    ; preds = %if.end
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5389
  %19 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !5390
  %20 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5391
  %opcontext = getelementptr inbounds %struct.uiBut, %struct.uiBut* %20, i32 0, i32 61, !dbg !5392
  %21 = load i16, i16* %opcontext, align 8, !dbg !5392
  %call7 = call i32 @WM_operator_poll_context(%struct.bContext* %18, %struct.wmOperatorType* %19, i16 signext %21), !dbg !5393
  %cmp8 = icmp eq i32 %call7, 0, !dbg !5394
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !5395

if.then9:                                         ; preds = %lor.lhs.false, %if.end
  %22 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5396
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %22, i32 0, i32 2, !dbg !5398
  %23 = load i32, i32* %flag, align 8, !dbg !5399
  %or = or i32 %23, 2048, !dbg !5399
  store i32 %or, i32* %flag, align 8, !dbg !5399
  %24 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5400
  %lock = getelementptr inbounds %struct.uiBut, %struct.uiBut* %24, i32 0, i32 45, !dbg !5401
  store i8 1, i8* %lock, align 4, !dbg !5402
  br label %if.end10, !dbg !5403

if.end10:                                         ; preds = %if.then9, %lor.lhs.false
  %25 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5404
  %context11 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %25, i32 0, i32 32, !dbg !5406
  %26 = load %struct.bContextStore*, %struct.bContextStore** %context11, align 8, !dbg !5406
  %tobool12 = icmp ne %struct.bContextStore* %26, null, !dbg !5404
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !5407

if.then13:                                        ; preds = %if.end10
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5408
  call void @CTX_store_set(%struct.bContext* %27, %struct.bContextStore* null), !dbg !5409
  br label %if.end14, !dbg !5409

if.end14:                                         ; preds = %if.then13, %if.end10
  br label %if.end15, !dbg !5410

if.end15:                                         ; preds = %if.end14, %for.body
  %28 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5411
  %29 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5412
  %tobool16 = icmp ne %struct.Scene* %29, null, !dbg !5413
  br i1 %tobool16, label %cond.true, label %cond.false, !dbg !5413

cond.true:                                        ; preds = %if.end15
  %30 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5414
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %30, i32 0, i32 22, !dbg !5415
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !5416
  %31 = load i32, i32* %cfra, align 8, !dbg !5416
  %conv = sitofp i32 %31 to float, !dbg !5414
  br label %cond.end, !dbg !5413

cond.false:                                       ; preds = %if.end15
  br label %cond.end, !dbg !5413

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %conv, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !5413
  call void @ui_but_anim_flag(%struct.uiBut* %28, float %cond), !dbg !5417
  br label %for.inc, !dbg !5418

for.inc:                                          ; preds = %cond.end
  %32 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5419
  %next = getelementptr inbounds %struct.uiBut, %struct.uiBut* %32, i32 0, i32 0, !dbg !5420
  %33 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !5420
  store %struct.uiBut* %33, %struct.uiBut** %but, align 8, !dbg !5421
  br label %for.cond, !dbg !5422, !llvm.loop !5423

for.end:                                          ; preds = %for.cond
  %34 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5425
  %layouts = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %34, i32 0, i32 6, !dbg !5427
  %first17 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layouts, i32 0, i32 0, !dbg !5428
  %35 = load i8*, i8** %first17, align 8, !dbg !5428
  %tobool18 = icmp ne i8* %35, null, !dbg !5425
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !5429

if.then19:                                        ; preds = %for.end
  %36 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5430
  call void @uiBlockLayoutResolve(%struct.uiBlock* %36, i32* null, i32* null), !dbg !5432
  br label %if.end20, !dbg !5433

if.end20:                                         ; preds = %if.then19, %for.end
  %37 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5434
  call void @ui_block_do_align(%struct.uiBlock* %37), !dbg !5435
  %38 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5436
  %flag21 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %38, i32 0, i32 27, !dbg !5438
  %39 = load i32, i32* %flag21, align 8, !dbg !5438
  %and = and i32 %39, 1, !dbg !5439
  %tobool22 = icmp ne i32 %and, 0, !dbg !5439
  br i1 %tobool22, label %land.lhs.true, label %if.end27, !dbg !5440

land.lhs.true:                                    ; preds = %if.end20
  %40 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5441
  %flag23 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %40, i32 0, i32 27, !dbg !5442
  %41 = load i32, i32* %flag23, align 8, !dbg !5442
  %and24 = and i32 %41, 8, !dbg !5443
  %tobool25 = icmp ne i32 %and24, 0, !dbg !5443
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !5444

if.then26:                                        ; preds = %land.lhs.true
  %42 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5445
  call void @ui_menu_block_set_keyaccels(%struct.uiBlock* %42), !dbg !5447
  br label %if.end27, !dbg !5448

if.end27:                                         ; preds = %if.then26, %land.lhs.true, %if.end20
  %43 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5449
  %flag28 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %43, i32 0, i32 27, !dbg !5451
  %44 = load i32, i32* %flag28, align 8, !dbg !5451
  %and29 = and i32 %44, 1, !dbg !5452
  %tobool30 = icmp ne i32 %and29, 0, !dbg !5452
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !5453

if.then31:                                        ; preds = %if.end27
  %45 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5454
  %46 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5456
  call void @ui_menu_block_set_keymaps(%struct.bContext* %45, %struct.uiBlock* %46), !dbg !5457
  br label %if.end32, !dbg !5458

if.end32:                                         ; preds = %if.then31, %if.end27
  %47 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5459
  %bounds_type = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %47, i32 0, i32 39, !dbg !5460
  %48 = load i32, i32* %bounds_type, align 4, !dbg !5460
  switch i32 %48, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb33
    i32 2, label %sw.bb34
    i32 5, label %sw.bb35
    i32 6, label %sw.bb36
    i32 3, label %sw.bb37
    i32 4, label %sw.bb37
  ], !dbg !5461

sw.bb:                                            ; preds = %if.end32
  br label %sw.epilog, !dbg !5462

sw.bb33:                                          ; preds = %if.end32
  %49 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5464
  call void @ui_bounds_block(%struct.uiBlock* %49), !dbg !5465
  br label %sw.epilog, !dbg !5466

sw.bb34:                                          ; preds = %if.end32
  %50 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5467
  call void @ui_text_bounds_block(%struct.uiBlock* %50, float 0.000000e+00), !dbg !5468
  br label %sw.epilog, !dbg !5469

sw.bb35:                                          ; preds = %if.end32
  %51 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !5470
  %52 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5471
  call void @ui_centered_bounds_block(%struct.wmWindow* %51, %struct.uiBlock* %52), !dbg !5472
  br label %sw.epilog, !dbg !5473

sw.bb36:                                          ; preds = %if.end32
  %53 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5474
  call void @ui_centered_pie_bounds_block(%struct.uiBlock* %53), !dbg !5475
  br label %sw.epilog, !dbg !5476

sw.bb37:                                          ; preds = %if.end32, %if.end32
  %54 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !5477
  %55 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5478
  %56 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5479
  %bounds_type38 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %56, i32 0, i32 39, !dbg !5480
  %57 = load i32, i32* %bounds_type38, align 4, !dbg !5480
  %58 = load i32*, i32** %xy.addr, align 8, !dbg !5481
  call void @ui_popup_bounds_block(%struct.wmWindow* %54, %struct.uiBlock* %55, i32 %57, i32* %58), !dbg !5482
  br label %sw.epilog, !dbg !5483

sw.epilog:                                        ; preds = %if.end32, %sw.bb37, %sw.bb36, %sw.bb35, %sw.bb34, %sw.bb33, %sw.bb
  %59 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5484
  %rect = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %59, i32 0, i32 11, !dbg !5486
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 0, !dbg !5487
  %60 = load float, float* %xmin, align 8, !dbg !5487
  %cmp39 = fcmp oeq float %60, 0.000000e+00, !dbg !5488
  br i1 %cmp39, label %land.lhs.true41, label %if.end46, !dbg !5489

land.lhs.true41:                                  ; preds = %sw.epilog
  %61 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5490
  %rect42 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %61, i32 0, i32 11, !dbg !5491
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect42, i32 0, i32 1, !dbg !5492
  %62 = load float, float* %xmax, align 4, !dbg !5492
  %cmp43 = fcmp oeq float %62, 0.000000e+00, !dbg !5493
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !5494

if.then45:                                        ; preds = %land.lhs.true41
  %63 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5495
  call void @uiBoundsBlock(%struct.uiBlock* %63, i32 0), !dbg !5497
  br label %if.end46, !dbg !5498

if.end46:                                         ; preds = %if.then45, %land.lhs.true41, %sw.epilog
  %64 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5499
  %flag47 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %64, i32 0, i32 27, !dbg !5501
  %65 = load i32, i32* %flag47, align 8, !dbg !5501
  %and48 = and i32 %65, 245760, !dbg !5502
  %tobool49 = icmp ne i32 %and48, 0, !dbg !5502
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !5503

if.then50:                                        ; preds = %if.end46
  %66 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5504
  call void @uiBlockEndAlign(%struct.uiBlock* %66), !dbg !5506
  br label %if.end51, !dbg !5507

if.end51:                                         ; preds = %if.then50, %if.end46
  %67 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5508
  %endblock = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %67, i32 0, i32 38, !dbg !5509
  store i8 1, i8* %endblock, align 1, !dbg !5510
  ret void, !dbg !5511
}

declare dso_local %struct.wmWindow* @CTX_wm_window(%struct.bContext*) #3

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #3

declare dso_local void @CTX_store_set(%struct.bContext*, %struct.bContextStore*) #3

declare dso_local i32 @WM_operator_poll_context(%struct.bContext*, %struct.wmOperatorType*, i16 signext) #3

declare dso_local void @ui_but_anim_flag(%struct.uiBut*, float) #3

declare dso_local void @uiBlockLayoutResolve(%struct.uiBlock*, i32*, i32*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_block_do_align(%struct.uiBlock* %block) #0 !dbg !5512 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %but = alloca %struct.uiBut*, align 8
  %nr = alloca i16, align 2
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !5513, metadata !DIExpression()), !dbg !5514
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !5515, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.declare(metadata i16* %nr, metadata !5517, metadata !DIExpression()), !dbg !5518
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5519
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 2, !dbg !5521
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 0, !dbg !5522
  %1 = load i8*, i8** %first, align 8, !dbg !5522
  %2 = bitcast i8* %1 to %struct.uiBut*, !dbg !5519
  store %struct.uiBut* %2, %struct.uiBut** %but, align 8, !dbg !5523
  br label %for.cond, !dbg !5524

for.cond:                                         ; preds = %if.end12, %entry
  %3 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5525
  %tobool = icmp ne %struct.uiBut* %3, null, !dbg !5527
  br i1 %tobool, label %for.body, label %for.end13, !dbg !5527

for.body:                                         ; preds = %for.cond
  %4 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5528
  %alignnr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 10, !dbg !5531
  %5 = load i16, i16* %alignnr, align 8, !dbg !5531
  %tobool1 = icmp ne i16 %5, 0, !dbg !5528
  br i1 %tobool1, label %if.then, label %if.else, !dbg !5532

if.then:                                          ; preds = %for.body
  %6 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5533
  %alignnr2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 10, !dbg !5535
  %7 = load i16, i16* %alignnr2, align 8, !dbg !5535
  store i16 %7, i16* %nr, align 2, !dbg !5536
  %8 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5537
  %9 = load i16, i16* %nr, align 2, !dbg !5538
  call void @ui_block_do_align_but(%struct.uiBut* %8, i16 signext %9), !dbg !5539
  br label %for.cond3, !dbg !5540

for.cond3:                                        ; preds = %for.inc, %if.then
  %10 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5541
  %tobool4 = icmp ne %struct.uiBut* %10, null, !dbg !5541
  br i1 %tobool4, label %land.rhs, label %land.end, !dbg !5544

land.rhs:                                         ; preds = %for.cond3
  %11 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5545
  %alignnr5 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %11, i32 0, i32 10, !dbg !5546
  %12 = load i16, i16* %alignnr5, align 8, !dbg !5546
  %conv = sext i16 %12 to i32, !dbg !5545
  %13 = load i16, i16* %nr, align 2, !dbg !5547
  %conv6 = sext i16 %13 to i32, !dbg !5547
  %cmp = icmp eq i32 %conv, %conv6, !dbg !5548
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond3
  %14 = phi i1 [ false, %for.cond3 ], [ %cmp, %land.rhs ], !dbg !5549
  br i1 %14, label %for.body8, label %for.end, !dbg !5550

for.body8:                                        ; preds = %land.end
  br label %for.inc, !dbg !5551

for.inc:                                          ; preds = %for.body8
  %15 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5553
  %next = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 0, !dbg !5554
  %16 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !5554
  store %struct.uiBut* %16, %struct.uiBut** %but, align 8, !dbg !5555
  br label %for.cond3, !dbg !5556, !llvm.loop !5557

for.end:                                          ; preds = %land.end
  %17 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5559
  %tobool9 = icmp ne %struct.uiBut* %17, null, !dbg !5559
  br i1 %tobool9, label %if.end, label %if.then10, !dbg !5561

if.then10:                                        ; preds = %for.end
  br label %for.end13, !dbg !5562

if.end:                                           ; preds = %for.end
  br label %if.end12, !dbg !5564

if.else:                                          ; preds = %for.body
  %18 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5565
  %next11 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %18, i32 0, i32 0, !dbg !5567
  %19 = load %struct.uiBut*, %struct.uiBut** %next11, align 8, !dbg !5567
  store %struct.uiBut* %19, %struct.uiBut** %but, align 8, !dbg !5568
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.end
  br label %for.cond, !dbg !5569, !llvm.loop !5570

for.end13:                                        ; preds = %if.then10, %for.cond
  ret void, !dbg !5572
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_menu_block_set_keyaccels(%struct.uiBlock* %block) #0 !dbg !5573 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %but = alloca %struct.uiBut*, align 8
  %menu_key_mask = alloca i32, align 4
  %menu_key = alloca i8, align 1
  %str_pt = alloca i8*, align 8
  %pass = alloca i32, align 4
  %tot_missing = alloca i32, align 4
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !5574, metadata !DIExpression()), !dbg !5575
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !5576, metadata !DIExpression()), !dbg !5577
  call void @llvm.dbg.declare(metadata i32* %menu_key_mask, metadata !5578, metadata !DIExpression()), !dbg !5579
  store i32 0, i32* %menu_key_mask, align 4, !dbg !5579
  call void @llvm.dbg.declare(metadata i8* %menu_key, metadata !5580, metadata !DIExpression()), !dbg !5581
  call void @llvm.dbg.declare(metadata i8** %str_pt, metadata !5582, metadata !DIExpression()), !dbg !5583
  call void @llvm.dbg.declare(metadata i32* %pass, metadata !5584, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.declare(metadata i32* %tot_missing, metadata !5586, metadata !DIExpression()), !dbg !5587
  store i32 0, i32* %tot_missing, align 4, !dbg !5587
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5588
  %rect = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 11, !dbg !5590
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 0, !dbg !5591
  %1 = load float, float* %xmin, align 8, !dbg !5591
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5592
  %rect1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %2, i32 0, i32 11, !dbg !5593
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect1, i32 0, i32 1, !dbg !5594
  %3 = load float, float* %xmax, align 4, !dbg !5594
  %cmp = fcmp une float %1, %3, !dbg !5595
  br i1 %cmp, label %if.then, label %if.end, !dbg !5596

if.then:                                          ; preds = %entry
  br label %for.end80, !dbg !5597

if.end:                                           ; preds = %entry
  store i32 0, i32* %pass, align 4, !dbg !5598
  br label %for.cond, !dbg !5600

for.cond:                                         ; preds = %for.inc78, %if.end
  %4 = load i32, i32* %pass, align 4, !dbg !5601
  %cmp2 = icmp slt i32 %4, 2, !dbg !5603
  br i1 %cmp2, label %for.body, label %for.end80, !dbg !5604

for.body:                                         ; preds = %for.cond
  %5 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5605
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %5, i32 0, i32 2, !dbg !5608
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 0, !dbg !5609
  %6 = load i8*, i8** %first, align 8, !dbg !5609
  %7 = bitcast i8* %6 to %struct.uiBut*, !dbg !5605
  store %struct.uiBut* %7, %struct.uiBut** %but, align 8, !dbg !5610
  br label %for.cond3, !dbg !5611

for.cond3:                                        ; preds = %for.inc, %for.body
  %8 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5612
  %tobool = icmp ne %struct.uiBut* %8, null, !dbg !5614
  br i1 %tobool, label %for.body4, label %for.end74, !dbg !5614

for.body4:                                        ; preds = %for.cond3
  %9 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5615
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 4, !dbg !5615
  %10 = load i32, i32* %type, align 8, !dbg !5615
  %cmp5 = icmp eq i32 %10, 512, !dbg !5615
  br i1 %cmp5, label %lor.lhs.false17, label %lor.lhs.false, !dbg !5615

lor.lhs.false:                                    ; preds = %for.body4
  %11 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5615
  %type6 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %11, i32 0, i32 4, !dbg !5615
  %12 = load i32, i32* %type6, align 8, !dbg !5615
  %cmp7 = icmp eq i32 %12, 10240, !dbg !5615
  br i1 %cmp7, label %lor.lhs.false17, label %lor.lhs.false8, !dbg !5615

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %13 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5615
  %type9 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %13, i32 0, i32 4, !dbg !5615
  %14 = load i32, i32* %type9, align 8, !dbg !5615
  %cmp10 = icmp eq i32 %14, 5632, !dbg !5615
  br i1 %cmp10, label %lor.lhs.false17, label %lor.lhs.false11, !dbg !5615

lor.lhs.false11:                                  ; preds = %lor.lhs.false8
  %15 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5615
  %type12 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 4, !dbg !5615
  %16 = load i32, i32* %type12, align 8, !dbg !5615
  %cmp13 = icmp eq i32 %16, 9728, !dbg !5615
  br i1 %cmp13, label %lor.lhs.false17, label %lor.lhs.false14, !dbg !5615

lor.lhs.false14:                                  ; preds = %lor.lhs.false11
  %17 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5615
  %type15 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %17, i32 0, i32 4, !dbg !5615
  %18 = load i32, i32* %type15, align 8, !dbg !5615
  %cmp16 = icmp eq i32 %18, 13824, !dbg !5615
  br i1 %cmp16, label %lor.lhs.false17, label %if.then19, !dbg !5618

lor.lhs.false17:                                  ; preds = %lor.lhs.false14, %lor.lhs.false11, %lor.lhs.false8, %lor.lhs.false, %for.body4
  %19 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5619
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %19, i32 0, i32 2, !dbg !5620
  %20 = load i32, i32* %flag, align 8, !dbg !5620
  %and = and i32 %20, 32, !dbg !5621
  %tobool18 = icmp ne i32 %and, 0, !dbg !5621
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !5622

if.then19:                                        ; preds = %lor.lhs.false17, %lor.lhs.false14
  br label %if.end73, !dbg !5623

if.else:                                          ; preds = %lor.lhs.false17
  %21 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5625
  %menu_key20 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %21, i32 0, i32 62, !dbg !5627
  %22 = load i8, i8* %menu_key20, align 2, !dbg !5627
  %conv = zext i8 %22 to i32, !dbg !5625
  %cmp21 = icmp eq i32 %conv, 0, !dbg !5628
  br i1 %cmp21, label %if.then23, label %if.end72, !dbg !5629

if.then23:                                        ; preds = %if.else
  %23 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5630
  %str = getelementptr inbounds %struct.uiBut, %struct.uiBut* %23, i32 0, i32 15, !dbg !5633
  %24 = load i8*, i8** %str, align 8, !dbg !5633
  %tobool24 = icmp ne i8* %24, null, !dbg !5630
  br i1 %tobool24, label %if.then25, label %if.end71, !dbg !5634

if.then25:                                        ; preds = %if.then23
  %25 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5635
  %str26 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %25, i32 0, i32 15, !dbg !5638
  %26 = load i8*, i8** %str26, align 8, !dbg !5638
  store i8* %26, i8** %str_pt, align 8, !dbg !5639
  br label %for.cond27, !dbg !5640

for.cond27:                                       ; preds = %if.end61, %if.then25
  %27 = load i8*, i8** %str_pt, align 8, !dbg !5641
  %28 = load i8, i8* %27, align 1, !dbg !5643
  %tobool28 = icmp ne i8 %28, 0, !dbg !5644
  br i1 %tobool28, label %for.body29, label %for.end, !dbg !5644

for.body29:                                       ; preds = %for.cond27
  %29 = load i8*, i8** %str_pt, align 8, !dbg !5645
  %30 = load i8, i8* %29, align 1, !dbg !5647
  %conv30 = zext i8 %30 to i32, !dbg !5647
  %call = call i32 @tolower(i32 %conv30) #8, !dbg !5648
  %conv31 = trunc i32 %call to i8, !dbg !5648
  store i8 %conv31, i8* %menu_key, align 1, !dbg !5649
  %31 = load i8, i8* %menu_key, align 1, !dbg !5650
  %conv32 = zext i8 %31 to i32, !dbg !5650
  %cmp33 = icmp sge i32 %conv32, 97, !dbg !5652
  br i1 %cmp33, label %land.lhs.true, label %if.end46, !dbg !5653

land.lhs.true:                                    ; preds = %for.body29
  %32 = load i8, i8* %menu_key, align 1, !dbg !5654
  %conv35 = zext i8 %32 to i32, !dbg !5654
  %cmp36 = icmp sle i32 %conv35, 122, !dbg !5655
  br i1 %cmp36, label %land.lhs.true38, label %if.end46, !dbg !5656

land.lhs.true38:                                  ; preds = %land.lhs.true
  %33 = load i32, i32* %menu_key_mask, align 4, !dbg !5657
  %34 = load i8, i8* %menu_key, align 1, !dbg !5658
  %conv39 = zext i8 %34 to i32, !dbg !5658
  %sub = sub nsw i32 %conv39, 97, !dbg !5659
  %shl = shl i32 1, %sub, !dbg !5660
  %and40 = and i32 %33, %shl, !dbg !5661
  %tobool41 = icmp ne i32 %and40, 0, !dbg !5661
  br i1 %tobool41, label %if.end46, label %if.then42, !dbg !5662

if.then42:                                        ; preds = %land.lhs.true38
  %35 = load i8, i8* %menu_key, align 1, !dbg !5663
  %conv43 = zext i8 %35 to i32, !dbg !5663
  %sub44 = sub nsw i32 %conv43, 97, !dbg !5665
  %shl45 = shl i32 1, %sub44, !dbg !5666
  %36 = load i32, i32* %menu_key_mask, align 4, !dbg !5667
  %or = or i32 %36, %shl45, !dbg !5667
  store i32 %or, i32* %menu_key_mask, align 4, !dbg !5667
  br label %for.end, !dbg !5668

if.end46:                                         ; preds = %land.lhs.true38, %land.lhs.true, %for.body29
  %37 = load i32, i32* %pass, align 4, !dbg !5669
  %cmp47 = icmp eq i32 %37, 0, !dbg !5671
  br i1 %cmp47, label %if.then49, label %if.else59, !dbg !5672

if.then49:                                        ; preds = %if.end46
  br label %while.cond, !dbg !5673

while.cond:                                       ; preds = %while.body, %if.then49
  %call50 = call i16** @__ctype_b_loc() #9, !dbg !5675
  %38 = load i16*, i16** %call50, align 8, !dbg !5675
  %39 = load i8*, i8** %str_pt, align 8, !dbg !5675
  %40 = load i8, i8* %39, align 1, !dbg !5675
  %conv51 = zext i8 %40 to i32, !dbg !5675
  %idxprom = sext i32 %conv51 to i64, !dbg !5675
  %arrayidx = getelementptr inbounds i16, i16* %38, i64 %idxprom, !dbg !5675
  %41 = load i16, i16* %arrayidx, align 2, !dbg !5675
  %conv52 = zext i16 %41 to i32, !dbg !5675
  %and53 = and i32 %conv52, 1024, !dbg !5675
  %tobool54 = icmp ne i32 %and53, 0, !dbg !5673
  br i1 %tobool54, label %while.body, label %while.end, !dbg !5673

while.body:                                       ; preds = %while.cond
  %42 = load i8*, i8** %str_pt, align 8, !dbg !5676
  %incdec.ptr = getelementptr inbounds i8, i8* %42, i32 1, !dbg !5676
  store i8* %incdec.ptr, i8** %str_pt, align 8, !dbg !5676
  br label %while.cond, !dbg !5673, !llvm.loop !5677

while.end:                                        ; preds = %while.cond
  %43 = load i8*, i8** %str_pt, align 8, !dbg !5678
  %44 = load i8, i8* %43, align 1, !dbg !5680
  %tobool55 = icmp ne i8 %44, 0, !dbg !5680
  br i1 %tobool55, label %if.then56, label %if.end58, !dbg !5681

if.then56:                                        ; preds = %while.end
  %45 = load i8*, i8** %str_pt, align 8, !dbg !5682
  %incdec.ptr57 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !5682
  store i8* %incdec.ptr57, i8** %str_pt, align 8, !dbg !5682
  br label %if.end58, !dbg !5683

if.end58:                                         ; preds = %if.then56, %while.end
  br label %if.end61, !dbg !5684

if.else59:                                        ; preds = %if.end46
  %46 = load i8*, i8** %str_pt, align 8, !dbg !5685
  %incdec.ptr60 = getelementptr inbounds i8, i8* %46, i32 1, !dbg !5685
  store i8* %incdec.ptr60, i8** %str_pt, align 8, !dbg !5685
  br label %if.end61

if.end61:                                         ; preds = %if.else59, %if.end58
  br label %for.cond27, !dbg !5687, !llvm.loop !5688

for.end:                                          ; preds = %if.then42, %for.cond27
  %47 = load i8*, i8** %str_pt, align 8, !dbg !5690
  %48 = load i8, i8* %47, align 1, !dbg !5692
  %tobool62 = icmp ne i8 %48, 0, !dbg !5692
  br i1 %tobool62, label %if.then63, label %if.else65, !dbg !5693

if.then63:                                        ; preds = %for.end
  %49 = load i8, i8* %menu_key, align 1, !dbg !5694
  %50 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5696
  %menu_key64 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %50, i32 0, i32 62, !dbg !5697
  store i8 %49, i8* %menu_key64, align 2, !dbg !5698
  br label %if.end66, !dbg !5699

if.else65:                                        ; preds = %for.end
  %51 = load i32, i32* %tot_missing, align 4, !dbg !5700
  %inc = add nsw i32 %51, 1, !dbg !5700
  store i32 %inc, i32* %tot_missing, align 4, !dbg !5700
  br label %if.end66

if.end66:                                         ; preds = %if.else65, %if.then63
  %52 = load i32, i32* %menu_key_mask, align 4, !dbg !5702
  %cmp67 = icmp eq i32 %52, 67108863, !dbg !5704
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !5705

if.then69:                                        ; preds = %if.end66
  br label %for.end80, !dbg !5706

if.end70:                                         ; preds = %if.end66
  br label %if.end71, !dbg !5708

if.end71:                                         ; preds = %if.end70, %if.then23
  br label %if.end72, !dbg !5709

if.end72:                                         ; preds = %if.end71, %if.else
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then19
  br label %for.inc, !dbg !5710

for.inc:                                          ; preds = %if.end73
  %53 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5711
  %next = getelementptr inbounds %struct.uiBut, %struct.uiBut* %53, i32 0, i32 0, !dbg !5712
  %54 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !5712
  store %struct.uiBut* %54, %struct.uiBut** %but, align 8, !dbg !5713
  br label %for.cond3, !dbg !5714, !llvm.loop !5715

for.end74:                                        ; preds = %for.cond3
  %55 = load i32, i32* %tot_missing, align 4, !dbg !5717
  %tobool75 = icmp ne i32 %55, 0, !dbg !5717
  br i1 %tobool75, label %if.end77, label %if.then76, !dbg !5719

if.then76:                                        ; preds = %for.end74
  br label %for.end80, !dbg !5720

if.end77:                                         ; preds = %for.end74
  br label %for.inc78, !dbg !5722

for.inc78:                                        ; preds = %if.end77
  %56 = load i32, i32* %pass, align 4, !dbg !5723
  %inc79 = add nsw i32 %56, 1, !dbg !5723
  store i32 %inc79, i32* %pass, align 4, !dbg !5723
  br label %for.cond, !dbg !5724, !llvm.loop !5725

for.end80:                                        ; preds = %if.then, %if.then69, %if.then76, %for.cond
  ret void, !dbg !5727
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_menu_block_set_keymaps(%struct.bContext* %C, %struct.uiBlock* %block) #0 !dbg !5728 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %but = alloca %struct.uiBut*, align 8
  %buf = alloca [128 x i8], align 16
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5729, metadata !DIExpression()), !dbg !5730
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !5731, metadata !DIExpression()), !dbg !5732
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !5733, metadata !DIExpression()), !dbg !5734
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !5735, metadata !DIExpression()), !dbg !5736
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5737
  %rect = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 11, !dbg !5739
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 0, !dbg !5740
  %1 = load float, float* %xmin, align 8, !dbg !5740
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5741
  %rect1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %2, i32 0, i32 11, !dbg !5742
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect1, i32 0, i32 1, !dbg !5743
  %3 = load float, float* %xmax, align 4, !dbg !5743
  %cmp = fcmp une float %1, %3, !dbg !5744
  br i1 %cmp, label %if.then, label %if.end, !dbg !5745

if.then:                                          ; preds = %entry
  br label %if.end29, !dbg !5746

if.end:                                           ; preds = %entry
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5747
  %flag = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %4, i32 0, i32 27, !dbg !5749
  %5 = load i32, i32* %flag, align 8, !dbg !5749
  %and = and i32 %5, 1048576, !dbg !5750
  %tobool = icmp ne i32 %and, 0, !dbg !5750
  br i1 %tobool, label %if.then2, label %if.else, !dbg !5751

if.then2:                                         ; preds = %if.end
  %6 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5752
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %6, i32 0, i32 2, !dbg !5755
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 0, !dbg !5756
  %7 = load i8*, i8** %first, align 8, !dbg !5756
  %8 = bitcast i8* %7 to %struct.uiBut*, !dbg !5752
  store %struct.uiBut* %8, %struct.uiBut** %but, align 8, !dbg !5757
  br label %for.cond, !dbg !5758

for.cond:                                         ; preds = %for.inc, %if.then2
  %9 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5759
  %tobool3 = icmp ne %struct.uiBut* %9, null, !dbg !5761
  br i1 %tobool3, label %for.body, label %for.end, !dbg !5761

for.body:                                         ; preds = %for.cond
  %10 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5762
  %pie_dir = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 47, !dbg !5765
  %11 = load i8, i8* %pie_dir, align 2, !dbg !5765
  %conv = sext i8 %11 to i32, !dbg !5762
  %cmp4 = icmp ne i32 %conv, -1, !dbg !5766
  br i1 %cmp4, label %if.then6, label %if.end8, !dbg !5767

if.then6:                                         ; preds = %for.body
  %12 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5768
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !5770
  call void @ui_but_pie_direction_string(%struct.uiBut* %12, i8* %arraydecay, i32 128), !dbg !5771
  %13 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5772
  %arraydecay7 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !5773
  call void @ui_but_add_shortcut(%struct.uiBut* %13, i8* %arraydecay7, i8 zeroext 0), !dbg !5774
  br label %if.end8, !dbg !5775

if.end8:                                          ; preds = %if.then6, %for.body
  br label %for.inc, !dbg !5776

for.inc:                                          ; preds = %if.end8
  %14 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5777
  %next = getelementptr inbounds %struct.uiBut, %struct.uiBut* %14, i32 0, i32 0, !dbg !5778
  %15 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !5778
  store %struct.uiBut* %15, %struct.uiBut** %but, align 8, !dbg !5779
  br label %for.cond, !dbg !5780, !llvm.loop !5781

for.end:                                          ; preds = %for.cond
  br label %if.end29, !dbg !5783

if.else:                                          ; preds = %if.end
  %16 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5784
  %buttons9 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %16, i32 0, i32 2, !dbg !5787
  %first10 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons9, i32 0, i32 0, !dbg !5788
  %17 = load i8*, i8** %first10, align 8, !dbg !5788
  %18 = bitcast i8* %17 to %struct.uiBut*, !dbg !5784
  store %struct.uiBut* %18, %struct.uiBut** %but, align 8, !dbg !5789
  br label %for.cond11, !dbg !5790

for.cond11:                                       ; preds = %for.inc26, %if.else
  %19 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5791
  %tobool12 = icmp ne %struct.uiBut* %19, null, !dbg !5793
  br i1 %tobool12, label %for.body13, label %for.end28, !dbg !5793

for.body13:                                       ; preds = %for.cond11
  %20 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5794
  %21 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5797
  %arraydecay14 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !5798
  %call = call zeroext i8 @ui_but_event_operator_string(%struct.bContext* %20, %struct.uiBut* %21, i8* %arraydecay14, i64 128), !dbg !5799
  %tobool15 = icmp ne i8 %call, 0, !dbg !5799
  br i1 %tobool15, label %if.then16, label %if.else18, !dbg !5800

if.then16:                                        ; preds = %for.body13
  %22 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5801
  %arraydecay17 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !5803
  call void @ui_but_add_shortcut(%struct.uiBut* %22, i8* %arraydecay17, i8 zeroext 0), !dbg !5804
  br label %if.end25, !dbg !5805

if.else18:                                        ; preds = %for.body13
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5806
  %24 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5808
  %arraydecay19 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !5809
  %call20 = call zeroext i8 @ui_but_event_property_operator_string(%struct.bContext* %23, %struct.uiBut* %24, i8* %arraydecay19, i64 128), !dbg !5810
  %tobool21 = icmp ne i8 %call20, 0, !dbg !5810
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !5811

if.then22:                                        ; preds = %if.else18
  %25 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5812
  %arraydecay23 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !5814
  call void @ui_but_add_shortcut(%struct.uiBut* %25, i8* %arraydecay23, i8 zeroext 0), !dbg !5815
  br label %if.end24, !dbg !5816

if.end24:                                         ; preds = %if.then22, %if.else18
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then16
  br label %for.inc26, !dbg !5817

for.inc26:                                        ; preds = %if.end25
  %26 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5818
  %next27 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %26, i32 0, i32 0, !dbg !5819
  %27 = load %struct.uiBut*, %struct.uiBut** %next27, align 8, !dbg !5819
  store %struct.uiBut* %27, %struct.uiBut** %but, align 8, !dbg !5820
  br label %for.cond11, !dbg !5821, !llvm.loop !5822

for.end28:                                        ; preds = %for.cond11
  br label %if.end29

if.end29:                                         ; preds = %if.then, %for.end28, %for.end
  ret void, !dbg !5824
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_text_bounds_block(%struct.uiBlock* %block, float %offset) #0 !dbg !5825 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %offset.addr = alloca float, align 4
  %style = alloca %struct.uiStyle*, align 8
  %bt = alloca %struct.uiBut*, align 8
  %init_col_bt = alloca %struct.uiBut*, align 8
  %col_bt = alloca %struct.uiBut*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %x1addval = alloca i32, align 4
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !5828, metadata !DIExpression()), !dbg !5829
  store float %offset, float* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata float* %offset.addr, metadata !5830, metadata !DIExpression()), !dbg !5831
  call void @llvm.dbg.declare(metadata %struct.uiStyle** %style, metadata !5832, metadata !DIExpression()), !dbg !5871
  %call = call %struct.uiStyle* @UI_GetStyle(), !dbg !5872
  store %struct.uiStyle* %call, %struct.uiStyle** %style, align 8, !dbg !5871
  call void @llvm.dbg.declare(metadata %struct.uiBut** %bt, metadata !5873, metadata !DIExpression()), !dbg !5874
  call void @llvm.dbg.declare(metadata %struct.uiBut** %init_col_bt, metadata !5875, metadata !DIExpression()), !dbg !5876
  call void @llvm.dbg.declare(metadata %struct.uiBut** %col_bt, metadata !5877, metadata !DIExpression()), !dbg !5878
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5879, metadata !DIExpression()), !dbg !5880
  store i32 0, i32* %i, align 4, !dbg !5880
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5881, metadata !DIExpression()), !dbg !5882
  call void @llvm.dbg.declare(metadata i32* %x1addval, metadata !5883, metadata !DIExpression()), !dbg !5884
  %0 = load float, float* %offset.addr, align 4, !dbg !5885
  %conv = fptosi float %0 to i32, !dbg !5885
  store i32 %conv, i32* %x1addval, align 4, !dbg !5884
  %1 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !5886
  %widget = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %1, i32 0, i32 6, !dbg !5887
  call void @uiStyleFontSet(%struct.uiFontStyle* %widget), !dbg !5888
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5889
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %2, i32 0, i32 2, !dbg !5891
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 0, !dbg !5892
  %3 = load i8*, i8** %first, align 8, !dbg !5892
  %4 = bitcast i8* %3 to %struct.uiBut*, !dbg !5889
  store %struct.uiBut* %4, %struct.uiBut** %bt, align 8, !dbg !5893
  store %struct.uiBut* %4, %struct.uiBut** %init_col_bt, align 8, !dbg !5894
  br label %for.cond, !dbg !5895

for.cond:                                         ; preds = %for.inc35, %entry
  %5 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !5896
  %tobool = icmp ne %struct.uiBut* %5, null, !dbg !5898
  br i1 %tobool, label %for.body, label %for.end37, !dbg !5898

for.body:                                         ; preds = %for.cond
  %6 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !5899
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 4, !dbg !5899
  %7 = load i32, i32* %type, align 8, !dbg !5899
  %cmp = icmp eq i32 %7, 10752, !dbg !5899
  br i1 %cmp, label %if.end12, label %lor.lhs.false, !dbg !5899

lor.lhs.false:                                    ; preds = %for.body
  %8 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !5899
  %type2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 4, !dbg !5899
  %9 = load i32, i32* %type2, align 8, !dbg !5899
  %cmp3 = icmp eq i32 %9, 27648, !dbg !5899
  br i1 %cmp3, label %if.end12, label %if.then, !dbg !5902

if.then:                                          ; preds = %lor.lhs.false
  %10 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !5903
  %widget5 = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %10, i32 0, i32 6, !dbg !5905
  %uifont_id = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %widget5, i32 0, i32 0, !dbg !5906
  %11 = load i16, i16* %uifont_id, align 8, !dbg !5906
  %conv6 = sext i16 %11 to i32, !dbg !5903
  %12 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !5907
  %drawstr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 17, !dbg !5908
  %arraydecay = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr, i64 0, i64 0, !dbg !5907
  %call7 = call float @BLF_width(i32 %conv6, i8* %arraydecay, i64 400), !dbg !5909
  %conv8 = fptosi float %call7 to i32, !dbg !5909
  store i32 %conv8, i32* %j, align 4, !dbg !5910
  %13 = load i32, i32* %j, align 4, !dbg !5911
  %14 = load i32, i32* %i, align 4, !dbg !5913
  %cmp9 = icmp sgt i32 %13, %14, !dbg !5914
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !5915

if.then11:                                        ; preds = %if.then
  %15 = load i32, i32* %j, align 4, !dbg !5916
  store i32 %15, i32* %i, align 4, !dbg !5917
  br label %if.end, !dbg !5918

if.end:                                           ; preds = %if.then11, %if.then
  br label %if.end12, !dbg !5919

if.end12:                                         ; preds = %if.end, %lor.lhs.false, %for.body
  %16 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !5920
  %next = getelementptr inbounds %struct.uiBut, %struct.uiBut* %16, i32 0, i32 0, !dbg !5922
  %17 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !5922
  %tobool13 = icmp ne %struct.uiBut* %17, null, !dbg !5920
  br i1 %tobool13, label %land.lhs.true, label %if.end34, !dbg !5923

land.lhs.true:                                    ; preds = %if.end12
  %18 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !5924
  %rect = getelementptr inbounds %struct.uiBut, %struct.uiBut* %18, i32 0, i32 18, !dbg !5925
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 0, !dbg !5926
  %19 = load float, float* %xmin, align 8, !dbg !5926
  %20 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !5927
  %next14 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %20, i32 0, i32 0, !dbg !5928
  %21 = load %struct.uiBut*, %struct.uiBut** %next14, align 8, !dbg !5928
  %rect15 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %21, i32 0, i32 18, !dbg !5929
  %xmin16 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect15, i32 0, i32 0, !dbg !5930
  %22 = load float, float* %xmin16, align 8, !dbg !5930
  %cmp17 = fcmp olt float %19, %22, !dbg !5931
  br i1 %cmp17, label %if.then19, label %if.end34, !dbg !5932

if.then19:                                        ; preds = %land.lhs.true
  %23 = load %struct.uiBut*, %struct.uiBut** %init_col_bt, align 8, !dbg !5933
  store %struct.uiBut* %23, %struct.uiBut** %col_bt, align 8, !dbg !5936
  br label %for.cond20, !dbg !5937

for.cond20:                                       ; preds = %for.inc, %if.then19
  %24 = load %struct.uiBut*, %struct.uiBut** %col_bt, align 8, !dbg !5938
  %prev = getelementptr inbounds %struct.uiBut, %struct.uiBut* %24, i32 0, i32 1, !dbg !5940
  %25 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !5940
  %26 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !5941
  %cmp21 = icmp ne %struct.uiBut* %25, %26, !dbg !5942
  br i1 %cmp21, label %for.body23, label %for.end, !dbg !5943

for.body23:                                       ; preds = %for.cond20
  %27 = load i32, i32* %x1addval, align 4, !dbg !5944
  %conv24 = sitofp i32 %27 to float, !dbg !5944
  %28 = load %struct.uiBut*, %struct.uiBut** %col_bt, align 8, !dbg !5946
  %rect25 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %28, i32 0, i32 18, !dbg !5947
  %xmin26 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect25, i32 0, i32 0, !dbg !5948
  store float %conv24, float* %xmin26, align 8, !dbg !5949
  %29 = load i32, i32* %x1addval, align 4, !dbg !5950
  %30 = load i32, i32* %i, align 4, !dbg !5951
  %add = add nsw i32 %29, %30, !dbg !5952
  %31 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5953
  %bounds = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %31, i32 0, i32 42, !dbg !5954
  %32 = load i32, i32* %bounds, align 8, !dbg !5954
  %add27 = add nsw i32 %add, %32, !dbg !5955
  %conv28 = sitofp i32 %add27 to float, !dbg !5950
  %33 = load %struct.uiBut*, %struct.uiBut** %col_bt, align 8, !dbg !5956
  %rect29 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %33, i32 0, i32 18, !dbg !5957
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect29, i32 0, i32 1, !dbg !5958
  store float %conv28, float* %xmax, align 4, !dbg !5959
  %34 = load %struct.uiBut*, %struct.uiBut** %col_bt, align 8, !dbg !5960
  call void @ui_check_but(%struct.uiBut* %34), !dbg !5961
  br label %for.inc, !dbg !5962

for.inc:                                          ; preds = %for.body23
  %35 = load %struct.uiBut*, %struct.uiBut** %col_bt, align 8, !dbg !5963
  %next30 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %35, i32 0, i32 0, !dbg !5964
  %36 = load %struct.uiBut*, %struct.uiBut** %next30, align 8, !dbg !5964
  store %struct.uiBut* %36, %struct.uiBut** %col_bt, align 8, !dbg !5965
  br label %for.cond20, !dbg !5966, !llvm.loop !5967

for.end:                                          ; preds = %for.cond20
  %37 = load i32, i32* %i, align 4, !dbg !5969
  %38 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5970
  %bounds31 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %38, i32 0, i32 42, !dbg !5971
  %39 = load i32, i32* %bounds31, align 8, !dbg !5971
  %add32 = add nsw i32 %37, %39, !dbg !5972
  %40 = load i32, i32* %x1addval, align 4, !dbg !5973
  %add33 = add nsw i32 %40, %add32, !dbg !5973
  store i32 %add33, i32* %x1addval, align 4, !dbg !5973
  store i32 0, i32* %i, align 4, !dbg !5974
  %41 = load %struct.uiBut*, %struct.uiBut** %col_bt, align 8, !dbg !5975
  store %struct.uiBut* %41, %struct.uiBut** %init_col_bt, align 8, !dbg !5976
  br label %if.end34, !dbg !5977

if.end34:                                         ; preds = %for.end, %land.lhs.true, %if.end12
  br label %for.inc35, !dbg !5978

for.inc35:                                        ; preds = %if.end34
  %42 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !5979
  %next36 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %42, i32 0, i32 0, !dbg !5980
  %43 = load %struct.uiBut*, %struct.uiBut** %next36, align 8, !dbg !5980
  store %struct.uiBut* %43, %struct.uiBut** %bt, align 8, !dbg !5981
  br label %for.cond, !dbg !5982, !llvm.loop !5983

for.end37:                                        ; preds = %for.cond
  %44 = load %struct.uiBut*, %struct.uiBut** %init_col_bt, align 8, !dbg !5985
  store %struct.uiBut* %44, %struct.uiBut** %col_bt, align 8, !dbg !5987
  br label %for.cond38, !dbg !5988

for.cond38:                                       ; preds = %for.inc53, %for.end37
  %45 = load %struct.uiBut*, %struct.uiBut** %col_bt, align 8, !dbg !5989
  %tobool39 = icmp ne %struct.uiBut* %45, null, !dbg !5991
  br i1 %tobool39, label %for.body40, label %for.end55, !dbg !5991

for.body40:                                       ; preds = %for.cond38
  %46 = load i32, i32* %x1addval, align 4, !dbg !5992
  %conv41 = sitofp i32 %46 to float, !dbg !5992
  %47 = load %struct.uiBut*, %struct.uiBut** %col_bt, align 8, !dbg !5994
  %rect42 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %47, i32 0, i32 18, !dbg !5995
  %xmin43 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect42, i32 0, i32 0, !dbg !5996
  store float %conv41, float* %xmin43, align 8, !dbg !5997
  %48 = load i32, i32* %x1addval, align 4, !dbg !5998
  %49 = load i32, i32* %i, align 4, !dbg !5999
  %add44 = add nsw i32 %48, %49, !dbg !6000
  %50 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6001
  %bounds45 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %50, i32 0, i32 42, !dbg !6002
  %51 = load i32, i32* %bounds45, align 8, !dbg !6002
  %add46 = add nsw i32 %add44, %51, !dbg !6003
  %conv47 = sitofp i32 %add46 to float, !dbg !5998
  %52 = load float, float* %offset.addr, align 4, !dbg !6004
  %53 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6005
  %minbounds = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %53, i32 0, i32 43, !dbg !6006
  %54 = load i32, i32* %minbounds, align 4, !dbg !6006
  %conv48 = sitofp i32 %54 to float, !dbg !6005
  %add49 = fadd float %52, %conv48, !dbg !6007
  %call50 = call float @max_ff(float %conv47, float %add49), !dbg !6008
  %55 = load %struct.uiBut*, %struct.uiBut** %col_bt, align 8, !dbg !6009
  %rect51 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %55, i32 0, i32 18, !dbg !6010
  %xmax52 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect51, i32 0, i32 1, !dbg !6011
  store float %call50, float* %xmax52, align 4, !dbg !6012
  %56 = load %struct.uiBut*, %struct.uiBut** %col_bt, align 8, !dbg !6013
  call void @ui_check_but(%struct.uiBut* %56), !dbg !6014
  br label %for.inc53, !dbg !6015

for.inc53:                                        ; preds = %for.body40
  %57 = load %struct.uiBut*, %struct.uiBut** %col_bt, align 8, !dbg !6016
  %next54 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %57, i32 0, i32 0, !dbg !6017
  %58 = load %struct.uiBut*, %struct.uiBut** %next54, align 8, !dbg !6017
  store %struct.uiBut* %58, %struct.uiBut** %col_bt, align 8, !dbg !6018
  br label %for.cond38, !dbg !6019, !llvm.loop !6020

for.end55:                                        ; preds = %for.cond38
  ret void, !dbg !6022
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_centered_bounds_block(%struct.wmWindow* %window, %struct.uiBlock* %block) #0 !dbg !6023 {
entry:
  %window.addr = alloca %struct.wmWindow*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %xmax = alloca i32, align 4
  %ymax = alloca i32, align 4
  %startx = alloca i32, align 4
  %starty = alloca i32, align 4
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  store %struct.wmWindow* %window, %struct.wmWindow** %window.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %window.addr, metadata !6026, metadata !DIExpression()), !dbg !6027
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !6028, metadata !DIExpression()), !dbg !6029
  call void @llvm.dbg.declare(metadata i32* %xmax, metadata !6030, metadata !DIExpression()), !dbg !6031
  call void @llvm.dbg.declare(metadata i32* %ymax, metadata !6032, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.declare(metadata i32* %startx, metadata !6034, metadata !DIExpression()), !dbg !6035
  call void @llvm.dbg.declare(metadata i32* %starty, metadata !6036, metadata !DIExpression()), !dbg !6037
  call void @llvm.dbg.declare(metadata i32* %width, metadata !6038, metadata !DIExpression()), !dbg !6039
  call void @llvm.dbg.declare(metadata i32* %height, metadata !6040, metadata !DIExpression()), !dbg !6041
  %0 = load %struct.wmWindow*, %struct.wmWindow** %window.addr, align 8, !dbg !6042
  %call = call i32 @WM_window_pixels_x(%struct.wmWindow* %0), !dbg !6043
  store i32 %call, i32* %xmax, align 4, !dbg !6044
  %1 = load %struct.wmWindow*, %struct.wmWindow** %window.addr, align 8, !dbg !6045
  %call1 = call i32 @WM_window_pixels_y(%struct.wmWindow* %1), !dbg !6046
  store i32 %call1, i32* %ymax, align 4, !dbg !6047
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6048
  call void @ui_bounds_block(%struct.uiBlock* %2), !dbg !6049
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6050
  %rect = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %3, i32 0, i32 11, !dbg !6051
  %call2 = call float @BLI_rctf_size_x(%struct.rctf* %rect), !dbg !6052
  %conv = fptosi float %call2 to i32, !dbg !6052
  store i32 %conv, i32* %width, align 4, !dbg !6053
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6054
  %rect3 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %4, i32 0, i32 11, !dbg !6055
  %call4 = call float @BLI_rctf_size_y(%struct.rctf* %rect3), !dbg !6056
  %conv5 = fptosi float %call4 to i32, !dbg !6056
  store i32 %conv5, i32* %height, align 4, !dbg !6057
  %5 = load i32, i32* %xmax, align 4, !dbg !6058
  %conv6 = sitofp i32 %5 to float, !dbg !6058
  %mul = fmul float %conv6, 5.000000e-01, !dbg !6059
  %6 = load i32, i32* %width, align 4, !dbg !6060
  %conv7 = sitofp i32 %6 to float, !dbg !6060
  %mul8 = fmul float %conv7, 5.000000e-01, !dbg !6061
  %sub = fsub float %mul, %mul8, !dbg !6062
  %conv9 = fptosi float %sub to i32, !dbg !6063
  store i32 %conv9, i32* %startx, align 4, !dbg !6064
  %7 = load i32, i32* %ymax, align 4, !dbg !6065
  %conv10 = sitofp i32 %7 to float, !dbg !6065
  %mul11 = fmul float %conv10, 5.000000e-01, !dbg !6066
  %8 = load i32, i32* %height, align 4, !dbg !6067
  %conv12 = sitofp i32 %8 to float, !dbg !6067
  %mul13 = fmul float %conv12, 5.000000e-01, !dbg !6068
  %sub14 = fsub float %mul11, %mul13, !dbg !6069
  %conv15 = fptosi float %sub14 to i32, !dbg !6070
  store i32 %conv15, i32* %starty, align 4, !dbg !6071
  %9 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6072
  %10 = load i32, i32* %startx, align 4, !dbg !6073
  %conv16 = sitofp i32 %10 to float, !dbg !6073
  %11 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6074
  %rect17 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %11, i32 0, i32 11, !dbg !6075
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect17, i32 0, i32 0, !dbg !6076
  %12 = load float, float* %xmin, align 8, !dbg !6076
  %sub18 = fsub float %conv16, %12, !dbg !6077
  %conv19 = fptosi float %sub18 to i32, !dbg !6073
  %13 = load i32, i32* %starty, align 4, !dbg !6078
  %conv20 = sitofp i32 %13 to float, !dbg !6078
  %14 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6079
  %rect21 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %14, i32 0, i32 11, !dbg !6080
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect21, i32 0, i32 2, !dbg !6081
  %15 = load float, float* %ymin, align 8, !dbg !6081
  %sub22 = fsub float %conv20, %15, !dbg !6082
  %conv23 = fptosi float %sub22 to i32, !dbg !6078
  call void @ui_block_translate(%struct.uiBlock* %9, i32 %conv19, i32 %conv23), !dbg !6083
  %16 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6084
  call void @ui_bounds_block(%struct.uiBlock* %16), !dbg !6085
  ret void, !dbg !6086
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_centered_pie_bounds_block(%struct.uiBlock* %block) #0 !dbg !6087 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %xy = alloca [2 x i32], align 4
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !6088, metadata !DIExpression()), !dbg !6089
  call void @llvm.dbg.declare(metadata [2 x i32]* %xy, metadata !6090, metadata !DIExpression()), !dbg !6092
  %arrayinit.begin = getelementptr inbounds [2 x i32], [2 x i32]* %xy, i64 0, i64 0, !dbg !6093
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6094
  %pie_data = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 53, !dbg !6095
  %pie_center_spawned = getelementptr inbounds %struct.PieMenuData, %struct.PieMenuData* %pie_data, i32 0, i32 2, !dbg !6096
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %pie_center_spawned, i64 0, i64 0, !dbg !6094
  %1 = load float, float* %arrayidx, align 8, !dbg !6094
  %conv = fptosi float %1 to i32, !dbg !6094
  store i32 %conv, i32* %arrayinit.begin, align 4, !dbg !6093
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !6093
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6097
  %pie_data1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %2, i32 0, i32 53, !dbg !6098
  %pie_center_spawned2 = getelementptr inbounds %struct.PieMenuData, %struct.PieMenuData* %pie_data1, i32 0, i32 2, !dbg !6099
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %pie_center_spawned2, i64 0, i64 1, !dbg !6097
  %3 = load float, float* %arrayidx3, align 4, !dbg !6097
  %conv4 = fptosi float %3 to i32, !dbg !6097
  store i32 %conv4, i32* %arrayinit.element, align 4, !dbg !6093
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6100
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %xy, i64 0, i64 0, !dbg !6101
  %5 = load i32, i32* %arrayidx5, align 4, !dbg !6101
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %xy, i64 0, i64 1, !dbg !6102
  %6 = load i32, i32* %arrayidx6, align 4, !dbg !6102
  call void @ui_block_translate(%struct.uiBlock* %4, i32 %5, i32 %6), !dbg !6103
  %7 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6104
  call void @ui_bounds_block(%struct.uiBlock* %7), !dbg !6105
  ret void, !dbg !6106
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_popup_bounds_block(%struct.wmWindow* %window, %struct.uiBlock* %block, i32 %bounds_calc, i32* %xy) #0 !dbg !6107 {
entry:
  %window.addr = alloca %struct.wmWindow*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %bounds_calc.addr = alloca i32, align 4
  %xy.addr = alloca i32*, align 8
  %startx = alloca i32, align 4
  %starty = alloca i32, align 4
  %endx = alloca i32, align 4
  %endy = alloca i32, align 4
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  %oldwidth = alloca i32, align 4
  %oldheight = alloca i32, align 4
  %oldbounds = alloca i32, align 4
  %xmax = alloca i32, align 4
  %ymax = alloca i32, align 4
  %margin = alloca i32, align 4
  store %struct.wmWindow* %window, %struct.wmWindow** %window.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %window.addr, metadata !6110, metadata !DIExpression()), !dbg !6111
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !6112, metadata !DIExpression()), !dbg !6113
  store i32 %bounds_calc, i32* %bounds_calc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bounds_calc.addr, metadata !6114, metadata !DIExpression()), !dbg !6115
  store i32* %xy, i32** %xy.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %xy.addr, metadata !6116, metadata !DIExpression()), !dbg !6117
  call void @llvm.dbg.declare(metadata i32* %startx, metadata !6118, metadata !DIExpression()), !dbg !6119
  call void @llvm.dbg.declare(metadata i32* %starty, metadata !6120, metadata !DIExpression()), !dbg !6121
  call void @llvm.dbg.declare(metadata i32* %endx, metadata !6122, metadata !DIExpression()), !dbg !6123
  call void @llvm.dbg.declare(metadata i32* %endy, metadata !6124, metadata !DIExpression()), !dbg !6125
  call void @llvm.dbg.declare(metadata i32* %width, metadata !6126, metadata !DIExpression()), !dbg !6127
  call void @llvm.dbg.declare(metadata i32* %height, metadata !6128, metadata !DIExpression()), !dbg !6129
  call void @llvm.dbg.declare(metadata i32* %oldwidth, metadata !6130, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.declare(metadata i32* %oldheight, metadata !6132, metadata !DIExpression()), !dbg !6133
  call void @llvm.dbg.declare(metadata i32* %oldbounds, metadata !6134, metadata !DIExpression()), !dbg !6135
  call void @llvm.dbg.declare(metadata i32* %xmax, metadata !6136, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.declare(metadata i32* %ymax, metadata !6138, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.declare(metadata i32* %margin, metadata !6140, metadata !DIExpression()), !dbg !6141
  store i32 10, i32* %margin, align 4, !dbg !6141
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6142
  %bounds = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 42, !dbg !6143
  %1 = load i32, i32* %bounds, align 8, !dbg !6143
  store i32 %1, i32* %oldbounds, align 4, !dbg !6144
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6145
  call void @ui_bounds_block(%struct.uiBlock* %2), !dbg !6146
  %3 = load %struct.wmWindow*, %struct.wmWindow** %window.addr, align 8, !dbg !6147
  %call = call i32 @WM_window_pixels_x(%struct.wmWindow* %3), !dbg !6148
  store i32 %call, i32* %xmax, align 4, !dbg !6149
  %4 = load %struct.wmWindow*, %struct.wmWindow** %window.addr, align 8, !dbg !6150
  %call1 = call i32 @WM_window_pixels_y(%struct.wmWindow* %4), !dbg !6151
  store i32 %call1, i32* %ymax, align 4, !dbg !6152
  %5 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6153
  %rect = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %5, i32 0, i32 11, !dbg !6154
  %call2 = call float @BLI_rctf_size_x(%struct.rctf* %rect), !dbg !6155
  %conv = fptosi float %call2 to i32, !dbg !6155
  store i32 %conv, i32* %oldwidth, align 4, !dbg !6156
  %6 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6157
  %rect3 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %6, i32 0, i32 11, !dbg !6158
  %call4 = call float @BLI_rctf_size_y(%struct.rctf* %rect3), !dbg !6159
  %conv5 = fptosi float %call4 to i32, !dbg !6159
  store i32 %conv5, i32* %oldheight, align 4, !dbg !6160
  %7 = load i32, i32* %bounds_calc.addr, align 4, !dbg !6161
  %cmp = icmp eq i32 %7, 4, !dbg !6163
  br i1 %cmp, label %if.then, label %if.end13, !dbg !6164

if.then:                                          ; preds = %entry
  %8 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6165
  %flag = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %8, i32 0, i32 27, !dbg !6168
  %9 = load i32, i32* %flag, align 8, !dbg !6168
  %and = and i32 %9, 1, !dbg !6169
  %tobool = icmp ne i32 %and, 0, !dbg !6169
  br i1 %tobool, label %if.then7, label %if.end, !dbg !6170

if.then7:                                         ; preds = %if.then
  %10 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6171
  %conv8 = sext i16 %10 to i32, !dbg !6171
  %conv9 = sitofp i32 %conv8 to float, !dbg !6171
  %mul = fmul float 2.500000e+00, %conv9, !dbg !6173
  %conv10 = fptosi float %mul to i32, !dbg !6174
  %11 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6175
  %bounds11 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %11, i32 0, i32 42, !dbg !6176
  store i32 %conv10, i32* %bounds11, align 8, !dbg !6177
  %12 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6178
  %13 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6179
  %rect12 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %13, i32 0, i32 11, !dbg !6180
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect12, i32 0, i32 0, !dbg !6181
  %14 = load float, float* %xmin, align 8, !dbg !6181
  call void @ui_text_bounds_block(%struct.uiBlock* %12, float %14), !dbg !6182
  br label %if.end, !dbg !6183

if.end:                                           ; preds = %if.then7, %if.then
  br label %if.end13, !dbg !6184

if.end13:                                         ; preds = %if.end, %entry
  %15 = load i32, i32* %oldbounds, align 4, !dbg !6185
  %16 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6186
  %bounds14 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %16, i32 0, i32 42, !dbg !6187
  store i32 %15, i32* %bounds14, align 8, !dbg !6188
  %17 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6189
  call void @ui_bounds_block(%struct.uiBlock* %17), !dbg !6190
  %18 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6191
  %rect15 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %18, i32 0, i32 11, !dbg !6192
  %call16 = call float @BLI_rctf_size_x(%struct.rctf* %rect15), !dbg !6193
  %conv17 = fptosi float %call16 to i32, !dbg !6193
  store i32 %conv17, i32* %width, align 4, !dbg !6194
  %19 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6195
  %rect18 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %19, i32 0, i32 11, !dbg !6196
  %call19 = call float @BLI_rctf_size_y(%struct.rctf* %rect18), !dbg !6197
  %conv20 = fptosi float %call19 to i32, !dbg !6197
  store i32 %conv20, i32* %height, align 4, !dbg !6198
  %20 = load i32, i32* %oldwidth, align 4, !dbg !6199
  %cmp21 = icmp sgt i32 %20, 0, !dbg !6200
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !6199

cond.true:                                        ; preds = %if.end13
  %21 = load i32, i32* %oldwidth, align 4, !dbg !6201
  br label %cond.end27, !dbg !6199

cond.false:                                       ; preds = %if.end13
  %22 = load i32, i32* %width, align 4, !dbg !6202
  %cmp23 = icmp sgt i32 1, %22, !dbg !6202
  br i1 %cmp23, label %cond.true25, label %cond.false26, !dbg !6202

cond.true25:                                      ; preds = %cond.false
  br label %cond.end, !dbg !6202

cond.false26:                                     ; preds = %cond.false
  %23 = load i32, i32* %width, align 4, !dbg !6202
  br label %cond.end, !dbg !6202

cond.end:                                         ; preds = %cond.false26, %cond.true25
  %cond = phi i32 [ 1, %cond.true25 ], [ %23, %cond.false26 ], !dbg !6202
  br label %cond.end27, !dbg !6199

cond.end27:                                       ; preds = %cond.end, %cond.true
  %cond28 = phi i32 [ %21, %cond.true ], [ %cond, %cond.end ], !dbg !6199
  store i32 %cond28, i32* %oldwidth, align 4, !dbg !6203
  %24 = load i32, i32* %oldheight, align 4, !dbg !6204
  %cmp29 = icmp sgt i32 %24, 0, !dbg !6205
  br i1 %cmp29, label %cond.true31, label %cond.false32, !dbg !6204

cond.true31:                                      ; preds = %cond.end27
  %25 = load i32, i32* %oldheight, align 4, !dbg !6206
  br label %cond.end39, !dbg !6204

cond.false32:                                     ; preds = %cond.end27
  %26 = load i32, i32* %height, align 4, !dbg !6207
  %cmp33 = icmp sgt i32 1, %26, !dbg !6207
  br i1 %cmp33, label %cond.true35, label %cond.false36, !dbg !6207

cond.true35:                                      ; preds = %cond.false32
  br label %cond.end37, !dbg !6207

cond.false36:                                     ; preds = %cond.false32
  %27 = load i32, i32* %height, align 4, !dbg !6207
  br label %cond.end37, !dbg !6207

cond.end37:                                       ; preds = %cond.false36, %cond.true35
  %cond38 = phi i32 [ 1, %cond.true35 ], [ %27, %cond.false36 ], !dbg !6207
  br label %cond.end39, !dbg !6204

cond.end39:                                       ; preds = %cond.end37, %cond.true31
  %cond40 = phi i32 [ %25, %cond.true31 ], [ %cond38, %cond.end37 ], !dbg !6204
  store i32 %cond40, i32* %oldheight, align 4, !dbg !6208
  %28 = load i32*, i32** %xy.addr, align 8, !dbg !6209
  %arrayidx = getelementptr inbounds i32, i32* %28, i64 0, !dbg !6209
  %29 = load i32, i32* %arrayidx, align 4, !dbg !6209
  %conv41 = sitofp i32 %29 to float, !dbg !6209
  %30 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6210
  %rect42 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %30, i32 0, i32 11, !dbg !6211
  %xmin43 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect42, i32 0, i32 0, !dbg !6212
  %31 = load float, float* %xmin43, align 8, !dbg !6212
  %add = fadd float %conv41, %31, !dbg !6213
  %32 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6214
  %mx = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %32, i32 0, i32 40, !dbg !6215
  %33 = load i32, i32* %mx, align 8, !dbg !6215
  %34 = load i32, i32* %width, align 4, !dbg !6216
  %mul44 = mul nsw i32 %33, %34, !dbg !6217
  %35 = load i32, i32* %oldwidth, align 4, !dbg !6218
  %div = sdiv i32 %mul44, %35, !dbg !6219
  %conv45 = sitofp i32 %div to float, !dbg !6220
  %add46 = fadd float %add, %conv45, !dbg !6221
  %conv47 = fptosi float %add46 to i32, !dbg !6209
  store i32 %conv47, i32* %startx, align 4, !dbg !6222
  %36 = load i32*, i32** %xy.addr, align 8, !dbg !6223
  %arrayidx48 = getelementptr inbounds i32, i32* %36, i64 1, !dbg !6223
  %37 = load i32, i32* %arrayidx48, align 4, !dbg !6223
  %conv49 = sitofp i32 %37 to float, !dbg !6223
  %38 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6224
  %rect50 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %38, i32 0, i32 11, !dbg !6225
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect50, i32 0, i32 2, !dbg !6226
  %39 = load float, float* %ymin, align 8, !dbg !6226
  %add51 = fadd float %conv49, %39, !dbg !6227
  %40 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6228
  %my = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %40, i32 0, i32 41, !dbg !6229
  %41 = load i32, i32* %my, align 4, !dbg !6229
  %42 = load i32, i32* %height, align 4, !dbg !6230
  %mul52 = mul nsw i32 %41, %42, !dbg !6231
  %43 = load i32, i32* %oldheight, align 4, !dbg !6232
  %div53 = sdiv i32 %mul52, %43, !dbg !6233
  %conv54 = sitofp i32 %div53 to float, !dbg !6234
  %add55 = fadd float %add51, %conv54, !dbg !6235
  %conv56 = fptosi float %add55 to i32, !dbg !6223
  store i32 %conv56, i32* %starty, align 4, !dbg !6236
  %44 = load i32, i32* %startx, align 4, !dbg !6237
  %cmp57 = icmp slt i32 %44, 10, !dbg !6239
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !6240

if.then59:                                        ; preds = %cond.end39
  store i32 10, i32* %startx, align 4, !dbg !6241
  br label %if.end60, !dbg !6242

if.end60:                                         ; preds = %if.then59, %cond.end39
  %45 = load i32, i32* %starty, align 4, !dbg !6243
  %cmp61 = icmp slt i32 %45, 10, !dbg !6245
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !6246

if.then63:                                        ; preds = %if.end60
  store i32 10, i32* %starty, align 4, !dbg !6247
  br label %if.end64, !dbg !6248

if.end64:                                         ; preds = %if.then63, %if.end60
  %46 = load i32, i32* %startx, align 4, !dbg !6249
  %47 = load i32, i32* %width, align 4, !dbg !6250
  %add65 = add nsw i32 %46, %47, !dbg !6251
  store i32 %add65, i32* %endx, align 4, !dbg !6252
  %48 = load i32, i32* %starty, align 4, !dbg !6253
  %49 = load i32, i32* %height, align 4, !dbg !6254
  %add66 = add nsw i32 %48, %49, !dbg !6255
  store i32 %add66, i32* %endy, align 4, !dbg !6256
  %50 = load i32, i32* %endx, align 4, !dbg !6257
  %51 = load i32, i32* %xmax, align 4, !dbg !6259
  %cmp67 = icmp sgt i32 %50, %51, !dbg !6260
  br i1 %cmp67, label %if.then69, label %if.end71, !dbg !6261

if.then69:                                        ; preds = %if.end64
  %52 = load i32, i32* %xmax, align 4, !dbg !6262
  %sub = sub nsw i32 %52, 10, !dbg !6264
  store i32 %sub, i32* %endx, align 4, !dbg !6265
  %53 = load i32, i32* %endx, align 4, !dbg !6266
  %54 = load i32, i32* %width, align 4, !dbg !6267
  %sub70 = sub nsw i32 %53, %54, !dbg !6268
  store i32 %sub70, i32* %startx, align 4, !dbg !6269
  br label %if.end71, !dbg !6270

if.end71:                                         ; preds = %if.then69, %if.end64
  %55 = load i32, i32* %endy, align 4, !dbg !6271
  %56 = load i32, i32* %ymax, align 4, !dbg !6273
  %sub72 = sub nsw i32 %56, 10, !dbg !6274
  %cmp73 = icmp sgt i32 %55, %sub72, !dbg !6275
  br i1 %cmp73, label %if.then75, label %if.end78, !dbg !6276

if.then75:                                        ; preds = %if.end71
  %57 = load i32, i32* %ymax, align 4, !dbg !6277
  %sub76 = sub nsw i32 %57, 10, !dbg !6279
  store i32 %sub76, i32* %endy, align 4, !dbg !6280
  %58 = load i32, i32* %endy, align 4, !dbg !6281
  %59 = load i32, i32* %height, align 4, !dbg !6282
  %sub77 = sub nsw i32 %58, %59, !dbg !6283
  store i32 %sub77, i32* %starty, align 4, !dbg !6284
  br label %if.end78, !dbg !6285

if.end78:                                         ; preds = %if.then75, %if.end71
  %60 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6286
  %61 = load i32, i32* %startx, align 4, !dbg !6287
  %conv79 = sitofp i32 %61 to float, !dbg !6287
  %62 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6288
  %rect80 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %62, i32 0, i32 11, !dbg !6289
  %xmin81 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect80, i32 0, i32 0, !dbg !6290
  %63 = load float, float* %xmin81, align 8, !dbg !6290
  %sub82 = fsub float %conv79, %63, !dbg !6291
  %conv83 = fptosi float %sub82 to i32, !dbg !6287
  %64 = load i32, i32* %starty, align 4, !dbg !6292
  %conv84 = sitofp i32 %64 to float, !dbg !6292
  %65 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6293
  %rect85 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %65, i32 0, i32 11, !dbg !6294
  %ymin86 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect85, i32 0, i32 2, !dbg !6295
  %66 = load float, float* %ymin86, align 8, !dbg !6295
  %sub87 = fsub float %conv84, %66, !dbg !6296
  %conv88 = fptosi float %sub87 to i32, !dbg !6292
  call void @ui_block_translate(%struct.uiBlock* %60, i32 %conv83, i32 %conv88), !dbg !6297
  %67 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6298
  call void @ui_bounds_block(%struct.uiBlock* %67), !dbg !6299
  ret void, !dbg !6300
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiBlockEndAlign(%struct.uiBlock* %block) #0 !dbg !6301 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !6302, metadata !DIExpression()), !dbg !6303
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6304
  %flag = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 27, !dbg !6305
  %1 = load i32, i32* %flag, align 8, !dbg !6306
  %and = and i32 %1, -245761, !dbg !6306
  store i32 %and, i32* %flag, align 8, !dbg !6306
  ret void, !dbg !6307
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiEndBlock(%struct.bContext* %C, %struct.uiBlock* %block) #0 !dbg !6308 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %window = alloca %struct.wmWindow*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6309, metadata !DIExpression()), !dbg !6310
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !6311, metadata !DIExpression()), !dbg !6312
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %window, metadata !6313, metadata !DIExpression()), !dbg !6314
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6315
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !6316
  store %struct.wmWindow* %call, %struct.wmWindow** %window, align 8, !dbg !6314
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6317
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6318
  %3 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !6319
  %eventstate = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %3, i32 0, i32 21, !dbg !6320
  %4 = load %struct.wmEvent*, %struct.wmEvent** %eventstate, align 8, !dbg !6320
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %4, i32 0, i32 4, !dbg !6321
  call void @uiEndBlock_ex(%struct.bContext* %1, %struct.uiBlock* %2, i32* %x), !dbg !6322
  ret void, !dbg !6323
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_fontscale(i16* %points, float %aspect) #0 !dbg !6324 {
entry:
  %points.addr = alloca i16*, align 8
  %aspect.addr = alloca float, align 4
  %pointsf = alloca float, align 4
  store i16* %points, i16** %points.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %points.addr, metadata !6327, metadata !DIExpression()), !dbg !6328
  store float %aspect, float* %aspect.addr, align 4
  call void @llvm.dbg.declare(metadata float* %aspect.addr, metadata !6329, metadata !DIExpression()), !dbg !6330
  %0 = load float, float* %aspect.addr, align 4, !dbg !6331
  %cmp = fcmp olt float %0, 0x3FECCCCCC0000000, !dbg !6333
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6334

lor.lhs.false:                                    ; preds = %entry
  %1 = load float, float* %aspect.addr, align 4, !dbg !6335
  %cmp1 = fcmp ogt float %1, 0x3FF19999A0000000, !dbg !6336
  br i1 %cmp1, label %if.then, label %if.end7, !dbg !6337

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata float* %pointsf, metadata !6338, metadata !DIExpression()), !dbg !6340
  %2 = load i16*, i16** %points.addr, align 8, !dbg !6341
  %3 = load i16, i16* %2, align 2, !dbg !6342
  %conv = sitofp i16 %3 to float, !dbg !6342
  store float %conv, float* %pointsf, align 4, !dbg !6340
  %4 = load float, float* %aspect.addr, align 4, !dbg !6343
  %5 = load float, float* %pointsf, align 4, !dbg !6344
  %div = fdiv float %5, %4, !dbg !6344
  store float %div, float* %pointsf, align 4, !dbg !6344
  %6 = load float, float* %aspect.addr, align 4, !dbg !6345
  %cmp2 = fcmp ogt float %6, 1.000000e+00, !dbg !6347
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !6348

if.then4:                                         ; preds = %if.then
  %7 = load float, float* %pointsf, align 4, !dbg !6349
  %8 = call float @llvm.ceil.f32(float %7), !dbg !6350
  %conv5 = fptosi float %8 to i16, !dbg !6350
  %9 = load i16*, i16** %points.addr, align 8, !dbg !6351
  store i16 %conv5, i16* %9, align 2, !dbg !6352
  br label %if.end, !dbg !6353

if.else:                                          ; preds = %if.then
  %10 = load float, float* %pointsf, align 4, !dbg !6354
  %11 = call float @llvm.floor.f32(float %10), !dbg !6355
  %conv6 = fptosi float %11 to i16, !dbg !6355
  %12 = load i16*, i16** %points.addr, align 8, !dbg !6356
  store i16 %conv6, i16* %12, align 2, !dbg !6357
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end7, !dbg !6358

if.end7:                                          ; preds = %if.end, %lor.lhs.false
  ret void, !dbg !6359
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.ceil.f32(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.floor.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiDrawBlock(%struct.bContext* %C, %struct.uiBlock* %block) #0 !dbg !6360 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %style = alloca %struct.uiStyle, align 8
  %ar = alloca %struct.ARegion*, align 8
  %but = alloca %struct.uiBut*, align 8
  %rect = alloca %struct.rcti, align 4
  %multisample_enabled = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6361, metadata !DIExpression()), !dbg !6362
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !6363, metadata !DIExpression()), !dbg !6364
  call void @llvm.dbg.declare(metadata %struct.uiStyle* %style, metadata !6365, metadata !DIExpression()), !dbg !6366
  %call = call %struct.uiStyle* @UI_GetStyleDraw(), !dbg !6367
  %0 = bitcast %struct.uiStyle* %style to i8*, !dbg !6368
  %1 = bitcast %struct.uiStyle* %call to i8*, !dbg !6368
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 232, i1 false), !dbg !6368
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !6369, metadata !DIExpression()), !dbg !6370
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !6371, metadata !DIExpression()), !dbg !6372
  call void @llvm.dbg.declare(metadata %struct.rcti* %rect, metadata !6373, metadata !DIExpression()), !dbg !6374
  call void @llvm.dbg.declare(metadata i32* %multisample_enabled, metadata !6375, metadata !DIExpression()), !dbg !6376
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6377
  %call1 = call %struct.ARegion* @CTX_wm_menu(%struct.bContext* %2), !dbg !6378
  store %struct.ARegion* %call1, %struct.ARegion** %ar, align 8, !dbg !6379
  %3 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6380
  %tobool = icmp ne %struct.ARegion* %3, null, !dbg !6380
  br i1 %tobool, label %if.end, label %if.then, !dbg !6382

if.then:                                          ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6383
  %call2 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %4), !dbg !6384
  store %struct.ARegion* %call2, %struct.ARegion** %ar, align 8, !dbg !6385
  br label %if.end, !dbg !6386

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6387
  %endblock = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %5, i32 0, i32 38, !dbg !6389
  %6 = load i8, i8* %endblock, align 1, !dbg !6389
  %tobool3 = icmp ne i8 %6, 0, !dbg !6387
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !6390

if.then4:                                         ; preds = %if.end
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6391
  %8 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6392
  call void @uiEndBlock(%struct.bContext* %7, %struct.uiBlock* %8), !dbg !6393
  br label %if.end5, !dbg !6393

if.end5:                                          ; preds = %if.then4, %if.end
  %call6 = call zeroext i8 @glIsEnabled(i32 32925), !dbg !6394
  %conv = zext i8 %call6 to i32, !dbg !6394
  store i32 %conv, i32* %multisample_enabled, align 4, !dbg !6395
  %9 = load i32, i32* %multisample_enabled, align 4, !dbg !6396
  %tobool7 = icmp ne i32 %9, 0, !dbg !6396
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !6398

if.then8:                                         ; preds = %if.end5
  call void @glDisable(i32 32925), !dbg !6399
  br label %if.end9, !dbg !6399

if.end9:                                          ; preds = %if.then8, %if.end5
  call void @glBlendFunc(i32 770, i32 771), !dbg !6400
  %paneltitle = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %style, i32 0, i32 3, !dbg !6401
  %points = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %paneltitle, i32 0, i32 1, !dbg !6402
  %10 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6403
  %aspect = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %10, i32 0, i32 12, !dbg !6404
  %11 = load float, float* %aspect, align 8, !dbg !6404
  call void @ui_fontscale(i16* %points, float %11), !dbg !6405
  %grouplabel = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %style, i32 0, i32 4, !dbg !6406
  %points10 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %grouplabel, i32 0, i32 1, !dbg !6407
  %12 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6408
  %aspect11 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %12, i32 0, i32 12, !dbg !6409
  %13 = load float, float* %aspect11, align 8, !dbg !6409
  call void @ui_fontscale(i16* %points10, float %13), !dbg !6410
  %widgetlabel = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %style, i32 0, i32 5, !dbg !6411
  %points12 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %widgetlabel, i32 0, i32 1, !dbg !6412
  %14 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6413
  %aspect13 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %14, i32 0, i32 12, !dbg !6414
  %15 = load float, float* %aspect13, align 8, !dbg !6414
  call void @ui_fontscale(i16* %points12, float %15), !dbg !6415
  %widget = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %style, i32 0, i32 6, !dbg !6416
  %points14 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %widget, i32 0, i32 1, !dbg !6417
  %16 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6418
  %aspect15 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %16, i32 0, i32 12, !dbg !6419
  %17 = load float, float* %aspect15, align 8, !dbg !6419
  call void @ui_fontscale(i16* %points14, float %17), !dbg !6420
  %18 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6421
  %19 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6422
  call void @ui_but_to_pixelrect(%struct.rcti* %rect, %struct.ARegion* %18, %struct.uiBlock* %19, %struct.uiBut* null), !dbg !6423
  call void @glMatrixMode(i32 5889), !dbg !6424
  call void @glPushMatrix(), !dbg !6425
  call void @glMatrixMode(i32 5888), !dbg !6426
  call void @glPushMatrix(), !dbg !6427
  call void @glLoadIdentity(), !dbg !6428
  %20 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6429
  call void @wmOrtho2_region_ui(%struct.ARegion* %20), !dbg !6430
  %21 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6431
  %flag = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %21, i32 0, i32 27, !dbg !6433
  %22 = load i32, i32* %flag, align 8, !dbg !6433
  %and = and i32 %22, 1048576, !dbg !6434
  %tobool16 = icmp ne i32 %and, 0, !dbg !6434
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !6435

if.then17:                                        ; preds = %if.end9
  %23 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6436
  call void @ui_draw_pie_center(%struct.uiBlock* %23), !dbg !6437
  br label %if.end28, !dbg !6437

if.else:                                          ; preds = %if.end9
  %24 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6438
  %flag18 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %24, i32 0, i32 27, !dbg !6440
  %25 = load i32, i32* %flag18, align 8, !dbg !6440
  %and19 = and i32 %25, 1, !dbg !6441
  %tobool20 = icmp ne i32 %and19, 0, !dbg !6441
  br i1 %tobool20, label %if.then21, label %if.else22, !dbg !6442

if.then21:                                        ; preds = %if.else
  %26 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6443
  call void @ui_draw_menu_back(%struct.uiStyle* %style, %struct.uiBlock* %26, %struct.rcti* %rect), !dbg !6444
  br label %if.end27, !dbg !6444

if.else22:                                        ; preds = %if.else
  %27 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6445
  %panel = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %27, i32 0, i32 3, !dbg !6447
  %28 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !6447
  %tobool23 = icmp ne %struct.Panel* %28, null, !dbg !6445
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !6448

if.then24:                                        ; preds = %if.else22
  %29 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6449
  %30 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6450
  %call25 = call zeroext i8 @UI_panel_category_is_visible(%struct.ARegion* %30), !dbg !6451
  call void @ui_draw_aligned_panel(%struct.uiStyle* %style, %struct.uiBlock* %29, %struct.rcti* %rect, i8 zeroext %call25), !dbg !6452
  br label %if.end26, !dbg !6452

if.end26:                                         ; preds = %if.then24, %if.else22
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then21
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then17
  %31 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6453
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %31, i32 0, i32 2, !dbg !6455
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 0, !dbg !6456
  %32 = load i8*, i8** %first, align 8, !dbg !6456
  %33 = bitcast i8* %32 to %struct.uiBut*, !dbg !6453
  store %struct.uiBut* %33, %struct.uiBut** %but, align 8, !dbg !6457
  br label %for.cond, !dbg !6458

for.cond:                                         ; preds = %for.inc, %if.end28
  %34 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6459
  %tobool29 = icmp ne %struct.uiBut* %34, null, !dbg !6461
  br i1 %tobool29, label %for.body, label %for.end, !dbg !6461

for.body:                                         ; preds = %for.cond
  %35 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6462
  %flag30 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %35, i32 0, i32 2, !dbg !6465
  %36 = load i32, i32* %flag30, align 8, !dbg !6465
  %and31 = and i32 %36, 34, !dbg !6466
  %tobool32 = icmp ne i32 %and31, 0, !dbg !6466
  br i1 %tobool32, label %if.end39, label %if.then33, !dbg !6467

if.then33:                                        ; preds = %for.body
  %37 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6468
  %38 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6470
  %39 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6471
  call void @ui_but_to_pixelrect(%struct.rcti* %rect, %struct.ARegion* %37, %struct.uiBlock* %38, %struct.uiBut* %39), !dbg !6472
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 0, !dbg !6473
  %40 = load i32, i32* %xmin, align 4, !dbg !6473
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 1, !dbg !6475
  %41 = load i32, i32* %xmax, align 4, !dbg !6475
  %cmp = icmp slt i32 %40, %41, !dbg !6476
  br i1 %cmp, label %land.lhs.true, label %if.end38, !dbg !6477

land.lhs.true:                                    ; preds = %if.then33
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 2, !dbg !6478
  %42 = load i32, i32* %ymin, align 4, !dbg !6478
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 3, !dbg !6479
  %43 = load i32, i32* %ymax, align 4, !dbg !6479
  %cmp35 = icmp slt i32 %42, %43, !dbg !6480
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !6481

if.then37:                                        ; preds = %land.lhs.true
  %44 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6482
  %45 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !6483
  %46 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6484
  call void @ui_draw_but(%struct.bContext* %44, %struct.ARegion* %45, %struct.uiStyle* %style, %struct.uiBut* %46, %struct.rcti* %rect), !dbg !6485
  br label %if.end38, !dbg !6485

if.end38:                                         ; preds = %if.then37, %land.lhs.true, %if.then33
  br label %if.end39, !dbg !6486

if.end39:                                         ; preds = %if.end38, %for.body
  br label %for.inc, !dbg !6487

for.inc:                                          ; preds = %if.end39
  %47 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6488
  %next = getelementptr inbounds %struct.uiBut, %struct.uiBut* %47, i32 0, i32 0, !dbg !6489
  %48 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !6489
  store %struct.uiBut* %48, %struct.uiBut** %but, align 8, !dbg !6490
  br label %for.cond, !dbg !6491, !llvm.loop !6492

for.end:                                          ; preds = %for.cond
  call void @glMatrixMode(i32 5889), !dbg !6494
  call void @glPopMatrix(), !dbg !6495
  call void @glMatrixMode(i32 5888), !dbg !6496
  call void @glPopMatrix(), !dbg !6497
  %49 = load i32, i32* %multisample_enabled, align 4, !dbg !6498
  %tobool40 = icmp ne i32 %49, 0, !dbg !6498
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !6500

if.then41:                                        ; preds = %for.end
  call void @glEnable(i32 32925), !dbg !6501
  br label %if.end42, !dbg !6501

if.end42:                                         ; preds = %if.then41, %for.end
  %50 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6502
  call void @ui_draw_links(%struct.uiBlock* %50), !dbg !6503
  ret void, !dbg !6504
}

declare dso_local %struct.uiStyle* @UI_GetStyleDraw() #3

declare dso_local %struct.ARegion* @CTX_wm_menu(%struct.bContext*) #3

declare dso_local zeroext i8 @glIsEnabled(i32) #3

declare dso_local void @glDisable(i32) #3

declare dso_local void @glBlendFunc(i32, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ui_but_to_pixelrect(%struct.rcti* %rect, %struct.ARegion* %ar, %struct.uiBlock* %block, %struct.uiBut* %but) #0 !dbg !6505 {
entry:
  %rect.addr = alloca %struct.rcti*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  %rectf = alloca %struct.rctf, align 4
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !6508, metadata !DIExpression()), !dbg !6509
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !6510, metadata !DIExpression()), !dbg !6511
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !6512, metadata !DIExpression()), !dbg !6513
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !6514, metadata !DIExpression()), !dbg !6515
  call void @llvm.dbg.declare(metadata %struct.rctf* %rectf, metadata !6516, metadata !DIExpression()), !dbg !6517
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6518
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6519
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6520
  %tobool = icmp ne %struct.uiBut* %2, null, !dbg !6521
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6521

cond.true:                                        ; preds = %entry
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6522
  %rect1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 18, !dbg !6523
  br label %cond.end, !dbg !6521

cond.false:                                       ; preds = %entry
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6524
  %rect2 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %4, i32 0, i32 11, !dbg !6525
  br label %cond.end, !dbg !6521

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rctf* [ %rect1, %cond.true ], [ %rect2, %cond.false ], !dbg !6521
  call void @ui_block_to_window_rctf(%struct.ARegion* %0, %struct.uiBlock* %1, %struct.rctf* %rectf, %struct.rctf* %cond), !dbg !6526
  %5 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6527
  %winrct = getelementptr inbounds %struct.ARegion, %struct.ARegion* %5, i32 0, i32 3, !dbg !6528
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct, i32 0, i32 0, !dbg !6529
  %6 = load i32, i32* %xmin, align 8, !dbg !6529
  %conv = sitofp i32 %6 to float, !dbg !6527
  %xmin3 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 0, !dbg !6530
  %7 = load float, float* %xmin3, align 4, !dbg !6531
  %sub = fsub float %7, %conv, !dbg !6531
  store float %sub, float* %xmin3, align 4, !dbg !6531
  %8 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6532
  %winrct4 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %8, i32 0, i32 3, !dbg !6533
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct4, i32 0, i32 2, !dbg !6534
  %9 = load i32, i32* %ymin, align 8, !dbg !6534
  %conv5 = sitofp i32 %9 to float, !dbg !6532
  %ymin6 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 2, !dbg !6535
  %10 = load float, float* %ymin6, align 4, !dbg !6536
  %sub7 = fsub float %10, %conv5, !dbg !6536
  store float %sub7, float* %ymin6, align 4, !dbg !6536
  %11 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6537
  %winrct8 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %11, i32 0, i32 3, !dbg !6538
  %xmin9 = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct8, i32 0, i32 0, !dbg !6539
  %12 = load i32, i32* %xmin9, align 8, !dbg !6539
  %conv10 = sitofp i32 %12 to float, !dbg !6537
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 1, !dbg !6540
  %13 = load float, float* %xmax, align 4, !dbg !6541
  %sub11 = fsub float %13, %conv10, !dbg !6541
  store float %sub11, float* %xmax, align 4, !dbg !6541
  %14 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6542
  %winrct12 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %14, i32 0, i32 3, !dbg !6543
  %ymin13 = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct12, i32 0, i32 2, !dbg !6544
  %15 = load i32, i32* %ymin13, align 8, !dbg !6544
  %conv14 = sitofp i32 %15 to float, !dbg !6542
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 3, !dbg !6545
  %16 = load float, float* %ymax, align 4, !dbg !6546
  %sub15 = fsub float %16, %conv14, !dbg !6546
  store float %sub15, float* %ymax, align 4, !dbg !6546
  %xmin16 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 0, !dbg !6547
  %17 = load float, float* %xmin16, align 4, !dbg !6547
  %18 = call float @llvm.floor.f32(float %17), !dbg !6548
  %conv17 = fptosi float %18 to i32, !dbg !6548
  %19 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6549
  %xmin18 = getelementptr inbounds %struct.rcti, %struct.rcti* %19, i32 0, i32 0, !dbg !6550
  store i32 %conv17, i32* %xmin18, align 4, !dbg !6551
  %ymin19 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 2, !dbg !6552
  %20 = load float, float* %ymin19, align 4, !dbg !6552
  %21 = call float @llvm.floor.f32(float %20), !dbg !6553
  %conv20 = fptosi float %21 to i32, !dbg !6553
  %22 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6554
  %ymin21 = getelementptr inbounds %struct.rcti, %struct.rcti* %22, i32 0, i32 2, !dbg !6555
  store i32 %conv20, i32* %ymin21, align 4, !dbg !6556
  %xmax22 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 1, !dbg !6557
  %23 = load float, float* %xmax22, align 4, !dbg !6557
  %24 = call float @llvm.floor.f32(float %23), !dbg !6558
  %conv23 = fptosi float %24 to i32, !dbg !6558
  %25 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6559
  %xmax24 = getelementptr inbounds %struct.rcti, %struct.rcti* %25, i32 0, i32 1, !dbg !6560
  store i32 %conv23, i32* %xmax24, align 4, !dbg !6561
  %ymax25 = getelementptr inbounds %struct.rctf, %struct.rctf* %rectf, i32 0, i32 3, !dbg !6562
  %26 = load float, float* %ymax25, align 4, !dbg !6562
  %27 = call float @llvm.floor.f32(float %26), !dbg !6563
  %conv26 = fptosi float %27 to i32, !dbg !6563
  %28 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6564
  %ymax27 = getelementptr inbounds %struct.rcti, %struct.rcti* %28, i32 0, i32 3, !dbg !6565
  store i32 %conv26, i32* %ymax27, align 4, !dbg !6566
  ret void, !dbg !6567
}

declare dso_local void @glMatrixMode(i32) #3

declare dso_local void @glPushMatrix() #3

declare dso_local void @glLoadIdentity() #3

declare dso_local void @wmOrtho2_region_ui(%struct.ARegion*) #3

declare dso_local void @ui_draw_pie_center(%struct.uiBlock*) #3

declare dso_local void @ui_draw_menu_back(%struct.uiStyle*, %struct.uiBlock*, %struct.rcti*) #3

declare dso_local void @ui_draw_aligned_panel(%struct.uiStyle*, %struct.uiBlock*, %struct.rcti*, i8 zeroext) #3

declare dso_local zeroext i8 @UI_panel_category_is_visible(%struct.ARegion*) #3

declare dso_local void @ui_draw_but(%struct.bContext*, %struct.ARegion*, %struct.uiStyle*, %struct.uiBut*, %struct.rcti*) #3

declare dso_local void @glPopMatrix() #3

declare dso_local void @glEnable(i32) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ui_draw_links(%struct.uiBlock* %block) #0 !dbg !6568 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %but = alloca %struct.uiBut*, align 8
  %line = alloca %struct.uiLinkLine*, align 8
  %found_selectline = alloca i8, align 1
  %found_activeline = alloca i8, align 1
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !6569, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !6571, metadata !DIExpression()), !dbg !6572
  call void @llvm.dbg.declare(metadata %struct.uiLinkLine** %line, metadata !6573, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.declare(metadata i8* %found_selectline, metadata !6586, metadata !DIExpression()), !dbg !6587
  store i8 0, i8* %found_selectline, align 1, !dbg !6587
  call void @llvm.dbg.declare(metadata i8* %found_activeline, metadata !6588, metadata !DIExpression()), !dbg !6589
  store i8 0, i8* %found_activeline, align 1, !dbg !6589
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6590
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 2, !dbg !6592
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 0, !dbg !6593
  %1 = load i8*, i8** %first, align 8, !dbg !6593
  %2 = bitcast i8* %1 to %struct.uiBut*, !dbg !6590
  store %struct.uiBut* %2, %struct.uiBut** %but, align 8, !dbg !6594
  br label %for.cond, !dbg !6595

for.cond:                                         ; preds = %for.inc27, %entry
  %3 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6596
  %tobool = icmp ne %struct.uiBut* %3, null, !dbg !6598
  br i1 %tobool, label %for.body, label %for.end29, !dbg !6598

for.body:                                         ; preds = %for.cond
  %4 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6599
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 4, !dbg !6602
  %5 = load i32, i32* %type, align 8, !dbg !6602
  %cmp = icmp eq i32 %5, 11264, !dbg !6603
  br i1 %cmp, label %land.lhs.true, label %if.end26, !dbg !6604

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6605
  %link = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 40, !dbg !6606
  %7 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !6606
  %tobool1 = icmp ne %struct.uiLink* %7, null, !dbg !6605
  br i1 %tobool1, label %if.then, label %if.end26, !dbg !6607

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6608
  %link2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 40, !dbg !6611
  %9 = load %struct.uiLink*, %struct.uiLink** %link2, align 8, !dbg !6611
  %lines = getelementptr inbounds %struct.uiLink, %struct.uiLink* %9, i32 0, i32 7, !dbg !6612
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !6613
  %10 = load i8*, i8** %first3, align 8, !dbg !6613
  %11 = bitcast i8* %10 to %struct.uiLinkLine*, !dbg !6608
  store %struct.uiLinkLine* %11, %struct.uiLinkLine** %line, align 8, !dbg !6614
  br label %for.cond4, !dbg !6615

for.cond4:                                        ; preds = %for.inc, %if.then
  %12 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !6616
  %tobool5 = icmp ne %struct.uiLinkLine* %12, null, !dbg !6618
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !6618

for.body6:                                        ; preds = %for.cond4
  %13 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !6619
  %from = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %13, i32 0, i32 2, !dbg !6622
  %14 = load %struct.uiBut*, %struct.uiBut** %from, align 8, !dbg !6622
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %14, i32 0, i32 2, !dbg !6623
  %15 = load i32, i32* %flag, align 8, !dbg !6623
  %and = and i32 %15, 4, !dbg !6624
  %tobool7 = icmp ne i32 %and, 0, !dbg !6624
  br i1 %tobool7, label %if.else, label %land.lhs.true8, !dbg !6625

land.lhs.true8:                                   ; preds = %for.body6
  %16 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !6626
  %to = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %16, i32 0, i32 3, !dbg !6627
  %17 = load %struct.uiBut*, %struct.uiBut** %to, align 8, !dbg !6627
  %flag9 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %17, i32 0, i32 2, !dbg !6628
  %18 = load i32, i32* %flag9, align 8, !dbg !6628
  %and10 = and i32 %18, 4, !dbg !6629
  %tobool11 = icmp ne i32 %and10, 0, !dbg !6629
  br i1 %tobool11, label %if.else, label %if.then12, !dbg !6630

if.then12:                                        ; preds = %land.lhs.true8
  %19 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !6631
  %deactive = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %19, i32 0, i32 5, !dbg !6634
  %20 = load i16, i16* %deactive, align 2, !dbg !6634
  %tobool13 = icmp ne i16 %20, 0, !dbg !6631
  br i1 %tobool13, label %if.then14, label %if.end, !dbg !6635

if.then14:                                        ; preds = %if.then12
  %21 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !6636
  call void @ui_draw_linkline(%struct.uiLinkLine* %21, i32 0, i32 1), !dbg !6637
  br label %if.end, !dbg !6637

if.end:                                           ; preds = %if.then14, %if.then12
  br label %if.end15, !dbg !6638

if.else:                                          ; preds = %land.lhs.true8, %for.body6
  store i8 1, i8* %found_activeline, align 1, !dbg !6639
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.end
  %22 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !6640
  %from16 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %22, i32 0, i32 2, !dbg !6642
  %23 = load %struct.uiBut*, %struct.uiBut** %from16, align 8, !dbg !6642
  %flag17 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %23, i32 0, i32 2, !dbg !6643
  %24 = load i32, i32* %flag17, align 8, !dbg !6643
  %and18 = and i32 %24, 1, !dbg !6644
  %tobool19 = icmp ne i32 %and18, 0, !dbg !6644
  br i1 %tobool19, label %if.then24, label %lor.lhs.false, !dbg !6645

lor.lhs.false:                                    ; preds = %if.end15
  %25 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !6646
  %to20 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %25, i32 0, i32 3, !dbg !6647
  %26 = load %struct.uiBut*, %struct.uiBut** %to20, align 8, !dbg !6647
  %flag21 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %26, i32 0, i32 2, !dbg !6648
  %27 = load i32, i32* %flag21, align 8, !dbg !6648
  %and22 = and i32 %27, 1, !dbg !6649
  %tobool23 = icmp ne i32 %and22, 0, !dbg !6649
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !6650

if.then24:                                        ; preds = %lor.lhs.false, %if.end15
  store i8 1, i8* %found_selectline, align 1, !dbg !6651
  br label %if.end25, !dbg !6652

if.end25:                                         ; preds = %if.then24, %lor.lhs.false
  br label %for.inc, !dbg !6653

for.inc:                                          ; preds = %if.end25
  %28 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !6654
  %next = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %28, i32 0, i32 0, !dbg !6655
  %29 = load %struct.uiLinkLine*, %struct.uiLinkLine** %next, align 8, !dbg !6655
  store %struct.uiLinkLine* %29, %struct.uiLinkLine** %line, align 8, !dbg !6656
  br label %for.cond4, !dbg !6657, !llvm.loop !6658

for.end:                                          ; preds = %for.cond4
  br label %if.end26, !dbg !6660

if.end26:                                         ; preds = %for.end, %land.lhs.true, %for.body
  br label %for.inc27, !dbg !6661

for.inc27:                                        ; preds = %if.end26
  %30 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6662
  %next28 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %30, i32 0, i32 0, !dbg !6663
  %31 = load %struct.uiBut*, %struct.uiBut** %next28, align 8, !dbg !6663
  store %struct.uiBut* %31, %struct.uiBut** %but, align 8, !dbg !6664
  br label %for.cond, !dbg !6665, !llvm.loop !6666

for.end29:                                        ; preds = %for.cond
  %32 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6668
  %buttons30 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %32, i32 0, i32 2, !dbg !6670
  %first31 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons30, i32 0, i32 0, !dbg !6671
  %33 = load i8*, i8** %first31, align 8, !dbg !6671
  %34 = bitcast i8* %33 to %struct.uiBut*, !dbg !6668
  store %struct.uiBut* %34, %struct.uiBut** %but, align 8, !dbg !6672
  br label %for.cond32, !dbg !6673

for.cond32:                                       ; preds = %for.inc66, %for.end29
  %35 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6674
  %tobool33 = icmp ne %struct.uiBut* %35, null, !dbg !6676
  br i1 %tobool33, label %for.body34, label %for.end68, !dbg !6676

for.body34:                                       ; preds = %for.cond32
  %36 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6677
  %type35 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %36, i32 0, i32 4, !dbg !6680
  %37 = load i32, i32* %type35, align 8, !dbg !6680
  %cmp36 = icmp eq i32 %37, 11264, !dbg !6681
  br i1 %cmp36, label %land.lhs.true37, label %if.end65, !dbg !6682

land.lhs.true37:                                  ; preds = %for.body34
  %38 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6683
  %link38 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %38, i32 0, i32 40, !dbg !6684
  %39 = load %struct.uiLink*, %struct.uiLink** %link38, align 8, !dbg !6684
  %tobool39 = icmp ne %struct.uiLink* %39, null, !dbg !6683
  br i1 %tobool39, label %if.then40, label %if.end65, !dbg !6685

if.then40:                                        ; preds = %land.lhs.true37
  %40 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6686
  %link41 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %40, i32 0, i32 40, !dbg !6689
  %41 = load %struct.uiLink*, %struct.uiLink** %link41, align 8, !dbg !6689
  %lines42 = getelementptr inbounds %struct.uiLink, %struct.uiLink* %41, i32 0, i32 7, !dbg !6690
  %first43 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines42, i32 0, i32 0, !dbg !6691
  %42 = load i8*, i8** %first43, align 8, !dbg !6691
  %43 = bitcast i8* %42 to %struct.uiLinkLine*, !dbg !6686
  store %struct.uiLinkLine* %43, %struct.uiLinkLine** %line, align 8, !dbg !6692
  br label %for.cond44, !dbg !6693

for.cond44:                                       ; preds = %for.inc62, %if.then40
  %44 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !6694
  %tobool45 = icmp ne %struct.uiLinkLine* %44, null, !dbg !6696
  br i1 %tobool45, label %for.body46, label %for.end64, !dbg !6696

for.body46:                                       ; preds = %for.cond44
  %45 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !6697
  %from47 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %45, i32 0, i32 2, !dbg !6700
  %46 = load %struct.uiBut*, %struct.uiBut** %from47, align 8, !dbg !6700
  %flag48 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %46, i32 0, i32 2, !dbg !6701
  %47 = load i32, i32* %flag48, align 8, !dbg !6701
  %and49 = and i32 %47, 4, !dbg !6702
  %tobool50 = icmp ne i32 %and49, 0, !dbg !6702
  br i1 %tobool50, label %if.end61, label %land.lhs.true51, !dbg !6703

land.lhs.true51:                                  ; preds = %for.body46
  %48 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !6704
  %to52 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %48, i32 0, i32 3, !dbg !6705
  %49 = load %struct.uiBut*, %struct.uiBut** %to52, align 8, !dbg !6705
  %flag53 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %49, i32 0, i32 2, !dbg !6706
  %50 = load i32, i32* %flag53, align 8, !dbg !6706
  %and54 = and i32 %50, 4, !dbg !6707
  %tobool55 = icmp ne i32 %and54, 0, !dbg !6707
  br i1 %tobool55, label %if.end61, label %if.then56, !dbg !6708

if.then56:                                        ; preds = %land.lhs.true51
  %51 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !6709
  %deactive57 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %51, i32 0, i32 5, !dbg !6712
  %52 = load i16, i16* %deactive57, align 2, !dbg !6712
  %tobool58 = icmp ne i16 %52, 0, !dbg !6709
  br i1 %tobool58, label %if.end60, label %if.then59, !dbg !6713

if.then59:                                        ; preds = %if.then56
  %53 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !6714
  call void @ui_draw_linkline(%struct.uiLinkLine* %53, i32 0, i32 0), !dbg !6715
  br label %if.end60, !dbg !6715

if.end60:                                         ; preds = %if.then59, %if.then56
  br label %if.end61, !dbg !6716

if.end61:                                         ; preds = %if.end60, %land.lhs.true51, %for.body46
  br label %for.inc62, !dbg !6717

for.inc62:                                        ; preds = %if.end61
  %54 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !6718
  %next63 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %54, i32 0, i32 0, !dbg !6719
  %55 = load %struct.uiLinkLine*, %struct.uiLinkLine** %next63, align 8, !dbg !6719
  store %struct.uiLinkLine* %55, %struct.uiLinkLine** %line, align 8, !dbg !6720
  br label %for.cond44, !dbg !6721, !llvm.loop !6722

for.end64:                                        ; preds = %for.cond44
  br label %if.end65, !dbg !6724

if.end65:                                         ; preds = %for.end64, %land.lhs.true37, %for.body34
  br label %for.inc66, !dbg !6725

for.inc66:                                        ; preds = %if.end65
  %56 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6726
  %next67 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %56, i32 0, i32 0, !dbg !6727
  %57 = load %struct.uiBut*, %struct.uiBut** %next67, align 8, !dbg !6727
  store %struct.uiBut* %57, %struct.uiBut** %but, align 8, !dbg !6728
  br label %for.cond32, !dbg !6729, !llvm.loop !6730

for.end68:                                        ; preds = %for.cond32
  %58 = load i8, i8* %found_activeline, align 1, !dbg !6732
  %tobool69 = icmp ne i8 %58, 0, !dbg !6732
  br i1 %tobool69, label %if.then70, label %if.end107, !dbg !6734

if.then70:                                        ; preds = %for.end68
  %59 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !6735
  %buttons71 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %59, i32 0, i32 2, !dbg !6738
  %first72 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons71, i32 0, i32 0, !dbg !6739
  %60 = load i8*, i8** %first72, align 8, !dbg !6739
  %61 = bitcast i8* %60 to %struct.uiBut*, !dbg !6735
  store %struct.uiBut* %61, %struct.uiBut** %but, align 8, !dbg !6740
  br label %for.cond73, !dbg !6741

for.cond73:                                       ; preds = %for.inc104, %if.then70
  %62 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6742
  %tobool74 = icmp ne %struct.uiBut* %62, null, !dbg !6744
  br i1 %tobool74, label %for.body75, label %for.end106, !dbg !6744

for.body75:                                       ; preds = %for.cond73
  %63 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6745
  %type76 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %63, i32 0, i32 4, !dbg !6748
  %64 = load i32, i32* %type76, align 8, !dbg !6748
  %cmp77 = icmp eq i32 %64, 11264, !dbg !6749
  br i1 %cmp77, label %land.lhs.true78, label %if.end103, !dbg !6750

land.lhs.true78:                                  ; preds = %for.body75
  %65 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6751
  %link79 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %65, i32 0, i32 40, !dbg !6752
  %66 = load %struct.uiLink*, %struct.uiLink** %link79, align 8, !dbg !6752
  %tobool80 = icmp ne %struct.uiLink* %66, null, !dbg !6751
  br i1 %tobool80, label %if.then81, label %if.end103, !dbg !6753

if.then81:                                        ; preds = %land.lhs.true78
  %67 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6754
  %link82 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %67, i32 0, i32 40, !dbg !6757
  %68 = load %struct.uiLink*, %struct.uiLink** %link82, align 8, !dbg !6757
  %lines83 = getelementptr inbounds %struct.uiLink, %struct.uiLink* %68, i32 0, i32 7, !dbg !6758
  %first84 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines83, i32 0, i32 0, !dbg !6759
  %69 = load i8*, i8** %first84, align 8, !dbg !6759
  %70 = bitcast i8* %69 to %struct.uiLinkLine*, !dbg !6754
  store %struct.uiLinkLine* %70, %struct.uiLinkLine** %line, align 8, !dbg !6760
  br label %for.cond85, !dbg !6761

for.cond85:                                       ; preds = %for.inc100, %if.then81
  %71 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !6762
  %tobool86 = icmp ne %struct.uiLinkLine* %71, null, !dbg !6764
  br i1 %tobool86, label %for.body87, label %for.end102, !dbg !6764

for.body87:                                       ; preds = %for.cond85
  %72 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !6765
  %from88 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %72, i32 0, i32 2, !dbg !6768
  %73 = load %struct.uiBut*, %struct.uiBut** %from88, align 8, !dbg !6768
  %flag89 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %73, i32 0, i32 2, !dbg !6769
  %74 = load i32, i32* %flag89, align 8, !dbg !6769
  %and90 = and i32 %74, 4, !dbg !6770
  %tobool91 = icmp ne i32 %and90, 0, !dbg !6770
  br i1 %tobool91, label %if.then97, label %lor.lhs.false92, !dbg !6771

lor.lhs.false92:                                  ; preds = %for.body87
  %75 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !6772
  %to93 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %75, i32 0, i32 3, !dbg !6773
  %76 = load %struct.uiBut*, %struct.uiBut** %to93, align 8, !dbg !6773
  %flag94 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %76, i32 0, i32 2, !dbg !6774
  %77 = load i32, i32* %flag94, align 8, !dbg !6774
  %and95 = and i32 %77, 4, !dbg !6775
  %tobool96 = icmp ne i32 %and95, 0, !dbg !6775
  br i1 %tobool96, label %if.then97, label %if.end99, !dbg !6776

if.then97:                                        ; preds = %lor.lhs.false92, %for.body87
  %78 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !6777
  %79 = load i8, i8* %found_selectline, align 1, !dbg !6778
  %tobool98 = icmp ne i8 %79, 0, !dbg !6779
  %lnot = xor i1 %tobool98, true, !dbg !6779
  %lnot.ext = zext i1 %lnot to i32, !dbg !6779
  call void @ui_draw_linkline(%struct.uiLinkLine* %78, i32 %lnot.ext, i32 0), !dbg !6780
  br label %if.end99, !dbg !6780

if.end99:                                         ; preds = %if.then97, %lor.lhs.false92
  br label %for.inc100, !dbg !6781

for.inc100:                                       ; preds = %if.end99
  %80 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !6782
  %next101 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %80, i32 0, i32 0, !dbg !6783
  %81 = load %struct.uiLinkLine*, %struct.uiLinkLine** %next101, align 8, !dbg !6783
  store %struct.uiLinkLine* %81, %struct.uiLinkLine** %line, align 8, !dbg !6784
  br label %for.cond85, !dbg !6785, !llvm.loop !6786

for.end102:                                       ; preds = %for.cond85
  br label %if.end103, !dbg !6788

if.end103:                                        ; preds = %for.end102, %land.lhs.true78, %for.body75
  br label %for.inc104, !dbg !6789

for.inc104:                                       ; preds = %if.end103
  %82 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6790
  %next105 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %82, i32 0, i32 0, !dbg !6791
  %83 = load %struct.uiBut*, %struct.uiBut** %next105, align 8, !dbg !6791
  store %struct.uiBut* %83, %struct.uiBut** %but, align 8, !dbg !6792
  br label %for.cond73, !dbg !6793, !llvm.loop !6794

for.end106:                                       ; preds = %for.cond73
  br label %if.end107, !dbg !6796

if.end107:                                        ; preds = %for.end106, %for.end68
  ret void, !dbg !6797
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ui_is_but_push_ex(%struct.uiBut* %but, double* %value) #0 !dbg !6798 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %value.addr = alloca double*, align 8
  %is_push = alloca i32, align 4
  %state = alloca i8, align 1
  %lvalue = alloca i32, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !6801, metadata !DIExpression()), !dbg !6802
  store double* %value, double** %value.addr, align 8
  call void @llvm.dbg.declare(metadata double** %value.addr, metadata !6803, metadata !DIExpression()), !dbg !6804
  call void @llvm.dbg.declare(metadata i32* %is_push, metadata !6805, metadata !DIExpression()), !dbg !6806
  store i32 0, i32* %is_push, align 4, !dbg !6806
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6807
  %bit = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 6, !dbg !6809
  %1 = load i16, i16* %bit, align 8, !dbg !6809
  %tobool = icmp ne i16 %1, 0, !dbg !6807
  br i1 %tobool, label %if.then, label %if.else16, !dbg !6810

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %state, metadata !6811, metadata !DIExpression()), !dbg !6813
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6814
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 4, !dbg !6814
  %3 = load i32, i32* %type, align 8, !dbg !6814
  %cmp = icmp eq i32 %3, 4608, !dbg !6814
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !6814

lor.lhs.false:                                    ; preds = %if.then
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6814
  %type1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 4, !dbg !6814
  %5 = load i32, i32* %type1, align 8, !dbg !6814
  %cmp2 = icmp eq i32 %5, 17408, !dbg !6814
  br i1 %cmp2, label %lor.end, label %lor.rhs, !dbg !6814

lor.rhs:                                          ; preds = %lor.lhs.false
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6814
  %type3 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 4, !dbg !6814
  %7 = load i32, i32* %type3, align 8, !dbg !6814
  %cmp4 = icmp eq i32 %7, 19968, !dbg !6814
  br label %lor.end, !dbg !6814

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %if.then
  %8 = phi i1 [ true, %lor.lhs.false ], [ true, %if.then ], [ %cmp4, %lor.rhs ]
  %9 = zext i1 %8 to i64, !dbg !6814
  %cond = select i1 %8, i32 0, i32 1, !dbg !6814
  %conv = trunc i32 %cond to i8, !dbg !6814
  store i8 %conv, i8* %state, align 1, !dbg !6813
  call void @llvm.dbg.declare(metadata i32* %lvalue, metadata !6815, metadata !DIExpression()), !dbg !6816
  %10 = load double*, double** %value.addr, align 8, !dbg !6817
  %11 = load double, double* %10, align 8, !dbg !6817
  %cmp5 = fcmp oeq double %11, 0x7FEFFFFFFFFFFFFF, !dbg !6817
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !6819

if.then7:                                         ; preds = %lor.end
  %12 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6820
  %call = call double @ui_get_but_val(%struct.uiBut* %12), !dbg !6820
  %13 = load double*, double** %value.addr, align 8, !dbg !6820
  store double %call, double* %13, align 8, !dbg !6820
  br label %if.end, !dbg !6820

if.end:                                           ; preds = %if.then7, %lor.end
  %14 = load double*, double** %value.addr, align 8, !dbg !6822
  %15 = load double, double* %14, align 8, !dbg !6823
  %conv8 = fptosi double %15 to i32, !dbg !6824
  store i32 %conv8, i32* %lvalue, align 4, !dbg !6825
  %16 = load i32, i32* %lvalue, align 4, !dbg !6826
  %17 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6826
  %bitnr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %17, i32 0, i32 7, !dbg !6826
  %18 = load i16, i16* %bitnr, align 2, !dbg !6826
  %conv9 = sext i16 %18 to i32, !dbg !6826
  %shl = shl i32 1, %conv9, !dbg !6826
  %and = and i32 %16, %shl, !dbg !6826
  %cmp10 = icmp ne i32 %and, 0, !dbg !6826
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !6828

if.then12:                                        ; preds = %if.end
  %19 = load i8, i8* %state, align 1, !dbg !6829
  %conv13 = zext i8 %19 to i32, !dbg !6829
  store i32 %conv13, i32* %is_push, align 4, !dbg !6831
  br label %if.end15, !dbg !6832

if.else:                                          ; preds = %if.end
  %20 = load i8, i8* %state, align 1, !dbg !6833
  %tobool14 = icmp ne i8 %20, 0, !dbg !6835
  %lnot = xor i1 %tobool14, true, !dbg !6835
  %lnot.ext = zext i1 %lnot to i32, !dbg !6835
  store i32 %lnot.ext, i32* %is_push, align 4, !dbg !6836
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then12
  br label %if.end65, !dbg !6837

if.else16:                                        ; preds = %entry
  %21 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6838
  %type17 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %21, i32 0, i32 4, !dbg !6840
  %22 = load i32, i32* %type17, align 8, !dbg !6840
  switch i32 %22, label %sw.default [
    i32 512, label %sw.bb
    i32 23552, label %sw.bb
    i32 12288, label %sw.bb
    i32 7680, label %sw.bb
    i32 18944, label %sw.bb18
    i32 1536, label %sw.bb18
    i32 6656, label %sw.bb18
    i32 19456, label %sw.bb18
    i32 17408, label %sw.bb29
    i32 4608, label %sw.bb29
    i32 19968, label %sw.bb29
    i32 1024, label %sw.bb39
    i32 18432, label %sw.bb39
  ], !dbg !6841

sw.bb:                                            ; preds = %if.else16, %if.else16, %if.else16, %if.else16
  store i32 -1, i32* %is_push, align 4, !dbg !6842
  br label %sw.epilog, !dbg !6844

sw.bb18:                                          ; preds = %if.else16, %if.else16, %if.else16, %if.else16
  %23 = load double*, double** %value.addr, align 8, !dbg !6845
  %24 = load double, double* %23, align 8, !dbg !6845
  %cmp19 = fcmp oeq double %24, 0x7FEFFFFFFFFFFFFF, !dbg !6845
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !6847

if.then21:                                        ; preds = %sw.bb18
  %25 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6848
  %call22 = call double @ui_get_but_val(%struct.uiBut* %25), !dbg !6848
  %26 = load double*, double** %value.addr, align 8, !dbg !6848
  store double %call22, double* %26, align 8, !dbg !6848
  br label %if.end23, !dbg !6848

if.end23:                                         ; preds = %if.then21, %sw.bb18
  %27 = load double*, double** %value.addr, align 8, !dbg !6850
  %28 = load double, double* %27, align 8, !dbg !6852
  %29 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6853
  %hardmin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %29, i32 0, i32 20, !dbg !6854
  %30 = load float, float* %hardmin, align 8, !dbg !6854
  %conv24 = fpext float %30 to double, !dbg !6855
  %cmp25 = fcmp une double %28, %conv24, !dbg !6856
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !6857

if.then27:                                        ; preds = %if.end23
  store i32 1, i32* %is_push, align 4, !dbg !6858
  br label %if.end28, !dbg !6859

if.end28:                                         ; preds = %if.then27, %if.end23
  br label %sw.epilog, !dbg !6860

sw.bb29:                                          ; preds = %if.else16, %if.else16, %if.else16
  %31 = load double*, double** %value.addr, align 8, !dbg !6861
  %32 = load double, double* %31, align 8, !dbg !6861
  %cmp30 = fcmp oeq double %32, 0x7FEFFFFFFFFFFFFF, !dbg !6861
  br i1 %cmp30, label %if.then32, label %if.end34, !dbg !6863

if.then32:                                        ; preds = %sw.bb29
  %33 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6864
  %call33 = call double @ui_get_but_val(%struct.uiBut* %33), !dbg !6864
  %34 = load double*, double** %value.addr, align 8, !dbg !6864
  store double %call33, double* %34, align 8, !dbg !6864
  br label %if.end34, !dbg !6864

if.end34:                                         ; preds = %if.then32, %sw.bb29
  %35 = load double*, double** %value.addr, align 8, !dbg !6866
  %36 = load double, double* %35, align 8, !dbg !6868
  %cmp35 = fcmp oeq double %36, 0.000000e+00, !dbg !6869
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !6870

if.then37:                                        ; preds = %if.end34
  store i32 1, i32* %is_push, align 4, !dbg !6871
  br label %if.end38, !dbg !6872

if.end38:                                         ; preds = %if.then37, %if.end34
  br label %sw.epilog, !dbg !6873

sw.bb39:                                          ; preds = %if.else16, %if.else16
  %37 = load double*, double** %value.addr, align 8, !dbg !6874
  %38 = load double, double* %37, align 8, !dbg !6874
  %cmp40 = fcmp oeq double %38, 0x7FEFFFFFFFFFFFFF, !dbg !6874
  br i1 %cmp40, label %if.then42, label %if.end44, !dbg !6876

if.then42:                                        ; preds = %sw.bb39
  %39 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6877
  %call43 = call double @ui_get_but_val(%struct.uiBut* %39), !dbg !6877
  %40 = load double*, double** %value.addr, align 8, !dbg !6877
  store double %call43, double* %40, align 8, !dbg !6877
  br label %if.end44, !dbg !6877

if.end44:                                         ; preds = %if.then42, %sw.bb39
  %41 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6879
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %41, i32 0, i32 55, !dbg !6881
  %42 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !6881
  %tobool45 = icmp ne %struct.PropertyRNA* %42, null, !dbg !6879
  br i1 %tobool45, label %land.lhs.true, label %if.else57, !dbg !6882

land.lhs.true:                                    ; preds = %if.end44
  %43 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6883
  %rnaprop46 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %43, i32 0, i32 55, !dbg !6884
  %44 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop46, align 8, !dbg !6884
  %call47 = call i32 @RNA_property_flag(%struct.PropertyRNA* %44), !dbg !6885
  %and48 = and i32 %call47, 2097152, !dbg !6886
  %tobool49 = icmp ne i32 %and48, 0, !dbg !6886
  br i1 %tobool49, label %if.then50, label %if.else57, !dbg !6887

if.then50:                                        ; preds = %land.lhs.true
  %45 = load double*, double** %value.addr, align 8, !dbg !6888
  %46 = load double, double* %45, align 8, !dbg !6891
  %conv51 = fptosi double %46 to i32, !dbg !6892
  %47 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6893
  %hardmax = getelementptr inbounds %struct.uiBut, %struct.uiBut* %47, i32 0, i32 21, !dbg !6894
  %48 = load float, float* %hardmax, align 4, !dbg !6894
  %conv52 = fptosi float %48 to i32, !dbg !6895
  %and53 = and i32 %conv51, %conv52, !dbg !6896
  %tobool54 = icmp ne i32 %and53, 0, !dbg !6896
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !6897

if.then55:                                        ; preds = %if.then50
  store i32 1, i32* %is_push, align 4, !dbg !6898
  br label %if.end56, !dbg !6899

if.end56:                                         ; preds = %if.then55, %if.then50
  br label %if.end64, !dbg !6900

if.else57:                                        ; preds = %land.lhs.true, %if.end44
  %49 = load double*, double** %value.addr, align 8, !dbg !6901
  %50 = load double, double* %49, align 8, !dbg !6904
  %51 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6905
  %hardmax58 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %51, i32 0, i32 21, !dbg !6906
  %52 = load float, float* %hardmax58, align 4, !dbg !6906
  %conv59 = fpext float %52 to double, !dbg !6907
  %cmp60 = fcmp oeq double %50, %conv59, !dbg !6908
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !6909

if.then62:                                        ; preds = %if.else57
  store i32 1, i32* %is_push, align 4, !dbg !6910
  br label %if.end63, !dbg !6911

if.end63:                                         ; preds = %if.then62, %if.else57
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.end56
  br label %sw.epilog, !dbg !6912

sw.default:                                       ; preds = %if.else16
  store i32 -1, i32* %is_push, align 4, !dbg !6913
  br label %sw.epilog, !dbg !6914

sw.epilog:                                        ; preds = %sw.default, %if.end64, %if.end38, %if.end28, %sw.bb
  br label %if.end65

if.end65:                                         ; preds = %sw.epilog, %if.end15
  %53 = load i32, i32* %is_push, align 4, !dbg !6915
  ret i32 %53, !dbg !6916
}

; Function Attrs: noinline nounwind uwtable
define dso_local double @ui_get_but_val(%struct.uiBut* %but) #0 !dbg !6917 {
entry:
  %retval = alloca double, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %value = alloca double, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !6920, metadata !DIExpression()), !dbg !6921
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !6922, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.declare(metadata double* %value, metadata !6924, metadata !DIExpression()), !dbg !6925
  store double 0.000000e+00, double* %value, align 8, !dbg !6925
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6926
  %editval = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 70, !dbg !6928
  %1 = load double*, double** %editval, align 8, !dbg !6928
  %tobool = icmp ne double* %1, null, !dbg !6926
  br i1 %tobool, label %if.then, label %if.end, !dbg !6929

if.then:                                          ; preds = %entry
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6930
  %editval1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 70, !dbg !6932
  %3 = load double*, double** %editval1, align 8, !dbg !6932
  %4 = load double, double* %3, align 8, !dbg !6933
  store double %4, double* %retval, align 8, !dbg !6934
  br label %return, !dbg !6934

if.end:                                           ; preds = %entry
  %5 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6935
  %poin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 19, !dbg !6937
  %6 = load i8*, i8** %poin, align 8, !dbg !6937
  %cmp = icmp eq i8* %6, null, !dbg !6938
  br i1 %cmp, label %land.lhs.true, label %if.end4, !dbg !6939

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6940
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %7, i32 0, i32 54, !dbg !6941
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin, i32 0, i32 2, !dbg !6942
  %8 = load i8*, i8** %data, align 8, !dbg !6942
  %cmp2 = icmp eq i8* %8, null, !dbg !6943
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !6944

if.then3:                                         ; preds = %land.lhs.true
  store double 0.000000e+00, double* %retval, align 8, !dbg !6945
  br label %return, !dbg !6945

if.end4:                                          ; preds = %land.lhs.true, %if.end
  %9 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6946
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 55, !dbg !6948
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !6948
  %tobool5 = icmp ne %struct.PropertyRNA* %10, null, !dbg !6946
  br i1 %tobool5, label %if.then6, label %if.else47, !dbg !6949

if.then6:                                         ; preds = %if.end4
  %11 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6950
  %rnaprop7 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %11, i32 0, i32 55, !dbg !6952
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop7, align 8, !dbg !6952
  store %struct.PropertyRNA* %12, %struct.PropertyRNA** %prop, align 8, !dbg !6953
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6954
  %call = call i32 @RNA_property_type(%struct.PropertyRNA* %13), !dbg !6955
  switch i32 %call, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb17
    i32 2, label %sw.bb30
    i32 4, label %sw.bb43
  ], !dbg !6956

sw.bb:                                            ; preds = %if.then6
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6957
  %call8 = call zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %14), !dbg !6960
  %tobool9 = icmp ne i8 %call8, 0, !dbg !6960
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !6961

if.then10:                                        ; preds = %sw.bb
  %15 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6962
  %rnapoin11 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 54, !dbg !6963
  %16 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6964
  %17 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6965
  %rnaindex = getelementptr inbounds %struct.uiBut, %struct.uiBut* %17, i32 0, i32 56, !dbg !6966
  %18 = load i32, i32* %rnaindex, align 8, !dbg !6966
  %call12 = call i32 @RNA_property_boolean_get_index(%struct.PointerRNA* %rnapoin11, %struct.PropertyRNA* %16, i32 %18), !dbg !6967
  %conv = sitofp i32 %call12 to double, !dbg !6967
  store double %conv, double* %value, align 8, !dbg !6968
  br label %if.end16, !dbg !6969

if.else:                                          ; preds = %sw.bb
  %19 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6970
  %rnapoin13 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %19, i32 0, i32 54, !dbg !6971
  %20 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6972
  %call14 = call i32 @RNA_property_boolean_get(%struct.PointerRNA* %rnapoin13, %struct.PropertyRNA* %20), !dbg !6973
  %conv15 = sitofp i32 %call14 to double, !dbg !6973
  store double %conv15, double* %value, align 8, !dbg !6974
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then10
  br label %sw.epilog, !dbg !6975

sw.bb17:                                          ; preds = %if.then6
  %21 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6976
  %call18 = call zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %21), !dbg !6978
  %tobool19 = icmp ne i8 %call18, 0, !dbg !6978
  br i1 %tobool19, label %if.then20, label %if.else25, !dbg !6979

if.then20:                                        ; preds = %sw.bb17
  %22 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6980
  %rnapoin21 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %22, i32 0, i32 54, !dbg !6981
  %23 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6982
  %24 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6983
  %rnaindex22 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %24, i32 0, i32 56, !dbg !6984
  %25 = load i32, i32* %rnaindex22, align 8, !dbg !6984
  %call23 = call i32 @RNA_property_int_get_index(%struct.PointerRNA* %rnapoin21, %struct.PropertyRNA* %23, i32 %25), !dbg !6985
  %conv24 = sitofp i32 %call23 to double, !dbg !6985
  store double %conv24, double* %value, align 8, !dbg !6986
  br label %if.end29, !dbg !6987

if.else25:                                        ; preds = %sw.bb17
  %26 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6988
  %rnapoin26 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %26, i32 0, i32 54, !dbg !6989
  %27 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6990
  %call27 = call i32 @RNA_property_int_get(%struct.PointerRNA* %rnapoin26, %struct.PropertyRNA* %27), !dbg !6991
  %conv28 = sitofp i32 %call27 to double, !dbg !6991
  store double %conv28, double* %value, align 8, !dbg !6992
  br label %if.end29

if.end29:                                         ; preds = %if.else25, %if.then20
  br label %sw.epilog, !dbg !6993

sw.bb30:                                          ; preds = %if.then6
  %28 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6994
  %call31 = call zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %28), !dbg !6996
  %tobool32 = icmp ne i8 %call31, 0, !dbg !6996
  br i1 %tobool32, label %if.then33, label %if.else38, !dbg !6997

if.then33:                                        ; preds = %sw.bb30
  %29 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !6998
  %rnapoin34 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %29, i32 0, i32 54, !dbg !6999
  %30 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7000
  %31 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7001
  %rnaindex35 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %31, i32 0, i32 56, !dbg !7002
  %32 = load i32, i32* %rnaindex35, align 8, !dbg !7002
  %call36 = call float @RNA_property_float_get_index(%struct.PointerRNA* %rnapoin34, %struct.PropertyRNA* %30, i32 %32), !dbg !7003
  %conv37 = fpext float %call36 to double, !dbg !7003
  store double %conv37, double* %value, align 8, !dbg !7004
  br label %if.end42, !dbg !7005

if.else38:                                        ; preds = %sw.bb30
  %33 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7006
  %rnapoin39 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %33, i32 0, i32 54, !dbg !7007
  %34 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7008
  %call40 = call float @RNA_property_float_get(%struct.PointerRNA* %rnapoin39, %struct.PropertyRNA* %34), !dbg !7009
  %conv41 = fpext float %call40 to double, !dbg !7009
  store double %conv41, double* %value, align 8, !dbg !7010
  br label %if.end42

if.end42:                                         ; preds = %if.else38, %if.then33
  br label %sw.epilog, !dbg !7011

sw.bb43:                                          ; preds = %if.then6
  %35 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7012
  %rnapoin44 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %35, i32 0, i32 54, !dbg !7013
  %36 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7014
  %call45 = call i32 @RNA_property_enum_get(%struct.PointerRNA* %rnapoin44, %struct.PropertyRNA* %36), !dbg !7015
  %conv46 = sitofp i32 %call45 to double, !dbg !7015
  store double %conv46, double* %value, align 8, !dbg !7016
  br label %sw.epilog, !dbg !7017

sw.default:                                       ; preds = %if.then6
  store double 0.000000e+00, double* %value, align 8, !dbg !7018
  br label %sw.epilog, !dbg !7019

sw.epilog:                                        ; preds = %sw.default, %sw.bb43, %if.end42, %if.end29, %if.end16
  br label %if.end78, !dbg !7020

if.else47:                                        ; preds = %if.end4
  %37 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7021
  %pointype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %37, i32 0, i32 5, !dbg !7023
  %38 = load i32, i32* %pointype, align 4, !dbg !7023
  %cmp48 = icmp eq i32 %38, 32, !dbg !7024
  br i1 %cmp48, label %if.then50, label %if.else53, !dbg !7025

if.then50:                                        ; preds = %if.else47
  %39 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7026
  %poin51 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %39, i32 0, i32 19, !dbg !7028
  %40 = load i8*, i8** %poin51, align 8, !dbg !7028
  %41 = load i8, i8* %40, align 1, !dbg !7029
  %conv52 = uitofp i8 %41 to double, !dbg !7029
  store double %conv52, double* %value, align 8, !dbg !7030
  br label %if.end77, !dbg !7031

if.else53:                                        ; preds = %if.else47
  %42 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7032
  %pointype54 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %42, i32 0, i32 5, !dbg !7034
  %43 = load i32, i32* %pointype54, align 4, !dbg !7034
  %cmp55 = icmp eq i32 %43, 64, !dbg !7035
  br i1 %cmp55, label %if.then57, label %if.else60, !dbg !7036

if.then57:                                        ; preds = %if.else53
  %44 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7037
  %poin58 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %44, i32 0, i32 19, !dbg !7039
  %45 = load i8*, i8** %poin58, align 8, !dbg !7039
  %46 = bitcast i8* %45 to i16*, !dbg !7040
  %47 = load i16, i16* %46, align 2, !dbg !7040
  %conv59 = sitofp i16 %47 to double, !dbg !7040
  store double %conv59, double* %value, align 8, !dbg !7041
  br label %if.end76, !dbg !7042

if.else60:                                        ; preds = %if.else53
  %48 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7043
  %pointype61 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %48, i32 0, i32 5, !dbg !7045
  %49 = load i32, i32* %pointype61, align 4, !dbg !7045
  %cmp62 = icmp eq i32 %49, 96, !dbg !7046
  br i1 %cmp62, label %if.then64, label %if.else67, !dbg !7047

if.then64:                                        ; preds = %if.else60
  %50 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7048
  %poin65 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %50, i32 0, i32 19, !dbg !7050
  %51 = load i8*, i8** %poin65, align 8, !dbg !7050
  %52 = bitcast i8* %51 to i32*, !dbg !7051
  %53 = load i32, i32* %52, align 4, !dbg !7051
  %conv66 = sitofp i32 %53 to double, !dbg !7051
  store double %conv66, double* %value, align 8, !dbg !7052
  br label %if.end75, !dbg !7053

if.else67:                                        ; preds = %if.else60
  %54 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7054
  %pointype68 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %54, i32 0, i32 5, !dbg !7056
  %55 = load i32, i32* %pointype68, align 4, !dbg !7056
  %cmp69 = icmp eq i32 %55, 128, !dbg !7057
  br i1 %cmp69, label %if.then71, label %if.end74, !dbg !7058

if.then71:                                        ; preds = %if.else67
  %56 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7059
  %poin72 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %56, i32 0, i32 19, !dbg !7061
  %57 = load i8*, i8** %poin72, align 8, !dbg !7061
  %58 = bitcast i8* %57 to float*, !dbg !7062
  %59 = load float, float* %58, align 4, !dbg !7062
  %conv73 = fpext float %59 to double, !dbg !7062
  store double %conv73, double* %value, align 8, !dbg !7063
  br label %if.end74, !dbg !7064

if.end74:                                         ; preds = %if.then71, %if.else67
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then64
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.then57
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then50
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %sw.epilog
  %60 = load double, double* %value, align 8, !dbg !7065
  store double %60, double* %retval, align 8, !dbg !7066
  br label %return, !dbg !7066

return:                                           ; preds = %if.end78, %if.then3, %if.then
  %61 = load double, double* %retval, align 8, !dbg !7067
  ret double %61, !dbg !7067
}

declare dso_local i32 @RNA_property_flag(%struct.PropertyRNA*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ui_is_but_push(%struct.uiBut* %but) #0 !dbg !7068 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %value = alloca double, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !7071, metadata !DIExpression()), !dbg !7072
  call void @llvm.dbg.declare(metadata double* %value, metadata !7073, metadata !DIExpression()), !dbg !7074
  store double 0x7FEFFFFFFFFFFFFF, double* %value, align 8, !dbg !7074
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7075
  %call = call i32 @ui_is_but_push_ex(%struct.uiBut* %0, double* %value), !dbg !7076
  ret i32 %call, !dbg !7077
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiFindInlink(%struct.uiBlock* %block, i8* %poin) #0 !dbg !7078 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %poin.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !7081, metadata !DIExpression()), !dbg !7082
  store i8* %poin, i8** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %poin.addr, metadata !7083, metadata !DIExpression()), !dbg !7084
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7085
  %1 = load i8*, i8** %poin.addr, align 8, !dbg !7086
  %call = call %struct.uiBut* @ui_find_inlink(%struct.uiBlock* %0, i8* %1), !dbg !7087
  ret %struct.uiBut* %call, !dbg !7088
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiBut* @ui_find_inlink(%struct.uiBlock* %block, i8* %poin) #0 !dbg !7089 {
entry:
  %retval = alloca %struct.uiBut*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %poin.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !7090, metadata !DIExpression()), !dbg !7091
  store i8* %poin, i8** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %poin.addr, metadata !7092, metadata !DIExpression()), !dbg !7093
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !7094, metadata !DIExpression()), !dbg !7095
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7096
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 2, !dbg !7097
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 0, !dbg !7098
  %1 = load i8*, i8** %first, align 8, !dbg !7098
  %2 = bitcast i8* %1 to %struct.uiBut*, !dbg !7096
  store %struct.uiBut* %2, %struct.uiBut** %but, align 8, !dbg !7099
  br label %while.cond, !dbg !7100

while.cond:                                       ; preds = %if.end4, %entry
  %3 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7101
  %tobool = icmp ne %struct.uiBut* %3, null, !dbg !7100
  br i1 %tobool, label %while.body, label %while.end, !dbg !7100

while.body:                                       ; preds = %while.cond
  %4 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7102
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 4, !dbg !7105
  %5 = load i32, i32* %type, align 8, !dbg !7105
  %cmp = icmp eq i32 %5, 11776, !dbg !7106
  br i1 %cmp, label %if.then, label %if.end4, !dbg !7107

if.then:                                          ; preds = %while.body
  %6 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7108
  %poin1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 19, !dbg !7111
  %7 = load i8*, i8** %poin1, align 8, !dbg !7111
  %8 = load i8*, i8** %poin.addr, align 8, !dbg !7112
  %cmp2 = icmp eq i8* %7, %8, !dbg !7113
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !7114

if.then3:                                         ; preds = %if.then
  %9 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7115
  store %struct.uiBut* %9, %struct.uiBut** %retval, align 8, !dbg !7116
  br label %return, !dbg !7116

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !7117

if.end4:                                          ; preds = %if.end, %while.body
  %10 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7118
  %next = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 0, !dbg !7119
  %11 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !7119
  store %struct.uiBut* %11, %struct.uiBut** %but, align 8, !dbg !7120
  br label %while.cond, !dbg !7100, !llvm.loop !7121

while.end:                                        ; preds = %while.cond
  store %struct.uiBut* null, %struct.uiBut** %retval, align 8, !dbg !7123
  br label %return, !dbg !7123

return:                                           ; preds = %while.end, %if.then3
  %12 = load %struct.uiBut*, %struct.uiBut** %retval, align 8, !dbg !7124
  ret %struct.uiBut* %12, !dbg !7124
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiComposeLinks(%struct.uiBlock* %block) #0 !dbg !7125 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %but = alloca %struct.uiBut*, align 8
  %bt = alloca %struct.uiBut*, align 8
  %link = alloca %struct.uiLink*, align 8
  %ppoin = alloca i8***, align 8
  %a = alloca i32, align 4
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !7126, metadata !DIExpression()), !dbg !7127
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !7128, metadata !DIExpression()), !dbg !7129
  call void @llvm.dbg.declare(metadata %struct.uiBut** %bt, metadata !7130, metadata !DIExpression()), !dbg !7131
  call void @llvm.dbg.declare(metadata %struct.uiLink** %link, metadata !7132, metadata !DIExpression()), !dbg !7133
  call void @llvm.dbg.declare(metadata i8**** %ppoin, metadata !7134, metadata !DIExpression()), !dbg !7135
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7136, metadata !DIExpression()), !dbg !7137
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7138
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 2, !dbg !7139
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 0, !dbg !7140
  %1 = load i8*, i8** %first, align 8, !dbg !7140
  %2 = bitcast i8* %1 to %struct.uiBut*, !dbg !7138
  store %struct.uiBut* %2, %struct.uiBut** %but, align 8, !dbg !7141
  br label %while.cond, !dbg !7142

while.cond:                                       ; preds = %if.end42, %entry
  %3 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7143
  %tobool = icmp ne %struct.uiBut* %3, null, !dbg !7142
  br i1 %tobool, label %while.body, label %while.end, !dbg !7142

while.body:                                       ; preds = %while.cond
  %4 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7144
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 4, !dbg !7147
  %5 = load i32, i32* %type, align 8, !dbg !7147
  %cmp = icmp eq i32 %5, 11264, !dbg !7148
  br i1 %cmp, label %if.then, label %if.end42, !dbg !7149

if.then:                                          ; preds = %while.body
  %6 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7150
  %link1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 40, !dbg !7152
  %7 = load %struct.uiLink*, %struct.uiLink** %link1, align 8, !dbg !7152
  store %struct.uiLink* %7, %struct.uiLink** %link, align 8, !dbg !7153
  %8 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !7154
  %tobool2 = icmp ne %struct.uiLink* %8, null, !dbg !7154
  br i1 %tobool2, label %if.then3, label %if.end41, !dbg !7156

if.then3:                                         ; preds = %if.then
  %9 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !7157
  %ppoin4 = getelementptr inbounds %struct.uiLink, %struct.uiLink* %9, i32 0, i32 1, !dbg !7160
  %10 = load i8***, i8**** %ppoin4, align 8, !dbg !7160
  %tobool5 = icmp ne i8*** %10, null, !dbg !7157
  br i1 %tobool5, label %if.then6, label %if.else19, !dbg !7161

if.then6:                                         ; preds = %if.then3
  %11 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !7162
  %ppoin7 = getelementptr inbounds %struct.uiLink, %struct.uiLink* %11, i32 0, i32 1, !dbg !7164
  %12 = load i8***, i8**** %ppoin7, align 8, !dbg !7164
  store i8*** %12, i8**** %ppoin, align 8, !dbg !7165
  store i32 0, i32* %a, align 4, !dbg !7166
  br label %for.cond, !dbg !7168

for.cond:                                         ; preds = %for.inc, %if.then6
  %13 = load i32, i32* %a, align 4, !dbg !7169
  %14 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !7171
  %totlink = getelementptr inbounds %struct.uiLink, %struct.uiLink* %14, i32 0, i32 2, !dbg !7172
  %15 = load i16*, i16** %totlink, align 8, !dbg !7172
  %16 = load i16, i16* %15, align 2, !dbg !7173
  %conv = sext i16 %16 to i32, !dbg !7173
  %cmp8 = icmp slt i32 %13, %conv, !dbg !7174
  br i1 %cmp8, label %for.body, label %for.end, !dbg !7175

for.body:                                         ; preds = %for.cond
  %17 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7176
  %18 = load i8***, i8**** %ppoin, align 8, !dbg !7178
  %19 = load i8**, i8*** %18, align 8, !dbg !7179
  %20 = load i32, i32* %a, align 4, !dbg !7180
  %idxprom = sext i32 %20 to i64, !dbg !7181
  %arrayidx = getelementptr inbounds i8*, i8** %19, i64 %idxprom, !dbg !7181
  %21 = load i8*, i8** %arrayidx, align 8, !dbg !7181
  %call = call %struct.uiBut* @ui_find_inlink(%struct.uiBlock* %17, i8* %21), !dbg !7182
  store %struct.uiBut* %call, %struct.uiBut** %bt, align 8, !dbg !7183
  %22 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !7184
  %tobool10 = icmp ne %struct.uiBut* %22, null, !dbg !7184
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !7186

if.then11:                                        ; preds = %for.body
  %23 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7187
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %23, i32 0, i32 2, !dbg !7190
  %24 = load i32, i32* %flag, align 8, !dbg !7190
  %and = and i32 %24, 67108864, !dbg !7191
  %tobool12 = icmp ne i32 %and, 0, !dbg !7191
  br i1 %tobool12, label %if.then16, label %lor.lhs.false, !dbg !7192

lor.lhs.false:                                    ; preds = %if.then11
  %25 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !7193
  %flag13 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %25, i32 0, i32 2, !dbg !7194
  %26 = load i32, i32* %flag13, align 8, !dbg !7194
  %and14 = and i32 %26, 67108864, !dbg !7195
  %tobool15 = icmp ne i32 %and14, 0, !dbg !7195
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !7196

if.then16:                                        ; preds = %lor.lhs.false, %if.then11
  %27 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !7197
  %lines = getelementptr inbounds %struct.uiLink, %struct.uiLink* %27, i32 0, i32 7, !dbg !7199
  %28 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7200
  %29 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !7201
  call void @ui_add_link_line(%struct.ListBase* %lines, %struct.uiBut* %28, %struct.uiBut* %29, i16 signext 1), !dbg !7202
  br label %if.end, !dbg !7203

if.else:                                          ; preds = %lor.lhs.false
  %30 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !7204
  %lines17 = getelementptr inbounds %struct.uiLink, %struct.uiLink* %30, i32 0, i32 7, !dbg !7206
  %31 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7207
  %32 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !7208
  call void @ui_add_link_line(%struct.ListBase* %lines17, %struct.uiBut* %31, %struct.uiBut* %32, i16 signext 0), !dbg !7209
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then16
  br label %if.end18, !dbg !7210

if.end18:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !7211

for.inc:                                          ; preds = %if.end18
  %33 = load i32, i32* %a, align 4, !dbg !7212
  %inc = add nsw i32 %33, 1, !dbg !7212
  store i32 %inc, i32* %a, align 4, !dbg !7212
  br label %for.cond, !dbg !7213, !llvm.loop !7214

for.end:                                          ; preds = %for.cond
  br label %if.end40, !dbg !7216

if.else19:                                        ; preds = %if.then3
  %34 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !7217
  %poin = getelementptr inbounds %struct.uiLink, %struct.uiLink* %34, i32 0, i32 0, !dbg !7219
  %35 = load i8**, i8*** %poin, align 8, !dbg !7219
  %tobool20 = icmp ne i8** %35, null, !dbg !7217
  br i1 %tobool20, label %if.then21, label %if.end39, !dbg !7220

if.then21:                                        ; preds = %if.else19
  %36 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7221
  %37 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !7223
  %poin22 = getelementptr inbounds %struct.uiLink, %struct.uiLink* %37, i32 0, i32 0, !dbg !7224
  %38 = load i8**, i8*** %poin22, align 8, !dbg !7224
  %39 = load i8*, i8** %38, align 8, !dbg !7225
  %call23 = call %struct.uiBut* @ui_find_inlink(%struct.uiBlock* %36, i8* %39), !dbg !7226
  store %struct.uiBut* %call23, %struct.uiBut** %bt, align 8, !dbg !7227
  %40 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !7228
  %tobool24 = icmp ne %struct.uiBut* %40, null, !dbg !7228
  br i1 %tobool24, label %if.then25, label %if.end38, !dbg !7230

if.then25:                                        ; preds = %if.then21
  %41 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7231
  %flag26 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %41, i32 0, i32 2, !dbg !7234
  %42 = load i32, i32* %flag26, align 8, !dbg !7234
  %and27 = and i32 %42, 67108864, !dbg !7235
  %tobool28 = icmp ne i32 %and27, 0, !dbg !7235
  br i1 %tobool28, label %if.then33, label %lor.lhs.false29, !dbg !7236

lor.lhs.false29:                                  ; preds = %if.then25
  %43 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !7237
  %flag30 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %43, i32 0, i32 2, !dbg !7238
  %44 = load i32, i32* %flag30, align 8, !dbg !7238
  %and31 = and i32 %44, 67108864, !dbg !7239
  %tobool32 = icmp ne i32 %and31, 0, !dbg !7239
  br i1 %tobool32, label %if.then33, label %if.else35, !dbg !7240

if.then33:                                        ; preds = %lor.lhs.false29, %if.then25
  %45 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !7241
  %lines34 = getelementptr inbounds %struct.uiLink, %struct.uiLink* %45, i32 0, i32 7, !dbg !7243
  %46 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7244
  %47 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !7245
  call void @ui_add_link_line(%struct.ListBase* %lines34, %struct.uiBut* %46, %struct.uiBut* %47, i16 signext 1), !dbg !7246
  br label %if.end37, !dbg !7247

if.else35:                                        ; preds = %lor.lhs.false29
  %48 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !7248
  %lines36 = getelementptr inbounds %struct.uiLink, %struct.uiLink* %48, i32 0, i32 7, !dbg !7250
  %49 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7251
  %50 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !7252
  call void @ui_add_link_line(%struct.ListBase* %lines36, %struct.uiBut* %49, %struct.uiBut* %50, i16 signext 0), !dbg !7253
  br label %if.end37

if.end37:                                         ; preds = %if.else35, %if.then33
  br label %if.end38, !dbg !7254

if.end38:                                         ; preds = %if.end37, %if.then21
  br label %if.end39, !dbg !7255

if.end39:                                         ; preds = %if.end38, %if.else19
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %for.end
  br label %if.end41, !dbg !7256

if.end41:                                         ; preds = %if.end40, %if.then
  br label %if.end42, !dbg !7257

if.end42:                                         ; preds = %if.end41, %while.body
  %51 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !7258
  %next = getelementptr inbounds %struct.uiBut, %struct.uiBut* %51, i32 0, i32 0, !dbg !7259
  %52 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !7259
  store %struct.uiBut* %52, %struct.uiBut** %but, align 8, !dbg !7260
  br label %while.cond, !dbg !7142, !llvm.loop !7261

while.end:                                        ; preds = %while.cond
  ret void, !dbg !7263
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_add_link_line(%struct.ListBase* %listb, %struct.uiBut* %but, %struct.uiBut* %bt, i16 signext %deactive) #0 !dbg !7264 {
entry:
  %listb.addr = alloca %struct.ListBase*, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  %bt.addr = alloca %struct.uiBut*, align 8
  %deactive.addr = alloca i16, align 2
  %line = alloca %struct.uiLinkLine*, align 8
  store %struct.ListBase* %listb, %struct.ListBase** %listb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %listb.addr, metadata !7268, metadata !DIExpression()), !dbg !7269
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !7270, metadata !DIExpression()), !dbg !7271
  store %struct.uiBut* %bt, %struct.uiBut** %bt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %bt.addr, metadata !7272, metadata !DIExpression()), !dbg !7273
  store i16 %deactive, i16* %deactive.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %deactive.addr, metadata !7274, metadata !DIExpression()), !dbg !7275
  call void @llvm.dbg.declare(metadata %struct.uiLinkLine** %line, metadata !7276, metadata !DIExpression()), !dbg !7277
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7278
  %call = call i8* %0(i64 40, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i64 0, i64 0)), !dbg !7278
  %1 = bitcast i8* %call to %struct.uiLinkLine*, !dbg !7278
  store %struct.uiLinkLine* %1, %struct.uiLinkLine** %line, align 8, !dbg !7279
  %2 = load %struct.ListBase*, %struct.ListBase** %listb.addr, align 8, !dbg !7280
  %3 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !7281
  %4 = bitcast %struct.uiLinkLine* %3 to i8*, !dbg !7281
  call void @BLI_addtail(%struct.ListBase* %2, i8* %4), !dbg !7282
  %5 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7283
  %6 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !7284
  %from = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %6, i32 0, i32 2, !dbg !7285
  store %struct.uiBut* %5, %struct.uiBut** %from, align 8, !dbg !7286
  %7 = load %struct.uiBut*, %struct.uiBut** %bt.addr, align 8, !dbg !7287
  %8 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !7288
  %to = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %8, i32 0, i32 3, !dbg !7289
  store %struct.uiBut* %7, %struct.uiBut** %to, align 8, !dbg !7290
  %9 = load i16, i16* %deactive.addr, align 2, !dbg !7291
  %10 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !7292
  %deactive1 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %10, i32 0, i32 5, !dbg !7293
  store i16 %9, i16* %deactive1, align 2, !dbg !7294
  ret void, !dbg !7295
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiBlockSetButLock(%struct.uiBlock* %block, i8 zeroext %val, i8* %lockstr) #0 !dbg !7296 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %val.addr = alloca i8, align 1
  %lockstr.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !7299, metadata !DIExpression()), !dbg !7300
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !7301, metadata !DIExpression()), !dbg !7302
  store i8* %lockstr, i8** %lockstr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %lockstr.addr, metadata !7303, metadata !DIExpression()), !dbg !7304
  %0 = load i8, i8* %val.addr, align 1, !dbg !7305
  %tobool = icmp ne i8 %0, 0, !dbg !7305
  br i1 %tobool, label %if.then, label %if.end, !dbg !7307

if.then:                                          ; preds = %entry
  %1 = load i8, i8* %val.addr, align 1, !dbg !7308
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7310
  %lock = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %2, i32 0, i32 35, !dbg !7311
  store i8 %1, i8* %lock, align 8, !dbg !7312
  %3 = load i8*, i8** %lockstr.addr, align 8, !dbg !7313
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7314
  %lockstr1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %4, i32 0, i32 34, !dbg !7315
  store i8* %3, i8** %lockstr1, align 8, !dbg !7316
  br label %if.end, !dbg !7317

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7318
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiBlockClearButLock(%struct.uiBlock* %block) #0 !dbg !7319 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !7320, metadata !DIExpression()), !dbg !7321
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7322
  %lock = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 35, !dbg !7323
  store i8 0, i8* %lock, align 8, !dbg !7324
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7325
  %lockstr = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 34, !dbg !7326
  store i8* null, i8** %lockstr, align 8, !dbg !7327
  ret void, !dbg !7328
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_delete_linkline(%struct.uiLinkLine* %line, %struct.uiBut* %but) #0 !dbg !7329 {
entry:
  %line.addr = alloca %struct.uiLinkLine*, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  %link = alloca %struct.uiLink*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  store %struct.uiLinkLine* %line, %struct.uiLinkLine** %line.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLinkLine** %line.addr, metadata !7332, metadata !DIExpression()), !dbg !7333
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !7334, metadata !DIExpression()), !dbg !7335
  call void @llvm.dbg.declare(metadata %struct.uiLink** %link, metadata !7336, metadata !DIExpression()), !dbg !7337
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7338, metadata !DIExpression()), !dbg !7339
  call void @llvm.dbg.declare(metadata i32* %b, metadata !7340, metadata !DIExpression()), !dbg !7341
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7342
  %link1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 40, !dbg !7343
  %1 = load %struct.uiLink*, %struct.uiLink** %link1, align 8, !dbg !7343
  %lines = getelementptr inbounds %struct.uiLink, %struct.uiLink* %1, i32 0, i32 7, !dbg !7344
  %2 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line.addr, align 8, !dbg !7345
  %3 = bitcast %struct.uiLinkLine* %2 to i8*, !dbg !7345
  call void @BLI_remlink(%struct.ListBase* %lines, i8* %3), !dbg !7346
  %4 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line.addr, align 8, !dbg !7347
  %from = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %4, i32 0, i32 2, !dbg !7348
  %5 = load %struct.uiBut*, %struct.uiBut** %from, align 8, !dbg !7348
  %link2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 40, !dbg !7349
  %6 = load %struct.uiLink*, %struct.uiLink** %link2, align 8, !dbg !7349
  store %struct.uiLink* %6, %struct.uiLink** %link, align 8, !dbg !7350
  %7 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !7351
  %ppoin = getelementptr inbounds %struct.uiLink, %struct.uiLink* %7, i32 0, i32 1, !dbg !7353
  %8 = load i8***, i8**** %ppoin, align 8, !dbg !7353
  %tobool = icmp ne i8*** %8, null, !dbg !7351
  br i1 %tobool, label %if.then, label %if.else25, !dbg !7354

if.then:                                          ; preds = %entry
  %9 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !7355
  %totlink = getelementptr inbounds %struct.uiLink, %struct.uiLink* %9, i32 0, i32 2, !dbg !7358
  %10 = load i16*, i16** %totlink, align 8, !dbg !7358
  %11 = load i16, i16* %10, align 2, !dbg !7359
  %conv = sext i16 %11 to i32, !dbg !7359
  %cmp = icmp eq i32 %conv, 1, !dbg !7360
  br i1 %cmp, label %if.then4, label %if.else, !dbg !7361

if.then4:                                         ; preds = %if.then
  %12 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !7362
  %totlink5 = getelementptr inbounds %struct.uiLink, %struct.uiLink* %12, i32 0, i32 2, !dbg !7364
  %13 = load i16*, i16** %totlink5, align 8, !dbg !7364
  store i16 0, i16* %13, align 2, !dbg !7365
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7366
  %15 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !7367
  %ppoin6 = getelementptr inbounds %struct.uiLink, %struct.uiLink* %15, i32 0, i32 1, !dbg !7368
  %16 = load i8***, i8**** %ppoin6, align 8, !dbg !7368
  %17 = load i8**, i8*** %16, align 8, !dbg !7369
  %18 = bitcast i8** %17 to i8*, !dbg !7369
  call void %14(i8* %18), !dbg !7366
  %19 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !7370
  %ppoin7 = getelementptr inbounds %struct.uiLink, %struct.uiLink* %19, i32 0, i32 1, !dbg !7371
  %20 = load i8***, i8**** %ppoin7, align 8, !dbg !7371
  store i8** null, i8*** %20, align 8, !dbg !7372
  br label %if.end24, !dbg !7373

if.else:                                          ; preds = %if.then
  store i32 0, i32* %b, align 4, !dbg !7374
  store i32 0, i32* %a, align 4, !dbg !7376
  br label %for.cond, !dbg !7378

for.cond:                                         ; preds = %for.inc, %if.else
  %21 = load i32, i32* %a, align 4, !dbg !7379
  %22 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !7381
  %totlink8 = getelementptr inbounds %struct.uiLink, %struct.uiLink* %22, i32 0, i32 2, !dbg !7382
  %23 = load i16*, i16** %totlink8, align 8, !dbg !7382
  %24 = load i16, i16* %23, align 2, !dbg !7383
  %conv9 = sext i16 %24 to i32, !dbg !7384
  %cmp10 = icmp slt i32 %21, %conv9, !dbg !7385
  br i1 %cmp10, label %for.body, label %for.end, !dbg !7386

for.body:                                         ; preds = %for.cond
  %25 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !7387
  %ppoin12 = getelementptr inbounds %struct.uiLink, %struct.uiLink* %25, i32 0, i32 1, !dbg !7390
  %26 = load i8***, i8**** %ppoin12, align 8, !dbg !7390
  %27 = load i8**, i8*** %26, align 8, !dbg !7391
  %28 = load i32, i32* %a, align 4, !dbg !7392
  %idxprom = sext i32 %28 to i64, !dbg !7393
  %arrayidx = getelementptr inbounds i8*, i8** %27, i64 %idxprom, !dbg !7393
  %29 = load i8*, i8** %arrayidx, align 8, !dbg !7393
  %30 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line.addr, align 8, !dbg !7394
  %to = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %30, i32 0, i32 3, !dbg !7395
  %31 = load %struct.uiBut*, %struct.uiBut** %to, align 8, !dbg !7395
  %poin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %31, i32 0, i32 19, !dbg !7396
  %32 = load i8*, i8** %poin, align 8, !dbg !7396
  %cmp13 = icmp ne i8* %29, %32, !dbg !7397
  br i1 %cmp13, label %if.then15, label %if.end, !dbg !7398

if.then15:                                        ; preds = %for.body
  %33 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !7399
  %ppoin16 = getelementptr inbounds %struct.uiLink, %struct.uiLink* %33, i32 0, i32 1, !dbg !7401
  %34 = load i8***, i8**** %ppoin16, align 8, !dbg !7401
  %35 = load i8**, i8*** %34, align 8, !dbg !7402
  %36 = load i32, i32* %a, align 4, !dbg !7403
  %idxprom17 = sext i32 %36 to i64, !dbg !7404
  %arrayidx18 = getelementptr inbounds i8*, i8** %35, i64 %idxprom17, !dbg !7404
  %37 = load i8*, i8** %arrayidx18, align 8, !dbg !7404
  %38 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !7405
  %ppoin19 = getelementptr inbounds %struct.uiLink, %struct.uiLink* %38, i32 0, i32 1, !dbg !7406
  %39 = load i8***, i8**** %ppoin19, align 8, !dbg !7406
  %40 = load i8**, i8*** %39, align 8, !dbg !7407
  %41 = load i32, i32* %b, align 4, !dbg !7408
  %idxprom20 = sext i32 %41 to i64, !dbg !7409
  %arrayidx21 = getelementptr inbounds i8*, i8** %40, i64 %idxprom20, !dbg !7409
  store i8* %37, i8** %arrayidx21, align 8, !dbg !7410
  %42 = load i32, i32* %b, align 4, !dbg !7411
  %inc = add nsw i32 %42, 1, !dbg !7411
  store i32 %inc, i32* %b, align 4, !dbg !7411
  br label %if.end, !dbg !7412

if.end:                                           ; preds = %if.then15, %for.body
  br label %for.inc, !dbg !7413

for.inc:                                          ; preds = %if.end
  %43 = load i32, i32* %a, align 4, !dbg !7414
  %inc22 = add nsw i32 %43, 1, !dbg !7414
  store i32 %inc22, i32* %a, align 4, !dbg !7414
  br label %for.cond, !dbg !7415, !llvm.loop !7416

for.end:                                          ; preds = %for.cond
  %44 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !7418
  %totlink23 = getelementptr inbounds %struct.uiLink, %struct.uiLink* %44, i32 0, i32 2, !dbg !7419
  %45 = load i16*, i16** %totlink23, align 8, !dbg !7419
  %46 = load i16, i16* %45, align 2, !dbg !7420
  %dec = add i16 %46, -1, !dbg !7420
  store i16 %dec, i16* %45, align 2, !dbg !7420
  br label %if.end24

if.end24:                                         ; preds = %for.end, %if.then4
  br label %if.end27, !dbg !7421

if.else25:                                        ; preds = %entry
  %47 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !7422
  %poin26 = getelementptr inbounds %struct.uiLink, %struct.uiLink* %47, i32 0, i32 0, !dbg !7424
  %48 = load i8**, i8*** %poin26, align 8, !dbg !7424
  store i8* null, i8** %48, align 8, !dbg !7425
  br label %if.end27

if.end27:                                         ; preds = %if.else25, %if.end24
  %49 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7426
  %50 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line.addr, align 8, !dbg !7427
  %51 = bitcast %struct.uiLinkLine* %50 to i8*, !dbg !7427
  call void %49(i8* %51), !dbg !7426
  ret void, !dbg !7428
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_get_but_vectorf(%struct.uiBut* %but, float* %vec) #0 !dbg !7429 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %vec.addr = alloca float*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %a = alloca i32, align 4
  %tot = alloca i32, align 4
  %cp = alloca i8*, align 8
  %fp = alloca float*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !7432, metadata !DIExpression()), !dbg !7433
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !7434, metadata !DIExpression()), !dbg !7435
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !7436, metadata !DIExpression()), !dbg !7437
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7438, metadata !DIExpression()), !dbg !7439
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7440
  %editvec = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 71, !dbg !7442
  %1 = load float*, float** %editvec, align 8, !dbg !7442
  %tobool = icmp ne float* %1, null, !dbg !7440
  br i1 %tobool, label %if.then, label %if.end, !dbg !7443

if.then:                                          ; preds = %entry
  %2 = load float*, float** %vec.addr, align 8, !dbg !7444
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7446
  %editvec1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 71, !dbg !7447
  %4 = load float*, float** %editvec1, align 8, !dbg !7447
  call void @copy_v3_v3(float* %2, float* %4), !dbg !7448
  br label %if.end, !dbg !7449

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7450
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 55, !dbg !7452
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !7452
  %tobool2 = icmp ne %struct.PropertyRNA* %6, null, !dbg !7450
  br i1 %tobool2, label %if.then3, label %if.else16, !dbg !7453

if.then3:                                         ; preds = %if.end
  %7 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7454
  %rnaprop4 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %7, i32 0, i32 55, !dbg !7456
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop4, align 8, !dbg !7456
  store %struct.PropertyRNA* %8, %struct.PropertyRNA** %prop, align 8, !dbg !7457
  %9 = load float*, float** %vec.addr, align 8, !dbg !7458
  call void @zero_v3(float* %9), !dbg !7459
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7460
  %call = call i32 @RNA_property_type(%struct.PropertyRNA* %10), !dbg !7462
  %cmp = icmp eq i32 %call, 2, !dbg !7463
  br i1 %cmp, label %if.then5, label %if.end15, !dbg !7464

if.then5:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !7465, metadata !DIExpression()), !dbg !7467
  %11 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7468
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %11, i32 0, i32 54, !dbg !7469
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7470
  %call6 = call i32 @RNA_property_array_length(%struct.PointerRNA* %rnapoin, %struct.PropertyRNA* %12), !dbg !7471
  store i32 %call6, i32* %tot, align 4, !dbg !7467
  %13 = load i32, i32* %tot, align 4, !dbg !7472
  %cmp7 = icmp eq i32 %13, 3, !dbg !7474
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !7475

if.then8:                                         ; preds = %if.then5
  %14 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7476
  %rnapoin9 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %14, i32 0, i32 54, !dbg !7478
  %15 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7479
  %16 = load float*, float** %vec.addr, align 8, !dbg !7480
  call void @RNA_property_float_get_array(%struct.PointerRNA* %rnapoin9, %struct.PropertyRNA* %15, float* %16), !dbg !7481
  br label %if.end14, !dbg !7482

if.else:                                          ; preds = %if.then5
  %17 = load i32, i32* %tot, align 4, !dbg !7483
  %call10 = call i32 @min_ii(i32 %17, i32 3), !dbg !7485
  store i32 %call10, i32* %tot, align 4, !dbg !7486
  store i32 0, i32* %a, align 4, !dbg !7487
  br label %for.cond, !dbg !7489

for.cond:                                         ; preds = %for.inc, %if.else
  %18 = load i32, i32* %a, align 4, !dbg !7490
  %19 = load i32, i32* %tot, align 4, !dbg !7492
  %cmp11 = icmp slt i32 %18, %19, !dbg !7493
  br i1 %cmp11, label %for.body, label %for.end, !dbg !7494

for.body:                                         ; preds = %for.cond
  %20 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7495
  %rnapoin12 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %20, i32 0, i32 54, !dbg !7497
  %21 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7498
  %22 = load i32, i32* %a, align 4, !dbg !7499
  %call13 = call float @RNA_property_float_get_index(%struct.PointerRNA* %rnapoin12, %struct.PropertyRNA* %21, i32 %22), !dbg !7500
  %23 = load float*, float** %vec.addr, align 8, !dbg !7501
  %24 = load i32, i32* %a, align 4, !dbg !7502
  %idxprom = sext i32 %24 to i64, !dbg !7501
  %arrayidx = getelementptr inbounds float, float* %23, i64 %idxprom, !dbg !7501
  store float %call13, float* %arrayidx, align 4, !dbg !7503
  br label %for.inc, !dbg !7504

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %a, align 4, !dbg !7505
  %inc = add nsw i32 %25, 1, !dbg !7505
  store i32 %inc, i32* %a, align 4, !dbg !7505
  br label %for.cond, !dbg !7506, !llvm.loop !7507

for.end:                                          ; preds = %for.cond
  br label %if.end14

if.end14:                                         ; preds = %for.end, %if.then8
  br label %if.end15, !dbg !7509

if.end15:                                         ; preds = %if.end14, %if.then3
  br label %if.end44, !dbg !7510

if.else16:                                        ; preds = %if.end
  %26 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7511
  %pointype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %26, i32 0, i32 5, !dbg !7513
  %27 = load i32, i32* %pointype, align 4, !dbg !7513
  %cmp17 = icmp eq i32 %27, 32, !dbg !7514
  br i1 %cmp17, label %if.then18, label %if.else29, !dbg !7515

if.then18:                                        ; preds = %if.else16
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !7516, metadata !DIExpression()), !dbg !7518
  %28 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7519
  %poin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %28, i32 0, i32 19, !dbg !7520
  %29 = load i8*, i8** %poin, align 8, !dbg !7520
  store i8* %29, i8** %cp, align 8, !dbg !7518
  %30 = load i8*, i8** %cp, align 8, !dbg !7521
  %arrayidx19 = getelementptr inbounds i8, i8* %30, i64 0, !dbg !7521
  %31 = load i8, i8* %arrayidx19, align 1, !dbg !7521
  %conv = uitofp i8 %31 to float, !dbg !7522
  %div = fdiv float %conv, 2.550000e+02, !dbg !7523
  %32 = load float*, float** %vec.addr, align 8, !dbg !7524
  %arrayidx20 = getelementptr inbounds float, float* %32, i64 0, !dbg !7524
  store float %div, float* %arrayidx20, align 4, !dbg !7525
  %33 = load i8*, i8** %cp, align 8, !dbg !7526
  %arrayidx21 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !7526
  %34 = load i8, i8* %arrayidx21, align 1, !dbg !7526
  %conv22 = uitofp i8 %34 to float, !dbg !7527
  %div23 = fdiv float %conv22, 2.550000e+02, !dbg !7528
  %35 = load float*, float** %vec.addr, align 8, !dbg !7529
  %arrayidx24 = getelementptr inbounds float, float* %35, i64 1, !dbg !7529
  store float %div23, float* %arrayidx24, align 4, !dbg !7530
  %36 = load i8*, i8** %cp, align 8, !dbg !7531
  %arrayidx25 = getelementptr inbounds i8, i8* %36, i64 2, !dbg !7531
  %37 = load i8, i8* %arrayidx25, align 1, !dbg !7531
  %conv26 = uitofp i8 %37 to float, !dbg !7532
  %div27 = fdiv float %conv26, 2.550000e+02, !dbg !7533
  %38 = load float*, float** %vec.addr, align 8, !dbg !7534
  %arrayidx28 = getelementptr inbounds float, float* %38, i64 2, !dbg !7534
  store float %div27, float* %arrayidx28, align 4, !dbg !7535
  br label %if.end43, !dbg !7536

if.else29:                                        ; preds = %if.else16
  %39 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7537
  %pointype30 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %39, i32 0, i32 5, !dbg !7539
  %40 = load i32, i32* %pointype30, align 4, !dbg !7539
  %cmp31 = icmp eq i32 %40, 128, !dbg !7540
  br i1 %cmp31, label %if.then33, label %if.else35, !dbg !7541

if.then33:                                        ; preds = %if.else29
  call void @llvm.dbg.declare(metadata float** %fp, metadata !7542, metadata !DIExpression()), !dbg !7544
  %41 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7545
  %poin34 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %41, i32 0, i32 19, !dbg !7546
  %42 = load i8*, i8** %poin34, align 8, !dbg !7546
  %43 = bitcast i8* %42 to float*, !dbg !7547
  store float* %43, float** %fp, align 8, !dbg !7544
  %44 = load float*, float** %vec.addr, align 8, !dbg !7548
  %45 = load float*, float** %fp, align 8, !dbg !7549
  call void @copy_v3_v3(float* %44, float* %45), !dbg !7550
  br label %if.end42, !dbg !7551

if.else35:                                        ; preds = %if.else29
  %46 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7552
  %editvec36 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %46, i32 0, i32 71, !dbg !7555
  %47 = load float*, float** %editvec36, align 8, !dbg !7555
  %cmp37 = icmp eq float* %47, null, !dbg !7556
  br i1 %cmp37, label %if.then39, label %if.end41, !dbg !7557

if.then39:                                        ; preds = %if.else35
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7558
  %call40 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.ui_get_but_vectorf, i64 0, i64 0)), !dbg !7560
  %49 = load float*, float** %vec.addr, align 8, !dbg !7561
  call void @zero_v3(float* %49), !dbg !7562
  br label %if.end41, !dbg !7563

if.end41:                                         ; preds = %if.then39, %if.else35
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then33
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then18
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end15
  %50 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7564
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %50, i32 0, i32 4, !dbg !7566
  %51 = load i32, i32* %type, align 8, !dbg !7566
  %cmp45 = icmp eq i32 %51, 15872, !dbg !7567
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !7568

if.then47:                                        ; preds = %if.end44
  %52 = load float*, float** %vec.addr, align 8, !dbg !7569
  %call48 = call float @normalize_v3(float* %52), !dbg !7571
  br label %if.end49, !dbg !7572

if.end49:                                         ; preds = %if.then47, %if.end44
  ret void, !dbg !7573
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !7574 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7577, metadata !DIExpression()), !dbg !7578
  %0 = load float*, float** %r.addr, align 8, !dbg !7579
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7579
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !7580
  %1 = load float*, float** %r.addr, align 8, !dbg !7581
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !7581
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !7582
  %2 = load float*, float** %r.addr, align 8, !dbg !7583
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !7583
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !7584
  ret void, !dbg !7585
}

declare dso_local i32 @RNA_property_type(%struct.PropertyRNA*) #3

declare dso_local i32 @RNA_property_array_length(%struct.PointerRNA*, %struct.PropertyRNA*) #3

declare dso_local void @RNA_property_float_get_array(%struct.PointerRNA*, %struct.PropertyRNA*, float*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @min_ii(i32 %a, i32 %b) #0 !dbg !7586 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !7589, metadata !DIExpression()), !dbg !7590
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !7591, metadata !DIExpression()), !dbg !7592
  %0 = load i32, i32* %a.addr, align 4, !dbg !7593
  %1 = load i32, i32* %b.addr, align 4, !dbg !7594
  %cmp = icmp slt i32 %0, %1, !dbg !7595
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7596

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !7597
  br label %cond.end, !dbg !7596

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !7598
  br label %cond.end, !dbg !7596

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !7596
  ret i32 %cond, !dbg !7599
}

declare dso_local float @RNA_property_float_get_index(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #3

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !7600 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !7603, metadata !DIExpression()), !dbg !7604
  %0 = load float*, float** %n.addr, align 8, !dbg !7605
  %1 = load float*, float** %n.addr, align 8, !dbg !7606
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !7607
  ret float %call, !dbg !7608
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_set_but_vectorf(%struct.uiBut* %but, float* %vec) #0 !dbg !7609 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %vec.addr = alloca float*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %tot = alloca i32, align 4
  %a = alloca i32, align 4
  %cp = alloca i8*, align 8
  %fp = alloca float*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !7612, metadata !DIExpression()), !dbg !7613
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !7614, metadata !DIExpression()), !dbg !7615
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !7616, metadata !DIExpression()), !dbg !7617
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7618
  %editvec = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 71, !dbg !7620
  %1 = load float*, float** %editvec, align 8, !dbg !7620
  %tobool = icmp ne float* %1, null, !dbg !7618
  br i1 %tobool, label %if.then, label %if.end, !dbg !7621

if.then:                                          ; preds = %entry
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7622
  %editvec1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 71, !dbg !7624
  %3 = load float*, float** %editvec1, align 8, !dbg !7624
  %4 = load float*, float** %vec.addr, align 8, !dbg !7625
  call void @copy_v3_v3(float* %3, float* %4), !dbg !7626
  br label %if.end, !dbg !7627

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7628
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 55, !dbg !7630
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !7630
  %tobool2 = icmp ne %struct.PropertyRNA* %6, null, !dbg !7628
  br i1 %tobool2, label %if.then3, label %if.else15, !dbg !7631

if.then3:                                         ; preds = %if.end
  %7 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7632
  %rnaprop4 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %7, i32 0, i32 55, !dbg !7634
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop4, align 8, !dbg !7634
  store %struct.PropertyRNA* %8, %struct.PropertyRNA** %prop, align 8, !dbg !7635
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7636
  %call = call i32 @RNA_property_type(%struct.PropertyRNA* %9), !dbg !7638
  %cmp = icmp eq i32 %call, 2, !dbg !7639
  br i1 %cmp, label %if.then5, label %if.end14, !dbg !7640

if.then5:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !7641, metadata !DIExpression()), !dbg !7643
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7644, metadata !DIExpression()), !dbg !7645
  %10 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7646
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 54, !dbg !7647
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7648
  %call6 = call i32 @RNA_property_array_length(%struct.PointerRNA* %rnapoin, %struct.PropertyRNA* %11), !dbg !7649
  store i32 %call6, i32* %tot, align 4, !dbg !7650
  %12 = load i32, i32* %tot, align 4, !dbg !7651
  %cmp7 = icmp eq i32 %12, 3, !dbg !7653
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !7654

if.then8:                                         ; preds = %if.then5
  %13 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7655
  %rnapoin9 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %13, i32 0, i32 54, !dbg !7657
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7658
  %15 = load float*, float** %vec.addr, align 8, !dbg !7659
  call void @RNA_property_float_set_array(%struct.PointerRNA* %rnapoin9, %struct.PropertyRNA* %14, float* %15), !dbg !7660
  br label %if.end13, !dbg !7661

if.else:                                          ; preds = %if.then5
  %16 = load i32, i32* %tot, align 4, !dbg !7662
  %call10 = call i32 @min_ii(i32 %16, i32 3), !dbg !7664
  store i32 %call10, i32* %tot, align 4, !dbg !7665
  store i32 0, i32* %a, align 4, !dbg !7666
  br label %for.cond, !dbg !7668

for.cond:                                         ; preds = %for.inc, %if.else
  %17 = load i32, i32* %a, align 4, !dbg !7669
  %18 = load i32, i32* %tot, align 4, !dbg !7671
  %cmp11 = icmp slt i32 %17, %18, !dbg !7672
  br i1 %cmp11, label %for.body, label %for.end, !dbg !7673

for.body:                                         ; preds = %for.cond
  %19 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7674
  %rnapoin12 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %19, i32 0, i32 54, !dbg !7676
  %20 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7677
  %21 = load i32, i32* %a, align 4, !dbg !7678
  %22 = load float*, float** %vec.addr, align 8, !dbg !7679
  %23 = load i32, i32* %a, align 4, !dbg !7680
  %idxprom = sext i32 %23 to i64, !dbg !7679
  %arrayidx = getelementptr inbounds float, float* %22, i64 %idxprom, !dbg !7679
  %24 = load float, float* %arrayidx, align 4, !dbg !7679
  call void @RNA_property_float_set_index(%struct.PointerRNA* %rnapoin12, %struct.PropertyRNA* %20, i32 %21, float %24), !dbg !7681
  br label %for.inc, !dbg !7682

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %a, align 4, !dbg !7683
  %inc = add nsw i32 %25, 1, !dbg !7683
  store i32 %inc, i32* %a, align 4, !dbg !7683
  br label %for.cond, !dbg !7684, !llvm.loop !7685

for.end:                                          ; preds = %for.cond
  br label %if.end13

if.end13:                                         ; preds = %for.end, %if.then8
  br label %if.end14, !dbg !7687

if.end14:                                         ; preds = %if.end13, %if.then3
  br label %if.end38, !dbg !7688

if.else15:                                        ; preds = %if.end
  %26 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7689
  %pointype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %26, i32 0, i32 5, !dbg !7691
  %27 = load i32, i32* %pointype, align 4, !dbg !7691
  %cmp16 = icmp eq i32 %27, 32, !dbg !7692
  br i1 %cmp16, label %if.then17, label %if.else30, !dbg !7693

if.then17:                                        ; preds = %if.else15
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !7694, metadata !DIExpression()), !dbg !7696
  %28 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7697
  %poin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %28, i32 0, i32 19, !dbg !7698
  %29 = load i8*, i8** %poin, align 8, !dbg !7698
  store i8* %29, i8** %cp, align 8, !dbg !7696
  %30 = load float*, float** %vec.addr, align 8, !dbg !7699
  %arrayidx18 = getelementptr inbounds float, float* %30, i64 0, !dbg !7699
  %31 = load float, float* %arrayidx18, align 4, !dbg !7699
  %mul = fmul float %31, 2.550000e+02, !dbg !7700
  %add = fadd float 5.000000e-01, %mul, !dbg !7701
  %conv = fptoui float %add to i8, !dbg !7702
  %32 = load i8*, i8** %cp, align 8, !dbg !7703
  %arrayidx19 = getelementptr inbounds i8, i8* %32, i64 0, !dbg !7703
  store i8 %conv, i8* %arrayidx19, align 1, !dbg !7704
  %33 = load float*, float** %vec.addr, align 8, !dbg !7705
  %arrayidx20 = getelementptr inbounds float, float* %33, i64 1, !dbg !7705
  %34 = load float, float* %arrayidx20, align 4, !dbg !7705
  %mul21 = fmul float %34, 2.550000e+02, !dbg !7706
  %add22 = fadd float 5.000000e-01, %mul21, !dbg !7707
  %conv23 = fptoui float %add22 to i8, !dbg !7708
  %35 = load i8*, i8** %cp, align 8, !dbg !7709
  %arrayidx24 = getelementptr inbounds i8, i8* %35, i64 1, !dbg !7709
  store i8 %conv23, i8* %arrayidx24, align 1, !dbg !7710
  %36 = load float*, float** %vec.addr, align 8, !dbg !7711
  %arrayidx25 = getelementptr inbounds float, float* %36, i64 2, !dbg !7711
  %37 = load float, float* %arrayidx25, align 4, !dbg !7711
  %mul26 = fmul float %37, 2.550000e+02, !dbg !7712
  %add27 = fadd float 5.000000e-01, %mul26, !dbg !7713
  %conv28 = fptoui float %add27 to i8, !dbg !7714
  %38 = load i8*, i8** %cp, align 8, !dbg !7715
  %arrayidx29 = getelementptr inbounds i8, i8* %38, i64 2, !dbg !7715
  store i8 %conv28, i8* %arrayidx29, align 1, !dbg !7716
  br label %if.end37, !dbg !7717

if.else30:                                        ; preds = %if.else15
  %39 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7718
  %pointype31 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %39, i32 0, i32 5, !dbg !7720
  %40 = load i32, i32* %pointype31, align 4, !dbg !7720
  %cmp32 = icmp eq i32 %40, 128, !dbg !7721
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !7722

if.then34:                                        ; preds = %if.else30
  call void @llvm.dbg.declare(metadata float** %fp, metadata !7723, metadata !DIExpression()), !dbg !7725
  %41 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7726
  %poin35 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %41, i32 0, i32 19, !dbg !7727
  %42 = load i8*, i8** %poin35, align 8, !dbg !7727
  %43 = bitcast i8* %42 to float*, !dbg !7728
  store float* %43, float** %fp, align 8, !dbg !7725
  %44 = load float*, float** %fp, align 8, !dbg !7729
  %45 = load float*, float** %vec.addr, align 8, !dbg !7730
  call void @copy_v3_v3(float* %44, float* %45), !dbg !7731
  br label %if.end36, !dbg !7732

if.end36:                                         ; preds = %if.then34, %if.else30
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then17
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end14
  ret void, !dbg !7733
}

declare dso_local void @RNA_property_float_set_array(%struct.PointerRNA*, %struct.PropertyRNA*, float*) #3

declare dso_local void @RNA_property_float_set_index(%struct.PointerRNA*, %struct.PropertyRNA*, i32, float) #3

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ui_is_but_float(%struct.uiBut* %but) #0 !dbg !7734 {
entry:
  %retval = alloca i8, align 1
  %but.addr = alloca %struct.uiBut*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !7737, metadata !DIExpression()), !dbg !7738
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7739
  %pointype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 5, !dbg !7741
  %1 = load i32, i32* %pointype, align 4, !dbg !7741
  %cmp = icmp eq i32 %1, 128, !dbg !7742
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7743

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7744
  %poin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 19, !dbg !7745
  %3 = load i8*, i8** %poin, align 8, !dbg !7745
  %tobool = icmp ne i8* %3, null, !dbg !7744
  br i1 %tobool, label %if.then, label %if.end, !dbg !7746

if.then:                                          ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !7747
  br label %return, !dbg !7747

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7748
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 55, !dbg !7750
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !7750
  %tobool1 = icmp ne %struct.PropertyRNA* %5, null, !dbg !7748
  br i1 %tobool1, label %land.lhs.true2, label %if.end6, !dbg !7751

land.lhs.true2:                                   ; preds = %if.end
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7752
  %rnaprop3 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 55, !dbg !7753
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop3, align 8, !dbg !7753
  %call = call i32 @RNA_property_type(%struct.PropertyRNA* %7), !dbg !7754
  %cmp4 = icmp eq i32 %call, 2, !dbg !7755
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !7756

if.then5:                                         ; preds = %land.lhs.true2
  store i8 1, i8* %retval, align 1, !dbg !7757
  br label %return, !dbg !7757

if.end6:                                          ; preds = %land.lhs.true2, %if.end
  store i8 0, i8* %retval, align 1, !dbg !7758
  br label %return, !dbg !7758

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %8 = load i8, i8* %retval, align 1, !dbg !7759
  ret i8 %8, !dbg !7759
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ui_is_but_bool(%struct.uiBut* %but) #0 !dbg !7760 {
entry:
  %retval = alloca i8, align 1
  %but.addr = alloca %struct.uiBut*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !7761, metadata !DIExpression()), !dbg !7762
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7763
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 4, !dbg !7763
  %1 = load i32, i32* %type, align 8, !dbg !7763
  %cmp = icmp eq i32 %1, 1536, !dbg !7763
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7763

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7763
  %type1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 4, !dbg !7763
  %3 = load i32, i32* %type1, align 8, !dbg !7763
  %cmp2 = icmp eq i32 %3, 4608, !dbg !7763
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !7763

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7763
  %type4 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 4, !dbg !7763
  %5 = load i32, i32* %type4, align 8, !dbg !7763
  %cmp5 = icmp eq i32 %5, 6656, !dbg !7763
  br i1 %cmp5, label %if.then, label %lor.lhs.false6, !dbg !7763

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7763
  %type7 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 4, !dbg !7763
  %7 = load i32, i32* %type7, align 8, !dbg !7763
  %cmp8 = icmp eq i32 %7, 17408, !dbg !7763
  br i1 %cmp8, label %if.then, label %if.end, !dbg !7765

if.then:                                          ; preds = %lor.lhs.false6, %lor.lhs.false3, %lor.lhs.false, %entry
  store i8 1, i8* %retval, align 1, !dbg !7766
  br label %return, !dbg !7766

if.end:                                           ; preds = %lor.lhs.false6
  %8 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7767
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 55, !dbg !7769
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !7769
  %tobool = icmp ne %struct.PropertyRNA* %9, null, !dbg !7767
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !7770

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7771
  %rnaprop9 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 55, !dbg !7772
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop9, align 8, !dbg !7772
  %call = call i32 @RNA_property_type(%struct.PropertyRNA* %11), !dbg !7773
  %cmp10 = icmp eq i32 %call, 0, !dbg !7774
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !7775

if.then11:                                        ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !7776
  br label %return, !dbg !7776

if.end12:                                         ; preds = %land.lhs.true, %if.end
  store i8 0, i8* %retval, align 1, !dbg !7777
  br label %return, !dbg !7777

return:                                           ; preds = %if.end12, %if.then11, %if.then
  %12 = load i8, i8* %retval, align 1, !dbg !7778
  ret i8 %12, !dbg !7778
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ui_is_but_unit(%struct.uiBut* %but) #0 !dbg !7779 {
entry:
  %retval = alloca i8, align 1
  %but.addr = alloca %struct.uiBut*, align 8
  %unit = alloca %struct.UnitSettings*, align 8
  %unit_type = alloca i32, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !7780, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.declare(metadata %struct.UnitSettings** %unit, metadata !7782, metadata !DIExpression()), !dbg !7785
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7786
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 74, !dbg !7787
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7787
  %unit1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 49, !dbg !7788
  %2 = load %struct.UnitSettings*, %struct.UnitSettings** %unit1, align 8, !dbg !7788
  store %struct.UnitSettings* %2, %struct.UnitSettings** %unit, align 8, !dbg !7785
  call void @llvm.dbg.declare(metadata i32* %unit_type, metadata !7789, metadata !DIExpression()), !dbg !7790
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7791
  %call = call i32 @uiButGetUnitType(%struct.uiBut* %3), !dbg !7792
  store i32 %call, i32* %unit_type, align 4, !dbg !7790
  %4 = load i32, i32* %unit_type, align 4, !dbg !7793
  %cmp = icmp eq i32 %4, 0, !dbg !7795
  br i1 %cmp, label %if.then, label %if.end, !dbg !7796

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !7797
  br label %return, !dbg !7797

if.end:                                           ; preds = %entry
  %5 = load %struct.UnitSettings*, %struct.UnitSettings** %unit, align 8, !dbg !7798
  %6 = load i32, i32* %unit_type, align 4, !dbg !7800
  %call2 = call zeroext i8 @ui_is_but_unit_radians_ex(%struct.UnitSettings* %5, i32 %6), !dbg !7801
  %tobool = icmp ne i8 %call2, 0, !dbg !7801
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !7802

if.then3:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !7803
  br label %return, !dbg !7803

if.end4:                                          ; preds = %if.end
  %7 = load i32, i32* %unit_type, align 4, !dbg !7804
  %cmp5 = icmp eq i32 %7, 393216, !dbg !7806
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !7807

if.then6:                                         ; preds = %if.end4
  store i8 0, i8* %retval, align 1, !dbg !7808
  br label %return, !dbg !7808

if.end7:                                          ; preds = %if.end4
  %8 = load %struct.UnitSettings*, %struct.UnitSettings** %unit, align 8, !dbg !7809
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %8, i32 0, i32 1, !dbg !7811
  %9 = load i8, i8* %system, align 4, !dbg !7811
  %conv = zext i8 %9 to i32, !dbg !7809
  %cmp8 = icmp eq i32 %conv, 0, !dbg !7812
  br i1 %cmp8, label %if.then10, label %if.end15, !dbg !7813

if.then10:                                        ; preds = %if.end7
  %10 = load i32, i32* %unit_type, align 4, !dbg !7814
  %cmp11 = icmp ne i32 %10, 327680, !dbg !7817
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !7818

if.then13:                                        ; preds = %if.then10
  store i8 0, i8* %retval, align 1, !dbg !7819
  br label %return, !dbg !7819

if.end14:                                         ; preds = %if.then10
  br label %if.end15, !dbg !7821

if.end15:                                         ; preds = %if.end14, %if.end7
  store i8 1, i8* %retval, align 1, !dbg !7822
  br label %return, !dbg !7822

return:                                           ; preds = %if.end15, %if.then13, %if.then6, %if.then3, %if.then
  %11 = load i8, i8* %retval, align 1, !dbg !7823
  ret i8 %11, !dbg !7823
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @uiButGetUnitType(%struct.uiBut* %but) #0 !dbg !7824 {
entry:
  %retval = alloca i32, align 4
  %but.addr = alloca %struct.uiBut*, align 8
  %ownUnit = alloca i32, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !7827, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.declare(metadata i32* %ownUnit, metadata !7829, metadata !DIExpression()), !dbg !7830
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7831
  %unit_type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 49, !dbg !7832
  %1 = load i8, i8* %unit_type, align 8, !dbg !7832
  %conv = zext i8 %1 to i32, !dbg !7833
  store i32 %conv, i32* %ownUnit, align 4, !dbg !7830
  %2 = load i32, i32* %ownUnit, align 4, !dbg !7834
  %cmp = icmp ne i32 %2, 0, !dbg !7836
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7837

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7838
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 55, !dbg !7839
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !7839
  %cmp2 = icmp eq %struct.PropertyRNA* %4, null, !dbg !7840
  br i1 %cmp2, label %if.then, label %if.else, !dbg !7841

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load i32, i32* %ownUnit, align 4, !dbg !7842
  %shl = shl i32 %5, 16, !dbg !7844
  store i32 %shl, i32* %retval, align 4, !dbg !7845
  br label %return, !dbg !7845

if.else:                                          ; preds = %lor.lhs.false
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7846
  %rnaprop4 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 55, !dbg !7846
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop4, align 8, !dbg !7846
  %call = call i32 @RNA_property_subtype(%struct.PropertyRNA* %7), !dbg !7846
  %and = and i32 %call, 16711680, !dbg !7846
  store i32 %and, i32* %retval, align 4, !dbg !7848
  br label %return, !dbg !7848

return:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !7849
  ret i32 %8, !dbg !7849
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ui_is_but_unit_radians_ex(%struct.UnitSettings* %unit, i32 %unit_type) #0 !dbg !7850 {
entry:
  %unit.addr = alloca %struct.UnitSettings*, align 8
  %unit_type.addr = alloca i32, align 4
  store %struct.UnitSettings* %unit, %struct.UnitSettings** %unit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UnitSettings** %unit.addr, metadata !7853, metadata !DIExpression()), !dbg !7854
  store i32 %unit_type, i32* %unit_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %unit_type.addr, metadata !7855, metadata !DIExpression()), !dbg !7856
  %0 = load %struct.UnitSettings*, %struct.UnitSettings** %unit.addr, align 8, !dbg !7857
  %system_rotation = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %0, i32 0, i32 2, !dbg !7858
  %1 = load i8, i8* %system_rotation, align 1, !dbg !7858
  %conv = zext i8 %1 to i32, !dbg !7857
  %cmp = icmp eq i32 %conv, 2, !dbg !7859
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7860

land.rhs:                                         ; preds = %entry
  %2 = load i32, i32* %unit_type.addr, align 4, !dbg !7861
  %cmp2 = icmp eq i32 %2, 327680, !dbg !7862
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp2, %land.rhs ], !dbg !7863
  %land.ext = zext i1 %3 to i32, !dbg !7860
  %conv4 = trunc i32 %land.ext to i8, !dbg !7864
  ret i8 %conv4, !dbg !7865
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ui_is_but_compatible(%struct.uiBut* %but_a, %struct.uiBut* %but_b) #0 !dbg !7866 {
entry:
  %retval = alloca i8, align 1
  %but_a.addr = alloca %struct.uiBut*, align 8
  %but_b.addr = alloca %struct.uiBut*, align 8
  store %struct.uiBut* %but_a, %struct.uiBut** %but_a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but_a.addr, metadata !7867, metadata !DIExpression()), !dbg !7868
  store %struct.uiBut* %but_b, %struct.uiBut** %but_b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but_b.addr, metadata !7869, metadata !DIExpression()), !dbg !7870
  %0 = load %struct.uiBut*, %struct.uiBut** %but_a.addr, align 8, !dbg !7871
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 4, !dbg !7873
  %1 = load i32, i32* %type, align 8, !dbg !7873
  %2 = load %struct.uiBut*, %struct.uiBut** %but_b.addr, align 8, !dbg !7874
  %type1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 4, !dbg !7875
  %3 = load i32, i32* %type1, align 8, !dbg !7875
  %cmp = icmp ne i32 %1, %3, !dbg !7876
  br i1 %cmp, label %if.then, label %if.end, !dbg !7877

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !7878
  br label %return, !dbg !7878

if.end:                                           ; preds = %entry
  %4 = load %struct.uiBut*, %struct.uiBut** %but_a.addr, align 8, !dbg !7879
  %pointype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 5, !dbg !7881
  %5 = load i32, i32* %pointype, align 4, !dbg !7881
  %6 = load %struct.uiBut*, %struct.uiBut** %but_b.addr, align 8, !dbg !7882
  %pointype2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 5, !dbg !7883
  %7 = load i32, i32* %pointype2, align 4, !dbg !7883
  %cmp3 = icmp ne i32 %5, %7, !dbg !7884
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !7885

if.then4:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !7886
  br label %return, !dbg !7886

if.end5:                                          ; preds = %if.end
  %8 = load %struct.uiBut*, %struct.uiBut** %but_a.addr, align 8, !dbg !7887
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 55, !dbg !7889
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !7889
  %tobool = icmp ne %struct.PropertyRNA* %9, null, !dbg !7887
  br i1 %tobool, label %if.then6, label %if.end40, !dbg !7890

if.then6:                                         ; preds = %if.end5
  %10 = load %struct.uiBut*, %struct.uiBut** %but_a.addr, align 8, !dbg !7891
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 54, !dbg !7894
  %type7 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin, i32 0, i32 1, !dbg !7895
  %11 = load %struct.StructRNA*, %struct.StructRNA** %type7, align 8, !dbg !7895
  %12 = load %struct.uiBut*, %struct.uiBut** %but_b.addr, align 8, !dbg !7896
  %rnapoin8 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 54, !dbg !7897
  %type9 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin8, i32 0, i32 1, !dbg !7898
  %13 = load %struct.StructRNA*, %struct.StructRNA** %type9, align 8, !dbg !7898
  %cmp10 = icmp ne %struct.StructRNA* %11, %13, !dbg !7899
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !7900

if.then11:                                        ; preds = %if.then6
  store i8 0, i8* %retval, align 1, !dbg !7901
  br label %return, !dbg !7901

if.end12:                                         ; preds = %if.then6
  %14 = load %struct.uiBut*, %struct.uiBut** %but_a.addr, align 8, !dbg !7902
  %rnapoin13 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %14, i32 0, i32 54, !dbg !7904
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin13, i32 0, i32 2, !dbg !7905
  %15 = load i8*, i8** %data, align 8, !dbg !7905
  %16 = load %struct.uiBut*, %struct.uiBut** %but_b.addr, align 8, !dbg !7906
  %rnapoin14 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %16, i32 0, i32 54, !dbg !7907
  %data15 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin14, i32 0, i32 2, !dbg !7908
  %17 = load i8*, i8** %data15, align 8, !dbg !7908
  %cmp16 = icmp ne i8* %15, %17, !dbg !7909
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !7910

if.then17:                                        ; preds = %if.end12
  store i8 0, i8* %retval, align 1, !dbg !7911
  br label %return, !dbg !7911

if.end18:                                         ; preds = %if.end12
  %18 = load %struct.uiBut*, %struct.uiBut** %but_a.addr, align 8, !dbg !7912
  %rnapoin19 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %18, i32 0, i32 54, !dbg !7914
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin19, i32 0, i32 0, !dbg !7915
  %data20 = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !7916
  %19 = load i8*, i8** %data20, align 8, !dbg !7916
  %20 = load %struct.uiBut*, %struct.uiBut** %but_b.addr, align 8, !dbg !7917
  %rnapoin21 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %20, i32 0, i32 54, !dbg !7918
  %id22 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin21, i32 0, i32 0, !dbg !7919
  %data23 = getelementptr inbounds %struct.anon, %struct.anon* %id22, i32 0, i32 0, !dbg !7920
  %21 = load i8*, i8** %data23, align 8, !dbg !7920
  %cmp24 = icmp ne i8* %19, %21, !dbg !7921
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !7922

if.then25:                                        ; preds = %if.end18
  store i8 0, i8* %retval, align 1, !dbg !7923
  br label %return, !dbg !7923

if.end26:                                         ; preds = %if.end18
  %22 = load %struct.uiBut*, %struct.uiBut** %but_a.addr, align 8, !dbg !7924
  %rnaprop27 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %22, i32 0, i32 55, !dbg !7926
  %23 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop27, align 8, !dbg !7926
  %call = call i32 @RNA_property_type(%struct.PropertyRNA* %23), !dbg !7927
  %24 = load %struct.uiBut*, %struct.uiBut** %but_b.addr, align 8, !dbg !7928
  %rnaprop28 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %24, i32 0, i32 55, !dbg !7929
  %25 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop28, align 8, !dbg !7929
  %call29 = call i32 @RNA_property_type(%struct.PropertyRNA* %25), !dbg !7930
  %cmp30 = icmp ne i32 %call, %call29, !dbg !7931
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !7932

if.then31:                                        ; preds = %if.end26
  store i8 0, i8* %retval, align 1, !dbg !7933
  br label %return, !dbg !7933

if.end32:                                         ; preds = %if.end26
  %26 = load %struct.uiBut*, %struct.uiBut** %but_a.addr, align 8, !dbg !7934
  %rnaprop33 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %26, i32 0, i32 55, !dbg !7936
  %27 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop33, align 8, !dbg !7936
  %call34 = call i32 @RNA_property_subtype(%struct.PropertyRNA* %27), !dbg !7937
  %28 = load %struct.uiBut*, %struct.uiBut** %but_b.addr, align 8, !dbg !7938
  %rnaprop35 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %28, i32 0, i32 55, !dbg !7939
  %29 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop35, align 8, !dbg !7939
  %call36 = call i32 @RNA_property_subtype(%struct.PropertyRNA* %29), !dbg !7940
  %cmp37 = icmp ne i32 %call34, %call36, !dbg !7941
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !7942

if.then38:                                        ; preds = %if.end32
  store i8 0, i8* %retval, align 1, !dbg !7943
  br label %return, !dbg !7943

if.end39:                                         ; preds = %if.end32
  br label %if.end40, !dbg !7944

if.end40:                                         ; preds = %if.end39, %if.end5
  store i8 1, i8* %retval, align 1, !dbg !7945
  br label %return, !dbg !7945

return:                                           ; preds = %if.end40, %if.then38, %if.then31, %if.then25, %if.then17, %if.then11, %if.then4, %if.then
  %30 = load i8, i8* %retval, align 1, !dbg !7946
  ret i8 %30, !dbg !7946
}

declare dso_local i32 @RNA_property_subtype(%struct.PropertyRNA*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ui_is_but_rna_valid(%struct.uiBut* %but) #0 !dbg !7947 {
entry:
  %retval = alloca i8, align 1
  %but.addr = alloca %struct.uiBut*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !7950, metadata !DIExpression()), !dbg !7951
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7952
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 55, !dbg !7954
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !7954
  %cmp = icmp eq %struct.PropertyRNA* %1, null, !dbg !7955
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7956

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7957
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 54, !dbg !7958
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7959
  %rnaprop1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 55, !dbg !7960
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop1, align 8, !dbg !7960
  %call = call zeroext i8 @RNA_struct_contains_property(%struct.PointerRNA* %rnapoin, %struct.PropertyRNA* %4), !dbg !7961
  %conv = zext i8 %call to i32, !dbg !7961
  %tobool = icmp ne i32 %conv, 0, !dbg !7961
  br i1 %tobool, label %if.then, label %if.else, !dbg !7962

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8 1, i8* %retval, align 1, !dbg !7963
  br label %return, !dbg !7963

if.else:                                          ; preds = %lor.lhs.false
  %5 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7965
  %drawstr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 17, !dbg !7967
  %arraydecay = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr, i64 0, i64 0, !dbg !7965
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7968
  %rnaprop2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 55, !dbg !7969
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop2, align 8, !dbg !7969
  %8 = bitcast %struct.PropertyRNA* %7 to i8*, !dbg !7970
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay, i8* %8), !dbg !7971
  store i8 0, i8* %retval, align 1, !dbg !7972
  br label %return, !dbg !7972

return:                                           ; preds = %if.else, %if.then
  %9 = load i8, i8* %retval, align 1, !dbg !7973
  ret i8 %9, !dbg !7973
}

declare dso_local zeroext i8 @RNA_struct_contains_property(%struct.PointerRNA*, %struct.PropertyRNA*) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local zeroext i8 @RNA_property_array_check(%struct.PropertyRNA*) #3

declare dso_local i32 @RNA_property_boolean_get_index(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #3

declare dso_local i32 @RNA_property_boolean_get(%struct.PointerRNA*, %struct.PropertyRNA*) #3

declare dso_local i32 @RNA_property_int_get_index(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #3

declare dso_local i32 @RNA_property_int_get(%struct.PointerRNA*, %struct.PropertyRNA*) #3

declare dso_local float @RNA_property_float_get(%struct.PointerRNA*, %struct.PropertyRNA*) #3

declare dso_local i32 @RNA_property_enum_get(%struct.PointerRNA*, %struct.PropertyRNA*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_set_but_val(%struct.uiBut* %but, double %value) #0 !dbg !7974 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %value.addr = alloca double, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %ivalue = alloca i32, align 4
  %fval = alloca float, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !7977, metadata !DIExpression()), !dbg !7978
  store double %value, double* %value.addr, align 8
  call void @llvm.dbg.declare(metadata double* %value.addr, metadata !7979, metadata !DIExpression()), !dbg !7980
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !7981, metadata !DIExpression()), !dbg !7982
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7983
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 55, !dbg !7985
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !7985
  %tobool = icmp ne %struct.PropertyRNA* %1, null, !dbg !7983
  br i1 %tobool, label %if.then, label %if.else46, !dbg !7986

if.then:                                          ; preds = %entry
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7987
  %rnaprop1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 55, !dbg !7989
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop1, align 8, !dbg !7989
  store %struct.PropertyRNA* %3, %struct.PropertyRNA** %prop, align 8, !dbg !7990
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !7991
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 54, !dbg !7993
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7994
  %call = call zeroext i8 @RNA_property_editable(%struct.PointerRNA* %rnapoin, %struct.PropertyRNA* %5), !dbg !7995
  %tobool2 = icmp ne i8 %call, 0, !dbg !7995
  br i1 %tobool2, label %if.then3, label %if.end45, !dbg !7996

if.then3:                                         ; preds = %if.then
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7997
  %call4 = call i32 @RNA_property_type(%struct.PropertyRNA* %6), !dbg !7999
  switch i32 %call4, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb11
    i32 2, label %sw.bb22
    i32 4, label %sw.bb33
  ], !dbg !8000

sw.bb:                                            ; preds = %if.then3
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8001
  %call5 = call zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %7), !dbg !8004
  %tobool6 = icmp ne i8 %call5, 0, !dbg !8004
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !8005

if.then7:                                         ; preds = %sw.bb
  %8 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8006
  %rnapoin8 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 54, !dbg !8007
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8008
  %10 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8009
  %rnaindex = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 56, !dbg !8010
  %11 = load i32, i32* %rnaindex, align 8, !dbg !8010
  %12 = load double, double* %value.addr, align 8, !dbg !8011
  %conv = fptosi double %12 to i32, !dbg !8011
  call void @RNA_property_boolean_set_index(%struct.PointerRNA* %rnapoin8, %struct.PropertyRNA* %9, i32 %11, i32 %conv), !dbg !8012
  br label %if.end, !dbg !8012

if.else:                                          ; preds = %sw.bb
  %13 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8013
  %rnapoin9 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %13, i32 0, i32 54, !dbg !8014
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8015
  %15 = load double, double* %value.addr, align 8, !dbg !8016
  %conv10 = fptosi double %15 to i32, !dbg !8016
  call void @RNA_property_boolean_set(%struct.PointerRNA* %rnapoin9, %struct.PropertyRNA* %14, i32 %conv10), !dbg !8017
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  br label %sw.epilog, !dbg !8018

sw.bb11:                                          ; preds = %if.then3
  %16 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8019
  %call12 = call zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %16), !dbg !8021
  %tobool13 = icmp ne i8 %call12, 0, !dbg !8021
  br i1 %tobool13, label %if.then14, label %if.else18, !dbg !8022

if.then14:                                        ; preds = %sw.bb11
  %17 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8023
  %rnapoin15 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %17, i32 0, i32 54, !dbg !8024
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8025
  %19 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8026
  %rnaindex16 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %19, i32 0, i32 56, !dbg !8027
  %20 = load i32, i32* %rnaindex16, align 8, !dbg !8027
  %21 = load double, double* %value.addr, align 8, !dbg !8028
  %conv17 = fptosi double %21 to i32, !dbg !8029
  call void @RNA_property_int_set_index(%struct.PointerRNA* %rnapoin15, %struct.PropertyRNA* %18, i32 %20, i32 %conv17), !dbg !8030
  br label %if.end21, !dbg !8030

if.else18:                                        ; preds = %sw.bb11
  %22 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8031
  %rnapoin19 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %22, i32 0, i32 54, !dbg !8032
  %23 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8033
  %24 = load double, double* %value.addr, align 8, !dbg !8034
  %conv20 = fptosi double %24 to i32, !dbg !8035
  call void @RNA_property_int_set(%struct.PointerRNA* %rnapoin19, %struct.PropertyRNA* %23, i32 %conv20), !dbg !8036
  br label %if.end21

if.end21:                                         ; preds = %if.else18, %if.then14
  br label %sw.epilog, !dbg !8037

sw.bb22:                                          ; preds = %if.then3
  %25 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8038
  %call23 = call zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %25), !dbg !8040
  %tobool24 = icmp ne i8 %call23, 0, !dbg !8040
  br i1 %tobool24, label %if.then25, label %if.else29, !dbg !8041

if.then25:                                        ; preds = %sw.bb22
  %26 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8042
  %rnapoin26 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %26, i32 0, i32 54, !dbg !8043
  %27 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8044
  %28 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8045
  %rnaindex27 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %28, i32 0, i32 56, !dbg !8046
  %29 = load i32, i32* %rnaindex27, align 8, !dbg !8046
  %30 = load double, double* %value.addr, align 8, !dbg !8047
  %conv28 = fptrunc double %30 to float, !dbg !8047
  call void @RNA_property_float_set_index(%struct.PointerRNA* %rnapoin26, %struct.PropertyRNA* %27, i32 %29, float %conv28), !dbg !8048
  br label %if.end32, !dbg !8048

if.else29:                                        ; preds = %sw.bb22
  %31 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8049
  %rnapoin30 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %31, i32 0, i32 54, !dbg !8050
  %32 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8051
  %33 = load double, double* %value.addr, align 8, !dbg !8052
  %conv31 = fptrunc double %33 to float, !dbg !8052
  call void @RNA_property_float_set(%struct.PointerRNA* %rnapoin30, %struct.PropertyRNA* %32, float %conv31), !dbg !8053
  br label %if.end32

if.end32:                                         ; preds = %if.else29, %if.then25
  br label %sw.epilog, !dbg !8054

sw.bb33:                                          ; preds = %if.then3
  %34 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8055
  %call34 = call i32 @RNA_property_flag(%struct.PropertyRNA* %34), !dbg !8057
  %and = and i32 %call34, 2097152, !dbg !8058
  %tobool35 = icmp ne i32 %and, 0, !dbg !8058
  br i1 %tobool35, label %if.then36, label %if.else41, !dbg !8059

if.then36:                                        ; preds = %sw.bb33
  call void @llvm.dbg.declare(metadata i32* %ivalue, metadata !8060, metadata !DIExpression()), !dbg !8062
  %35 = load double, double* %value.addr, align 8, !dbg !8063
  %conv37 = fptosi double %35 to i32, !dbg !8064
  store i32 %conv37, i32* %ivalue, align 4, !dbg !8062
  %36 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8065
  %rnapoin38 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %36, i32 0, i32 54, !dbg !8066
  %37 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8067
  %call39 = call i32 @RNA_property_enum_get(%struct.PointerRNA* %rnapoin38, %struct.PropertyRNA* %37), !dbg !8068
  %38 = load i32, i32* %ivalue, align 4, !dbg !8069
  %xor = xor i32 %38, %call39, !dbg !8069
  store i32 %xor, i32* %ivalue, align 4, !dbg !8069
  %39 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8070
  %rnapoin40 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %39, i32 0, i32 54, !dbg !8071
  %40 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8072
  %41 = load i32, i32* %ivalue, align 4, !dbg !8073
  call void @RNA_property_enum_set(%struct.PointerRNA* %rnapoin40, %struct.PropertyRNA* %40, i32 %41), !dbg !8074
  br label %if.end44, !dbg !8075

if.else41:                                        ; preds = %sw.bb33
  %42 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8076
  %rnapoin42 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %42, i32 0, i32 54, !dbg !8078
  %43 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8079
  %44 = load double, double* %value.addr, align 8, !dbg !8080
  %conv43 = fptosi double %44 to i32, !dbg !8080
  call void @RNA_property_enum_set(%struct.PointerRNA* %rnapoin42, %struct.PropertyRNA* %43, i32 %conv43), !dbg !8081
  br label %if.end44

if.end44:                                         ; preds = %if.else41, %if.then36
  br label %sw.epilog, !dbg !8082

sw.default:                                       ; preds = %if.then3
  br label %sw.epilog, !dbg !8083

sw.epilog:                                        ; preds = %sw.default, %if.end44, %if.end32, %if.end21, %if.end
  br label %if.end45, !dbg !8084

if.end45:                                         ; preds = %sw.epilog, %if.then
  store double 0x7FEFFFFFFFFFFFFF, double* %value.addr, align 8, !dbg !8085
  br label %if.end129, !dbg !8086

if.else46:                                        ; preds = %entry
  %45 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8087
  %pointype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %45, i32 0, i32 5, !dbg !8089
  %46 = load i32, i32* %pointype, align 4, !dbg !8089
  %cmp = icmp eq i32 %46, 0, !dbg !8090
  br i1 %cmp, label %if.then48, label %if.else49, !dbg !8091

if.then48:                                        ; preds = %if.else46
  br label %if.end128, !dbg !8092

if.else49:                                        ; preds = %if.else46
  %47 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8094
  %pointype50 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %47, i32 0, i32 5, !dbg !8097
  %48 = load i32, i32* %pointype50, align 4, !dbg !8097
  %cmp51 = icmp eq i32 %48, 32, !dbg !8098
  br i1 %cmp51, label %if.then53, label %if.else56, !dbg !8099

if.then53:                                        ; preds = %if.else49
  %49 = load double, double* %value.addr, align 8, !dbg !8100
  %add = fadd double %49, 5.000000e-01, !dbg !8102
  %50 = call double @llvm.floor.f64(double %add), !dbg !8103
  %conv54 = fptoui double %50 to i8, !dbg !8104
  %conv55 = uitofp i8 %conv54 to double, !dbg !8104
  store double %conv55, double* %value.addr, align 8, !dbg !8105
  br label %if.end88, !dbg !8106

if.else56:                                        ; preds = %if.else49
  %51 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8107
  %pointype57 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %51, i32 0, i32 5, !dbg !8109
  %52 = load i32, i32* %pointype57, align 4, !dbg !8109
  %cmp58 = icmp eq i32 %52, 64, !dbg !8110
  br i1 %cmp58, label %if.then60, label %if.else64, !dbg !8111

if.then60:                                        ; preds = %if.else56
  %53 = load double, double* %value.addr, align 8, !dbg !8112
  %add61 = fadd double %53, 5.000000e-01, !dbg !8114
  %54 = call double @llvm.floor.f64(double %add61), !dbg !8115
  %conv62 = fptosi double %54 to i16, !dbg !8116
  %conv63 = sitofp i16 %conv62 to double, !dbg !8116
  store double %conv63, double* %value.addr, align 8, !dbg !8117
  br label %if.end87, !dbg !8118

if.else64:                                        ; preds = %if.else56
  %55 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8119
  %pointype65 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %55, i32 0, i32 5, !dbg !8121
  %56 = load i32, i32* %pointype65, align 4, !dbg !8121
  %cmp66 = icmp eq i32 %56, 96, !dbg !8122
  br i1 %cmp66, label %if.then68, label %if.else72, !dbg !8123

if.then68:                                        ; preds = %if.else64
  %57 = load double, double* %value.addr, align 8, !dbg !8124
  %add69 = fadd double %57, 5.000000e-01, !dbg !8125
  %58 = call double @llvm.floor.f64(double %add69), !dbg !8126
  %conv70 = fptosi double %58 to i32, !dbg !8127
  %conv71 = sitofp i32 %conv70 to double, !dbg !8127
  store double %conv71, double* %value.addr, align 8, !dbg !8128
  br label %if.end86, !dbg !8129

if.else72:                                        ; preds = %if.else64
  %59 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8130
  %pointype73 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %59, i32 0, i32 5, !dbg !8132
  %60 = load i32, i32* %pointype73, align 4, !dbg !8132
  %cmp74 = icmp eq i32 %60, 128, !dbg !8133
  br i1 %cmp74, label %if.then76, label %if.end85, !dbg !8134

if.then76:                                        ; preds = %if.else72
  call void @llvm.dbg.declare(metadata float* %fval, metadata !8135, metadata !DIExpression()), !dbg !8137
  %61 = load double, double* %value.addr, align 8, !dbg !8138
  %conv77 = fptrunc double %61 to float, !dbg !8139
  store float %conv77, float* %fval, align 4, !dbg !8137
  %62 = load float, float* %fval, align 4, !dbg !8140
  %cmp78 = fcmp oge float %62, 0xBEE4F8B580000000, !dbg !8142
  br i1 %cmp78, label %land.lhs.true, label %if.end83, !dbg !8143

land.lhs.true:                                    ; preds = %if.then76
  %63 = load float, float* %fval, align 4, !dbg !8144
  %cmp80 = fcmp ole float %63, 0x3EE4F8B580000000, !dbg !8145
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !8146

if.then82:                                        ; preds = %land.lhs.true
  store float 0.000000e+00, float* %fval, align 4, !dbg !8147
  br label %if.end83, !dbg !8148

if.end83:                                         ; preds = %if.then82, %land.lhs.true, %if.then76
  %64 = load float, float* %fval, align 4, !dbg !8149
  %conv84 = fpext float %64 to double, !dbg !8149
  store double %conv84, double* %value.addr, align 8, !dbg !8150
  br label %if.end85, !dbg !8151

if.end85:                                         ; preds = %if.end83, %if.else72
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.then68
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.then60
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.then53
  %65 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8152
  %editval = getelementptr inbounds %struct.uiBut, %struct.uiBut* %65, i32 0, i32 70, !dbg !8154
  %66 = load double*, double** %editval, align 8, !dbg !8154
  %tobool89 = icmp ne double* %66, null, !dbg !8152
  br i1 %tobool89, label %if.then90, label %if.else92, !dbg !8155

if.then90:                                        ; preds = %if.end88
  %67 = load double, double* %value.addr, align 8, !dbg !8156
  %68 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8157
  %editval91 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %68, i32 0, i32 70, !dbg !8158
  %69 = load double*, double** %editval91, align 8, !dbg !8158
  store double %67, double* %69, align 8, !dbg !8159
  store double %67, double* %value.addr, align 8, !dbg !8160
  br label %if.end127, !dbg !8161

if.else92:                                        ; preds = %if.end88
  %70 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8162
  %pointype93 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %70, i32 0, i32 5, !dbg !8164
  %71 = load i32, i32* %pointype93, align 4, !dbg !8164
  %cmp94 = icmp eq i32 %71, 32, !dbg !8165
  br i1 %cmp94, label %if.then96, label %if.else99, !dbg !8166

if.then96:                                        ; preds = %if.else92
  %72 = load double, double* %value.addr, align 8, !dbg !8167
  %conv97 = fptoui double %72 to i8, !dbg !8168
  %73 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8169
  %poin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %73, i32 0, i32 19, !dbg !8170
  %74 = load i8*, i8** %poin, align 8, !dbg !8170
  store i8 %conv97, i8* %74, align 1, !dbg !8171
  %conv98 = uitofp i8 %conv97 to double, !dbg !8172
  store double %conv98, double* %value.addr, align 8, !dbg !8173
  br label %if.end126, !dbg !8174

if.else99:                                        ; preds = %if.else92
  %75 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8175
  %pointype100 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %75, i32 0, i32 5, !dbg !8177
  %76 = load i32, i32* %pointype100, align 4, !dbg !8177
  %cmp101 = icmp eq i32 %76, 64, !dbg !8178
  br i1 %cmp101, label %if.then103, label %if.else107, !dbg !8179

if.then103:                                       ; preds = %if.else99
  %77 = load double, double* %value.addr, align 8, !dbg !8180
  %conv104 = fptosi double %77 to i16, !dbg !8181
  %78 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8182
  %poin105 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %78, i32 0, i32 19, !dbg !8183
  %79 = load i8*, i8** %poin105, align 8, !dbg !8183
  %80 = bitcast i8* %79 to i16*, !dbg !8184
  store i16 %conv104, i16* %80, align 2, !dbg !8185
  %conv106 = sitofp i16 %conv104 to double, !dbg !8184
  store double %conv106, double* %value.addr, align 8, !dbg !8186
  br label %if.end125, !dbg !8187

if.else107:                                       ; preds = %if.else99
  %81 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8188
  %pointype108 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %81, i32 0, i32 5, !dbg !8190
  %82 = load i32, i32* %pointype108, align 4, !dbg !8190
  %cmp109 = icmp eq i32 %82, 96, !dbg !8191
  br i1 %cmp109, label %if.then111, label %if.else115, !dbg !8192

if.then111:                                       ; preds = %if.else107
  %83 = load double, double* %value.addr, align 8, !dbg !8193
  %conv112 = fptosi double %83 to i32, !dbg !8194
  %84 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8195
  %poin113 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %84, i32 0, i32 19, !dbg !8196
  %85 = load i8*, i8** %poin113, align 8, !dbg !8196
  %86 = bitcast i8* %85 to i32*, !dbg !8197
  store i32 %conv112, i32* %86, align 4, !dbg !8198
  %conv114 = sitofp i32 %conv112 to double, !dbg !8197
  store double %conv114, double* %value.addr, align 8, !dbg !8199
  br label %if.end124, !dbg !8200

if.else115:                                       ; preds = %if.else107
  %87 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8201
  %pointype116 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %87, i32 0, i32 5, !dbg !8203
  %88 = load i32, i32* %pointype116, align 4, !dbg !8203
  %cmp117 = icmp eq i32 %88, 128, !dbg !8204
  br i1 %cmp117, label %if.then119, label %if.end123, !dbg !8205

if.then119:                                       ; preds = %if.else115
  %89 = load double, double* %value.addr, align 8, !dbg !8206
  %conv120 = fptrunc double %89 to float, !dbg !8207
  %90 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8208
  %poin121 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %90, i32 0, i32 19, !dbg !8209
  %91 = load i8*, i8** %poin121, align 8, !dbg !8209
  %92 = bitcast i8* %91 to float*, !dbg !8210
  store float %conv120, float* %92, align 4, !dbg !8211
  %conv122 = fpext float %conv120 to double, !dbg !8210
  store double %conv122, double* %value.addr, align 8, !dbg !8212
  br label %if.end123, !dbg !8213

if.end123:                                        ; preds = %if.then119, %if.else115
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.then111
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %if.then103
  br label %if.end126

if.end126:                                        ; preds = %if.end125, %if.then96
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.then90
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.then48
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.end45
  %93 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8214
  call void @ui_check_but_select(%struct.uiBut* %93, double* %value.addr), !dbg !8215
  ret void, !dbg !8216
}

declare dso_local zeroext i8 @RNA_property_editable(%struct.PointerRNA*, %struct.PropertyRNA*) #3

declare dso_local void @RNA_property_boolean_set_index(%struct.PointerRNA*, %struct.PropertyRNA*, i32, i32) #3

declare dso_local void @RNA_property_boolean_set(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #3

declare dso_local void @RNA_property_int_set_index(%struct.PointerRNA*, %struct.PropertyRNA*, i32, i32) #3

declare dso_local void @RNA_property_int_set(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #3

declare dso_local void @RNA_property_float_set(%struct.PointerRNA*, %struct.PropertyRNA*, float) #3

declare dso_local void @RNA_property_enum_set(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define internal void @ui_check_but_select(%struct.uiBut* %but, double* %value) #0 !dbg !8217 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %value.addr = alloca double*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !8220, metadata !DIExpression()), !dbg !8221
  store double* %value, double** %value.addr, align 8
  call void @llvm.dbg.declare(metadata double** %value.addr, metadata !8222, metadata !DIExpression()), !dbg !8223
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8224
  %1 = load double*, double** %value.addr, align 8, !dbg !8225
  %call = call i32 @ui_is_but_push_ex(%struct.uiBut* %0, double* %1), !dbg !8226
  switch i32 %call, label %sw.epilog [
    i32 1, label %sw.bb
    i32 0, label %sw.bb1
  ], !dbg !8227

sw.bb:                                            ; preds = %entry
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8228
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 2, !dbg !8230
  %3 = load i32, i32* %flag, align 8, !dbg !8231
  %or = or i32 %3, 1, !dbg !8231
  store i32 %or, i32* %flag, align 8, !dbg !8231
  br label %sw.epilog, !dbg !8232

sw.bb1:                                           ; preds = %entry
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8233
  %flag2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 2, !dbg !8234
  %5 = load i32, i32* %flag2, align 8, !dbg !8235
  %and = and i32 %5, -2, !dbg !8235
  store i32 %and, i32* %flag2, align 8, !dbg !8235
  br label %sw.epilog, !dbg !8236

sw.epilog:                                        ; preds = %entry, %sw.bb1, %sw.bb
  ret void, !dbg !8237
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ui_get_but_string_max_length(%struct.uiBut* %but) #0 !dbg !8238 {
entry:
  %retval = alloca i32, align 4
  %but.addr = alloca %struct.uiBut*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !8239, metadata !DIExpression()), !dbg !8240
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8241
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 4, !dbg !8241
  %1 = load i32, i32* %type, align 8, !dbg !8241
  %cmp = icmp eq i32 %1, 3072, !dbg !8241
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8241

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8241
  %type1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 4, !dbg !8241
  %3 = load i32, i32* %type1, align 8, !dbg !8241
  %cmp2 = icmp eq i32 %3, 20992, !dbg !8241
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !8241

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8241
  %type4 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 4, !dbg !8241
  %5 = load i32, i32* %type4, align 8, !dbg !8241
  %cmp5 = icmp eq i32 %5, 26624, !dbg !8241
  br i1 %cmp5, label %if.then, label %if.else, !dbg !8243

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8244
  %hardmax = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 21, !dbg !8245
  %7 = load float, float* %hardmax, align 4, !dbg !8245
  %conv = fptosi float %7 to i32, !dbg !8244
  store i32 %conv, i32* %retval, align 4, !dbg !8246
  br label %return, !dbg !8246

if.else:                                          ; preds = %lor.lhs.false3
  store i32 400, i32* %retval, align 4, !dbg !8247
  br label %return, !dbg !8247

return:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !8248
  ret i32 %8, !dbg !8248
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @ui_get_but_drag_multi_edit(%struct.uiBut* %but) #0 !dbg !8249 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %but_iter = alloca %struct.uiBut*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !8252, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but_iter, metadata !8254, metadata !DIExpression()), !dbg !8255
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8256
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 74, !dbg !8258
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !8258
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 2, !dbg !8259
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 0, !dbg !8260
  %2 = load i8*, i8** %first, align 8, !dbg !8260
  %3 = bitcast i8* %2 to %struct.uiBut*, !dbg !8256
  store %struct.uiBut* %3, %struct.uiBut** %but_iter, align 8, !dbg !8261
  br label %for.cond, !dbg !8262

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.uiBut*, %struct.uiBut** %but_iter, align 8, !dbg !8263
  %tobool = icmp ne %struct.uiBut* %4, null, !dbg !8265
  br i1 %tobool, label %for.body, label %for.end, !dbg !8265

for.body:                                         ; preds = %for.cond
  %5 = load %struct.uiBut*, %struct.uiBut** %but_iter, align 8, !dbg !8266
  %editstr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 69, !dbg !8269
  %6 = load i8*, i8** %editstr, align 8, !dbg !8269
  %tobool1 = icmp ne i8* %6, null, !dbg !8266
  br i1 %tobool1, label %if.then, label %if.end, !dbg !8270

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !8271

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8273

for.inc:                                          ; preds = %if.end
  %7 = load %struct.uiBut*, %struct.uiBut** %but_iter, align 8, !dbg !8274
  %next = getelementptr inbounds %struct.uiBut, %struct.uiBut* %7, i32 0, i32 0, !dbg !8275
  %8 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !8275
  store %struct.uiBut* %8, %struct.uiBut** %but_iter, align 8, !dbg !8276
  br label %for.cond, !dbg !8277, !llvm.loop !8278

for.end:                                          ; preds = %if.then, %for.cond
  %9 = load %struct.uiBut*, %struct.uiBut** %but_iter, align 8, !dbg !8280
  ret %struct.uiBut* %9, !dbg !8281
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_convert_to_unit_alt_name(%struct.uiBut* %but, i8* %str, i64 %maxlen) #0 !dbg !8282 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %str.addr = alloca i8*, align 8
  %maxlen.addr = alloca i64, align 8
  %unit = alloca %struct.UnitSettings*, align 8
  %unit_type = alloca i32, align 4
  %orig_str = alloca i8*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !8285, metadata !DIExpression()), !dbg !8286
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !8287, metadata !DIExpression()), !dbg !8288
  store i64 %maxlen, i64* %maxlen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %maxlen.addr, metadata !8289, metadata !DIExpression()), !dbg !8290
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8291
  %call = call zeroext i8 @ui_is_but_unit(%struct.uiBut* %0), !dbg !8293
  %tobool = icmp ne i8 %call, 0, !dbg !8293
  br i1 %tobool, label %if.then, label %if.end, !dbg !8294

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.UnitSettings** %unit, metadata !8295, metadata !DIExpression()), !dbg !8297
  %1 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8298
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 74, !dbg !8299
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !8299
  %unit1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %2, i32 0, i32 49, !dbg !8300
  %3 = load %struct.UnitSettings*, %struct.UnitSettings** %unit1, align 8, !dbg !8300
  store %struct.UnitSettings* %3, %struct.UnitSettings** %unit, align 8, !dbg !8297
  call void @llvm.dbg.declare(metadata i32* %unit_type, metadata !8301, metadata !DIExpression()), !dbg !8302
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8303
  %call2 = call i32 @uiButGetUnitType(%struct.uiBut* %4), !dbg !8304
  store i32 %call2, i32* %unit_type, align 4, !dbg !8302
  call void @llvm.dbg.declare(metadata i8** %orig_str, metadata !8305, metadata !DIExpression()), !dbg !8306
  %5 = load i8*, i8** %str.addr, align 8, !dbg !8307
  %call3 = call i8* @BLI_strdup(i8* %5), !dbg !8308
  store i8* %call3, i8** %orig_str, align 8, !dbg !8309
  %6 = load i8*, i8** %str.addr, align 8, !dbg !8310
  %7 = load i64, i64* %maxlen.addr, align 8, !dbg !8311
  %conv = trunc i64 %7 to i32, !dbg !8311
  %8 = load i8*, i8** %orig_str, align 8, !dbg !8312
  %9 = load %struct.UnitSettings*, %struct.UnitSettings** %unit, align 8, !dbg !8313
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %9, i32 0, i32 1, !dbg !8314
  %10 = load i8, i8* %system, align 4, !dbg !8314
  %conv4 = zext i8 %10 to i32, !dbg !8313
  %11 = load i32, i32* %unit_type, align 4, !dbg !8315
  %shr = ashr i32 %11, 16, !dbg !8315
  call void @bUnit_ToUnitAltName(i8* %6, i32 %conv, i8* %8, i32 %conv4, i32 %shr), !dbg !8316
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8317
  %13 = load i8*, i8** %orig_str, align 8, !dbg !8318
  call void %12(i8* %13), !dbg !8317
  br label %if.end, !dbg !8319

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8320
}

declare dso_local void @bUnit_ToUnitAltName(i8*, i32, i8*, i32, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_get_but_string_ex(%struct.uiBut* %but, i8* %str, i64 %maxlen, i32 %float_precision) #0 !dbg !8321 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %str.addr = alloca i8*, align 8
  %maxlen.addr = alloca i64, align 8
  %float_precision.addr = alloca i32, align 4
  %type6 = alloca i32, align 4
  %buf = alloca i8*, align 8
  %buf_len = alloca i32, align 4
  %value = alloca i32, align 4
  %ptr = alloca %struct.PointerRNA, align 8
  %value73 = alloca double, align 8
  %prec = alloca i32, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !8325, metadata !DIExpression()), !dbg !8326
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !8327, metadata !DIExpression()), !dbg !8328
  store i64 %maxlen, i64* %maxlen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %maxlen.addr, metadata !8329, metadata !DIExpression()), !dbg !8330
  store i32 %float_precision, i32* %float_precision.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %float_precision.addr, metadata !8331, metadata !DIExpression()), !dbg !8332
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8333
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 55, !dbg !8335
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !8335
  %tobool = icmp ne %struct.PropertyRNA* %1, null, !dbg !8333
  br i1 %tobool, label %land.lhs.true, label %if.else51, !dbg !8336

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8337
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 4, !dbg !8337
  %3 = load i32, i32* %type, align 8, !dbg !8337
  %cmp = icmp eq i32 %3, 3072, !dbg !8337
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8337

lor.lhs.false:                                    ; preds = %land.lhs.true
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8337
  %type1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 4, !dbg !8337
  %5 = load i32, i32* %type1, align 8, !dbg !8337
  %cmp2 = icmp eq i32 %5, 20992, !dbg !8337
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !8337

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8337
  %type4 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 4, !dbg !8337
  %7 = load i32, i32* %type4, align 8, !dbg !8337
  %cmp5 = icmp eq i32 %7, 26624, !dbg !8337
  br i1 %cmp5, label %if.then, label %if.else51, !dbg !8338

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %type6, metadata !8339, metadata !DIExpression()), !dbg !8342
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !8343, metadata !DIExpression()), !dbg !8344
  store i8* null, i8** %buf, align 8, !dbg !8344
  call void @llvm.dbg.declare(metadata i32* %buf_len, metadata !8345, metadata !DIExpression()), !dbg !8346
  %8 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8347
  %rnaprop7 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 55, !dbg !8348
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop7, align 8, !dbg !8348
  %call = call i32 @RNA_property_type(%struct.PropertyRNA* %9), !dbg !8349
  store i32 %call, i32* %type6, align 4, !dbg !8350
  %10 = load i32, i32* %type6, align 4, !dbg !8351
  %cmp8 = icmp eq i32 %10, 3, !dbg !8353
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !8354

if.then9:                                         ; preds = %if.then
  %11 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8355
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %11, i32 0, i32 54, !dbg !8357
  %12 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8358
  %rnaprop10 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 55, !dbg !8359
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop10, align 8, !dbg !8359
  %14 = load i8*, i8** %str.addr, align 8, !dbg !8360
  %15 = load i64, i64* %maxlen.addr, align 8, !dbg !8361
  %conv = trunc i64 %15 to i32, !dbg !8361
  %call11 = call i8* @RNA_property_string_get_alloc(%struct.PointerRNA* %rnapoin, %struct.PropertyRNA* %13, i8* %14, i32 %conv, i32* %buf_len), !dbg !8362
  store i8* %call11, i8** %buf, align 8, !dbg !8363
  br label %if.end35, !dbg !8364

if.else:                                          ; preds = %if.then
  %16 = load i32, i32* %type6, align 4, !dbg !8365
  %cmp12 = icmp eq i32 %16, 4, !dbg !8367
  br i1 %cmp12, label %if.then14, label %if.else24, !dbg !8368

if.then14:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %value, metadata !8369, metadata !DIExpression()), !dbg !8371
  %17 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8372
  %rnapoin15 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %17, i32 0, i32 54, !dbg !8373
  %18 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8374
  %rnaprop16 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %18, i32 0, i32 55, !dbg !8375
  %19 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop16, align 8, !dbg !8375
  %call17 = call i32 @RNA_property_enum_get(%struct.PointerRNA* %rnapoin15, %struct.PropertyRNA* %19), !dbg !8376
  store i32 %call17, i32* %value, align 4, !dbg !8371
  %20 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8377
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %20, i32 0, i32 74, !dbg !8379
  %21 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !8379
  %evil_C = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %21, i32 0, i32 48, !dbg !8380
  %22 = load i8*, i8** %evil_C, align 8, !dbg !8380
  %23 = bitcast i8* %22 to %struct.bContext*, !dbg !8377
  %24 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8381
  %rnapoin18 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %24, i32 0, i32 54, !dbg !8382
  %25 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8383
  %rnaprop19 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %25, i32 0, i32 55, !dbg !8384
  %26 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop19, align 8, !dbg !8384
  %27 = load i32, i32* %value, align 4, !dbg !8385
  %call20 = call zeroext i8 @RNA_property_enum_name(%struct.bContext* %23, %struct.PointerRNA* %rnapoin18, %struct.PropertyRNA* %26, i32 %27, i8** %buf), !dbg !8386
  %tobool21 = icmp ne i8 %call20, 0, !dbg !8386
  br i1 %tobool21, label %if.then22, label %if.end, !dbg !8387

if.then22:                                        ; preds = %if.then14
  %28 = load i8*, i8** %str.addr, align 8, !dbg !8388
  %29 = load i8*, i8** %buf, align 8, !dbg !8390
  %30 = load i64, i64* %maxlen.addr, align 8, !dbg !8391
  %call23 = call i8* @BLI_strncpy(i8* %28, i8* %29, i64 %30), !dbg !8392
  %31 = load i8*, i8** %str.addr, align 8, !dbg !8393
  store i8* %31, i8** %buf, align 8, !dbg !8394
  br label %if.end, !dbg !8395

if.end:                                           ; preds = %if.then22, %if.then14
  br label %if.end34, !dbg !8396

if.else24:                                        ; preds = %if.else
  %32 = load i32, i32* %type6, align 4, !dbg !8397
  %cmp25 = icmp eq i32 %32, 5, !dbg !8399
  br i1 %cmp25, label %if.then27, label %if.else32, !dbg !8400

if.then27:                                        ; preds = %if.else24
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !8401, metadata !DIExpression()), !dbg !8404
  %33 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8405
  %rnapoin28 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %33, i32 0, i32 54, !dbg !8406
  %34 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8407
  %rnaprop29 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %34, i32 0, i32 55, !dbg !8408
  %35 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop29, align 8, !dbg !8408
  call void @RNA_property_pointer_get(%struct.PointerRNA* sret %ptr, %struct.PointerRNA* %rnapoin28, %struct.PropertyRNA* %35), !dbg !8409
  %36 = load i8*, i8** %str.addr, align 8, !dbg !8410
  %37 = load i64, i64* %maxlen.addr, align 8, !dbg !8411
  %conv30 = trunc i64 %37 to i32, !dbg !8411
  %call31 = call i8* @RNA_struct_name_get_alloc(%struct.PointerRNA* %ptr, i8* %36, i32 %conv30, i32* %buf_len), !dbg !8412
  store i8* %call31, i8** %buf, align 8, !dbg !8413
  br label %if.end33, !dbg !8414

if.else32:                                        ; preds = %if.else24
  br label %if.end33

if.end33:                                         ; preds = %if.else32, %if.then27
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then9
  %38 = load i8*, i8** %buf, align 8, !dbg !8415
  %tobool36 = icmp ne i8* %38, null, !dbg !8415
  br i1 %tobool36, label %if.else38, label %if.then37, !dbg !8417

if.then37:                                        ; preds = %if.end35
  %39 = load i8*, i8** %str.addr, align 8, !dbg !8418
  %arrayidx = getelementptr inbounds i8, i8* %39, i64 0, !dbg !8418
  store i8 0, i8* %arrayidx, align 1, !dbg !8420
  br label %if.end50, !dbg !8421

if.else38:                                        ; preds = %if.end35
  %40 = load i8*, i8** %buf, align 8, !dbg !8422
  %tobool39 = icmp ne i8* %40, null, !dbg !8422
  br i1 %tobool39, label %land.lhs.true40, label %if.end49, !dbg !8424

land.lhs.true40:                                  ; preds = %if.else38
  %41 = load i8*, i8** %buf, align 8, !dbg !8425
  %42 = load i8*, i8** %str.addr, align 8, !dbg !8426
  %cmp41 = icmp ne i8* %41, %42, !dbg !8427
  br i1 %cmp41, label %if.then43, label %if.end49, !dbg !8428

if.then43:                                        ; preds = %land.lhs.true40
  %43 = load i8*, i8** %str.addr, align 8, !dbg !8429
  %44 = load i8*, i8** %buf, align 8, !dbg !8431
  %45 = load i64, i64* %maxlen.addr, align 8, !dbg !8432
  %46 = load i32, i32* %buf_len, align 4, !dbg !8432
  %add = add nsw i32 %46, 1, !dbg !8432
  %conv44 = sext i32 %add to i64, !dbg !8432
  %cmp45 = icmp ult i64 %45, %conv44, !dbg !8432
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !8432

cond.true:                                        ; preds = %if.then43
  %47 = load i64, i64* %maxlen.addr, align 8, !dbg !8432
  br label %cond.end, !dbg !8432

cond.false:                                       ; preds = %if.then43
  %48 = load i32, i32* %buf_len, align 4, !dbg !8432
  %add47 = add nsw i32 %48, 1, !dbg !8432
  %conv48 = sext i32 %add47 to i64, !dbg !8432
  br label %cond.end, !dbg !8432

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %47, %cond.true ], [ %conv48, %cond.false ], !dbg !8432
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %43, i8* align 1 %44, i64 %cond, i1 false), !dbg !8433
  %49 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8434
  %50 = load i8*, i8** %buf, align 8, !dbg !8435
  call void %49(i8* %50), !dbg !8434
  br label %if.end49, !dbg !8436

if.end49:                                         ; preds = %cond.end, %land.lhs.true40, %if.else38
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then37
  br label %if.end99, !dbg !8437

if.else51:                                        ; preds = %lor.lhs.false3, %entry
  %51 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8438
  %type52 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %51, i32 0, i32 4, !dbg !8440
  %52 = load i32, i32* %type52, align 8, !dbg !8440
  %cmp53 = icmp eq i32 %52, 3072, !dbg !8441
  br i1 %cmp53, label %if.then55, label %if.else57, !dbg !8442

if.then55:                                        ; preds = %if.else51
  %53 = load i8*, i8** %str.addr, align 8, !dbg !8443
  %54 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8445
  %poin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %54, i32 0, i32 19, !dbg !8446
  %55 = load i8*, i8** %poin, align 8, !dbg !8446
  %56 = load i64, i64* %maxlen.addr, align 8, !dbg !8447
  %call56 = call i8* @BLI_strncpy(i8* %53, i8* %55, i64 %56), !dbg !8448
  br label %if.end99, !dbg !8449

if.else57:                                        ; preds = %if.else51
  %57 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8450
  %type58 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %57, i32 0, i32 4, !dbg !8450
  %58 = load i32, i32* %type58, align 8, !dbg !8450
  %cmp59 = icmp eq i32 %58, 20992, !dbg !8450
  br i1 %cmp59, label %if.then65, label %lor.lhs.false61, !dbg !8450

lor.lhs.false61:                                  ; preds = %if.else57
  %59 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8450
  %type62 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %59, i32 0, i32 4, !dbg !8450
  %60 = load i32, i32* %type62, align 8, !dbg !8450
  %cmp63 = icmp eq i32 %60, 26624, !dbg !8450
  br i1 %cmp63, label %if.then65, label %if.else68, !dbg !8452

if.then65:                                        ; preds = %lor.lhs.false61, %if.else57
  %61 = load i8*, i8** %str.addr, align 8, !dbg !8453
  %62 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8455
  %poin66 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %62, i32 0, i32 19, !dbg !8456
  %63 = load i8*, i8** %poin66, align 8, !dbg !8456
  %64 = load i64, i64* %maxlen.addr, align 8, !dbg !8457
  %call67 = call i8* @BLI_strncpy(i8* %61, i8* %63, i64 %64), !dbg !8458
  br label %if.end99, !dbg !8459

if.else68:                                        ; preds = %lor.lhs.false61
  %65 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8460
  %66 = load i8*, i8** %str.addr, align 8, !dbg !8462
  %67 = load i64, i64* %maxlen.addr, align 8, !dbg !8463
  %call69 = call zeroext i8 @ui_but_anim_expression_get(%struct.uiBut* %65, i8* %66, i64 %67), !dbg !8464
  %tobool70 = icmp ne i8 %call69, 0, !dbg !8464
  br i1 %tobool70, label %if.then71, label %if.else72, !dbg !8465

if.then71:                                        ; preds = %if.else68
  br label %if.end96, !dbg !8466

if.else72:                                        ; preds = %if.else68
  call void @llvm.dbg.declare(metadata double* %value73, metadata !8468, metadata !DIExpression()), !dbg !8470
  %68 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8471
  %call74 = call double @ui_get_but_val(%struct.uiBut* %68), !dbg !8472
  store double %call74, double* %value73, align 8, !dbg !8473
  %69 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8474
  %call75 = call zeroext i8 @ui_is_but_float(%struct.uiBut* %69), !dbg !8476
  %tobool76 = icmp ne i8 %call75, 0, !dbg !8476
  br i1 %tobool76, label %if.then77, label %if.else92, !dbg !8477

if.then77:                                        ; preds = %if.else72
  %70 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8478
  %call78 = call zeroext i8 @ui_is_but_unit(%struct.uiBut* %70), !dbg !8481
  %tobool79 = icmp ne i8 %call78, 0, !dbg !8481
  br i1 %tobool79, label %if.then80, label %if.else82, !dbg !8482

if.then80:                                        ; preds = %if.then77
  %71 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8483
  %72 = load i8*, i8** %str.addr, align 8, !dbg !8485
  %73 = load i64, i64* %maxlen.addr, align 8, !dbg !8486
  %conv81 = trunc i64 %73 to i32, !dbg !8486
  %74 = load double, double* %value73, align 8, !dbg !8487
  %75 = load i32, i32* %float_precision.addr, align 4, !dbg !8488
  call void @ui_get_but_string_unit(%struct.uiBut* %71, i8* %72, i32 %conv81, double %74, i8 zeroext 0, i32 %75), !dbg !8489
  br label %if.end91, !dbg !8490

if.else82:                                        ; preds = %if.then77
  call void @llvm.dbg.declare(metadata i32* %prec, metadata !8491, metadata !DIExpression()), !dbg !8493
  %76 = load i32, i32* %float_precision.addr, align 4, !dbg !8494
  %cmp83 = icmp eq i32 %76, -1, !dbg !8495
  br i1 %cmp83, label %cond.true85, label %cond.false87, !dbg !8496

cond.true85:                                      ; preds = %if.else82
  %77 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8497
  %78 = load double, double* %value73, align 8, !dbg !8498
  %call86 = call i32 @ui_but_float_precision(%struct.uiBut* %77, double %78), !dbg !8499
  br label %cond.end88, !dbg !8496

cond.false87:                                     ; preds = %if.else82
  %79 = load i32, i32* %float_precision.addr, align 4, !dbg !8500
  br label %cond.end88, !dbg !8496

cond.end88:                                       ; preds = %cond.false87, %cond.true85
  %cond89 = phi i32 [ %call86, %cond.true85 ], [ %79, %cond.false87 ], !dbg !8496
  store i32 %cond89, i32* %prec, align 4, !dbg !8493
  %80 = load i8*, i8** %str.addr, align 8, !dbg !8501
  %81 = load i64, i64* %maxlen.addr, align 8, !dbg !8502
  %82 = load i32, i32* %prec, align 4, !dbg !8503
  %83 = load double, double* %value73, align 8, !dbg !8504
  %call90 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %80, i64 %81, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i32 %82, double %83), !dbg !8505
  br label %if.end91

if.end91:                                         ; preds = %cond.end88, %if.then80
  br label %if.end95, !dbg !8506

if.else92:                                        ; preds = %if.else72
  %84 = load i8*, i8** %str.addr, align 8, !dbg !8507
  %85 = load i64, i64* %maxlen.addr, align 8, !dbg !8508
  %86 = load double, double* %value73, align 8, !dbg !8509
  %conv93 = fptosi double %86 to i32, !dbg !8510
  %call94 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %84, i64 %85, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i32 %conv93), !dbg !8511
  br label %if.end95

if.end95:                                         ; preds = %if.else92, %if.end91
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then71
  br label %if.end97

if.end97:                                         ; preds = %if.end96
  br label %if.end98

if.end98:                                         ; preds = %if.end97
  br label %if.end99

if.end99:                                         ; preds = %if.then55, %if.then65, %if.end98, %if.end50
  ret void, !dbg !8512
}

declare dso_local i8* @RNA_property_string_get_alloc(%struct.PointerRNA*, %struct.PropertyRNA*, i8*, i32, i32*) #3

declare dso_local zeroext i8 @RNA_property_enum_name(%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i32, i8**) #3

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #3

declare dso_local void @RNA_property_pointer_get(%struct.PointerRNA* sret, %struct.PointerRNA*, %struct.PropertyRNA*) #3

declare dso_local i8* @RNA_struct_name_get_alloc(%struct.PointerRNA*, i8*, i32, i32*) #3

declare dso_local zeroext i8 @ui_but_anim_expression_get(%struct.uiBut*, i8*, i64) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ui_get_but_string_unit(%struct.uiBut* %but, i8* %str, i32 %len_max, double %value, i8 zeroext %pad, i32 %float_precision) #0 !dbg !8513 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %str.addr = alloca i8*, align 8
  %len_max.addr = alloca i32, align 4
  %value.addr = alloca double, align 8
  %pad.addr = alloca i8, align 1
  %float_precision.addr = alloca i32, align 4
  %unit = alloca %struct.UnitSettings*, align 8
  %do_split = alloca i8, align 1
  %unit_type = alloca i32, align 4
  %precision = alloca i32, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !8516, metadata !DIExpression()), !dbg !8517
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !8518, metadata !DIExpression()), !dbg !8519
  store i32 %len_max, i32* %len_max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len_max.addr, metadata !8520, metadata !DIExpression()), !dbg !8521
  store double %value, double* %value.addr, align 8
  call void @llvm.dbg.declare(metadata double* %value.addr, metadata !8522, metadata !DIExpression()), !dbg !8523
  store i8 %pad, i8* %pad.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %pad.addr, metadata !8524, metadata !DIExpression()), !dbg !8525
  store i32 %float_precision, i32* %float_precision.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %float_precision.addr, metadata !8526, metadata !DIExpression()), !dbg !8527
  call void @llvm.dbg.declare(metadata %struct.UnitSettings** %unit, metadata !8528, metadata !DIExpression()), !dbg !8529
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8530
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 74, !dbg !8531
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !8531
  %unit1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 49, !dbg !8532
  %2 = load %struct.UnitSettings*, %struct.UnitSettings** %unit1, align 8, !dbg !8532
  store %struct.UnitSettings* %2, %struct.UnitSettings** %unit, align 8, !dbg !8529
  call void @llvm.dbg.declare(metadata i8* %do_split, metadata !8533, metadata !DIExpression()), !dbg !8534
  %3 = load %struct.UnitSettings*, %struct.UnitSettings** %unit, align 8, !dbg !8535
  %flag = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %3, i32 0, i32 3, !dbg !8536
  %4 = load i16, i16* %flag, align 2, !dbg !8536
  %conv = sext i16 %4 to i32, !dbg !8535
  %and = and i32 %conv, 1, !dbg !8537
  %cmp = icmp ne i32 %and, 0, !dbg !8538
  %conv2 = zext i1 %cmp to i32, !dbg !8538
  %conv3 = trunc i32 %conv2 to i8, !dbg !8539
  store i8 %conv3, i8* %do_split, align 1, !dbg !8534
  call void @llvm.dbg.declare(metadata i32* %unit_type, metadata !8540, metadata !DIExpression()), !dbg !8541
  %5 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8542
  %call = call i32 @uiButGetUnitType(%struct.uiBut* %5), !dbg !8543
  store i32 %call, i32* %unit_type, align 4, !dbg !8541
  call void @llvm.dbg.declare(metadata i32* %precision, metadata !8544, metadata !DIExpression()), !dbg !8545
  %6 = load %struct.UnitSettings*, %struct.UnitSettings** %unit, align 8, !dbg !8546
  %scale_length = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %6, i32 0, i32 0, !dbg !8548
  %7 = load float, float* %scale_length, align 4, !dbg !8548
  %cmp4 = fcmp olt float %7, 0x3F1A36E2E0000000, !dbg !8549
  br i1 %cmp4, label %if.then, label %if.end, !dbg !8550

if.then:                                          ; preds = %entry
  %8 = load %struct.UnitSettings*, %struct.UnitSettings** %unit, align 8, !dbg !8551
  %scale_length6 = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %8, i32 0, i32 0, !dbg !8552
  store float 1.000000e+00, float* %scale_length6, align 4, !dbg !8553
  br label %if.end, !dbg !8551

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32, i32* %float_precision.addr, align 4, !dbg !8554
  %cmp7 = icmp eq i32 %9, -1, !dbg !8556
  br i1 %cmp7, label %if.then9, label %if.else19, !dbg !8557

if.then9:                                         ; preds = %if.end
  %10 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8558
  %a2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 25, !dbg !8560
  %11 = load float, float* %a2, align 4, !dbg !8560
  %conv10 = fptosi float %11 to i32, !dbg !8561
  store i32 %conv10, i32* %precision, align 4, !dbg !8562
  %12 = load i32, i32* %precision, align 4, !dbg !8563
  %cmp11 = icmp sgt i32 %12, 7, !dbg !8565
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !8566

if.then13:                                        ; preds = %if.then9
  store i32 7, i32* %precision, align 4, !dbg !8567
  br label %if.end18, !dbg !8568

if.else:                                          ; preds = %if.then9
  %13 = load i32, i32* %precision, align 4, !dbg !8569
  %cmp14 = icmp eq i32 %13, -1, !dbg !8571
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !8572

if.then16:                                        ; preds = %if.else
  store i32 2, i32* %precision, align 4, !dbg !8573
  br label %if.end17, !dbg !8574

if.end17:                                         ; preds = %if.then16, %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then13
  br label %if.end20, !dbg !8575

if.else19:                                        ; preds = %if.end
  %14 = load i32, i32* %float_precision.addr, align 4, !dbg !8576
  store i32 %14, i32* %precision, align 4, !dbg !8578
  br label %if.end20

if.end20:                                         ; preds = %if.else19, %if.end18
  %15 = load i8*, i8** %str.addr, align 8, !dbg !8579
  %16 = load i32, i32* %len_max.addr, align 4, !dbg !8580
  %17 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8581
  %18 = load double, double* %value.addr, align 8, !dbg !8582
  %call21 = call double @ui_get_but_scale_unit(%struct.uiBut* %17, double %18), !dbg !8583
  %19 = load i32, i32* %precision, align 4, !dbg !8584
  %20 = load %struct.UnitSettings*, %struct.UnitSettings** %unit, align 8, !dbg !8585
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %20, i32 0, i32 1, !dbg !8586
  %21 = load i8, i8* %system, align 4, !dbg !8586
  %conv22 = zext i8 %21 to i32, !dbg !8585
  %22 = load i32, i32* %unit_type, align 4, !dbg !8587
  %shr = ashr i32 %22, 16, !dbg !8587
  %23 = load i8, i8* %do_split, align 1, !dbg !8588
  %24 = load i8, i8* %pad.addr, align 1, !dbg !8589
  %call23 = call i64 @bUnit_AsString(i8* %15, i32 %16, double %call21, i32 %19, i32 %conv22, i32 %shr, i8 zeroext %23, i8 zeroext %24), !dbg !8590
  ret void, !dbg !8591
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ui_but_float_precision(%struct.uiBut* %but, double %value) #0 !dbg !8592 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %value.addr = alloca double, align 8
  %prec = alloca i32, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !8595, metadata !DIExpression()), !dbg !8596
  store double %value, double* %value.addr, align 8
  call void @llvm.dbg.declare(metadata double* %value.addr, metadata !8597, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.declare(metadata i32* %prec, metadata !8599, metadata !DIExpression()), !dbg !8600
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8601
  %a2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 25, !dbg !8602
  %1 = load float, float* %a2, align 4, !dbg !8602
  %conv = fptosi float %1 to i32, !dbg !8603
  store i32 %conv, i32* %prec, align 4, !dbg !8600
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8604
  %call = call zeroext i8 @ui_is_but_unit_radians(%struct.uiBut* %2), !dbg !8606
  %conv1 = zext i8 %call to i32, !dbg !8606
  %tobool = icmp ne i32 %conv1, 0, !dbg !8606
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !8607

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %prec, align 4, !dbg !8608
  %cmp = icmp slt i32 %3, 5, !dbg !8609
  br i1 %cmp, label %if.then, label %if.else, !dbg !8610

if.then:                                          ; preds = %land.lhs.true
  store i32 5, i32* %prec, align 4, !dbg !8611
  br label %if.end8, !dbg !8613

if.else:                                          ; preds = %land.lhs.true, %entry
  %4 = load i32, i32* %prec, align 4, !dbg !8614
  %cmp3 = icmp eq i32 %4, -1, !dbg !8616
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !8617

if.then5:                                         ; preds = %if.else
  %5 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8618
  %hardmax = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 21, !dbg !8620
  %6 = load float, float* %hardmax, align 4, !dbg !8620
  %cmp6 = fcmp olt float %6, 0x4024008320000000, !dbg !8621
  %7 = zext i1 %cmp6 to i64, !dbg !8622
  %cond = select i1 %cmp6, i32 3, i32 2, !dbg !8622
  store i32 %cond, i32* %prec, align 4, !dbg !8623
  br label %if.end, !dbg !8624

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  %8 = load i32, i32* %prec, align 4, !dbg !8625
  %9 = load double, double* %value.addr, align 8, !dbg !8626
  %call9 = call i32 @uiFloatPrecisionCalc(i32 %8, double %9), !dbg !8627
  ret i32 %call9, !dbg !8628
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_get_but_string(%struct.uiBut* %but, i8* %str, i64 %maxlen) #0 !dbg !8629 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %str.addr = alloca i8*, align 8
  %maxlen.addr = alloca i64, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !8632, metadata !DIExpression()), !dbg !8633
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !8634, metadata !DIExpression()), !dbg !8635
  store i64 %maxlen, i64* %maxlen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %maxlen.addr, metadata !8636, metadata !DIExpression()), !dbg !8637
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8638
  %1 = load i8*, i8** %str.addr, align 8, !dbg !8639
  %2 = load i64, i64* %maxlen.addr, align 8, !dbg !8640
  call void @ui_get_but_string_ex(%struct.uiBut* %0, i8* %1, i64 %2, i32 -1), !dbg !8641
  ret void, !dbg !8642
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ui_set_but_string_eval_num(%struct.bContext* %C, %struct.uiBut* %but, i8* %str, double* %value) #0 !dbg !8643 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  %str.addr = alloca i8*, align 8
  %value.addr = alloca double*, align 8
  %ok = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8646, metadata !DIExpression()), !dbg !8647
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !8648, metadata !DIExpression()), !dbg !8649
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !8650, metadata !DIExpression()), !dbg !8651
  store double* %value, double** %value.addr, align 8
  call void @llvm.dbg.declare(metadata double** %value.addr, metadata !8652, metadata !DIExpression()), !dbg !8653
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !8654, metadata !DIExpression()), !dbg !8655
  store i8 0, i8* %ok, align 1, !dbg !8655
  %0 = load i8*, i8** %str.addr, align 8, !dbg !8656
  %call = call double @atof(i8* %0) #8, !dbg !8657
  %1 = load double*, double** %value.addr, align 8, !dbg !8658
  store double %call, double* %1, align 8, !dbg !8659
  store i8 1, i8* %ok, align 1, !dbg !8660
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8661
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8662
  %4 = load i8, i8* %ok, align 1, !dbg !8663
  ret i8 %4, !dbg !8664
}

; Function Attrs: nounwind readonly
declare dso_local double @atof(i8*) #4

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ui_set_but_string(%struct.bContext* %C, %struct.uiBut* %but, i8* %str) #0 !dbg !8665 {
entry:
  %retval = alloca i8, align 1
  %C.addr = alloca %struct.bContext*, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  %str.addr = alloca i8*, align 8
  %type9 = alloca i32, align 4
  %ptr = alloca %struct.PointerRNA, align 8
  %rptr = alloca %struct.PointerRNA, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %value = alloca i32, align 4
  %value89 = alloca double, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8668, metadata !DIExpression()), !dbg !8669
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !8670, metadata !DIExpression()), !dbg !8671
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !8672, metadata !DIExpression()), !dbg !8673
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8674
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 55, !dbg !8676
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !8676
  %tobool = icmp ne %struct.PropertyRNA* %1, null, !dbg !8674
  br i1 %tobool, label %land.lhs.true, label %if.else48, !dbg !8677

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8678
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 4, !dbg !8678
  %3 = load i32, i32* %type, align 8, !dbg !8678
  %cmp = icmp eq i32 %3, 3072, !dbg !8678
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8678

lor.lhs.false:                                    ; preds = %land.lhs.true
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8678
  %type1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 4, !dbg !8678
  %5 = load i32, i32* %type1, align 8, !dbg !8678
  %cmp2 = icmp eq i32 %5, 20992, !dbg !8678
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !8678

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8678
  %type4 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 4, !dbg !8678
  %7 = load i32, i32* %type4, align 8, !dbg !8678
  %cmp5 = icmp eq i32 %7, 26624, !dbg !8678
  br i1 %cmp5, label %if.then, label %if.else48, !dbg !8679

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %land.lhs.true
  %8 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8680
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 54, !dbg !8683
  %9 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8684
  %rnaprop6 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 55, !dbg !8685
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop6, align 8, !dbg !8685
  %call = call zeroext i8 @RNA_property_editable(%struct.PointerRNA* %rnapoin, %struct.PropertyRNA* %10), !dbg !8686
  %tobool7 = icmp ne i8 %call, 0, !dbg !8686
  br i1 %tobool7, label %if.then8, label %if.end47, !dbg !8687

if.then8:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %type9, metadata !8688, metadata !DIExpression()), !dbg !8690
  %11 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8691
  %rnaprop10 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %11, i32 0, i32 55, !dbg !8692
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop10, align 8, !dbg !8692
  %call11 = call i32 @RNA_property_type(%struct.PropertyRNA* %12), !dbg !8693
  store i32 %call11, i32* %type9, align 4, !dbg !8694
  %13 = load i32, i32* %type9, align 4, !dbg !8695
  %cmp12 = icmp eq i32 %13, 3, !dbg !8697
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !8698

if.then13:                                        ; preds = %if.then8
  %14 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8699
  %rnapoin14 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %14, i32 0, i32 54, !dbg !8701
  %15 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8702
  %rnaprop15 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 55, !dbg !8703
  %16 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop15, align 8, !dbg !8703
  %17 = load i8*, i8** %str.addr, align 8, !dbg !8704
  call void @RNA_property_string_set(%struct.PointerRNA* %rnapoin14, %struct.PropertyRNA* %16, i8* %17), !dbg !8705
  store i8 1, i8* %retval, align 1, !dbg !8706
  br label %return, !dbg !8706

if.else:                                          ; preds = %if.then8
  %18 = load i32, i32* %type9, align 4, !dbg !8707
  %cmp16 = icmp eq i32 %18, 5, !dbg !8709
  br i1 %cmp16, label %if.then17, label %if.else31, !dbg !8710

if.then17:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !8711, metadata !DIExpression()), !dbg !8713
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %rptr, metadata !8714, metadata !DIExpression()), !dbg !8715
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !8716, metadata !DIExpression()), !dbg !8717
  %19 = load i8*, i8** %str.addr, align 8, !dbg !8718
  %arrayidx = getelementptr inbounds i8, i8* %19, i64 0, !dbg !8718
  %20 = load i8, i8* %arrayidx, align 1, !dbg !8718
  %conv = zext i8 %20 to i32, !dbg !8718
  %cmp18 = icmp eq i32 %conv, 0, !dbg !8720
  br i1 %cmp18, label %if.then20, label %if.else23, !dbg !8721

if.then20:                                        ; preds = %if.then17
  %21 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8722
  %rnapoin21 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %21, i32 0, i32 54, !dbg !8724
  %22 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8725
  %rnaprop22 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %22, i32 0, i32 55, !dbg !8726
  %23 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop22, align 8, !dbg !8726
  call void @RNA_property_pointer_set(%struct.PointerRNA* %rnapoin21, %struct.PropertyRNA* %23, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 @PointerRNA_NULL), !dbg !8727
  store i8 1, i8* %retval, align 1, !dbg !8728
  br label %return, !dbg !8728

if.else23:                                        ; preds = %if.then17
  %24 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8729
  %rnasearchpoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %24, i32 0, i32 57, !dbg !8731
  %25 = bitcast %struct.PointerRNA* %ptr to i8*, !dbg !8731
  %26 = bitcast %struct.PointerRNA* %rnasearchpoin to i8*, !dbg !8731
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false), !dbg !8731
  %27 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8732
  %rnasearchprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %27, i32 0, i32 58, !dbg !8733
  %28 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnasearchprop, align 8, !dbg !8733
  store %struct.PropertyRNA* %28, %struct.PropertyRNA** %prop, align 8, !dbg !8734
  %29 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8735
  %tobool24 = icmp ne %struct.PropertyRNA* %29, null, !dbg !8735
  br i1 %tobool24, label %land.lhs.true25, label %if.end, !dbg !8737

land.lhs.true25:                                  ; preds = %if.else23
  %30 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8738
  %31 = load i8*, i8** %str.addr, align 8, !dbg !8739
  %call26 = call i32 @RNA_property_collection_lookup_string(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %30, i8* %31, %struct.PointerRNA* %rptr), !dbg !8740
  %tobool27 = icmp ne i32 %call26, 0, !dbg !8740
  br i1 %tobool27, label %if.then28, label %if.end, !dbg !8741

if.then28:                                        ; preds = %land.lhs.true25
  %32 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8742
  %rnapoin29 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %32, i32 0, i32 54, !dbg !8743
  %33 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8744
  %rnaprop30 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %33, i32 0, i32 55, !dbg !8745
  %34 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop30, align 8, !dbg !8745
  call void @RNA_property_pointer_set(%struct.PointerRNA* %rnapoin29, %struct.PropertyRNA* %34, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 %rptr), !dbg !8746
  br label %if.end, !dbg !8746

if.end:                                           ; preds = %if.then28, %land.lhs.true25, %if.else23
  store i8 1, i8* %retval, align 1, !dbg !8747
  br label %return, !dbg !8747

if.else31:                                        ; preds = %if.else
  %35 = load i32, i32* %type9, align 4, !dbg !8748
  %cmp32 = icmp eq i32 %35, 4, !dbg !8750
  br i1 %cmp32, label %if.then34, label %if.else43, !dbg !8751

if.then34:                                        ; preds = %if.else31
  call void @llvm.dbg.declare(metadata i32* %value, metadata !8752, metadata !DIExpression()), !dbg !8754
  %36 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8755
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %36, i32 0, i32 74, !dbg !8757
  %37 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !8757
  %evil_C = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %37, i32 0, i32 48, !dbg !8758
  %38 = load i8*, i8** %evil_C, align 8, !dbg !8758
  %39 = bitcast i8* %38 to %struct.bContext*, !dbg !8755
  %40 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8759
  %rnapoin35 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %40, i32 0, i32 54, !dbg !8760
  %41 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8761
  %rnaprop36 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %41, i32 0, i32 55, !dbg !8762
  %42 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop36, align 8, !dbg !8762
  %43 = load i8*, i8** %str.addr, align 8, !dbg !8763
  %call37 = call zeroext i8 @RNA_property_enum_value(%struct.bContext* %39, %struct.PointerRNA* %rnapoin35, %struct.PropertyRNA* %42, i8* %43, i32* %value), !dbg !8764
  %tobool38 = icmp ne i8 %call37, 0, !dbg !8764
  br i1 %tobool38, label %if.then39, label %if.end42, !dbg !8765

if.then39:                                        ; preds = %if.then34
  %44 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8766
  %rnapoin40 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %44, i32 0, i32 54, !dbg !8768
  %45 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8769
  %rnaprop41 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %45, i32 0, i32 55, !dbg !8770
  %46 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop41, align 8, !dbg !8770
  %47 = load i32, i32* %value, align 4, !dbg !8771
  call void @RNA_property_enum_set(%struct.PointerRNA* %rnapoin40, %struct.PropertyRNA* %46, i32 %47), !dbg !8772
  store i8 1, i8* %retval, align 1, !dbg !8773
  br label %return, !dbg !8773

if.end42:                                         ; preds = %if.then34
  store i8 0, i8* %retval, align 1, !dbg !8774
  br label %return, !dbg !8774

if.else43:                                        ; preds = %if.else31
  br label %if.end44

if.end44:                                         ; preds = %if.else43
  br label %if.end45

if.end45:                                         ; preds = %if.end44
  br label %if.end46

if.end46:                                         ; preds = %if.end45
  br label %if.end47, !dbg !8775

if.end47:                                         ; preds = %if.end46, %if.then
  br label %if.end117, !dbg !8776

if.else48:                                        ; preds = %lor.lhs.false3, %entry
  %48 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8777
  %type49 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %48, i32 0, i32 4, !dbg !8779
  %49 = load i32, i32* %type49, align 8, !dbg !8779
  %cmp50 = icmp eq i32 %49, 3072, !dbg !8780
  br i1 %cmp50, label %if.then52, label %if.else64, !dbg !8781

if.then52:                                        ; preds = %if.else48
  %50 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8782
  %call53 = call zeroext i8 @ui_is_but_utf8(%struct.uiBut* %50), !dbg !8785
  %tobool54 = icmp ne i8 %call53, 0, !dbg !8785
  br i1 %tobool54, label %if.then55, label %if.else58, !dbg !8786

if.then55:                                        ; preds = %if.then52
  %51 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8787
  %poin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %51, i32 0, i32 19, !dbg !8788
  %52 = load i8*, i8** %poin, align 8, !dbg !8788
  %53 = load i8*, i8** %str.addr, align 8, !dbg !8789
  %54 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8790
  %hardmax = getelementptr inbounds %struct.uiBut, %struct.uiBut* %54, i32 0, i32 21, !dbg !8791
  %55 = load float, float* %hardmax, align 4, !dbg !8791
  %conv56 = fptoui float %55 to i64, !dbg !8790
  %call57 = call i8* @BLI_strncpy_utf8(i8* %52, i8* %53, i64 %conv56), !dbg !8792
  br label %if.end63, !dbg !8792

if.else58:                                        ; preds = %if.then52
  %56 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8793
  %poin59 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %56, i32 0, i32 19, !dbg !8794
  %57 = load i8*, i8** %poin59, align 8, !dbg !8794
  %58 = load i8*, i8** %str.addr, align 8, !dbg !8795
  %59 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8796
  %hardmax60 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %59, i32 0, i32 21, !dbg !8797
  %60 = load float, float* %hardmax60, align 4, !dbg !8797
  %conv61 = fptoui float %60 to i64, !dbg !8796
  %call62 = call i8* @BLI_strncpy(i8* %57, i8* %58, i64 %conv61), !dbg !8798
  br label %if.end63

if.end63:                                         ; preds = %if.else58, %if.then55
  store i8 1, i8* %retval, align 1, !dbg !8799
  br label %return, !dbg !8799

if.else64:                                        ; preds = %if.else48
  %61 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8800
  %type65 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %61, i32 0, i32 4, !dbg !8800
  %62 = load i32, i32* %type65, align 8, !dbg !8800
  %cmp66 = icmp eq i32 %62, 20992, !dbg !8800
  br i1 %cmp66, label %if.then72, label %lor.lhs.false68, !dbg !8800

lor.lhs.false68:                                  ; preds = %if.else64
  %63 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8800
  %type69 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %63, i32 0, i32 4, !dbg !8800
  %64 = load i32, i32* %type69, align 8, !dbg !8800
  %cmp70 = icmp eq i32 %64, 26624, !dbg !8800
  br i1 %cmp70, label %if.then72, label %if.else77, !dbg !8802

if.then72:                                        ; preds = %lor.lhs.false68, %if.else64
  %65 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8803
  %poin73 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %65, i32 0, i32 19, !dbg !8805
  %66 = load i8*, i8** %poin73, align 8, !dbg !8805
  %67 = load i8*, i8** %str.addr, align 8, !dbg !8806
  %68 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8807
  %hardmax74 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %68, i32 0, i32 21, !dbg !8808
  %69 = load float, float* %hardmax74, align 4, !dbg !8808
  %conv75 = fptoui float %69 to i64, !dbg !8807
  %call76 = call i8* @BLI_strncpy(i8* %66, i8* %67, i64 %conv75), !dbg !8809
  store i8 1, i8* %retval, align 1, !dbg !8810
  br label %return, !dbg !8810

if.else77:                                        ; preds = %lor.lhs.false68
  %70 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8811
  %71 = load i8*, i8** %str.addr, align 8, !dbg !8813
  %call78 = call zeroext i8 @ui_but_anim_expression_set(%struct.uiBut* %70, i8* %71), !dbg !8814
  %tobool79 = icmp ne i8 %call78, 0, !dbg !8814
  br i1 %tobool79, label %if.then80, label %if.else81, !dbg !8815

if.then80:                                        ; preds = %if.else77
  store i8 1, i8* %retval, align 1, !dbg !8816
  br label %return, !dbg !8816

if.else81:                                        ; preds = %if.else77
  %72 = load i8*, i8** %str.addr, align 8, !dbg !8818
  %arrayidx82 = getelementptr inbounds i8, i8* %72, i64 0, !dbg !8818
  %73 = load i8, i8* %arrayidx82, align 1, !dbg !8818
  %conv83 = zext i8 %73 to i32, !dbg !8818
  %cmp84 = icmp eq i32 %conv83, 35, !dbg !8820
  br i1 %cmp84, label %if.then86, label %if.else88, !dbg !8821

if.then86:                                        ; preds = %if.else81
  %74 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8822
  %75 = load i8*, i8** %str.addr, align 8, !dbg !8824
  %add.ptr = getelementptr inbounds i8, i8* %75, i64 1, !dbg !8825
  %call87 = call zeroext i8 @ui_but_anim_expression_create(%struct.uiBut* %74, i8* %add.ptr), !dbg !8826
  store i8 %call87, i8* %retval, align 1, !dbg !8827
  br label %return, !dbg !8827

if.else88:                                        ; preds = %if.else81
  call void @llvm.dbg.declare(metadata double* %value89, metadata !8828, metadata !DIExpression()), !dbg !8830
  %76 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8831
  %77 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8833
  %78 = load i8*, i8** %str.addr, align 8, !dbg !8834
  %call90 = call zeroext i8 @ui_set_but_string_eval_num(%struct.bContext* %76, %struct.uiBut* %77, i8* %78, double* %value89), !dbg !8835
  %conv91 = zext i8 %call90 to i32, !dbg !8835
  %cmp92 = icmp eq i32 %conv91, 0, !dbg !8836
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !8837

if.then94:                                        ; preds = %if.else88
  store i8 0, i8* %retval, align 1, !dbg !8838
  br label %return, !dbg !8838

if.end95:                                         ; preds = %if.else88
  %79 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8840
  %call96 = call zeroext i8 @ui_is_but_float(%struct.uiBut* %79), !dbg !8842
  %tobool97 = icmp ne i8 %call96, 0, !dbg !8842
  br i1 %tobool97, label %if.end101, label %if.then98, !dbg !8843

if.then98:                                        ; preds = %if.end95
  %80 = load double, double* %value89, align 8, !dbg !8844
  %add = fadd double %80, 5.000000e-01, !dbg !8845
  %81 = call double @llvm.floor.f64(double %add), !dbg !8846
  %conv99 = fptosi double %81 to i32, !dbg !8847
  %conv100 = sitofp i32 %conv99 to double, !dbg !8847
  store double %conv100, double* %value89, align 8, !dbg !8848
  br label %if.end101, !dbg !8849

if.end101:                                        ; preds = %if.then98, %if.end95
  %82 = load double, double* %value89, align 8, !dbg !8850
  %83 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8852
  %hardmin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %83, i32 0, i32 20, !dbg !8853
  %84 = load float, float* %hardmin, align 8, !dbg !8853
  %conv102 = fpext float %84 to double, !dbg !8854
  %cmp103 = fcmp olt double %82, %conv102, !dbg !8855
  br i1 %cmp103, label %if.then105, label %if.end108, !dbg !8856

if.then105:                                       ; preds = %if.end101
  %85 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8857
  %hardmin106 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %85, i32 0, i32 20, !dbg !8858
  %86 = load float, float* %hardmin106, align 8, !dbg !8858
  %conv107 = fpext float %86 to double, !dbg !8857
  store double %conv107, double* %value89, align 8, !dbg !8859
  br label %if.end108, !dbg !8860

if.end108:                                        ; preds = %if.then105, %if.end101
  %87 = load double, double* %value89, align 8, !dbg !8861
  %88 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8863
  %hardmax109 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %88, i32 0, i32 21, !dbg !8864
  %89 = load float, float* %hardmax109, align 4, !dbg !8864
  %conv110 = fpext float %89 to double, !dbg !8865
  %cmp111 = fcmp ogt double %87, %conv110, !dbg !8866
  br i1 %cmp111, label %if.then113, label %if.end116, !dbg !8867

if.then113:                                       ; preds = %if.end108
  %90 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8868
  %hardmax114 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %90, i32 0, i32 21, !dbg !8869
  %91 = load float, float* %hardmax114, align 4, !dbg !8869
  %conv115 = fpext float %91 to double, !dbg !8868
  store double %conv115, double* %value89, align 8, !dbg !8870
  br label %if.end116, !dbg !8871

if.end116:                                        ; preds = %if.then113, %if.end108
  %92 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !8872
  %93 = load double, double* %value89, align 8, !dbg !8873
  call void @ui_set_but_val(%struct.uiBut* %92, double %93), !dbg !8874
  store i8 1, i8* %retval, align 1, !dbg !8875
  br label %return, !dbg !8875

if.end117:                                        ; preds = %if.end47
  store i8 0, i8* %retval, align 1, !dbg !8876
  br label %return, !dbg !8876

return:                                           ; preds = %if.end117, %if.end116, %if.then94, %if.then86, %if.then80, %if.then72, %if.end63, %if.end42, %if.then39, %if.end, %if.then20, %if.then13
  %94 = load i8, i8* %retval, align 1, !dbg !8877
  ret i8 %94, !dbg !8877
}

declare dso_local void @RNA_property_string_set(%struct.PointerRNA*, %struct.PropertyRNA*, i8*) #3

declare dso_local void @RNA_property_pointer_set(%struct.PointerRNA*, %struct.PropertyRNA*, %struct.PointerRNA* byval(%struct.PointerRNA) align 8) #3

declare dso_local i32 @RNA_property_collection_lookup_string(%struct.PointerRNA*, %struct.PropertyRNA*, i8*, %struct.PointerRNA*) #3

declare dso_local zeroext i8 @RNA_property_enum_value(%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*, i32*) #3

declare dso_local zeroext i8 @ui_is_but_utf8(%struct.uiBut*) #3

declare dso_local i8* @BLI_strncpy_utf8(i8*, i8*, i64) #3

declare dso_local zeroext i8 @ui_but_anim_expression_set(%struct.uiBut*, i8*) #3

declare dso_local zeroext i8 @ui_but_anim_expression_create(%struct.uiBut*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_set_but_default(%struct.bContext* %C, i8 zeroext %all, i8 zeroext %use_afterfunc) #0 !dbg !8878 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %all.addr = alloca i8, align 1
  %use_afterfunc.addr = alloca i8, align 1
  %opstring = alloca i8*, align 8
  %ptr = alloca %struct.PointerRNA*, align 8
  %ot = alloca %struct.wmOperatorType*, align 8
  %ptr2 = alloca %struct.PointerRNA, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8881, metadata !DIExpression()), !dbg !8882
  store i8 %all, i8* %all.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %all.addr, metadata !8883, metadata !DIExpression()), !dbg !8884
  store i8 %use_afterfunc, i8* %use_afterfunc.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_afterfunc.addr, metadata !8885, metadata !DIExpression()), !dbg !8886
  call void @llvm.dbg.declare(metadata i8** %opstring, metadata !8887, metadata !DIExpression()), !dbg !8888
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0), i8** %opstring, align 8, !dbg !8888
  %0 = load i8, i8* %use_afterfunc.addr, align 1, !dbg !8889
  %tobool = icmp ne i8 %0, 0, !dbg !8889
  br i1 %tobool, label %if.then, label %if.else, !dbg !8891

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr, metadata !8892, metadata !DIExpression()), !dbg !8895
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !8896, metadata !DIExpression()), !dbg !8897
  %1 = load i8*, i8** %opstring, align 8, !dbg !8898
  %call = call %struct.wmOperatorType* @WM_operatortype_find(i8* %1, i8 zeroext 0), !dbg !8899
  store %struct.wmOperatorType* %call, %struct.wmOperatorType** %ot, align 8, !dbg !8897
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !8900
  %call1 = call %struct.PointerRNA* @ui_handle_afterfunc_add_operator(%struct.wmOperatorType* %2, i32 6, i8 zeroext 1), !dbg !8901
  store %struct.PointerRNA* %call1, %struct.PointerRNA** %ptr, align 8, !dbg !8902
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8903
  %4 = load i8, i8* %all.addr, align 1, !dbg !8904
  %conv = zext i8 %4 to i32, !dbg !8904
  call void @RNA_boolean_set(%struct.PointerRNA* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i32 %conv), !dbg !8905
  br label %if.end, !dbg !8906

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr2, metadata !8907, metadata !DIExpression()), !dbg !8909
  %5 = load i8*, i8** %opstring, align 8, !dbg !8910
  call void @WM_operator_properties_create(%struct.PointerRNA* %ptr2, i8* %5), !dbg !8911
  %6 = load i8, i8* %all.addr, align 1, !dbg !8912
  %conv3 = zext i8 %6 to i32, !dbg !8912
  call void @RNA_boolean_set(%struct.PointerRNA* %ptr2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i32 %conv3), !dbg !8913
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8914
  %8 = load i8*, i8** %opstring, align 8, !dbg !8915
  %call4 = call i32 @WM_operator_name_call(%struct.bContext* %7, i8* %8, i16 signext 6, %struct.PointerRNA* %ptr2), !dbg !8916
  call void @WM_operator_properties_free(%struct.PointerRNA* %ptr2), !dbg !8917
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !8918
}

declare dso_local %struct.wmOperatorType* @WM_operatortype_find(i8*, i8 zeroext) #3

declare dso_local %struct.PointerRNA* @ui_handle_afterfunc_add_operator(%struct.wmOperatorType*, i32, i8 zeroext) #3

declare dso_local void @RNA_boolean_set(%struct.PointerRNA*, i8*, i32) #3

declare dso_local void @WM_operator_properties_create(%struct.PointerRNA*, i8*) #3

declare dso_local i32 @WM_operator_name_call(%struct.bContext*, i8*, i16 signext, %struct.PointerRNA*) #3

declare dso_local void @WM_operator_properties_free(%struct.PointerRNA*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiFreeBlock(%struct.bContext* %C, %struct.uiBlock* %block) #0 !dbg !8919 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8920, metadata !DIExpression()), !dbg !8921
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !8922, metadata !DIExpression()), !dbg !8923
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !8924, metadata !DIExpression()), !dbg !8925
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !8926
  call void @UI_butstore_clear(%struct.uiBlock* %0), !dbg !8927
  br label %while.cond, !dbg !8928

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !8929
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 2, !dbg !8930
  %call = call i8* @BLI_pophead(%struct.ListBase* %buttons), !dbg !8931
  %2 = bitcast i8* %call to %struct.uiBut*, !dbg !8931
  store %struct.uiBut* %2, %struct.uiBut** %but, align 8, !dbg !8932
  %tobool = icmp ne %struct.uiBut* %2, null, !dbg !8928
  br i1 %tobool, label %while.body, label %while.end, !dbg !8928

while.body:                                       ; preds = %while.cond
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8933
  %4 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !8935
  call void @ui_free_but(%struct.bContext* %3, %struct.uiBut* %4), !dbg !8936
  br label %while.cond, !dbg !8928, !llvm.loop !8937

while.end:                                        ; preds = %while.cond
  %5 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !8939
  %unit = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %5, i32 0, i32 49, !dbg !8941
  %6 = load %struct.UnitSettings*, %struct.UnitSettings** %unit, align 8, !dbg !8941
  %tobool1 = icmp ne %struct.UnitSettings* %6, null, !dbg !8939
  br i1 %tobool1, label %if.then, label %if.end, !dbg !8942

if.then:                                          ; preds = %while.end
  %7 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8943
  %8 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !8945
  %unit2 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %8, i32 0, i32 49, !dbg !8946
  %9 = load %struct.UnitSettings*, %struct.UnitSettings** %unit2, align 8, !dbg !8946
  %10 = bitcast %struct.UnitSettings* %9 to i8*, !dbg !8945
  call void %7(i8* %10), !dbg !8943
  br label %if.end, !dbg !8947

if.end:                                           ; preds = %if.then, %while.end
  %11 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !8948
  %func_argN = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %11, i32 0, i32 18, !dbg !8950
  %12 = load i8*, i8** %func_argN, align 8, !dbg !8950
  %tobool3 = icmp ne i8* %12, null, !dbg !8948
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !8951

if.then4:                                         ; preds = %if.end
  %13 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8952
  %14 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !8954
  %func_argN5 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %14, i32 0, i32 18, !dbg !8955
  %15 = load i8*, i8** %func_argN5, align 8, !dbg !8955
  call void %13(i8* %15), !dbg !8952
  br label %if.end6, !dbg !8956

if.end6:                                          ; preds = %if.then4, %if.end
  %16 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !8957
  %contexts = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %16, i32 0, i32 8, !dbg !8958
  call void @CTX_store_free_list(%struct.ListBase* %contexts), !dbg !8959
  %17 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !8960
  %saferct = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %17, i32 0, i32 45, !dbg !8961
  call void @BLI_freelistN(%struct.ListBase* %saferct), !dbg !8962
  %18 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8963
  %19 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !8964
  %20 = bitcast %struct.uiBlock* %19 to i8*, !dbg !8964
  call void %18(i8* %20), !dbg !8963
  ret void, !dbg !8965
}

declare dso_local void @UI_butstore_clear(%struct.uiBlock*) #3

declare dso_local i8* @BLI_pophead(%struct.ListBase*) #3

declare dso_local void @CTX_store_free_list(%struct.ListBase*) #3

declare dso_local void @BLI_freelistN(%struct.ListBase*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiFreeBlocks(%struct.bContext* %C, %struct.ListBase* %lb) #0 !dbg !8966 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %lb.addr = alloca %struct.ListBase*, align 8
  %block = alloca %struct.uiBlock*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8969, metadata !DIExpression()), !dbg !8970
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !8971, metadata !DIExpression()), !dbg !8972
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !8973, metadata !DIExpression()), !dbg !8974
  br label %while.cond, !dbg !8975

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !8976
  %call = call i8* @BLI_pophead(%struct.ListBase* %0), !dbg !8977
  %1 = bitcast i8* %call to %struct.uiBlock*, !dbg !8977
  store %struct.uiBlock* %1, %struct.uiBlock** %block, align 8, !dbg !8978
  %tobool = icmp ne %struct.uiBlock* %1, null, !dbg !8975
  br i1 %tobool, label %while.body, label %while.end, !dbg !8975

while.body:                                       ; preds = %while.cond
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8979
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !8981
  call void @uiFreeBlock(%struct.bContext* %2, %struct.uiBlock* %3), !dbg !8982
  br label %while.cond, !dbg !8975, !llvm.loop !8983

while.end:                                        ; preds = %while.cond
  ret void, !dbg !8985
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiFreeInactiveBlocks(%struct.bContext* %C, %struct.ListBase* %lb) #0 !dbg !8986 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %lb.addr = alloca %struct.ListBase*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %nextblock = alloca %struct.uiBlock*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8987, metadata !DIExpression()), !dbg !8988
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !8989, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !8991, metadata !DIExpression()), !dbg !8992
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %nextblock, metadata !8993, metadata !DIExpression()), !dbg !8994
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !8995
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !8997
  %1 = load i8*, i8** %first, align 8, !dbg !8997
  %2 = bitcast i8* %1 to %struct.uiBlock*, !dbg !8995
  store %struct.uiBlock* %2, %struct.uiBlock** %block, align 8, !dbg !8998
  br label %for.cond, !dbg !8999

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9000
  %tobool = icmp ne %struct.uiBlock* %3, null, !dbg !9002
  br i1 %tobool, label %for.body, label %for.end, !dbg !9002

for.body:                                         ; preds = %for.cond
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9003
  %next = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %4, i32 0, i32 0, !dbg !9005
  %5 = load %struct.uiBlock*, %struct.uiBlock** %next, align 8, !dbg !9005
  store %struct.uiBlock* %5, %struct.uiBlock** %nextblock, align 8, !dbg !9006
  %6 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9007
  %handle = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %6, i32 0, i32 46, !dbg !9009
  %7 = load %struct.uiPopupBlockHandle*, %struct.uiPopupBlockHandle** %handle, align 8, !dbg !9009
  %tobool1 = icmp ne %struct.uiPopupBlockHandle* %7, null, !dbg !9007
  br i1 %tobool1, label %if.end5, label %if.then, !dbg !9010

if.then:                                          ; preds = %for.body
  %8 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9011
  %active = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %8, i32 0, i32 36, !dbg !9014
  %9 = load i8, i8* %active, align 1, !dbg !9014
  %tobool2 = icmp ne i8 %9, 0, !dbg !9011
  br i1 %tobool2, label %if.else, label %if.then3, !dbg !9015

if.then3:                                         ; preds = %if.then
  %10 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !9016
  %11 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9018
  %12 = bitcast %struct.uiBlock* %11 to i8*, !dbg !9018
  call void @BLI_remlink(%struct.ListBase* %10, i8* %12), !dbg !9019
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9020
  %14 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9021
  call void @uiFreeBlock(%struct.bContext* %13, %struct.uiBlock* %14), !dbg !9022
  br label %if.end, !dbg !9023

if.else:                                          ; preds = %if.then
  %15 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9024
  %active4 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %15, i32 0, i32 36, !dbg !9025
  store i8 0, i8* %active4, align 1, !dbg !9026
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end5, !dbg !9027

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !9028

for.inc:                                          ; preds = %if.end5
  %16 = load %struct.uiBlock*, %struct.uiBlock** %nextblock, align 8, !dbg !9029
  store %struct.uiBlock* %16, %struct.uiBlock** %block, align 8, !dbg !9030
  br label %for.cond, !dbg !9031, !llvm.loop !9032

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9034
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiBlockSetRegion(%struct.uiBlock* %block, %struct.ARegion* %region) #0 !dbg !9035 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %region.addr = alloca %struct.ARegion*, align 8
  %lb = alloca %struct.ListBase*, align 8
  %oldblock = alloca %struct.uiBlock*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !9038, metadata !DIExpression()), !dbg !9039
  store %struct.ARegion* %region, %struct.ARegion** %region.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %region.addr, metadata !9040, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb, metadata !9042, metadata !DIExpression()), !dbg !9043
  %0 = load %struct.ARegion*, %struct.ARegion** %region.addr, align 8, !dbg !9044
  %uiblocks = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 21, !dbg !9045
  store %struct.ListBase* %uiblocks, %struct.ListBase** %lb, align 8, !dbg !9043
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %oldblock, metadata !9046, metadata !DIExpression()), !dbg !9047
  store %struct.uiBlock* null, %struct.uiBlock** %oldblock, align 8, !dbg !9047
  %1 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !9048
  %tobool = icmp ne %struct.ListBase* %1, null, !dbg !9048
  br i1 %tobool, label %if.then, label %if.end3, !dbg !9050

if.then:                                          ; preds = %entry
  %2 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !9051
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !9053
  %name = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %3, i32 0, i32 9, !dbg !9054
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %name, i64 0, i64 0, !dbg !9053
  %call = call i8* @BLI_findstring(%struct.ListBase* %2, i8* %arraydecay, i32 104), !dbg !9055
  %4 = bitcast i8* %call to %struct.uiBlock*, !dbg !9055
  store %struct.uiBlock* %4, %struct.uiBlock** %oldblock, align 8, !dbg !9056
  %5 = load %struct.uiBlock*, %struct.uiBlock** %oldblock, align 8, !dbg !9057
  %tobool1 = icmp ne %struct.uiBlock* %5, null, !dbg !9057
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !9059

if.then2:                                         ; preds = %if.then
  %6 = load %struct.uiBlock*, %struct.uiBlock** %oldblock, align 8, !dbg !9060
  %active = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %6, i32 0, i32 36, !dbg !9062
  store i8 0, i8* %active, align 1, !dbg !9063
  %7 = load %struct.uiBlock*, %struct.uiBlock** %oldblock, align 8, !dbg !9064
  %panel = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %7, i32 0, i32 3, !dbg !9065
  store %struct.Panel* null, %struct.Panel** %panel, align 8, !dbg !9066
  %8 = load %struct.uiBlock*, %struct.uiBlock** %oldblock, align 8, !dbg !9067
  %handle = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %8, i32 0, i32 46, !dbg !9068
  store %struct.uiPopupBlockHandle* null, %struct.uiPopupBlockHandle** %handle, align 8, !dbg !9069
  br label %if.end, !dbg !9070

if.end:                                           ; preds = %if.then2, %if.then
  %9 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !9071
  %10 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !9072
  %11 = bitcast %struct.uiBlock* %10 to i8*, !dbg !9072
  call void @BLI_addhead(%struct.ListBase* %9, i8* %11), !dbg !9073
  br label %if.end3, !dbg !9074

if.end3:                                          ; preds = %if.end, %entry
  %12 = load %struct.uiBlock*, %struct.uiBlock** %oldblock, align 8, !dbg !9075
  %13 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !9076
  %oldblock4 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %13, i32 0, i32 4, !dbg !9077
  store %struct.uiBlock* %12, %struct.uiBlock** %oldblock4, align 8, !dbg !9078
  ret void, !dbg !9079
}

declare dso_local i8* @BLI_findstring(%struct.ListBase*, i8*, i32) #3

declare dso_local void @BLI_addhead(%struct.ListBase*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBlock* @uiBeginBlock(%struct.bContext* %C, %struct.ARegion* %region, i8* %name, i16 signext %dt) #0 !dbg !9080 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %region.addr = alloca %struct.ARegion*, align 8
  %name.addr = alloca i8*, align 8
  %dt.addr = alloca i16, align 2
  %block = alloca %struct.uiBlock*, align 8
  %window = alloca %struct.wmWindow*, align 8
  %scn = alloca %struct.Scene*, align 8
  %getsizex = alloca i32, align 4
  %getsizey = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9083, metadata !DIExpression()), !dbg !9084
  store %struct.ARegion* %region, %struct.ARegion** %region.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %region.addr, metadata !9085, metadata !DIExpression()), !dbg !9086
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9087, metadata !DIExpression()), !dbg !9088
  store i16 %dt, i16* %dt.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %dt.addr, metadata !9089, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !9091, metadata !DIExpression()), !dbg !9092
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %window, metadata !9093, metadata !DIExpression()), !dbg !9094
  call void @llvm.dbg.declare(metadata %struct.Scene** %scn, metadata !9095, metadata !DIExpression()), !dbg !9096
  call void @llvm.dbg.declare(metadata i32* %getsizex, metadata !9097, metadata !DIExpression()), !dbg !9098
  call void @llvm.dbg.declare(metadata i32* %getsizey, metadata !9099, metadata !DIExpression()), !dbg !9100
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9101
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !9102
  store %struct.wmWindow* %call, %struct.wmWindow** %window, align 8, !dbg !9103
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9104
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !9105
  store %struct.Scene* %call1, %struct.Scene** %scn, align 8, !dbg !9106
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9107
  %call2 = call i8* %2(i64 680, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0)), !dbg !9107
  %3 = bitcast i8* %call2 to %struct.uiBlock*, !dbg !9107
  store %struct.uiBlock* %3, %struct.uiBlock** %block, align 8, !dbg !9108
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9109
  %active = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %4, i32 0, i32 36, !dbg !9110
  store i8 1, i8* %active, align 1, !dbg !9111
  %5 = load i16, i16* %dt.addr, align 2, !dbg !9112
  %conv = trunc i16 %5 to i8, !dbg !9112
  %6 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9113
  %dt3 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %6, i32 0, i32 30, !dbg !9114
  store i8 %conv, i8* %dt3, align 1, !dbg !9115
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9116
  %8 = bitcast %struct.bContext* %7 to i8*, !dbg !9117
  %9 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9118
  %evil_C = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %9, i32 0, i32 48, !dbg !9119
  store i8* %8, i8** %evil_C, align 8, !dbg !9120
  %10 = load %struct.Scene*, %struct.Scene** %scn, align 8, !dbg !9121
  %tobool = icmp ne %struct.Scene* %10, null, !dbg !9121
  br i1 %tobool, label %if.then, label %if.end, !dbg !9123

if.then:                                          ; preds = %entry
  %11 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9124
  %color_profile = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %11, i32 0, i32 51, !dbg !9126
  store i8 1, i8* %color_profile, align 4, !dbg !9127
  %12 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9128
  %display_device = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %12, i32 0, i32 52, !dbg !9129
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %display_device, i64 0, i64 0, !dbg !9128
  %13 = load %struct.Scene*, %struct.Scene** %scn, align 8, !dbg !9130
  %display_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %13, i32 0, i32 45, !dbg !9131
  %display_device4 = getelementptr inbounds %struct.ColorManagedDisplaySettings, %struct.ColorManagedDisplaySettings* %display_settings, i32 0, i32 0, !dbg !9132
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %display_device4, i64 0, i64 0, !dbg !9130
  %call6 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay5, i64 64), !dbg !9133
  %14 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !9134
  %call7 = call i8* %14(i64 8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0)), !dbg !9134
  %15 = bitcast i8* %call7 to %struct.UnitSettings*, !dbg !9134
  %16 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9135
  %unit = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %16, i32 0, i32 49, !dbg !9136
  store %struct.UnitSettings* %15, %struct.UnitSettings** %unit, align 8, !dbg !9137
  %17 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9138
  %unit8 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %17, i32 0, i32 49, !dbg !9139
  %18 = load %struct.UnitSettings*, %struct.UnitSettings** %unit8, align 8, !dbg !9139
  %19 = bitcast %struct.UnitSettings* %18 to i8*, !dbg !9140
  %20 = load %struct.Scene*, %struct.Scene** %scn, align 8, !dbg !9141
  %unit9 = getelementptr inbounds %struct.Scene, %struct.Scene* %20, i32 0, i32 38, !dbg !9142
  %21 = bitcast %struct.UnitSettings* %unit9 to i8*, !dbg !9140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 8 %21, i64 8, i1 false), !dbg !9140
  br label %if.end, !dbg !9143

if.end:                                           ; preds = %if.then, %entry
  %22 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9144
  %name10 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %22, i32 0, i32 9, !dbg !9145
  %arraydecay11 = getelementptr inbounds [128 x i8], [128 x i8]* %name10, i64 0, i64 0, !dbg !9144
  %23 = load i8*, i8** %name.addr, align 8, !dbg !9146
  %call12 = call i8* @BLI_strncpy(i8* %arraydecay11, i8* %23, i64 128), !dbg !9147
  %24 = load %struct.ARegion*, %struct.ARegion** %region.addr, align 8, !dbg !9148
  %tobool13 = icmp ne %struct.ARegion* %24, null, !dbg !9148
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !9150

if.then14:                                        ; preds = %if.end
  %25 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9151
  %26 = load %struct.ARegion*, %struct.ARegion** %region.addr, align 8, !dbg !9152
  call void @uiBlockSetRegion(%struct.uiBlock* %25, %struct.ARegion* %26), !dbg !9153
  br label %if.end15, !dbg !9153

if.end15:                                         ; preds = %if.then14, %if.end
  %27 = load %struct.ARegion*, %struct.ARegion** %region.addr, align 8, !dbg !9154
  %tobool16 = icmp ne %struct.ARegion* %27, null, !dbg !9154
  br i1 %tobool16, label %land.lhs.true, label %if.else, !dbg !9156

land.lhs.true:                                    ; preds = %if.end15
  %28 = load %struct.ARegion*, %struct.ARegion** %region.addr, align 8, !dbg !9157
  %swinid = getelementptr inbounds %struct.ARegion, %struct.ARegion* %28, i32 0, i32 7, !dbg !9158
  %29 = load i16, i16* %swinid, align 4, !dbg !9158
  %conv17 = sext i16 %29 to i32, !dbg !9157
  %tobool18 = icmp ne i32 %conv17, 0, !dbg !9157
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !9159

if.then19:                                        ; preds = %land.lhs.true
  %30 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !9160
  %31 = load %struct.ARegion*, %struct.ARegion** %region.addr, align 8, !dbg !9162
  %swinid20 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %31, i32 0, i32 7, !dbg !9163
  %32 = load i16, i16* %swinid20, align 4, !dbg !9163
  %conv21 = sext i16 %32 to i32, !dbg !9162
  %33 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9164
  %winmat = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %33, i32 0, i32 10, !dbg !9165
  %arraydecay22 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !9164
  call void @wm_subwindow_matrix_get(%struct.wmWindow* %30, i32 %conv21, [4 x float]* %arraydecay22), !dbg !9166
  %34 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !9167
  %35 = load %struct.ARegion*, %struct.ARegion** %region.addr, align 8, !dbg !9168
  %swinid23 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %35, i32 0, i32 7, !dbg !9169
  %36 = load i16, i16* %swinid23, align 4, !dbg !9169
  %conv24 = sext i16 %36 to i32, !dbg !9168
  call void @wm_subwindow_size_get(%struct.wmWindow* %34, i32 %conv24, i32* %getsizex, i32* %getsizey), !dbg !9170
  %37 = load i32, i32* %getsizex, align 4, !dbg !9171
  %conv25 = sitofp i32 %37 to float, !dbg !9171
  %38 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9172
  %winmat26 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %38, i32 0, i32 10, !dbg !9173
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat26, i64 0, i64 0, !dbg !9172
  %arrayidx27 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !9172
  %39 = load float, float* %arrayidx27, align 8, !dbg !9172
  %mul = fmul float %conv25, %39, !dbg !9174
  %40 = call float @llvm.fabs.f32(float %mul), !dbg !9175
  %div = fdiv float 2.000000e+00, %40, !dbg !9176
  %41 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9177
  %aspect = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %41, i32 0, i32 12, !dbg !9178
  store float %div, float* %aspect, align 8, !dbg !9179
  br label %if.end41, !dbg !9180

if.else:                                          ; preds = %land.lhs.true, %if.end15
  %42 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !9181
  %43 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !9183
  %screen = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %43, i32 0, i32 3, !dbg !9184
  %44 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !9184
  %mainwin = getelementptr inbounds %struct.bScreen, %struct.bScreen* %44, i32 0, i32 18, !dbg !9185
  %45 = load i16, i16* %mainwin, align 2, !dbg !9185
  %conv28 = sext i16 %45 to i32, !dbg !9183
  %46 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9186
  %winmat29 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %46, i32 0, i32 10, !dbg !9187
  %arraydecay30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat29, i64 0, i64 0, !dbg !9186
  call void @wm_subwindow_matrix_get(%struct.wmWindow* %42, i32 %conv28, [4 x float]* %arraydecay30), !dbg !9188
  %47 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !9189
  %48 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !9190
  %screen31 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %48, i32 0, i32 3, !dbg !9191
  %49 = load %struct.bScreen*, %struct.bScreen** %screen31, align 8, !dbg !9191
  %mainwin32 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %49, i32 0, i32 18, !dbg !9192
  %50 = load i16, i16* %mainwin32, align 2, !dbg !9192
  %conv33 = sext i16 %50 to i32, !dbg !9190
  call void @wm_subwindow_size_get(%struct.wmWindow* %47, i32 %conv33, i32* %getsizex, i32* %getsizey), !dbg !9193
  %51 = load i32, i32* %getsizex, align 4, !dbg !9194
  %conv34 = sitofp i32 %51 to float, !dbg !9194
  %52 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9195
  %winmat35 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %52, i32 0, i32 10, !dbg !9196
  %arrayidx36 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat35, i64 0, i64 0, !dbg !9195
  %arrayidx37 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx36, i64 0, i64 0, !dbg !9195
  %53 = load float, float* %arrayidx37, align 8, !dbg !9195
  %mul38 = fmul float %conv34, %53, !dbg !9197
  %54 = call float @llvm.fabs.f32(float %mul38), !dbg !9198
  %div39 = fdiv float 2.000000e+00, %54, !dbg !9199
  %55 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9200
  %aspect40 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %55, i32 0, i32 12, !dbg !9201
  store float %div39, float* %aspect40, align 8, !dbg !9202
  %56 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9203
  %auto_open = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %56, i32 0, i32 31, !dbg !9204
  store i8 1, i8* %auto_open, align 8, !dbg !9205
  %57 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9206
  %flag = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %57, i32 0, i32 27, !dbg !9207
  %58 = load i32, i32* %flag, align 8, !dbg !9208
  %or = or i32 %58, 1, !dbg !9208
  store i32 %or, i32* %flag, align 8, !dbg !9208
  br label %if.end41

if.end41:                                         ; preds = %if.else, %if.then19
  %59 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !9209
  ret %struct.uiBlock* %59, !dbg !9210
}

declare dso_local void @wm_subwindow_matrix_get(%struct.wmWindow*, i32, [4 x float]*) #3

declare dso_local void @wm_subwindow_size_get(%struct.wmWindow*, i32, i32*, i32*) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBlock* @uiGetBlock(i8* %name, %struct.ARegion* %ar) #0 !dbg !9211 {
entry:
  %name.addr = alloca i8*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9214, metadata !DIExpression()), !dbg !9215
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !9216, metadata !DIExpression()), !dbg !9217
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !9218
  %uiblocks = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 21, !dbg !9219
  %1 = load i8*, i8** %name.addr, align 8, !dbg !9220
  %call = call i8* @BLI_findstring(%struct.ListBase* %uiblocks, i8* %1, i32 104), !dbg !9221
  %2 = bitcast i8* %call to %struct.uiBlock*, !dbg !9221
  ret %struct.uiBlock* %2, !dbg !9222
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiBlockSetEmboss(%struct.uiBlock* %block, i8 zeroext %dt) #0 !dbg !9223 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %dt.addr = alloca i8, align 1
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !9226, metadata !DIExpression()), !dbg !9227
  store i8 %dt, i8* %dt.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dt.addr, metadata !9228, metadata !DIExpression()), !dbg !9229
  %0 = load i8, i8* %dt.addr, align 1, !dbg !9230
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !9231
  %dt1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 30, !dbg !9232
  store i8 %0, i8* %dt1, align 1, !dbg !9233
  ret void, !dbg !9234
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_set_but_soft_range(%struct.uiBut* %but) #0 !dbg !9235 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %type = alloca i32, align 4
  %softmin = alloca double, align 8
  %softmax = alloca double, align 8
  %value_min = alloca double, align 8
  %value_max = alloca double, align 8
  %is_array = alloca i8, align 1
  %imin = alloca i32, align 4
  %imax = alloca i32, align 4
  %istep = alloca i32, align 4
  %value_range = alloca [2 x i32], align 4
  %is_array29 = alloca i8, align 1
  %fmin = alloca float, align 4
  %fmax = alloca float, align 4
  %fstep = alloca float, align 4
  %fprecision = alloca float, align 4
  %value_range50 = alloca [2 x float], align 4
  %value = alloca float, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !9236, metadata !DIExpression()), !dbg !9237
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9238
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 55, !dbg !9240
  %1 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !9240
  %tobool = icmp ne %struct.PropertyRNA* %1, null, !dbg !9238
  br i1 %tobool, label %if.then, label %if.else112, !dbg !9241

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %type, metadata !9242, metadata !DIExpression()), !dbg !9245
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9246
  %rnaprop1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 55, !dbg !9247
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop1, align 8, !dbg !9247
  %call = call i32 @RNA_property_type(%struct.PropertyRNA* %3), !dbg !9248
  store i32 %call, i32* %type, align 4, !dbg !9245
  call void @llvm.dbg.declare(metadata double* %softmin, metadata !9249, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.declare(metadata double* %softmax, metadata !9251, metadata !DIExpression()), !dbg !9252
  call void @llvm.dbg.declare(metadata double* %value_min, metadata !9253, metadata !DIExpression()), !dbg !9254
  call void @llvm.dbg.declare(metadata double* %value_max, metadata !9255, metadata !DIExpression()), !dbg !9256
  %4 = load i32, i32* %type, align 4, !dbg !9257
  %cmp = icmp eq i32 %4, 1, !dbg !9259
  br i1 %cmp, label %if.then2, label %if.else25, !dbg !9260

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8* %is_array, metadata !9261, metadata !DIExpression()), !dbg !9263
  %5 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9264
  %rnaprop3 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 55, !dbg !9265
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop3, align 8, !dbg !9265
  %call4 = call zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %6), !dbg !9266
  store i8 %call4, i8* %is_array, align 1, !dbg !9263
  call void @llvm.dbg.declare(metadata i32* %imin, metadata !9267, metadata !DIExpression()), !dbg !9268
  call void @llvm.dbg.declare(metadata i32* %imax, metadata !9269, metadata !DIExpression()), !dbg !9270
  call void @llvm.dbg.declare(metadata i32* %istep, metadata !9271, metadata !DIExpression()), !dbg !9272
  %7 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9273
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %7, i32 0, i32 54, !dbg !9274
  %8 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9275
  %rnaprop5 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 55, !dbg !9276
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop5, align 8, !dbg !9276
  call void @RNA_property_int_ui_range(%struct.PointerRNA* %rnapoin, %struct.PropertyRNA* %9, i32* %imin, i32* %imax, i32* %istep), !dbg !9277
  %10 = load i32, i32* %imin, align 4, !dbg !9278
  %cmp6 = icmp eq i32 %10, -2147483648, !dbg !9279
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !9280

cond.true:                                        ; preds = %if.then2
  br label %cond.end, !dbg !9280

cond.false:                                       ; preds = %if.then2
  %11 = load i32, i32* %imin, align 4, !dbg !9281
  %conv = sitofp i32 %11 to double, !dbg !9281
  br label %cond.end, !dbg !9280

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ -1.000000e+04, %cond.true ], [ %conv, %cond.false ], !dbg !9280
  store double %cond, double* %softmin, align 8, !dbg !9282
  %12 = load i32, i32* %imin, align 4, !dbg !9283
  %cmp7 = icmp eq i32 %12, 2147483647, !dbg !9284
  br i1 %cmp7, label %cond.true9, label %cond.false10, !dbg !9285

cond.true9:                                       ; preds = %cond.end
  br label %cond.end12, !dbg !9285

cond.false10:                                     ; preds = %cond.end
  %13 = load i32, i32* %imax, align 4, !dbg !9286
  %conv11 = sitofp i32 %13 to double, !dbg !9286
  br label %cond.end12, !dbg !9285

cond.end12:                                       ; preds = %cond.false10, %cond.true9
  %cond13 = phi double [ 1.000000e+04, %cond.true9 ], [ %conv11, %cond.false10 ], !dbg !9285
  store double %cond13, double* %softmax, align 8, !dbg !9287
  %14 = load i8, i8* %is_array, align 1, !dbg !9288
  %tobool14 = icmp ne i8 %14, 0, !dbg !9288
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !9290

if.then15:                                        ; preds = %cond.end12
  call void @llvm.dbg.declare(metadata [2 x i32]* %value_range, metadata !9291, metadata !DIExpression()), !dbg !9293
  %15 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9294
  %rnapoin16 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 54, !dbg !9295
  %16 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9296
  %rnaprop17 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %16, i32 0, i32 55, !dbg !9297
  %17 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop17, align 8, !dbg !9297
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %value_range, i64 0, i64 0, !dbg !9298
  call void @RNA_property_int_get_array_range(%struct.PointerRNA* %rnapoin16, %struct.PropertyRNA* %17, i32* %arraydecay), !dbg !9299
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %value_range, i64 0, i64 0, !dbg !9300
  %18 = load i32, i32* %arrayidx, align 4, !dbg !9300
  %conv18 = sitofp i32 %18 to double, !dbg !9301
  store double %conv18, double* %value_min, align 8, !dbg !9302
  %arrayidx19 = getelementptr inbounds [2 x i32], [2 x i32]* %value_range, i64 0, i64 1, !dbg !9303
  %19 = load i32, i32* %arrayidx19, align 4, !dbg !9303
  %conv20 = sitofp i32 %19 to double, !dbg !9304
  store double %conv20, double* %value_max, align 8, !dbg !9305
  br label %if.end, !dbg !9306

if.else:                                          ; preds = %cond.end12
  %20 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9307
  %rnapoin21 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %20, i32 0, i32 54, !dbg !9309
  %21 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9310
  %rnaprop22 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %21, i32 0, i32 55, !dbg !9311
  %22 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop22, align 8, !dbg !9311
  %call23 = call i32 @RNA_property_int_get(%struct.PointerRNA* %rnapoin21, %struct.PropertyRNA* %22), !dbg !9312
  %conv24 = sitofp i32 %call23 to double, !dbg !9313
  store double %conv24, double* %value_max, align 8, !dbg !9314
  store double %conv24, double* %value_min, align 8, !dbg !9315
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then15
  br label %if.end66, !dbg !9316

if.else25:                                        ; preds = %if.then
  %23 = load i32, i32* %type, align 4, !dbg !9317
  %cmp26 = icmp eq i32 %23, 2, !dbg !9319
  br i1 %cmp26, label %if.then28, label %if.else64, !dbg !9320

if.then28:                                        ; preds = %if.else25
  call void @llvm.dbg.declare(metadata i8* %is_array29, metadata !9321, metadata !DIExpression()), !dbg !9323
  %24 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9324
  %rnaprop30 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %24, i32 0, i32 55, !dbg !9325
  %25 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop30, align 8, !dbg !9325
  %call31 = call zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %25), !dbg !9326
  store i8 %call31, i8* %is_array29, align 1, !dbg !9323
  call void @llvm.dbg.declare(metadata float* %fmin, metadata !9327, metadata !DIExpression()), !dbg !9328
  call void @llvm.dbg.declare(metadata float* %fmax, metadata !9329, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.declare(metadata float* %fstep, metadata !9331, metadata !DIExpression()), !dbg !9332
  call void @llvm.dbg.declare(metadata float* %fprecision, metadata !9333, metadata !DIExpression()), !dbg !9334
  %26 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9335
  %rnapoin32 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %26, i32 0, i32 54, !dbg !9336
  %27 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9337
  %rnaprop33 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %27, i32 0, i32 55, !dbg !9338
  %28 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop33, align 8, !dbg !9338
  call void @RNA_property_float_ui_range(%struct.PointerRNA* %rnapoin32, %struct.PropertyRNA* %28, float* %fmin, float* %fmax, float* %fstep, float* %fprecision), !dbg !9339
  %29 = load float, float* %fmin, align 4, !dbg !9340
  %cmp34 = fcmp oeq float %29, 0xC7EFFFFFE0000000, !dbg !9341
  br i1 %cmp34, label %cond.true36, label %cond.false37, !dbg !9342

cond.true36:                                      ; preds = %if.then28
  br label %cond.end38, !dbg !9342

cond.false37:                                     ; preds = %if.then28
  %30 = load float, float* %fmin, align 4, !dbg !9343
  br label %cond.end38, !dbg !9342

cond.end38:                                       ; preds = %cond.false37, %cond.true36
  %cond39 = phi float [ -1.000000e+04, %cond.true36 ], [ %30, %cond.false37 ], !dbg !9342
  %conv40 = fpext float %cond39 to double, !dbg !9342
  store double %conv40, double* %softmin, align 8, !dbg !9344
  %31 = load float, float* %fmax, align 4, !dbg !9345
  %cmp41 = fcmp oeq float %31, 0x47EFFFFFE0000000, !dbg !9346
  br i1 %cmp41, label %cond.true43, label %cond.false44, !dbg !9347

cond.true43:                                      ; preds = %cond.end38
  br label %cond.end45, !dbg !9347

cond.false44:                                     ; preds = %cond.end38
  %32 = load float, float* %fmax, align 4, !dbg !9348
  br label %cond.end45, !dbg !9347

cond.end45:                                       ; preds = %cond.false44, %cond.true43
  %cond46 = phi float [ 1.000000e+04, %cond.true43 ], [ %32, %cond.false44 ], !dbg !9347
  %conv47 = fpext float %cond46 to double, !dbg !9347
  store double %conv47, double* %softmax, align 8, !dbg !9349
  %33 = load i8, i8* %is_array29, align 1, !dbg !9350
  %tobool48 = icmp ne i8 %33, 0, !dbg !9350
  br i1 %tobool48, label %if.then49, label %if.else58, !dbg !9352

if.then49:                                        ; preds = %cond.end45
  call void @llvm.dbg.declare(metadata [2 x float]* %value_range50, metadata !9353, metadata !DIExpression()), !dbg !9355
  %34 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9356
  %rnapoin51 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %34, i32 0, i32 54, !dbg !9357
  %35 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9358
  %rnaprop52 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %35, i32 0, i32 55, !dbg !9359
  %36 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop52, align 8, !dbg !9359
  %arraydecay53 = getelementptr inbounds [2 x float], [2 x float]* %value_range50, i64 0, i64 0, !dbg !9360
  call void @RNA_property_float_get_array_range(%struct.PointerRNA* %rnapoin51, %struct.PropertyRNA* %36, float* %arraydecay53), !dbg !9361
  %arrayidx54 = getelementptr inbounds [2 x float], [2 x float]* %value_range50, i64 0, i64 0, !dbg !9362
  %37 = load float, float* %arrayidx54, align 4, !dbg !9362
  %conv55 = fpext float %37 to double, !dbg !9363
  store double %conv55, double* %value_min, align 8, !dbg !9364
  %arrayidx56 = getelementptr inbounds [2 x float], [2 x float]* %value_range50, i64 0, i64 1, !dbg !9365
  %38 = load float, float* %arrayidx56, align 4, !dbg !9365
  %conv57 = fpext float %38 to double, !dbg !9366
  store double %conv57, double* %value_max, align 8, !dbg !9367
  br label %if.end63, !dbg !9368

if.else58:                                        ; preds = %cond.end45
  %39 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9369
  %rnapoin59 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %39, i32 0, i32 54, !dbg !9371
  %40 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9372
  %rnaprop60 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %40, i32 0, i32 55, !dbg !9373
  %41 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop60, align 8, !dbg !9373
  %call61 = call float @RNA_property_float_get(%struct.PointerRNA* %rnapoin59, %struct.PropertyRNA* %41), !dbg !9374
  %conv62 = fpext float %call61 to double, !dbg !9375
  store double %conv62, double* %value_max, align 8, !dbg !9376
  store double %conv62, double* %value_min, align 8, !dbg !9377
  br label %if.end63

if.end63:                                         ; preds = %if.else58, %if.then49
  br label %if.end65, !dbg !9378

if.else64:                                        ; preds = %if.else25
  br label %if.end139, !dbg !9379

if.end65:                                         ; preds = %if.end63
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end
  %42 = load double, double* %value_min, align 8, !dbg !9381
  %add = fadd double %42, 1.000000e-10, !dbg !9383
  %43 = load double, double* %softmin, align 8, !dbg !9384
  %cmp67 = fcmp olt double %add, %43, !dbg !9385
  br i1 %cmp67, label %if.then69, label %if.end86, !dbg !9386

if.then69:                                        ; preds = %if.end66
  %44 = load double, double* %value_min, align 8, !dbg !9387
  %cmp70 = fcmp olt double %44, 0.000000e+00, !dbg !9390
  br i1 %cmp70, label %if.then72, label %if.else76, !dbg !9391

if.then72:                                        ; preds = %if.then69
  %45 = load double, double* %value_min, align 8, !dbg !9392
  %fneg = fneg double %45, !dbg !9393
  %46 = load double, double* %softmin, align 8, !dbg !9394
  %fneg73 = fneg double %46, !dbg !9395
  %call74 = call double @soft_range_round_up(double %fneg, double %fneg73), !dbg !9396
  %fneg75 = fneg double %call74, !dbg !9397
  store double %fneg75, double* %softmin, align 8, !dbg !9398
  br label %if.end78, !dbg !9399

if.else76:                                        ; preds = %if.then69
  %47 = load double, double* %value_min, align 8, !dbg !9400
  %48 = load double, double* %softmin, align 8, !dbg !9401
  %call77 = call double @soft_range_round_down(double %47, double %48), !dbg !9402
  store double %call77, double* %softmin, align 8, !dbg !9403
  br label %if.end78

if.end78:                                         ; preds = %if.else76, %if.then72
  %49 = load double, double* %softmin, align 8, !dbg !9404
  %50 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9406
  %hardmin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %50, i32 0, i32 20, !dbg !9407
  %51 = load float, float* %hardmin, align 8, !dbg !9407
  %conv79 = fpext float %51 to double, !dbg !9408
  %cmp80 = fcmp olt double %49, %conv79, !dbg !9409
  br i1 %cmp80, label %if.then82, label %if.end85, !dbg !9410

if.then82:                                        ; preds = %if.end78
  %52 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9411
  %hardmin83 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %52, i32 0, i32 20, !dbg !9412
  %53 = load float, float* %hardmin83, align 8, !dbg !9412
  %conv84 = fpext float %53 to double, !dbg !9413
  store double %conv84, double* %softmin, align 8, !dbg !9414
  br label %if.end85, !dbg !9415

if.end85:                                         ; preds = %if.then82, %if.end78
  br label %if.end86, !dbg !9416

if.end86:                                         ; preds = %if.end85, %if.end66
  %54 = load double, double* %value_max, align 8, !dbg !9417
  %sub = fsub double %54, 1.000000e-10, !dbg !9419
  %55 = load double, double* %softmax, align 8, !dbg !9420
  %cmp87 = fcmp ogt double %sub, %55, !dbg !9421
  br i1 %cmp87, label %if.then89, label %if.end107, !dbg !9422

if.then89:                                        ; preds = %if.end86
  %56 = load double, double* %value_max, align 8, !dbg !9423
  %cmp90 = fcmp olt double %56, 0.000000e+00, !dbg !9426
  br i1 %cmp90, label %if.then92, label %if.else97, !dbg !9427

if.then92:                                        ; preds = %if.then89
  %57 = load double, double* %value_max, align 8, !dbg !9428
  %fneg93 = fneg double %57, !dbg !9429
  %58 = load double, double* %softmax, align 8, !dbg !9430
  %fneg94 = fneg double %58, !dbg !9431
  %call95 = call double @soft_range_round_down(double %fneg93, double %fneg94), !dbg !9432
  %fneg96 = fneg double %call95, !dbg !9433
  store double %fneg96, double* %softmax, align 8, !dbg !9434
  br label %if.end99, !dbg !9435

if.else97:                                        ; preds = %if.then89
  %59 = load double, double* %value_max, align 8, !dbg !9436
  %60 = load double, double* %softmax, align 8, !dbg !9437
  %call98 = call double @soft_range_round_up(double %59, double %60), !dbg !9438
  store double %call98, double* %softmax, align 8, !dbg !9439
  br label %if.end99

if.end99:                                         ; preds = %if.else97, %if.then92
  %61 = load double, double* %softmax, align 8, !dbg !9440
  %62 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9442
  %hardmax = getelementptr inbounds %struct.uiBut, %struct.uiBut* %62, i32 0, i32 21, !dbg !9443
  %63 = load float, float* %hardmax, align 4, !dbg !9443
  %conv100 = fpext float %63 to double, !dbg !9444
  %cmp101 = fcmp ogt double %61, %conv100, !dbg !9445
  br i1 %cmp101, label %if.then103, label %if.end106, !dbg !9446

if.then103:                                       ; preds = %if.end99
  %64 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9447
  %hardmax104 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %64, i32 0, i32 21, !dbg !9448
  %65 = load float, float* %hardmax104, align 4, !dbg !9448
  %conv105 = fpext float %65 to double, !dbg !9447
  store double %conv105, double* %softmax, align 8, !dbg !9449
  br label %if.end106, !dbg !9450

if.end106:                                        ; preds = %if.then103, %if.end99
  br label %if.end107, !dbg !9451

if.end107:                                        ; preds = %if.end106, %if.end86
  %66 = load double, double* %softmin, align 8, !dbg !9452
  %conv108 = fptrunc double %66 to float, !dbg !9452
  %67 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9453
  %softmin109 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %67, i32 0, i32 22, !dbg !9454
  store float %conv108, float* %softmin109, align 8, !dbg !9455
  %68 = load double, double* %softmax, align 8, !dbg !9456
  %conv110 = fptrunc double %68 to float, !dbg !9456
  %69 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9457
  %softmax111 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %69, i32 0, i32 23, !dbg !9458
  store float %conv110, float* %softmax111, align 4, !dbg !9459
  br label %if.end139, !dbg !9460

if.else112:                                       ; preds = %entry
  %70 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9461
  %poin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %70, i32 0, i32 19, !dbg !9463
  %71 = load i8*, i8** %poin, align 8, !dbg !9463
  %tobool113 = icmp ne i8* %71, null, !dbg !9461
  br i1 %tobool113, label %land.lhs.true, label %if.else137, !dbg !9464

land.lhs.true:                                    ; preds = %if.else112
  %72 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9465
  %pointype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %72, i32 0, i32 5, !dbg !9466
  %73 = load i32, i32* %pointype, align 4, !dbg !9466
  %and = and i32 %73, 224, !dbg !9467
  %tobool114 = icmp ne i32 %and, 0, !dbg !9467
  br i1 %tobool114, label %if.then115, label %if.else137, !dbg !9468

if.then115:                                       ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %value, metadata !9469, metadata !DIExpression()), !dbg !9471
  %74 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9472
  %call116 = call double @ui_get_but_val(%struct.uiBut* %74), !dbg !9473
  %conv117 = fptrunc double %call116 to float, !dbg !9473
  store float %conv117, float* %value, align 4, !dbg !9471
  %75 = load float, float* %value, align 4, !dbg !9474
  %76 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9474
  %hardmin118 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %76, i32 0, i32 20, !dbg !9474
  %77 = load float, float* %hardmin118, align 8, !dbg !9474
  %cmp119 = fcmp olt float %75, %77, !dbg !9474
  br i1 %cmp119, label %if.then121, label %if.else123, !dbg !9477

if.then121:                                       ; preds = %if.then115
  %78 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9474
  %hardmin122 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %78, i32 0, i32 20, !dbg !9474
  %79 = load float, float* %hardmin122, align 8, !dbg !9474
  store float %79, float* %value, align 4, !dbg !9474
  br label %if.end130, !dbg !9474

if.else123:                                       ; preds = %if.then115
  %80 = load float, float* %value, align 4, !dbg !9478
  %81 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9478
  %hardmax124 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %81, i32 0, i32 21, !dbg !9478
  %82 = load float, float* %hardmax124, align 4, !dbg !9478
  %cmp125 = fcmp ogt float %80, %82, !dbg !9478
  br i1 %cmp125, label %if.then127, label %if.end129, !dbg !9474

if.then127:                                       ; preds = %if.else123
  %83 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9478
  %hardmax128 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %83, i32 0, i32 21, !dbg !9478
  %84 = load float, float* %hardmax128, align 4, !dbg !9478
  store float %84, float* %value, align 4, !dbg !9478
  br label %if.end129, !dbg !9478

if.end129:                                        ; preds = %if.then127, %if.else123
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.then121
  %85 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9480
  %softmin131 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %85, i32 0, i32 22, !dbg !9481
  %86 = load float, float* %softmin131, align 8, !dbg !9481
  %87 = load float, float* %value, align 4, !dbg !9482
  %call132 = call float @min_ff(float %86, float %87), !dbg !9483
  %88 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9484
  %softmin133 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %88, i32 0, i32 22, !dbg !9485
  store float %call132, float* %softmin133, align 8, !dbg !9486
  %89 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9487
  %softmax134 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %89, i32 0, i32 23, !dbg !9488
  %90 = load float, float* %softmax134, align 4, !dbg !9488
  %91 = load float, float* %value, align 4, !dbg !9489
  %call135 = call float @max_ff(float %90, float %91), !dbg !9490
  %92 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9491
  %softmax136 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %92, i32 0, i32 23, !dbg !9492
  store float %call135, float* %softmax136, align 4, !dbg !9493
  br label %if.end138, !dbg !9494

if.else137:                                       ; preds = %land.lhs.true, %if.else112
  br label %if.end138

if.end138:                                        ; preds = %if.else137, %if.end130
  br label %if.end139

if.end139:                                        ; preds = %if.else64, %if.end138, %if.end107
  ret void, !dbg !9495
}

declare dso_local zeroext i8 @RNA_property_enum_name_gettexted(%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i32, i8**) #3

declare dso_local i64 @BLI_strncpy_rlen(i8*, i8*, i64) #3

declare dso_local i8* @WM_key_event_string(i16 signext) #3

declare dso_local i64 @BLI_strcpy_rlen(i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiBlockBeginAlign(%struct.uiBlock* %block) #0 !dbg !9496 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !9497, metadata !DIExpression()), !dbg !9498
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !9499
  %flag = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 27, !dbg !9501
  %1 = load i32, i32* %flag, align 8, !dbg !9501
  %and = and i32 %1, 245760, !dbg !9502
  %tobool = icmp ne i32 %and, 0, !dbg !9502
  br i1 %tobool, label %if.then, label %if.end, !dbg !9503

if.then:                                          ; preds = %entry
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !9504
  call void @uiBlockEndAlign(%struct.uiBlock* %2), !dbg !9505
  br label %if.end, !dbg !9505

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !9506
  %flag1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %3, i32 0, i32 27, !dbg !9507
  %4 = load i32, i32* %flag1, align 8, !dbg !9508
  %or = or i32 %4, 131072, !dbg !9508
  store i32 %or, i32* %flag1, align 8, !dbg !9508
  %5 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !9509
  %alignnr = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %5, i32 0, i32 28, !dbg !9510
  %6 = load i16, i16* %alignnr, align 4, !dbg !9511
  %inc = add i16 %6, 1, !dbg !9511
  store i16 %inc, i16* %alignnr, align 4, !dbg !9511
  ret void, !dbg !9512
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @ui_but_can_align(%struct.uiBut* %but) #0 !dbg !9513 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !9514, metadata !DIExpression()), !dbg !9515
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9516
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 4, !dbg !9516
  %1 = load i32, i32* %type, align 8, !dbg !9516
  %cmp = icmp eq i32 %1, 5120, !dbg !9516
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !9516

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9516
  %type1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 4, !dbg !9516
  %3 = load i32, i32* %type1, align 8, !dbg !9516
  %cmp2 = icmp eq i32 %3, 19456, !dbg !9516
  br i1 %cmp2, label %lor.end, label %lor.lhs.false3, !dbg !9516

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9516
  %type4 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 4, !dbg !9516
  %5 = load i32, i32* %type4, align 8, !dbg !9516
  %cmp5 = icmp eq i32 %5, 19968, !dbg !9516
  br i1 %cmp5, label %lor.end, label %lor.lhs.false6, !dbg !9516

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9516
  %type7 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 4, !dbg !9516
  %7 = load i32, i32* %type7, align 8, !dbg !9516
  %cmp8 = icmp eq i32 %7, 10752, !dbg !9516
  br i1 %cmp8, label %lor.end, label %lor.rhs, !dbg !9516

lor.rhs:                                          ; preds = %lor.lhs.false6
  %8 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !9516
  %type9 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 4, !dbg !9516
  %9 = load i32, i32* %type9, align 8, !dbg !9516
  %cmp10 = icmp eq i32 %9, 27648, !dbg !9516
  br label %lor.end, !dbg !9516

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false6, %lor.lhs.false3, %lor.lhs.false, %entry
  %10 = phi i1 [ true, %lor.lhs.false6 ], [ true, %lor.lhs.false3 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp10, %lor.rhs ]
  %lnot = xor i1 %10, true, !dbg !9517
  %lnot.ext = zext i1 %lnot to i32, !dbg !9517
  %conv = trunc i32 %lnot.ext to i8, !dbg !9517
  ret i8 %conv, !dbg !9518
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_block_do_align_but(%struct.uiBut* %first, i16 signext %nr) #0 !dbg !9519 {
entry:
  %first.addr = alloca %struct.uiBut*, align 8
  %nr.addr = alloca i16, align 2
  %prev = alloca %struct.uiBut*, align 8
  %but = alloca %struct.uiBut*, align 8
  %next = alloca %struct.uiBut*, align 8
  %flag = alloca i32, align 4
  %cols = alloca i32, align 4
  %rows = alloca i32, align 4
  %bt = alloca %struct.uiBut*, align 8
  store %struct.uiBut* %first, %struct.uiBut** %first.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %first.addr, metadata !9522, metadata !DIExpression()), !dbg !9523
  store i16 %nr, i16* %nr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %nr.addr, metadata !9524, metadata !DIExpression()), !dbg !9525
  call void @llvm.dbg.declare(metadata %struct.uiBut** %prev, metadata !9526, metadata !DIExpression()), !dbg !9527
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !9528, metadata !DIExpression()), !dbg !9529
  store %struct.uiBut* null, %struct.uiBut** %but, align 8, !dbg !9529
  call void @llvm.dbg.declare(metadata %struct.uiBut** %next, metadata !9530, metadata !DIExpression()), !dbg !9531
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !9532, metadata !DIExpression()), !dbg !9533
  store i32 0, i32* %flag, align 4, !dbg !9533
  call void @llvm.dbg.declare(metadata i32* %cols, metadata !9534, metadata !DIExpression()), !dbg !9535
  store i32 0, i32* %cols, align 4, !dbg !9535
  call void @llvm.dbg.declare(metadata i32* %rows, metadata !9536, metadata !DIExpression()), !dbg !9537
  store i32 0, i32* %rows, align 4, !dbg !9537
  %0 = load %struct.uiBut*, %struct.uiBut** %first.addr, align 8, !dbg !9538
  store %struct.uiBut* %0, %struct.uiBut** %but, align 8, !dbg !9540
  br label %for.cond, !dbg !9541

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9542
  %tobool = icmp ne %struct.uiBut* %1, null, !dbg !9542
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !9544

land.rhs:                                         ; preds = %for.cond
  %2 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9545
  %alignnr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 10, !dbg !9546
  %3 = load i16, i16* %alignnr, align 8, !dbg !9546
  %conv = sext i16 %3 to i32, !dbg !9545
  %4 = load i16, i16* %nr.addr, align 2, !dbg !9547
  %conv1 = sext i16 %4 to i32, !dbg !9547
  %cmp = icmp eq i32 %conv, %conv1, !dbg !9548
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ], !dbg !9549
  br i1 %5, label %for.body, label %for.end, !dbg !9550

for.body:                                         ; preds = %land.end
  %6 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9551
  %next3 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 0, !dbg !9554
  %7 = load %struct.uiBut*, %struct.uiBut** %next3, align 8, !dbg !9554
  %tobool4 = icmp ne %struct.uiBut* %7, null, !dbg !9551
  br i1 %tobool4, label %land.lhs.true, label %if.end15, !dbg !9555

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9556
  %next5 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 0, !dbg !9557
  %9 = load %struct.uiBut*, %struct.uiBut** %next5, align 8, !dbg !9557
  %alignnr6 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 10, !dbg !9558
  %10 = load i16, i16* %alignnr6, align 8, !dbg !9558
  %conv7 = sext i16 %10 to i32, !dbg !9556
  %11 = load i16, i16* %nr.addr, align 2, !dbg !9559
  %conv8 = sext i16 %11 to i32, !dbg !9559
  %cmp9 = icmp eq i32 %conv7, %conv8, !dbg !9560
  br i1 %cmp9, label %if.then, label %if.end15, !dbg !9561

if.then:                                          ; preds = %land.lhs.true
  %12 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9562
  %13 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9565
  %next11 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %13, i32 0, i32 0, !dbg !9566
  %14 = load %struct.uiBut*, %struct.uiBut** %next11, align 8, !dbg !9566
  %call = call zeroext i8 @buts_are_horiz(%struct.uiBut* %12, %struct.uiBut* %14), !dbg !9567
  %tobool12 = icmp ne i8 %call, 0, !dbg !9567
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !9568

if.then13:                                        ; preds = %if.then
  %15 = load i32, i32* %cols, align 4, !dbg !9569
  %inc = add nsw i32 %15, 1, !dbg !9569
  store i32 %inc, i32* %cols, align 4, !dbg !9569
  br label %if.end, !dbg !9570

if.else:                                          ; preds = %if.then
  %16 = load i32, i32* %rows, align 4, !dbg !9571
  %inc14 = add nsw i32 %16, 1, !dbg !9571
  store i32 %inc14, i32* %rows, align 4, !dbg !9571
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then13
  br label %if.end15, !dbg !9572

if.end15:                                         ; preds = %if.end, %land.lhs.true, %for.body
  br label %for.inc, !dbg !9573

for.inc:                                          ; preds = %if.end15
  %17 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9574
  %next16 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %17, i32 0, i32 0, !dbg !9575
  %18 = load %struct.uiBut*, %struct.uiBut** %next16, align 8, !dbg !9575
  store %struct.uiBut* %18, %struct.uiBut** %but, align 8, !dbg !9576
  br label %for.cond, !dbg !9577, !llvm.loop !9578

for.end:                                          ; preds = %land.end
  %19 = load %struct.uiBut*, %struct.uiBut** %first.addr, align 8, !dbg !9580
  store %struct.uiBut* %19, %struct.uiBut** %but, align 8, !dbg !9582
  store %struct.uiBut* null, %struct.uiBut** %prev, align 8, !dbg !9583
  br label %for.cond17, !dbg !9584

for.cond17:                                       ; preds = %for.inc261, %for.end
  %20 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9585
  %tobool18 = icmp ne %struct.uiBut* %20, null, !dbg !9585
  br i1 %tobool18, label %land.rhs19, label %land.end25, !dbg !9587

land.rhs19:                                       ; preds = %for.cond17
  %21 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9588
  %alignnr20 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %21, i32 0, i32 10, !dbg !9589
  %22 = load i16, i16* %alignnr20, align 8, !dbg !9589
  %conv21 = sext i16 %22 to i32, !dbg !9588
  %23 = load i16, i16* %nr.addr, align 2, !dbg !9590
  %conv22 = sext i16 %23 to i32, !dbg !9590
  %cmp23 = icmp eq i32 %conv21, %conv22, !dbg !9591
  br label %land.end25

land.end25:                                       ; preds = %land.rhs19, %for.cond17
  %24 = phi i1 [ false, %for.cond17 ], [ %cmp23, %land.rhs19 ], !dbg !9592
  br i1 %24, label %for.body26, label %for.end263, !dbg !9593

for.body26:                                       ; preds = %land.end25
  %25 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9594
  %next27 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %25, i32 0, i32 0, !dbg !9596
  %26 = load %struct.uiBut*, %struct.uiBut** %next27, align 8, !dbg !9596
  store %struct.uiBut* %26, %struct.uiBut** %next, align 8, !dbg !9597
  %27 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !9598
  %tobool28 = icmp ne %struct.uiBut* %27, null, !dbg !9598
  br i1 %tobool28, label %land.lhs.true29, label %if.end36, !dbg !9600

land.lhs.true29:                                  ; preds = %for.body26
  %28 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !9601
  %alignnr30 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %28, i32 0, i32 10, !dbg !9602
  %29 = load i16, i16* %alignnr30, align 8, !dbg !9602
  %conv31 = sext i16 %29 to i32, !dbg !9601
  %30 = load i16, i16* %nr.addr, align 2, !dbg !9603
  %conv32 = sext i16 %30 to i32, !dbg !9603
  %cmp33 = icmp ne i32 %conv31, %conv32, !dbg !9604
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !9605

if.then35:                                        ; preds = %land.lhs.true29
  store %struct.uiBut* null, %struct.uiBut** %next, align 8, !dbg !9606
  br label %if.end36, !dbg !9607

if.end36:                                         ; preds = %if.then35, %land.lhs.true29, %for.body26
  %31 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9608
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %31, i32 0, i32 3, !dbg !9609
  %32 = load i32, i32* %drawflag, align 4, !dbg !9610
  %and = and i32 %32, -245761, !dbg !9610
  store i32 %and, i32* %drawflag, align 4, !dbg !9610
  %33 = load i32, i32* %flag, align 4, !dbg !9611
  %cmp37 = icmp eq i32 %33, 0, !dbg !9613
  br i1 %cmp37, label %if.then39, label %if.else53, !dbg !9614

if.then39:                                        ; preds = %if.end36
  %34 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !9615
  %tobool40 = icmp ne %struct.uiBut* %34, null, !dbg !9615
  br i1 %tobool40, label %if.then41, label %if.end52, !dbg !9618

if.then41:                                        ; preds = %if.then39
  %35 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9619
  %36 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !9622
  %call42 = call zeroext i8 @buts_are_horiz(%struct.uiBut* %35, %struct.uiBut* %36), !dbg !9623
  %tobool43 = icmp ne i8 %call42, 0, !dbg !9623
  br i1 %tobool43, label %if.then44, label %if.else50, !dbg !9624

if.then44:                                        ; preds = %if.then41
  %37 = load i32, i32* %rows, align 4, !dbg !9625
  %cmp45 = icmp eq i32 %37, 0, !dbg !9628
  br i1 %cmp45, label %if.then47, label %if.else48, !dbg !9629

if.then47:                                        ; preds = %if.then44
  store i32 65536, i32* %flag, align 4, !dbg !9630
  br label %if.end49, !dbg !9631

if.else48:                                        ; preds = %if.then44
  store i32 196608, i32* %flag, align 4, !dbg !9632
  br label %if.end49

if.end49:                                         ; preds = %if.else48, %if.then47
  br label %if.end51, !dbg !9633

if.else50:                                        ; preds = %if.then41
  store i32 131072, i32* %flag, align 4, !dbg !9634
  br label %if.end51

if.end51:                                         ; preds = %if.else50, %if.end49
  br label %if.end52, !dbg !9636

if.end52:                                         ; preds = %if.end51, %if.then39
  br label %if.end164, !dbg !9637

if.else53:                                        ; preds = %if.end36
  %38 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !9638
  %cmp54 = icmp eq %struct.uiBut* %38, null, !dbg !9640
  br i1 %cmp54, label %if.then56, label %if.else70, !dbg !9641

if.then56:                                        ; preds = %if.else53
  %39 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9642
  %tobool57 = icmp ne %struct.uiBut* %39, null, !dbg !9642
  br i1 %tobool57, label %if.then58, label %if.end69, !dbg !9645

if.then58:                                        ; preds = %if.then56
  %40 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9646
  %41 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9649
  %call59 = call zeroext i8 @buts_are_horiz(%struct.uiBut* %40, %struct.uiBut* %41), !dbg !9650
  %tobool60 = icmp ne i8 %call59, 0, !dbg !9650
  br i1 %tobool60, label %if.then61, label %if.else67, !dbg !9651

if.then61:                                        ; preds = %if.then58
  %42 = load i32, i32* %rows, align 4, !dbg !9652
  %cmp62 = icmp eq i32 %42, 0, !dbg !9655
  br i1 %cmp62, label %if.then64, label %if.else65, !dbg !9656

if.then64:                                        ; preds = %if.then61
  store i32 32768, i32* %flag, align 4, !dbg !9657
  br label %if.end66, !dbg !9658

if.else65:                                        ; preds = %if.then61
  store i32 49152, i32* %flag, align 4, !dbg !9659
  br label %if.end66

if.end66:                                         ; preds = %if.else65, %if.then64
  br label %if.end68, !dbg !9660

if.else67:                                        ; preds = %if.then58
  store i32 16384, i32* %flag, align 4, !dbg !9661
  br label %if.end68

if.end68:                                         ; preds = %if.else67, %if.end66
  br label %if.end69, !dbg !9663

if.end69:                                         ; preds = %if.end68, %if.then56
  br label %if.end163, !dbg !9664

if.else70:                                        ; preds = %if.else53
  %43 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9665
  %44 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !9667
  %call71 = call zeroext i8 @buts_are_horiz(%struct.uiBut* %43, %struct.uiBut* %44), !dbg !9668
  %tobool72 = icmp ne i8 %call71, 0, !dbg !9668
  br i1 %tobool72, label %if.then73, label %if.else124, !dbg !9669

if.then73:                                        ; preds = %if.else70
  %45 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9670
  %tobool74 = icmp ne %struct.uiBut* %45, null, !dbg !9670
  br i1 %tobool74, label %land.lhs.true75, label %if.else121, !dbg !9673

land.lhs.true75:                                  ; preds = %if.then73
  %46 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9674
  %47 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9675
  %call76 = call zeroext i8 @buts_are_horiz(%struct.uiBut* %46, %struct.uiBut* %47), !dbg !9676
  %conv77 = zext i8 %call76 to i32, !dbg !9676
  %cmp78 = icmp eq i32 %conv77, 0, !dbg !9677
  br i1 %cmp78, label %if.then80, label %if.else121, !dbg !9678

if.then80:                                        ; preds = %land.lhs.true75
  %48 = load i32, i32* %flag, align 4, !dbg !9679
  %and81 = and i32 %48, -32769, !dbg !9679
  store i32 %and81, i32* %flag, align 4, !dbg !9679
  %49 = load i32, i32* %flag, align 4, !dbg !9681
  %or = or i32 %49, 16384, !dbg !9681
  store i32 %or, i32* %flag, align 4, !dbg !9681
  %50 = load i32, i32* %rows, align 4, !dbg !9682
  %cmp82 = icmp sgt i32 %50, 0, !dbg !9684
  br i1 %cmp82, label %if.then84, label %if.end120, !dbg !9685

if.then84:                                        ; preds = %if.then80
  call void @llvm.dbg.declare(metadata %struct.uiBut** %bt, metadata !9686, metadata !DIExpression()), !dbg !9688
  %51 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9689
  store %struct.uiBut* %51, %struct.uiBut** %bt, align 8, !dbg !9688
  br label %while.cond, !dbg !9690

while.cond:                                       ; preds = %if.end109, %if.then84
  %52 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !9691
  %tobool85 = icmp ne %struct.uiBut* %52, null, !dbg !9691
  br i1 %tobool85, label %land.rhs86, label %land.end92, !dbg !9692

land.rhs86:                                       ; preds = %while.cond
  %53 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !9693
  %alignnr87 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %53, i32 0, i32 10, !dbg !9694
  %54 = load i16, i16* %alignnr87, align 8, !dbg !9694
  %conv88 = sext i16 %54 to i32, !dbg !9693
  %55 = load i16, i16* %nr.addr, align 2, !dbg !9695
  %conv89 = sext i16 %55 to i32, !dbg !9695
  %cmp90 = icmp eq i32 %conv88, %conv89, !dbg !9696
  br label %land.end92

land.end92:                                       ; preds = %land.rhs86, %while.cond
  %56 = phi i1 [ false, %while.cond ], [ %cmp90, %land.rhs86 ], !dbg !9697
  br i1 %56, label %while.body, label %while.end, !dbg !9690

while.body:                                       ; preds = %land.end92
  %57 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !9698
  %next93 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %57, i32 0, i32 0, !dbg !9701
  %58 = load %struct.uiBut*, %struct.uiBut** %next93, align 8, !dbg !9701
  %tobool94 = icmp ne %struct.uiBut* %58, null, !dbg !9698
  br i1 %tobool94, label %land.lhs.true95, label %if.end109, !dbg !9702

land.lhs.true95:                                  ; preds = %while.body
  %59 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !9703
  %next96 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %59, i32 0, i32 0, !dbg !9704
  %60 = load %struct.uiBut*, %struct.uiBut** %next96, align 8, !dbg !9704
  %alignnr97 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %60, i32 0, i32 10, !dbg !9705
  %61 = load i16, i16* %alignnr97, align 8, !dbg !9705
  %conv98 = sext i16 %61 to i32, !dbg !9703
  %62 = load i16, i16* %nr.addr, align 2, !dbg !9706
  %conv99 = sext i16 %62 to i32, !dbg !9706
  %cmp100 = icmp eq i32 %conv98, %conv99, !dbg !9707
  br i1 %cmp100, label %land.lhs.true102, label %if.end109, !dbg !9708

land.lhs.true102:                                 ; preds = %land.lhs.true95
  %63 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !9709
  %64 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !9710
  %next103 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %64, i32 0, i32 0, !dbg !9711
  %65 = load %struct.uiBut*, %struct.uiBut** %next103, align 8, !dbg !9711
  %call104 = call zeroext i8 @buts_are_horiz(%struct.uiBut* %63, %struct.uiBut* %65), !dbg !9712
  %conv105 = zext i8 %call104 to i32, !dbg !9712
  %cmp106 = icmp eq i32 %conv105, 0, !dbg !9713
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !9714

if.then108:                                       ; preds = %land.lhs.true102
  br label %while.end, !dbg !9715

if.end109:                                        ; preds = %land.lhs.true102, %land.lhs.true95, %while.body
  %66 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !9717
  %next110 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %66, i32 0, i32 0, !dbg !9718
  %67 = load %struct.uiBut*, %struct.uiBut** %next110, align 8, !dbg !9718
  store %struct.uiBut* %67, %struct.uiBut** %bt, align 8, !dbg !9719
  br label %while.cond, !dbg !9690, !llvm.loop !9720

while.end:                                        ; preds = %if.then108, %land.end92
  %68 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !9722
  %cmp111 = icmp eq %struct.uiBut* %68, null, !dbg !9724
  br i1 %cmp111, label %if.then118, label %lor.lhs.false, !dbg !9725

lor.lhs.false:                                    ; preds = %while.end
  %69 = load %struct.uiBut*, %struct.uiBut** %bt, align 8, !dbg !9726
  %alignnr113 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %69, i32 0, i32 10, !dbg !9727
  %70 = load i16, i16* %alignnr113, align 8, !dbg !9727
  %conv114 = sext i16 %70 to i32, !dbg !9726
  %71 = load i16, i16* %nr.addr, align 2, !dbg !9728
  %conv115 = sext i16 %71 to i32, !dbg !9728
  %cmp116 = icmp ne i32 %conv114, %conv115, !dbg !9729
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !9730

if.then118:                                       ; preds = %lor.lhs.false, %while.end
  store i32 81920, i32* %flag, align 4, !dbg !9731
  br label %if.end119, !dbg !9732

if.end119:                                        ; preds = %if.then118, %lor.lhs.false
  br label %if.end120, !dbg !9733

if.end120:                                        ; preds = %if.end119, %if.then80
  br label %if.end123, !dbg !9734

if.else121:                                       ; preds = %land.lhs.true75, %if.then73
  %72 = load i32, i32* %flag, align 4, !dbg !9735
  %or122 = or i32 %72, 32768, !dbg !9735
  store i32 %or122, i32* %flag, align 4, !dbg !9735
  br label %if.end123

if.end123:                                        ; preds = %if.else121, %if.end120
  br label %if.end162, !dbg !9737

if.else124:                                       ; preds = %if.else70
  %73 = load i32, i32* %cols, align 4, !dbg !9738
  %cmp125 = icmp eq i32 %73, 0, !dbg !9741
  br i1 %cmp125, label %if.then127, label %if.else129, !dbg !9742

if.then127:                                       ; preds = %if.else124
  %74 = load i32, i32* %flag, align 4, !dbg !9743
  %or128 = or i32 %74, 16384, !dbg !9743
  store i32 %or128, i32* %flag, align 4, !dbg !9743
  br label %if.end161, !dbg !9745

if.else129:                                       ; preds = %if.else124
  %75 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9746
  %tobool130 = icmp ne %struct.uiBut* %75, null, !dbg !9746
  br i1 %tobool130, label %land.lhs.true131, label %if.else137, !dbg !9749

land.lhs.true131:                                 ; preds = %if.else129
  %76 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9750
  %77 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9751
  %call132 = call zeroext i8 @buts_are_horiz(%struct.uiBut* %76, %struct.uiBut* %77), !dbg !9752
  %conv133 = zext i8 %call132 to i32, !dbg !9752
  %tobool134 = icmp ne i32 %conv133, 0, !dbg !9752
  br i1 %tobool134, label %if.then135, label %if.else137, !dbg !9753

if.then135:                                       ; preds = %land.lhs.true131
  %78 = load i32, i32* %flag, align 4, !dbg !9754
  %or136 = or i32 %78, 32768, !dbg !9754
  store i32 %or136, i32* %flag, align 4, !dbg !9754
  br label %if.end140, !dbg !9755

if.else137:                                       ; preds = %land.lhs.true131, %if.else129
  %79 = load i32, i32* %flag, align 4, !dbg !9756
  %and138 = and i32 %79, -32769, !dbg !9756
  store i32 %and138, i32* %flag, align 4, !dbg !9756
  %80 = load i32, i32* %flag, align 4, !dbg !9758
  %or139 = or i32 %80, 16384, !dbg !9758
  store i32 %or139, i32* %flag, align 4, !dbg !9758
  br label %if.end140

if.end140:                                        ; preds = %if.else137, %if.then135
  %81 = load i32, i32* %flag, align 4, !dbg !9759
  %and141 = and i32 %81, 16384, !dbg !9761
  %cmp142 = icmp eq i32 %and141, 0, !dbg !9762
  br i1 %cmp142, label %if.then144, label %if.else158, !dbg !9763

if.then144:                                       ; preds = %if.end140
  %82 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9764
  %tobool145 = icmp ne %struct.uiBut* %82, null, !dbg !9764
  br i1 %tobool145, label %if.then146, label %if.else155, !dbg !9767

if.then146:                                       ; preds = %if.then144
  %83 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !9768
  %tobool147 = icmp ne %struct.uiBut* %83, null, !dbg !9768
  br i1 %tobool147, label %land.lhs.true148, label %if.else153, !dbg !9771

land.lhs.true148:                                 ; preds = %if.then146
  %84 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9772
  %85 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !9773
  %call149 = call zeroext i8 @buts_are_horiz(%struct.uiBut* %84, %struct.uiBut* %85), !dbg !9774
  %conv150 = zext i8 %call149 to i32, !dbg !9774
  %tobool151 = icmp ne i32 %conv150, 0, !dbg !9774
  br i1 %tobool151, label %if.then152, label %if.else153, !dbg !9775

if.then152:                                       ; preds = %land.lhs.true148
  store i32 229376, i32* %flag, align 4, !dbg !9776
  br label %if.end154, !dbg !9777

if.else153:                                       ; preds = %land.lhs.true148, %if.then146
  store i32 163840, i32* %flag, align 4, !dbg !9778
  br label %if.end154

if.end154:                                        ; preds = %if.else153, %if.then152
  br label %if.end157, !dbg !9780

if.else155:                                       ; preds = %if.then144
  %86 = load i32, i32* %flag, align 4, !dbg !9781
  %or156 = or i32 %86, 131072, !dbg !9781
  store i32 %or156, i32* %flag, align 4, !dbg !9781
  br label %if.end157

if.end157:                                        ; preds = %if.else155, %if.end154
  br label %if.end160, !dbg !9782

if.else158:                                       ; preds = %if.end140
  %87 = load i32, i32* %flag, align 4, !dbg !9783
  %or159 = or i32 %87, 16384, !dbg !9783
  store i32 %or159, i32* %flag, align 4, !dbg !9783
  br label %if.end160

if.end160:                                        ; preds = %if.else158, %if.end157
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.then127
  br label %if.end162

if.end162:                                        ; preds = %if.end161, %if.end123
  br label %if.end163

if.end163:                                        ; preds = %if.end162, %if.end69
  br label %if.end164

if.end164:                                        ; preds = %if.end163, %if.end52
  %88 = load i32, i32* %flag, align 4, !dbg !9784
  %89 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9785
  %drawflag165 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %89, i32 0, i32 3, !dbg !9786
  %90 = load i32, i32* %drawflag165, align 4, !dbg !9787
  %or166 = or i32 %90, %88, !dbg !9787
  store i32 %or166, i32* %drawflag165, align 4, !dbg !9787
  %91 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9788
  %tobool167 = icmp ne %struct.uiBut* %91, null, !dbg !9788
  br i1 %tobool167, label %if.then168, label %if.end260, !dbg !9790

if.then168:                                       ; preds = %if.end164
  %92 = load i32, i32* %rows, align 4, !dbg !9791
  %cmp169 = icmp eq i32 %92, 0, !dbg !9794
  br i1 %cmp169, label %if.then171, label %if.else179, !dbg !9795

if.then171:                                       ; preds = %if.then168
  %93 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9796
  %rect = getelementptr inbounds %struct.uiBut, %struct.uiBut* %93, i32 0, i32 18, !dbg !9798
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 1, !dbg !9799
  %94 = load float, float* %xmax, align 4, !dbg !9799
  %95 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9800
  %rect172 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %95, i32 0, i32 18, !dbg !9801
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect172, i32 0, i32 0, !dbg !9802
  %96 = load float, float* %xmin, align 8, !dbg !9802
  %add = fadd float %94, %96, !dbg !9803
  %div = fdiv float %add, 2.000000e+00, !dbg !9804
  %97 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9805
  %rect173 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %97, i32 0, i32 18, !dbg !9806
  %xmin174 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect173, i32 0, i32 0, !dbg !9807
  store float %div, float* %xmin174, align 8, !dbg !9808
  %98 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9809
  %rect175 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %98, i32 0, i32 18, !dbg !9810
  %xmin176 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect175, i32 0, i32 0, !dbg !9811
  %99 = load float, float* %xmin176, align 8, !dbg !9811
  %100 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9812
  %rect177 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %100, i32 0, i32 18, !dbg !9813
  %xmax178 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect177, i32 0, i32 1, !dbg !9814
  store float %99, float* %xmax178, align 4, !dbg !9815
  br label %if.end259, !dbg !9816

if.else179:                                       ; preds = %if.then168
  %101 = load i32, i32* %cols, align 4, !dbg !9817
  %cmp180 = icmp eq i32 %101, 0, !dbg !9819
  br i1 %cmp180, label %if.then182, label %if.else193, !dbg !9820

if.then182:                                       ; preds = %if.else179
  %102 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9821
  %rect183 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %102, i32 0, i32 18, !dbg !9823
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect183, i32 0, i32 2, !dbg !9824
  %103 = load float, float* %ymin, align 8, !dbg !9824
  %104 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9825
  %rect184 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %104, i32 0, i32 18, !dbg !9826
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect184, i32 0, i32 3, !dbg !9827
  %105 = load float, float* %ymax, align 4, !dbg !9827
  %add185 = fadd float %103, %105, !dbg !9828
  %div186 = fdiv float %add185, 2.000000e+00, !dbg !9829
  %106 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9830
  %rect187 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %106, i32 0, i32 18, !dbg !9831
  %ymax188 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect187, i32 0, i32 3, !dbg !9832
  store float %div186, float* %ymax188, align 4, !dbg !9833
  %107 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9834
  %rect189 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %107, i32 0, i32 18, !dbg !9835
  %ymax190 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect189, i32 0, i32 3, !dbg !9836
  %108 = load float, float* %ymax190, align 4, !dbg !9836
  %109 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9837
  %rect191 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %109, i32 0, i32 18, !dbg !9838
  %ymin192 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect191, i32 0, i32 2, !dbg !9839
  store float %108, float* %ymin192, align 8, !dbg !9840
  br label %if.end258, !dbg !9841

if.else193:                                       ; preds = %if.else179
  %110 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9842
  %111 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9845
  %call194 = call zeroext i8 @buts_are_horiz(%struct.uiBut* %110, %struct.uiBut* %111), !dbg !9846
  %tobool195 = icmp ne i8 %call194, 0, !dbg !9846
  br i1 %tobool195, label %if.then196, label %if.else213, !dbg !9847

if.then196:                                       ; preds = %if.else193
  %112 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9848
  %rect197 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %112, i32 0, i32 18, !dbg !9850
  %xmax198 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect197, i32 0, i32 1, !dbg !9851
  %113 = load float, float* %xmax198, align 4, !dbg !9851
  %114 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9852
  %rect199 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %114, i32 0, i32 18, !dbg !9853
  %xmin200 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect199, i32 0, i32 0, !dbg !9854
  %115 = load float, float* %xmin200, align 8, !dbg !9854
  %add201 = fadd float %113, %115, !dbg !9855
  %div202 = fdiv float %add201, 2.000000e+00, !dbg !9856
  %116 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9857
  %rect203 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %116, i32 0, i32 18, !dbg !9858
  %xmin204 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect203, i32 0, i32 0, !dbg !9859
  store float %div202, float* %xmin204, align 8, !dbg !9860
  %117 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9861
  %rect205 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %117, i32 0, i32 18, !dbg !9862
  %xmin206 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect205, i32 0, i32 0, !dbg !9863
  %118 = load float, float* %xmin206, align 8, !dbg !9863
  %119 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9864
  %rect207 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %119, i32 0, i32 18, !dbg !9865
  %xmax208 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect207, i32 0, i32 1, !dbg !9866
  store float %118, float* %xmax208, align 4, !dbg !9867
  %120 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9868
  %rect209 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %120, i32 0, i32 18, !dbg !9869
  %ymax210 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect209, i32 0, i32 3, !dbg !9870
  %121 = load float, float* %ymax210, align 4, !dbg !9870
  %122 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9871
  %rect211 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %122, i32 0, i32 18, !dbg !9872
  %ymax212 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect211, i32 0, i32 3, !dbg !9873
  store float %121, float* %ymax212, align 4, !dbg !9874
  br label %if.end257, !dbg !9875

if.else213:                                       ; preds = %if.else193
  %123 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9876
  %prev214 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %123, i32 0, i32 1, !dbg !9878
  %124 = load %struct.uiBut*, %struct.uiBut** %prev214, align 8, !dbg !9878
  %tobool215 = icmp ne %struct.uiBut* %124, null, !dbg !9876
  br i1 %tobool215, label %land.lhs.true216, label %if.else251, !dbg !9879

land.lhs.true216:                                 ; preds = %if.else213
  %125 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9880
  %prev217 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %125, i32 0, i32 1, !dbg !9881
  %126 = load %struct.uiBut*, %struct.uiBut** %prev217, align 8, !dbg !9881
  %127 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9882
  %call218 = call zeroext i8 @buts_are_horiz(%struct.uiBut* %126, %struct.uiBut* %127), !dbg !9883
  %conv219 = zext i8 %call218 to i32, !dbg !9883
  %cmp220 = icmp eq i32 %conv219, 0, !dbg !9884
  br i1 %cmp220, label %if.then222, label %if.else251, !dbg !9885

if.then222:                                       ; preds = %land.lhs.true216
  %128 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9886
  %rect223 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %128, i32 0, i32 18, !dbg !9888
  %ymin224 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect223, i32 0, i32 2, !dbg !9889
  %129 = load float, float* %ymin224, align 8, !dbg !9889
  %130 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9890
  %rect225 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %130, i32 0, i32 18, !dbg !9891
  %ymax226 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect225, i32 0, i32 3, !dbg !9892
  %131 = load float, float* %ymax226, align 4, !dbg !9892
  %add227 = fadd float %129, %131, !dbg !9893
  %div228 = fdiv float %add227, 2.000000e+00, !dbg !9894
  %132 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9895
  %rect229 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %132, i32 0, i32 18, !dbg !9896
  %ymax230 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect229, i32 0, i32 3, !dbg !9897
  store float %div228, float* %ymax230, align 4, !dbg !9898
  %133 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9899
  %rect231 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %133, i32 0, i32 18, !dbg !9900
  %ymax232 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect231, i32 0, i32 3, !dbg !9901
  %134 = load float, float* %ymax232, align 4, !dbg !9901
  %135 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9902
  %rect233 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %135, i32 0, i32 18, !dbg !9903
  %ymin234 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect233, i32 0, i32 2, !dbg !9904
  store float %134, float* %ymin234, align 8, !dbg !9905
  %136 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9906
  %rect235 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %136, i32 0, i32 18, !dbg !9907
  %xmin236 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect235, i32 0, i32 0, !dbg !9908
  %137 = load float, float* %xmin236, align 8, !dbg !9908
  %138 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9909
  %rect237 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %138, i32 0, i32 18, !dbg !9910
  %xmin238 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect237, i32 0, i32 0, !dbg !9911
  store float %137, float* %xmin238, align 8, !dbg !9912
  %139 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !9913
  %tobool239 = icmp ne %struct.uiBut* %139, null, !dbg !9913
  br i1 %tobool239, label %land.lhs.true240, label %if.end250, !dbg !9915

land.lhs.true240:                                 ; preds = %if.then222
  %140 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9916
  %141 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !9917
  %call241 = call zeroext i8 @buts_are_horiz(%struct.uiBut* %140, %struct.uiBut* %141), !dbg !9918
  %conv242 = zext i8 %call241 to i32, !dbg !9918
  %cmp243 = icmp eq i32 %conv242, 0, !dbg !9919
  br i1 %cmp243, label %if.then245, label %if.end250, !dbg !9920

if.then245:                                       ; preds = %land.lhs.true240
  %142 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9921
  %rect246 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %142, i32 0, i32 18, !dbg !9922
  %xmax247 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect246, i32 0, i32 1, !dbg !9923
  %143 = load float, float* %xmax247, align 4, !dbg !9923
  %144 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9924
  %rect248 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %144, i32 0, i32 18, !dbg !9925
  %xmax249 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect248, i32 0, i32 1, !dbg !9926
  store float %143, float* %xmax249, align 4, !dbg !9927
  br label %if.end250, !dbg !9924

if.end250:                                        ; preds = %if.then245, %land.lhs.true240, %if.then222
  br label %if.end256, !dbg !9928

if.else251:                                       ; preds = %land.lhs.true216, %if.else213
  %145 = load %struct.uiBut*, %struct.uiBut** %prev, align 8, !dbg !9929
  %rect252 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %145, i32 0, i32 18, !dbg !9931
  %ymin253 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect252, i32 0, i32 2, !dbg !9932
  %146 = load float, float* %ymin253, align 8, !dbg !9932
  %147 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9933
  %rect254 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %147, i32 0, i32 18, !dbg !9934
  %ymax255 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect254, i32 0, i32 3, !dbg !9935
  store float %146, float* %ymax255, align 4, !dbg !9936
  br label %if.end256

if.end256:                                        ; preds = %if.else251, %if.end250
  br label %if.end257

if.end257:                                        ; preds = %if.end256, %if.then196
  br label %if.end258

if.end258:                                        ; preds = %if.end257, %if.then182
  br label %if.end259

if.end259:                                        ; preds = %if.end258, %if.then171
  br label %if.end260, !dbg !9937

if.end260:                                        ; preds = %if.end259, %if.end164
  br label %for.inc261, !dbg !9938

for.inc261:                                       ; preds = %if.end260
  %148 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9939
  store %struct.uiBut* %148, %struct.uiBut** %prev, align 8, !dbg !9940
  %149 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !9941
  %next262 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %149, i32 0, i32 0, !dbg !9942
  %150 = load %struct.uiBut*, %struct.uiBut** %next262, align 8, !dbg !9942
  store %struct.uiBut* %150, %struct.uiBut** %but, align 8, !dbg !9943
  br label %for.cond17, !dbg !9944, !llvm.loop !9945

for.end263:                                       ; preds = %land.end25
  ret void, !dbg !9947
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ColorManagedDisplay* @ui_block_display_get(%struct.uiBlock* %block) #0 !dbg !9948 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !9954, metadata !DIExpression()), !dbg !9955
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !9956
  %display_device = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 52, !dbg !9957
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %display_device, i64 0, i64 0, !dbg !9956
  %call = call %struct.ColorManagedDisplay* @IMB_colormanagement_display_get_named(i8* %arraydecay), !dbg !9958
  ret %struct.ColorManagedDisplay* %call, !dbg !9959
}

declare dso_local %struct.ColorManagedDisplay* @IMB_colormanagement_display_get_named(i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_block_to_display_space_v3(%struct.uiBlock* %block, float* %pixel) #0 !dbg !9960 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %pixel.addr = alloca float*, align 8
  %display = alloca %struct.ColorManagedDisplay*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !9963, metadata !DIExpression()), !dbg !9964
  store float* %pixel, float** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pixel.addr, metadata !9965, metadata !DIExpression()), !dbg !9966
  call void @llvm.dbg.declare(metadata %struct.ColorManagedDisplay** %display, metadata !9967, metadata !DIExpression()), !dbg !9968
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !9969
  %call = call %struct.ColorManagedDisplay* @ui_block_display_get(%struct.uiBlock* %0), !dbg !9970
  store %struct.ColorManagedDisplay* %call, %struct.ColorManagedDisplay** %display, align 8, !dbg !9968
  %1 = load float*, float** %pixel.addr, align 8, !dbg !9971
  %2 = load %struct.ColorManagedDisplay*, %struct.ColorManagedDisplay** %display, align 8, !dbg !9972
  call void @IMB_colormanagement_scene_linear_to_display_v3(float* %1, %struct.ColorManagedDisplay* %2), !dbg !9973
  ret void, !dbg !9974
}

declare dso_local void @IMB_colormanagement_scene_linear_to_display_v3(float*, %struct.ColorManagedDisplay*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_block_to_scene_linear_v3(%struct.uiBlock* %block, float* %pixel) #0 !dbg !9975 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %pixel.addr = alloca float*, align 8
  %display = alloca %struct.ColorManagedDisplay*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !9976, metadata !DIExpression()), !dbg !9977
  store float* %pixel, float** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pixel.addr, metadata !9978, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.declare(metadata %struct.ColorManagedDisplay** %display, metadata !9980, metadata !DIExpression()), !dbg !9981
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !9982
  %call = call %struct.ColorManagedDisplay* @ui_block_display_get(%struct.uiBlock* %0), !dbg !9983
  store %struct.ColorManagedDisplay* %call, %struct.ColorManagedDisplay** %display, align 8, !dbg !9981
  %1 = load float*, float** %pixel.addr, align 8, !dbg !9984
  %2 = load %struct.ColorManagedDisplay*, %struct.ColorManagedDisplay** %display, align 8, !dbg !9985
  call void @IMB_colormanagement_display_to_scene_linear_v3(float* %1, %struct.ColorManagedDisplay* %2), !dbg !9986
  ret void, !dbg !9987
}

declare dso_local void @IMB_colormanagement_display_to_scene_linear_v3(float*, %struct.ColorManagedDisplay*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefBut(%struct.uiBlock* %block, i32 %type, i32 %retval1, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !9988 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i8*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !9991, metadata !DIExpression()), !dbg !9992
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !9993, metadata !DIExpression()), !dbg !9994
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !9995, metadata !DIExpression()), !dbg !9996
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !9997, metadata !DIExpression()), !dbg !9998
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !9999, metadata !DIExpression()), !dbg !10000
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !10001, metadata !DIExpression()), !dbg !10002
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !10003, metadata !DIExpression()), !dbg !10004
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !10005, metadata !DIExpression()), !dbg !10006
  store i8* %poin, i8** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %poin.addr, metadata !10007, metadata !DIExpression()), !dbg !10008
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !10009, metadata !DIExpression()), !dbg !10010
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !10011, metadata !DIExpression()), !dbg !10012
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !10013, metadata !DIExpression()), !dbg !10014
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !10015, metadata !DIExpression()), !dbg !10016
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !10017, metadata !DIExpression()), !dbg !10018
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !10019, metadata !DIExpression()), !dbg !10020
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10021
  %1 = load i32, i32* %type.addr, align 4, !dbg !10022
  %2 = load i32, i32* %retval.addr, align 4, !dbg !10023
  %3 = load i8*, i8** %str.addr, align 8, !dbg !10024
  %4 = load i32, i32* %x.addr, align 4, !dbg !10025
  %5 = load i32, i32* %y.addr, align 4, !dbg !10026
  %6 = load i16, i16* %width.addr, align 2, !dbg !10027
  %7 = load i16, i16* %height.addr, align 2, !dbg !10028
  %8 = load i8*, i8** %poin.addr, align 8, !dbg !10029
  %9 = load float, float* %min.addr, align 4, !dbg !10030
  %10 = load float, float* %max.addr, align 4, !dbg !10031
  %11 = load float, float* %a1.addr, align 4, !dbg !10032
  %12 = load float, float* %a2.addr, align 4, !dbg !10033
  %13 = load i8*, i8** %tip.addr, align 8, !dbg !10034
  %call = call %struct.uiBut* @ui_def_but(%struct.uiBlock* %0, i32 %1, i32 %2, i8* %3, i32 %4, i32 %5, i16 signext %6, i16 signext %7, i8* %8, float %9, float %10, float %11, float %12, i8* %13), !dbg !10035
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !10020
  %14 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10036
  call void @ui_check_but(%struct.uiBut* %14), !dbg !10037
  %15 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10038
  ret %struct.uiBut* %15, !dbg !10039
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiBut* @ui_def_but(%struct.uiBlock* %block, i32 %type, i32 %retval1, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !10040 {
entry:
  %retval = alloca %struct.uiBut*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i8*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  %slen = alloca i32, align 4
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !10041, metadata !DIExpression()), !dbg !10042
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10043, metadata !DIExpression()), !dbg !10044
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !10045, metadata !DIExpression()), !dbg !10046
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10047, metadata !DIExpression()), !dbg !10048
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !10049, metadata !DIExpression()), !dbg !10050
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !10051, metadata !DIExpression()), !dbg !10052
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !10053, metadata !DIExpression()), !dbg !10054
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !10055, metadata !DIExpression()), !dbg !10056
  store i8* %poin, i8** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %poin.addr, metadata !10057, metadata !DIExpression()), !dbg !10058
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !10059, metadata !DIExpression()), !dbg !10060
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !10061, metadata !DIExpression()), !dbg !10062
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !10063, metadata !DIExpression()), !dbg !10064
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !10065, metadata !DIExpression()), !dbg !10066
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !10067, metadata !DIExpression()), !dbg !10068
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !10069, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.declare(metadata i32* %slen, metadata !10071, metadata !DIExpression()), !dbg !10072
  %0 = load i32, i32* %type.addr, align 4, !dbg !10073
  %and = and i32 %0, 32256, !dbg !10075
  %cmp = icmp eq i32 %and, 5120, !dbg !10076
  br i1 %cmp, label %if.then, label %if.end, !dbg !10077

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !10078

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %type.addr, align 4, !dbg !10080
  %and2 = and i32 %1, 224, !dbg !10082
  %tobool = icmp ne i32 %and2, 0, !dbg !10082
  br i1 %tobool, label %if.then3, label %if.end7, !dbg !10083

if.then3:                                         ; preds = %if.end
  %2 = load i8*, i8** %poin.addr, align 8, !dbg !10084
  %cmp4 = icmp eq i8* %2, null, !dbg !10087
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !10088

if.then5:                                         ; preds = %if.then3
  store %struct.uiBut* null, %struct.uiBut** %retval, align 8, !dbg !10089
  br label %return, !dbg !10089

if.end6:                                          ; preds = %if.then3
  br label %if.end7, !dbg !10091

if.end7:                                          ; preds = %if.end6, %if.end
  %3 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10092
  %call = call i8* %3(i64 1000, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0)), !dbg !10092
  %4 = bitcast i8* %call to %struct.uiBut*, !dbg !10092
  store %struct.uiBut* %4, %struct.uiBut** %but, align 8, !dbg !10093
  %5 = load i32, i32* %type.addr, align 4, !dbg !10094
  %and8 = and i32 %5, 32256, !dbg !10095
  %6 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10096
  %type9 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 4, !dbg !10097
  store i32 %and8, i32* %type9, align 8, !dbg !10098
  %7 = load i32, i32* %type.addr, align 4, !dbg !10099
  %and10 = and i32 %7, 224, !dbg !10100
  %8 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10101
  %pointype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 5, !dbg !10102
  store i32 %and10, i32* %pointype, align 4, !dbg !10103
  %9 = load i32, i32* %type.addr, align 4, !dbg !10104
  %and11 = and i32 %9, 256, !dbg !10105
  %conv = trunc i32 %and11 to i16, !dbg !10104
  %10 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10106
  %bit = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 6, !dbg !10107
  store i16 %conv, i16* %bit, align 8, !dbg !10108
  %11 = load i32, i32* %type.addr, align 4, !dbg !10109
  %and12 = and i32 %11, 31, !dbg !10110
  %conv13 = trunc i32 %and12 to i16, !dbg !10109
  %12 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10111
  %bitnr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 7, !dbg !10112
  store i16 %conv13, i16* %bitnr, align 2, !dbg !10113
  %13 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10114
  %icon = getelementptr inbounds %struct.uiBut, %struct.uiBut* %13, i32 0, i32 44, !dbg !10115
  store i32 0, i32* %icon, align 8, !dbg !10116
  %14 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10117
  %iconadd = getelementptr inbounds %struct.uiBut, %struct.uiBut* %14, i32 0, i32 51, !dbg !10118
  store i16 0, i16* %iconadd, align 4, !dbg !10119
  %15 = load i32, i32* %retval.addr, align 4, !dbg !10120
  %conv14 = trunc i32 %15 to i16, !dbg !10120
  %16 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10121
  %retval15 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %16, i32 0, i32 8, !dbg !10122
  store i16 %conv14, i16* %retval15, align 4, !dbg !10123
  %17 = load i8*, i8** %str.addr, align 8, !dbg !10124
  %call16 = call i64 @strlen(i8* %17) #8, !dbg !10125
  %conv17 = trunc i64 %call16 to i32, !dbg !10125
  store i32 %conv17, i32* %slen, align 4, !dbg !10126
  %18 = load i32, i32* %slen, align 4, !dbg !10127
  %cmp18 = icmp sge i32 %18, 128, !dbg !10129
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !10130

if.then20:                                        ; preds = %if.end7
  %19 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !10131
  %20 = load i32, i32* %slen, align 4, !dbg !10133
  %add = add nsw i32 %20, 1, !dbg !10134
  %conv21 = sext i32 %add to i64, !dbg !10133
  %call22 = call i8* %19(i64 %conv21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0)), !dbg !10131
  %21 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10135
  %str23 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %21, i32 0, i32 15, !dbg !10136
  store i8* %call22, i8** %str23, align 8, !dbg !10137
  br label %if.end25, !dbg !10138

if.else:                                          ; preds = %if.end7
  %22 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10139
  %strdata = getelementptr inbounds %struct.uiBut, %struct.uiBut* %22, i32 0, i32 16, !dbg !10141
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %strdata, i64 0, i64 0, !dbg !10139
  %23 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10142
  %str24 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %23, i32 0, i32 15, !dbg !10143
  store i8* %arraydecay, i8** %str24, align 8, !dbg !10144
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then20
  %24 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10145
  %str26 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %24, i32 0, i32 15, !dbg !10146
  %25 = load i8*, i8** %str26, align 8, !dbg !10146
  %26 = load i8*, i8** %str.addr, align 8, !dbg !10147
  %27 = load i32, i32* %slen, align 4, !dbg !10148
  %add27 = add nsw i32 %27, 1, !dbg !10149
  %conv28 = sext i32 %add27 to i64, !dbg !10148
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %26, i64 %conv28, i1 false), !dbg !10150
  %28 = load i32, i32* %x.addr, align 4, !dbg !10151
  %conv29 = sitofp i32 %28 to float, !dbg !10151
  %29 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10152
  %rect = getelementptr inbounds %struct.uiBut, %struct.uiBut* %29, i32 0, i32 18, !dbg !10153
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 0, !dbg !10154
  store float %conv29, float* %xmin, align 8, !dbg !10155
  %30 = load i32, i32* %y.addr, align 4, !dbg !10156
  %conv30 = sitofp i32 %30 to float, !dbg !10156
  %31 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10157
  %rect31 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %31, i32 0, i32 18, !dbg !10158
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect31, i32 0, i32 2, !dbg !10159
  store float %conv30, float* %ymin, align 8, !dbg !10160
  %32 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10161
  %rect32 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %32, i32 0, i32 18, !dbg !10162
  %xmin33 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect32, i32 0, i32 0, !dbg !10163
  %33 = load float, float* %xmin33, align 8, !dbg !10163
  %34 = load i16, i16* %width.addr, align 2, !dbg !10164
  %conv34 = sext i16 %34 to i32, !dbg !10164
  %conv35 = sitofp i32 %conv34 to float, !dbg !10164
  %add36 = fadd float %33, %conv35, !dbg !10165
  %35 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10166
  %rect37 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %35, i32 0, i32 18, !dbg !10167
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect37, i32 0, i32 1, !dbg !10168
  store float %add36, float* %xmax, align 4, !dbg !10169
  %36 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10170
  %rect38 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %36, i32 0, i32 18, !dbg !10171
  %ymin39 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect38, i32 0, i32 2, !dbg !10172
  %37 = load float, float* %ymin39, align 8, !dbg !10172
  %38 = load i16, i16* %height.addr, align 2, !dbg !10173
  %conv40 = sext i16 %38 to i32, !dbg !10173
  %conv41 = sitofp i32 %conv40 to float, !dbg !10173
  %add42 = fadd float %37, %conv41, !dbg !10174
  %39 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10175
  %rect43 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %39, i32 0, i32 18, !dbg !10176
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect43, i32 0, i32 3, !dbg !10177
  store float %add42, float* %ymax, align 4, !dbg !10178
  %40 = load i8*, i8** %poin.addr, align 8, !dbg !10179
  %41 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10180
  %poin44 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %41, i32 0, i32 19, !dbg !10181
  store i8* %40, i8** %poin44, align 8, !dbg !10182
  %42 = load float, float* %min.addr, align 4, !dbg !10183
  %43 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10184
  %softmin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %43, i32 0, i32 22, !dbg !10185
  store float %42, float* %softmin, align 8, !dbg !10186
  %44 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10187
  %hardmin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %44, i32 0, i32 20, !dbg !10188
  store float %42, float* %hardmin, align 8, !dbg !10189
  %45 = load float, float* %max.addr, align 4, !dbg !10190
  %46 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10191
  %softmax = getelementptr inbounds %struct.uiBut, %struct.uiBut* %46, i32 0, i32 23, !dbg !10192
  store float %45, float* %softmax, align 4, !dbg !10193
  %47 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10194
  %hardmax = getelementptr inbounds %struct.uiBut, %struct.uiBut* %47, i32 0, i32 21, !dbg !10195
  store float %45, float* %hardmax, align 4, !dbg !10196
  %48 = load float, float* %a1.addr, align 4, !dbg !10197
  %49 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10198
  %a145 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %49, i32 0, i32 24, !dbg !10199
  store float %48, float* %a145, align 8, !dbg !10200
  %50 = load float, float* %a2.addr, align 4, !dbg !10201
  %51 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10202
  %a246 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %51, i32 0, i32 25, !dbg !10203
  store float %50, float* %a246, align 4, !dbg !10204
  %52 = load i8*, i8** %tip.addr, align 8, !dbg !10205
  %53 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10206
  %tip47 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %53, i32 0, i32 42, !dbg !10207
  store i8* %52, i8** %tip47, align 8, !dbg !10208
  %54 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10209
  %lock = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %54, i32 0, i32 35, !dbg !10210
  %55 = load i8, i8* %lock, align 8, !dbg !10210
  %56 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10211
  %lock48 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %56, i32 0, i32 45, !dbg !10212
  store i8 %55, i8* %lock48, align 4, !dbg !10213
  %57 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10214
  %lockstr = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %57, i32 0, i32 34, !dbg !10215
  %58 = load i8*, i8** %lockstr, align 8, !dbg !10215
  %59 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10216
  %lockstr49 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %59, i32 0, i32 43, !dbg !10217
  store i8* %58, i8** %lockstr49, align 8, !dbg !10218
  %60 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10219
  %dt = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %60, i32 0, i32 30, !dbg !10220
  %61 = load i8, i8* %dt, align 1, !dbg !10220
  %62 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10221
  %dt50 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %62, i32 0, i32 46, !dbg !10222
  store i8 %61, i8* %dt50, align 1, !dbg !10223
  %63 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10224
  %pie_dir = getelementptr inbounds %struct.uiBut, %struct.uiBut* %63, i32 0, i32 47, !dbg !10225
  store i8 -1, i8* %pie_dir, align 2, !dbg !10226
  %64 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10227
  %65 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10228
  %block51 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %65, i32 0, i32 74, !dbg !10229
  store %struct.uiBlock* %64, %struct.uiBlock** %block51, align 8, !dbg !10230
  %66 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10231
  %flag = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %66, i32 0, i32 27, !dbg !10233
  %67 = load i32, i32* %flag, align 8, !dbg !10233
  %and52 = and i32 %67, 245760, !dbg !10234
  %tobool53 = icmp ne i32 %and52, 0, !dbg !10234
  br i1 %tobool53, label %land.lhs.true, label %if.end59, !dbg !10235

land.lhs.true:                                    ; preds = %if.end25
  %68 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10236
  %call54 = call zeroext i8 @ui_but_can_align(%struct.uiBut* %68), !dbg !10237
  %conv55 = zext i8 %call54 to i32, !dbg !10237
  %tobool56 = icmp ne i32 %conv55, 0, !dbg !10237
  br i1 %tobool56, label %if.then57, label %if.end59, !dbg !10238

if.then57:                                        ; preds = %land.lhs.true
  %69 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10239
  %alignnr = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %69, i32 0, i32 28, !dbg !10240
  %70 = load i16, i16* %alignnr, align 4, !dbg !10240
  %71 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10241
  %alignnr58 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %71, i32 0, i32 10, !dbg !10242
  store i16 %70, i16* %alignnr58, align 8, !dbg !10243
  br label %if.end59, !dbg !10241

if.end59:                                         ; preds = %if.then57, %land.lhs.true, %if.end25
  %72 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10244
  %func = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %72, i32 0, i32 14, !dbg !10245
  %73 = load void (%struct.bContext*, i8*, i8*)*, void (%struct.bContext*, i8*, i8*)** %func, align 8, !dbg !10245
  %74 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10246
  %func60 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %74, i32 0, i32 27, !dbg !10247
  store void (%struct.bContext*, i8*, i8*)* %73, void (%struct.bContext*, i8*, i8*)** %func60, align 8, !dbg !10248
  %75 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10249
  %func_arg1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %75, i32 0, i32 15, !dbg !10250
  %76 = load i8*, i8** %func_arg1, align 8, !dbg !10250
  %77 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10251
  %func_arg161 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %77, i32 0, i32 28, !dbg !10252
  store i8* %76, i8** %func_arg161, align 8, !dbg !10253
  %78 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10254
  %func_arg2 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %78, i32 0, i32 16, !dbg !10255
  %79 = load i8*, i8** %func_arg2, align 8, !dbg !10255
  %80 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10256
  %func_arg262 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %80, i32 0, i32 29, !dbg !10257
  store i8* %79, i8** %func_arg262, align 8, !dbg !10258
  %81 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10259
  %funcN = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %81, i32 0, i32 17, !dbg !10260
  %82 = load void (%struct.bContext*, i8*, i8*)*, void (%struct.bContext*, i8*, i8*)** %funcN, align 8, !dbg !10260
  %83 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10261
  %funcN63 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %83, i32 0, i32 30, !dbg !10262
  store void (%struct.bContext*, i8*, i8*)* %82, void (%struct.bContext*, i8*, i8*)** %funcN63, align 8, !dbg !10263
  %84 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10264
  %func_argN = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %84, i32 0, i32 18, !dbg !10266
  %85 = load i8*, i8** %func_argN, align 8, !dbg !10266
  %tobool64 = icmp ne i8* %85, null, !dbg !10264
  br i1 %tobool64, label %if.then65, label %if.end69, !dbg !10267

if.then65:                                        ; preds = %if.end59
  %86 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !10268
  %87 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10269
  %func_argN66 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %87, i32 0, i32 18, !dbg !10270
  %88 = load i8*, i8** %func_argN66, align 8, !dbg !10270
  %call67 = call i8* %86(i8* %88), !dbg !10268
  %89 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10271
  %func_argN68 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %89, i32 0, i32 31, !dbg !10272
  store i8* %call67, i8** %func_argN68, align 8, !dbg !10273
  br label %if.end69, !dbg !10271

if.end69:                                         ; preds = %if.then65, %if.end59
  %90 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10274
  %pos = getelementptr inbounds %struct.uiBut, %struct.uiBut* %90, i32 0, i32 12, !dbg !10275
  store i16 -1, i16* %pos, align 4, !dbg !10276
  %91 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10277
  %type70 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %91, i32 0, i32 4, !dbg !10277
  %92 = load i32, i32* %type70, align 8, !dbg !10277
  %cmp71 = icmp eq i32 %92, 2560, !dbg !10277
  br i1 %cmp71, label %if.then76, label %lor.lhs.false, !dbg !10277

lor.lhs.false:                                    ; preds = %if.end69
  %93 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10277
  %type73 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %93, i32 0, i32 4, !dbg !10277
  %94 = load i32, i32* %type73, align 8, !dbg !10277
  %cmp74 = icmp eq i32 %94, 7168, !dbg !10277
  br i1 %cmp74, label %if.then76, label %if.end97, !dbg !10279

if.then76:                                        ; preds = %lor.lhs.false, %if.end69
  %95 = load i32, i32* %slen, align 4, !dbg !10280
  %cmp77 = icmp sgt i32 %95, 0, !dbg !10283
  br i1 %cmp77, label %land.lhs.true79, label %if.end96, !dbg !10284

land.lhs.true79:                                  ; preds = %if.then76
  %96 = load i32, i32* %slen, align 4, !dbg !10285
  %cmp80 = icmp slt i32 %96, 126, !dbg !10286
  br i1 %cmp80, label %if.then82, label %if.end96, !dbg !10287

if.then82:                                        ; preds = %land.lhs.true79
  %97 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10288
  %str83 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %97, i32 0, i32 15, !dbg !10291
  %98 = load i8*, i8** %str83, align 8, !dbg !10291
  %99 = load i32, i32* %slen, align 4, !dbg !10292
  %sub = sub nsw i32 %99, 1, !dbg !10293
  %idxprom = sext i32 %sub to i64, !dbg !10288
  %arrayidx = getelementptr inbounds i8, i8* %98, i64 %idxprom, !dbg !10288
  %100 = load i8, i8* %arrayidx, align 1, !dbg !10288
  %conv84 = zext i8 %100 to i32, !dbg !10288
  %cmp85 = icmp ne i32 %conv84, 32, !dbg !10294
  br i1 %cmp85, label %if.then87, label %if.end95, !dbg !10295

if.then87:                                        ; preds = %if.then82
  %101 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10296
  %str88 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %101, i32 0, i32 15, !dbg !10298
  %102 = load i8*, i8** %str88, align 8, !dbg !10298
  %103 = load i32, i32* %slen, align 4, !dbg !10299
  %idxprom89 = sext i32 %103 to i64, !dbg !10296
  %arrayidx90 = getelementptr inbounds i8, i8* %102, i64 %idxprom89, !dbg !10296
  store i8 32, i8* %arrayidx90, align 1, !dbg !10300
  %104 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10301
  %str91 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %104, i32 0, i32 15, !dbg !10302
  %105 = load i8*, i8** %str91, align 8, !dbg !10302
  %106 = load i32, i32* %slen, align 4, !dbg !10303
  %add92 = add nsw i32 %106, 1, !dbg !10304
  %idxprom93 = sext i32 %add92 to i64, !dbg !10301
  %arrayidx94 = getelementptr inbounds i8, i8* %105, i64 %idxprom93, !dbg !10301
  store i8 0, i8* %arrayidx94, align 1, !dbg !10305
  br label %if.end95, !dbg !10306

if.end95:                                         ; preds = %if.then87, %if.then82
  br label %if.end96, !dbg !10307

if.end96:                                         ; preds = %if.end95, %land.lhs.true79, %if.then76
  br label %if.end97, !dbg !10308

if.end97:                                         ; preds = %if.end96, %lor.lhs.false
  %107 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10309
  %flag98 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %107, i32 0, i32 27, !dbg !10311
  %108 = load i32, i32* %flag98, align 8, !dbg !10311
  %and99 = and i32 %108, 1048576, !dbg !10312
  %tobool100 = icmp ne i32 %and99, 0, !dbg !10312
  br i1 %tobool100, label %if.then101, label %if.else102, !dbg !10313

if.then101:                                       ; preds = %if.end97
  %109 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10314
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %109, i32 0, i32 3, !dbg !10316
  %110 = load i32, i32* %drawflag, align 4, !dbg !10317
  %or = or i32 %110, 6, !dbg !10317
  store i32 %or, i32* %drawflag, align 4, !dbg !10317
  br label %if.end154, !dbg !10318

if.else102:                                       ; preds = %if.end97
  %111 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10319
  %flag103 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %111, i32 0, i32 27, !dbg !10321
  %112 = load i32, i32* %flag103, align 8, !dbg !10321
  %and104 = and i32 %112, 1, !dbg !10322
  %tobool105 = icmp ne i32 %and104, 0, !dbg !10322
  br i1 %tobool105, label %if.then138, label %lor.lhs.false106, !dbg !10323

lor.lhs.false106:                                 ; preds = %if.else102
  %113 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10324
  %type107 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %113, i32 0, i32 4, !dbg !10324
  %114 = load i32, i32* %type107, align 8, !dbg !10324
  %cmp108 = icmp eq i32 %114, 5632, !dbg !10324
  br i1 %cmp108, label %if.then138, label %lor.lhs.false110, !dbg !10324

lor.lhs.false110:                                 ; preds = %lor.lhs.false106
  %115 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10324
  %type111 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %115, i32 0, i32 4, !dbg !10324
  %116 = load i32, i32* %type111, align 8, !dbg !10324
  %cmp112 = icmp eq i32 %116, 3072, !dbg !10324
  br i1 %cmp112, label %if.then138, label %lor.lhs.false114, !dbg !10324

lor.lhs.false114:                                 ; preds = %lor.lhs.false110
  %117 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10324
  %type115 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %117, i32 0, i32 4, !dbg !10324
  %118 = load i32, i32* %type115, align 8, !dbg !10324
  %cmp116 = icmp eq i32 %118, 5120, !dbg !10324
  br i1 %cmp116, label %if.then138, label %lor.lhs.false118, !dbg !10324

lor.lhs.false118:                                 ; preds = %lor.lhs.false114
  %119 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10324
  %type119 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %119, i32 0, i32 4, !dbg !10324
  %120 = load i32, i32* %type119, align 8, !dbg !10324
  %cmp120 = icmp eq i32 %120, 9728, !dbg !10324
  br i1 %cmp120, label %if.then138, label %lor.lhs.false122, !dbg !10324

lor.lhs.false122:                                 ; preds = %lor.lhs.false118
  %121 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10324
  %type123 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %121, i32 0, i32 4, !dbg !10324
  %122 = load i32, i32* %type123, align 8, !dbg !10324
  %cmp124 = icmp eq i32 %122, 10240, !dbg !10324
  br i1 %cmp124, label %if.then138, label %lor.lhs.false126, !dbg !10324

lor.lhs.false126:                                 ; preds = %lor.lhs.false122
  %123 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10324
  %type127 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %123, i32 0, i32 4, !dbg !10324
  %124 = load i32, i32* %type127, align 8, !dbg !10324
  %cmp128 = icmp eq i32 %124, 20992, !dbg !10324
  br i1 %cmp128, label %if.then138, label %lor.lhs.false130, !dbg !10324

lor.lhs.false130:                                 ; preds = %lor.lhs.false126
  %125 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10324
  %type131 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %125, i32 0, i32 4, !dbg !10324
  %126 = load i32, i32* %type131, align 8, !dbg !10324
  %cmp132 = icmp eq i32 %126, 26112, !dbg !10324
  br i1 %cmp132, label %if.then138, label %lor.lhs.false134, !dbg !10324

lor.lhs.false134:                                 ; preds = %lor.lhs.false130
  %127 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10324
  %type135 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %127, i32 0, i32 4, !dbg !10324
  %128 = load i32, i32* %type135, align 8, !dbg !10324
  %cmp136 = icmp eq i32 %128, 26624, !dbg !10324
  br i1 %cmp136, label %if.then138, label %if.else141, !dbg !10325

if.then138:                                       ; preds = %lor.lhs.false134, %lor.lhs.false130, %lor.lhs.false126, %lor.lhs.false122, %lor.lhs.false118, %lor.lhs.false114, %lor.lhs.false110, %lor.lhs.false106, %if.else102
  %129 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10326
  %drawflag139 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %129, i32 0, i32 3, !dbg !10328
  %130 = load i32, i32* %drawflag139, align 4, !dbg !10329
  %or140 = or i32 %130, 6, !dbg !10329
  store i32 %or140, i32* %drawflag139, align 4, !dbg !10329
  br label %if.end153, !dbg !10330

if.else141:                                       ; preds = %lor.lhs.false134
  %131 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10331
  %type142 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %131, i32 0, i32 4, !dbg !10331
  %132 = load i32, i32* %type142, align 8, !dbg !10331
  %cmp143 = icmp eq i32 %132, 2560, !dbg !10331
  br i1 %cmp143, label %if.then149, label %lor.lhs.false145, !dbg !10331

lor.lhs.false145:                                 ; preds = %if.else141
  %133 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10331
  %type146 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %133, i32 0, i32 4, !dbg !10331
  %134 = load i32, i32* %type146, align 8, !dbg !10331
  %cmp147 = icmp eq i32 %134, 7168, !dbg !10331
  br i1 %cmp147, label %if.then149, label %if.end152, !dbg !10333

if.then149:                                       ; preds = %lor.lhs.false145, %if.else141
  %135 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10334
  %drawflag150 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %135, i32 0, i32 3, !dbg !10336
  %136 = load i32, i32* %drawflag150, align 4, !dbg !10337
  %or151 = or i32 %136, 2, !dbg !10337
  store i32 %or151, i32* %drawflag150, align 4, !dbg !10337
  br label %if.end152, !dbg !10338

if.end152:                                        ; preds = %if.then149, %lor.lhs.false145
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.then138
  br label %if.end154

if.end154:                                        ; preds = %if.end153, %if.then101
  %137 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10339
  %flag155 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %137, i32 0, i32 27, !dbg !10340
  %138 = load i32, i32* %flag155, align 8, !dbg !10340
  %and156 = and i32 %138, 245760, !dbg !10341
  %139 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10342
  %drawflag157 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %139, i32 0, i32 3, !dbg !10343
  %140 = load i32, i32* %drawflag157, align 4, !dbg !10344
  %or158 = or i32 %140, %and156, !dbg !10344
  store i32 %or158, i32* %drawflag157, align 4, !dbg !10344
  %141 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10345
  %lock159 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %141, i32 0, i32 45, !dbg !10347
  %142 = load i8, i8* %lock159, align 4, !dbg !10347
  %conv160 = zext i8 %142 to i32, !dbg !10345
  %cmp161 = icmp eq i32 %conv160, 1, !dbg !10348
  br i1 %cmp161, label %if.then163, label %if.end170, !dbg !10349

if.then163:                                       ; preds = %if.end154
  %143 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10350
  %lockstr164 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %143, i32 0, i32 43, !dbg !10353
  %144 = load i8*, i8** %lockstr164, align 8, !dbg !10353
  %tobool165 = icmp ne i8* %144, null, !dbg !10350
  br i1 %tobool165, label %if.then166, label %if.end169, !dbg !10354

if.then166:                                       ; preds = %if.then163
  %145 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10355
  %flag167 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %145, i32 0, i32 2, !dbg !10357
  %146 = load i32, i32* %flag167, align 8, !dbg !10358
  %or168 = or i32 %146, 2048, !dbg !10358
  store i32 %or168, i32* %flag167, align 8, !dbg !10358
  br label %if.end169, !dbg !10359

if.end169:                                        ; preds = %if.then166, %if.then163
  br label %if.end170, !dbg !10360

if.end170:                                        ; preds = %if.end169, %if.end154
  %147 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10361
  %type171 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %147, i32 0, i32 4, !dbg !10361
  %148 = load i32, i32* %type171, align 8, !dbg !10361
  %cmp172 = icmp eq i32 %148, 9728, !dbg !10361
  br i1 %cmp172, label %if.then214, label %lor.lhs.false174, !dbg !10361

lor.lhs.false174:                                 ; preds = %if.end170
  %149 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10361
  %type175 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %149, i32 0, i32 4, !dbg !10361
  %150 = load i32, i32* %type175, align 8, !dbg !10361
  %cmp176 = icmp eq i32 %150, 512, !dbg !10361
  br i1 %cmp176, label %if.then214, label %lor.lhs.false178, !dbg !10361

lor.lhs.false178:                                 ; preds = %lor.lhs.false174
  %151 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10361
  %type179 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %151, i32 0, i32 4, !dbg !10361
  %152 = load i32, i32* %type179, align 8, !dbg !10361
  %cmp180 = icmp eq i32 %152, 5120, !dbg !10361
  br i1 %cmp180, label %if.then214, label %lor.lhs.false182, !dbg !10361

lor.lhs.false182:                                 ; preds = %lor.lhs.false178
  %153 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10361
  %type183 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %153, i32 0, i32 4, !dbg !10361
  %154 = load i32, i32* %type183, align 8, !dbg !10361
  %cmp184 = icmp eq i32 %154, 13824, !dbg !10361
  br i1 %cmp184, label %if.then214, label %lor.lhs.false186, !dbg !10361

lor.lhs.false186:                                 ; preds = %lor.lhs.false182
  %155 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10361
  %type187 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %155, i32 0, i32 4, !dbg !10361
  %156 = load i32, i32* %type187, align 8, !dbg !10361
  %cmp188 = icmp eq i32 %156, 14336, !dbg !10361
  br i1 %cmp188, label %if.then214, label %lor.lhs.false190, !dbg !10361

lor.lhs.false190:                                 ; preds = %lor.lhs.false186
  %157 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10361
  %type191 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %157, i32 0, i32 4, !dbg !10361
  %158 = load i32, i32* %type191, align 8, !dbg !10361
  %cmp192 = icmp eq i32 %158, 17920, !dbg !10361
  br i1 %cmp192, label %if.then214, label %lor.lhs.false194, !dbg !10361

lor.lhs.false194:                                 ; preds = %lor.lhs.false190
  %159 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10361
  %type195 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %159, i32 0, i32 4, !dbg !10361
  %160 = load i32, i32* %type195, align 8, !dbg !10361
  %cmp196 = icmp eq i32 %160, 10240, !dbg !10361
  br i1 %cmp196, label %if.then214, label %lor.lhs.false198, !dbg !10361

lor.lhs.false198:                                 ; preds = %lor.lhs.false194
  %161 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10361
  %type199 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %161, i32 0, i32 4, !dbg !10361
  %162 = load i32, i32* %type199, align 8, !dbg !10361
  %cmp200 = icmp eq i32 %162, 9216, !dbg !10361
  br i1 %cmp200, label %if.then214, label %lor.lhs.false202, !dbg !10361

lor.lhs.false202:                                 ; preds = %lor.lhs.false198
  %163 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10361
  %type203 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %163, i32 0, i32 4, !dbg !10361
  %164 = load i32, i32* %type203, align 8, !dbg !10361
  %cmp204 = icmp eq i32 %164, 10752, !dbg !10361
  br i1 %cmp204, label %if.then214, label %lor.lhs.false206, !dbg !10361

lor.lhs.false206:                                 ; preds = %lor.lhs.false202
  %165 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10361
  %type207 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %165, i32 0, i32 4, !dbg !10361
  %166 = load i32, i32* %type207, align 8, !dbg !10361
  %cmp208 = icmp eq i32 %166, 27648, !dbg !10361
  br i1 %cmp208, label %if.then214, label %lor.lhs.false210, !dbg !10361

lor.lhs.false210:                                 ; preds = %lor.lhs.false206
  %167 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10361
  %type211 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %167, i32 0, i32 4, !dbg !10361
  %168 = load i32, i32* %type211, align 8, !dbg !10361
  %cmp212 = icmp eq i32 %168, 28160, !dbg !10361
  br i1 %cmp212, label %if.then214, label %if.else215, !dbg !10363

if.then214:                                       ; preds = %lor.lhs.false210, %lor.lhs.false206, %lor.lhs.false202, %lor.lhs.false198, %lor.lhs.false194, %lor.lhs.false190, %lor.lhs.false186, %lor.lhs.false182, %lor.lhs.false178, %lor.lhs.false174, %if.end170
  br label %if.end224, !dbg !10364

if.else215:                                       ; preds = %lor.lhs.false210
  %169 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10366
  %type216 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %169, i32 0, i32 4, !dbg !10368
  %170 = load i32, i32* %type216, align 8, !dbg !10368
  %cmp217 = icmp uge i32 %170, 20992, !dbg !10369
  br i1 %cmp217, label %if.then219, label %if.else220, !dbg !10370

if.then219:                                       ; preds = %if.else215
  br label %if.end223, !dbg !10371

if.else220:                                       ; preds = %if.else215
  %171 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10373
  %flag221 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %171, i32 0, i32 2, !dbg !10374
  %172 = load i32, i32* %flag221, align 8, !dbg !10375
  %or222 = or i32 %172, 524288, !dbg !10375
  store i32 %or222, i32* %flag221, align 8, !dbg !10375
  br label %if.end223

if.end223:                                        ; preds = %if.else220, %if.then219
  br label %if.end224

if.end224:                                        ; preds = %if.end223, %if.then214
  %173 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10376
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %173, i32 0, i32 2, !dbg !10377
  %174 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10378
  %175 = bitcast %struct.uiBut* %174 to i8*, !dbg !10378
  call void @BLI_addtail(%struct.ListBase* %buttons, i8* %175), !dbg !10379
  %176 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10380
  %curlayout = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %176, i32 0, i32 7, !dbg !10382
  %177 = load %struct.uiLayout*, %struct.uiLayout** %curlayout, align 8, !dbg !10382
  %tobool225 = icmp ne %struct.uiLayout* %177, null, !dbg !10380
  br i1 %tobool225, label %if.then226, label %if.end228, !dbg !10383

if.then226:                                       ; preds = %if.end224
  %178 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10384
  %curlayout227 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %178, i32 0, i32 7, !dbg !10385
  %179 = load %struct.uiLayout*, %struct.uiLayout** %curlayout227, align 8, !dbg !10385
  %180 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10386
  call void @ui_layout_add_but(%struct.uiLayout* %179, %struct.uiBut* %180), !dbg !10387
  br label %if.end228, !dbg !10387

if.end228:                                        ; preds = %if.then226, %if.end224
  %181 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !10388
  store %struct.uiBut* %181, %struct.uiBut** %retval, align 8, !dbg !10389
  br label %return, !dbg !10389

return:                                           ; preds = %if.end228, %if.then5
  %182 = load %struct.uiBut*, %struct.uiBut** %retval, align 8, !dbg !10390
  ret %struct.uiBut* %182, !dbg !10390
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.AutoComplete* @autocomplete_begin(i8* %startname, i64 %maxlen) #0 !dbg !10391 {
entry:
  %startname.addr = alloca i8*, align 8
  %maxlen.addr = alloca i64, align 8
  %autocpl = alloca %struct.AutoComplete*, align 8
  store i8* %startname, i8** %startname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %startname.addr, metadata !10402, metadata !DIExpression()), !dbg !10403
  store i64 %maxlen, i64* %maxlen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %maxlen.addr, metadata !10404, metadata !DIExpression()), !dbg !10405
  call void @llvm.dbg.declare(metadata %struct.AutoComplete** %autocpl, metadata !10406, metadata !DIExpression()), !dbg !10407
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10408
  %call = call i8* %0(i64 32, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0)), !dbg !10408
  %1 = bitcast i8* %call to %struct.AutoComplete*, !dbg !10408
  store %struct.AutoComplete* %1, %struct.AutoComplete** %autocpl, align 8, !dbg !10409
  %2 = load i64, i64* %maxlen.addr, align 8, !dbg !10410
  %3 = load %struct.AutoComplete*, %struct.AutoComplete** %autocpl, align 8, !dbg !10411
  %maxlen1 = getelementptr inbounds %struct.AutoComplete, %struct.AutoComplete* %3, i32 0, i32 0, !dbg !10412
  store i64 %2, i64* %maxlen1, align 8, !dbg !10413
  %4 = load %struct.AutoComplete*, %struct.AutoComplete** %autocpl, align 8, !dbg !10414
  %matches = getelementptr inbounds %struct.AutoComplete, %struct.AutoComplete* %4, i32 0, i32 1, !dbg !10415
  store i32 0, i32* %matches, align 8, !dbg !10416
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10417
  %6 = load i64, i64* %maxlen.addr, align 8, !dbg !10418
  %mul = mul i64 1, %6, !dbg !10419
  %call2 = call i8* %5(i64 %mul, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i64 0, i64 0)), !dbg !10417
  %7 = load %struct.AutoComplete*, %struct.AutoComplete** %autocpl, align 8, !dbg !10420
  %truncate = getelementptr inbounds %struct.AutoComplete, %struct.AutoComplete* %7, i32 0, i32 2, !dbg !10421
  store i8* %call2, i8** %truncate, align 8, !dbg !10422
  %8 = load i8*, i8** %startname.addr, align 8, !dbg !10423
  %9 = load %struct.AutoComplete*, %struct.AutoComplete** %autocpl, align 8, !dbg !10424
  %startname3 = getelementptr inbounds %struct.AutoComplete, %struct.AutoComplete* %9, i32 0, i32 3, !dbg !10425
  store i8* %8, i8** %startname3, align 8, !dbg !10426
  %10 = load %struct.AutoComplete*, %struct.AutoComplete** %autocpl, align 8, !dbg !10427
  ret %struct.AutoComplete* %10, !dbg !10428
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @autocomplete_do_name(%struct.AutoComplete* %autocpl, i8* %name) #0 !dbg !10429 {
entry:
  %autocpl.addr = alloca %struct.AutoComplete*, align 8
  %name.addr = alloca i8*, align 8
  %truncate = alloca i8*, align 8
  %startname = alloca i8*, align 8
  %a = alloca i32, align 4
  store %struct.AutoComplete* %autocpl, %struct.AutoComplete** %autocpl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AutoComplete** %autocpl.addr, metadata !10432, metadata !DIExpression()), !dbg !10433
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10434, metadata !DIExpression()), !dbg !10435
  call void @llvm.dbg.declare(metadata i8** %truncate, metadata !10436, metadata !DIExpression()), !dbg !10437
  %0 = load %struct.AutoComplete*, %struct.AutoComplete** %autocpl.addr, align 8, !dbg !10438
  %truncate1 = getelementptr inbounds %struct.AutoComplete, %struct.AutoComplete* %0, i32 0, i32 2, !dbg !10439
  %1 = load i8*, i8** %truncate1, align 8, !dbg !10439
  store i8* %1, i8** %truncate, align 8, !dbg !10437
  call void @llvm.dbg.declare(metadata i8** %startname, metadata !10440, metadata !DIExpression()), !dbg !10441
  %2 = load %struct.AutoComplete*, %struct.AutoComplete** %autocpl.addr, align 8, !dbg !10442
  %startname2 = getelementptr inbounds %struct.AutoComplete, %struct.AutoComplete* %2, i32 0, i32 3, !dbg !10443
  %3 = load i8*, i8** %startname2, align 8, !dbg !10443
  store i8* %3, i8** %startname, align 8, !dbg !10441
  call void @llvm.dbg.declare(metadata i32* %a, metadata !10444, metadata !DIExpression()), !dbg !10445
  store i32 0, i32* %a, align 4, !dbg !10446
  br label %for.cond, !dbg !10448

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %a, align 4, !dbg !10449
  %conv = sext i32 %4 to i64, !dbg !10449
  %5 = load %struct.AutoComplete*, %struct.AutoComplete** %autocpl.addr, align 8, !dbg !10451
  %maxlen = getelementptr inbounds %struct.AutoComplete, %struct.AutoComplete* %5, i32 0, i32 0, !dbg !10452
  %6 = load i64, i64* %maxlen, align 8, !dbg !10452
  %sub = sub i64 %6, 1, !dbg !10453
  %cmp = icmp ult i64 %conv, %sub, !dbg !10454
  br i1 %cmp, label %for.body, label %for.end, !dbg !10455

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %startname, align 8, !dbg !10456
  %8 = load i32, i32* %a, align 4, !dbg !10459
  %idxprom = sext i32 %8 to i64, !dbg !10456
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !10456
  %9 = load i8, i8* %arrayidx, align 1, !dbg !10456
  %conv4 = zext i8 %9 to i32, !dbg !10456
  %cmp5 = icmp eq i32 %conv4, 0, !dbg !10460
  br i1 %cmp5, label %if.then, label %lor.lhs.false, !dbg !10461

lor.lhs.false:                                    ; preds = %for.body
  %10 = load i8*, i8** %startname, align 8, !dbg !10462
  %11 = load i32, i32* %a, align 4, !dbg !10463
  %idxprom7 = sext i32 %11 to i64, !dbg !10462
  %arrayidx8 = getelementptr inbounds i8, i8* %10, i64 %idxprom7, !dbg !10462
  %12 = load i8, i8* %arrayidx8, align 1, !dbg !10462
  %conv9 = zext i8 %12 to i32, !dbg !10462
  %13 = load i8*, i8** %name.addr, align 8, !dbg !10464
  %14 = load i32, i32* %a, align 4, !dbg !10465
  %idxprom10 = sext i32 %14 to i64, !dbg !10464
  %arrayidx11 = getelementptr inbounds i8, i8* %13, i64 %idxprom10, !dbg !10464
  %15 = load i8, i8* %arrayidx11, align 1, !dbg !10464
  %conv12 = zext i8 %15 to i32, !dbg !10464
  %cmp13 = icmp ne i32 %conv9, %conv12, !dbg !10466
  br i1 %cmp13, label %if.then, label %if.end, !dbg !10467

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.end, !dbg !10468

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc, !dbg !10469

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %a, align 4, !dbg !10470
  %inc = add nsw i32 %16, 1, !dbg !10470
  store i32 %inc, i32* %a, align 4, !dbg !10470
  br label %for.cond, !dbg !10471, !llvm.loop !10472

for.end:                                          ; preds = %if.then, %for.cond
  %17 = load i8*, i8** %startname, align 8, !dbg !10474
  %18 = load i32, i32* %a, align 4, !dbg !10476
  %idxprom15 = sext i32 %18 to i64, !dbg !10474
  %arrayidx16 = getelementptr inbounds i8, i8* %17, i64 %idxprom15, !dbg !10474
  %19 = load i8, i8* %arrayidx16, align 1, !dbg !10474
  %conv17 = zext i8 %19 to i32, !dbg !10474
  %cmp18 = icmp eq i32 %conv17, 0, !dbg !10477
  br i1 %cmp18, label %if.then20, label %if.end61, !dbg !10478

if.then20:                                        ; preds = %for.end
  %20 = load %struct.AutoComplete*, %struct.AutoComplete** %autocpl.addr, align 8, !dbg !10479
  %matches = getelementptr inbounds %struct.AutoComplete, %struct.AutoComplete* %20, i32 0, i32 1, !dbg !10481
  %21 = load i32, i32* %matches, align 8, !dbg !10482
  %inc21 = add nsw i32 %21, 1, !dbg !10482
  store i32 %inc21, i32* %matches, align 8, !dbg !10482
  %22 = load i8*, i8** %truncate, align 8, !dbg !10483
  %arrayidx22 = getelementptr inbounds i8, i8* %22, i64 0, !dbg !10483
  %23 = load i8, i8* %arrayidx22, align 1, !dbg !10483
  %conv23 = zext i8 %23 to i32, !dbg !10483
  %cmp24 = icmp eq i32 %conv23, 0, !dbg !10485
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !10486

if.then26:                                        ; preds = %if.then20
  %24 = load i8*, i8** %truncate, align 8, !dbg !10487
  %25 = load i8*, i8** %name.addr, align 8, !dbg !10488
  %26 = load %struct.AutoComplete*, %struct.AutoComplete** %autocpl.addr, align 8, !dbg !10489
  %maxlen27 = getelementptr inbounds %struct.AutoComplete, %struct.AutoComplete* %26, i32 0, i32 0, !dbg !10490
  %27 = load i64, i64* %maxlen27, align 8, !dbg !10490
  %call = call i8* @BLI_strncpy(i8* %24, i8* %25, i64 %27), !dbg !10491
  br label %if.end60, !dbg !10491

if.else:                                          ; preds = %if.then20
  store i32 0, i32* %a, align 4, !dbg !10492
  br label %for.cond28, !dbg !10495

for.cond28:                                       ; preds = %for.inc57, %if.else
  %28 = load i32, i32* %a, align 4, !dbg !10496
  %conv29 = sext i32 %28 to i64, !dbg !10496
  %29 = load %struct.AutoComplete*, %struct.AutoComplete** %autocpl.addr, align 8, !dbg !10498
  %maxlen30 = getelementptr inbounds %struct.AutoComplete, %struct.AutoComplete* %29, i32 0, i32 0, !dbg !10499
  %30 = load i64, i64* %maxlen30, align 8, !dbg !10499
  %sub31 = sub i64 %30, 1, !dbg !10500
  %cmp32 = icmp ult i64 %conv29, %sub31, !dbg !10501
  br i1 %cmp32, label %for.body34, label %for.end59, !dbg !10502

for.body34:                                       ; preds = %for.cond28
  %31 = load i8*, i8** %name.addr, align 8, !dbg !10503
  %32 = load i32, i32* %a, align 4, !dbg !10506
  %idxprom35 = sext i32 %32 to i64, !dbg !10503
  %arrayidx36 = getelementptr inbounds i8, i8* %31, i64 %idxprom35, !dbg !10503
  %33 = load i8, i8* %arrayidx36, align 1, !dbg !10503
  %conv37 = zext i8 %33 to i32, !dbg !10503
  %cmp38 = icmp eq i32 %conv37, 0, !dbg !10507
  br i1 %cmp38, label %if.then40, label %if.else43, !dbg !10508

if.then40:                                        ; preds = %for.body34
  %34 = load i8*, i8** %truncate, align 8, !dbg !10509
  %35 = load i32, i32* %a, align 4, !dbg !10511
  %idxprom41 = sext i32 %35 to i64, !dbg !10509
  %arrayidx42 = getelementptr inbounds i8, i8* %34, i64 %idxprom41, !dbg !10509
  store i8 0, i8* %arrayidx42, align 1, !dbg !10512
  br label %for.end59, !dbg !10513

if.else43:                                        ; preds = %for.body34
  %36 = load i8*, i8** %truncate, align 8, !dbg !10514
  %37 = load i32, i32* %a, align 4, !dbg !10516
  %idxprom44 = sext i32 %37 to i64, !dbg !10514
  %arrayidx45 = getelementptr inbounds i8, i8* %36, i64 %idxprom44, !dbg !10514
  %38 = load i8, i8* %arrayidx45, align 1, !dbg !10514
  %conv46 = zext i8 %38 to i32, !dbg !10514
  %39 = load i8*, i8** %name.addr, align 8, !dbg !10517
  %40 = load i32, i32* %a, align 4, !dbg !10518
  %idxprom47 = sext i32 %40 to i64, !dbg !10517
  %arrayidx48 = getelementptr inbounds i8, i8* %39, i64 %idxprom47, !dbg !10517
  %41 = load i8, i8* %arrayidx48, align 1, !dbg !10517
  %conv49 = zext i8 %41 to i32, !dbg !10517
  %cmp50 = icmp ne i32 %conv46, %conv49, !dbg !10519
  br i1 %cmp50, label %if.then52, label %if.end55, !dbg !10520

if.then52:                                        ; preds = %if.else43
  %42 = load i8*, i8** %truncate, align 8, !dbg !10521
  %43 = load i32, i32* %a, align 4, !dbg !10522
  %idxprom53 = sext i32 %43 to i64, !dbg !10521
  %arrayidx54 = getelementptr inbounds i8, i8* %42, i64 %idxprom53, !dbg !10521
  store i8 0, i8* %arrayidx54, align 1, !dbg !10523
  br label %if.end55, !dbg !10521

if.end55:                                         ; preds = %if.then52, %if.else43
  br label %if.end56

if.end56:                                         ; preds = %if.end55
  br label %for.inc57, !dbg !10524

for.inc57:                                        ; preds = %if.end56
  %44 = load i32, i32* %a, align 4, !dbg !10525
  %inc58 = add nsw i32 %44, 1, !dbg !10525
  store i32 %inc58, i32* %a, align 4, !dbg !10525
  br label %for.cond28, !dbg !10526, !llvm.loop !10527

for.end59:                                        ; preds = %if.then40, %for.cond28
  br label %if.end60

if.end60:                                         ; preds = %for.end59, %if.then26
  br label %if.end61, !dbg !10529

if.end61:                                         ; preds = %if.end60, %for.end
  ret void, !dbg !10530
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @autocomplete_end(%struct.AutoComplete* %autocpl, i8* %autoname) #0 !dbg !10531 {
entry:
  %autocpl.addr = alloca %struct.AutoComplete*, align 8
  %autoname.addr = alloca i8*, align 8
  %match = alloca i32, align 4
  store %struct.AutoComplete* %autocpl, %struct.AutoComplete** %autocpl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AutoComplete** %autocpl.addr, metadata !10534, metadata !DIExpression()), !dbg !10535
  store i8* %autoname, i8** %autoname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %autoname.addr, metadata !10536, metadata !DIExpression()), !dbg !10537
  call void @llvm.dbg.declare(metadata i32* %match, metadata !10538, metadata !DIExpression()), !dbg !10539
  store i32 0, i32* %match, align 4, !dbg !10539
  %0 = load %struct.AutoComplete*, %struct.AutoComplete** %autocpl.addr, align 8, !dbg !10540
  %truncate = getelementptr inbounds %struct.AutoComplete, %struct.AutoComplete* %0, i32 0, i32 2, !dbg !10542
  %1 = load i8*, i8** %truncate, align 8, !dbg !10542
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10540
  %2 = load i8, i8* %arrayidx, align 1, !dbg !10540
  %tobool = icmp ne i8 %2, 0, !dbg !10540
  br i1 %tobool, label %if.then, label %if.else3, !dbg !10543

if.then:                                          ; preds = %entry
  %3 = load %struct.AutoComplete*, %struct.AutoComplete** %autocpl.addr, align 8, !dbg !10544
  %matches = getelementptr inbounds %struct.AutoComplete, %struct.AutoComplete* %3, i32 0, i32 1, !dbg !10547
  %4 = load i32, i32* %matches, align 8, !dbg !10547
  %cmp = icmp eq i32 %4, 1, !dbg !10548
  br i1 %cmp, label %if.then1, label %if.else, !dbg !10549

if.then1:                                         ; preds = %if.then
  store i32 1, i32* %match, align 4, !dbg !10550
  br label %if.end, !dbg !10552

if.else:                                          ; preds = %if.then
  store i32 2, i32* %match, align 4, !dbg !10553
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  %5 = load i8*, i8** %autoname.addr, align 8, !dbg !10555
  %6 = load %struct.AutoComplete*, %struct.AutoComplete** %autocpl.addr, align 8, !dbg !10556
  %truncate2 = getelementptr inbounds %struct.AutoComplete, %struct.AutoComplete* %6, i32 0, i32 2, !dbg !10557
  %7 = load i8*, i8** %truncate2, align 8, !dbg !10557
  %8 = load %struct.AutoComplete*, %struct.AutoComplete** %autocpl.addr, align 8, !dbg !10558
  %maxlen = getelementptr inbounds %struct.AutoComplete, %struct.AutoComplete* %8, i32 0, i32 0, !dbg !10559
  %9 = load i64, i64* %maxlen, align 8, !dbg !10559
  %call = call i8* @BLI_strncpy(i8* %5, i8* %7, i64 %9), !dbg !10560
  br label %if.end10, !dbg !10561

if.else3:                                         ; preds = %entry
  %10 = load i8*, i8** %autoname.addr, align 8, !dbg !10562
  %11 = load %struct.AutoComplete*, %struct.AutoComplete** %autocpl.addr, align 8, !dbg !10565
  %startname = getelementptr inbounds %struct.AutoComplete, %struct.AutoComplete* %11, i32 0, i32 3, !dbg !10566
  %12 = load i8*, i8** %startname, align 8, !dbg !10566
  %cmp4 = icmp ne i8* %10, %12, !dbg !10567
  br i1 %cmp4, label %if.then5, label %if.end9, !dbg !10568

if.then5:                                         ; preds = %if.else3
  %13 = load i8*, i8** %autoname.addr, align 8, !dbg !10569
  %14 = load %struct.AutoComplete*, %struct.AutoComplete** %autocpl.addr, align 8, !dbg !10571
  %startname6 = getelementptr inbounds %struct.AutoComplete, %struct.AutoComplete* %14, i32 0, i32 3, !dbg !10572
  %15 = load i8*, i8** %startname6, align 8, !dbg !10572
  %16 = load %struct.AutoComplete*, %struct.AutoComplete** %autocpl.addr, align 8, !dbg !10573
  %maxlen7 = getelementptr inbounds %struct.AutoComplete, %struct.AutoComplete* %16, i32 0, i32 0, !dbg !10574
  %17 = load i64, i64* %maxlen7, align 8, !dbg !10574
  %call8 = call i8* @BLI_strncpy(i8* %13, i8* %15, i64 %17), !dbg !10575
  br label %if.end9, !dbg !10576

if.end9:                                          ; preds = %if.then5, %if.else3
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.end
  %18 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10577
  %19 = load %struct.AutoComplete*, %struct.AutoComplete** %autocpl.addr, align 8, !dbg !10578
  %truncate11 = getelementptr inbounds %struct.AutoComplete, %struct.AutoComplete* %19, i32 0, i32 2, !dbg !10579
  %20 = load i8*, i8** %truncate11, align 8, !dbg !10579
  call void %18(i8* %20), !dbg !10577
  %21 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10580
  %22 = load %struct.AutoComplete*, %struct.AutoComplete** %autocpl.addr, align 8, !dbg !10581
  %23 = bitcast %struct.AutoComplete* %22 to i8*, !dbg !10581
  call void %21(i8* %23), !dbg !10580
  %24 = load i32, i32* %match, align 4, !dbg !10582
  ret i32 %24, !dbg !10583
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefButF(%struct.uiBlock* %block, i32 %type, i32 %retval1, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, float* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !10584 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca float*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !10587, metadata !DIExpression()), !dbg !10588
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10589, metadata !DIExpression()), !dbg !10590
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !10591, metadata !DIExpression()), !dbg !10592
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10593, metadata !DIExpression()), !dbg !10594
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !10595, metadata !DIExpression()), !dbg !10596
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !10597, metadata !DIExpression()), !dbg !10598
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !10599, metadata !DIExpression()), !dbg !10600
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !10601, metadata !DIExpression()), !dbg !10602
  store float* %poin, float** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata float** %poin.addr, metadata !10603, metadata !DIExpression()), !dbg !10604
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !10605, metadata !DIExpression()), !dbg !10606
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !10607, metadata !DIExpression()), !dbg !10608
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !10609, metadata !DIExpression()), !dbg !10610
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !10611, metadata !DIExpression()), !dbg !10612
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !10613, metadata !DIExpression()), !dbg !10614
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10615
  %1 = load i32, i32* %type.addr, align 4, !dbg !10616
  %or = or i32 %1, 128, !dbg !10617
  %2 = load i32, i32* %retval.addr, align 4, !dbg !10618
  %3 = load i8*, i8** %str.addr, align 8, !dbg !10619
  %4 = load i32, i32* %x.addr, align 4, !dbg !10620
  %5 = load i32, i32* %y.addr, align 4, !dbg !10621
  %6 = load i16, i16* %width.addr, align 2, !dbg !10622
  %7 = load i16, i16* %height.addr, align 2, !dbg !10623
  %8 = load float*, float** %poin.addr, align 8, !dbg !10624
  %9 = bitcast float* %8 to i8*, !dbg !10625
  %10 = load float, float* %min.addr, align 4, !dbg !10626
  %11 = load float, float* %max.addr, align 4, !dbg !10627
  %12 = load float, float* %a1.addr, align 4, !dbg !10628
  %13 = load float, float* %a2.addr, align 4, !dbg !10629
  %14 = load i8*, i8** %tip.addr, align 8, !dbg !10630
  %call = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %0, i32 %or, i32 %2, i8* %3, i32 %4, i32 %5, i16 signext %6, i16 signext %7, i8* %9, float %10, float %11, float %12, float %13, i8* %14), !dbg !10631
  ret %struct.uiBut* %call, !dbg !10632
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefButBitF(%struct.uiBlock* %block, i32 %type, i32 %bit, i32 %retval1, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, float* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !10633 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %bit.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca float*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !10636, metadata !DIExpression()), !dbg !10637
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10638, metadata !DIExpression()), !dbg !10639
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !10640, metadata !DIExpression()), !dbg !10641
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !10642, metadata !DIExpression()), !dbg !10643
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10644, metadata !DIExpression()), !dbg !10645
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !10646, metadata !DIExpression()), !dbg !10647
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !10648, metadata !DIExpression()), !dbg !10649
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !10650, metadata !DIExpression()), !dbg !10651
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !10652, metadata !DIExpression()), !dbg !10653
  store float* %poin, float** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata float** %poin.addr, metadata !10654, metadata !DIExpression()), !dbg !10655
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !10656, metadata !DIExpression()), !dbg !10657
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !10658, metadata !DIExpression()), !dbg !10659
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !10660, metadata !DIExpression()), !dbg !10661
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !10662, metadata !DIExpression()), !dbg !10663
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !10664, metadata !DIExpression()), !dbg !10665
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10666
  %1 = load i32, i32* %type.addr, align 4, !dbg !10667
  %or = or i32 %1, 128, !dbg !10668
  %2 = load i32, i32* %bit.addr, align 4, !dbg !10669
  %3 = load i32, i32* %retval.addr, align 4, !dbg !10670
  %4 = load i8*, i8** %str.addr, align 8, !dbg !10671
  %5 = load i32, i32* %x.addr, align 4, !dbg !10672
  %6 = load i32, i32* %y.addr, align 4, !dbg !10673
  %7 = load i16, i16* %width.addr, align 2, !dbg !10674
  %8 = load i16, i16* %height.addr, align 2, !dbg !10675
  %9 = load float*, float** %poin.addr, align 8, !dbg !10676
  %10 = bitcast float* %9 to i8*, !dbg !10677
  %11 = load float, float* %min.addr, align 4, !dbg !10678
  %12 = load float, float* %max.addr, align 4, !dbg !10679
  %13 = load float, float* %a1.addr, align 4, !dbg !10680
  %14 = load float, float* %a2.addr, align 4, !dbg !10681
  %15 = load i8*, i8** %tip.addr, align 8, !dbg !10682
  %call = call %struct.uiBut* @uiDefButBit(%struct.uiBlock* %0, i32 %or, i32 %2, i32 %3, i8* %4, i32 %5, i32 %6, i16 signext %7, i16 signext %8, i8* %10, float %11, float %12, float %13, float %14, i8* %15), !dbg !10683
  ret %struct.uiBut* %call, !dbg !10684
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiBut* @uiDefButBit(%struct.uiBlock* %block, i32 %type, i32 %bit, i32 %retval1, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !10685 {
entry:
  %retval = alloca %struct.uiBut*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %bit.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i8*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  %bitIdx = alloca i32, align 4
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !10688, metadata !DIExpression()), !dbg !10689
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10690, metadata !DIExpression()), !dbg !10691
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !10692, metadata !DIExpression()), !dbg !10693
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !10694, metadata !DIExpression()), !dbg !10695
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10696, metadata !DIExpression()), !dbg !10697
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !10698, metadata !DIExpression()), !dbg !10699
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !10700, metadata !DIExpression()), !dbg !10701
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !10702, metadata !DIExpression()), !dbg !10703
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !10704, metadata !DIExpression()), !dbg !10705
  store i8* %poin, i8** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %poin.addr, metadata !10706, metadata !DIExpression()), !dbg !10707
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !10708, metadata !DIExpression()), !dbg !10709
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !10710, metadata !DIExpression()), !dbg !10711
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !10712, metadata !DIExpression()), !dbg !10713
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !10714, metadata !DIExpression()), !dbg !10715
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !10716, metadata !DIExpression()), !dbg !10717
  call void @llvm.dbg.declare(metadata i32* %bitIdx, metadata !10718, metadata !DIExpression()), !dbg !10719
  %0 = load i32, i32* %bit.addr, align 4, !dbg !10720
  %call = call i32 @findBitIndex(i32 %0), !dbg !10721
  store i32 %call, i32* %bitIdx, align 4, !dbg !10719
  %1 = load i32, i32* %bitIdx, align 4, !dbg !10722
  %cmp = icmp eq i32 %1, -1, !dbg !10724
  br i1 %cmp, label %if.then, label %if.else, !dbg !10725

if.then:                                          ; preds = %entry
  store %struct.uiBut* null, %struct.uiBut** %retval, align 8, !dbg !10726
  br label %return, !dbg !10726

if.else:                                          ; preds = %entry
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10728
  %3 = load i32, i32* %type.addr, align 4, !dbg !10730
  %or = or i32 %3, 256, !dbg !10731
  %4 = load i32, i32* %bitIdx, align 4, !dbg !10732
  %or2 = or i32 %or, %4, !dbg !10733
  %5 = load i32, i32* %retval.addr, align 4, !dbg !10734
  %6 = load i8*, i8** %str.addr, align 8, !dbg !10735
  %7 = load i32, i32* %x.addr, align 4, !dbg !10736
  %8 = load i32, i32* %y.addr, align 4, !dbg !10737
  %9 = load i16, i16* %width.addr, align 2, !dbg !10738
  %10 = load i16, i16* %height.addr, align 2, !dbg !10739
  %11 = load i8*, i8** %poin.addr, align 8, !dbg !10740
  %12 = load float, float* %min.addr, align 4, !dbg !10741
  %13 = load float, float* %max.addr, align 4, !dbg !10742
  %14 = load float, float* %a1.addr, align 4, !dbg !10743
  %15 = load float, float* %a2.addr, align 4, !dbg !10744
  %16 = load i8*, i8** %tip.addr, align 8, !dbg !10745
  %call3 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %2, i32 %or2, i32 %5, i8* %6, i32 %7, i32 %8, i16 signext %9, i16 signext %10, i8* %11, float %12, float %13, float %14, float %15, i8* %16), !dbg !10746
  store %struct.uiBut* %call3, %struct.uiBut** %retval, align 8, !dbg !10747
  br label %return, !dbg !10747

return:                                           ; preds = %if.else, %if.then
  %17 = load %struct.uiBut*, %struct.uiBut** %retval, align 8, !dbg !10748
  ret %struct.uiBut* %17, !dbg !10748
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefButI(%struct.uiBlock* %block, i32 %type, i32 %retval1, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i32* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !10749 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i32*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !10752, metadata !DIExpression()), !dbg !10753
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10754, metadata !DIExpression()), !dbg !10755
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !10756, metadata !DIExpression()), !dbg !10757
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10758, metadata !DIExpression()), !dbg !10759
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !10760, metadata !DIExpression()), !dbg !10761
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !10762, metadata !DIExpression()), !dbg !10763
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !10764, metadata !DIExpression()), !dbg !10765
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !10766, metadata !DIExpression()), !dbg !10767
  store i32* %poin, i32** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %poin.addr, metadata !10768, metadata !DIExpression()), !dbg !10769
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !10770, metadata !DIExpression()), !dbg !10771
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !10772, metadata !DIExpression()), !dbg !10773
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !10774, metadata !DIExpression()), !dbg !10775
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !10776, metadata !DIExpression()), !dbg !10777
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !10778, metadata !DIExpression()), !dbg !10779
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10780
  %1 = load i32, i32* %type.addr, align 4, !dbg !10781
  %or = or i32 %1, 96, !dbg !10782
  %2 = load i32, i32* %retval.addr, align 4, !dbg !10783
  %3 = load i8*, i8** %str.addr, align 8, !dbg !10784
  %4 = load i32, i32* %x.addr, align 4, !dbg !10785
  %5 = load i32, i32* %y.addr, align 4, !dbg !10786
  %6 = load i16, i16* %width.addr, align 2, !dbg !10787
  %7 = load i16, i16* %height.addr, align 2, !dbg !10788
  %8 = load i32*, i32** %poin.addr, align 8, !dbg !10789
  %9 = bitcast i32* %8 to i8*, !dbg !10790
  %10 = load float, float* %min.addr, align 4, !dbg !10791
  %11 = load float, float* %max.addr, align 4, !dbg !10792
  %12 = load float, float* %a1.addr, align 4, !dbg !10793
  %13 = load float, float* %a2.addr, align 4, !dbg !10794
  %14 = load i8*, i8** %tip.addr, align 8, !dbg !10795
  %call = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %0, i32 %or, i32 %2, i8* %3, i32 %4, i32 %5, i16 signext %6, i16 signext %7, i8* %9, float %10, float %11, float %12, float %13, i8* %14), !dbg !10796
  ret %struct.uiBut* %call, !dbg !10797
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefButBitI(%struct.uiBlock* %block, i32 %type, i32 %bit, i32 %retval1, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i32* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !10798 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %bit.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i32*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !10801, metadata !DIExpression()), !dbg !10802
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10803, metadata !DIExpression()), !dbg !10804
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !10805, metadata !DIExpression()), !dbg !10806
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !10807, metadata !DIExpression()), !dbg !10808
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10809, metadata !DIExpression()), !dbg !10810
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !10811, metadata !DIExpression()), !dbg !10812
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !10813, metadata !DIExpression()), !dbg !10814
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !10815, metadata !DIExpression()), !dbg !10816
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !10817, metadata !DIExpression()), !dbg !10818
  store i32* %poin, i32** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %poin.addr, metadata !10819, metadata !DIExpression()), !dbg !10820
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !10821, metadata !DIExpression()), !dbg !10822
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !10823, metadata !DIExpression()), !dbg !10824
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !10825, metadata !DIExpression()), !dbg !10826
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !10827, metadata !DIExpression()), !dbg !10828
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !10829, metadata !DIExpression()), !dbg !10830
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10831
  %1 = load i32, i32* %type.addr, align 4, !dbg !10832
  %or = or i32 %1, 96, !dbg !10833
  %2 = load i32, i32* %bit.addr, align 4, !dbg !10834
  %3 = load i32, i32* %retval.addr, align 4, !dbg !10835
  %4 = load i8*, i8** %str.addr, align 8, !dbg !10836
  %5 = load i32, i32* %x.addr, align 4, !dbg !10837
  %6 = load i32, i32* %y.addr, align 4, !dbg !10838
  %7 = load i16, i16* %width.addr, align 2, !dbg !10839
  %8 = load i16, i16* %height.addr, align 2, !dbg !10840
  %9 = load i32*, i32** %poin.addr, align 8, !dbg !10841
  %10 = bitcast i32* %9 to i8*, !dbg !10842
  %11 = load float, float* %min.addr, align 4, !dbg !10843
  %12 = load float, float* %max.addr, align 4, !dbg !10844
  %13 = load float, float* %a1.addr, align 4, !dbg !10845
  %14 = load float, float* %a2.addr, align 4, !dbg !10846
  %15 = load i8*, i8** %tip.addr, align 8, !dbg !10847
  %call = call %struct.uiBut* @uiDefButBit(%struct.uiBlock* %0, i32 %or, i32 %2, i32 %3, i8* %4, i32 %5, i32 %6, i16 signext %7, i16 signext %8, i8* %10, float %11, float %12, float %13, float %14, i8* %15), !dbg !10848
  ret %struct.uiBut* %call, !dbg !10849
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefButS(%struct.uiBlock* %block, i32 %type, i32 %retval1, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i16* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !10850 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i16*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !10853, metadata !DIExpression()), !dbg !10854
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10855, metadata !DIExpression()), !dbg !10856
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !10857, metadata !DIExpression()), !dbg !10858
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10859, metadata !DIExpression()), !dbg !10860
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !10861, metadata !DIExpression()), !dbg !10862
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !10863, metadata !DIExpression()), !dbg !10864
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !10865, metadata !DIExpression()), !dbg !10866
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !10867, metadata !DIExpression()), !dbg !10868
  store i16* %poin, i16** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %poin.addr, metadata !10869, metadata !DIExpression()), !dbg !10870
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !10871, metadata !DIExpression()), !dbg !10872
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !10873, metadata !DIExpression()), !dbg !10874
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !10875, metadata !DIExpression()), !dbg !10876
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !10877, metadata !DIExpression()), !dbg !10878
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !10879, metadata !DIExpression()), !dbg !10880
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10881
  %1 = load i32, i32* %type.addr, align 4, !dbg !10882
  %or = or i32 %1, 64, !dbg !10883
  %2 = load i32, i32* %retval.addr, align 4, !dbg !10884
  %3 = load i8*, i8** %str.addr, align 8, !dbg !10885
  %4 = load i32, i32* %x.addr, align 4, !dbg !10886
  %5 = load i32, i32* %y.addr, align 4, !dbg !10887
  %6 = load i16, i16* %width.addr, align 2, !dbg !10888
  %7 = load i16, i16* %height.addr, align 2, !dbg !10889
  %8 = load i16*, i16** %poin.addr, align 8, !dbg !10890
  %9 = bitcast i16* %8 to i8*, !dbg !10891
  %10 = load float, float* %min.addr, align 4, !dbg !10892
  %11 = load float, float* %max.addr, align 4, !dbg !10893
  %12 = load float, float* %a1.addr, align 4, !dbg !10894
  %13 = load float, float* %a2.addr, align 4, !dbg !10895
  %14 = load i8*, i8** %tip.addr, align 8, !dbg !10896
  %call = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %0, i32 %or, i32 %2, i8* %3, i32 %4, i32 %5, i16 signext %6, i16 signext %7, i8* %9, float %10, float %11, float %12, float %13, i8* %14), !dbg !10897
  ret %struct.uiBut* %call, !dbg !10898
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefButBitS(%struct.uiBlock* %block, i32 %type, i32 %bit, i32 %retval1, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i16* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !10899 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %bit.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i16*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !10902, metadata !DIExpression()), !dbg !10903
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10904, metadata !DIExpression()), !dbg !10905
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !10906, metadata !DIExpression()), !dbg !10907
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !10908, metadata !DIExpression()), !dbg !10909
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10910, metadata !DIExpression()), !dbg !10911
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !10912, metadata !DIExpression()), !dbg !10913
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !10914, metadata !DIExpression()), !dbg !10915
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !10916, metadata !DIExpression()), !dbg !10917
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !10918, metadata !DIExpression()), !dbg !10919
  store i16* %poin, i16** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %poin.addr, metadata !10920, metadata !DIExpression()), !dbg !10921
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !10922, metadata !DIExpression()), !dbg !10923
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !10924, metadata !DIExpression()), !dbg !10925
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !10926, metadata !DIExpression()), !dbg !10927
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !10928, metadata !DIExpression()), !dbg !10929
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !10930, metadata !DIExpression()), !dbg !10931
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10932
  %1 = load i32, i32* %type.addr, align 4, !dbg !10933
  %or = or i32 %1, 64, !dbg !10934
  %2 = load i32, i32* %bit.addr, align 4, !dbg !10935
  %3 = load i32, i32* %retval.addr, align 4, !dbg !10936
  %4 = load i8*, i8** %str.addr, align 8, !dbg !10937
  %5 = load i32, i32* %x.addr, align 4, !dbg !10938
  %6 = load i32, i32* %y.addr, align 4, !dbg !10939
  %7 = load i16, i16* %width.addr, align 2, !dbg !10940
  %8 = load i16, i16* %height.addr, align 2, !dbg !10941
  %9 = load i16*, i16** %poin.addr, align 8, !dbg !10942
  %10 = bitcast i16* %9 to i8*, !dbg !10943
  %11 = load float, float* %min.addr, align 4, !dbg !10944
  %12 = load float, float* %max.addr, align 4, !dbg !10945
  %13 = load float, float* %a1.addr, align 4, !dbg !10946
  %14 = load float, float* %a2.addr, align 4, !dbg !10947
  %15 = load i8*, i8** %tip.addr, align 8, !dbg !10948
  %call = call %struct.uiBut* @uiDefButBit(%struct.uiBlock* %0, i32 %or, i32 %2, i32 %3, i8* %4, i32 %5, i32 %6, i16 signext %7, i16 signext %8, i8* %10, float %11, float %12, float %13, float %14, i8* %15), !dbg !10949
  ret %struct.uiBut* %call, !dbg !10950
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefButC(%struct.uiBlock* %block, i32 %type, i32 %retval1, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !10951 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i8*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !10954, metadata !DIExpression()), !dbg !10955
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10956, metadata !DIExpression()), !dbg !10957
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !10958, metadata !DIExpression()), !dbg !10959
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10960, metadata !DIExpression()), !dbg !10961
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !10962, metadata !DIExpression()), !dbg !10963
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !10964, metadata !DIExpression()), !dbg !10965
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !10966, metadata !DIExpression()), !dbg !10967
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !10968, metadata !DIExpression()), !dbg !10969
  store i8* %poin, i8** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %poin.addr, metadata !10970, metadata !DIExpression()), !dbg !10971
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !10972, metadata !DIExpression()), !dbg !10973
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !10974, metadata !DIExpression()), !dbg !10975
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !10976, metadata !DIExpression()), !dbg !10977
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !10978, metadata !DIExpression()), !dbg !10979
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !10980, metadata !DIExpression()), !dbg !10981
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !10982
  %1 = load i32, i32* %type.addr, align 4, !dbg !10983
  %or = or i32 %1, 32, !dbg !10984
  %2 = load i32, i32* %retval.addr, align 4, !dbg !10985
  %3 = load i8*, i8** %str.addr, align 8, !dbg !10986
  %4 = load i32, i32* %x.addr, align 4, !dbg !10987
  %5 = load i32, i32* %y.addr, align 4, !dbg !10988
  %6 = load i16, i16* %width.addr, align 2, !dbg !10989
  %7 = load i16, i16* %height.addr, align 2, !dbg !10990
  %8 = load i8*, i8** %poin.addr, align 8, !dbg !10991
  %9 = load float, float* %min.addr, align 4, !dbg !10992
  %10 = load float, float* %max.addr, align 4, !dbg !10993
  %11 = load float, float* %a1.addr, align 4, !dbg !10994
  %12 = load float, float* %a2.addr, align 4, !dbg !10995
  %13 = load i8*, i8** %tip.addr, align 8, !dbg !10996
  %call = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %0, i32 %or, i32 %2, i8* %3, i32 %4, i32 %5, i16 signext %6, i16 signext %7, i8* %8, float %9, float %10, float %11, float %12, i8* %13), !dbg !10997
  ret %struct.uiBut* %call, !dbg !10998
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefButBitC(%struct.uiBlock* %block, i32 %type, i32 %bit, i32 %retval1, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !10999 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %bit.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i8*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !11002, metadata !DIExpression()), !dbg !11003
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11004, metadata !DIExpression()), !dbg !11005
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !11006, metadata !DIExpression()), !dbg !11007
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !11008, metadata !DIExpression()), !dbg !11009
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !11010, metadata !DIExpression()), !dbg !11011
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !11012, metadata !DIExpression()), !dbg !11013
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !11014, metadata !DIExpression()), !dbg !11015
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !11016, metadata !DIExpression()), !dbg !11017
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !11018, metadata !DIExpression()), !dbg !11019
  store i8* %poin, i8** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %poin.addr, metadata !11020, metadata !DIExpression()), !dbg !11021
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !11022, metadata !DIExpression()), !dbg !11023
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !11024, metadata !DIExpression()), !dbg !11025
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !11026, metadata !DIExpression()), !dbg !11027
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !11028, metadata !DIExpression()), !dbg !11029
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !11030, metadata !DIExpression()), !dbg !11031
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !11032
  %1 = load i32, i32* %type.addr, align 4, !dbg !11033
  %or = or i32 %1, 32, !dbg !11034
  %2 = load i32, i32* %bit.addr, align 4, !dbg !11035
  %3 = load i32, i32* %retval.addr, align 4, !dbg !11036
  %4 = load i8*, i8** %str.addr, align 8, !dbg !11037
  %5 = load i32, i32* %x.addr, align 4, !dbg !11038
  %6 = load i32, i32* %y.addr, align 4, !dbg !11039
  %7 = load i16, i16* %width.addr, align 2, !dbg !11040
  %8 = load i16, i16* %height.addr, align 2, !dbg !11041
  %9 = load i8*, i8** %poin.addr, align 8, !dbg !11042
  %10 = load float, float* %min.addr, align 4, !dbg !11043
  %11 = load float, float* %max.addr, align 4, !dbg !11044
  %12 = load float, float* %a1.addr, align 4, !dbg !11045
  %13 = load float, float* %a2.addr, align 4, !dbg !11046
  %14 = load i8*, i8** %tip.addr, align 8, !dbg !11047
  %call = call %struct.uiBut* @uiDefButBit(%struct.uiBlock* %0, i32 %or, i32 %2, i32 %3, i8* %4, i32 %5, i32 %6, i16 signext %7, i16 signext %8, i8* %9, float %10, float %11, float %12, float %13, i8* %14), !dbg !11048
  ret %struct.uiBut* %call, !dbg !11049
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefButR(%struct.uiBlock* %block, i32 %type, i32 %retval1, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, %struct.PointerRNA* %ptr, i8* %propname, i32 %index, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !11050 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %propname.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !11053, metadata !DIExpression()), !dbg !11054
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11055, metadata !DIExpression()), !dbg !11056
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !11057, metadata !DIExpression()), !dbg !11058
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !11059, metadata !DIExpression()), !dbg !11060
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !11061, metadata !DIExpression()), !dbg !11062
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !11063, metadata !DIExpression()), !dbg !11064
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !11065, metadata !DIExpression()), !dbg !11066
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !11067, metadata !DIExpression()), !dbg !11068
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !11069, metadata !DIExpression()), !dbg !11070
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !11071, metadata !DIExpression()), !dbg !11072
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !11073, metadata !DIExpression()), !dbg !11074
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !11075, metadata !DIExpression()), !dbg !11076
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !11077, metadata !DIExpression()), !dbg !11078
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !11079, metadata !DIExpression()), !dbg !11080
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !11081, metadata !DIExpression()), !dbg !11082
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !11083, metadata !DIExpression()), !dbg !11084
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !11085, metadata !DIExpression()), !dbg !11086
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !11087
  %1 = load i32, i32* %type.addr, align 4, !dbg !11088
  %2 = load i32, i32* %retval.addr, align 4, !dbg !11089
  %3 = load i8*, i8** %str.addr, align 8, !dbg !11090
  %4 = load i32, i32* %x.addr, align 4, !dbg !11091
  %5 = load i32, i32* %y.addr, align 4, !dbg !11092
  %6 = load i16, i16* %width.addr, align 2, !dbg !11093
  %7 = load i16, i16* %height.addr, align 2, !dbg !11094
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11095
  %9 = load i8*, i8** %propname.addr, align 8, !dbg !11096
  %10 = load i32, i32* %index.addr, align 4, !dbg !11097
  %11 = load float, float* %min.addr, align 4, !dbg !11098
  %12 = load float, float* %max.addr, align 4, !dbg !11099
  %13 = load float, float* %a1.addr, align 4, !dbg !11100
  %14 = load float, float* %a2.addr, align 4, !dbg !11101
  %15 = load i8*, i8** %tip.addr, align 8, !dbg !11102
  %call = call %struct.uiBut* @ui_def_but_rna_propname(%struct.uiBlock* %0, i32 %1, i32 %2, i8* %3, i32 %4, i32 %5, i16 signext %6, i16 signext %7, %struct.PointerRNA* %8, i8* %9, i32 %10, float %11, float %12, float %13, float %14, i8* %15), !dbg !11103
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !11104
  %16 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11105
  call void @ui_check_but(%struct.uiBut* %16), !dbg !11106
  %17 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11107
  ret %struct.uiBut* %17, !dbg !11108
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiBut* @ui_def_but_rna_propname(%struct.uiBlock* %block, i32 %type, i32 %retval1, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, %struct.PointerRNA* %ptr, i8* %propname, i32 %index, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !11109 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %propname.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !11110, metadata !DIExpression()), !dbg !11111
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11112, metadata !DIExpression()), !dbg !11113
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !11114, metadata !DIExpression()), !dbg !11115
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !11116, metadata !DIExpression()), !dbg !11117
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !11118, metadata !DIExpression()), !dbg !11119
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !11120, metadata !DIExpression()), !dbg !11121
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !11122, metadata !DIExpression()), !dbg !11123
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !11124, metadata !DIExpression()), !dbg !11125
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !11126, metadata !DIExpression()), !dbg !11127
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !11128, metadata !DIExpression()), !dbg !11129
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !11130, metadata !DIExpression()), !dbg !11131
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !11132, metadata !DIExpression()), !dbg !11133
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !11134, metadata !DIExpression()), !dbg !11135
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !11136, metadata !DIExpression()), !dbg !11137
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !11138, metadata !DIExpression()), !dbg !11139
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !11140, metadata !DIExpression()), !dbg !11141
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !11142, metadata !DIExpression()), !dbg !11143
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11144
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !11145
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %0, i8* %1), !dbg !11146
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !11143
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !11147, metadata !DIExpression()), !dbg !11148
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !11149
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !11149
  br i1 %tobool, label %if.then, label %if.else, !dbg !11151

if.then:                                          ; preds = %entry
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !11152
  %4 = load i32, i32* %type.addr, align 4, !dbg !11154
  %5 = load i32, i32* %retval.addr, align 4, !dbg !11155
  %6 = load i8*, i8** %str.addr, align 8, !dbg !11156
  %7 = load i32, i32* %x.addr, align 4, !dbg !11157
  %8 = load i32, i32* %y.addr, align 4, !dbg !11158
  %9 = load i16, i16* %width.addr, align 2, !dbg !11159
  %10 = load i16, i16* %height.addr, align 2, !dbg !11160
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11161
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !11162
  %13 = load i32, i32* %index.addr, align 4, !dbg !11163
  %14 = load float, float* %min.addr, align 4, !dbg !11164
  %15 = load float, float* %max.addr, align 4, !dbg !11165
  %16 = load float, float* %a1.addr, align 4, !dbg !11166
  %17 = load float, float* %a2.addr, align 4, !dbg !11167
  %18 = load i8*, i8** %tip.addr, align 8, !dbg !11168
  %call2 = call %struct.uiBut* @ui_def_but_rna(%struct.uiBlock* %3, i32 %4, i32 %5, i8* %6, i32 %7, i32 %8, i16 signext %9, i16 signext %10, %struct.PointerRNA* %11, %struct.PropertyRNA* %12, i32 %13, float %14, float %15, float %16, float %17, i8* %18), !dbg !11169
  store %struct.uiBut* %call2, %struct.uiBut** %but, align 8, !dbg !11170
  br label %if.end, !dbg !11171

if.else:                                          ; preds = %entry
  %19 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !11172
  %20 = load i32, i32* %type.addr, align 4, !dbg !11174
  %21 = load i32, i32* %retval.addr, align 4, !dbg !11175
  %22 = load i8*, i8** %propname.addr, align 8, !dbg !11176
  %23 = load i32, i32* %x.addr, align 4, !dbg !11177
  %24 = load i32, i32* %y.addr, align 4, !dbg !11178
  %25 = load i16, i16* %width.addr, align 2, !dbg !11179
  %26 = load i16, i16* %height.addr, align 2, !dbg !11180
  %27 = load float, float* %min.addr, align 4, !dbg !11181
  %28 = load float, float* %max.addr, align 4, !dbg !11182
  %29 = load float, float* %a1.addr, align 4, !dbg !11183
  %30 = load float, float* %a2.addr, align 4, !dbg !11184
  %31 = load i8*, i8** %tip.addr, align 8, !dbg !11185
  %call3 = call %struct.uiBut* @ui_def_but(%struct.uiBlock* %19, i32 %20, i32 %21, i8* %22, i32 %23, i32 %24, i16 signext %25, i16 signext %26, i8* null, float %27, float %28, float %29, float %30, i8* %31), !dbg !11186
  store %struct.uiBut* %call3, %struct.uiBut** %but, align 8, !dbg !11187
  %32 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11188
  call void @ui_def_but_rna__disable(%struct.uiBut* %32), !dbg !11189
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %33 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11190
  ret %struct.uiBut* %33, !dbg !11191
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefButR_prop(%struct.uiBlock* %block, i32 %type, i32 %retval1, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !11192 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !11195, metadata !DIExpression()), !dbg !11196
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11197, metadata !DIExpression()), !dbg !11198
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !11199, metadata !DIExpression()), !dbg !11200
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !11201, metadata !DIExpression()), !dbg !11202
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !11203, metadata !DIExpression()), !dbg !11204
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !11205, metadata !DIExpression()), !dbg !11206
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !11207, metadata !DIExpression()), !dbg !11208
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !11209, metadata !DIExpression()), !dbg !11210
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !11211, metadata !DIExpression()), !dbg !11212
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !11213, metadata !DIExpression()), !dbg !11214
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !11215, metadata !DIExpression()), !dbg !11216
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !11217, metadata !DIExpression()), !dbg !11218
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !11219, metadata !DIExpression()), !dbg !11220
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !11221, metadata !DIExpression()), !dbg !11222
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !11223, metadata !DIExpression()), !dbg !11224
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !11225, metadata !DIExpression()), !dbg !11226
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !11227, metadata !DIExpression()), !dbg !11228
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !11229
  %1 = load i32, i32* %type.addr, align 4, !dbg !11230
  %2 = load i32, i32* %retval.addr, align 4, !dbg !11231
  %3 = load i8*, i8** %str.addr, align 8, !dbg !11232
  %4 = load i32, i32* %x.addr, align 4, !dbg !11233
  %5 = load i32, i32* %y.addr, align 4, !dbg !11234
  %6 = load i16, i16* %width.addr, align 2, !dbg !11235
  %7 = load i16, i16* %height.addr, align 2, !dbg !11236
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11237
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !11238
  %10 = load i32, i32* %index.addr, align 4, !dbg !11239
  %11 = load float, float* %min.addr, align 4, !dbg !11240
  %12 = load float, float* %max.addr, align 4, !dbg !11241
  %13 = load float, float* %a1.addr, align 4, !dbg !11242
  %14 = load float, float* %a2.addr, align 4, !dbg !11243
  %15 = load i8*, i8** %tip.addr, align 8, !dbg !11244
  %call = call %struct.uiBut* @ui_def_but_rna(%struct.uiBlock* %0, i32 %1, i32 %2, i8* %3, i32 %4, i32 %5, i16 signext %6, i16 signext %7, %struct.PointerRNA* %8, %struct.PropertyRNA* %9, i32 %10, float %11, float %12, float %13, float %14, i8* %15), !dbg !11245
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !11246
  %16 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11247
  call void @ui_check_but(%struct.uiBut* %16), !dbg !11248
  %17 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11249
  ret %struct.uiBut* %17, !dbg !11250
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiBut* @ui_def_but_rna(%struct.uiBlock* %block, i32 %type, i32 %retval1, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !11251 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  %proptype = alloca i32, align 4
  %but = alloca %struct.uiBut*, align 8
  %icon = alloca i32, align 4
  %func = alloca void (%struct.bContext*, %struct.uiLayout*, i8*)*, align 8
  %item = alloca %struct.EnumPropertyItem*, align 8
  %value = alloca i32, align 4
  %free = alloca i8, align 1
  %i = alloca i32, align 4
  %hardmin = alloca i32, align 4
  %hardmax = alloca i32, align 4
  %softmin = alloca i32, align 4
  %softmax = alloca i32, align 4
  %step = alloca i32, align 4
  %hardmin94 = alloca float, align 4
  %hardmax95 = alloca float, align 4
  %softmin96 = alloca float, align 4
  %softmax97 = alloca float, align 4
  %step98 = alloca float, align 4
  %precision = alloca float, align 4
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !11252, metadata !DIExpression()), !dbg !11253
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11254, metadata !DIExpression()), !dbg !11255
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !11256, metadata !DIExpression()), !dbg !11257
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !11258, metadata !DIExpression()), !dbg !11259
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !11260, metadata !DIExpression()), !dbg !11261
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !11262, metadata !DIExpression()), !dbg !11263
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !11264, metadata !DIExpression()), !dbg !11265
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !11266, metadata !DIExpression()), !dbg !11267
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !11268, metadata !DIExpression()), !dbg !11269
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !11270, metadata !DIExpression()), !dbg !11271
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !11272, metadata !DIExpression()), !dbg !11273
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !11274, metadata !DIExpression()), !dbg !11275
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !11276, metadata !DIExpression()), !dbg !11277
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !11278, metadata !DIExpression()), !dbg !11279
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !11280, metadata !DIExpression()), !dbg !11281
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !11282, metadata !DIExpression()), !dbg !11283
  call void @llvm.dbg.declare(metadata i32* %proptype, metadata !11284, metadata !DIExpression()), !dbg !11285
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !11286
  %call = call i32 @RNA_property_type(%struct.PropertyRNA* %0), !dbg !11287
  store i32 %call, i32* %proptype, align 4, !dbg !11285
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !11288, metadata !DIExpression()), !dbg !11289
  call void @llvm.dbg.declare(metadata i32* %icon, metadata !11290, metadata !DIExpression()), !dbg !11291
  store i32 0, i32* %icon, align 4, !dbg !11291
  call void @llvm.dbg.declare(metadata void (%struct.bContext*, %struct.uiLayout*, i8*)** %func, metadata !11292, metadata !DIExpression()), !dbg !11293
  store void (%struct.bContext*, %struct.uiLayout*, i8*)* null, void (%struct.bContext*, %struct.uiLayout*, i8*)** %func, align 8, !dbg !11293
  %1 = load i32, i32* %type.addr, align 4, !dbg !11294
  %cmp = icmp eq i32 %1, 7680, !dbg !11294
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11294

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %type.addr, align 4, !dbg !11294
  %cmp2 = icmp eq i32 %2, 22016, !dbg !11294
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !11294

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %3 = load i32, i32* %type.addr, align 4, !dbg !11294
  %cmp4 = icmp eq i32 %3, 13312, !dbg !11294
  br i1 %cmp4, label %if.then, label %if.end, !dbg !11296

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  br label %if.end, !dbg !11297

if.end:                                           ; preds = %if.then, %lor.lhs.false3
  %4 = load i32, i32* %proptype, align 4, !dbg !11299
  %cmp5 = icmp eq i32 %4, 4, !dbg !11301
  br i1 %cmp5, label %land.lhs.true, label %if.else43, !dbg !11302

land.lhs.true:                                    ; preds = %if.end
  %5 = load i32, i32* %type.addr, align 4, !dbg !11303
  %cmp6 = icmp eq i32 %5, 5632, !dbg !11303
  br i1 %cmp6, label %if.then11, label %lor.lhs.false7, !dbg !11303

lor.lhs.false7:                                   ; preds = %land.lhs.true
  %6 = load i32, i32* %type.addr, align 4, !dbg !11303
  %cmp8 = icmp eq i32 %6, 1024, !dbg !11303
  br i1 %cmp8, label %if.then11, label %lor.lhs.false9, !dbg !11303

lor.lhs.false9:                                   ; preds = %lor.lhs.false7
  %7 = load i32, i32* %type.addr, align 4, !dbg !11303
  %cmp10 = icmp eq i32 %7, 18432, !dbg !11303
  br i1 %cmp10, label %if.then11, label %if.else43, !dbg !11304

if.then11:                                        ; preds = %lor.lhs.false9, %lor.lhs.false7, %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !11305, metadata !DIExpression()), !dbg !11316
  call void @llvm.dbg.declare(metadata i32* %value, metadata !11317, metadata !DIExpression()), !dbg !11318
  call void @llvm.dbg.declare(metadata i8* %free, metadata !11319, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11321, metadata !DIExpression()), !dbg !11322
  %8 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !11323
  %evil_C = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %8, i32 0, i32 48, !dbg !11324
  %9 = load i8*, i8** %evil_C, align 8, !dbg !11324
  %10 = bitcast i8* %9 to %struct.bContext*, !dbg !11323
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11325
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !11326
  call void @RNA_property_enum_items(%struct.bContext* %10, %struct.PointerRNA* %11, %struct.PropertyRNA* %12, %struct.EnumPropertyItem** %item, i32* null, i8* %free), !dbg !11327
  %13 = load i32, i32* %type.addr, align 4, !dbg !11328
  %cmp12 = icmp eq i32 %13, 5632, !dbg !11330
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !11331

if.then13:                                        ; preds = %if.then11
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11332
  %15 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !11334
  %call14 = call i32 @RNA_property_enum_get(%struct.PointerRNA* %14, %struct.PropertyRNA* %15), !dbg !11335
  store i32 %call14, i32* %value, align 4, !dbg !11336
  br label %if.end15, !dbg !11337

if.else:                                          ; preds = %if.then11
  %16 = load float, float* %max.addr, align 4, !dbg !11338
  %conv = fptosi float %16 to i32, !dbg !11340
  store i32 %conv, i32* %value, align 4, !dbg !11341
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then13
  %17 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !11342
  %18 = load i32, i32* %value, align 4, !dbg !11343
  %call16 = call i32 @RNA_enum_from_value(%struct.EnumPropertyItem* %17, i32 %18), !dbg !11344
  store i32 %call16, i32* %i, align 4, !dbg !11345
  %19 = load i32, i32* %i, align 4, !dbg !11346
  %cmp17 = icmp ne i32 %19, -1, !dbg !11348
  br i1 %cmp17, label %if.then19, label %if.else25, !dbg !11349

if.then19:                                        ; preds = %if.end15
  %20 = load i8*, i8** %str.addr, align 8, !dbg !11350
  %tobool = icmp ne i8* %20, null, !dbg !11350
  br i1 %tobool, label %if.end21, label %if.then20, !dbg !11353

if.then20:                                        ; preds = %if.then19
  %21 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !11354
  %22 = load i32, i32* %i, align 4, !dbg !11356
  %idxprom = sext i32 %22 to i64, !dbg !11354
  %arrayidx = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %21, i64 %idxprom, !dbg !11354
  %name = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx, i32 0, i32 3, !dbg !11357
  %23 = load i8*, i8** %name, align 8, !dbg !11357
  store i8* %23, i8** %str.addr, align 8, !dbg !11358
  br label %if.end21, !dbg !11359

if.end21:                                         ; preds = %if.then20, %if.then19
  %24 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !11360
  %25 = load i32, i32* %i, align 4, !dbg !11361
  %idxprom22 = sext i32 %25 to i64, !dbg !11360
  %arrayidx23 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %24, i64 %idxprom22, !dbg !11360
  %icon24 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %arrayidx23, i32 0, i32 2, !dbg !11362
  %26 = load i32, i32* %icon24, align 8, !dbg !11362
  store i32 %26, i32* %icon, align 4, !dbg !11363
  br label %if.end35, !dbg !11364

if.else25:                                        ; preds = %if.end15
  %27 = load i8*, i8** %str.addr, align 8, !dbg !11365
  %tobool26 = icmp ne i8* %27, null, !dbg !11365
  br i1 %tobool26, label %if.end34, label %if.then27, !dbg !11368

if.then27:                                        ; preds = %if.else25
  %28 = load i32, i32* %type.addr, align 4, !dbg !11369
  %cmp28 = icmp eq i32 %28, 5632, !dbg !11372
  br i1 %cmp28, label %if.then30, label %if.else31, !dbg !11373

if.then30:                                        ; preds = %if.then27
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i64 0, i64 0), i8** %str.addr, align 8, !dbg !11374
  br label %if.end33, !dbg !11376

if.else31:                                        ; preds = %if.then27
  %29 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !11377
  %call32 = call i8* @RNA_property_ui_name(%struct.PropertyRNA* %29), !dbg !11379
  store i8* %call32, i8** %str.addr, align 8, !dbg !11380
  br label %if.end33

if.end33:                                         ; preds = %if.else31, %if.then30
  br label %if.end34, !dbg !11381

if.end34:                                         ; preds = %if.end33, %if.else25
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.end21
  %30 = load i32, i32* %type.addr, align 4, !dbg !11382
  %cmp36 = icmp eq i32 %30, 5632, !dbg !11384
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !11385

if.then38:                                        ; preds = %if.end35
  store void (%struct.bContext*, %struct.uiLayout*, i8*)* @ui_def_but_rna__menu, void (%struct.bContext*, %struct.uiLayout*, i8*)** %func, align 8, !dbg !11386
  br label %if.end39, !dbg !11388

if.end39:                                         ; preds = %if.then38, %if.end35
  %31 = load i8, i8* %free, align 1, !dbg !11389
  %tobool40 = icmp ne i8 %31, 0, !dbg !11389
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !11391

if.then41:                                        ; preds = %if.end39
  %32 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11392
  %33 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !11394
  %34 = bitcast %struct.EnumPropertyItem* %33 to i8*, !dbg !11394
  call void %32(i8* %34), !dbg !11392
  br label %if.end42, !dbg !11395

if.end42:                                         ; preds = %if.then41, %if.end39
  br label %if.end49, !dbg !11396

if.else43:                                        ; preds = %lor.lhs.false9, %if.end
  %35 = load i8*, i8** %str.addr, align 8, !dbg !11397
  %tobool44 = icmp ne i8* %35, null, !dbg !11397
  br i1 %tobool44, label %if.end47, label %if.then45, !dbg !11400

if.then45:                                        ; preds = %if.else43
  %36 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !11401
  %call46 = call i8* @RNA_property_ui_name(%struct.PropertyRNA* %36), !dbg !11403
  store i8* %call46, i8** %str.addr, align 8, !dbg !11404
  br label %if.end47, !dbg !11405

if.end47:                                         ; preds = %if.then45, %if.else43
  %37 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !11406
  %call48 = call i32 @RNA_property_ui_icon(%struct.PropertyRNA* %37), !dbg !11407
  store i32 %call48, i32* %icon, align 4, !dbg !11408
  br label %if.end49

if.end49:                                         ; preds = %if.end47, %if.end42
  %38 = load i8*, i8** %tip.addr, align 8, !dbg !11409
  %tobool50 = icmp ne i8* %38, null, !dbg !11409
  br i1 %tobool50, label %if.end56, label %land.lhs.true51, !dbg !11411

land.lhs.true51:                                  ; preds = %if.end49
  %39 = load i32, i32* %proptype, align 4, !dbg !11412
  %cmp52 = icmp ne i32 %39, 4, !dbg !11413
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !11414

if.then54:                                        ; preds = %land.lhs.true51
  %40 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !11415
  %call55 = call i8* @RNA_property_ui_description(%struct.PropertyRNA* %40), !dbg !11416
  store i8* %call55, i8** %tip.addr, align 8, !dbg !11417
  br label %if.end56, !dbg !11418

if.end56:                                         ; preds = %if.then54, %land.lhs.true51, %if.end49
  %41 = load float, float* %min.addr, align 4, !dbg !11419
  %42 = load float, float* %max.addr, align 4, !dbg !11421
  %cmp57 = fcmp oeq float %41, %42, !dbg !11422
  br i1 %cmp57, label %if.then65, label %lor.lhs.false59, !dbg !11423

lor.lhs.false59:                                  ; preds = %if.end56
  %43 = load float, float* %a1.addr, align 4, !dbg !11424
  %cmp60 = fcmp oeq float %43, -1.000000e+00, !dbg !11425
  br i1 %cmp60, label %if.then65, label %lor.lhs.false62, !dbg !11426

lor.lhs.false62:                                  ; preds = %lor.lhs.false59
  %44 = load float, float* %a2.addr, align 4, !dbg !11427
  %cmp63 = fcmp oeq float %44, -1.000000e+00, !dbg !11428
  br i1 %cmp63, label %if.then65, label %if.end130, !dbg !11429

if.then65:                                        ; preds = %lor.lhs.false62, %lor.lhs.false59, %if.end56
  %45 = load i32, i32* %proptype, align 4, !dbg !11430
  %cmp66 = icmp eq i32 %45, 1, !dbg !11433
  br i1 %cmp66, label %if.then68, label %if.else90, !dbg !11434

if.then68:                                        ; preds = %if.then65
  call void @llvm.dbg.declare(metadata i32* %hardmin, metadata !11435, metadata !DIExpression()), !dbg !11437
  call void @llvm.dbg.declare(metadata i32* %hardmax, metadata !11438, metadata !DIExpression()), !dbg !11439
  call void @llvm.dbg.declare(metadata i32* %softmin, metadata !11440, metadata !DIExpression()), !dbg !11441
  call void @llvm.dbg.declare(metadata i32* %softmax, metadata !11442, metadata !DIExpression()), !dbg !11443
  call void @llvm.dbg.declare(metadata i32* %step, metadata !11444, metadata !DIExpression()), !dbg !11445
  %46 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11446
  %47 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !11447
  call void @RNA_property_int_range(%struct.PointerRNA* %46, %struct.PropertyRNA* %47, i32* %hardmin, i32* %hardmax), !dbg !11448
  %48 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11449
  %49 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !11450
  call void @RNA_property_int_ui_range(%struct.PointerRNA* %48, %struct.PropertyRNA* %49, i32* %softmin, i32* %softmax, i32* %step), !dbg !11451
  %50 = load i32, i32* %type.addr, align 4, !dbg !11452
  %cmp69 = icmp eq i32 %50, 1024, !dbg !11452
  br i1 %cmp69, label %if.end80, label %lor.lhs.false71, !dbg !11452

lor.lhs.false71:                                  ; preds = %if.then68
  %51 = load i32, i32* %type.addr, align 4, !dbg !11452
  %cmp72 = icmp eq i32 %51, 18432, !dbg !11452
  br i1 %cmp72, label %if.end80, label %land.lhs.true74, !dbg !11454

land.lhs.true74:                                  ; preds = %lor.lhs.false71
  %52 = load float, float* %min.addr, align 4, !dbg !11455
  %53 = load float, float* %max.addr, align 4, !dbg !11456
  %cmp75 = fcmp oeq float %52, %53, !dbg !11457
  br i1 %cmp75, label %if.then77, label %if.end80, !dbg !11458

if.then77:                                        ; preds = %land.lhs.true74
  %54 = load i32, i32* %hardmin, align 4, !dbg !11459
  %conv78 = sitofp i32 %54 to float, !dbg !11459
  store float %conv78, float* %min.addr, align 4, !dbg !11461
  %55 = load i32, i32* %hardmax, align 4, !dbg !11462
  %conv79 = sitofp i32 %55 to float, !dbg !11462
  store float %conv79, float* %max.addr, align 4, !dbg !11463
  br label %if.end80, !dbg !11464

if.end80:                                         ; preds = %if.then77, %land.lhs.true74, %lor.lhs.false71, %if.then68
  %56 = load float, float* %a1.addr, align 4, !dbg !11465
  %cmp81 = fcmp oeq float %56, -1.000000e+00, !dbg !11467
  br i1 %cmp81, label %if.then83, label %if.end85, !dbg !11468

if.then83:                                        ; preds = %if.end80
  %57 = load i32, i32* %step, align 4, !dbg !11469
  %conv84 = sitofp i32 %57 to float, !dbg !11469
  store float %conv84, float* %a1.addr, align 4, !dbg !11470
  br label %if.end85, !dbg !11471

if.end85:                                         ; preds = %if.then83, %if.end80
  %58 = load float, float* %a2.addr, align 4, !dbg !11472
  %cmp86 = fcmp oeq float %58, -1.000000e+00, !dbg !11474
  br i1 %cmp86, label %if.then88, label %if.end89, !dbg !11475

if.then88:                                        ; preds = %if.end85
  store float 0.000000e+00, float* %a2.addr, align 4, !dbg !11476
  br label %if.end89, !dbg !11477

if.end89:                                         ; preds = %if.then88, %if.end85
  br label %if.end129, !dbg !11478

if.else90:                                        ; preds = %if.then65
  %59 = load i32, i32* %proptype, align 4, !dbg !11479
  %cmp91 = icmp eq i32 %59, 2, !dbg !11481
  br i1 %cmp91, label %if.then93, label %if.else117, !dbg !11482

if.then93:                                        ; preds = %if.else90
  call void @llvm.dbg.declare(metadata float* %hardmin94, metadata !11483, metadata !DIExpression()), !dbg !11485
  call void @llvm.dbg.declare(metadata float* %hardmax95, metadata !11486, metadata !DIExpression()), !dbg !11487
  call void @llvm.dbg.declare(metadata float* %softmin96, metadata !11488, metadata !DIExpression()), !dbg !11489
  call void @llvm.dbg.declare(metadata float* %softmax97, metadata !11490, metadata !DIExpression()), !dbg !11491
  call void @llvm.dbg.declare(metadata float* %step98, metadata !11492, metadata !DIExpression()), !dbg !11493
  call void @llvm.dbg.declare(metadata float* %precision, metadata !11494, metadata !DIExpression()), !dbg !11495
  %60 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11496
  %61 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !11497
  call void @RNA_property_float_range(%struct.PointerRNA* %60, %struct.PropertyRNA* %61, float* %hardmin94, float* %hardmax95), !dbg !11498
  %62 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11499
  %63 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !11500
  call void @RNA_property_float_ui_range(%struct.PointerRNA* %62, %struct.PropertyRNA* %63, float* %softmin96, float* %softmax97, float* %step98, float* %precision), !dbg !11501
  %64 = load i32, i32* %type.addr, align 4, !dbg !11502
  %cmp99 = icmp eq i32 %64, 1024, !dbg !11502
  br i1 %cmp99, label %if.end108, label %lor.lhs.false101, !dbg !11502

lor.lhs.false101:                                 ; preds = %if.then93
  %65 = load i32, i32* %type.addr, align 4, !dbg !11502
  %cmp102 = icmp eq i32 %65, 18432, !dbg !11502
  br i1 %cmp102, label %if.end108, label %land.lhs.true104, !dbg !11504

land.lhs.true104:                                 ; preds = %lor.lhs.false101
  %66 = load float, float* %min.addr, align 4, !dbg !11505
  %67 = load float, float* %max.addr, align 4, !dbg !11506
  %cmp105 = fcmp oeq float %66, %67, !dbg !11507
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !11508

if.then107:                                       ; preds = %land.lhs.true104
  %68 = load float, float* %hardmin94, align 4, !dbg !11509
  store float %68, float* %min.addr, align 4, !dbg !11511
  %69 = load float, float* %hardmax95, align 4, !dbg !11512
  store float %69, float* %max.addr, align 4, !dbg !11513
  br label %if.end108, !dbg !11514

if.end108:                                        ; preds = %if.then107, %land.lhs.true104, %lor.lhs.false101, %if.then93
  %70 = load float, float* %a1.addr, align 4, !dbg !11515
  %cmp109 = fcmp oeq float %70, -1.000000e+00, !dbg !11517
  br i1 %cmp109, label %if.then111, label %if.end112, !dbg !11518

if.then111:                                       ; preds = %if.end108
  %71 = load float, float* %step98, align 4, !dbg !11519
  store float %71, float* %a1.addr, align 4, !dbg !11520
  br label %if.end112, !dbg !11521

if.end112:                                        ; preds = %if.then111, %if.end108
  %72 = load float, float* %a2.addr, align 4, !dbg !11522
  %cmp113 = fcmp oeq float %72, -1.000000e+00, !dbg !11524
  br i1 %cmp113, label %if.then115, label %if.end116, !dbg !11525

if.then115:                                       ; preds = %if.end112
  %73 = load float, float* %precision, align 4, !dbg !11526
  store float %73, float* %a2.addr, align 4, !dbg !11527
  br label %if.end116, !dbg !11528

if.end116:                                        ; preds = %if.then115, %if.end112
  br label %if.end128, !dbg !11529

if.else117:                                       ; preds = %if.else90
  %74 = load i32, i32* %proptype, align 4, !dbg !11530
  %cmp118 = icmp eq i32 %74, 3, !dbg !11532
  br i1 %cmp118, label %if.then120, label %if.end127, !dbg !11533

if.then120:                                       ; preds = %if.else117
  store float 0.000000e+00, float* %min.addr, align 4, !dbg !11534
  %75 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !11536
  %call121 = call i32 @RNA_property_string_maxlength(%struct.PropertyRNA* %75), !dbg !11537
  %conv122 = sitofp i32 %call121 to float, !dbg !11537
  store float %conv122, float* %max.addr, align 4, !dbg !11538
  %76 = load float, float* %max.addr, align 4, !dbg !11539
  %cmp123 = fcmp oeq float %76, 0.000000e+00, !dbg !11541
  br i1 %cmp123, label %if.then125, label %if.end126, !dbg !11542

if.then125:                                       ; preds = %if.then120
  store float 4.000000e+02, float* %max.addr, align 4, !dbg !11543
  br label %if.end126, !dbg !11544

if.end126:                                        ; preds = %if.then125, %if.then120
  br label %if.end127, !dbg !11545

if.end127:                                        ; preds = %if.end126, %if.else117
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.end116
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.end89
  br label %if.end130, !dbg !11546

if.end130:                                        ; preds = %if.end129, %lor.lhs.false62
  %77 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !11547
  %78 = load i32, i32* %type.addr, align 4, !dbg !11548
  %79 = load i32, i32* %retval.addr, align 4, !dbg !11549
  %80 = load i8*, i8** %str.addr, align 8, !dbg !11550
  %81 = load i32, i32* %x.addr, align 4, !dbg !11551
  %82 = load i32, i32* %y.addr, align 4, !dbg !11552
  %83 = load i16, i16* %width.addr, align 2, !dbg !11553
  %84 = load i16, i16* %height.addr, align 2, !dbg !11554
  %85 = load float, float* %min.addr, align 4, !dbg !11555
  %86 = load float, float* %max.addr, align 4, !dbg !11556
  %87 = load float, float* %a1.addr, align 4, !dbg !11557
  %88 = load float, float* %a2.addr, align 4, !dbg !11558
  %89 = load i8*, i8** %tip.addr, align 8, !dbg !11559
  %call131 = call %struct.uiBut* @ui_def_but(%struct.uiBlock* %77, i32 %78, i32 %79, i8* %80, i32 %81, i32 %82, i16 signext %83, i16 signext %84, i8* null, float %85, float %86, float %87, float %88, i8* %89), !dbg !11560
  store %struct.uiBut* %call131, %struct.uiBut** %but, align 8, !dbg !11561
  %90 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11562
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %90, i32 0, i32 54, !dbg !11563
  %91 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !11564
  %92 = bitcast %struct.PointerRNA* %rnapoin to i8*, !dbg !11565
  %93 = bitcast %struct.PointerRNA* %91 to i8*, !dbg !11565
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 24, i1 false), !dbg !11565
  %94 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !11566
  %95 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11567
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %95, i32 0, i32 55, !dbg !11568
  store %struct.PropertyRNA* %94, %struct.PropertyRNA** %rnaprop, align 8, !dbg !11569
  %96 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11570
  %rnaprop132 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %96, i32 0, i32 55, !dbg !11572
  %97 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop132, align 8, !dbg !11572
  %call133 = call zeroext i8 @RNA_property_array_check(%struct.PropertyRNA* %97), !dbg !11573
  %tobool134 = icmp ne i8 %call133, 0, !dbg !11573
  br i1 %tobool134, label %if.then135, label %if.else136, !dbg !11574

if.then135:                                       ; preds = %if.end130
  %98 = load i32, i32* %index.addr, align 4, !dbg !11575
  %99 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11576
  %rnaindex = getelementptr inbounds %struct.uiBut, %struct.uiBut* %99, i32 0, i32 56, !dbg !11577
  store i32 %98, i32* %rnaindex, align 8, !dbg !11578
  br label %if.end138, !dbg !11576

if.else136:                                       ; preds = %if.end130
  %100 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11579
  %rnaindex137 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %100, i32 0, i32 56, !dbg !11580
  store i32 0, i32* %rnaindex137, align 8, !dbg !11581
  br label %if.end138

if.end138:                                        ; preds = %if.else136, %if.then135
  %101 = load i32, i32* %icon, align 4, !dbg !11582
  %tobool139 = icmp ne i32 %101, 0, !dbg !11582
  br i1 %tobool139, label %if.then140, label %if.end147, !dbg !11584

if.then140:                                       ; preds = %if.end138
  %102 = load i32, i32* %icon, align 4, !dbg !11585
  %103 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11587
  %icon141 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %103, i32 0, i32 44, !dbg !11588
  store i32 %102, i32* %icon141, align 8, !dbg !11589
  %104 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11590
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %104, i32 0, i32 2, !dbg !11591
  %105 = load i32, i32* %flag, align 8, !dbg !11592
  %or = or i32 %105, 8, !dbg !11592
  store i32 %or, i32* %flag, align 8, !dbg !11592
  %106 = load i8*, i8** %str.addr, align 8, !dbg !11593
  %arrayidx142 = getelementptr inbounds i8, i8* %106, i64 0, !dbg !11593
  %107 = load i8, i8* %arrayidx142, align 1, !dbg !11593
  %tobool143 = icmp ne i8 %107, 0, !dbg !11593
  br i1 %tobool143, label %if.then144, label %if.end146, !dbg !11595

if.then144:                                       ; preds = %if.then140
  %108 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11596
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %108, i32 0, i32 3, !dbg !11598
  %109 = load i32, i32* %drawflag, align 4, !dbg !11599
  %or145 = or i32 %109, 4, !dbg !11599
  store i32 %or145, i32* %drawflag, align 4, !dbg !11599
  br label %if.end146, !dbg !11600

if.end146:                                        ; preds = %if.then144, %if.then140
  br label %if.end147, !dbg !11601

if.end147:                                        ; preds = %if.end146, %if.end138
  %110 = load i32, i32* %type.addr, align 4, !dbg !11602
  %cmp148 = icmp eq i32 %110, 5632, !dbg !11604
  br i1 %cmp148, label %land.lhs.true150, label %if.end157, !dbg !11605

land.lhs.true150:                                 ; preds = %if.end147
  %111 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11606
  %dt = getelementptr inbounds %struct.uiBut, %struct.uiBut* %111, i32 0, i32 46, !dbg !11607
  %112 = load i8, i8* %dt, align 1, !dbg !11607
  %conv151 = zext i8 %112 to i32, !dbg !11606
  %cmp152 = icmp eq i32 %conv151, 2, !dbg !11608
  br i1 %cmp152, label %if.then154, label %if.end157, !dbg !11609

if.then154:                                       ; preds = %land.lhs.true150
  %113 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11610
  %flag155 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %113, i32 0, i32 2, !dbg !11612
  %114 = load i32, i32* %flag155, align 8, !dbg !11613
  %or156 = or i32 %114, 64, !dbg !11613
  store i32 %or156, i32* %flag155, align 8, !dbg !11613
  br label %if.end157, !dbg !11614

if.end157:                                        ; preds = %if.then154, %land.lhs.true150, %if.end147
  %115 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11615
  %rnapoin158 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %115, i32 0, i32 54, !dbg !11617
  %116 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !11618
  %call159 = call zeroext i8 @RNA_property_editable(%struct.PointerRNA* %rnapoin158, %struct.PropertyRNA* %116), !dbg !11619
  %tobool160 = icmp ne i8 %call159, 0, !dbg !11619
  br i1 %tobool160, label %if.end162, label %if.then161, !dbg !11620

if.then161:                                       ; preds = %if.end157
  %117 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11621
  call void @ui_def_but_rna__disable(%struct.uiBut* %117), !dbg !11623
  br label %if.end162, !dbg !11624

if.end162:                                        ; preds = %if.then161, %if.end157
  %118 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11625
  %flag163 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %118, i32 0, i32 2, !dbg !11627
  %119 = load i32, i32* %flag163, align 8, !dbg !11627
  %and = and i32 %119, 524288, !dbg !11628
  %tobool164 = icmp ne i32 %and, 0, !dbg !11628
  br i1 %tobool164, label %land.lhs.true165, label %if.end173, !dbg !11629

land.lhs.true165:                                 ; preds = %if.end162
  %120 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11630
  %call166 = call zeroext i8 @ui_is_but_rna_undo(%struct.uiBut* %120), !dbg !11631
  %conv167 = zext i8 %call166 to i32, !dbg !11631
  %cmp168 = icmp eq i32 %conv167, 0, !dbg !11632
  br i1 %cmp168, label %if.then170, label %if.end173, !dbg !11633

if.then170:                                       ; preds = %land.lhs.true165
  %121 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11634
  %flag171 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %121, i32 0, i32 2, !dbg !11636
  %122 = load i32, i32* %flag171, align 8, !dbg !11637
  %and172 = and i32 %122, -524289, !dbg !11637
  store i32 %and172, i32* %flag171, align 8, !dbg !11637
  br label %if.end173, !dbg !11638

if.end173:                                        ; preds = %if.then170, %land.lhs.true165, %if.end162
  %123 = load i32, i32* %proptype, align 4, !dbg !11639
  %cmp174 = icmp eq i32 %123, 2, !dbg !11641
  br i1 %cmp174, label %land.lhs.true176, label %if.end184, !dbg !11642

land.lhs.true176:                                 ; preds = %if.end173
  %124 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11643
  %call177 = call zeroext i8 @ui_is_but_unit(%struct.uiBut* %124), !dbg !11644
  %conv178 = zext i8 %call177 to i32, !dbg !11644
  %tobool179 = icmp ne i32 %conv178, 0, !dbg !11644
  br i1 %tobool179, label %if.then180, label %if.end184, !dbg !11645

if.then180:                                       ; preds = %land.lhs.true176
  %125 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11646
  %126 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11648
  %a1181 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %126, i32 0, i32 24, !dbg !11649
  %127 = load float, float* %a1181, align 8, !dbg !11649
  %call182 = call float @ui_get_but_step_unit(%struct.uiBut* %125, float %127), !dbg !11650
  %128 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11651
  %a1183 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %128, i32 0, i32 24, !dbg !11652
  store float %call182, float* %a1183, align 8, !dbg !11653
  br label %if.end184, !dbg !11654

if.end184:                                        ; preds = %if.then180, %land.lhs.true176, %if.end173
  %129 = load void (%struct.bContext*, %struct.uiLayout*, i8*)*, void (%struct.bContext*, %struct.uiLayout*, i8*)** %func, align 8, !dbg !11655
  %tobool185 = icmp ne void (%struct.bContext*, %struct.uiLayout*, i8*)* %129, null, !dbg !11655
  br i1 %tobool185, label %if.then186, label %if.end187, !dbg !11657

if.then186:                                       ; preds = %if.end184
  %130 = load void (%struct.bContext*, %struct.uiLayout*, i8*)*, void (%struct.bContext*, %struct.uiLayout*, i8*)** %func, align 8, !dbg !11658
  %131 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11660
  %menu_create_func = getelementptr inbounds %struct.uiBut, %struct.uiBut* %131, i32 0, i32 53, !dbg !11661
  store void (%struct.bContext*, %struct.uiLayout*, i8*)* %130, void (%struct.bContext*, %struct.uiLayout*, i8*)** %menu_create_func, align 8, !dbg !11662
  %132 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11663
  %133 = bitcast %struct.uiBut* %132 to i8*, !dbg !11664
  %134 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11665
  %poin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %134, i32 0, i32 19, !dbg !11666
  store i8* %133, i8** %poin, align 8, !dbg !11667
  br label %if.end187, !dbg !11668

if.end187:                                        ; preds = %if.then186, %if.end184
  %135 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11669
  ret %struct.uiBut* %135, !dbg !11670
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefButO_ptr(%struct.uiBlock* %block, i32 %type, %struct.wmOperatorType* %ot, i32 %opcontext, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %tip) #0 !dbg !11671 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %opcontext.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !11674, metadata !DIExpression()), !dbg !11675
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11676, metadata !DIExpression()), !dbg !11677
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !11678, metadata !DIExpression()), !dbg !11679
  store i32 %opcontext, i32* %opcontext.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opcontext.addr, metadata !11680, metadata !DIExpression()), !dbg !11681
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !11682, metadata !DIExpression()), !dbg !11683
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !11684, metadata !DIExpression()), !dbg !11685
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !11686, metadata !DIExpression()), !dbg !11687
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !11688, metadata !DIExpression()), !dbg !11689
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !11690, metadata !DIExpression()), !dbg !11691
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !11692, metadata !DIExpression()), !dbg !11693
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !11694, metadata !DIExpression()), !dbg !11695
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !11696
  %1 = load i32, i32* %type.addr, align 4, !dbg !11697
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11698
  %3 = load i32, i32* %opcontext.addr, align 4, !dbg !11699
  %4 = load i8*, i8** %str.addr, align 8, !dbg !11700
  %5 = load i32, i32* %x.addr, align 4, !dbg !11701
  %6 = load i32, i32* %y.addr, align 4, !dbg !11702
  %7 = load i16, i16* %width.addr, align 2, !dbg !11703
  %8 = load i16, i16* %height.addr, align 2, !dbg !11704
  %9 = load i8*, i8** %tip.addr, align 8, !dbg !11705
  %call = call %struct.uiBut* @ui_def_but_operator_ptr(%struct.uiBlock* %0, i32 %1, %struct.wmOperatorType* %2, i32 %3, i8* %4, i32 %5, i32 %6, i16 signext %7, i16 signext %8, i8* %9), !dbg !11706
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !11707
  %10 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11708
  call void @ui_check_but(%struct.uiBut* %10), !dbg !11709
  %11 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11710
  ret %struct.uiBut* %11, !dbg !11711
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiBut* @ui_def_but_operator_ptr(%struct.uiBlock* %block, i32 %type, %struct.wmOperatorType* %ot, i32 %opcontext, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %tip) #0 !dbg !11712 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %opcontext.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !11713, metadata !DIExpression()), !dbg !11714
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11715, metadata !DIExpression()), !dbg !11716
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !11717, metadata !DIExpression()), !dbg !11718
  store i32 %opcontext, i32* %opcontext.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opcontext.addr, metadata !11719, metadata !DIExpression()), !dbg !11720
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !11721, metadata !DIExpression()), !dbg !11722
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !11723, metadata !DIExpression()), !dbg !11724
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !11725, metadata !DIExpression()), !dbg !11726
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !11727, metadata !DIExpression()), !dbg !11728
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !11729, metadata !DIExpression()), !dbg !11730
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !11731, metadata !DIExpression()), !dbg !11732
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !11733, metadata !DIExpression()), !dbg !11734
  %0 = load i8*, i8** %str.addr, align 8, !dbg !11735
  %tobool = icmp ne i8* %0, null, !dbg !11735
  br i1 %tobool, label %if.end5, label %if.then, !dbg !11737

if.then:                                          ; preds = %entry
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11738
  %tobool1 = icmp ne %struct.wmOperatorType* %1, null, !dbg !11738
  br i1 %tobool1, label %land.lhs.true, label %if.else, !dbg !11741

land.lhs.true:                                    ; preds = %if.then
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11742
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 11, !dbg !11743
  %3 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !11743
  %tobool2 = icmp ne %struct.StructRNA* %3, null, !dbg !11742
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !11744

if.then3:                                         ; preds = %land.lhs.true
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11745
  %srna4 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 11, !dbg !11746
  %5 = load %struct.StructRNA*, %struct.StructRNA** %srna4, align 8, !dbg !11746
  %call = call i8* @RNA_struct_ui_name(%struct.StructRNA* %5), !dbg !11747
  store i8* %call, i8** %str.addr, align 8, !dbg !11748
  br label %if.end, !dbg !11749

if.else:                                          ; preds = %land.lhs.true, %if.then
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i64 0, i64 0), i8** %str.addr, align 8, !dbg !11750
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end5, !dbg !11751

if.end5:                                          ; preds = %if.end, %entry
  %6 = load i8*, i8** %tip.addr, align 8, !dbg !11752
  %tobool6 = icmp ne i8* %6, null, !dbg !11752
  br i1 %tobool6, label %lor.lhs.false, label %land.lhs.true8, !dbg !11754

lor.lhs.false:                                    ; preds = %if.end5
  %7 = load i8*, i8** %tip.addr, align 8, !dbg !11755
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !11755
  %8 = load i8, i8* %arrayidx, align 1, !dbg !11755
  %conv = zext i8 %8 to i32, !dbg !11755
  %cmp = icmp eq i32 %conv, 0, !dbg !11756
  br i1 %cmp, label %land.lhs.true8, label %if.end16, !dbg !11757

land.lhs.true8:                                   ; preds = %lor.lhs.false, %if.end5
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11758
  %tobool9 = icmp ne %struct.wmOperatorType* %9, null, !dbg !11758
  br i1 %tobool9, label %land.lhs.true10, label %if.end16, !dbg !11759

land.lhs.true10:                                  ; preds = %land.lhs.true8
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11760
  %srna11 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !11761
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna11, align 8, !dbg !11761
  %tobool12 = icmp ne %struct.StructRNA* %11, null, !dbg !11760
  br i1 %tobool12, label %if.then13, label %if.end16, !dbg !11762

if.then13:                                        ; preds = %land.lhs.true10
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11763
  %srna14 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !11765
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna14, align 8, !dbg !11765
  %call15 = call i8* @RNA_struct_ui_description(%struct.StructRNA* %13), !dbg !11766
  store i8* %call15, i8** %tip.addr, align 8, !dbg !11767
  br label %if.end16, !dbg !11768

if.end16:                                         ; preds = %if.then13, %land.lhs.true10, %land.lhs.true8, %lor.lhs.false
  %14 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !11769
  %15 = load i32, i32* %type.addr, align 4, !dbg !11770
  %16 = load i8*, i8** %str.addr, align 8, !dbg !11771
  %17 = load i32, i32* %x.addr, align 4, !dbg !11772
  %18 = load i32, i32* %y.addr, align 4, !dbg !11773
  %19 = load i16, i16* %width.addr, align 2, !dbg !11774
  %20 = load i16, i16* %height.addr, align 2, !dbg !11775
  %21 = load i8*, i8** %tip.addr, align 8, !dbg !11776
  %call17 = call %struct.uiBut* @ui_def_but(%struct.uiBlock* %14, i32 %15, i32 -1, i8* %16, i32 %17, i32 %18, i16 signext %19, i16 signext %20, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* %21), !dbg !11777
  store %struct.uiBut* %call17, %struct.uiBut** %but, align 8, !dbg !11778
  %22 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11779
  %23 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11780
  %optype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %23, i32 0, i32 59, !dbg !11781
  store %struct.wmOperatorType* %22, %struct.wmOperatorType** %optype, align 8, !dbg !11782
  %24 = load i32, i32* %opcontext.addr, align 4, !dbg !11783
  %conv18 = trunc i32 %24 to i16, !dbg !11783
  %25 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11784
  %opcontext19 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %25, i32 0, i32 61, !dbg !11785
  store i16 %conv18, i16* %opcontext19, align 8, !dbg !11786
  %26 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11787
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %26, i32 0, i32 2, !dbg !11788
  %27 = load i32, i32* %flag, align 8, !dbg !11789
  %and = and i32 %27, -524289, !dbg !11789
  store i32 %and, i32* %flag, align 8, !dbg !11789
  %28 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !11790
  %tobool20 = icmp ne %struct.wmOperatorType* %28, null, !dbg !11790
  br i1 %tobool20, label %if.end23, label %if.then21, !dbg !11792

if.then21:                                        ; preds = %if.end16
  %29 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11793
  %flag22 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %29, i32 0, i32 2, !dbg !11795
  %30 = load i32, i32* %flag22, align 8, !dbg !11796
  %or = or i32 %30, 2048, !dbg !11796
  store i32 %or, i32* %flag22, align 8, !dbg !11796
  %31 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11797
  %lock = getelementptr inbounds %struct.uiBut, %struct.uiBut* %31, i32 0, i32 45, !dbg !11798
  store i8 1, i8* %lock, align 4, !dbg !11799
  %32 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11800
  %lockstr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %32, i32 0, i32 43, !dbg !11801
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i64 0, i64 0), i8** %lockstr, align 8, !dbg !11802
  br label %if.end23, !dbg !11803

if.end23:                                         ; preds = %if.then21, %if.end16
  %33 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11804
  ret %struct.uiBut* %33, !dbg !11805
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefButO(%struct.uiBlock* %block, i32 %type, i8* %opname, i32 %opcontext, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %tip) #0 !dbg !11806 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %opname.addr = alloca i8*, align 8
  %opcontext.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %tip.addr = alloca i8*, align 8
  %ot = alloca %struct.wmOperatorType*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !11809, metadata !DIExpression()), !dbg !11810
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11811, metadata !DIExpression()), !dbg !11812
  store i8* %opname, i8** %opname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opname.addr, metadata !11813, metadata !DIExpression()), !dbg !11814
  store i32 %opcontext, i32* %opcontext.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opcontext.addr, metadata !11815, metadata !DIExpression()), !dbg !11816
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !11817, metadata !DIExpression()), !dbg !11818
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !11819, metadata !DIExpression()), !dbg !11820
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !11821, metadata !DIExpression()), !dbg !11822
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !11823, metadata !DIExpression()), !dbg !11824
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !11825, metadata !DIExpression()), !dbg !11826
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !11827, metadata !DIExpression()), !dbg !11828
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !11829, metadata !DIExpression()), !dbg !11830
  %0 = load i8*, i8** %opname.addr, align 8, !dbg !11831
  %call = call %struct.wmOperatorType* @WM_operatortype_find(i8* %0, i8 zeroext 0), !dbg !11832
  store %struct.wmOperatorType* %call, %struct.wmOperatorType** %ot, align 8, !dbg !11830
  %1 = load i8*, i8** %str.addr, align 8, !dbg !11833
  %cmp = icmp eq i8* %1, null, !dbg !11835
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11836

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !11837
  %cmp1 = icmp eq %struct.wmOperatorType* %2, null, !dbg !11838
  br i1 %cmp1, label %if.then, label %if.end, !dbg !11839

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %opname.addr, align 8, !dbg !11840
  store i8* %3, i8** %str.addr, align 8, !dbg !11841
  br label %if.end, !dbg !11842

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !11843
  %5 = load i32, i32* %type.addr, align 4, !dbg !11844
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !11845
  %7 = load i32, i32* %opcontext.addr, align 4, !dbg !11846
  %8 = load i8*, i8** %str.addr, align 8, !dbg !11847
  %9 = load i32, i32* %x.addr, align 4, !dbg !11848
  %10 = load i32, i32* %y.addr, align 4, !dbg !11849
  %11 = load i16, i16* %width.addr, align 2, !dbg !11850
  %12 = load i16, i16* %height.addr, align 2, !dbg !11851
  %13 = load i8*, i8** %tip.addr, align 8, !dbg !11852
  %call2 = call %struct.uiBut* @uiDefButO_ptr(%struct.uiBlock* %4, i32 %5, %struct.wmOperatorType* %6, i32 %7, i8* %8, i32 %9, i32 %10, i16 signext %11, i16 signext %12, i8* %13), !dbg !11853
  ret %struct.uiBut* %call2, !dbg !11854
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconBut(%struct.uiBlock* %block, i32 %type, i32 %retval1, i32 %icon, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !11855 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i8*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !11858, metadata !DIExpression()), !dbg !11859
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11860, metadata !DIExpression()), !dbg !11861
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !11862, metadata !DIExpression()), !dbg !11863
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !11864, metadata !DIExpression()), !dbg !11865
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !11866, metadata !DIExpression()), !dbg !11867
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !11868, metadata !DIExpression()), !dbg !11869
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !11870, metadata !DIExpression()), !dbg !11871
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !11872, metadata !DIExpression()), !dbg !11873
  store i8* %poin, i8** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %poin.addr, metadata !11874, metadata !DIExpression()), !dbg !11875
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !11876, metadata !DIExpression()), !dbg !11877
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !11878, metadata !DIExpression()), !dbg !11879
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !11880, metadata !DIExpression()), !dbg !11881
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !11882, metadata !DIExpression()), !dbg !11883
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !11884, metadata !DIExpression()), !dbg !11885
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !11886, metadata !DIExpression()), !dbg !11887
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !11888
  %1 = load i32, i32* %type.addr, align 4, !dbg !11889
  %2 = load i32, i32* %retval.addr, align 4, !dbg !11890
  %3 = load i32, i32* %x.addr, align 4, !dbg !11891
  %4 = load i32, i32* %y.addr, align 4, !dbg !11892
  %5 = load i16, i16* %width.addr, align 2, !dbg !11893
  %6 = load i16, i16* %height.addr, align 2, !dbg !11894
  %7 = load i8*, i8** %poin.addr, align 8, !dbg !11895
  %8 = load float, float* %min.addr, align 4, !dbg !11896
  %9 = load float, float* %max.addr, align 4, !dbg !11897
  %10 = load float, float* %a1.addr, align 4, !dbg !11898
  %11 = load float, float* %a2.addr, align 4, !dbg !11899
  %12 = load i8*, i8** %tip.addr, align 8, !dbg !11900
  %call = call %struct.uiBut* @ui_def_but(%struct.uiBlock* %0, i32 %1, i32 %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i64 0, i64 0), i32 %3, i32 %4, i16 signext %5, i16 signext %6, i8* %7, float %8, float %9, float %10, float %11, i8* %12), !dbg !11901
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !11887
  %13 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11902
  %14 = load i32, i32* %icon.addr, align 4, !dbg !11903
  call void @ui_check_but_and_iconize(%struct.uiBut* %13, i32 %14), !dbg !11904
  %15 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11905
  ret %struct.uiBut* %15, !dbg !11906
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_check_but_and_iconize(%struct.uiBut* %but, i32 %icon) #0 !dbg !11907 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %icon.addr = alloca i32, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !11910, metadata !DIExpression()), !dbg !11911
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !11912, metadata !DIExpression()), !dbg !11913
  %0 = load i32, i32* %icon.addr, align 4, !dbg !11914
  %tobool = icmp ne i32 %0, 0, !dbg !11914
  br i1 %tobool, label %if.then, label %if.end, !dbg !11916

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %icon.addr, align 4, !dbg !11917
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !11919
  %icon1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 44, !dbg !11920
  store i32 %1, i32* %icon1, align 8, !dbg !11921
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !11922
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 2, !dbg !11923
  %4 = load i32, i32* %flag, align 8, !dbg !11924
  %or = or i32 %4, 8, !dbg !11924
  store i32 %or, i32* %flag, align 8, !dbg !11924
  br label %if.end, !dbg !11925

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !11926
  call void @ui_check_but(%struct.uiBut* %5), !dbg !11927
  ret void, !dbg !11928
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconButF(%struct.uiBlock* %block, i32 %type, i32 %retval1, i32 %icon, i32 %x, i32 %y, i16 signext %width, i16 signext %height, float* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !11929 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca float*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !11932, metadata !DIExpression()), !dbg !11933
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11934, metadata !DIExpression()), !dbg !11935
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !11936, metadata !DIExpression()), !dbg !11937
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !11938, metadata !DIExpression()), !dbg !11939
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !11940, metadata !DIExpression()), !dbg !11941
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !11942, metadata !DIExpression()), !dbg !11943
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !11944, metadata !DIExpression()), !dbg !11945
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !11946, metadata !DIExpression()), !dbg !11947
  store float* %poin, float** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata float** %poin.addr, metadata !11948, metadata !DIExpression()), !dbg !11949
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !11950, metadata !DIExpression()), !dbg !11951
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !11952, metadata !DIExpression()), !dbg !11953
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !11954, metadata !DIExpression()), !dbg !11955
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !11956, metadata !DIExpression()), !dbg !11957
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !11958, metadata !DIExpression()), !dbg !11959
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !11960
  %1 = load i32, i32* %type.addr, align 4, !dbg !11961
  %or = or i32 %1, 128, !dbg !11962
  %2 = load i32, i32* %retval.addr, align 4, !dbg !11963
  %3 = load i32, i32* %icon.addr, align 4, !dbg !11964
  %4 = load i32, i32* %x.addr, align 4, !dbg !11965
  %5 = load i32, i32* %y.addr, align 4, !dbg !11966
  %6 = load i16, i16* %width.addr, align 2, !dbg !11967
  %7 = load i16, i16* %height.addr, align 2, !dbg !11968
  %8 = load float*, float** %poin.addr, align 8, !dbg !11969
  %9 = bitcast float* %8 to i8*, !dbg !11970
  %10 = load float, float* %min.addr, align 4, !dbg !11971
  %11 = load float, float* %max.addr, align 4, !dbg !11972
  %12 = load float, float* %a1.addr, align 4, !dbg !11973
  %13 = load float, float* %a2.addr, align 4, !dbg !11974
  %14 = load i8*, i8** %tip.addr, align 8, !dbg !11975
  %call = call %struct.uiBut* @uiDefIconBut(%struct.uiBlock* %0, i32 %or, i32 %2, i32 %3, i32 %4, i32 %5, i16 signext %6, i16 signext %7, i8* %9, float %10, float %11, float %12, float %13, i8* %14), !dbg !11976
  ret %struct.uiBut* %call, !dbg !11977
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconButBitF(%struct.uiBlock* %block, i32 %type, i32 %bit, i32 %retval1, i32 %icon, i32 %x, i32 %y, i16 signext %width, i16 signext %height, float* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !11978 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %bit.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca float*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !11981, metadata !DIExpression()), !dbg !11982
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11983, metadata !DIExpression()), !dbg !11984
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !11985, metadata !DIExpression()), !dbg !11986
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !11987, metadata !DIExpression()), !dbg !11988
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !11989, metadata !DIExpression()), !dbg !11990
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !11991, metadata !DIExpression()), !dbg !11992
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !11993, metadata !DIExpression()), !dbg !11994
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !11995, metadata !DIExpression()), !dbg !11996
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !11997, metadata !DIExpression()), !dbg !11998
  store float* %poin, float** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata float** %poin.addr, metadata !11999, metadata !DIExpression()), !dbg !12000
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !12001, metadata !DIExpression()), !dbg !12002
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !12003, metadata !DIExpression()), !dbg !12004
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !12005, metadata !DIExpression()), !dbg !12006
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !12007, metadata !DIExpression()), !dbg !12008
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !12009, metadata !DIExpression()), !dbg !12010
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !12011
  %1 = load i32, i32* %type.addr, align 4, !dbg !12012
  %or = or i32 %1, 128, !dbg !12013
  %2 = load i32, i32* %bit.addr, align 4, !dbg !12014
  %3 = load i32, i32* %retval.addr, align 4, !dbg !12015
  %4 = load i32, i32* %icon.addr, align 4, !dbg !12016
  %5 = load i32, i32* %x.addr, align 4, !dbg !12017
  %6 = load i32, i32* %y.addr, align 4, !dbg !12018
  %7 = load i16, i16* %width.addr, align 2, !dbg !12019
  %8 = load i16, i16* %height.addr, align 2, !dbg !12020
  %9 = load float*, float** %poin.addr, align 8, !dbg !12021
  %10 = bitcast float* %9 to i8*, !dbg !12022
  %11 = load float, float* %min.addr, align 4, !dbg !12023
  %12 = load float, float* %max.addr, align 4, !dbg !12024
  %13 = load float, float* %a1.addr, align 4, !dbg !12025
  %14 = load float, float* %a2.addr, align 4, !dbg !12026
  %15 = load i8*, i8** %tip.addr, align 8, !dbg !12027
  %call = call %struct.uiBut* @uiDefIconButBit(%struct.uiBlock* %0, i32 %or, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i16 signext %7, i16 signext %8, i8* %10, float %11, float %12, float %13, float %14, i8* %15), !dbg !12028
  ret %struct.uiBut* %call, !dbg !12029
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiBut* @uiDefIconButBit(%struct.uiBlock* %block, i32 %type, i32 %bit, i32 %retval1, i32 %icon, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !12030 {
entry:
  %retval = alloca %struct.uiBut*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %bit.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i8*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  %bitIdx = alloca i32, align 4
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !12033, metadata !DIExpression()), !dbg !12034
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12035, metadata !DIExpression()), !dbg !12036
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !12037, metadata !DIExpression()), !dbg !12038
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !12039, metadata !DIExpression()), !dbg !12040
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !12041, metadata !DIExpression()), !dbg !12042
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12043, metadata !DIExpression()), !dbg !12044
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12045, metadata !DIExpression()), !dbg !12046
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !12047, metadata !DIExpression()), !dbg !12048
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !12049, metadata !DIExpression()), !dbg !12050
  store i8* %poin, i8** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %poin.addr, metadata !12051, metadata !DIExpression()), !dbg !12052
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !12053, metadata !DIExpression()), !dbg !12054
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !12055, metadata !DIExpression()), !dbg !12056
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !12057, metadata !DIExpression()), !dbg !12058
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !12059, metadata !DIExpression()), !dbg !12060
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !12061, metadata !DIExpression()), !dbg !12062
  call void @llvm.dbg.declare(metadata i32* %bitIdx, metadata !12063, metadata !DIExpression()), !dbg !12064
  %0 = load i32, i32* %bit.addr, align 4, !dbg !12065
  %call = call i32 @findBitIndex(i32 %0), !dbg !12066
  store i32 %call, i32* %bitIdx, align 4, !dbg !12064
  %1 = load i32, i32* %bitIdx, align 4, !dbg !12067
  %cmp = icmp eq i32 %1, -1, !dbg !12069
  br i1 %cmp, label %if.then, label %if.else, !dbg !12070

if.then:                                          ; preds = %entry
  store %struct.uiBut* null, %struct.uiBut** %retval, align 8, !dbg !12071
  br label %return, !dbg !12071

if.else:                                          ; preds = %entry
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !12073
  %3 = load i32, i32* %type.addr, align 4, !dbg !12075
  %or = or i32 %3, 256, !dbg !12076
  %4 = load i32, i32* %bitIdx, align 4, !dbg !12077
  %or2 = or i32 %or, %4, !dbg !12078
  %5 = load i32, i32* %retval.addr, align 4, !dbg !12079
  %6 = load i32, i32* %icon.addr, align 4, !dbg !12080
  %7 = load i32, i32* %x.addr, align 4, !dbg !12081
  %8 = load i32, i32* %y.addr, align 4, !dbg !12082
  %9 = load i16, i16* %width.addr, align 2, !dbg !12083
  %10 = load i16, i16* %height.addr, align 2, !dbg !12084
  %11 = load i8*, i8** %poin.addr, align 8, !dbg !12085
  %12 = load float, float* %min.addr, align 4, !dbg !12086
  %13 = load float, float* %max.addr, align 4, !dbg !12087
  %14 = load float, float* %a1.addr, align 4, !dbg !12088
  %15 = load float, float* %a2.addr, align 4, !dbg !12089
  %16 = load i8*, i8** %tip.addr, align 8, !dbg !12090
  %call3 = call %struct.uiBut* @uiDefIconBut(%struct.uiBlock* %2, i32 %or2, i32 %5, i32 %6, i32 %7, i32 %8, i16 signext %9, i16 signext %10, i8* %11, float %12, float %13, float %14, float %15, i8* %16), !dbg !12091
  store %struct.uiBut* %call3, %struct.uiBut** %retval, align 8, !dbg !12092
  br label %return, !dbg !12092

return:                                           ; preds = %if.else, %if.then
  %17 = load %struct.uiBut*, %struct.uiBut** %retval, align 8, !dbg !12093
  ret %struct.uiBut* %17, !dbg !12093
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconButI(%struct.uiBlock* %block, i32 %type, i32 %retval1, i32 %icon, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i32* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !12094 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i32*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !12097, metadata !DIExpression()), !dbg !12098
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12099, metadata !DIExpression()), !dbg !12100
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !12101, metadata !DIExpression()), !dbg !12102
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !12103, metadata !DIExpression()), !dbg !12104
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12105, metadata !DIExpression()), !dbg !12106
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12107, metadata !DIExpression()), !dbg !12108
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !12109, metadata !DIExpression()), !dbg !12110
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !12111, metadata !DIExpression()), !dbg !12112
  store i32* %poin, i32** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %poin.addr, metadata !12113, metadata !DIExpression()), !dbg !12114
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !12115, metadata !DIExpression()), !dbg !12116
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !12117, metadata !DIExpression()), !dbg !12118
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !12119, metadata !DIExpression()), !dbg !12120
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !12121, metadata !DIExpression()), !dbg !12122
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !12123, metadata !DIExpression()), !dbg !12124
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !12125
  %1 = load i32, i32* %type.addr, align 4, !dbg !12126
  %or = or i32 %1, 96, !dbg !12127
  %2 = load i32, i32* %retval.addr, align 4, !dbg !12128
  %3 = load i32, i32* %icon.addr, align 4, !dbg !12129
  %4 = load i32, i32* %x.addr, align 4, !dbg !12130
  %5 = load i32, i32* %y.addr, align 4, !dbg !12131
  %6 = load i16, i16* %width.addr, align 2, !dbg !12132
  %7 = load i16, i16* %height.addr, align 2, !dbg !12133
  %8 = load i32*, i32** %poin.addr, align 8, !dbg !12134
  %9 = bitcast i32* %8 to i8*, !dbg !12135
  %10 = load float, float* %min.addr, align 4, !dbg !12136
  %11 = load float, float* %max.addr, align 4, !dbg !12137
  %12 = load float, float* %a1.addr, align 4, !dbg !12138
  %13 = load float, float* %a2.addr, align 4, !dbg !12139
  %14 = load i8*, i8** %tip.addr, align 8, !dbg !12140
  %call = call %struct.uiBut* @uiDefIconBut(%struct.uiBlock* %0, i32 %or, i32 %2, i32 %3, i32 %4, i32 %5, i16 signext %6, i16 signext %7, i8* %9, float %10, float %11, float %12, float %13, i8* %14), !dbg !12141
  ret %struct.uiBut* %call, !dbg !12142
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconButBitI(%struct.uiBlock* %block, i32 %type, i32 %bit, i32 %retval1, i32 %icon, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i32* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !12143 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %bit.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i32*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !12146, metadata !DIExpression()), !dbg !12147
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12148, metadata !DIExpression()), !dbg !12149
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !12150, metadata !DIExpression()), !dbg !12151
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !12152, metadata !DIExpression()), !dbg !12153
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !12154, metadata !DIExpression()), !dbg !12155
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12156, metadata !DIExpression()), !dbg !12157
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12158, metadata !DIExpression()), !dbg !12159
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !12160, metadata !DIExpression()), !dbg !12161
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !12162, metadata !DIExpression()), !dbg !12163
  store i32* %poin, i32** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %poin.addr, metadata !12164, metadata !DIExpression()), !dbg !12165
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !12166, metadata !DIExpression()), !dbg !12167
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !12168, metadata !DIExpression()), !dbg !12169
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !12170, metadata !DIExpression()), !dbg !12171
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !12172, metadata !DIExpression()), !dbg !12173
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !12174, metadata !DIExpression()), !dbg !12175
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !12176
  %1 = load i32, i32* %type.addr, align 4, !dbg !12177
  %or = or i32 %1, 96, !dbg !12178
  %2 = load i32, i32* %bit.addr, align 4, !dbg !12179
  %3 = load i32, i32* %retval.addr, align 4, !dbg !12180
  %4 = load i32, i32* %icon.addr, align 4, !dbg !12181
  %5 = load i32, i32* %x.addr, align 4, !dbg !12182
  %6 = load i32, i32* %y.addr, align 4, !dbg !12183
  %7 = load i16, i16* %width.addr, align 2, !dbg !12184
  %8 = load i16, i16* %height.addr, align 2, !dbg !12185
  %9 = load i32*, i32** %poin.addr, align 8, !dbg !12186
  %10 = bitcast i32* %9 to i8*, !dbg !12187
  %11 = load float, float* %min.addr, align 4, !dbg !12188
  %12 = load float, float* %max.addr, align 4, !dbg !12189
  %13 = load float, float* %a1.addr, align 4, !dbg !12190
  %14 = load float, float* %a2.addr, align 4, !dbg !12191
  %15 = load i8*, i8** %tip.addr, align 8, !dbg !12192
  %call = call %struct.uiBut* @uiDefIconButBit(%struct.uiBlock* %0, i32 %or, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i16 signext %7, i16 signext %8, i8* %10, float %11, float %12, float %13, float %14, i8* %15), !dbg !12193
  ret %struct.uiBut* %call, !dbg !12194
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconButS(%struct.uiBlock* %block, i32 %type, i32 %retval1, i32 %icon, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i16* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !12195 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i16*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !12198, metadata !DIExpression()), !dbg !12199
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12200, metadata !DIExpression()), !dbg !12201
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !12202, metadata !DIExpression()), !dbg !12203
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !12204, metadata !DIExpression()), !dbg !12205
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12206, metadata !DIExpression()), !dbg !12207
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12208, metadata !DIExpression()), !dbg !12209
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !12210, metadata !DIExpression()), !dbg !12211
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !12212, metadata !DIExpression()), !dbg !12213
  store i16* %poin, i16** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %poin.addr, metadata !12214, metadata !DIExpression()), !dbg !12215
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !12216, metadata !DIExpression()), !dbg !12217
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !12218, metadata !DIExpression()), !dbg !12219
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !12220, metadata !DIExpression()), !dbg !12221
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !12222, metadata !DIExpression()), !dbg !12223
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !12224, metadata !DIExpression()), !dbg !12225
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !12226
  %1 = load i32, i32* %type.addr, align 4, !dbg !12227
  %or = or i32 %1, 64, !dbg !12228
  %2 = load i32, i32* %retval.addr, align 4, !dbg !12229
  %3 = load i32, i32* %icon.addr, align 4, !dbg !12230
  %4 = load i32, i32* %x.addr, align 4, !dbg !12231
  %5 = load i32, i32* %y.addr, align 4, !dbg !12232
  %6 = load i16, i16* %width.addr, align 2, !dbg !12233
  %7 = load i16, i16* %height.addr, align 2, !dbg !12234
  %8 = load i16*, i16** %poin.addr, align 8, !dbg !12235
  %9 = bitcast i16* %8 to i8*, !dbg !12236
  %10 = load float, float* %min.addr, align 4, !dbg !12237
  %11 = load float, float* %max.addr, align 4, !dbg !12238
  %12 = load float, float* %a1.addr, align 4, !dbg !12239
  %13 = load float, float* %a2.addr, align 4, !dbg !12240
  %14 = load i8*, i8** %tip.addr, align 8, !dbg !12241
  %call = call %struct.uiBut* @uiDefIconBut(%struct.uiBlock* %0, i32 %or, i32 %2, i32 %3, i32 %4, i32 %5, i16 signext %6, i16 signext %7, i8* %9, float %10, float %11, float %12, float %13, i8* %14), !dbg !12242
  ret %struct.uiBut* %call, !dbg !12243
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconButBitS(%struct.uiBlock* %block, i32 %type, i32 %bit, i32 %retval1, i32 %icon, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i16* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !12244 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %bit.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i16*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !12247, metadata !DIExpression()), !dbg !12248
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12249, metadata !DIExpression()), !dbg !12250
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !12251, metadata !DIExpression()), !dbg !12252
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !12253, metadata !DIExpression()), !dbg !12254
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !12255, metadata !DIExpression()), !dbg !12256
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12257, metadata !DIExpression()), !dbg !12258
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12259, metadata !DIExpression()), !dbg !12260
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !12261, metadata !DIExpression()), !dbg !12262
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !12263, metadata !DIExpression()), !dbg !12264
  store i16* %poin, i16** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %poin.addr, metadata !12265, metadata !DIExpression()), !dbg !12266
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !12267, metadata !DIExpression()), !dbg !12268
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !12269, metadata !DIExpression()), !dbg !12270
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !12271, metadata !DIExpression()), !dbg !12272
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !12273, metadata !DIExpression()), !dbg !12274
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !12275, metadata !DIExpression()), !dbg !12276
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !12277
  %1 = load i32, i32* %type.addr, align 4, !dbg !12278
  %or = or i32 %1, 64, !dbg !12279
  %2 = load i32, i32* %bit.addr, align 4, !dbg !12280
  %3 = load i32, i32* %retval.addr, align 4, !dbg !12281
  %4 = load i32, i32* %icon.addr, align 4, !dbg !12282
  %5 = load i32, i32* %x.addr, align 4, !dbg !12283
  %6 = load i32, i32* %y.addr, align 4, !dbg !12284
  %7 = load i16, i16* %width.addr, align 2, !dbg !12285
  %8 = load i16, i16* %height.addr, align 2, !dbg !12286
  %9 = load i16*, i16** %poin.addr, align 8, !dbg !12287
  %10 = bitcast i16* %9 to i8*, !dbg !12288
  %11 = load float, float* %min.addr, align 4, !dbg !12289
  %12 = load float, float* %max.addr, align 4, !dbg !12290
  %13 = load float, float* %a1.addr, align 4, !dbg !12291
  %14 = load float, float* %a2.addr, align 4, !dbg !12292
  %15 = load i8*, i8** %tip.addr, align 8, !dbg !12293
  %call = call %struct.uiBut* @uiDefIconButBit(%struct.uiBlock* %0, i32 %or, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i16 signext %7, i16 signext %8, i8* %10, float %11, float %12, float %13, float %14, i8* %15), !dbg !12294
  ret %struct.uiBut* %call, !dbg !12295
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconButC(%struct.uiBlock* %block, i32 %type, i32 %retval1, i32 %icon, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !12296 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i8*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !12299, metadata !DIExpression()), !dbg !12300
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12301, metadata !DIExpression()), !dbg !12302
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !12303, metadata !DIExpression()), !dbg !12304
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !12305, metadata !DIExpression()), !dbg !12306
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12307, metadata !DIExpression()), !dbg !12308
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12309, metadata !DIExpression()), !dbg !12310
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !12311, metadata !DIExpression()), !dbg !12312
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !12313, metadata !DIExpression()), !dbg !12314
  store i8* %poin, i8** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %poin.addr, metadata !12315, metadata !DIExpression()), !dbg !12316
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !12317, metadata !DIExpression()), !dbg !12318
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !12319, metadata !DIExpression()), !dbg !12320
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !12321, metadata !DIExpression()), !dbg !12322
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !12323, metadata !DIExpression()), !dbg !12324
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !12325, metadata !DIExpression()), !dbg !12326
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !12327
  %1 = load i32, i32* %type.addr, align 4, !dbg !12328
  %or = or i32 %1, 32, !dbg !12329
  %2 = load i32, i32* %retval.addr, align 4, !dbg !12330
  %3 = load i32, i32* %icon.addr, align 4, !dbg !12331
  %4 = load i32, i32* %x.addr, align 4, !dbg !12332
  %5 = load i32, i32* %y.addr, align 4, !dbg !12333
  %6 = load i16, i16* %width.addr, align 2, !dbg !12334
  %7 = load i16, i16* %height.addr, align 2, !dbg !12335
  %8 = load i8*, i8** %poin.addr, align 8, !dbg !12336
  %9 = load float, float* %min.addr, align 4, !dbg !12337
  %10 = load float, float* %max.addr, align 4, !dbg !12338
  %11 = load float, float* %a1.addr, align 4, !dbg !12339
  %12 = load float, float* %a2.addr, align 4, !dbg !12340
  %13 = load i8*, i8** %tip.addr, align 8, !dbg !12341
  %call = call %struct.uiBut* @uiDefIconBut(%struct.uiBlock* %0, i32 %or, i32 %2, i32 %3, i32 %4, i32 %5, i16 signext %6, i16 signext %7, i8* %8, float %9, float %10, float %11, float %12, i8* %13), !dbg !12342
  ret %struct.uiBut* %call, !dbg !12343
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconButBitC(%struct.uiBlock* %block, i32 %type, i32 %bit, i32 %retval1, i32 %icon, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !12344 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %bit.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i8*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !12347, metadata !DIExpression()), !dbg !12348
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12349, metadata !DIExpression()), !dbg !12350
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !12351, metadata !DIExpression()), !dbg !12352
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !12353, metadata !DIExpression()), !dbg !12354
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !12355, metadata !DIExpression()), !dbg !12356
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12357, metadata !DIExpression()), !dbg !12358
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12359, metadata !DIExpression()), !dbg !12360
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !12361, metadata !DIExpression()), !dbg !12362
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !12363, metadata !DIExpression()), !dbg !12364
  store i8* %poin, i8** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %poin.addr, metadata !12365, metadata !DIExpression()), !dbg !12366
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !12367, metadata !DIExpression()), !dbg !12368
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !12369, metadata !DIExpression()), !dbg !12370
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !12371, metadata !DIExpression()), !dbg !12372
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !12373, metadata !DIExpression()), !dbg !12374
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !12375, metadata !DIExpression()), !dbg !12376
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !12377
  %1 = load i32, i32* %type.addr, align 4, !dbg !12378
  %or = or i32 %1, 32, !dbg !12379
  %2 = load i32, i32* %bit.addr, align 4, !dbg !12380
  %3 = load i32, i32* %retval.addr, align 4, !dbg !12381
  %4 = load i32, i32* %icon.addr, align 4, !dbg !12382
  %5 = load i32, i32* %x.addr, align 4, !dbg !12383
  %6 = load i32, i32* %y.addr, align 4, !dbg !12384
  %7 = load i16, i16* %width.addr, align 2, !dbg !12385
  %8 = load i16, i16* %height.addr, align 2, !dbg !12386
  %9 = load i8*, i8** %poin.addr, align 8, !dbg !12387
  %10 = load float, float* %min.addr, align 4, !dbg !12388
  %11 = load float, float* %max.addr, align 4, !dbg !12389
  %12 = load float, float* %a1.addr, align 4, !dbg !12390
  %13 = load float, float* %a2.addr, align 4, !dbg !12391
  %14 = load i8*, i8** %tip.addr, align 8, !dbg !12392
  %call = call %struct.uiBut* @uiDefIconButBit(%struct.uiBlock* %0, i32 %or, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i16 signext %7, i16 signext %8, i8* %9, float %10, float %11, float %12, float %13, i8* %14), !dbg !12393
  ret %struct.uiBut* %call, !dbg !12394
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconButR(%struct.uiBlock* %block, i32 %type, i32 %retval1, i32 %icon, i32 %x, i32 %y, i16 signext %width, i16 signext %height, %struct.PointerRNA* %ptr, i8* %propname, i32 %index, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !12395 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %propname.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !12398, metadata !DIExpression()), !dbg !12399
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12400, metadata !DIExpression()), !dbg !12401
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !12402, metadata !DIExpression()), !dbg !12403
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !12404, metadata !DIExpression()), !dbg !12405
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12406, metadata !DIExpression()), !dbg !12407
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12408, metadata !DIExpression()), !dbg !12409
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !12410, metadata !DIExpression()), !dbg !12411
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !12412, metadata !DIExpression()), !dbg !12413
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12414, metadata !DIExpression()), !dbg !12415
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !12416, metadata !DIExpression()), !dbg !12417
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !12418, metadata !DIExpression()), !dbg !12419
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !12420, metadata !DIExpression()), !dbg !12421
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !12422, metadata !DIExpression()), !dbg !12423
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !12424, metadata !DIExpression()), !dbg !12425
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !12426, metadata !DIExpression()), !dbg !12427
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !12428, metadata !DIExpression()), !dbg !12429
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !12430, metadata !DIExpression()), !dbg !12431
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !12432
  %1 = load i32, i32* %type.addr, align 4, !dbg !12433
  %2 = load i32, i32* %retval.addr, align 4, !dbg !12434
  %3 = load i32, i32* %x.addr, align 4, !dbg !12435
  %4 = load i32, i32* %y.addr, align 4, !dbg !12436
  %5 = load i16, i16* %width.addr, align 2, !dbg !12437
  %6 = load i16, i16* %height.addr, align 2, !dbg !12438
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12439
  %8 = load i8*, i8** %propname.addr, align 8, !dbg !12440
  %9 = load i32, i32* %index.addr, align 4, !dbg !12441
  %10 = load float, float* %min.addr, align 4, !dbg !12442
  %11 = load float, float* %max.addr, align 4, !dbg !12443
  %12 = load float, float* %a1.addr, align 4, !dbg !12444
  %13 = load float, float* %a2.addr, align 4, !dbg !12445
  %14 = load i8*, i8** %tip.addr, align 8, !dbg !12446
  %call = call %struct.uiBut* @ui_def_but_rna_propname(%struct.uiBlock* %0, i32 %1, i32 %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i64 0, i64 0), i32 %3, i32 %4, i16 signext %5, i16 signext %6, %struct.PointerRNA* %7, i8* %8, i32 %9, float %10, float %11, float %12, float %13, i8* %14), !dbg !12447
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !12448
  %15 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !12449
  %16 = load i32, i32* %icon.addr, align 4, !dbg !12450
  call void @ui_check_but_and_iconize(%struct.uiBut* %15, i32 %16), !dbg !12451
  %17 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !12452
  ret %struct.uiBut* %17, !dbg !12453
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconButR_prop(%struct.uiBlock* %block, i32 %type, i32 %retval1, i32 %icon, i32 %x, i32 %y, i16 signext %width, i16 signext %height, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !12454 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !12457, metadata !DIExpression()), !dbg !12458
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12459, metadata !DIExpression()), !dbg !12460
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !12461, metadata !DIExpression()), !dbg !12462
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !12463, metadata !DIExpression()), !dbg !12464
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12465, metadata !DIExpression()), !dbg !12466
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12467, metadata !DIExpression()), !dbg !12468
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !12469, metadata !DIExpression()), !dbg !12470
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !12471, metadata !DIExpression()), !dbg !12472
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !12473, metadata !DIExpression()), !dbg !12474
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !12475, metadata !DIExpression()), !dbg !12476
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !12477, metadata !DIExpression()), !dbg !12478
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !12479, metadata !DIExpression()), !dbg !12480
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !12481, metadata !DIExpression()), !dbg !12482
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !12483, metadata !DIExpression()), !dbg !12484
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !12485, metadata !DIExpression()), !dbg !12486
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !12487, metadata !DIExpression()), !dbg !12488
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !12489, metadata !DIExpression()), !dbg !12490
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !12491
  %1 = load i32, i32* %type.addr, align 4, !dbg !12492
  %2 = load i32, i32* %retval.addr, align 4, !dbg !12493
  %3 = load i32, i32* %x.addr, align 4, !dbg !12494
  %4 = load i32, i32* %y.addr, align 4, !dbg !12495
  %5 = load i16, i16* %width.addr, align 2, !dbg !12496
  %6 = load i16, i16* %height.addr, align 2, !dbg !12497
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !12498
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !12499
  %9 = load i32, i32* %index.addr, align 4, !dbg !12500
  %10 = load float, float* %min.addr, align 4, !dbg !12501
  %11 = load float, float* %max.addr, align 4, !dbg !12502
  %12 = load float, float* %a1.addr, align 4, !dbg !12503
  %13 = load float, float* %a2.addr, align 4, !dbg !12504
  %14 = load i8*, i8** %tip.addr, align 8, !dbg !12505
  %call = call %struct.uiBut* @ui_def_but_rna(%struct.uiBlock* %0, i32 %1, i32 %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i64 0, i64 0), i32 %3, i32 %4, i16 signext %5, i16 signext %6, %struct.PointerRNA* %7, %struct.PropertyRNA* %8, i32 %9, float %10, float %11, float %12, float %13, i8* %14), !dbg !12506
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !12507
  %15 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !12508
  %16 = load i32, i32* %icon.addr, align 4, !dbg !12509
  call void @ui_check_but_and_iconize(%struct.uiBut* %15, i32 %16), !dbg !12510
  %17 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !12511
  ret %struct.uiBut* %17, !dbg !12512
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconButO_ptr(%struct.uiBlock* %block, i32 %type, %struct.wmOperatorType* %ot, i32 %opcontext, i32 %icon, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %tip) #0 !dbg !12513 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %opcontext.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !12516, metadata !DIExpression()), !dbg !12517
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12518, metadata !DIExpression()), !dbg !12519
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !12520, metadata !DIExpression()), !dbg !12521
  store i32 %opcontext, i32* %opcontext.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opcontext.addr, metadata !12522, metadata !DIExpression()), !dbg !12523
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !12524, metadata !DIExpression()), !dbg !12525
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12526, metadata !DIExpression()), !dbg !12527
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12528, metadata !DIExpression()), !dbg !12529
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !12530, metadata !DIExpression()), !dbg !12531
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !12532, metadata !DIExpression()), !dbg !12533
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !12534, metadata !DIExpression()), !dbg !12535
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !12536, metadata !DIExpression()), !dbg !12537
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !12538
  %1 = load i32, i32* %type.addr, align 4, !dbg !12539
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !12540
  %3 = load i32, i32* %opcontext.addr, align 4, !dbg !12541
  %4 = load i32, i32* %x.addr, align 4, !dbg !12542
  %5 = load i32, i32* %y.addr, align 4, !dbg !12543
  %6 = load i16, i16* %width.addr, align 2, !dbg !12544
  %7 = load i16, i16* %height.addr, align 2, !dbg !12545
  %8 = load i8*, i8** %tip.addr, align 8, !dbg !12546
  %call = call %struct.uiBut* @ui_def_but_operator_ptr(%struct.uiBlock* %0, i32 %1, %struct.wmOperatorType* %2, i32 %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i64 0, i64 0), i32 %4, i32 %5, i16 signext %6, i16 signext %7, i8* %8), !dbg !12547
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !12548
  %9 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !12549
  %10 = load i32, i32* %icon.addr, align 4, !dbg !12550
  call void @ui_check_but_and_iconize(%struct.uiBut* %9, i32 %10), !dbg !12551
  %11 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !12552
  ret %struct.uiBut* %11, !dbg !12553
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconButO(%struct.uiBlock* %block, i32 %type, i8* %opname, i32 %opcontext, i32 %icon, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %tip) #0 !dbg !12554 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %opname.addr = alloca i8*, align 8
  %opcontext.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %tip.addr = alloca i8*, align 8
  %ot = alloca %struct.wmOperatorType*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !12557, metadata !DIExpression()), !dbg !12558
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12559, metadata !DIExpression()), !dbg !12560
  store i8* %opname, i8** %opname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opname.addr, metadata !12561, metadata !DIExpression()), !dbg !12562
  store i32 %opcontext, i32* %opcontext.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opcontext.addr, metadata !12563, metadata !DIExpression()), !dbg !12564
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !12565, metadata !DIExpression()), !dbg !12566
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12567, metadata !DIExpression()), !dbg !12568
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12569, metadata !DIExpression()), !dbg !12570
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !12571, metadata !DIExpression()), !dbg !12572
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !12573, metadata !DIExpression()), !dbg !12574
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !12575, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !12577, metadata !DIExpression()), !dbg !12578
  %0 = load i8*, i8** %opname.addr, align 8, !dbg !12579
  %call = call %struct.wmOperatorType* @WM_operatortype_find(i8* %0, i8 zeroext 0), !dbg !12580
  store %struct.wmOperatorType* %call, %struct.wmOperatorType** %ot, align 8, !dbg !12578
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !12581
  %2 = load i32, i32* %type.addr, align 4, !dbg !12582
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !12583
  %4 = load i32, i32* %opcontext.addr, align 4, !dbg !12584
  %5 = load i32, i32* %icon.addr, align 4, !dbg !12585
  %6 = load i32, i32* %x.addr, align 4, !dbg !12586
  %7 = load i32, i32* %y.addr, align 4, !dbg !12587
  %8 = load i16, i16* %width.addr, align 2, !dbg !12588
  %9 = load i16, i16* %height.addr, align 2, !dbg !12589
  %10 = load i8*, i8** %tip.addr, align 8, !dbg !12590
  %call1 = call %struct.uiBut* @uiDefIconButO_ptr(%struct.uiBlock* %1, i32 %2, %struct.wmOperatorType* %3, i32 %4, i32 %5, i32 %6, i32 %7, i16 signext %8, i16 signext %9, i8* %10), !dbg !12591
  ret %struct.uiBut* %call1, !dbg !12592
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconTextBut(%struct.uiBlock* %block, i32 %type, i32 %retval1, i32 %icon, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !12593 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i8*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !12594, metadata !DIExpression()), !dbg !12595
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12596, metadata !DIExpression()), !dbg !12597
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !12598, metadata !DIExpression()), !dbg !12599
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !12600, metadata !DIExpression()), !dbg !12601
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !12602, metadata !DIExpression()), !dbg !12603
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12604, metadata !DIExpression()), !dbg !12605
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12606, metadata !DIExpression()), !dbg !12607
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !12608, metadata !DIExpression()), !dbg !12609
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !12610, metadata !DIExpression()), !dbg !12611
  store i8* %poin, i8** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %poin.addr, metadata !12612, metadata !DIExpression()), !dbg !12613
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !12614, metadata !DIExpression()), !dbg !12615
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !12616, metadata !DIExpression()), !dbg !12617
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !12618, metadata !DIExpression()), !dbg !12619
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !12620, metadata !DIExpression()), !dbg !12621
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !12622, metadata !DIExpression()), !dbg !12623
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !12624, metadata !DIExpression()), !dbg !12625
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !12626
  %1 = load i32, i32* %type.addr, align 4, !dbg !12627
  %2 = load i32, i32* %retval.addr, align 4, !dbg !12628
  %3 = load i8*, i8** %str.addr, align 8, !dbg !12629
  %4 = load i32, i32* %x.addr, align 4, !dbg !12630
  %5 = load i32, i32* %y.addr, align 4, !dbg !12631
  %6 = load i16, i16* %width.addr, align 2, !dbg !12632
  %7 = load i16, i16* %height.addr, align 2, !dbg !12633
  %8 = load i8*, i8** %poin.addr, align 8, !dbg !12634
  %9 = load float, float* %min.addr, align 4, !dbg !12635
  %10 = load float, float* %max.addr, align 4, !dbg !12636
  %11 = load float, float* %a1.addr, align 4, !dbg !12637
  %12 = load float, float* %a2.addr, align 4, !dbg !12638
  %13 = load i8*, i8** %tip.addr, align 8, !dbg !12639
  %call = call %struct.uiBut* @ui_def_but(%struct.uiBlock* %0, i32 %1, i32 %2, i8* %3, i32 %4, i32 %5, i16 signext %6, i16 signext %7, i8* %8, float %9, float %10, float %11, float %12, i8* %13), !dbg !12640
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !12625
  %14 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !12641
  %15 = load i32, i32* %icon.addr, align 4, !dbg !12642
  call void @ui_check_but_and_iconize(%struct.uiBut* %14, i32 %15), !dbg !12643
  %16 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !12644
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %16, i32 0, i32 3, !dbg !12645
  %17 = load i32, i32* %drawflag, align 4, !dbg !12646
  %or = or i32 %17, 4, !dbg !12646
  store i32 %or, i32* %drawflag, align 4, !dbg !12646
  %18 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !12647
  ret %struct.uiBut* %18, !dbg !12648
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconTextButF(%struct.uiBlock* %block, i32 %type, i32 %retval1, i32 %icon, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, float* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !12649 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca float*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !12650, metadata !DIExpression()), !dbg !12651
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12652, metadata !DIExpression()), !dbg !12653
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !12654, metadata !DIExpression()), !dbg !12655
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !12656, metadata !DIExpression()), !dbg !12657
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !12658, metadata !DIExpression()), !dbg !12659
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12660, metadata !DIExpression()), !dbg !12661
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12662, metadata !DIExpression()), !dbg !12663
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !12664, metadata !DIExpression()), !dbg !12665
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !12666, metadata !DIExpression()), !dbg !12667
  store float* %poin, float** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata float** %poin.addr, metadata !12668, metadata !DIExpression()), !dbg !12669
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !12670, metadata !DIExpression()), !dbg !12671
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !12672, metadata !DIExpression()), !dbg !12673
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !12674, metadata !DIExpression()), !dbg !12675
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !12676, metadata !DIExpression()), !dbg !12677
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !12678, metadata !DIExpression()), !dbg !12679
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !12680
  %1 = load i32, i32* %type.addr, align 4, !dbg !12681
  %or = or i32 %1, 128, !dbg !12682
  %2 = load i32, i32* %retval.addr, align 4, !dbg !12683
  %3 = load i32, i32* %icon.addr, align 4, !dbg !12684
  %4 = load i8*, i8** %str.addr, align 8, !dbg !12685
  %5 = load i32, i32* %x.addr, align 4, !dbg !12686
  %6 = load i32, i32* %y.addr, align 4, !dbg !12687
  %7 = load i16, i16* %width.addr, align 2, !dbg !12688
  %8 = load i16, i16* %height.addr, align 2, !dbg !12689
  %9 = load float*, float** %poin.addr, align 8, !dbg !12690
  %10 = bitcast float* %9 to i8*, !dbg !12691
  %11 = load float, float* %min.addr, align 4, !dbg !12692
  %12 = load float, float* %max.addr, align 4, !dbg !12693
  %13 = load float, float* %a1.addr, align 4, !dbg !12694
  %14 = load float, float* %a2.addr, align 4, !dbg !12695
  %15 = load i8*, i8** %tip.addr, align 8, !dbg !12696
  %call = call %struct.uiBut* @uiDefIconTextBut(%struct.uiBlock* %0, i32 %or, i32 %2, i32 %3, i8* %4, i32 %5, i32 %6, i16 signext %7, i16 signext %8, i8* %10, float %11, float %12, float %13, float %14, i8* %15), !dbg !12697
  ret %struct.uiBut* %call, !dbg !12698
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconTextButBitF(%struct.uiBlock* %block, i32 %type, i32 %bit, i32 %retval1, i32 %icon, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, float* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !12699 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %bit.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca float*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !12702, metadata !DIExpression()), !dbg !12703
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12704, metadata !DIExpression()), !dbg !12705
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !12706, metadata !DIExpression()), !dbg !12707
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !12708, metadata !DIExpression()), !dbg !12709
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !12710, metadata !DIExpression()), !dbg !12711
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !12712, metadata !DIExpression()), !dbg !12713
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12714, metadata !DIExpression()), !dbg !12715
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12716, metadata !DIExpression()), !dbg !12717
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !12718, metadata !DIExpression()), !dbg !12719
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !12720, metadata !DIExpression()), !dbg !12721
  store float* %poin, float** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata float** %poin.addr, metadata !12722, metadata !DIExpression()), !dbg !12723
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !12724, metadata !DIExpression()), !dbg !12725
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !12726, metadata !DIExpression()), !dbg !12727
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !12728, metadata !DIExpression()), !dbg !12729
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !12730, metadata !DIExpression()), !dbg !12731
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !12732, metadata !DIExpression()), !dbg !12733
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !12734
  %1 = load i32, i32* %type.addr, align 4, !dbg !12735
  %or = or i32 %1, 128, !dbg !12736
  %2 = load i32, i32* %bit.addr, align 4, !dbg !12737
  %3 = load i32, i32* %retval.addr, align 4, !dbg !12738
  %4 = load i32, i32* %icon.addr, align 4, !dbg !12739
  %5 = load i8*, i8** %str.addr, align 8, !dbg !12740
  %6 = load i32, i32* %x.addr, align 4, !dbg !12741
  %7 = load i32, i32* %y.addr, align 4, !dbg !12742
  %8 = load i16, i16* %width.addr, align 2, !dbg !12743
  %9 = load i16, i16* %height.addr, align 2, !dbg !12744
  %10 = load float*, float** %poin.addr, align 8, !dbg !12745
  %11 = bitcast float* %10 to i8*, !dbg !12746
  %12 = load float, float* %min.addr, align 4, !dbg !12747
  %13 = load float, float* %max.addr, align 4, !dbg !12748
  %14 = load float, float* %a1.addr, align 4, !dbg !12749
  %15 = load float, float* %a2.addr, align 4, !dbg !12750
  %16 = load i8*, i8** %tip.addr, align 8, !dbg !12751
  %call = call %struct.uiBut* @uiDefIconTextButBit(%struct.uiBlock* %0, i32 %or, i32 %2, i32 %3, i32 %4, i8* %5, i32 %6, i32 %7, i16 signext %8, i16 signext %9, i8* %11, float %12, float %13, float %14, float %15, i8* %16), !dbg !12752
  ret %struct.uiBut* %call, !dbg !12753
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiBut* @uiDefIconTextButBit(%struct.uiBlock* %block, i32 %type, i32 %bit, i32 %retval1, i32 %icon, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !12754 {
entry:
  %retval = alloca %struct.uiBut*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %bit.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i8*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  %bitIdx = alloca i32, align 4
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !12757, metadata !DIExpression()), !dbg !12758
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12759, metadata !DIExpression()), !dbg !12760
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !12761, metadata !DIExpression()), !dbg !12762
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !12763, metadata !DIExpression()), !dbg !12764
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !12765, metadata !DIExpression()), !dbg !12766
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !12767, metadata !DIExpression()), !dbg !12768
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12769, metadata !DIExpression()), !dbg !12770
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12771, metadata !DIExpression()), !dbg !12772
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !12773, metadata !DIExpression()), !dbg !12774
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !12775, metadata !DIExpression()), !dbg !12776
  store i8* %poin, i8** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %poin.addr, metadata !12777, metadata !DIExpression()), !dbg !12778
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !12779, metadata !DIExpression()), !dbg !12780
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !12781, metadata !DIExpression()), !dbg !12782
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !12783, metadata !DIExpression()), !dbg !12784
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !12785, metadata !DIExpression()), !dbg !12786
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !12787, metadata !DIExpression()), !dbg !12788
  call void @llvm.dbg.declare(metadata i32* %bitIdx, metadata !12789, metadata !DIExpression()), !dbg !12790
  %0 = load i32, i32* %bit.addr, align 4, !dbg !12791
  %call = call i32 @findBitIndex(i32 %0), !dbg !12792
  store i32 %call, i32* %bitIdx, align 4, !dbg !12790
  %1 = load i32, i32* %bitIdx, align 4, !dbg !12793
  %cmp = icmp eq i32 %1, -1, !dbg !12795
  br i1 %cmp, label %if.then, label %if.else, !dbg !12796

if.then:                                          ; preds = %entry
  store %struct.uiBut* null, %struct.uiBut** %retval, align 8, !dbg !12797
  br label %return, !dbg !12797

if.else:                                          ; preds = %entry
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !12799
  %3 = load i32, i32* %type.addr, align 4, !dbg !12801
  %or = or i32 %3, 256, !dbg !12802
  %4 = load i32, i32* %bitIdx, align 4, !dbg !12803
  %or2 = or i32 %or, %4, !dbg !12804
  %5 = load i32, i32* %retval.addr, align 4, !dbg !12805
  %6 = load i32, i32* %icon.addr, align 4, !dbg !12806
  %7 = load i8*, i8** %str.addr, align 8, !dbg !12807
  %8 = load i32, i32* %x.addr, align 4, !dbg !12808
  %9 = load i32, i32* %y.addr, align 4, !dbg !12809
  %10 = load i16, i16* %width.addr, align 2, !dbg !12810
  %11 = load i16, i16* %height.addr, align 2, !dbg !12811
  %12 = load i8*, i8** %poin.addr, align 8, !dbg !12812
  %13 = load float, float* %min.addr, align 4, !dbg !12813
  %14 = load float, float* %max.addr, align 4, !dbg !12814
  %15 = load float, float* %a1.addr, align 4, !dbg !12815
  %16 = load float, float* %a2.addr, align 4, !dbg !12816
  %17 = load i8*, i8** %tip.addr, align 8, !dbg !12817
  %call3 = call %struct.uiBut* @uiDefIconTextBut(%struct.uiBlock* %2, i32 %or2, i32 %5, i32 %6, i8* %7, i32 %8, i32 %9, i16 signext %10, i16 signext %11, i8* %12, float %13, float %14, float %15, float %16, i8* %17), !dbg !12818
  store %struct.uiBut* %call3, %struct.uiBut** %retval, align 8, !dbg !12819
  br label %return, !dbg !12819

return:                                           ; preds = %if.else, %if.then
  %18 = load %struct.uiBut*, %struct.uiBut** %retval, align 8, !dbg !12820
  ret %struct.uiBut* %18, !dbg !12820
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconTextButI(%struct.uiBlock* %block, i32 %type, i32 %retval1, i32 %icon, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i32* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !12821 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i32*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !12822, metadata !DIExpression()), !dbg !12823
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12824, metadata !DIExpression()), !dbg !12825
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !12826, metadata !DIExpression()), !dbg !12827
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !12828, metadata !DIExpression()), !dbg !12829
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !12830, metadata !DIExpression()), !dbg !12831
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12832, metadata !DIExpression()), !dbg !12833
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12834, metadata !DIExpression()), !dbg !12835
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !12836, metadata !DIExpression()), !dbg !12837
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !12838, metadata !DIExpression()), !dbg !12839
  store i32* %poin, i32** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %poin.addr, metadata !12840, metadata !DIExpression()), !dbg !12841
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !12842, metadata !DIExpression()), !dbg !12843
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !12844, metadata !DIExpression()), !dbg !12845
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !12846, metadata !DIExpression()), !dbg !12847
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !12848, metadata !DIExpression()), !dbg !12849
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !12850, metadata !DIExpression()), !dbg !12851
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !12852
  %1 = load i32, i32* %type.addr, align 4, !dbg !12853
  %or = or i32 %1, 96, !dbg !12854
  %2 = load i32, i32* %retval.addr, align 4, !dbg !12855
  %3 = load i32, i32* %icon.addr, align 4, !dbg !12856
  %4 = load i8*, i8** %str.addr, align 8, !dbg !12857
  %5 = load i32, i32* %x.addr, align 4, !dbg !12858
  %6 = load i32, i32* %y.addr, align 4, !dbg !12859
  %7 = load i16, i16* %width.addr, align 2, !dbg !12860
  %8 = load i16, i16* %height.addr, align 2, !dbg !12861
  %9 = load i32*, i32** %poin.addr, align 8, !dbg !12862
  %10 = bitcast i32* %9 to i8*, !dbg !12863
  %11 = load float, float* %min.addr, align 4, !dbg !12864
  %12 = load float, float* %max.addr, align 4, !dbg !12865
  %13 = load float, float* %a1.addr, align 4, !dbg !12866
  %14 = load float, float* %a2.addr, align 4, !dbg !12867
  %15 = load i8*, i8** %tip.addr, align 8, !dbg !12868
  %call = call %struct.uiBut* @uiDefIconTextBut(%struct.uiBlock* %0, i32 %or, i32 %2, i32 %3, i8* %4, i32 %5, i32 %6, i16 signext %7, i16 signext %8, i8* %10, float %11, float %12, float %13, float %14, i8* %15), !dbg !12869
  ret %struct.uiBut* %call, !dbg !12870
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconTextButBitI(%struct.uiBlock* %block, i32 %type, i32 %bit, i32 %retval1, i32 %icon, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i32* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !12871 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %bit.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i32*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !12874, metadata !DIExpression()), !dbg !12875
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12876, metadata !DIExpression()), !dbg !12877
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !12878, metadata !DIExpression()), !dbg !12879
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !12880, metadata !DIExpression()), !dbg !12881
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !12882, metadata !DIExpression()), !dbg !12883
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !12884, metadata !DIExpression()), !dbg !12885
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12886, metadata !DIExpression()), !dbg !12887
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12888, metadata !DIExpression()), !dbg !12889
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !12890, metadata !DIExpression()), !dbg !12891
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !12892, metadata !DIExpression()), !dbg !12893
  store i32* %poin, i32** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %poin.addr, metadata !12894, metadata !DIExpression()), !dbg !12895
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !12896, metadata !DIExpression()), !dbg !12897
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !12898, metadata !DIExpression()), !dbg !12899
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !12900, metadata !DIExpression()), !dbg !12901
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !12902, metadata !DIExpression()), !dbg !12903
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !12904, metadata !DIExpression()), !dbg !12905
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !12906
  %1 = load i32, i32* %type.addr, align 4, !dbg !12907
  %or = or i32 %1, 96, !dbg !12908
  %2 = load i32, i32* %bit.addr, align 4, !dbg !12909
  %3 = load i32, i32* %retval.addr, align 4, !dbg !12910
  %4 = load i32, i32* %icon.addr, align 4, !dbg !12911
  %5 = load i8*, i8** %str.addr, align 8, !dbg !12912
  %6 = load i32, i32* %x.addr, align 4, !dbg !12913
  %7 = load i32, i32* %y.addr, align 4, !dbg !12914
  %8 = load i16, i16* %width.addr, align 2, !dbg !12915
  %9 = load i16, i16* %height.addr, align 2, !dbg !12916
  %10 = load i32*, i32** %poin.addr, align 8, !dbg !12917
  %11 = bitcast i32* %10 to i8*, !dbg !12918
  %12 = load float, float* %min.addr, align 4, !dbg !12919
  %13 = load float, float* %max.addr, align 4, !dbg !12920
  %14 = load float, float* %a1.addr, align 4, !dbg !12921
  %15 = load float, float* %a2.addr, align 4, !dbg !12922
  %16 = load i8*, i8** %tip.addr, align 8, !dbg !12923
  %call = call %struct.uiBut* @uiDefIconTextButBit(%struct.uiBlock* %0, i32 %or, i32 %2, i32 %3, i32 %4, i8* %5, i32 %6, i32 %7, i16 signext %8, i16 signext %9, i8* %11, float %12, float %13, float %14, float %15, i8* %16), !dbg !12924
  ret %struct.uiBut* %call, !dbg !12925
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconTextButS(%struct.uiBlock* %block, i32 %type, i32 %retval1, i32 %icon, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i16* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !12926 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i16*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !12927, metadata !DIExpression()), !dbg !12928
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12929, metadata !DIExpression()), !dbg !12930
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !12931, metadata !DIExpression()), !dbg !12932
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !12933, metadata !DIExpression()), !dbg !12934
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !12935, metadata !DIExpression()), !dbg !12936
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12937, metadata !DIExpression()), !dbg !12938
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12939, metadata !DIExpression()), !dbg !12940
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !12941, metadata !DIExpression()), !dbg !12942
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !12943, metadata !DIExpression()), !dbg !12944
  store i16* %poin, i16** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %poin.addr, metadata !12945, metadata !DIExpression()), !dbg !12946
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !12947, metadata !DIExpression()), !dbg !12948
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !12949, metadata !DIExpression()), !dbg !12950
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !12951, metadata !DIExpression()), !dbg !12952
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !12953, metadata !DIExpression()), !dbg !12954
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !12955, metadata !DIExpression()), !dbg !12956
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !12957
  %1 = load i32, i32* %type.addr, align 4, !dbg !12958
  %or = or i32 %1, 64, !dbg !12959
  %2 = load i32, i32* %retval.addr, align 4, !dbg !12960
  %3 = load i32, i32* %icon.addr, align 4, !dbg !12961
  %4 = load i8*, i8** %str.addr, align 8, !dbg !12962
  %5 = load i32, i32* %x.addr, align 4, !dbg !12963
  %6 = load i32, i32* %y.addr, align 4, !dbg !12964
  %7 = load i16, i16* %width.addr, align 2, !dbg !12965
  %8 = load i16, i16* %height.addr, align 2, !dbg !12966
  %9 = load i16*, i16** %poin.addr, align 8, !dbg !12967
  %10 = bitcast i16* %9 to i8*, !dbg !12968
  %11 = load float, float* %min.addr, align 4, !dbg !12969
  %12 = load float, float* %max.addr, align 4, !dbg !12970
  %13 = load float, float* %a1.addr, align 4, !dbg !12971
  %14 = load float, float* %a2.addr, align 4, !dbg !12972
  %15 = load i8*, i8** %tip.addr, align 8, !dbg !12973
  %call = call %struct.uiBut* @uiDefIconTextBut(%struct.uiBlock* %0, i32 %or, i32 %2, i32 %3, i8* %4, i32 %5, i32 %6, i16 signext %7, i16 signext %8, i8* %10, float %11, float %12, float %13, float %14, i8* %15), !dbg !12974
  ret %struct.uiBut* %call, !dbg !12975
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconTextButBitS(%struct.uiBlock* %block, i32 %type, i32 %bit, i32 %retval1, i32 %icon, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i16* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !12976 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %bit.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i16*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !12979, metadata !DIExpression()), !dbg !12980
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12981, metadata !DIExpression()), !dbg !12982
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !12983, metadata !DIExpression()), !dbg !12984
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !12985, metadata !DIExpression()), !dbg !12986
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !12987, metadata !DIExpression()), !dbg !12988
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !12989, metadata !DIExpression()), !dbg !12990
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12991, metadata !DIExpression()), !dbg !12992
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12993, metadata !DIExpression()), !dbg !12994
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !12995, metadata !DIExpression()), !dbg !12996
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !12997, metadata !DIExpression()), !dbg !12998
  store i16* %poin, i16** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %poin.addr, metadata !12999, metadata !DIExpression()), !dbg !13000
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !13001, metadata !DIExpression()), !dbg !13002
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !13003, metadata !DIExpression()), !dbg !13004
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !13005, metadata !DIExpression()), !dbg !13006
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !13007, metadata !DIExpression()), !dbg !13008
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !13009, metadata !DIExpression()), !dbg !13010
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13011
  %1 = load i32, i32* %type.addr, align 4, !dbg !13012
  %or = or i32 %1, 64, !dbg !13013
  %2 = load i32, i32* %bit.addr, align 4, !dbg !13014
  %3 = load i32, i32* %retval.addr, align 4, !dbg !13015
  %4 = load i32, i32* %icon.addr, align 4, !dbg !13016
  %5 = load i8*, i8** %str.addr, align 8, !dbg !13017
  %6 = load i32, i32* %x.addr, align 4, !dbg !13018
  %7 = load i32, i32* %y.addr, align 4, !dbg !13019
  %8 = load i16, i16* %width.addr, align 2, !dbg !13020
  %9 = load i16, i16* %height.addr, align 2, !dbg !13021
  %10 = load i16*, i16** %poin.addr, align 8, !dbg !13022
  %11 = bitcast i16* %10 to i8*, !dbg !13023
  %12 = load float, float* %min.addr, align 4, !dbg !13024
  %13 = load float, float* %max.addr, align 4, !dbg !13025
  %14 = load float, float* %a1.addr, align 4, !dbg !13026
  %15 = load float, float* %a2.addr, align 4, !dbg !13027
  %16 = load i8*, i8** %tip.addr, align 8, !dbg !13028
  %call = call %struct.uiBut* @uiDefIconTextButBit(%struct.uiBlock* %0, i32 %or, i32 %2, i32 %3, i32 %4, i8* %5, i32 %6, i32 %7, i16 signext %8, i16 signext %9, i8* %11, float %12, float %13, float %14, float %15, i8* %16), !dbg !13029
  ret %struct.uiBut* %call, !dbg !13030
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconTextButC(%struct.uiBlock* %block, i32 %type, i32 %retval1, i32 %icon, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !13031 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i8*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !13032, metadata !DIExpression()), !dbg !13033
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !13034, metadata !DIExpression()), !dbg !13035
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !13036, metadata !DIExpression()), !dbg !13037
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !13038, metadata !DIExpression()), !dbg !13039
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !13040, metadata !DIExpression()), !dbg !13041
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !13042, metadata !DIExpression()), !dbg !13043
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !13044, metadata !DIExpression()), !dbg !13045
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !13046, metadata !DIExpression()), !dbg !13047
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !13048, metadata !DIExpression()), !dbg !13049
  store i8* %poin, i8** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %poin.addr, metadata !13050, metadata !DIExpression()), !dbg !13051
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !13052, metadata !DIExpression()), !dbg !13053
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !13054, metadata !DIExpression()), !dbg !13055
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !13056, metadata !DIExpression()), !dbg !13057
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !13058, metadata !DIExpression()), !dbg !13059
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !13060, metadata !DIExpression()), !dbg !13061
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13062
  %1 = load i32, i32* %type.addr, align 4, !dbg !13063
  %or = or i32 %1, 32, !dbg !13064
  %2 = load i32, i32* %retval.addr, align 4, !dbg !13065
  %3 = load i32, i32* %icon.addr, align 4, !dbg !13066
  %4 = load i8*, i8** %str.addr, align 8, !dbg !13067
  %5 = load i32, i32* %x.addr, align 4, !dbg !13068
  %6 = load i32, i32* %y.addr, align 4, !dbg !13069
  %7 = load i16, i16* %width.addr, align 2, !dbg !13070
  %8 = load i16, i16* %height.addr, align 2, !dbg !13071
  %9 = load i8*, i8** %poin.addr, align 8, !dbg !13072
  %10 = load float, float* %min.addr, align 4, !dbg !13073
  %11 = load float, float* %max.addr, align 4, !dbg !13074
  %12 = load float, float* %a1.addr, align 4, !dbg !13075
  %13 = load float, float* %a2.addr, align 4, !dbg !13076
  %14 = load i8*, i8** %tip.addr, align 8, !dbg !13077
  %call = call %struct.uiBut* @uiDefIconTextBut(%struct.uiBlock* %0, i32 %or, i32 %2, i32 %3, i8* %4, i32 %5, i32 %6, i16 signext %7, i16 signext %8, i8* %9, float %10, float %11, float %12, float %13, i8* %14), !dbg !13078
  ret %struct.uiBut* %call, !dbg !13079
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconTextButBitC(%struct.uiBlock* %block, i32 %type, i32 %bit, i32 %retval1, i32 %icon, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %poin, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !13080 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %bit.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %poin.addr = alloca i8*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !13083, metadata !DIExpression()), !dbg !13084
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !13085, metadata !DIExpression()), !dbg !13086
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !13087, metadata !DIExpression()), !dbg !13088
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !13089, metadata !DIExpression()), !dbg !13090
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !13091, metadata !DIExpression()), !dbg !13092
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !13093, metadata !DIExpression()), !dbg !13094
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !13095, metadata !DIExpression()), !dbg !13096
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !13097, metadata !DIExpression()), !dbg !13098
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !13099, metadata !DIExpression()), !dbg !13100
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !13101, metadata !DIExpression()), !dbg !13102
  store i8* %poin, i8** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %poin.addr, metadata !13103, metadata !DIExpression()), !dbg !13104
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !13105, metadata !DIExpression()), !dbg !13106
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !13107, metadata !DIExpression()), !dbg !13108
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !13109, metadata !DIExpression()), !dbg !13110
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !13111, metadata !DIExpression()), !dbg !13112
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !13113, metadata !DIExpression()), !dbg !13114
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13115
  %1 = load i32, i32* %type.addr, align 4, !dbg !13116
  %or = or i32 %1, 32, !dbg !13117
  %2 = load i32, i32* %bit.addr, align 4, !dbg !13118
  %3 = load i32, i32* %retval.addr, align 4, !dbg !13119
  %4 = load i32, i32* %icon.addr, align 4, !dbg !13120
  %5 = load i8*, i8** %str.addr, align 8, !dbg !13121
  %6 = load i32, i32* %x.addr, align 4, !dbg !13122
  %7 = load i32, i32* %y.addr, align 4, !dbg !13123
  %8 = load i16, i16* %width.addr, align 2, !dbg !13124
  %9 = load i16, i16* %height.addr, align 2, !dbg !13125
  %10 = load i8*, i8** %poin.addr, align 8, !dbg !13126
  %11 = load float, float* %min.addr, align 4, !dbg !13127
  %12 = load float, float* %max.addr, align 4, !dbg !13128
  %13 = load float, float* %a1.addr, align 4, !dbg !13129
  %14 = load float, float* %a2.addr, align 4, !dbg !13130
  %15 = load i8*, i8** %tip.addr, align 8, !dbg !13131
  %call = call %struct.uiBut* @uiDefIconTextButBit(%struct.uiBlock* %0, i32 %or, i32 %2, i32 %3, i32 %4, i8* %5, i32 %6, i32 %7, i16 signext %8, i16 signext %9, i8* %10, float %11, float %12, float %13, float %14, i8* %15), !dbg !13132
  ret %struct.uiBut* %call, !dbg !13133
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconTextButR(%struct.uiBlock* %block, i32 %type, i32 %retval1, i32 %icon, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, %struct.PointerRNA* %ptr, i8* %propname, i32 %index, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !13134 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %propname.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !13137, metadata !DIExpression()), !dbg !13138
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !13139, metadata !DIExpression()), !dbg !13140
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !13141, metadata !DIExpression()), !dbg !13142
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !13143, metadata !DIExpression()), !dbg !13144
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !13145, metadata !DIExpression()), !dbg !13146
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !13147, metadata !DIExpression()), !dbg !13148
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !13149, metadata !DIExpression()), !dbg !13150
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !13151, metadata !DIExpression()), !dbg !13152
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !13153, metadata !DIExpression()), !dbg !13154
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !13155, metadata !DIExpression()), !dbg !13156
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !13157, metadata !DIExpression()), !dbg !13158
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !13159, metadata !DIExpression()), !dbg !13160
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !13161, metadata !DIExpression()), !dbg !13162
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !13163, metadata !DIExpression()), !dbg !13164
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !13165, metadata !DIExpression()), !dbg !13166
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !13167, metadata !DIExpression()), !dbg !13168
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !13169, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !13171, metadata !DIExpression()), !dbg !13172
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13173
  %1 = load i32, i32* %type.addr, align 4, !dbg !13174
  %2 = load i32, i32* %retval.addr, align 4, !dbg !13175
  %3 = load i8*, i8** %str.addr, align 8, !dbg !13176
  %4 = load i32, i32* %x.addr, align 4, !dbg !13177
  %5 = load i32, i32* %y.addr, align 4, !dbg !13178
  %6 = load i16, i16* %width.addr, align 2, !dbg !13179
  %7 = load i16, i16* %height.addr, align 2, !dbg !13180
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13181
  %9 = load i8*, i8** %propname.addr, align 8, !dbg !13182
  %10 = load i32, i32* %index.addr, align 4, !dbg !13183
  %11 = load float, float* %min.addr, align 4, !dbg !13184
  %12 = load float, float* %max.addr, align 4, !dbg !13185
  %13 = load float, float* %a1.addr, align 4, !dbg !13186
  %14 = load float, float* %a2.addr, align 4, !dbg !13187
  %15 = load i8*, i8** %tip.addr, align 8, !dbg !13188
  %call = call %struct.uiBut* @ui_def_but_rna_propname(%struct.uiBlock* %0, i32 %1, i32 %2, i8* %3, i32 %4, i32 %5, i16 signext %6, i16 signext %7, %struct.PointerRNA* %8, i8* %9, i32 %10, float %11, float %12, float %13, float %14, i8* %15), !dbg !13189
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !13190
  %16 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13191
  %17 = load i32, i32* %icon.addr, align 4, !dbg !13192
  call void @ui_check_but_and_iconize(%struct.uiBut* %16, i32 %17), !dbg !13193
  %18 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13194
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %18, i32 0, i32 3, !dbg !13195
  %19 = load i32, i32* %drawflag, align 4, !dbg !13196
  %or = or i32 %19, 4, !dbg !13196
  store i32 %or, i32* %drawflag, align 4, !dbg !13196
  %20 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13197
  ret %struct.uiBut* %20, !dbg !13198
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconTextButR_prop(%struct.uiBlock* %block, i32 %type, i32 %retval1, i32 %icon, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index, float %min, float %max, float %a1, float %a2, i8* %tip) #0 !dbg !13199 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !13202, metadata !DIExpression()), !dbg !13203
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !13204, metadata !DIExpression()), !dbg !13205
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !13206, metadata !DIExpression()), !dbg !13207
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !13208, metadata !DIExpression()), !dbg !13209
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !13210, metadata !DIExpression()), !dbg !13211
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !13212, metadata !DIExpression()), !dbg !13213
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !13214, metadata !DIExpression()), !dbg !13215
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !13216, metadata !DIExpression()), !dbg !13217
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !13218, metadata !DIExpression()), !dbg !13219
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !13220, metadata !DIExpression()), !dbg !13221
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !13222, metadata !DIExpression()), !dbg !13223
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !13224, metadata !DIExpression()), !dbg !13225
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !13226, metadata !DIExpression()), !dbg !13227
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !13228, metadata !DIExpression()), !dbg !13229
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !13230, metadata !DIExpression()), !dbg !13231
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !13232, metadata !DIExpression()), !dbg !13233
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !13234, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !13236, metadata !DIExpression()), !dbg !13237
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13238
  %1 = load i32, i32* %type.addr, align 4, !dbg !13239
  %2 = load i32, i32* %retval.addr, align 4, !dbg !13240
  %3 = load i8*, i8** %str.addr, align 8, !dbg !13241
  %4 = load i32, i32* %x.addr, align 4, !dbg !13242
  %5 = load i32, i32* %y.addr, align 4, !dbg !13243
  %6 = load i16, i16* %width.addr, align 2, !dbg !13244
  %7 = load i16, i16* %height.addr, align 2, !dbg !13245
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13246
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !13247
  %10 = load i32, i32* %index.addr, align 4, !dbg !13248
  %11 = load float, float* %min.addr, align 4, !dbg !13249
  %12 = load float, float* %max.addr, align 4, !dbg !13250
  %13 = load float, float* %a1.addr, align 4, !dbg !13251
  %14 = load float, float* %a2.addr, align 4, !dbg !13252
  %15 = load i8*, i8** %tip.addr, align 8, !dbg !13253
  %call = call %struct.uiBut* @ui_def_but_rna(%struct.uiBlock* %0, i32 %1, i32 %2, i8* %3, i32 %4, i32 %5, i16 signext %6, i16 signext %7, %struct.PointerRNA* %8, %struct.PropertyRNA* %9, i32 %10, float %11, float %12, float %13, float %14, i8* %15), !dbg !13254
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !13255
  %16 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13256
  %17 = load i32, i32* %icon.addr, align 4, !dbg !13257
  call void @ui_check_but_and_iconize(%struct.uiBut* %16, i32 %17), !dbg !13258
  %18 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13259
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %18, i32 0, i32 3, !dbg !13260
  %19 = load i32, i32* %drawflag, align 4, !dbg !13261
  %or = or i32 %19, 4, !dbg !13261
  store i32 %or, i32* %drawflag, align 4, !dbg !13261
  %20 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13262
  ret %struct.uiBut* %20, !dbg !13263
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconTextButO_ptr(%struct.uiBlock* %block, i32 %type, %struct.wmOperatorType* %ot, i32 %opcontext, i32 %icon, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %tip) #0 !dbg !13264 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %opcontext.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !13267, metadata !DIExpression()), !dbg !13268
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !13269, metadata !DIExpression()), !dbg !13270
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !13271, metadata !DIExpression()), !dbg !13272
  store i32 %opcontext, i32* %opcontext.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opcontext.addr, metadata !13273, metadata !DIExpression()), !dbg !13274
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !13275, metadata !DIExpression()), !dbg !13276
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !13277, metadata !DIExpression()), !dbg !13278
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !13279, metadata !DIExpression()), !dbg !13280
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !13281, metadata !DIExpression()), !dbg !13282
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !13283, metadata !DIExpression()), !dbg !13284
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !13285, metadata !DIExpression()), !dbg !13286
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !13287, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !13289, metadata !DIExpression()), !dbg !13290
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13291
  %1 = load i32, i32* %type.addr, align 4, !dbg !13292
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !13293
  %3 = load i32, i32* %opcontext.addr, align 4, !dbg !13294
  %4 = load i8*, i8** %str.addr, align 8, !dbg !13295
  %5 = load i32, i32* %x.addr, align 4, !dbg !13296
  %6 = load i32, i32* %y.addr, align 4, !dbg !13297
  %7 = load i16, i16* %width.addr, align 2, !dbg !13298
  %8 = load i16, i16* %height.addr, align 2, !dbg !13299
  %9 = load i8*, i8** %tip.addr, align 8, !dbg !13300
  %call = call %struct.uiBut* @ui_def_but_operator_ptr(%struct.uiBlock* %0, i32 %1, %struct.wmOperatorType* %2, i32 %3, i8* %4, i32 %5, i32 %6, i16 signext %7, i16 signext %8, i8* %9), !dbg !13301
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !13302
  %10 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13303
  %11 = load i32, i32* %icon.addr, align 4, !dbg !13304
  call void @ui_check_but_and_iconize(%struct.uiBut* %10, i32 %11), !dbg !13305
  %12 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13306
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 3, !dbg !13307
  %13 = load i32, i32* %drawflag, align 4, !dbg !13308
  %or = or i32 %13, 4, !dbg !13308
  store i32 %or, i32* %drawflag, align 4, !dbg !13308
  %14 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13309
  ret %struct.uiBut* %14, !dbg !13310
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconTextButO(%struct.uiBlock* %block, i32 %type, i8* %opname, i32 %opcontext, i32 %icon, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %tip) #0 !dbg !13311 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %type.addr = alloca i32, align 4
  %opname.addr = alloca i8*, align 8
  %opcontext.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %tip.addr = alloca i8*, align 8
  %ot = alloca %struct.wmOperatorType*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !13314, metadata !DIExpression()), !dbg !13315
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !13316, metadata !DIExpression()), !dbg !13317
  store i8* %opname, i8** %opname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opname.addr, metadata !13318, metadata !DIExpression()), !dbg !13319
  store i32 %opcontext, i32* %opcontext.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opcontext.addr, metadata !13320, metadata !DIExpression()), !dbg !13321
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !13322, metadata !DIExpression()), !dbg !13323
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !13324, metadata !DIExpression()), !dbg !13325
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !13326, metadata !DIExpression()), !dbg !13327
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !13328, metadata !DIExpression()), !dbg !13329
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !13330, metadata !DIExpression()), !dbg !13331
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !13332, metadata !DIExpression()), !dbg !13333
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !13334, metadata !DIExpression()), !dbg !13335
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !13336, metadata !DIExpression()), !dbg !13337
  %0 = load i8*, i8** %opname.addr, align 8, !dbg !13338
  %call = call %struct.wmOperatorType* @WM_operatortype_find(i8* %0, i8 zeroext 0), !dbg !13339
  store %struct.wmOperatorType* %call, %struct.wmOperatorType** %ot, align 8, !dbg !13337
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13340
  %2 = load i32, i32* %type.addr, align 4, !dbg !13341
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !13342
  %4 = load i32, i32* %opcontext.addr, align 4, !dbg !13343
  %5 = load i32, i32* %icon.addr, align 4, !dbg !13344
  %6 = load i8*, i8** %str.addr, align 8, !dbg !13345
  %7 = load i32, i32* %x.addr, align 4, !dbg !13346
  %8 = load i32, i32* %y.addr, align 4, !dbg !13347
  %9 = load i16, i16* %width.addr, align 2, !dbg !13348
  %10 = load i16, i16* %height.addr, align 2, !dbg !13349
  %11 = load i8*, i8** %tip.addr, align 8, !dbg !13350
  %call1 = call %struct.uiBut* @uiDefIconTextButO_ptr(%struct.uiBlock* %1, i32 %2, %struct.wmOperatorType* %3, i32 %4, i32 %5, i8* %6, i32 %7, i32 %8, i16 signext %9, i16 signext %10, i8* %11), !dbg !13351
  ret %struct.uiBut* %call1, !dbg !13352
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiSetButLink(%struct.uiBut* %but, i8** %poin, i8*** %ppoin, i16* %tot, i32 %from, i32 %to) #0 !dbg !13353 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %poin.addr = alloca i8**, align 8
  %ppoin.addr = alloca i8***, align 8
  %tot.addr = alloca i16*, align 8
  %from.addr = alloca i32, align 4
  %to.addr = alloca i32, align 4
  %link = alloca %struct.uiLink*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !13356, metadata !DIExpression()), !dbg !13357
  store i8** %poin, i8*** %poin.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %poin.addr, metadata !13358, metadata !DIExpression()), !dbg !13359
  store i8*** %ppoin, i8**** %ppoin.addr, align 8
  call void @llvm.dbg.declare(metadata i8**** %ppoin.addr, metadata !13360, metadata !DIExpression()), !dbg !13361
  store i16* %tot, i16** %tot.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %tot.addr, metadata !13362, metadata !DIExpression()), !dbg !13363
  store i32 %from, i32* %from.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %from.addr, metadata !13364, metadata !DIExpression()), !dbg !13365
  store i32 %to, i32* %to.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %to.addr, metadata !13366, metadata !DIExpression()), !dbg !13367
  call void @llvm.dbg.declare(metadata %struct.uiLink** %link, metadata !13368, metadata !DIExpression()), !dbg !13369
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !13370
  %call = call i8* %0(i64 48, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i64 0, i64 0)), !dbg !13370
  %1 = bitcast i8* %call to %struct.uiLink*, !dbg !13370
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13371
  %link1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 40, !dbg !13372
  store %struct.uiLink* %1, %struct.uiLink** %link1, align 8, !dbg !13373
  store %struct.uiLink* %1, %struct.uiLink** %link, align 8, !dbg !13374
  %3 = load i8**, i8*** %poin.addr, align 8, !dbg !13375
  %4 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !13376
  %poin2 = getelementptr inbounds %struct.uiLink, %struct.uiLink* %4, i32 0, i32 0, !dbg !13377
  store i8** %3, i8*** %poin2, align 8, !dbg !13378
  %5 = load i8***, i8**** %ppoin.addr, align 8, !dbg !13379
  %6 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !13380
  %ppoin3 = getelementptr inbounds %struct.uiLink, %struct.uiLink* %6, i32 0, i32 1, !dbg !13381
  store i8*** %5, i8**** %ppoin3, align 8, !dbg !13382
  %7 = load i16*, i16** %tot.addr, align 8, !dbg !13383
  %8 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !13384
  %totlink = getelementptr inbounds %struct.uiLink, %struct.uiLink* %8, i32 0, i32 2, !dbg !13385
  store i16* %7, i16** %totlink, align 8, !dbg !13386
  %9 = load i32, i32* %from.addr, align 4, !dbg !13387
  %conv = trunc i32 %9 to i16, !dbg !13387
  %10 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !13388
  %fromcode = getelementptr inbounds %struct.uiLink, %struct.uiLink* %10, i32 0, i32 5, !dbg !13389
  store i16 %conv, i16* %fromcode, align 4, !dbg !13390
  %11 = load i32, i32* %to.addr, align 4, !dbg !13391
  %conv4 = trunc i32 %11 to i16, !dbg !13391
  %12 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !13392
  %tocode = getelementptr inbounds %struct.uiLink, %struct.uiLink* %12, i32 0, i32 6, !dbg !13393
  store i16 %conv4, i16* %tocode, align 2, !dbg !13394
  ret void, !dbg !13395
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @uiBlocksGetYMin(%struct.ListBase* %lb) #0 !dbg !13396 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %min = alloca i32, align 4
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !13399, metadata !DIExpression()), !dbg !13400
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !13401, metadata !DIExpression()), !dbg !13402
  call void @llvm.dbg.declare(metadata i32* %min, metadata !13403, metadata !DIExpression()), !dbg !13404
  store i32 0, i32* %min, align 4, !dbg !13404
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !13405
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !13407
  %1 = load i8*, i8** %first, align 8, !dbg !13407
  %2 = bitcast i8* %1 to %struct.uiBlock*, !dbg !13405
  store %struct.uiBlock* %2, %struct.uiBlock** %block, align 8, !dbg !13408
  br label %for.cond, !dbg !13409

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !13410
  %tobool = icmp ne %struct.uiBlock* %3, null, !dbg !13412
  br i1 %tobool, label %for.body, label %for.end, !dbg !13412

for.body:                                         ; preds = %for.cond
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !13413
  %5 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !13415
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %5, i32 0, i32 0, !dbg !13416
  %6 = load i8*, i8** %first1, align 8, !dbg !13416
  %7 = bitcast i8* %6 to %struct.uiBlock*, !dbg !13415
  %cmp = icmp eq %struct.uiBlock* %4, %7, !dbg !13417
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13418

lor.lhs.false:                                    ; preds = %for.body
  %8 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !13419
  %rect = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %8, i32 0, i32 11, !dbg !13420
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 2, !dbg !13421
  %9 = load float, float* %ymin, align 8, !dbg !13421
  %10 = load i32, i32* %min, align 4, !dbg !13422
  %conv = sitofp i32 %10 to float, !dbg !13422
  %cmp2 = fcmp olt float %9, %conv, !dbg !13423
  br i1 %cmp2, label %if.then, label %if.end, !dbg !13424

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %11 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !13425
  %rect4 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %11, i32 0, i32 11, !dbg !13426
  %ymin5 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect4, i32 0, i32 2, !dbg !13427
  %12 = load float, float* %ymin5, align 8, !dbg !13427
  %conv6 = fptosi float %12 to i32, !dbg !13425
  store i32 %conv6, i32* %min, align 4, !dbg !13428
  br label %if.end, !dbg !13429

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc, !dbg !13422

for.inc:                                          ; preds = %if.end
  %13 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !13430
  %next = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %13, i32 0, i32 0, !dbg !13431
  %14 = load %struct.uiBlock*, %struct.uiBlock** %next, align 8, !dbg !13431
  store %struct.uiBlock* %14, %struct.uiBlock** %block, align 8, !dbg !13432
  br label %for.cond, !dbg !13433, !llvm.loop !13434

for.end:                                          ; preds = %for.cond
  %15 = load i32, i32* %min, align 4, !dbg !13436
  ret i32 %15, !dbg !13437
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiBlockSetDirection(%struct.uiBlock* %block, i8 zeroext %direction) #0 !dbg !13438 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %direction.addr = alloca i8, align 1
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !13439, metadata !DIExpression()), !dbg !13440
  store i8 %direction, i8* %direction.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %direction.addr, metadata !13441, metadata !DIExpression()), !dbg !13442
  %0 = load i8, i8* %direction.addr, align 1, !dbg !13443
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13444
  %direction1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 29, !dbg !13445
  store i8 %0, i8* %direction1, align 2, !dbg !13446
  ret void, !dbg !13447
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiBlockFlipOrder(%struct.uiBlock* %block) #0 !dbg !13448 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %but = alloca %struct.uiBut*, align 8
  %centy = alloca float, align 4
  %miny = alloca float, align 4
  %maxy = alloca float, align 4
  %sw_ap = alloca float, align 4
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !13449, metadata !DIExpression()), !dbg !13450
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !13451, metadata !DIExpression()), !dbg !13452
  call void @llvm.dbg.declare(metadata float* %centy, metadata !13453, metadata !DIExpression()), !dbg !13454
  call void @llvm.dbg.declare(metadata float* %miny, metadata !13455, metadata !DIExpression()), !dbg !13456
  store float 1.000000e+04, float* %miny, align 4, !dbg !13456
  call void @llvm.dbg.declare(metadata float* %maxy, metadata !13457, metadata !DIExpression()), !dbg !13458
  store float -1.000000e+04, float* %maxy, align 4, !dbg !13458
  %0 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 22), align 4, !dbg !13459
  %and = and i32 %0, 8388608, !dbg !13461
  %tobool = icmp ne i32 %and, 0, !dbg !13461
  br i1 %tobool, label %if.then, label %if.else, !dbg !13462

if.then:                                          ; preds = %entry
  br label %for.end46, !dbg !13463

if.else:                                          ; preds = %entry
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13464
  %flag = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 27, !dbg !13466
  %2 = load i32, i32* %flag, align 8, !dbg !13466
  %and1 = and i32 %2, 2048, !dbg !13467
  %tobool2 = icmp ne i32 %and1, 0, !dbg !13467
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !13468

if.then3:                                         ; preds = %if.else
  br label %for.end46, !dbg !13469

if.end:                                           ; preds = %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13470
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %3, i32 0, i32 2, !dbg !13472
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 0, !dbg !13473
  %4 = load i8*, i8** %first, align 8, !dbg !13473
  %5 = bitcast i8* %4 to %struct.uiBut*, !dbg !13470
  store %struct.uiBut* %5, %struct.uiBut** %but, align 8, !dbg !13474
  br label %for.cond, !dbg !13475

for.cond:                                         ; preds = %for.inc, %if.end4
  %6 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13476
  %tobool5 = icmp ne %struct.uiBut* %6, null, !dbg !13478
  br i1 %tobool5, label %for.body, label %for.end, !dbg !13478

for.body:                                         ; preds = %for.cond
  %7 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13479
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %7, i32 0, i32 3, !dbg !13482
  %8 = load i32, i32* %drawflag, align 4, !dbg !13482
  %and6 = and i32 %8, 245760, !dbg !13483
  %tobool7 = icmp ne i32 %and6, 0, !dbg !13483
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !13484

if.then8:                                         ; preds = %for.body
  br label %for.end46, !dbg !13485

if.end9:                                          ; preds = %for.body
  %9 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13486
  %rect = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 18, !dbg !13488
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 2, !dbg !13489
  %10 = load float, float* %ymin, align 8, !dbg !13489
  %11 = load float, float* %miny, align 4, !dbg !13490
  %cmp = fcmp olt float %10, %11, !dbg !13491
  br i1 %cmp, label %if.then10, label %if.end13, !dbg !13492

if.then10:                                        ; preds = %if.end9
  %12 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13493
  %rect11 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 18, !dbg !13494
  %ymin12 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect11, i32 0, i32 2, !dbg !13495
  %13 = load float, float* %ymin12, align 8, !dbg !13495
  store float %13, float* %miny, align 4, !dbg !13496
  br label %if.end13, !dbg !13497

if.end13:                                         ; preds = %if.then10, %if.end9
  %14 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13498
  %rect14 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %14, i32 0, i32 18, !dbg !13500
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect14, i32 0, i32 3, !dbg !13501
  %15 = load float, float* %ymax, align 4, !dbg !13501
  %16 = load float, float* %maxy, align 4, !dbg !13502
  %cmp15 = fcmp ogt float %15, %16, !dbg !13503
  br i1 %cmp15, label %if.then16, label %if.end19, !dbg !13504

if.then16:                                        ; preds = %if.end13
  %17 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13505
  %rect17 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %17, i32 0, i32 18, !dbg !13506
  %ymax18 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect17, i32 0, i32 3, !dbg !13507
  %18 = load float, float* %ymax18, align 4, !dbg !13507
  store float %18, float* %maxy, align 4, !dbg !13508
  br label %if.end19, !dbg !13509

if.end19:                                         ; preds = %if.then16, %if.end13
  br label %for.inc, !dbg !13510

for.inc:                                          ; preds = %if.end19
  %19 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13511
  %next = getelementptr inbounds %struct.uiBut, %struct.uiBut* %19, i32 0, i32 0, !dbg !13512
  %20 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !13512
  store %struct.uiBut* %20, %struct.uiBut** %but, align 8, !dbg !13513
  br label %for.cond, !dbg !13514, !llvm.loop !13515

for.end:                                          ; preds = %for.cond
  %21 = load float, float* %miny, align 4, !dbg !13517
  %22 = load float, float* %maxy, align 4, !dbg !13518
  %add = fadd float %21, %22, !dbg !13519
  %div = fdiv float %add, 2.000000e+00, !dbg !13520
  store float %div, float* %centy, align 4, !dbg !13521
  %23 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13522
  %buttons20 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %23, i32 0, i32 2, !dbg !13524
  %first21 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons20, i32 0, i32 0, !dbg !13525
  %24 = load i8*, i8** %first21, align 8, !dbg !13525
  %25 = bitcast i8* %24 to %struct.uiBut*, !dbg !13522
  store %struct.uiBut* %25, %struct.uiBut** %but, align 8, !dbg !13526
  br label %for.cond22, !dbg !13527

for.cond22:                                       ; preds = %for.inc44, %for.end
  %26 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13528
  %tobool23 = icmp ne %struct.uiBut* %26, null, !dbg !13530
  br i1 %tobool23, label %for.body24, label %for.end46, !dbg !13530

for.body24:                                       ; preds = %for.cond22
  %27 = load float, float* %centy, align 4, !dbg !13531
  %28 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13533
  %rect25 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %28, i32 0, i32 18, !dbg !13534
  %ymin26 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect25, i32 0, i32 2, !dbg !13535
  %29 = load float, float* %ymin26, align 8, !dbg !13535
  %30 = load float, float* %centy, align 4, !dbg !13536
  %sub = fsub float %29, %30, !dbg !13537
  %sub27 = fsub float %27, %sub, !dbg !13538
  %31 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13539
  %rect28 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %31, i32 0, i32 18, !dbg !13540
  %ymin29 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect28, i32 0, i32 2, !dbg !13541
  store float %sub27, float* %ymin29, align 8, !dbg !13542
  %32 = load float, float* %centy, align 4, !dbg !13543
  %33 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13544
  %rect30 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %33, i32 0, i32 18, !dbg !13545
  %ymax31 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect30, i32 0, i32 3, !dbg !13546
  %34 = load float, float* %ymax31, align 4, !dbg !13546
  %35 = load float, float* %centy, align 4, !dbg !13547
  %sub32 = fsub float %34, %35, !dbg !13548
  %sub33 = fsub float %32, %sub32, !dbg !13549
  %36 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13550
  %rect34 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %36, i32 0, i32 18, !dbg !13551
  %ymax35 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect34, i32 0, i32 3, !dbg !13552
  store float %sub33, float* %ymax35, align 4, !dbg !13553
  call void @llvm.dbg.declare(metadata float* %sw_ap, metadata !13554, metadata !DIExpression()), !dbg !13556
  %37 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13556
  %rect36 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %37, i32 0, i32 18, !dbg !13556
  %ymin37 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect36, i32 0, i32 2, !dbg !13556
  %38 = load float, float* %ymin37, align 8, !dbg !13556
  store float %38, float* %sw_ap, align 4, !dbg !13556
  %39 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13556
  %rect38 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %39, i32 0, i32 18, !dbg !13556
  %ymax39 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect38, i32 0, i32 3, !dbg !13556
  %40 = load float, float* %ymax39, align 4, !dbg !13556
  %41 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13556
  %rect40 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %41, i32 0, i32 18, !dbg !13556
  %ymin41 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect40, i32 0, i32 2, !dbg !13556
  store float %40, float* %ymin41, align 8, !dbg !13556
  %42 = load float, float* %sw_ap, align 4, !dbg !13556
  %43 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13556
  %rect42 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %43, i32 0, i32 18, !dbg !13556
  %ymax43 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect42, i32 0, i32 3, !dbg !13556
  store float %42, float* %ymax43, align 4, !dbg !13556
  br label %for.inc44, !dbg !13557

for.inc44:                                        ; preds = %for.body24
  %44 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !13558
  %next45 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %44, i32 0, i32 0, !dbg !13559
  %45 = load %struct.uiBut*, %struct.uiBut** %next45, align 8, !dbg !13559
  store %struct.uiBut* %45, %struct.uiBut** %but, align 8, !dbg !13560
  br label %for.cond22, !dbg !13561, !llvm.loop !13562

for.end46:                                        ; preds = %if.then, %if.then3, %if.then8, %for.cond22
  ret void, !dbg !13564
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiBlockSetFlag(%struct.uiBlock* %block, i32 %flag) #0 !dbg !13565 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !13566, metadata !DIExpression()), !dbg !13567
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !13568, metadata !DIExpression()), !dbg !13569
  %0 = load i32, i32* %flag.addr, align 4, !dbg !13570
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13571
  %flag1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 27, !dbg !13572
  %2 = load i32, i32* %flag1, align 8, !dbg !13573
  %or = or i32 %2, %0, !dbg !13573
  store i32 %or, i32* %flag1, align 8, !dbg !13573
  ret void, !dbg !13574
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiBlockClearFlag(%struct.uiBlock* %block, i32 %flag) #0 !dbg !13575 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !13576, metadata !DIExpression()), !dbg !13577
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !13578, metadata !DIExpression()), !dbg !13579
  %0 = load i32, i32* %flag.addr, align 4, !dbg !13580
  %neg = xor i32 %0, -1, !dbg !13581
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13582
  %flag1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 27, !dbg !13583
  %2 = load i32, i32* %flag1, align 8, !dbg !13584
  %and = and i32 %2, %neg, !dbg !13584
  store i32 %and, i32* %flag1, align 8, !dbg !13584
  ret void, !dbg !13585
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiButSetFlag(%struct.uiBut* %but, i32 %flag) #0 !dbg !13586 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !13587, metadata !DIExpression()), !dbg !13588
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !13589, metadata !DIExpression()), !dbg !13590
  %0 = load i32, i32* %flag.addr, align 4, !dbg !13591
  %1 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13592
  %flag1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 2, !dbg !13593
  %2 = load i32, i32* %flag1, align 8, !dbg !13594
  %or = or i32 %2, %0, !dbg !13594
  store i32 %or, i32* %flag1, align 8, !dbg !13594
  ret void, !dbg !13595
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiButClearFlag(%struct.uiBut* %but, i32 %flag) #0 !dbg !13596 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !13597, metadata !DIExpression()), !dbg !13598
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !13599, metadata !DIExpression()), !dbg !13600
  %0 = load i32, i32* %flag.addr, align 4, !dbg !13601
  %neg = xor i32 %0, -1, !dbg !13602
  %1 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13603
  %flag1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 2, !dbg !13604
  %2 = load i32, i32* %flag1, align 8, !dbg !13605
  %and = and i32 %2, %neg, !dbg !13605
  store i32 %and, i32* %flag1, align 8, !dbg !13605
  ret void, !dbg !13606
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiButSetDrawFlag(%struct.uiBut* %but, i32 %flag) #0 !dbg !13607 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !13608, metadata !DIExpression()), !dbg !13609
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !13610, metadata !DIExpression()), !dbg !13611
  %0 = load i32, i32* %flag.addr, align 4, !dbg !13612
  %1 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13613
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 3, !dbg !13614
  %2 = load i32, i32* %drawflag, align 4, !dbg !13615
  %or = or i32 %2, %0, !dbg !13615
  store i32 %or, i32* %drawflag, align 4, !dbg !13615
  ret void, !dbg !13616
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiButClearDrawFlag(%struct.uiBut* %but, i32 %flag) #0 !dbg !13617 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !13618, metadata !DIExpression()), !dbg !13619
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !13620, metadata !DIExpression()), !dbg !13621
  %0 = load i32, i32* %flag.addr, align 4, !dbg !13622
  %neg = xor i32 %0, -1, !dbg !13623
  %1 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13624
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 3, !dbg !13625
  %2 = load i32, i32* %drawflag, align 4, !dbg !13626
  %and = and i32 %2, %neg, !dbg !13626
  store i32 %and, i32* %drawflag, align 4, !dbg !13626
  ret void, !dbg !13627
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiButSetMenuFromPulldown(%struct.uiBut* %but) #0 !dbg !13628 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !13629, metadata !DIExpression()), !dbg !13630
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13631
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 4, !dbg !13632
  store i32 5632, i32* %type, align 8, !dbg !13633
  %1 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13634
  call void @uiButClearDrawFlag(%struct.uiBut* %1, i32 8), !dbg !13635
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13636
  call void @uiButSetDrawFlag(%struct.uiBut* %2, i32 2), !dbg !13637
  ret void, !dbg !13638
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @uiButGetRetVal(%struct.uiBut* %but) #0 !dbg !13639 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !13640, metadata !DIExpression()), !dbg !13641
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13642
  %retval1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 8, !dbg !13643
  %1 = load i16, i16* %retval1, align 4, !dbg !13643
  %conv = sext i16 %1 to i32, !dbg !13642
  ret i32 %conv, !dbg !13644
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiButSetDragID(%struct.uiBut* %but, %struct.ID* %id) #0 !dbg !13645 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %id.addr = alloca %struct.ID*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !13648, metadata !DIExpression()), !dbg !13649
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !13650, metadata !DIExpression()), !dbg !13651
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13652
  %dragtype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 63, !dbg !13653
  store i8 0, i8* %dragtype, align 1, !dbg !13654
  %1 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !13655
  %2 = bitcast %struct.ID* %1 to i8*, !dbg !13656
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13657
  %dragpoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 64, !dbg !13658
  store i8* %2, i8** %dragpoin, align 8, !dbg !13659
  ret void, !dbg !13660
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiButSetDragRNA(%struct.uiBut* %but, %struct.PointerRNA* %ptr) #0 !dbg !13661 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !13664, metadata !DIExpression()), !dbg !13665
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !13666, metadata !DIExpression()), !dbg !13667
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13668
  %dragtype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 63, !dbg !13669
  store i8 1, i8* %dragtype, align 1, !dbg !13670
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !13671
  %2 = bitcast %struct.PointerRNA* %1 to i8*, !dbg !13672
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13673
  %dragpoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 64, !dbg !13674
  store i8* %2, i8** %dragpoin, align 8, !dbg !13675
  ret void, !dbg !13676
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiButSetDragPath(%struct.uiBut* %but, i8* %path) #0 !dbg !13677 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %path.addr = alloca i8*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !13680, metadata !DIExpression()), !dbg !13681
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !13682, metadata !DIExpression()), !dbg !13683
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13684
  %dragtype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 63, !dbg !13685
  store i8 2, i8* %dragtype, align 1, !dbg !13686
  %1 = load i8*, i8** %path.addr, align 8, !dbg !13687
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13688
  %dragpoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 64, !dbg !13689
  store i8* %1, i8** %dragpoin, align 8, !dbg !13690
  ret void, !dbg !13691
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiButSetDragName(%struct.uiBut* %but, i8* %name) #0 !dbg !13692 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %name.addr = alloca i8*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !13693, metadata !DIExpression()), !dbg !13694
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13695, metadata !DIExpression()), !dbg !13696
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13697
  %dragtype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 63, !dbg !13698
  store i8 3, i8* %dragtype, align 1, !dbg !13699
  %1 = load i8*, i8** %name.addr, align 8, !dbg !13700
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13701
  %dragpoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 64, !dbg !13702
  store i8* %1, i8** %dragpoin, align 8, !dbg !13703
  ret void, !dbg !13704
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiButSetDragValue(%struct.uiBut* %but) #0 !dbg !13705 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !13706, metadata !DIExpression()), !dbg !13707
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13708
  %dragtype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 63, !dbg !13709
  store i8 4, i8* %dragtype, align 1, !dbg !13710
  ret void, !dbg !13711
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiButSetDragImage(%struct.uiBut* %but, i8* %path, i32 %icon, %struct.ImBuf* %imb, float %scale) #0 !dbg !13712 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %path.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %imb.addr = alloca %struct.ImBuf*, align 8
  %scale.addr = alloca float, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !13715, metadata !DIExpression()), !dbg !13716
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !13717, metadata !DIExpression()), !dbg !13718
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !13719, metadata !DIExpression()), !dbg !13720
  store %struct.ImBuf* %imb, %struct.ImBuf** %imb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %imb.addr, metadata !13721, metadata !DIExpression()), !dbg !13722
  store float %scale, float* %scale.addr, align 4
  call void @llvm.dbg.declare(metadata float* %scale.addr, metadata !13723, metadata !DIExpression()), !dbg !13724
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13725
  %dragtype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 63, !dbg !13726
  store i8 2, i8* %dragtype, align 1, !dbg !13727
  %1 = load i32, i32* %icon.addr, align 4, !dbg !13728
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13729
  %icon1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 44, !dbg !13730
  store i32 %1, i32* %icon1, align 8, !dbg !13731
  %3 = load i8*, i8** %path.addr, align 8, !dbg !13732
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13733
  %dragpoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 64, !dbg !13734
  store i8* %3, i8** %dragpoin, align 8, !dbg !13735
  %5 = load %struct.ImBuf*, %struct.ImBuf** %imb.addr, align 8, !dbg !13736
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13737
  %imb2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 65, !dbg !13738
  store %struct.ImBuf* %5, %struct.ImBuf** %imb2, align 8, !dbg !13739
  %7 = load float, float* %scale.addr, align 4, !dbg !13740
  %8 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13741
  %imb_scale = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 66, !dbg !13742
  store float %7, float* %imb_scale, align 8, !dbg !13743
  ret void, !dbg !13744
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.PointerRNA* @uiButGetOperatorPtrRNA(%struct.uiBut* %but) #0 !dbg !13745 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !13748, metadata !DIExpression()), !dbg !13749
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13750
  %optype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 59, !dbg !13752
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %optype, align 8, !dbg !13752
  %tobool = icmp ne %struct.wmOperatorType* %1, null, !dbg !13750
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !13753

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13754
  %opptr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 60, !dbg !13755
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %opptr, align 8, !dbg !13755
  %tobool1 = icmp ne %struct.PointerRNA* %3, null, !dbg !13754
  br i1 %tobool1, label %if.end, label %if.then, !dbg !13756

if.then:                                          ; preds = %land.lhs.true
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !13757
  %call = call i8* %4(i64 24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0)), !dbg !13757
  %5 = bitcast i8* %call to %struct.PointerRNA*, !dbg !13757
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13759
  %opptr2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 60, !dbg !13760
  store %struct.PointerRNA* %5, %struct.PointerRNA** %opptr2, align 8, !dbg !13761
  %7 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13762
  %opptr3 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %7, i32 0, i32 60, !dbg !13763
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %opptr3, align 8, !dbg !13763
  %9 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13764
  %optype4 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 59, !dbg !13765
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %optype4, align 8, !dbg !13765
  call void @WM_operator_properties_create_ptr(%struct.PointerRNA* %8, %struct.wmOperatorType* %10), !dbg !13766
  br label %if.end, !dbg !13767

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %11 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13768
  %opptr5 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %11, i32 0, i32 60, !dbg !13769
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %opptr5, align 8, !dbg !13769
  ret %struct.PointerRNA* %12, !dbg !13770
}

declare dso_local void @WM_operator_properties_create_ptr(%struct.PointerRNA*, %struct.wmOperatorType*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiButSetUnitType(%struct.uiBut* %but, i32 %unit_type) #0 !dbg !13771 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %unit_type.addr = alloca i32, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !13774, metadata !DIExpression()), !dbg !13775
  store i32 %unit_type, i32* %unit_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %unit_type.addr, metadata !13776, metadata !DIExpression()), !dbg !13777
  %0 = load i32, i32* %unit_type.addr, align 4, !dbg !13778
  %shr = ashr i32 %0, 16, !dbg !13778
  %conv = trunc i32 %shr to i8, !dbg !13779
  %1 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13780
  %unit_type1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 49, !dbg !13781
  store i8 %conv, i8* %unit_type1, align 8, !dbg !13782
  ret void, !dbg !13783
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiBlockSetHandleFunc(%struct.uiBlock* %block, void (%struct.bContext*, i8*, i32)* %func, i8* %arg) #0 !dbg !13784 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %func.addr = alloca void (%struct.bContext*, i8*, i32)*, align 8
  %arg.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !13787, metadata !DIExpression()), !dbg !13788
  store void (%struct.bContext*, i8*, i32)* %func, void (%struct.bContext*, i8*, i32)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bContext*, i8*, i32)** %func.addr, metadata !13789, metadata !DIExpression()), !dbg !13790
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !13791, metadata !DIExpression()), !dbg !13792
  %0 = load void (%struct.bContext*, i8*, i32)*, void (%struct.bContext*, i8*, i32)** %func.addr, align 8, !dbg !13793
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13794
  %handle_func = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 21, !dbg !13795
  store void (%struct.bContext*, i8*, i32)* %0, void (%struct.bContext*, i8*, i32)** %handle_func, align 8, !dbg !13796
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !13797
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13798
  %handle_func_arg = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %3, i32 0, i32 22, !dbg !13799
  store i8* %2, i8** %handle_func_arg, align 8, !dbg !13800
  ret void, !dbg !13801
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiBlockSetButmFunc(%struct.uiBlock* %block, void (%struct.bContext*, i8*, i32)* %func, i8* %arg) #0 !dbg !13802 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %func.addr = alloca void (%struct.bContext*, i8*, i32)*, align 8
  %arg.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !13805, metadata !DIExpression()), !dbg !13806
  store void (%struct.bContext*, i8*, i32)* %func, void (%struct.bContext*, i8*, i32)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bContext*, i8*, i32)** %func.addr, metadata !13807, metadata !DIExpression()), !dbg !13808
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !13809, metadata !DIExpression()), !dbg !13810
  %0 = load void (%struct.bContext*, i8*, i32)*, void (%struct.bContext*, i8*, i32)** %func.addr, align 8, !dbg !13811
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13812
  %butm_func = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 19, !dbg !13813
  store void (%struct.bContext*, i8*, i32)* %0, void (%struct.bContext*, i8*, i32)** %butm_func, align 8, !dbg !13814
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !13815
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13816
  %butm_func_arg = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %3, i32 0, i32 20, !dbg !13817
  store i8* %2, i8** %butm_func_arg, align 8, !dbg !13818
  ret void, !dbg !13819
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiBlockSetFunc(%struct.uiBlock* %block, void (%struct.bContext*, i8*, i8*)* %func, i8* %arg1, i8* %arg2) #0 !dbg !13820 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %func.addr = alloca void (%struct.bContext*, i8*, i8*)*, align 8
  %arg1.addr = alloca i8*, align 8
  %arg2.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !13823, metadata !DIExpression()), !dbg !13824
  store void (%struct.bContext*, i8*, i8*)* %func, void (%struct.bContext*, i8*, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bContext*, i8*, i8*)** %func.addr, metadata !13825, metadata !DIExpression()), !dbg !13826
  store i8* %arg1, i8** %arg1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg1.addr, metadata !13827, metadata !DIExpression()), !dbg !13828
  store i8* %arg2, i8** %arg2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg2.addr, metadata !13829, metadata !DIExpression()), !dbg !13830
  %0 = load void (%struct.bContext*, i8*, i8*)*, void (%struct.bContext*, i8*, i8*)** %func.addr, align 8, !dbg !13831
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13832
  %func1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 14, !dbg !13833
  store void (%struct.bContext*, i8*, i8*)* %0, void (%struct.bContext*, i8*, i8*)** %func1, align 8, !dbg !13834
  %2 = load i8*, i8** %arg1.addr, align 8, !dbg !13835
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13836
  %func_arg1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %3, i32 0, i32 15, !dbg !13837
  store i8* %2, i8** %func_arg1, align 8, !dbg !13838
  %4 = load i8*, i8** %arg2.addr, align 8, !dbg !13839
  %5 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13840
  %func_arg2 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %5, i32 0, i32 16, !dbg !13841
  store i8* %4, i8** %func_arg2, align 8, !dbg !13842
  ret void, !dbg !13843
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiBlockSetNFunc(%struct.uiBlock* %block, void (%struct.bContext*, i8*, i8*)* %funcN, i8* %argN, i8* %arg2) #0 !dbg !13844 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %funcN.addr = alloca void (%struct.bContext*, i8*, i8*)*, align 8
  %argN.addr = alloca i8*, align 8
  %arg2.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !13847, metadata !DIExpression()), !dbg !13848
  store void (%struct.bContext*, i8*, i8*)* %funcN, void (%struct.bContext*, i8*, i8*)** %funcN.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bContext*, i8*, i8*)** %funcN.addr, metadata !13849, metadata !DIExpression()), !dbg !13850
  store i8* %argN, i8** %argN.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %argN.addr, metadata !13851, metadata !DIExpression()), !dbg !13852
  store i8* %arg2, i8** %arg2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg2.addr, metadata !13853, metadata !DIExpression()), !dbg !13854
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13855
  %func_argN = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 18, !dbg !13857
  %1 = load i8*, i8** %func_argN, align 8, !dbg !13857
  %tobool = icmp ne i8* %1, null, !dbg !13855
  br i1 %tobool, label %if.then, label %if.end, !dbg !13858

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13859
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13861
  %func_argN1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %3, i32 0, i32 18, !dbg !13862
  %4 = load i8*, i8** %func_argN1, align 8, !dbg !13862
  call void %2(i8* %4), !dbg !13859
  br label %if.end, !dbg !13863

if.end:                                           ; preds = %if.then, %entry
  %5 = load void (%struct.bContext*, i8*, i8*)*, void (%struct.bContext*, i8*, i8*)** %funcN.addr, align 8, !dbg !13864
  %6 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13865
  %funcN2 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %6, i32 0, i32 17, !dbg !13866
  store void (%struct.bContext*, i8*, i8*)* %5, void (%struct.bContext*, i8*, i8*)** %funcN2, align 8, !dbg !13867
  %7 = load i8*, i8** %argN.addr, align 8, !dbg !13868
  %8 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13869
  %func_argN3 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %8, i32 0, i32 18, !dbg !13870
  store i8* %7, i8** %func_argN3, align 8, !dbg !13871
  %9 = load i8*, i8** %arg2.addr, align 8, !dbg !13872
  %10 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13873
  %func_arg2 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %10, i32 0, i32 16, !dbg !13874
  store i8* %9, i8** %func_arg2, align 8, !dbg !13875
  ret void, !dbg !13876
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiButSetRenameFunc(%struct.uiBut* %but, void (%struct.bContext*, i8*, i8*)* %func, i8* %arg1) #0 !dbg !13877 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %func.addr = alloca void (%struct.bContext*, i8*, i8*)*, align 8
  %arg1.addr = alloca i8*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !13880, metadata !DIExpression()), !dbg !13881
  store void (%struct.bContext*, i8*, i8*)* %func, void (%struct.bContext*, i8*, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bContext*, i8*, i8*)** %func.addr, metadata !13882, metadata !DIExpression()), !dbg !13883
  store i8* %arg1, i8** %arg1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg1.addr, metadata !13884, metadata !DIExpression()), !dbg !13885
  %0 = load void (%struct.bContext*, i8*, i8*)*, void (%struct.bContext*, i8*, i8*)** %func.addr, align 8, !dbg !13886
  %1 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13887
  %rename_func = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 37, !dbg !13888
  store void (%struct.bContext*, i8*, i8*)* %0, void (%struct.bContext*, i8*, i8*)** %rename_func, align 8, !dbg !13889
  %2 = load i8*, i8** %arg1.addr, align 8, !dbg !13890
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13891
  %rename_arg1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 38, !dbg !13892
  store i8* %2, i8** %rename_arg1, align 8, !dbg !13893
  ret void, !dbg !13894
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiBlockSetDrawExtraFunc(%struct.uiBlock* %block, void (%struct.bContext*, i8*, i8*, i8*, %struct.rcti*)* %func, i8* %arg1, i8* %arg2) #0 !dbg !13895 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %func.addr = alloca void (%struct.bContext*, i8*, i8*, i8*, %struct.rcti*)*, align 8
  %arg1.addr = alloca i8*, align 8
  %arg2.addr = alloca i8*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !13901, metadata !DIExpression()), !dbg !13902
  store void (%struct.bContext*, i8*, i8*, i8*, %struct.rcti*)* %func, void (%struct.bContext*, i8*, i8*, i8*, %struct.rcti*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bContext*, i8*, i8*, i8*, %struct.rcti*)** %func.addr, metadata !13903, metadata !DIExpression()), !dbg !13904
  store i8* %arg1, i8** %arg1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg1.addr, metadata !13905, metadata !DIExpression()), !dbg !13906
  store i8* %arg2, i8** %arg2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg2.addr, metadata !13907, metadata !DIExpression()), !dbg !13908
  %0 = load void (%struct.bContext*, i8*, i8*, i8*, %struct.rcti*)*, void (%struct.bContext*, i8*, i8*, i8*, %struct.rcti*)** %func.addr, align 8, !dbg !13909
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13910
  %drawextra = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 24, !dbg !13911
  store void (%struct.bContext*, i8*, i8*, i8*, %struct.rcti*)* %0, void (%struct.bContext*, i8*, i8*, i8*, %struct.rcti*)** %drawextra, align 8, !dbg !13912
  %2 = load i8*, i8** %arg1.addr, align 8, !dbg !13913
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13914
  %drawextra_arg1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %3, i32 0, i32 25, !dbg !13915
  store i8* %2, i8** %drawextra_arg1, align 8, !dbg !13916
  %4 = load i8*, i8** %arg2.addr, align 8, !dbg !13917
  %5 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !13918
  %drawextra_arg2 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %5, i32 0, i32 26, !dbg !13919
  store i8* %4, i8** %drawextra_arg2, align 8, !dbg !13920
  ret void, !dbg !13921
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiButSetFunc(%struct.uiBut* %but, void (%struct.bContext*, i8*, i8*)* %func, i8* %arg1, i8* %arg2) #0 !dbg !13922 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %func.addr = alloca void (%struct.bContext*, i8*, i8*)*, align 8
  %arg1.addr = alloca i8*, align 8
  %arg2.addr = alloca i8*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !13925, metadata !DIExpression()), !dbg !13926
  store void (%struct.bContext*, i8*, i8*)* %func, void (%struct.bContext*, i8*, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bContext*, i8*, i8*)** %func.addr, metadata !13927, metadata !DIExpression()), !dbg !13928
  store i8* %arg1, i8** %arg1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg1.addr, metadata !13929, metadata !DIExpression()), !dbg !13930
  store i8* %arg2, i8** %arg2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg2.addr, metadata !13931, metadata !DIExpression()), !dbg !13932
  %0 = load void (%struct.bContext*, i8*, i8*)*, void (%struct.bContext*, i8*, i8*)** %func.addr, align 8, !dbg !13933
  %1 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13934
  %func1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 27, !dbg !13935
  store void (%struct.bContext*, i8*, i8*)* %0, void (%struct.bContext*, i8*, i8*)** %func1, align 8, !dbg !13936
  %2 = load i8*, i8** %arg1.addr, align 8, !dbg !13937
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13938
  %func_arg1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 28, !dbg !13939
  store i8* %2, i8** %func_arg1, align 8, !dbg !13940
  %4 = load i8*, i8** %arg2.addr, align 8, !dbg !13941
  %5 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13942
  %func_arg2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 29, !dbg !13943
  store i8* %4, i8** %func_arg2, align 8, !dbg !13944
  ret void, !dbg !13945
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiButSetNFunc(%struct.uiBut* %but, void (%struct.bContext*, i8*, i8*)* %funcN, i8* %argN, i8* %arg2) #0 !dbg !13946 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %funcN.addr = alloca void (%struct.bContext*, i8*, i8*)*, align 8
  %argN.addr = alloca i8*, align 8
  %arg2.addr = alloca i8*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !13949, metadata !DIExpression()), !dbg !13950
  store void (%struct.bContext*, i8*, i8*)* %funcN, void (%struct.bContext*, i8*, i8*)** %funcN.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bContext*, i8*, i8*)** %funcN.addr, metadata !13951, metadata !DIExpression()), !dbg !13952
  store i8* %argN, i8** %argN.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %argN.addr, metadata !13953, metadata !DIExpression()), !dbg !13954
  store i8* %arg2, i8** %arg2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg2.addr, metadata !13955, metadata !DIExpression()), !dbg !13956
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13957
  %func_argN = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 31, !dbg !13959
  %1 = load i8*, i8** %func_argN, align 8, !dbg !13959
  %tobool = icmp ne i8* %1, null, !dbg !13957
  br i1 %tobool, label %if.then, label %if.end, !dbg !13960

if.then:                                          ; preds = %entry
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13961
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13963
  %func_argN1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 31, !dbg !13964
  %4 = load i8*, i8** %func_argN1, align 8, !dbg !13964
  call void %2(i8* %4), !dbg !13961
  br label %if.end, !dbg !13965

if.end:                                           ; preds = %if.then, %entry
  %5 = load void (%struct.bContext*, i8*, i8*)*, void (%struct.bContext*, i8*, i8*)** %funcN.addr, align 8, !dbg !13966
  %6 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13967
  %funcN2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 30, !dbg !13968
  store void (%struct.bContext*, i8*, i8*)* %5, void (%struct.bContext*, i8*, i8*)** %funcN2, align 8, !dbg !13969
  %7 = load i8*, i8** %argN.addr, align 8, !dbg !13970
  %8 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13971
  %func_argN3 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 31, !dbg !13972
  store i8* %7, i8** %func_argN3, align 8, !dbg !13973
  %9 = load i8*, i8** %arg2.addr, align 8, !dbg !13974
  %10 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13975
  %func_arg2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 29, !dbg !13976
  store i8* %9, i8** %func_arg2, align 8, !dbg !13977
  ret void, !dbg !13978
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiButSetCompleteFunc(%struct.uiBut* %but, i32 (%struct.bContext*, i8*, i8*)* %func, i8* %arg) #0 !dbg !13979 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %func.addr = alloca i32 (%struct.bContext*, i8*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !13982, metadata !DIExpression()), !dbg !13983
  store i32 (%struct.bContext*, i8*, i8*)* %func, i32 (%struct.bContext*, i8*, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.bContext*, i8*, i8*)** %func.addr, metadata !13984, metadata !DIExpression()), !dbg !13985
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !13986, metadata !DIExpression()), !dbg !13987
  %0 = load i32 (%struct.bContext*, i8*, i8*)*, i32 (%struct.bContext*, i8*, i8*)** %func.addr, align 8, !dbg !13988
  %1 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13989
  %autocomplete_func = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 33, !dbg !13990
  store i32 (%struct.bContext*, i8*, i8*)* %0, i32 (%struct.bContext*, i8*, i8*)** %autocomplete_func, align 8, !dbg !13991
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !13992
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !13993
  %autofunc_arg = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 34, !dbg !13994
  store i8* %2, i8** %autofunc_arg, align 8, !dbg !13995
  ret void, !dbg !13996
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefBlockBut(%struct.uiBlock* %block, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* %func, i8* %arg, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %tip) #0 !dbg !13997 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %func.addr = alloca %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !14000, metadata !DIExpression()), !dbg !14001
  store %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* %func, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)** %func.addr, metadata !14002, metadata !DIExpression()), !dbg !14003
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14004, metadata !DIExpression()), !dbg !14005
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !14006, metadata !DIExpression()), !dbg !14007
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !14008, metadata !DIExpression()), !dbg !14009
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !14010, metadata !DIExpression()), !dbg !14011
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !14012, metadata !DIExpression()), !dbg !14013
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !14014, metadata !DIExpression()), !dbg !14015
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !14016, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !14018, metadata !DIExpression()), !dbg !14019
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !14020
  %1 = load i8*, i8** %str.addr, align 8, !dbg !14021
  %2 = load i32, i32* %x.addr, align 4, !dbg !14022
  %3 = load i32, i32* %y.addr, align 4, !dbg !14023
  %4 = load i16, i16* %width.addr, align 2, !dbg !14024
  %5 = load i16, i16* %height.addr, align 2, !dbg !14025
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !14026
  %7 = load i8*, i8** %tip.addr, align 8, !dbg !14027
  %call = call %struct.uiBut* @ui_def_but(%struct.uiBlock* %0, i32 9728, i32 0, i8* %1, i32 %2, i32 %3, i16 signext %4, i16 signext %5, i8* %6, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* %7), !dbg !14028
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !14019
  %8 = load %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)*, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)** %func.addr, align 8, !dbg !14029
  %9 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14030
  %block_create_func = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 52, !dbg !14031
  store %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* %8, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)** %block_create_func, align 8, !dbg !14032
  %10 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14033
  call void @ui_check_but(%struct.uiBut* %10), !dbg !14034
  %11 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14035
  ret %struct.uiBut* %11, !dbg !14036
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefBlockButN(%struct.uiBlock* %block, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* %func, i8* %argN, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %tip) #0 !dbg !14037 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %func.addr = alloca %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)*, align 8
  %argN.addr = alloca i8*, align 8
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !14038, metadata !DIExpression()), !dbg !14039
  store %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* %func, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)** %func.addr, metadata !14040, metadata !DIExpression()), !dbg !14041
  store i8* %argN, i8** %argN.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %argN.addr, metadata !14042, metadata !DIExpression()), !dbg !14043
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !14044, metadata !DIExpression()), !dbg !14045
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !14046, metadata !DIExpression()), !dbg !14047
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !14048, metadata !DIExpression()), !dbg !14049
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !14050, metadata !DIExpression()), !dbg !14051
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !14052, metadata !DIExpression()), !dbg !14053
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !14054, metadata !DIExpression()), !dbg !14055
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !14056, metadata !DIExpression()), !dbg !14057
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !14058
  %1 = load i8*, i8** %str.addr, align 8, !dbg !14059
  %2 = load i32, i32* %x.addr, align 4, !dbg !14060
  %3 = load i32, i32* %y.addr, align 4, !dbg !14061
  %4 = load i16, i16* %width.addr, align 2, !dbg !14062
  %5 = load i16, i16* %height.addr, align 2, !dbg !14063
  %6 = load i8*, i8** %tip.addr, align 8, !dbg !14064
  %call = call %struct.uiBut* @ui_def_but(%struct.uiBlock* %0, i32 9728, i32 0, i8* %1, i32 %2, i32 %3, i16 signext %4, i16 signext %5, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* %6), !dbg !14065
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !14057
  %7 = load %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)*, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)** %func.addr, align 8, !dbg !14066
  %8 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14067
  %block_create_func = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 52, !dbg !14068
  store %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* %7, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)** %block_create_func, align 8, !dbg !14069
  %9 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14070
  %func_argN = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 31, !dbg !14072
  %10 = load i8*, i8** %func_argN, align 8, !dbg !14072
  %tobool = icmp ne i8* %10, null, !dbg !14070
  br i1 %tobool, label %if.then, label %if.end, !dbg !14073

if.then:                                          ; preds = %entry
  %11 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14074
  %12 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14076
  %func_argN1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 31, !dbg !14077
  %13 = load i8*, i8** %func_argN1, align 8, !dbg !14077
  call void %11(i8* %13), !dbg !14074
  br label %if.end, !dbg !14078

if.end:                                           ; preds = %if.then, %entry
  %14 = load i8*, i8** %argN.addr, align 8, !dbg !14079
  %15 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14080
  %func_argN2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 31, !dbg !14081
  store i8* %14, i8** %func_argN2, align 8, !dbg !14082
  %16 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14083
  call void @ui_check_but(%struct.uiBut* %16), !dbg !14084
  %17 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14085
  ret %struct.uiBut* %17, !dbg !14086
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefPulldownBut(%struct.uiBlock* %block, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* %func, i8* %arg, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %tip) #0 !dbg !14087 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %func.addr = alloca %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !14088, metadata !DIExpression()), !dbg !14089
  store %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* %func, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)** %func.addr, metadata !14090, metadata !DIExpression()), !dbg !14091
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14092, metadata !DIExpression()), !dbg !14093
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !14094, metadata !DIExpression()), !dbg !14095
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !14096, metadata !DIExpression()), !dbg !14097
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !14098, metadata !DIExpression()), !dbg !14099
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !14100, metadata !DIExpression()), !dbg !14101
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !14102, metadata !DIExpression()), !dbg !14103
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !14104, metadata !DIExpression()), !dbg !14105
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !14106, metadata !DIExpression()), !dbg !14107
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !14108
  %1 = load i8*, i8** %str.addr, align 8, !dbg !14109
  %2 = load i32, i32* %x.addr, align 4, !dbg !14110
  %3 = load i32, i32* %y.addr, align 4, !dbg !14111
  %4 = load i16, i16* %width.addr, align 2, !dbg !14112
  %5 = load i16, i16* %height.addr, align 2, !dbg !14113
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !14114
  %7 = load i8*, i8** %tip.addr, align 8, !dbg !14115
  %call = call %struct.uiBut* @ui_def_but(%struct.uiBlock* %0, i32 13824, i32 0, i8* %1, i32 %2, i32 %3, i16 signext %4, i16 signext %5, i8* %6, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* %7), !dbg !14116
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !14107
  %8 = load %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)*, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)** %func.addr, align 8, !dbg !14117
  %9 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14118
  %block_create_func = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 52, !dbg !14119
  store %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* %8, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)** %block_create_func, align 8, !dbg !14120
  %10 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14121
  call void @ui_check_but(%struct.uiBut* %10), !dbg !14122
  %11 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14123
  ret %struct.uiBut* %11, !dbg !14124
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefMenuBut(%struct.uiBlock* %block, void (%struct.bContext*, %struct.uiLayout*, i8*)* %func, i8* %arg, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %tip) #0 !dbg !14125 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %func.addr = alloca void (%struct.bContext*, %struct.uiLayout*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !14128, metadata !DIExpression()), !dbg !14129
  store void (%struct.bContext*, %struct.uiLayout*, i8*)* %func, void (%struct.bContext*, %struct.uiLayout*, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bContext*, %struct.uiLayout*, i8*)** %func.addr, metadata !14130, metadata !DIExpression()), !dbg !14131
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14132, metadata !DIExpression()), !dbg !14133
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !14134, metadata !DIExpression()), !dbg !14135
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !14136, metadata !DIExpression()), !dbg !14137
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !14138, metadata !DIExpression()), !dbg !14139
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !14140, metadata !DIExpression()), !dbg !14141
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !14142, metadata !DIExpression()), !dbg !14143
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !14144, metadata !DIExpression()), !dbg !14145
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !14146, metadata !DIExpression()), !dbg !14147
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !14148
  %1 = load i8*, i8** %str.addr, align 8, !dbg !14149
  %2 = load i32, i32* %x.addr, align 4, !dbg !14150
  %3 = load i32, i32* %y.addr, align 4, !dbg !14151
  %4 = load i16, i16* %width.addr, align 2, !dbg !14152
  %5 = load i16, i16* %height.addr, align 2, !dbg !14153
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !14154
  %7 = load i8*, i8** %tip.addr, align 8, !dbg !14155
  %call = call %struct.uiBut* @ui_def_but(%struct.uiBlock* %0, i32 13824, i32 0, i8* %1, i32 %2, i32 %3, i16 signext %4, i16 signext %5, i8* %6, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* %7), !dbg !14156
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !14147
  %8 = load void (%struct.bContext*, %struct.uiLayout*, i8*)*, void (%struct.bContext*, %struct.uiLayout*, i8*)** %func.addr, align 8, !dbg !14157
  %9 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14158
  %menu_create_func = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 53, !dbg !14159
  store void (%struct.bContext*, %struct.uiLayout*, i8*)* %8, void (%struct.bContext*, %struct.uiLayout*, i8*)** %menu_create_func, align 8, !dbg !14160
  %10 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14161
  call void @ui_check_but(%struct.uiBut* %10), !dbg !14162
  %11 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14163
  ret %struct.uiBut* %11, !dbg !14164
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconTextMenuBut(%struct.uiBlock* %block, void (%struct.bContext*, %struct.uiLayout*, i8*)* %func, i8* %arg, i32 %icon, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %tip) #0 !dbg !14165 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %func.addr = alloca void (%struct.bContext*, %struct.uiLayout*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !14168, metadata !DIExpression()), !dbg !14169
  store void (%struct.bContext*, %struct.uiLayout*, i8*)* %func, void (%struct.bContext*, %struct.uiLayout*, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bContext*, %struct.uiLayout*, i8*)** %func.addr, metadata !14170, metadata !DIExpression()), !dbg !14171
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14172, metadata !DIExpression()), !dbg !14173
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !14174, metadata !DIExpression()), !dbg !14175
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !14176, metadata !DIExpression()), !dbg !14177
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !14178, metadata !DIExpression()), !dbg !14179
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !14180, metadata !DIExpression()), !dbg !14181
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !14182, metadata !DIExpression()), !dbg !14183
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !14184, metadata !DIExpression()), !dbg !14185
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !14186, metadata !DIExpression()), !dbg !14187
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !14188, metadata !DIExpression()), !dbg !14189
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !14190
  %1 = load i8*, i8** %str.addr, align 8, !dbg !14191
  %2 = load i32, i32* %x.addr, align 4, !dbg !14192
  %3 = load i32, i32* %y.addr, align 4, !dbg !14193
  %4 = load i16, i16* %width.addr, align 2, !dbg !14194
  %5 = load i16, i16* %height.addr, align 2, !dbg !14195
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !14196
  %7 = load i8*, i8** %tip.addr, align 8, !dbg !14197
  %call = call %struct.uiBut* @ui_def_but(%struct.uiBlock* %0, i32 13824, i32 0, i8* %1, i32 %2, i32 %3, i16 signext %4, i16 signext %5, i8* %6, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* %7), !dbg !14198
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !14189
  %8 = load i32, i32* %icon.addr, align 4, !dbg !14199
  %9 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14200
  %icon1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 44, !dbg !14201
  store i32 %8, i32* %icon1, align 8, !dbg !14202
  %10 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14203
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 2, !dbg !14204
  %11 = load i32, i32* %flag, align 8, !dbg !14205
  %or = or i32 %11, 8, !dbg !14205
  store i32 %or, i32* %flag, align 8, !dbg !14205
  %12 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14206
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 3, !dbg !14207
  %13 = load i32, i32* %drawflag, align 4, !dbg !14208
  %or2 = or i32 %13, 4, !dbg !14208
  store i32 %or2, i32* %drawflag, align 4, !dbg !14208
  %14 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14209
  %flag3 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %14, i32 0, i32 2, !dbg !14210
  %15 = load i32, i32* %flag3, align 8, !dbg !14211
  %or4 = or i32 %15, 64, !dbg !14211
  store i32 %or4, i32* %flag3, align 8, !dbg !14211
  %16 = load void (%struct.bContext*, %struct.uiLayout*, i8*)*, void (%struct.bContext*, %struct.uiLayout*, i8*)** %func.addr, align 8, !dbg !14212
  %17 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14213
  %menu_create_func = getelementptr inbounds %struct.uiBut, %struct.uiBut* %17, i32 0, i32 53, !dbg !14214
  store void (%struct.bContext*, %struct.uiLayout*, i8*)* %16, void (%struct.bContext*, %struct.uiLayout*, i8*)** %menu_create_func, align 8, !dbg !14215
  %18 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14216
  call void @ui_check_but(%struct.uiBut* %18), !dbg !14217
  %19 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14218
  ret %struct.uiBut* %19, !dbg !14219
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconMenuBut(%struct.uiBlock* %block, void (%struct.bContext*, %struct.uiLayout*, i8*)* %func, i8* %arg, i32 %icon, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %tip) #0 !dbg !14220 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %func.addr = alloca void (%struct.bContext*, %struct.uiLayout*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !14223, metadata !DIExpression()), !dbg !14224
  store void (%struct.bContext*, %struct.uiLayout*, i8*)* %func, void (%struct.bContext*, %struct.uiLayout*, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bContext*, %struct.uiLayout*, i8*)** %func.addr, metadata !14225, metadata !DIExpression()), !dbg !14226
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14227, metadata !DIExpression()), !dbg !14228
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !14229, metadata !DIExpression()), !dbg !14230
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !14231, metadata !DIExpression()), !dbg !14232
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !14233, metadata !DIExpression()), !dbg !14234
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !14235, metadata !DIExpression()), !dbg !14236
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !14237, metadata !DIExpression()), !dbg !14238
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !14239, metadata !DIExpression()), !dbg !14240
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !14241, metadata !DIExpression()), !dbg !14242
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !14243
  %1 = load i32, i32* %x.addr, align 4, !dbg !14244
  %2 = load i32, i32* %y.addr, align 4, !dbg !14245
  %3 = load i16, i16* %width.addr, align 2, !dbg !14246
  %4 = load i16, i16* %height.addr, align 2, !dbg !14247
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !14248
  %6 = load i8*, i8** %tip.addr, align 8, !dbg !14249
  %call = call %struct.uiBut* @ui_def_but(%struct.uiBlock* %0, i32 13824, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i64 0, i64 0), i32 %1, i32 %2, i16 signext %3, i16 signext %4, i8* %5, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* %6), !dbg !14250
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !14242
  %7 = load i32, i32* %icon.addr, align 4, !dbg !14251
  %8 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14252
  %icon1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 44, !dbg !14253
  store i32 %7, i32* %icon1, align 8, !dbg !14254
  %9 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14255
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 2, !dbg !14256
  %10 = load i32, i32* %flag, align 8, !dbg !14257
  %or = or i32 %10, 8, !dbg !14257
  store i32 %or, i32* %flag, align 8, !dbg !14257
  %11 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14258
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %11, i32 0, i32 3, !dbg !14259
  %12 = load i32, i32* %drawflag, align 4, !dbg !14260
  %and = and i32 %12, -5, !dbg !14260
  store i32 %and, i32* %drawflag, align 4, !dbg !14260
  %13 = load void (%struct.bContext*, %struct.uiLayout*, i8*)*, void (%struct.bContext*, %struct.uiLayout*, i8*)** %func.addr, align 8, !dbg !14261
  %14 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14262
  %menu_create_func = getelementptr inbounds %struct.uiBut, %struct.uiBut* %14, i32 0, i32 53, !dbg !14263
  store void (%struct.bContext*, %struct.uiLayout*, i8*)* %13, void (%struct.bContext*, %struct.uiLayout*, i8*)** %menu_create_func, align 8, !dbg !14264
  %15 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14265
  call void @ui_check_but(%struct.uiBut* %15), !dbg !14266
  %16 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14267
  ret %struct.uiBut* %16, !dbg !14268
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconTextBlockBut(%struct.uiBlock* %block, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* %func, i8* %arg, i32 %icon, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %tip) #0 !dbg !14269 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %func.addr = alloca %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !14272, metadata !DIExpression()), !dbg !14273
  store %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* %func, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)** %func.addr, metadata !14274, metadata !DIExpression()), !dbg !14275
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14276, metadata !DIExpression()), !dbg !14277
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !14278, metadata !DIExpression()), !dbg !14279
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !14280, metadata !DIExpression()), !dbg !14281
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !14282, metadata !DIExpression()), !dbg !14283
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !14284, metadata !DIExpression()), !dbg !14285
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !14286, metadata !DIExpression()), !dbg !14287
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !14288, metadata !DIExpression()), !dbg !14289
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !14290, metadata !DIExpression()), !dbg !14291
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !14292, metadata !DIExpression()), !dbg !14293
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !14294
  %1 = load i8*, i8** %str.addr, align 8, !dbg !14295
  %2 = load i32, i32* %x.addr, align 4, !dbg !14296
  %3 = load i32, i32* %y.addr, align 4, !dbg !14297
  %4 = load i16, i16* %width.addr, align 2, !dbg !14298
  %5 = load i16, i16* %height.addr, align 2, !dbg !14299
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !14300
  %7 = load i8*, i8** %tip.addr, align 8, !dbg !14301
  %call = call %struct.uiBut* @ui_def_but(%struct.uiBlock* %0, i32 9728, i32 0, i8* %1, i32 %2, i32 %3, i16 signext %4, i16 signext %5, i8* %6, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* %7), !dbg !14302
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !14293
  %8 = load i32, i32* %icon.addr, align 4, !dbg !14303
  %cmp = icmp ne i32 %8, 28, !dbg !14305
  br i1 %cmp, label %if.then, label %if.end, !dbg !14306

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %icon.addr, align 4, !dbg !14307
  %10 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14309
  %icon1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 44, !dbg !14310
  store i32 %9, i32* %icon1, align 8, !dbg !14311
  %11 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14312
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %11, i32 0, i32 3, !dbg !14313
  %12 = load i32, i32* %drawflag, align 4, !dbg !14314
  %or = or i32 %12, 4, !dbg !14314
  store i32 %or, i32* %drawflag, align 4, !dbg !14314
  br label %if.end, !dbg !14315

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14316
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %13, i32 0, i32 2, !dbg !14317
  %14 = load i32, i32* %flag, align 8, !dbg !14318
  %or2 = or i32 %14, 8, !dbg !14318
  store i32 %or2, i32* %flag, align 8, !dbg !14318
  %15 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14319
  %flag3 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 2, !dbg !14320
  %16 = load i32, i32* %flag3, align 8, !dbg !14321
  %or4 = or i32 %16, 64, !dbg !14321
  store i32 %or4, i32* %flag3, align 8, !dbg !14321
  %17 = load %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)*, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)** %func.addr, align 8, !dbg !14322
  %18 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14323
  %block_create_func = getelementptr inbounds %struct.uiBut, %struct.uiBut* %18, i32 0, i32 52, !dbg !14324
  store %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* %17, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)** %block_create_func, align 8, !dbg !14325
  %19 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14326
  call void @ui_check_but(%struct.uiBut* %19), !dbg !14327
  %20 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14328
  ret %struct.uiBut* %20, !dbg !14329
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefIconBlockBut(%struct.uiBlock* %block, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* %func, i8* %arg, i32 %retval1, i32 %icon, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i8* %tip) #0 !dbg !14330 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %func.addr = alloca %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !14333, metadata !DIExpression()), !dbg !14334
  store %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* %func, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)** %func.addr, metadata !14335, metadata !DIExpression()), !dbg !14336
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14337, metadata !DIExpression()), !dbg !14338
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !14339, metadata !DIExpression()), !dbg !14340
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !14341, metadata !DIExpression()), !dbg !14342
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !14343, metadata !DIExpression()), !dbg !14344
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !14345, metadata !DIExpression()), !dbg !14346
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !14347, metadata !DIExpression()), !dbg !14348
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !14349, metadata !DIExpression()), !dbg !14350
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !14351, metadata !DIExpression()), !dbg !14352
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !14353, metadata !DIExpression()), !dbg !14354
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !14355
  %1 = load i32, i32* %retval.addr, align 4, !dbg !14356
  %2 = load i32, i32* %x.addr, align 4, !dbg !14357
  %3 = load i32, i32* %y.addr, align 4, !dbg !14358
  %4 = load i16, i16* %width.addr, align 2, !dbg !14359
  %5 = load i16, i16* %height.addr, align 2, !dbg !14360
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !14361
  %7 = load i8*, i8** %tip.addr, align 8, !dbg !14362
  %call = call %struct.uiBut* @ui_def_but(%struct.uiBlock* %0, i32 9728, i32 %1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i64 0, i64 0), i32 %2, i32 %3, i16 signext %4, i16 signext %5, i8* %6, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* %7), !dbg !14363
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !14354
  %8 = load i32, i32* %icon.addr, align 4, !dbg !14364
  %9 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14365
  %icon2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 44, !dbg !14366
  store i32 %8, i32* %icon2, align 8, !dbg !14367
  %10 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14368
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 2, !dbg !14369
  %11 = load i32, i32* %flag, align 8, !dbg !14370
  %or = or i32 %11, 8, !dbg !14370
  store i32 %or, i32* %flag, align 8, !dbg !14370
  %12 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14371
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 3, !dbg !14372
  %13 = load i32, i32* %drawflag, align 4, !dbg !14373
  %or3 = or i32 %13, 4, !dbg !14373
  store i32 %or3, i32* %drawflag, align 4, !dbg !14373
  %14 = load %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)*, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)** %func.addr, align 8, !dbg !14374
  %15 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14375
  %block_create_func = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 52, !dbg !14376
  store %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* %14, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)** %block_create_func, align 8, !dbg !14377
  %16 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14378
  call void @ui_check_but(%struct.uiBut* %16), !dbg !14379
  %17 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14380
  ret %struct.uiBut* %17, !dbg !14381
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefKeyevtButS(%struct.uiBlock* %block, i32 %retval1, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i16* %spoin, i8* %tip) #0 !dbg !14382 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %retval.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %spoin.addr = alloca i16*, align 8
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !14385, metadata !DIExpression()), !dbg !14386
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !14387, metadata !DIExpression()), !dbg !14388
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !14389, metadata !DIExpression()), !dbg !14390
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !14391, metadata !DIExpression()), !dbg !14392
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !14393, metadata !DIExpression()), !dbg !14394
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !14395, metadata !DIExpression()), !dbg !14396
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !14397, metadata !DIExpression()), !dbg !14398
  store i16* %spoin, i16** %spoin.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %spoin.addr, metadata !14399, metadata !DIExpression()), !dbg !14400
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !14401, metadata !DIExpression()), !dbg !14402
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !14403, metadata !DIExpression()), !dbg !14404
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !14405
  %1 = load i32, i32* %retval.addr, align 4, !dbg !14406
  %2 = load i8*, i8** %str.addr, align 8, !dbg !14407
  %3 = load i32, i32* %x.addr, align 4, !dbg !14408
  %4 = load i32, i32* %y.addr, align 4, !dbg !14409
  %5 = load i16, i16* %width.addr, align 2, !dbg !14410
  %6 = load i16, i16* %height.addr, align 2, !dbg !14411
  %7 = load i16*, i16** %spoin.addr, align 8, !dbg !14412
  %8 = bitcast i16* %7 to i8*, !dbg !14412
  %9 = load i8*, i8** %tip.addr, align 8, !dbg !14413
  %call = call %struct.uiBut* @ui_def_but(%struct.uiBlock* %0, i32 12352, i32 %1, i8* %2, i32 %3, i32 %4, i16 signext %5, i16 signext %6, i8* %8, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* %9), !dbg !14414
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !14404
  %10 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14415
  call void @ui_check_but(%struct.uiBut* %10), !dbg !14416
  %11 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14417
  ret %struct.uiBut* %11, !dbg !14418
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefHotKeyevtButS(%struct.uiBlock* %block, i32 %retval1, i8* %str, i32 %x, i32 %y, i16 signext %width, i16 signext %height, i16* %keypoin, i16* %modkeypoin, i8* %tip) #0 !dbg !14419 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %retval.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %keypoin.addr = alloca i16*, align 8
  %modkeypoin.addr = alloca i16*, align 8
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !14422, metadata !DIExpression()), !dbg !14423
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !14424, metadata !DIExpression()), !dbg !14425
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !14426, metadata !DIExpression()), !dbg !14427
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !14428, metadata !DIExpression()), !dbg !14429
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !14430, metadata !DIExpression()), !dbg !14431
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !14432, metadata !DIExpression()), !dbg !14433
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !14434, metadata !DIExpression()), !dbg !14435
  store i16* %keypoin, i16** %keypoin.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %keypoin.addr, metadata !14436, metadata !DIExpression()), !dbg !14437
  store i16* %modkeypoin, i16** %modkeypoin.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %modkeypoin.addr, metadata !14438, metadata !DIExpression()), !dbg !14439
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !14440, metadata !DIExpression()), !dbg !14441
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !14442, metadata !DIExpression()), !dbg !14443
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !14444
  %1 = load i32, i32* %retval.addr, align 4, !dbg !14445
  %2 = load i8*, i8** %str.addr, align 8, !dbg !14446
  %3 = load i32, i32* %x.addr, align 4, !dbg !14447
  %4 = load i32, i32* %y.addr, align 4, !dbg !14448
  %5 = load i16, i16* %width.addr, align 2, !dbg !14449
  %6 = load i16, i16* %height.addr, align 2, !dbg !14450
  %7 = load i16*, i16** %keypoin.addr, align 8, !dbg !14451
  %8 = bitcast i16* %7 to i8*, !dbg !14451
  %9 = load i8*, i8** %tip.addr, align 8, !dbg !14452
  %call = call %struct.uiBut* @ui_def_but(%struct.uiBlock* %0, i32 23616, i32 %1, i8* %2, i32 %3, i32 %4, i16 signext %5, i16 signext %6, i8* %8, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* %9), !dbg !14453
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !14443
  %10 = load i16*, i16** %modkeypoin.addr, align 8, !dbg !14454
  %11 = load i16, i16* %10, align 2, !dbg !14455
  %12 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14456
  %modifier_key = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 50, !dbg !14457
  store i16 %11, i16* %modifier_key, align 2, !dbg !14458
  %13 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14459
  call void @ui_check_but(%struct.uiBut* %13), !dbg !14460
  %14 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14461
  ret %struct.uiBut* %14, !dbg !14462
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefSearchBut(%struct.uiBlock* %block, i8* %arg, i32 %retval1, i32 %icon, i32 %maxlen, i32 %x, i32 %y, i16 signext %width, i16 signext %height, float %a1, float %a2, i8* %tip) #0 !dbg !14463 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %arg.addr = alloca i8*, align 8
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %maxlen.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !14466, metadata !DIExpression()), !dbg !14467
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14468, metadata !DIExpression()), !dbg !14469
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !14470, metadata !DIExpression()), !dbg !14471
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !14472, metadata !DIExpression()), !dbg !14473
  store i32 %maxlen, i32* %maxlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxlen.addr, metadata !14474, metadata !DIExpression()), !dbg !14475
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !14476, metadata !DIExpression()), !dbg !14477
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !14478, metadata !DIExpression()), !dbg !14479
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !14480, metadata !DIExpression()), !dbg !14481
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !14482, metadata !DIExpression()), !dbg !14483
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !14484, metadata !DIExpression()), !dbg !14485
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !14486, metadata !DIExpression()), !dbg !14487
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !14488, metadata !DIExpression()), !dbg !14489
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !14490, metadata !DIExpression()), !dbg !14491
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !14492
  %1 = load i32, i32* %retval.addr, align 4, !dbg !14493
  %2 = load i32, i32* %x.addr, align 4, !dbg !14494
  %3 = load i32, i32* %y.addr, align 4, !dbg !14495
  %4 = load i16, i16* %width.addr, align 2, !dbg !14496
  %5 = load i16, i16* %height.addr, align 2, !dbg !14497
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !14498
  %7 = load i32, i32* %maxlen.addr, align 4, !dbg !14499
  %conv = sitofp i32 %7 to float, !dbg !14499
  %8 = load float, float* %a1.addr, align 4, !dbg !14500
  %9 = load float, float* %a2.addr, align 4, !dbg !14501
  %10 = load i8*, i8** %tip.addr, align 8, !dbg !14502
  %call = call %struct.uiBut* @ui_def_but(%struct.uiBlock* %0, i32 20992, i32 %1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i64 0, i64 0), i32 %2, i32 %3, i16 signext %4, i16 signext %5, i8* %6, float 0.000000e+00, float %conv, float %8, float %9, i8* %10), !dbg !14503
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !14491
  %11 = load i32, i32* %icon.addr, align 4, !dbg !14504
  %12 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14505
  %icon2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 44, !dbg !14506
  store i32 %11, i32* %icon2, align 8, !dbg !14507
  %13 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14508
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %13, i32 0, i32 2, !dbg !14509
  %14 = load i32, i32* %flag, align 8, !dbg !14510
  %or = or i32 %14, 8, !dbg !14510
  store i32 %or, i32* %flag, align 8, !dbg !14510
  %15 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14511
  %drawflag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 3, !dbg !14512
  %16 = load i32, i32* %drawflag, align 4, !dbg !14513
  %or3 = or i32 %16, 6, !dbg !14513
  store i32 %or3, i32* %drawflag, align 4, !dbg !14513
  %17 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14514
  call void @ui_check_but(%struct.uiBut* %17), !dbg !14515
  %18 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14516
  ret %struct.uiBut* %18, !dbg !14517
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiButSetSearchFunc(%struct.uiBut* %but, void (%struct.bContext*, i8*, i8*, %struct.uiSearchItems*)* %sfunc, i8* %arg, void (%struct.bContext*, i8*, i8*)* %bfunc, i8* %active) #0 !dbg !14518 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %sfunc.addr = alloca void (%struct.bContext*, i8*, i8*, %struct.uiSearchItems*)*, align 8
  %arg.addr = alloca i8*, align 8
  %bfunc.addr = alloca void (%struct.bContext*, i8*, i8*)*, align 8
  %active.addr = alloca i8*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !14521, metadata !DIExpression()), !dbg !14522
  store void (%struct.bContext*, i8*, i8*, %struct.uiSearchItems*)* %sfunc, void (%struct.bContext*, i8*, i8*, %struct.uiSearchItems*)** %sfunc.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bContext*, i8*, i8*, %struct.uiSearchItems*)** %sfunc.addr, metadata !14523, metadata !DIExpression()), !dbg !14524
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14525, metadata !DIExpression()), !dbg !14526
  store void (%struct.bContext*, i8*, i8*)* %bfunc, void (%struct.bContext*, i8*, i8*)** %bfunc.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bContext*, i8*, i8*)** %bfunc.addr, metadata !14527, metadata !DIExpression()), !dbg !14528
  store i8* %active, i8** %active.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %active.addr, metadata !14529, metadata !DIExpression()), !dbg !14530
  %0 = load void (%struct.bContext*, i8*, i8*, %struct.uiSearchItems*)*, void (%struct.bContext*, i8*, i8*, %struct.uiSearchItems*)** %sfunc.addr, align 8, !dbg !14531
  %1 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14532
  %search_func = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 35, !dbg !14533
  store void (%struct.bContext*, i8*, i8*, %struct.uiSearchItems*)* %0, void (%struct.bContext*, i8*, i8*, %struct.uiSearchItems*)** %search_func, align 8, !dbg !14534
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !14535
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14536
  %search_arg = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 36, !dbg !14537
  store i8* %2, i8** %search_arg, align 8, !dbg !14538
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14539
  %5 = load void (%struct.bContext*, i8*, i8*)*, void (%struct.bContext*, i8*, i8*)** %bfunc.addr, align 8, !dbg !14540
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !14541
  %7 = load i8*, i8** %active.addr, align 8, !dbg !14542
  call void @uiButSetFunc(%struct.uiBut* %4, void (%struct.bContext*, i8*, i8*)* %5, i8* %6, i8* %7), !dbg !14543
  %8 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14544
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 74, !dbg !14546
  %9 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !14546
  %flag = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %9, i32 0, i32 27, !dbg !14547
  %10 = load i32, i32* %flag, align 8, !dbg !14547
  %and = and i32 %10, 1, !dbg !14548
  %cmp = icmp eq i32 0, %and, !dbg !14549
  br i1 %cmp, label %if.then, label %if.end2, !dbg !14550

if.then:                                          ; preds = %entry
  %11 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14551
  %drawstr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %11, i32 0, i32 17, !dbg !14554
  %arrayidx = getelementptr inbounds [400 x i8], [400 x i8]* %drawstr, i64 0, i64 0, !dbg !14551
  %12 = load i8, i8* %arrayidx, align 8, !dbg !14551
  %tobool = icmp ne i8 %12, 0, !dbg !14551
  br i1 %tobool, label %if.then1, label %if.end, !dbg !14555

if.then1:                                         ; preds = %if.then
  %13 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14556
  call void @ui_but_search_test(%struct.uiBut* %13), !dbg !14557
  br label %if.end, !dbg !14557

if.end:                                           ; preds = %if.then1, %if.then
  br label %if.end2, !dbg !14558

if.end2:                                          ; preds = %if.end, %entry
  ret void, !dbg !14559
}

declare dso_local void @ui_but_search_test(%struct.uiBut*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.uiBut* @uiDefSearchButO_ptr(%struct.uiBlock* %block, %struct.wmOperatorType* %ot, %struct.IDProperty* %properties, i8* %arg, i32 %retval1, i32 %icon, i32 %maxlen, i32 %x, i32 %y, i16 signext %width, i16 signext %height, float %a1, float %a2, i8* %tip) #0 !dbg !14560 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %properties.addr = alloca %struct.IDProperty*, align 8
  %arg.addr = alloca i8*, align 8
  %retval.addr = alloca i32, align 4
  %icon.addr = alloca i32, align 4
  %maxlen.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i16, align 2
  %height.addr = alloca i16, align 2
  %a1.addr = alloca float, align 4
  %a2.addr = alloca float, align 4
  %tip.addr = alloca i8*, align 8
  %but = alloca %struct.uiBut*, align 8
  %ptr = alloca %struct.PointerRNA*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !14563, metadata !DIExpression()), !dbg !14564
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !14565, metadata !DIExpression()), !dbg !14566
  store %struct.IDProperty* %properties, %struct.IDProperty** %properties.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %properties.addr, metadata !14567, metadata !DIExpression()), !dbg !14568
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14569, metadata !DIExpression()), !dbg !14570
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !14571, metadata !DIExpression()), !dbg !14572
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !14573, metadata !DIExpression()), !dbg !14574
  store i32 %maxlen, i32* %maxlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxlen.addr, metadata !14575, metadata !DIExpression()), !dbg !14576
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !14577, metadata !DIExpression()), !dbg !14578
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !14579, metadata !DIExpression()), !dbg !14580
  store i16 %width, i16* %width.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %width.addr, metadata !14581, metadata !DIExpression()), !dbg !14582
  store i16 %height, i16* %height.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %height.addr, metadata !14583, metadata !DIExpression()), !dbg !14584
  store float %a1, float* %a1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a1.addr, metadata !14585, metadata !DIExpression()), !dbg !14586
  store float %a2, float* %a2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a2.addr, metadata !14587, metadata !DIExpression()), !dbg !14588
  store i8* %tip, i8** %tip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tip.addr, metadata !14589, metadata !DIExpression()), !dbg !14590
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !14591, metadata !DIExpression()), !dbg !14592
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !14593
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14594
  %2 = load i32, i32* %retval.addr, align 4, !dbg !14595
  %3 = load i32, i32* %icon.addr, align 4, !dbg !14596
  %4 = load i32, i32* %maxlen.addr, align 4, !dbg !14597
  %5 = load i32, i32* %x.addr, align 4, !dbg !14598
  %6 = load i32, i32* %y.addr, align 4, !dbg !14599
  %7 = load i16, i16* %width.addr, align 2, !dbg !14600
  %8 = load i16, i16* %height.addr, align 2, !dbg !14601
  %9 = load float, float* %a1.addr, align 4, !dbg !14602
  %10 = load float, float* %a2.addr, align 4, !dbg !14603
  %11 = load i8*, i8** %tip.addr, align 8, !dbg !14604
  %call = call %struct.uiBut* @uiDefSearchBut(%struct.uiBlock* %0, i8* %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i16 signext %7, i16 signext %8, float %9, float %10, i8* %11), !dbg !14605
  store %struct.uiBut* %call, %struct.uiBut** %but, align 8, !dbg !14606
  %12 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14607
  %13 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14608
  %14 = bitcast %struct.uiBut* %13 to i8*, !dbg !14608
  call void @uiButSetSearchFunc(%struct.uiBut* %12, void (%struct.bContext*, i8*, i8*, %struct.uiSearchItems*)* @operator_enum_search_cb, i8* %14, void (%struct.bContext*, i8*, i8*)* @operator_enum_call_cb, i8* null), !dbg !14609
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !14610
  %16 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14611
  %optype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %16, i32 0, i32 59, !dbg !14612
  store %struct.wmOperatorType* %15, %struct.wmOperatorType** %optype, align 8, !dbg !14613
  %17 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14614
  %opcontext = getelementptr inbounds %struct.uiBut, %struct.uiBut* %17, i32 0, i32 61, !dbg !14615
  store i16 6, i16* %opcontext, align 8, !dbg !14616
  %18 = load %struct.IDProperty*, %struct.IDProperty** %properties.addr, align 8, !dbg !14617
  %tobool = icmp ne %struct.IDProperty* %18, null, !dbg !14617
  br i1 %tobool, label %if.then, label %if.end, !dbg !14619

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr, metadata !14620, metadata !DIExpression()), !dbg !14622
  %19 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14623
  %call2 = call %struct.PointerRNA* @uiButGetOperatorPtrRNA(%struct.uiBut* %19), !dbg !14624
  store %struct.PointerRNA* %call2, %struct.PointerRNA** %ptr, align 8, !dbg !14622
  %20 = load %struct.IDProperty*, %struct.IDProperty** %properties.addr, align 8, !dbg !14625
  %call3 = call %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty* %20), !dbg !14626
  %21 = bitcast %struct.IDProperty* %call3 to i8*, !dbg !14626
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !14627
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %22, i32 0, i32 2, !dbg !14628
  store i8* %21, i8** %data, align 8, !dbg !14629
  br label %if.end, !dbg !14630

if.end:                                           ; preds = %if.then, %entry
  %23 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !14631
  ret %struct.uiBut* %23, !dbg !14632
}

; Function Attrs: noinline nounwind uwtable
define internal void @operator_enum_search_cb(%struct.bContext* %C, i8* %but, i8* %str, %struct.uiSearchItems* %items) #0 !dbg !14633 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %but.addr = alloca i8*, align 8
  %str.addr = alloca i8*, align 8
  %items.addr = alloca %struct.uiSearchItems*, align 8
  %ot = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %ptr = alloca %struct.PointerRNA*, align 8
  %item = alloca %struct.EnumPropertyItem*, align 8
  %item_array = alloca %struct.EnumPropertyItem*, align 8
  %do_free = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !14634, metadata !DIExpression()), !dbg !14635
  store i8* %but, i8** %but.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %but.addr, metadata !14636, metadata !DIExpression()), !dbg !14637
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !14638, metadata !DIExpression()), !dbg !14639
  store %struct.uiSearchItems* %items, %struct.uiSearchItems** %items.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiSearchItems** %items.addr, metadata !14640, metadata !DIExpression()), !dbg !14641
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !14642, metadata !DIExpression()), !dbg !14643
  %0 = load i8*, i8** %but.addr, align 8, !dbg !14644
  %1 = bitcast i8* %0 to %struct.uiBut*, !dbg !14645
  %optype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 59, !dbg !14646
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %optype, align 8, !dbg !14646
  store %struct.wmOperatorType* %2, %struct.wmOperatorType** %ot, align 8, !dbg !14643
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !14647, metadata !DIExpression()), !dbg !14648
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !14649
  %prop1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 13, !dbg !14650
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop1, align 8, !dbg !14650
  store %struct.PropertyRNA* %4, %struct.PropertyRNA** %prop, align 8, !dbg !14648
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !14651
  %cmp = icmp eq %struct.PropertyRNA* %5, null, !dbg !14653
  br i1 %cmp, label %if.then, label %if.else, !dbg !14654

if.then:                                          ; preds = %entry
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !14655
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 1, !dbg !14657
  %7 = load i8*, i8** %idname, align 8, !dbg !14657
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.operator_enum_search_cb, i64 0, i64 0), i8* %7), !dbg !14658
  br label %if.end24, !dbg !14659

if.else:                                          ; preds = %entry
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !14660
  %call2 = call i32 @RNA_property_type(%struct.PropertyRNA* %8), !dbg !14662
  %cmp3 = icmp ne i32 %call2, 4, !dbg !14663
  br i1 %cmp3, label %if.then4, label %if.else8, !dbg !14664

if.then4:                                         ; preds = %if.else
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !14665
  %idname5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 1, !dbg !14667
  %10 = load i8*, i8** %idname5, align 8, !dbg !14667
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !14668
  %call6 = call i8* @RNA_property_identifier(%struct.PropertyRNA* %11), !dbg !14669
  %call7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.operator_enum_search_cb, i64 0, i64 0), i8* %10, i8* %call6), !dbg !14670
  br label %if.end23, !dbg !14671

if.else8:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr, metadata !14672, metadata !DIExpression()), !dbg !14674
  %12 = load i8*, i8** %but.addr, align 8, !dbg !14675
  %13 = bitcast i8* %12 to %struct.uiBut*, !dbg !14675
  %call9 = call %struct.PointerRNA* @uiButGetOperatorPtrRNA(%struct.uiBut* %13), !dbg !14676
  store %struct.PointerRNA* %call9, %struct.PointerRNA** %ptr, align 8, !dbg !14674
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !14677, metadata !DIExpression()), !dbg !14678
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item_array, metadata !14679, metadata !DIExpression()), !dbg !14680
  call void @llvm.dbg.declare(metadata i8* %do_free, metadata !14681, metadata !DIExpression()), !dbg !14682
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !14683
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !14684
  %16 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !14685
  call void @RNA_property_enum_items(%struct.bContext* %14, %struct.PointerRNA* %15, %struct.PropertyRNA* %16, %struct.EnumPropertyItem** %item_array, i32* null, i8* %do_free), !dbg !14686
  %17 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item_array, align 8, !dbg !14687
  store %struct.EnumPropertyItem* %17, %struct.EnumPropertyItem** %item, align 8, !dbg !14689
  br label %for.cond, !dbg !14690

for.cond:                                         ; preds = %for.inc, %if.else8
  %18 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !14691
  %identifier = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %18, i32 0, i32 1, !dbg !14693
  %19 = load i8*, i8** %identifier, align 8, !dbg !14693
  %tobool = icmp ne i8* %19, null, !dbg !14694
  br i1 %tobool, label %for.body, label %for.end, !dbg !14694

for.body:                                         ; preds = %for.cond
  %20 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !14695
  %name = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %20, i32 0, i32 3, !dbg !14698
  %21 = load i8*, i8** %name, align 8, !dbg !14698
  %22 = load i8*, i8** %str.addr, align 8, !dbg !14699
  %call10 = call i8* @BLI_strcasestr(i8* %21, i8* %22), !dbg !14700
  %tobool11 = icmp ne i8* %call10, null, !dbg !14700
  br i1 %tobool11, label %if.then12, label %if.end19, !dbg !14701

if.then12:                                        ; preds = %for.body
  %23 = load %struct.uiSearchItems*, %struct.uiSearchItems** %items.addr, align 8, !dbg !14702
  %24 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !14705
  %name13 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %24, i32 0, i32 3, !dbg !14706
  %25 = load i8*, i8** %name13, align 8, !dbg !14706
  %26 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !14707
  %value = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %26, i32 0, i32 0, !dbg !14707
  %27 = load i32, i32* %value, align 8, !dbg !14707
  %conv = sext i32 %27 to i64, !dbg !14707
  %28 = inttoptr i64 %conv to i8*, !dbg !14707
  %call14 = call zeroext i8 @uiSearchItemAdd(%struct.uiSearchItems* %23, i8* %25, i8* %28, i32 0), !dbg !14708
  %conv15 = zext i8 %call14 to i32, !dbg !14708
  %cmp16 = icmp eq i32 0, %conv15, !dbg !14709
  br i1 %cmp16, label %if.then18, label %if.end, !dbg !14710

if.then18:                                        ; preds = %if.then12
  br label %for.end, !dbg !14711

if.end:                                           ; preds = %if.then12
  br label %if.end19, !dbg !14712

if.end19:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !14713

for.inc:                                          ; preds = %if.end19
  %29 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !14714
  %incdec.ptr = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %29, i32 1, !dbg !14714
  store %struct.EnumPropertyItem* %incdec.ptr, %struct.EnumPropertyItem** %item, align 8, !dbg !14714
  br label %for.cond, !dbg !14715, !llvm.loop !14716

for.end:                                          ; preds = %if.then18, %for.cond
  %30 = load i8, i8* %do_free, align 1, !dbg !14718
  %tobool20 = icmp ne i8 %30, 0, !dbg !14718
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !14720

if.then21:                                        ; preds = %for.end
  %31 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14721
  %32 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item_array, align 8, !dbg !14722
  %33 = bitcast %struct.EnumPropertyItem* %32 to i8*, !dbg !14722
  call void %31(i8* %33), !dbg !14721
  br label %if.end22, !dbg !14721

if.end22:                                         ; preds = %if.then21, %for.end
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then4
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then
  ret void, !dbg !14723
}

; Function Attrs: noinline nounwind uwtable
define internal void @operator_enum_call_cb(%struct.bContext* %UNUSED_C, i8* %but, i8* %arg2) #0 !dbg !14724 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %but.addr = alloca i8*, align 8
  %arg2.addr = alloca i8*, align 8
  %ot = alloca %struct.wmOperatorType*, align 8
  %opptr = alloca %struct.PointerRNA*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !14725, metadata !DIExpression()), !dbg !14726
  store i8* %but, i8** %but.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %but.addr, metadata !14727, metadata !DIExpression()), !dbg !14728
  store i8* %arg2, i8** %arg2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg2.addr, metadata !14729, metadata !DIExpression()), !dbg !14730
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !14731, metadata !DIExpression()), !dbg !14732
  %0 = load i8*, i8** %but.addr, align 8, !dbg !14733
  %1 = bitcast i8* %0 to %struct.uiBut*, !dbg !14734
  %optype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %1, i32 0, i32 59, !dbg !14735
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %optype, align 8, !dbg !14735
  store %struct.wmOperatorType* %2, %struct.wmOperatorType** %ot, align 8, !dbg !14732
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %opptr, metadata !14736, metadata !DIExpression()), !dbg !14737
  %3 = load i8*, i8** %but.addr, align 8, !dbg !14738
  %4 = bitcast i8* %3 to %struct.uiBut*, !dbg !14738
  %call = call %struct.PointerRNA* @uiButGetOperatorPtrRNA(%struct.uiBut* %4), !dbg !14739
  store %struct.PointerRNA* %call, %struct.PointerRNA** %opptr, align 8, !dbg !14737
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !14740
  %tobool = icmp ne %struct.wmOperatorType* %5, null, !dbg !14740
  br i1 %tobool, label %if.then, label %if.end5, !dbg !14742

if.then:                                          ; preds = %entry
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !14743
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 13, !dbg !14746
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !14746
  %tobool1 = icmp ne %struct.PropertyRNA* %7, null, !dbg !14743
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !14747

if.then2:                                         ; preds = %if.then
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %opptr, align 8, !dbg !14748
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !14750
  %prop3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 13, !dbg !14751
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop3, align 8, !dbg !14751
  %11 = load i8*, i8** %arg2.addr, align 8, !dbg !14752
  %12 = ptrtoint i8* %11 to i64, !dbg !14752
  %conv = trunc i64 %12 to i32, !dbg !14752
  call void @RNA_property_enum_set(%struct.PointerRNA* %8, %struct.PropertyRNA* %10, i32 %conv), !dbg !14753
  br label %if.end, !dbg !14754

if.else:                                          ; preds = %if.then
  %13 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !14755
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %13, i32 0, i32 1, !dbg !14757
  %14 = load i8*, i8** %idname, align 8, !dbg !14757
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.operator_enum_call_cb, i64 0, i64 0), i8* %14), !dbg !14758
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end5, !dbg !14759

if.end5:                                          ; preds = %if.end, %entry
  ret void, !dbg !14760
}

declare dso_local %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiButSetFocusOnEnter(%struct.wmWindow* %win, %struct.uiBut* %but) #0 !dbg !14761 {
entry:
  %win.addr = alloca %struct.wmWindow*, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  %event = alloca %struct.wmEvent, align 8
  store %struct.wmWindow* %win, %struct.wmWindow** %win.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win.addr, metadata !14764, metadata !DIExpression()), !dbg !14765
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !14766, metadata !DIExpression()), !dbg !14767
  call void @llvm.dbg.declare(metadata %struct.wmEvent* %event, metadata !14768, metadata !DIExpression()), !dbg !14770
  %0 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !14771
  call void @wm_event_init_from_window(%struct.wmWindow* %0, %struct.wmEvent* %event), !dbg !14772
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !14773
  store i16 20513, i16* %type, align 8, !dbg !14774
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !14775
  store i16 1, i16* %val, align 2, !dbg !14776
  %1 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14777
  %2 = bitcast %struct.uiBut* %1 to i8*, !dbg !14777
  %customdata = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 28, !dbg !14778
  store i8* %2, i8** %customdata, align 8, !dbg !14779
  %customdatafree = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 26, !dbg !14780
  store i16 0, i16* %customdatafree, align 2, !dbg !14781
  %3 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !14782
  call void @wm_event_add(%struct.wmWindow* %3, %struct.wmEvent* %event), !dbg !14783
  ret void, !dbg !14784
}

declare dso_local void @wm_event_init_from_window(%struct.wmWindow*, %struct.wmEvent*) #3

declare dso_local void @wm_event_add(%struct.wmWindow*, %struct.wmEvent*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiButGetStrInfo(%struct.bContext* %C, %struct.uiBut* %but, ...) #0 !dbg !14785 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  %si = alloca %struct.uiStringInfo*, align 8
  %items = alloca %struct.EnumPropertyItem*, align 8
  %item = alloca %struct.EnumPropertyItem*, align 8
  %totitems = alloca i32, align 4
  %free_items = alloca i8, align 1
  %type = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %mt = alloca %struct.MenuType*, align 8
  %t = alloca i8*, align 8
  %t101 = alloca i8*, align 8
  %mt123 = alloca %struct.MenuType*, align 8
  %t138 = alloca i8*, align 8
  %_tmp = alloca i8*, align 8
  %mt181 = alloca %struct.MenuType*, align 8
  %ptr = alloca %struct.PointerRNA*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %value = alloca i32, align 4
  %opptr = alloca %struct.PointerRNA*, align 8
  %ot = alloca %struct.wmOperatorType*, align 8
  %i = alloca i32, align 4
  %buf = alloca [128 x i8], align 16
  %buf315 = alloca [128 x i8], align 16
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !14788, metadata !DIExpression()), !dbg !14789
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !14790, metadata !DIExpression()), !dbg !14791
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !14792, metadata !DIExpression()), !dbg !14805
  call void @llvm.dbg.declare(metadata %struct.uiStringInfo** %si, metadata !14806, metadata !DIExpression()), !dbg !14807
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %items, metadata !14808, metadata !DIExpression()), !dbg !14809
  store %struct.EnumPropertyItem* null, %struct.EnumPropertyItem** %items, align 8, !dbg !14809
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !14810, metadata !DIExpression()), !dbg !14811
  store %struct.EnumPropertyItem* null, %struct.EnumPropertyItem** %item, align 8, !dbg !14811
  call void @llvm.dbg.declare(metadata i32* %totitems, metadata !14812, metadata !DIExpression()), !dbg !14813
  call void @llvm.dbg.declare(metadata i8* %free_items, metadata !14814, metadata !DIExpression()), !dbg !14815
  store i8 0, i8* %free_items, align 1, !dbg !14815
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14816
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !14816
  call void @llvm.va_start(i8* %arraydecay1), !dbg !14816
  br label %while.cond, !dbg !14817

while.cond:                                       ; preds = %if.end329, %entry
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !14818
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !14818
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !14818
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !14818
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !14818

vaarg.in_reg:                                     ; preds = %while.cond
  %0 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !14818
  %reg_save_area = load i8*, i8** %0, align 16, !dbg !14818
  %1 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !14818
  %2 = bitcast i8* %1 to i8**, !dbg !14818
  %3 = add i32 %gp_offset, 8, !dbg !14818
  store i32 %3, i32* %gp_offset_p, align 16, !dbg !14818
  br label %vaarg.end, !dbg !14818

vaarg.in_mem:                                     ; preds = %while.cond
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !14818
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !14818
  %4 = bitcast i8* %overflow_arg_area to i8**, !dbg !14818
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !14818
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !14818
  br label %vaarg.end, !dbg !14818

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %2, %vaarg.in_reg ], [ %4, %vaarg.in_mem ], !dbg !14818
  %5 = load i8*, i8** %vaarg.addr, align 8, !dbg !14818
  %6 = bitcast i8* %5 to %struct.uiStringInfo*, !dbg !14819
  store %struct.uiStringInfo* %6, %struct.uiStringInfo** %si, align 8, !dbg !14820
  %tobool = icmp ne %struct.uiStringInfo* %6, null, !dbg !14817
  br i1 %tobool, label %while.body, label %while.end, !dbg !14817

while.body:                                       ; preds = %vaarg.end
  call void @llvm.dbg.declare(metadata i32* %type, metadata !14821, metadata !DIExpression()), !dbg !14823
  %7 = load %struct.uiStringInfo*, %struct.uiStringInfo** %si, align 8, !dbg !14824
  %type3 = getelementptr inbounds %struct.uiStringInfo, %struct.uiStringInfo* %7, i32 0, i32 0, !dbg !14825
  %8 = load i32, i32* %type3, align 8, !dbg !14825
  store i32 %8, i32* %type, align 4, !dbg !14823
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !14826, metadata !DIExpression()), !dbg !14827
  store i8* null, i8** %tmp, align 8, !dbg !14827
  %9 = load i32, i32* %type, align 4, !dbg !14828
  %cmp = icmp eq i32 %9, 4, !dbg !14830
  br i1 %cmp, label %if.then, label %if.else7, !dbg !14831

if.then:                                          ; preds = %while.body
  %10 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14832
  %str = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 15, !dbg !14835
  %11 = load i8*, i8** %str, align 8, !dbg !14835
  %tobool4 = icmp ne i8* %11, null, !dbg !14832
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !14836

if.then5:                                         ; preds = %if.then
  %12 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14837
  %str6 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 15, !dbg !14839
  %13 = load i8*, i8** %str6, align 8, !dbg !14839
  %call = call i8* @BLI_strdup(i8* %13), !dbg !14840
  store i8* %call, i8** %tmp, align 8, !dbg !14841
  br label %if.end, !dbg !14842

if.else:                                          ; preds = %if.then
  store i32 5, i32* %type, align 4, !dbg !14843
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %if.end19, !dbg !14845

if.else7:                                         ; preds = %while.body
  %14 = load i32, i32* %type, align 4, !dbg !14846
  %cmp8 = icmp eq i32 %14, 8, !dbg !14848
  br i1 %cmp8, label %if.then9, label %if.end18, !dbg !14849

if.then9:                                         ; preds = %if.else7
  %15 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14850
  %tip = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 42, !dbg !14853
  %16 = load i8*, i8** %tip, align 8, !dbg !14853
  %tobool10 = icmp ne i8* %16, null, !dbg !14850
  br i1 %tobool10, label %land.lhs.true, label %if.else16, !dbg !14854

land.lhs.true:                                    ; preds = %if.then9
  %17 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14855
  %tip11 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %17, i32 0, i32 42, !dbg !14856
  %18 = load i8*, i8** %tip11, align 8, !dbg !14856
  %arrayidx = getelementptr inbounds i8, i8* %18, i64 0, !dbg !14855
  %19 = load i8, i8* %arrayidx, align 1, !dbg !14855
  %conv = zext i8 %19 to i32, !dbg !14855
  %tobool12 = icmp ne i32 %conv, 0, !dbg !14855
  br i1 %tobool12, label %if.then13, label %if.else16, !dbg !14857

if.then13:                                        ; preds = %land.lhs.true
  %20 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14858
  %tip14 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %20, i32 0, i32 42, !dbg !14859
  %21 = load i8*, i8** %tip14, align 8, !dbg !14859
  %call15 = call i8* @BLI_strdup(i8* %21), !dbg !14860
  store i8* %call15, i8** %tmp, align 8, !dbg !14861
  br label %if.end17, !dbg !14862

if.else16:                                        ; preds = %land.lhs.true, %if.then9
  store i32 9, i32* %type, align 4, !dbg !14863
  br label %if.end17

if.end17:                                         ; preds = %if.else16, %if.then13
  br label %if.end18, !dbg !14864

if.end18:                                         ; preds = %if.end17, %if.else7
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end
  %22 = load i32, i32* %type, align 4, !dbg !14865
  %cmp20 = icmp eq i32 %22, 1, !dbg !14867
  br i1 %cmp20, label %if.then22, label %if.else29, !dbg !14868

if.then22:                                        ; preds = %if.end19
  %23 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14869
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %23, i32 0, i32 55, !dbg !14872
  %24 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !14872
  %tobool23 = icmp ne %struct.PropertyRNA* %24, null, !dbg !14869
  br i1 %tobool23, label %if.then24, label %if.end28, !dbg !14873

if.then24:                                        ; preds = %if.then22
  %25 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14874
  %rnaprop25 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %25, i32 0, i32 55, !dbg !14875
  %26 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop25, align 8, !dbg !14875
  %call26 = call i8* @RNA_property_identifier(%struct.PropertyRNA* %26), !dbg !14876
  %call27 = call i8* @BLI_strdup(i8* %call26), !dbg !14877
  store i8* %call27, i8** %tmp, align 8, !dbg !14878
  br label %if.end28, !dbg !14879

if.end28:                                         ; preds = %if.then24, %if.then22
  br label %if.end329, !dbg !14880

if.else29:                                        ; preds = %if.end19
  %27 = load i32, i32* %type, align 4, !dbg !14881
  %cmp30 = icmp eq i32 %27, 2, !dbg !14883
  br i1 %cmp30, label %if.then32, label %if.else62, !dbg !14884

if.then32:                                        ; preds = %if.else29
  %28 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14885
  %rnaprop33 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %28, i32 0, i32 55, !dbg !14888
  %29 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop33, align 8, !dbg !14888
  %tobool34 = icmp ne %struct.PropertyRNA* %29, null, !dbg !14885
  br i1 %tobool34, label %if.then35, label %if.else39, !dbg !14889

if.then35:                                        ; preds = %if.then32
  %30 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14890
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %30, i32 0, i32 54, !dbg !14891
  %type36 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin, i32 0, i32 1, !dbg !14892
  %31 = load %struct.StructRNA*, %struct.StructRNA** %type36, align 8, !dbg !14892
  %call37 = call i8* @RNA_struct_identifier(%struct.StructRNA* %31), !dbg !14893
  %call38 = call i8* @BLI_strdup(i8* %call37), !dbg !14894
  store i8* %call38, i8** %tmp, align 8, !dbg !14895
  br label %if.end61, !dbg !14896

if.else39:                                        ; preds = %if.then32
  %32 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14897
  %optype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %32, i32 0, i32 59, !dbg !14899
  %33 = load %struct.wmOperatorType*, %struct.wmOperatorType** %optype, align 8, !dbg !14899
  %tobool40 = icmp ne %struct.wmOperatorType* %33, null, !dbg !14897
  br i1 %tobool40, label %if.then41, label %if.else44, !dbg !14900

if.then41:                                        ; preds = %if.else39
  %34 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14901
  %optype42 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %34, i32 0, i32 59, !dbg !14902
  %35 = load %struct.wmOperatorType*, %struct.wmOperatorType** %optype42, align 8, !dbg !14902
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %35, i32 0, i32 1, !dbg !14903
  %36 = load i8*, i8** %idname, align 8, !dbg !14903
  %call43 = call i8* @BLI_strdup(i8* %36), !dbg !14904
  store i8* %call43, i8** %tmp, align 8, !dbg !14905
  br label %if.end60, !dbg !14906

if.else44:                                        ; preds = %if.else39
  %37 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14907
  %type45 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %37, i32 0, i32 4, !dbg !14907
  %38 = load i32, i32* %type45, align 8, !dbg !14907
  %cmp46 = icmp eq i32 %38, 5632, !dbg !14907
  br i1 %cmp46, label %if.then51, label %lor.lhs.false, !dbg !14907

lor.lhs.false:                                    ; preds = %if.else44
  %39 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14907
  %type48 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %39, i32 0, i32 4, !dbg !14907
  %40 = load i32, i32* %type48, align 8, !dbg !14907
  %cmp49 = icmp eq i32 %40, 13824, !dbg !14907
  br i1 %cmp49, label %if.then51, label %if.end59, !dbg !14909

if.then51:                                        ; preds = %lor.lhs.false, %if.else44
  call void @llvm.dbg.declare(metadata %struct.MenuType** %mt, metadata !14910, metadata !DIExpression()), !dbg !14937
  %41 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14938
  %call52 = call %struct.MenuType* @uiButGetMenuType(%struct.uiBut* %41), !dbg !14939
  store %struct.MenuType* %call52, %struct.MenuType** %mt, align 8, !dbg !14937
  %42 = load %struct.MenuType*, %struct.MenuType** %mt, align 8, !dbg !14940
  %tobool53 = icmp ne %struct.MenuType* %42, null, !dbg !14940
  br i1 %tobool53, label %if.then54, label %if.end58, !dbg !14942

if.then54:                                        ; preds = %if.then51
  %43 = load %struct.MenuType*, %struct.MenuType** %mt, align 8, !dbg !14943
  %idname55 = getelementptr inbounds %struct.MenuType, %struct.MenuType* %43, i32 0, i32 2, !dbg !14944
  %arraydecay56 = getelementptr inbounds [64 x i8], [64 x i8]* %idname55, i64 0, i64 0, !dbg !14943
  %call57 = call i8* @BLI_strdup(i8* %arraydecay56), !dbg !14945
  store i8* %call57, i8** %tmp, align 8, !dbg !14946
  br label %if.end58, !dbg !14947

if.end58:                                         ; preds = %if.then54, %if.then51
  br label %if.end59, !dbg !14948

if.end59:                                         ; preds = %if.end58, %lor.lhs.false
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then41
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then35
  br label %if.end328, !dbg !14949

if.else62:                                        ; preds = %if.else29
  %44 = load i32, i32* %type, align 4, !dbg !14950
  %cmp63 = icmp eq i32 %44, 5, !dbg !14950
  br i1 %cmp63, label %if.then68, label %lor.lhs.false65, !dbg !14950

lor.lhs.false65:                                  ; preds = %if.else62
  %45 = load i32, i32* %type, align 4, !dbg !14950
  %cmp66 = icmp eq i32 %45, 9, !dbg !14950
  br i1 %cmp66, label %if.then68, label %if.else156, !dbg !14952

if.then68:                                        ; preds = %lor.lhs.false65, %if.else62
  %46 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14953
  %rnaprop69 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %46, i32 0, i32 55, !dbg !14956
  %47 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop69, align 8, !dbg !14956
  %tobool70 = icmp ne %struct.PropertyRNA* %47, null, !dbg !14953
  br i1 %tobool70, label %if.then71, label %if.else90, !dbg !14957

if.then71:                                        ; preds = %if.then68
  %48 = load i32, i32* %type, align 4, !dbg !14958
  %cmp72 = icmp eq i32 %48, 5, !dbg !14961
  br i1 %cmp72, label %if.then74, label %if.else78, !dbg !14962

if.then74:                                        ; preds = %if.then71
  %49 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14963
  %rnaprop75 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %49, i32 0, i32 55, !dbg !14964
  %50 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop75, align 8, !dbg !14964
  %call76 = call i8* @RNA_property_ui_name(%struct.PropertyRNA* %50), !dbg !14965
  %call77 = call i8* @BLI_strdup(i8* %call76), !dbg !14966
  store i8* %call77, i8** %tmp, align 8, !dbg !14967
  br label %if.end89, !dbg !14968

if.else78:                                        ; preds = %if.then71
  call void @llvm.dbg.declare(metadata i8** %t, metadata !14969, metadata !DIExpression()), !dbg !14971
  %51 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14972
  %rnaprop79 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %51, i32 0, i32 55, !dbg !14973
  %52 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop79, align 8, !dbg !14973
  %call80 = call i8* @RNA_property_ui_description(%struct.PropertyRNA* %52), !dbg !14974
  store i8* %call80, i8** %t, align 8, !dbg !14971
  %53 = load i8*, i8** %t, align 8, !dbg !14975
  %tobool81 = icmp ne i8* %53, null, !dbg !14975
  br i1 %tobool81, label %land.lhs.true82, label %if.end88, !dbg !14977

land.lhs.true82:                                  ; preds = %if.else78
  %54 = load i8*, i8** %t, align 8, !dbg !14978
  %arrayidx83 = getelementptr inbounds i8, i8* %54, i64 0, !dbg !14978
  %55 = load i8, i8* %arrayidx83, align 1, !dbg !14978
  %conv84 = zext i8 %55 to i32, !dbg !14978
  %tobool85 = icmp ne i32 %conv84, 0, !dbg !14978
  br i1 %tobool85, label %if.then86, label %if.end88, !dbg !14979

if.then86:                                        ; preds = %land.lhs.true82
  %56 = load i8*, i8** %t, align 8, !dbg !14980
  %call87 = call i8* @BLI_strdup(i8* %56), !dbg !14981
  store i8* %call87, i8** %tmp, align 8, !dbg !14982
  br label %if.end88, !dbg !14983

if.end88:                                         ; preds = %if.then86, %land.lhs.true82, %if.else78
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.then74
  br label %if.end155, !dbg !14984

if.else90:                                        ; preds = %if.then68
  %57 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14985
  %optype91 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %57, i32 0, i32 59, !dbg !14987
  %58 = load %struct.wmOperatorType*, %struct.wmOperatorType** %optype91, align 8, !dbg !14987
  %tobool92 = icmp ne %struct.wmOperatorType* %58, null, !dbg !14985
  br i1 %tobool92, label %if.then93, label %if.else114, !dbg !14988

if.then93:                                        ; preds = %if.else90
  %59 = load i32, i32* %type, align 4, !dbg !14989
  %cmp94 = icmp eq i32 %59, 5, !dbg !14992
  br i1 %cmp94, label %if.then96, label %if.else100, !dbg !14993

if.then96:                                        ; preds = %if.then93
  %60 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !14994
  %optype97 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %60, i32 0, i32 59, !dbg !14995
  %61 = load %struct.wmOperatorType*, %struct.wmOperatorType** %optype97, align 8, !dbg !14995
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %61, i32 0, i32 11, !dbg !14996
  %62 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !14996
  %call98 = call i8* @RNA_struct_ui_name(%struct.StructRNA* %62), !dbg !14997
  %call99 = call i8* @BLI_strdup(i8* %call98), !dbg !14998
  store i8* %call99, i8** %tmp, align 8, !dbg !14999
  br label %if.end113, !dbg !15000

if.else100:                                       ; preds = %if.then93
  call void @llvm.dbg.declare(metadata i8** %t101, metadata !15001, metadata !DIExpression()), !dbg !15003
  %63 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15004
  %optype102 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %63, i32 0, i32 59, !dbg !15005
  %64 = load %struct.wmOperatorType*, %struct.wmOperatorType** %optype102, align 8, !dbg !15005
  %srna103 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %64, i32 0, i32 11, !dbg !15006
  %65 = load %struct.StructRNA*, %struct.StructRNA** %srna103, align 8, !dbg !15006
  %call104 = call i8* @RNA_struct_ui_description(%struct.StructRNA* %65), !dbg !15007
  store i8* %call104, i8** %t101, align 8, !dbg !15003
  %66 = load i8*, i8** %t101, align 8, !dbg !15008
  %tobool105 = icmp ne i8* %66, null, !dbg !15008
  br i1 %tobool105, label %land.lhs.true106, label %if.end112, !dbg !15010

land.lhs.true106:                                 ; preds = %if.else100
  %67 = load i8*, i8** %t101, align 8, !dbg !15011
  %arrayidx107 = getelementptr inbounds i8, i8* %67, i64 0, !dbg !15011
  %68 = load i8, i8* %arrayidx107, align 1, !dbg !15011
  %conv108 = zext i8 %68 to i32, !dbg !15011
  %tobool109 = icmp ne i32 %conv108, 0, !dbg !15011
  br i1 %tobool109, label %if.then110, label %if.end112, !dbg !15012

if.then110:                                       ; preds = %land.lhs.true106
  %69 = load i8*, i8** %t101, align 8, !dbg !15013
  %call111 = call i8* @BLI_strdup(i8* %69), !dbg !15014
  store i8* %call111, i8** %tmp, align 8, !dbg !15015
  br label %if.end112, !dbg !15016

if.end112:                                        ; preds = %if.then110, %land.lhs.true106, %if.else100
  br label %if.end113

if.end113:                                        ; preds = %if.end112, %if.then96
  br label %if.end154, !dbg !15017

if.else114:                                       ; preds = %if.else90
  %70 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15018
  %type115 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %70, i32 0, i32 4, !dbg !15018
  %71 = load i32, i32* %type115, align 8, !dbg !15018
  %cmp116 = icmp eq i32 %71, 5632, !dbg !15018
  br i1 %cmp116, label %if.then122, label %lor.lhs.false118, !dbg !15018

lor.lhs.false118:                                 ; preds = %if.else114
  %72 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15018
  %type119 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %72, i32 0, i32 4, !dbg !15018
  %73 = load i32, i32* %type119, align 8, !dbg !15018
  %cmp120 = icmp eq i32 %73, 13824, !dbg !15018
  br i1 %cmp120, label %if.then122, label %if.end153, !dbg !15020

if.then122:                                       ; preds = %lor.lhs.false118, %if.else114
  call void @llvm.dbg.declare(metadata %struct.MenuType** %mt123, metadata !15021, metadata !DIExpression()), !dbg !15023
  %74 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15024
  %call124 = call %struct.MenuType* @uiButGetMenuType(%struct.uiBut* %74), !dbg !15025
  store %struct.MenuType* %call124, %struct.MenuType** %mt123, align 8, !dbg !15023
  %75 = load %struct.MenuType*, %struct.MenuType** %mt123, align 8, !dbg !15026
  %tobool125 = icmp ne %struct.MenuType* %75, null, !dbg !15026
  br i1 %tobool125, label %if.then126, label %if.end152, !dbg !15028

if.then126:                                       ; preds = %if.then122
  %76 = load %struct.MenuType*, %struct.MenuType** %mt123, align 8, !dbg !15029
  %ext = getelementptr inbounds %struct.MenuType, %struct.MenuType* %76, i32 0, i32 8, !dbg !15032
  %srna127 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext, i32 0, i32 1, !dbg !15033
  %77 = load %struct.StructRNA*, %struct.StructRNA** %srna127, align 8, !dbg !15033
  %tobool128 = icmp ne %struct.StructRNA* %77, null, !dbg !15029
  br i1 %tobool128, label %if.then129, label %if.end151, !dbg !15034

if.then129:                                       ; preds = %if.then126
  %78 = load i32, i32* %type, align 4, !dbg !15035
  %cmp130 = icmp eq i32 %78, 5, !dbg !15038
  br i1 %cmp130, label %if.then132, label %if.else137, !dbg !15039

if.then132:                                       ; preds = %if.then129
  %79 = load %struct.MenuType*, %struct.MenuType** %mt123, align 8, !dbg !15040
  %ext133 = getelementptr inbounds %struct.MenuType, %struct.MenuType* %79, i32 0, i32 8, !dbg !15041
  %srna134 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext133, i32 0, i32 1, !dbg !15042
  %80 = load %struct.StructRNA*, %struct.StructRNA** %srna134, align 8, !dbg !15042
  %call135 = call i8* @RNA_struct_ui_name(%struct.StructRNA* %80), !dbg !15043
  %call136 = call i8* @BLI_strdup(i8* %call135), !dbg !15044
  store i8* %call136, i8** %tmp, align 8, !dbg !15045
  br label %if.end150, !dbg !15046

if.else137:                                       ; preds = %if.then129
  call void @llvm.dbg.declare(metadata i8** %t138, metadata !15047, metadata !DIExpression()), !dbg !15049
  %81 = load %struct.MenuType*, %struct.MenuType** %mt123, align 8, !dbg !15050
  %ext139 = getelementptr inbounds %struct.MenuType, %struct.MenuType* %81, i32 0, i32 8, !dbg !15051
  %srna140 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext139, i32 0, i32 1, !dbg !15052
  %82 = load %struct.StructRNA*, %struct.StructRNA** %srna140, align 8, !dbg !15052
  %call141 = call i8* @RNA_struct_ui_description(%struct.StructRNA* %82), !dbg !15053
  store i8* %call141, i8** %t138, align 8, !dbg !15049
  %83 = load i8*, i8** %t138, align 8, !dbg !15054
  %tobool142 = icmp ne i8* %83, null, !dbg !15054
  br i1 %tobool142, label %land.lhs.true143, label %if.end149, !dbg !15056

land.lhs.true143:                                 ; preds = %if.else137
  %84 = load i8*, i8** %t138, align 8, !dbg !15057
  %arrayidx144 = getelementptr inbounds i8, i8* %84, i64 0, !dbg !15057
  %85 = load i8, i8* %arrayidx144, align 1, !dbg !15057
  %conv145 = zext i8 %85 to i32, !dbg !15057
  %tobool146 = icmp ne i32 %conv145, 0, !dbg !15057
  br i1 %tobool146, label %if.then147, label %if.end149, !dbg !15058

if.then147:                                       ; preds = %land.lhs.true143
  %86 = load i8*, i8** %t138, align 8, !dbg !15059
  %call148 = call i8* @BLI_strdup(i8* %86), !dbg !15060
  store i8* %call148, i8** %tmp, align 8, !dbg !15061
  br label %if.end149, !dbg !15062

if.end149:                                        ; preds = %if.then147, %land.lhs.true143, %if.else137
  br label %if.end150

if.end150:                                        ; preds = %if.end149, %if.then132
  br label %if.end151, !dbg !15063

if.end151:                                        ; preds = %if.end150, %if.then126
  br label %if.end152, !dbg !15064

if.end152:                                        ; preds = %if.end151, %if.then122
  br label %if.end153, !dbg !15065

if.end153:                                        ; preds = %if.end152, %lor.lhs.false118
  br label %if.end154

if.end154:                                        ; preds = %if.end153, %if.end113
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.end89
  br label %if.end327, !dbg !15066

if.else156:                                       ; preds = %lor.lhs.false65
  %87 = load i32, i32* %type, align 4, !dbg !15067
  %cmp157 = icmp eq i32 %87, 7, !dbg !15069
  br i1 %cmp157, label %if.then159, label %if.else197, !dbg !15070

if.then159:                                       ; preds = %if.else156
  call void @llvm.dbg.declare(metadata i8** %_tmp, metadata !15071, metadata !DIExpression()), !dbg !15073
  store i8* null, i8** %_tmp, align 8, !dbg !15073
  %88 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15074
  %rnaprop160 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %88, i32 0, i32 55, !dbg !15076
  %89 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop160, align 8, !dbg !15076
  %tobool161 = icmp ne %struct.PropertyRNA* %89, null, !dbg !15074
  br i1 %tobool161, label %if.then162, label %if.else165, !dbg !15077

if.then162:                                       ; preds = %if.then159
  %90 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15078
  %rnaprop163 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %90, i32 0, i32 55, !dbg !15079
  %91 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop163, align 8, !dbg !15079
  %call164 = call i8* @RNA_property_translation_context(%struct.PropertyRNA* %91), !dbg !15080
  store i8* %call164, i8** %_tmp, align 8, !dbg !15081
  br label %if.end191, !dbg !15082

if.else165:                                       ; preds = %if.then159
  %92 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15083
  %optype166 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %92, i32 0, i32 59, !dbg !15085
  %93 = load %struct.wmOperatorType*, %struct.wmOperatorType** %optype166, align 8, !dbg !15085
  %tobool167 = icmp ne %struct.wmOperatorType* %93, null, !dbg !15083
  br i1 %tobool167, label %if.then168, label %if.else172, !dbg !15086

if.then168:                                       ; preds = %if.else165
  %94 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15087
  %optype169 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %94, i32 0, i32 59, !dbg !15088
  %95 = load %struct.wmOperatorType*, %struct.wmOperatorType** %optype169, align 8, !dbg !15088
  %srna170 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %95, i32 0, i32 11, !dbg !15089
  %96 = load %struct.StructRNA*, %struct.StructRNA** %srna170, align 8, !dbg !15089
  %call171 = call i8* @RNA_struct_translation_context(%struct.StructRNA* %96), !dbg !15090
  store i8* %call171, i8** %_tmp, align 8, !dbg !15091
  br label %if.end190, !dbg !15092

if.else172:                                       ; preds = %if.else165
  %97 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15093
  %type173 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %97, i32 0, i32 4, !dbg !15093
  %98 = load i32, i32* %type173, align 8, !dbg !15093
  %cmp174 = icmp eq i32 %98, 5632, !dbg !15093
  br i1 %cmp174, label %if.then180, label %lor.lhs.false176, !dbg !15093

lor.lhs.false176:                                 ; preds = %if.else172
  %99 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15093
  %type177 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %99, i32 0, i32 4, !dbg !15093
  %100 = load i32, i32* %type177, align 8, !dbg !15093
  %cmp178 = icmp eq i32 %100, 13824, !dbg !15093
  br i1 %cmp178, label %if.then180, label %if.end189, !dbg !15095

if.then180:                                       ; preds = %lor.lhs.false176, %if.else172
  call void @llvm.dbg.declare(metadata %struct.MenuType** %mt181, metadata !15096, metadata !DIExpression()), !dbg !15098
  %101 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15099
  %call182 = call %struct.MenuType* @uiButGetMenuType(%struct.uiBut* %101), !dbg !15100
  store %struct.MenuType* %call182, %struct.MenuType** %mt181, align 8, !dbg !15098
  %102 = load %struct.MenuType*, %struct.MenuType** %mt181, align 8, !dbg !15101
  %tobool183 = icmp ne %struct.MenuType* %102, null, !dbg !15101
  br i1 %tobool183, label %if.then184, label %if.end188, !dbg !15103

if.then184:                                       ; preds = %if.then180
  %103 = load %struct.MenuType*, %struct.MenuType** %mt181, align 8, !dbg !15104
  %ext185 = getelementptr inbounds %struct.MenuType, %struct.MenuType* %103, i32 0, i32 8, !dbg !15105
  %srna186 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext185, i32 0, i32 1, !dbg !15106
  %104 = load %struct.StructRNA*, %struct.StructRNA** %srna186, align 8, !dbg !15106
  %call187 = call i8* @RNA_struct_translation_context(%struct.StructRNA* %104), !dbg !15107
  store i8* %call187, i8** %_tmp, align 8, !dbg !15108
  br label %if.end188, !dbg !15109

if.end188:                                        ; preds = %if.then184, %if.then180
  br label %if.end189, !dbg !15110

if.end189:                                        ; preds = %if.end188, %lor.lhs.false176
  br label %if.end190

if.end190:                                        ; preds = %if.end189, %if.then168
  br label %if.end191

if.end191:                                        ; preds = %if.end190, %if.then162
  %105 = load i8*, i8** %_tmp, align 8, !dbg !15111
  %call192 = call zeroext i8 @BLF_is_default_context(i8* %105), !dbg !15113
  %tobool193 = icmp ne i8 %call192, 0, !dbg !15113
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !15114

if.then194:                                       ; preds = %if.end191
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26, i64 0, i64 0), i8** %_tmp, align 8, !dbg !15115
  br label %if.end195, !dbg !15117

if.end195:                                        ; preds = %if.then194, %if.end191
  %106 = load i8*, i8** %_tmp, align 8, !dbg !15118
  %call196 = call i8* @BLI_strdup(i8* %106), !dbg !15119
  store i8* %call196, i8** %tmp, align 8, !dbg !15120
  br label %if.end326, !dbg !15121

if.else197:                                       ; preds = %if.else156
  %107 = load i32, i32* %type, align 4, !dbg !15122
  %cmp198 = icmp eq i32 %107, 3, !dbg !15122
  br i1 %cmp198, label %if.then206, label %lor.lhs.false200, !dbg !15122

lor.lhs.false200:                                 ; preds = %if.else197
  %108 = load i32, i32* %type, align 4, !dbg !15122
  %cmp201 = icmp eq i32 %108, 6, !dbg !15122
  br i1 %cmp201, label %if.then206, label %lor.lhs.false203, !dbg !15122

lor.lhs.false203:                                 ; preds = %lor.lhs.false200
  %109 = load i32, i32* %type, align 4, !dbg !15122
  %cmp204 = icmp eq i32 %109, 10, !dbg !15122
  br i1 %cmp204, label %if.then206, label %if.else296, !dbg !15124

if.then206:                                       ; preds = %lor.lhs.false203, %lor.lhs.false200, %if.else197
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr, metadata !15125, metadata !DIExpression()), !dbg !15127
  store %struct.PointerRNA* null, %struct.PointerRNA** %ptr, align 8, !dbg !15127
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !15128, metadata !DIExpression()), !dbg !15129
  store %struct.PropertyRNA* null, %struct.PropertyRNA** %prop, align 8, !dbg !15129
  call void @llvm.dbg.declare(metadata i32* %value, metadata !15130, metadata !DIExpression()), !dbg !15131
  store i32 0, i32* %value, align 4, !dbg !15131
  %110 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15132
  %rnaprop207 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %110, i32 0, i32 55, !dbg !15134
  %111 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop207, align 8, !dbg !15134
  %tobool208 = icmp ne %struct.PropertyRNA* %111, null, !dbg !15132
  br i1 %tobool208, label %land.lhs.true209, label %if.else223, !dbg !15135

land.lhs.true209:                                 ; preds = %if.then206
  %112 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15136
  %rnaprop210 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %112, i32 0, i32 55, !dbg !15137
  %113 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop210, align 8, !dbg !15137
  %call211 = call i32 @RNA_property_type(%struct.PropertyRNA* %113), !dbg !15138
  %cmp212 = icmp eq i32 %call211, 4, !dbg !15139
  br i1 %cmp212, label %if.then214, label %if.else223, !dbg !15140

if.then214:                                       ; preds = %land.lhs.true209
  %114 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15141
  %rnapoin215 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %114, i32 0, i32 54, !dbg !15143
  store %struct.PointerRNA* %rnapoin215, %struct.PointerRNA** %ptr, align 8, !dbg !15144
  %115 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15145
  %rnaprop216 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %115, i32 0, i32 55, !dbg !15146
  %116 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop216, align 8, !dbg !15146
  store %struct.PropertyRNA* %116, %struct.PropertyRNA** %prop, align 8, !dbg !15147
  %117 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15148
  %type217 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %117, i32 0, i32 4, !dbg !15149
  %118 = load i32, i32* %type217, align 8, !dbg !15149
  %cmp218 = icmp eq i32 %118, 1024, !dbg !15150
  br i1 %cmp218, label %cond.true, label %cond.false, !dbg !15151

cond.true:                                        ; preds = %if.then214
  %119 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15152
  %hardmax = getelementptr inbounds %struct.uiBut, %struct.uiBut* %119, i32 0, i32 21, !dbg !15153
  %120 = load float, float* %hardmax, align 4, !dbg !15153
  %conv220 = fptosi float %120 to i32, !dbg !15154
  br label %cond.end, !dbg !15151

cond.false:                                       ; preds = %if.then214
  %121 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15155
  %call221 = call double @ui_get_but_val(%struct.uiBut* %121), !dbg !15156
  %conv222 = fptosi double %call221 to i32, !dbg !15157
  br label %cond.end, !dbg !15151

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv220, %cond.true ], [ %conv222, %cond.false ], !dbg !15151
  store i32 %cond, i32* %value, align 4, !dbg !15158
  br label %if.end247, !dbg !15159

if.else223:                                       ; preds = %land.lhs.true209, %if.then206
  %122 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15160
  %optype224 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %122, i32 0, i32 59, !dbg !15162
  %123 = load %struct.wmOperatorType*, %struct.wmOperatorType** %optype224, align 8, !dbg !15162
  %tobool225 = icmp ne %struct.wmOperatorType* %123, null, !dbg !15160
  br i1 %tobool225, label %if.then226, label %if.end246, !dbg !15163

if.then226:                                       ; preds = %if.else223
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %opptr, metadata !15164, metadata !DIExpression()), !dbg !15166
  %124 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15167
  %call227 = call %struct.PointerRNA* @uiButGetOperatorPtrRNA(%struct.uiBut* %124), !dbg !15168
  store %struct.PointerRNA* %call227, %struct.PointerRNA** %opptr, align 8, !dbg !15166
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !15169, metadata !DIExpression()), !dbg !15170
  %125 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15171
  %optype228 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %125, i32 0, i32 59, !dbg !15172
  %126 = load %struct.wmOperatorType*, %struct.wmOperatorType** %optype228, align 8, !dbg !15172
  store %struct.wmOperatorType* %126, %struct.wmOperatorType** %ot, align 8, !dbg !15170
  %127 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !15173
  %prop229 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %127, i32 0, i32 13, !dbg !15175
  %128 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop229, align 8, !dbg !15175
  %tobool230 = icmp ne %struct.PropertyRNA* %128, null, !dbg !15173
  br i1 %tobool230, label %land.lhs.true231, label %if.end245, !dbg !15176

land.lhs.true231:                                 ; preds = %if.then226
  %129 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !15177
  %prop232 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %129, i32 0, i32 13, !dbg !15178
  %130 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop232, align 8, !dbg !15178
  %call233 = call i32 @RNA_property_type(%struct.PropertyRNA* %130), !dbg !15179
  %cmp234 = icmp eq i32 %call233, 4, !dbg !15180
  br i1 %cmp234, label %if.then236, label %if.end245, !dbg !15181

if.then236:                                       ; preds = %land.lhs.true231
  %131 = load %struct.PointerRNA*, %struct.PointerRNA** %opptr, align 8, !dbg !15182
  %132 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !15185
  %prop237 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %132, i32 0, i32 13, !dbg !15186
  %133 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop237, align 8, !dbg !15186
  %call238 = call zeroext i8 @RNA_struct_contains_property(%struct.PointerRNA* %131, %struct.PropertyRNA* %133), !dbg !15187
  %tobool239 = icmp ne i8 %call238, 0, !dbg !15187
  br i1 %tobool239, label %if.then240, label %if.end244, !dbg !15188

if.then240:                                       ; preds = %if.then236
  %134 = load %struct.PointerRNA*, %struct.PointerRNA** %opptr, align 8, !dbg !15189
  store %struct.PointerRNA* %134, %struct.PointerRNA** %ptr, align 8, !dbg !15191
  %135 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !15192
  %prop241 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %135, i32 0, i32 13, !dbg !15193
  %136 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop241, align 8, !dbg !15193
  store %struct.PropertyRNA* %136, %struct.PropertyRNA** %prop, align 8, !dbg !15194
  %137 = load %struct.PointerRNA*, %struct.PointerRNA** %opptr, align 8, !dbg !15195
  %138 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !15196
  %prop242 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %138, i32 0, i32 13, !dbg !15197
  %139 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop242, align 8, !dbg !15197
  %call243 = call i32 @RNA_property_enum_get(%struct.PointerRNA* %137, %struct.PropertyRNA* %139), !dbg !15198
  store i32 %call243, i32* %value, align 4, !dbg !15199
  br label %if.end244, !dbg !15200

if.end244:                                        ; preds = %if.then240, %if.then236
  br label %if.end245, !dbg !15201

if.end245:                                        ; preds = %if.end244, %land.lhs.true231, %if.then226
  br label %if.end246, !dbg !15202

if.end246:                                        ; preds = %if.end245, %if.else223
  br label %if.end247

if.end247:                                        ; preds = %if.end246, %cond.end
  %140 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !15203
  %tobool248 = icmp ne %struct.PointerRNA* %140, null, !dbg !15203
  br i1 %tobool248, label %land.lhs.true249, label %if.end295, !dbg !15205

land.lhs.true249:                                 ; preds = %if.end247
  %141 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !15206
  %tobool250 = icmp ne %struct.PropertyRNA* %141, null, !dbg !15206
  br i1 %tobool250, label %if.then251, label %if.end295, !dbg !15207

if.then251:                                       ; preds = %land.lhs.true249
  %142 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !15208
  %tobool252 = icmp ne %struct.EnumPropertyItem* %142, null, !dbg !15208
  br i1 %tobool252, label %if.end265, label %if.then253, !dbg !15211

if.then253:                                       ; preds = %if.then251
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15212, metadata !DIExpression()), !dbg !15214
  %143 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !15215
  %144 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !15216
  %145 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !15217
  call void @RNA_property_enum_items_gettexted(%struct.bContext* %143, %struct.PointerRNA* %144, %struct.PropertyRNA* %145, %struct.EnumPropertyItem** %items, i32* %totitems, i8* %free_items), !dbg !15218
  store i32 0, i32* %i, align 4, !dbg !15219
  %146 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %items, align 8, !dbg !15221
  store %struct.EnumPropertyItem* %146, %struct.EnumPropertyItem** %item, align 8, !dbg !15222
  br label %for.cond, !dbg !15223

for.cond:                                         ; preds = %for.inc, %if.then253
  %147 = load i32, i32* %i, align 4, !dbg !15224
  %148 = load i32, i32* %totitems, align 4, !dbg !15226
  %cmp254 = icmp slt i32 %147, %148, !dbg !15227
  br i1 %cmp254, label %for.body, label %for.end, !dbg !15228

for.body:                                         ; preds = %for.cond
  %149 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !15229
  %identifier = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %149, i32 0, i32 1, !dbg !15232
  %150 = load i8*, i8** %identifier, align 8, !dbg !15232
  %arrayidx256 = getelementptr inbounds i8, i8* %150, i64 0, !dbg !15229
  %151 = load i8, i8* %arrayidx256, align 1, !dbg !15229
  %conv257 = zext i8 %151 to i32, !dbg !15229
  %tobool258 = icmp ne i32 %conv257, 0, !dbg !15229
  br i1 %tobool258, label %land.lhs.true259, label %if.end264, !dbg !15233

land.lhs.true259:                                 ; preds = %for.body
  %152 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !15234
  %value260 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %152, i32 0, i32 0, !dbg !15235
  %153 = load i32, i32* %value260, align 8, !dbg !15235
  %154 = load i32, i32* %value, align 4, !dbg !15236
  %cmp261 = icmp eq i32 %153, %154, !dbg !15237
  br i1 %cmp261, label %if.then263, label %if.end264, !dbg !15238

if.then263:                                       ; preds = %land.lhs.true259
  br label %for.end, !dbg !15239

if.end264:                                        ; preds = %land.lhs.true259, %for.body
  br label %for.inc, !dbg !15240

for.inc:                                          ; preds = %if.end264
  %155 = load i32, i32* %i, align 4, !dbg !15241
  %inc = add nsw i32 %155, 1, !dbg !15241
  store i32 %inc, i32* %i, align 4, !dbg !15241
  %156 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !15242
  %incdec.ptr = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %156, i32 1, !dbg !15242
  store %struct.EnumPropertyItem* %incdec.ptr, %struct.EnumPropertyItem** %item, align 8, !dbg !15242
  br label %for.cond, !dbg !15243, !llvm.loop !15244

for.end:                                          ; preds = %if.then263, %for.cond
  br label %if.end265, !dbg !15246

if.end265:                                        ; preds = %for.end, %if.then251
  %157 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !15247
  %tobool266 = icmp ne %struct.EnumPropertyItem* %157, null, !dbg !15247
  br i1 %tobool266, label %land.lhs.true267, label %if.end294, !dbg !15249

land.lhs.true267:                                 ; preds = %if.end265
  %158 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !15250
  %identifier268 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %158, i32 0, i32 1, !dbg !15251
  %159 = load i8*, i8** %identifier268, align 8, !dbg !15251
  %tobool269 = icmp ne i8* %159, null, !dbg !15250
  br i1 %tobool269, label %if.then270, label %if.end294, !dbg !15252

if.then270:                                       ; preds = %land.lhs.true267
  %160 = load i32, i32* %type, align 4, !dbg !15253
  %cmp271 = icmp eq i32 %160, 3, !dbg !15256
  br i1 %cmp271, label %if.then273, label %if.else276, !dbg !15257

if.then273:                                       ; preds = %if.then270
  %161 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !15258
  %identifier274 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %161, i32 0, i32 1, !dbg !15259
  %162 = load i8*, i8** %identifier274, align 8, !dbg !15259
  %call275 = call i8* @BLI_strdup(i8* %162), !dbg !15260
  store i8* %call275, i8** %tmp, align 8, !dbg !15261
  br label %if.end293, !dbg !15262

if.else276:                                       ; preds = %if.then270
  %163 = load i32, i32* %type, align 4, !dbg !15263
  %cmp277 = icmp eq i32 %163, 6, !dbg !15265
  br i1 %cmp277, label %if.then279, label %if.else281, !dbg !15266

if.then279:                                       ; preds = %if.else276
  %164 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !15267
  %name = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %164, i32 0, i32 3, !dbg !15268
  %165 = load i8*, i8** %name, align 8, !dbg !15268
  %call280 = call i8* @BLI_strdup(i8* %165), !dbg !15269
  store i8* %call280, i8** %tmp, align 8, !dbg !15270
  br label %if.end292, !dbg !15271

if.else281:                                       ; preds = %if.else276
  %166 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !15272
  %description = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %166, i32 0, i32 4, !dbg !15274
  %167 = load i8*, i8** %description, align 8, !dbg !15274
  %tobool282 = icmp ne i8* %167, null, !dbg !15272
  br i1 %tobool282, label %land.lhs.true283, label %if.end291, !dbg !15275

land.lhs.true283:                                 ; preds = %if.else281
  %168 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !15276
  %description284 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %168, i32 0, i32 4, !dbg !15277
  %169 = load i8*, i8** %description284, align 8, !dbg !15277
  %arrayidx285 = getelementptr inbounds i8, i8* %169, i64 0, !dbg !15276
  %170 = load i8, i8* %arrayidx285, align 1, !dbg !15276
  %conv286 = zext i8 %170 to i32, !dbg !15276
  %tobool287 = icmp ne i32 %conv286, 0, !dbg !15276
  br i1 %tobool287, label %if.then288, label %if.end291, !dbg !15278

if.then288:                                       ; preds = %land.lhs.true283
  %171 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !15279
  %description289 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %171, i32 0, i32 4, !dbg !15280
  %172 = load i8*, i8** %description289, align 8, !dbg !15280
  %call290 = call i8* @BLI_strdup(i8* %172), !dbg !15281
  store i8* %call290, i8** %tmp, align 8, !dbg !15282
  br label %if.end291, !dbg !15283

if.end291:                                        ; preds = %if.then288, %land.lhs.true283, %if.else281
  br label %if.end292

if.end292:                                        ; preds = %if.end291, %if.then279
  br label %if.end293

if.end293:                                        ; preds = %if.end292, %if.then273
  br label %if.end294, !dbg !15284

if.end294:                                        ; preds = %if.end293, %land.lhs.true267, %if.end265
  br label %if.end295, !dbg !15285

if.end295:                                        ; preds = %if.end294, %land.lhs.true249, %if.end247
  br label %if.end325, !dbg !15286

if.else296:                                       ; preds = %lor.lhs.false203
  %173 = load i32, i32* %type, align 4, !dbg !15287
  %cmp297 = icmp eq i32 %173, 11, !dbg !15289
  br i1 %cmp297, label %if.then299, label %if.else311, !dbg !15290

if.then299:                                       ; preds = %if.else296
  %174 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15291
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %174, i32 0, i32 74, !dbg !15294
  %175 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !15294
  %call300 = call zeroext i8 @ui_block_is_menu(%struct.uiBlock* %175), !dbg !15295
  %tobool301 = icmp ne i8 %call300, 0, !dbg !15295
  br i1 %tobool301, label %if.end310, label %if.then302, !dbg !15296

if.then302:                                       ; preds = %if.then299
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !15297, metadata !DIExpression()), !dbg !15299
  %176 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !15300
  %177 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15302
  %arraydecay303 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !15303
  %call304 = call zeroext i8 @ui_but_event_operator_string(%struct.bContext* %176, %struct.uiBut* %177, i8* %arraydecay303, i64 128), !dbg !15304
  %tobool305 = icmp ne i8 %call304, 0, !dbg !15304
  br i1 %tobool305, label %if.then306, label %if.end309, !dbg !15305

if.then306:                                       ; preds = %if.then302
  %arraydecay307 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !15306
  %call308 = call i8* @BLI_strdup(i8* %arraydecay307), !dbg !15308
  store i8* %call308, i8** %tmp, align 8, !dbg !15309
  br label %if.end309, !dbg !15310

if.end309:                                        ; preds = %if.then306, %if.then302
  br label %if.end310, !dbg !15311

if.end310:                                        ; preds = %if.end309, %if.then299
  br label %if.end324, !dbg !15312

if.else311:                                       ; preds = %if.else296
  %178 = load i32, i32* %type, align 4, !dbg !15313
  %cmp312 = icmp eq i32 %178, 12, !dbg !15315
  br i1 %cmp312, label %if.then314, label %if.end323, !dbg !15316

if.then314:                                       ; preds = %if.else311
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf315, metadata !15317, metadata !DIExpression()), !dbg !15319
  %179 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !15320
  %180 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15322
  %arraydecay316 = getelementptr inbounds [128 x i8], [128 x i8]* %buf315, i64 0, i64 0, !dbg !15323
  %call317 = call zeroext i8 @ui_but_event_property_operator_string(%struct.bContext* %179, %struct.uiBut* %180, i8* %arraydecay316, i64 128), !dbg !15324
  %tobool318 = icmp ne i8 %call317, 0, !dbg !15324
  br i1 %tobool318, label %if.then319, label %if.end322, !dbg !15325

if.then319:                                       ; preds = %if.then314
  %arraydecay320 = getelementptr inbounds [128 x i8], [128 x i8]* %buf315, i64 0, i64 0, !dbg !15326
  %call321 = call i8* @BLI_strdup(i8* %arraydecay320), !dbg !15328
  store i8* %call321, i8** %tmp, align 8, !dbg !15329
  br label %if.end322, !dbg !15330

if.end322:                                        ; preds = %if.then319, %if.then314
  br label %if.end323, !dbg !15331

if.end323:                                        ; preds = %if.end322, %if.else311
  br label %if.end324

if.end324:                                        ; preds = %if.end323, %if.end310
  br label %if.end325

if.end325:                                        ; preds = %if.end324, %if.end295
  br label %if.end326

if.end326:                                        ; preds = %if.end325, %if.end195
  br label %if.end327

if.end327:                                        ; preds = %if.end326, %if.end155
  br label %if.end328

if.end328:                                        ; preds = %if.end327, %if.end61
  br label %if.end329

if.end329:                                        ; preds = %if.end328, %if.end28
  %181 = load i8*, i8** %tmp, align 8, !dbg !15332
  %182 = load %struct.uiStringInfo*, %struct.uiStringInfo** %si, align 8, !dbg !15333
  %strinfo = getelementptr inbounds %struct.uiStringInfo, %struct.uiStringInfo* %182, i32 0, i32 1, !dbg !15334
  store i8* %181, i8** %strinfo, align 8, !dbg !15335
  br label %while.cond, !dbg !14817, !llvm.loop !15336

while.end:                                        ; preds = %vaarg.end
  %arraydecay330 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !15338
  %arraydecay330331 = bitcast %struct.__va_list_tag* %arraydecay330 to i8*, !dbg !15338
  call void @llvm.va_end(i8* %arraydecay330331), !dbg !15338
  %183 = load i8, i8* %free_items, align 1, !dbg !15339
  %conv332 = zext i8 %183 to i32, !dbg !15339
  %tobool333 = icmp ne i32 %conv332, 0, !dbg !15339
  br i1 %tobool333, label %land.lhs.true334, label %if.end337, !dbg !15341

land.lhs.true334:                                 ; preds = %while.end
  %184 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %items, align 8, !dbg !15342
  %tobool335 = icmp ne %struct.EnumPropertyItem* %184, null, !dbg !15342
  br i1 %tobool335, label %if.then336, label %if.end337, !dbg !15343

if.then336:                                       ; preds = %land.lhs.true334
  %185 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15344
  %186 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %items, align 8, !dbg !15345
  %187 = bitcast %struct.EnumPropertyItem* %186 to i8*, !dbg !15345
  call void %185(i8* %187), !dbg !15344
  br label %if.end337, !dbg !15344

if.end337:                                        ; preds = %if.then336, %land.lhs.true334, %while.end
  ret void, !dbg !15346
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #5

declare dso_local i8* @RNA_property_identifier(%struct.PropertyRNA*) #3

declare dso_local i8* @RNA_struct_identifier(%struct.StructRNA*) #3

declare dso_local %struct.MenuType* @uiButGetMenuType(%struct.uiBut*) #3

declare dso_local i8* @RNA_property_ui_name(%struct.PropertyRNA*) #3

declare dso_local i8* @RNA_property_ui_description(%struct.PropertyRNA*) #3

declare dso_local i8* @RNA_struct_ui_name(%struct.StructRNA*) #3

declare dso_local i8* @RNA_struct_ui_description(%struct.StructRNA*) #3

declare dso_local i8* @RNA_property_translation_context(%struct.PropertyRNA*) #3

declare dso_local i8* @RNA_struct_translation_context(%struct.StructRNA*) #3

declare dso_local zeroext i8 @BLF_is_default_context(i8*) #3

declare dso_local void @RNA_property_enum_items_gettexted(%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, %struct.EnumPropertyItem**, i32*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ui_but_event_operator_string(%struct.bContext* %C, %struct.uiBut* %but, i8* %buf, i64 %buf_len) #0 !dbg !15347 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  %buf.addr = alloca i8*, align 8
  %buf_len.addr = alloca i64, align 8
  %mt = alloca %struct.MenuType*, align 8
  %found = alloca i8, align 1
  %prop = alloca %struct.IDProperty*, align 8
  %prop_menu = alloca %struct.IDProperty*, align 8
  %prop_menu_name = alloca %struct.IDProperty*, align 8
  %val = alloca %union.IDPropertyTemplate, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !15350, metadata !DIExpression()), !dbg !15351
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !15352, metadata !DIExpression()), !dbg !15353
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15354, metadata !DIExpression()), !dbg !15355
  store i64 %buf_len, i64* %buf_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buf_len.addr, metadata !15356, metadata !DIExpression()), !dbg !15357
  call void @llvm.dbg.declare(metadata %struct.MenuType** %mt, metadata !15358, metadata !DIExpression()), !dbg !15359
  call void @llvm.dbg.declare(metadata i8* %found, metadata !15360, metadata !DIExpression()), !dbg !15361
  store i8 0, i8* %found, align 1, !dbg !15361
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15362
  %optype = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 59, !dbg !15364
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %optype, align 8, !dbg !15364
  %tobool = icmp ne %struct.wmOperatorType* %1, null, !dbg !15362
  br i1 %tobool, label %if.then, label %if.else, !dbg !15365

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %prop, metadata !15366, metadata !DIExpression()), !dbg !15368
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15369
  %opptr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 60, !dbg !15370
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %opptr, align 8, !dbg !15370
  %tobool1 = icmp ne %struct.PointerRNA* %3, null, !dbg !15371
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !15371

cond.true:                                        ; preds = %if.then
  %4 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15372
  %opptr2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 60, !dbg !15373
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %opptr2, align 8, !dbg !15373
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %5, i32 0, i32 2, !dbg !15374
  %6 = load i8*, i8** %data, align 8, !dbg !15374
  br label %cond.end, !dbg !15371

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !15371

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %6, %cond.true ], [ null, %cond.false ], !dbg !15371
  %7 = bitcast i8* %cond to %struct.IDProperty*, !dbg !15371
  store %struct.IDProperty* %7, %struct.IDProperty** %prop, align 8, !dbg !15368
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !15375
  %9 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15377
  %optype3 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 59, !dbg !15378
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %optype3, align 8, !dbg !15378
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 1, !dbg !15379
  %11 = load i8*, i8** %idname, align 8, !dbg !15379
  %12 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15380
  %opcontext = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 61, !dbg !15381
  %13 = load i16, i16* %opcontext, align 8, !dbg !15381
  %conv = sext i16 %13 to i32, !dbg !15380
  %14 = load %struct.IDProperty*, %struct.IDProperty** %prop, align 8, !dbg !15382
  %15 = load i8*, i8** %buf.addr, align 8, !dbg !15383
  %16 = load i64, i64* %buf_len.addr, align 8, !dbg !15384
  %conv4 = trunc i64 %16 to i32, !dbg !15384
  %call = call i8* @WM_key_event_operator_string(%struct.bContext* %8, i8* %11, i32 %conv, %struct.IDProperty* %14, i8 zeroext 1, i8* %15, i32 %conv4), !dbg !15385
  %tobool5 = icmp ne i8* %call, null, !dbg !15385
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !15386

if.then6:                                         ; preds = %cond.end
  store i8 1, i8* %found, align 1, !dbg !15387
  br label %if.end, !dbg !15389

if.end:                                           ; preds = %if.then6, %cond.end
  br label %if.end20, !dbg !15390

if.else:                                          ; preds = %entry
  %17 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15391
  %call7 = call %struct.MenuType* @uiButGetMenuType(%struct.uiBut* %17), !dbg !15393
  store %struct.MenuType* %call7, %struct.MenuType** %mt, align 8, !dbg !15394
  %tobool8 = icmp ne %struct.MenuType* %call7, null, !dbg !15394
  br i1 %tobool8, label %if.then9, label %if.end19, !dbg !15395

if.then9:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %prop_menu, metadata !15396, metadata !DIExpression()), !dbg !15398
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %prop_menu_name, metadata !15399, metadata !DIExpression()), !dbg !15400
  call void @llvm.dbg.declare(metadata %union.IDPropertyTemplate* %val, metadata !15401, metadata !DIExpression()), !dbg !15426
  %18 = bitcast %union.IDPropertyTemplate* %val to i8*, !dbg !15426
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 bitcast ({ i32, [12 x i8] }* @__const.ui_but_event_operator_string.val to i8*), i64 16, i1 false), !dbg !15426
  %call10 = call %struct.IDProperty* @IDP_New(i32 6, %union.IDPropertyTemplate* %val, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.ui_but_event_operator_string, i64 0, i64 0)), !dbg !15427
  store %struct.IDProperty* %call10, %struct.IDProperty** %prop_menu, align 8, !dbg !15428
  %19 = load %struct.IDProperty*, %struct.IDProperty** %prop_menu, align 8, !dbg !15429
  %call11 = call %struct.IDProperty* @IDP_NewString(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i32 64), !dbg !15430
  store %struct.IDProperty* %call11, %struct.IDProperty** %prop_menu_name, align 8, !dbg !15431
  %call12 = call zeroext i8 @IDP_AddToGroup(%struct.IDProperty* %19, %struct.IDProperty* %call11), !dbg !15432
  %20 = load %struct.IDProperty*, %struct.IDProperty** %prop_menu_name, align 8, !dbg !15433
  %21 = load %struct.MenuType*, %struct.MenuType** %mt, align 8, !dbg !15434
  %idname13 = getelementptr inbounds %struct.MenuType, %struct.MenuType* %21, i32 0, i32 2, !dbg !15435
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname13, i64 0, i64 0, !dbg !15434
  call void @IDP_AssignString(%struct.IDProperty* %20, i8* %arraydecay, i32 64), !dbg !15436
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !15437
  %23 = load %struct.IDProperty*, %struct.IDProperty** %prop_menu, align 8, !dbg !15439
  %24 = load i8*, i8** %buf.addr, align 8, !dbg !15440
  %25 = load i64, i64* %buf_len.addr, align 8, !dbg !15441
  %conv14 = trunc i64 %25 to i32, !dbg !15441
  %call15 = call i8* @WM_key_event_operator_string(%struct.bContext* %22, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.34, i64 0, i64 0), i32 1, %struct.IDProperty* %23, i8 zeroext 1, i8* %24, i32 %conv14), !dbg !15442
  %tobool16 = icmp ne i8* %call15, null, !dbg !15442
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !15443

if.then17:                                        ; preds = %if.then9
  store i8 1, i8* %found, align 1, !dbg !15444
  br label %if.end18, !dbg !15446

if.end18:                                         ; preds = %if.then17, %if.then9
  %26 = load %struct.IDProperty*, %struct.IDProperty** %prop_menu, align 8, !dbg !15447
  call void @IDP_FreeProperty(%struct.IDProperty* %26), !dbg !15448
  %27 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15449
  %28 = load %struct.IDProperty*, %struct.IDProperty** %prop_menu, align 8, !dbg !15450
  %29 = bitcast %struct.IDProperty* %28 to i8*, !dbg !15450
  call void %27(i8* %29), !dbg !15449
  br label %if.end19, !dbg !15451

if.end19:                                         ; preds = %if.end18, %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.end
  %30 = load i8, i8* %found, align 1, !dbg !15452
  ret i8 %30, !dbg !15453
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ui_but_event_property_operator_string(%struct.bContext* %C, %struct.uiBut* %but, i8* %buf, i64 %buf_len) #0 !dbg !15454 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  %buf.addr = alloca i8*, align 8
  %buf_len.addr = alloca i64, align 8
  %ctx_toggle_opnames = alloca [7 x i8*], align 16
  %num_ops = alloca i64, align 8
  %found = alloca i8, align 1
  %data_path = alloca i8*, align 8
  %id3 = alloca %struct.ID*, align 8
  %path = alloca i8*, align 8
  %i = alloca i64, align 8
  %prop_path = alloca %struct.IDProperty*, align 8
  %prop_path_value = alloca %struct.IDProperty*, align 8
  %val = alloca %union.IDPropertyTemplate, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !15455, metadata !DIExpression()), !dbg !15456
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !15457, metadata !DIExpression()), !dbg !15458
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15459, metadata !DIExpression()), !dbg !15460
  store i64 %buf_len, i64* %buf_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buf_len.addr, metadata !15461, metadata !DIExpression()), !dbg !15462
  call void @llvm.dbg.declare(metadata [7 x i8*]* %ctx_toggle_opnames, metadata !15463, metadata !DIExpression()), !dbg !15465
  %0 = bitcast [7 x i8*]* %ctx_toggle_opnames to i8*, !dbg !15465
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 56, i1 false), !dbg !15465
  %1 = bitcast i8* %0 to [7 x i8*]*, !dbg !15465
  %2 = getelementptr inbounds [7 x i8*], [7 x i8*]* %1, i32 0, i32 0, !dbg !15465
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35, i32 0, i32 0), i8** %2, align 16, !dbg !15465
  %3 = getelementptr inbounds [7 x i8*], [7 x i8*]* %1, i32 0, i32 1, !dbg !15465
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.36, i32 0, i32 0), i8** %3, align 8, !dbg !15465
  %4 = getelementptr inbounds [7 x i8*], [7 x i8*]* %1, i32 0, i32 2, !dbg !15465
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.37, i32 0, i32 0), i8** %4, align 16, !dbg !15465
  %5 = getelementptr inbounds [7 x i8*], [7 x i8*]* %1, i32 0, i32 3, !dbg !15465
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), i8** %5, align 8, !dbg !15465
  %6 = getelementptr inbounds [7 x i8*], [7 x i8*]* %1, i32 0, i32 4, !dbg !15465
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.39, i32 0, i32 0), i8** %6, align 16, !dbg !15465
  %7 = getelementptr inbounds [7 x i8*], [7 x i8*]* %1, i32 0, i32 5, !dbg !15465
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.40, i32 0, i32 0), i8** %7, align 8, !dbg !15465
  call void @llvm.dbg.declare(metadata i64* %num_ops, metadata !15466, metadata !DIExpression()), !dbg !15467
  store i64 7, i64* %num_ops, align 8, !dbg !15467
  call void @llvm.dbg.declare(metadata i8* %found, metadata !15468, metadata !DIExpression()), !dbg !15469
  store i8 0, i8* %found, align 1, !dbg !15469
  %8 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15470
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 55, !dbg !15472
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !15472
  %tobool = icmp ne %struct.PropertyRNA* %9, null, !dbg !15470
  br i1 %tobool, label %if.then, label %if.end69, !dbg !15473

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %data_path, metadata !15474, metadata !DIExpression()), !dbg !15476
  store i8* null, i8** %data_path, align 8, !dbg !15476
  %10 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15477
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 54, !dbg !15479
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin, i32 0, i32 0, !dbg !15480
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !15481
  %11 = load i8*, i8** %data, align 8, !dbg !15481
  %tobool1 = icmp ne i8* %11, null, !dbg !15477
  br i1 %tobool1, label %if.then2, label %if.end51, !dbg !15482

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.ID** %id3, metadata !15483, metadata !DIExpression()), !dbg !15485
  %12 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15486
  %rnapoin4 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 54, !dbg !15487
  %id5 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin4, i32 0, i32 0, !dbg !15488
  %data6 = getelementptr inbounds %struct.anon, %struct.anon* %id5, i32 0, i32 0, !dbg !15489
  %13 = load i8*, i8** %data6, align 8, !dbg !15489
  %14 = bitcast i8* %13 to %struct.ID*, !dbg !15486
  store %struct.ID* %14, %struct.ID** %id3, align 8, !dbg !15485
  %15 = load %struct.ID*, %struct.ID** %id3, align 8, !dbg !15490
  %name = getelementptr inbounds %struct.ID, %struct.ID* %15, i32 0, i32 4, !dbg !15490
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !15490
  %16 = bitcast i8* %arraydecay to i16*, !dbg !15490
  %17 = load i16, i16* %16, align 8, !dbg !15490
  %conv = sext i16 %17 to i32, !dbg !15490
  %cmp = icmp eq i32 %conv, 21075, !dbg !15492
  br i1 %cmp, label %if.then8, label %if.else24, !dbg !15493

if.then8:                                         ; preds = %if.then2
  %18 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15494
  %rnapoin9 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %18, i32 0, i32 54, !dbg !15497
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin9, i32 0, i32 1, !dbg !15498
  %19 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !15498
  %call = call zeroext i8 @RNA_struct_is_a(%struct.StructRNA* %19, %struct.StructRNA* @RNA_Space), !dbg !15499
  %tobool10 = icmp ne i8 %call, 0, !dbg !15499
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !15500

if.then11:                                        ; preds = %if.then8
  %20 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15501
  %rnaprop12 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %20, i32 0, i32 55, !dbg !15503
  %21 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop12, align 8, !dbg !15503
  %call13 = call i8* @RNA_property_identifier(%struct.PropertyRNA* %21), !dbg !15504
  %call14 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.41, i64 0, i64 0), i8* %call13), !dbg !15505
  store i8* %call14, i8** %data_path, align 8, !dbg !15506
  br label %if.end23, !dbg !15507

if.else:                                          ; preds = %if.then8
  %22 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15508
  %rnapoin15 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %22, i32 0, i32 54, !dbg !15511
  %type16 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin15, i32 0, i32 1, !dbg !15512
  %23 = load %struct.StructRNA*, %struct.StructRNA** %type16, align 8, !dbg !15512
  %call17 = call zeroext i8 @RNA_struct_is_a(%struct.StructRNA* %23, %struct.StructRNA* @RNA_DopeSheet), !dbg !15513
  %tobool18 = icmp ne i8 %call17, 0, !dbg !15513
  br i1 %tobool18, label %if.then19, label %if.end, !dbg !15514

if.then19:                                        ; preds = %if.else
  %24 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15515
  %rnaprop20 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %24, i32 0, i32 55, !dbg !15517
  %25 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop20, align 8, !dbg !15517
  %call21 = call i8* @RNA_property_identifier(%struct.PropertyRNA* %25), !dbg !15518
  %call22 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.42, i64 0, i64 0), i8* %call21), !dbg !15519
  store i8* %call22, i8** %data_path, align 8, !dbg !15520
  br label %if.end, !dbg !15521

if.end:                                           ; preds = %if.then19, %if.else
  br label %if.end23

if.end23:                                         ; preds = %if.end, %if.then11
  br label %if.end50, !dbg !15522

if.else24:                                        ; preds = %if.then2
  %26 = load %struct.ID*, %struct.ID** %id3, align 8, !dbg !15523
  %name25 = getelementptr inbounds %struct.ID, %struct.ID* %26, i32 0, i32 4, !dbg !15523
  %arraydecay26 = getelementptr inbounds [66 x i8], [66 x i8]* %name25, i64 0, i64 0, !dbg !15523
  %27 = bitcast i8* %arraydecay26 to i16*, !dbg !15523
  %28 = load i16, i16* %27, align 8, !dbg !15523
  %conv27 = sext i16 %28 to i32, !dbg !15523
  %cmp28 = icmp eq i32 %conv27, 17235, !dbg !15525
  br i1 %cmp28, label %if.then30, label %if.else48, !dbg !15526

if.then30:                                        ; preds = %if.else24
  %29 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15527
  %rnapoin31 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %29, i32 0, i32 54, !dbg !15530
  %type32 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin31, i32 0, i32 1, !dbg !15531
  %30 = load %struct.StructRNA*, %struct.StructRNA** %type32, align 8, !dbg !15531
  %call33 = call zeroext i8 @RNA_struct_is_a(%struct.StructRNA* %30, %struct.StructRNA* @RNA_ToolSettings), !dbg !15532
  %tobool34 = icmp ne i8 %call33, 0, !dbg !15532
  br i1 %tobool34, label %if.then35, label %if.else39, !dbg !15533

if.then35:                                        ; preds = %if.then30
  %31 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15534
  %rnapoin36 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %31, i32 0, i32 54, !dbg !15536
  %32 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15537
  %rnaprop37 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %32, i32 0, i32 55, !dbg !15538
  %33 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop37, align 8, !dbg !15538
  %call38 = call i8* @RNA_path_from_ID_to_property(%struct.PointerRNA* %rnapoin36, %struct.PropertyRNA* %33), !dbg !15539
  store i8* %call38, i8** %data_path, align 8, !dbg !15540
  br label %if.end47, !dbg !15541

if.else39:                                        ; preds = %if.then30
  call void @llvm.dbg.declare(metadata i8** %path, metadata !15542, metadata !DIExpression()), !dbg !15544
  %34 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15545
  %rnapoin40 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %34, i32 0, i32 54, !dbg !15546
  %35 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15547
  %rnaprop41 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %35, i32 0, i32 55, !dbg !15548
  %36 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop41, align 8, !dbg !15548
  %call42 = call i8* @RNA_path_from_ID_to_property(%struct.PointerRNA* %rnapoin40, %struct.PropertyRNA* %36), !dbg !15549
  store i8* %call42, i8** %path, align 8, !dbg !15544
  %37 = load i8*, i8** %path, align 8, !dbg !15550
  %tobool43 = icmp ne i8* %37, null, !dbg !15550
  br i1 %tobool43, label %if.then44, label %if.end46, !dbg !15552

if.then44:                                        ; preds = %if.else39
  %38 = load i8*, i8** %path, align 8, !dbg !15553
  %call45 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i64 0, i64 0), i8* %38), !dbg !15555
  store i8* %call45, i8** %data_path, align 8, !dbg !15556
  %39 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15557
  %40 = load i8*, i8** %path, align 8, !dbg !15558
  call void %39(i8* %40), !dbg !15557
  br label %if.end46, !dbg !15559

if.end46:                                         ; preds = %if.then44, %if.else39
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then35
  br label %if.end49, !dbg !15560

if.else48:                                        ; preds = %if.else24
  br label %if.end49

if.end49:                                         ; preds = %if.else48, %if.end47
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end23
  br label %if.end51, !dbg !15561

if.end51:                                         ; preds = %if.end50, %if.then
  %41 = load i8*, i8** %data_path, align 8, !dbg !15562
  %tobool52 = icmp ne i8* %41, null, !dbg !15562
  br i1 %tobool52, label %if.then53, label %if.end68, !dbg !15564

if.then53:                                        ; preds = %if.end51
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15565, metadata !DIExpression()), !dbg !15567
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %prop_path, metadata !15568, metadata !DIExpression()), !dbg !15569
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %prop_path_value, metadata !15570, metadata !DIExpression()), !dbg !15571
  call void @llvm.dbg.declare(metadata %union.IDPropertyTemplate* %val, metadata !15572, metadata !DIExpression()), !dbg !15573
  %42 = bitcast %union.IDPropertyTemplate* %val to i8*, !dbg !15573
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 bitcast ({ i32, [12 x i8] }* @__const.ui_but_event_property_operator_string.val to i8*), i64 16, i1 false), !dbg !15573
  %call54 = call %struct.IDProperty* @IDP_New(i32 6, %union.IDPropertyTemplate* %val, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__func__.ui_but_event_property_operator_string, i64 0, i64 0)), !dbg !15574
  store %struct.IDProperty* %call54, %struct.IDProperty** %prop_path, align 8, !dbg !15575
  %43 = load i8*, i8** %data_path, align 8, !dbg !15576
  %44 = load i8*, i8** %data_path, align 8, !dbg !15577
  %call55 = call i64 @strlen(i8* %44) #8, !dbg !15578
  %add = add i64 %call55, 1, !dbg !15579
  %conv56 = trunc i64 %add to i32, !dbg !15578
  %call57 = call %struct.IDProperty* @IDP_NewString(i8* %43, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i64 0, i64 0), i32 %conv56), !dbg !15580
  store %struct.IDProperty* %call57, %struct.IDProperty** %prop_path_value, align 8, !dbg !15581
  %45 = load %struct.IDProperty*, %struct.IDProperty** %prop_path, align 8, !dbg !15582
  %46 = load %struct.IDProperty*, %struct.IDProperty** %prop_path_value, align 8, !dbg !15583
  %call58 = call zeroext i8 @IDP_AddToGroup(%struct.IDProperty* %45, %struct.IDProperty* %46), !dbg !15584
  store i64 0, i64* %i, align 8, !dbg !15585
  br label %for.cond, !dbg !15587

for.cond:                                         ; preds = %for.inc, %if.then53
  %47 = load i64, i64* %i, align 8, !dbg !15588
  %cmp59 = icmp ult i64 %47, 7, !dbg !15590
  br i1 %cmp59, label %land.rhs, label %land.end, !dbg !15591

land.rhs:                                         ; preds = %for.cond
  %48 = load i64, i64* %i, align 8, !dbg !15592
  %arrayidx = getelementptr inbounds [7 x i8*], [7 x i8*]* %ctx_toggle_opnames, i64 0, i64 %48, !dbg !15593
  %49 = load i8*, i8** %arrayidx, align 8, !dbg !15593
  %tobool61 = icmp ne i8* %49, null, !dbg !15591
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %50 = phi i1 [ false, %for.cond ], [ %tobool61, %land.rhs ], !dbg !15594
  br i1 %50, label %for.body, label %for.end, !dbg !15595

for.body:                                         ; preds = %land.end
  %51 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !15596
  %52 = load i64, i64* %i, align 8, !dbg !15599
  %arrayidx62 = getelementptr inbounds [7 x i8*], [7 x i8*]* %ctx_toggle_opnames, i64 0, i64 %52, !dbg !15600
  %53 = load i8*, i8** %arrayidx62, align 8, !dbg !15600
  %54 = load %struct.IDProperty*, %struct.IDProperty** %prop_path, align 8, !dbg !15601
  %55 = load i8*, i8** %buf.addr, align 8, !dbg !15602
  %56 = load i64, i64* %buf_len.addr, align 8, !dbg !15603
  %conv63 = trunc i64 %56 to i32, !dbg !15603
  %call64 = call i8* @WM_key_event_operator_string(%struct.bContext* %51, i8* %53, i32 1, %struct.IDProperty* %54, i8 zeroext 0, i8* %55, i32 %conv63), !dbg !15604
  %tobool65 = icmp ne i8* %call64, null, !dbg !15604
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !15605

if.then66:                                        ; preds = %for.body
  store i8 1, i8* %found, align 1, !dbg !15606
  br label %for.end, !dbg !15608

if.end67:                                         ; preds = %for.body
  br label %for.inc, !dbg !15609

for.inc:                                          ; preds = %if.end67
  %57 = load i64, i64* %i, align 8, !dbg !15610
  %inc = add i64 %57, 1, !dbg !15610
  store i64 %inc, i64* %i, align 8, !dbg !15610
  br label %for.cond, !dbg !15611, !llvm.loop !15612

for.end:                                          ; preds = %if.then66, %land.end
  %58 = load %struct.IDProperty*, %struct.IDProperty** %prop_path, align 8, !dbg !15614
  call void @IDP_FreeProperty(%struct.IDProperty* %58), !dbg !15615
  %59 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15616
  %60 = load %struct.IDProperty*, %struct.IDProperty** %prop_path, align 8, !dbg !15617
  %61 = bitcast %struct.IDProperty* %60 to i8*, !dbg !15617
  call void %59(i8* %61), !dbg !15616
  %62 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15618
  %63 = load i8*, i8** %data_path, align 8, !dbg !15619
  call void %62(i8* %63), !dbg !15618
  br label %if.end68, !dbg !15620

if.end68:                                         ; preds = %for.end, %if.end51
  br label %if.end69, !dbg !15621

if.end69:                                         ; preds = %if.end68, %entry
  %64 = load i8, i8* %found, align 1, !dbg !15622
  ret i8 %64, !dbg !15623
}

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind uwtable
define dso_local void @UI_init() #0 !dbg !15624 {
entry:
  call void @ui_resources_init(), !dbg !15625
  ret void, !dbg !15626
}

declare dso_local void @ui_resources_init() #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @UI_init_userdef() #0 !dbg !15627 {
entry:
  call void @init_userdef_do_versions(), !dbg !15628
  call void @uiStyleInit(), !dbg !15629
  ret void, !dbg !15630
}

declare dso_local void @init_userdef_do_versions() #3

declare dso_local void @uiStyleInit() #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @UI_reinit_font() #0 !dbg !15631 {
entry:
  call void @uiStyleInit(), !dbg !15632
  ret void, !dbg !15633
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @UI_exit() #0 !dbg !15634 {
entry:
  call void @ui_resources_free(), !dbg !15635
  call void @ui_button_clipboard_free(), !dbg !15636
  ret void, !dbg !15637
}

declare dso_local void @ui_resources_free() #3

declare dso_local void @ui_button_clipboard_free() #3

declare dso_local void @BLI_insertlinkafter(%struct.ListBase*, i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ui_but_update_linklines(%struct.uiBlock* %block, %struct.uiBut* %oldbut, %struct.uiBut* %newbut) #0 !dbg !15638 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %oldbut.addr = alloca %struct.uiBut*, align 8
  %newbut.addr = alloca %struct.uiBut*, align 8
  %line = alloca %struct.uiLinkLine*, align 8
  %but = alloca %struct.uiBut*, align 8
  %sw_ap = alloca %struct.uiLink*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !15641, metadata !DIExpression()), !dbg !15642
  store %struct.uiBut* %oldbut, %struct.uiBut** %oldbut.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %oldbut.addr, metadata !15643, metadata !DIExpression()), !dbg !15644
  store %struct.uiBut* %newbut, %struct.uiBut** %newbut.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %newbut.addr, metadata !15645, metadata !DIExpression()), !dbg !15646
  call void @llvm.dbg.declare(metadata %struct.uiLinkLine** %line, metadata !15647, metadata !DIExpression()), !dbg !15648
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !15649, metadata !DIExpression()), !dbg !15650
  %0 = load %struct.uiBut*, %struct.uiBut** %newbut.addr, align 8, !dbg !15651
  %type = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 4, !dbg !15653
  %1 = load i32, i32* %type, align 8, !dbg !15653
  %cmp = icmp eq i32 %1, 11264, !dbg !15654
  br i1 %cmp, label %land.lhs.true, label %if.end14, !dbg !15655

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.uiBut*, %struct.uiBut** %newbut.addr, align 8, !dbg !15656
  %link = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 40, !dbg !15657
  %3 = load %struct.uiLink*, %struct.uiLink** %link, align 8, !dbg !15657
  %tobool = icmp ne %struct.uiLink* %3, null, !dbg !15656
  br i1 %tobool, label %if.then, label %if.end14, !dbg !15658

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.uiLink** %sw_ap, metadata !15659, metadata !DIExpression()), !dbg !15662
  %4 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !15662
  %link1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 40, !dbg !15662
  %5 = load %struct.uiLink*, %struct.uiLink** %link1, align 8, !dbg !15662
  store %struct.uiLink* %5, %struct.uiLink** %sw_ap, align 8, !dbg !15662
  %6 = load %struct.uiBut*, %struct.uiBut** %newbut.addr, align 8, !dbg !15662
  %link2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 40, !dbg !15662
  %7 = load %struct.uiLink*, %struct.uiLink** %link2, align 8, !dbg !15662
  %8 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !15662
  %link3 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 40, !dbg !15662
  store %struct.uiLink* %7, %struct.uiLink** %link3, align 8, !dbg !15662
  %9 = load %struct.uiLink*, %struct.uiLink** %sw_ap, align 8, !dbg !15662
  %10 = load %struct.uiBut*, %struct.uiBut** %newbut.addr, align 8, !dbg !15662
  %link4 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 40, !dbg !15662
  store %struct.uiLink* %9, %struct.uiLink** %link4, align 8, !dbg !15662
  %11 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !15663
  %link5 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %11, i32 0, i32 40, !dbg !15665
  %12 = load %struct.uiLink*, %struct.uiLink** %link5, align 8, !dbg !15665
  %lines = getelementptr inbounds %struct.uiLink, %struct.uiLink* %12, i32 0, i32 7, !dbg !15666
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines, i32 0, i32 0, !dbg !15667
  %13 = load i8*, i8** %first, align 8, !dbg !15667
  %14 = bitcast i8* %13 to %struct.uiLinkLine*, !dbg !15663
  store %struct.uiLinkLine* %14, %struct.uiLinkLine** %line, align 8, !dbg !15668
  br label %for.cond, !dbg !15669

for.cond:                                         ; preds = %for.inc, %if.then
  %15 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !15670
  %tobool6 = icmp ne %struct.uiLinkLine* %15, null, !dbg !15672
  br i1 %tobool6, label %for.body, label %for.end, !dbg !15672

for.body:                                         ; preds = %for.cond
  %16 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !15673
  %to = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %16, i32 0, i32 3, !dbg !15676
  %17 = load %struct.uiBut*, %struct.uiBut** %to, align 8, !dbg !15676
  %18 = load %struct.uiBut*, %struct.uiBut** %newbut.addr, align 8, !dbg !15677
  %cmp7 = icmp eq %struct.uiBut* %17, %18, !dbg !15678
  br i1 %cmp7, label %if.then8, label %if.end, !dbg !15679

if.then8:                                         ; preds = %for.body
  %19 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !15680
  %20 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !15681
  %to9 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %20, i32 0, i32 3, !dbg !15682
  store %struct.uiBut* %19, %struct.uiBut** %to9, align 8, !dbg !15683
  br label %if.end, !dbg !15681

if.end:                                           ; preds = %if.then8, %for.body
  %21 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !15684
  %from = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %21, i32 0, i32 2, !dbg !15686
  %22 = load %struct.uiBut*, %struct.uiBut** %from, align 8, !dbg !15686
  %23 = load %struct.uiBut*, %struct.uiBut** %newbut.addr, align 8, !dbg !15687
  %cmp10 = icmp eq %struct.uiBut* %22, %23, !dbg !15688
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !15689

if.then11:                                        ; preds = %if.end
  %24 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !15690
  %25 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !15691
  %from12 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %25, i32 0, i32 2, !dbg !15692
  store %struct.uiBut* %24, %struct.uiBut** %from12, align 8, !dbg !15693
  br label %if.end13, !dbg !15691

if.end13:                                         ; preds = %if.then11, %if.end
  br label %for.inc, !dbg !15694

for.inc:                                          ; preds = %if.end13
  %26 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !15695
  %next = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %26, i32 0, i32 0, !dbg !15696
  %27 = load %struct.uiLinkLine*, %struct.uiLinkLine** %next, align 8, !dbg !15696
  store %struct.uiLinkLine* %27, %struct.uiLinkLine** %line, align 8, !dbg !15697
  br label %for.cond, !dbg !15698, !llvm.loop !15699

for.end:                                          ; preds = %for.cond
  br label %if.end14, !dbg !15701

if.end14:                                         ; preds = %for.end, %land.lhs.true, %entry
  %28 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !15702
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %28, i32 0, i32 2, !dbg !15704
  %first15 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 0, !dbg !15705
  %29 = load i8*, i8** %first15, align 8, !dbg !15705
  %30 = bitcast i8* %29 to %struct.uiBut*, !dbg !15702
  store %struct.uiBut* %30, %struct.uiBut** %but, align 8, !dbg !15706
  br label %for.cond16, !dbg !15707

for.cond16:                                       ; preds = %for.inc47, %if.end14
  %31 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !15708
  %tobool17 = icmp ne %struct.uiBut* %31, null, !dbg !15710
  br i1 %tobool17, label %for.body18, label %for.end49, !dbg !15710

for.body18:                                       ; preds = %for.cond16
  %32 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !15711
  %33 = load %struct.uiBut*, %struct.uiBut** %newbut.addr, align 8, !dbg !15714
  %cmp19 = icmp ne %struct.uiBut* %32, %33, !dbg !15715
  br i1 %cmp19, label %land.lhs.true20, label %if.end46, !dbg !15716

land.lhs.true20:                                  ; preds = %for.body18
  %34 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !15717
  %type21 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %34, i32 0, i32 4, !dbg !15718
  %35 = load i32, i32* %type21, align 8, !dbg !15718
  %cmp22 = icmp eq i32 %35, 11264, !dbg !15719
  br i1 %cmp22, label %land.lhs.true23, label %if.end46, !dbg !15720

land.lhs.true23:                                  ; preds = %land.lhs.true20
  %36 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !15721
  %link24 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %36, i32 0, i32 40, !dbg !15722
  %37 = load %struct.uiLink*, %struct.uiLink** %link24, align 8, !dbg !15722
  %tobool25 = icmp ne %struct.uiLink* %37, null, !dbg !15721
  br i1 %tobool25, label %if.then26, label %if.end46, !dbg !15723

if.then26:                                        ; preds = %land.lhs.true23
  %38 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !15724
  %link27 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %38, i32 0, i32 40, !dbg !15727
  %39 = load %struct.uiLink*, %struct.uiLink** %link27, align 8, !dbg !15727
  %lines28 = getelementptr inbounds %struct.uiLink, %struct.uiLink* %39, i32 0, i32 7, !dbg !15728
  %first29 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lines28, i32 0, i32 0, !dbg !15729
  %40 = load i8*, i8** %first29, align 8, !dbg !15729
  %41 = bitcast i8* %40 to %struct.uiLinkLine*, !dbg !15724
  store %struct.uiLinkLine* %41, %struct.uiLinkLine** %line, align 8, !dbg !15730
  br label %for.cond30, !dbg !15731

for.cond30:                                       ; preds = %for.inc43, %if.then26
  %42 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !15732
  %tobool31 = icmp ne %struct.uiLinkLine* %42, null, !dbg !15734
  br i1 %tobool31, label %for.body32, label %for.end45, !dbg !15734

for.body32:                                       ; preds = %for.cond30
  %43 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !15735
  %to33 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %43, i32 0, i32 3, !dbg !15738
  %44 = load %struct.uiBut*, %struct.uiBut** %to33, align 8, !dbg !15738
  %45 = load %struct.uiBut*, %struct.uiBut** %newbut.addr, align 8, !dbg !15739
  %cmp34 = icmp eq %struct.uiBut* %44, %45, !dbg !15740
  br i1 %cmp34, label %if.then35, label %if.end37, !dbg !15741

if.then35:                                        ; preds = %for.body32
  %46 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !15742
  %47 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !15743
  %to36 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %47, i32 0, i32 3, !dbg !15744
  store %struct.uiBut* %46, %struct.uiBut** %to36, align 8, !dbg !15745
  br label %if.end37, !dbg !15743

if.end37:                                         ; preds = %if.then35, %for.body32
  %48 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !15746
  %from38 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %48, i32 0, i32 2, !dbg !15748
  %49 = load %struct.uiBut*, %struct.uiBut** %from38, align 8, !dbg !15748
  %50 = load %struct.uiBut*, %struct.uiBut** %newbut.addr, align 8, !dbg !15749
  %cmp39 = icmp eq %struct.uiBut* %49, %50, !dbg !15750
  br i1 %cmp39, label %if.then40, label %if.end42, !dbg !15751

if.then40:                                        ; preds = %if.end37
  %51 = load %struct.uiBut*, %struct.uiBut** %oldbut.addr, align 8, !dbg !15752
  %52 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !15753
  %from41 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %52, i32 0, i32 2, !dbg !15754
  store %struct.uiBut* %51, %struct.uiBut** %from41, align 8, !dbg !15755
  br label %if.end42, !dbg !15753

if.end42:                                         ; preds = %if.then40, %if.end37
  br label %for.inc43, !dbg !15756

for.inc43:                                        ; preds = %if.end42
  %53 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line, align 8, !dbg !15757
  %next44 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %53, i32 0, i32 0, !dbg !15758
  %54 = load %struct.uiLinkLine*, %struct.uiLinkLine** %next44, align 8, !dbg !15758
  store %struct.uiLinkLine* %54, %struct.uiLinkLine** %line, align 8, !dbg !15759
  br label %for.cond30, !dbg !15760, !llvm.loop !15761

for.end45:                                        ; preds = %for.cond30
  br label %if.end46, !dbg !15763

if.end46:                                         ; preds = %for.end45, %land.lhs.true23, %land.lhs.true20, %for.body18
  br label %for.inc47, !dbg !15764

for.inc47:                                        ; preds = %if.end46
  %55 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !15765
  %next48 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %55, i32 0, i32 0, !dbg !15766
  %56 = load %struct.uiBut*, %struct.uiBut** %next48, align 8, !dbg !15766
  store %struct.uiBut* %56, %struct.uiBut** %but, align 8, !dbg !15767
  br label %for.cond16, !dbg !15768, !llvm.loop !15769

for.end49:                                        ; preds = %for.cond16
  ret void, !dbg !15771
}

; Function Attrs: nounwind readonly
declare dso_local i32 @tolower(i32) #4

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #6

; Function Attrs: noinline nounwind uwtable
define internal void @ui_but_pie_direction_string(%struct.uiBut* %but, i8* %buf, i32 %size) #0 !dbg !15772 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !15775, metadata !DIExpression()), !dbg !15776
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15777, metadata !DIExpression()), !dbg !15778
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !15779, metadata !DIExpression()), !dbg !15780
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15781
  %1 = load i32, i32* %size.addr, align 4, !dbg !15782
  %conv = sext i32 %1 to i64, !dbg !15782
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15783
  %pie_dir = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 47, !dbg !15784
  %3 = load i8, i8* %pie_dir, align 2, !dbg !15784
  %idxprom = sext i8 %3 to i64, !dbg !15785
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* @ui_radial_dir_to_numpad, i64 0, i64 %idxprom, !dbg !15785
  %4 = load i8, i8* %arrayidx, align 1, !dbg !15785
  %conv1 = zext i8 %4 to i32, !dbg !15785
  %call = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %0, i64 %conv, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i32 %conv1), !dbg !15786
  ret void, !dbg !15787
}

declare dso_local %struct.uiStyle* @UI_GetStyle() #3

declare dso_local void @uiStyleFontSet(%struct.uiFontStyle*) #3

declare dso_local float @BLF_width(i32, i8*, i64) #3

declare dso_local i32 @WM_window_pixels_x(%struct.wmWindow*) #3

declare dso_local i32 @WM_window_pixels_y(%struct.wmWindow*) #3

; Function Attrs: noinline nounwind uwtable
define internal float @BLI_rctf_size_y(%struct.rctf* %rct) #0 !dbg !15788 {
entry:
  %rct.addr = alloca %struct.rctf*, align 8
  store %struct.rctf* %rct, %struct.rctf** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rct.addr, metadata !15789, metadata !DIExpression()), !dbg !15790
  %0 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !15791
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 3, !dbg !15792
  %1 = load float, float* %ymax, align 4, !dbg !15792
  %2 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !15793
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 2, !dbg !15794
  %3 = load float, float* %ymin, align 4, !dbg !15794
  %sub = fsub float %1, %3, !dbg !15795
  ret float %sub, !dbg !15796
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_draw_linkline(%struct.uiLinkLine* %line, i32 %highlightActiveLines, i32 %dashInactiveLines) #0 !dbg !15797 {
entry:
  %line.addr = alloca %struct.uiLinkLine*, align 8
  %highlightActiveLines.addr = alloca i32, align 4
  %dashInactiveLines.addr = alloca i32, align 4
  %rect = alloca %struct.rcti, align 4
  store %struct.uiLinkLine* %line, %struct.uiLinkLine** %line.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLinkLine** %line.addr, metadata !15800, metadata !DIExpression()), !dbg !15801
  store i32 %highlightActiveLines, i32* %highlightActiveLines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %highlightActiveLines.addr, metadata !15802, metadata !DIExpression()), !dbg !15803
  store i32 %dashInactiveLines, i32* %dashInactiveLines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dashInactiveLines.addr, metadata !15804, metadata !DIExpression()), !dbg !15805
  call void @llvm.dbg.declare(metadata %struct.rcti* %rect, metadata !15806, metadata !DIExpression()), !dbg !15807
  %0 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line.addr, align 8, !dbg !15808
  %from = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %0, i32 0, i32 2, !dbg !15810
  %1 = load %struct.uiBut*, %struct.uiBut** %from, align 8, !dbg !15810
  %cmp = icmp eq %struct.uiBut* %1, null, !dbg !15811
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !15812

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line.addr, align 8, !dbg !15813
  %to = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %2, i32 0, i32 3, !dbg !15814
  %3 = load %struct.uiBut*, %struct.uiBut** %to, align 8, !dbg !15814
  %cmp1 = icmp eq %struct.uiBut* %3, null, !dbg !15815
  br i1 %cmp1, label %if.then, label %if.end, !dbg !15816

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !15817

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line.addr, align 8, !dbg !15818
  %from2 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %4, i32 0, i32 2, !dbg !15819
  %5 = load %struct.uiBut*, %struct.uiBut** %from2, align 8, !dbg !15819
  %rect3 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 18, !dbg !15820
  %call = call float @BLI_rctf_cent_x(%struct.rctf* %rect3), !dbg !15821
  %conv = fptosi float %call to i32, !dbg !15821
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 0, !dbg !15822
  store i32 %conv, i32* %xmin, align 4, !dbg !15823
  %6 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line.addr, align 8, !dbg !15824
  %from4 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %6, i32 0, i32 2, !dbg !15825
  %7 = load %struct.uiBut*, %struct.uiBut** %from4, align 8, !dbg !15825
  %rect5 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %7, i32 0, i32 18, !dbg !15826
  %call6 = call float @BLI_rctf_cent_y(%struct.rctf* %rect5), !dbg !15827
  %conv7 = fptosi float %call6 to i32, !dbg !15827
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 2, !dbg !15828
  store i32 %conv7, i32* %ymin, align 4, !dbg !15829
  %8 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line.addr, align 8, !dbg !15830
  %to8 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %8, i32 0, i32 3, !dbg !15831
  %9 = load %struct.uiBut*, %struct.uiBut** %to8, align 8, !dbg !15831
  %rect9 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 18, !dbg !15832
  %call10 = call float @BLI_rctf_cent_x(%struct.rctf* %rect9), !dbg !15833
  %conv11 = fptosi float %call10 to i32, !dbg !15833
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 1, !dbg !15834
  store i32 %conv11, i32* %xmax, align 4, !dbg !15835
  %10 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line.addr, align 8, !dbg !15836
  %to12 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %10, i32 0, i32 3, !dbg !15837
  %11 = load %struct.uiBut*, %struct.uiBut** %to12, align 8, !dbg !15837
  %rect13 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %11, i32 0, i32 18, !dbg !15838
  %call14 = call float @BLI_rctf_cent_y(%struct.rctf* %rect13), !dbg !15839
  %conv15 = fptosi float %call14 to i32, !dbg !15839
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 3, !dbg !15840
  store i32 %conv15, i32* %ymax, align 4, !dbg !15841
  %12 = load i32, i32* %dashInactiveLines.addr, align 4, !dbg !15842
  %tobool = icmp ne i32 %12, 0, !dbg !15842
  br i1 %tobool, label %if.then16, label %if.else, !dbg !15844

if.then16:                                        ; preds = %if.end
  call void @UI_ThemeColor(i32 24), !dbg !15845
  br label %if.end35, !dbg !15845

if.else:                                          ; preds = %if.end
  %13 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line.addr, align 8, !dbg !15846
  %flag = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %13, i32 0, i32 4, !dbg !15848
  %14 = load i16, i16* %flag, align 8, !dbg !15848
  %conv17 = sext i16 %14 to i32, !dbg !15846
  %and = and i32 %conv17, 1, !dbg !15849
  %tobool18 = icmp ne i32 %and, 0, !dbg !15849
  br i1 %tobool18, label %if.then19, label %if.else20, !dbg !15850

if.then19:                                        ; preds = %if.else
  call void @glColor3ub(i8 zeroext 100, i8 zeroext 100, i8 zeroext 100), !dbg !15851
  br label %if.end34, !dbg !15851

if.else20:                                        ; preds = %if.else
  %15 = load i32, i32* %highlightActiveLines.addr, align 4, !dbg !15852
  %tobool21 = icmp ne i32 %15, 0, !dbg !15852
  br i1 %tobool21, label %land.lhs.true, label %if.else32, !dbg !15854

land.lhs.true:                                    ; preds = %if.else20
  %16 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line.addr, align 8, !dbg !15855
  %from22 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %16, i32 0, i32 2, !dbg !15856
  %17 = load %struct.uiBut*, %struct.uiBut** %from22, align 8, !dbg !15856
  %flag23 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %17, i32 0, i32 2, !dbg !15857
  %18 = load i32, i32* %flag23, align 8, !dbg !15857
  %and24 = and i32 %18, 4, !dbg !15858
  %tobool25 = icmp ne i32 %and24, 0, !dbg !15858
  br i1 %tobool25, label %if.then31, label %lor.lhs.false26, !dbg !15859

lor.lhs.false26:                                  ; preds = %land.lhs.true
  %19 = load %struct.uiLinkLine*, %struct.uiLinkLine** %line.addr, align 8, !dbg !15860
  %to27 = getelementptr inbounds %struct.uiLinkLine, %struct.uiLinkLine* %19, i32 0, i32 3, !dbg !15861
  %20 = load %struct.uiBut*, %struct.uiBut** %to27, align 8, !dbg !15861
  %flag28 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %20, i32 0, i32 2, !dbg !15862
  %21 = load i32, i32* %flag28, align 8, !dbg !15862
  %and29 = and i32 %21, 4, !dbg !15863
  %tobool30 = icmp ne i32 %and29, 0, !dbg !15863
  br i1 %tobool30, label %if.then31, label %if.else32, !dbg !15864

if.then31:                                        ; preds = %lor.lhs.false26, %land.lhs.true
  call void @UI_ThemeColor(i32 4), !dbg !15865
  br label %if.end33, !dbg !15865

if.else32:                                        ; preds = %lor.lhs.false26, %if.else20
  call void @glColor3ub(i8 zeroext 0, i8 zeroext 0, i8 zeroext 0), !dbg !15866
  br label %if.end33

if.end33:                                         ; preds = %if.else32, %if.then31
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then19
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then16
  call void @ui_draw_link_bezier(%struct.rcti* %rect), !dbg !15867
  br label %return, !dbg !15868

return:                                           ; preds = %if.end35, %if.then
  ret void, !dbg !15868
}

; Function Attrs: noinline nounwind uwtable
define internal float @BLI_rctf_cent_x(%struct.rctf* %rct) #0 !dbg !15869 {
entry:
  %rct.addr = alloca %struct.rctf*, align 8
  store %struct.rctf* %rct, %struct.rctf** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rct.addr, metadata !15870, metadata !DIExpression()), !dbg !15871
  %0 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !15872
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 0, !dbg !15873
  %1 = load float, float* %xmin, align 4, !dbg !15873
  %2 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !15874
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 1, !dbg !15875
  %3 = load float, float* %xmax, align 4, !dbg !15875
  %add = fadd float %1, %3, !dbg !15876
  %div = fdiv float %add, 2.000000e+00, !dbg !15877
  ret float %div, !dbg !15878
}

; Function Attrs: noinline nounwind uwtable
define internal float @BLI_rctf_cent_y(%struct.rctf* %rct) #0 !dbg !15879 {
entry:
  %rct.addr = alloca %struct.rctf*, align 8
  store %struct.rctf* %rct, %struct.rctf** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rct.addr, metadata !15880, metadata !DIExpression()), !dbg !15881
  %0 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !15882
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 2, !dbg !15883
  %1 = load float, float* %ymin, align 4, !dbg !15883
  %2 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !15884
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 3, !dbg !15885
  %3 = load float, float* %ymax, align 4, !dbg !15885
  %add = fadd float %1, %3, !dbg !15886
  %div = fdiv float %add, 2.000000e+00, !dbg !15887
  ret float %div, !dbg !15888
}

declare dso_local void @UI_ThemeColor(i32) #3

declare dso_local void @glColor3ub(i8 zeroext, i8 zeroext, i8 zeroext) #3

declare dso_local void @ui_draw_link_bezier(%struct.rcti*) #3

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !15889 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !15892, metadata !DIExpression()), !dbg !15893
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !15894, metadata !DIExpression()), !dbg !15895
  call void @llvm.dbg.declare(metadata float* %d, metadata !15896, metadata !DIExpression()), !dbg !15897
  %0 = load float*, float** %a.addr, align 8, !dbg !15898
  %1 = load float*, float** %a.addr, align 8, !dbg !15899
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !15900
  store float %call, float* %d, align 4, !dbg !15897
  %2 = load float, float* %d, align 4, !dbg !15901
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !15903
  br i1 %cmp, label %if.then, label %if.else, !dbg !15904

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !15905
  %call1 = call float @sqrtf(float %3) #5, !dbg !15907
  store float %call1, float* %d, align 4, !dbg !15908
  %4 = load float*, float** %r.addr, align 8, !dbg !15909
  %5 = load float*, float** %a.addr, align 8, !dbg !15910
  %6 = load float, float* %d, align 4, !dbg !15911
  %div = fdiv float 1.000000e+00, %6, !dbg !15912
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !15913
  br label %if.end, !dbg !15914

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !15915
  call void @zero_v3(float* %7), !dbg !15917
  store float 0.000000e+00, float* %d, align 4, !dbg !15918
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !15919
  ret float %8, !dbg !15920
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !15921 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !15924, metadata !DIExpression()), !dbg !15925
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !15926, metadata !DIExpression()), !dbg !15927
  %0 = load float*, float** %a.addr, align 8, !dbg !15928
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !15928
  %1 = load float, float* %arrayidx, align 4, !dbg !15928
  %2 = load float*, float** %b.addr, align 8, !dbg !15929
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !15929
  %3 = load float, float* %arrayidx1, align 4, !dbg !15929
  %mul = fmul float %1, %3, !dbg !15930
  %4 = load float*, float** %a.addr, align 8, !dbg !15931
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !15931
  %5 = load float, float* %arrayidx2, align 4, !dbg !15931
  %6 = load float*, float** %b.addr, align 8, !dbg !15932
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !15932
  %7 = load float, float* %arrayidx3, align 4, !dbg !15932
  %mul4 = fmul float %5, %7, !dbg !15933
  %add = fadd float %mul, %mul4, !dbg !15934
  %8 = load float*, float** %a.addr, align 8, !dbg !15935
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !15935
  %9 = load float, float* %arrayidx5, align 4, !dbg !15935
  %10 = load float*, float** %b.addr, align 8, !dbg !15936
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !15936
  %11 = load float, float* %arrayidx6, align 4, !dbg !15936
  %mul7 = fmul float %9, %11, !dbg !15937
  %add8 = fadd float %add, %mul7, !dbg !15938
  ret float %add8, !dbg !15939
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #7

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !15940 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !15943, metadata !DIExpression()), !dbg !15944
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !15945, metadata !DIExpression()), !dbg !15946
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !15947, metadata !DIExpression()), !dbg !15948
  %0 = load float*, float** %a.addr, align 8, !dbg !15949
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !15949
  %1 = load float, float* %arrayidx, align 4, !dbg !15949
  %2 = load float, float* %f.addr, align 4, !dbg !15950
  %mul = fmul float %1, %2, !dbg !15951
  %3 = load float*, float** %r.addr, align 8, !dbg !15952
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !15952
  store float %mul, float* %arrayidx1, align 4, !dbg !15953
  %4 = load float*, float** %a.addr, align 8, !dbg !15954
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !15954
  %5 = load float, float* %arrayidx2, align 4, !dbg !15954
  %6 = load float, float* %f.addr, align 4, !dbg !15955
  %mul3 = fmul float %5, %6, !dbg !15956
  %7 = load float*, float** %r.addr, align 8, !dbg !15957
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !15957
  store float %mul3, float* %arrayidx4, align 4, !dbg !15958
  %8 = load float*, float** %a.addr, align 8, !dbg !15959
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !15959
  %9 = load float, float* %arrayidx5, align 4, !dbg !15959
  %10 = load float, float* %f.addr, align 4, !dbg !15960
  %mul6 = fmul float %9, %10, !dbg !15961
  %11 = load float*, float** %r.addr, align 8, !dbg !15962
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !15962
  store float %mul6, float* %arrayidx7, align 4, !dbg !15963
  ret void, !dbg !15964
}

declare dso_local i64 @bUnit_AsString(i8*, i32, double, i32, i32, i32, i8 zeroext, i8 zeroext) #3

; Function Attrs: noinline nounwind uwtable
define internal double @ui_get_but_scale_unit(%struct.uiBut* %but, double %value) #0 !dbg !15965 {
entry:
  %retval = alloca double, align 8
  %but.addr = alloca %struct.uiBut*, align 8
  %value.addr = alloca double, align 8
  %unit = alloca %struct.UnitSettings*, align 8
  %unit_type = alloca i32, align 4
  %scene = alloca %struct.Scene*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !15968, metadata !DIExpression()), !dbg !15969
  store double %value, double* %value.addr, align 8
  call void @llvm.dbg.declare(metadata double* %value.addr, metadata !15970, metadata !DIExpression()), !dbg !15971
  call void @llvm.dbg.declare(metadata %struct.UnitSettings** %unit, metadata !15972, metadata !DIExpression()), !dbg !15973
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15974
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 74, !dbg !15975
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !15975
  %unit1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 49, !dbg !15976
  %2 = load %struct.UnitSettings*, %struct.UnitSettings** %unit1, align 8, !dbg !15976
  store %struct.UnitSettings* %2, %struct.UnitSettings** %unit, align 8, !dbg !15973
  call void @llvm.dbg.declare(metadata i32* %unit_type, metadata !15977, metadata !DIExpression()), !dbg !15978
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15979
  %call = call i32 @uiButGetUnitType(%struct.uiBut* %3), !dbg !15980
  store i32 %call, i32* %unit_type, align 4, !dbg !15978
  %4 = load i32, i32* %unit_type, align 4, !dbg !15981
  %cmp = icmp eq i32 %4, 393216, !dbg !15983
  br i1 %cmp, label %if.then, label %if.else, !dbg !15984

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !15985, metadata !DIExpression()), !dbg !15987
  %5 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !15988
  %block2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %5, i32 0, i32 74, !dbg !15989
  %6 = load %struct.uiBlock*, %struct.uiBlock** %block2, align 8, !dbg !15989
  %evil_C = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %6, i32 0, i32 48, !dbg !15990
  %7 = load i8*, i8** %evil_C, align 8, !dbg !15990
  %8 = bitcast i8* %7 to %struct.bContext*, !dbg !15988
  %call3 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %8), !dbg !15991
  store %struct.Scene* %call3, %struct.Scene** %scene, align 8, !dbg !15987
  %9 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !15992
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 22, !dbg !15992
  %frs_sec_base = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 65, !dbg !15992
  %10 = load float, float* %frs_sec_base, align 4, !dbg !15992
  %conv = fpext float %10 to double, !dbg !15992
  %11 = load double, double* %value.addr, align 8, !dbg !15992
  %mul = fmul double %conv, %11, !dbg !15992
  %12 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !15992
  %r4 = getelementptr inbounds %struct.Scene, %struct.Scene* %12, i32 0, i32 22, !dbg !15992
  %frs_sec = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r4, i32 0, i32 55, !dbg !15992
  %13 = load i16, i16* %frs_sec, align 4, !dbg !15992
  %conv5 = sitofp i16 %13 to double, !dbg !15992
  %div = fdiv double %mul, %conv5, !dbg !15992
  store double %div, double* %retval, align 8, !dbg !15993
  br label %return, !dbg !15993

if.else:                                          ; preds = %entry
  %14 = load %struct.UnitSettings*, %struct.UnitSettings** %unit, align 8, !dbg !15994
  %15 = load i32, i32* %unit_type, align 4, !dbg !15996
  %shr = ashr i32 %15, 16, !dbg !15996
  %16 = load double, double* %value.addr, align 8, !dbg !15997
  %call6 = call double @BKE_scene_unit_scale(%struct.UnitSettings* %14, i32 %shr, double %16), !dbg !15998
  store double %call6, double* %retval, align 8, !dbg !15999
  br label %return, !dbg !15999

return:                                           ; preds = %if.else, %if.then
  %17 = load double, double* %retval, align 8, !dbg !16000
  ret double %17, !dbg !16000
}

declare dso_local double @BKE_scene_unit_scale(%struct.UnitSettings*, i32, double) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ui_is_but_unit_radians(%struct.uiBut* %but) #0 !dbg !16001 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  %unit = alloca %struct.UnitSettings*, align 8
  %unit_type = alloca i32, align 4
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !16002, metadata !DIExpression()), !dbg !16003
  call void @llvm.dbg.declare(metadata %struct.UnitSettings** %unit, metadata !16004, metadata !DIExpression()), !dbg !16005
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !16006
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 74, !dbg !16007
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !16007
  %unit1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 49, !dbg !16008
  %2 = load %struct.UnitSettings*, %struct.UnitSettings** %unit1, align 8, !dbg !16008
  store %struct.UnitSettings* %2, %struct.UnitSettings** %unit, align 8, !dbg !16005
  call void @llvm.dbg.declare(metadata i32* %unit_type, metadata !16009, metadata !DIExpression()), !dbg !16010
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !16011
  %call = call i32 @uiButGetUnitType(%struct.uiBut* %3), !dbg !16012
  store i32 %call, i32* %unit_type, align 4, !dbg !16010
  %4 = load %struct.UnitSettings*, %struct.UnitSettings** %unit, align 8, !dbg !16013
  %5 = load i32, i32* %unit_type, align 4, !dbg !16014
  %call2 = call zeroext i8 @ui_is_but_unit_radians_ex(%struct.UnitSettings* %4, i32 %5), !dbg !16015
  ret i8 %call2, !dbg !16016
}

declare dso_local i32 @uiFloatPrecisionCalc(i32, double) #3

declare dso_local void @ui_button_active_free(%struct.bContext*, %struct.uiBut*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ui_free_link(%struct.uiLink* %link) #0 !dbg !16017 {
entry:
  %link.addr = alloca %struct.uiLink*, align 8
  store %struct.uiLink* %link, %struct.uiLink** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLink** %link.addr, metadata !16020, metadata !DIExpression()), !dbg !16021
  %0 = load %struct.uiLink*, %struct.uiLink** %link.addr, align 8, !dbg !16022
  %tobool = icmp ne %struct.uiLink* %0, null, !dbg !16022
  br i1 %tobool, label %if.then, label %if.end, !dbg !16024

if.then:                                          ; preds = %entry
  %1 = load %struct.uiLink*, %struct.uiLink** %link.addr, align 8, !dbg !16025
  %lines = getelementptr inbounds %struct.uiLink, %struct.uiLink* %1, i32 0, i32 7, !dbg !16027
  call void @BLI_freelistN(%struct.ListBase* %lines), !dbg !16028
  %2 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16029
  %3 = load %struct.uiLink*, %struct.uiLink** %link.addr, align 8, !dbg !16030
  %4 = bitcast %struct.uiLink* %3 to i8*, !dbg !16030
  call void %2(i8* %4), !dbg !16029
  br label %if.end, !dbg !16031

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !16032
}

declare dso_local void @IMB_freeImBuf(%struct.ImBuf*) #3

declare dso_local void @RNA_property_int_ui_range(%struct.PointerRNA*, %struct.PropertyRNA*, i32*, i32*, i32*) #3

declare dso_local void @RNA_property_int_get_array_range(%struct.PointerRNA*, %struct.PropertyRNA*, i32*) #3

declare dso_local void @RNA_property_float_ui_range(%struct.PointerRNA*, %struct.PropertyRNA*, float*, float*, float*, float*) #3

declare dso_local void @RNA_property_float_get_array_range(%struct.PointerRNA*, %struct.PropertyRNA*, float*) #3

; Function Attrs: noinline nounwind uwtable
define internal double @soft_range_round_up(double %value, double %max) #0 !dbg !16033 {
entry:
  %retval = alloca double, align 8
  %value.addr = alloca double, align 8
  %max.addr = alloca double, align 8
  %newmax = alloca double, align 8
  store double %value, double* %value.addr, align 8
  call void @llvm.dbg.declare(metadata double* %value.addr, metadata !16036, metadata !DIExpression()), !dbg !16037
  store double %max, double* %max.addr, align 8
  call void @llvm.dbg.declare(metadata double* %max.addr, metadata !16038, metadata !DIExpression()), !dbg !16039
  call void @llvm.dbg.declare(metadata double* %newmax, metadata !16040, metadata !DIExpression()), !dbg !16041
  %0 = load double, double* %value.addr, align 8, !dbg !16042
  %cmp = fcmp une double %0, 0.000000e+00, !dbg !16043
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16044

cond.true:                                        ; preds = %entry
  %1 = load double, double* %value.addr, align 8, !dbg !16045
  %call = call double @log(double %1) #5, !dbg !16046
  %div = fdiv double %call, 0x40026BB1BBB55516, !dbg !16047
  %2 = call double @llvm.ceil.f64(double %div), !dbg !16048
  %call1 = call double @pow(double 1.000000e+01, double %2) #5, !dbg !16049
  br label %cond.end, !dbg !16044

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !16044

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %call1, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !16044
  store double %cond, double* %newmax, align 8, !dbg !16041
  %3 = load double, double* %newmax, align 8, !dbg !16050
  %mul = fmul double %3, 2.000000e-01, !dbg !16052
  %4 = load double, double* %max.addr, align 8, !dbg !16053
  %cmp2 = fcmp oge double %mul, %4, !dbg !16054
  br i1 %cmp2, label %land.lhs.true, label %if.else, !dbg !16055

land.lhs.true:                                    ; preds = %cond.end
  %5 = load double, double* %newmax, align 8, !dbg !16056
  %mul3 = fmul double %5, 2.000000e-01, !dbg !16057
  %6 = load double, double* %value.addr, align 8, !dbg !16058
  %cmp4 = fcmp oge double %mul3, %6, !dbg !16059
  br i1 %cmp4, label %if.then, label %if.else, !dbg !16060

if.then:                                          ; preds = %land.lhs.true
  %7 = load double, double* %newmax, align 8, !dbg !16061
  %mul5 = fmul double %7, 2.000000e-01, !dbg !16062
  store double %mul5, double* %retval, align 8, !dbg !16063
  br label %return, !dbg !16063

if.else:                                          ; preds = %land.lhs.true, %cond.end
  %8 = load double, double* %newmax, align 8, !dbg !16064
  %mul6 = fmul double %8, 5.000000e-01, !dbg !16066
  %9 = load double, double* %max.addr, align 8, !dbg !16067
  %cmp7 = fcmp oge double %mul6, %9, !dbg !16068
  br i1 %cmp7, label %land.lhs.true8, label %if.else13, !dbg !16069

land.lhs.true8:                                   ; preds = %if.else
  %10 = load double, double* %newmax, align 8, !dbg !16070
  %mul9 = fmul double %10, 5.000000e-01, !dbg !16071
  %11 = load double, double* %value.addr, align 8, !dbg !16072
  %cmp10 = fcmp oge double %mul9, %11, !dbg !16073
  br i1 %cmp10, label %if.then11, label %if.else13, !dbg !16074

if.then11:                                        ; preds = %land.lhs.true8
  %12 = load double, double* %newmax, align 8, !dbg !16075
  %mul12 = fmul double %12, 5.000000e-01, !dbg !16076
  store double %mul12, double* %retval, align 8, !dbg !16077
  br label %return, !dbg !16077

if.else13:                                        ; preds = %land.lhs.true8, %if.else
  %13 = load double, double* %newmax, align 8, !dbg !16078
  store double %13, double* %retval, align 8, !dbg !16079
  br label %return, !dbg !16079

return:                                           ; preds = %if.else13, %if.then11, %if.then
  %14 = load double, double* %retval, align 8, !dbg !16080
  ret double %14, !dbg !16080
}

; Function Attrs: noinline nounwind uwtable
define internal double @soft_range_round_down(double %value, double %max) #0 !dbg !16081 {
entry:
  %retval = alloca double, align 8
  %value.addr = alloca double, align 8
  %max.addr = alloca double, align 8
  %newmax = alloca double, align 8
  store double %value, double* %value.addr, align 8
  call void @llvm.dbg.declare(metadata double* %value.addr, metadata !16082, metadata !DIExpression()), !dbg !16083
  store double %max, double* %max.addr, align 8
  call void @llvm.dbg.declare(metadata double* %max.addr, metadata !16084, metadata !DIExpression()), !dbg !16085
  call void @llvm.dbg.declare(metadata double* %newmax, metadata !16086, metadata !DIExpression()), !dbg !16087
  %0 = load double, double* %value.addr, align 8, !dbg !16088
  %cmp = fcmp une double %0, 0.000000e+00, !dbg !16089
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16090

cond.true:                                        ; preds = %entry
  %1 = load double, double* %value.addr, align 8, !dbg !16091
  %call = call double @log(double %1) #5, !dbg !16092
  %div = fdiv double %call, 0x40026BB1BBB55516, !dbg !16093
  %2 = call double @llvm.floor.f64(double %div), !dbg !16094
  %call1 = call double @pow(double 1.000000e+01, double %2) #5, !dbg !16095
  br label %cond.end, !dbg !16090

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !16090

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %call1, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !16090
  store double %cond, double* %newmax, align 8, !dbg !16087
  %3 = load double, double* %newmax, align 8, !dbg !16096
  %mul = fmul double %3, 5.000000e+00, !dbg !16098
  %4 = load double, double* %max.addr, align 8, !dbg !16099
  %cmp2 = fcmp ole double %mul, %4, !dbg !16100
  br i1 %cmp2, label %land.lhs.true, label %if.else, !dbg !16101

land.lhs.true:                                    ; preds = %cond.end
  %5 = load double, double* %newmax, align 8, !dbg !16102
  %mul3 = fmul double %5, 5.000000e+00, !dbg !16103
  %6 = load double, double* %value.addr, align 8, !dbg !16104
  %cmp4 = fcmp ole double %mul3, %6, !dbg !16105
  br i1 %cmp4, label %if.then, label %if.else, !dbg !16106

if.then:                                          ; preds = %land.lhs.true
  %7 = load double, double* %newmax, align 8, !dbg !16107
  %mul5 = fmul double %7, 5.000000e+00, !dbg !16108
  store double %mul5, double* %retval, align 8, !dbg !16109
  br label %return, !dbg !16109

if.else:                                          ; preds = %land.lhs.true, %cond.end
  %8 = load double, double* %newmax, align 8, !dbg !16110
  %mul6 = fmul double %8, 2.000000e+00, !dbg !16112
  %9 = load double, double* %max.addr, align 8, !dbg !16113
  %cmp7 = fcmp ole double %mul6, %9, !dbg !16114
  br i1 %cmp7, label %land.lhs.true8, label %if.else13, !dbg !16115

land.lhs.true8:                                   ; preds = %if.else
  %10 = load double, double* %newmax, align 8, !dbg !16116
  %mul9 = fmul double %10, 2.000000e+00, !dbg !16117
  %11 = load double, double* %value.addr, align 8, !dbg !16118
  %cmp10 = fcmp ole double %mul9, %11, !dbg !16119
  br i1 %cmp10, label %if.then11, label %if.else13, !dbg !16120

if.then11:                                        ; preds = %land.lhs.true8
  %12 = load double, double* %newmax, align 8, !dbg !16121
  %mul12 = fmul double %12, 2.000000e+00, !dbg !16122
  store double %mul12, double* %retval, align 8, !dbg !16123
  br label %return, !dbg !16123

if.else13:                                        ; preds = %land.lhs.true8, %if.else
  %13 = load double, double* %newmax, align 8, !dbg !16124
  store double %13, double* %retval, align 8, !dbg !16125
  br label %return, !dbg !16125

return:                                           ; preds = %if.else13, %if.then11, %if.then
  %14 = load double, double* %retval, align 8, !dbg !16126
  ret double %14, !dbg !16126
}

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !16127 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !16128, metadata !DIExpression()), !dbg !16129
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !16130, metadata !DIExpression()), !dbg !16131
  %0 = load float, float* %a.addr, align 4, !dbg !16132
  %1 = load float, float* %b.addr, align 4, !dbg !16133
  %cmp = fcmp olt float %0, %1, !dbg !16134
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16135

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !16136
  br label %cond.end, !dbg !16135

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !16137
  br label %cond.end, !dbg !16135

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !16135
  ret float %cond, !dbg !16138
}

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #7

; Function Attrs: nounwind
declare dso_local double @log(double) #7

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.ceil.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @buts_are_horiz(%struct.uiBut* %but1, %struct.uiBut* %but2) #0 !dbg !16139 {
entry:
  %retval = alloca i8, align 1
  %but1.addr = alloca %struct.uiBut*, align 8
  %but2.addr = alloca %struct.uiBut*, align 8
  %dx = alloca float, align 4
  %dy = alloca float, align 4
  store %struct.uiBut* %but1, %struct.uiBut** %but1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but1.addr, metadata !16142, metadata !DIExpression()), !dbg !16143
  store %struct.uiBut* %but2, %struct.uiBut** %but2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but2.addr, metadata !16144, metadata !DIExpression()), !dbg !16145
  call void @llvm.dbg.declare(metadata float* %dx, metadata !16146, metadata !DIExpression()), !dbg !16147
  call void @llvm.dbg.declare(metadata float* %dy, metadata !16148, metadata !DIExpression()), !dbg !16149
  %0 = load %struct.uiBut*, %struct.uiBut** %but1.addr, align 8, !dbg !16150
  %rect = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 18, !dbg !16152
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 2, !dbg !16153
  %1 = load float, float* %ymin, align 8, !dbg !16153
  %2 = load %struct.uiBut*, %struct.uiBut** %but2.addr, align 8, !dbg !16154
  %rect1 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 18, !dbg !16155
  %ymin2 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect1, i32 0, i32 2, !dbg !16156
  %3 = load float, float* %ymin2, align 8, !dbg !16156
  %cmp = fcmp oeq float %1, %3, !dbg !16157
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !16158

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.uiBut*, %struct.uiBut** %but1.addr, align 8, !dbg !16159
  %rect3 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %4, i32 0, i32 18, !dbg !16160
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect3, i32 0, i32 0, !dbg !16161
  %5 = load float, float* %xmin, align 8, !dbg !16161
  %6 = load %struct.uiBut*, %struct.uiBut** %but2.addr, align 8, !dbg !16162
  %rect4 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %6, i32 0, i32 18, !dbg !16163
  %xmin5 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect4, i32 0, i32 0, !dbg !16164
  %7 = load float, float* %xmin5, align 8, !dbg !16164
  %cmp6 = fcmp une float %5, %7, !dbg !16165
  br i1 %cmp6, label %if.then, label %if.end, !dbg !16166

if.then:                                          ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !16167
  br label %return, !dbg !16167

if.end:                                           ; preds = %land.lhs.true, %entry
  %8 = load %struct.uiBut*, %struct.uiBut** %but1.addr, align 8, !dbg !16169
  %rect7 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %8, i32 0, i32 18, !dbg !16170
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect7, i32 0, i32 1, !dbg !16171
  %9 = load float, float* %xmax, align 4, !dbg !16171
  %10 = load %struct.uiBut*, %struct.uiBut** %but2.addr, align 8, !dbg !16172
  %rect8 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 18, !dbg !16173
  %xmin9 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect8, i32 0, i32 0, !dbg !16174
  %11 = load float, float* %xmin9, align 8, !dbg !16174
  %sub = fsub float %9, %11, !dbg !16175
  %12 = call float @llvm.fabs.f32(float %sub), !dbg !16176
  store float %12, float* %dx, align 4, !dbg !16177
  %13 = load %struct.uiBut*, %struct.uiBut** %but1.addr, align 8, !dbg !16178
  %rect10 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %13, i32 0, i32 18, !dbg !16179
  %ymin11 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect10, i32 0, i32 2, !dbg !16180
  %14 = load float, float* %ymin11, align 8, !dbg !16180
  %15 = load %struct.uiBut*, %struct.uiBut** %but2.addr, align 8, !dbg !16181
  %rect12 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %15, i32 0, i32 18, !dbg !16182
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect12, i32 0, i32 3, !dbg !16183
  %16 = load float, float* %ymax, align 4, !dbg !16183
  %sub13 = fsub float %14, %16, !dbg !16184
  %17 = call float @llvm.fabs.f32(float %sub13), !dbg !16185
  store float %17, float* %dy, align 4, !dbg !16186
  %18 = load float, float* %dx, align 4, !dbg !16187
  %19 = load float, float* %dy, align 4, !dbg !16188
  %cmp14 = fcmp ole float %18, %19, !dbg !16189
  %conv = zext i1 %cmp14 to i32, !dbg !16189
  %conv15 = trunc i32 %conv to i8, !dbg !16190
  store i8 %conv15, i8* %retval, align 1, !dbg !16191
  br label %return, !dbg !16191

return:                                           ; preds = %if.end, %if.then
  %20 = load i8, i8* %retval, align 1, !dbg !16192
  ret i8 %20, !dbg !16192
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #4

declare dso_local void @ui_layout_add_but(%struct.uiLayout*, %struct.uiBut*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @findBitIndex(i32 %x) #0 !dbg !16193 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %idx = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !16196, metadata !DIExpression()), !dbg !16197
  %0 = load i32, i32* %x.addr, align 4, !dbg !16198
  %tobool = icmp ne i32 %0, 0, !dbg !16198
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !16200

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %x.addr, align 4, !dbg !16201
  %call = call i32 @is_power_of_2_i(i32 %1), !dbg !16202
  %tobool1 = icmp ne i32 %call, 0, !dbg !16202
  br i1 %tobool1, label %if.else, label %if.then, !dbg !16203

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !16204
  br label %return, !dbg !16204

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !16206, metadata !DIExpression()), !dbg !16208
  store i32 0, i32* %idx, align 4, !dbg !16208
  %2 = load i32, i32* %x.addr, align 4, !dbg !16209
  %and = and i32 %2, -65536, !dbg !16211
  %tobool2 = icmp ne i32 %and, 0, !dbg !16211
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !16212

if.then3:                                         ; preds = %if.else
  %3 = load i32, i32* %idx, align 4, !dbg !16213
  %add = add nsw i32 %3, 16, !dbg !16213
  store i32 %add, i32* %idx, align 4, !dbg !16213
  %4 = load i32, i32* %x.addr, align 4, !dbg !16214
  %shr = lshr i32 %4, 16, !dbg !16214
  store i32 %shr, i32* %x.addr, align 4, !dbg !16214
  br label %if.end, !dbg !16215

if.end:                                           ; preds = %if.then3, %if.else
  %5 = load i32, i32* %x.addr, align 4, !dbg !16216
  %and4 = and i32 %5, 65280, !dbg !16218
  %tobool5 = icmp ne i32 %and4, 0, !dbg !16218
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !16219

if.then6:                                         ; preds = %if.end
  %6 = load i32, i32* %idx, align 4, !dbg !16220
  %add7 = add nsw i32 %6, 8, !dbg !16220
  store i32 %add7, i32* %idx, align 4, !dbg !16220
  %7 = load i32, i32* %x.addr, align 4, !dbg !16221
  %shr8 = lshr i32 %7, 8, !dbg !16221
  store i32 %shr8, i32* %x.addr, align 4, !dbg !16221
  br label %if.end9, !dbg !16222

if.end9:                                          ; preds = %if.then6, %if.end
  %8 = load i32, i32* %x.addr, align 4, !dbg !16223
  %and10 = and i32 %8, 240, !dbg !16225
  %tobool11 = icmp ne i32 %and10, 0, !dbg !16225
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !16226

if.then12:                                        ; preds = %if.end9
  %9 = load i32, i32* %idx, align 4, !dbg !16227
  %add13 = add nsw i32 %9, 4, !dbg !16227
  store i32 %add13, i32* %idx, align 4, !dbg !16227
  %10 = load i32, i32* %x.addr, align 4, !dbg !16228
  %shr14 = lshr i32 %10, 4, !dbg !16228
  store i32 %shr14, i32* %x.addr, align 4, !dbg !16228
  br label %if.end15, !dbg !16229

if.end15:                                         ; preds = %if.then12, %if.end9
  %11 = load i32, i32* %x.addr, align 4, !dbg !16230
  %and16 = and i32 %11, 12, !dbg !16232
  %tobool17 = icmp ne i32 %and16, 0, !dbg !16232
  br i1 %tobool17, label %if.then18, label %if.end21, !dbg !16233

if.then18:                                        ; preds = %if.end15
  %12 = load i32, i32* %idx, align 4, !dbg !16234
  %add19 = add nsw i32 %12, 2, !dbg !16234
  store i32 %add19, i32* %idx, align 4, !dbg !16234
  %13 = load i32, i32* %x.addr, align 4, !dbg !16235
  %shr20 = lshr i32 %13, 2, !dbg !16235
  store i32 %shr20, i32* %x.addr, align 4, !dbg !16235
  br label %if.end21, !dbg !16236

if.end21:                                         ; preds = %if.then18, %if.end15
  %14 = load i32, i32* %x.addr, align 4, !dbg !16237
  %and22 = and i32 %14, 2, !dbg !16239
  %tobool23 = icmp ne i32 %and22, 0, !dbg !16239
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !16240

if.then24:                                        ; preds = %if.end21
  %15 = load i32, i32* %idx, align 4, !dbg !16241
  %add25 = add nsw i32 %15, 1, !dbg !16241
  store i32 %add25, i32* %idx, align 4, !dbg !16241
  br label %if.end26, !dbg !16242

if.end26:                                         ; preds = %if.then24, %if.end21
  %16 = load i32, i32* %idx, align 4, !dbg !16243
  store i32 %16, i32* %retval, align 4, !dbg !16244
  br label %return, !dbg !16244

return:                                           ; preds = %if.end26, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !16245
  ret i32 %17, !dbg !16245
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @is_power_of_2_i(i32 %n) #0 !dbg !16246 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !16249, metadata !DIExpression()), !dbg !16250
  %0 = load i32, i32* %n.addr, align 4, !dbg !16251
  %1 = load i32, i32* %n.addr, align 4, !dbg !16252
  %sub = sub nsw i32 %1, 1, !dbg !16253
  %and = and i32 %0, %sub, !dbg !16254
  %cmp = icmp eq i32 %and, 0, !dbg !16255
  %conv = zext i1 %cmp to i32, !dbg !16255
  ret i32 %conv, !dbg !16256
}

declare dso_local %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ui_def_but_rna__disable(%struct.uiBut* %but) #0 !dbg !16257 {
entry:
  %but.addr = alloca %struct.uiBut*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !16258, metadata !DIExpression()), !dbg !16259
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !16260
  %flag = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 2, !dbg !16261
  %1 = load i32, i32* %flag, align 8, !dbg !16262
  %or = or i32 %1, 2048, !dbg !16262
  store i32 %or, i32* %flag, align 8, !dbg !16262
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !16263
  %lock = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 45, !dbg !16264
  store i8 1, i8* %lock, align 4, !dbg !16265
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !16266
  %lockstr = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 43, !dbg !16267
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i64 0, i64 0), i8** %lockstr, align 8, !dbg !16268
  ret void, !dbg !16269
}

declare dso_local void @RNA_property_enum_items(%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, %struct.EnumPropertyItem**, i32*, i8*) #3

declare dso_local i32 @RNA_enum_from_value(%struct.EnumPropertyItem*, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ui_def_but_rna__menu(%struct.bContext* %UNUSED_C, %struct.uiLayout* %layout, i8* %but_p) #0 !dbg !16270 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %layout.addr = alloca %struct.uiLayout*, align 8
  %but_p.addr = alloca i8*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %handle = alloca %struct.uiPopupBlockHandle*, align 8
  %but = alloca %struct.uiBut*, align 8
  %item = alloca %struct.EnumPropertyItem*, align 8
  %item_array = alloca %struct.EnumPropertyItem*, align 8
  %free = alloca i8, align 1
  %split = alloca %struct.uiLayout*, align 8
  %column = alloca %struct.uiLayout*, align 8
  %totitems = alloca i32, align 4
  %columns = alloca i32, align 4
  %rows = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %column_start = alloca i32, align 4
  %column_end = alloca i32, align 4
  %nbr_entries_nosepr = alloca i32, align 4
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !16275, metadata !DIExpression()), !dbg !16276
  store %struct.uiLayout* %layout, %struct.uiLayout** %layout.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout.addr, metadata !16277, metadata !DIExpression()), !dbg !16278
  store i8* %but_p, i8** %but_p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %but_p.addr, metadata !16279, metadata !DIExpression()), !dbg !16280
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !16281, metadata !DIExpression()), !dbg !16282
  %0 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !16283
  %call = call %struct.uiBlock* @uiLayoutGetBlock(%struct.uiLayout* %0), !dbg !16284
  store %struct.uiBlock* %call, %struct.uiBlock** %block, align 8, !dbg !16282
  call void @llvm.dbg.declare(metadata %struct.uiPopupBlockHandle** %handle, metadata !16285, metadata !DIExpression()), !dbg !16286
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !16287
  %handle1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 46, !dbg !16288
  %2 = load %struct.uiPopupBlockHandle*, %struct.uiPopupBlockHandle** %handle1, align 8, !dbg !16288
  store %struct.uiPopupBlockHandle* %2, %struct.uiPopupBlockHandle** %handle, align 8, !dbg !16286
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !16289, metadata !DIExpression()), !dbg !16290
  %3 = load i8*, i8** %but_p.addr, align 8, !dbg !16291
  %4 = bitcast i8* %3 to %struct.uiBut*, !dbg !16292
  store %struct.uiBut* %4, %struct.uiBut** %but, align 8, !dbg !16290
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !16293, metadata !DIExpression()), !dbg !16294
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item_array, metadata !16295, metadata !DIExpression()), !dbg !16296
  call void @llvm.dbg.declare(metadata i8* %free, metadata !16297, metadata !DIExpression()), !dbg !16298
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %split, metadata !16299, metadata !DIExpression()), !dbg !16300
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %column, metadata !16301, metadata !DIExpression()), !dbg !16302
  store %struct.uiLayout* null, %struct.uiLayout** %column, align 8, !dbg !16302
  call void @llvm.dbg.declare(metadata i32* %totitems, metadata !16303, metadata !DIExpression()), !dbg !16304
  store i32 0, i32* %totitems, align 4, !dbg !16304
  call void @llvm.dbg.declare(metadata i32* %columns, metadata !16305, metadata !DIExpression()), !dbg !16306
  call void @llvm.dbg.declare(metadata i32* %rows, metadata !16307, metadata !DIExpression()), !dbg !16308
  call void @llvm.dbg.declare(metadata i32* %a, metadata !16309, metadata !DIExpression()), !dbg !16310
  call void @llvm.dbg.declare(metadata i32* %b, metadata !16311, metadata !DIExpression()), !dbg !16312
  call void @llvm.dbg.declare(metadata i32* %column_start, metadata !16313, metadata !DIExpression()), !dbg !16314
  store i32 0, i32* %column_start, align 4, !dbg !16314
  call void @llvm.dbg.declare(metadata i32* %column_end, metadata !16315, metadata !DIExpression()), !dbg !16316
  store i32 0, i32* %column_end, align 4, !dbg !16316
  call void @llvm.dbg.declare(metadata i32* %nbr_entries_nosepr, metadata !16317, metadata !DIExpression()), !dbg !16318
  store i32 0, i32* %nbr_entries_nosepr, align 4, !dbg !16318
  %5 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !16319
  call void @uiBlockSetFlag(%struct.uiBlock* %5, i32 128), !dbg !16320
  %6 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !16321
  %evil_C = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %6, i32 0, i32 48, !dbg !16322
  %7 = load i8*, i8** %evil_C, align 8, !dbg !16322
  %8 = bitcast i8* %7 to %struct.bContext*, !dbg !16321
  %9 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !16323
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %9, i32 0, i32 54, !dbg !16324
  %10 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !16325
  %rnaprop = getelementptr inbounds %struct.uiBut, %struct.uiBut* %10, i32 0, i32 55, !dbg !16326
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop, align 8, !dbg !16326
  call void @RNA_property_enum_items_gettexted(%struct.bContext* %8, %struct.PointerRNA* %rnapoin, %struct.PropertyRNA* %11, %struct.EnumPropertyItem** %item_array, i32* null, i8* %free), !dbg !16327
  %12 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !16328
  %13 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !16329
  call void @uiBlockSetCurLayout(%struct.uiBlock* %12, %struct.uiLayout* %13), !dbg !16330
  %14 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item_array, align 8, !dbg !16331
  store %struct.EnumPropertyItem* %14, %struct.EnumPropertyItem** %item, align 8, !dbg !16333
  br label %for.cond, !dbg !16334

for.cond:                                         ; preds = %for.inc, %entry
  %15 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !16335
  %identifier = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %15, i32 0, i32 1, !dbg !16337
  %16 = load i8*, i8** %identifier, align 8, !dbg !16337
  %tobool = icmp ne i8* %16, null, !dbg !16338
  br i1 %tobool, label %for.body, label %for.end, !dbg !16338

for.body:                                         ; preds = %for.cond
  %17 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !16339
  %identifier2 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %17, i32 0, i32 1, !dbg !16342
  %18 = load i8*, i8** %identifier2, align 8, !dbg !16342
  %arrayidx = getelementptr inbounds i8, i8* %18, i64 0, !dbg !16339
  %19 = load i8, i8* %arrayidx, align 1, !dbg !16339
  %tobool3 = icmp ne i8 %19, 0, !dbg !16339
  br i1 %tobool3, label %if.end6, label %if.then, !dbg !16343

if.then:                                          ; preds = %for.body
  %20 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !16344
  %name = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %20, i32 0, i32 3, !dbg !16347
  %21 = load i8*, i8** %name, align 8, !dbg !16347
  %tobool4 = icmp ne i8* %21, null, !dbg !16344
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !16348

if.then5:                                         ; preds = %if.then
  %22 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !16349
  %flag = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %22, i32 0, i32 27, !dbg !16351
  %23 = load i32, i32* %flag, align 8, !dbg !16352
  %or = or i32 %23, 2048, !dbg !16352
  store i32 %or, i32* %flag, align 8, !dbg !16352
  %24 = load i32, i32* %nbr_entries_nosepr, align 4, !dbg !16353
  %inc = add nsw i32 %24, 1, !dbg !16353
  store i32 %inc, i32* %nbr_entries_nosepr, align 4, !dbg !16353
  br label %if.end, !dbg !16354

if.end:                                           ; preds = %if.then5, %if.then
  br label %for.inc, !dbg !16355

if.end6:                                          ; preds = %for.body
  %25 = load i32, i32* %nbr_entries_nosepr, align 4, !dbg !16356
  %inc7 = add nsw i32 %25, 1, !dbg !16356
  store i32 %inc7, i32* %nbr_entries_nosepr, align 4, !dbg !16356
  br label %for.inc, !dbg !16357

for.inc:                                          ; preds = %if.end6, %if.end
  %26 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !16358
  %incdec.ptr = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %26, i32 1, !dbg !16358
  store %struct.EnumPropertyItem* %incdec.ptr, %struct.EnumPropertyItem** %item, align 8, !dbg !16358
  %27 = load i32, i32* %totitems, align 4, !dbg !16359
  %inc8 = add nsw i32 %27, 1, !dbg !16359
  store i32 %inc8, i32* %totitems, align 4, !dbg !16359
  br label %for.cond, !dbg !16360, !llvm.loop !16361

for.end:                                          ; preds = %for.cond
  %28 = load i32, i32* %nbr_entries_nosepr, align 4, !dbg !16363
  %add = add nsw i32 %28, 20, !dbg !16364
  %div = sdiv i32 %add, 20, !dbg !16365
  store i32 %div, i32* %columns, align 4, !dbg !16366
  %29 = load i32, i32* %columns, align 4, !dbg !16367
  %cmp = icmp slt i32 %29, 1, !dbg !16369
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !16370

if.then9:                                         ; preds = %for.end
  store i32 1, i32* %columns, align 4, !dbg !16371
  br label %if.end10, !dbg !16372

if.end10:                                         ; preds = %if.then9, %for.end
  %30 = load i32, i32* %columns, align 4, !dbg !16373
  %cmp11 = icmp sgt i32 %30, 8, !dbg !16375
  br i1 %cmp11, label %if.then12, label %if.end15, !dbg !16376

if.then12:                                        ; preds = %if.end10
  %31 = load i32, i32* %nbr_entries_nosepr, align 4, !dbg !16377
  %add13 = add nsw i32 %31, 25, !dbg !16378
  %div14 = sdiv i32 %add13, 25, !dbg !16379
  store i32 %div14, i32* %columns, align 4, !dbg !16380
  br label %if.end15, !dbg !16381

if.end15:                                         ; preds = %if.then12, %if.end10
  %32 = load i32, i32* %totitems, align 4, !dbg !16382
  %33 = load i32, i32* %columns, align 4, !dbg !16383
  %div16 = sdiv i32 %32, %33, !dbg !16384
  store i32 %div16, i32* %rows, align 4, !dbg !16385
  %34 = load i32, i32* %rows, align 4, !dbg !16386
  %cmp17 = icmp slt i32 %34, 1, !dbg !16388
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !16389

if.then18:                                        ; preds = %if.end15
  store i32 1, i32* %rows, align 4, !dbg !16390
  br label %if.end19, !dbg !16391

if.end19:                                         ; preds = %if.then18, %if.end15
  br label %while.cond, !dbg !16392

while.cond:                                       ; preds = %while.body, %if.end19
  %35 = load i32, i32* %rows, align 4, !dbg !16393
  %36 = load i32, i32* %columns, align 4, !dbg !16394
  %mul = mul nsw i32 %35, %36, !dbg !16395
  %37 = load i32, i32* %totitems, align 4, !dbg !16396
  %cmp20 = icmp slt i32 %mul, %37, !dbg !16397
  br i1 %cmp20, label %while.body, label %while.end, !dbg !16392

while.body:                                       ; preds = %while.cond
  %38 = load i32, i32* %rows, align 4, !dbg !16398
  %inc21 = add nsw i32 %38, 1, !dbg !16398
  store i32 %inc21, i32* %rows, align 4, !dbg !16398
  br label %while.cond, !dbg !16392, !llvm.loop !16399

while.end:                                        ; preds = %while.cond
  %39 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !16400
  %40 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !16401
  %rnaprop22 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %40, i32 0, i32 55, !dbg !16402
  %41 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rnaprop22, align 8, !dbg !16402
  %call23 = call i8* @RNA_property_ui_name(%struct.PropertyRNA* %41), !dbg !16403
  %42 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !16404
  %conv = sext i16 %42 to i32, !dbg !16404
  %mul24 = mul nsw i32 %conv, 5, !dbg !16405
  %conv25 = trunc i32 %mul24 to i16, !dbg !16404
  %43 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !16406
  %call26 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %39, i32 5120, i32 0, i8* %call23, i32 0, i32 0, i16 signext %conv25, i16 signext %43, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i64 0, i64 0)), !dbg !16407
  %44 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !16408
  call void @uiItemS(%struct.uiLayout* %44), !dbg !16409
  %45 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !16410
  %call27 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %45, float 0.000000e+00, i32 0), !dbg !16411
  store %struct.uiLayout* %call27, %struct.uiLayout** %split, align 8, !dbg !16412
  store i32 0, i32* %a, align 4, !dbg !16413
  br label %for.cond28, !dbg !16415

for.cond28:                                       ; preds = %for.inc109, %while.end
  %46 = load i32, i32* %a, align 4, !dbg !16416
  %47 = load i32, i32* %totitems, align 4, !dbg !16418
  %cmp29 = icmp slt i32 %46, %47, !dbg !16419
  br i1 %cmp29, label %for.body31, label %for.end111, !dbg !16420

for.body31:                                       ; preds = %for.cond28
  %48 = load i32, i32* %a, align 4, !dbg !16421
  %49 = load i32, i32* %column_end, align 4, !dbg !16424
  %cmp32 = icmp eq i32 %48, %49, !dbg !16425
  br i1 %cmp32, label %if.then34, label %if.end54, !dbg !16426

if.then34:                                        ; preds = %for.body31
  %50 = load i32, i32* %a, align 4, !dbg !16427
  store i32 %50, i32* %column_start, align 4, !dbg !16429
  %51 = load i32, i32* %totitems, align 4, !dbg !16430
  store i32 %51, i32* %column_end, align 4, !dbg !16431
  %52 = load i32, i32* %a, align 4, !dbg !16432
  %add35 = add nsw i32 %52, 1, !dbg !16434
  store i32 %add35, i32* %b, align 4, !dbg !16435
  br label %for.cond36, !dbg !16436

for.cond36:                                       ; preds = %for.inc50, %if.then34
  %53 = load i32, i32* %b, align 4, !dbg !16437
  %54 = load i32, i32* %totitems, align 4, !dbg !16439
  %cmp37 = icmp slt i32 %53, %54, !dbg !16440
  br i1 %cmp37, label %for.body39, label %for.end52, !dbg !16441

for.body39:                                       ; preds = %for.cond36
  %55 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item_array, align 8, !dbg !16442
  %56 = load i32, i32* %b, align 4, !dbg !16444
  %idxprom = sext i32 %56 to i64, !dbg !16442
  %arrayidx40 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %55, i64 %idxprom, !dbg !16442
  store %struct.EnumPropertyItem* %arrayidx40, %struct.EnumPropertyItem** %item, align 8, !dbg !16445
  %57 = load i32, i32* %b, align 4, !dbg !16446
  %58 = load i32, i32* %a, align 4, !dbg !16448
  %sub = sub nsw i32 %57, %58, !dbg !16449
  %59 = load i32, i32* %rows, align 4, !dbg !16450
  %rem = srem i32 %sub, %59, !dbg !16451
  %cmp41 = icmp eq i32 %rem, 0, !dbg !16452
  br i1 %cmp41, label %if.then48, label %lor.lhs.false, !dbg !16453

lor.lhs.false:                                    ; preds = %for.body39
  %60 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !16454
  %identifier43 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %60, i32 0, i32 1, !dbg !16455
  %61 = load i8*, i8** %identifier43, align 8, !dbg !16455
  %arrayidx44 = getelementptr inbounds i8, i8* %61, i64 0, !dbg !16454
  %62 = load i8, i8* %arrayidx44, align 1, !dbg !16454
  %tobool45 = icmp ne i8 %62, 0, !dbg !16454
  br i1 %tobool45, label %if.end49, label %land.lhs.true, !dbg !16456

land.lhs.true:                                    ; preds = %lor.lhs.false
  %63 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !16457
  %name46 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %63, i32 0, i32 3, !dbg !16458
  %64 = load i8*, i8** %name46, align 8, !dbg !16458
  %tobool47 = icmp ne i8* %64, null, !dbg !16457
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !16459

if.then48:                                        ; preds = %land.lhs.true, %for.body39
  %65 = load i32, i32* %b, align 4, !dbg !16460
  store i32 %65, i32* %column_end, align 4, !dbg !16462
  br label %for.end52, !dbg !16463

if.end49:                                         ; preds = %land.lhs.true, %lor.lhs.false
  br label %for.inc50, !dbg !16464

for.inc50:                                        ; preds = %if.end49
  %66 = load i32, i32* %b, align 4, !dbg !16465
  %inc51 = add nsw i32 %66, 1, !dbg !16465
  store i32 %inc51, i32* %b, align 4, !dbg !16465
  br label %for.cond36, !dbg !16466, !llvm.loop !16467

for.end52:                                        ; preds = %if.then48, %for.cond36
  %67 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !16469
  %call53 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %67, i32 0), !dbg !16470
  store %struct.uiLayout* %call53, %struct.uiLayout** %column, align 8, !dbg !16471
  br label %if.end54, !dbg !16472

if.end54:                                         ; preds = %for.end52, %for.body31
  %68 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !16473
  %flag55 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %68, i32 0, i32 27, !dbg !16475
  %69 = load i32, i32* %flag55, align 8, !dbg !16475
  %and = and i32 %69, 2048, !dbg !16476
  %tobool56 = icmp ne i32 %and, 0, !dbg !16476
  br i1 %tobool56, label %if.then57, label %if.else, !dbg !16477

if.then57:                                        ; preds = %if.end54
  %70 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item_array, align 8, !dbg !16478
  %71 = load i32, i32* %a, align 4, !dbg !16480
  %idxprom58 = sext i32 %71 to i64, !dbg !16478
  %arrayidx59 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %70, i64 %idxprom58, !dbg !16478
  store %struct.EnumPropertyItem* %arrayidx59, %struct.EnumPropertyItem** %item, align 8, !dbg !16481
  br label %if.end65, !dbg !16482

if.else:                                          ; preds = %if.end54
  %72 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item_array, align 8, !dbg !16483
  %73 = load i32, i32* %column_start, align 4, !dbg !16485
  %74 = load i32, i32* %column_end, align 4, !dbg !16486
  %add60 = add nsw i32 %73, %74, !dbg !16487
  %sub61 = sub nsw i32 %add60, 1, !dbg !16488
  %75 = load i32, i32* %a, align 4, !dbg !16489
  %sub62 = sub nsw i32 %sub61, %75, !dbg !16490
  %idxprom63 = sext i32 %sub62 to i64, !dbg !16483
  %arrayidx64 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %72, i64 %idxprom63, !dbg !16483
  store %struct.EnumPropertyItem* %arrayidx64, %struct.EnumPropertyItem** %item, align 8, !dbg !16491
  br label %if.end65

if.end65:                                         ; preds = %if.else, %if.then57
  %76 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !16492
  %identifier66 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %76, i32 0, i32 1, !dbg !16494
  %77 = load i8*, i8** %identifier66, align 8, !dbg !16494
  %arrayidx67 = getelementptr inbounds i8, i8* %77, i64 0, !dbg !16492
  %78 = load i8, i8* %arrayidx67, align 1, !dbg !16492
  %tobool68 = icmp ne i8 %78, 0, !dbg !16492
  br i1 %tobool68, label %if.else86, label %if.then69, !dbg !16495

if.then69:                                        ; preds = %if.end65
  %79 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !16496
  %name70 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %79, i32 0, i32 3, !dbg !16499
  %80 = load i8*, i8** %name70, align 8, !dbg !16499
  %tobool71 = icmp ne i8* %80, null, !dbg !16496
  br i1 %tobool71, label %if.then72, label %if.else84, !dbg !16500

if.then72:                                        ; preds = %if.then69
  %81 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !16501
  %icon = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %81, i32 0, i32 2, !dbg !16504
  %82 = load i32, i32* %icon, align 8, !dbg !16504
  %tobool73 = icmp ne i32 %82, 0, !dbg !16501
  br i1 %tobool73, label %if.then74, label %if.else77, !dbg !16505

if.then74:                                        ; preds = %if.then72
  %83 = load %struct.uiLayout*, %struct.uiLayout** %column, align 8, !dbg !16506
  %84 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !16508
  %name75 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %84, i32 0, i32 3, !dbg !16509
  %85 = load i8*, i8** %name75, align 8, !dbg !16509
  %86 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !16510
  %icon76 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %86, i32 0, i32 2, !dbg !16511
  %87 = load i32, i32* %icon76, align 8, !dbg !16511
  call void @uiItemL(%struct.uiLayout* %83, i8* %85, i32 %87), !dbg !16512
  br label %if.end83, !dbg !16513

if.else77:                                        ; preds = %if.then72
  %88 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !16514
  %89 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !16516
  %name78 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %89, i32 0, i32 3, !dbg !16517
  %90 = load i8*, i8** %name78, align 8, !dbg !16517
  %91 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !16518
  %conv79 = sext i16 %91 to i32, !dbg !16518
  %mul80 = mul nsw i32 %conv79, 5, !dbg !16519
  %conv81 = trunc i32 %mul80 to i16, !dbg !16518
  %92 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !16520
  %call82 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %88, i32 5120, i32 0, i8* %90, i32 0, i32 0, i16 signext %conv81, i16 signext %92, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.23, i64 0, i64 0)), !dbg !16521
  br label %if.end83

if.end83:                                         ; preds = %if.else77, %if.then74
  br label %if.end85, !dbg !16522

if.else84:                                        ; preds = %if.then69
  %93 = load %struct.uiLayout*, %struct.uiLayout** %column, align 8, !dbg !16523
  call void @uiItemS(%struct.uiLayout* %93), !dbg !16525
  br label %if.end85

if.end85:                                         ; preds = %if.else84, %if.end83
  br label %if.end108, !dbg !16526

if.else86:                                        ; preds = %if.end65
  %94 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !16527
  %icon87 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %94, i32 0, i32 2, !dbg !16530
  %95 = load i32, i32* %icon87, align 8, !dbg !16530
  %tobool88 = icmp ne i32 %95, 0, !dbg !16527
  br i1 %tobool88, label %if.then89, label %if.else97, !dbg !16531

if.then89:                                        ; preds = %if.else86
  %96 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !16532
  %97 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !16534
  %icon90 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %97, i32 0, i32 2, !dbg !16535
  %98 = load i32, i32* %icon90, align 8, !dbg !16535
  %99 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !16536
  %name91 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %99, i32 0, i32 3, !dbg !16537
  %100 = load i8*, i8** %name91, align 8, !dbg !16537
  %101 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !16538
  %conv92 = sext i16 %101 to i32, !dbg !16538
  %mul93 = mul nsw i32 %conv92, 5, !dbg !16539
  %conv94 = trunc i32 %mul93 to i16, !dbg !16538
  %102 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !16540
  %103 = load %struct.uiPopupBlockHandle*, %struct.uiPopupBlockHandle** %handle, align 8, !dbg !16541
  %retvalue = getelementptr inbounds %struct.uiPopupBlockHandle, %struct.uiPopupBlockHandle* %103, i32 0, i32 17, !dbg !16542
  %104 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !16543
  %value = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %104, i32 0, i32 0, !dbg !16544
  %105 = load i32, i32* %value, align 8, !dbg !16544
  %conv95 = sitofp i32 %105 to float, !dbg !16543
  %106 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !16545
  %description = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %106, i32 0, i32 4, !dbg !16546
  %107 = load i8*, i8** %description, align 8, !dbg !16546
  %call96 = call %struct.uiBut* @uiDefIconTextButI(%struct.uiBlock* %96, i32 10240, i32 -1, i32 %98, i8* %100, i32 0, i32 0, i16 signext %conv94, i16 signext %102, i32* %retvalue, float %conv95, float 0.000000e+00, float 0.000000e+00, float -1.000000e+00, i8* %107), !dbg !16547
  br label %if.end107, !dbg !16548

if.else97:                                        ; preds = %if.else86
  %108 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !16549
  %109 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !16551
  %name98 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %109, i32 0, i32 3, !dbg !16552
  %110 = load i8*, i8** %name98, align 8, !dbg !16552
  %111 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !16553
  %conv99 = sext i16 %111 to i32, !dbg !16553
  %mul100 = mul nsw i32 %conv99, 5, !dbg !16554
  %conv101 = trunc i32 %mul100 to i16, !dbg !16553
  %112 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !16555
  %113 = load %struct.uiPopupBlockHandle*, %struct.uiPopupBlockHandle** %handle, align 8, !dbg !16556
  %retvalue102 = getelementptr inbounds %struct.uiPopupBlockHandle, %struct.uiPopupBlockHandle* %113, i32 0, i32 17, !dbg !16557
  %114 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !16558
  %value103 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %114, i32 0, i32 0, !dbg !16559
  %115 = load i32, i32* %value103, align 8, !dbg !16559
  %conv104 = sitofp i32 %115 to float, !dbg !16558
  %116 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !16560
  %description105 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %116, i32 0, i32 4, !dbg !16561
  %117 = load i8*, i8** %description105, align 8, !dbg !16561
  %call106 = call %struct.uiBut* @uiDefButI(%struct.uiBlock* %108, i32 10240, i32 -1, i8* %110, i32 0, i32 0, i16 signext %conv101, i16 signext %112, i32* %retvalue102, float %conv104, float 0.000000e+00, float 0.000000e+00, float -1.000000e+00, i8* %117), !dbg !16562
  br label %if.end107

if.end107:                                        ; preds = %if.else97, %if.then89
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.end85
  br label %for.inc109, !dbg !16563

for.inc109:                                       ; preds = %if.end108
  %118 = load i32, i32* %a, align 4, !dbg !16564
  %inc110 = add nsw i32 %118, 1, !dbg !16564
  store i32 %inc110, i32* %a, align 4, !dbg !16564
  br label %for.cond28, !dbg !16565, !llvm.loop !16566

for.end111:                                       ; preds = %for.cond28
  %119 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !16568
  %120 = load %struct.uiLayout*, %struct.uiLayout** %layout.addr, align 8, !dbg !16569
  call void @uiBlockSetCurLayout(%struct.uiBlock* %119, %struct.uiLayout* %120), !dbg !16570
  %121 = load i8, i8* %free, align 1, !dbg !16571
  %tobool112 = icmp ne i8 %121, 0, !dbg !16571
  br i1 %tobool112, label %if.then113, label %if.end114, !dbg !16573

if.then113:                                       ; preds = %for.end111
  %122 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16574
  %123 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item_array, align 8, !dbg !16576
  %124 = bitcast %struct.EnumPropertyItem* %123 to i8*, !dbg !16576
  call void %122(i8* %124), !dbg !16574
  br label %if.end114, !dbg !16577

if.end114:                                        ; preds = %if.then113, %for.end111
  ret void, !dbg !16578
}

declare dso_local i32 @RNA_property_ui_icon(%struct.PropertyRNA*) #3

declare dso_local void @RNA_property_int_range(%struct.PointerRNA*, %struct.PropertyRNA*, i32*, i32*) #3

declare dso_local void @RNA_property_float_range(%struct.PointerRNA*, %struct.PropertyRNA*, float*, float*) #3

declare dso_local i32 @RNA_property_string_maxlength(%struct.PropertyRNA*) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ui_is_but_rna_undo(%struct.uiBut* %but) #0 !dbg !16579 {
entry:
  %retval = alloca i8, align 1
  %but.addr = alloca %struct.uiBut*, align 8
  %id1 = alloca %struct.ID*, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !16580, metadata !DIExpression()), !dbg !16581
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !16582
  %rnapoin = getelementptr inbounds %struct.uiBut, %struct.uiBut* %0, i32 0, i32 54, !dbg !16584
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin, i32 0, i32 0, !dbg !16585
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !16586
  %1 = load i8*, i8** %data, align 8, !dbg !16586
  %tobool = icmp ne i8* %1, null, !dbg !16582
  br i1 %tobool, label %if.then, label %if.else14, !dbg !16587

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ID** %id1, metadata !16588, metadata !DIExpression()), !dbg !16590
  %2 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !16591
  %rnapoin2 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %2, i32 0, i32 54, !dbg !16592
  %id3 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin2, i32 0, i32 0, !dbg !16593
  %data4 = getelementptr inbounds %struct.anon, %struct.anon* %id3, i32 0, i32 0, !dbg !16594
  %3 = load i8*, i8** %data4, align 8, !dbg !16594
  %4 = bitcast i8* %3 to %struct.ID*, !dbg !16591
  store %struct.ID* %4, %struct.ID** %id1, align 8, !dbg !16590
  %5 = load %struct.ID*, %struct.ID** %id1, align 8, !dbg !16595
  %name = getelementptr inbounds %struct.ID, %struct.ID* %5, i32 0, i32 4, !dbg !16595
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !16595
  %6 = bitcast i8* %arraydecay to i16*, !dbg !16595
  %7 = load i16, i16* %6, align 8, !dbg !16595
  %conv = sext i16 %7 to i32, !dbg !16595
  %cmp = icmp ne i32 %conv, 21075, !dbg !16595
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !16595

land.rhs:                                         ; preds = %if.then
  %8 = load %struct.ID*, %struct.ID** %id1, align 8, !dbg !16595
  %name6 = getelementptr inbounds %struct.ID, %struct.ID* %8, i32 0, i32 4, !dbg !16595
  %arraydecay7 = getelementptr inbounds [66 x i8], [66 x i8]* %name6, i64 0, i64 0, !dbg !16595
  %9 = bitcast i8* %arraydecay7 to i16*, !dbg !16595
  %10 = load i16, i16* %9, align 8, !dbg !16595
  %conv8 = sext i16 %10 to i32, !dbg !16595
  %cmp9 = icmp ne i32 %conv8, 19799, !dbg !16595
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %11 = phi i1 [ false, %if.then ], [ %cmp9, %land.rhs ], !dbg !16597
  %land.ext = zext i1 %11 to i32, !dbg !16595
  %cmp11 = icmp eq i32 %land.ext, 0, !dbg !16598
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !16599

if.then13:                                        ; preds = %land.end
  store i8 0, i8* %retval, align 1, !dbg !16600
  br label %return, !dbg !16600

if.else:                                          ; preds = %land.end
  store i8 1, i8* %retval, align 1, !dbg !16602
  br label %return, !dbg !16602

if.else14:                                        ; preds = %entry
  %12 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !16604
  %rnapoin15 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %12, i32 0, i32 54, !dbg !16606
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin15, i32 0, i32 1, !dbg !16607
  %13 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !16607
  %tobool16 = icmp ne %struct.StructRNA* %13, null, !dbg !16604
  br i1 %tobool16, label %land.lhs.true, label %if.end, !dbg !16608

land.lhs.true:                                    ; preds = %if.else14
  %14 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !16609
  %rnapoin17 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %14, i32 0, i32 54, !dbg !16610
  %type18 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %rnapoin17, i32 0, i32 1, !dbg !16611
  %15 = load %struct.StructRNA*, %struct.StructRNA** %type18, align 8, !dbg !16611
  %call = call zeroext i8 @RNA_struct_undo_check(%struct.StructRNA* %15), !dbg !16612
  %tobool19 = icmp ne i8 %call, 0, !dbg !16612
  br i1 %tobool19, label %if.end, label %if.then20, !dbg !16613

if.then20:                                        ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !16614
  br label %return, !dbg !16614

if.end:                                           ; preds = %land.lhs.true, %if.else14
  br label %if.end21

if.end21:                                         ; preds = %if.end
  store i8 1, i8* %retval, align 1, !dbg !16616
  br label %return, !dbg !16616

return:                                           ; preds = %if.end21, %if.then20, %if.else, %if.then13
  %16 = load i8, i8* %retval, align 1, !dbg !16617
  ret i8 %16, !dbg !16617
}

; Function Attrs: noinline nounwind uwtable
define internal float @ui_get_but_step_unit(%struct.uiBut* %but, float %step_default) #0 !dbg !16618 {
entry:
  %retval = alloca float, align 4
  %but.addr = alloca %struct.uiBut*, align 8
  %step_default.addr = alloca float, align 4
  %unit_type = alloca i32, align 4
  %step = alloca double, align 8
  store %struct.uiBut* %but, %struct.uiBut** %but.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but.addr, metadata !16621, metadata !DIExpression()), !dbg !16622
  store float %step_default, float* %step_default.addr, align 4
  call void @llvm.dbg.declare(metadata float* %step_default.addr, metadata !16623, metadata !DIExpression()), !dbg !16624
  call void @llvm.dbg.declare(metadata i32* %unit_type, metadata !16625, metadata !DIExpression()), !dbg !16626
  %0 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !16627
  %call = call i32 @uiButGetUnitType(%struct.uiBut* %0), !dbg !16627
  %shr = ashr i32 %call, 16, !dbg !16627
  store i32 %shr, i32* %unit_type, align 4, !dbg !16626
  call void @llvm.dbg.declare(metadata double* %step, metadata !16628, metadata !DIExpression()), !dbg !16629
  %1 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !16630
  %2 = load float, float* %step_default.addr, align 4, !dbg !16631
  %conv = fpext float %2 to double, !dbg !16631
  %call1 = call double @ui_get_but_scale_unit(%struct.uiBut* %1, double %conv), !dbg !16632
  %3 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !16633
  %block = getelementptr inbounds %struct.uiBut, %struct.uiBut* %3, i32 0, i32 74, !dbg !16634
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !16634
  %unit = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %4, i32 0, i32 49, !dbg !16635
  %5 = load %struct.UnitSettings*, %struct.UnitSettings** %unit, align 8, !dbg !16635
  %system = getelementptr inbounds %struct.UnitSettings, %struct.UnitSettings* %5, i32 0, i32 1, !dbg !16636
  %6 = load i8, i8* %system, align 4, !dbg !16636
  %conv2 = zext i8 %6 to i32, !dbg !16633
  %7 = load i32, i32* %unit_type, align 4, !dbg !16637
  %call3 = call double @bUnit_ClosestScalar(double %call1, i32 %conv2, i32 %7), !dbg !16638
  store double %call3, double* %step, align 8, !dbg !16639
  %8 = load double, double* %step, align 8, !dbg !16640
  %cmp = fcmp une double %8, -1.000000e+00, !dbg !16642
  br i1 %cmp, label %if.then, label %if.else, !dbg !16643

if.then:                                          ; preds = %entry
  %9 = load double, double* %step, align 8, !dbg !16644
  %10 = load %struct.uiBut*, %struct.uiBut** %but.addr, align 8, !dbg !16646
  %call5 = call double @ui_get_but_scale_unit(%struct.uiBut* %10, double 1.000000e+00), !dbg !16647
  %div = fdiv double %9, %call5, !dbg !16648
  %conv6 = fptrunc double %div to float, !dbg !16649
  %mul = fmul float %conv6, 1.000000e+02, !dbg !16650
  store float %mul, float* %retval, align 4, !dbg !16651
  br label %return, !dbg !16651

if.else:                                          ; preds = %entry
  %11 = load float, float* %step_default.addr, align 4, !dbg !16652
  store float %11, float* %retval, align 4, !dbg !16654
  br label %return, !dbg !16654

return:                                           ; preds = %if.else, %if.then
  %12 = load float, float* %retval, align 4, !dbg !16655
  ret float %12, !dbg !16655
}

declare dso_local %struct.uiBlock* @uiLayoutGetBlock(%struct.uiLayout*) #3

declare dso_local void @uiBlockSetCurLayout(%struct.uiBlock*, %struct.uiLayout*) #3

declare dso_local void @uiItemS(%struct.uiLayout*) #3

declare dso_local %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout*, float, i32) #3

declare dso_local %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout*, i32) #3

declare dso_local void @uiItemL(%struct.uiLayout*, i8*, i32) #3

declare dso_local zeroext i8 @RNA_struct_undo_check(%struct.StructRNA*) #3

declare dso_local double @bUnit_ClosestScalar(double, i32, i32) #3

declare dso_local i8* @BLI_strcasestr(i8*, i8*) #3

declare dso_local zeroext i8 @uiSearchItemAdd(%struct.uiSearchItems*, i8*, i8*, i32) #3

declare dso_local i8* @WM_key_event_operator_string(%struct.bContext*, i8*, i32, %struct.IDProperty*, i8 zeroext, i8*, i32) #3

declare dso_local %struct.IDProperty* @IDP_New(i32, %union.IDPropertyTemplate*, i8*) #3

declare dso_local zeroext i8 @IDP_AddToGroup(%struct.IDProperty*, %struct.IDProperty*) #3

declare dso_local %struct.IDProperty* @IDP_NewString(i8*, i8*, i32) #3

declare dso_local void @IDP_AssignString(%struct.IDProperty*, i8*, i32) #3

declare dso_local void @IDP_FreeProperty(%struct.IDProperty*) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dso_local zeroext i8 @RNA_struct_is_a(%struct.StructRNA*, %struct.StructRNA*) #3

declare dso_local i8* @BLI_sprintfN(i8*, ...) #3

declare dso_local i8* @RNA_path_from_ID_to_property(%struct.PointerRNA*, %struct.PropertyRNA*) #3

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly }
attributes #9 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!3271, !3272, !3273}
!llvm.ident = !{!3274}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "ui_radial_dir_order", scope: !2, file: !3, line: 1107, type: !3266, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !1533, globals: !3263, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/editors/interface/interface.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !16, !62, !69, !919, !944, !955, !964, !998, !1007, !1019, !1034, !1065, !1097, !1298, !1312, !1327, !1338}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 426, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/editors/include/UI_interface.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15}
!9 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_NONE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "UI_BLOCK_BOUNDS", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_TEXT", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_POPUP_MOUSE", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_POPUP_MENU", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_POPUP_CENTER", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_PIE_CENTER", value: 6, isUnsigned: true)
!16 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 236, baseType: !7, size: 32, elements: !17)
!17 = !{!18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61}
!18 = !DIEnumerator(name: "BUT", value: 512, isUnsigned: true)
!19 = !DIEnumerator(name: "ROW", value: 1024, isUnsigned: true)
!20 = !DIEnumerator(name: "TOG", value: 1536, isUnsigned: true)
!21 = !DIEnumerator(name: "NUM", value: 2560, isUnsigned: true)
!22 = !DIEnumerator(name: "TEX", value: 3072, isUnsigned: true)
!23 = !DIEnumerator(name: "TOGN", value: 4608, isUnsigned: true)
!24 = !DIEnumerator(name: "LABEL", value: 5120, isUnsigned: true)
!25 = !DIEnumerator(name: "MENU", value: 5632, isUnsigned: true)
!26 = !DIEnumerator(name: "ICONTOG", value: 6656, isUnsigned: true)
!27 = !DIEnumerator(name: "NUMSLI", value: 7168, isUnsigned: true)
!28 = !DIEnumerator(name: "COLOR", value: 7680, isUnsigned: true)
!29 = !DIEnumerator(name: "SCROLL", value: 9216, isUnsigned: true)
!30 = !DIEnumerator(name: "BLOCK", value: 9728, isUnsigned: true)
!31 = !DIEnumerator(name: "BUTM", value: 10240, isUnsigned: true)
!32 = !DIEnumerator(name: "SEPR", value: 10752, isUnsigned: true)
!33 = !DIEnumerator(name: "LINK", value: 11264, isUnsigned: true)
!34 = !DIEnumerator(name: "INLINK", value: 11776, isUnsigned: true)
!35 = !DIEnumerator(name: "KEYEVT", value: 12288, isUnsigned: true)
!36 = !DIEnumerator(name: "HSVCUBE", value: 13312, isUnsigned: true)
!37 = !DIEnumerator(name: "PULLDOWN", value: 13824, isUnsigned: true)
!38 = !DIEnumerator(name: "ROUNDBOX", value: 14336, isUnsigned: true)
!39 = !DIEnumerator(name: "BUT_COLORBAND", value: 15360, isUnsigned: true)
!40 = !DIEnumerator(name: "BUT_NORMAL", value: 15872, isUnsigned: true)
!41 = !DIEnumerator(name: "BUT_CURVE", value: 16384, isUnsigned: true)
!42 = !DIEnumerator(name: "ICONTOGN", value: 17408, isUnsigned: true)
!43 = !DIEnumerator(name: "LISTBOX", value: 17920, isUnsigned: true)
!44 = !DIEnumerator(name: "LISTROW", value: 18432, isUnsigned: true)
!45 = !DIEnumerator(name: "TOGBUT", value: 18944, isUnsigned: true)
!46 = !DIEnumerator(name: "OPTION", value: 19456, isUnsigned: true)
!47 = !DIEnumerator(name: "OPTIONN", value: 19968, isUnsigned: true)
!48 = !DIEnumerator(name: "TRACKPREVIEW", value: 20480, isUnsigned: true)
!49 = !DIEnumerator(name: "SEARCH_MENU", value: 20992, isUnsigned: true)
!50 = !DIEnumerator(name: "BUT_EXTRA", value: 21504, isUnsigned: true)
!51 = !DIEnumerator(name: "HSVCIRCLE", value: 22016, isUnsigned: true)
!52 = !DIEnumerator(name: "HOTKEYEVT", value: 23552, isUnsigned: true)
!53 = !DIEnumerator(name: "BUT_IMAGE", value: 24064, isUnsigned: true)
!54 = !DIEnumerator(name: "HISTOGRAM", value: 24576, isUnsigned: true)
!55 = !DIEnumerator(name: "WAVEFORM", value: 25088, isUnsigned: true)
!56 = !DIEnumerator(name: "VECTORSCOPE", value: 25600, isUnsigned: true)
!57 = !DIEnumerator(name: "PROGRESSBAR", value: 26112, isUnsigned: true)
!58 = !DIEnumerator(name: "SEARCH_MENU_UNLINK", value: 26624, isUnsigned: true)
!59 = !DIEnumerator(name: "NODESOCKET", value: 27136, isUnsigned: true)
!60 = !DIEnumerator(name: "SEPRLINE", value: 27648, isUnsigned: true)
!61 = !DIEnumerator(name: "GRIP", value: 28160, isUnsigned: true)
!62 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 223, baseType: !7, size: 32, elements: !63)
!63 = !{!64, !65, !66, !67, !68}
!64 = !DIEnumerator(name: "UI_BUT_POIN_CHAR", value: 32, isUnsigned: true)
!65 = !DIEnumerator(name: "UI_BUT_POIN_SHORT", value: 64, isUnsigned: true)
!66 = !DIEnumerator(name: "UI_BUT_POIN_INT", value: 96, isUnsigned: true)
!67 = !DIEnumerator(name: "UI_BUT_POIN_FLOAT", value: 128, isUnsigned: true)
!68 = !DIEnumerator(name: "UI_BUT_POIN_BIT", value: 256, isUnsigned: true)
!69 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !70, line: 40, baseType: !7, size: 32, elements: !71)
!70 = !DIFile(filename: "blender/source/blender/editors/include/UI_resources.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!71 = !{!72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918}
!72 = !DIEnumerator(name: "ICON_NONE", value: 0, isUnsigned: true)
!73 = !DIEnumerator(name: "ICON_QUESTION", value: 1, isUnsigned: true)
!74 = !DIEnumerator(name: "ICON_ERROR", value: 2, isUnsigned: true)
!75 = !DIEnumerator(name: "ICON_CANCEL", value: 3, isUnsigned: true)
!76 = !DIEnumerator(name: "ICON_TRIA_RIGHT", value: 4, isUnsigned: true)
!77 = !DIEnumerator(name: "ICON_TRIA_DOWN", value: 5, isUnsigned: true)
!78 = !DIEnumerator(name: "ICON_TRIA_LEFT", value: 6, isUnsigned: true)
!79 = !DIEnumerator(name: "ICON_TRIA_UP", value: 7, isUnsigned: true)
!80 = !DIEnumerator(name: "ICON_ARROW_LEFTRIGHT", value: 8, isUnsigned: true)
!81 = !DIEnumerator(name: "ICON_PLUS", value: 9, isUnsigned: true)
!82 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_DOWN", value: 10, isUnsigned: true)
!83 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_RIGHT", value: 11, isUnsigned: true)
!84 = !DIEnumerator(name: "ICON_RADIOBUT_OFF", value: 12, isUnsigned: true)
!85 = !DIEnumerator(name: "ICON_RADIOBUT_ON", value: 13, isUnsigned: true)
!86 = !DIEnumerator(name: "ICON_MENU_PANEL", value: 14, isUnsigned: true)
!87 = !DIEnumerator(name: "ICON_BLENDER", value: 15, isUnsigned: true)
!88 = !DIEnumerator(name: "ICON_GRIP", value: 16, isUnsigned: true)
!89 = !DIEnumerator(name: "ICON_DOT", value: 17, isUnsigned: true)
!90 = !DIEnumerator(name: "ICON_COLLAPSEMENU", value: 18, isUnsigned: true)
!91 = !DIEnumerator(name: "ICON_X", value: 19, isUnsigned: true)
!92 = !DIEnumerator(name: "ICON_BLANK005", value: 20, isUnsigned: true)
!93 = !DIEnumerator(name: "ICON_GO_LEFT", value: 21, isUnsigned: true)
!94 = !DIEnumerator(name: "ICON_PLUG", value: 22, isUnsigned: true)
!95 = !DIEnumerator(name: "ICON_UI", value: 23, isUnsigned: true)
!96 = !DIEnumerator(name: "ICON_NODE", value: 24, isUnsigned: true)
!97 = !DIEnumerator(name: "ICON_NODE_SEL", value: 25, isUnsigned: true)
!98 = !DIEnumerator(name: "ICON_FULLSCREEN", value: 26, isUnsigned: true)
!99 = !DIEnumerator(name: "ICON_SPLITSCREEN", value: 27, isUnsigned: true)
!100 = !DIEnumerator(name: "ICON_RIGHTARROW_THIN", value: 28, isUnsigned: true)
!101 = !DIEnumerator(name: "ICON_BORDERMOVE", value: 29, isUnsigned: true)
!102 = !DIEnumerator(name: "ICON_VIEWZOOM", value: 30, isUnsigned: true)
!103 = !DIEnumerator(name: "ICON_ZOOMIN", value: 31, isUnsigned: true)
!104 = !DIEnumerator(name: "ICON_ZOOMOUT", value: 32, isUnsigned: true)
!105 = !DIEnumerator(name: "ICON_PANEL_CLOSE", value: 33, isUnsigned: true)
!106 = !DIEnumerator(name: "ICON_COPY_ID", value: 34, isUnsigned: true)
!107 = !DIEnumerator(name: "ICON_EYEDROPPER", value: 35, isUnsigned: true)
!108 = !DIEnumerator(name: "ICON_LINK_AREA", value: 36, isUnsigned: true)
!109 = !DIEnumerator(name: "ICON_AUTO", value: 37, isUnsigned: true)
!110 = !DIEnumerator(name: "ICON_CHECKBOX_DEHLT", value: 38, isUnsigned: true)
!111 = !DIEnumerator(name: "ICON_CHECKBOX_HLT", value: 39, isUnsigned: true)
!112 = !DIEnumerator(name: "ICON_UNLOCKED", value: 40, isUnsigned: true)
!113 = !DIEnumerator(name: "ICON_LOCKED", value: 41, isUnsigned: true)
!114 = !DIEnumerator(name: "ICON_UNPINNED", value: 42, isUnsigned: true)
!115 = !DIEnumerator(name: "ICON_PINNED", value: 43, isUnsigned: true)
!116 = !DIEnumerator(name: "ICON_SCREEN_BACK", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "ICON_RIGHTARROW", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "ICON_DOWNARROW_HLT", value: 46, isUnsigned: true)
!119 = !DIEnumerator(name: "ICON_DOTSUP", value: 47, isUnsigned: true)
!120 = !DIEnumerator(name: "ICON_DOTSDOWN", value: 48, isUnsigned: true)
!121 = !DIEnumerator(name: "ICON_LINK", value: 49, isUnsigned: true)
!122 = !DIEnumerator(name: "ICON_INLINK", value: 50, isUnsigned: true)
!123 = !DIEnumerator(name: "ICON_PLUGIN", value: 51, isUnsigned: true)
!124 = !DIEnumerator(name: "ICON_HELP", value: 52, isUnsigned: true)
!125 = !DIEnumerator(name: "ICON_GHOST_ENABLED", value: 53, isUnsigned: true)
!126 = !DIEnumerator(name: "ICON_COLOR", value: 54, isUnsigned: true)
!127 = !DIEnumerator(name: "ICON_LINKED", value: 55, isUnsigned: true)
!128 = !DIEnumerator(name: "ICON_UNLINKED", value: 56, isUnsigned: true)
!129 = !DIEnumerator(name: "ICON_HAND", value: 57, isUnsigned: true)
!130 = !DIEnumerator(name: "ICON_ZOOM_ALL", value: 58, isUnsigned: true)
!131 = !DIEnumerator(name: "ICON_ZOOM_SELECTED", value: 59, isUnsigned: true)
!132 = !DIEnumerator(name: "ICON_ZOOM_PREVIOUS", value: 60, isUnsigned: true)
!133 = !DIEnumerator(name: "ICON_ZOOM_IN", value: 61, isUnsigned: true)
!134 = !DIEnumerator(name: "ICON_ZOOM_OUT", value: 62, isUnsigned: true)
!135 = !DIEnumerator(name: "ICON_RENDER_REGION", value: 63, isUnsigned: true)
!136 = !DIEnumerator(name: "ICON_BORDER_RECT", value: 64, isUnsigned: true)
!137 = !DIEnumerator(name: "ICON_BORDER_LASSO", value: 65, isUnsigned: true)
!138 = !DIEnumerator(name: "ICON_FREEZE", value: 66, isUnsigned: true)
!139 = !DIEnumerator(name: "ICON_STYLUS_PRESSURE", value: 67, isUnsigned: true)
!140 = !DIEnumerator(name: "ICON_GHOST_DISABLED", value: 68, isUnsigned: true)
!141 = !DIEnumerator(name: "ICON_NEW", value: 69, isUnsigned: true)
!142 = !DIEnumerator(name: "ICON_FILE_TICK", value: 70, isUnsigned: true)
!143 = !DIEnumerator(name: "ICON_QUIT", value: 71, isUnsigned: true)
!144 = !DIEnumerator(name: "ICON_URL", value: 72, isUnsigned: true)
!145 = !DIEnumerator(name: "ICON_RECOVER_LAST", value: 73, isUnsigned: true)
!146 = !DIEnumerator(name: "ICON_BLANK038", value: 74, isUnsigned: true)
!147 = !DIEnumerator(name: "ICON_FULLSCREEN_ENTER", value: 75, isUnsigned: true)
!148 = !DIEnumerator(name: "ICON_FULLSCREEN_EXIT", value: 76, isUnsigned: true)
!149 = !DIEnumerator(name: "ICON_BLANK1", value: 77, isUnsigned: true)
!150 = !DIEnumerator(name: "ICON_LAMP", value: 78, isUnsigned: true)
!151 = !DIEnumerator(name: "ICON_MATERIAL", value: 79, isUnsigned: true)
!152 = !DIEnumerator(name: "ICON_TEXTURE", value: 80, isUnsigned: true)
!153 = !DIEnumerator(name: "ICON_ANIM", value: 81, isUnsigned: true)
!154 = !DIEnumerator(name: "ICON_WORLD", value: 82, isUnsigned: true)
!155 = !DIEnumerator(name: "ICON_SCENE", value: 83, isUnsigned: true)
!156 = !DIEnumerator(name: "ICON_EDIT", value: 84, isUnsigned: true)
!157 = !DIEnumerator(name: "ICON_GAME", value: 85, isUnsigned: true)
!158 = !DIEnumerator(name: "ICON_RADIO", value: 86, isUnsigned: true)
!159 = !DIEnumerator(name: "ICON_SCRIPT", value: 87, isUnsigned: true)
!160 = !DIEnumerator(name: "ICON_PARTICLES", value: 88, isUnsigned: true)
!161 = !DIEnumerator(name: "ICON_PHYSICS", value: 89, isUnsigned: true)
!162 = !DIEnumerator(name: "ICON_SPEAKER", value: 90, isUnsigned: true)
!163 = !DIEnumerator(name: "ICON_TEXTURE_SHADED", value: 91, isUnsigned: true)
!164 = !DIEnumerator(name: "ICON_BLANK042", value: 92, isUnsigned: true)
!165 = !DIEnumerator(name: "ICON_BLANK043", value: 93, isUnsigned: true)
!166 = !DIEnumerator(name: "ICON_BLANK044", value: 94, isUnsigned: true)
!167 = !DIEnumerator(name: "ICON_BLANK045", value: 95, isUnsigned: true)
!168 = !DIEnumerator(name: "ICON_BLANK046", value: 96, isUnsigned: true)
!169 = !DIEnumerator(name: "ICON_BLANK047", value: 97, isUnsigned: true)
!170 = !DIEnumerator(name: "ICON_BLANK048", value: 98, isUnsigned: true)
!171 = !DIEnumerator(name: "ICON_BLANK049", value: 99, isUnsigned: true)
!172 = !DIEnumerator(name: "ICON_BLANK050", value: 100, isUnsigned: true)
!173 = !DIEnumerator(name: "ICON_BLANK051", value: 101, isUnsigned: true)
!174 = !DIEnumerator(name: "ICON_BLANK052", value: 102, isUnsigned: true)
!175 = !DIEnumerator(name: "ICON_BLANK052b", value: 103, isUnsigned: true)
!176 = !DIEnumerator(name: "ICON_VIEW3D", value: 104, isUnsigned: true)
!177 = !DIEnumerator(name: "ICON_IPO", value: 105, isUnsigned: true)
!178 = !DIEnumerator(name: "ICON_OOPS", value: 106, isUnsigned: true)
!179 = !DIEnumerator(name: "ICON_BUTS", value: 107, isUnsigned: true)
!180 = !DIEnumerator(name: "ICON_FILESEL", value: 108, isUnsigned: true)
!181 = !DIEnumerator(name: "ICON_IMAGE_COL", value: 109, isUnsigned: true)
!182 = !DIEnumerator(name: "ICON_INFO", value: 110, isUnsigned: true)
!183 = !DIEnumerator(name: "ICON_SEQUENCE", value: 111, isUnsigned: true)
!184 = !DIEnumerator(name: "ICON_TEXT", value: 112, isUnsigned: true)
!185 = !DIEnumerator(name: "ICON_IMASEL", value: 113, isUnsigned: true)
!186 = !DIEnumerator(name: "ICON_SOUND", value: 114, isUnsigned: true)
!187 = !DIEnumerator(name: "ICON_ACTION", value: 115, isUnsigned: true)
!188 = !DIEnumerator(name: "ICON_NLA", value: 116, isUnsigned: true)
!189 = !DIEnumerator(name: "ICON_SCRIPTWIN", value: 117, isUnsigned: true)
!190 = !DIEnumerator(name: "ICON_TIME", value: 118, isUnsigned: true)
!191 = !DIEnumerator(name: "ICON_NODETREE", value: 119, isUnsigned: true)
!192 = !DIEnumerator(name: "ICON_LOGIC", value: 120, isUnsigned: true)
!193 = !DIEnumerator(name: "ICON_CONSOLE", value: 121, isUnsigned: true)
!194 = !DIEnumerator(name: "ICON_PREFERENCES", value: 122, isUnsigned: true)
!195 = !DIEnumerator(name: "ICON_CLIP", value: 123, isUnsigned: true)
!196 = !DIEnumerator(name: "ICON_ASSET_MANAGER", value: 124, isUnsigned: true)
!197 = !DIEnumerator(name: "ICON_BLANK057", value: 125, isUnsigned: true)
!198 = !DIEnumerator(name: "ICON_BLANK058", value: 126, isUnsigned: true)
!199 = !DIEnumerator(name: "ICON_BLANK059", value: 127, isUnsigned: true)
!200 = !DIEnumerator(name: "ICON_BLANK060", value: 128, isUnsigned: true)
!201 = !DIEnumerator(name: "ICON_BLANK061", value: 129, isUnsigned: true)
!202 = !DIEnumerator(name: "ICON_OBJECT_DATAMODE", value: 130, isUnsigned: true)
!203 = !DIEnumerator(name: "ICON_EDITMODE_HLT", value: 131, isUnsigned: true)
!204 = !DIEnumerator(name: "ICON_FACESEL_HLT", value: 132, isUnsigned: true)
!205 = !DIEnumerator(name: "ICON_VPAINT_HLT", value: 133, isUnsigned: true)
!206 = !DIEnumerator(name: "ICON_TPAINT_HLT", value: 134, isUnsigned: true)
!207 = !DIEnumerator(name: "ICON_WPAINT_HLT", value: 135, isUnsigned: true)
!208 = !DIEnumerator(name: "ICON_SCULPTMODE_HLT", value: 136, isUnsigned: true)
!209 = !DIEnumerator(name: "ICON_POSE_HLT", value: 137, isUnsigned: true)
!210 = !DIEnumerator(name: "ICON_PARTICLEMODE", value: 138, isUnsigned: true)
!211 = !DIEnumerator(name: "ICON_LIGHTPAINT", value: 139, isUnsigned: true)
!212 = !DIEnumerator(name: "ICON_BLANK063", value: 140, isUnsigned: true)
!213 = !DIEnumerator(name: "ICON_BLANK064", value: 141, isUnsigned: true)
!214 = !DIEnumerator(name: "ICON_BLANK065", value: 142, isUnsigned: true)
!215 = !DIEnumerator(name: "ICON_BLANK066", value: 143, isUnsigned: true)
!216 = !DIEnumerator(name: "ICON_BLANK067", value: 144, isUnsigned: true)
!217 = !DIEnumerator(name: "ICON_BLANK068", value: 145, isUnsigned: true)
!218 = !DIEnumerator(name: "ICON_BLANK069", value: 146, isUnsigned: true)
!219 = !DIEnumerator(name: "ICON_BLANK070", value: 147, isUnsigned: true)
!220 = !DIEnumerator(name: "ICON_BLANK071", value: 148, isUnsigned: true)
!221 = !DIEnumerator(name: "ICON_BLANK072", value: 149, isUnsigned: true)
!222 = !DIEnumerator(name: "ICON_BLANK073", value: 150, isUnsigned: true)
!223 = !DIEnumerator(name: "ICON_BLANK074", value: 151, isUnsigned: true)
!224 = !DIEnumerator(name: "ICON_BLANK075", value: 152, isUnsigned: true)
!225 = !DIEnumerator(name: "ICON_BLANK076", value: 153, isUnsigned: true)
!226 = !DIEnumerator(name: "ICON_BLANK077", value: 154, isUnsigned: true)
!227 = !DIEnumerator(name: "ICON_BLANK077b", value: 155, isUnsigned: true)
!228 = !DIEnumerator(name: "ICON_SCENE_DATA", value: 156, isUnsigned: true)
!229 = !DIEnumerator(name: "ICON_RENDERLAYERS", value: 157, isUnsigned: true)
!230 = !DIEnumerator(name: "ICON_WORLD_DATA", value: 158, isUnsigned: true)
!231 = !DIEnumerator(name: "ICON_OBJECT_DATA", value: 159, isUnsigned: true)
!232 = !DIEnumerator(name: "ICON_MESH_DATA", value: 160, isUnsigned: true)
!233 = !DIEnumerator(name: "ICON_CURVE_DATA", value: 161, isUnsigned: true)
!234 = !DIEnumerator(name: "ICON_META_DATA", value: 162, isUnsigned: true)
!235 = !DIEnumerator(name: "ICON_LATTICE_DATA", value: 163, isUnsigned: true)
!236 = !DIEnumerator(name: "ICON_LAMP_DATA", value: 164, isUnsigned: true)
!237 = !DIEnumerator(name: "ICON_MATERIAL_DATA", value: 165, isUnsigned: true)
!238 = !DIEnumerator(name: "ICON_TEXTURE_DATA", value: 166, isUnsigned: true)
!239 = !DIEnumerator(name: "ICON_ANIM_DATA", value: 167, isUnsigned: true)
!240 = !DIEnumerator(name: "ICON_CAMERA_DATA", value: 168, isUnsigned: true)
!241 = !DIEnumerator(name: "ICON_PARTICLE_DATA", value: 169, isUnsigned: true)
!242 = !DIEnumerator(name: "ICON_LIBRARY_DATA_DIRECT", value: 170, isUnsigned: true)
!243 = !DIEnumerator(name: "ICON_GROUP", value: 171, isUnsigned: true)
!244 = !DIEnumerator(name: "ICON_ARMATURE_DATA", value: 172, isUnsigned: true)
!245 = !DIEnumerator(name: "ICON_POSE_DATA", value: 173, isUnsigned: true)
!246 = !DIEnumerator(name: "ICON_BONE_DATA", value: 174, isUnsigned: true)
!247 = !DIEnumerator(name: "ICON_CONSTRAINT", value: 175, isUnsigned: true)
!248 = !DIEnumerator(name: "ICON_SHAPEKEY_DATA", value: 176, isUnsigned: true)
!249 = !DIEnumerator(name: "ICON_CONSTRAINT_BONE", value: 177, isUnsigned: true)
!250 = !DIEnumerator(name: "ICON_CAMERA_STEREO", value: 178, isUnsigned: true)
!251 = !DIEnumerator(name: "ICON_PACKAGE", value: 179, isUnsigned: true)
!252 = !DIEnumerator(name: "ICON_UGLYPACKAGE", value: 180, isUnsigned: true)
!253 = !DIEnumerator(name: "ICON_BLANK079b", value: 181, isUnsigned: true)
!254 = !DIEnumerator(name: "ICON_BRUSH_DATA", value: 182, isUnsigned: true)
!255 = !DIEnumerator(name: "ICON_IMAGE_DATA", value: 183, isUnsigned: true)
!256 = !DIEnumerator(name: "ICON_FILE", value: 184, isUnsigned: true)
!257 = !DIEnumerator(name: "ICON_FCURVE", value: 185, isUnsigned: true)
!258 = !DIEnumerator(name: "ICON_FONT_DATA", value: 186, isUnsigned: true)
!259 = !DIEnumerator(name: "ICON_RENDER_RESULT", value: 187, isUnsigned: true)
!260 = !DIEnumerator(name: "ICON_SURFACE_DATA", value: 188, isUnsigned: true)
!261 = !DIEnumerator(name: "ICON_EMPTY_DATA", value: 189, isUnsigned: true)
!262 = !DIEnumerator(name: "ICON_SETTINGS", value: 190, isUnsigned: true)
!263 = !DIEnumerator(name: "ICON_RENDER_ANIMATION", value: 191, isUnsigned: true)
!264 = !DIEnumerator(name: "ICON_RENDER_STILL", value: 192, isUnsigned: true)
!265 = !DIEnumerator(name: "ICON_BLANK080F", value: 193, isUnsigned: true)
!266 = !DIEnumerator(name: "ICON_BOIDS", value: 194, isUnsigned: true)
!267 = !DIEnumerator(name: "ICON_STRANDS", value: 195, isUnsigned: true)
!268 = !DIEnumerator(name: "ICON_LIBRARY_DATA_INDIRECT", value: 196, isUnsigned: true)
!269 = !DIEnumerator(name: "ICON_GREASEPENCIL", value: 197, isUnsigned: true)
!270 = !DIEnumerator(name: "ICON_LINE_DATA", value: 198, isUnsigned: true)
!271 = !DIEnumerator(name: "ICON_BLANK084", value: 199, isUnsigned: true)
!272 = !DIEnumerator(name: "ICON_GROUP_BONE", value: 200, isUnsigned: true)
!273 = !DIEnumerator(name: "ICON_GROUP_VERTEX", value: 201, isUnsigned: true)
!274 = !DIEnumerator(name: "ICON_GROUP_VCOL", value: 202, isUnsigned: true)
!275 = !DIEnumerator(name: "ICON_GROUP_UVS", value: 203, isUnsigned: true)
!276 = !DIEnumerator(name: "ICON_BLANK089", value: 204, isUnsigned: true)
!277 = !DIEnumerator(name: "ICON_BLANK090", value: 205, isUnsigned: true)
!278 = !DIEnumerator(name: "ICON_RNA", value: 206, isUnsigned: true)
!279 = !DIEnumerator(name: "ICON_RNA_ADD", value: 207, isUnsigned: true)
!280 = !DIEnumerator(name: "ICON_BLANK092", value: 208, isUnsigned: true)
!281 = !DIEnumerator(name: "ICON_BLANK093", value: 209, isUnsigned: true)
!282 = !DIEnumerator(name: "ICON_BLANK094", value: 210, isUnsigned: true)
!283 = !DIEnumerator(name: "ICON_BLANK095", value: 211, isUnsigned: true)
!284 = !DIEnumerator(name: "ICON_BLANK096", value: 212, isUnsigned: true)
!285 = !DIEnumerator(name: "ICON_BLANK097", value: 213, isUnsigned: true)
!286 = !DIEnumerator(name: "ICON_BLANK098", value: 214, isUnsigned: true)
!287 = !DIEnumerator(name: "ICON_BLANK099", value: 215, isUnsigned: true)
!288 = !DIEnumerator(name: "ICON_BLANK100", value: 216, isUnsigned: true)
!289 = !DIEnumerator(name: "ICON_BLANK101", value: 217, isUnsigned: true)
!290 = !DIEnumerator(name: "ICON_BLANK102", value: 218, isUnsigned: true)
!291 = !DIEnumerator(name: "ICON_BLANK103", value: 219, isUnsigned: true)
!292 = !DIEnumerator(name: "ICON_BLANK104", value: 220, isUnsigned: true)
!293 = !DIEnumerator(name: "ICON_BLANK105", value: 221, isUnsigned: true)
!294 = !DIEnumerator(name: "ICON_BLANK106", value: 222, isUnsigned: true)
!295 = !DIEnumerator(name: "ICON_BLANK107", value: 223, isUnsigned: true)
!296 = !DIEnumerator(name: "ICON_BLANK108", value: 224, isUnsigned: true)
!297 = !DIEnumerator(name: "ICON_BLANK109", value: 225, isUnsigned: true)
!298 = !DIEnumerator(name: "ICON_BLANK110", value: 226, isUnsigned: true)
!299 = !DIEnumerator(name: "ICON_BLANK111", value: 227, isUnsigned: true)
!300 = !DIEnumerator(name: "ICON_BLANK112", value: 228, isUnsigned: true)
!301 = !DIEnumerator(name: "ICON_BLANK113", value: 229, isUnsigned: true)
!302 = !DIEnumerator(name: "ICON_BLANK114", value: 230, isUnsigned: true)
!303 = !DIEnumerator(name: "ICON_BLANK115", value: 231, isUnsigned: true)
!304 = !DIEnumerator(name: "ICON_BLANK116", value: 232, isUnsigned: true)
!305 = !DIEnumerator(name: "ICON_BLANK116b", value: 233, isUnsigned: true)
!306 = !DIEnumerator(name: "ICON_OUTLINER_OB_EMPTY", value: 234, isUnsigned: true)
!307 = !DIEnumerator(name: "ICON_OUTLINER_OB_MESH", value: 235, isUnsigned: true)
!308 = !DIEnumerator(name: "ICON_OUTLINER_OB_CURVE", value: 236, isUnsigned: true)
!309 = !DIEnumerator(name: "ICON_OUTLINER_OB_LATTICE", value: 237, isUnsigned: true)
!310 = !DIEnumerator(name: "ICON_OUTLINER_OB_META", value: 238, isUnsigned: true)
!311 = !DIEnumerator(name: "ICON_OUTLINER_OB_LAMP", value: 239, isUnsigned: true)
!312 = !DIEnumerator(name: "ICON_OUTLINER_OB_CAMERA", value: 240, isUnsigned: true)
!313 = !DIEnumerator(name: "ICON_OUTLINER_OB_ARMATURE", value: 241, isUnsigned: true)
!314 = !DIEnumerator(name: "ICON_OUTLINER_OB_FONT", value: 242, isUnsigned: true)
!315 = !DIEnumerator(name: "ICON_OUTLINER_OB_SURFACE", value: 243, isUnsigned: true)
!316 = !DIEnumerator(name: "ICON_OUTLINER_OB_SPEAKER", value: 244, isUnsigned: true)
!317 = !DIEnumerator(name: "ICON_BLANK120", value: 245, isUnsigned: true)
!318 = !DIEnumerator(name: "ICON_BLANK121", value: 246, isUnsigned: true)
!319 = !DIEnumerator(name: "ICON_BLANK122", value: 247, isUnsigned: true)
!320 = !DIEnumerator(name: "ICON_BLANK123", value: 248, isUnsigned: true)
!321 = !DIEnumerator(name: "ICON_BLANK124", value: 249, isUnsigned: true)
!322 = !DIEnumerator(name: "ICON_BLANK125", value: 250, isUnsigned: true)
!323 = !DIEnumerator(name: "ICON_BLANK126", value: 251, isUnsigned: true)
!324 = !DIEnumerator(name: "ICON_BLANK127", value: 252, isUnsigned: true)
!325 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_OFF", value: 253, isUnsigned: true)
!326 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_ON", value: 254, isUnsigned: true)
!327 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_OFF", value: 255, isUnsigned: true)
!328 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_ON", value: 256, isUnsigned: true)
!329 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_OFF", value: 257, isUnsigned: true)
!330 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_ON", value: 258, isUnsigned: true)
!331 = !DIEnumerator(name: "ICON_BLANK127b", value: 259, isUnsigned: true)
!332 = !DIEnumerator(name: "ICON_OUTLINER_DATA_EMPTY", value: 260, isUnsigned: true)
!333 = !DIEnumerator(name: "ICON_OUTLINER_DATA_MESH", value: 261, isUnsigned: true)
!334 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CURVE", value: 262, isUnsigned: true)
!335 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LATTICE", value: 263, isUnsigned: true)
!336 = !DIEnumerator(name: "ICON_OUTLINER_DATA_META", value: 264, isUnsigned: true)
!337 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LAMP", value: 265, isUnsigned: true)
!338 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CAMERA", value: 266, isUnsigned: true)
!339 = !DIEnumerator(name: "ICON_OUTLINER_DATA_ARMATURE", value: 267, isUnsigned: true)
!340 = !DIEnumerator(name: "ICON_OUTLINER_DATA_FONT", value: 268, isUnsigned: true)
!341 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SURFACE", value: 269, isUnsigned: true)
!342 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SPEAKER", value: 270, isUnsigned: true)
!343 = !DIEnumerator(name: "ICON_OUTLINER_DATA_POSE", value: 271, isUnsigned: true)
!344 = !DIEnumerator(name: "ICON_BLANK130", value: 272, isUnsigned: true)
!345 = !DIEnumerator(name: "ICON_BLANK131", value: 273, isUnsigned: true)
!346 = !DIEnumerator(name: "ICON_BLANK132", value: 274, isUnsigned: true)
!347 = !DIEnumerator(name: "ICON_BLANK133", value: 275, isUnsigned: true)
!348 = !DIEnumerator(name: "ICON_BLANK134", value: 276, isUnsigned: true)
!349 = !DIEnumerator(name: "ICON_BLANK135", value: 277, isUnsigned: true)
!350 = !DIEnumerator(name: "ICON_BLANK136", value: 278, isUnsigned: true)
!351 = !DIEnumerator(name: "ICON_BLANK137", value: 279, isUnsigned: true)
!352 = !DIEnumerator(name: "ICON_BLANK138", value: 280, isUnsigned: true)
!353 = !DIEnumerator(name: "ICON_BLANK139", value: 281, isUnsigned: true)
!354 = !DIEnumerator(name: "ICON_BLANK140", value: 282, isUnsigned: true)
!355 = !DIEnumerator(name: "ICON_BLANK141", value: 283, isUnsigned: true)
!356 = !DIEnumerator(name: "ICON_BLANK142", value: 284, isUnsigned: true)
!357 = !DIEnumerator(name: "ICON_BLANK142b", value: 285, isUnsigned: true)
!358 = !DIEnumerator(name: "ICON_MESH_PLANE", value: 286, isUnsigned: true)
!359 = !DIEnumerator(name: "ICON_MESH_CUBE", value: 287, isUnsigned: true)
!360 = !DIEnumerator(name: "ICON_MESH_CIRCLE", value: 288, isUnsigned: true)
!361 = !DIEnumerator(name: "ICON_MESH_UVSPHERE", value: 289, isUnsigned: true)
!362 = !DIEnumerator(name: "ICON_MESH_ICOSPHERE", value: 290, isUnsigned: true)
!363 = !DIEnumerator(name: "ICON_MESH_GRID", value: 291, isUnsigned: true)
!364 = !DIEnumerator(name: "ICON_MESH_MONKEY", value: 292, isUnsigned: true)
!365 = !DIEnumerator(name: "ICON_MESH_CYLINDER", value: 293, isUnsigned: true)
!366 = !DIEnumerator(name: "ICON_MESH_TORUS", value: 294, isUnsigned: true)
!367 = !DIEnumerator(name: "ICON_MESH_CONE", value: 295, isUnsigned: true)
!368 = !DIEnumerator(name: "ICON_BLANK610", value: 296, isUnsigned: true)
!369 = !DIEnumerator(name: "ICON_BLANK611", value: 297, isUnsigned: true)
!370 = !DIEnumerator(name: "ICON_LAMP_POINT", value: 298, isUnsigned: true)
!371 = !DIEnumerator(name: "ICON_LAMP_SUN", value: 299, isUnsigned: true)
!372 = !DIEnumerator(name: "ICON_LAMP_SPOT", value: 300, isUnsigned: true)
!373 = !DIEnumerator(name: "ICON_LAMP_HEMI", value: 301, isUnsigned: true)
!374 = !DIEnumerator(name: "ICON_LAMP_AREA", value: 302, isUnsigned: true)
!375 = !DIEnumerator(name: "ICON_BLANK617", value: 303, isUnsigned: true)
!376 = !DIEnumerator(name: "ICON_BLANK618", value: 304, isUnsigned: true)
!377 = !DIEnumerator(name: "ICON_META_EMPTY", value: 305, isUnsigned: true)
!378 = !DIEnumerator(name: "ICON_META_PLANE", value: 306, isUnsigned: true)
!379 = !DIEnumerator(name: "ICON_META_CUBE", value: 307, isUnsigned: true)
!380 = !DIEnumerator(name: "ICON_META_BALL", value: 308, isUnsigned: true)
!381 = !DIEnumerator(name: "ICON_META_ELLIPSOID", value: 309, isUnsigned: true)
!382 = !DIEnumerator(name: "ICON_META_CAPSULE", value: 310, isUnsigned: true)
!383 = !DIEnumerator(name: "ICON_BLANK625", value: 311, isUnsigned: true)
!384 = !DIEnumerator(name: "ICON_SURFACE_NCURVE", value: 312, isUnsigned: true)
!385 = !DIEnumerator(name: "ICON_SURFACE_NCIRCLE", value: 313, isUnsigned: true)
!386 = !DIEnumerator(name: "ICON_SURFACE_NSURFACE", value: 314, isUnsigned: true)
!387 = !DIEnumerator(name: "ICON_SURFACE_NCYLINDER", value: 315, isUnsigned: true)
!388 = !DIEnumerator(name: "ICON_SURFACE_NSPHERE", value: 316, isUnsigned: true)
!389 = !DIEnumerator(name: "ICON_SURFACE_NTORUS", value: 317, isUnsigned: true)
!390 = !DIEnumerator(name: "ICON_BLANK636", value: 318, isUnsigned: true)
!391 = !DIEnumerator(name: "ICON_BLANK637", value: 319, isUnsigned: true)
!392 = !DIEnumerator(name: "ICON_BLANK638", value: 320, isUnsigned: true)
!393 = !DIEnumerator(name: "ICON_CURVE_BEZCURVE", value: 321, isUnsigned: true)
!394 = !DIEnumerator(name: "ICON_CURVE_BEZCIRCLE", value: 322, isUnsigned: true)
!395 = !DIEnumerator(name: "ICON_CURVE_NCURVE", value: 323, isUnsigned: true)
!396 = !DIEnumerator(name: "ICON_CURVE_NCIRCLE", value: 324, isUnsigned: true)
!397 = !DIEnumerator(name: "ICON_CURVE_PATH", value: 325, isUnsigned: true)
!398 = !DIEnumerator(name: "ICON_BLANK644", value: 326, isUnsigned: true)
!399 = !DIEnumerator(name: "ICON_BLANK645", value: 327, isUnsigned: true)
!400 = !DIEnumerator(name: "ICON_BLANK646", value: 328, isUnsigned: true)
!401 = !DIEnumerator(name: "ICON_BLANK647", value: 329, isUnsigned: true)
!402 = !DIEnumerator(name: "ICON_BLANK648", value: 330, isUnsigned: true)
!403 = !DIEnumerator(name: "ICON_COLOR_RED", value: 331, isUnsigned: true)
!404 = !DIEnumerator(name: "ICON_COLOR_GREEN", value: 332, isUnsigned: true)
!405 = !DIEnumerator(name: "ICON_COLOR_BLUE", value: 333, isUnsigned: true)
!406 = !DIEnumerator(name: "ICON_TRIA_RIGHT_BAR", value: 334, isUnsigned: true)
!407 = !DIEnumerator(name: "ICON_TRIA_DOWN_BAR", value: 335, isUnsigned: true)
!408 = !DIEnumerator(name: "ICON_TRIA_LEFT_BAR", value: 336, isUnsigned: true)
!409 = !DIEnumerator(name: "ICON_TRIA_UP_BAR", value: 337, isUnsigned: true)
!410 = !DIEnumerator(name: "ICON_FORCE_FORCE", value: 338, isUnsigned: true)
!411 = !DIEnumerator(name: "ICON_FORCE_WIND", value: 339, isUnsigned: true)
!412 = !DIEnumerator(name: "ICON_FORCE_VORTEX", value: 340, isUnsigned: true)
!413 = !DIEnumerator(name: "ICON_FORCE_MAGNETIC", value: 341, isUnsigned: true)
!414 = !DIEnumerator(name: "ICON_FORCE_HARMONIC", value: 342, isUnsigned: true)
!415 = !DIEnumerator(name: "ICON_FORCE_CHARGE", value: 343, isUnsigned: true)
!416 = !DIEnumerator(name: "ICON_FORCE_LENNARDJONES", value: 344, isUnsigned: true)
!417 = !DIEnumerator(name: "ICON_FORCE_TEXTURE", value: 345, isUnsigned: true)
!418 = !DIEnumerator(name: "ICON_FORCE_CURVE", value: 346, isUnsigned: true)
!419 = !DIEnumerator(name: "ICON_FORCE_BOID", value: 347, isUnsigned: true)
!420 = !DIEnumerator(name: "ICON_FORCE_TURBULENCE", value: 348, isUnsigned: true)
!421 = !DIEnumerator(name: "ICON_FORCE_DRAG", value: 349, isUnsigned: true)
!422 = !DIEnumerator(name: "ICON_FORCE_SMOKEFLOW", value: 350, isUnsigned: true)
!423 = !DIEnumerator(name: "ICON_BLANK673", value: 351, isUnsigned: true)
!424 = !DIEnumerator(name: "ICON_BLANK674", value: 352, isUnsigned: true)
!425 = !DIEnumerator(name: "ICON_BLANK675", value: 353, isUnsigned: true)
!426 = !DIEnumerator(name: "ICON_BLANK676", value: 354, isUnsigned: true)
!427 = !DIEnumerator(name: "ICON_BLANK677", value: 355, isUnsigned: true)
!428 = !DIEnumerator(name: "ICON_BLANK678", value: 356, isUnsigned: true)
!429 = !DIEnumerator(name: "ICON_BLANK679", value: 357, isUnsigned: true)
!430 = !DIEnumerator(name: "ICON_BLANK680", value: 358, isUnsigned: true)
!431 = !DIEnumerator(name: "ICON_BLANK681", value: 359, isUnsigned: true)
!432 = !DIEnumerator(name: "ICON_BLANK682", value: 360, isUnsigned: true)
!433 = !DIEnumerator(name: "ICON_BLANK683", value: 361, isUnsigned: true)
!434 = !DIEnumerator(name: "ICON_BLANK684", value: 362, isUnsigned: true)
!435 = !DIEnumerator(name: "ICON_BLANK685", value: 363, isUnsigned: true)
!436 = !DIEnumerator(name: "ICON_BLANK690", value: 364, isUnsigned: true)
!437 = !DIEnumerator(name: "ICON_BLANK691", value: 365, isUnsigned: true)
!438 = !DIEnumerator(name: "ICON_BLANK692", value: 366, isUnsigned: true)
!439 = !DIEnumerator(name: "ICON_BLANK693", value: 367, isUnsigned: true)
!440 = !DIEnumerator(name: "ICON_BLANK694", value: 368, isUnsigned: true)
!441 = !DIEnumerator(name: "ICON_BLANK695", value: 369, isUnsigned: true)
!442 = !DIEnumerator(name: "ICON_BLANK696", value: 370, isUnsigned: true)
!443 = !DIEnumerator(name: "ICON_BLANK697", value: 371, isUnsigned: true)
!444 = !DIEnumerator(name: "ICON_BLANK698", value: 372, isUnsigned: true)
!445 = !DIEnumerator(name: "ICON_BLANK699", value: 373, isUnsigned: true)
!446 = !DIEnumerator(name: "ICON_BLANK700", value: 374, isUnsigned: true)
!447 = !DIEnumerator(name: "ICON_BLANK701", value: 375, isUnsigned: true)
!448 = !DIEnumerator(name: "ICON_BLANK702", value: 376, isUnsigned: true)
!449 = !DIEnumerator(name: "ICON_BLANK703", value: 377, isUnsigned: true)
!450 = !DIEnumerator(name: "ICON_BLANK704", value: 378, isUnsigned: true)
!451 = !DIEnumerator(name: "ICON_BLANK705", value: 379, isUnsigned: true)
!452 = !DIEnumerator(name: "ICON_BLANK706", value: 380, isUnsigned: true)
!453 = !DIEnumerator(name: "ICON_BLANK707", value: 381, isUnsigned: true)
!454 = !DIEnumerator(name: "ICON_BLANK708", value: 382, isUnsigned: true)
!455 = !DIEnumerator(name: "ICON_BLANK709", value: 383, isUnsigned: true)
!456 = !DIEnumerator(name: "ICON_BLANK710", value: 384, isUnsigned: true)
!457 = !DIEnumerator(name: "ICON_BLANK711", value: 385, isUnsigned: true)
!458 = !DIEnumerator(name: "ICON_BLANK712", value: 386, isUnsigned: true)
!459 = !DIEnumerator(name: "ICON_BLANK713", value: 387, isUnsigned: true)
!460 = !DIEnumerator(name: "ICON_BLANK714", value: 388, isUnsigned: true)
!461 = !DIEnumerator(name: "ICON_BLANK715", value: 389, isUnsigned: true)
!462 = !DIEnumerator(name: "ICON_BLANK720", value: 390, isUnsigned: true)
!463 = !DIEnumerator(name: "ICON_BLANK721", value: 391, isUnsigned: true)
!464 = !DIEnumerator(name: "ICON_BLANK722", value: 392, isUnsigned: true)
!465 = !DIEnumerator(name: "ICON_BLANK733", value: 393, isUnsigned: true)
!466 = !DIEnumerator(name: "ICON_BLANK734", value: 394, isUnsigned: true)
!467 = !DIEnumerator(name: "ICON_BLANK735", value: 395, isUnsigned: true)
!468 = !DIEnumerator(name: "ICON_BLANK736", value: 396, isUnsigned: true)
!469 = !DIEnumerator(name: "ICON_BLANK737", value: 397, isUnsigned: true)
!470 = !DIEnumerator(name: "ICON_BLANK738", value: 398, isUnsigned: true)
!471 = !DIEnumerator(name: "ICON_BLANK739", value: 399, isUnsigned: true)
!472 = !DIEnumerator(name: "ICON_BLANK740", value: 400, isUnsigned: true)
!473 = !DIEnumerator(name: "ICON_BLANK741", value: 401, isUnsigned: true)
!474 = !DIEnumerator(name: "ICON_BLANK742", value: 402, isUnsigned: true)
!475 = !DIEnumerator(name: "ICON_BLANK743", value: 403, isUnsigned: true)
!476 = !DIEnumerator(name: "ICON_BLANK744", value: 404, isUnsigned: true)
!477 = !DIEnumerator(name: "ICON_BLANK745", value: 405, isUnsigned: true)
!478 = !DIEnumerator(name: "ICON_BLANK746", value: 406, isUnsigned: true)
!479 = !DIEnumerator(name: "ICON_BLANK747", value: 407, isUnsigned: true)
!480 = !DIEnumerator(name: "ICON_BLANK748", value: 408, isUnsigned: true)
!481 = !DIEnumerator(name: "ICON_BLANK749", value: 409, isUnsigned: true)
!482 = !DIEnumerator(name: "ICON_BLANK750", value: 410, isUnsigned: true)
!483 = !DIEnumerator(name: "ICON_BLANK751", value: 411, isUnsigned: true)
!484 = !DIEnumerator(name: "ICON_BLANK752", value: 412, isUnsigned: true)
!485 = !DIEnumerator(name: "ICON_BLANK753", value: 413, isUnsigned: true)
!486 = !DIEnumerator(name: "ICON_BLANK754", value: 414, isUnsigned: true)
!487 = !DIEnumerator(name: "ICON_BLANK755", value: 415, isUnsigned: true)
!488 = !DIEnumerator(name: "ICON_BLANK760", value: 416, isUnsigned: true)
!489 = !DIEnumerator(name: "ICON_BLANK761", value: 417, isUnsigned: true)
!490 = !DIEnumerator(name: "ICON_BLANK762", value: 418, isUnsigned: true)
!491 = !DIEnumerator(name: "ICON_BLANK763", value: 419, isUnsigned: true)
!492 = !DIEnumerator(name: "ICON_BLANK764", value: 420, isUnsigned: true)
!493 = !DIEnumerator(name: "ICON_BLANK765", value: 421, isUnsigned: true)
!494 = !DIEnumerator(name: "ICON_BLANK766", value: 422, isUnsigned: true)
!495 = !DIEnumerator(name: "ICON_BLANK767", value: 423, isUnsigned: true)
!496 = !DIEnumerator(name: "ICON_BLANK768", value: 424, isUnsigned: true)
!497 = !DIEnumerator(name: "ICON_BLANK769", value: 425, isUnsigned: true)
!498 = !DIEnumerator(name: "ICON_BLANK770", value: 426, isUnsigned: true)
!499 = !DIEnumerator(name: "ICON_BLANK771", value: 427, isUnsigned: true)
!500 = !DIEnumerator(name: "ICON_BLANK772", value: 428, isUnsigned: true)
!501 = !DIEnumerator(name: "ICON_BLANK773", value: 429, isUnsigned: true)
!502 = !DIEnumerator(name: "ICON_BLANK774", value: 430, isUnsigned: true)
!503 = !DIEnumerator(name: "ICON_BLANK775", value: 431, isUnsigned: true)
!504 = !DIEnumerator(name: "ICON_BLANK776", value: 432, isUnsigned: true)
!505 = !DIEnumerator(name: "ICON_BLANK777", value: 433, isUnsigned: true)
!506 = !DIEnumerator(name: "ICON_BLANK778", value: 434, isUnsigned: true)
!507 = !DIEnumerator(name: "ICON_BLANK779", value: 435, isUnsigned: true)
!508 = !DIEnumerator(name: "ICON_BLANK780", value: 436, isUnsigned: true)
!509 = !DIEnumerator(name: "ICON_BLANK781", value: 437, isUnsigned: true)
!510 = !DIEnumerator(name: "ICON_BLANK782", value: 438, isUnsigned: true)
!511 = !DIEnumerator(name: "ICON_BLANK783", value: 439, isUnsigned: true)
!512 = !DIEnumerator(name: "ICON_BLANK784", value: 440, isUnsigned: true)
!513 = !DIEnumerator(name: "ICON_BLANK785", value: 441, isUnsigned: true)
!514 = !DIEnumerator(name: "ICON_MODIFIER", value: 442, isUnsigned: true)
!515 = !DIEnumerator(name: "ICON_MOD_WAVE", value: 443, isUnsigned: true)
!516 = !DIEnumerator(name: "ICON_MOD_BUILD", value: 444, isUnsigned: true)
!517 = !DIEnumerator(name: "ICON_MOD_DECIM", value: 445, isUnsigned: true)
!518 = !DIEnumerator(name: "ICON_MOD_MIRROR", value: 446, isUnsigned: true)
!519 = !DIEnumerator(name: "ICON_MOD_SOFT", value: 447, isUnsigned: true)
!520 = !DIEnumerator(name: "ICON_MOD_SUBSURF", value: 448, isUnsigned: true)
!521 = !DIEnumerator(name: "ICON_HOOK", value: 449, isUnsigned: true)
!522 = !DIEnumerator(name: "ICON_MOD_PHYSICS", value: 450, isUnsigned: true)
!523 = !DIEnumerator(name: "ICON_MOD_PARTICLES", value: 451, isUnsigned: true)
!524 = !DIEnumerator(name: "ICON_MOD_BOOLEAN", value: 452, isUnsigned: true)
!525 = !DIEnumerator(name: "ICON_MOD_EDGESPLIT", value: 453, isUnsigned: true)
!526 = !DIEnumerator(name: "ICON_MOD_ARRAY", value: 454, isUnsigned: true)
!527 = !DIEnumerator(name: "ICON_MOD_UVPROJECT", value: 455, isUnsigned: true)
!528 = !DIEnumerator(name: "ICON_MOD_DISPLACE", value: 456, isUnsigned: true)
!529 = !DIEnumerator(name: "ICON_MOD_CURVE", value: 457, isUnsigned: true)
!530 = !DIEnumerator(name: "ICON_MOD_LATTICE", value: 458, isUnsigned: true)
!531 = !DIEnumerator(name: "ICON_CONSTRAINT_DATA", value: 459, isUnsigned: true)
!532 = !DIEnumerator(name: "ICON_MOD_ARMATURE", value: 460, isUnsigned: true)
!533 = !DIEnumerator(name: "ICON_MOD_SHRINKWRAP", value: 461, isUnsigned: true)
!534 = !DIEnumerator(name: "ICON_MOD_CAST", value: 462, isUnsigned: true)
!535 = !DIEnumerator(name: "ICON_MOD_MESHDEFORM", value: 463, isUnsigned: true)
!536 = !DIEnumerator(name: "ICON_MOD_BEVEL", value: 464, isUnsigned: true)
!537 = !DIEnumerator(name: "ICON_MOD_SMOOTH", value: 465, isUnsigned: true)
!538 = !DIEnumerator(name: "ICON_MOD_SIMPLEDEFORM", value: 466, isUnsigned: true)
!539 = !DIEnumerator(name: "ICON_MOD_MASK", value: 467, isUnsigned: true)
!540 = !DIEnumerator(name: "ICON_MOD_CLOTH", value: 468, isUnsigned: true)
!541 = !DIEnumerator(name: "ICON_MOD_EXPLODE", value: 469, isUnsigned: true)
!542 = !DIEnumerator(name: "ICON_MOD_FLUIDSIM", value: 470, isUnsigned: true)
!543 = !DIEnumerator(name: "ICON_MOD_MULTIRES", value: 471, isUnsigned: true)
!544 = !DIEnumerator(name: "ICON_MOD_SMOKE", value: 472, isUnsigned: true)
!545 = !DIEnumerator(name: "ICON_MOD_SOLIDIFY", value: 473, isUnsigned: true)
!546 = !DIEnumerator(name: "ICON_MOD_SCREW", value: 474, isUnsigned: true)
!547 = !DIEnumerator(name: "ICON_MOD_VERTEX_WEIGHT", value: 475, isUnsigned: true)
!548 = !DIEnumerator(name: "ICON_MOD_DYNAMICPAINT", value: 476, isUnsigned: true)
!549 = !DIEnumerator(name: "ICON_MOD_REMESH", value: 477, isUnsigned: true)
!550 = !DIEnumerator(name: "ICON_MOD_OCEAN", value: 478, isUnsigned: true)
!551 = !DIEnumerator(name: "ICON_MOD_WARP", value: 479, isUnsigned: true)
!552 = !DIEnumerator(name: "ICON_MOD_SKIN", value: 480, isUnsigned: true)
!553 = !DIEnumerator(name: "ICON_MOD_TRIANGULATE", value: 481, isUnsigned: true)
!554 = !DIEnumerator(name: "ICON_MOD_WIREFRAME", value: 482, isUnsigned: true)
!555 = !DIEnumerator(name: "ICON_BLANK167", value: 483, isUnsigned: true)
!556 = !DIEnumerator(name: "ICON_BLANK168", value: 484, isUnsigned: true)
!557 = !DIEnumerator(name: "ICON_BLANK169", value: 485, isUnsigned: true)
!558 = !DIEnumerator(name: "ICON_BLANK170", value: 486, isUnsigned: true)
!559 = !DIEnumerator(name: "ICON_BLANK171", value: 487, isUnsigned: true)
!560 = !DIEnumerator(name: "ICON_BLANK172", value: 488, isUnsigned: true)
!561 = !DIEnumerator(name: "ICON_BLANK173", value: 489, isUnsigned: true)
!562 = !DIEnumerator(name: "ICON_BLANK174", value: 490, isUnsigned: true)
!563 = !DIEnumerator(name: "ICON_BLANK175", value: 491, isUnsigned: true)
!564 = !DIEnumerator(name: "ICON_BLANK176", value: 492, isUnsigned: true)
!565 = !DIEnumerator(name: "ICON_BLANK177", value: 493, isUnsigned: true)
!566 = !DIEnumerator(name: "ICON_REC", value: 494, isUnsigned: true)
!567 = !DIEnumerator(name: "ICON_PLAY", value: 495, isUnsigned: true)
!568 = !DIEnumerator(name: "ICON_FF", value: 496, isUnsigned: true)
!569 = !DIEnumerator(name: "ICON_REW", value: 497, isUnsigned: true)
!570 = !DIEnumerator(name: "ICON_PAUSE", value: 498, isUnsigned: true)
!571 = !DIEnumerator(name: "ICON_PREV_KEYFRAME", value: 499, isUnsigned: true)
!572 = !DIEnumerator(name: "ICON_NEXT_KEYFRAME", value: 500, isUnsigned: true)
!573 = !DIEnumerator(name: "ICON_PLAY_AUDIO", value: 501, isUnsigned: true)
!574 = !DIEnumerator(name: "ICON_PLAY_REVERSE", value: 502, isUnsigned: true)
!575 = !DIEnumerator(name: "ICON_PREVIEW_RANGE", value: 503, isUnsigned: true)
!576 = !DIEnumerator(name: "ICON_ACTION_TWEAK", value: 504, isUnsigned: true)
!577 = !DIEnumerator(name: "ICON_PMARKER_ACT", value: 505, isUnsigned: true)
!578 = !DIEnumerator(name: "ICON_PMARKER_SEL", value: 506, isUnsigned: true)
!579 = !DIEnumerator(name: "ICON_PMARKER", value: 507, isUnsigned: true)
!580 = !DIEnumerator(name: "ICON_MARKER_HLT", value: 508, isUnsigned: true)
!581 = !DIEnumerator(name: "ICON_MARKER", value: 509, isUnsigned: true)
!582 = !DIEnumerator(name: "ICON_SPACE2", value: 510, isUnsigned: true)
!583 = !DIEnumerator(name: "ICON_SPACE3", value: 511, isUnsigned: true)
!584 = !DIEnumerator(name: "ICON_KEYINGSET", value: 512, isUnsigned: true)
!585 = !DIEnumerator(name: "ICON_KEY_DEHLT", value: 513, isUnsigned: true)
!586 = !DIEnumerator(name: "ICON_KEY_HLT", value: 514, isUnsigned: true)
!587 = !DIEnumerator(name: "ICON_MUTE_IPO_OFF", value: 515, isUnsigned: true)
!588 = !DIEnumerator(name: "ICON_MUTE_IPO_ON", value: 516, isUnsigned: true)
!589 = !DIEnumerator(name: "ICON_VISIBLE_IPO_OFF", value: 517, isUnsigned: true)
!590 = !DIEnumerator(name: "ICON_VISIBLE_IPO_ON", value: 518, isUnsigned: true)
!591 = !DIEnumerator(name: "ICON_DRIVER", value: 519, isUnsigned: true)
!592 = !DIEnumerator(name: "ICON_SOLO_OFF", value: 520, isUnsigned: true)
!593 = !DIEnumerator(name: "ICON_SOLO_ON", value: 521, isUnsigned: true)
!594 = !DIEnumerator(name: "ICON_FRAME_PREV", value: 522, isUnsigned: true)
!595 = !DIEnumerator(name: "ICON_FRAME_NEXT", value: 523, isUnsigned: true)
!596 = !DIEnumerator(name: "ICON_NLA_PUSHDOWN", value: 524, isUnsigned: true)
!597 = !DIEnumerator(name: "ICON_IPO_CONSTANT", value: 525, isUnsigned: true)
!598 = !DIEnumerator(name: "ICON_IPO_LINEAR", value: 526, isUnsigned: true)
!599 = !DIEnumerator(name: "ICON_IPO_BEZIER", value: 527, isUnsigned: true)
!600 = !DIEnumerator(name: "ICON_IPO_SINE", value: 528, isUnsigned: true)
!601 = !DIEnumerator(name: "ICON_IPO_QUAD", value: 529, isUnsigned: true)
!602 = !DIEnumerator(name: "ICON_IPO_CUBIC", value: 530, isUnsigned: true)
!603 = !DIEnumerator(name: "ICON_IPO_QUART", value: 531, isUnsigned: true)
!604 = !DIEnumerator(name: "ICON_IPO_QUINT", value: 532, isUnsigned: true)
!605 = !DIEnumerator(name: "ICON_IPO_EXPO", value: 533, isUnsigned: true)
!606 = !DIEnumerator(name: "ICON_IPO_CIRC", value: 534, isUnsigned: true)
!607 = !DIEnumerator(name: "ICON_IPO_BOUNCE", value: 535, isUnsigned: true)
!608 = !DIEnumerator(name: "ICON_IPO_ELASTIC", value: 536, isUnsigned: true)
!609 = !DIEnumerator(name: "ICON_IPO_BACK", value: 537, isUnsigned: true)
!610 = !DIEnumerator(name: "ICON_IPO_EASE_IN", value: 538, isUnsigned: true)
!611 = !DIEnumerator(name: "ICON_IPO_EASE_OUT", value: 539, isUnsigned: true)
!612 = !DIEnumerator(name: "ICON_IPO_EASE_IN_OUT", value: 540, isUnsigned: true)
!613 = !DIEnumerator(name: "ICON_BLANK203", value: 541, isUnsigned: true)
!614 = !DIEnumerator(name: "ICON_BLANK204", value: 542, isUnsigned: true)
!615 = !DIEnumerator(name: "ICON_BLANK205", value: 543, isUnsigned: true)
!616 = !DIEnumerator(name: "ICON_BLANK206", value: 544, isUnsigned: true)
!617 = !DIEnumerator(name: "ICON_BLANK207", value: 545, isUnsigned: true)
!618 = !DIEnumerator(name: "ICON_VERTEXSEL", value: 546, isUnsigned: true)
!619 = !DIEnumerator(name: "ICON_EDGESEL", value: 547, isUnsigned: true)
!620 = !DIEnumerator(name: "ICON_FACESEL", value: 548, isUnsigned: true)
!621 = !DIEnumerator(name: "ICON_LOOPSEL", value: 549, isUnsigned: true)
!622 = !DIEnumerator(name: "ICON_BLANK210", value: 550, isUnsigned: true)
!623 = !DIEnumerator(name: "ICON_ROTATE", value: 551, isUnsigned: true)
!624 = !DIEnumerator(name: "ICON_CURSOR", value: 552, isUnsigned: true)
!625 = !DIEnumerator(name: "ICON_ROTATECOLLECTION", value: 553, isUnsigned: true)
!626 = !DIEnumerator(name: "ICON_ROTATECENTER", value: 554, isUnsigned: true)
!627 = !DIEnumerator(name: "ICON_ROTACTIVE", value: 555, isUnsigned: true)
!628 = !DIEnumerator(name: "ICON_ALIGN", value: 556, isUnsigned: true)
!629 = !DIEnumerator(name: "ICON_BLANK211", value: 557, isUnsigned: true)
!630 = !DIEnumerator(name: "ICON_SMOOTHCURVE", value: 558, isUnsigned: true)
!631 = !DIEnumerator(name: "ICON_SPHERECURVE", value: 559, isUnsigned: true)
!632 = !DIEnumerator(name: "ICON_ROOTCURVE", value: 560, isUnsigned: true)
!633 = !DIEnumerator(name: "ICON_SHARPCURVE", value: 561, isUnsigned: true)
!634 = !DIEnumerator(name: "ICON_LINCURVE", value: 562, isUnsigned: true)
!635 = !DIEnumerator(name: "ICON_NOCURVE", value: 563, isUnsigned: true)
!636 = !DIEnumerator(name: "ICON_RNDCURVE", value: 564, isUnsigned: true)
!637 = !DIEnumerator(name: "ICON_PROP_OFF", value: 565, isUnsigned: true)
!638 = !DIEnumerator(name: "ICON_PROP_ON", value: 566, isUnsigned: true)
!639 = !DIEnumerator(name: "ICON_PROP_CON", value: 567, isUnsigned: true)
!640 = !DIEnumerator(name: "ICON_SCULPT_DYNTOPO", value: 568, isUnsigned: true)
!641 = !DIEnumerator(name: "ICON_PARTICLE_POINT", value: 569, isUnsigned: true)
!642 = !DIEnumerator(name: "ICON_PARTICLE_TIP", value: 570, isUnsigned: true)
!643 = !DIEnumerator(name: "ICON_PARTICLE_PATH", value: 571, isUnsigned: true)
!644 = !DIEnumerator(name: "ICON_MAN_TRANS", value: 572, isUnsigned: true)
!645 = !DIEnumerator(name: "ICON_MAN_ROT", value: 573, isUnsigned: true)
!646 = !DIEnumerator(name: "ICON_MAN_SCALE", value: 574, isUnsigned: true)
!647 = !DIEnumerator(name: "ICON_MANIPUL", value: 575, isUnsigned: true)
!648 = !DIEnumerator(name: "ICON_SNAP_OFF", value: 576, isUnsigned: true)
!649 = !DIEnumerator(name: "ICON_SNAP_ON", value: 577, isUnsigned: true)
!650 = !DIEnumerator(name: "ICON_SNAP_NORMAL", value: 578, isUnsigned: true)
!651 = !DIEnumerator(name: "ICON_SNAP_INCREMENT", value: 579, isUnsigned: true)
!652 = !DIEnumerator(name: "ICON_SNAP_VERTEX", value: 580, isUnsigned: true)
!653 = !DIEnumerator(name: "ICON_SNAP_EDGE", value: 581, isUnsigned: true)
!654 = !DIEnumerator(name: "ICON_SNAP_FACE", value: 582, isUnsigned: true)
!655 = !DIEnumerator(name: "ICON_SNAP_VOLUME", value: 583, isUnsigned: true)
!656 = !DIEnumerator(name: "ICON_BLANK220", value: 584, isUnsigned: true)
!657 = !DIEnumerator(name: "ICON_STICKY_UVS_LOC", value: 585, isUnsigned: true)
!658 = !DIEnumerator(name: "ICON_STICKY_UVS_DISABLE", value: 586, isUnsigned: true)
!659 = !DIEnumerator(name: "ICON_STICKY_UVS_VERT", value: 587, isUnsigned: true)
!660 = !DIEnumerator(name: "ICON_CLIPUV_DEHLT", value: 588, isUnsigned: true)
!661 = !DIEnumerator(name: "ICON_CLIPUV_HLT", value: 589, isUnsigned: true)
!662 = !DIEnumerator(name: "ICON_SNAP_PEEL_OBJECT", value: 590, isUnsigned: true)
!663 = !DIEnumerator(name: "ICON_GRID", value: 591, isUnsigned: true)
!664 = !DIEnumerator(name: "ICON_BLANK221", value: 592, isUnsigned: true)
!665 = !DIEnumerator(name: "ICON_BLANK222", value: 593, isUnsigned: true)
!666 = !DIEnumerator(name: "ICON_BLANK224", value: 594, isUnsigned: true)
!667 = !DIEnumerator(name: "ICON_BLANK225", value: 595, isUnsigned: true)
!668 = !DIEnumerator(name: "ICON_BLANK226", value: 596, isUnsigned: true)
!669 = !DIEnumerator(name: "ICON_BLANK226b", value: 597, isUnsigned: true)
!670 = !DIEnumerator(name: "ICON_PASTEDOWN", value: 598, isUnsigned: true)
!671 = !DIEnumerator(name: "ICON_COPYDOWN", value: 599, isUnsigned: true)
!672 = !DIEnumerator(name: "ICON_PASTEFLIPUP", value: 600, isUnsigned: true)
!673 = !DIEnumerator(name: "ICON_PASTEFLIPDOWN", value: 601, isUnsigned: true)
!674 = !DIEnumerator(name: "ICON_BLANK227", value: 602, isUnsigned: true)
!675 = !DIEnumerator(name: "ICON_BLANK228", value: 603, isUnsigned: true)
!676 = !DIEnumerator(name: "ICON_BLANK229", value: 604, isUnsigned: true)
!677 = !DIEnumerator(name: "ICON_BLANK230", value: 605, isUnsigned: true)
!678 = !DIEnumerator(name: "ICON_SNAP_SURFACE", value: 606, isUnsigned: true)
!679 = !DIEnumerator(name: "ICON_AUTOMERGE_ON", value: 607, isUnsigned: true)
!680 = !DIEnumerator(name: "ICON_AUTOMERGE_OFF", value: 608, isUnsigned: true)
!681 = !DIEnumerator(name: "ICON_RETOPO", value: 609, isUnsigned: true)
!682 = !DIEnumerator(name: "ICON_UV_VERTEXSEL", value: 610, isUnsigned: true)
!683 = !DIEnumerator(name: "ICON_UV_EDGESEL", value: 611, isUnsigned: true)
!684 = !DIEnumerator(name: "ICON_UV_FACESEL", value: 612, isUnsigned: true)
!685 = !DIEnumerator(name: "ICON_UV_ISLANDSEL", value: 613, isUnsigned: true)
!686 = !DIEnumerator(name: "ICON_UV_SYNC_SELECT", value: 614, isUnsigned: true)
!687 = !DIEnumerator(name: "ICON_BLANK240", value: 615, isUnsigned: true)
!688 = !DIEnumerator(name: "ICON_BLANK241", value: 616, isUnsigned: true)
!689 = !DIEnumerator(name: "ICON_BLANK242", value: 617, isUnsigned: true)
!690 = !DIEnumerator(name: "ICON_BLANK243", value: 618, isUnsigned: true)
!691 = !DIEnumerator(name: "ICON_BLANK244", value: 619, isUnsigned: true)
!692 = !DIEnumerator(name: "ICON_BLANK245", value: 620, isUnsigned: true)
!693 = !DIEnumerator(name: "ICON_BLANK246", value: 621, isUnsigned: true)
!694 = !DIEnumerator(name: "ICON_BLANK247", value: 622, isUnsigned: true)
!695 = !DIEnumerator(name: "ICON_BLANK247b", value: 623, isUnsigned: true)
!696 = !DIEnumerator(name: "ICON_BBOX", value: 624, isUnsigned: true)
!697 = !DIEnumerator(name: "ICON_WIRE", value: 625, isUnsigned: true)
!698 = !DIEnumerator(name: "ICON_SOLID", value: 626, isUnsigned: true)
!699 = !DIEnumerator(name: "ICON_SMOOTH", value: 627, isUnsigned: true)
!700 = !DIEnumerator(name: "ICON_POTATO", value: 628, isUnsigned: true)
!701 = !DIEnumerator(name: "ICON_BLANK248", value: 629, isUnsigned: true)
!702 = !DIEnumerator(name: "ICON_ORTHO", value: 630, isUnsigned: true)
!703 = !DIEnumerator(name: "ICON_BLANK249", value: 631, isUnsigned: true)
!704 = !DIEnumerator(name: "ICON_BLANK250", value: 632, isUnsigned: true)
!705 = !DIEnumerator(name: "ICON_LOCKVIEW_OFF", value: 633, isUnsigned: true)
!706 = !DIEnumerator(name: "ICON_LOCKVIEW_ON", value: 634, isUnsigned: true)
!707 = !DIEnumerator(name: "ICON_BLANK251", value: 635, isUnsigned: true)
!708 = !DIEnumerator(name: "ICON_AXIS_SIDE", value: 636, isUnsigned: true)
!709 = !DIEnumerator(name: "ICON_AXIS_FRONT", value: 637, isUnsigned: true)
!710 = !DIEnumerator(name: "ICON_AXIS_TOP", value: 638, isUnsigned: true)
!711 = !DIEnumerator(name: "ICON_NDOF_DOM", value: 639, isUnsigned: true)
!712 = !DIEnumerator(name: "ICON_NDOF_TURN", value: 640, isUnsigned: true)
!713 = !DIEnumerator(name: "ICON_NDOF_FLY", value: 641, isUnsigned: true)
!714 = !DIEnumerator(name: "ICON_NDOF_TRANS", value: 642, isUnsigned: true)
!715 = !DIEnumerator(name: "ICON_LAYER_USED", value: 643, isUnsigned: true)
!716 = !DIEnumerator(name: "ICON_LAYER_ACTIVE", value: 644, isUnsigned: true)
!717 = !DIEnumerator(name: "ICON_BLANK254", value: 645, isUnsigned: true)
!718 = !DIEnumerator(name: "ICON_BLANK255", value: 646, isUnsigned: true)
!719 = !DIEnumerator(name: "ICON_BLANK256", value: 647, isUnsigned: true)
!720 = !DIEnumerator(name: "ICON_BLANK257", value: 648, isUnsigned: true)
!721 = !DIEnumerator(name: "ICON_BLANK257b", value: 649, isUnsigned: true)
!722 = !DIEnumerator(name: "ICON_BLANK258", value: 650, isUnsigned: true)
!723 = !DIEnumerator(name: "ICON_BLANK259", value: 651, isUnsigned: true)
!724 = !DIEnumerator(name: "ICON_BLANK260", value: 652, isUnsigned: true)
!725 = !DIEnumerator(name: "ICON_BLANK261", value: 653, isUnsigned: true)
!726 = !DIEnumerator(name: "ICON_BLANK262", value: 654, isUnsigned: true)
!727 = !DIEnumerator(name: "ICON_BLANK263", value: 655, isUnsigned: true)
!728 = !DIEnumerator(name: "ICON_BLANK264", value: 656, isUnsigned: true)
!729 = !DIEnumerator(name: "ICON_BLANK265", value: 657, isUnsigned: true)
!730 = !DIEnumerator(name: "ICON_BLANK266", value: 658, isUnsigned: true)
!731 = !DIEnumerator(name: "ICON_BLANK267", value: 659, isUnsigned: true)
!732 = !DIEnumerator(name: "ICON_BLANK268", value: 660, isUnsigned: true)
!733 = !DIEnumerator(name: "ICON_BLANK269", value: 661, isUnsigned: true)
!734 = !DIEnumerator(name: "ICON_BLANK270", value: 662, isUnsigned: true)
!735 = !DIEnumerator(name: "ICON_BLANK271", value: 663, isUnsigned: true)
!736 = !DIEnumerator(name: "ICON_BLANK272", value: 664, isUnsigned: true)
!737 = !DIEnumerator(name: "ICON_BLANK273", value: 665, isUnsigned: true)
!738 = !DIEnumerator(name: "ICON_BLANK274", value: 666, isUnsigned: true)
!739 = !DIEnumerator(name: "ICON_BLANK275", value: 667, isUnsigned: true)
!740 = !DIEnumerator(name: "ICON_BLANK276", value: 668, isUnsigned: true)
!741 = !DIEnumerator(name: "ICON_BLANK277", value: 669, isUnsigned: true)
!742 = !DIEnumerator(name: "ICON_BLANK278", value: 670, isUnsigned: true)
!743 = !DIEnumerator(name: "ICON_BLANK279", value: 671, isUnsigned: true)
!744 = !DIEnumerator(name: "ICON_BLANK280", value: 672, isUnsigned: true)
!745 = !DIEnumerator(name: "ICON_BLANK281", value: 673, isUnsigned: true)
!746 = !DIEnumerator(name: "ICON_BLANK282", value: 674, isUnsigned: true)
!747 = !DIEnumerator(name: "ICON_BLANK282b", value: 675, isUnsigned: true)
!748 = !DIEnumerator(name: "ICON_SORTALPHA", value: 676, isUnsigned: true)
!749 = !DIEnumerator(name: "ICON_SORTBYEXT", value: 677, isUnsigned: true)
!750 = !DIEnumerator(name: "ICON_SORTTIME", value: 678, isUnsigned: true)
!751 = !DIEnumerator(name: "ICON_SORTSIZE", value: 679, isUnsigned: true)
!752 = !DIEnumerator(name: "ICON_LONGDISPLAY", value: 680, isUnsigned: true)
!753 = !DIEnumerator(name: "ICON_SHORTDISPLAY", value: 681, isUnsigned: true)
!754 = !DIEnumerator(name: "ICON_GHOST", value: 682, isUnsigned: true)
!755 = !DIEnumerator(name: "ICON_IMGDISPLAY", value: 683, isUnsigned: true)
!756 = !DIEnumerator(name: "ICON_SAVE_AS", value: 684, isUnsigned: true)
!757 = !DIEnumerator(name: "ICON_SAVE_COPY", value: 685, isUnsigned: true)
!758 = !DIEnumerator(name: "ICON_BOOKMARKS", value: 686, isUnsigned: true)
!759 = !DIEnumerator(name: "ICON_FONTPREVIEW", value: 687, isUnsigned: true)
!760 = !DIEnumerator(name: "ICON_FILTER", value: 688, isUnsigned: true)
!761 = !DIEnumerator(name: "ICON_NEWFOLDER", value: 689, isUnsigned: true)
!762 = !DIEnumerator(name: "ICON_OPEN_RECENT", value: 690, isUnsigned: true)
!763 = !DIEnumerator(name: "ICON_FILE_PARENT", value: 691, isUnsigned: true)
!764 = !DIEnumerator(name: "ICON_FILE_REFRESH", value: 692, isUnsigned: true)
!765 = !DIEnumerator(name: "ICON_FILE_FOLDER", value: 693, isUnsigned: true)
!766 = !DIEnumerator(name: "ICON_FILE_BLANK", value: 694, isUnsigned: true)
!767 = !DIEnumerator(name: "ICON_FILE_BLEND", value: 695, isUnsigned: true)
!768 = !DIEnumerator(name: "ICON_FILE_IMAGE", value: 696, isUnsigned: true)
!769 = !DIEnumerator(name: "ICON_FILE_MOVIE", value: 697, isUnsigned: true)
!770 = !DIEnumerator(name: "ICON_FILE_SCRIPT", value: 698, isUnsigned: true)
!771 = !DIEnumerator(name: "ICON_FILE_SOUND", value: 699, isUnsigned: true)
!772 = !DIEnumerator(name: "ICON_FILE_FONT", value: 700, isUnsigned: true)
!773 = !DIEnumerator(name: "ICON_FILE_TEXT", value: 701, isUnsigned: true)
!774 = !DIEnumerator(name: "ICON_RECOVER_AUTO", value: 702, isUnsigned: true)
!775 = !DIEnumerator(name: "ICON_SAVE_PREFS", value: 703, isUnsigned: true)
!776 = !DIEnumerator(name: "ICON_LINK_BLEND", value: 704, isUnsigned: true)
!777 = !DIEnumerator(name: "ICON_APPEND_BLEND", value: 705, isUnsigned: true)
!778 = !DIEnumerator(name: "ICON_IMPORT", value: 706, isUnsigned: true)
!779 = !DIEnumerator(name: "ICON_EXPORT", value: 707, isUnsigned: true)
!780 = !DIEnumerator(name: "ICON_EXTERNAL_DATA", value: 708, isUnsigned: true)
!781 = !DIEnumerator(name: "ICON_LOAD_FACTORY", value: 709, isUnsigned: true)
!782 = !DIEnumerator(name: "ICON_BLANK300", value: 710, isUnsigned: true)
!783 = !DIEnumerator(name: "ICON_BLANK301", value: 711, isUnsigned: true)
!784 = !DIEnumerator(name: "ICON_BLANK302", value: 712, isUnsigned: true)
!785 = !DIEnumerator(name: "ICON_BLANK303", value: 713, isUnsigned: true)
!786 = !DIEnumerator(name: "ICON_BLANK304", value: 714, isUnsigned: true)
!787 = !DIEnumerator(name: "ICON_LOOP_BACK", value: 715, isUnsigned: true)
!788 = !DIEnumerator(name: "ICON_LOOP_FORWARDS", value: 716, isUnsigned: true)
!789 = !DIEnumerator(name: "ICON_BACK", value: 717, isUnsigned: true)
!790 = !DIEnumerator(name: "ICON_FORWARD", value: 718, isUnsigned: true)
!791 = !DIEnumerator(name: "ICON_BLANK309", value: 719, isUnsigned: true)
!792 = !DIEnumerator(name: "ICON_BLANK310", value: 720, isUnsigned: true)
!793 = !DIEnumerator(name: "ICON_BLANK311", value: 721, isUnsigned: true)
!794 = !DIEnumerator(name: "ICON_BLANK312", value: 722, isUnsigned: true)
!795 = !DIEnumerator(name: "ICON_BLANK313", value: 723, isUnsigned: true)
!796 = !DIEnumerator(name: "ICON_BLANK314", value: 724, isUnsigned: true)
!797 = !DIEnumerator(name: "ICON_BLANK315", value: 725, isUnsigned: true)
!798 = !DIEnumerator(name: "ICON_FILE_BACKUP", value: 726, isUnsigned: true)
!799 = !DIEnumerator(name: "ICON_DISK_DRIVE", value: 727, isUnsigned: true)
!800 = !DIEnumerator(name: "ICON_MATPLANE", value: 728, isUnsigned: true)
!801 = !DIEnumerator(name: "ICON_MATSPHERE", value: 729, isUnsigned: true)
!802 = !DIEnumerator(name: "ICON_MATCUBE", value: 730, isUnsigned: true)
!803 = !DIEnumerator(name: "ICON_MONKEY", value: 731, isUnsigned: true)
!804 = !DIEnumerator(name: "ICON_HAIR", value: 732, isUnsigned: true)
!805 = !DIEnumerator(name: "ICON_ALIASED", value: 733, isUnsigned: true)
!806 = !DIEnumerator(name: "ICON_ANTIALIASED", value: 734, isUnsigned: true)
!807 = !DIEnumerator(name: "ICON_MAT_SPHERE_SKY", value: 735, isUnsigned: true)
!808 = !DIEnumerator(name: "ICON_BLANK319", value: 736, isUnsigned: true)
!809 = !DIEnumerator(name: "ICON_BLANK320", value: 737, isUnsigned: true)
!810 = !DIEnumerator(name: "ICON_BLANK321", value: 738, isUnsigned: true)
!811 = !DIEnumerator(name: "ICON_BLANK322", value: 739, isUnsigned: true)
!812 = !DIEnumerator(name: "ICON_WORDWRAP_OFF", value: 740, isUnsigned: true)
!813 = !DIEnumerator(name: "ICON_WORDWRAP_ON", value: 741, isUnsigned: true)
!814 = !DIEnumerator(name: "ICON_SYNTAX_OFF", value: 742, isUnsigned: true)
!815 = !DIEnumerator(name: "ICON_SYNTAX_ON", value: 743, isUnsigned: true)
!816 = !DIEnumerator(name: "ICON_LINENUMBERS_OFF", value: 744, isUnsigned: true)
!817 = !DIEnumerator(name: "ICON_LINENUMBERS_ON", value: 745, isUnsigned: true)
!818 = !DIEnumerator(name: "ICON_SCRIPTPLUGINS", value: 746, isUnsigned: true)
!819 = !DIEnumerator(name: "ICON_BLANK323", value: 747, isUnsigned: true)
!820 = !DIEnumerator(name: "ICON_BLANK324", value: 748, isUnsigned: true)
!821 = !DIEnumerator(name: "ICON_BLANK325", value: 749, isUnsigned: true)
!822 = !DIEnumerator(name: "ICON_BLANK326", value: 750, isUnsigned: true)
!823 = !DIEnumerator(name: "ICON_BLANK327", value: 751, isUnsigned: true)
!824 = !DIEnumerator(name: "ICON_BLANK328", value: 752, isUnsigned: true)
!825 = !DIEnumerator(name: "ICON_BLANK328b", value: 753, isUnsigned: true)
!826 = !DIEnumerator(name: "ICON_SEQ_SEQUENCER", value: 754, isUnsigned: true)
!827 = !DIEnumerator(name: "ICON_SEQ_PREVIEW", value: 755, isUnsigned: true)
!828 = !DIEnumerator(name: "ICON_SEQ_LUMA_WAVEFORM", value: 756, isUnsigned: true)
!829 = !DIEnumerator(name: "ICON_SEQ_CHROMA_SCOPE", value: 757, isUnsigned: true)
!830 = !DIEnumerator(name: "ICON_SEQ_HISTOGRAM", value: 758, isUnsigned: true)
!831 = !DIEnumerator(name: "ICON_SEQ_SPLITVIEW", value: 759, isUnsigned: true)
!832 = !DIEnumerator(name: "ICON_BLANK331", value: 760, isUnsigned: true)
!833 = !DIEnumerator(name: "ICON_BLANK332", value: 761, isUnsigned: true)
!834 = !DIEnumerator(name: "ICON_BLANK333", value: 762, isUnsigned: true)
!835 = !DIEnumerator(name: "ICON_IMAGE_RGB", value: 763, isUnsigned: true)
!836 = !DIEnumerator(name: "ICON_IMAGE_RGB_ALPHA", value: 764, isUnsigned: true)
!837 = !DIEnumerator(name: "ICON_IMAGE_ALPHA", value: 765, isUnsigned: true)
!838 = !DIEnumerator(name: "ICON_IMAGE_ZDEPTH", value: 766, isUnsigned: true)
!839 = !DIEnumerator(name: "ICON_IMAGEFILE", value: 767, isUnsigned: true)
!840 = !DIEnumerator(name: "ICON_BLANK336", value: 768, isUnsigned: true)
!841 = !DIEnumerator(name: "ICON_BLANK337", value: 769, isUnsigned: true)
!842 = !DIEnumerator(name: "ICON_BLANK338", value: 770, isUnsigned: true)
!843 = !DIEnumerator(name: "ICON_BLANK339", value: 771, isUnsigned: true)
!844 = !DIEnumerator(name: "ICON_BLANK340", value: 772, isUnsigned: true)
!845 = !DIEnumerator(name: "ICON_BLANK341", value: 773, isUnsigned: true)
!846 = !DIEnumerator(name: "ICON_BLANK342", value: 774, isUnsigned: true)
!847 = !DIEnumerator(name: "ICON_BLANK343", value: 775, isUnsigned: true)
!848 = !DIEnumerator(name: "ICON_BLANK344", value: 776, isUnsigned: true)
!849 = !DIEnumerator(name: "ICON_BLANK345", value: 777, isUnsigned: true)
!850 = !DIEnumerator(name: "ICON_BLANK346", value: 778, isUnsigned: true)
!851 = !DIEnumerator(name: "ICON_BLANK346b", value: 779, isUnsigned: true)
!852 = !DIEnumerator(name: "ICON_BRUSH_ADD", value: 780, isUnsigned: true)
!853 = !DIEnumerator(name: "ICON_BRUSH_BLOB", value: 781, isUnsigned: true)
!854 = !DIEnumerator(name: "ICON_BRUSH_BLUR", value: 782, isUnsigned: true)
!855 = !DIEnumerator(name: "ICON_BRUSH_CLAY", value: 783, isUnsigned: true)
!856 = !DIEnumerator(name: "ICON_BRUSH_CLAY_STRIPS", value: 784, isUnsigned: true)
!857 = !DIEnumerator(name: "ICON_BRUSH_CLONE", value: 785, isUnsigned: true)
!858 = !DIEnumerator(name: "ICON_BRUSH_CREASE", value: 786, isUnsigned: true)
!859 = !DIEnumerator(name: "ICON_BRUSH_DARKEN", value: 787, isUnsigned: true)
!860 = !DIEnumerator(name: "ICON_BRUSH_FILL", value: 788, isUnsigned: true)
!861 = !DIEnumerator(name: "ICON_BRUSH_FLATTEN", value: 789, isUnsigned: true)
!862 = !DIEnumerator(name: "ICON_BRUSH_GRAB", value: 790, isUnsigned: true)
!863 = !DIEnumerator(name: "ICON_BRUSH_INFLATE", value: 791, isUnsigned: true)
!864 = !DIEnumerator(name: "ICON_BRUSH_LAYER", value: 792, isUnsigned: true)
!865 = !DIEnumerator(name: "ICON_BRUSH_LIGHTEN", value: 793, isUnsigned: true)
!866 = !DIEnumerator(name: "ICON_BRUSH_MASK", value: 794, isUnsigned: true)
!867 = !DIEnumerator(name: "ICON_BRUSH_MIX", value: 795, isUnsigned: true)
!868 = !DIEnumerator(name: "ICON_BRUSH_MULTIPLY", value: 796, isUnsigned: true)
!869 = !DIEnumerator(name: "ICON_BRUSH_NUDGE", value: 797, isUnsigned: true)
!870 = !DIEnumerator(name: "ICON_BRUSH_PINCH", value: 798, isUnsigned: true)
!871 = !DIEnumerator(name: "ICON_BRUSH_SCRAPE", value: 799, isUnsigned: true)
!872 = !DIEnumerator(name: "ICON_BRUSH_SCULPT_DRAW", value: 800, isUnsigned: true)
!873 = !DIEnumerator(name: "ICON_BRUSH_SMEAR", value: 801, isUnsigned: true)
!874 = !DIEnumerator(name: "ICON_BRUSH_SMOOTH", value: 802, isUnsigned: true)
!875 = !DIEnumerator(name: "ICON_BRUSH_SNAKE_HOOK", value: 803, isUnsigned: true)
!876 = !DIEnumerator(name: "ICON_BRUSH_SOFTEN", value: 804, isUnsigned: true)
!877 = !DIEnumerator(name: "ICON_BRUSH_SUBTRACT", value: 805, isUnsigned: true)
!878 = !DIEnumerator(name: "ICON_BRUSH_TEXDRAW", value: 806, isUnsigned: true)
!879 = !DIEnumerator(name: "ICON_BRUSH_TEXFILL", value: 807, isUnsigned: true)
!880 = !DIEnumerator(name: "ICON_BRUSH_TEXMASK", value: 808, isUnsigned: true)
!881 = !DIEnumerator(name: "ICON_BRUSH_THUMB", value: 809, isUnsigned: true)
!882 = !DIEnumerator(name: "ICON_BRUSH_ROTATE", value: 810, isUnsigned: true)
!883 = !DIEnumerator(name: "ICON_BRUSH_VERTEXDRAW", value: 811, isUnsigned: true)
!884 = !DIEnumerator(name: "ICON_MATCAP_01", value: 812, isUnsigned: true)
!885 = !DIEnumerator(name: "ICON_MATCAP_02", value: 813, isUnsigned: true)
!886 = !DIEnumerator(name: "ICON_MATCAP_03", value: 814, isUnsigned: true)
!887 = !DIEnumerator(name: "ICON_MATCAP_04", value: 815, isUnsigned: true)
!888 = !DIEnumerator(name: "ICON_MATCAP_05", value: 816, isUnsigned: true)
!889 = !DIEnumerator(name: "ICON_MATCAP_06", value: 817, isUnsigned: true)
!890 = !DIEnumerator(name: "ICON_MATCAP_07", value: 818, isUnsigned: true)
!891 = !DIEnumerator(name: "ICON_MATCAP_08", value: 819, isUnsigned: true)
!892 = !DIEnumerator(name: "ICON_MATCAP_09", value: 820, isUnsigned: true)
!893 = !DIEnumerator(name: "ICON_MATCAP_10", value: 821, isUnsigned: true)
!894 = !DIEnumerator(name: "ICON_MATCAP_11", value: 822, isUnsigned: true)
!895 = !DIEnumerator(name: "ICON_MATCAP_12", value: 823, isUnsigned: true)
!896 = !DIEnumerator(name: "ICON_MATCAP_13", value: 824, isUnsigned: true)
!897 = !DIEnumerator(name: "ICON_MATCAP_14", value: 825, isUnsigned: true)
!898 = !DIEnumerator(name: "ICON_MATCAP_15", value: 826, isUnsigned: true)
!899 = !DIEnumerator(name: "ICON_MATCAP_16", value: 827, isUnsigned: true)
!900 = !DIEnumerator(name: "ICON_MATCAP_17", value: 828, isUnsigned: true)
!901 = !DIEnumerator(name: "ICON_MATCAP_18", value: 829, isUnsigned: true)
!902 = !DIEnumerator(name: "ICON_MATCAP_19", value: 830, isUnsigned: true)
!903 = !DIEnumerator(name: "ICON_MATCAP_20", value: 831, isUnsigned: true)
!904 = !DIEnumerator(name: "ICON_MATCAP_21", value: 832, isUnsigned: true)
!905 = !DIEnumerator(name: "ICON_MATCAP_22", value: 833, isUnsigned: true)
!906 = !DIEnumerator(name: "ICON_MATCAP_23", value: 834, isUnsigned: true)
!907 = !DIEnumerator(name: "ICON_MATCAP_24", value: 835, isUnsigned: true)
!908 = !DIEnumerator(name: "VICO_VIEW3D_VEC", value: 836, isUnsigned: true)
!909 = !DIEnumerator(name: "VICO_EDIT_VEC", value: 837, isUnsigned: true)
!910 = !DIEnumerator(name: "VICO_EDITMODE_VEC_DEHLT", value: 838, isUnsigned: true)
!911 = !DIEnumerator(name: "VICO_EDITMODE_VEC_HLT", value: 839, isUnsigned: true)
!912 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_RIGHT_VEC", value: 840, isUnsigned: true)
!913 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_DOWN_VEC", value: 841, isUnsigned: true)
!914 = !DIEnumerator(name: "VICO_MOVE_UP_VEC", value: 842, isUnsigned: true)
!915 = !DIEnumerator(name: "VICO_MOVE_DOWN_VEC", value: 843, isUnsigned: true)
!916 = !DIEnumerator(name: "VICO_X_VEC", value: 844, isUnsigned: true)
!917 = !DIEnumerator(name: "VICO_SMALL_TRI_RIGHT_VEC", value: 845, isUnsigned: true)
!918 = !DIEnumerator(name: "BIFICONID_LAST", value: 846, isUnsigned: true)
!919 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 157, baseType: !7, size: 32, elements: !920)
!920 = !{!921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943}
!921 = !DIEnumerator(name: "UI_ICON_SUBMENU", value: 64, isUnsigned: true)
!922 = !DIEnumerator(name: "UI_ICON_PREVIEW", value: 128, isUnsigned: true)
!923 = !DIEnumerator(name: "UI_BUT_NODE_LINK", value: 256, isUnsigned: true)
!924 = !DIEnumerator(name: "UI_BUT_NODE_ACTIVE", value: 512, isUnsigned: true)
!925 = !DIEnumerator(name: "UI_BUT_DRAG_LOCK", value: 1024, isUnsigned: true)
!926 = !DIEnumerator(name: "UI_BUT_DISABLED", value: 2048, isUnsigned: true)
!927 = !DIEnumerator(name: "UI_BUT_COLOR_LOCK", value: 4096, isUnsigned: true)
!928 = !DIEnumerator(name: "UI_BUT_ANIMATED", value: 8192, isUnsigned: true)
!929 = !DIEnumerator(name: "UI_BUT_ANIMATED_KEY", value: 16384, isUnsigned: true)
!930 = !DIEnumerator(name: "UI_BUT_DRIVEN", value: 32768, isUnsigned: true)
!931 = !DIEnumerator(name: "UI_BUT_REDALERT", value: 65536, isUnsigned: true)
!932 = !DIEnumerator(name: "UI_BUT_INACTIVE", value: 131072, isUnsigned: true)
!933 = !DIEnumerator(name: "UI_BUT_LAST_ACTIVE", value: 262144, isUnsigned: true)
!934 = !DIEnumerator(name: "UI_BUT_UNDO", value: 524288, isUnsigned: true)
!935 = !DIEnumerator(name: "UI_BUT_IMMEDIATE", value: 1048576, isUnsigned: true)
!936 = !DIEnumerator(name: "UI_BUT_NO_UTF8", value: 2097152, isUnsigned: true)
!937 = !DIEnumerator(name: "UI_BUT_VEC_SIZE_LOCK", value: 4194304, isUnsigned: true)
!938 = !DIEnumerator(name: "UI_BUT_COLOR_CUBIC", value: 8388608, isUnsigned: true)
!939 = !DIEnumerator(name: "UI_BUT_LIST_ITEM", value: 16777216, isUnsigned: true)
!940 = !DIEnumerator(name: "UI_BUT_DRAG_MULTI", value: 33554432, isUnsigned: true)
!941 = !DIEnumerator(name: "UI_BUT_SCA_LINK_GREY", value: 67108864, isUnsigned: true)
!942 = !DIEnumerator(name: "UI_BUT_HAS_SEP_CHAR", value: 134217728, isUnsigned: true)
!943 = !DIEnumerator(name: "UI_BUT_TIP_FORCE", value: 268435456, isUnsigned: true)
!944 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 195, baseType: !7, size: 32, elements: !945)
!945 = !{!946, !947, !948, !949, !950, !951, !952, !953, !954}
!946 = !DIEnumerator(name: "UI_BUT_TEXT_LEFT", value: 2, isUnsigned: true)
!947 = !DIEnumerator(name: "UI_BUT_ICON_LEFT", value: 4, isUnsigned: true)
!948 = !DIEnumerator(name: "UI_BUT_TEXT_RIGHT", value: 8, isUnsigned: true)
!949 = !DIEnumerator(name: "UI_BUT_NO_TOOLTIP", value: 16, isUnsigned: true)
!950 = !DIEnumerator(name: "UI_BUT_ALIGN_TOP", value: 16384, isUnsigned: true)
!951 = !DIEnumerator(name: "UI_BUT_ALIGN_LEFT", value: 32768, isUnsigned: true)
!952 = !DIEnumerator(name: "UI_BUT_ALIGN_RIGHT", value: 65536, isUnsigned: true)
!953 = !DIEnumerator(name: "UI_BUT_ALIGN_DOWN", value: 131072, isUnsigned: true)
!954 = !DIEnumerator(name: "UI_BUT_ALIGN", value: 245760, isUnsigned: true)
!955 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !956, line: 115, baseType: !7, size: 32, elements: !957)
!956 = !DIFile(filename: "blender/source/blender/editors/interface/interface_intern.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!957 = !{!958, !959, !960, !961, !962, !963}
!958 = !DIEnumerator(name: "UI_SELECT", value: 1, isUnsigned: true)
!959 = !DIEnumerator(name: "UI_SCROLLED", value: 2, isUnsigned: true)
!960 = !DIEnumerator(name: "UI_ACTIVE", value: 4, isUnsigned: true)
!961 = !DIEnumerator(name: "UI_HAS_ICON", value: 8, isUnsigned: true)
!962 = !DIEnumerator(name: "UI_TEXTINPUT", value: 16, isUnsigned: true)
!963 = !DIEnumerator(name: "UI_HIDDEN", value: 32, isUnsigned: true)
!964 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyFlag", file: !965, line: 151, baseType: !7, size: 32, elements: !966)
!965 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!966 = !{!967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997}
!967 = !DIEnumerator(name: "PROP_EDITABLE", value: 1, isUnsigned: true)
!968 = !DIEnumerator(name: "PROP_LIB_EXCEPTION", value: 65536, isUnsigned: true)
!969 = !DIEnumerator(name: "PROP_ANIMATABLE", value: 2, isUnsigned: true)
!970 = !DIEnumerator(name: "PROP_ICONS_CONSECUTIVE", value: 4096, isUnsigned: true)
!971 = !DIEnumerator(name: "PROP_HIDDEN", value: 524288, isUnsigned: true)
!972 = !DIEnumerator(name: "PROP_SKIP_SAVE", value: 268435456, isUnsigned: true)
!973 = !DIEnumerator(name: "PROP_REQUIRED", value: 4, isUnsigned: true)
!974 = !DIEnumerator(name: "PROP_OUTPUT", value: 8, isUnsigned: true)
!975 = !DIEnumerator(name: "PROP_RNAPTR", value: 2048, isUnsigned: true)
!976 = !DIEnumerator(name: "PROP_PYFUNC_OPTIONAL", value: 1073741824, isUnsigned: true)
!977 = !DIEnumerator(name: "PROP_REGISTER", value: 16, isUnsigned: true)
!978 = !DIEnumerator(name: "PROP_REGISTER_OPTIONAL", value: 48, isUnsigned: true)
!979 = !DIEnumerator(name: "PROP_PROPORTIONAL", value: 67108864, isUnsigned: true)
!980 = !DIEnumerator(name: "PROP_ID_REFCOUNT", value: 64, isUnsigned: true)
!981 = !DIEnumerator(name: "PROP_ID_SELF_CHECK", value: 1048576, isUnsigned: true)
!982 = !DIEnumerator(name: "PROP_NEVER_NULL", value: 262144, isUnsigned: true)
!983 = !DIEnumerator(name: "PROP_NEVER_UNLINK", value: 33554432, isUnsigned: true)
!984 = !DIEnumerator(name: "PROP_ENUM_FLAG", value: 2097152, isUnsigned: true)
!985 = !DIEnumerator(name: "PROP_CONTEXT_UPDATE", value: 4194304, isUnsigned: true)
!986 = !DIEnumerator(name: "PROP_CONTEXT_PROPERTY_UPDATE", value: 138412032, isUnsigned: true)
!987 = !DIEnumerator(name: "PROP_THICK_WRAP", value: 8388608, isUnsigned: true)
!988 = !DIEnumerator(name: "PROP_BUILTIN", value: 128, isUnsigned: true)
!989 = !DIEnumerator(name: "PROP_EXPORT", value: 256, isUnsigned: true)
!990 = !DIEnumerator(name: "PROP_RUNTIME", value: 512, isUnsigned: true)
!991 = !DIEnumerator(name: "PROP_IDPROPERTY", value: 1024, isUnsigned: true)
!992 = !DIEnumerator(name: "PROP_RAW_ACCESS", value: 8192, isUnsigned: true)
!993 = !DIEnumerator(name: "PROP_RAW_ARRAY", value: 16384, isUnsigned: true)
!994 = !DIEnumerator(name: "PROP_FREE_POINTERS", value: 32768, isUnsigned: true)
!995 = !DIEnumerator(name: "PROP_DYNAMIC", value: 131072, isUnsigned: true)
!996 = !DIEnumerator(name: "PROP_ENUM_NO_CONTEXT", value: 16777216, isUnsigned: true)
!997 = !DIEnumerator(name: "PROP_ENUM_NO_TRANSLATE", value: 536870912, isUnsigned: true)
!998 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyType", file: !965, line: 71, baseType: !7, size: 32, elements: !999)
!999 = !{!1000, !1001, !1002, !1003, !1004, !1005, !1006}
!1000 = !DIEnumerator(name: "PROP_BOOLEAN", value: 0, isUnsigned: true)
!1001 = !DIEnumerator(name: "PROP_INT", value: 1, isUnsigned: true)
!1002 = !DIEnumerator(name: "PROP_FLOAT", value: 2, isUnsigned: true)
!1003 = !DIEnumerator(name: "PROP_STRING", value: 3, isUnsigned: true)
!1004 = !DIEnumerator(name: "PROP_ENUM", value: 4, isUnsigned: true)
!1005 = !DIEnumerator(name: "PROP_POINTER", value: 5, isUnsigned: true)
!1006 = !DIEnumerator(name: "PROP_COLLECTION", value: 6, isUnsigned: true)
!1007 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyUnit", file: !965, line: 82, baseType: !7, size: 32, elements: !1008)
!1008 = !{!1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018}
!1009 = !DIEnumerator(name: "PROP_UNIT_NONE", value: 0, isUnsigned: true)
!1010 = !DIEnumerator(name: "PROP_UNIT_LENGTH", value: 65536, isUnsigned: true)
!1011 = !DIEnumerator(name: "PROP_UNIT_AREA", value: 131072, isUnsigned: true)
!1012 = !DIEnumerator(name: "PROP_UNIT_VOLUME", value: 196608, isUnsigned: true)
!1013 = !DIEnumerator(name: "PROP_UNIT_MASS", value: 262144, isUnsigned: true)
!1014 = !DIEnumerator(name: "PROP_UNIT_ROTATION", value: 327680, isUnsigned: true)
!1015 = !DIEnumerator(name: "PROP_UNIT_TIME", value: 393216, isUnsigned: true)
!1016 = !DIEnumerator(name: "PROP_UNIT_VELOCITY", value: 458752, isUnsigned: true)
!1017 = !DIEnumerator(name: "PROP_UNIT_ACCELERATION", value: 524288, isUnsigned: true)
!1018 = !DIEnumerator(name: "PROP_UNIT_CAMERA", value: 589824, isUnsigned: true)
!1019 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1020, line: 141, baseType: !7, size: 32, elements: !1021)
!1020 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1021 = !{!1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033}
!1022 = !DIEnumerator(name: "WM_OP_INVOKE_DEFAULT", value: 0, isUnsigned: true)
!1023 = !DIEnumerator(name: "WM_OP_INVOKE_REGION_WIN", value: 1, isUnsigned: true)
!1024 = !DIEnumerator(name: "WM_OP_INVOKE_REGION_CHANNELS", value: 2, isUnsigned: true)
!1025 = !DIEnumerator(name: "WM_OP_INVOKE_REGION_PREVIEW", value: 3, isUnsigned: true)
!1026 = !DIEnumerator(name: "WM_OP_INVOKE_AREA", value: 4, isUnsigned: true)
!1027 = !DIEnumerator(name: "WM_OP_INVOKE_SCREEN", value: 5, isUnsigned: true)
!1028 = !DIEnumerator(name: "WM_OP_EXEC_DEFAULT", value: 6, isUnsigned: true)
!1029 = !DIEnumerator(name: "WM_OP_EXEC_REGION_WIN", value: 7, isUnsigned: true)
!1030 = !DIEnumerator(name: "WM_OP_EXEC_REGION_CHANNELS", value: 8, isUnsigned: true)
!1031 = !DIEnumerator(name: "WM_OP_EXEC_REGION_PREVIEW", value: 9, isUnsigned: true)
!1032 = !DIEnumerator(name: "WM_OP_EXEC_AREA", value: 10, isUnsigned: true)
!1033 = !DIEnumerator(name: "WM_OP_EXEC_SCREEN", value: 11, isUnsigned: true)
!1034 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertySubType", file: !965, line: 107, baseType: !7, size: 32, elements: !1035)
!1035 = !{!1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064}
!1036 = !DIEnumerator(name: "PROP_NONE", value: 0, isUnsigned: true)
!1037 = !DIEnumerator(name: "PROP_FILEPATH", value: 1, isUnsigned: true)
!1038 = !DIEnumerator(name: "PROP_DIRPATH", value: 2, isUnsigned: true)
!1039 = !DIEnumerator(name: "PROP_FILENAME", value: 3, isUnsigned: true)
!1040 = !DIEnumerator(name: "PROP_BYTESTRING", value: 4, isUnsigned: true)
!1041 = !DIEnumerator(name: "PROP_PASSWORD", value: 6, isUnsigned: true)
!1042 = !DIEnumerator(name: "PROP_PIXEL", value: 12, isUnsigned: true)
!1043 = !DIEnumerator(name: "PROP_UNSIGNED", value: 13, isUnsigned: true)
!1044 = !DIEnumerator(name: "PROP_PERCENTAGE", value: 14, isUnsigned: true)
!1045 = !DIEnumerator(name: "PROP_FACTOR", value: 15, isUnsigned: true)
!1046 = !DIEnumerator(name: "PROP_ANGLE", value: 327696, isUnsigned: true)
!1047 = !DIEnumerator(name: "PROP_TIME", value: 393233, isUnsigned: true)
!1048 = !DIEnumerator(name: "PROP_DISTANCE", value: 65554, isUnsigned: true)
!1049 = !DIEnumerator(name: "PROP_DISTANCE_CAMERA", value: 589843, isUnsigned: true)
!1050 = !DIEnumerator(name: "PROP_COLOR", value: 20, isUnsigned: true)
!1051 = !DIEnumerator(name: "PROP_TRANSLATION", value: 65557, isUnsigned: true)
!1052 = !DIEnumerator(name: "PROP_DIRECTION", value: 22, isUnsigned: true)
!1053 = !DIEnumerator(name: "PROP_VELOCITY", value: 458775, isUnsigned: true)
!1054 = !DIEnumerator(name: "PROP_ACCELERATION", value: 524312, isUnsigned: true)
!1055 = !DIEnumerator(name: "PROP_MATRIX", value: 25, isUnsigned: true)
!1056 = !DIEnumerator(name: "PROP_EULER", value: 327706, isUnsigned: true)
!1057 = !DIEnumerator(name: "PROP_QUATERNION", value: 27, isUnsigned: true)
!1058 = !DIEnumerator(name: "PROP_AXISANGLE", value: 28, isUnsigned: true)
!1059 = !DIEnumerator(name: "PROP_XYZ", value: 29, isUnsigned: true)
!1060 = !DIEnumerator(name: "PROP_XYZ_LENGTH", value: 65565, isUnsigned: true)
!1061 = !DIEnumerator(name: "PROP_COLOR_GAMMA", value: 30, isUnsigned: true)
!1062 = !DIEnumerator(name: "PROP_COORDS", value: 31, isUnsigned: true)
!1063 = !DIEnumerator(name: "PROP_LAYER", value: 40, isUnsigned: true)
!1064 = !DIEnumerator(name: "PROP_LAYER_MEMBER", value: 41, isUnsigned: true)
!1065 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eUserpref_UI_Flag", file: !1066, line: 630, baseType: !1067, size: 32, elements: !1068)
!1066 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1067 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!1068 = !{!1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096}
!1069 = !DIEnumerator(name: "USER_WHEELZOOMDIR", value: 4)
!1070 = !DIEnumerator(name: "USER_FILTERFILEEXTS", value: 8)
!1071 = !DIEnumerator(name: "USER_DRAWVIEWINFO", value: 16)
!1072 = !DIEnumerator(name: "USER_PLAINMENUS", value: 32)
!1073 = !DIEnumerator(name: "USER_ALLWINCODECS", value: 256)
!1074 = !DIEnumerator(name: "USER_MENUOPENAUTO", value: 512)
!1075 = !DIEnumerator(name: "USER_ZBUF_CURSOR", value: 1024)
!1076 = !DIEnumerator(name: "USER_AUTOPERSP", value: 2048)
!1077 = !DIEnumerator(name: "USER_LOCKAROUND", value: 4096)
!1078 = !DIEnumerator(name: "USER_GLOBALUNDO", value: 8192)
!1079 = !DIEnumerator(name: "USER_ORBIT_SELECTION", value: 16384)
!1080 = !DIEnumerator(name: "USER_ZBUF_ORBIT", value: 32768)
!1081 = !DIEnumerator(name: "USER_HIDE_DOT", value: 65536)
!1082 = !DIEnumerator(name: "USER_SHOW_ROTVIEWICON", value: 131072)
!1083 = !DIEnumerator(name: "USER_SHOW_VIEWPORTNAME", value: 262144)
!1084 = !DIEnumerator(name: "USER_CAM_LOCK_NO_PARENT", value: 524288)
!1085 = !DIEnumerator(name: "USER_ZOOM_TO_MOUSEPOS", value: 1048576)
!1086 = !DIEnumerator(name: "USER_SHOW_FPS", value: 2097152)
!1087 = !DIEnumerator(name: "USER_MMB_PASTE", value: 4194304)
!1088 = !DIEnumerator(name: "USER_MENUFIXEDORDER", value: 8388608)
!1089 = !DIEnumerator(name: "USER_CONTINUOUS_MOUSE", value: 16777216)
!1090 = !DIEnumerator(name: "USER_ZOOM_INVERT", value: 33554432)
!1091 = !DIEnumerator(name: "USER_ZOOM_HORIZ", value: 67108864)
!1092 = !DIEnumerator(name: "USER_SPLASH_DISABLE", value: 134217728)
!1093 = !DIEnumerator(name: "USER_HIDE_RECENT", value: 268435456)
!1094 = !DIEnumerator(name: "USER_SHOW_THUMBNAILS", value: 536870912)
!1095 = !DIEnumerator(name: "USER_QUIT_PROMPT", value: 1073741824)
!1096 = !DIEnumerator(name: "USER_HIDE_SYSTEM_BOOKMARKS", value: -2147483648)
!1097 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1098, line: 54, baseType: !7, size: 32, elements: !1099)
!1098 = !DIFile(filename: "blender/source/blender/windowmanager/wm_event_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1099 = !{!1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297}
!1100 = !DIEnumerator(name: "EVENT_NONE", value: 0, isUnsigned: true)
!1101 = !DIEnumerator(name: "LEFTMOUSE", value: 1, isUnsigned: true)
!1102 = !DIEnumerator(name: "MIDDLEMOUSE", value: 2, isUnsigned: true)
!1103 = !DIEnumerator(name: "RIGHTMOUSE", value: 3, isUnsigned: true)
!1104 = !DIEnumerator(name: "MOUSEMOVE", value: 4, isUnsigned: true)
!1105 = !DIEnumerator(name: "ACTIONMOUSE", value: 5, isUnsigned: true)
!1106 = !DIEnumerator(name: "SELECTMOUSE", value: 6, isUnsigned: true)
!1107 = !DIEnumerator(name: "BUTTON4MOUSE", value: 7, isUnsigned: true)
!1108 = !DIEnumerator(name: "BUTTON5MOUSE", value: 8, isUnsigned: true)
!1109 = !DIEnumerator(name: "BUTTON6MOUSE", value: 18, isUnsigned: true)
!1110 = !DIEnumerator(name: "BUTTON7MOUSE", value: 19, isUnsigned: true)
!1111 = !DIEnumerator(name: "MOUSEPAN", value: 14, isUnsigned: true)
!1112 = !DIEnumerator(name: "MOUSEZOOM", value: 15, isUnsigned: true)
!1113 = !DIEnumerator(name: "MOUSEROTATE", value: 16, isUnsigned: true)
!1114 = !DIEnumerator(name: "WHEELUPMOUSE", value: 10, isUnsigned: true)
!1115 = !DIEnumerator(name: "WHEELDOWNMOUSE", value: 11, isUnsigned: true)
!1116 = !DIEnumerator(name: "WHEELINMOUSE", value: 12, isUnsigned: true)
!1117 = !DIEnumerator(name: "WHEELOUTMOUSE", value: 13, isUnsigned: true)
!1118 = !DIEnumerator(name: "INBETWEEN_MOUSEMOVE", value: 17, isUnsigned: true)
!1119 = !DIEnumerator(name: "AKEY", value: 97, isUnsigned: true)
!1120 = !DIEnumerator(name: "BKEY", value: 98, isUnsigned: true)
!1121 = !DIEnumerator(name: "CKEY", value: 99, isUnsigned: true)
!1122 = !DIEnumerator(name: "DKEY", value: 100, isUnsigned: true)
!1123 = !DIEnumerator(name: "EKEY", value: 101, isUnsigned: true)
!1124 = !DIEnumerator(name: "FKEY", value: 102, isUnsigned: true)
!1125 = !DIEnumerator(name: "GKEY", value: 103, isUnsigned: true)
!1126 = !DIEnumerator(name: "HKEY", value: 104, isUnsigned: true)
!1127 = !DIEnumerator(name: "IKEY", value: 105, isUnsigned: true)
!1128 = !DIEnumerator(name: "JKEY", value: 106, isUnsigned: true)
!1129 = !DIEnumerator(name: "KKEY", value: 107, isUnsigned: true)
!1130 = !DIEnumerator(name: "LKEY", value: 108, isUnsigned: true)
!1131 = !DIEnumerator(name: "MKEY", value: 109, isUnsigned: true)
!1132 = !DIEnumerator(name: "NKEY", value: 110, isUnsigned: true)
!1133 = !DIEnumerator(name: "OKEY", value: 111, isUnsigned: true)
!1134 = !DIEnumerator(name: "PKEY", value: 112, isUnsigned: true)
!1135 = !DIEnumerator(name: "QKEY", value: 113, isUnsigned: true)
!1136 = !DIEnumerator(name: "RKEY", value: 114, isUnsigned: true)
!1137 = !DIEnumerator(name: "SKEY", value: 115, isUnsigned: true)
!1138 = !DIEnumerator(name: "TKEY", value: 116, isUnsigned: true)
!1139 = !DIEnumerator(name: "UKEY", value: 117, isUnsigned: true)
!1140 = !DIEnumerator(name: "VKEY", value: 118, isUnsigned: true)
!1141 = !DIEnumerator(name: "WKEY", value: 119, isUnsigned: true)
!1142 = !DIEnumerator(name: "XKEY", value: 120, isUnsigned: true)
!1143 = !DIEnumerator(name: "YKEY", value: 121, isUnsigned: true)
!1144 = !DIEnumerator(name: "ZKEY", value: 122, isUnsigned: true)
!1145 = !DIEnumerator(name: "ZEROKEY", value: 48, isUnsigned: true)
!1146 = !DIEnumerator(name: "ONEKEY", value: 49, isUnsigned: true)
!1147 = !DIEnumerator(name: "TWOKEY", value: 50, isUnsigned: true)
!1148 = !DIEnumerator(name: "THREEKEY", value: 51, isUnsigned: true)
!1149 = !DIEnumerator(name: "FOURKEY", value: 52, isUnsigned: true)
!1150 = !DIEnumerator(name: "FIVEKEY", value: 53, isUnsigned: true)
!1151 = !DIEnumerator(name: "SIXKEY", value: 54, isUnsigned: true)
!1152 = !DIEnumerator(name: "SEVENKEY", value: 55, isUnsigned: true)
!1153 = !DIEnumerator(name: "EIGHTKEY", value: 56, isUnsigned: true)
!1154 = !DIEnumerator(name: "NINEKEY", value: 57, isUnsigned: true)
!1155 = !DIEnumerator(name: "CAPSLOCKKEY", value: 211, isUnsigned: true)
!1156 = !DIEnumerator(name: "LEFTCTRLKEY", value: 212, isUnsigned: true)
!1157 = !DIEnumerator(name: "LEFTALTKEY", value: 213, isUnsigned: true)
!1158 = !DIEnumerator(name: "RIGHTALTKEY", value: 214, isUnsigned: true)
!1159 = !DIEnumerator(name: "RIGHTCTRLKEY", value: 215, isUnsigned: true)
!1160 = !DIEnumerator(name: "RIGHTSHIFTKEY", value: 216, isUnsigned: true)
!1161 = !DIEnumerator(name: "LEFTSHIFTKEY", value: 217, isUnsigned: true)
!1162 = !DIEnumerator(name: "ESCKEY", value: 218, isUnsigned: true)
!1163 = !DIEnumerator(name: "TABKEY", value: 219, isUnsigned: true)
!1164 = !DIEnumerator(name: "RETKEY", value: 220, isUnsigned: true)
!1165 = !DIEnumerator(name: "SPACEKEY", value: 221, isUnsigned: true)
!1166 = !DIEnumerator(name: "LINEFEEDKEY", value: 222, isUnsigned: true)
!1167 = !DIEnumerator(name: "BACKSPACEKEY", value: 223, isUnsigned: true)
!1168 = !DIEnumerator(name: "DELKEY", value: 224, isUnsigned: true)
!1169 = !DIEnumerator(name: "SEMICOLONKEY", value: 225, isUnsigned: true)
!1170 = !DIEnumerator(name: "PERIODKEY", value: 226, isUnsigned: true)
!1171 = !DIEnumerator(name: "COMMAKEY", value: 227, isUnsigned: true)
!1172 = !DIEnumerator(name: "QUOTEKEY", value: 228, isUnsigned: true)
!1173 = !DIEnumerator(name: "ACCENTGRAVEKEY", value: 229, isUnsigned: true)
!1174 = !DIEnumerator(name: "MINUSKEY", value: 230, isUnsigned: true)
!1175 = !DIEnumerator(name: "SLASHKEY", value: 232, isUnsigned: true)
!1176 = !DIEnumerator(name: "BACKSLASHKEY", value: 233, isUnsigned: true)
!1177 = !DIEnumerator(name: "EQUALKEY", value: 234, isUnsigned: true)
!1178 = !DIEnumerator(name: "LEFTBRACKETKEY", value: 235, isUnsigned: true)
!1179 = !DIEnumerator(name: "RIGHTBRACKETKEY", value: 236, isUnsigned: true)
!1180 = !DIEnumerator(name: "LEFTARROWKEY", value: 137, isUnsigned: true)
!1181 = !DIEnumerator(name: "DOWNARROWKEY", value: 138, isUnsigned: true)
!1182 = !DIEnumerator(name: "RIGHTARROWKEY", value: 139, isUnsigned: true)
!1183 = !DIEnumerator(name: "UPARROWKEY", value: 140, isUnsigned: true)
!1184 = !DIEnumerator(name: "PAD0", value: 150, isUnsigned: true)
!1185 = !DIEnumerator(name: "PAD1", value: 151, isUnsigned: true)
!1186 = !DIEnumerator(name: "PAD2", value: 152, isUnsigned: true)
!1187 = !DIEnumerator(name: "PAD3", value: 153, isUnsigned: true)
!1188 = !DIEnumerator(name: "PAD4", value: 154, isUnsigned: true)
!1189 = !DIEnumerator(name: "PAD5", value: 155, isUnsigned: true)
!1190 = !DIEnumerator(name: "PAD6", value: 156, isUnsigned: true)
!1191 = !DIEnumerator(name: "PAD7", value: 157, isUnsigned: true)
!1192 = !DIEnumerator(name: "PAD8", value: 158, isUnsigned: true)
!1193 = !DIEnumerator(name: "PAD9", value: 159, isUnsigned: true)
!1194 = !DIEnumerator(name: "PADPERIOD", value: 199, isUnsigned: true)
!1195 = !DIEnumerator(name: "PADASTERKEY", value: 160, isUnsigned: true)
!1196 = !DIEnumerator(name: "PADSLASHKEY", value: 161, isUnsigned: true)
!1197 = !DIEnumerator(name: "PADMINUS", value: 162, isUnsigned: true)
!1198 = !DIEnumerator(name: "PADENTER", value: 163, isUnsigned: true)
!1199 = !DIEnumerator(name: "PADPLUSKEY", value: 164, isUnsigned: true)
!1200 = !DIEnumerator(name: "PAUSEKEY", value: 165, isUnsigned: true)
!1201 = !DIEnumerator(name: "INSERTKEY", value: 166, isUnsigned: true)
!1202 = !DIEnumerator(name: "HOMEKEY", value: 167, isUnsigned: true)
!1203 = !DIEnumerator(name: "PAGEUPKEY", value: 168, isUnsigned: true)
!1204 = !DIEnumerator(name: "PAGEDOWNKEY", value: 169, isUnsigned: true)
!1205 = !DIEnumerator(name: "ENDKEY", value: 170, isUnsigned: true)
!1206 = !DIEnumerator(name: "UNKNOWNKEY", value: 171, isUnsigned: true)
!1207 = !DIEnumerator(name: "OSKEY", value: 172, isUnsigned: true)
!1208 = !DIEnumerator(name: "GRLESSKEY", value: 173, isUnsigned: true)
!1209 = !DIEnumerator(name: "MEDIAPLAY", value: 174, isUnsigned: true)
!1210 = !DIEnumerator(name: "MEDIASTOP", value: 175, isUnsigned: true)
!1211 = !DIEnumerator(name: "MEDIAFIRST", value: 176, isUnsigned: true)
!1212 = !DIEnumerator(name: "MEDIALAST", value: 177, isUnsigned: true)
!1213 = !DIEnumerator(name: "F1KEY", value: 300, isUnsigned: true)
!1214 = !DIEnumerator(name: "F2KEY", value: 301, isUnsigned: true)
!1215 = !DIEnumerator(name: "F3KEY", value: 302, isUnsigned: true)
!1216 = !DIEnumerator(name: "F4KEY", value: 303, isUnsigned: true)
!1217 = !DIEnumerator(name: "F5KEY", value: 304, isUnsigned: true)
!1218 = !DIEnumerator(name: "F6KEY", value: 305, isUnsigned: true)
!1219 = !DIEnumerator(name: "F7KEY", value: 306, isUnsigned: true)
!1220 = !DIEnumerator(name: "F8KEY", value: 307, isUnsigned: true)
!1221 = !DIEnumerator(name: "F9KEY", value: 308, isUnsigned: true)
!1222 = !DIEnumerator(name: "F10KEY", value: 309, isUnsigned: true)
!1223 = !DIEnumerator(name: "F11KEY", value: 310, isUnsigned: true)
!1224 = !DIEnumerator(name: "F12KEY", value: 311, isUnsigned: true)
!1225 = !DIEnumerator(name: "F13KEY", value: 312, isUnsigned: true)
!1226 = !DIEnumerator(name: "F14KEY", value: 313, isUnsigned: true)
!1227 = !DIEnumerator(name: "F15KEY", value: 314, isUnsigned: true)
!1228 = !DIEnumerator(name: "F16KEY", value: 315, isUnsigned: true)
!1229 = !DIEnumerator(name: "F17KEY", value: 316, isUnsigned: true)
!1230 = !DIEnumerator(name: "F18KEY", value: 317, isUnsigned: true)
!1231 = !DIEnumerator(name: "F19KEY", value: 318, isUnsigned: true)
!1232 = !DIEnumerator(name: "NDOF_MOTION", value: 400, isUnsigned: true)
!1233 = !DIEnumerator(name: "NDOF_BUTTON_NONE", value: 400, isUnsigned: true)
!1234 = !DIEnumerator(name: "NDOF_BUTTON_MENU", value: 401, isUnsigned: true)
!1235 = !DIEnumerator(name: "NDOF_BUTTON_FIT", value: 402, isUnsigned: true)
!1236 = !DIEnumerator(name: "NDOF_BUTTON_TOP", value: 403, isUnsigned: true)
!1237 = !DIEnumerator(name: "NDOF_BUTTON_BOTTOM", value: 404, isUnsigned: true)
!1238 = !DIEnumerator(name: "NDOF_BUTTON_LEFT", value: 405, isUnsigned: true)
!1239 = !DIEnumerator(name: "NDOF_BUTTON_RIGHT", value: 406, isUnsigned: true)
!1240 = !DIEnumerator(name: "NDOF_BUTTON_FRONT", value: 407, isUnsigned: true)
!1241 = !DIEnumerator(name: "NDOF_BUTTON_BACK", value: 408, isUnsigned: true)
!1242 = !DIEnumerator(name: "NDOF_BUTTON_ISO1", value: 409, isUnsigned: true)
!1243 = !DIEnumerator(name: "NDOF_BUTTON_ISO2", value: 410, isUnsigned: true)
!1244 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CW", value: 411, isUnsigned: true)
!1245 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CCW", value: 412, isUnsigned: true)
!1246 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CW", value: 413, isUnsigned: true)
!1247 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CCW", value: 414, isUnsigned: true)
!1248 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CW", value: 415, isUnsigned: true)
!1249 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CCW", value: 416, isUnsigned: true)
!1250 = !DIEnumerator(name: "NDOF_BUTTON_ROTATE", value: 417, isUnsigned: true)
!1251 = !DIEnumerator(name: "NDOF_BUTTON_PANZOOM", value: 418, isUnsigned: true)
!1252 = !DIEnumerator(name: "NDOF_BUTTON_DOMINANT", value: 419, isUnsigned: true)
!1253 = !DIEnumerator(name: "NDOF_BUTTON_PLUS", value: 420, isUnsigned: true)
!1254 = !DIEnumerator(name: "NDOF_BUTTON_MINUS", value: 421, isUnsigned: true)
!1255 = !DIEnumerator(name: "NDOF_BUTTON_ESC", value: 422, isUnsigned: true)
!1256 = !DIEnumerator(name: "NDOF_BUTTON_ALT", value: 423, isUnsigned: true)
!1257 = !DIEnumerator(name: "NDOF_BUTTON_SHIFT", value: 424, isUnsigned: true)
!1258 = !DIEnumerator(name: "NDOF_BUTTON_CTRL", value: 425, isUnsigned: true)
!1259 = !DIEnumerator(name: "NDOF_BUTTON_1", value: 426, isUnsigned: true)
!1260 = !DIEnumerator(name: "NDOF_BUTTON_2", value: 427, isUnsigned: true)
!1261 = !DIEnumerator(name: "NDOF_BUTTON_3", value: 428, isUnsigned: true)
!1262 = !DIEnumerator(name: "NDOF_BUTTON_4", value: 429, isUnsigned: true)
!1263 = !DIEnumerator(name: "NDOF_BUTTON_5", value: 430, isUnsigned: true)
!1264 = !DIEnumerator(name: "NDOF_BUTTON_6", value: 431, isUnsigned: true)
!1265 = !DIEnumerator(name: "NDOF_BUTTON_7", value: 432, isUnsigned: true)
!1266 = !DIEnumerator(name: "NDOF_BUTTON_8", value: 433, isUnsigned: true)
!1267 = !DIEnumerator(name: "NDOF_BUTTON_9", value: 434, isUnsigned: true)
!1268 = !DIEnumerator(name: "NDOF_BUTTON_10", value: 435, isUnsigned: true)
!1269 = !DIEnumerator(name: "NDOF_BUTTON_A", value: 436, isUnsigned: true)
!1270 = !DIEnumerator(name: "NDOF_BUTTON_B", value: 437, isUnsigned: true)
!1271 = !DIEnumerator(name: "NDOF_BUTTON_C", value: 438, isUnsigned: true)
!1272 = !DIEnumerator(name: "NDOF_LAST", value: 439, isUnsigned: true)
!1273 = !DIEnumerator(name: "INPUTCHANGE", value: 259, isUnsigned: true)
!1274 = !DIEnumerator(name: "WINDEACTIVATE", value: 260, isUnsigned: true)
!1275 = !DIEnumerator(name: "TIMER", value: 272, isUnsigned: true)
!1276 = !DIEnumerator(name: "TIMER0", value: 273, isUnsigned: true)
!1277 = !DIEnumerator(name: "TIMER1", value: 274, isUnsigned: true)
!1278 = !DIEnumerator(name: "TIMER2", value: 275, isUnsigned: true)
!1279 = !DIEnumerator(name: "TIMERJOBS", value: 276, isUnsigned: true)
!1280 = !DIEnumerator(name: "TIMERAUTOSAVE", value: 277, isUnsigned: true)
!1281 = !DIEnumerator(name: "TIMERREPORT", value: 278, isUnsigned: true)
!1282 = !DIEnumerator(name: "TIMERREGION", value: 279, isUnsigned: true)
!1283 = !DIEnumerator(name: "TIMERF", value: 287, isUnsigned: true)
!1284 = !DIEnumerator(name: "EVT_ACTIONZONE_AREA", value: 20480, isUnsigned: true)
!1285 = !DIEnumerator(name: "EVT_ACTIONZONE_REGION", value: 20481, isUnsigned: true)
!1286 = !DIEnumerator(name: "EVT_ACTIONZONE_FULLSCREEN", value: 20482, isUnsigned: true)
!1287 = !DIEnumerator(name: "EVT_TWEAK_L", value: 20483, isUnsigned: true)
!1288 = !DIEnumerator(name: "EVT_TWEAK_M", value: 20484, isUnsigned: true)
!1289 = !DIEnumerator(name: "EVT_TWEAK_R", value: 20485, isUnsigned: true)
!1290 = !DIEnumerator(name: "EVT_TWEAK_A", value: 20486, isUnsigned: true)
!1291 = !DIEnumerator(name: "EVT_TWEAK_S", value: 20487, isUnsigned: true)
!1292 = !DIEnumerator(name: "EVT_GESTURE", value: 20496, isUnsigned: true)
!1293 = !DIEnumerator(name: "EVT_FILESELECT", value: 20512, isUnsigned: true)
!1294 = !DIEnumerator(name: "EVT_BUT_OPEN", value: 20513, isUnsigned: true)
!1295 = !DIEnumerator(name: "EVT_MODAL_MAP", value: 20514, isUnsigned: true)
!1296 = !DIEnumerator(name: "EVT_DROP", value: 20515, isUnsigned: true)
!1297 = !DIEnumerator(name: "EVT_BUT_CANCEL", value: 20516, isUnsigned: true)
!1298 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 552, baseType: !7, size: 32, elements: !1299)
!1299 = !{!1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311}
!1300 = !DIEnumerator(name: "BUT_GET_RNAPROP_IDENTIFIER", value: 1, isUnsigned: true)
!1301 = !DIEnumerator(name: "BUT_GET_RNASTRUCT_IDENTIFIER", value: 2, isUnsigned: true)
!1302 = !DIEnumerator(name: "BUT_GET_RNAENUM_IDENTIFIER", value: 3, isUnsigned: true)
!1303 = !DIEnumerator(name: "BUT_GET_LABEL", value: 4, isUnsigned: true)
!1304 = !DIEnumerator(name: "BUT_GET_RNA_LABEL", value: 5, isUnsigned: true)
!1305 = !DIEnumerator(name: "BUT_GET_RNAENUM_LABEL", value: 6, isUnsigned: true)
!1306 = !DIEnumerator(name: "BUT_GET_RNA_LABEL_CONTEXT", value: 7, isUnsigned: true)
!1307 = !DIEnumerator(name: "BUT_GET_TIP", value: 8, isUnsigned: true)
!1308 = !DIEnumerator(name: "BUT_GET_RNA_TIP", value: 9, isUnsigned: true)
!1309 = !DIEnumerator(name: "BUT_GET_RNAENUM_TIP", value: 10, isUnsigned: true)
!1310 = !DIEnumerator(name: "BUT_GET_OP_KEYMAP", value: 11, isUnsigned: true)
!1311 = !DIEnumerator(name: "BUT_GET_PROP_KEYMAP", value: 12, isUnsigned: true)
!1312 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1313, line: 46, baseType: !7, size: 32, elements: !1314)
!1313 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!1314 = !{!1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326}
!1315 = !DIEnumerator(name: "_ISupper", value: 256, isUnsigned: true)
!1316 = !DIEnumerator(name: "_ISlower", value: 512, isUnsigned: true)
!1317 = !DIEnumerator(name: "_ISalpha", value: 1024, isUnsigned: true)
!1318 = !DIEnumerator(name: "_ISdigit", value: 2048, isUnsigned: true)
!1319 = !DIEnumerator(name: "_ISxdigit", value: 4096, isUnsigned: true)
!1320 = !DIEnumerator(name: "_ISspace", value: 8192, isUnsigned: true)
!1321 = !DIEnumerator(name: "_ISprint", value: 16384, isUnsigned: true)
!1322 = !DIEnumerator(name: "_ISgraph", value: 32768, isUnsigned: true)
!1323 = !DIEnumerator(name: "_ISblank", value: 1, isUnsigned: true)
!1324 = !DIEnumerator(name: "_IScntrl", value: 2, isUnsigned: true)
!1325 = !DIEnumerator(name: "_ISpunct", value: 4, isUnsigned: true)
!1326 = !DIEnumerator(name: "_ISalnum", value: 8, isUnsigned: true)
!1327 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RadialDirection", file: !956, line: 126, baseType: !1067, size: 32, elements: !1328)
!1328 = !{!1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337}
!1329 = !DIEnumerator(name: "UI_RADIAL_NONE", value: -1)
!1330 = !DIEnumerator(name: "UI_RADIAL_N", value: 0)
!1331 = !DIEnumerator(name: "UI_RADIAL_NE", value: 1)
!1332 = !DIEnumerator(name: "UI_RADIAL_E", value: 2)
!1333 = !DIEnumerator(name: "UI_RADIAL_SE", value: 3)
!1334 = !DIEnumerator(name: "UI_RADIAL_S", value: 4)
!1335 = !DIEnumerator(name: "UI_RADIAL_SW", value: 5)
!1336 = !DIEnumerator(name: "UI_RADIAL_W", value: 6)
!1337 = !DIEnumerator(name: "UI_RADIAL_NW", value: 7)
!1338 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !70, line: 54, baseType: !7, size: 32, elements: !1339)
!1339 = !{!1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532}
!1340 = !DIEnumerator(name: "TH_REDALERT", value: 0, isUnsigned: true)
!1341 = !DIEnumerator(name: "TH_THEMEUI", value: 1, isUnsigned: true)
!1342 = !DIEnumerator(name: "TH_BACK", value: 2, isUnsigned: true)
!1343 = !DIEnumerator(name: "TH_TEXT", value: 3, isUnsigned: true)
!1344 = !DIEnumerator(name: "TH_TEXT_HI", value: 4, isUnsigned: true)
!1345 = !DIEnumerator(name: "TH_TITLE", value: 5, isUnsigned: true)
!1346 = !DIEnumerator(name: "TH_TAB_ACTIVE", value: 6, isUnsigned: true)
!1347 = !DIEnumerator(name: "TH_TAB_INACTIVE", value: 7, isUnsigned: true)
!1348 = !DIEnumerator(name: "TH_TAB_BACK", value: 8, isUnsigned: true)
!1349 = !DIEnumerator(name: "TH_TAB_OUTLINE", value: 9, isUnsigned: true)
!1350 = !DIEnumerator(name: "TH_HEADER", value: 10, isUnsigned: true)
!1351 = !DIEnumerator(name: "TH_HEADERDESEL", value: 11, isUnsigned: true)
!1352 = !DIEnumerator(name: "TH_HEADER_TEXT", value: 12, isUnsigned: true)
!1353 = !DIEnumerator(name: "TH_HEADER_TEXT_HI", value: 13, isUnsigned: true)
!1354 = !DIEnumerator(name: "TH_PANEL_HEADER", value: 14, isUnsigned: true)
!1355 = !DIEnumerator(name: "TH_PANEL_BACK", value: 15, isUnsigned: true)
!1356 = !DIEnumerator(name: "TH_PANEL_SHOW_HEADER", value: 16, isUnsigned: true)
!1357 = !DIEnumerator(name: "TH_PANEL_SHOW_BACK", value: 17, isUnsigned: true)
!1358 = !DIEnumerator(name: "TH_BUTBACK", value: 18, isUnsigned: true)
!1359 = !DIEnumerator(name: "TH_BUTBACK_TEXT", value: 19, isUnsigned: true)
!1360 = !DIEnumerator(name: "TH_BUTBACK_TEXT_HI", value: 20, isUnsigned: true)
!1361 = !DIEnumerator(name: "TH_SHADE1", value: 21, isUnsigned: true)
!1362 = !DIEnumerator(name: "TH_SHADE2", value: 22, isUnsigned: true)
!1363 = !DIEnumerator(name: "TH_HILITE", value: 23, isUnsigned: true)
!1364 = !DIEnumerator(name: "TH_GRID", value: 24, isUnsigned: true)
!1365 = !DIEnumerator(name: "TH_WIRE", value: 25, isUnsigned: true)
!1366 = !DIEnumerator(name: "TH_WIRE_INNER", value: 26, isUnsigned: true)
!1367 = !DIEnumerator(name: "TH_WIRE_EDIT", value: 27, isUnsigned: true)
!1368 = !DIEnumerator(name: "TH_SELECT", value: 28, isUnsigned: true)
!1369 = !DIEnumerator(name: "TH_ACTIVE", value: 29, isUnsigned: true)
!1370 = !DIEnumerator(name: "TH_GROUP", value: 30, isUnsigned: true)
!1371 = !DIEnumerator(name: "TH_GROUP_ACTIVE", value: 31, isUnsigned: true)
!1372 = !DIEnumerator(name: "TH_TRANSFORM", value: 32, isUnsigned: true)
!1373 = !DIEnumerator(name: "TH_VERTEX", value: 33, isUnsigned: true)
!1374 = !DIEnumerator(name: "TH_VERTEX_SELECT", value: 34, isUnsigned: true)
!1375 = !DIEnumerator(name: "TH_VERTEX_UNREFERENCED", value: 35, isUnsigned: true)
!1376 = !DIEnumerator(name: "TH_VERTEX_SIZE", value: 36, isUnsigned: true)
!1377 = !DIEnumerator(name: "TH_OUTLINE_WIDTH", value: 37, isUnsigned: true)
!1378 = !DIEnumerator(name: "TH_EDGE", value: 38, isUnsigned: true)
!1379 = !DIEnumerator(name: "TH_EDGE_SELECT", value: 39, isUnsigned: true)
!1380 = !DIEnumerator(name: "TH_EDGE_SEAM", value: 40, isUnsigned: true)
!1381 = !DIEnumerator(name: "TH_EDGE_FACESEL", value: 41, isUnsigned: true)
!1382 = !DIEnumerator(name: "TH_FACE", value: 42, isUnsigned: true)
!1383 = !DIEnumerator(name: "TH_FACE_SELECT", value: 43, isUnsigned: true)
!1384 = !DIEnumerator(name: "TH_NORMAL", value: 44, isUnsigned: true)
!1385 = !DIEnumerator(name: "TH_VNORMAL", value: 45, isUnsigned: true)
!1386 = !DIEnumerator(name: "TH_LNORMAL", value: 46, isUnsigned: true)
!1387 = !DIEnumerator(name: "TH_FACE_DOT", value: 47, isUnsigned: true)
!1388 = !DIEnumerator(name: "TH_FACEDOT_SIZE", value: 48, isUnsigned: true)
!1389 = !DIEnumerator(name: "TH_CFRAME", value: 49, isUnsigned: true)
!1390 = !DIEnumerator(name: "TH_NURB_ULINE", value: 50, isUnsigned: true)
!1391 = !DIEnumerator(name: "TH_NURB_VLINE", value: 51, isUnsigned: true)
!1392 = !DIEnumerator(name: "TH_NURB_SEL_ULINE", value: 52, isUnsigned: true)
!1393 = !DIEnumerator(name: "TH_NURB_SEL_VLINE", value: 53, isUnsigned: true)
!1394 = !DIEnumerator(name: "TH_HANDLE_FREE", value: 54, isUnsigned: true)
!1395 = !DIEnumerator(name: "TH_HANDLE_AUTO", value: 55, isUnsigned: true)
!1396 = !DIEnumerator(name: "TH_HANDLE_VECT", value: 56, isUnsigned: true)
!1397 = !DIEnumerator(name: "TH_HANDLE_ALIGN", value: 57, isUnsigned: true)
!1398 = !DIEnumerator(name: "TH_HANDLE_AUTOCLAMP", value: 58, isUnsigned: true)
!1399 = !DIEnumerator(name: "TH_HANDLE_SEL_FREE", value: 59, isUnsigned: true)
!1400 = !DIEnumerator(name: "TH_HANDLE_SEL_AUTO", value: 60, isUnsigned: true)
!1401 = !DIEnumerator(name: "TH_HANDLE_SEL_VECT", value: 61, isUnsigned: true)
!1402 = !DIEnumerator(name: "TH_HANDLE_SEL_ALIGN", value: 62, isUnsigned: true)
!1403 = !DIEnumerator(name: "TH_HANDLE_SEL_AUTOCLAMP", value: 63, isUnsigned: true)
!1404 = !DIEnumerator(name: "TH_ACTIVE_SPLINE", value: 64, isUnsigned: true)
!1405 = !DIEnumerator(name: "TH_ACTIVE_VERT", value: 65, isUnsigned: true)
!1406 = !DIEnumerator(name: "TH_SYNTAX_B", value: 66, isUnsigned: true)
!1407 = !DIEnumerator(name: "TH_SYNTAX_V", value: 67, isUnsigned: true)
!1408 = !DIEnumerator(name: "TH_SYNTAX_R", value: 68, isUnsigned: true)
!1409 = !DIEnumerator(name: "TH_SYNTAX_C", value: 69, isUnsigned: true)
!1410 = !DIEnumerator(name: "TH_SYNTAX_L", value: 70, isUnsigned: true)
!1411 = !DIEnumerator(name: "TH_SYNTAX_D", value: 71, isUnsigned: true)
!1412 = !DIEnumerator(name: "TH_SYNTAX_N", value: 72, isUnsigned: true)
!1413 = !DIEnumerator(name: "TH_SYNTAX_S", value: 73, isUnsigned: true)
!1414 = !DIEnumerator(name: "TH_BONE_SOLID", value: 74, isUnsigned: true)
!1415 = !DIEnumerator(name: "TH_BONE_POSE", value: 75, isUnsigned: true)
!1416 = !DIEnumerator(name: "TH_BONE_POSE_ACTIVE", value: 76, isUnsigned: true)
!1417 = !DIEnumerator(name: "TH_STRIP", value: 77, isUnsigned: true)
!1418 = !DIEnumerator(name: "TH_STRIP_SELECT", value: 78, isUnsigned: true)
!1419 = !DIEnumerator(name: "TH_KEYTYPE_KEYFRAME", value: 79, isUnsigned: true)
!1420 = !DIEnumerator(name: "TH_KEYTYPE_KEYFRAME_SELECT", value: 80, isUnsigned: true)
!1421 = !DIEnumerator(name: "TH_KEYTYPE_EXTREME", value: 81, isUnsigned: true)
!1422 = !DIEnumerator(name: "TH_KEYTYPE_EXTREME_SELECT", value: 82, isUnsigned: true)
!1423 = !DIEnumerator(name: "TH_KEYTYPE_BREAKDOWN", value: 83, isUnsigned: true)
!1424 = !DIEnumerator(name: "TH_KEYTYPE_BREAKDOWN_SELECT", value: 84, isUnsigned: true)
!1425 = !DIEnumerator(name: "TH_KEYTYPE_JITTER", value: 85, isUnsigned: true)
!1426 = !DIEnumerator(name: "TH_KEYTYPE_JITTER_SELECT", value: 86, isUnsigned: true)
!1427 = !DIEnumerator(name: "TH_KEYBORDER", value: 87, isUnsigned: true)
!1428 = !DIEnumerator(name: "TH_KEYBORDER_SELECT", value: 88, isUnsigned: true)
!1429 = !DIEnumerator(name: "TH_LAMP", value: 89, isUnsigned: true)
!1430 = !DIEnumerator(name: "TH_SPEAKER", value: 90, isUnsigned: true)
!1431 = !DIEnumerator(name: "TH_CAMERA", value: 91, isUnsigned: true)
!1432 = !DIEnumerator(name: "TH_EMPTY", value: 92, isUnsigned: true)
!1433 = !DIEnumerator(name: "TH_NODE", value: 93, isUnsigned: true)
!1434 = !DIEnumerator(name: "TH_NODE_INPUT", value: 94, isUnsigned: true)
!1435 = !DIEnumerator(name: "TH_NODE_OUTPUT", value: 95, isUnsigned: true)
!1436 = !DIEnumerator(name: "TH_NODE_COLOR", value: 96, isUnsigned: true)
!1437 = !DIEnumerator(name: "TH_NODE_FILTER", value: 97, isUnsigned: true)
!1438 = !DIEnumerator(name: "TH_NODE_VECTOR", value: 98, isUnsigned: true)
!1439 = !DIEnumerator(name: "TH_NODE_TEXTURE", value: 99, isUnsigned: true)
!1440 = !DIEnumerator(name: "TH_NODE_PATTERN", value: 100, isUnsigned: true)
!1441 = !DIEnumerator(name: "TH_NODE_SCRIPT", value: 101, isUnsigned: true)
!1442 = !DIEnumerator(name: "TH_NODE_LAYOUT", value: 102, isUnsigned: true)
!1443 = !DIEnumerator(name: "TH_NODE_SHADER", value: 103, isUnsigned: true)
!1444 = !DIEnumerator(name: "TH_NODE_INTERFACE", value: 104, isUnsigned: true)
!1445 = !DIEnumerator(name: "TH_NODE_CONVERTOR", value: 105, isUnsigned: true)
!1446 = !DIEnumerator(name: "TH_NODE_GROUP", value: 106, isUnsigned: true)
!1447 = !DIEnumerator(name: "TH_NODE_FRAME", value: 107, isUnsigned: true)
!1448 = !DIEnumerator(name: "TH_NODE_MATTE", value: 108, isUnsigned: true)
!1449 = !DIEnumerator(name: "TH_NODE_DISTORT", value: 109, isUnsigned: true)
!1450 = !DIEnumerator(name: "TH_CONSOLE_OUTPUT", value: 110, isUnsigned: true)
!1451 = !DIEnumerator(name: "TH_CONSOLE_INPUT", value: 111, isUnsigned: true)
!1452 = !DIEnumerator(name: "TH_CONSOLE_INFO", value: 112, isUnsigned: true)
!1453 = !DIEnumerator(name: "TH_CONSOLE_ERROR", value: 113, isUnsigned: true)
!1454 = !DIEnumerator(name: "TH_CONSOLE_CURSOR", value: 114, isUnsigned: true)
!1455 = !DIEnumerator(name: "TH_CONSOLE_SELECT", value: 115, isUnsigned: true)
!1456 = !DIEnumerator(name: "TH_SEQ_MOVIE", value: 116, isUnsigned: true)
!1457 = !DIEnumerator(name: "TH_SEQ_MOVIECLIP", value: 117, isUnsigned: true)
!1458 = !DIEnumerator(name: "TH_SEQ_MASK", value: 118, isUnsigned: true)
!1459 = !DIEnumerator(name: "TH_SEQ_IMAGE", value: 119, isUnsigned: true)
!1460 = !DIEnumerator(name: "TH_SEQ_SCENE", value: 120, isUnsigned: true)
!1461 = !DIEnumerator(name: "TH_SEQ_AUDIO", value: 121, isUnsigned: true)
!1462 = !DIEnumerator(name: "TH_SEQ_EFFECT", value: 122, isUnsigned: true)
!1463 = !DIEnumerator(name: "TH_SEQ_TRANSITION", value: 123, isUnsigned: true)
!1464 = !DIEnumerator(name: "TH_SEQ_META", value: 124, isUnsigned: true)
!1465 = !DIEnumerator(name: "TH_SEQ_PREVIEW", value: 125, isUnsigned: true)
!1466 = !DIEnumerator(name: "TH_EDGE_SHARP", value: 126, isUnsigned: true)
!1467 = !DIEnumerator(name: "TH_EDITMESH_ACTIVE", value: 127, isUnsigned: true)
!1468 = !DIEnumerator(name: "TH_HANDLE_VERTEX", value: 128, isUnsigned: true)
!1469 = !DIEnumerator(name: "TH_HANDLE_VERTEX_SELECT", value: 129, isUnsigned: true)
!1470 = !DIEnumerator(name: "TH_HANDLE_VERTEX_SIZE", value: 130, isUnsigned: true)
!1471 = !DIEnumerator(name: "TH_DOPESHEET_CHANNELOB", value: 131, isUnsigned: true)
!1472 = !DIEnumerator(name: "TH_DOPESHEET_CHANNELSUBOB", value: 132, isUnsigned: true)
!1473 = !DIEnumerator(name: "TH_PREVIEW_BACK", value: 133, isUnsigned: true)
!1474 = !DIEnumerator(name: "TH_EDGE_CREASE", value: 134, isUnsigned: true)
!1475 = !DIEnumerator(name: "TH_DRAWEXTRA_EDGELEN", value: 135, isUnsigned: true)
!1476 = !DIEnumerator(name: "TH_DRAWEXTRA_EDGEANG", value: 136, isUnsigned: true)
!1477 = !DIEnumerator(name: "TH_DRAWEXTRA_FACEAREA", value: 137, isUnsigned: true)
!1478 = !DIEnumerator(name: "TH_DRAWEXTRA_FACEANG", value: 138, isUnsigned: true)
!1479 = !DIEnumerator(name: "TH_NODE_CURVING", value: 139, isUnsigned: true)
!1480 = !DIEnumerator(name: "TH_MARKER_OUTLINE", value: 140, isUnsigned: true)
!1481 = !DIEnumerator(name: "TH_MARKER", value: 141, isUnsigned: true)
!1482 = !DIEnumerator(name: "TH_ACT_MARKER", value: 142, isUnsigned: true)
!1483 = !DIEnumerator(name: "TH_SEL_MARKER", value: 143, isUnsigned: true)
!1484 = !DIEnumerator(name: "TH_BUNDLE_SOLID", value: 144, isUnsigned: true)
!1485 = !DIEnumerator(name: "TH_DIS_MARKER", value: 145, isUnsigned: true)
!1486 = !DIEnumerator(name: "TH_PATH_BEFORE", value: 146, isUnsigned: true)
!1487 = !DIEnumerator(name: "TH_PATH_AFTER", value: 147, isUnsigned: true)
!1488 = !DIEnumerator(name: "TH_CAMERA_PATH", value: 148, isUnsigned: true)
!1489 = !DIEnumerator(name: "TH_LOCK_MARKER", value: 149, isUnsigned: true)
!1490 = !DIEnumerator(name: "TH_STITCH_PREVIEW_FACE", value: 150, isUnsigned: true)
!1491 = !DIEnumerator(name: "TH_STITCH_PREVIEW_EDGE", value: 151, isUnsigned: true)
!1492 = !DIEnumerator(name: "TH_STITCH_PREVIEW_VERT", value: 152, isUnsigned: true)
!1493 = !DIEnumerator(name: "TH_STITCH_PREVIEW_STITCHABLE", value: 153, isUnsigned: true)
!1494 = !DIEnumerator(name: "TH_STITCH_PREVIEW_UNSTITCHABLE", value: 154, isUnsigned: true)
!1495 = !DIEnumerator(name: "TH_STITCH_PREVIEW_ACTIVE", value: 155, isUnsigned: true)
!1496 = !DIEnumerator(name: "TH_PAINT_CURVE_HANDLE", value: 156, isUnsigned: true)
!1497 = !DIEnumerator(name: "TH_PAINT_CURVE_PIVOT", value: 157, isUnsigned: true)
!1498 = !DIEnumerator(name: "TH_UV_SHADOW", value: 158, isUnsigned: true)
!1499 = !DIEnumerator(name: "TH_UV_OTHERS", value: 159, isUnsigned: true)
!1500 = !DIEnumerator(name: "TH_FREESTYLE_EDGE_MARK", value: 160, isUnsigned: true)
!1501 = !DIEnumerator(name: "TH_FREESTYLE_FACE_MARK", value: 161, isUnsigned: true)
!1502 = !DIEnumerator(name: "TH_MATCH", value: 162, isUnsigned: true)
!1503 = !DIEnumerator(name: "TH_SELECT_HIGHLIGHT", value: 163, isUnsigned: true)
!1504 = !DIEnumerator(name: "TH_SKIN_ROOT", value: 164, isUnsigned: true)
!1505 = !DIEnumerator(name: "TH_ANIM_ACTIVE", value: 165, isUnsigned: true)
!1506 = !DIEnumerator(name: "TH_ANIM_INACTIVE", value: 166, isUnsigned: true)
!1507 = !DIEnumerator(name: "TH_NLA_TWEAK", value: 167, isUnsigned: true)
!1508 = !DIEnumerator(name: "TH_NLA_TWEAK_DUPLI", value: 168, isUnsigned: true)
!1509 = !DIEnumerator(name: "TH_NLA_TRANSITION", value: 169, isUnsigned: true)
!1510 = !DIEnumerator(name: "TH_NLA_TRANSITION_SEL", value: 170, isUnsigned: true)
!1511 = !DIEnumerator(name: "TH_NLA_META", value: 171, isUnsigned: true)
!1512 = !DIEnumerator(name: "TH_NLA_META_SEL", value: 172, isUnsigned: true)
!1513 = !DIEnumerator(name: "TH_NLA_SOUND", value: 173, isUnsigned: true)
!1514 = !DIEnumerator(name: "TH_NLA_SOUND_SEL", value: 174, isUnsigned: true)
!1515 = !DIEnumerator(name: "TH_EMBOSS", value: 175, isUnsigned: true)
!1516 = !DIEnumerator(name: "TH_AXIS_X", value: 176, isUnsigned: true)
!1517 = !DIEnumerator(name: "TH_AXIS_Y", value: 177, isUnsigned: true)
!1518 = !DIEnumerator(name: "TH_AXIS_Z", value: 178, isUnsigned: true)
!1519 = !DIEnumerator(name: "TH_LOW_GRAD", value: 179, isUnsigned: true)
!1520 = !DIEnumerator(name: "TH_HIGH_GRAD", value: 180, isUnsigned: true)
!1521 = !DIEnumerator(name: "TH_SHOW_BACK_GRAD", value: 181, isUnsigned: true)
!1522 = !DIEnumerator(name: "TH_INFO_SELECTED", value: 182, isUnsigned: true)
!1523 = !DIEnumerator(name: "TH_INFO_SELECTED_TEXT", value: 183, isUnsigned: true)
!1524 = !DIEnumerator(name: "TH_INFO_ERROR", value: 184, isUnsigned: true)
!1525 = !DIEnumerator(name: "TH_INFO_ERROR_TEXT", value: 185, isUnsigned: true)
!1526 = !DIEnumerator(name: "TH_INFO_WARNING", value: 186, isUnsigned: true)
!1527 = !DIEnumerator(name: "TH_INFO_WARNING_TEXT", value: 187, isUnsigned: true)
!1528 = !DIEnumerator(name: "TH_INFO_INFO", value: 188, isUnsigned: true)
!1529 = !DIEnumerator(name: "TH_INFO_INFO_TEXT", value: 189, isUnsigned: true)
!1530 = !DIEnumerator(name: "TH_INFO_DEBUG", value: 190, isUnsigned: true)
!1531 = !DIEnumerator(name: "TH_INFO_DEBUG_TEXT", value: 191, isUnsigned: true)
!1532 = !DIEnumerator(name: "TH_VIEW_OVERLAY", value: 192, isUnsigned: true)
!1533 = !{!1534, !1067, !1535, !1536, !1540, !1541, !1543, !1542, !1544, !1546, !1545, !1547, !1550, !1551, !1552, !1558, !3259, !3245, !3260}
!1534 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !1538, line: 69, baseType: !1539)
!1538 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1539 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !965, line: 44, flags: DIFlagFwdDecl)
!1540 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!1545 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1548, line: 46, baseType: !1549)
!1548 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!1549 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1550 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1551 = !DIDerivedType(tag: DW_TAG_typedef, name: "BIFIconID", file: !70, line: 44, baseType: !69)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiStringInfo", file: !6, line: 570, baseType: !1554)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiStringInfo", file: !6, line: 567, size: 128, elements: !1555)
!1555 = !{!1556, !1557}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1554, file: !6, line: 568, baseType: !1067, size: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "strinfo", scope: !1554, file: !6, line: 569, baseType: !1541, size: 64, offset: 64)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 64)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBut", file: !6, line: 82, baseType: !1560)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiBut", file: !956, line: 195, size: 8000, elements: !1561)
!1561 = !{!1562, !1564, !1565, !1566, !1567, !1569, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1585, !1589, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1609, !1615, !1616, !1617, !1619, !1620, !1634, !1639, !1640, !1652, !1653, !1658, !1659, !1660, !1675, !1679, !1680, !1681, !1682, !1683, !1684, !1686, !1687, !1688, !1689, !1690, !3227, !3232, !3233, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3247, !3248, !3251, !3252, !3253, !3255, !3256, !3257, !3258}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1560, file: !956, line: 196, baseType: !1563, size: 64)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1560, file: !956, line: 196, baseType: !1563, size: 64, offset: 64)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1560, file: !956, line: 197, baseType: !1067, size: 32, offset: 128)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !1560, file: !956, line: 197, baseType: !1067, size: 32, offset: 160)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1560, file: !956, line: 198, baseType: !1568, size: 32, offset: 192)
!1568 = !DIDerivedType(tag: DW_TAG_typedef, name: "eButType", file: !6, line: 282, baseType: !16)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "pointype", scope: !1560, file: !956, line: 199, baseType: !1570, size: 32, offset: 224)
!1570 = !DIDerivedType(tag: DW_TAG_typedef, name: "eButPointerType", file: !6, line: 230, baseType: !62)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1560, file: !956, line: 200, baseType: !1545, size: 16, offset: 256)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "bitnr", scope: !1560, file: !956, line: 200, baseType: !1545, size: 16, offset: 272)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !1560, file: !956, line: 200, baseType: !1545, size: 16, offset: 288)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "strwidth", scope: !1560, file: !956, line: 200, baseType: !1545, size: 16, offset: 304)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "alignnr", scope: !1560, file: !956, line: 200, baseType: !1545, size: 16, offset: 320)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !1560, file: !956, line: 201, baseType: !1545, size: 16, offset: 336)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1560, file: !956, line: 201, baseType: !1545, size: 16, offset: 352)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "selsta", scope: !1560, file: !956, line: 201, baseType: !1545, size: 16, offset: 368)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !1560, file: !956, line: 201, baseType: !1545, size: 16, offset: 384)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1560, file: !956, line: 203, baseType: !1541, size: 64, offset: 448)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "strdata", scope: !1560, file: !956, line: 204, baseType: !1582, size: 1024, offset: 512)
!1582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1542, size: 1024, elements: !1583)
!1583 = !{!1584}
!1584 = !DISubrange(count: 128)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "drawstr", scope: !1560, file: !956, line: 205, baseType: !1586, size: 3200, offset: 1536)
!1586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1542, size: 3200, elements: !1587)
!1587 = !{!1588}
!1588 = !DISubrange(count: 400)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1560, file: !956, line: 207, baseType: !1590, size: 128, offset: 4736)
!1590 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1591, line: 95, baseType: !1592)
!1591 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1591, line: 92, size: 128, elements: !1593)
!1593 = !{!1594, !1595, !1596, !1597}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1592, file: !1591, line: 93, baseType: !1534, size: 32)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1592, file: !1591, line: 93, baseType: !1534, size: 32, offset: 32)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1592, file: !1591, line: 94, baseType: !1534, size: 32, offset: 64)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1592, file: !1591, line: 94, baseType: !1534, size: 32, offset: 96)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "poin", scope: !1560, file: !956, line: 209, baseType: !1541, size: 64, offset: 4864)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "hardmin", scope: !1560, file: !956, line: 210, baseType: !1534, size: 32, offset: 4928)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "hardmax", scope: !1560, file: !956, line: 210, baseType: !1534, size: 32, offset: 4960)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "softmin", scope: !1560, file: !956, line: 210, baseType: !1534, size: 32, offset: 4992)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "softmax", scope: !1560, file: !956, line: 210, baseType: !1534, size: 32, offset: 5024)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !1560, file: !956, line: 222, baseType: !1534, size: 32, offset: 5056)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !1560, file: !956, line: 230, baseType: !1534, size: 32, offset: 5088)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1560, file: !956, line: 232, baseType: !1606, size: 32, offset: 5120)
!1606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1550, size: 32, elements: !1607)
!1607 = !{!1608}
!1608 = !DISubrange(count: 4)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1560, file: !956, line: 234, baseType: !1610, size: 64, offset: 5184)
!1610 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButHandleFunc", file: !6, line: 336, baseType: !1611)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64)
!1612 = !DISubroutineType(types: !1613)
!1613 = !{null, !1614, !1535, !1535}
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "func_arg1", scope: !1560, file: !956, line: 235, baseType: !1535, size: 64, offset: 5248)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "func_arg2", scope: !1560, file: !956, line: 236, baseType: !1535, size: 64, offset: 5312)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "funcN", scope: !1560, file: !956, line: 238, baseType: !1618, size: 64, offset: 5376)
!1618 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButHandleNFunc", file: !6, line: 338, baseType: !1611)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "func_argN", scope: !1560, file: !956, line: 239, baseType: !1535, size: 64, offset: 5440)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1560, file: !956, line: 241, baseType: !1621, size: 64, offset: 5504)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bContextStore", file: !1538, line: 84, size: 320, elements: !1623)
!1623 = !{!1624, !1625, !1626, !1633}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1622, file: !1538, line: 85, baseType: !1621, size: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1622, file: !1538, line: 85, baseType: !1621, size: 64, offset: 64)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1622, file: !1538, line: 87, baseType: !1627, size: 128, offset: 128)
!1627 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !1628, line: 71, baseType: !1629)
!1628 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !1628, line: 69, size: 128, elements: !1630)
!1630 = !{!1631, !1632}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1629, file: !1628, line: 70, baseType: !1535, size: 64)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1629, file: !1628, line: 70, baseType: !1535, size: 64, offset: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1622, file: !1538, line: 88, baseType: !1550, size: 8, offset: 256)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "autocomplete_func", scope: !1560, file: !956, line: 243, baseType: !1635, size: 64, offset: 5568)
!1635 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButCompleteFunc", file: !6, line: 339, baseType: !1636)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 64)
!1637 = !DISubroutineType(types: !1638)
!1638 = !{!1067, !1614, !1541, !1535}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "autofunc_arg", scope: !1560, file: !956, line: 244, baseType: !1535, size: 64, offset: 5632)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "search_func", scope: !1560, file: !956, line: 246, baseType: !1641, size: 64, offset: 5696)
!1641 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButSearchFunc", file: !6, line: 340, baseType: !1642)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = !DISubroutineType(types: !1644)
!1644 = !{null, !1645, !1535, !1647, !1649}
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64)
!1646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1539)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1542)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64)
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiSearchItems", file: !6, line: 334, baseType: !1651)
!1651 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiSearchItems", file: !6, line: 334, flags: DIFlagFwdDecl)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "search_arg", scope: !1560, file: !956, line: 247, baseType: !1535, size: 64, offset: 5760)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "rename_func", scope: !1560, file: !956, line: 249, baseType: !1654, size: 64, offset: 5824)
!1654 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButHandleRenameFunc", file: !6, line: 337, baseType: !1655)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64)
!1656 = !DISubroutineType(types: !1657)
!1657 = !{null, !1614, !1535, !1541}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "rename_arg1", scope: !1560, file: !956, line: 250, baseType: !1535, size: 64, offset: 5888)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "rename_orig", scope: !1560, file: !956, line: 251, baseType: !1535, size: 64, offset: 5952)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1560, file: !956, line: 253, baseType: !1661, size: 64, offset: 6016)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64)
!1662 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiLink", file: !956, line: 193, baseType: !1663)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !956, line: 184, size: 384, elements: !1664)
!1664 = !{!1665, !1667, !1669, !1670, !1671, !1672, !1673, !1674}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "poin", scope: !1663, file: !956, line: 185, baseType: !1666, size: 64)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "ppoin", scope: !1663, file: !956, line: 186, baseType: !1668, size: 64, offset: 64)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "totlink", scope: !1663, file: !956, line: 187, baseType: !1544, size: 64, offset: 128)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "maxlink", scope: !1663, file: !956, line: 189, baseType: !1545, size: 16, offset: 192)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1663, file: !956, line: 189, baseType: !1545, size: 16, offset: 208)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "fromcode", scope: !1663, file: !956, line: 190, baseType: !1545, size: 16, offset: 224)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "tocode", scope: !1663, file: !956, line: 190, baseType: !1545, size: 16, offset: 240)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !1663, file: !956, line: 192, baseType: !1627, size: 128, offset: 256)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "linkto", scope: !1560, file: !956, line: 254, baseType: !1676, size: 32, offset: 6080)
!1676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1545, size: 32, elements: !1677)
!1677 = !{!1678}
!1678 = !DISubrange(count: 2)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "tip", scope: !1560, file: !956, line: 256, baseType: !1647, size: 64, offset: 6144)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "lockstr", scope: !1560, file: !956, line: 256, baseType: !1647, size: 64, offset: 6208)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !1560, file: !956, line: 258, baseType: !1551, size: 32, offset: 6272)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1560, file: !956, line: 259, baseType: !1550, size: 8, offset: 6304)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !1560, file: !956, line: 260, baseType: !1542, size: 8, offset: 6312)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "pie_dir", scope: !1560, file: !956, line: 261, baseType: !1685, size: 8, offset: 6320)
!1685 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1560, file: !956, line: 262, baseType: !1542, size: 8, offset: 6328)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "unit_type", scope: !1560, file: !956, line: 263, baseType: !1550, size: 8, offset: 6336)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "modifier_key", scope: !1560, file: !956, line: 264, baseType: !1545, size: 16, offset: 6352)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "iconadd", scope: !1560, file: !956, line: 265, baseType: !1545, size: 16, offset: 6368)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "block_create_func", scope: !1560, file: !956, line: 268, baseType: !1691, size: 64, offset: 6400)
!1691 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBlockCreateFunc", file: !6, line: 380, baseType: !1692)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 64)
!1693 = !DISubroutineType(types: !1694)
!1694 = !{!1695, !1614, !1916, !1535}
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64)
!1696 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBlock", file: !6, line: 83, baseType: !1697)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !956, line: 320, size: 5440, elements: !1698)
!1698 = !{!1699, !1700, !1701, !1702, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1819, !1820, !1822, !1823, !1873, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !3209, !3210, !3211, !3213, !3214, !3215, !3216}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1697, file: !956, line: 321, baseType: !1695, size: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1697, file: !956, line: 321, baseType: !1695, size: 64, offset: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "buttons", scope: !1697, file: !956, line: 323, baseType: !1627, size: 128, offset: 128)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "panel", scope: !1697, file: !956, line: 324, baseType: !1703, size: 64, offset: 256)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 64)
!1704 = !DIDerivedType(tag: DW_TAG_typedef, name: "Panel", file: !1705, line: 113, baseType: !1706)
!1705 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Panel", file: !1705, line: 97, size: 2176, elements: !1707)
!1707 = !{!1708, !1710, !1711, !1778, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1706, file: !1705, line: 98, baseType: !1709, size: 64)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1706, file: !1705, line: 98, baseType: !1709, size: 64, offset: 64)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1706, file: !1705, line: 100, baseType: !1712, size: 64, offset: 128)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PanelType", file: !1714, line: 169, size: 3264, elements: !1715)
!1714 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_screen.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1715 = !{!1716, !1717, !1718, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1733, !1737, !1738}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1713, file: !1714, line: 170, baseType: !1712, size: 64)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1713, file: !1714, line: 170, baseType: !1712, size: 64, offset: 64)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1713, file: !1714, line: 172, baseType: !1719, size: 512, offset: 128)
!1719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1542, size: 512, elements: !1720)
!1720 = !{!1721}
!1721 = !DISubrange(count: 64)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1713, file: !1714, line: 173, baseType: !1719, size: 512, offset: 640)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !1713, file: !1714, line: 174, baseType: !1719, size: 512, offset: 1152)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1713, file: !1714, line: 175, baseType: !1719, size: 512, offset: 1664)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1713, file: !1714, line: 176, baseType: !1719, size: 512, offset: 2176)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "space_type", scope: !1713, file: !1714, line: 177, baseType: !1067, size: 32, offset: 2688)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "region_type", scope: !1713, file: !1714, line: 178, baseType: !1067, size: 32, offset: 2720)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1713, file: !1714, line: 180, baseType: !1067, size: 32, offset: 2752)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1713, file: !1714, line: 183, baseType: !1730, size: 64, offset: 2816)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1731 = !DISubroutineType(types: !1732)
!1732 = !{!1067, !1645, !1712}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "draw_header", scope: !1713, file: !1714, line: 185, baseType: !1734, size: 64, offset: 2880)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!1735 = !DISubroutineType(types: !1736)
!1736 = !{null, !1645, !1709}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !1713, file: !1714, line: 187, baseType: !1734, size: 64, offset: 2944)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !1713, file: !1714, line: 190, baseType: !1739, size: 256, offset: 3008)
!1739 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !965, line: 436, baseType: !1740)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !965, line: 430, size: 256, elements: !1741)
!1741 = !{!1742, !1743, !1747, !1773}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1740, file: !965, line: 431, baseType: !1535, size: 64)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !1740, file: !965, line: 432, baseType: !1744, size: 64, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 64)
!1745 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !965, line: 417, baseType: !1746)
!1746 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !965, line: 41, flags: DIFlagFwdDecl)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !1740, file: !965, line: 433, baseType: !1748, size: 64, offset: 128)
!1748 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !965, line: 408, baseType: !1749)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 64)
!1750 = !DISubroutineType(types: !1751)
!1751 = !{!1067, !1614, !1752, !1762, !1764}
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 64)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !965, line: 55, size: 192, elements: !1754)
!1754 = !{!1755, !1759, !1761}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1753, file: !965, line: 58, baseType: !1756, size: 64)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !965, line: 56, size: 64, elements: !1757)
!1757 = !{!1758}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1756, file: !965, line: 57, baseType: !1535, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1753, file: !965, line: 60, baseType: !1760, size: 64, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1753, file: !965, line: 61, baseType: !1535, size: 64, offset: 128)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64)
!1763 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !965, line: 38, flags: DIFlagFwdDecl)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64)
!1765 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !965, line: 348, baseType: !1766)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !965, line: 337, size: 256, elements: !1767)
!1767 = !{!1768, !1769, !1770, !1771, !1772}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1766, file: !965, line: 339, baseType: !1535, size: 64)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1766, file: !965, line: 342, baseType: !1762, size: 64, offset: 64)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !1766, file: !965, line: 345, baseType: !1067, size: 32, offset: 128)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !1766, file: !965, line: 347, baseType: !1067, size: 32, offset: 160)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !1766, file: !965, line: 347, baseType: !1067, size: 32, offset: 192)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1740, file: !965, line: 434, baseType: !1774, size: 64, offset: 192)
!1774 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !965, line: 409, baseType: !1775)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 64)
!1776 = !DISubroutineType(types: !1777)
!1777 = !{null, !1535}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !1706, file: !1705, line: 101, baseType: !1779, size: 64, offset: 192)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !1705, line: 46, flags: DIFlagFwdDecl)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "panelname", scope: !1706, file: !1705, line: 103, baseType: !1719, size: 512, offset: 256)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "tabname", scope: !1706, file: !1705, line: 103, baseType: !1719, size: 512, offset: 768)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "drawname", scope: !1706, file: !1705, line: 104, baseType: !1719, size: 512, offset: 1280)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "ofsx", scope: !1706, file: !1705, line: 105, baseType: !1067, size: 32, offset: 1792)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "ofsy", scope: !1706, file: !1705, line: 105, baseType: !1067, size: 32, offset: 1824)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !1706, file: !1705, line: 105, baseType: !1067, size: 32, offset: 1856)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !1706, file: !1705, line: 105, baseType: !1067, size: 32, offset: 1888)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "labelofs", scope: !1706, file: !1705, line: 106, baseType: !1545, size: 16, offset: 1920)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1706, file: !1705, line: 106, baseType: !1545, size: 16, offset: 1936)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1706, file: !1705, line: 107, baseType: !1545, size: 16, offset: 1952)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_flag", scope: !1706, file: !1705, line: 107, baseType: !1545, size: 16, offset: 1968)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1706, file: !1705, line: 108, baseType: !1545, size: 16, offset: 1984)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "snap", scope: !1706, file: !1705, line: 109, baseType: !1545, size: 16, offset: 2000)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "sortorder", scope: !1706, file: !1705, line: 110, baseType: !1067, size: 32, offset: 2016)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "paneltab", scope: !1706, file: !1705, line: 111, baseType: !1709, size: 64, offset: 2048)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "activedata", scope: !1706, file: !1705, line: 112, baseType: !1535, size: 64, offset: 2112)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "oldblock", scope: !1697, file: !956, line: 325, baseType: !1695, size: 64, offset: 320)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "butstore", scope: !1697, file: !956, line: 327, baseType: !1627, size: 128, offset: 384)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "layouts", scope: !1697, file: !956, line: 329, baseType: !1627, size: 128, offset: 512)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "curlayout", scope: !1697, file: !956, line: 330, baseType: !1779, size: 64, offset: 640)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "contexts", scope: !1697, file: !956, line: 332, baseType: !1627, size: 128, offset: 704)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1697, file: !956, line: 334, baseType: !1582, size: 1024, offset: 832)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !1697, file: !956, line: 336, baseType: !1804, size: 512, offset: 1856)
!1804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1534, size: 512, elements: !1805)
!1805 = !{!1608, !1608}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1697, file: !956, line: 338, baseType: !1590, size: 128, offset: 2368)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "aspect", scope: !1697, file: !956, line: 339, baseType: !1534, size: 32, offset: 2496)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "puphash", scope: !1697, file: !956, line: 341, baseType: !7, size: 32, offset: 2528)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1697, file: !956, line: 343, baseType: !1610, size: 64, offset: 2560)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "func_arg1", scope: !1697, file: !956, line: 344, baseType: !1535, size: 64, offset: 2624)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "func_arg2", scope: !1697, file: !956, line: 345, baseType: !1535, size: 64, offset: 2688)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "funcN", scope: !1697, file: !956, line: 347, baseType: !1618, size: 64, offset: 2752)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "func_argN", scope: !1697, file: !956, line: 348, baseType: !1535, size: 64, offset: 2816)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "butm_func", scope: !1697, file: !956, line: 350, baseType: !1815, size: 64, offset: 2880)
!1815 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiMenuHandleFunc", file: !6, line: 346, baseType: !1816)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{null, !1614, !1535, !1067}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "butm_func_arg", scope: !1697, file: !956, line: 351, baseType: !1535, size: 64, offset: 2944)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "handle_func", scope: !1697, file: !956, line: 353, baseType: !1821, size: 64, offset: 3008)
!1821 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBlockHandleFunc", file: !6, line: 341, baseType: !1816)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "handle_func_arg", scope: !1697, file: !956, line: 354, baseType: !1535, size: 64, offset: 3072)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "block_event_func", scope: !1697, file: !956, line: 357, baseType: !1824, size: 64, offset: 3136)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!1825 = !DISubroutineType(types: !1826)
!1826 = !{!1067, !1645, !1827, !1828}
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1830)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !1020, line: 421, size: 960, elements: !1831)
!1831 = !{!1832, !1834, !1835, !1836, !1837, !1838, !1839, !1841, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1869, !1870, !1871, !1872}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1830, file: !1020, line: 422, baseType: !1833, size: 64)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1830, file: !1020, line: 422, baseType: !1833, size: 64, offset: 64)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1830, file: !1020, line: 424, baseType: !1545, size: 16, offset: 128)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1830, file: !1020, line: 425, baseType: !1545, size: 16, offset: 144)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1830, file: !1020, line: 426, baseType: !1067, size: 32, offset: 160)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1830, file: !1020, line: 426, baseType: !1067, size: 32, offset: 192)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !1830, file: !1020, line: 427, baseType: !1840, size: 64, offset: 224)
!1840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1067, size: 64, elements: !1677)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !1830, file: !1020, line: 428, baseType: !1842, size: 48, offset: 288)
!1842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1542, size: 48, elements: !1843)
!1843 = !{!1844}
!1844 = !DISubrange(count: 6)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !1830, file: !1020, line: 431, baseType: !1542, size: 8, offset: 336)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1830, file: !1020, line: 432, baseType: !1542, size: 8, offset: 344)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !1830, file: !1020, line: 435, baseType: !1545, size: 16, offset: 352)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !1830, file: !1020, line: 436, baseType: !1545, size: 16, offset: 368)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !1830, file: !1020, line: 437, baseType: !1067, size: 32, offset: 384)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !1830, file: !1020, line: 437, baseType: !1067, size: 32, offset: 416)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !1830, file: !1020, line: 438, baseType: !1540, size: 64, offset: 448)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !1830, file: !1020, line: 439, baseType: !1067, size: 32, offset: 512)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !1830, file: !1020, line: 439, baseType: !1067, size: 32, offset: 544)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !1830, file: !1020, line: 442, baseType: !1545, size: 16, offset: 576)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !1830, file: !1020, line: 442, baseType: !1545, size: 16, offset: 592)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1830, file: !1020, line: 442, baseType: !1545, size: 16, offset: 608)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !1830, file: !1020, line: 442, baseType: !1545, size: 16, offset: 624)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !1830, file: !1020, line: 443, baseType: !1545, size: 16, offset: 640)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !1830, file: !1020, line: 446, baseType: !1545, size: 16, offset: 656)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !1830, file: !1020, line: 449, baseType: !1647, size: 64, offset: 704)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !1830, file: !1020, line: 452, baseType: !1862, size: 64, offset: 768)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !1020, line: 463, size: 128, elements: !1864)
!1864 = !{!1865, !1866, !1867, !1868}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !1863, file: !1020, line: 464, baseType: !1067, size: 32)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !1863, file: !1020, line: 465, baseType: !1534, size: 32, offset: 32)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !1863, file: !1020, line: 466, baseType: !1534, size: 32, offset: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !1863, file: !1020, line: 467, baseType: !1534, size: 32, offset: 96)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !1830, file: !1020, line: 455, baseType: !1545, size: 16, offset: 832)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !1830, file: !1020, line: 456, baseType: !1545, size: 16, offset: 848)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1830, file: !1020, line: 457, baseType: !1067, size: 32, offset: 864)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1830, file: !1020, line: 458, baseType: !1535, size: 64, offset: 896)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "drawextra", scope: !1697, file: !956, line: 360, baseType: !1874, size: 64, offset: 3200)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{null, !1645, !1535, !1535, !1535, !1877}
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1591, line: 89, baseType: !1879)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1591, line: 86, size: 128, elements: !1880)
!1880 = !{!1881, !1882, !1883, !1884}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1879, file: !1591, line: 87, baseType: !1067, size: 32)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1879, file: !1591, line: 87, baseType: !1067, size: 32, offset: 32)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1879, file: !1591, line: 88, baseType: !1067, size: 32, offset: 64)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1879, file: !1591, line: 88, baseType: !1067, size: 32, offset: 96)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "drawextra_arg1", scope: !1697, file: !956, line: 361, baseType: !1535, size: 64, offset: 3264)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "drawextra_arg2", scope: !1697, file: !956, line: 362, baseType: !1535, size: 64, offset: 3328)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1697, file: !956, line: 364, baseType: !1067, size: 32, offset: 3392)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "alignnr", scope: !1697, file: !956, line: 365, baseType: !1545, size: 16, offset: 3424)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !1697, file: !956, line: 367, baseType: !1542, size: 8, offset: 3440)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !1697, file: !956, line: 368, baseType: !1542, size: 8, offset: 3448)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "auto_open", scope: !1697, file: !956, line: 369, baseType: !1550, size: 8, offset: 3456)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1697, file: !956, line: 370, baseType: !1893, size: 56, offset: 3464)
!1893 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1542, size: 56, elements: !1894)
!1894 = !{!1895}
!1895 = !DISubrange(count: 7)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "auto_open_last", scope: !1697, file: !956, line: 371, baseType: !1540, size: 64, offset: 3520)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "lockstr", scope: !1697, file: !956, line: 373, baseType: !1647, size: 64, offset: 3584)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1697, file: !956, line: 375, baseType: !1542, size: 8, offset: 3648)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1697, file: !956, line: 376, baseType: !1542, size: 8, offset: 3656)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "tooltipdisabled", scope: !1697, file: !956, line: 377, baseType: !1542, size: 8, offset: 3664)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "endblock", scope: !1697, file: !956, line: 378, baseType: !1542, size: 8, offset: 3672)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "bounds_type", scope: !1697, file: !956, line: 380, baseType: !1903, size: 32, offset: 3680)
!1903 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBlockBoundsCalc", file: !6, line: 434, baseType: !5)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "mx", scope: !1697, file: !956, line: 381, baseType: !1067, size: 32, offset: 3712)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "my", scope: !1697, file: !956, line: 381, baseType: !1067, size: 32, offset: 3744)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1697, file: !956, line: 382, baseType: !1067, size: 32, offset: 3776)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "minbounds", scope: !1697, file: !956, line: 382, baseType: !1067, size: 32, offset: 3808)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1697, file: !956, line: 384, baseType: !1590, size: 128, offset: 3840)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "saferct", scope: !1697, file: !956, line: 385, baseType: !1627, size: 128, offset: 3968)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !1697, file: !956, line: 387, baseType: !1911, size: 64, offset: 4096)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 64)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiPopupBlockHandle", file: !6, line: 84, baseType: !1913)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiPopupBlockHandle", file: !956, line: 491, size: 1536, elements: !1914)
!1914 = !{!1915, !3089, !3090, !3091, !3092, !3093, !3094, !3098, !3099, !3114, !3115, !3120, !3197, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1913, file: !956, line: 493, baseType: !1916, size: 64)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !1705, line: 230, size: 3072, elements: !1918)
!1918 = !{!1919, !1920, !1921, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1917, file: !1705, line: 231, baseType: !1916, size: 64)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1917, file: !1705, line: 231, baseType: !1916, size: 64, offset: 64)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !1917, file: !1705, line: 233, baseType: !1922, size: 1280, offset: 128)
!1922 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !1923, line: 71, baseType: !1924)
!1923 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !1923, line: 40, size: 1280, elements: !1925)
!1925 = !{!1926, !1927, !1928, !1929, !1930, !1931, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1954}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1924, file: !1923, line: 41, baseType: !1590, size: 128)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1924, file: !1923, line: 41, baseType: !1590, size: 128, offset: 128)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !1924, file: !1923, line: 42, baseType: !1878, size: 128, offset: 256)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !1924, file: !1923, line: 42, baseType: !1878, size: 128, offset: 384)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1924, file: !1923, line: 43, baseType: !1878, size: 128, offset: 512)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1924, file: !1923, line: 45, baseType: !1932, size: 64, offset: 640)
!1932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1534, size: 64, elements: !1677)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1924, file: !1923, line: 45, baseType: !1932, size: 64, offset: 704)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !1924, file: !1923, line: 46, baseType: !1534, size: 32, offset: 768)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !1924, file: !1923, line: 46, baseType: !1534, size: 32, offset: 800)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !1924, file: !1923, line: 48, baseType: !1545, size: 16, offset: 832)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !1924, file: !1923, line: 49, baseType: !1545, size: 16, offset: 848)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !1924, file: !1923, line: 51, baseType: !1545, size: 16, offset: 864)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !1924, file: !1923, line: 52, baseType: !1545, size: 16, offset: 880)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !1924, file: !1923, line: 53, baseType: !1545, size: 16, offset: 896)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1924, file: !1923, line: 55, baseType: !1545, size: 16, offset: 912)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1924, file: !1923, line: 56, baseType: !1545, size: 16, offset: 928)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !1924, file: !1923, line: 58, baseType: !1545, size: 16, offset: 944)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !1924, file: !1923, line: 58, baseType: !1545, size: 16, offset: 960)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !1924, file: !1923, line: 59, baseType: !1545, size: 16, offset: 976)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !1924, file: !1923, line: 59, baseType: !1545, size: 16, offset: 992)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !1924, file: !1923, line: 61, baseType: !1545, size: 16, offset: 1008)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !1924, file: !1923, line: 63, baseType: !1543, size: 64, offset: 1024)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !1924, file: !1923, line: 64, baseType: !1067, size: 32, offset: 1088)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !1924, file: !1923, line: 65, baseType: !1067, size: 32, offset: 1120)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !1924, file: !1923, line: 68, baseType: !1952, size: 64, offset: 1152)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !1923, line: 68, flags: DIFlagFwdDecl)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !1924, file: !1923, line: 69, baseType: !1955, size: 64, offset: 1216)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !1020, line: 490, size: 768, elements: !1957)
!1957 = !{!1958, !1959, !1960, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1956, file: !1020, line: 491, baseType: !1955, size: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1956, file: !1020, line: 491, baseType: !1955, size: 64, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !1956, file: !1020, line: 493, baseType: !1961, size: 64, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !1963, line: 169, size: 2048, elements: !1964)
!1963 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1964 = !{!1965, !1966, !1967, !1968, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2833, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1962, file: !1963, line: 170, baseType: !1961, size: 64)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1962, file: !1963, line: 170, baseType: !1961, size: 64, offset: 64)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !1962, file: !1963, line: 172, baseType: !1535, size: 64, offset: 128)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !1962, file: !1963, line: 174, baseType: !1969, size: 64, offset: 192)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !1705, line: 49, size: 1984, elements: !1971)
!1971 = !{!1972, !2031, !2032, !2033, !2034, !2035, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1970, file: !1705, line: 50, baseType: !1973, size: 960)
!1973 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !1974, line: 130, baseType: !1975)
!1974 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !1974, line: 117, size: 960, elements: !1976)
!1976 = !{!1977, !1978, !1979, !1981, !2000, !2004, !2005, !2006, !2007, !2008}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1975, file: !1974, line: 118, baseType: !1535, size: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1975, file: !1974, line: 118, baseType: !1535, size: 64, offset: 64)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !1975, file: !1974, line: 119, baseType: !1980, size: 64, offset: 128)
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1975, file: !1974, line: 120, baseType: !1982, size: 64, offset: 192)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 64)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !1974, line: 136, size: 17600, elements: !1984)
!1984 = !{!1985, !1986, !1988, !1991, !1995, !1996, !1997}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1983, file: !1974, line: 137, baseType: !1973, size: 960)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !1983, file: !1974, line: 138, baseType: !1987, size: 64, offset: 960)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !1983, file: !1974, line: 139, baseType: !1989, size: 64, offset: 1024)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64)
!1990 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !1974, line: 43, flags: DIFlagFwdDecl)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1983, file: !1974, line: 140, baseType: !1992, size: 8192, offset: 1088)
!1992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1542, size: 8192, elements: !1993)
!1993 = !{!1994}
!1994 = !DISubrange(count: 1024)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1983, file: !1974, line: 141, baseType: !1992, size: 8192, offset: 9280)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1983, file: !1974, line: 148, baseType: !1982, size: 64, offset: 17472)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1983, file: !1974, line: 150, baseType: !1998, size: 64, offset: 17536)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !1974, line: 45, flags: DIFlagFwdDecl)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1975, file: !1974, line: 121, baseType: !2001, size: 528, offset: 256)
!2001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1542, size: 528, elements: !2002)
!2002 = !{!2003}
!2003 = !DISubrange(count: 66)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1975, file: !1974, line: 126, baseType: !1545, size: 16, offset: 784)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1975, file: !1974, line: 127, baseType: !1067, size: 32, offset: 800)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !1975, file: !1974, line: 128, baseType: !1067, size: 32, offset: 832)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1975, file: !1974, line: 128, baseType: !1067, size: 32, offset: 864)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1975, file: !1974, line: 129, baseType: !2009, size: 64, offset: 896)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !1974, line: 75, baseType: !2011)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !1974, line: 62, size: 1024, elements: !2012)
!2012 = !{!2013, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2029, !2030}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2011, file: !1974, line: 63, baseType: !2014, size: 64)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2011, file: !1974, line: 63, baseType: !2014, size: 64, offset: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2011, file: !1974, line: 64, baseType: !1542, size: 8, offset: 128)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !2011, file: !1974, line: 64, baseType: !1542, size: 8, offset: 136)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2011, file: !1974, line: 65, baseType: !1545, size: 16, offset: 144)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2011, file: !1974, line: 66, baseType: !1719, size: 512, offset: 160)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !2011, file: !1974, line: 67, baseType: !1067, size: 32, offset: 672)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2011, file: !1974, line: 69, baseType: !2022, size: 256, offset: 704)
!2022 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !1974, line: 60, baseType: !2023)
!2023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !1974, line: 48, size: 256, elements: !2024)
!2024 = !{!2025, !2026, !2027, !2028}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2023, file: !1974, line: 49, baseType: !1535, size: 64)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2023, file: !1974, line: 58, baseType: !1627, size: 128, offset: 64)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2023, file: !1974, line: 59, baseType: !1067, size: 32, offset: 192)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !2023, file: !1974, line: 59, baseType: !1067, size: 32, offset: 224)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2011, file: !1974, line: 70, baseType: !1067, size: 32, offset: 960)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !2011, file: !1974, line: 74, baseType: !1067, size: 32, offset: 992)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !1970, file: !1705, line: 52, baseType: !1627, size: 128, offset: 960)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !1970, file: !1705, line: 53, baseType: !1627, size: 128, offset: 1088)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !1970, file: !1705, line: 54, baseType: !1627, size: 128, offset: 1216)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !1970, file: !1705, line: 55, baseType: !1627, size: 128, offset: 1344)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1970, file: !1705, line: 57, baseType: !2036, size: 64, offset: 1472)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !2038, line: 1216, size: 39680, elements: !2039)
!2038 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2039 = !{!2040, !2041, !2044, !2047, !2050, !2051, !2052, !2064, !2065, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2081, !2084, !2087, !2380, !2383, !2662, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2684, !2685, !2686, !2687, !2688, !2696, !2763, !2770, !2773, !2780, !2783, !2788, !2789, !2790, !2791, !2792}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2037, file: !2038, line: 1217, baseType: !1973, size: 960)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2037, file: !2038, line: 1218, baseType: !2042, size: 64, offset: 960)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 64)
!2043 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !2038, line: 58, flags: DIFlagFwdDecl)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2037, file: !2038, line: 1220, baseType: !2045, size: 64, offset: 1024)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 64)
!2046 = !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !2038, line: 50, flags: DIFlagFwdDecl)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !2037, file: !2038, line: 1221, baseType: !2048, size: 64, offset: 1088)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !2038, line: 52, flags: DIFlagFwdDecl)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2037, file: !2038, line: 1223, baseType: !2036, size: 64, offset: 1152)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2037, file: !2038, line: 1225, baseType: !1627, size: 128, offset: 1216)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !2037, file: !2038, line: 1226, baseType: !2053, size: 64, offset: 1344)
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 64)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !2038, line: 69, size: 320, elements: !2055)
!2055 = !{!2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2054, file: !2038, line: 70, baseType: !2053, size: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2054, file: !2038, line: 70, baseType: !2053, size: 64, offset: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2054, file: !2038, line: 71, baseType: !7, size: 32, offset: 128)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !2054, file: !2038, line: 71, baseType: !7, size: 32, offset: 160)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2054, file: !2038, line: 72, baseType: !1067, size: 32, offset: 192)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !2054, file: !2038, line: 73, baseType: !1545, size: 16, offset: 224)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !2054, file: !2038, line: 73, baseType: !1545, size: 16, offset: 240)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2054, file: !2038, line: 74, baseType: !2045, size: 64, offset: 256)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !2037, file: !2038, line: 1227, baseType: !2045, size: 64, offset: 1408)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !2037, file: !2038, line: 1229, baseType: !2066, size: 96, offset: 1472)
!2066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1534, size: 96, elements: !2067)
!2067 = !{!2068}
!2068 = !DISubrange(count: 3)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !2037, file: !2038, line: 1230, baseType: !2066, size: 96, offset: 1568)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !2037, file: !2038, line: 1231, baseType: !2066, size: 96, offset: 1664)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !2037, file: !2038, line: 1231, baseType: !2066, size: 96, offset: 1760)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2037, file: !2038, line: 1233, baseType: !7, size: 32, offset: 1856)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !2037, file: !2038, line: 1234, baseType: !1067, size: 32, offset: 1888)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !2037, file: !2038, line: 1235, baseType: !7, size: 32, offset: 1920)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2037, file: !2038, line: 1237, baseType: !1545, size: 16, offset: 1952)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !2037, file: !2038, line: 1239, baseType: !1542, size: 8, offset: 1968)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2037, file: !2038, line: 1240, baseType: !2078, size: 8, offset: 1976)
!2078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1542, size: 8, elements: !2079)
!2079 = !{!2080}
!2080 = !DISubrange(count: 1)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2037, file: !2038, line: 1242, baseType: !2082, size: 64, offset: 1984)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64)
!2083 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !2038, line: 57, flags: DIFlagFwdDecl)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !2037, file: !2038, line: 1244, baseType: !2085, size: 64, offset: 2048)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2086 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !2038, line: 59, flags: DIFlagFwdDecl)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !2037, file: !2038, line: 1246, baseType: !2088, size: 64, offset: 2112)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !2038, line: 1067, size: 5184, elements: !2090)
!2090 = !{!2091, !2120, !2121, !2136, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2158, !2252, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2363}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !2089, file: !2038, line: 1068, baseType: !2092, size: 64)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64)
!2093 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !2038, line: 934, baseType: !2094)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !2038, line: 925, size: 576, elements: !2095)
!2095 = !{!2096, !2111, !2112, !2113, !2114, !2116, !2119}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2094, file: !2038, line: 926, baseType: !2097, size: 320)
!2097 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !2038, line: 830, baseType: !2098)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !2038, line: 813, size: 320, elements: !2099)
!2099 = !{!2100, !2103, !2106, !2107, !2108, !2109, !2110}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2098, file: !2038, line: 814, baseType: !2101, size: 64)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64)
!2102 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !2038, line: 51, flags: DIFlagFwdDecl)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !2098, file: !2038, line: 815, baseType: !2104, size: 64, offset: 64)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 64)
!2105 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !2038, line: 815, flags: DIFlagFwdDecl)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !2098, file: !2038, line: 818, baseType: !1535, size: 64, offset: 128)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !2098, file: !2038, line: 819, baseType: !1606, size: 32, offset: 192)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2098, file: !2038, line: 822, baseType: !1067, size: 32, offset: 224)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !2098, file: !2038, line: 826, baseType: !1067, size: 32, offset: 256)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !2098, file: !2038, line: 829, baseType: !1067, size: 32, offset: 288)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2094, file: !2038, line: 928, baseType: !1545, size: 16, offset: 320)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2094, file: !2038, line: 928, baseType: !1545, size: 16, offset: 336)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2094, file: !2038, line: 929, baseType: !1067, size: 32, offset: 352)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !2094, file: !2038, line: 930, baseType: !2115, size: 64, offset: 384)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !2094, file: !2038, line: 931, baseType: !2117, size: 64, offset: 448)
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 64)
!2118 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !2038, line: 931, flags: DIFlagFwdDecl)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2094, file: !2038, line: 933, baseType: !1535, size: 64, offset: 512)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !2089, file: !2038, line: 1069, baseType: !2092, size: 64, offset: 64)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !2089, file: !2038, line: 1070, baseType: !2122, size: 64, offset: 128)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64)
!2123 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !2038, line: 916, baseType: !2124)
!2124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !2038, line: 891, size: 704, elements: !2125)
!2125 = !{!2126, !2127, !2128, !2130, !2131, !2132, !2133, !2134, !2135}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2124, file: !2038, line: 892, baseType: !2097, size: 320)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2124, file: !2038, line: 896, baseType: !1067, size: 32, offset: 320)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !2124, file: !2038, line: 900, baseType: !2129, size: 96, offset: 352)
!2129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1067, size: 96, elements: !2067)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !2124, file: !2038, line: 903, baseType: !1534, size: 32, offset: 448)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !2124, file: !2038, line: 906, baseType: !1067, size: 32, offset: 480)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !2124, file: !2038, line: 909, baseType: !1534, size: 32, offset: 512)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !2124, file: !2038, line: 912, baseType: !1534, size: 32, offset: 544)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !2124, file: !2038, line: 914, baseType: !2045, size: 64, offset: 576)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2124, file: !2038, line: 915, baseType: !1535, size: 64, offset: 640)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !2089, file: !2038, line: 1071, baseType: !2137, size: 64, offset: 192)
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 64)
!2138 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !2038, line: 920, baseType: !2139)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !2038, line: 918, size: 320, elements: !2140)
!2140 = !{!2141}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2139, file: !2038, line: 919, baseType: !2097, size: 320)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !2089, file: !2038, line: 1075, baseType: !1534, size: 32, offset: 256)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !2089, file: !2038, line: 1077, baseType: !1534, size: 32, offset: 288)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !2089, file: !2038, line: 1078, baseType: !1534, size: 32, offset: 320)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !2089, file: !2038, line: 1079, baseType: !1545, size: 16, offset: 352)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2089, file: !2038, line: 1082, baseType: !1545, size: 16, offset: 368)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !2089, file: !2038, line: 1085, baseType: !1542, size: 8, offset: 384)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !2089, file: !2038, line: 1086, baseType: !1542, size: 8, offset: 392)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !2089, file: !2038, line: 1087, baseType: !1542, size: 8, offset: 400)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !2089, file: !2038, line: 1088, baseType: !1542, size: 8, offset: 408)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !2089, file: !2038, line: 1090, baseType: !1534, size: 32, offset: 416)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !2089, file: !2038, line: 1093, baseType: !1545, size: 16, offset: 448)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !2089, file: !2038, line: 1096, baseType: !1542, size: 8, offset: 464)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2089, file: !2038, line: 1098, baseType: !2155, size: 40, offset: 472)
!2155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1542, size: 40, elements: !2156)
!2156 = !{!2157}
!2157 = !DISubrange(count: 5)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !2089, file: !2038, line: 1101, baseType: !2159, size: 832, offset: 512)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !2038, line: 836, size: 832, elements: !2160)
!2160 = !{!2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2248, !2249, !2250, !2251}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2159, file: !2038, line: 837, baseType: !2097, size: 320)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2159, file: !2038, line: 839, baseType: !1545, size: 16, offset: 320)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !2159, file: !2038, line: 839, baseType: !1545, size: 16, offset: 336)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !2159, file: !2038, line: 842, baseType: !1545, size: 16, offset: 352)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !2159, file: !2038, line: 842, baseType: !1545, size: 16, offset: 368)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !2159, file: !2038, line: 843, baseType: !1676, size: 32, offset: 384)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2159, file: !2038, line: 845, baseType: !1067, size: 32, offset: 416)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2159, file: !2038, line: 847, baseType: !1535, size: 64, offset: 448)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !2159, file: !2038, line: 848, baseType: !2170, size: 64, offset: 512)
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !2172, line: 77, size: 15424, elements: !2173)
!2172 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2173 = !{!2174, !2175, !2176, !2179, !2182, !2185, !2188, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2232, !2233, !2234, !2240, !2241, !2242}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2171, file: !2172, line: 78, baseType: !1973, size: 960)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2171, file: !2172, line: 80, baseType: !1992, size: 8192, offset: 960)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2171, file: !2172, line: 82, baseType: !2177, size: 64, offset: 9152)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64)
!2178 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !2172, line: 43, flags: DIFlagFwdDecl)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !2171, file: !2172, line: 83, baseType: !2180, size: 64, offset: 9216)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 64)
!2181 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !1974, line: 46, flags: DIFlagFwdDecl)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2171, file: !2172, line: 86, baseType: !2183, size: 64, offset: 9280)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64)
!2184 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !2172, line: 41, flags: DIFlagFwdDecl)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !2171, file: !2172, line: 87, baseType: !2186, size: 64, offset: 9344)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 64)
!2187 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !2172, line: 44, flags: DIFlagFwdDecl)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !2171, file: !2172, line: 89, baseType: !2189, size: 512, offset: 9408)
!2189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2186, size: 512, elements: !2190)
!2190 = !{!2191}
!2191 = !DISubrange(count: 8)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !2171, file: !2172, line: 90, baseType: !1545, size: 16, offset: 9920)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !2171, file: !2172, line: 90, baseType: !1545, size: 16, offset: 9936)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2171, file: !2172, line: 92, baseType: !1545, size: 16, offset: 9952)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2171, file: !2172, line: 92, baseType: !1545, size: 16, offset: 9968)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2171, file: !2172, line: 93, baseType: !1545, size: 16, offset: 9984)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2171, file: !2172, line: 93, baseType: !1545, size: 16, offset: 10000)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2171, file: !2172, line: 94, baseType: !1067, size: 32, offset: 10016)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !2171, file: !2172, line: 97, baseType: !1545, size: 16, offset: 10048)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !2171, file: !2172, line: 97, baseType: !1545, size: 16, offset: 10064)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !2171, file: !2172, line: 98, baseType: !1545, size: 16, offset: 10080)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !2171, file: !2172, line: 98, baseType: !1545, size: 16, offset: 10096)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !2171, file: !2172, line: 99, baseType: !1545, size: 16, offset: 10112)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !2171, file: !2172, line: 99, baseType: !1545, size: 16, offset: 10128)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !2171, file: !2172, line: 100, baseType: !7, size: 32, offset: 10144)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !2171, file: !2172, line: 101, baseType: !2115, size: 64, offset: 10176)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !2171, file: !2172, line: 103, baseType: !1998, size: 64, offset: 10240)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2171, file: !2172, line: 104, baseType: !2209, size: 64, offset: 10304)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 64)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !1974, line: 159, size: 448, elements: !2211)
!2211 = !{!2212, !2214, !2215, !2216, !2217, !2219}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2210, file: !1974, line: 161, baseType: !2213, size: 64)
!2213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1677)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !2210, file: !1974, line: 162, baseType: !2213, size: 64, offset: 64)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2210, file: !1974, line: 163, baseType: !1676, size: 32, offset: 128)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !2210, file: !1974, line: 164, baseType: !1676, size: 32, offset: 160)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !2210, file: !1974, line: 165, baseType: !2218, size: 128, offset: 192)
!2218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2115, size: 128, elements: !1677)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !2210, file: !1974, line: 166, baseType: !2220, size: 128, offset: 320)
!2220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2180, size: 128, elements: !1677)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !2171, file: !2172, line: 107, baseType: !1534, size: 32, offset: 10368)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !2171, file: !2172, line: 108, baseType: !1067, size: 32, offset: 10400)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !2171, file: !2172, line: 109, baseType: !1545, size: 16, offset: 10432)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2171, file: !2172, line: 110, baseType: !1545, size: 16, offset: 10448)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !2171, file: !2172, line: 113, baseType: !1067, size: 32, offset: 10464)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !2171, file: !2172, line: 113, baseType: !1067, size: 32, offset: 10496)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !2171, file: !2172, line: 114, baseType: !1542, size: 8, offset: 10528)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !2171, file: !2172, line: 114, baseType: !1542, size: 8, offset: 10536)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !2171, file: !2172, line: 115, baseType: !1545, size: 16, offset: 10544)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !2171, file: !2172, line: 116, baseType: !2231, size: 128, offset: 10560)
!2231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1534, size: 128, elements: !1607)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !2171, file: !2172, line: 119, baseType: !1534, size: 32, offset: 10688)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !2171, file: !2172, line: 119, baseType: !1534, size: 32, offset: 10720)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !2171, file: !2172, line: 122, baseType: !2235, size: 512, offset: 10752)
!2235 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !2236, line: 182, baseType: !2237)
!2236 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !2236, line: 180, size: 512, elements: !2238)
!2238 = !{!2239}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2237, file: !2236, line: 181, baseType: !1719, size: 512)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !2171, file: !2172, line: 123, baseType: !1542, size: 8, offset: 11264)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2171, file: !2172, line: 125, baseType: !1893, size: 56, offset: 11272)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !2171, file: !2172, line: 126, baseType: !2243, size: 4096, offset: 11328)
!2243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2244, size: 4096, elements: !2190)
!2244 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !2172, line: 69, baseType: !2245)
!2245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !2172, line: 67, size: 512, elements: !2246)
!2246 = !{!2247}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2245, file: !2172, line: 68, baseType: !1719, size: 512)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2159, file: !2038, line: 849, baseType: !2170, size: 64, offset: 576)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !2159, file: !2038, line: 850, baseType: !2170, size: 64, offset: 640)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !2159, file: !2038, line: 851, baseType: !2066, size: 96, offset: 704)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2159, file: !2038, line: 852, baseType: !1534, size: 32, offset: 800)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !2089, file: !2038, line: 1104, baseType: !2253, size: 1344, offset: 1344)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !2038, line: 867, size: 1344, elements: !2254)
!2254 = !{!2255, !2256, !2257, !2258, !2259, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2253, file: !2038, line: 868, baseType: !1545, size: 16)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !2253, file: !2038, line: 869, baseType: !1545, size: 16, offset: 16)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !2253, file: !2038, line: 870, baseType: !1545, size: 16, offset: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !2253, file: !2038, line: 871, baseType: !1545, size: 16, offset: 48)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2253, file: !2038, line: 873, baseType: !2260, size: 896, offset: 64)
!2260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2261, size: 896, elements: !1894)
!2261 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !2038, line: 864, baseType: !2262)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !2038, line: 859, size: 128, elements: !2263)
!2263 = !{!2264, !2265, !2266, !2267, !2268, !2269}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2262, file: !2038, line: 860, baseType: !1545, size: 16)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2262, file: !2038, line: 861, baseType: !1545, size: 16, offset: 16)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2262, file: !2038, line: 861, baseType: !1545, size: 16, offset: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2262, file: !2038, line: 861, baseType: !1545, size: 16, offset: 48)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2262, file: !2038, line: 862, baseType: !1067, size: 32, offset: 64)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2262, file: !2038, line: 863, baseType: !1534, size: 32, offset: 96)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2253, file: !2038, line: 874, baseType: !1535, size: 64, offset: 960)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !2253, file: !2038, line: 876, baseType: !1534, size: 32, offset: 1024)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2253, file: !2038, line: 876, baseType: !1534, size: 32, offset: 1056)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2253, file: !2038, line: 878, baseType: !1067, size: 32, offset: 1088)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !2253, file: !2038, line: 879, baseType: !1067, size: 32, offset: 1120)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !2253, file: !2038, line: 881, baseType: !1067, size: 32, offset: 1152)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !2253, file: !2038, line: 881, baseType: !1067, size: 32, offset: 1184)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2253, file: !2038, line: 883, baseType: !2036, size: 64, offset: 1216)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2253, file: !2038, line: 884, baseType: !2045, size: 64, offset: 1280)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !2089, file: !2038, line: 1107, baseType: !1534, size: 32, offset: 2688)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !2089, file: !2038, line: 1110, baseType: !1534, size: 32, offset: 2720)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !2089, file: !2038, line: 1113, baseType: !1545, size: 16, offset: 2752)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !2089, file: !2038, line: 1113, baseType: !1545, size: 16, offset: 2768)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !2089, file: !2038, line: 1116, baseType: !1542, size: 8, offset: 2784)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2089, file: !2038, line: 1117, baseType: !2078, size: 8, offset: 2792)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !2089, file: !2038, line: 1120, baseType: !1545, size: 16, offset: 2800)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !2089, file: !2038, line: 1121, baseType: !1534, size: 32, offset: 2816)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !2089, file: !2038, line: 1122, baseType: !1534, size: 32, offset: 2848)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !2089, file: !2038, line: 1123, baseType: !1534, size: 32, offset: 2880)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !2089, file: !2038, line: 1124, baseType: !1534, size: 32, offset: 2912)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !2089, file: !2038, line: 1125, baseType: !1534, size: 32, offset: 2944)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !2089, file: !2038, line: 1126, baseType: !1534, size: 32, offset: 2976)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !2089, file: !2038, line: 1127, baseType: !1534, size: 32, offset: 3008)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !2089, file: !2038, line: 1128, baseType: !1534, size: 32, offset: 3040)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !2089, file: !2038, line: 1129, baseType: !1534, size: 32, offset: 3072)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !2089, file: !2038, line: 1130, baseType: !1534, size: 32, offset: 3104)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !2089, file: !2038, line: 1131, baseType: !1545, size: 16, offset: 3136)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !2089, file: !2038, line: 1132, baseType: !1542, size: 8, offset: 3152)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !2089, file: !2038, line: 1133, baseType: !1542, size: 8, offset: 3160)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !2089, file: !2038, line: 1134, baseType: !2300, size: 24, offset: 3168)
!2300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1542, size: 24, elements: !2067)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !2089, file: !2038, line: 1135, baseType: !1542, size: 8, offset: 3192)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !2089, file: !2038, line: 1138, baseType: !2045, size: 64, offset: 3200)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !2089, file: !2038, line: 1139, baseType: !1542, size: 8, offset: 3264)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !2089, file: !2038, line: 1140, baseType: !1542, size: 8, offset: 3272)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !2089, file: !2038, line: 1141, baseType: !1542, size: 8, offset: 3280)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !2089, file: !2038, line: 1142, baseType: !1542, size: 8, offset: 3288)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !2089, file: !2038, line: 1143, baseType: !1542, size: 8, offset: 3296)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !2089, file: !2038, line: 1144, baseType: !2309, size: 64, offset: 3304)
!2309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1542, size: 64, elements: !2190)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !2089, file: !2038, line: 1145, baseType: !2309, size: 64, offset: 3368)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !2089, file: !2038, line: 1148, baseType: !1542, size: 8, offset: 3432)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !2089, file: !2038, line: 1149, baseType: !1542, size: 8, offset: 3440)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !2089, file: !2038, line: 1152, baseType: !1542, size: 8, offset: 3448)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !2089, file: !2038, line: 1152, baseType: !1542, size: 8, offset: 3456)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !2089, file: !2038, line: 1153, baseType: !1542, size: 8, offset: 3464)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !2089, file: !2038, line: 1154, baseType: !1545, size: 16, offset: 3472)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !2089, file: !2038, line: 1154, baseType: !1545, size: 16, offset: 3488)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !2089, file: !2038, line: 1155, baseType: !1545, size: 16, offset: 3504)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !2089, file: !2038, line: 1155, baseType: !1545, size: 16, offset: 3520)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !2089, file: !2038, line: 1156, baseType: !1542, size: 8, offset: 3536)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !2089, file: !2038, line: 1157, baseType: !1542, size: 8, offset: 3544)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !2089, file: !2038, line: 1159, baseType: !1542, size: 8, offset: 3552)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !2089, file: !2038, line: 1160, baseType: !1542, size: 8, offset: 3560)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !2089, file: !2038, line: 1161, baseType: !1542, size: 8, offset: 3568)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !2089, file: !2038, line: 1162, baseType: !1542, size: 8, offset: 3576)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !2089, file: !2038, line: 1165, baseType: !1067, size: 32, offset: 3584)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !2089, file: !2038, line: 1166, baseType: !1067, size: 32, offset: 3616)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !2089, file: !2038, line: 1167, baseType: !1067, size: 32, offset: 3648)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !2089, file: !2038, line: 1168, baseType: !1067, size: 32, offset: 3680)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !2089, file: !2038, line: 1171, baseType: !1545, size: 16, offset: 3712)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2089, file: !2038, line: 1171, baseType: !1545, size: 16, offset: 3728)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !2089, file: !2038, line: 1172, baseType: !1067, size: 32, offset: 3744)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !2089, file: !2038, line: 1173, baseType: !1534, size: 32, offset: 3776)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !2089, file: !2038, line: 1174, baseType: !1534, size: 32, offset: 3808)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !2089, file: !2038, line: 1177, baseType: !2336, size: 1024, offset: 3840)
!2336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !2038, line: 963, size: 1024, elements: !2337)
!2337 = !{!2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2361, !2362}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2336, file: !2038, line: 965, baseType: !1067, size: 32)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2336, file: !2038, line: 968, baseType: !1534, size: 32, offset: 32)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2336, file: !2038, line: 971, baseType: !1534, size: 32, offset: 64)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2336, file: !2038, line: 974, baseType: !1534, size: 32, offset: 96)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2336, file: !2038, line: 977, baseType: !2066, size: 96, offset: 128)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2336, file: !2038, line: 979, baseType: !2066, size: 96, offset: 224)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2336, file: !2038, line: 982, baseType: !1067, size: 32, offset: 320)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !2336, file: !2038, line: 987, baseType: !1932, size: 64, offset: 352)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !2336, file: !2038, line: 989, baseType: !1534, size: 32, offset: 416)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !2336, file: !2038, line: 994, baseType: !1067, size: 32, offset: 448)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !2336, file: !2038, line: 995, baseType: !1067, size: 32, offset: 480)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !2336, file: !2038, line: 997, baseType: !1542, size: 8, offset: 512)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2336, file: !2038, line: 998, baseType: !1893, size: 56, offset: 520)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !2336, file: !2038, line: 1000, baseType: !1534, size: 32, offset: 576)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !2336, file: !2038, line: 1003, baseType: !1932, size: 64, offset: 608)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !2336, file: !2038, line: 1006, baseType: !1067, size: 32, offset: 672)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !2336, file: !2038, line: 1009, baseType: !1534, size: 32, offset: 704)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !2336, file: !2038, line: 1012, baseType: !1932, size: 64, offset: 736)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !2336, file: !2038, line: 1015, baseType: !1932, size: 64, offset: 800)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !2336, file: !2038, line: 1018, baseType: !1067, size: 32, offset: 864)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2336, file: !2038, line: 1019, baseType: !2359, size: 64, offset: 896)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 64)
!2360 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !2038, line: 63, flags: DIFlagFwdDecl)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !2336, file: !2038, line: 1023, baseType: !1534, size: 32, offset: 960)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2336, file: !2038, line: 1024, baseType: !1067, size: 32, offset: 992)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !2089, file: !2038, line: 1179, baseType: !2364, size: 320, offset: 4864)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !2038, line: 1043, size: 320, elements: !2365)
!2365 = !{!2366, !2367, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2364, file: !2038, line: 1044, baseType: !1542, size: 8)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !2364, file: !2038, line: 1045, baseType: !2368, size: 16, offset: 8)
!2368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1542, size: 16, elements: !1677)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !2364, file: !2038, line: 1048, baseType: !1542, size: 8, offset: 24)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !2364, file: !2038, line: 1049, baseType: !1534, size: 32, offset: 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !2364, file: !2038, line: 1049, baseType: !1534, size: 32, offset: 64)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !2364, file: !2038, line: 1052, baseType: !1534, size: 32, offset: 96)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !2364, file: !2038, line: 1052, baseType: !1534, size: 32, offset: 128)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !2364, file: !2038, line: 1053, baseType: !1542, size: 8, offset: 160)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !2364, file: !2038, line: 1054, baseType: !2300, size: 24, offset: 168)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !2364, file: !2038, line: 1057, baseType: !1534, size: 32, offset: 192)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !2364, file: !2038, line: 1057, baseType: !1534, size: 32, offset: 224)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !2364, file: !2038, line: 1060, baseType: !1534, size: 32, offset: 256)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !2364, file: !2038, line: 1060, baseType: !1534, size: 32, offset: 288)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2037, file: !2038, line: 1247, baseType: !2381, size: 64, offset: 2176)
!2381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 64)
!2382 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !2038, line: 60, flags: DIFlagFwdDecl)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2037, file: !2038, line: 1251, baseType: !2384, size: 31872, offset: 2240)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !2038, line: 403, size: 31872, elements: !2385)
!2385 = !{!2386, !2458, !2475, !2484, !2504, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2638, !2639, !2640, !2644, !2660, !2661}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2384, file: !2038, line: 404, baseType: !2387, size: 1984)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !2038, line: 259, size: 1984, elements: !2388)
!2388 = !{!2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2453}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2387, file: !2038, line: 260, baseType: !1542, size: 8)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2387, file: !2038, line: 263, baseType: !1542, size: 8, offset: 8)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2387, file: !2038, line: 266, baseType: !1542, size: 8, offset: 16)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2387, file: !2038, line: 267, baseType: !1542, size: 8, offset: 24)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2387, file: !2038, line: 269, baseType: !1542, size: 8, offset: 32)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2387, file: !2038, line: 270, baseType: !1542, size: 8, offset: 40)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2387, file: !2038, line: 276, baseType: !1542, size: 8, offset: 48)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2387, file: !2038, line: 279, baseType: !1542, size: 8, offset: 56)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2387, file: !2038, line: 280, baseType: !1545, size: 16, offset: 64)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2387, file: !2038, line: 280, baseType: !1545, size: 16, offset: 80)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2387, file: !2038, line: 281, baseType: !1534, size: 32, offset: 96)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2387, file: !2038, line: 284, baseType: !1542, size: 8, offset: 128)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2387, file: !2038, line: 285, baseType: !1542, size: 8, offset: 136)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2387, file: !2038, line: 287, baseType: !1842, size: 48, offset: 144)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2387, file: !2038, line: 290, baseType: !2404, size: 1280, offset: 192)
!2404 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !2236, line: 174, baseType: !2405)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !2236, line: 166, size: 1280, elements: !2406)
!2406 = !{!2407, !2408, !2409, !2410, !2411, !2412, !2413, !2452}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2405, file: !2236, line: 167, baseType: !1067, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2405, file: !2236, line: 167, baseType: !1067, size: 32, offset: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2405, file: !2236, line: 168, baseType: !1719, size: 512, offset: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2405, file: !2236, line: 169, baseType: !1719, size: 512, offset: 576)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2405, file: !2236, line: 170, baseType: !1534, size: 32, offset: 1088)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2405, file: !2236, line: 171, baseType: !1534, size: 32, offset: 1120)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2405, file: !2236, line: 172, baseType: !2414, size: 64, offset: 1152)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64)
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !2236, line: 72, size: 3072, elements: !2416)
!2416 = !{!2417, !2418, !2419, !2420, !2421, !2422, !2423, !2448, !2449, !2450, !2451}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2415, file: !2236, line: 73, baseType: !1067, size: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2415, file: !2236, line: 73, baseType: !1067, size: 32, offset: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !2415, file: !2236, line: 74, baseType: !1067, size: 32, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !2415, file: !2236, line: 75, baseType: !1067, size: 32, offset: 96)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !2415, file: !2236, line: 77, baseType: !1590, size: 128, offset: 128)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !2415, file: !2236, line: 77, baseType: !1590, size: 128, offset: 256)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !2415, file: !2236, line: 79, baseType: !2424, size: 2304, offset: 384)
!2424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2425, size: 2304, elements: !1607)
!2425 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !2236, line: 67, baseType: !2426)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !2236, line: 55, size: 576, elements: !2427)
!2427 = !{!2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2444, !2445, !2446, !2447}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2426, file: !2236, line: 56, baseType: !1545, size: 16)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2426, file: !2236, line: 56, baseType: !1545, size: 16, offset: 16)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2426, file: !2236, line: 58, baseType: !1534, size: 32, offset: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !2426, file: !2236, line: 59, baseType: !1534, size: 32, offset: 64)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !2426, file: !2236, line: 59, baseType: !1534, size: 32, offset: 96)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !2426, file: !2236, line: 60, baseType: !1932, size: 64, offset: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !2426, file: !2236, line: 60, baseType: !1932, size: 64, offset: 192)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2426, file: !2236, line: 61, baseType: !2436, size: 64, offset: 256)
!2436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2437, size: 64)
!2437 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !2236, line: 47, baseType: !2438)
!2438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !2236, line: 44, size: 96, elements: !2439)
!2439 = !{!2440, !2441, !2442, !2443}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2438, file: !2236, line: 45, baseType: !1534, size: 32)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2438, file: !2236, line: 45, baseType: !1534, size: 32, offset: 32)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2438, file: !2236, line: 46, baseType: !1545, size: 16, offset: 64)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !2438, file: !2236, line: 46, baseType: !1545, size: 16, offset: 80)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !2426, file: !2236, line: 62, baseType: !2436, size: 64, offset: 320)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !2426, file: !2236, line: 64, baseType: !2436, size: 64, offset: 384)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !2426, file: !2236, line: 65, baseType: !1932, size: 64, offset: 448)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !2426, file: !2236, line: 66, baseType: !1932, size: 64, offset: 512)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !2415, file: !2236, line: 80, baseType: !2066, size: 96, offset: 2688)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !2415, file: !2236, line: 80, baseType: !2066, size: 96, offset: 2784)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !2415, file: !2236, line: 81, baseType: !2066, size: 96, offset: 2880)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !2415, file: !2236, line: 83, baseType: !2066, size: 96, offset: 2976)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2405, file: !2236, line: 173, baseType: !1535, size: 64, offset: 1216)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2387, file: !2038, line: 291, baseType: !2454, size: 512, offset: 1472)
!2454 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !2236, line: 178, baseType: !2455)
!2455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !2236, line: 176, size: 512, elements: !2456)
!2456 = !{!2457}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2455, file: !2236, line: 177, baseType: !1719, size: 512)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2384, file: !2038, line: 406, baseType: !2459, size: 64, offset: 1984)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 64)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !2038, line: 80, size: 1472, elements: !2461)
!2461 = !{!2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2460, file: !2038, line: 81, baseType: !1535, size: 64)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2460, file: !2038, line: 82, baseType: !1535, size: 64, offset: 64)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2460, file: !2038, line: 83, baseType: !7, size: 32, offset: 128)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2460, file: !2038, line: 84, baseType: !7, size: 32, offset: 160)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2460, file: !2038, line: 86, baseType: !7, size: 32, offset: 192)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2460, file: !2038, line: 87, baseType: !7, size: 32, offset: 224)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2460, file: !2038, line: 88, baseType: !7, size: 32, offset: 256)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2460, file: !2038, line: 89, baseType: !7, size: 32, offset: 288)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2460, file: !2038, line: 90, baseType: !7, size: 32, offset: 320)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2460, file: !2038, line: 91, baseType: !7, size: 32, offset: 352)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2460, file: !2038, line: 92, baseType: !7, size: 32, offset: 384)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2460, file: !2038, line: 93, baseType: !7, size: 32, offset: 416)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2460, file: !2038, line: 95, baseType: !1582, size: 1024, offset: 448)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2384, file: !2038, line: 407, baseType: !2476, size: 64, offset: 2048)
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 64)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !2038, line: 98, size: 1216, elements: !2478)
!2478 = !{!2479, !2480, !2481, !2482, !2483}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2477, file: !2038, line: 100, baseType: !1535, size: 64)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2477, file: !2038, line: 101, baseType: !1535, size: 64, offset: 64)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2477, file: !2038, line: 103, baseType: !7, size: 32, offset: 128)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2477, file: !2038, line: 104, baseType: !7, size: 32, offset: 160)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2477, file: !2038, line: 106, baseType: !1582, size: 1024, offset: 192)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2384, file: !2038, line: 408, baseType: !2485, size: 512, offset: 2112)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !2038, line: 109, size: 512, elements: !2486)
!2486 = !{!2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2485, file: !2038, line: 111, baseType: !1067, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2485, file: !2038, line: 112, baseType: !1067, size: 32, offset: 32)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2485, file: !2038, line: 115, baseType: !1067, size: 32, offset: 64)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2485, file: !2038, line: 116, baseType: !1067, size: 32, offset: 96)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2485, file: !2038, line: 117, baseType: !1067, size: 32, offset: 128)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2485, file: !2038, line: 118, baseType: !1067, size: 32, offset: 160)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2485, file: !2038, line: 119, baseType: !1067, size: 32, offset: 192)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2485, file: !2038, line: 120, baseType: !1067, size: 32, offset: 224)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2485, file: !2038, line: 121, baseType: !1067, size: 32, offset: 256)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2485, file: !2038, line: 122, baseType: !1067, size: 32, offset: 288)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2485, file: !2038, line: 125, baseType: !1067, size: 32, offset: 320)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2485, file: !2038, line: 126, baseType: !1067, size: 32, offset: 352)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2485, file: !2038, line: 127, baseType: !1545, size: 16, offset: 384)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2485, file: !2038, line: 128, baseType: !1545, size: 16, offset: 400)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2485, file: !2038, line: 129, baseType: !1067, size: 32, offset: 416)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2485, file: !2038, line: 130, baseType: !1067, size: 32, offset: 448)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2485, file: !2038, line: 131, baseType: !1067, size: 32, offset: 480)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2384, file: !2038, line: 409, baseType: !2505, size: 576, offset: 2624)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !2038, line: 134, size: 576, elements: !2506)
!2506 = !{!2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2505, file: !2038, line: 135, baseType: !1067, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2505, file: !2038, line: 136, baseType: !1067, size: 32, offset: 32)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2505, file: !2038, line: 137, baseType: !1067, size: 32, offset: 64)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2505, file: !2038, line: 138, baseType: !1067, size: 32, offset: 96)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2505, file: !2038, line: 139, baseType: !1067, size: 32, offset: 128)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2505, file: !2038, line: 140, baseType: !1067, size: 32, offset: 160)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2505, file: !2038, line: 141, baseType: !1067, size: 32, offset: 192)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2505, file: !2038, line: 142, baseType: !1067, size: 32, offset: 224)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2505, file: !2038, line: 143, baseType: !1534, size: 32, offset: 256)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2505, file: !2038, line: 144, baseType: !1067, size: 32, offset: 288)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2505, file: !2038, line: 145, baseType: !1067, size: 32, offset: 320)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2505, file: !2038, line: 147, baseType: !1067, size: 32, offset: 352)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2505, file: !2038, line: 148, baseType: !1067, size: 32, offset: 384)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2505, file: !2038, line: 149, baseType: !1067, size: 32, offset: 416)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2505, file: !2038, line: 150, baseType: !1067, size: 32, offset: 448)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2505, file: !2038, line: 151, baseType: !1067, size: 32, offset: 480)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2505, file: !2038, line: 152, baseType: !2009, size: 64, offset: 512)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2384, file: !2038, line: 411, baseType: !1067, size: 32, offset: 3200)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2384, file: !2038, line: 411, baseType: !1067, size: 32, offset: 3232)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2384, file: !2038, line: 411, baseType: !1067, size: 32, offset: 3264)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2384, file: !2038, line: 412, baseType: !1534, size: 32, offset: 3296)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2384, file: !2038, line: 413, baseType: !1067, size: 32, offset: 3328)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2384, file: !2038, line: 413, baseType: !1067, size: 32, offset: 3360)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2384, file: !2038, line: 415, baseType: !1067, size: 32, offset: 3392)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2384, file: !2038, line: 415, baseType: !1067, size: 32, offset: 3424)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2384, file: !2038, line: 416, baseType: !1545, size: 16, offset: 3456)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2384, file: !2038, line: 416, baseType: !1545, size: 16, offset: 3472)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2384, file: !2038, line: 418, baseType: !1534, size: 32, offset: 3488)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2384, file: !2038, line: 418, baseType: !1534, size: 32, offset: 3520)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2384, file: !2038, line: 421, baseType: !1534, size: 32, offset: 3552)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2384, file: !2038, line: 421, baseType: !1534, size: 32, offset: 3584)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2384, file: !2038, line: 421, baseType: !1534, size: 32, offset: 3616)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2384, file: !2038, line: 425, baseType: !1545, size: 16, offset: 3648)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2384, file: !2038, line: 425, baseType: !1545, size: 16, offset: 3664)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2384, file: !2038, line: 425, baseType: !1545, size: 16, offset: 3680)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2384, file: !2038, line: 426, baseType: !1545, size: 16, offset: 3696)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2384, file: !2038, line: 428, baseType: !1545, size: 16, offset: 3712)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2384, file: !2038, line: 428, baseType: !1545, size: 16, offset: 3728)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2384, file: !2038, line: 431, baseType: !1067, size: 32, offset: 3744)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2384, file: !2038, line: 433, baseType: !1545, size: 16, offset: 3776)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2384, file: !2038, line: 435, baseType: !1545, size: 16, offset: 3792)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2384, file: !2038, line: 437, baseType: !1545, size: 16, offset: 3808)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2384, file: !2038, line: 439, baseType: !1545, size: 16, offset: 3824)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2384, file: !2038, line: 441, baseType: !1545, size: 16, offset: 3840)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2384, file: !2038, line: 443, baseType: !1545, size: 16, offset: 3856)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2384, file: !2038, line: 449, baseType: !1067, size: 32, offset: 3872)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2384, file: !2038, line: 453, baseType: !1067, size: 32, offset: 3904)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2384, file: !2038, line: 458, baseType: !1545, size: 16, offset: 3936)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2384, file: !2038, line: 462, baseType: !1545, size: 16, offset: 3952)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2384, file: !2038, line: 467, baseType: !1067, size: 32, offset: 3968)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2384, file: !2038, line: 467, baseType: !1067, size: 32, offset: 4000)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2384, file: !2038, line: 469, baseType: !1545, size: 16, offset: 4032)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2384, file: !2038, line: 469, baseType: !1545, size: 16, offset: 4048)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2384, file: !2038, line: 469, baseType: !1545, size: 16, offset: 4064)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2384, file: !2038, line: 469, baseType: !1545, size: 16, offset: 4080)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2384, file: !2038, line: 474, baseType: !1545, size: 16, offset: 4096)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2384, file: !2038, line: 475, baseType: !1542, size: 8, offset: 4112)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2384, file: !2038, line: 476, baseType: !1542, size: 8, offset: 4120)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2384, file: !2038, line: 481, baseType: !1067, size: 32, offset: 4128)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2384, file: !2038, line: 486, baseType: !1067, size: 32, offset: 4160)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2384, file: !2038, line: 491, baseType: !1067, size: 32, offset: 4192)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2384, file: !2038, line: 496, baseType: !1545, size: 16, offset: 4224)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2384, file: !2038, line: 498, baseType: !1545, size: 16, offset: 4240)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2384, file: !2038, line: 501, baseType: !1545, size: 16, offset: 4256)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2384, file: !2038, line: 502, baseType: !1545, size: 16, offset: 4272)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2384, file: !2038, line: 508, baseType: !1545, size: 16, offset: 4288)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2384, file: !2038, line: 513, baseType: !1545, size: 16, offset: 4304)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2384, file: !2038, line: 515, baseType: !1545, size: 16, offset: 4320)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2384, file: !2038, line: 515, baseType: !1545, size: 16, offset: 4336)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2384, file: !2038, line: 519, baseType: !1590, size: 128, offset: 4352)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2384, file: !2038, line: 519, baseType: !1590, size: 128, offset: 4480)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2384, file: !2038, line: 520, baseType: !1878, size: 128, offset: 4608)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2384, file: !2038, line: 523, baseType: !1627, size: 128, offset: 4736)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2384, file: !2038, line: 524, baseType: !1545, size: 16, offset: 4864)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2384, file: !2038, line: 527, baseType: !1545, size: 16, offset: 4880)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2384, file: !2038, line: 532, baseType: !1534, size: 32, offset: 4896)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2384, file: !2038, line: 532, baseType: !1534, size: 32, offset: 4928)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2384, file: !2038, line: 534, baseType: !1534, size: 32, offset: 4960)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2384, file: !2038, line: 538, baseType: !1534, size: 32, offset: 4992)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2384, file: !2038, line: 542, baseType: !1067, size: 32, offset: 5024)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2384, file: !2038, line: 545, baseType: !1534, size: 32, offset: 5056)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2384, file: !2038, line: 545, baseType: !1534, size: 32, offset: 5088)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2384, file: !2038, line: 545, baseType: !1534, size: 32, offset: 5120)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2384, file: !2038, line: 548, baseType: !1534, size: 32, offset: 5152)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2384, file: !2038, line: 551, baseType: !1545, size: 16, offset: 5184)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2384, file: !2038, line: 551, baseType: !1545, size: 16, offset: 5200)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2384, file: !2038, line: 551, baseType: !1545, size: 16, offset: 5216)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2384, file: !2038, line: 551, baseType: !1545, size: 16, offset: 5232)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2384, file: !2038, line: 552, baseType: !1545, size: 16, offset: 5248)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2384, file: !2038, line: 552, baseType: !1545, size: 16, offset: 5264)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2384, file: !2038, line: 553, baseType: !1534, size: 32, offset: 5280)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2384, file: !2038, line: 553, baseType: !1534, size: 32, offset: 5312)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2384, file: !2038, line: 554, baseType: !1545, size: 16, offset: 5344)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2384, file: !2038, line: 554, baseType: !1545, size: 16, offset: 5360)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2384, file: !2038, line: 555, baseType: !1534, size: 32, offset: 5376)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2384, file: !2038, line: 555, baseType: !1534, size: 32, offset: 5408)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2384, file: !2038, line: 558, baseType: !1992, size: 8192, offset: 5440)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2384, file: !2038, line: 561, baseType: !1067, size: 32, offset: 13632)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2384, file: !2038, line: 562, baseType: !1545, size: 16, offset: 13664)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2384, file: !2038, line: 562, baseType: !1545, size: 16, offset: 13680)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2384, file: !2038, line: 565, baseType: !2608, size: 6144, offset: 13696)
!2608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1542, size: 6144, elements: !2609)
!2609 = !{!2610}
!2610 = !DISubrange(count: 768)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2384, file: !2038, line: 568, baseType: !2231, size: 128, offset: 19840)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2384, file: !2038, line: 569, baseType: !2231, size: 128, offset: 19968)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2384, file: !2038, line: 572, baseType: !1542, size: 8, offset: 20096)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2384, file: !2038, line: 573, baseType: !1542, size: 8, offset: 20104)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2384, file: !2038, line: 574, baseType: !1542, size: 8, offset: 20112)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2384, file: !2038, line: 575, baseType: !2155, size: 40, offset: 20120)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2384, file: !2038, line: 578, baseType: !1067, size: 32, offset: 20160)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2384, file: !2038, line: 579, baseType: !1545, size: 16, offset: 20192)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2384, file: !2038, line: 580, baseType: !1545, size: 16, offset: 20208)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2384, file: !2038, line: 581, baseType: !1534, size: 32, offset: 20224)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2384, file: !2038, line: 582, baseType: !1534, size: 32, offset: 20256)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2384, file: !2038, line: 585, baseType: !1545, size: 16, offset: 20288)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2384, file: !2038, line: 585, baseType: !1545, size: 16, offset: 20304)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2384, file: !2038, line: 586, baseType: !1534, size: 32, offset: 20320)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2384, file: !2038, line: 589, baseType: !1545, size: 16, offset: 20352)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2384, file: !2038, line: 589, baseType: !1545, size: 16, offset: 20368)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2384, file: !2038, line: 590, baseType: !1067, size: 32, offset: 20384)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2384, file: !2038, line: 593, baseType: !1545, size: 16, offset: 20416)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2384, file: !2038, line: 593, baseType: !1545, size: 16, offset: 20432)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2384, file: !2038, line: 594, baseType: !1545, size: 16, offset: 20448)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2384, file: !2038, line: 594, baseType: !1545, size: 16, offset: 20464)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2384, file: !2038, line: 595, baseType: !1534, size: 32, offset: 20480)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2384, file: !2038, line: 596, baseType: !1534, size: 32, offset: 20512)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2384, file: !2038, line: 597, baseType: !2635, size: 64, offset: 20544)
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 64)
!2636 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !2637, line: 44, flags: DIFlagFwdDecl)
!2637 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2384, file: !2038, line: 600, baseType: !1067, size: 32, offset: 20608)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2384, file: !2038, line: 601, baseType: !1534, size: 32, offset: 20640)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2384, file: !2038, line: 604, baseType: !2641, size: 256, offset: 20672)
!2641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1542, size: 256, elements: !2642)
!2642 = !{!2643}
!2643 = !DISubrange(count: 32)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2384, file: !2038, line: 607, baseType: !2645, size: 10880, offset: 20928)
!2645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !2038, line: 364, size: 10880, elements: !2646)
!2646 = !{!2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2645, file: !2038, line: 365, baseType: !2387, size: 1984)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2645, file: !2038, line: 367, baseType: !1992, size: 8192, offset: 1984)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2645, file: !2038, line: 369, baseType: !1545, size: 16, offset: 10176)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2645, file: !2038, line: 369, baseType: !1545, size: 16, offset: 10192)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2645, file: !2038, line: 370, baseType: !1545, size: 16, offset: 10208)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2645, file: !2038, line: 370, baseType: !1545, size: 16, offset: 10224)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2645, file: !2038, line: 372, baseType: !1534, size: 32, offset: 10240)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2645, file: !2038, line: 373, baseType: !1534, size: 32, offset: 10272)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2645, file: !2038, line: 375, baseType: !2300, size: 24, offset: 10304)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2645, file: !2038, line: 376, baseType: !1542, size: 8, offset: 10328)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2645, file: !2038, line: 378, baseType: !1542, size: 8, offset: 10336)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2645, file: !2038, line: 379, baseType: !2300, size: 24, offset: 10344)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2645, file: !2038, line: 381, baseType: !1719, size: 512, offset: 10368)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2384, file: !2038, line: 609, baseType: !1067, size: 32, offset: 31808)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2384, file: !2038, line: 610, baseType: !1067, size: 32, offset: 31840)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !2037, file: !2038, line: 1252, baseType: !2663, size: 256, offset: 34112)
!2663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !2038, line: 158, size: 256, elements: !2664)
!2664 = !{!2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2663, file: !2038, line: 159, baseType: !1067, size: 32)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2663, file: !2038, line: 160, baseType: !1534, size: 32, offset: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2663, file: !2038, line: 161, baseType: !1534, size: 32, offset: 64)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2663, file: !2038, line: 162, baseType: !1534, size: 32, offset: 96)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2663, file: !2038, line: 163, baseType: !1067, size: 32, offset: 128)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2663, file: !2038, line: 164, baseType: !1545, size: 16, offset: 160)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2663, file: !2038, line: 165, baseType: !1545, size: 16, offset: 176)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2663, file: !2038, line: 166, baseType: !1534, size: 32, offset: 192)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2663, file: !2038, line: 167, baseType: !1534, size: 32, offset: 224)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2037, file: !2038, line: 1254, baseType: !1627, size: 128, offset: 34368)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !2037, file: !2038, line: 1255, baseType: !1627, size: 128, offset: 34496)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !2037, file: !2038, line: 1257, baseType: !1535, size: 64, offset: 34624)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !2037, file: !2038, line: 1258, baseType: !1535, size: 64, offset: 34688)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !2037, file: !2038, line: 1259, baseType: !1535, size: 64, offset: 34752)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !2037, file: !2038, line: 1260, baseType: !1535, size: 64, offset: 34816)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !2037, file: !2038, line: 1262, baseType: !1535, size: 64, offset: 34880)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !2037, file: !2038, line: 1265, baseType: !2682, size: 64, offset: 34944)
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2683, size: 64)
!2683 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !2038, line: 1265, flags: DIFlagFwdDecl)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !2037, file: !2038, line: 1266, baseType: !1545, size: 16, offset: 35008)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !2037, file: !2038, line: 1267, baseType: !1545, size: 16, offset: 35024)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !2037, file: !2038, line: 1270, baseType: !1067, size: 32, offset: 35040)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !2037, file: !2038, line: 1271, baseType: !1627, size: 128, offset: 35072)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2037, file: !2038, line: 1274, baseType: !2689, size: 128, offset: 35200)
!2689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !2038, line: 650, size: 128, elements: !2690)
!2690 = !{!2691, !2692, !2693, !2694, !2695}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2689, file: !2038, line: 651, baseType: !2066, size: 96)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2689, file: !2038, line: 652, baseType: !1542, size: 8, offset: 96)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2689, file: !2038, line: 652, baseType: !1542, size: 8, offset: 104)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2689, file: !2038, line: 652, baseType: !1542, size: 8, offset: 112)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2689, file: !2038, line: 652, baseType: !1542, size: 8, offset: 120)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !2037, file: !2038, line: 1275, baseType: !2697, size: 1472, offset: 35328)
!2697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !2038, line: 676, size: 1472, elements: !2698)
!2698 = !{!2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2711, !2721, !2722, !2723, !2724, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2697, file: !2038, line: 679, baseType: !2689, size: 128)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2697, file: !2038, line: 680, baseType: !1545, size: 16, offset: 128)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2697, file: !2038, line: 680, baseType: !1545, size: 16, offset: 144)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2697, file: !2038, line: 680, baseType: !1545, size: 16, offset: 160)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2697, file: !2038, line: 680, baseType: !1545, size: 16, offset: 176)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2697, file: !2038, line: 681, baseType: !1545, size: 16, offset: 192)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2697, file: !2038, line: 681, baseType: !1545, size: 16, offset: 208)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2697, file: !2038, line: 681, baseType: !1545, size: 16, offset: 224)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2697, file: !2038, line: 681, baseType: !1545, size: 16, offset: 240)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2697, file: !2038, line: 682, baseType: !1545, size: 16, offset: 256)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2697, file: !2038, line: 682, baseType: !2710, size: 48, offset: 272)
!2710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1545, size: 48, elements: !2067)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2697, file: !2038, line: 685, baseType: !2712, size: 192, offset: 320)
!2712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !2038, line: 633, size: 192, elements: !2713)
!2713 = !{!2714, !2715, !2716, !2717, !2718, !2719, !2720}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2712, file: !2038, line: 634, baseType: !1545, size: 16)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2712, file: !2038, line: 634, baseType: !1545, size: 16, offset: 16)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2712, file: !2038, line: 635, baseType: !1545, size: 16, offset: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2712, file: !2038, line: 635, baseType: !1545, size: 16, offset: 48)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2712, file: !2038, line: 636, baseType: !1534, size: 32, offset: 64)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2712, file: !2038, line: 636, baseType: !1534, size: 32, offset: 96)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2712, file: !2038, line: 637, baseType: !2635, size: 64, offset: 128)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2697, file: !2038, line: 686, baseType: !1545, size: 16, offset: 512)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2697, file: !2038, line: 686, baseType: !1545, size: 16, offset: 528)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2697, file: !2038, line: 687, baseType: !1534, size: 32, offset: 544)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2697, file: !2038, line: 688, baseType: !2725, size: 448, offset: 576)
!2725 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !2038, line: 674, baseType: !2726)
!2726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !2038, line: 659, size: 448, elements: !2727)
!2727 = !{!2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742}
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2726, file: !2038, line: 660, baseType: !1534, size: 32)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2726, file: !2038, line: 661, baseType: !1534, size: 32, offset: 32)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2726, file: !2038, line: 662, baseType: !1534, size: 32, offset: 64)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2726, file: !2038, line: 663, baseType: !1534, size: 32, offset: 96)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2726, file: !2038, line: 664, baseType: !1534, size: 32, offset: 128)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2726, file: !2038, line: 665, baseType: !1534, size: 32, offset: 160)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2726, file: !2038, line: 666, baseType: !1534, size: 32, offset: 192)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2726, file: !2038, line: 667, baseType: !1534, size: 32, offset: 224)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2726, file: !2038, line: 668, baseType: !1534, size: 32, offset: 256)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2726, file: !2038, line: 669, baseType: !1534, size: 32, offset: 288)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2726, file: !2038, line: 670, baseType: !1067, size: 32, offset: 320)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2726, file: !2038, line: 671, baseType: !1534, size: 32, offset: 352)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2726, file: !2038, line: 672, baseType: !1534, size: 32, offset: 384)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2726, file: !2038, line: 673, baseType: !1545, size: 16, offset: 416)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2726, file: !2038, line: 673, baseType: !1545, size: 16, offset: 432)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2697, file: !2038, line: 692, baseType: !1534, size: 32, offset: 1024)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2697, file: !2038, line: 697, baseType: !1534, size: 32, offset: 1056)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2697, file: !2038, line: 703, baseType: !1067, size: 32, offset: 1088)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2697, file: !2038, line: 704, baseType: !1545, size: 16, offset: 1120)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2697, file: !2038, line: 704, baseType: !1545, size: 16, offset: 1136)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2697, file: !2038, line: 705, baseType: !1545, size: 16, offset: 1152)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2697, file: !2038, line: 706, baseType: !1545, size: 16, offset: 1168)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2697, file: !2038, line: 707, baseType: !1545, size: 16, offset: 1184)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2697, file: !2038, line: 708, baseType: !1545, size: 16, offset: 1200)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2697, file: !2038, line: 709, baseType: !1545, size: 16, offset: 1216)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2697, file: !2038, line: 709, baseType: !1545, size: 16, offset: 1232)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2697, file: !2038, line: 709, baseType: !1545, size: 16, offset: 1248)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2697, file: !2038, line: 709, baseType: !1545, size: 16, offset: 1264)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2697, file: !2038, line: 710, baseType: !1545, size: 16, offset: 1280)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2697, file: !2038, line: 711, baseType: !1545, size: 16, offset: 1296)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2697, file: !2038, line: 712, baseType: !1534, size: 32, offset: 1312)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2697, file: !2038, line: 713, baseType: !1534, size: 32, offset: 1344)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2697, file: !2038, line: 713, baseType: !1534, size: 32, offset: 1376)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2697, file: !2038, line: 713, baseType: !1534, size: 32, offset: 1408)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2697, file: !2038, line: 713, baseType: !1534, size: 32, offset: 1440)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !2037, file: !2038, line: 1278, baseType: !2764, size: 64, offset: 36800)
!2764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !2038, line: 1197, size: 64, elements: !2765)
!2765 = !{!2766, !2767, !2768, !2769}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2764, file: !2038, line: 1199, baseType: !1534, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2764, file: !2038, line: 1200, baseType: !1542, size: 8, offset: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2764, file: !2038, line: 1201, baseType: !1542, size: 8, offset: 40)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2764, file: !2038, line: 1202, baseType: !1545, size: 16, offset: 48)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2037, file: !2038, line: 1281, baseType: !2771, size: 64, offset: 36864)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 64)
!2772 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !2038, line: 61, flags: DIFlagFwdDecl)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !2037, file: !2038, line: 1284, baseType: !2774, size: 192, offset: 36928)
!2774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !2038, line: 1208, size: 192, elements: !2775)
!2775 = !{!2776, !2777, !2778, !2779}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2774, file: !2038, line: 1209, baseType: !2066, size: 96)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2774, file: !2038, line: 1210, baseType: !1067, size: 32, offset: 96)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2774, file: !2038, line: 1210, baseType: !1067, size: 32, offset: 128)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2774, file: !2038, line: 1210, baseType: !1067, size: 32, offset: 160)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2037, file: !2038, line: 1287, baseType: !2781, size: 64, offset: 37120)
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 64)
!2782 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !2038, line: 62, flags: DIFlagFwdDecl)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !2037, file: !2038, line: 1289, baseType: !2784, size: 64, offset: 37184)
!2784 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !2785, line: 27, baseType: !2786)
!2785 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!2786 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !2787, line: 45, baseType: !1549)
!2787 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !2037, file: !2038, line: 1290, baseType: !2784, size: 64, offset: 37248)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2037, file: !2038, line: 1293, baseType: !2404, size: 1280, offset: 37312)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2037, file: !2038, line: 1294, baseType: !2454, size: 512, offset: 38592)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !2037, file: !2038, line: 1295, baseType: !2235, size: 512, offset: 39104)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !2037, file: !2038, line: 1298, baseType: !2793, size: 64, offset: 39616)
!2793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 64)
!2794 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !2038, line: 1298, flags: DIFlagFwdDecl)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !1970, file: !1705, line: 58, baseType: !2036, size: 64, offset: 1536)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !1970, file: !1705, line: 60, baseType: !1067, size: 32, offset: 1600)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1970, file: !1705, line: 61, baseType: !1067, size: 32, offset: 1632)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1970, file: !1705, line: 63, baseType: !1545, size: 16, offset: 1664)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1970, file: !1705, line: 64, baseType: !1545, size: 16, offset: 1680)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !1970, file: !1705, line: 65, baseType: !1545, size: 16, offset: 1696)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !1970, file: !1705, line: 66, baseType: !1545, size: 16, offset: 1712)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !1970, file: !1705, line: 67, baseType: !1545, size: 16, offset: 1728)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !1970, file: !1705, line: 68, baseType: !1545, size: 16, offset: 1744)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !1970, file: !1705, line: 69, baseType: !1545, size: 16, offset: 1760)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !1970, file: !1705, line: 70, baseType: !1545, size: 16, offset: 1776)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !1970, file: !1705, line: 71, baseType: !1545, size: 16, offset: 1792)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !1970, file: !1705, line: 73, baseType: !1545, size: 16, offset: 1808)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !1970, file: !1705, line: 74, baseType: !1545, size: 16, offset: 1824)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1970, file: !1705, line: 76, baseType: !1545, size: 16, offset: 1840)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !1970, file: !1705, line: 78, baseType: !1955, size: 64, offset: 1856)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1970, file: !1705, line: 79, baseType: !1535, size: 64, offset: 1920)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !1962, file: !1963, line: 175, baseType: !1969, size: 64, offset: 256)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !1962, file: !1963, line: 176, baseType: !1719, size: 512, offset: 320)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !1962, file: !1963, line: 178, baseType: !1545, size: 16, offset: 832)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !1962, file: !1963, line: 178, baseType: !1545, size: 16, offset: 848)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !1962, file: !1963, line: 178, baseType: !1545, size: 16, offset: 864)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !1962, file: !1963, line: 178, baseType: !1545, size: 16, offset: 880)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !1962, file: !1963, line: 179, baseType: !1545, size: 16, offset: 896)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !1962, file: !1963, line: 180, baseType: !1545, size: 16, offset: 912)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1962, file: !1963, line: 181, baseType: !1545, size: 16, offset: 928)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1962, file: !1963, line: 182, baseType: !1545, size: 16, offset: 944)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !1962, file: !1963, line: 183, baseType: !1545, size: 16, offset: 960)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !1962, file: !1963, line: 184, baseType: !1545, size: 16, offset: 976)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !1962, file: !1963, line: 185, baseType: !1545, size: 16, offset: 992)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !1962, file: !1963, line: 186, baseType: !1545, size: 16, offset: 1008)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !1962, file: !1963, line: 188, baseType: !1067, size: 32, offset: 1024)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !1962, file: !1963, line: 190, baseType: !1545, size: 16, offset: 1056)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !1962, file: !1963, line: 191, baseType: !1545, size: 16, offset: 1072)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !1962, file: !1963, line: 194, baseType: !1833, size: 64, offset: 1088)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !1962, file: !1963, line: 196, baseType: !2831, size: 64, offset: 1152)
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 64)
!2832 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !1963, line: 55, flags: DIFlagFwdDecl)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !1962, file: !1963, line: 198, baseType: !2834, size: 64, offset: 1216)
!2834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2835, size: 64)
!2835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !1020, line: 398, size: 448, elements: !2836)
!2836 = !{!2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2835, file: !1020, line: 399, baseType: !2834, size: 64)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2835, file: !1020, line: 399, baseType: !2834, size: 64, offset: 64)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !2835, file: !1020, line: 400, baseType: !1067, size: 32, offset: 128)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2835, file: !1020, line: 401, baseType: !1067, size: 32, offset: 160)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2835, file: !1020, line: 402, baseType: !1067, size: 32, offset: 192)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !2835, file: !1020, line: 403, baseType: !1067, size: 32, offset: 224)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2835, file: !1020, line: 404, baseType: !1067, size: 32, offset: 256)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2835, file: !1020, line: 405, baseType: !1067, size: 32, offset: 288)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2835, file: !1020, line: 407, baseType: !1535, size: 64, offset: 320)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !2835, file: !1020, line: 414, baseType: !1535, size: 64, offset: 384)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !1962, file: !1963, line: 200, baseType: !1067, size: 32, offset: 1280)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !1962, file: !1963, line: 200, baseType: !1067, size: 32, offset: 1312)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !1962, file: !1963, line: 201, baseType: !1535, size: 64, offset: 1344)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1962, file: !1963, line: 203, baseType: !1627, size: 128, offset: 1408)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !1962, file: !1963, line: 204, baseType: !1627, size: 128, offset: 1536)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !1962, file: !1963, line: 205, baseType: !1627, size: 128, offset: 1664)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !1962, file: !1963, line: 207, baseType: !1627, size: 128, offset: 1792)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !1962, file: !1963, line: 208, baseType: !1627, size: 128, offset: 1920)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !1956, file: !1020, line: 495, baseType: !1540, size: 64, offset: 192)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !1956, file: !1020, line: 496, baseType: !1067, size: 32, offset: 256)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1956, file: !1020, line: 497, baseType: !1535, size: 64, offset: 320)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1956, file: !1020, line: 499, baseType: !1540, size: 64, offset: 384)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1956, file: !1020, line: 500, baseType: !1540, size: 64, offset: 448)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !1956, file: !1020, line: 502, baseType: !1540, size: 64, offset: 512)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !1956, file: !1020, line: 503, baseType: !1540, size: 64, offset: 576)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1956, file: !1020, line: 504, baseType: !1540, size: 64, offset: 640)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !1956, file: !1020, line: 505, baseType: !1067, size: 32, offset: 704)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !1917, file: !1705, line: 234, baseType: !1878, size: 128, offset: 1408)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !1917, file: !1705, line: 235, baseType: !1878, size: 128, offset: 1536)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !1917, file: !1705, line: 236, baseType: !1545, size: 16, offset: 1664)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !1917, file: !1705, line: 236, baseType: !1545, size: 16, offset: 1680)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !1917, file: !1705, line: 238, baseType: !1545, size: 16, offset: 1696)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !1917, file: !1705, line: 239, baseType: !1545, size: 16, offset: 1712)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1917, file: !1705, line: 240, baseType: !1545, size: 16, offset: 1728)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1917, file: !1705, line: 241, baseType: !1545, size: 16, offset: 1744)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !1917, file: !1705, line: 243, baseType: !1534, size: 32, offset: 1760)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !1917, file: !1705, line: 244, baseType: !1545, size: 16, offset: 1792)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !1917, file: !1705, line: 244, baseType: !1545, size: 16, offset: 1808)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !1917, file: !1705, line: 246, baseType: !1545, size: 16, offset: 1824)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !1917, file: !1705, line: 247, baseType: !1545, size: 16, offset: 1840)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !1917, file: !1705, line: 248, baseType: !1545, size: 16, offset: 1856)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !1917, file: !1705, line: 249, baseType: !1545, size: 16, offset: 1872)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !1917, file: !1705, line: 250, baseType: !1545, size: 16, offset: 1888)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1917, file: !1705, line: 251, baseType: !1545, size: 16, offset: 1904)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1917, file: !1705, line: 253, baseType: !2882, size: 64, offset: 1920)
!2882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 64)
!2883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !1714, line: 116, size: 1472, elements: !2884)
!2884 = !{!2885, !2886, !2887, !2888, !2934, !2935, !2939, !3053, !3057, !3061, !3062, !3063, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2883, file: !1714, line: 117, baseType: !2882, size: 64)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2883, file: !1714, line: 117, baseType: !2882, size: 64, offset: 64)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !2883, file: !1714, line: 119, baseType: !1067, size: 32, offset: 128)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2883, file: !1714, line: 122, baseType: !2889, size: 64, offset: 192)
!2889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2890, size: 64)
!2890 = !DISubroutineType(types: !2891)
!2891 = !{null, !2892, !1916}
!2892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2893, size: 64)
!2893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindowManager", file: !1963, line: 128, size: 2816, elements: !2894)
!2894 = !{!2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2913, !2914, !2915, !2916, !2917, !2928, !2929, !2930, !2931, !2932, !2933}
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2893, file: !1963, line: 129, baseType: !1973, size: 960)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "windrawable", scope: !2893, file: !1963, line: 131, baseType: !1961, size: 64, offset: 960)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "winactive", scope: !2893, file: !1963, line: 131, baseType: !1961, size: 64, offset: 1024)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "windows", scope: !2893, file: !1963, line: 132, baseType: !1627, size: 128, offset: 1088)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2893, file: !1963, line: 134, baseType: !1067, size: 32, offset: 1216)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "file_saved", scope: !2893, file: !1963, line: 135, baseType: !1545, size: 16, offset: 1248)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "op_undo_depth", scope: !2893, file: !1963, line: 136, baseType: !1545, size: 16, offset: 1264)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "operators", scope: !2893, file: !1963, line: 138, baseType: !1627, size: 128, offset: 1280)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2893, file: !1963, line: 140, baseType: !1627, size: 128, offset: 1408)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !2893, file: !1963, line: 142, baseType: !2905, size: 320, offset: 1536)
!2905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !1963, line: 106, size: 320, elements: !2906)
!2906 = !{!2907, !2908, !2909, !2910, !2911, !2912}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2905, file: !1963, line: 107, baseType: !1627, size: 128)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !2905, file: !1963, line: 108, baseType: !1067, size: 32, offset: 128)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !2905, file: !1963, line: 109, baseType: !1067, size: 32, offset: 160)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2905, file: !1963, line: 110, baseType: !1067, size: 32, offset: 192)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2905, file: !1963, line: 110, baseType: !1067, size: 32, offset: 224)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !2905, file: !1963, line: 111, baseType: !1955, size: 64, offset: 256)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "jobs", scope: !2893, file: !1963, line: 144, baseType: !1627, size: 128, offset: 1856)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursors", scope: !2893, file: !1963, line: 146, baseType: !1627, size: 128, offset: 1984)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "drags", scope: !2893, file: !1963, line: 148, baseType: !1627, size: 128, offset: 2112)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "keyconfigs", scope: !2893, file: !1963, line: 150, baseType: !1627, size: 128, offset: 2240)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "defaultconf", scope: !2893, file: !1963, line: 151, baseType: !2918, size: 64, offset: 2368)
!2918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2919, size: 64)
!2919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyConfig", file: !1963, line: 310, size: 1344, elements: !2920)
!2920 = !{!2921, !2922, !2923, !2924, !2925, !2926, !2927}
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2919, file: !1963, line: 311, baseType: !2918, size: 64)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2919, file: !1963, line: 311, baseType: !2918, size: 64, offset: 64)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !2919, file: !1963, line: 313, baseType: !1719, size: 512, offset: 128)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "basename", scope: !2919, file: !1963, line: 314, baseType: !1719, size: 512, offset: 640)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "keymaps", scope: !2919, file: !1963, line: 316, baseType: !1627, size: 128, offset: 1152)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "actkeymap", scope: !2919, file: !1963, line: 317, baseType: !1067, size: 32, offset: 1280)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2919, file: !1963, line: 317, baseType: !1067, size: 32, offset: 1312)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "addonconf", scope: !2893, file: !1963, line: 152, baseType: !2918, size: 64, offset: 2432)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "userconf", scope: !2893, file: !1963, line: 153, baseType: !2918, size: 64, offset: 2496)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "timers", scope: !2893, file: !1963, line: 155, baseType: !1627, size: 128, offset: 2560)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "autosavetimer", scope: !2893, file: !1963, line: 156, baseType: !1955, size: 64, offset: 2688)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "is_interface_locked", scope: !2893, file: !1963, line: 158, baseType: !1542, size: 8, offset: 2752)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !2893, file: !1963, line: 159, baseType: !1893, size: 56, offset: 2760)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !2883, file: !1714, line: 124, baseType: !2889, size: 64, offset: 256)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !2883, file: !1714, line: 126, baseType: !2936, size: 64, offset: 320)
!2936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2937, size: 64)
!2937 = !DISubroutineType(types: !2938)
!2938 = !{null, !1645, !1916}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !2883, file: !1714, line: 128, baseType: !2940, size: 64, offset: 384)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2941, size: 64)
!2941 = !DISubroutineType(types: !2942)
!2942 = !{null, !1969, !2943, !1916, !3010}
!2943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 64)
!2944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !1705, line: 203, size: 1280, elements: !2945)
!2945 = !{!2946, !2947, !2948, !2965, !2966, !2967, !2968, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !3049, !3050, !3051, !3052}
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2944, file: !1705, line: 204, baseType: !2943, size: 64)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2944, file: !1705, line: 204, baseType: !2943, size: 64, offset: 64)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2944, file: !1705, line: 206, baseType: !2949, size: 64, offset: 128)
!2949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2950, size: 64)
!2950 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !1705, line: 87, baseType: !2951)
!2951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !1705, line: 82, size: 256, elements: !2952)
!2952 = !{!2953, !2955, !2956, !2957, !2963, !2964}
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2951, file: !1705, line: 83, baseType: !2954, size: 64)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2951, size: 64)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2951, file: !1705, line: 83, baseType: !2954, size: 64, offset: 64)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !2951, file: !1705, line: 83, baseType: !2954, size: 64, offset: 128)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2951, file: !1705, line: 84, baseType: !2958, size: 32, offset: 192)
!2958 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !1591, line: 43, baseType: !2959)
!2959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !1591, line: 41, size: 32, elements: !2960)
!2960 = !{!2961, !2962}
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2959, file: !1591, line: 42, baseType: !1545, size: 16)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2959, file: !1591, line: 42, baseType: !1545, size: 16, offset: 16)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2951, file: !1705, line: 86, baseType: !1545, size: 16, offset: 224)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !2951, file: !1705, line: 86, baseType: !1545, size: 16, offset: 240)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2944, file: !1705, line: 206, baseType: !2949, size: 64, offset: 192)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2944, file: !1705, line: 206, baseType: !2949, size: 64, offset: 256)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2944, file: !1705, line: 206, baseType: !2949, size: 64, offset: 320)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !2944, file: !1705, line: 207, baseType: !2969, size: 64, offset: 384)
!2969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2970, size: 64)
!2970 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !1705, line: 80, baseType: !1970)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !2944, file: !1705, line: 209, baseType: !1878, size: 128, offset: 448)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !2944, file: !1705, line: 211, baseType: !1542, size: 8, offset: 576)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !2944, file: !1705, line: 211, baseType: !1542, size: 8, offset: 584)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2944, file: !1705, line: 212, baseType: !1545, size: 16, offset: 592)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2944, file: !1705, line: 212, baseType: !1545, size: 16, offset: 608)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !2944, file: !1705, line: 214, baseType: !1545, size: 16, offset: 624)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !2944, file: !1705, line: 215, baseType: !1545, size: 16, offset: 640)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2944, file: !1705, line: 216, baseType: !1545, size: 16, offset: 656)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !2944, file: !1705, line: 217, baseType: !1545, size: 16, offset: 672)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2944, file: !1705, line: 219, baseType: !1542, size: 8, offset: 688)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2944, file: !1705, line: 219, baseType: !1542, size: 8, offset: 696)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2944, file: !1705, line: 221, baseType: !2983, size: 64, offset: 704)
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2984, size: 64)
!2984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !1714, line: 66, size: 1728, elements: !2985)
!2985 = !{!2986, !2987, !2988, !2989, !2990, !2991, !2997, !3001, !3005, !3006, !3023, !3027, !3031, !3035, !3039, !3040, !3046, !3047, !3048}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2984, file: !1714, line: 67, baseType: !2983, size: 64)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2984, file: !1714, line: 67, baseType: !2983, size: 64, offset: 64)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2984, file: !1714, line: 69, baseType: !1719, size: 512, offset: 128)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !2984, file: !1714, line: 70, baseType: !1067, size: 32, offset: 640)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "iconid", scope: !2984, file: !1714, line: 71, baseType: !1067, size: 32, offset: 672)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "new", scope: !2984, file: !1714, line: 74, baseType: !2992, size: 64, offset: 704)
!2992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2993, size: 64)
!2993 = !DISubroutineType(types: !2994)
!2994 = !{!2995, !1645}
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 64)
!2996 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !1705, line: 40, flags: DIFlagFwdDecl)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2984, file: !1714, line: 76, baseType: !2998, size: 64, offset: 768)
!2998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2999, size: 64)
!2999 = !DISubroutineType(types: !3000)
!3000 = !{null, !2995}
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2984, file: !1714, line: 79, baseType: !3002, size: 64, offset: 832)
!3002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3003, size: 64)
!3003 = !DISubroutineType(types: !3004)
!3004 = !{null, !2892, !2943}
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !2984, file: !1714, line: 81, baseType: !3002, size: 64, offset: 896)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !2984, file: !1714, line: 83, baseType: !3007, size: 64, offset: 960)
!3007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3008, size: 64)
!3008 = !DISubroutineType(types: !3009)
!3009 = !{null, !1969, !2943, !3010}
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 64)
!3011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmNotifier", file: !1020, line: 195, size: 512, elements: !3012)
!3012 = !{!3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022}
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3011, file: !1020, line: 196, baseType: !3010, size: 64)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3011, file: !1020, line: 196, baseType: !3010, size: 64, offset: 64)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !3011, file: !1020, line: 198, baseType: !2892, size: 64, offset: 128)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !3011, file: !1020, line: 199, baseType: !1961, size: 64, offset: 192)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !3011, file: !1020, line: 201, baseType: !1067, size: 32, offset: 256)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !3011, file: !1020, line: 202, baseType: !7, size: 32, offset: 288)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3011, file: !1020, line: 202, baseType: !7, size: 32, offset: 320)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !3011, file: !1020, line: 202, baseType: !7, size: 32, offset: 352)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3011, file: !1020, line: 202, baseType: !7, size: 32, offset: 384)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !3011, file: !1020, line: 204, baseType: !1535, size: 64, offset: 448)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "refresh", scope: !2984, file: !1714, line: 86, baseType: !3024, size: 64, offset: 1024)
!3024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3025, size: 64)
!3025 = !DISubroutineType(types: !3026)
!3026 = !{null, !1645, !2943}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "duplicate", scope: !2984, file: !1714, line: 89, baseType: !3028, size: 64, offset: 1088)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = !DISubroutineType(types: !3030)
!3030 = !{!2995, !2995}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "operatortypes", scope: !2984, file: !1714, line: 92, baseType: !3032, size: 64, offset: 1152)
!3032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 64)
!3033 = !DISubroutineType(types: !3034)
!3034 = !{null}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "keymap", scope: !2984, file: !1714, line: 94, baseType: !3036, size: 64, offset: 1216)
!3036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3037, size: 64)
!3037 = !DISubroutineType(types: !3038)
!3038 = !{null, !2918}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "dropboxes", scope: !2984, file: !1714, line: 96, baseType: !3032, size: 64, offset: 1280)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2984, file: !1714, line: 99, baseType: !3041, size: 64, offset: 1344)
!3041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3042, size: 64)
!3042 = !DISubroutineType(types: !3043)
!3043 = !{!1067, !1645, !1647, !3044}
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 64)
!3045 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContextDataResult", file: !1538, line: 71, flags: DIFlagFwdDecl)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "regiontypes", scope: !2984, file: !1714, line: 102, baseType: !1627, size: 128, offset: 1408)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "toolshelf", scope: !2984, file: !1714, line: 105, baseType: !1627, size: 128, offset: 1536)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "keymapflag", scope: !2984, file: !1714, line: 110, baseType: !1067, size: 32, offset: 1664)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !2944, file: !1705, line: 223, baseType: !1627, size: 128, offset: 768)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2944, file: !1705, line: 224, baseType: !1627, size: 128, offset: 896)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !2944, file: !1705, line: 225, baseType: !1627, size: 128, offset: 1024)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !2944, file: !1705, line: 227, baseType: !1627, size: 128, offset: 1152)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2883, file: !1714, line: 130, baseType: !3054, size: 64, offset: 448)
!3054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3055, size: 64)
!3055 = !DISubroutineType(types: !3056)
!3056 = !{null, !1916}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "duplicate", scope: !2883, file: !1714, line: 133, baseType: !3058, size: 64, offset: 512)
!3058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3059, size: 64)
!3059 = !DISubroutineType(types: !3060)
!3060 = !{!1535, !1535}
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "operatortypes", scope: !2883, file: !1714, line: 137, baseType: !3032, size: 64, offset: 576)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "keymap", scope: !2883, file: !1714, line: 139, baseType: !3036, size: 64, offset: 640)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !2883, file: !1714, line: 141, baseType: !3064, size: 64, offset: 704)
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 64)
!3065 = !DISubroutineType(types: !3066)
!3066 = !{null, !1961, !2943, !1916}
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2883, file: !1714, line: 144, baseType: !3041, size: 64, offset: 768)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "drawcalls", scope: !2883, file: !1714, line: 147, baseType: !1627, size: 128, offset: 832)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "paneltypes", scope: !2883, file: !1714, line: 150, baseType: !1627, size: 128, offset: 960)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "headertypes", scope: !2883, file: !1714, line: 153, baseType: !1627, size: 128, offset: 1088)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "minsizex", scope: !2883, file: !1714, line: 156, baseType: !1067, size: 32, offset: 1216)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "minsizey", scope: !2883, file: !1714, line: 156, baseType: !1067, size: 32, offset: 1248)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "prefsizex", scope: !2883, file: !1714, line: 158, baseType: !1067, size: 32, offset: 1280)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "prefsizey", scope: !2883, file: !1714, line: 158, baseType: !1067, size: 32, offset: 1312)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "keymapflag", scope: !2883, file: !1714, line: 160, baseType: !1067, size: 32, offset: 1344)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "do_lock", scope: !2883, file: !1714, line: 162, baseType: !1545, size: 16, offset: 1376)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2883, file: !1714, line: 162, baseType: !1545, size: 16, offset: 1392)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "event_cursor", scope: !2883, file: !1714, line: 164, baseType: !1545, size: 16, offset: 1408)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !1917, file: !1705, line: 255, baseType: !1627, size: 128, offset: 1984)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !1917, file: !1705, line: 256, baseType: !1627, size: 128, offset: 2112)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !1917, file: !1705, line: 257, baseType: !1627, size: 128, offset: 2240)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !1917, file: !1705, line: 258, baseType: !1627, size: 128, offset: 2368)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !1917, file: !1705, line: 259, baseType: !1627, size: 128, offset: 2496)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !1917, file: !1705, line: 260, baseType: !1627, size: 128, offset: 2624)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !1917, file: !1705, line: 261, baseType: !1627, size: 128, offset: 2752)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !1917, file: !1705, line: 263, baseType: !1955, size: 64, offset: 2880)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !1917, file: !1705, line: 265, baseType: !1541, size: 64, offset: 2944)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !1917, file: !1705, line: 266, baseType: !1535, size: 64, offset: 3008)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "towards_xy", scope: !1913, file: !956, line: 496, baseType: !1932, size: 64, offset: 64)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "towardstime", scope: !1913, file: !956, line: 497, baseType: !1540, size: 64, offset: 128)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "dotowards", scope: !1913, file: !956, line: 498, baseType: !1550, size: 8, offset: 192)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "popup", scope: !1913, file: !956, line: 500, baseType: !1550, size: 8, offset: 200)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "popup_func", scope: !1913, file: !956, line: 501, baseType: !1816, size: 64, offset: 256)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "cancel_func", scope: !1913, file: !956, line: 502, baseType: !3095, size: 64, offset: 320)
!3095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3096, size: 64)
!3096 = !DISubroutineType(types: !3097)
!3097 = !{null, !1614, !1535}
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "popup_arg", scope: !1913, file: !956, line: 503, baseType: !1535, size: 64, offset: 384)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "popup_create_vars", scope: !1913, file: !956, line: 506, baseType: !3100, size: 320, offset: 448)
!3100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiPopupBlockCreate", file: !956, line: 480, size: 320, elements: !3101)
!3101 = !{!3102, !3103, !3109, !3110, !3111}
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "create_func", scope: !3100, file: !956, line: 481, baseType: !1691, size: 64)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "handle_create_func", scope: !3100, file: !956, line: 482, baseType: !3104, size: 64, offset: 64)
!3104 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBlockHandleCreateFunc", file: !956, line: 478, baseType: !3105)
!3105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3106, size: 64)
!3106 = !DISubroutineType(types: !3107)
!3107 = !{!1695, !1614, !3108, !1535}
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 64)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !3100, file: !956, line: 483, baseType: !1535, size: 64, offset: 128)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "event_xy", scope: !3100, file: !956, line: 485, baseType: !1840, size: 64, offset: 192)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "butregion", scope: !3100, file: !956, line: 488, baseType: !3112, size: 64, offset: 256)
!3112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3113, size: 64)
!3113 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !1705, line: 267, baseType: !1917)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "scrolltimer", scope: !1913, file: !956, line: 508, baseType: !1955, size: 64, offset: 768)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "keynav_state", scope: !1913, file: !956, line: 510, baseType: !3116, size: 96, offset: 832)
!3116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiKeyNavLock", file: !956, line: 471, size: 96, elements: !3117)
!3117 = !{!3118, !3119}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "is_keynav", scope: !3116, file: !956, line: 473, baseType: !1550, size: 8)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "event_xy", scope: !3116, file: !956, line: 475, baseType: !1840, size: 64, offset: 32)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "optype", scope: !1913, file: !956, line: 513, baseType: !3121, size: 64, offset: 960)
!3121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3122, size: 64)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !1020, line: 508, size: 1536, elements: !3123)
!3123 = !{!3124, !3125, !3126, !3127, !3128, !3150, !3154, !3158, !3162, !3163, !3167, !3168, !3169, !3170, !3174, !3175, !3190, !3191, !3195, !3196}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3122, file: !1020, line: 509, baseType: !1647, size: 64)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3122, file: !1020, line: 510, baseType: !1647, size: 64, offset: 64)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !3122, file: !1020, line: 511, baseType: !1647, size: 64, offset: 128)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3122, file: !1020, line: 512, baseType: !1647, size: 64, offset: 192)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !3122, file: !1020, line: 518, baseType: !3129, size: 64, offset: 256)
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 64)
!3130 = !DISubroutineType(types: !3131)
!3131 = !{!1067, !1614, !3132}
!3132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3133, size: 64)
!3133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !1963, line: 328, size: 1344, elements: !3134)
!3134 = !{!3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3145, !3146, !3147, !3148, !3149}
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3133, file: !1963, line: 329, baseType: !3132, size: 64)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3133, file: !1963, line: 329, baseType: !3132, size: 64, offset: 64)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3133, file: !1963, line: 332, baseType: !1719, size: 512, offset: 128)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3133, file: !1963, line: 333, baseType: !2009, size: 64, offset: 640)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3133, file: !1963, line: 336, baseType: !3121, size: 64, offset: 704)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3133, file: !1963, line: 337, baseType: !1535, size: 64, offset: 768)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !3133, file: !1963, line: 338, baseType: !1535, size: 64, offset: 832)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3133, file: !1963, line: 340, baseType: !1752, size: 64, offset: 896)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !3133, file: !1963, line: 341, baseType: !3144, size: 64, offset: 960)
!3144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 64)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !3133, file: !1963, line: 343, baseType: !1627, size: 128, offset: 1024)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !3133, file: !1963, line: 344, baseType: !3132, size: 64, offset: 1152)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !3133, file: !1963, line: 345, baseType: !1779, size: 64, offset: 1216)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3133, file: !1963, line: 346, baseType: !1545, size: 16, offset: 1280)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3133, file: !1963, line: 346, baseType: !2710, size: 48, offset: 1296)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3122, file: !1020, line: 524, baseType: !3151, size: 64, offset: 320)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 64)
!3152 = !DISubroutineType(types: !3153)
!3153 = !{!1550, !1614, !3132}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !3122, file: !1020, line: 530, baseType: !3155, size: 64, offset: 384)
!3155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3156, size: 64)
!3156 = !DISubroutineType(types: !3157)
!3157 = !{!1067, !1614, !3132, !1828}
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !3122, file: !1020, line: 531, baseType: !3159, size: 64, offset: 448)
!3159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3160, size: 64)
!3160 = !DISubroutineType(types: !3161)
!3161 = !{null, !1614, !3132}
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !3122, file: !1020, line: 532, baseType: !3155, size: 64, offset: 512)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3122, file: !1020, line: 536, baseType: !3164, size: 64, offset: 576)
!3164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3165, size: 64)
!3165 = !DISubroutineType(types: !3166)
!3166 = !{!1067, !1614}
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !3122, file: !1020, line: 539, baseType: !3159, size: 64, offset: 640)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !3122, file: !1020, line: 542, baseType: !1760, size: 64, offset: 704)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !3122, file: !1020, line: 545, baseType: !2014, size: 64, offset: 768)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !3122, file: !1020, line: 549, baseType: !3171, size: 64, offset: 832)
!3171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 64)
!3172 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !965, line: 333, baseType: !3173)
!3173 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !965, line: 39, flags: DIFlagFwdDecl)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !3122, file: !1020, line: 552, baseType: !1627, size: 128, offset: 896)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !3122, file: !1020, line: 555, baseType: !3176, size: 64, offset: 1024)
!3176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3177, size: 64)
!3177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !1963, line: 281, size: 1088, elements: !3178)
!3178 = !{!3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189}
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3177, file: !1963, line: 282, baseType: !3176, size: 64)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3177, file: !1963, line: 282, baseType: !3176, size: 64, offset: 64)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3177, file: !1963, line: 284, baseType: !1627, size: 128, offset: 128)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !3177, file: !1963, line: 285, baseType: !1627, size: 128, offset: 256)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3177, file: !1963, line: 287, baseType: !1719, size: 512, offset: 384)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !3177, file: !1963, line: 288, baseType: !1545, size: 16, offset: 896)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !3177, file: !1963, line: 289, baseType: !1545, size: 16, offset: 912)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3177, file: !1963, line: 291, baseType: !1545, size: 16, offset: 928)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !3177, file: !1963, line: 292, baseType: !1545, size: 16, offset: 944)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3177, file: !1963, line: 295, baseType: !3164, size: 64, offset: 960)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !3177, file: !1963, line: 296, baseType: !1535, size: 64, offset: 1024)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !3122, file: !1020, line: 559, baseType: !1535, size: 64, offset: 1088)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !3122, file: !1020, line: 560, baseType: !3192, size: 64, offset: 1152)
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3193 = !DISubroutineType(types: !3194)
!3194 = !{!1067, !1614, !3121}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !3122, file: !1020, line: 563, baseType: !1739, size: 256, offset: 1216)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3122, file: !1020, line: 566, baseType: !1545, size: 16, offset: 1472)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_area", scope: !1913, file: !956, line: 514, baseType: !3198, size: 64, offset: 1024)
!3198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3199, size: 64)
!3199 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !1705, line: 228, baseType: !2944)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_region", scope: !1913, file: !956, line: 515, baseType: !3112, size: 64, offset: 1088)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "opcontext", scope: !1913, file: !956, line: 516, baseType: !1067, size: 32, offset: 1152)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "butretval", scope: !1913, file: !956, line: 519, baseType: !1067, size: 32, offset: 1184)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "menuretval", scope: !1913, file: !956, line: 520, baseType: !1067, size: 32, offset: 1216)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "retvalue", scope: !1913, file: !956, line: 521, baseType: !1067, size: 32, offset: 1248)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "retvec", scope: !1913, file: !956, line: 522, baseType: !2231, size: 128, offset: 1280)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !1913, file: !956, line: 525, baseType: !1067, size: 32, offset: 1408)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "is_grab", scope: !1913, file: !956, line: 528, baseType: !1550, size: 8, offset: 1440)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "grab_xy_prev", scope: !1913, file: !956, line: 529, baseType: !1840, size: 64, offset: 1472)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "ui_operator", scope: !1697, file: !956, line: 389, baseType: !3132, size: 64, offset: 4160)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "evil_C", scope: !1697, file: !956, line: 392, baseType: !1535, size: 64, offset: 4224)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1697, file: !956, line: 394, baseType: !3212, size: 64, offset: 4288)
!3212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 64)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "_hsv", scope: !1697, file: !956, line: 395, baseType: !2066, size: 96, offset: 4352)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "color_profile", scope: !1697, file: !956, line: 397, baseType: !1550, size: 8, offset: 4448)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1697, file: !956, line: 399, baseType: !1719, size: 512, offset: 4456)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "pie_data", scope: !1697, file: !956, line: 402, baseType: !3217, size: 448, offset: 4992)
!3217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PieMenuData", file: !956, line: 309, size: 448, elements: !3218)
!3218 = !{!3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226}
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "pie_dir", scope: !3217, file: !956, line: 310, baseType: !1932, size: 64)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "pie_center_init", scope: !3217, file: !956, line: 311, baseType: !1932, size: 64, offset: 64)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "pie_center_spawned", scope: !3217, file: !956, line: 312, baseType: !1932, size: 64, offset: 128)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "last_pos", scope: !3217, file: !956, line: 313, baseType: !1932, size: 64, offset: 192)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "duration_gesture", scope: !3217, file: !956, line: 314, baseType: !1540, size: 64, offset: 256)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3217, file: !956, line: 315, baseType: !1067, size: 32, offset: 320)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3217, file: !956, line: 316, baseType: !1067, size: 32, offset: 352)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !3217, file: !956, line: 317, baseType: !1534, size: 32, offset: 384)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "menu_create_func", scope: !1560, file: !956, line: 271, baseType: !3228, size: 64, offset: 6464)
!3228 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiMenuCreateFunc", file: !6, line: 345, baseType: !3229)
!3229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3230, size: 64)
!3230 = !DISubroutineType(types: !3231)
!3231 = !{null, !1614, !1779, !1535}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "rnapoin", scope: !1560, file: !956, line: 274, baseType: !1753, size: 192, offset: 6528)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "rnaprop", scope: !1560, file: !956, line: 275, baseType: !3234, size: 64, offset: 6720)
!3234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 64)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "rnaindex", scope: !1560, file: !956, line: 276, baseType: !1067, size: 32, offset: 6784)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "rnasearchpoin", scope: !1560, file: !956, line: 278, baseType: !1753, size: 192, offset: 6848)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "rnasearchprop", scope: !1560, file: !956, line: 279, baseType: !3234, size: 64, offset: 7040)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "optype", scope: !1560, file: !956, line: 282, baseType: !3121, size: 64, offset: 7104)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "opptr", scope: !1560, file: !956, line: 283, baseType: !1752, size: 64, offset: 7168)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "opcontext", scope: !1560, file: !956, line: 284, baseType: !1545, size: 16, offset: 7232)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "menu_key", scope: !1560, file: !956, line: 285, baseType: !1550, size: 8, offset: 7248)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "dragtype", scope: !1560, file: !956, line: 288, baseType: !1542, size: 8, offset: 7256)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "dragpoin", scope: !1560, file: !956, line: 289, baseType: !1535, size: 64, offset: 7296)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "imb", scope: !1560, file: !956, line: 290, baseType: !3245, size: 64, offset: 7360)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64)
!3246 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !2236, line: 136, flags: DIFlagFwdDecl)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "imb_scale", scope: !1560, file: !956, line: 291, baseType: !1534, size: 32, offset: 7424)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1560, file: !956, line: 294, baseType: !3249, size: 64, offset: 7488)
!3249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3250, size: 64)
!3250 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiHandleButtonData", file: !956, line: 43, flags: DIFlagFwdDecl)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "custom_data", scope: !1560, file: !956, line: 297, baseType: !1535, size: 64, offset: 7552)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "editstr", scope: !1560, file: !956, line: 299, baseType: !1541, size: 64, offset: 7616)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "editval", scope: !1560, file: !956, line: 300, baseType: !3254, size: 64, offset: 7680)
!3254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "editvec", scope: !1560, file: !956, line: 301, baseType: !1543, size: 64, offset: 7744)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "editcoba", scope: !1560, file: !956, line: 302, baseType: !1535, size: 64, offset: 7808)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "editcumap", scope: !1560, file: !956, line: 303, baseType: !1535, size: 64, offset: 7872)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1560, file: !956, line: 306, baseType: !1695, size: 64, offset: 7936)
!3259 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!3260 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !3261, line: 87, baseType: !3262)
!3261 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!3262 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!3263 = !{!0, !3264, !3267}
!3264 = !DIGlobalVariableExpression(var: !3265, expr: !DIExpression())
!3265 = distinct !DIGlobalVariable(name: "ui_radial_dir_to_numpad", scope: !2, file: !3, line: 1111, type: !3266, isLocal: false, isDefinition: true)
!3266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1648, size: 64, elements: !2190)
!3267 = !DIGlobalVariableExpression(var: !3268, expr: !DIExpression())
!3268 = distinct !DIGlobalVariable(name: "ui_radial_dir_to_angle", scope: !2, file: !3, line: 1112, type: !3269, isLocal: false, isDefinition: true)
!3269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3270, size: 128, elements: !2190)
!3270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1545)
!3271 = !{i32 7, !"Dwarf Version", i32 4}
!3272 = !{i32 2, !"Debug Info Version", i32 3}
!3273 = !{i32 1, !"wchar_size", i32 4}
!3274 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!3275 = distinct !DISubprogram(name: "ui_block_is_menu", scope: !3, file: !3, line: 94, type: !3276, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!3276 = !DISubroutineType(types: !3277)
!3277 = !{!1550, !3278}
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3279, size: 64)
!3279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1696)
!3280 = !{}
!3281 = !DILocalVariable(name: "block", arg: 1, scope: !3275, file: !3, line: 94, type: !3278)
!3282 = !DILocation(line: 94, column: 38, scope: !3275)
!3283 = !DILocation(line: 96, column: 12, scope: !3275)
!3284 = !DILocation(line: 96, column: 19, scope: !3275)
!3285 = !DILocation(line: 96, column: 24, scope: !3275)
!3286 = !DILocation(line: 96, column: 41, scope: !3275)
!3287 = !DILocation(line: 96, column: 47, scope: !3275)
!3288 = !DILocation(line: 98, column: 12, scope: !3275)
!3289 = !DILocation(line: 98, column: 19, scope: !3275)
!3290 = !DILocation(line: 98, column: 24, scope: !3275)
!3291 = !DILocation(line: 98, column: 46, scope: !3275)
!3292 = !DILocation(line: 0, scope: !3275)
!3293 = !DILocation(line: 96, column: 9, scope: !3275)
!3294 = !DILocation(line: 96, column: 2, scope: !3275)
!3295 = distinct !DISubprogram(name: "ui_block_is_pie_menu", scope: !3, file: !3, line: 101, type: !3276, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!3296 = !DILocalVariable(name: "block", arg: 1, scope: !3295, file: !3, line: 101, type: !3278)
!3297 = !DILocation(line: 101, column: 42, scope: !3295)
!3298 = !DILocation(line: 103, column: 11, scope: !3295)
!3299 = !DILocation(line: 103, column: 18, scope: !3295)
!3300 = !DILocation(line: 103, column: 23, scope: !3295)
!3301 = !DILocation(line: 103, column: 42, scope: !3295)
!3302 = !DILocation(line: 103, column: 9, scope: !3295)
!3303 = !DILocation(line: 103, column: 2, scope: !3295)
!3304 = distinct !DISubprogram(name: "ui_block_to_window_fl", scope: !3, file: !3, line: 121, type: !3305, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!3305 = !DISubroutineType(types: !3306)
!3306 = !{null, !3307, !1695, !1543, !1543}
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3308, size: 64)
!3308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3113)
!3309 = !DILocalVariable(name: "ar", arg: 1, scope: !3304, file: !3, line: 121, type: !3307)
!3310 = !DILocation(line: 121, column: 43, scope: !3304)
!3311 = !DILocalVariable(name: "block", arg: 2, scope: !3304, file: !3, line: 121, type: !1695)
!3312 = !DILocation(line: 121, column: 56, scope: !3304)
!3313 = !DILocalVariable(name: "x", arg: 3, scope: !3304, file: !3, line: 121, type: !1543)
!3314 = !DILocation(line: 121, column: 70, scope: !3304)
!3315 = !DILocalVariable(name: "y", arg: 4, scope: !3304, file: !3, line: 121, type: !1543)
!3316 = !DILocation(line: 121, column: 80, scope: !3304)
!3317 = !DILocalVariable(name: "gx", scope: !3304, file: !3, line: 123, type: !1534)
!3318 = !DILocation(line: 123, column: 8, scope: !3304)
!3319 = !DILocalVariable(name: "gy", scope: !3304, file: !3, line: 123, type: !1534)
!3320 = !DILocation(line: 123, column: 12, scope: !3304)
!3321 = !DILocalVariable(name: "sx", scope: !3304, file: !3, line: 124, type: !1067)
!3322 = !DILocation(line: 124, column: 6, scope: !3304)
!3323 = !DILocalVariable(name: "sy", scope: !3304, file: !3, line: 124, type: !1067)
!3324 = !DILocation(line: 124, column: 10, scope: !3304)
!3325 = !DILocalVariable(name: "getsizex", scope: !3304, file: !3, line: 124, type: !1067)
!3326 = !DILocation(line: 124, column: 14, scope: !3304)
!3327 = !DILocalVariable(name: "getsizey", scope: !3304, file: !3, line: 124, type: !1067)
!3328 = !DILocation(line: 124, column: 24, scope: !3304)
!3329 = !DILocation(line: 126, column: 30, scope: !3304)
!3330 = !DILocation(line: 126, column: 34, scope: !3304)
!3331 = !DILocation(line: 126, column: 13, scope: !3304)
!3332 = !DILocation(line: 126, column: 42, scope: !3304)
!3333 = !DILocation(line: 126, column: 11, scope: !3304)
!3334 = !DILocation(line: 127, column: 30, scope: !3304)
!3335 = !DILocation(line: 127, column: 34, scope: !3304)
!3336 = !DILocation(line: 127, column: 13, scope: !3304)
!3337 = !DILocation(line: 127, column: 42, scope: !3304)
!3338 = !DILocation(line: 127, column: 11, scope: !3304)
!3339 = !DILocation(line: 128, column: 7, scope: !3304)
!3340 = !DILocation(line: 128, column: 11, scope: !3304)
!3341 = !DILocation(line: 128, column: 18, scope: !3304)
!3342 = !DILocation(line: 128, column: 5, scope: !3304)
!3343 = !DILocation(line: 129, column: 7, scope: !3304)
!3344 = !DILocation(line: 129, column: 11, scope: !3304)
!3345 = !DILocation(line: 129, column: 18, scope: !3304)
!3346 = !DILocation(line: 129, column: 5, scope: !3304)
!3347 = !DILocation(line: 131, column: 8, scope: !3304)
!3348 = !DILocation(line: 131, column: 7, scope: !3304)
!3349 = !DILocation(line: 131, column: 5, scope: !3304)
!3350 = !DILocation(line: 132, column: 8, scope: !3304)
!3351 = !DILocation(line: 132, column: 7, scope: !3304)
!3352 = !DILocation(line: 132, column: 5, scope: !3304)
!3353 = !DILocation(line: 134, column: 6, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3304, file: !3, line: 134, column: 6)
!3355 = !DILocation(line: 134, column: 13, scope: !3354)
!3356 = !DILocation(line: 134, column: 6, scope: !3304)
!3357 = !DILocation(line: 135, column: 9, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3354, file: !3, line: 134, column: 20)
!3359 = !DILocation(line: 135, column: 16, scope: !3358)
!3360 = !DILocation(line: 135, column: 23, scope: !3358)
!3361 = !DILocation(line: 135, column: 6, scope: !3358)
!3362 = !DILocation(line: 136, column: 9, scope: !3358)
!3363 = !DILocation(line: 136, column: 16, scope: !3358)
!3364 = !DILocation(line: 136, column: 23, scope: !3358)
!3365 = !DILocation(line: 136, column: 6, scope: !3358)
!3366 = !DILocation(line: 137, column: 2, scope: !3358)
!3367 = !DILocation(line: 139, column: 15, scope: !3304)
!3368 = !DILocation(line: 139, column: 8, scope: !3304)
!3369 = !DILocation(line: 139, column: 29, scope: !3304)
!3370 = !DILocation(line: 139, column: 22, scope: !3304)
!3371 = !DILocation(line: 139, column: 57, scope: !3304)
!3372 = !DILocation(line: 139, column: 62, scope: !3304)
!3373 = !DILocation(line: 139, column: 69, scope: !3304)
!3374 = !DILocation(line: 139, column: 60, scope: !3304)
!3375 = !DILocation(line: 139, column: 84, scope: !3304)
!3376 = !DILocation(line: 139, column: 89, scope: !3304)
!3377 = !DILocation(line: 139, column: 96, scope: !3304)
!3378 = !DILocation(line: 139, column: 87, scope: !3304)
!3379 = !DILocation(line: 139, column: 82, scope: !3304)
!3380 = !DILocation(line: 139, column: 111, scope: !3304)
!3381 = !DILocation(line: 139, column: 118, scope: !3304)
!3382 = !DILocation(line: 139, column: 109, scope: !3304)
!3383 = !DILocation(line: 139, column: 54, scope: !3304)
!3384 = !DILocation(line: 139, column: 47, scope: !3304)
!3385 = !DILocation(line: 139, column: 39, scope: !3304)
!3386 = !DILocation(line: 139, column: 19, scope: !3304)
!3387 = !DILocation(line: 139, column: 3, scope: !3304)
!3388 = !DILocation(line: 139, column: 5, scope: !3304)
!3389 = !DILocation(line: 140, column: 15, scope: !3304)
!3390 = !DILocation(line: 140, column: 8, scope: !3304)
!3391 = !DILocation(line: 140, column: 29, scope: !3304)
!3392 = !DILocation(line: 140, column: 22, scope: !3304)
!3393 = !DILocation(line: 140, column: 57, scope: !3304)
!3394 = !DILocation(line: 140, column: 62, scope: !3304)
!3395 = !DILocation(line: 140, column: 69, scope: !3304)
!3396 = !DILocation(line: 140, column: 60, scope: !3304)
!3397 = !DILocation(line: 140, column: 84, scope: !3304)
!3398 = !DILocation(line: 140, column: 89, scope: !3304)
!3399 = !DILocation(line: 140, column: 96, scope: !3304)
!3400 = !DILocation(line: 140, column: 87, scope: !3304)
!3401 = !DILocation(line: 140, column: 82, scope: !3304)
!3402 = !DILocation(line: 140, column: 111, scope: !3304)
!3403 = !DILocation(line: 140, column: 118, scope: !3304)
!3404 = !DILocation(line: 140, column: 109, scope: !3304)
!3405 = !DILocation(line: 140, column: 54, scope: !3304)
!3406 = !DILocation(line: 140, column: 47, scope: !3304)
!3407 = !DILocation(line: 140, column: 39, scope: !3304)
!3408 = !DILocation(line: 140, column: 19, scope: !3304)
!3409 = !DILocation(line: 140, column: 3, scope: !3304)
!3410 = !DILocation(line: 140, column: 5, scope: !3304)
!3411 = !DILocation(line: 141, column: 1, scope: !3304)
!3412 = distinct !DISubprogram(name: "BLI_rcti_size_x", scope: !3413, file: !3413, line: 105, type: !3414, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!3413 = !DIFile(filename: "blender/source/blender/blenlib/BLI_rect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3414 = !DISubroutineType(types: !3415)
!3415 = !{!1067, !3416}
!3416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3417, size: 64)
!3417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1879)
!3418 = !DILocalVariable(name: "rct", arg: 1, scope: !3412, file: !3413, line: 105, type: !3416)
!3419 = !DILocation(line: 105, column: 53, scope: !3412)
!3420 = !DILocation(line: 105, column: 68, scope: !3412)
!3421 = !DILocation(line: 105, column: 73, scope: !3412)
!3422 = !DILocation(line: 105, column: 80, scope: !3412)
!3423 = !DILocation(line: 105, column: 85, scope: !3412)
!3424 = !DILocation(line: 105, column: 78, scope: !3412)
!3425 = !DILocation(line: 105, column: 60, scope: !3412)
!3426 = distinct !DISubprogram(name: "BLI_rcti_size_y", scope: !3413, file: !3413, line: 106, type: !3414, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!3427 = !DILocalVariable(name: "rct", arg: 1, scope: !3426, file: !3413, line: 106, type: !3416)
!3428 = !DILocation(line: 106, column: 53, scope: !3426)
!3429 = !DILocation(line: 106, column: 68, scope: !3426)
!3430 = !DILocation(line: 106, column: 73, scope: !3426)
!3431 = !DILocation(line: 106, column: 80, scope: !3426)
!3432 = !DILocation(line: 106, column: 85, scope: !3426)
!3433 = !DILocation(line: 106, column: 78, scope: !3426)
!3434 = !DILocation(line: 106, column: 60, scope: !3426)
!3435 = distinct !DISubprogram(name: "ui_block_to_window", scope: !3, file: !3, line: 143, type: !3436, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!3436 = !DISubroutineType(types: !3437)
!3437 = !{null, !3307, !1695, !1546, !1546}
!3438 = !DILocalVariable(name: "ar", arg: 1, scope: !3435, file: !3, line: 143, type: !3307)
!3439 = !DILocation(line: 143, column: 40, scope: !3435)
!3440 = !DILocalVariable(name: "block", arg: 2, scope: !3435, file: !3, line: 143, type: !1695)
!3441 = !DILocation(line: 143, column: 53, scope: !3435)
!3442 = !DILocalVariable(name: "x", arg: 3, scope: !3435, file: !3, line: 143, type: !1546)
!3443 = !DILocation(line: 143, column: 65, scope: !3435)
!3444 = !DILocalVariable(name: "y", arg: 4, scope: !3435, file: !3, line: 143, type: !1546)
!3445 = !DILocation(line: 143, column: 73, scope: !3435)
!3446 = !DILocalVariable(name: "fx", scope: !3435, file: !3, line: 145, type: !1534)
!3447 = !DILocation(line: 145, column: 8, scope: !3435)
!3448 = !DILocalVariable(name: "fy", scope: !3435, file: !3, line: 145, type: !1534)
!3449 = !DILocation(line: 145, column: 12, scope: !3435)
!3450 = !DILocation(line: 147, column: 8, scope: !3435)
!3451 = !DILocation(line: 147, column: 7, scope: !3435)
!3452 = !DILocation(line: 147, column: 5, scope: !3435)
!3453 = !DILocation(line: 148, column: 8, scope: !3435)
!3454 = !DILocation(line: 148, column: 7, scope: !3435)
!3455 = !DILocation(line: 148, column: 5, scope: !3435)
!3456 = !DILocation(line: 150, column: 24, scope: !3435)
!3457 = !DILocation(line: 150, column: 28, scope: !3435)
!3458 = !DILocation(line: 150, column: 2, scope: !3435)
!3459 = !DILocation(line: 152, column: 13, scope: !3435)
!3460 = !DILocation(line: 152, column: 16, scope: !3435)
!3461 = !DILocation(line: 152, column: 7, scope: !3435)
!3462 = !DILocation(line: 152, column: 3, scope: !3435)
!3463 = !DILocation(line: 152, column: 5, scope: !3435)
!3464 = !DILocation(line: 153, column: 13, scope: !3435)
!3465 = !DILocation(line: 153, column: 16, scope: !3435)
!3466 = !DILocation(line: 153, column: 7, scope: !3435)
!3467 = !DILocation(line: 153, column: 3, scope: !3435)
!3468 = !DILocation(line: 153, column: 5, scope: !3435)
!3469 = !DILocation(line: 154, column: 1, scope: !3435)
!3470 = distinct !DISubprogram(name: "ui_block_to_window_rctf", scope: !3, file: !3, line: 156, type: !3471, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!3471 = !DISubroutineType(types: !3472)
!3472 = !{null, !3307, !1695, !3473, !3474}
!3473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64)
!3474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3475, size: 64)
!3475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1590)
!3476 = !DILocalVariable(name: "ar", arg: 1, scope: !3470, file: !3, line: 156, type: !3307)
!3477 = !DILocation(line: 156, column: 45, scope: !3470)
!3478 = !DILocalVariable(name: "block", arg: 2, scope: !3470, file: !3, line: 156, type: !1695)
!3479 = !DILocation(line: 156, column: 58, scope: !3470)
!3480 = !DILocalVariable(name: "rct_dst", arg: 3, scope: !3470, file: !3, line: 156, type: !3473)
!3481 = !DILocation(line: 156, column: 71, scope: !3470)
!3482 = !DILocalVariable(name: "rct_src", arg: 4, scope: !3470, file: !3, line: 156, type: !3474)
!3483 = !DILocation(line: 156, column: 92, scope: !3470)
!3484 = !DILocation(line: 158, column: 3, scope: !3470)
!3485 = !DILocation(line: 158, column: 14, scope: !3470)
!3486 = !DILocation(line: 158, column: 13, scope: !3470)
!3487 = !DILocation(line: 159, column: 24, scope: !3470)
!3488 = !DILocation(line: 159, column: 28, scope: !3470)
!3489 = !DILocation(line: 159, column: 36, scope: !3470)
!3490 = !DILocation(line: 159, column: 45, scope: !3470)
!3491 = !DILocation(line: 159, column: 52, scope: !3470)
!3492 = !DILocation(line: 159, column: 61, scope: !3470)
!3493 = !DILocation(line: 159, column: 2, scope: !3470)
!3494 = !DILocation(line: 160, column: 24, scope: !3470)
!3495 = !DILocation(line: 160, column: 28, scope: !3470)
!3496 = !DILocation(line: 160, column: 36, scope: !3470)
!3497 = !DILocation(line: 160, column: 45, scope: !3470)
!3498 = !DILocation(line: 160, column: 52, scope: !3470)
!3499 = !DILocation(line: 160, column: 61, scope: !3470)
!3500 = !DILocation(line: 160, column: 2, scope: !3470)
!3501 = !DILocation(line: 161, column: 1, scope: !3470)
!3502 = distinct !DISubprogram(name: "ui_window_to_block_fl", scope: !3, file: !3, line: 163, type: !3305, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!3503 = !DILocalVariable(name: "ar", arg: 1, scope: !3502, file: !3, line: 163, type: !3307)
!3504 = !DILocation(line: 163, column: 43, scope: !3502)
!3505 = !DILocalVariable(name: "block", arg: 2, scope: !3502, file: !3, line: 163, type: !1695)
!3506 = !DILocation(line: 163, column: 56, scope: !3502)
!3507 = !DILocalVariable(name: "x", arg: 3, scope: !3502, file: !3, line: 163, type: !1543)
!3508 = !DILocation(line: 163, column: 70, scope: !3502)
!3509 = !DILocalVariable(name: "y", arg: 4, scope: !3502, file: !3, line: 163, type: !1543)
!3510 = !DILocation(line: 163, column: 80, scope: !3502)
!3511 = !DILocalVariable(name: "a", scope: !3502, file: !3, line: 165, type: !1534)
!3512 = !DILocation(line: 165, column: 8, scope: !3502)
!3513 = !DILocalVariable(name: "b", scope: !3502, file: !3, line: 165, type: !1534)
!3514 = !DILocation(line: 165, column: 11, scope: !3502)
!3515 = !DILocalVariable(name: "c", scope: !3502, file: !3, line: 165, type: !1534)
!3516 = !DILocation(line: 165, column: 14, scope: !3502)
!3517 = !DILocalVariable(name: "d", scope: !3502, file: !3, line: 165, type: !1534)
!3518 = !DILocation(line: 165, column: 17, scope: !3502)
!3519 = !DILocalVariable(name: "e", scope: !3502, file: !3, line: 165, type: !1534)
!3520 = !DILocation(line: 165, column: 20, scope: !3502)
!3521 = !DILocalVariable(name: "f", scope: !3502, file: !3, line: 165, type: !1534)
!3522 = !DILocation(line: 165, column: 23, scope: !3502)
!3523 = !DILocalVariable(name: "px", scope: !3502, file: !3, line: 165, type: !1534)
!3524 = !DILocation(line: 165, column: 26, scope: !3502)
!3525 = !DILocalVariable(name: "py", scope: !3502, file: !3, line: 165, type: !1534)
!3526 = !DILocation(line: 165, column: 30, scope: !3502)
!3527 = !DILocalVariable(name: "sx", scope: !3502, file: !3, line: 166, type: !1067)
!3528 = !DILocation(line: 166, column: 6, scope: !3502)
!3529 = !DILocalVariable(name: "sy", scope: !3502, file: !3, line: 166, type: !1067)
!3530 = !DILocation(line: 166, column: 10, scope: !3502)
!3531 = !DILocalVariable(name: "getsizex", scope: !3502, file: !3, line: 166, type: !1067)
!3532 = !DILocation(line: 166, column: 14, scope: !3502)
!3533 = !DILocalVariable(name: "getsizey", scope: !3502, file: !3, line: 166, type: !1067)
!3534 = !DILocation(line: 166, column: 24, scope: !3502)
!3535 = !DILocation(line: 168, column: 30, scope: !3502)
!3536 = !DILocation(line: 168, column: 34, scope: !3502)
!3537 = !DILocation(line: 168, column: 13, scope: !3502)
!3538 = !DILocation(line: 168, column: 42, scope: !3502)
!3539 = !DILocation(line: 168, column: 11, scope: !3502)
!3540 = !DILocation(line: 169, column: 30, scope: !3502)
!3541 = !DILocation(line: 169, column: 34, scope: !3502)
!3542 = !DILocation(line: 169, column: 13, scope: !3502)
!3543 = !DILocation(line: 169, column: 42, scope: !3502)
!3544 = !DILocation(line: 169, column: 11, scope: !3502)
!3545 = !DILocation(line: 170, column: 7, scope: !3502)
!3546 = !DILocation(line: 170, column: 11, scope: !3502)
!3547 = !DILocation(line: 170, column: 18, scope: !3502)
!3548 = !DILocation(line: 170, column: 5, scope: !3502)
!3549 = !DILocation(line: 171, column: 7, scope: !3502)
!3550 = !DILocation(line: 171, column: 11, scope: !3502)
!3551 = !DILocation(line: 171, column: 18, scope: !3502)
!3552 = !DILocation(line: 171, column: 5, scope: !3502)
!3553 = !DILocation(line: 173, column: 21, scope: !3502)
!3554 = !DILocation(line: 173, column: 14, scope: !3502)
!3555 = !DILocation(line: 173, column: 11, scope: !3502)
!3556 = !DILocation(line: 173, column: 33, scope: !3502)
!3557 = !DILocation(line: 173, column: 40, scope: !3502)
!3558 = !DILocation(line: 173, column: 31, scope: !3502)
!3559 = !DILocation(line: 173, column: 4, scope: !3502)
!3560 = !DILocation(line: 174, column: 21, scope: !3502)
!3561 = !DILocation(line: 174, column: 14, scope: !3502)
!3562 = !DILocation(line: 174, column: 11, scope: !3502)
!3563 = !DILocation(line: 174, column: 33, scope: !3502)
!3564 = !DILocation(line: 174, column: 40, scope: !3502)
!3565 = !DILocation(line: 174, column: 31, scope: !3502)
!3566 = !DILocation(line: 174, column: 4, scope: !3502)
!3567 = !DILocation(line: 175, column: 21, scope: !3502)
!3568 = !DILocation(line: 175, column: 14, scope: !3502)
!3569 = !DILocation(line: 175, column: 11, scope: !3502)
!3570 = !DILocation(line: 175, column: 41, scope: !3502)
!3571 = !DILocation(line: 175, column: 48, scope: !3502)
!3572 = !DILocation(line: 175, column: 39, scope: !3502)
!3573 = !DILocation(line: 175, column: 31, scope: !3502)
!3574 = !DILocation(line: 175, column: 4, scope: !3502)
!3575 = !DILocation(line: 177, column: 21, scope: !3502)
!3576 = !DILocation(line: 177, column: 14, scope: !3502)
!3577 = !DILocation(line: 177, column: 11, scope: !3502)
!3578 = !DILocation(line: 177, column: 33, scope: !3502)
!3579 = !DILocation(line: 177, column: 40, scope: !3502)
!3580 = !DILocation(line: 177, column: 31, scope: !3502)
!3581 = !DILocation(line: 177, column: 4, scope: !3502)
!3582 = !DILocation(line: 178, column: 21, scope: !3502)
!3583 = !DILocation(line: 178, column: 14, scope: !3502)
!3584 = !DILocation(line: 178, column: 11, scope: !3502)
!3585 = !DILocation(line: 178, column: 33, scope: !3502)
!3586 = !DILocation(line: 178, column: 40, scope: !3502)
!3587 = !DILocation(line: 178, column: 31, scope: !3502)
!3588 = !DILocation(line: 178, column: 4, scope: !3502)
!3589 = !DILocation(line: 179, column: 21, scope: !3502)
!3590 = !DILocation(line: 179, column: 14, scope: !3502)
!3591 = !DILocation(line: 179, column: 11, scope: !3502)
!3592 = !DILocation(line: 179, column: 41, scope: !3502)
!3593 = !DILocation(line: 179, column: 48, scope: !3502)
!3594 = !DILocation(line: 179, column: 39, scope: !3502)
!3595 = !DILocation(line: 179, column: 31, scope: !3502)
!3596 = !DILocation(line: 179, column: 4, scope: !3502)
!3597 = !DILocation(line: 181, column: 8, scope: !3502)
!3598 = !DILocation(line: 181, column: 7, scope: !3502)
!3599 = !DILocation(line: 181, column: 12, scope: !3502)
!3600 = !DILocation(line: 181, column: 10, scope: !3502)
!3601 = !DILocation(line: 181, column: 5, scope: !3502)
!3602 = !DILocation(line: 182, column: 8, scope: !3502)
!3603 = !DILocation(line: 182, column: 7, scope: !3502)
!3604 = !DILocation(line: 182, column: 12, scope: !3502)
!3605 = !DILocation(line: 182, column: 10, scope: !3502)
!3606 = !DILocation(line: 182, column: 5, scope: !3502)
!3607 = !DILocation(line: 184, column: 9, scope: !3502)
!3608 = !DILocation(line: 184, column: 14, scope: !3502)
!3609 = !DILocation(line: 184, column: 19, scope: !3502)
!3610 = !DILocation(line: 184, column: 17, scope: !3502)
!3611 = !DILocation(line: 184, column: 11, scope: !3502)
!3612 = !DILocation(line: 184, column: 24, scope: !3502)
!3613 = !DILocation(line: 184, column: 29, scope: !3502)
!3614 = !DILocation(line: 184, column: 33, scope: !3502)
!3615 = !DILocation(line: 184, column: 31, scope: !3502)
!3616 = !DILocation(line: 184, column: 26, scope: !3502)
!3617 = !DILocation(line: 184, column: 22, scope: !3502)
!3618 = !DILocation(line: 184, column: 41, scope: !3502)
!3619 = !DILocation(line: 184, column: 45, scope: !3502)
!3620 = !DILocation(line: 184, column: 43, scope: !3502)
!3621 = !DILocation(line: 184, column: 49, scope: !3502)
!3622 = !DILocation(line: 184, column: 53, scope: !3502)
!3623 = !DILocation(line: 184, column: 51, scope: !3502)
!3624 = !DILocation(line: 184, column: 47, scope: !3502)
!3625 = !DILocation(line: 184, column: 38, scope: !3502)
!3626 = !DILocation(line: 184, column: 3, scope: !3502)
!3627 = !DILocation(line: 184, column: 5, scope: !3502)
!3628 = !DILocation(line: 185, column: 8, scope: !3502)
!3629 = !DILocation(line: 185, column: 13, scope: !3502)
!3630 = !DILocation(line: 185, column: 19, scope: !3502)
!3631 = !DILocation(line: 185, column: 18, scope: !3502)
!3632 = !DILocation(line: 185, column: 15, scope: !3502)
!3633 = !DILocation(line: 185, column: 11, scope: !3502)
!3634 = !DILocation(line: 185, column: 24, scope: !3502)
!3635 = !DILocation(line: 185, column: 22, scope: !3502)
!3636 = !DILocation(line: 185, column: 29, scope: !3502)
!3637 = !DILocation(line: 185, column: 27, scope: !3502)
!3638 = !DILocation(line: 185, column: 3, scope: !3502)
!3639 = !DILocation(line: 185, column: 5, scope: !3502)
!3640 = !DILocation(line: 187, column: 6, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3502, file: !3, line: 187, column: 6)
!3642 = !DILocation(line: 187, column: 13, scope: !3641)
!3643 = !DILocation(line: 187, column: 6, scope: !3502)
!3644 = !DILocation(line: 188, column: 9, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3641, file: !3, line: 187, column: 20)
!3646 = !DILocation(line: 188, column: 16, scope: !3645)
!3647 = !DILocation(line: 188, column: 23, scope: !3645)
!3648 = !DILocation(line: 188, column: 4, scope: !3645)
!3649 = !DILocation(line: 188, column: 6, scope: !3645)
!3650 = !DILocation(line: 189, column: 9, scope: !3645)
!3651 = !DILocation(line: 189, column: 16, scope: !3645)
!3652 = !DILocation(line: 189, column: 23, scope: !3645)
!3653 = !DILocation(line: 189, column: 4, scope: !3645)
!3654 = !DILocation(line: 189, column: 6, scope: !3645)
!3655 = !DILocation(line: 190, column: 2, scope: !3645)
!3656 = !DILocation(line: 191, column: 1, scope: !3502)
!3657 = distinct !DISubprogram(name: "ui_window_to_block", scope: !3, file: !3, line: 193, type: !3436, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!3658 = !DILocalVariable(name: "ar", arg: 1, scope: !3657, file: !3, line: 193, type: !3307)
!3659 = !DILocation(line: 193, column: 40, scope: !3657)
!3660 = !DILocalVariable(name: "block", arg: 2, scope: !3657, file: !3, line: 193, type: !1695)
!3661 = !DILocation(line: 193, column: 53, scope: !3657)
!3662 = !DILocalVariable(name: "x", arg: 3, scope: !3657, file: !3, line: 193, type: !1546)
!3663 = !DILocation(line: 193, column: 65, scope: !3657)
!3664 = !DILocalVariable(name: "y", arg: 4, scope: !3657, file: !3, line: 193, type: !1546)
!3665 = !DILocation(line: 193, column: 73, scope: !3657)
!3666 = !DILocalVariable(name: "fx", scope: !3657, file: !3, line: 195, type: !1534)
!3667 = !DILocation(line: 195, column: 8, scope: !3657)
!3668 = !DILocalVariable(name: "fy", scope: !3657, file: !3, line: 195, type: !1534)
!3669 = !DILocation(line: 195, column: 12, scope: !3657)
!3670 = !DILocation(line: 197, column: 8, scope: !3657)
!3671 = !DILocation(line: 197, column: 7, scope: !3657)
!3672 = !DILocation(line: 197, column: 5, scope: !3657)
!3673 = !DILocation(line: 198, column: 8, scope: !3657)
!3674 = !DILocation(line: 198, column: 7, scope: !3657)
!3675 = !DILocation(line: 198, column: 5, scope: !3657)
!3676 = !DILocation(line: 200, column: 24, scope: !3657)
!3677 = !DILocation(line: 200, column: 28, scope: !3657)
!3678 = !DILocation(line: 200, column: 2, scope: !3657)
!3679 = !DILocation(line: 202, column: 13, scope: !3657)
!3680 = !DILocation(line: 202, column: 16, scope: !3657)
!3681 = !DILocation(line: 202, column: 7, scope: !3657)
!3682 = !DILocation(line: 202, column: 3, scope: !3657)
!3683 = !DILocation(line: 202, column: 5, scope: !3657)
!3684 = !DILocation(line: 203, column: 13, scope: !3657)
!3685 = !DILocation(line: 203, column: 16, scope: !3657)
!3686 = !DILocation(line: 203, column: 7, scope: !3657)
!3687 = !DILocation(line: 203, column: 3, scope: !3657)
!3688 = !DILocation(line: 203, column: 5, scope: !3657)
!3689 = !DILocation(line: 204, column: 1, scope: !3657)
!3690 = distinct !DISubprogram(name: "ui_window_to_region", scope: !3, file: !3, line: 206, type: !3691, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!3691 = !DISubroutineType(types: !3692)
!3692 = !{null, !3307, !1546, !1546}
!3693 = !DILocalVariable(name: "ar", arg: 1, scope: !3690, file: !3, line: 206, type: !3307)
!3694 = !DILocation(line: 206, column: 41, scope: !3690)
!3695 = !DILocalVariable(name: "x", arg: 2, scope: !3690, file: !3, line: 206, type: !1546)
!3696 = !DILocation(line: 206, column: 50, scope: !3690)
!3697 = !DILocalVariable(name: "y", arg: 3, scope: !3690, file: !3, line: 206, type: !1546)
!3698 = !DILocation(line: 206, column: 58, scope: !3690)
!3699 = !DILocation(line: 208, column: 8, scope: !3690)
!3700 = !DILocation(line: 208, column: 12, scope: !3690)
!3701 = !DILocation(line: 208, column: 19, scope: !3690)
!3702 = !DILocation(line: 208, column: 3, scope: !3690)
!3703 = !DILocation(line: 208, column: 5, scope: !3690)
!3704 = !DILocation(line: 209, column: 8, scope: !3690)
!3705 = !DILocation(line: 209, column: 12, scope: !3690)
!3706 = !DILocation(line: 209, column: 19, scope: !3690)
!3707 = !DILocation(line: 209, column: 3, scope: !3690)
!3708 = !DILocation(line: 209, column: 5, scope: !3690)
!3709 = !DILocation(line: 210, column: 1, scope: !3690)
!3710 = distinct !DISubprogram(name: "ui_block_translate", scope: !3, file: !3, line: 214, type: !3711, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!3711 = !DISubroutineType(types: !3712)
!3712 = !{null, !1695, !1067, !1067}
!3713 = !DILocalVariable(name: "block", arg: 1, scope: !3710, file: !3, line: 214, type: !1695)
!3714 = !DILocation(line: 214, column: 34, scope: !3710)
!3715 = !DILocalVariable(name: "x", arg: 2, scope: !3710, file: !3, line: 214, type: !1067)
!3716 = !DILocation(line: 214, column: 45, scope: !3710)
!3717 = !DILocalVariable(name: "y", arg: 3, scope: !3710, file: !3, line: 214, type: !1067)
!3718 = !DILocation(line: 214, column: 52, scope: !3710)
!3719 = !DILocalVariable(name: "but", scope: !3710, file: !3, line: 216, type: !1558)
!3720 = !DILocation(line: 216, column: 9, scope: !3710)
!3721 = !DILocation(line: 218, column: 13, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3710, file: !3, line: 218, column: 2)
!3723 = !DILocation(line: 218, column: 20, scope: !3722)
!3724 = !DILocation(line: 218, column: 28, scope: !3722)
!3725 = !DILocation(line: 218, column: 11, scope: !3722)
!3726 = !DILocation(line: 218, column: 7, scope: !3722)
!3727 = !DILocation(line: 218, column: 35, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 218, column: 2)
!3729 = !DILocation(line: 218, column: 2, scope: !3722)
!3730 = !DILocation(line: 219, column: 23, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !3728, file: !3, line: 218, column: 57)
!3732 = !DILocation(line: 219, column: 28, scope: !3731)
!3733 = !DILocation(line: 219, column: 34, scope: !3731)
!3734 = !DILocation(line: 219, column: 37, scope: !3731)
!3735 = !DILocation(line: 219, column: 3, scope: !3731)
!3736 = !DILocation(line: 220, column: 2, scope: !3731)
!3737 = !DILocation(line: 218, column: 46, scope: !3728)
!3738 = !DILocation(line: 218, column: 51, scope: !3728)
!3739 = !DILocation(line: 218, column: 44, scope: !3728)
!3740 = !DILocation(line: 218, column: 2, scope: !3728)
!3741 = distinct !{!3741, !3729, !3742}
!3742 = !DILocation(line: 220, column: 2, scope: !3722)
!3743 = !DILocation(line: 222, column: 22, scope: !3710)
!3744 = !DILocation(line: 222, column: 29, scope: !3710)
!3745 = !DILocation(line: 222, column: 35, scope: !3710)
!3746 = !DILocation(line: 222, column: 38, scope: !3710)
!3747 = !DILocation(line: 222, column: 2, scope: !3710)
!3748 = !DILocation(line: 223, column: 1, scope: !3710)
!3749 = distinct !DISubprogram(name: "ui_bounds_block", scope: !3, file: !3, line: 266, type: !3750, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!3750 = !DISubroutineType(types: !3751)
!3751 = !{null, !1695}
!3752 = !DILocalVariable(name: "block", arg: 1, scope: !3749, file: !3, line: 266, type: !1695)
!3753 = !DILocation(line: 266, column: 31, scope: !3749)
!3754 = !DILocalVariable(name: "bt", scope: !3749, file: !3, line: 268, type: !1558)
!3755 = !DILocation(line: 268, column: 9, scope: !3749)
!3756 = !DILocalVariable(name: "xof", scope: !3749, file: !3, line: 269, type: !1067)
!3757 = !DILocation(line: 269, column: 6, scope: !3749)
!3758 = !DILocation(line: 271, column: 29, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3749, file: !3, line: 271, column: 6)
!3760 = !DILocation(line: 271, column: 36, scope: !3759)
!3761 = !DILocation(line: 271, column: 6, scope: !3759)
!3762 = !DILocation(line: 271, column: 6, scope: !3749)
!3763 = !DILocation(line: 272, column: 7, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3765, file: !3, line: 272, column: 7)
!3765 = distinct !DILexicalBlock(scope: !3759, file: !3, line: 271, column: 46)
!3766 = !DILocation(line: 272, column: 14, scope: !3764)
!3767 = !DILocation(line: 272, column: 7, scope: !3765)
!3768 = !DILocation(line: 273, column: 4, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3764, file: !3, line: 272, column: 21)
!3770 = !DILocation(line: 273, column: 11, scope: !3769)
!3771 = !DILocation(line: 273, column: 16, scope: !3769)
!3772 = !DILocation(line: 273, column: 21, scope: !3769)
!3773 = !DILocation(line: 273, column: 47, scope: !3769)
!3774 = !DILocation(line: 273, column: 54, scope: !3769)
!3775 = !DILocation(line: 273, column: 61, scope: !3769)
!3776 = !DILocation(line: 273, column: 28, scope: !3769)
!3777 = !DILocation(line: 273, column: 35, scope: !3769)
!3778 = !DILocation(line: 273, column: 40, scope: !3769)
!3779 = !DILocation(line: 273, column: 45, scope: !3769)
!3780 = !DILocation(line: 274, column: 4, scope: !3769)
!3781 = !DILocation(line: 274, column: 11, scope: !3769)
!3782 = !DILocation(line: 274, column: 16, scope: !3769)
!3783 = !DILocation(line: 274, column: 21, scope: !3769)
!3784 = !DILocation(line: 274, column: 47, scope: !3769)
!3785 = !DILocation(line: 274, column: 54, scope: !3769)
!3786 = !DILocation(line: 274, column: 61, scope: !3769)
!3787 = !DILocation(line: 274, column: 28, scope: !3769)
!3788 = !DILocation(line: 274, column: 35, scope: !3769)
!3789 = !DILocation(line: 274, column: 40, scope: !3769)
!3790 = !DILocation(line: 274, column: 45, scope: !3769)
!3791 = !DILocation(line: 275, column: 3, scope: !3769)
!3792 = !DILocation(line: 276, column: 2, scope: !3765)
!3793 = !DILocation(line: 279, column: 25, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3759, file: !3, line: 277, column: 7)
!3795 = !DILocation(line: 279, column: 32, scope: !3794)
!3796 = !DILocation(line: 279, column: 3, scope: !3794)
!3797 = !DILocation(line: 281, column: 13, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3794, file: !3, line: 281, column: 3)
!3799 = !DILocation(line: 281, column: 20, scope: !3798)
!3800 = !DILocation(line: 281, column: 28, scope: !3798)
!3801 = !DILocation(line: 281, column: 11, scope: !3798)
!3802 = !DILocation(line: 281, column: 8, scope: !3798)
!3803 = !DILocation(line: 281, column: 35, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 281, column: 3)
!3805 = !DILocation(line: 281, column: 3, scope: !3798)
!3806 = !DILocation(line: 282, column: 20, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3804, file: !3, line: 281, column: 54)
!3808 = !DILocation(line: 282, column: 27, scope: !3807)
!3809 = !DILocation(line: 282, column: 34, scope: !3807)
!3810 = !DILocation(line: 282, column: 38, scope: !3807)
!3811 = !DILocation(line: 282, column: 4, scope: !3807)
!3812 = !DILocation(line: 283, column: 3, scope: !3807)
!3813 = !DILocation(line: 281, column: 44, scope: !3804)
!3814 = !DILocation(line: 281, column: 48, scope: !3804)
!3815 = !DILocation(line: 281, column: 42, scope: !3804)
!3816 = !DILocation(line: 281, column: 3, scope: !3804)
!3817 = distinct !{!3817, !3805, !3818}
!3818 = !DILocation(line: 283, column: 3, scope: !3798)
!3819 = !DILocation(line: 285, column: 23, scope: !3794)
!3820 = !DILocation(line: 285, column: 30, scope: !3794)
!3821 = !DILocation(line: 285, column: 3, scope: !3794)
!3822 = !DILocation(line: 285, column: 10, scope: !3794)
!3823 = !DILocation(line: 285, column: 15, scope: !3794)
!3824 = !DILocation(line: 285, column: 20, scope: !3794)
!3825 = !DILocation(line: 286, column: 23, scope: !3794)
!3826 = !DILocation(line: 286, column: 30, scope: !3794)
!3827 = !DILocation(line: 286, column: 3, scope: !3794)
!3828 = !DILocation(line: 286, column: 10, scope: !3794)
!3829 = !DILocation(line: 286, column: 15, scope: !3794)
!3830 = !DILocation(line: 286, column: 20, scope: !3794)
!3831 = !DILocation(line: 287, column: 23, scope: !3794)
!3832 = !DILocation(line: 287, column: 30, scope: !3794)
!3833 = !DILocation(line: 287, column: 3, scope: !3794)
!3834 = !DILocation(line: 287, column: 10, scope: !3794)
!3835 = !DILocation(line: 287, column: 15, scope: !3794)
!3836 = !DILocation(line: 287, column: 20, scope: !3794)
!3837 = !DILocation(line: 288, column: 23, scope: !3794)
!3838 = !DILocation(line: 288, column: 30, scope: !3794)
!3839 = !DILocation(line: 288, column: 3, scope: !3794)
!3840 = !DILocation(line: 288, column: 10, scope: !3794)
!3841 = !DILocation(line: 288, column: 15, scope: !3794)
!3842 = !DILocation(line: 288, column: 20, scope: !3794)
!3843 = !DILocation(line: 291, column: 21, scope: !3749)
!3844 = !DILocation(line: 291, column: 28, scope: !3749)
!3845 = !DILocation(line: 291, column: 33, scope: !3749)
!3846 = !DILocation(line: 291, column: 64, scope: !3749)
!3847 = !DILocation(line: 291, column: 71, scope: !3749)
!3848 = !DILocation(line: 291, column: 47, scope: !3749)
!3849 = !DILocation(line: 291, column: 78, scope: !3749)
!3850 = !DILocation(line: 291, column: 85, scope: !3749)
!3851 = !DILocation(line: 291, column: 40, scope: !3749)
!3852 = !DILocation(line: 291, column: 38, scope: !3749)
!3853 = !DILocation(line: 291, column: 2, scope: !3749)
!3854 = !DILocation(line: 291, column: 9, scope: !3749)
!3855 = !DILocation(line: 291, column: 14, scope: !3749)
!3856 = !DILocation(line: 291, column: 19, scope: !3749)
!3857 = !DILocation(line: 294, column: 7, scope: !3749)
!3858 = !DILocation(line: 294, column: 14, scope: !3749)
!3859 = !DILocation(line: 294, column: 22, scope: !3749)
!3860 = !DILocation(line: 294, column: 5, scope: !3749)
!3861 = !DILocation(line: 295, column: 6, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3749, file: !3, line: 295, column: 6)
!3863 = !DILocation(line: 295, column: 9, scope: !3862)
!3864 = !DILocation(line: 295, column: 20, scope: !3862)
!3865 = !DILocation(line: 295, column: 24, scope: !3862)
!3866 = !DILocation(line: 295, column: 12, scope: !3862)
!3867 = !DILocation(line: 295, column: 41, scope: !3862)
!3868 = !DILocation(line: 295, column: 6, scope: !3749)
!3869 = !DILocation(line: 295, column: 51, scope: !3862)
!3870 = !DILocation(line: 295, column: 47, scope: !3862)
!3871 = !DILocation(line: 296, column: 11, scope: !3862)
!3872 = !DILocation(line: 298, column: 23, scope: !3749)
!3873 = !DILocation(line: 298, column: 30, scope: !3749)
!3874 = !DILocation(line: 298, column: 35, scope: !3749)
!3875 = !DILocation(line: 298, column: 42, scope: !3749)
!3876 = !DILocation(line: 298, column: 40, scope: !3749)
!3877 = !DILocation(line: 298, column: 2, scope: !3749)
!3878 = !DILocation(line: 298, column: 9, scope: !3749)
!3879 = !DILocation(line: 298, column: 16, scope: !3749)
!3880 = !DILocation(line: 298, column: 21, scope: !3749)
!3881 = !DILocation(line: 299, column: 23, scope: !3749)
!3882 = !DILocation(line: 299, column: 30, scope: !3749)
!3883 = !DILocation(line: 299, column: 35, scope: !3749)
!3884 = !DILocation(line: 299, column: 42, scope: !3749)
!3885 = !DILocation(line: 299, column: 40, scope: !3749)
!3886 = !DILocation(line: 299, column: 2, scope: !3749)
!3887 = !DILocation(line: 299, column: 9, scope: !3749)
!3888 = !DILocation(line: 299, column: 16, scope: !3749)
!3889 = !DILocation(line: 299, column: 21, scope: !3749)
!3890 = !DILocation(line: 300, column: 23, scope: !3749)
!3891 = !DILocation(line: 300, column: 30, scope: !3749)
!3892 = !DILocation(line: 300, column: 35, scope: !3749)
!3893 = !DILocation(line: 300, column: 42, scope: !3749)
!3894 = !DILocation(line: 300, column: 40, scope: !3749)
!3895 = !DILocation(line: 300, column: 2, scope: !3749)
!3896 = !DILocation(line: 300, column: 9, scope: !3749)
!3897 = !DILocation(line: 300, column: 16, scope: !3749)
!3898 = !DILocation(line: 300, column: 21, scope: !3749)
!3899 = !DILocation(line: 301, column: 23, scope: !3749)
!3900 = !DILocation(line: 301, column: 30, scope: !3749)
!3901 = !DILocation(line: 301, column: 35, scope: !3749)
!3902 = !DILocation(line: 301, column: 42, scope: !3749)
!3903 = !DILocation(line: 301, column: 40, scope: !3749)
!3904 = !DILocation(line: 301, column: 2, scope: !3749)
!3905 = !DILocation(line: 301, column: 9, scope: !3749)
!3906 = !DILocation(line: 301, column: 16, scope: !3749)
!3907 = !DILocation(line: 301, column: 21, scope: !3749)
!3908 = !DILocation(line: 302, column: 1, scope: !3749)
!3909 = distinct !DISubprogram(name: "BLI_listbase_is_empty", scope: !3910, file: !3910, line: 88, type: !3911, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!3910 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3911 = !DISubroutineType(types: !3912)
!3912 = !{!1550, !3913}
!3913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3914, size: 64)
!3914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1629)
!3915 = !DILocalVariable(name: "lb", arg: 1, scope: !3909, file: !3910, line: 88, type: !3913)
!3916 = !DILocation(line: 88, column: 62, scope: !3909)
!3917 = !DILocation(line: 88, column: 76, scope: !3909)
!3918 = !DILocation(line: 88, column: 80, scope: !3909)
!3919 = !DILocation(line: 88, column: 86, scope: !3909)
!3920 = !DILocation(line: 88, column: 75, scope: !3909)
!3921 = !DILocation(line: 88, column: 68, scope: !3909)
!3922 = distinct !DISubprogram(name: "max_ff", scope: !3923, file: !3923, line: 206, type: !3924, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!3923 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3924 = !DISubroutineType(types: !3925)
!3925 = !{!1534, !1534, !1534}
!3926 = !DILocalVariable(name: "a", arg: 1, scope: !3922, file: !3923, line: 206, type: !1534)
!3927 = !DILocation(line: 206, column: 28, scope: !3922)
!3928 = !DILocalVariable(name: "b", arg: 2, scope: !3922, file: !3923, line: 206, type: !1534)
!3929 = !DILocation(line: 206, column: 37, scope: !3922)
!3930 = !DILocation(line: 208, column: 10, scope: !3922)
!3931 = !DILocation(line: 208, column: 14, scope: !3922)
!3932 = !DILocation(line: 208, column: 12, scope: !3922)
!3933 = !DILocation(line: 208, column: 9, scope: !3922)
!3934 = !DILocation(line: 208, column: 19, scope: !3922)
!3935 = !DILocation(line: 208, column: 23, scope: !3922)
!3936 = !DILocation(line: 208, column: 2, scope: !3922)
!3937 = distinct !DISubprogram(name: "BLI_rctf_size_x", scope: !3413, file: !3413, line: 107, type: !3938, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!3938 = !DISubroutineType(types: !3939)
!3939 = !{!1534, !3940}
!3940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3941, size: 64)
!3941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1592)
!3942 = !DILocalVariable(name: "rct", arg: 1, scope: !3937, file: !3413, line: 107, type: !3940)
!3943 = !DILocation(line: 107, column: 53, scope: !3937)
!3944 = !DILocation(line: 107, column: 68, scope: !3937)
!3945 = !DILocation(line: 107, column: 73, scope: !3937)
!3946 = !DILocation(line: 107, column: 80, scope: !3937)
!3947 = !DILocation(line: 107, column: 85, scope: !3937)
!3948 = !DILocation(line: 107, column: 78, scope: !3937)
!3949 = !DILocation(line: 107, column: 60, scope: !3937)
!3950 = distinct !DISubprogram(name: "uiBoundsBlock", scope: !3, file: !3, line: 411, type: !3951, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!3951 = !DISubroutineType(types: !3952)
!3952 = !{null, !1695, !1067}
!3953 = !DILocalVariable(name: "block", arg: 1, scope: !3950, file: !3, line: 411, type: !1695)
!3954 = !DILocation(line: 411, column: 29, scope: !3950)
!3955 = !DILocalVariable(name: "addval", arg: 2, scope: !3950, file: !3, line: 411, type: !1067)
!3956 = !DILocation(line: 411, column: 40, scope: !3950)
!3957 = !DILocation(line: 413, column: 6, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 413, column: 6)
!3959 = !DILocation(line: 413, column: 12, scope: !3958)
!3960 = !DILocation(line: 413, column: 6, scope: !3950)
!3961 = !DILocation(line: 414, column: 3, scope: !3958)
!3962 = !DILocation(line: 416, column: 18, scope: !3950)
!3963 = !DILocation(line: 416, column: 2, scope: !3950)
!3964 = !DILocation(line: 416, column: 9, scope: !3950)
!3965 = !DILocation(line: 416, column: 16, scope: !3950)
!3966 = !DILocation(line: 417, column: 2, scope: !3950)
!3967 = !DILocation(line: 417, column: 9, scope: !3950)
!3968 = !DILocation(line: 417, column: 21, scope: !3950)
!3969 = !DILocation(line: 418, column: 1, scope: !3950)
!3970 = distinct !DISubprogram(name: "uiTextBoundsBlock", scope: !3, file: !3, line: 421, type: !3951, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!3971 = !DILocalVariable(name: "block", arg: 1, scope: !3970, file: !3, line: 421, type: !1695)
!3972 = !DILocation(line: 421, column: 33, scope: !3970)
!3973 = !DILocalVariable(name: "addval", arg: 2, scope: !3970, file: !3, line: 421, type: !1067)
!3974 = !DILocation(line: 421, column: 44, scope: !3970)
!3975 = !DILocation(line: 423, column: 18, scope: !3970)
!3976 = !DILocation(line: 423, column: 2, scope: !3970)
!3977 = !DILocation(line: 423, column: 9, scope: !3970)
!3978 = !DILocation(line: 423, column: 16, scope: !3970)
!3979 = !DILocation(line: 424, column: 2, scope: !3970)
!3980 = !DILocation(line: 424, column: 9, scope: !3970)
!3981 = !DILocation(line: 424, column: 21, scope: !3970)
!3982 = !DILocation(line: 425, column: 1, scope: !3970)
!3983 = distinct !DISubprogram(name: "uiPopupBoundsBlock", scope: !3, file: !3, line: 428, type: !3984, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!3984 = !DISubroutineType(types: !3985)
!3985 = !{null, !1695, !1067, !1067, !1067}
!3986 = !DILocalVariable(name: "block", arg: 1, scope: !3983, file: !3, line: 428, type: !1695)
!3987 = !DILocation(line: 428, column: 34, scope: !3983)
!3988 = !DILocalVariable(name: "addval", arg: 2, scope: !3983, file: !3, line: 428, type: !1067)
!3989 = !DILocation(line: 428, column: 45, scope: !3983)
!3990 = !DILocalVariable(name: "mx", arg: 3, scope: !3983, file: !3, line: 428, type: !1067)
!3991 = !DILocation(line: 428, column: 57, scope: !3983)
!3992 = !DILocalVariable(name: "my", arg: 4, scope: !3983, file: !3, line: 428, type: !1067)
!3993 = !DILocation(line: 428, column: 65, scope: !3983)
!3994 = !DILocation(line: 430, column: 18, scope: !3983)
!3995 = !DILocation(line: 430, column: 2, scope: !3983)
!3996 = !DILocation(line: 430, column: 9, scope: !3983)
!3997 = !DILocation(line: 430, column: 16, scope: !3983)
!3998 = !DILocation(line: 431, column: 2, scope: !3983)
!3999 = !DILocation(line: 431, column: 9, scope: !3983)
!4000 = !DILocation(line: 431, column: 21, scope: !3983)
!4001 = !DILocation(line: 432, column: 14, scope: !3983)
!4002 = !DILocation(line: 432, column: 2, scope: !3983)
!4003 = !DILocation(line: 432, column: 9, scope: !3983)
!4004 = !DILocation(line: 432, column: 12, scope: !3983)
!4005 = !DILocation(line: 433, column: 14, scope: !3983)
!4006 = !DILocation(line: 433, column: 2, scope: !3983)
!4007 = !DILocation(line: 433, column: 9, scope: !3983)
!4008 = !DILocation(line: 433, column: 12, scope: !3983)
!4009 = !DILocation(line: 434, column: 1, scope: !3983)
!4010 = distinct !DISubprogram(name: "uiMenuPopupBoundsBlock", scope: !3, file: !3, line: 437, type: !3984, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!4011 = !DILocalVariable(name: "block", arg: 1, scope: !4010, file: !3, line: 437, type: !1695)
!4012 = !DILocation(line: 437, column: 38, scope: !4010)
!4013 = !DILocalVariable(name: "addval", arg: 2, scope: !4010, file: !3, line: 437, type: !1067)
!4014 = !DILocation(line: 437, column: 49, scope: !4010)
!4015 = !DILocalVariable(name: "mx", arg: 3, scope: !4010, file: !3, line: 437, type: !1067)
!4016 = !DILocation(line: 437, column: 61, scope: !4010)
!4017 = !DILocalVariable(name: "my", arg: 4, scope: !4010, file: !3, line: 437, type: !1067)
!4018 = !DILocation(line: 437, column: 69, scope: !4010)
!4019 = !DILocation(line: 439, column: 18, scope: !4010)
!4020 = !DILocation(line: 439, column: 2, scope: !4010)
!4021 = !DILocation(line: 439, column: 9, scope: !4010)
!4022 = !DILocation(line: 439, column: 16, scope: !4010)
!4023 = !DILocation(line: 440, column: 2, scope: !4010)
!4024 = !DILocation(line: 440, column: 9, scope: !4010)
!4025 = !DILocation(line: 440, column: 21, scope: !4010)
!4026 = !DILocation(line: 441, column: 14, scope: !4010)
!4027 = !DILocation(line: 441, column: 2, scope: !4010)
!4028 = !DILocation(line: 441, column: 9, scope: !4010)
!4029 = !DILocation(line: 441, column: 12, scope: !4010)
!4030 = !DILocation(line: 442, column: 14, scope: !4010)
!4031 = !DILocation(line: 442, column: 2, scope: !4010)
!4032 = !DILocation(line: 442, column: 9, scope: !4010)
!4033 = !DILocation(line: 442, column: 12, scope: !4010)
!4034 = !DILocation(line: 443, column: 1, scope: !4010)
!4035 = distinct !DISubprogram(name: "uiCenteredBoundsBlock", scope: !3, file: !3, line: 446, type: !3951, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!4036 = !DILocalVariable(name: "block", arg: 1, scope: !4035, file: !3, line: 446, type: !1695)
!4037 = !DILocation(line: 446, column: 37, scope: !4035)
!4038 = !DILocalVariable(name: "addval", arg: 2, scope: !4035, file: !3, line: 446, type: !1067)
!4039 = !DILocation(line: 446, column: 48, scope: !4035)
!4040 = !DILocation(line: 448, column: 18, scope: !4035)
!4041 = !DILocation(line: 448, column: 2, scope: !4035)
!4042 = !DILocation(line: 448, column: 9, scope: !4035)
!4043 = !DILocation(line: 448, column: 16, scope: !4035)
!4044 = !DILocation(line: 449, column: 2, scope: !4035)
!4045 = !DILocation(line: 449, column: 9, scope: !4035)
!4046 = !DILocation(line: 449, column: 21, scope: !4035)
!4047 = !DILocation(line: 450, column: 1, scope: !4035)
!4048 = distinct !DISubprogram(name: "uiExplicitBoundsBlock", scope: !3, file: !3, line: 452, type: !4049, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!4049 = !DISubroutineType(types: !4050)
!4050 = !{null, !1695, !1067, !1067, !1067, !1067}
!4051 = !DILocalVariable(name: "block", arg: 1, scope: !4048, file: !3, line: 452, type: !1695)
!4052 = !DILocation(line: 452, column: 37, scope: !4048)
!4053 = !DILocalVariable(name: "minx", arg: 2, scope: !4048, file: !3, line: 452, type: !1067)
!4054 = !DILocation(line: 452, column: 48, scope: !4048)
!4055 = !DILocalVariable(name: "miny", arg: 3, scope: !4048, file: !3, line: 452, type: !1067)
!4056 = !DILocation(line: 452, column: 58, scope: !4048)
!4057 = !DILocalVariable(name: "maxx", arg: 4, scope: !4048, file: !3, line: 452, type: !1067)
!4058 = !DILocation(line: 452, column: 68, scope: !4048)
!4059 = !DILocalVariable(name: "maxy", arg: 5, scope: !4048, file: !3, line: 452, type: !1067)
!4060 = !DILocation(line: 452, column: 78, scope: !4048)
!4061 = !DILocation(line: 454, column: 21, scope: !4048)
!4062 = !DILocation(line: 454, column: 2, scope: !4048)
!4063 = !DILocation(line: 454, column: 9, scope: !4048)
!4064 = !DILocation(line: 454, column: 14, scope: !4048)
!4065 = !DILocation(line: 454, column: 19, scope: !4048)
!4066 = !DILocation(line: 455, column: 21, scope: !4048)
!4067 = !DILocation(line: 455, column: 2, scope: !4048)
!4068 = !DILocation(line: 455, column: 9, scope: !4048)
!4069 = !DILocation(line: 455, column: 14, scope: !4048)
!4070 = !DILocation(line: 455, column: 19, scope: !4048)
!4071 = !DILocation(line: 456, column: 21, scope: !4048)
!4072 = !DILocation(line: 456, column: 2, scope: !4048)
!4073 = !DILocation(line: 456, column: 9, scope: !4048)
!4074 = !DILocation(line: 456, column: 14, scope: !4048)
!4075 = !DILocation(line: 456, column: 19, scope: !4048)
!4076 = !DILocation(line: 457, column: 21, scope: !4048)
!4077 = !DILocation(line: 457, column: 2, scope: !4048)
!4078 = !DILocation(line: 457, column: 9, scope: !4048)
!4079 = !DILocation(line: 457, column: 14, scope: !4048)
!4080 = !DILocation(line: 457, column: 19, scope: !4048)
!4081 = !DILocation(line: 458, column: 2, scope: !4048)
!4082 = !DILocation(line: 458, column: 9, scope: !4048)
!4083 = !DILocation(line: 458, column: 21, scope: !4048)
!4084 = !DILocation(line: 459, column: 1, scope: !4048)
!4085 = distinct !DISubprogram(name: "ui_but_find_old", scope: !3, file: !3, line: 579, type: !4086, scopeLine: 580, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!4086 = !DISubroutineType(types: !4087)
!4087 = !{!1558, !1695, !4088}
!4088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4089, size: 64)
!4089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1559)
!4090 = !DILocalVariable(name: "block_old", arg: 1, scope: !4085, file: !3, line: 579, type: !1695)
!4091 = !DILocation(line: 579, column: 33, scope: !4085)
!4092 = !DILocalVariable(name: "but_new", arg: 2, scope: !4085, file: !3, line: 579, type: !4088)
!4093 = !DILocation(line: 579, column: 57, scope: !4085)
!4094 = !DILocalVariable(name: "but_old", scope: !4085, file: !3, line: 581, type: !1558)
!4095 = !DILocation(line: 581, column: 9, scope: !4085)
!4096 = !DILocation(line: 582, column: 17, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4085, file: !3, line: 582, column: 2)
!4098 = !DILocation(line: 582, column: 28, scope: !4097)
!4099 = !DILocation(line: 582, column: 36, scope: !4097)
!4100 = !DILocation(line: 582, column: 15, scope: !4097)
!4101 = !DILocation(line: 582, column: 7, scope: !4097)
!4102 = !DILocation(line: 582, column: 43, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 582, column: 2)
!4104 = !DILocation(line: 582, column: 2, scope: !4097)
!4105 = !DILocation(line: 583, column: 25, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4107, file: !3, line: 583, column: 7)
!4107 = distinct !DILexicalBlock(scope: !4103, file: !3, line: 582, column: 77)
!4108 = !DILocation(line: 583, column: 34, scope: !4106)
!4109 = !DILocation(line: 583, column: 7, scope: !4106)
!4110 = !DILocation(line: 583, column: 7, scope: !4107)
!4111 = !DILocation(line: 584, column: 4, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4106, file: !3, line: 583, column: 44)
!4113 = !DILocation(line: 586, column: 2, scope: !4107)
!4114 = !DILocation(line: 582, column: 62, scope: !4103)
!4115 = !DILocation(line: 582, column: 71, scope: !4103)
!4116 = !DILocation(line: 582, column: 60, scope: !4103)
!4117 = !DILocation(line: 582, column: 2, scope: !4103)
!4118 = distinct !{!4118, !4104, !4119}
!4119 = !DILocation(line: 586, column: 2, scope: !4097)
!4120 = !DILocation(line: 587, column: 9, scope: !4085)
!4121 = !DILocation(line: 587, column: 2, scope: !4085)
!4122 = distinct !DISubprogram(name: "ui_but_equals_old", scope: !3, file: !3, line: 561, type: !4123, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!4123 = !DISubroutineType(types: !4124)
!4124 = !{!1550, !4088, !4088}
!4125 = !DILocalVariable(name: "but", arg: 1, scope: !4122, file: !3, line: 561, type: !4088)
!4126 = !DILocation(line: 561, column: 44, scope: !4122)
!4127 = !DILocalVariable(name: "oldbut", arg: 2, scope: !4122, file: !3, line: 561, type: !4088)
!4128 = !DILocation(line: 561, column: 62, scope: !4122)
!4129 = !DILocation(line: 565, column: 6, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 565, column: 6)
!4131 = !DILocation(line: 565, column: 11, scope: !4130)
!4132 = !DILocation(line: 565, column: 21, scope: !4130)
!4133 = !DILocation(line: 565, column: 29, scope: !4130)
!4134 = !DILocation(line: 565, column: 18, scope: !4130)
!4135 = !DILocation(line: 565, column: 6, scope: !4122)
!4136 = !DILocation(line: 565, column: 37, scope: !4130)
!4137 = !DILocation(line: 566, column: 6, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 566, column: 6)
!4139 = !DILocation(line: 566, column: 11, scope: !4138)
!4140 = !DILocation(line: 566, column: 19, scope: !4138)
!4141 = !DILocation(line: 566, column: 27, scope: !4138)
!4142 = !DILocation(line: 566, column: 35, scope: !4138)
!4143 = !DILocation(line: 566, column: 43, scope: !4138)
!4144 = !DILocation(line: 566, column: 24, scope: !4138)
!4145 = !DILocation(line: 566, column: 6, scope: !4122)
!4146 = !DILocation(line: 566, column: 49, scope: !4138)
!4147 = !DILocation(line: 567, column: 6, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 567, column: 6)
!4149 = !DILocation(line: 567, column: 11, scope: !4148)
!4150 = !DILocation(line: 567, column: 22, scope: !4148)
!4151 = !DILocation(line: 567, column: 30, scope: !4148)
!4152 = !DILocation(line: 567, column: 19, scope: !4148)
!4153 = !DILocation(line: 567, column: 38, scope: !4148)
!4154 = !DILocation(line: 567, column: 41, scope: !4148)
!4155 = !DILocation(line: 567, column: 46, scope: !4148)
!4156 = !DILocation(line: 567, column: 58, scope: !4148)
!4157 = !DILocation(line: 567, column: 66, scope: !4148)
!4158 = !DILocation(line: 567, column: 55, scope: !4148)
!4159 = !DILocation(line: 567, column: 6, scope: !4122)
!4160 = !DILocation(line: 567, column: 76, scope: !4148)
!4161 = !DILocation(line: 568, column: 6, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 568, column: 6)
!4163 = !DILocation(line: 568, column: 11, scope: !4162)
!4164 = !DILocation(line: 568, column: 19, scope: !4162)
!4165 = !DILocation(line: 568, column: 27, scope: !4162)
!4166 = !DILocation(line: 568, column: 16, scope: !4162)
!4167 = !DILocation(line: 568, column: 6, scope: !4122)
!4168 = !DILocation(line: 568, column: 33, scope: !4162)
!4169 = !DILocation(line: 569, column: 6, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 569, column: 6)
!4171 = !DILocation(line: 569, column: 11, scope: !4170)
!4172 = !DILocation(line: 569, column: 20, scope: !4170)
!4173 = !DILocation(line: 569, column: 28, scope: !4170)
!4174 = !DILocation(line: 569, column: 17, scope: !4170)
!4175 = !DILocation(line: 569, column: 6, scope: !4122)
!4176 = !DILocation(line: 569, column: 35, scope: !4170)
!4177 = !DILocation(line: 570, column: 6, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 570, column: 6)
!4179 = !DILocation(line: 570, column: 14, scope: !4178)
!4180 = !DILocation(line: 570, column: 27, scope: !4178)
!4181 = !DILocation(line: 570, column: 24, scope: !4178)
!4182 = !DILocation(line: 570, column: 34, scope: !4178)
!4183 = !DILocation(line: 570, column: 37, scope: !4178)
!4184 = !DILocation(line: 570, column: 42, scope: !4178)
!4185 = !DILocation(line: 570, column: 55, scope: !4178)
!4186 = !DILocation(line: 570, column: 63, scope: !4178)
!4187 = !DILocation(line: 570, column: 52, scope: !4178)
!4188 = !DILocation(line: 570, column: 6, scope: !4122)
!4189 = !DILocation(line: 570, column: 74, scope: !4178)
!4190 = !DILocation(line: 571, column: 6, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 571, column: 6)
!4192 = !DILocation(line: 571, column: 14, scope: !4191)
!4193 = !DILocation(line: 571, column: 27, scope: !4191)
!4194 = !DILocation(line: 571, column: 24, scope: !4191)
!4195 = !DILocation(line: 571, column: 34, scope: !4191)
!4196 = !DILocation(line: 571, column: 37, scope: !4191)
!4197 = !DILocation(line: 571, column: 42, scope: !4191)
!4198 = !DILocation(line: 571, column: 55, scope: !4191)
!4199 = !DILocation(line: 571, column: 63, scope: !4191)
!4200 = !DILocation(line: 571, column: 52, scope: !4191)
!4201 = !DILocation(line: 571, column: 6, scope: !4122)
!4202 = !DILocation(line: 571, column: 74, scope: !4191)
!4203 = !DILocation(line: 572, column: 7, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 572, column: 6)
!4205 = !DILocation(line: 572, column: 12, scope: !4204)
!4206 = !DILocation(line: 572, column: 18, scope: !4204)
!4207 = !DILocation(line: 572, column: 23, scope: !4204)
!4208 = !DILocation(line: 572, column: 28, scope: !4204)
!4209 = !DILocation(line: 572, column: 36, scope: !4204)
!4210 = !DILocation(line: 572, column: 44, scope: !4204)
!4211 = !DILocation(line: 572, column: 33, scope: !4204)
!4212 = !DILocation(line: 572, column: 49, scope: !4204)
!4213 = !DILocation(line: 572, column: 61, scope: !4204)
!4214 = !DILocation(line: 572, column: 69, scope: !4204)
!4215 = !DILocation(line: 572, column: 52, scope: !4204)
!4216 = !DILocation(line: 572, column: 77, scope: !4204)
!4217 = !DILocation(line: 572, column: 74, scope: !4204)
!4218 = !DILocation(line: 572, column: 85, scope: !4204)
!4219 = !DILocation(line: 573, column: 23, scope: !4204)
!4220 = !DILocation(line: 573, column: 28, scope: !4204)
!4221 = !DILocation(line: 573, column: 40, scope: !4204)
!4222 = !DILocation(line: 573, column: 48, scope: !4204)
!4223 = !DILocation(line: 573, column: 37, scope: !4204)
!4224 = !DILocation(line: 572, column: 6, scope: !4122)
!4225 = !DILocation(line: 573, column: 60, scope: !4204)
!4226 = !DILocation(line: 574, column: 6, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 574, column: 6)
!4228 = !DILocation(line: 574, column: 11, scope: !4227)
!4229 = !DILocation(line: 574, column: 21, scope: !4227)
!4230 = !DILocation(line: 574, column: 29, scope: !4227)
!4231 = !DILocation(line: 574, column: 18, scope: !4227)
!4232 = !DILocation(line: 574, column: 6, scope: !4122)
!4233 = !DILocation(line: 574, column: 37, scope: !4227)
!4234 = !DILocation(line: 576, column: 2, scope: !4122)
!4235 = !DILocation(line: 577, column: 1, scope: !4122)
!4236 = distinct !DISubprogram(name: "ui_but_find_new", scope: !3, file: !3, line: 589, type: !4086, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!4237 = !DILocalVariable(name: "block_new", arg: 1, scope: !4236, file: !3, line: 589, type: !1695)
!4238 = !DILocation(line: 589, column: 33, scope: !4236)
!4239 = !DILocalVariable(name: "but_old", arg: 2, scope: !4236, file: !3, line: 589, type: !4088)
!4240 = !DILocation(line: 589, column: 57, scope: !4236)
!4241 = !DILocalVariable(name: "but_new", scope: !4236, file: !3, line: 591, type: !1558)
!4242 = !DILocation(line: 591, column: 9, scope: !4236)
!4243 = !DILocation(line: 592, column: 17, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4236, file: !3, line: 592, column: 2)
!4245 = !DILocation(line: 592, column: 28, scope: !4244)
!4246 = !DILocation(line: 592, column: 36, scope: !4244)
!4247 = !DILocation(line: 592, column: 15, scope: !4244)
!4248 = !DILocation(line: 592, column: 7, scope: !4244)
!4249 = !DILocation(line: 592, column: 43, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4244, file: !3, line: 592, column: 2)
!4251 = !DILocation(line: 592, column: 2, scope: !4244)
!4252 = !DILocation(line: 593, column: 25, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 593, column: 7)
!4254 = distinct !DILexicalBlock(scope: !4250, file: !3, line: 592, column: 77)
!4255 = !DILocation(line: 593, column: 34, scope: !4253)
!4256 = !DILocation(line: 593, column: 7, scope: !4253)
!4257 = !DILocation(line: 593, column: 7, scope: !4254)
!4258 = !DILocation(line: 594, column: 4, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4253, file: !3, line: 593, column: 44)
!4260 = !DILocation(line: 596, column: 2, scope: !4254)
!4261 = !DILocation(line: 592, column: 62, scope: !4250)
!4262 = !DILocation(line: 592, column: 71, scope: !4250)
!4263 = !DILocation(line: 592, column: 60, scope: !4250)
!4264 = !DILocation(line: 592, column: 2, scope: !4250)
!4265 = distinct !{!4265, !4251, !4266}
!4266 = !DILocation(line: 596, column: 2, scope: !4244)
!4267 = !DILocation(line: 597, column: 9, scope: !4236)
!4268 = !DILocation(line: 597, column: 2, scope: !4236)
!4269 = distinct !DISubprogram(name: "uiButActiveOnly", scope: !3, file: !3, line: 766, type: !4270, scopeLine: 767, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!4270 = !DISubroutineType(types: !4271)
!4271 = !{!1550, !4272, !3112, !1695, !1558}
!4272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4273, size: 64)
!4273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1537)
!4274 = !DILocalVariable(name: "C", arg: 1, scope: !4269, file: !3, line: 766, type: !4272)
!4275 = !DILocation(line: 766, column: 38, scope: !4269)
!4276 = !DILocalVariable(name: "ar", arg: 2, scope: !4269, file: !3, line: 766, type: !3112)
!4277 = !DILocation(line: 766, column: 50, scope: !4269)
!4278 = !DILocalVariable(name: "block", arg: 3, scope: !4269, file: !3, line: 766, type: !1695)
!4279 = !DILocation(line: 766, column: 63, scope: !4269)
!4280 = !DILocalVariable(name: "but", arg: 4, scope: !4269, file: !3, line: 766, type: !1558)
!4281 = !DILocation(line: 766, column: 77, scope: !4269)
!4282 = !DILocalVariable(name: "oldblock", scope: !4269, file: !3, line: 768, type: !1695)
!4283 = !DILocation(line: 768, column: 11, scope: !4269)
!4284 = !DILocalVariable(name: "oldbut", scope: !4269, file: !3, line: 769, type: !1558)
!4285 = !DILocation(line: 769, column: 9, scope: !4269)
!4286 = !DILocalVariable(name: "activate", scope: !4269, file: !3, line: 770, type: !1550)
!4287 = !DILocation(line: 770, column: 7, scope: !4269)
!4288 = !DILocalVariable(name: "found", scope: !4269, file: !3, line: 770, type: !1550)
!4289 = !DILocation(line: 770, column: 25, scope: !4269)
!4290 = !DILocalVariable(name: "isactive", scope: !4269, file: !3, line: 770, type: !1550)
!4291 = !DILocation(line: 770, column: 40, scope: !4269)
!4292 = !DILocation(line: 772, column: 13, scope: !4269)
!4293 = !DILocation(line: 772, column: 20, scope: !4269)
!4294 = !DILocation(line: 772, column: 11, scope: !4269)
!4295 = !DILocation(line: 773, column: 7, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4269, file: !3, line: 773, column: 6)
!4297 = !DILocation(line: 773, column: 6, scope: !4269)
!4298 = !DILocation(line: 774, column: 12, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4296, file: !3, line: 773, column: 17)
!4300 = !DILocation(line: 775, column: 2, scope: !4299)
!4301 = !DILocation(line: 777, column: 28, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4296, file: !3, line: 776, column: 7)
!4303 = !DILocation(line: 777, column: 38, scope: !4302)
!4304 = !DILocation(line: 777, column: 12, scope: !4302)
!4305 = !DILocation(line: 777, column: 10, scope: !4302)
!4306 = !DILocation(line: 778, column: 7, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4302, file: !3, line: 778, column: 7)
!4308 = !DILocation(line: 778, column: 7, scope: !4302)
!4309 = !DILocation(line: 779, column: 10, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4307, file: !3, line: 778, column: 15)
!4311 = !DILocation(line: 781, column: 8, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 781, column: 8)
!4313 = !DILocation(line: 781, column: 16, scope: !4312)
!4314 = !DILocation(line: 781, column: 8, scope: !4310)
!4315 = !DILocation(line: 782, column: 14, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4312, file: !3, line: 781, column: 24)
!4317 = !DILocation(line: 783, column: 4, scope: !4316)
!4318 = !DILocation(line: 784, column: 3, scope: !4310)
!4319 = !DILocation(line: 786, column: 7, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4269, file: !3, line: 786, column: 6)
!4321 = !DILocation(line: 786, column: 16, scope: !4320)
!4322 = !DILocation(line: 786, column: 25, scope: !4320)
!4323 = !DILocation(line: 786, column: 29, scope: !4320)
!4324 = !DILocation(line: 786, column: 35, scope: !4320)
!4325 = !DILocation(line: 786, column: 6, scope: !4269)
!4326 = !DILocation(line: 787, column: 37, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 786, column: 46)
!4328 = !DILocation(line: 787, column: 40, scope: !4327)
!4329 = !DILocation(line: 787, column: 44, scope: !4327)
!4330 = !DILocation(line: 787, column: 3, scope: !4327)
!4331 = !DILocation(line: 788, column: 2, scope: !4327)
!4332 = !DILocation(line: 789, column: 12, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 789, column: 11)
!4334 = !DILocation(line: 789, column: 18, scope: !4333)
!4335 = !DILocation(line: 789, column: 27, scope: !4333)
!4336 = !DILocation(line: 789, column: 31, scope: !4333)
!4337 = !DILocation(line: 789, column: 40, scope: !4333)
!4338 = !DILocation(line: 789, column: 11, scope: !4320)
!4339 = !DILocation(line: 790, column: 16, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4333, file: !3, line: 789, column: 51)
!4341 = !DILocation(line: 790, column: 23, scope: !4340)
!4342 = !DILocation(line: 790, column: 32, scope: !4340)
!4343 = !DILocation(line: 790, column: 3, scope: !4340)
!4344 = !DILocation(line: 791, column: 15, scope: !4340)
!4345 = !DILocation(line: 791, column: 18, scope: !4340)
!4346 = !DILocation(line: 791, column: 3, scope: !4340)
!4347 = !DILocation(line: 792, column: 3, scope: !4340)
!4348 = !DILocation(line: 795, column: 2, scope: !4269)
!4349 = !DILocation(line: 796, column: 1, scope: !4269)
!4350 = distinct !DISubprogram(name: "ui_free_but", scope: !3, file: !3, line: 2391, type: !4351, scopeLine: 2392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!4351 = !DISubroutineType(types: !4352)
!4352 = !{null, !4272, !1558}
!4353 = !DILocalVariable(name: "C", arg: 1, scope: !4350, file: !3, line: 2391, type: !4272)
!4354 = !DILocation(line: 2391, column: 41, scope: !4350)
!4355 = !DILocalVariable(name: "but", arg: 2, scope: !4350, file: !3, line: 2391, type: !1558)
!4356 = !DILocation(line: 2391, column: 51, scope: !4350)
!4357 = !DILocation(line: 2393, column: 6, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 2393, column: 6)
!4359 = !DILocation(line: 2393, column: 11, scope: !4358)
!4360 = !DILocation(line: 2393, column: 6, scope: !4350)
!4361 = !DILocation(line: 2394, column: 31, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4358, file: !3, line: 2393, column: 18)
!4363 = !DILocation(line: 2394, column: 36, scope: !4362)
!4364 = !DILocation(line: 2394, column: 3, scope: !4362)
!4365 = !DILocation(line: 2395, column: 3, scope: !4362)
!4366 = !DILocation(line: 2395, column: 13, scope: !4362)
!4367 = !DILocation(line: 2395, column: 18, scope: !4362)
!4368 = !DILocation(line: 2396, column: 2, scope: !4362)
!4369 = !DILocation(line: 2398, column: 6, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 2398, column: 6)
!4371 = !DILocation(line: 2398, column: 11, scope: !4370)
!4372 = !DILocation(line: 2398, column: 6, scope: !4350)
!4373 = !DILocation(line: 2399, column: 3, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 2398, column: 22)
!4375 = !DILocation(line: 2399, column: 13, scope: !4374)
!4376 = !DILocation(line: 2399, column: 18, scope: !4374)
!4377 = !DILocation(line: 2400, column: 2, scope: !4374)
!4378 = !DILocation(line: 2402, column: 6, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 2402, column: 6)
!4380 = !DILocation(line: 2402, column: 11, scope: !4379)
!4381 = !DILocation(line: 2402, column: 6, scope: !4350)
!4382 = !DILocation(line: 2406, column: 7, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4384, file: !3, line: 2406, column: 7)
!4384 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 2402, column: 19)
!4385 = !DILocation(line: 2406, column: 7, scope: !4384)
!4386 = !DILocation(line: 2407, column: 26, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4383, file: !3, line: 2406, column: 10)
!4388 = !DILocation(line: 2407, column: 29, scope: !4387)
!4389 = !DILocation(line: 2407, column: 4, scope: !4387)
!4390 = !DILocation(line: 2408, column: 3, scope: !4387)
!4391 = !DILocation(line: 2410, column: 8, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4393, file: !3, line: 2410, column: 8)
!4393 = distinct !DILexicalBlock(scope: !4383, file: !3, line: 2409, column: 8)
!4394 = !DILocation(line: 2410, column: 13, scope: !4392)
!4395 = !DILocation(line: 2410, column: 8, scope: !4393)
!4396 = !DILocation(line: 2411, column: 5, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4392, file: !3, line: 2410, column: 21)
!4398 = !DILocation(line: 2411, column: 15, scope: !4397)
!4399 = !DILocation(line: 2411, column: 20, scope: !4397)
!4400 = !DILocation(line: 2412, column: 4, scope: !4397)
!4401 = !DILocation(line: 2414, column: 2, scope: !4384)
!4402 = !DILocation(line: 2415, column: 6, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 2415, column: 6)
!4404 = !DILocation(line: 2415, column: 11, scope: !4403)
!4405 = !DILocation(line: 2415, column: 15, scope: !4403)
!4406 = !DILocation(line: 2415, column: 18, scope: !4403)
!4407 = !DILocation(line: 2415, column: 23, scope: !4403)
!4408 = !DILocation(line: 2415, column: 30, scope: !4403)
!4409 = !DILocation(line: 2415, column: 35, scope: !4403)
!4410 = !DILocation(line: 2415, column: 27, scope: !4403)
!4411 = !DILocation(line: 2415, column: 6, scope: !4350)
!4412 = !DILocation(line: 2416, column: 3, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 2415, column: 44)
!4414 = !DILocation(line: 2416, column: 13, scope: !4413)
!4415 = !DILocation(line: 2416, column: 18, scope: !4413)
!4416 = !DILocation(line: 2417, column: 2, scope: !4413)
!4417 = !DILocation(line: 2418, column: 15, scope: !4350)
!4418 = !DILocation(line: 2418, column: 20, scope: !4350)
!4419 = !DILocation(line: 2418, column: 2, scope: !4350)
!4420 = !DILocation(line: 2420, column: 7, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 2420, column: 6)
!4422 = !DILocation(line: 2420, column: 12, scope: !4421)
!4423 = !DILocation(line: 2420, column: 17, scope: !4421)
!4424 = !DILocation(line: 2420, column: 31, scope: !4421)
!4425 = !DILocation(line: 2420, column: 34, scope: !4421)
!4426 = !DILocation(line: 2420, column: 39, scope: !4421)
!4427 = !DILocation(line: 2420, column: 6, scope: !4350)
!4428 = !DILocation(line: 2421, column: 33, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4421, file: !3, line: 2420, column: 45)
!4430 = !DILocation(line: 2421, column: 38, scope: !4429)
!4431 = !DILocation(line: 2421, column: 17, scope: !4429)
!4432 = !DILocation(line: 2421, column: 3, scope: !4429)
!4433 = !DILocation(line: 2422, column: 2, scope: !4429)
!4434 = !DILocation(line: 2426, column: 2, scope: !4350)
!4435 = !DILocation(line: 2426, column: 12, scope: !4350)
!4436 = !DILocation(line: 2427, column: 1, scope: !4350)
!4437 = distinct !DISubprogram(name: "uiButExecute", scope: !3, file: !3, line: 799, type: !4351, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!4438 = !DILocalVariable(name: "C", arg: 1, scope: !4437, file: !3, line: 799, type: !4272)
!4439 = !DILocation(line: 799, column: 35, scope: !4437)
!4440 = !DILocalVariable(name: "but", arg: 2, scope: !4437, file: !3, line: 799, type: !1558)
!4441 = !DILocation(line: 799, column: 45, scope: !4437)
!4442 = !DILocalVariable(name: "ar", scope: !4437, file: !3, line: 801, type: !3112)
!4443 = !DILocation(line: 801, column: 11, scope: !4437)
!4444 = !DILocation(line: 801, column: 30, scope: !4437)
!4445 = !DILocation(line: 801, column: 16, scope: !4437)
!4446 = !DILocalVariable(name: "active_back", scope: !4437, file: !3, line: 802, type: !1535)
!4447 = !DILocation(line: 802, column: 8, scope: !4437)
!4448 = !DILocation(line: 803, column: 38, scope: !4437)
!4449 = !DILocation(line: 803, column: 41, scope: !4437)
!4450 = !DILocation(line: 803, column: 45, scope: !4437)
!4451 = !DILocation(line: 803, column: 2, scope: !4437)
!4452 = !DILocation(line: 805, column: 36, scope: !4437)
!4453 = !DILocation(line: 805, column: 39, scope: !4437)
!4454 = !DILocation(line: 805, column: 43, scope: !4437)
!4455 = !DILocation(line: 805, column: 48, scope: !4437)
!4456 = !DILocation(line: 805, column: 2, scope: !4437)
!4457 = !DILocation(line: 806, column: 1, scope: !4437)
!4458 = distinct !DISubprogram(name: "ui_but_add_shortcut", scope: !3, file: !3, line: 905, type: !4459, scopeLine: 906, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!4459 = !DISubroutineType(types: !4460)
!4460 = !{null, !1558, !1647, !4461}
!4461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1550)
!4462 = !DILocalVariable(name: "but", arg: 1, scope: !4458, file: !3, line: 905, type: !1558)
!4463 = !DILocation(line: 905, column: 33, scope: !4458)
!4464 = !DILocalVariable(name: "shortcut_str", arg: 2, scope: !4458, file: !3, line: 905, type: !1647)
!4465 = !DILocation(line: 905, column: 50, scope: !4458)
!4466 = !DILocalVariable(name: "do_strip", arg: 3, scope: !4458, file: !3, line: 905, type: !4461)
!4467 = !DILocation(line: 905, column: 75, scope: !4458)
!4468 = !DILocation(line: 908, column: 6, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 908, column: 6)
!4470 = !DILocation(line: 908, column: 15, scope: !4469)
!4471 = !DILocation(line: 908, column: 19, scope: !4469)
!4472 = !DILocation(line: 908, column: 24, scope: !4469)
!4473 = !DILocation(line: 908, column: 29, scope: !4469)
!4474 = !DILocation(line: 908, column: 6, scope: !4458)
!4475 = !DILocalVariable(name: "cpoin", scope: !4476, file: !3, line: 909, type: !1541)
!4476 = distinct !DILexicalBlock(scope: !4469, file: !3, line: 908, column: 53)
!4477 = !DILocation(line: 909, column: 9, scope: !4476)
!4478 = !DILocation(line: 909, column: 25, scope: !4476)
!4479 = !DILocation(line: 909, column: 30, scope: !4476)
!4480 = !DILocation(line: 909, column: 17, scope: !4476)
!4481 = !DILocation(line: 910, column: 7, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4476, file: !3, line: 910, column: 7)
!4483 = !DILocation(line: 910, column: 7, scope: !4476)
!4484 = !DILocation(line: 911, column: 5, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4482, file: !3, line: 910, column: 14)
!4486 = !DILocation(line: 911, column: 11, scope: !4485)
!4487 = !DILocation(line: 912, column: 3, scope: !4485)
!4488 = !DILocation(line: 913, column: 3, scope: !4476)
!4489 = !DILocation(line: 913, column: 8, scope: !4476)
!4490 = !DILocation(line: 913, column: 13, scope: !4476)
!4491 = !DILocation(line: 914, column: 2, scope: !4476)
!4492 = !DILocation(line: 917, column: 6, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 917, column: 6)
!4494 = !DILocation(line: 917, column: 6, scope: !4458)
!4495 = !DILocalVariable(name: "butstr_orig", scope: !4496, file: !3, line: 918, type: !1541)
!4496 = distinct !DILexicalBlock(scope: !4493, file: !3, line: 917, column: 20)
!4497 = !DILocation(line: 918, column: 9, scope: !4496)
!4498 = !DILocation(line: 920, column: 7, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4496, file: !3, line: 920, column: 7)
!4500 = !DILocation(line: 920, column: 12, scope: !4499)
!4501 = !DILocation(line: 920, column: 19, scope: !4499)
!4502 = !DILocation(line: 920, column: 24, scope: !4499)
!4503 = !DILocation(line: 920, column: 16, scope: !4499)
!4504 = !DILocation(line: 920, column: 7, scope: !4496)
!4505 = !DILocation(line: 921, column: 18, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4499, file: !3, line: 920, column: 33)
!4507 = !DILocation(line: 921, column: 23, scope: !4506)
!4508 = !DILocation(line: 921, column: 16, scope: !4506)
!4509 = !DILocation(line: 922, column: 3, scope: !4506)
!4510 = !DILocation(line: 924, column: 29, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4499, file: !3, line: 923, column: 8)
!4512 = !DILocation(line: 924, column: 34, scope: !4511)
!4513 = !DILocation(line: 924, column: 18, scope: !4511)
!4514 = !DILocation(line: 924, column: 16, scope: !4511)
!4515 = !DILocation(line: 926, column: 16, scope: !4496)
!4516 = !DILocation(line: 926, column: 21, scope: !4496)
!4517 = !DILocation(line: 929, column: 16, scope: !4496)
!4518 = !DILocation(line: 929, column: 29, scope: !4496)
!4519 = !DILocation(line: 926, column: 3, scope: !4496)
!4520 = !DILocation(line: 930, column: 3, scope: !4496)
!4521 = !DILocation(line: 930, column: 13, scope: !4496)
!4522 = !DILocation(line: 931, column: 14, scope: !4496)
!4523 = !DILocation(line: 931, column: 19, scope: !4496)
!4524 = !DILocation(line: 931, column: 3, scope: !4496)
!4525 = !DILocation(line: 931, column: 8, scope: !4496)
!4526 = !DILocation(line: 931, column: 12, scope: !4496)
!4527 = !DILocation(line: 932, column: 3, scope: !4496)
!4528 = !DILocation(line: 932, column: 8, scope: !4496)
!4529 = !DILocation(line: 932, column: 13, scope: !4496)
!4530 = !DILocation(line: 933, column: 16, scope: !4496)
!4531 = !DILocation(line: 933, column: 3, scope: !4496)
!4532 = !DILocation(line: 934, column: 2, scope: !4496)
!4533 = !DILocation(line: 935, column: 1, scope: !4458)
!4534 = distinct !DISubprogram(name: "ui_check_but", scope: !3, file: !3, line: 2573, type: !4535, scopeLine: 2574, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{null, !1558}
!4537 = !DILocalVariable(name: "but", arg: 1, scope: !4534, file: !3, line: 2573, type: !1558)
!4538 = !DILocation(line: 2573, column: 26, scope: !4534)
!4539 = !DILocalVariable(name: "value", scope: !4534, file: !3, line: 2576, type: !1540)
!4540 = !DILocation(line: 2576, column: 9, scope: !4534)
!4541 = !DILocation(line: 2579, column: 22, scope: !4534)
!4542 = !DILocation(line: 2579, column: 2, scope: !4534)
!4543 = !DILocation(line: 2582, column: 8, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 2582, column: 6)
!4545 = !DILocation(line: 2582, column: 13, scope: !4544)
!4546 = !DILocation(line: 2582, column: 21, scope: !4544)
!4547 = !DILocation(line: 2582, column: 24, scope: !4544)
!4548 = !DILocation(line: 2582, column: 29, scope: !4544)
!4549 = !DILocation(line: 2582, column: 37, scope: !4544)
!4550 = !DILocation(line: 2582, column: 40, scope: !4544)
!4551 = !DILocation(line: 2582, column: 45, scope: !4544)
!4552 = !DILocation(line: 2582, column: 6, scope: !4534)
!4553 = !DILocation(line: 2583, column: 8, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 2583, column: 7)
!4555 = distinct !DILexicalBlock(scope: !4544, file: !3, line: 2582, column: 55)
!4556 = !DILocation(line: 2583, column: 13, scope: !4554)
!4557 = !DILocation(line: 2583, column: 21, scope: !4554)
!4558 = !DILocation(line: 2583, column: 30, scope: !4554)
!4559 = !DILocation(line: 2584, column: 8, scope: !4554)
!4560 = !DILocation(line: 2584, column: 13, scope: !4554)
!4561 = !DILocation(line: 2584, column: 18, scope: !4554)
!4562 = !DILocation(line: 2584, column: 22, scope: !4554)
!4563 = !DILocation(line: 2584, column: 27, scope: !4554)
!4564 = !DILocation(line: 2584, column: 36, scope: !4554)
!4565 = !DILocation(line: 2583, column: 7, scope: !4555)
!4566 = !DILocation(line: 2586, column: 26, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4554, file: !3, line: 2585, column: 3)
!4568 = !DILocation(line: 2586, column: 4, scope: !4567)
!4569 = !DILocation(line: 2587, column: 3, scope: !4567)
!4570 = !DILocation(line: 2588, column: 2, scope: !4555)
!4571 = !DILocation(line: 2591, column: 10, scope: !4534)
!4572 = !DILocation(line: 2591, column: 15, scope: !4534)
!4573 = !DILocation(line: 2591, column: 2, scope: !4534)
!4574 = !DILocation(line: 2595, column: 4, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 2595, column: 4)
!4576 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 2591, column: 21)
!4577 = !DILocation(line: 2595, column: 4, scope: !4576)
!4578 = !DILocation(line: 2595, column: 4, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4575, file: !3, line: 2595, column: 4)
!4580 = !DILocation(line: 2596, column: 8, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 2596, column: 8)
!4582 = !DILocation(line: 2596, column: 24, scope: !4581)
!4583 = !DILocation(line: 2596, column: 29, scope: !4581)
!4584 = !DILocation(line: 2596, column: 16, scope: !4581)
!4585 = !DILocation(line: 2596, column: 14, scope: !4581)
!4586 = !DILocation(line: 2596, column: 8, scope: !4576)
!4587 = !DILocation(line: 2596, column: 53, scope: !4581)
!4588 = !DILocation(line: 2596, column: 58, scope: !4581)
!4589 = !DILocation(line: 2596, column: 63, scope: !4581)
!4590 = !DILocation(line: 2596, column: 38, scope: !4581)
!4591 = !DILocation(line: 2597, column: 13, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 2597, column: 13)
!4593 = !DILocation(line: 2597, column: 29, scope: !4592)
!4594 = !DILocation(line: 2597, column: 34, scope: !4592)
!4595 = !DILocation(line: 2597, column: 21, scope: !4592)
!4596 = !DILocation(line: 2597, column: 19, scope: !4592)
!4597 = !DILocation(line: 2597, column: 13, scope: !4581)
!4598 = !DILocation(line: 2597, column: 58, scope: !4592)
!4599 = !DILocation(line: 2597, column: 63, scope: !4592)
!4600 = !DILocation(line: 2597, column: 68, scope: !4592)
!4601 = !DILocation(line: 2597, column: 43, scope: !4592)
!4602 = !DILocation(line: 2598, column: 4, scope: !4576)
!4603 = !DILocation(line: 2602, column: 9, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 2602, column: 8)
!4605 = !DILocation(line: 2602, column: 14, scope: !4604)
!4606 = !DILocation(line: 2602, column: 22, scope: !4604)
!4607 = !DILocation(line: 2602, column: 44, scope: !4604)
!4608 = !DILocation(line: 2602, column: 49, scope: !4604)
!4609 = !DILocation(line: 2602, column: 26, scope: !4604)
!4610 = !DILocation(line: 2602, column: 58, scope: !4604)
!4611 = !DILocation(line: 2602, column: 8, scope: !4576)
!4612 = !DILocation(line: 2603, column: 9, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 2603, column: 9)
!4614 = distinct !DILexicalBlock(scope: !4604, file: !3, line: 2602, column: 85)
!4615 = !DILocation(line: 2603, column: 14, scope: !4613)
!4616 = !DILocation(line: 2603, column: 19, scope: !4613)
!4617 = !DILocation(line: 2603, column: 9, scope: !4614)
!4618 = !DILocation(line: 2603, column: 32, scope: !4613)
!4619 = !DILocation(line: 2603, column: 37, scope: !4613)
!4620 = !DILocation(line: 2603, column: 45, scope: !4613)
!4621 = !DILocation(line: 2604, column: 10, scope: !4613)
!4622 = !DILocation(line: 2604, column: 15, scope: !4613)
!4623 = !DILocation(line: 2604, column: 23, scope: !4613)
!4624 = !DILocation(line: 2605, column: 4, scope: !4614)
!4625 = !DILocation(line: 2606, column: 4, scope: !4576)
!4626 = !DILocation(line: 2610, column: 4, scope: !4576)
!4627 = !DILocation(line: 2618, column: 10, scope: !4534)
!4628 = !DILocation(line: 2618, column: 15, scope: !4534)
!4629 = !DILocation(line: 2618, column: 2, scope: !4534)
!4630 = !DILocation(line: 2621, column: 25, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4632, file: !3, line: 2621, column: 8)
!4632 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 2618, column: 21)
!4633 = !DILocation(line: 2621, column: 30, scope: !4631)
!4634 = !DILocation(line: 2621, column: 8, scope: !4631)
!4635 = !DILocation(line: 2621, column: 36, scope: !4631)
!4636 = !DILocation(line: 2621, column: 8, scope: !4632)
!4637 = !DILocation(line: 2623, column: 9, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4639, file: !3, line: 2623, column: 9)
!4639 = distinct !DILexicalBlock(scope: !4631, file: !3, line: 2621, column: 45)
!4640 = !DILocation(line: 2623, column: 14, scope: !4638)
!4641 = !DILocation(line: 2623, column: 21, scope: !4638)
!4642 = !DILocation(line: 2623, column: 26, scope: !4638)
!4643 = !DILocation(line: 2623, column: 9, scope: !4639)
!4644 = !DILocation(line: 2624, column: 10, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 2624, column: 10)
!4646 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 2623, column: 43)
!4647 = !DILocation(line: 2624, column: 15, scope: !4645)
!4648 = !DILocation(line: 2624, column: 23, scope: !4645)
!4649 = !DILocation(line: 2624, column: 45, scope: !4645)
!4650 = !DILocation(line: 2624, column: 50, scope: !4645)
!4651 = !DILocation(line: 2624, column: 27, scope: !4645)
!4652 = !DILocation(line: 2624, column: 59, scope: !4645)
!4653 = !DILocation(line: 2624, column: 10, scope: !4646)
!4654 = !DILocalVariable(name: "value", scope: !4655, file: !3, line: 2625, type: !1067)
!4655 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 2624, column: 74)
!4656 = !DILocation(line: 2625, column: 11, scope: !4655)
!4657 = !DILocation(line: 2625, column: 42, scope: !4655)
!4658 = !DILocation(line: 2625, column: 47, scope: !4655)
!4659 = !DILocation(line: 2625, column: 56, scope: !4655)
!4660 = !DILocation(line: 2625, column: 61, scope: !4655)
!4661 = !DILocation(line: 2625, column: 19, scope: !4655)
!4662 = !DILocalVariable(name: "buf", scope: !4655, file: !3, line: 2626, type: !1647)
!4663 = !DILocation(line: 2626, column: 19, scope: !4655)
!4664 = !DILocation(line: 2627, column: 44, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 2627, column: 11)
!4666 = !DILocation(line: 2627, column: 49, scope: !4665)
!4667 = !DILocation(line: 2627, column: 56, scope: !4665)
!4668 = !DILocation(line: 2628, column: 45, scope: !4665)
!4669 = !DILocation(line: 2628, column: 50, scope: !4665)
!4670 = !DILocation(line: 2628, column: 59, scope: !4665)
!4671 = !DILocation(line: 2628, column: 64, scope: !4665)
!4672 = !DILocation(line: 2628, column: 73, scope: !4665)
!4673 = !DILocation(line: 2627, column: 11, scope: !4665)
!4674 = !DILocation(line: 2627, column: 11, scope: !4655)
!4675 = !DILocation(line: 2630, column: 20, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4665, file: !3, line: 2629, column: 7)
!4677 = !DILocation(line: 2630, column: 25, scope: !4676)
!4678 = !DILocation(line: 2630, column: 30, scope: !4676)
!4679 = !DILocation(line: 2630, column: 8, scope: !4676)
!4680 = !DILocation(line: 2631, column: 7, scope: !4676)
!4681 = !DILocation(line: 2632, column: 6, scope: !4655)
!4682 = !DILocation(line: 2633, column: 5, scope: !4646)
!4683 = !DILocation(line: 2634, column: 17, scope: !4639)
!4684 = !DILocation(line: 2634, column: 22, scope: !4639)
!4685 = !DILocation(line: 2634, column: 31, scope: !4639)
!4686 = !DILocation(line: 2634, column: 36, scope: !4639)
!4687 = !DILocation(line: 2634, column: 5, scope: !4639)
!4688 = !DILocation(line: 2635, column: 4, scope: !4639)
!4689 = !DILocation(line: 2636, column: 4, scope: !4632)
!4690 = !DILocation(line: 2641, column: 9, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4632, file: !3, line: 2641, column: 8)
!4692 = !DILocation(line: 2641, column: 14, scope: !4691)
!4693 = !DILocation(line: 2641, column: 8, scope: !4632)
!4694 = !DILocalVariable(name: "drawstr_suffix", scope: !4695, file: !3, line: 2642, type: !1647)
!4695 = distinct !DILexicalBlock(scope: !4691, file: !3, line: 2641, column: 23)
!4696 = !DILocation(line: 2642, column: 17, scope: !4695)
!4697 = !DILocalVariable(name: "slen", scope: !4695, file: !3, line: 2643, type: !1547)
!4698 = !DILocation(line: 2643, column: 12, scope: !4695)
!4699 = !DILocation(line: 2645, column: 5, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 2645, column: 5)
!4701 = !DILocation(line: 2645, column: 5, scope: !4695)
!4702 = !DILocation(line: 2645, column: 5, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4700, file: !3, line: 2645, column: 5)
!4704 = !DILocation(line: 2647, column: 29, scope: !4695)
!4705 = !DILocation(line: 2647, column: 34, scope: !4695)
!4706 = !DILocation(line: 2647, column: 43, scope: !4695)
!4707 = !DILocation(line: 2647, column: 48, scope: !4695)
!4708 = !DILocation(line: 2647, column: 12, scope: !4695)
!4709 = !DILocation(line: 2647, column: 10, scope: !4695)
!4710 = !DILocation(line: 2649, column: 25, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 2649, column: 9)
!4712 = !DILocation(line: 2649, column: 9, scope: !4711)
!4713 = !DILocation(line: 2649, column: 9, scope: !4695)
!4714 = !DILocation(line: 2650, column: 10, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 2650, column: 10)
!4716 = distinct !DILexicalBlock(scope: !4711, file: !3, line: 2649, column: 31)
!4717 = !DILocation(line: 2650, column: 16, scope: !4715)
!4718 = !DILocation(line: 2650, column: 10, scope: !4716)
!4719 = !DILocation(line: 2651, column: 32, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4715, file: !3, line: 2650, column: 37)
!4721 = !DILocation(line: 2651, column: 37, scope: !4720)
!4722 = !DILocation(line: 2651, column: 47, scope: !4720)
!4723 = !DILocation(line: 2651, column: 45, scope: !4720)
!4724 = !DILocation(line: 2651, column: 83, scope: !4720)
!4725 = !DILocation(line: 2651, column: 81, scope: !4720)
!4726 = !DILocation(line: 2651, column: 15, scope: !4720)
!4727 = !DILocation(line: 2651, column: 12, scope: !4720)
!4728 = !DILocation(line: 2652, column: 6, scope: !4720)
!4729 = !DILocation(line: 2653, column: 15, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4715, file: !3, line: 2653, column: 15)
!4731 = !DILocation(line: 2653, column: 21, scope: !4730)
!4732 = !DILocation(line: 2653, column: 15, scope: !4715)
!4733 = !DILocation(line: 2654, column: 32, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4730, file: !3, line: 2653, column: 43)
!4735 = !DILocation(line: 2654, column: 37, scope: !4734)
!4736 = !DILocation(line: 2654, column: 47, scope: !4734)
!4737 = !DILocation(line: 2654, column: 45, scope: !4734)
!4738 = !DILocation(line: 2654, column: 84, scope: !4734)
!4739 = !DILocation(line: 2654, column: 82, scope: !4734)
!4740 = !DILocation(line: 2654, column: 15, scope: !4734)
!4741 = !DILocation(line: 2654, column: 12, scope: !4734)
!4742 = !DILocation(line: 2655, column: 6, scope: !4734)
!4743 = !DILocation(line: 2657, column: 30, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4730, file: !3, line: 2657, column: 15)
!4745 = !DILocation(line: 2657, column: 15, scope: !4744)
!4746 = !DILocation(line: 2657, column: 15, scope: !4730)
!4747 = !DILocalVariable(name: "new_str", scope: !4748, file: !3, line: 2658, type: !1586)
!4748 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 2657, column: 36)
!4749 = !DILocation(line: 2658, column: 12, scope: !4748)
!4750 = !DILocation(line: 2659, column: 30, scope: !4748)
!4751 = !DILocation(line: 2659, column: 35, scope: !4748)
!4752 = !DILocation(line: 2659, column: 61, scope: !4748)
!4753 = !DILocation(line: 2659, column: 7, scope: !4748)
!4754 = !DILocation(line: 2660, column: 32, scope: !4748)
!4755 = !DILocation(line: 2660, column: 37, scope: !4748)
!4756 = !DILocation(line: 2660, column: 47, scope: !4748)
!4757 = !DILocation(line: 2660, column: 45, scope: !4748)
!4758 = !DILocation(line: 2660, column: 53, scope: !4748)
!4759 = !DILocation(line: 2660, column: 85, scope: !4748)
!4760 = !DILocation(line: 2660, column: 83, scope: !4748)
!4761 = !DILocation(line: 2660, column: 15, scope: !4748)
!4762 = !DILocation(line: 2660, column: 12, scope: !4748)
!4763 = !DILocation(line: 2661, column: 6, scope: !4748)
!4764 = !DILocalVariable(name: "prec", scope: !4765, file: !3, line: 2663, type: !4766)
!4765 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 2662, column: 11)
!4766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1067)
!4767 = !DILocation(line: 2663, column: 17, scope: !4765)
!4768 = !DILocation(line: 2663, column: 47, scope: !4765)
!4769 = !DILocation(line: 2663, column: 52, scope: !4765)
!4770 = !DILocation(line: 2663, column: 24, scope: !4765)
!4771 = !DILocation(line: 2664, column: 28, scope: !4765)
!4772 = !DILocation(line: 2664, column: 33, scope: !4765)
!4773 = !DILocation(line: 2664, column: 43, scope: !4765)
!4774 = !DILocation(line: 2664, column: 41, scope: !4765)
!4775 = !DILocation(line: 2664, column: 72, scope: !4765)
!4776 = !DILocation(line: 2664, column: 70, scope: !4765)
!4777 = !DILocation(line: 2664, column: 86, scope: !4765)
!4778 = !DILocation(line: 2664, column: 92, scope: !4765)
!4779 = !DILocation(line: 2664, column: 15, scope: !4765)
!4780 = !DILocation(line: 2664, column: 12, scope: !4765)
!4781 = !DILocation(line: 2666, column: 5, scope: !4716)
!4782 = !DILocation(line: 2668, column: 27, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4711, file: !3, line: 2667, column: 10)
!4784 = !DILocation(line: 2668, column: 32, scope: !4783)
!4785 = !DILocation(line: 2668, column: 42, scope: !4783)
!4786 = !DILocation(line: 2668, column: 40, scope: !4783)
!4787 = !DILocation(line: 2668, column: 71, scope: !4783)
!4788 = !DILocation(line: 2668, column: 69, scope: !4783)
!4789 = !DILocation(line: 2668, column: 88, scope: !4783)
!4790 = !DILocation(line: 2668, column: 83, scope: !4783)
!4791 = !DILocation(line: 2668, column: 14, scope: !4783)
!4792 = !DILocation(line: 2668, column: 11, scope: !4783)
!4793 = !DILocation(line: 2671, column: 9, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 2671, column: 9)
!4795 = !DILocation(line: 2671, column: 14, scope: !4794)
!4796 = !DILocation(line: 2671, column: 9, scope: !4695)
!4797 = !DILocalVariable(name: "pstype", scope: !4798, file: !3, line: 2672, type: !4799)
!4798 = distinct !DILexicalBlock(scope: !4794, file: !3, line: 2671, column: 23)
!4799 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertySubType", file: !965, line: 147, baseType: !1034)
!4800 = !DILocation(line: 2672, column: 22, scope: !4798)
!4801 = !DILocation(line: 2672, column: 52, scope: !4798)
!4802 = !DILocation(line: 2672, column: 57, scope: !4798)
!4803 = !DILocation(line: 2672, column: 31, scope: !4798)
!4804 = !DILocation(line: 2674, column: 10, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4798, file: !3, line: 2674, column: 10)
!4806 = !DILocation(line: 2674, column: 17, scope: !4805)
!4807 = !DILocation(line: 2674, column: 10, scope: !4798)
!4808 = !DILocation(line: 2675, column: 22, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4805, file: !3, line: 2674, column: 37)
!4810 = !DILocation(line: 2676, column: 6, scope: !4809)
!4811 = !DILocation(line: 2677, column: 15, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4805, file: !3, line: 2677, column: 15)
!4813 = !DILocation(line: 2677, column: 22, scope: !4812)
!4814 = !DILocation(line: 2677, column: 15, scope: !4805)
!4815 = !DILocation(line: 2678, column: 22, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4812, file: !3, line: 2677, column: 37)
!4817 = !DILocation(line: 2679, column: 6, scope: !4816)
!4818 = !DILocation(line: 2680, column: 5, scope: !4798)
!4819 = !DILocation(line: 2682, column: 9, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 2682, column: 9)
!4821 = !DILocation(line: 2682, column: 9, scope: !4695)
!4822 = !DILocation(line: 2683, column: 18, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4820, file: !3, line: 2682, column: 25)
!4824 = !DILocation(line: 2683, column: 23, scope: !4823)
!4825 = !DILocation(line: 2683, column: 33, scope: !4823)
!4826 = !DILocation(line: 2683, column: 31, scope: !4823)
!4827 = !DILocation(line: 2683, column: 39, scope: !4823)
!4828 = !DILocation(line: 2683, column: 78, scope: !4823)
!4829 = !DILocation(line: 2683, column: 76, scope: !4823)
!4830 = !DILocation(line: 2683, column: 6, scope: !4823)
!4831 = !DILocation(line: 2684, column: 5, scope: !4823)
!4832 = !DILocation(line: 2686, column: 4, scope: !4695)
!4833 = !DILocation(line: 2687, column: 4, scope: !4632)
!4834 = !DILocation(line: 2690, column: 24, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4632, file: !3, line: 2690, column: 8)
!4836 = !DILocation(line: 2690, column: 8, scope: !4835)
!4837 = !DILocation(line: 2690, column: 8, scope: !4632)
!4838 = !DILocalVariable(name: "prec", scope: !4839, file: !3, line: 2691, type: !1067)
!4839 = distinct !DILexicalBlock(scope: !4835, file: !3, line: 2690, column: 30)
!4840 = !DILocation(line: 2691, column: 9, scope: !4839)
!4841 = !DILocation(line: 2692, column: 5, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4839, file: !3, line: 2692, column: 5)
!4843 = !DILocation(line: 2692, column: 5, scope: !4839)
!4844 = !DILocation(line: 2692, column: 5, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4842, file: !3, line: 2692, column: 5)
!4846 = !DILocation(line: 2693, column: 35, scope: !4839)
!4847 = !DILocation(line: 2693, column: 40, scope: !4839)
!4848 = !DILocation(line: 2693, column: 12, scope: !4839)
!4849 = !DILocation(line: 2693, column: 10, scope: !4839)
!4850 = !DILocation(line: 2694, column: 18, scope: !4839)
!4851 = !DILocation(line: 2694, column: 23, scope: !4839)
!4852 = !DILocation(line: 2694, column: 64, scope: !4839)
!4853 = !DILocation(line: 2694, column: 69, scope: !4839)
!4854 = !DILocation(line: 2694, column: 74, scope: !4839)
!4855 = !DILocation(line: 2694, column: 80, scope: !4839)
!4856 = !DILocation(line: 2694, column: 5, scope: !4839)
!4857 = !DILocation(line: 2695, column: 4, scope: !4839)
!4858 = !DILocation(line: 2697, column: 17, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4835, file: !3, line: 2696, column: 9)
!4860 = !DILocation(line: 2697, column: 22, scope: !4859)
!4861 = !DILocation(line: 2697, column: 31, scope: !4859)
!4862 = !DILocation(line: 2697, column: 36, scope: !4859)
!4863 = !DILocation(line: 2697, column: 5, scope: !4859)
!4864 = !DILocation(line: 2700, column: 4, scope: !4632)
!4865 = !DILocation(line: 2705, column: 9, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4632, file: !3, line: 2705, column: 8)
!4867 = !DILocation(line: 2705, column: 14, scope: !4866)
!4868 = !DILocation(line: 2705, column: 8, scope: !4632)
!4869 = !DILocalVariable(name: "str", scope: !4870, file: !3, line: 2706, type: !1586)
!4870 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 2705, column: 23)
!4871 = !DILocation(line: 2706, column: 10, scope: !4870)
!4872 = !DILocation(line: 2708, column: 23, scope: !4870)
!4873 = !DILocation(line: 2708, column: 28, scope: !4870)
!4874 = !DILocation(line: 2708, column: 5, scope: !4870)
!4875 = !DILocation(line: 2709, column: 18, scope: !4870)
!4876 = !DILocation(line: 2709, column: 23, scope: !4870)
!4877 = !DILocation(line: 2709, column: 62, scope: !4870)
!4878 = !DILocation(line: 2709, column: 67, scope: !4870)
!4879 = !DILocation(line: 2709, column: 72, scope: !4870)
!4880 = !DILocation(line: 2709, column: 5, scope: !4870)
!4881 = !DILocation(line: 2710, column: 4, scope: !4870)
!4882 = !DILocation(line: 2711, column: 4, scope: !4632)
!4883 = !DILocalVariable(name: "str", scope: !4884, file: !3, line: 2715, type: !1647)
!4884 = distinct !DILexicalBlock(scope: !4632, file: !3, line: 2714, column: 3)
!4885 = !DILocation(line: 2715, column: 16, scope: !4884)
!4886 = !DILocation(line: 2716, column: 8, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4884, file: !3, line: 2716, column: 8)
!4888 = !DILocation(line: 2716, column: 13, scope: !4887)
!4889 = !DILocation(line: 2716, column: 18, scope: !4887)
!4890 = !DILocation(line: 2716, column: 8, scope: !4884)
!4891 = !DILocation(line: 2717, column: 9, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 2716, column: 31)
!4893 = !DILocation(line: 2718, column: 4, scope: !4892)
!4894 = !DILocation(line: 2720, column: 5, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4896, file: !3, line: 2720, column: 5)
!4896 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 2719, column: 9)
!4897 = !DILocation(line: 2720, column: 5, scope: !4896)
!4898 = !DILocation(line: 2720, column: 5, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2720, column: 5)
!4900 = !DILocation(line: 2721, column: 38, scope: !4896)
!4901 = !DILocation(line: 2721, column: 31, scope: !4896)
!4902 = !DILocation(line: 2721, column: 11, scope: !4896)
!4903 = !DILocation(line: 2721, column: 9, scope: !4896)
!4904 = !DILocation(line: 2723, column: 17, scope: !4884)
!4905 = !DILocation(line: 2723, column: 22, scope: !4884)
!4906 = !DILocation(line: 2723, column: 56, scope: !4884)
!4907 = !DILocation(line: 2723, column: 61, scope: !4884)
!4908 = !DILocation(line: 2723, column: 66, scope: !4884)
!4909 = !DILocation(line: 2723, column: 4, scope: !4884)
!4910 = !DILocation(line: 2724, column: 4, scope: !4884)
!4911 = !DILocation(line: 2727, column: 8, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4632, file: !3, line: 2727, column: 8)
!4913 = !DILocation(line: 2727, column: 13, scope: !4912)
!4914 = !DILocation(line: 2727, column: 18, scope: !4912)
!4915 = !DILocation(line: 2727, column: 8, scope: !4632)
!4916 = !DILocation(line: 2729, column: 9, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 2729, column: 9)
!4918 = distinct !DILexicalBlock(scope: !4912, file: !3, line: 2727, column: 31)
!4919 = !DILocation(line: 2729, column: 14, scope: !4917)
!4920 = !DILocation(line: 2729, column: 9, scope: !4918)
!4921 = !DILocalVariable(name: "str", scope: !4922, file: !3, line: 2730, type: !1541)
!4922 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 2729, column: 28)
!4923 = !DILocation(line: 2730, column: 12, scope: !4922)
!4924 = !DILocation(line: 2730, column: 18, scope: !4922)
!4925 = !DILocation(line: 2730, column: 23, scope: !4922)
!4926 = !DILocation(line: 2731, column: 6, scope: !4922)
!4927 = !DILocation(line: 2731, column: 11, scope: !4922)
!4928 = !DILocation(line: 2731, column: 22, scope: !4922)
!4929 = !DILocation(line: 2733, column: 10, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 2733, column: 10)
!4931 = !DILocation(line: 2733, column: 15, scope: !4930)
!4932 = !DILocation(line: 2733, column: 28, scope: !4930)
!4933 = !DILocation(line: 2733, column: 10, scope: !4922)
!4934 = !DILocation(line: 2734, column: 30, scope: !4930)
!4935 = !DILocation(line: 2734, column: 14, scope: !4930)
!4936 = !DILocation(line: 2734, column: 11, scope: !4930)
!4937 = !DILocation(line: 2734, column: 7, scope: !4930)
!4938 = !DILocation(line: 2735, column: 10, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 2735, column: 10)
!4940 = !DILocation(line: 2735, column: 15, scope: !4939)
!4941 = !DILocation(line: 2735, column: 28, scope: !4939)
!4942 = !DILocation(line: 2735, column: 10, scope: !4922)
!4943 = !DILocation(line: 2736, column: 30, scope: !4939)
!4944 = !DILocation(line: 2736, column: 14, scope: !4939)
!4945 = !DILocation(line: 2736, column: 11, scope: !4939)
!4946 = !DILocation(line: 2736, column: 7, scope: !4939)
!4947 = !DILocation(line: 2737, column: 10, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 2737, column: 10)
!4949 = !DILocation(line: 2737, column: 15, scope: !4948)
!4950 = !DILocation(line: 2737, column: 28, scope: !4948)
!4951 = !DILocation(line: 2737, column: 10, scope: !4922)
!4952 = !DILocation(line: 2738, column: 30, scope: !4948)
!4953 = !DILocation(line: 2738, column: 14, scope: !4948)
!4954 = !DILocation(line: 2738, column: 11, scope: !4948)
!4955 = !DILocation(line: 2738, column: 7, scope: !4948)
!4956 = !DILocation(line: 2739, column: 10, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 2739, column: 10)
!4958 = !DILocation(line: 2739, column: 15, scope: !4957)
!4959 = !DILocation(line: 2739, column: 28, scope: !4957)
!4960 = !DILocation(line: 2739, column: 10, scope: !4922)
!4961 = !DILocation(line: 2740, column: 30, scope: !4957)
!4962 = !DILocation(line: 2740, column: 14, scope: !4957)
!4963 = !DILocation(line: 2740, column: 11, scope: !4957)
!4964 = !DILocation(line: 2740, column: 7, scope: !4957)
!4965 = !DILocation(line: 2742, column: 12, scope: !4922)
!4966 = !DILocation(line: 2743, column: 5, scope: !4922)
!4967 = !DILocation(line: 2745, column: 18, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 2744, column: 10)
!4969 = !DILocation(line: 2745, column: 23, scope: !4968)
!4970 = !DILocation(line: 2745, column: 6, scope: !4968)
!4971 = !DILocation(line: 2747, column: 4, scope: !4918)
!4972 = !DILocation(line: 2749, column: 17, scope: !4912)
!4973 = !DILocation(line: 2749, column: 22, scope: !4912)
!4974 = !DILocation(line: 2749, column: 31, scope: !4912)
!4975 = !DILocation(line: 2749, column: 36, scope: !4912)
!4976 = !DILocation(line: 2749, column: 5, scope: !4912)
!4977 = !DILocation(line: 2751, column: 4, scope: !4632)
!4978 = !DILocation(line: 2755, column: 4, scope: !4632)
!4979 = !DILocation(line: 2757, column: 16, scope: !4632)
!4980 = !DILocation(line: 2757, column: 21, scope: !4632)
!4981 = !DILocation(line: 2757, column: 30, scope: !4632)
!4982 = !DILocation(line: 2757, column: 35, scope: !4632)
!4983 = !DILocation(line: 2757, column: 4, scope: !4632)
!4984 = !DILocation(line: 2758, column: 4, scope: !4632)
!4985 = !DILocation(line: 2763, column: 6, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 2763, column: 6)
!4987 = !DILocation(line: 2763, column: 11, scope: !4986)
!4988 = !DILocation(line: 2763, column: 6, scope: !4534)
!4989 = !DILocation(line: 2764, column: 3, scope: !4986)
!4990 = !DILocation(line: 2764, column: 8, scope: !4986)
!4991 = !DILocation(line: 2764, column: 19, scope: !4986)
!4992 = !DILocation(line: 2767, column: 1, scope: !4534)
!4993 = distinct !DISubprogram(name: "uiBlockUpdateFromOld", scope: !3, file: !3, line: 1150, type: !4994, scopeLine: 1151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!4994 = !DISubroutineType(types: !4995)
!4995 = !{null, !4272, !1695}
!4996 = !DILocalVariable(name: "C", arg: 1, scope: !4993, file: !3, line: 1150, type: !4272)
!4997 = !DILocation(line: 1150, column: 43, scope: !4993)
!4998 = !DILocalVariable(name: "block", arg: 2, scope: !4993, file: !3, line: 1150, type: !1695)
!4999 = !DILocation(line: 1150, column: 55, scope: !4993)
!5000 = !DILocalVariable(name: "but_old", scope: !4993, file: !3, line: 1152, type: !1558)
!5001 = !DILocation(line: 1152, column: 9, scope: !4993)
!5002 = !DILocalVariable(name: "but", scope: !4993, file: !3, line: 1153, type: !1558)
!5003 = !DILocation(line: 1153, column: 9, scope: !4993)
!5004 = !DILocation(line: 1155, column: 7, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 1155, column: 6)
!5006 = !DILocation(line: 1155, column: 14, scope: !5005)
!5007 = !DILocation(line: 1155, column: 6, scope: !4993)
!5008 = !DILocation(line: 1156, column: 3, scope: !5005)
!5009 = !DILocation(line: 1158, column: 12, scope: !4993)
!5010 = !DILocation(line: 1158, column: 19, scope: !4993)
!5011 = !DILocation(line: 1158, column: 29, scope: !4993)
!5012 = !DILocation(line: 1158, column: 37, scope: !4993)
!5013 = !DILocation(line: 1158, column: 10, scope: !4993)
!5014 = !DILocation(line: 1160, column: 29, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 1160, column: 6)
!5016 = !DILocation(line: 1160, column: 36, scope: !5015)
!5017 = !DILocation(line: 1160, column: 46, scope: !5015)
!5018 = !DILocation(line: 1160, column: 6, scope: !5015)
!5019 = !DILocation(line: 1160, column: 56, scope: !5015)
!5020 = !DILocation(line: 1160, column: 6, scope: !4993)
!5021 = !DILocation(line: 1161, column: 22, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5015, file: !3, line: 1160, column: 66)
!5023 = !DILocation(line: 1161, column: 3, scope: !5022)
!5024 = !DILocation(line: 1162, column: 2, scope: !5022)
!5025 = !DILocation(line: 1164, column: 13, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 1164, column: 2)
!5027 = !DILocation(line: 1164, column: 20, scope: !5026)
!5028 = !DILocation(line: 1164, column: 28, scope: !5026)
!5029 = !DILocation(line: 1164, column: 11, scope: !5026)
!5030 = !DILocation(line: 1164, column: 7, scope: !5026)
!5031 = !DILocation(line: 1164, column: 35, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5026, file: !3, line: 1164, column: 2)
!5033 = !DILocation(line: 1164, column: 2, scope: !5026)
!5034 = !DILocation(line: 1165, column: 36, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5036, file: !3, line: 1165, column: 7)
!5036 = distinct !DILexicalBlock(scope: !5032, file: !3, line: 1164, column: 57)
!5037 = !DILocation(line: 1165, column: 39, scope: !5035)
!5038 = !DILocation(line: 1165, column: 7, scope: !5035)
!5039 = !DILocation(line: 1165, column: 7, scope: !5036)
!5040 = !DILocation(line: 1166, column: 17, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5035, file: !3, line: 1165, column: 63)
!5042 = !DILocation(line: 1166, column: 4, scope: !5041)
!5043 = !DILocation(line: 1167, column: 3, scope: !5041)
!5044 = !DILocation(line: 1168, column: 2, scope: !5036)
!5045 = !DILocation(line: 1164, column: 46, scope: !5032)
!5046 = !DILocation(line: 1164, column: 51, scope: !5032)
!5047 = !DILocation(line: 1164, column: 44, scope: !5032)
!5048 = !DILocation(line: 1164, column: 2, scope: !5032)
!5049 = distinct !{!5049, !5033, !5050}
!5050 = !DILocation(line: 1168, column: 2, scope: !5026)
!5051 = !DILocation(line: 1170, column: 21, scope: !4993)
!5052 = !DILocation(line: 1170, column: 28, scope: !4993)
!5053 = !DILocation(line: 1170, column: 38, scope: !4993)
!5054 = !DILocation(line: 1170, column: 2, scope: !4993)
!5055 = !DILocation(line: 1170, column: 9, scope: !4993)
!5056 = !DILocation(line: 1170, column: 19, scope: !4993)
!5057 = !DILocation(line: 1171, column: 26, scope: !4993)
!5058 = !DILocation(line: 1171, column: 33, scope: !4993)
!5059 = !DILocation(line: 1171, column: 43, scope: !4993)
!5060 = !DILocation(line: 1171, column: 2, scope: !4993)
!5061 = !DILocation(line: 1171, column: 9, scope: !4993)
!5062 = !DILocation(line: 1171, column: 24, scope: !4993)
!5063 = !DILocation(line: 1172, column: 27, scope: !4993)
!5064 = !DILocation(line: 1172, column: 34, scope: !4993)
!5065 = !DILocation(line: 1172, column: 44, scope: !4993)
!5066 = !DILocation(line: 1172, column: 2, scope: !4993)
!5067 = !DILocation(line: 1172, column: 9, scope: !4993)
!5068 = !DILocation(line: 1172, column: 25, scope: !4993)
!5069 = !DILocation(line: 1173, column: 30, scope: !4993)
!5070 = !DILocation(line: 1173, column: 13, scope: !4993)
!5071 = !DILocation(line: 1174, column: 30, scope: !4993)
!5072 = !DILocation(line: 1174, column: 37, scope: !4993)
!5073 = !DILocation(line: 1174, column: 13, scope: !4993)
!5074 = !DILocation(line: 1173, column: 2, scope: !4993)
!5075 = !DILocation(line: 1176, column: 2, scope: !4993)
!5076 = !DILocation(line: 1176, column: 9, scope: !4993)
!5077 = !DILocation(line: 1176, column: 18, scope: !4993)
!5078 = !DILocation(line: 1177, column: 1, scope: !4993)
!5079 = distinct !DISubprogram(name: "ui_but_update_from_old_block", scope: !3, file: !3, line: 635, type: !5080, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!5080 = !DISubroutineType(types: !5081)
!5081 = !{!1550, !4272, !1695, !5082, !5082}
!5082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64)
!5083 = !DILocalVariable(name: "C", arg: 1, scope: !5079, file: !3, line: 635, type: !4272)
!5084 = !DILocation(line: 635, column: 58, scope: !5079)
!5085 = !DILocalVariable(name: "block", arg: 2, scope: !5079, file: !3, line: 635, type: !1695)
!5086 = !DILocation(line: 635, column: 70, scope: !5079)
!5087 = !DILocalVariable(name: "but_p", arg: 3, scope: !5079, file: !3, line: 635, type: !5082)
!5088 = !DILocation(line: 635, column: 85, scope: !5079)
!5089 = !DILocalVariable(name: "but_old_p", arg: 4, scope: !5079, file: !3, line: 635, type: !5082)
!5090 = !DILocation(line: 635, column: 100, scope: !5079)
!5091 = !DILocalVariable(name: "drawflag_copy", scope: !5079, file: !3, line: 637, type: !4766)
!5092 = !DILocation(line: 637, column: 12, scope: !5079)
!5093 = !DILocalVariable(name: "oldblock", scope: !5079, file: !3, line: 639, type: !1695)
!5094 = !DILocation(line: 639, column: 11, scope: !5079)
!5095 = !DILocation(line: 639, column: 22, scope: !5079)
!5096 = !DILocation(line: 639, column: 29, scope: !5079)
!5097 = !DILocalVariable(name: "oldbut", scope: !5079, file: !3, line: 640, type: !1558)
!5098 = !DILocation(line: 640, column: 9, scope: !5079)
!5099 = !DILocalVariable(name: "but", scope: !5079, file: !3, line: 640, type: !1558)
!5100 = !DILocation(line: 640, column: 25, scope: !5079)
!5101 = !DILocation(line: 640, column: 32, scope: !5079)
!5102 = !DILocation(line: 640, column: 31, scope: !5079)
!5103 = !DILocalVariable(name: "found_active", scope: !5079, file: !3, line: 641, type: !1550)
!5104 = !DILocation(line: 641, column: 7, scope: !5079)
!5105 = !DILocation(line: 653, column: 6, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5079, file: !3, line: 653, column: 6)
!5107 = !DILocation(line: 653, column: 6, scope: !5079)
!5108 = !DILocation(line: 654, column: 13, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5106, file: !3, line: 653, column: 64)
!5110 = !DILocation(line: 654, column: 12, scope: !5109)
!5111 = !DILocation(line: 654, column: 10, scope: !5109)
!5112 = !DILocation(line: 655, column: 2, scope: !5109)
!5113 = !DILocation(line: 658, column: 28, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5106, file: !3, line: 656, column: 7)
!5115 = !DILocation(line: 658, column: 38, scope: !5114)
!5116 = !DILocation(line: 658, column: 12, scope: !5114)
!5117 = !DILocation(line: 658, column: 10, scope: !5114)
!5118 = !DILocation(line: 660, column: 17, scope: !5079)
!5119 = !DILocation(line: 660, column: 26, scope: !5079)
!5120 = !DILocation(line: 660, column: 34, scope: !5079)
!5121 = !DILocation(line: 660, column: 4, scope: !5079)
!5122 = !DILocation(line: 660, column: 15, scope: !5079)
!5123 = !DILocation(line: 664, column: 7, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5079, file: !3, line: 664, column: 6)
!5125 = !DILocation(line: 664, column: 6, scope: !5079)
!5126 = !DILocation(line: 665, column: 10, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5124, file: !3, line: 664, column: 15)
!5128 = !DILocation(line: 665, column: 3, scope: !5127)
!5129 = !DILocation(line: 668, column: 6, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5079, file: !3, line: 668, column: 6)
!5131 = !DILocation(line: 668, column: 14, scope: !5130)
!5132 = !DILocation(line: 668, column: 6, scope: !5079)
!5133 = !DILocalVariable(name: "flag_copy", scope: !5134, file: !3, line: 670, type: !4766)
!5134 = distinct !DILexicalBlock(scope: !5130, file: !3, line: 668, column: 22)
!5135 = !DILocation(line: 670, column: 13, scope: !5134)
!5136 = !DILocation(line: 672, column: 16, scope: !5134)
!5137 = !DILocation(line: 694, column: 16, scope: !5134)
!5138 = !DILocation(line: 694, column: 26, scope: !5134)
!5139 = !DILocation(line: 694, column: 35, scope: !5134)
!5140 = !DILocation(line: 694, column: 3, scope: !5134)
!5141 = !DILocation(line: 695, column: 24, scope: !5134)
!5142 = !DILocation(line: 695, column: 31, scope: !5134)
!5143 = !DILocation(line: 695, column: 40, scope: !5134)
!5144 = !DILocation(line: 695, column: 45, scope: !5134)
!5145 = !DILocation(line: 695, column: 3, scope: !5134)
!5146 = !DILocation(line: 696, column: 19, scope: !5134)
!5147 = !DILocation(line: 696, column: 3, scope: !5134)
!5148 = !DILocation(line: 696, column: 11, scope: !5134)
!5149 = !DILocation(line: 696, column: 17, scope: !5134)
!5150 = !DILocation(line: 697, column: 12, scope: !5134)
!5151 = !DILocation(line: 697, column: 4, scope: !5134)
!5152 = !DILocation(line: 697, column: 10, scope: !5134)
!5153 = !DILocation(line: 700, column: 3, scope: !5134)
!5154 = !DILocation(line: 700, column: 11, scope: !5134)
!5155 = !DILocation(line: 700, column: 18, scope: !5134)
!5156 = !DILocation(line: 700, column: 23, scope: !5134)
!5157 = !DILocation(line: 701, column: 21, scope: !5134)
!5158 = !DILocation(line: 701, column: 26, scope: !5134)
!5159 = !DILocation(line: 701, column: 3, scope: !5134)
!5160 = !DILocation(line: 701, column: 11, scope: !5134)
!5161 = !DILocation(line: 701, column: 19, scope: !5134)
!5162 = !DILocation(line: 704, column: 18, scope: !5134)
!5163 = !DILocation(line: 704, column: 23, scope: !5134)
!5164 = !DILocation(line: 704, column: 3, scope: !5134)
!5165 = !DILocation(line: 704, column: 11, scope: !5134)
!5166 = !DILocation(line: 704, column: 16, scope: !5134)
!5167 = !DILocation(line: 705, column: 21, scope: !5134)
!5168 = !DILocation(line: 705, column: 26, scope: !5134)
!5169 = !DILocation(line: 705, column: 3, scope: !5134)
!5170 = !DILocation(line: 705, column: 11, scope: !5134)
!5171 = !DILocation(line: 705, column: 19, scope: !5134)
!5172 = !DILocation(line: 706, column: 21, scope: !5134)
!5173 = !DILocation(line: 706, column: 26, scope: !5134)
!5174 = !DILocation(line: 706, column: 3, scope: !5134)
!5175 = !DILocation(line: 706, column: 11, scope: !5134)
!5176 = !DILocation(line: 706, column: 19, scope: !5134)
!5177 = !DILocation(line: 710, column: 7, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 710, column: 7)
!5179 = !DILocation(line: 710, column: 15, scope: !5178)
!5180 = !DILocation(line: 710, column: 31, scope: !5178)
!5181 = !DILocation(line: 710, column: 23, scope: !5178)
!5182 = !DILocation(line: 710, column: 20, scope: !5178)
!5183 = !DILocation(line: 710, column: 7, scope: !5134)
!5184 = !DILocalVariable(name: "sw_ap", scope: !5185, file: !3, line: 711, type: !1541)
!5185 = distinct !DILexicalBlock(scope: !5186, file: !3, line: 711, column: 4)
!5186 = distinct !DILexicalBlock(scope: !5178, file: !3, line: 710, column: 39)
!5187 = !DILocation(line: 711, column: 4, scope: !5185)
!5188 = !DILocalVariable(name: "sw_ap", scope: !5189, file: !3, line: 712, type: !1535)
!5189 = distinct !DILexicalBlock(scope: !5186, file: !3, line: 712, column: 4)
!5190 = !DILocation(line: 712, column: 4, scope: !5189)
!5191 = !DILocation(line: 713, column: 3, scope: !5186)
!5192 = !DILocation(line: 715, column: 19, scope: !5134)
!5193 = !DILocation(line: 715, column: 27, scope: !5134)
!5194 = !DILocation(line: 715, column: 32, scope: !5134)
!5195 = !DILocation(line: 715, column: 49, scope: !5134)
!5196 = !DILocation(line: 715, column: 54, scope: !5134)
!5197 = !DILocation(line: 715, column: 59, scope: !5134)
!5198 = !DILocation(line: 715, column: 46, scope: !5134)
!5199 = !DILocation(line: 715, column: 3, scope: !5134)
!5200 = !DILocation(line: 715, column: 11, scope: !5134)
!5201 = !DILocation(line: 715, column: 16, scope: !5134)
!5202 = !DILocation(line: 716, column: 23, scope: !5134)
!5203 = !DILocation(line: 716, column: 31, scope: !5134)
!5204 = !DILocation(line: 716, column: 61, scope: !5134)
!5205 = !DILocation(line: 716, column: 66, scope: !5134)
!5206 = !DILocation(line: 716, column: 75, scope: !5134)
!5207 = !DILocation(line: 716, column: 58, scope: !5134)
!5208 = !DILocation(line: 716, column: 3, scope: !5134)
!5209 = !DILocation(line: 716, column: 11, scope: !5134)
!5210 = !DILocation(line: 716, column: 20, scope: !5134)
!5211 = !DILocation(line: 720, column: 7, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 720, column: 7)
!5213 = !DILocation(line: 720, column: 7, scope: !5134)
!5214 = !DILocation(line: 721, column: 22, scope: !5212)
!5215 = !DILocation(line: 721, column: 27, scope: !5212)
!5216 = !DILocation(line: 721, column: 4, scope: !5212)
!5217 = !DILocation(line: 721, column: 12, scope: !5212)
!5218 = !DILocation(line: 721, column: 20, scope: !5212)
!5219 = !DILocation(line: 723, column: 27, scope: !5134)
!5220 = !DILocation(line: 723, column: 34, scope: !5134)
!5221 = !DILocation(line: 723, column: 42, scope: !5134)
!5222 = !DILocation(line: 723, column: 3, scope: !5134)
!5223 = !DILocation(line: 727, column: 7, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 727, column: 7)
!5225 = !DILocation(line: 727, column: 12, scope: !5224)
!5226 = !DILocation(line: 727, column: 19, scope: !5224)
!5227 = !DILocation(line: 727, column: 24, scope: !5224)
!5228 = !DILocation(line: 727, column: 16, scope: !5224)
!5229 = !DILocation(line: 727, column: 7, scope: !5134)
!5230 = !DILocation(line: 728, column: 8, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 728, column: 8)
!5232 = distinct !DILexicalBlock(scope: !5224, file: !3, line: 727, column: 33)
!5233 = !DILocation(line: 728, column: 16, scope: !5231)
!5234 = !DILocation(line: 728, column: 23, scope: !5231)
!5235 = !DILocation(line: 728, column: 31, scope: !5231)
!5236 = !DILocation(line: 728, column: 20, scope: !5231)
!5237 = !DILocation(line: 728, column: 8, scope: !5232)
!5238 = !DILocalVariable(name: "sw_ap", scope: !5239, file: !3, line: 729, type: !1541)
!5239 = distinct !DILexicalBlock(scope: !5240, file: !3, line: 729, column: 5)
!5240 = distinct !DILexicalBlock(scope: !5231, file: !3, line: 728, column: 40)
!5241 = !DILocation(line: 729, column: 5, scope: !5239)
!5242 = !DILocation(line: 730, column: 4, scope: !5240)
!5243 = !DILocation(line: 732, column: 19, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5231, file: !3, line: 731, column: 9)
!5245 = !DILocation(line: 732, column: 24, scope: !5244)
!5246 = !DILocation(line: 732, column: 5, scope: !5244)
!5247 = !DILocation(line: 732, column: 13, scope: !5244)
!5248 = !DILocation(line: 732, column: 17, scope: !5244)
!5249 = !DILocation(line: 733, column: 16, scope: !5244)
!5250 = !DILocation(line: 733, column: 21, scope: !5244)
!5251 = !DILocation(line: 733, column: 5, scope: !5244)
!5252 = !DILocation(line: 733, column: 10, scope: !5244)
!5253 = !DILocation(line: 733, column: 14, scope: !5244)
!5254 = !DILocation(line: 735, column: 3, scope: !5232)
!5255 = !DILocation(line: 737, column: 8, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5257, file: !3, line: 737, column: 8)
!5257 = distinct !DILexicalBlock(scope: !5224, file: !3, line: 736, column: 8)
!5258 = !DILocation(line: 737, column: 16, scope: !5256)
!5259 = !DILocation(line: 737, column: 23, scope: !5256)
!5260 = !DILocation(line: 737, column: 31, scope: !5256)
!5261 = !DILocation(line: 737, column: 20, scope: !5256)
!5262 = !DILocation(line: 737, column: 8, scope: !5257)
!5263 = !DILocation(line: 738, column: 5, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5256, file: !3, line: 737, column: 40)
!5265 = !DILocation(line: 738, column: 15, scope: !5264)
!5266 = !DILocation(line: 738, column: 23, scope: !5264)
!5267 = !DILocation(line: 739, column: 19, scope: !5264)
!5268 = !DILocation(line: 739, column: 27, scope: !5264)
!5269 = !DILocation(line: 739, column: 5, scope: !5264)
!5270 = !DILocation(line: 739, column: 13, scope: !5264)
!5271 = !DILocation(line: 739, column: 17, scope: !5264)
!5272 = !DILocation(line: 740, column: 4, scope: !5264)
!5273 = !DILocation(line: 741, column: 16, scope: !5257)
!5274 = !DILocation(line: 741, column: 24, scope: !5257)
!5275 = !DILocation(line: 741, column: 33, scope: !5257)
!5276 = !DILocation(line: 741, column: 38, scope: !5257)
!5277 = !DILocation(line: 741, column: 4, scope: !5257)
!5278 = !DILocation(line: 744, column: 16, scope: !5134)
!5279 = !DILocation(line: 744, column: 23, scope: !5134)
!5280 = !DILocation(line: 744, column: 32, scope: !5134)
!5281 = !DILocation(line: 744, column: 3, scope: !5134)
!5282 = !DILocation(line: 745, column: 15, scope: !5134)
!5283 = !DILocation(line: 745, column: 18, scope: !5134)
!5284 = !DILocation(line: 745, column: 3, scope: !5134)
!5285 = !DILocation(line: 748, column: 2, scope: !5134)
!5286 = !DILocalVariable(name: "flag_copy", scope: !5287, file: !3, line: 750, type: !4766)
!5287 = distinct !DILexicalBlock(scope: !5130, file: !3, line: 749, column: 7)
!5288 = !DILocation(line: 750, column: 13, scope: !5287)
!5289 = !DILocation(line: 752, column: 16, scope: !5287)
!5290 = !DILocation(line: 752, column: 21, scope: !5287)
!5291 = !DILocation(line: 752, column: 26, scope: !5287)
!5292 = !DILocation(line: 752, column: 43, scope: !5287)
!5293 = !DILocation(line: 752, column: 51, scope: !5287)
!5294 = !DILocation(line: 752, column: 56, scope: !5287)
!5295 = !DILocation(line: 752, column: 40, scope: !5287)
!5296 = !DILocation(line: 752, column: 3, scope: !5287)
!5297 = !DILocation(line: 752, column: 8, scope: !5287)
!5298 = !DILocation(line: 752, column: 13, scope: !5287)
!5299 = !DILocation(line: 756, column: 16, scope: !5287)
!5300 = !DILocation(line: 756, column: 26, scope: !5287)
!5301 = !DILocation(line: 756, column: 35, scope: !5287)
!5302 = !DILocation(line: 756, column: 3, scope: !5287)
!5303 = !DILocation(line: 757, column: 15, scope: !5287)
!5304 = !DILocation(line: 757, column: 18, scope: !5287)
!5305 = !DILocation(line: 757, column: 3, scope: !5287)
!5306 = !DILocation(line: 760, column: 9, scope: !5079)
!5307 = !DILocation(line: 760, column: 2, scope: !5079)
!5308 = !DILocation(line: 761, column: 1, scope: !5079)
!5309 = distinct !DISubprogram(name: "copy_v3_v3", scope: !5310, file: !5310, line: 64, type: !5311, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!5310 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5311 = !DISubroutineType(types: !5312)
!5312 = !{null, !1543, !5313}
!5313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5314, size: 64)
!5314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1534)
!5315 = !DILocalVariable(name: "r", arg: 1, scope: !5309, file: !5310, line: 64, type: !1543)
!5316 = !DILocation(line: 64, column: 31, scope: !5309)
!5317 = !DILocalVariable(name: "a", arg: 2, scope: !5309, file: !5310, line: 64, type: !5313)
!5318 = !DILocation(line: 64, column: 49, scope: !5309)
!5319 = !DILocation(line: 66, column: 9, scope: !5309)
!5320 = !DILocation(line: 66, column: 2, scope: !5309)
!5321 = !DILocation(line: 66, column: 7, scope: !5309)
!5322 = !DILocation(line: 67, column: 9, scope: !5309)
!5323 = !DILocation(line: 67, column: 2, scope: !5309)
!5324 = !DILocation(line: 67, column: 7, scope: !5309)
!5325 = !DILocation(line: 68, column: 9, scope: !5309)
!5326 = !DILocation(line: 68, column: 2, scope: !5309)
!5327 = !DILocation(line: 68, column: 7, scope: !5309)
!5328 = !DILocation(line: 69, column: 1, scope: !5309)
!5329 = distinct !DISubprogram(name: "uiEndBlock_ex", scope: !3, file: !3, line: 1179, type: !5330, scopeLine: 1180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!5330 = !DISubroutineType(types: !5331)
!5331 = !{null, !4272, !1695, !5332}
!5332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4766, size: 64)
!5333 = !DILocalVariable(name: "C", arg: 1, scope: !5329, file: !3, line: 1179, type: !4272)
!5334 = !DILocation(line: 1179, column: 36, scope: !5329)
!5335 = !DILocalVariable(name: "block", arg: 2, scope: !5329, file: !3, line: 1179, type: !1695)
!5336 = !DILocation(line: 1179, column: 48, scope: !5329)
!5337 = !DILocalVariable(name: "xy", arg: 3, scope: !5329, file: !3, line: 1179, type: !5332)
!5338 = !DILocation(line: 1179, column: 65, scope: !5329)
!5339 = !DILocalVariable(name: "window", scope: !5329, file: !3, line: 1181, type: !5340)
!5340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5341, size: 64)
!5341 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindow", file: !1963, line: 209, baseType: !1962)
!5342 = !DILocation(line: 1181, column: 12, scope: !5329)
!5343 = !DILocation(line: 1181, column: 35, scope: !5329)
!5344 = !DILocation(line: 1181, column: 21, scope: !5329)
!5345 = !DILocalVariable(name: "scene", scope: !5329, file: !3, line: 1182, type: !5346)
!5346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5347, size: 64)
!5347 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !2038, line: 1299, baseType: !2037)
!5348 = !DILocation(line: 1182, column: 9, scope: !5329)
!5349 = !DILocation(line: 1182, column: 32, scope: !5329)
!5350 = !DILocation(line: 1182, column: 17, scope: !5329)
!5351 = !DILocalVariable(name: "but", scope: !5329, file: !3, line: 1183, type: !1558)
!5352 = !DILocation(line: 1183, column: 9, scope: !5329)
!5353 = !DILocation(line: 1187, column: 23, scope: !5329)
!5354 = !DILocation(line: 1187, column: 26, scope: !5329)
!5355 = !DILocation(line: 1187, column: 2, scope: !5329)
!5356 = !DILocation(line: 1193, column: 13, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5329, file: !3, line: 1193, column: 2)
!5358 = !DILocation(line: 1193, column: 20, scope: !5357)
!5359 = !DILocation(line: 1193, column: 28, scope: !5357)
!5360 = !DILocation(line: 1193, column: 11, scope: !5357)
!5361 = !DILocation(line: 1193, column: 7, scope: !5357)
!5362 = !DILocation(line: 1193, column: 35, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 1193, column: 2)
!5364 = !DILocation(line: 1193, column: 2, scope: !5357)
!5365 = !DILocation(line: 1195, column: 7, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5367, file: !3, line: 1195, column: 7)
!5367 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 1193, column: 57)
!5368 = !DILocation(line: 1195, column: 12, scope: !5366)
!5369 = !DILocation(line: 1195, column: 7, scope: !5367)
!5370 = !DILocalVariable(name: "ot", scope: !5371, file: !3, line: 1196, type: !5372)
!5371 = distinct !DILexicalBlock(scope: !5366, file: !3, line: 1195, column: 20)
!5372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5373, size: 64)
!5373 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorType", file: !1020, line: 568, baseType: !3122)
!5374 = !DILocation(line: 1196, column: 20, scope: !5371)
!5375 = !DILocation(line: 1196, column: 25, scope: !5371)
!5376 = !DILocation(line: 1196, column: 30, scope: !5371)
!5377 = !DILocation(line: 1198, column: 8, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 1198, column: 8)
!5379 = !DILocation(line: 1198, column: 13, scope: !5378)
!5380 = !DILocation(line: 1198, column: 8, scope: !5371)
!5381 = !DILocation(line: 1199, column: 31, scope: !5378)
!5382 = !DILocation(line: 1199, column: 34, scope: !5378)
!5383 = !DILocation(line: 1199, column: 39, scope: !5378)
!5384 = !DILocation(line: 1199, column: 5, scope: !5378)
!5385 = !DILocation(line: 1201, column: 8, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 1201, column: 8)
!5387 = !DILocation(line: 1201, column: 11, scope: !5386)
!5388 = !DILocation(line: 1201, column: 19, scope: !5386)
!5389 = !DILocation(line: 1201, column: 59, scope: !5386)
!5390 = !DILocation(line: 1201, column: 62, scope: !5386)
!5391 = !DILocation(line: 1201, column: 66, scope: !5386)
!5392 = !DILocation(line: 1201, column: 71, scope: !5386)
!5393 = !DILocation(line: 1201, column: 22, scope: !5386)
!5394 = !DILocation(line: 1201, column: 82, scope: !5386)
!5395 = !DILocation(line: 1201, column: 8, scope: !5371)
!5396 = !DILocation(line: 1202, column: 5, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5386, file: !3, line: 1201, column: 88)
!5398 = !DILocation(line: 1202, column: 10, scope: !5397)
!5399 = !DILocation(line: 1202, column: 15, scope: !5397)
!5400 = !DILocation(line: 1203, column: 5, scope: !5397)
!5401 = !DILocation(line: 1203, column: 10, scope: !5397)
!5402 = !DILocation(line: 1203, column: 15, scope: !5397)
!5403 = !DILocation(line: 1204, column: 4, scope: !5397)
!5404 = !DILocation(line: 1206, column: 8, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 1206, column: 8)
!5406 = !DILocation(line: 1206, column: 13, scope: !5405)
!5407 = !DILocation(line: 1206, column: 8, scope: !5371)
!5408 = !DILocation(line: 1207, column: 31, scope: !5405)
!5409 = !DILocation(line: 1207, column: 5, scope: !5405)
!5410 = !DILocation(line: 1208, column: 3, scope: !5371)
!5411 = !DILocation(line: 1210, column: 20, scope: !5367)
!5412 = !DILocation(line: 1210, column: 26, scope: !5367)
!5413 = !DILocation(line: 1210, column: 25, scope: !5367)
!5414 = !DILocation(line: 1210, column: 35, scope: !5367)
!5415 = !DILocation(line: 1210, column: 42, scope: !5367)
!5416 = !DILocation(line: 1210, column: 44, scope: !5367)
!5417 = !DILocation(line: 1210, column: 3, scope: !5367)
!5418 = !DILocation(line: 1211, column: 2, scope: !5367)
!5419 = !DILocation(line: 1193, column: 46, scope: !5363)
!5420 = !DILocation(line: 1193, column: 51, scope: !5363)
!5421 = !DILocation(line: 1193, column: 44, scope: !5363)
!5422 = !DILocation(line: 1193, column: 2, scope: !5363)
!5423 = distinct !{!5423, !5364, !5424}
!5424 = !DILocation(line: 1211, column: 2, scope: !5357)
!5425 = !DILocation(line: 1216, column: 6, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5329, file: !3, line: 1216, column: 6)
!5427 = !DILocation(line: 1216, column: 13, scope: !5426)
!5428 = !DILocation(line: 1216, column: 21, scope: !5426)
!5429 = !DILocation(line: 1216, column: 6, scope: !5329)
!5430 = !DILocation(line: 1217, column: 24, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5426, file: !3, line: 1216, column: 28)
!5432 = !DILocation(line: 1217, column: 3, scope: !5431)
!5433 = !DILocation(line: 1218, column: 2, scope: !5431)
!5434 = !DILocation(line: 1219, column: 20, scope: !5329)
!5435 = !DILocation(line: 1219, column: 2, scope: !5329)
!5436 = !DILocation(line: 1220, column: 7, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5329, file: !3, line: 1220, column: 6)
!5438 = !DILocation(line: 1220, column: 14, scope: !5437)
!5439 = !DILocation(line: 1220, column: 19, scope: !5437)
!5440 = !DILocation(line: 1220, column: 36, scope: !5437)
!5441 = !DILocation(line: 1220, column: 40, scope: !5437)
!5442 = !DILocation(line: 1220, column: 47, scope: !5437)
!5443 = !DILocation(line: 1220, column: 52, scope: !5437)
!5444 = !DILocation(line: 1220, column: 6, scope: !5329)
!5445 = !DILocation(line: 1221, column: 31, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5437, file: !3, line: 1220, column: 75)
!5447 = !DILocation(line: 1221, column: 3, scope: !5446)
!5448 = !DILocation(line: 1222, column: 2, scope: !5446)
!5449 = !DILocation(line: 1224, column: 6, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5329, file: !3, line: 1224, column: 6)
!5451 = !DILocation(line: 1224, column: 13, scope: !5450)
!5452 = !DILocation(line: 1224, column: 18, scope: !5450)
!5453 = !DILocation(line: 1224, column: 6, scope: !5329)
!5454 = !DILocation(line: 1225, column: 29, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5450, file: !3, line: 1224, column: 35)
!5456 = !DILocation(line: 1225, column: 32, scope: !5455)
!5457 = !DILocation(line: 1225, column: 3, scope: !5455)
!5458 = !DILocation(line: 1226, column: 2, scope: !5455)
!5459 = !DILocation(line: 1229, column: 10, scope: !5329)
!5460 = !DILocation(line: 1229, column: 17, scope: !5329)
!5461 = !DILocation(line: 1229, column: 2, scope: !5329)
!5462 = !DILocation(line: 1231, column: 4, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5329, file: !3, line: 1229, column: 30)
!5464 = !DILocation(line: 1233, column: 20, scope: !5463)
!5465 = !DILocation(line: 1233, column: 4, scope: !5463)
!5466 = !DILocation(line: 1234, column: 4, scope: !5463)
!5467 = !DILocation(line: 1236, column: 25, scope: !5463)
!5468 = !DILocation(line: 1236, column: 4, scope: !5463)
!5469 = !DILocation(line: 1237, column: 4, scope: !5463)
!5470 = !DILocation(line: 1239, column: 29, scope: !5463)
!5471 = !DILocation(line: 1239, column: 37, scope: !5463)
!5472 = !DILocation(line: 1239, column: 4, scope: !5463)
!5473 = !DILocation(line: 1240, column: 4, scope: !5463)
!5474 = !DILocation(line: 1242, column: 33, scope: !5463)
!5475 = !DILocation(line: 1242, column: 4, scope: !5463)
!5476 = !DILocation(line: 1243, column: 4, scope: !5463)
!5477 = !DILocation(line: 1248, column: 26, scope: !5463)
!5478 = !DILocation(line: 1248, column: 34, scope: !5463)
!5479 = !DILocation(line: 1248, column: 41, scope: !5463)
!5480 = !DILocation(line: 1248, column: 48, scope: !5463)
!5481 = !DILocation(line: 1248, column: 61, scope: !5463)
!5482 = !DILocation(line: 1248, column: 4, scope: !5463)
!5483 = !DILocation(line: 1249, column: 4, scope: !5463)
!5484 = !DILocation(line: 1252, column: 6, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5329, file: !3, line: 1252, column: 6)
!5486 = !DILocation(line: 1252, column: 13, scope: !5485)
!5487 = !DILocation(line: 1252, column: 18, scope: !5485)
!5488 = !DILocation(line: 1252, column: 23, scope: !5485)
!5489 = !DILocation(line: 1252, column: 31, scope: !5485)
!5490 = !DILocation(line: 1252, column: 34, scope: !5485)
!5491 = !DILocation(line: 1252, column: 41, scope: !5485)
!5492 = !DILocation(line: 1252, column: 46, scope: !5485)
!5493 = !DILocation(line: 1252, column: 51, scope: !5485)
!5494 = !DILocation(line: 1252, column: 6, scope: !5329)
!5495 = !DILocation(line: 1253, column: 17, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 1252, column: 60)
!5497 = !DILocation(line: 1253, column: 3, scope: !5496)
!5498 = !DILocation(line: 1254, column: 2, scope: !5496)
!5499 = !DILocation(line: 1255, column: 6, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5329, file: !3, line: 1255, column: 6)
!5501 = !DILocation(line: 1255, column: 13, scope: !5500)
!5502 = !DILocation(line: 1255, column: 18, scope: !5500)
!5503 = !DILocation(line: 1255, column: 6, scope: !5329)
!5504 = !DILocation(line: 1256, column: 19, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5500, file: !3, line: 1255, column: 34)
!5506 = !DILocation(line: 1256, column: 3, scope: !5505)
!5507 = !DILocation(line: 1257, column: 2, scope: !5505)
!5508 = !DILocation(line: 1259, column: 2, scope: !5329)
!5509 = !DILocation(line: 1259, column: 9, scope: !5329)
!5510 = !DILocation(line: 1259, column: 18, scope: !5329)
!5511 = !DILocation(line: 1260, column: 1, scope: !5329)
!5512 = distinct !DISubprogram(name: "ui_block_do_align", scope: !3, file: !3, line: 2949, type: !3750, scopeLine: 2950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!5513 = !DILocalVariable(name: "block", arg: 1, scope: !5512, file: !3, line: 2949, type: !1695)
!5514 = !DILocation(line: 2949, column: 33, scope: !5512)
!5515 = !DILocalVariable(name: "but", scope: !5512, file: !3, line: 2951, type: !1558)
!5516 = !DILocation(line: 2951, column: 9, scope: !5512)
!5517 = !DILocalVariable(name: "nr", scope: !5512, file: !3, line: 2952, type: !1545)
!5518 = !DILocation(line: 2952, column: 8, scope: !5512)
!5519 = !DILocation(line: 2955, column: 13, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5512, file: !3, line: 2955, column: 2)
!5521 = !DILocation(line: 2955, column: 20, scope: !5520)
!5522 = !DILocation(line: 2955, column: 28, scope: !5520)
!5523 = !DILocation(line: 2955, column: 11, scope: !5520)
!5524 = !DILocation(line: 2955, column: 7, scope: !5520)
!5525 = !DILocation(line: 2955, column: 35, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5520, file: !3, line: 2955, column: 2)
!5527 = !DILocation(line: 2955, column: 2, scope: !5520)
!5528 = !DILocation(line: 2956, column: 7, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5530, file: !3, line: 2956, column: 7)
!5530 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 2955, column: 42)
!5531 = !DILocation(line: 2956, column: 12, scope: !5529)
!5532 = !DILocation(line: 2956, column: 7, scope: !5530)
!5533 = !DILocation(line: 2957, column: 9, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5529, file: !3, line: 2956, column: 21)
!5535 = !DILocation(line: 2957, column: 14, scope: !5534)
!5536 = !DILocation(line: 2957, column: 7, scope: !5534)
!5537 = !DILocation(line: 2958, column: 26, scope: !5534)
!5538 = !DILocation(line: 2958, column: 31, scope: !5534)
!5539 = !DILocation(line: 2958, column: 4, scope: !5534)
!5540 = !DILocation(line: 2961, column: 4, scope: !5534)
!5541 = !DILocation(line: 2961, column: 11, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 2961, column: 4)
!5543 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 2961, column: 4)
!5544 = !DILocation(line: 2961, column: 15, scope: !5542)
!5545 = !DILocation(line: 2961, column: 18, scope: !5542)
!5546 = !DILocation(line: 2961, column: 23, scope: !5542)
!5547 = !DILocation(line: 2961, column: 34, scope: !5542)
!5548 = !DILocation(line: 2961, column: 31, scope: !5542)
!5549 = !DILocation(line: 0, scope: !5542)
!5550 = !DILocation(line: 2961, column: 4, scope: !5543)
!5551 = !DILocation(line: 2963, column: 4, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5542, file: !3, line: 2961, column: 55)
!5553 = !DILocation(line: 2961, column: 44, scope: !5542)
!5554 = !DILocation(line: 2961, column: 49, scope: !5542)
!5555 = !DILocation(line: 2961, column: 42, scope: !5542)
!5556 = !DILocation(line: 2961, column: 4, scope: !5542)
!5557 = distinct !{!5557, !5550, !5558}
!5558 = !DILocation(line: 2963, column: 4, scope: !5543)
!5559 = !DILocation(line: 2965, column: 9, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 2965, column: 8)
!5561 = !DILocation(line: 2965, column: 8, scope: !5534)
!5562 = !DILocation(line: 2966, column: 5, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 2965, column: 14)
!5564 = !DILocation(line: 2968, column: 3, scope: !5534)
!5565 = !DILocation(line: 2970, column: 10, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5529, file: !3, line: 2969, column: 8)
!5567 = !DILocation(line: 2970, column: 15, scope: !5566)
!5568 = !DILocation(line: 2970, column: 8, scope: !5566)
!5569 = !DILocation(line: 2955, column: 2, scope: !5526)
!5570 = distinct !{!5570, !5527, !5571}
!5571 = !DILocation(line: 2972, column: 2, scope: !5520)
!5572 = !DILocation(line: 2973, column: 1, scope: !5512)
!5573 = distinct !DISubprogram(name: "ui_menu_block_set_keyaccels", scope: !3, file: !3, line: 834, type: !3750, scopeLine: 835, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!5574 = !DILocalVariable(name: "block", arg: 1, scope: !5573, file: !3, line: 834, type: !1695)
!5575 = !DILocation(line: 834, column: 50, scope: !5573)
!5576 = !DILocalVariable(name: "but", scope: !5573, file: !3, line: 836, type: !1558)
!5577 = !DILocation(line: 836, column: 9, scope: !5573)
!5578 = !DILocalVariable(name: "menu_key_mask", scope: !5573, file: !3, line: 838, type: !7)
!5579 = !DILocation(line: 838, column: 15, scope: !5573)
!5580 = !DILocalVariable(name: "menu_key", scope: !5573, file: !3, line: 839, type: !1550)
!5581 = !DILocation(line: 839, column: 16, scope: !5573)
!5582 = !DILocalVariable(name: "str_pt", scope: !5573, file: !3, line: 840, type: !1647)
!5583 = !DILocation(line: 840, column: 14, scope: !5573)
!5584 = !DILocalVariable(name: "pass", scope: !5573, file: !3, line: 841, type: !1067)
!5585 = !DILocation(line: 841, column: 6, scope: !5573)
!5586 = !DILocalVariable(name: "tot_missing", scope: !5573, file: !3, line: 842, type: !1067)
!5587 = !DILocation(line: 842, column: 6, scope: !5573)
!5588 = !DILocation(line: 845, column: 6, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5573, file: !3, line: 845, column: 6)
!5590 = !DILocation(line: 845, column: 13, scope: !5589)
!5591 = !DILocation(line: 845, column: 18, scope: !5589)
!5592 = !DILocation(line: 845, column: 26, scope: !5589)
!5593 = !DILocation(line: 845, column: 33, scope: !5589)
!5594 = !DILocation(line: 845, column: 38, scope: !5589)
!5595 = !DILocation(line: 845, column: 23, scope: !5589)
!5596 = !DILocation(line: 845, column: 6, scope: !5573)
!5597 = !DILocation(line: 846, column: 3, scope: !5589)
!5598 = !DILocation(line: 848, column: 12, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5573, file: !3, line: 848, column: 2)
!5600 = !DILocation(line: 848, column: 7, scope: !5599)
!5601 = !DILocation(line: 848, column: 17, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5599, file: !3, line: 848, column: 2)
!5603 = !DILocation(line: 848, column: 22, scope: !5602)
!5604 = !DILocation(line: 848, column: 2, scope: !5599)
!5605 = !DILocation(line: 852, column: 14, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 852, column: 3)
!5607 = distinct !DILexicalBlock(scope: !5602, file: !3, line: 848, column: 35)
!5608 = !DILocation(line: 852, column: 21, scope: !5606)
!5609 = !DILocation(line: 852, column: 29, scope: !5606)
!5610 = !DILocation(line: 852, column: 12, scope: !5606)
!5611 = !DILocation(line: 852, column: 8, scope: !5606)
!5612 = !DILocation(line: 852, column: 36, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5606, file: !3, line: 852, column: 3)
!5614 = !DILocation(line: 852, column: 3, scope: !5606)
!5615 = !DILocation(line: 853, column: 9, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5617, file: !3, line: 853, column: 8)
!5617 = distinct !DILexicalBlock(scope: !5613, file: !3, line: 852, column: 58)
!5618 = !DILocation(line: 853, column: 59, scope: !5616)
!5619 = !DILocation(line: 853, column: 63, scope: !5616)
!5620 = !DILocation(line: 853, column: 68, scope: !5616)
!5621 = !DILocation(line: 853, column: 73, scope: !5616)
!5622 = !DILocation(line: 853, column: 8, scope: !5617)
!5623 = !DILocation(line: 855, column: 4, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 853, column: 87)
!5625 = !DILocation(line: 856, column: 13, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 856, column: 13)
!5627 = !DILocation(line: 856, column: 18, scope: !5626)
!5628 = !DILocation(line: 856, column: 27, scope: !5626)
!5629 = !DILocation(line: 856, column: 13, scope: !5616)
!5630 = !DILocation(line: 857, column: 9, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5632, file: !3, line: 857, column: 9)
!5632 = distinct !DILexicalBlock(scope: !5626, file: !3, line: 856, column: 36)
!5633 = !DILocation(line: 857, column: 14, scope: !5631)
!5634 = !DILocation(line: 857, column: 9, scope: !5632)
!5635 = !DILocation(line: 858, column: 20, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 858, column: 6)
!5637 = distinct !DILexicalBlock(scope: !5631, file: !3, line: 857, column: 19)
!5638 = !DILocation(line: 858, column: 25, scope: !5636)
!5639 = !DILocation(line: 858, column: 18, scope: !5636)
!5640 = !DILocation(line: 858, column: 11, scope: !5636)
!5641 = !DILocation(line: 858, column: 31, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5636, file: !3, line: 858, column: 6)
!5643 = !DILocation(line: 858, column: 30, scope: !5642)
!5644 = !DILocation(line: 858, column: 6, scope: !5636)
!5645 = !DILocation(line: 859, column: 27, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 858, column: 41)
!5647 = !DILocation(line: 859, column: 26, scope: !5646)
!5648 = !DILocation(line: 859, column: 18, scope: !5646)
!5649 = !DILocation(line: 859, column: 16, scope: !5646)
!5650 = !DILocation(line: 860, column: 12, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5646, file: !3, line: 860, column: 11)
!5652 = !DILocation(line: 860, column: 21, scope: !5651)
!5653 = !DILocation(line: 860, column: 28, scope: !5651)
!5654 = !DILocation(line: 860, column: 31, scope: !5651)
!5655 = !DILocation(line: 860, column: 40, scope: !5651)
!5656 = !DILocation(line: 860, column: 48, scope: !5651)
!5657 = !DILocation(line: 860, column: 53, scope: !5651)
!5658 = !DILocation(line: 860, column: 75, scope: !5651)
!5659 = !DILocation(line: 860, column: 84, scope: !5651)
!5660 = !DILocation(line: 860, column: 71, scope: !5651)
!5661 = !DILocation(line: 860, column: 67, scope: !5651)
!5662 = !DILocation(line: 860, column: 11, scope: !5646)
!5663 = !DILocation(line: 861, column: 31, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 860, column: 93)
!5665 = !DILocation(line: 861, column: 40, scope: !5664)
!5666 = !DILocation(line: 861, column: 27, scope: !5664)
!5667 = !DILocation(line: 861, column: 22, scope: !5664)
!5668 = !DILocation(line: 862, column: 8, scope: !5664)
!5669 = !DILocation(line: 865, column: 11, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5646, file: !3, line: 865, column: 11)
!5671 = !DILocation(line: 865, column: 16, scope: !5670)
!5672 = !DILocation(line: 865, column: 11, scope: !5646)
!5673 = !DILocation(line: 867, column: 8, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5670, file: !3, line: 865, column: 22)
!5675 = !DILocation(line: 867, column: 15, scope: !5674)
!5676 = !DILocation(line: 868, column: 15, scope: !5674)
!5677 = distinct !{!5677, !5673, !5676}
!5678 = !DILocation(line: 870, column: 13, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5674, file: !3, line: 870, column: 12)
!5680 = !DILocation(line: 870, column: 12, scope: !5679)
!5681 = !DILocation(line: 870, column: 12, scope: !5674)
!5682 = !DILocation(line: 871, column: 15, scope: !5679)
!5683 = !DILocation(line: 871, column: 9, scope: !5679)
!5684 = !DILocation(line: 872, column: 7, scope: !5674)
!5685 = !DILocation(line: 875, column: 14, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5670, file: !3, line: 873, column: 12)
!5687 = !DILocation(line: 858, column: 6, scope: !5642)
!5688 = distinct !{!5688, !5644, !5689}
!5689 = !DILocation(line: 877, column: 6, scope: !5636)
!5690 = !DILocation(line: 879, column: 11, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 879, column: 10)
!5692 = !DILocation(line: 879, column: 10, scope: !5691)
!5693 = !DILocation(line: 879, column: 10, scope: !5637)
!5694 = !DILocation(line: 880, column: 23, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5691, file: !3, line: 879, column: 19)
!5696 = !DILocation(line: 880, column: 7, scope: !5695)
!5697 = !DILocation(line: 880, column: 12, scope: !5695)
!5698 = !DILocation(line: 880, column: 21, scope: !5695)
!5699 = !DILocation(line: 881, column: 6, scope: !5695)
!5700 = !DILocation(line: 884, column: 18, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5691, file: !3, line: 882, column: 11)
!5702 = !DILocation(line: 888, column: 10, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 888, column: 10)
!5704 = !DILocation(line: 888, column: 24, scope: !5703)
!5705 = !DILocation(line: 888, column: 10, scope: !5637)
!5706 = !DILocation(line: 889, column: 7, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5703, file: !3, line: 888, column: 42)
!5708 = !DILocation(line: 891, column: 5, scope: !5637)
!5709 = !DILocation(line: 892, column: 4, scope: !5632)
!5710 = !DILocation(line: 893, column: 3, scope: !5617)
!5711 = !DILocation(line: 852, column: 47, scope: !5613)
!5712 = !DILocation(line: 852, column: 52, scope: !5613)
!5713 = !DILocation(line: 852, column: 45, scope: !5613)
!5714 = !DILocation(line: 852, column: 3, scope: !5613)
!5715 = distinct !{!5715, !5614, !5716}
!5716 = !DILocation(line: 893, column: 3, scope: !5606)
!5717 = !DILocation(line: 896, column: 8, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 896, column: 7)
!5719 = !DILocation(line: 896, column: 7, scope: !5607)
!5720 = !DILocation(line: 897, column: 4, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5718, file: !3, line: 896, column: 21)
!5722 = !DILocation(line: 899, column: 2, scope: !5607)
!5723 = !DILocation(line: 848, column: 31, scope: !5602)
!5724 = !DILocation(line: 848, column: 2, scope: !5602)
!5725 = distinct !{!5725, !5604, !5726}
!5726 = !DILocation(line: 899, column: 2, scope: !5599)
!5727 = !DILocation(line: 900, column: 1, scope: !5573)
!5728 = distinct !DISubprogram(name: "ui_menu_block_set_keymaps", scope: !3, file: !3, line: 1120, type: !4994, scopeLine: 1121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!5729 = !DILocalVariable(name: "C", arg: 1, scope: !5728, file: !3, line: 1120, type: !4272)
!5730 = !DILocation(line: 1120, column: 55, scope: !5728)
!5731 = !DILocalVariable(name: "block", arg: 2, scope: !5728, file: !3, line: 1120, type: !1695)
!5732 = !DILocation(line: 1120, column: 67, scope: !5728)
!5733 = !DILocalVariable(name: "but", scope: !5728, file: !3, line: 1122, type: !1558)
!5734 = !DILocation(line: 1122, column: 9, scope: !5728)
!5735 = !DILocalVariable(name: "buf", scope: !5728, file: !3, line: 1123, type: !1582)
!5736 = !DILocation(line: 1123, column: 7, scope: !5728)
!5737 = !DILocation(line: 1126, column: 6, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5728, file: !3, line: 1126, column: 6)
!5739 = !DILocation(line: 1126, column: 13, scope: !5738)
!5740 = !DILocation(line: 1126, column: 18, scope: !5738)
!5741 = !DILocation(line: 1126, column: 26, scope: !5738)
!5742 = !DILocation(line: 1126, column: 33, scope: !5738)
!5743 = !DILocation(line: 1126, column: 38, scope: !5738)
!5744 = !DILocation(line: 1126, column: 23, scope: !5738)
!5745 = !DILocation(line: 1126, column: 6, scope: !5728)
!5746 = !DILocation(line: 1127, column: 3, scope: !5738)
!5747 = !DILocation(line: 1129, column: 6, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5728, file: !3, line: 1129, column: 6)
!5749 = !DILocation(line: 1129, column: 13, scope: !5748)
!5750 = !DILocation(line: 1129, column: 18, scope: !5748)
!5751 = !DILocation(line: 1129, column: 6, scope: !5728)
!5752 = !DILocation(line: 1130, column: 14, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 1130, column: 3)
!5754 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 1129, column: 37)
!5755 = !DILocation(line: 1130, column: 21, scope: !5753)
!5756 = !DILocation(line: 1130, column: 29, scope: !5753)
!5757 = !DILocation(line: 1130, column: 12, scope: !5753)
!5758 = !DILocation(line: 1130, column: 8, scope: !5753)
!5759 = !DILocation(line: 1130, column: 36, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 1130, column: 3)
!5761 = !DILocation(line: 1130, column: 3, scope: !5753)
!5762 = !DILocation(line: 1131, column: 8, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5764, file: !3, line: 1131, column: 8)
!5764 = distinct !DILexicalBlock(scope: !5760, file: !3, line: 1130, column: 58)
!5765 = !DILocation(line: 1131, column: 13, scope: !5763)
!5766 = !DILocation(line: 1131, column: 21, scope: !5763)
!5767 = !DILocation(line: 1131, column: 8, scope: !5764)
!5768 = !DILocation(line: 1132, column: 33, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5763, file: !3, line: 1131, column: 40)
!5770 = !DILocation(line: 1132, column: 38, scope: !5769)
!5771 = !DILocation(line: 1132, column: 5, scope: !5769)
!5772 = !DILocation(line: 1133, column: 25, scope: !5769)
!5773 = !DILocation(line: 1133, column: 30, scope: !5769)
!5774 = !DILocation(line: 1133, column: 5, scope: !5769)
!5775 = !DILocation(line: 1134, column: 4, scope: !5769)
!5776 = !DILocation(line: 1135, column: 3, scope: !5764)
!5777 = !DILocation(line: 1130, column: 47, scope: !5760)
!5778 = !DILocation(line: 1130, column: 52, scope: !5760)
!5779 = !DILocation(line: 1130, column: 45, scope: !5760)
!5780 = !DILocation(line: 1130, column: 3, scope: !5760)
!5781 = distinct !{!5781, !5761, !5782}
!5782 = !DILocation(line: 1135, column: 3, scope: !5753)
!5783 = !DILocation(line: 1136, column: 2, scope: !5754)
!5784 = !DILocation(line: 1138, column: 14, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5786, file: !3, line: 1138, column: 3)
!5786 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 1137, column: 7)
!5787 = !DILocation(line: 1138, column: 21, scope: !5785)
!5788 = !DILocation(line: 1138, column: 29, scope: !5785)
!5789 = !DILocation(line: 1138, column: 12, scope: !5785)
!5790 = !DILocation(line: 1138, column: 8, scope: !5785)
!5791 = !DILocation(line: 1138, column: 36, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 1138, column: 3)
!5793 = !DILocation(line: 1138, column: 3, scope: !5785)
!5794 = !DILocation(line: 1140, column: 37, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5796, file: !3, line: 1140, column: 8)
!5796 = distinct !DILexicalBlock(scope: !5792, file: !3, line: 1138, column: 58)
!5797 = !DILocation(line: 1140, column: 40, scope: !5795)
!5798 = !DILocation(line: 1140, column: 45, scope: !5795)
!5799 = !DILocation(line: 1140, column: 8, scope: !5795)
!5800 = !DILocation(line: 1140, column: 8, scope: !5796)
!5801 = !DILocation(line: 1141, column: 25, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 1140, column: 64)
!5803 = !DILocation(line: 1141, column: 30, scope: !5802)
!5804 = !DILocation(line: 1141, column: 5, scope: !5802)
!5805 = !DILocation(line: 1142, column: 4, scope: !5802)
!5806 = !DILocation(line: 1143, column: 51, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 1143, column: 13)
!5808 = !DILocation(line: 1143, column: 54, scope: !5807)
!5809 = !DILocation(line: 1143, column: 59, scope: !5807)
!5810 = !DILocation(line: 1143, column: 13, scope: !5807)
!5811 = !DILocation(line: 1143, column: 13, scope: !5795)
!5812 = !DILocation(line: 1144, column: 25, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 1143, column: 78)
!5814 = !DILocation(line: 1144, column: 30, scope: !5813)
!5815 = !DILocation(line: 1144, column: 5, scope: !5813)
!5816 = !DILocation(line: 1145, column: 4, scope: !5813)
!5817 = !DILocation(line: 1146, column: 3, scope: !5796)
!5818 = !DILocation(line: 1138, column: 47, scope: !5792)
!5819 = !DILocation(line: 1138, column: 52, scope: !5792)
!5820 = !DILocation(line: 1138, column: 45, scope: !5792)
!5821 = !DILocation(line: 1138, column: 3, scope: !5792)
!5822 = distinct !{!5822, !5793, !5823}
!5823 = !DILocation(line: 1146, column: 3, scope: !5785)
!5824 = !DILocation(line: 1148, column: 1, scope: !5728)
!5825 = distinct !DISubprogram(name: "ui_text_bounds_block", scope: !3, file: !3, line: 225, type: !5826, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!5826 = !DISubroutineType(types: !5827)
!5827 = !{null, !1695, !1534}
!5828 = !DILocalVariable(name: "block", arg: 1, scope: !5825, file: !3, line: 225, type: !1695)
!5829 = !DILocation(line: 225, column: 43, scope: !5825)
!5830 = !DILocalVariable(name: "offset", arg: 2, scope: !5825, file: !3, line: 225, type: !1534)
!5831 = !DILocation(line: 225, column: 56, scope: !5825)
!5832 = !DILocalVariable(name: "style", scope: !5825, file: !3, line: 227, type: !5833)
!5833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5834, size: 64)
!5834 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiStyle", file: !1066, line: 120, baseType: !5835)
!5835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiStyle", file: !1066, line: 96, size: 1856, elements: !5836)
!5836 = !{!5837, !5839, !5840, !5841, !5857, !5858, !5859, !5860, !5861, !5862, !5863, !5864, !5865, !5866, !5867, !5868, !5869, !5870}
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5835, file: !1066, line: 97, baseType: !5838, size: 64)
!5838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5835, size: 64)
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5835, file: !1066, line: 97, baseType: !5838, size: 64, offset: 64)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5835, file: !1066, line: 99, baseType: !1719, size: 512, offset: 128)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "paneltitle", scope: !5835, file: !1066, line: 101, baseType: !5842, size: 256, offset: 640)
!5842 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiFontStyle", file: !1066, line: 84, baseType: !5843)
!5843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiFontStyle", file: !1066, line: 73, size: 256, elements: !5844)
!5844 = !{!5845, !5846, !5847, !5848, !5849, !5850, !5851, !5852, !5853, !5854, !5855, !5856}
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "uifont_id", scope: !5843, file: !1066, line: 74, baseType: !1545, size: 16)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !5843, file: !1066, line: 75, baseType: !1545, size: 16, offset: 16)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "kerning", scope: !5843, file: !1066, line: 76, baseType: !1545, size: 16, offset: 32)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5843, file: !1066, line: 77, baseType: !1842, size: 48, offset: 48)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "italic", scope: !5843, file: !1066, line: 78, baseType: !1545, size: 16, offset: 96)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "bold", scope: !5843, file: !1066, line: 78, baseType: !1545, size: 16, offset: 112)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "shadow", scope: !5843, file: !1066, line: 79, baseType: !1545, size: 16, offset: 128)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "shadx", scope: !5843, file: !1066, line: 80, baseType: !1545, size: 16, offset: 144)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "shady", scope: !5843, file: !1066, line: 80, baseType: !1545, size: 16, offset: 160)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !5843, file: !1066, line: 81, baseType: !1545, size: 16, offset: 176)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "shadowalpha", scope: !5843, file: !1066, line: 82, baseType: !1534, size: 32, offset: 192)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "shadowcolor", scope: !5843, file: !1066, line: 83, baseType: !1534, size: 32, offset: 224)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "grouplabel", scope: !5835, file: !1066, line: 102, baseType: !5842, size: 256, offset: 896)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "widgetlabel", scope: !5835, file: !1066, line: 103, baseType: !5842, size: 256, offset: 1152)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "widget", scope: !5835, file: !1066, line: 104, baseType: !5842, size: 256, offset: 1408)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "panelzoom", scope: !5835, file: !1066, line: 106, baseType: !1534, size: 32, offset: 1664)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "minlabelchars", scope: !5835, file: !1066, line: 108, baseType: !1545, size: 16, offset: 1696)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "minwidgetchars", scope: !5835, file: !1066, line: 109, baseType: !1545, size: 16, offset: 1712)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "columnspace", scope: !5835, file: !1066, line: 111, baseType: !1545, size: 16, offset: 1728)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "templatespace", scope: !5835, file: !1066, line: 112, baseType: !1545, size: 16, offset: 1744)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "boxspace", scope: !5835, file: !1066, line: 113, baseType: !1545, size: 16, offset: 1760)
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "buttonspacex", scope: !5835, file: !1066, line: 114, baseType: !1545, size: 16, offset: 1776)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "buttonspacey", scope: !5835, file: !1066, line: 115, baseType: !1545, size: 16, offset: 1792)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "panelspace", scope: !5835, file: !1066, line: 116, baseType: !1545, size: 16, offset: 1808)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "panelouter", scope: !5835, file: !1066, line: 117, baseType: !1545, size: 16, offset: 1824)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5835, file: !1066, line: 119, baseType: !1545, size: 16, offset: 1840)
!5871 = !DILocation(line: 227, column: 11, scope: !5825)
!5872 = !DILocation(line: 227, column: 19, scope: !5825)
!5873 = !DILocalVariable(name: "bt", scope: !5825, file: !3, line: 228, type: !1558)
!5874 = !DILocation(line: 228, column: 9, scope: !5825)
!5875 = !DILocalVariable(name: "init_col_bt", scope: !5825, file: !3, line: 228, type: !1558)
!5876 = !DILocation(line: 228, column: 14, scope: !5825)
!5877 = !DILocalVariable(name: "col_bt", scope: !5825, file: !3, line: 228, type: !1558)
!5878 = !DILocation(line: 228, column: 28, scope: !5825)
!5879 = !DILocalVariable(name: "i", scope: !5825, file: !3, line: 229, type: !1067)
!5880 = !DILocation(line: 229, column: 6, scope: !5825)
!5881 = !DILocalVariable(name: "j", scope: !5825, file: !3, line: 229, type: !1067)
!5882 = !DILocation(line: 229, column: 13, scope: !5825)
!5883 = !DILocalVariable(name: "x1addval", scope: !5825, file: !3, line: 229, type: !1067)
!5884 = !DILocation(line: 229, column: 16, scope: !5825)
!5885 = !DILocation(line: 229, column: 27, scope: !5825)
!5886 = !DILocation(line: 231, column: 18, scope: !5825)
!5887 = !DILocation(line: 231, column: 25, scope: !5825)
!5888 = !DILocation(line: 231, column: 2, scope: !5825)
!5889 = !DILocation(line: 233, column: 26, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 233, column: 2)
!5891 = !DILocation(line: 233, column: 33, scope: !5890)
!5892 = !DILocation(line: 233, column: 41, scope: !5890)
!5893 = !DILocation(line: 233, column: 24, scope: !5890)
!5894 = !DILocation(line: 233, column: 19, scope: !5890)
!5895 = !DILocation(line: 233, column: 7, scope: !5890)
!5896 = !DILocation(line: 233, column: 48, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5890, file: !3, line: 233, column: 2)
!5898 = !DILocation(line: 233, column: 2, scope: !5890)
!5899 = !DILocation(line: 234, column: 8, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5901, file: !3, line: 234, column: 7)
!5901 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 233, column: 67)
!5902 = !DILocation(line: 234, column: 7, scope: !5901)
!5903 = !DILocation(line: 235, column: 18, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 234, column: 40)
!5905 = !DILocation(line: 235, column: 25, scope: !5904)
!5906 = !DILocation(line: 235, column: 32, scope: !5904)
!5907 = !DILocation(line: 235, column: 43, scope: !5904)
!5908 = !DILocation(line: 235, column: 47, scope: !5904)
!5909 = !DILocation(line: 235, column: 8, scope: !5904)
!5910 = !DILocation(line: 235, column: 6, scope: !5904)
!5911 = !DILocation(line: 237, column: 8, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5904, file: !3, line: 237, column: 8)
!5913 = !DILocation(line: 237, column: 12, scope: !5912)
!5914 = !DILocation(line: 237, column: 10, scope: !5912)
!5915 = !DILocation(line: 237, column: 8, scope: !5904)
!5916 = !DILocation(line: 238, column: 9, scope: !5912)
!5917 = !DILocation(line: 238, column: 7, scope: !5912)
!5918 = !DILocation(line: 238, column: 5, scope: !5912)
!5919 = !DILocation(line: 239, column: 3, scope: !5904)
!5920 = !DILocation(line: 241, column: 7, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5901, file: !3, line: 241, column: 7)
!5922 = !DILocation(line: 241, column: 11, scope: !5921)
!5923 = !DILocation(line: 241, column: 16, scope: !5921)
!5924 = !DILocation(line: 241, column: 19, scope: !5921)
!5925 = !DILocation(line: 241, column: 23, scope: !5921)
!5926 = !DILocation(line: 241, column: 28, scope: !5921)
!5927 = !DILocation(line: 241, column: 35, scope: !5921)
!5928 = !DILocation(line: 241, column: 39, scope: !5921)
!5929 = !DILocation(line: 241, column: 45, scope: !5921)
!5930 = !DILocation(line: 241, column: 50, scope: !5921)
!5931 = !DILocation(line: 241, column: 33, scope: !5921)
!5932 = !DILocation(line: 241, column: 7, scope: !5901)
!5933 = !DILocation(line: 243, column: 18, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5935, file: !3, line: 243, column: 4)
!5935 = distinct !DILexicalBlock(scope: !5921, file: !3, line: 241, column: 56)
!5936 = !DILocation(line: 243, column: 16, scope: !5934)
!5937 = !DILocation(line: 243, column: 9, scope: !5934)
!5938 = !DILocation(line: 243, column: 31, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 243, column: 4)
!5940 = !DILocation(line: 243, column: 39, scope: !5939)
!5941 = !DILocation(line: 243, column: 47, scope: !5939)
!5942 = !DILocation(line: 243, column: 44, scope: !5939)
!5943 = !DILocation(line: 243, column: 4, scope: !5934)
!5944 = !DILocation(line: 244, column: 25, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5939, file: !3, line: 243, column: 74)
!5946 = !DILocation(line: 244, column: 5, scope: !5945)
!5947 = !DILocation(line: 244, column: 13, scope: !5945)
!5948 = !DILocation(line: 244, column: 18, scope: !5945)
!5949 = !DILocation(line: 244, column: 23, scope: !5945)
!5950 = !DILocation(line: 245, column: 25, scope: !5945)
!5951 = !DILocation(line: 245, column: 36, scope: !5945)
!5952 = !DILocation(line: 245, column: 34, scope: !5945)
!5953 = !DILocation(line: 245, column: 40, scope: !5945)
!5954 = !DILocation(line: 245, column: 47, scope: !5945)
!5955 = !DILocation(line: 245, column: 38, scope: !5945)
!5956 = !DILocation(line: 245, column: 5, scope: !5945)
!5957 = !DILocation(line: 245, column: 13, scope: !5945)
!5958 = !DILocation(line: 245, column: 18, scope: !5945)
!5959 = !DILocation(line: 245, column: 23, scope: !5945)
!5960 = !DILocation(line: 247, column: 18, scope: !5945)
!5961 = !DILocation(line: 247, column: 5, scope: !5945)
!5962 = !DILocation(line: 248, column: 4, scope: !5945)
!5963 = !DILocation(line: 243, column: 60, scope: !5939)
!5964 = !DILocation(line: 243, column: 68, scope: !5939)
!5965 = !DILocation(line: 243, column: 58, scope: !5939)
!5966 = !DILocation(line: 243, column: 4, scope: !5939)
!5967 = distinct !{!5967, !5943, !5968}
!5968 = !DILocation(line: 248, column: 4, scope: !5934)
!5969 = !DILocation(line: 251, column: 16, scope: !5935)
!5970 = !DILocation(line: 251, column: 20, scope: !5935)
!5971 = !DILocation(line: 251, column: 27, scope: !5935)
!5972 = !DILocation(line: 251, column: 18, scope: !5935)
!5973 = !DILocation(line: 251, column: 13, scope: !5935)
!5974 = !DILocation(line: 252, column: 6, scope: !5935)
!5975 = !DILocation(line: 253, column: 18, scope: !5935)
!5976 = !DILocation(line: 253, column: 16, scope: !5935)
!5977 = !DILocation(line: 254, column: 3, scope: !5935)
!5978 = !DILocation(line: 255, column: 2, scope: !5901)
!5979 = !DILocation(line: 233, column: 57, scope: !5897)
!5980 = !DILocation(line: 233, column: 61, scope: !5897)
!5981 = !DILocation(line: 233, column: 55, scope: !5897)
!5982 = !DILocation(line: 233, column: 2, scope: !5897)
!5983 = distinct !{!5983, !5898, !5984}
!5984 = !DILocation(line: 255, column: 2, scope: !5890)
!5985 = !DILocation(line: 258, column: 16, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 258, column: 2)
!5987 = !DILocation(line: 258, column: 14, scope: !5986)
!5988 = !DILocation(line: 258, column: 7, scope: !5986)
!5989 = !DILocation(line: 258, column: 29, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5986, file: !3, line: 258, column: 2)
!5991 = !DILocation(line: 258, column: 2, scope: !5986)
!5992 = !DILocation(line: 259, column: 23, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 258, column: 60)
!5994 = !DILocation(line: 259, column: 3, scope: !5993)
!5995 = !DILocation(line: 259, column: 11, scope: !5993)
!5996 = !DILocation(line: 259, column: 16, scope: !5993)
!5997 = !DILocation(line: 259, column: 21, scope: !5993)
!5998 = !DILocation(line: 260, column: 30, scope: !5993)
!5999 = !DILocation(line: 260, column: 41, scope: !5993)
!6000 = !DILocation(line: 260, column: 39, scope: !5993)
!6001 = !DILocation(line: 260, column: 45, scope: !5993)
!6002 = !DILocation(line: 260, column: 52, scope: !5993)
!6003 = !DILocation(line: 260, column: 43, scope: !5993)
!6004 = !DILocation(line: 260, column: 60, scope: !5993)
!6005 = !DILocation(line: 260, column: 69, scope: !5993)
!6006 = !DILocation(line: 260, column: 76, scope: !5993)
!6007 = !DILocation(line: 260, column: 67, scope: !5993)
!6008 = !DILocation(line: 260, column: 23, scope: !5993)
!6009 = !DILocation(line: 260, column: 3, scope: !5993)
!6010 = !DILocation(line: 260, column: 11, scope: !5993)
!6011 = !DILocation(line: 260, column: 16, scope: !5993)
!6012 = !DILocation(line: 260, column: 21, scope: !5993)
!6013 = !DILocation(line: 262, column: 16, scope: !5993)
!6014 = !DILocation(line: 262, column: 3, scope: !5993)
!6015 = !DILocation(line: 263, column: 2, scope: !5993)
!6016 = !DILocation(line: 258, column: 46, scope: !5990)
!6017 = !DILocation(line: 258, column: 54, scope: !5990)
!6018 = !DILocation(line: 258, column: 44, scope: !5990)
!6019 = !DILocation(line: 258, column: 2, scope: !5990)
!6020 = distinct !{!6020, !5991, !6021}
!6021 = !DILocation(line: 263, column: 2, scope: !5986)
!6022 = !DILocation(line: 264, column: 1, scope: !5825)
!6023 = distinct !DISubprogram(name: "ui_centered_bounds_block", scope: !3, file: !3, line: 304, type: !6024, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!6024 = !DISubroutineType(types: !6025)
!6025 = !{null, !5340, !1695}
!6026 = !DILocalVariable(name: "window", arg: 1, scope: !6023, file: !3, line: 304, type: !5340)
!6027 = !DILocation(line: 304, column: 48, scope: !6023)
!6028 = !DILocalVariable(name: "block", arg: 2, scope: !6023, file: !3, line: 304, type: !1695)
!6029 = !DILocation(line: 304, column: 65, scope: !6023)
!6030 = !DILocalVariable(name: "xmax", scope: !6023, file: !3, line: 306, type: !1067)
!6031 = !DILocation(line: 306, column: 6, scope: !6023)
!6032 = !DILocalVariable(name: "ymax", scope: !6023, file: !3, line: 306, type: !1067)
!6033 = !DILocation(line: 306, column: 12, scope: !6023)
!6034 = !DILocalVariable(name: "startx", scope: !6023, file: !3, line: 307, type: !1067)
!6035 = !DILocation(line: 307, column: 6, scope: !6023)
!6036 = !DILocalVariable(name: "starty", scope: !6023, file: !3, line: 307, type: !1067)
!6037 = !DILocation(line: 307, column: 14, scope: !6023)
!6038 = !DILocalVariable(name: "width", scope: !6023, file: !3, line: 308, type: !1067)
!6039 = !DILocation(line: 308, column: 6, scope: !6023)
!6040 = !DILocalVariable(name: "height", scope: !6023, file: !3, line: 308, type: !1067)
!6041 = !DILocation(line: 308, column: 13, scope: !6023)
!6042 = !DILocation(line: 313, column: 28, scope: !6023)
!6043 = !DILocation(line: 313, column: 9, scope: !6023)
!6044 = !DILocation(line: 313, column: 7, scope: !6023)
!6045 = !DILocation(line: 314, column: 28, scope: !6023)
!6046 = !DILocation(line: 314, column: 9, scope: !6023)
!6047 = !DILocation(line: 314, column: 7, scope: !6023)
!6048 = !DILocation(line: 316, column: 18, scope: !6023)
!6049 = !DILocation(line: 316, column: 2, scope: !6023)
!6050 = !DILocation(line: 318, column: 28, scope: !6023)
!6051 = !DILocation(line: 318, column: 35, scope: !6023)
!6052 = !DILocation(line: 318, column: 11, scope: !6023)
!6053 = !DILocation(line: 318, column: 9, scope: !6023)
!6054 = !DILocation(line: 319, column: 28, scope: !6023)
!6055 = !DILocation(line: 319, column: 35, scope: !6023)
!6056 = !DILocation(line: 319, column: 11, scope: !6023)
!6057 = !DILocation(line: 319, column: 9, scope: !6023)
!6058 = !DILocation(line: 321, column: 12, scope: !6023)
!6059 = !DILocation(line: 321, column: 17, scope: !6023)
!6060 = !DILocation(line: 321, column: 28, scope: !6023)
!6061 = !DILocation(line: 321, column: 34, scope: !6023)
!6062 = !DILocation(line: 321, column: 25, scope: !6023)
!6063 = !DILocation(line: 321, column: 11, scope: !6023)
!6064 = !DILocation(line: 321, column: 9, scope: !6023)
!6065 = !DILocation(line: 322, column: 12, scope: !6023)
!6066 = !DILocation(line: 322, column: 17, scope: !6023)
!6067 = !DILocation(line: 322, column: 28, scope: !6023)
!6068 = !DILocation(line: 322, column: 35, scope: !6023)
!6069 = !DILocation(line: 322, column: 25, scope: !6023)
!6070 = !DILocation(line: 322, column: 11, scope: !6023)
!6071 = !DILocation(line: 322, column: 9, scope: !6023)
!6072 = !DILocation(line: 324, column: 21, scope: !6023)
!6073 = !DILocation(line: 324, column: 28, scope: !6023)
!6074 = !DILocation(line: 324, column: 37, scope: !6023)
!6075 = !DILocation(line: 324, column: 44, scope: !6023)
!6076 = !DILocation(line: 324, column: 49, scope: !6023)
!6077 = !DILocation(line: 324, column: 35, scope: !6023)
!6078 = !DILocation(line: 324, column: 55, scope: !6023)
!6079 = !DILocation(line: 324, column: 64, scope: !6023)
!6080 = !DILocation(line: 324, column: 71, scope: !6023)
!6081 = !DILocation(line: 324, column: 76, scope: !6023)
!6082 = !DILocation(line: 324, column: 62, scope: !6023)
!6083 = !DILocation(line: 324, column: 2, scope: !6023)
!6084 = !DILocation(line: 327, column: 18, scope: !6023)
!6085 = !DILocation(line: 327, column: 2, scope: !6023)
!6086 = !DILocation(line: 329, column: 1, scope: !6023)
!6087 = distinct !DISubprogram(name: "ui_centered_pie_bounds_block", scope: !3, file: !3, line: 331, type: !3750, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!6088 = !DILocalVariable(name: "block", arg: 1, scope: !6087, file: !3, line: 331, type: !1695)
!6089 = !DILocation(line: 331, column: 51, scope: !6087)
!6090 = !DILocalVariable(name: "xy", scope: !6087, file: !3, line: 333, type: !6091)
!6091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4766, size: 64, elements: !1677)
!6092 = !DILocation(line: 333, column: 12, scope: !6087)
!6093 = !DILocation(line: 333, column: 20, scope: !6087)
!6094 = !DILocation(line: 334, column: 6, scope: !6087)
!6095 = !DILocation(line: 334, column: 13, scope: !6087)
!6096 = !DILocation(line: 334, column: 22, scope: !6087)
!6097 = !DILocation(line: 335, column: 6, scope: !6087)
!6098 = !DILocation(line: 335, column: 13, scope: !6087)
!6099 = !DILocation(line: 335, column: 22, scope: !6087)
!6100 = !DILocation(line: 338, column: 21, scope: !6087)
!6101 = !DILocation(line: 338, column: 28, scope: !6087)
!6102 = !DILocation(line: 338, column: 35, scope: !6087)
!6103 = !DILocation(line: 338, column: 2, scope: !6087)
!6104 = !DILocation(line: 341, column: 18, scope: !6087)
!6105 = !DILocation(line: 341, column: 2, scope: !6087)
!6106 = !DILocation(line: 342, column: 1, scope: !6087)
!6107 = distinct !DISubprogram(name: "ui_popup_bounds_block", scope: !3, file: !3, line: 344, type: !6108, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!6108 = !DISubroutineType(types: !6109)
!6109 = !{null, !5340, !1695, !1903, !5332}
!6110 = !DILocalVariable(name: "window", arg: 1, scope: !6107, file: !3, line: 344, type: !5340)
!6111 = !DILocation(line: 344, column: 45, scope: !6107)
!6112 = !DILocalVariable(name: "block", arg: 2, scope: !6107, file: !3, line: 344, type: !1695)
!6113 = !DILocation(line: 344, column: 62, scope: !6107)
!6114 = !DILocalVariable(name: "bounds_calc", arg: 3, scope: !6107, file: !3, line: 345, type: !1903)
!6115 = !DILocation(line: 345, column: 52, scope: !6107)
!6116 = !DILocalVariable(name: "xy", arg: 4, scope: !6107, file: !3, line: 345, type: !5332)
!6117 = !DILocation(line: 345, column: 75, scope: !6107)
!6118 = !DILocalVariable(name: "startx", scope: !6107, file: !3, line: 347, type: !1067)
!6119 = !DILocation(line: 347, column: 6, scope: !6107)
!6120 = !DILocalVariable(name: "starty", scope: !6107, file: !3, line: 347, type: !1067)
!6121 = !DILocation(line: 347, column: 14, scope: !6107)
!6122 = !DILocalVariable(name: "endx", scope: !6107, file: !3, line: 347, type: !1067)
!6123 = !DILocation(line: 347, column: 22, scope: !6107)
!6124 = !DILocalVariable(name: "endy", scope: !6107, file: !3, line: 347, type: !1067)
!6125 = !DILocation(line: 347, column: 28, scope: !6107)
!6126 = !DILocalVariable(name: "width", scope: !6107, file: !3, line: 347, type: !1067)
!6127 = !DILocation(line: 347, column: 34, scope: !6107)
!6128 = !DILocalVariable(name: "height", scope: !6107, file: !3, line: 347, type: !1067)
!6129 = !DILocation(line: 347, column: 41, scope: !6107)
!6130 = !DILocalVariable(name: "oldwidth", scope: !6107, file: !3, line: 347, type: !1067)
!6131 = !DILocation(line: 347, column: 49, scope: !6107)
!6132 = !DILocalVariable(name: "oldheight", scope: !6107, file: !3, line: 347, type: !1067)
!6133 = !DILocation(line: 347, column: 59, scope: !6107)
!6134 = !DILocalVariable(name: "oldbounds", scope: !6107, file: !3, line: 348, type: !1067)
!6135 = !DILocation(line: 348, column: 6, scope: !6107)
!6136 = !DILocalVariable(name: "xmax", scope: !6107, file: !3, line: 348, type: !1067)
!6137 = !DILocation(line: 348, column: 17, scope: !6107)
!6138 = !DILocalVariable(name: "ymax", scope: !6107, file: !3, line: 348, type: !1067)
!6139 = !DILocation(line: 348, column: 23, scope: !6107)
!6140 = !DILocalVariable(name: "margin", scope: !6107, file: !3, line: 349, type: !4766)
!6141 = !DILocation(line: 349, column: 12, scope: !6107)
!6142 = !DILocation(line: 351, column: 14, scope: !6107)
!6143 = !DILocation(line: 351, column: 21, scope: !6107)
!6144 = !DILocation(line: 351, column: 12, scope: !6107)
!6145 = !DILocation(line: 354, column: 18, scope: !6107)
!6146 = !DILocation(line: 354, column: 2, scope: !6107)
!6147 = !DILocation(line: 356, column: 28, scope: !6107)
!6148 = !DILocation(line: 356, column: 9, scope: !6107)
!6149 = !DILocation(line: 356, column: 7, scope: !6107)
!6150 = !DILocation(line: 357, column: 28, scope: !6107)
!6151 = !DILocation(line: 357, column: 9, scope: !6107)
!6152 = !DILocation(line: 357, column: 7, scope: !6107)
!6153 = !DILocation(line: 359, column: 31, scope: !6107)
!6154 = !DILocation(line: 359, column: 38, scope: !6107)
!6155 = !DILocation(line: 359, column: 14, scope: !6107)
!6156 = !DILocation(line: 359, column: 12, scope: !6107)
!6157 = !DILocation(line: 360, column: 31, scope: !6107)
!6158 = !DILocation(line: 360, column: 38, scope: !6107)
!6159 = !DILocation(line: 360, column: 14, scope: !6107)
!6160 = !DILocation(line: 360, column: 12, scope: !6107)
!6161 = !DILocation(line: 363, column: 6, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6107, file: !3, line: 363, column: 6)
!6163 = !DILocation(line: 363, column: 18, scope: !6162)
!6164 = !DILocation(line: 363, column: 6, scope: !6107)
!6165 = !DILocation(line: 364, column: 7, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6167, file: !3, line: 364, column: 7)
!6167 = distinct !DILexicalBlock(scope: !6162, file: !3, line: 363, column: 49)
!6168 = !DILocation(line: 364, column: 14, scope: !6166)
!6169 = !DILocation(line: 364, column: 19, scope: !6166)
!6170 = !DILocation(line: 364, column: 7, scope: !6167)
!6171 = !DILocation(line: 365, column: 27, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6166, file: !3, line: 364, column: 36)
!6173 = !DILocation(line: 365, column: 25, scope: !6172)
!6174 = !DILocation(line: 365, column: 20, scope: !6172)
!6175 = !DILocation(line: 365, column: 4, scope: !6172)
!6176 = !DILocation(line: 365, column: 11, scope: !6172)
!6177 = !DILocation(line: 365, column: 18, scope: !6172)
!6178 = !DILocation(line: 366, column: 25, scope: !6172)
!6179 = !DILocation(line: 366, column: 32, scope: !6172)
!6180 = !DILocation(line: 366, column: 39, scope: !6172)
!6181 = !DILocation(line: 366, column: 44, scope: !6172)
!6182 = !DILocation(line: 366, column: 4, scope: !6172)
!6183 = !DILocation(line: 367, column: 3, scope: !6172)
!6184 = !DILocation(line: 368, column: 2, scope: !6167)
!6185 = !DILocation(line: 371, column: 18, scope: !6107)
!6186 = !DILocation(line: 371, column: 2, scope: !6107)
!6187 = !DILocation(line: 371, column: 9, scope: !6107)
!6188 = !DILocation(line: 371, column: 16, scope: !6107)
!6189 = !DILocation(line: 372, column: 18, scope: !6107)
!6190 = !DILocation(line: 372, column: 2, scope: !6107)
!6191 = !DILocation(line: 375, column: 28, scope: !6107)
!6192 = !DILocation(line: 375, column: 35, scope: !6107)
!6193 = !DILocation(line: 375, column: 11, scope: !6107)
!6194 = !DILocation(line: 375, column: 9, scope: !6107)
!6195 = !DILocation(line: 376, column: 28, scope: !6107)
!6196 = !DILocation(line: 376, column: 35, scope: !6107)
!6197 = !DILocation(line: 376, column: 11, scope: !6107)
!6198 = !DILocation(line: 376, column: 9, scope: !6107)
!6199 = !DILocation(line: 379, column: 13, scope: !6107)
!6200 = !DILocation(line: 379, column: 22, scope: !6107)
!6201 = !DILocation(line: 379, column: 28, scope: !6107)
!6202 = !DILocation(line: 379, column: 39, scope: !6107)
!6203 = !DILocation(line: 379, column: 11, scope: !6107)
!6204 = !DILocation(line: 380, column: 14, scope: !6107)
!6205 = !DILocation(line: 380, column: 24, scope: !6107)
!6206 = !DILocation(line: 380, column: 30, scope: !6107)
!6207 = !DILocation(line: 380, column: 42, scope: !6107)
!6208 = !DILocation(line: 380, column: 12, scope: !6107)
!6209 = !DILocation(line: 384, column: 11, scope: !6107)
!6210 = !DILocation(line: 384, column: 19, scope: !6107)
!6211 = !DILocation(line: 384, column: 26, scope: !6107)
!6212 = !DILocation(line: 384, column: 31, scope: !6107)
!6213 = !DILocation(line: 384, column: 17, scope: !6107)
!6214 = !DILocation(line: 384, column: 39, scope: !6107)
!6215 = !DILocation(line: 384, column: 46, scope: !6107)
!6216 = !DILocation(line: 384, column: 51, scope: !6107)
!6217 = !DILocation(line: 384, column: 49, scope: !6107)
!6218 = !DILocation(line: 384, column: 60, scope: !6107)
!6219 = !DILocation(line: 384, column: 58, scope: !6107)
!6220 = !DILocation(line: 384, column: 38, scope: !6107)
!6221 = !DILocation(line: 384, column: 36, scope: !6107)
!6222 = !DILocation(line: 384, column: 9, scope: !6107)
!6223 = !DILocation(line: 385, column: 11, scope: !6107)
!6224 = !DILocation(line: 385, column: 19, scope: !6107)
!6225 = !DILocation(line: 385, column: 26, scope: !6107)
!6226 = !DILocation(line: 385, column: 31, scope: !6107)
!6227 = !DILocation(line: 385, column: 17, scope: !6107)
!6228 = !DILocation(line: 385, column: 39, scope: !6107)
!6229 = !DILocation(line: 385, column: 46, scope: !6107)
!6230 = !DILocation(line: 385, column: 51, scope: !6107)
!6231 = !DILocation(line: 385, column: 49, scope: !6107)
!6232 = !DILocation(line: 385, column: 61, scope: !6107)
!6233 = !DILocation(line: 385, column: 59, scope: !6107)
!6234 = !DILocation(line: 385, column: 38, scope: !6107)
!6235 = !DILocation(line: 385, column: 36, scope: !6107)
!6236 = !DILocation(line: 385, column: 9, scope: !6107)
!6237 = !DILocation(line: 387, column: 6, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6107, file: !3, line: 387, column: 6)
!6239 = !DILocation(line: 387, column: 13, scope: !6238)
!6240 = !DILocation(line: 387, column: 6, scope: !6107)
!6241 = !DILocation(line: 388, column: 10, scope: !6238)
!6242 = !DILocation(line: 388, column: 3, scope: !6238)
!6243 = !DILocation(line: 389, column: 6, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6107, file: !3, line: 389, column: 6)
!6245 = !DILocation(line: 389, column: 13, scope: !6244)
!6246 = !DILocation(line: 389, column: 6, scope: !6107)
!6247 = !DILocation(line: 390, column: 10, scope: !6244)
!6248 = !DILocation(line: 390, column: 3, scope: !6244)
!6249 = !DILocation(line: 392, column: 9, scope: !6107)
!6250 = !DILocation(line: 392, column: 18, scope: !6107)
!6251 = !DILocation(line: 392, column: 16, scope: !6107)
!6252 = !DILocation(line: 392, column: 7, scope: !6107)
!6253 = !DILocation(line: 393, column: 9, scope: !6107)
!6254 = !DILocation(line: 393, column: 18, scope: !6107)
!6255 = !DILocation(line: 393, column: 16, scope: !6107)
!6256 = !DILocation(line: 393, column: 7, scope: !6107)
!6257 = !DILocation(line: 395, column: 6, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6107, file: !3, line: 395, column: 6)
!6259 = !DILocation(line: 395, column: 13, scope: !6258)
!6260 = !DILocation(line: 395, column: 11, scope: !6258)
!6261 = !DILocation(line: 395, column: 6, scope: !6107)
!6262 = !DILocation(line: 396, column: 10, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 395, column: 19)
!6264 = !DILocation(line: 396, column: 15, scope: !6263)
!6265 = !DILocation(line: 396, column: 8, scope: !6263)
!6266 = !DILocation(line: 397, column: 12, scope: !6263)
!6267 = !DILocation(line: 397, column: 19, scope: !6263)
!6268 = !DILocation(line: 397, column: 17, scope: !6263)
!6269 = !DILocation(line: 397, column: 10, scope: !6263)
!6270 = !DILocation(line: 398, column: 2, scope: !6263)
!6271 = !DILocation(line: 399, column: 6, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6107, file: !3, line: 399, column: 6)
!6273 = !DILocation(line: 399, column: 13, scope: !6272)
!6274 = !DILocation(line: 399, column: 18, scope: !6272)
!6275 = !DILocation(line: 399, column: 11, scope: !6272)
!6276 = !DILocation(line: 399, column: 6, scope: !6107)
!6277 = !DILocation(line: 400, column: 10, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6272, file: !3, line: 399, column: 28)
!6279 = !DILocation(line: 400, column: 15, scope: !6278)
!6280 = !DILocation(line: 400, column: 8, scope: !6278)
!6281 = !DILocation(line: 401, column: 12, scope: !6278)
!6282 = !DILocation(line: 401, column: 19, scope: !6278)
!6283 = !DILocation(line: 401, column: 17, scope: !6278)
!6284 = !DILocation(line: 401, column: 10, scope: !6278)
!6285 = !DILocation(line: 402, column: 2, scope: !6278)
!6286 = !DILocation(line: 404, column: 21, scope: !6107)
!6287 = !DILocation(line: 404, column: 28, scope: !6107)
!6288 = !DILocation(line: 404, column: 37, scope: !6107)
!6289 = !DILocation(line: 404, column: 44, scope: !6107)
!6290 = !DILocation(line: 404, column: 49, scope: !6107)
!6291 = !DILocation(line: 404, column: 35, scope: !6107)
!6292 = !DILocation(line: 404, column: 55, scope: !6107)
!6293 = !DILocation(line: 404, column: 64, scope: !6107)
!6294 = !DILocation(line: 404, column: 71, scope: !6107)
!6295 = !DILocation(line: 404, column: 76, scope: !6107)
!6296 = !DILocation(line: 404, column: 62, scope: !6107)
!6297 = !DILocation(line: 404, column: 2, scope: !6107)
!6298 = !DILocation(line: 407, column: 18, scope: !6107)
!6299 = !DILocation(line: 407, column: 2, scope: !6107)
!6300 = !DILocation(line: 408, column: 1, scope: !6107)
!6301 = distinct !DISubprogram(name: "uiBlockEndAlign", scope: !3, file: !3, line: 2799, type: !3750, scopeLine: 2800, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!6302 = !DILocalVariable(name: "block", arg: 1, scope: !6301, file: !3, line: 2799, type: !1695)
!6303 = !DILocation(line: 2799, column: 31, scope: !6301)
!6304 = !DILocation(line: 2801, column: 2, scope: !6301)
!6305 = !DILocation(line: 2801, column: 9, scope: !6301)
!6306 = !DILocation(line: 2801, column: 14, scope: !6301)
!6307 = !DILocation(line: 2802, column: 1, scope: !6301)
!6308 = distinct !DISubprogram(name: "uiEndBlock", scope: !3, file: !3, line: 1262, type: !4994, scopeLine: 1263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!6309 = !DILocalVariable(name: "C", arg: 1, scope: !6308, file: !3, line: 1262, type: !4272)
!6310 = !DILocation(line: 1262, column: 33, scope: !6308)
!6311 = !DILocalVariable(name: "block", arg: 2, scope: !6308, file: !3, line: 1262, type: !1695)
!6312 = !DILocation(line: 1262, column: 45, scope: !6308)
!6313 = !DILocalVariable(name: "window", scope: !6308, file: !3, line: 1264, type: !5340)
!6314 = !DILocation(line: 1264, column: 12, scope: !6308)
!6315 = !DILocation(line: 1264, column: 35, scope: !6308)
!6316 = !DILocation(line: 1264, column: 21, scope: !6308)
!6317 = !DILocation(line: 1266, column: 16, scope: !6308)
!6318 = !DILocation(line: 1266, column: 19, scope: !6308)
!6319 = !DILocation(line: 1266, column: 27, scope: !6308)
!6320 = !DILocation(line: 1266, column: 35, scope: !6308)
!6321 = !DILocation(line: 1266, column: 47, scope: !6308)
!6322 = !DILocation(line: 1266, column: 2, scope: !6308)
!6323 = !DILocation(line: 1267, column: 1, scope: !6308)
!6324 = distinct !DISubprogram(name: "ui_fontscale", scope: !3, file: !3, line: 1271, type: !6325, scopeLine: 1272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!6325 = !DISubroutineType(types: !6326)
!6326 = !{null, !1544, !1534}
!6327 = !DILocalVariable(name: "points", arg: 1, scope: !6324, file: !3, line: 1271, type: !1544)
!6328 = !DILocation(line: 1271, column: 26, scope: !6324)
!6329 = !DILocalVariable(name: "aspect", arg: 2, scope: !6324, file: !3, line: 1271, type: !1534)
!6330 = !DILocation(line: 1271, column: 40, scope: !6324)
!6331 = !DILocation(line: 1273, column: 6, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6324, file: !3, line: 1273, column: 6)
!6333 = !DILocation(line: 1273, column: 13, scope: !6332)
!6334 = !DILocation(line: 1273, column: 20, scope: !6332)
!6335 = !DILocation(line: 1273, column: 23, scope: !6332)
!6336 = !DILocation(line: 1273, column: 30, scope: !6332)
!6337 = !DILocation(line: 1273, column: 6, scope: !6324)
!6338 = !DILocalVariable(name: "pointsf", scope: !6339, file: !3, line: 1274, type: !1534)
!6339 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 1273, column: 38)
!6340 = !DILocation(line: 1274, column: 9, scope: !6339)
!6341 = !DILocation(line: 1274, column: 20, scope: !6339)
!6342 = !DILocation(line: 1274, column: 19, scope: !6339)
!6343 = !DILocation(line: 1279, column: 14, scope: !6339)
!6344 = !DILocation(line: 1279, column: 11, scope: !6339)
!6345 = !DILocation(line: 1281, column: 7, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 1281, column: 7)
!6347 = !DILocation(line: 1281, column: 14, scope: !6346)
!6348 = !DILocation(line: 1281, column: 7, scope: !6339)
!6349 = !DILocation(line: 1282, column: 20, scope: !6346)
!6350 = !DILocation(line: 1282, column: 14, scope: !6346)
!6351 = !DILocation(line: 1282, column: 5, scope: !6346)
!6352 = !DILocation(line: 1282, column: 12, scope: !6346)
!6353 = !DILocation(line: 1282, column: 4, scope: !6346)
!6354 = !DILocation(line: 1284, column: 21, scope: !6346)
!6355 = !DILocation(line: 1284, column: 14, scope: !6346)
!6356 = !DILocation(line: 1284, column: 5, scope: !6346)
!6357 = !DILocation(line: 1284, column: 12, scope: !6346)
!6358 = !DILocation(line: 1285, column: 2, scope: !6339)
!6359 = !DILocation(line: 1286, column: 1, scope: !6324)
!6360 = distinct !DISubprogram(name: "uiDrawBlock", scope: !3, file: !3, line: 1307, type: !4994, scopeLine: 1308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!6361 = !DILocalVariable(name: "C", arg: 1, scope: !6360, file: !3, line: 1307, type: !4272)
!6362 = !DILocation(line: 1307, column: 34, scope: !6360)
!6363 = !DILocalVariable(name: "block", arg: 2, scope: !6360, file: !3, line: 1307, type: !1695)
!6364 = !DILocation(line: 1307, column: 46, scope: !6360)
!6365 = !DILocalVariable(name: "style", scope: !6360, file: !3, line: 1309, type: !5834)
!6366 = !DILocation(line: 1309, column: 10, scope: !6360)
!6367 = !DILocation(line: 1309, column: 19, scope: !6360)
!6368 = !DILocation(line: 1309, column: 18, scope: !6360)
!6369 = !DILocalVariable(name: "ar", scope: !6360, file: !3, line: 1310, type: !3112)
!6370 = !DILocation(line: 1310, column: 11, scope: !6360)
!6371 = !DILocalVariable(name: "but", scope: !6360, file: !3, line: 1311, type: !1558)
!6372 = !DILocation(line: 1311, column: 9, scope: !6360)
!6373 = !DILocalVariable(name: "rect", scope: !6360, file: !3, line: 1312, type: !1878)
!6374 = !DILocation(line: 1312, column: 7, scope: !6360)
!6375 = !DILocalVariable(name: "multisample_enabled", scope: !6360, file: !3, line: 1313, type: !1067)
!6376 = !DILocation(line: 1313, column: 6, scope: !6360)
!6377 = !DILocation(line: 1316, column: 19, scope: !6360)
!6378 = !DILocation(line: 1316, column: 7, scope: !6360)
!6379 = !DILocation(line: 1316, column: 5, scope: !6360)
!6380 = !DILocation(line: 1317, column: 7, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 1317, column: 6)
!6382 = !DILocation(line: 1317, column: 6, scope: !6360)
!6383 = !DILocation(line: 1318, column: 22, scope: !6381)
!6384 = !DILocation(line: 1318, column: 8, scope: !6381)
!6385 = !DILocation(line: 1318, column: 6, scope: !6381)
!6386 = !DILocation(line: 1318, column: 3, scope: !6381)
!6387 = !DILocation(line: 1320, column: 7, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 1320, column: 6)
!6389 = !DILocation(line: 1320, column: 14, scope: !6388)
!6390 = !DILocation(line: 1320, column: 6, scope: !6360)
!6391 = !DILocation(line: 1321, column: 14, scope: !6388)
!6392 = !DILocation(line: 1321, column: 17, scope: !6388)
!6393 = !DILocation(line: 1321, column: 3, scope: !6388)
!6394 = !DILocation(line: 1324, column: 24, scope: !6360)
!6395 = !DILocation(line: 1324, column: 22, scope: !6360)
!6396 = !DILocation(line: 1325, column: 6, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 1325, column: 6)
!6398 = !DILocation(line: 1325, column: 6, scope: !6360)
!6399 = !DILocation(line: 1326, column: 3, scope: !6397)
!6400 = !DILocation(line: 1329, column: 2, scope: !6360)
!6401 = !DILocation(line: 1332, column: 22, scope: !6360)
!6402 = !DILocation(line: 1332, column: 33, scope: !6360)
!6403 = !DILocation(line: 1332, column: 41, scope: !6360)
!6404 = !DILocation(line: 1332, column: 48, scope: !6360)
!6405 = !DILocation(line: 1332, column: 2, scope: !6360)
!6406 = !DILocation(line: 1333, column: 22, scope: !6360)
!6407 = !DILocation(line: 1333, column: 33, scope: !6360)
!6408 = !DILocation(line: 1333, column: 41, scope: !6360)
!6409 = !DILocation(line: 1333, column: 48, scope: !6360)
!6410 = !DILocation(line: 1333, column: 2, scope: !6360)
!6411 = !DILocation(line: 1334, column: 22, scope: !6360)
!6412 = !DILocation(line: 1334, column: 34, scope: !6360)
!6413 = !DILocation(line: 1334, column: 42, scope: !6360)
!6414 = !DILocation(line: 1334, column: 49, scope: !6360)
!6415 = !DILocation(line: 1334, column: 2, scope: !6360)
!6416 = !DILocation(line: 1335, column: 22, scope: !6360)
!6417 = !DILocation(line: 1335, column: 29, scope: !6360)
!6418 = !DILocation(line: 1335, column: 37, scope: !6360)
!6419 = !DILocation(line: 1335, column: 44, scope: !6360)
!6420 = !DILocation(line: 1335, column: 2, scope: !6360)
!6421 = !DILocation(line: 1338, column: 29, scope: !6360)
!6422 = !DILocation(line: 1338, column: 33, scope: !6360)
!6423 = !DILocation(line: 1338, column: 2, scope: !6360)
!6424 = !DILocation(line: 1341, column: 2, scope: !6360)
!6425 = !DILocation(line: 1342, column: 2, scope: !6360)
!6426 = !DILocation(line: 1343, column: 2, scope: !6360)
!6427 = !DILocation(line: 1344, column: 2, scope: !6360)
!6428 = !DILocation(line: 1345, column: 2, scope: !6360)
!6429 = !DILocation(line: 1347, column: 21, scope: !6360)
!6430 = !DILocation(line: 1347, column: 2, scope: !6360)
!6431 = !DILocation(line: 1350, column: 6, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 1350, column: 6)
!6433 = !DILocation(line: 1350, column: 13, scope: !6432)
!6434 = !DILocation(line: 1350, column: 18, scope: !6432)
!6435 = !DILocation(line: 1350, column: 6, scope: !6360)
!6436 = !DILocation(line: 1351, column: 22, scope: !6432)
!6437 = !DILocation(line: 1351, column: 3, scope: !6432)
!6438 = !DILocation(line: 1352, column: 11, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6432, file: !3, line: 1352, column: 11)
!6440 = !DILocation(line: 1352, column: 18, scope: !6439)
!6441 = !DILocation(line: 1352, column: 23, scope: !6439)
!6442 = !DILocation(line: 1352, column: 11, scope: !6432)
!6443 = !DILocation(line: 1353, column: 29, scope: !6439)
!6444 = !DILocation(line: 1353, column: 3, scope: !6439)
!6445 = !DILocation(line: 1354, column: 11, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6439, file: !3, line: 1354, column: 11)
!6447 = !DILocation(line: 1354, column: 18, scope: !6446)
!6448 = !DILocation(line: 1354, column: 11, scope: !6439)
!6449 = !DILocation(line: 1355, column: 33, scope: !6446)
!6450 = !DILocation(line: 1355, column: 76, scope: !6446)
!6451 = !DILocation(line: 1355, column: 47, scope: !6446)
!6452 = !DILocation(line: 1355, column: 3, scope: !6446)
!6453 = !DILocation(line: 1358, column: 13, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 1358, column: 2)
!6455 = !DILocation(line: 1358, column: 20, scope: !6454)
!6456 = !DILocation(line: 1358, column: 28, scope: !6454)
!6457 = !DILocation(line: 1358, column: 11, scope: !6454)
!6458 = !DILocation(line: 1358, column: 7, scope: !6454)
!6459 = !DILocation(line: 1358, column: 35, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6454, file: !3, line: 1358, column: 2)
!6461 = !DILocation(line: 1358, column: 2, scope: !6454)
!6462 = !DILocation(line: 1359, column: 9, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6464, file: !3, line: 1359, column: 7)
!6464 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 1358, column: 57)
!6465 = !DILocation(line: 1359, column: 14, scope: !6463)
!6466 = !DILocation(line: 1359, column: 19, scope: !6463)
!6467 = !DILocation(line: 1359, column: 7, scope: !6464)
!6468 = !DILocation(line: 1360, column: 31, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 1359, column: 49)
!6470 = !DILocation(line: 1360, column: 35, scope: !6469)
!6471 = !DILocation(line: 1360, column: 42, scope: !6469)
!6472 = !DILocation(line: 1360, column: 4, scope: !6469)
!6473 = !DILocation(line: 1364, column: 13, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6469, file: !3, line: 1364, column: 8)
!6475 = !DILocation(line: 1364, column: 25, scope: !6474)
!6476 = !DILocation(line: 1364, column: 18, scope: !6474)
!6477 = !DILocation(line: 1364, column: 30, scope: !6474)
!6478 = !DILocation(line: 1364, column: 38, scope: !6474)
!6479 = !DILocation(line: 1364, column: 50, scope: !6474)
!6480 = !DILocation(line: 1364, column: 43, scope: !6474)
!6481 = !DILocation(line: 1364, column: 8, scope: !6469)
!6482 = !DILocation(line: 1365, column: 17, scope: !6474)
!6483 = !DILocation(line: 1365, column: 20, scope: !6474)
!6484 = !DILocation(line: 1365, column: 32, scope: !6474)
!6485 = !DILocation(line: 1365, column: 5, scope: !6474)
!6486 = !DILocation(line: 1366, column: 3, scope: !6469)
!6487 = !DILocation(line: 1367, column: 2, scope: !6464)
!6488 = !DILocation(line: 1358, column: 46, scope: !6460)
!6489 = !DILocation(line: 1358, column: 51, scope: !6460)
!6490 = !DILocation(line: 1358, column: 44, scope: !6460)
!6491 = !DILocation(line: 1358, column: 2, scope: !6460)
!6492 = distinct !{!6492, !6461, !6493}
!6493 = !DILocation(line: 1367, column: 2, scope: !6454)
!6494 = !DILocation(line: 1370, column: 2, scope: !6360)
!6495 = !DILocation(line: 1371, column: 2, scope: !6360)
!6496 = !DILocation(line: 1372, column: 2, scope: !6360)
!6497 = !DILocation(line: 1373, column: 2, scope: !6360)
!6498 = !DILocation(line: 1375, column: 6, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 1375, column: 6)
!6500 = !DILocation(line: 1375, column: 6, scope: !6360)
!6501 = !DILocation(line: 1376, column: 3, scope: !6499)
!6502 = !DILocation(line: 1378, column: 16, scope: !6360)
!6503 = !DILocation(line: 1378, column: 2, scope: !6360)
!6504 = !DILocation(line: 1379, column: 1, scope: !6360)
!6505 = distinct !DISubprogram(name: "ui_but_to_pixelrect", scope: !3, file: !3, line: 1289, type: !6506, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!6506 = !DISubroutineType(types: !6507)
!6507 = !{null, !1877, !3307, !1695, !1558}
!6508 = !DILocalVariable(name: "rect", arg: 1, scope: !6505, file: !3, line: 1289, type: !1877)
!6509 = !DILocation(line: 1289, column: 39, scope: !6505)
!6510 = !DILocalVariable(name: "ar", arg: 2, scope: !6505, file: !3, line: 1289, type: !3307)
!6511 = !DILocation(line: 1289, column: 60, scope: !6505)
!6512 = !DILocalVariable(name: "block", arg: 3, scope: !6505, file: !3, line: 1289, type: !1695)
!6513 = !DILocation(line: 1289, column: 73, scope: !6505)
!6514 = !DILocalVariable(name: "but", arg: 4, scope: !6505, file: !3, line: 1289, type: !1558)
!6515 = !DILocation(line: 1289, column: 87, scope: !6505)
!6516 = !DILocalVariable(name: "rectf", scope: !6505, file: !3, line: 1291, type: !1590)
!6517 = !DILocation(line: 1291, column: 7, scope: !6505)
!6518 = !DILocation(line: 1293, column: 26, scope: !6505)
!6519 = !DILocation(line: 1293, column: 30, scope: !6505)
!6520 = !DILocation(line: 1293, column: 46, scope: !6505)
!6521 = !DILocation(line: 1293, column: 45, scope: !6505)
!6522 = !DILocation(line: 1293, column: 54, scope: !6505)
!6523 = !DILocation(line: 1293, column: 59, scope: !6505)
!6524 = !DILocation(line: 1293, column: 67, scope: !6505)
!6525 = !DILocation(line: 1293, column: 74, scope: !6505)
!6526 = !DILocation(line: 1293, column: 2, scope: !6505)
!6527 = !DILocation(line: 1295, column: 16, scope: !6505)
!6528 = !DILocation(line: 1295, column: 20, scope: !6505)
!6529 = !DILocation(line: 1295, column: 27, scope: !6505)
!6530 = !DILocation(line: 1295, column: 8, scope: !6505)
!6531 = !DILocation(line: 1295, column: 13, scope: !6505)
!6532 = !DILocation(line: 1296, column: 16, scope: !6505)
!6533 = !DILocation(line: 1296, column: 20, scope: !6505)
!6534 = !DILocation(line: 1296, column: 27, scope: !6505)
!6535 = !DILocation(line: 1296, column: 8, scope: !6505)
!6536 = !DILocation(line: 1296, column: 13, scope: !6505)
!6537 = !DILocation(line: 1297, column: 16, scope: !6505)
!6538 = !DILocation(line: 1297, column: 20, scope: !6505)
!6539 = !DILocation(line: 1297, column: 27, scope: !6505)
!6540 = !DILocation(line: 1297, column: 8, scope: !6505)
!6541 = !DILocation(line: 1297, column: 13, scope: !6505)
!6542 = !DILocation(line: 1298, column: 16, scope: !6505)
!6543 = !DILocation(line: 1298, column: 20, scope: !6505)
!6544 = !DILocation(line: 1298, column: 27, scope: !6505)
!6545 = !DILocation(line: 1298, column: 8, scope: !6505)
!6546 = !DILocation(line: 1298, column: 13, scope: !6505)
!6547 = !DILocation(line: 1300, column: 28, scope: !6505)
!6548 = !DILocation(line: 1300, column: 15, scope: !6505)
!6549 = !DILocation(line: 1300, column: 2, scope: !6505)
!6550 = !DILocation(line: 1300, column: 8, scope: !6505)
!6551 = !DILocation(line: 1300, column: 13, scope: !6505)
!6552 = !DILocation(line: 1301, column: 28, scope: !6505)
!6553 = !DILocation(line: 1301, column: 15, scope: !6505)
!6554 = !DILocation(line: 1301, column: 2, scope: !6505)
!6555 = !DILocation(line: 1301, column: 8, scope: !6505)
!6556 = !DILocation(line: 1301, column: 13, scope: !6505)
!6557 = !DILocation(line: 1302, column: 28, scope: !6505)
!6558 = !DILocation(line: 1302, column: 15, scope: !6505)
!6559 = !DILocation(line: 1302, column: 2, scope: !6505)
!6560 = !DILocation(line: 1302, column: 8, scope: !6505)
!6561 = !DILocation(line: 1302, column: 13, scope: !6505)
!6562 = !DILocation(line: 1303, column: 28, scope: !6505)
!6563 = !DILocation(line: 1303, column: 15, scope: !6505)
!6564 = !DILocation(line: 1303, column: 2, scope: !6505)
!6565 = !DILocation(line: 1303, column: 8, scope: !6505)
!6566 = !DILocation(line: 1303, column: 13, scope: !6505)
!6567 = !DILocation(line: 1304, column: 1, scope: !6505)
!6568 = distinct !DISubprogram(name: "ui_draw_links", scope: !3, file: !3, line: 505, type: !3750, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!6569 = !DILocalVariable(name: "block", arg: 1, scope: !6568, file: !3, line: 505, type: !1695)
!6570 = !DILocation(line: 505, column: 36, scope: !6568)
!6571 = !DILocalVariable(name: "but", scope: !6568, file: !3, line: 507, type: !1558)
!6572 = !DILocation(line: 507, column: 9, scope: !6568)
!6573 = !DILocalVariable(name: "line", scope: !6568, file: !3, line: 508, type: !6574)
!6574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6575, size: 64)
!6575 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiLinkLine", file: !956, line: 182, baseType: !6576)
!6576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiLinkLine", file: !956, line: 178, size: 320, elements: !6577)
!6577 = !{!6578, !6580, !6581, !6582, !6583, !6584}
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6576, file: !956, line: 179, baseType: !6579, size: 64)
!6579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6576, size: 64)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6576, file: !956, line: 179, baseType: !6579, size: 64, offset: 64)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !6576, file: !956, line: 180, baseType: !1563, size: 64, offset: 128)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !6576, file: !956, line: 180, baseType: !1563, size: 64, offset: 192)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6576, file: !956, line: 181, baseType: !1545, size: 16, offset: 256)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "deactive", scope: !6576, file: !956, line: 181, baseType: !1545, size: 16, offset: 272)
!6585 = !DILocation(line: 508, column: 14, scope: !6568)
!6586 = !DILocalVariable(name: "found_selectline", scope: !6568, file: !3, line: 513, type: !1550)
!6587 = !DILocation(line: 513, column: 7, scope: !6568)
!6588 = !DILocalVariable(name: "found_activeline", scope: !6568, file: !3, line: 514, type: !1550)
!6589 = !DILocation(line: 514, column: 7, scope: !6568)
!6590 = !DILocation(line: 516, column: 13, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6568, file: !3, line: 516, column: 2)
!6592 = !DILocation(line: 516, column: 20, scope: !6591)
!6593 = !DILocation(line: 516, column: 28, scope: !6591)
!6594 = !DILocation(line: 516, column: 11, scope: !6591)
!6595 = !DILocation(line: 516, column: 7, scope: !6591)
!6596 = !DILocation(line: 516, column: 35, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 516, column: 2)
!6598 = !DILocation(line: 516, column: 2, scope: !6591)
!6599 = !DILocation(line: 517, column: 7, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6601, file: !3, line: 517, column: 7)
!6601 = distinct !DILexicalBlock(scope: !6597, file: !3, line: 516, column: 57)
!6602 = !DILocation(line: 517, column: 12, scope: !6600)
!6603 = !DILocation(line: 517, column: 17, scope: !6600)
!6604 = !DILocation(line: 517, column: 25, scope: !6600)
!6605 = !DILocation(line: 517, column: 28, scope: !6600)
!6606 = !DILocation(line: 517, column: 33, scope: !6600)
!6607 = !DILocation(line: 517, column: 7, scope: !6601)
!6608 = !DILocation(line: 518, column: 16, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6610, file: !3, line: 518, column: 4)
!6610 = distinct !DILexicalBlock(scope: !6600, file: !3, line: 517, column: 39)
!6611 = !DILocation(line: 518, column: 21, scope: !6609)
!6612 = !DILocation(line: 518, column: 27, scope: !6609)
!6613 = !DILocation(line: 518, column: 33, scope: !6609)
!6614 = !DILocation(line: 518, column: 14, scope: !6609)
!6615 = !DILocation(line: 518, column: 9, scope: !6609)
!6616 = !DILocation(line: 518, column: 40, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6609, file: !3, line: 518, column: 4)
!6618 = !DILocation(line: 518, column: 4, scope: !6609)
!6619 = !DILocation(line: 519, column: 11, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6621, file: !3, line: 519, column: 9)
!6621 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 518, column: 65)
!6622 = !DILocation(line: 519, column: 17, scope: !6620)
!6623 = !DILocation(line: 519, column: 23, scope: !6620)
!6624 = !DILocation(line: 519, column: 28, scope: !6620)
!6625 = !DILocation(line: 519, column: 41, scope: !6620)
!6626 = !DILocation(line: 519, column: 46, scope: !6620)
!6627 = !DILocation(line: 519, column: 52, scope: !6620)
!6628 = !DILocation(line: 519, column: 56, scope: !6620)
!6629 = !DILocation(line: 519, column: 61, scope: !6620)
!6630 = !DILocation(line: 519, column: 9, scope: !6621)
!6631 = !DILocation(line: 520, column: 10, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6633, file: !3, line: 520, column: 10)
!6633 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 519, column: 75)
!6634 = !DILocation(line: 520, column: 16, scope: !6632)
!6635 = !DILocation(line: 520, column: 10, scope: !6633)
!6636 = !DILocation(line: 521, column: 24, scope: !6632)
!6637 = !DILocation(line: 521, column: 7, scope: !6632)
!6638 = !DILocation(line: 522, column: 5, scope: !6633)
!6639 = !DILocation(line: 524, column: 23, scope: !6620)
!6640 = !DILocation(line: 526, column: 10, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6621, file: !3, line: 526, column: 9)
!6642 = !DILocation(line: 526, column: 16, scope: !6641)
!6643 = !DILocation(line: 526, column: 22, scope: !6641)
!6644 = !DILocation(line: 526, column: 27, scope: !6641)
!6645 = !DILocation(line: 526, column: 40, scope: !6641)
!6646 = !DILocation(line: 526, column: 44, scope: !6641)
!6647 = !DILocation(line: 526, column: 50, scope: !6641)
!6648 = !DILocation(line: 526, column: 54, scope: !6641)
!6649 = !DILocation(line: 526, column: 59, scope: !6641)
!6650 = !DILocation(line: 526, column: 9, scope: !6621)
!6651 = !DILocation(line: 527, column: 23, scope: !6641)
!6652 = !DILocation(line: 527, column: 6, scope: !6641)
!6653 = !DILocation(line: 528, column: 4, scope: !6621)
!6654 = !DILocation(line: 518, column: 53, scope: !6617)
!6655 = !DILocation(line: 518, column: 59, scope: !6617)
!6656 = !DILocation(line: 518, column: 51, scope: !6617)
!6657 = !DILocation(line: 518, column: 4, scope: !6617)
!6658 = distinct !{!6658, !6618, !6659}
!6659 = !DILocation(line: 528, column: 4, scope: !6609)
!6660 = !DILocation(line: 529, column: 3, scope: !6610)
!6661 = !DILocation(line: 530, column: 2, scope: !6601)
!6662 = !DILocation(line: 516, column: 46, scope: !6597)
!6663 = !DILocation(line: 516, column: 51, scope: !6597)
!6664 = !DILocation(line: 516, column: 44, scope: !6597)
!6665 = !DILocation(line: 516, column: 2, scope: !6597)
!6666 = distinct !{!6666, !6598, !6667}
!6667 = !DILocation(line: 530, column: 2, scope: !6591)
!6668 = !DILocation(line: 533, column: 13, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6568, file: !3, line: 533, column: 2)
!6670 = !DILocation(line: 533, column: 20, scope: !6669)
!6671 = !DILocation(line: 533, column: 28, scope: !6669)
!6672 = !DILocation(line: 533, column: 11, scope: !6669)
!6673 = !DILocation(line: 533, column: 7, scope: !6669)
!6674 = !DILocation(line: 533, column: 35, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6669, file: !3, line: 533, column: 2)
!6676 = !DILocation(line: 533, column: 2, scope: !6669)
!6677 = !DILocation(line: 534, column: 7, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 534, column: 7)
!6679 = distinct !DILexicalBlock(scope: !6675, file: !3, line: 533, column: 57)
!6680 = !DILocation(line: 534, column: 12, scope: !6678)
!6681 = !DILocation(line: 534, column: 17, scope: !6678)
!6682 = !DILocation(line: 534, column: 25, scope: !6678)
!6683 = !DILocation(line: 534, column: 28, scope: !6678)
!6684 = !DILocation(line: 534, column: 33, scope: !6678)
!6685 = !DILocation(line: 534, column: 7, scope: !6679)
!6686 = !DILocation(line: 535, column: 16, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6688, file: !3, line: 535, column: 4)
!6688 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 534, column: 39)
!6689 = !DILocation(line: 535, column: 21, scope: !6687)
!6690 = !DILocation(line: 535, column: 27, scope: !6687)
!6691 = !DILocation(line: 535, column: 33, scope: !6687)
!6692 = !DILocation(line: 535, column: 14, scope: !6687)
!6693 = !DILocation(line: 535, column: 9, scope: !6687)
!6694 = !DILocation(line: 535, column: 40, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6687, file: !3, line: 535, column: 4)
!6696 = !DILocation(line: 535, column: 4, scope: !6687)
!6697 = !DILocation(line: 536, column: 11, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6699, file: !3, line: 536, column: 9)
!6699 = distinct !DILexicalBlock(scope: !6695, file: !3, line: 535, column: 65)
!6700 = !DILocation(line: 536, column: 17, scope: !6698)
!6701 = !DILocation(line: 536, column: 23, scope: !6698)
!6702 = !DILocation(line: 536, column: 28, scope: !6698)
!6703 = !DILocation(line: 536, column: 41, scope: !6698)
!6704 = !DILocation(line: 536, column: 46, scope: !6698)
!6705 = !DILocation(line: 536, column: 52, scope: !6698)
!6706 = !DILocation(line: 536, column: 56, scope: !6698)
!6707 = !DILocation(line: 536, column: 61, scope: !6698)
!6708 = !DILocation(line: 536, column: 9, scope: !6699)
!6709 = !DILocation(line: 537, column: 11, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6711, file: !3, line: 537, column: 10)
!6711 = distinct !DILexicalBlock(scope: !6698, file: !3, line: 536, column: 75)
!6712 = !DILocation(line: 537, column: 17, scope: !6710)
!6713 = !DILocation(line: 537, column: 10, scope: !6711)
!6714 = !DILocation(line: 538, column: 24, scope: !6710)
!6715 = !DILocation(line: 538, column: 7, scope: !6710)
!6716 = !DILocation(line: 539, column: 5, scope: !6711)
!6717 = !DILocation(line: 540, column: 4, scope: !6699)
!6718 = !DILocation(line: 535, column: 53, scope: !6695)
!6719 = !DILocation(line: 535, column: 59, scope: !6695)
!6720 = !DILocation(line: 535, column: 51, scope: !6695)
!6721 = !DILocation(line: 535, column: 4, scope: !6695)
!6722 = distinct !{!6722, !6696, !6723}
!6723 = !DILocation(line: 540, column: 4, scope: !6687)
!6724 = !DILocation(line: 541, column: 3, scope: !6688)
!6725 = !DILocation(line: 542, column: 2, scope: !6679)
!6726 = !DILocation(line: 533, column: 46, scope: !6675)
!6727 = !DILocation(line: 533, column: 51, scope: !6675)
!6728 = !DILocation(line: 533, column: 44, scope: !6675)
!6729 = !DILocation(line: 533, column: 2, scope: !6675)
!6730 = distinct !{!6730, !6676, !6731}
!6731 = !DILocation(line: 542, column: 2, scope: !6669)
!6732 = !DILocation(line: 546, column: 6, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6568, file: !3, line: 546, column: 6)
!6734 = !DILocation(line: 546, column: 6, scope: !6568)
!6735 = !DILocation(line: 547, column: 14, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 547, column: 3)
!6737 = distinct !DILexicalBlock(scope: !6733, file: !3, line: 546, column: 24)
!6738 = !DILocation(line: 547, column: 21, scope: !6736)
!6739 = !DILocation(line: 547, column: 29, scope: !6736)
!6740 = !DILocation(line: 547, column: 12, scope: !6736)
!6741 = !DILocation(line: 547, column: 8, scope: !6736)
!6742 = !DILocation(line: 547, column: 36, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 547, column: 3)
!6744 = !DILocation(line: 547, column: 3, scope: !6736)
!6745 = !DILocation(line: 548, column: 8, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6747, file: !3, line: 548, column: 8)
!6747 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 547, column: 58)
!6748 = !DILocation(line: 548, column: 13, scope: !6746)
!6749 = !DILocation(line: 548, column: 18, scope: !6746)
!6750 = !DILocation(line: 548, column: 26, scope: !6746)
!6751 = !DILocation(line: 548, column: 29, scope: !6746)
!6752 = !DILocation(line: 548, column: 34, scope: !6746)
!6753 = !DILocation(line: 548, column: 8, scope: !6747)
!6754 = !DILocation(line: 549, column: 17, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6756, file: !3, line: 549, column: 5)
!6756 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 548, column: 40)
!6757 = !DILocation(line: 549, column: 22, scope: !6755)
!6758 = !DILocation(line: 549, column: 28, scope: !6755)
!6759 = !DILocation(line: 549, column: 34, scope: !6755)
!6760 = !DILocation(line: 549, column: 15, scope: !6755)
!6761 = !DILocation(line: 549, column: 10, scope: !6755)
!6762 = !DILocation(line: 549, column: 41, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6755, file: !3, line: 549, column: 5)
!6764 = !DILocation(line: 549, column: 5, scope: !6755)
!6765 = !DILocation(line: 550, column: 11, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 550, column: 10)
!6767 = distinct !DILexicalBlock(scope: !6763, file: !3, line: 549, column: 66)
!6768 = !DILocation(line: 550, column: 17, scope: !6766)
!6769 = !DILocation(line: 550, column: 23, scope: !6766)
!6770 = !DILocation(line: 550, column: 28, scope: !6766)
!6771 = !DILocation(line: 550, column: 41, scope: !6766)
!6772 = !DILocation(line: 550, column: 45, scope: !6766)
!6773 = !DILocation(line: 550, column: 51, scope: !6766)
!6774 = !DILocation(line: 550, column: 55, scope: !6766)
!6775 = !DILocation(line: 550, column: 60, scope: !6766)
!6776 = !DILocation(line: 550, column: 10, scope: !6767)
!6777 = !DILocation(line: 551, column: 24, scope: !6766)
!6778 = !DILocation(line: 551, column: 31, scope: !6766)
!6779 = !DILocation(line: 551, column: 30, scope: !6766)
!6780 = !DILocation(line: 551, column: 7, scope: !6766)
!6781 = !DILocation(line: 552, column: 5, scope: !6767)
!6782 = !DILocation(line: 549, column: 54, scope: !6763)
!6783 = !DILocation(line: 549, column: 60, scope: !6763)
!6784 = !DILocation(line: 549, column: 52, scope: !6763)
!6785 = !DILocation(line: 549, column: 5, scope: !6763)
!6786 = distinct !{!6786, !6764, !6787}
!6787 = !DILocation(line: 552, column: 5, scope: !6755)
!6788 = !DILocation(line: 553, column: 4, scope: !6756)
!6789 = !DILocation(line: 554, column: 3, scope: !6747)
!6790 = !DILocation(line: 547, column: 47, scope: !6743)
!6791 = !DILocation(line: 547, column: 52, scope: !6743)
!6792 = !DILocation(line: 547, column: 45, scope: !6743)
!6793 = !DILocation(line: 547, column: 3, scope: !6743)
!6794 = distinct !{!6794, !6744, !6795}
!6795 = !DILocation(line: 554, column: 3, scope: !6736)
!6796 = !DILocation(line: 555, column: 2, scope: !6737)
!6797 = !DILocation(line: 556, column: 1, scope: !6568)
!6798 = distinct !DISubprogram(name: "ui_is_but_push_ex", scope: !3, file: !3, line: 1388, type: !6799, scopeLine: 1389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!6799 = !DISubroutineType(types: !6800)
!6800 = !{!1067, !1558, !3254}
!6801 = !DILocalVariable(name: "but", arg: 1, scope: !6798, file: !3, line: 1388, type: !1558)
!6802 = !DILocation(line: 1388, column: 30, scope: !6798)
!6803 = !DILocalVariable(name: "value", arg: 2, scope: !6798, file: !3, line: 1388, type: !3254)
!6804 = !DILocation(line: 1388, column: 43, scope: !6798)
!6805 = !DILocalVariable(name: "is_push", scope: !6798, file: !3, line: 1390, type: !1067)
!6806 = !DILocation(line: 1390, column: 6, scope: !6798)
!6807 = !DILocation(line: 1392, column: 6, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 1392, column: 6)
!6809 = !DILocation(line: 1392, column: 11, scope: !6808)
!6810 = !DILocation(line: 1392, column: 6, scope: !6798)
!6811 = !DILocalVariable(name: "state", scope: !6812, file: !3, line: 1393, type: !4461)
!6812 = distinct !DILexicalBlock(scope: !6808, file: !3, line: 1392, column: 16)
!6813 = !DILocation(line: 1393, column: 14, scope: !6812)
!6814 = !DILocation(line: 1393, column: 22, scope: !6812)
!6815 = !DILocalVariable(name: "lvalue", scope: !6812, file: !3, line: 1394, type: !1067)
!6816 = !DILocation(line: 1394, column: 7, scope: !6812)
!6817 = !DILocation(line: 1395, column: 3, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 1395, column: 3)
!6819 = !DILocation(line: 1395, column: 3, scope: !6812)
!6820 = !DILocation(line: 1395, column: 3, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6818, file: !3, line: 1395, column: 3)
!6822 = !DILocation(line: 1396, column: 18, scope: !6812)
!6823 = !DILocation(line: 1396, column: 17, scope: !6812)
!6824 = !DILocation(line: 1396, column: 12, scope: !6812)
!6825 = !DILocation(line: 1396, column: 10, scope: !6812)
!6826 = !DILocation(line: 1397, column: 7, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 1397, column: 7)
!6828 = !DILocation(line: 1397, column: 7, scope: !6812)
!6829 = !DILocation(line: 1398, column: 14, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6827, file: !3, line: 1397, column: 45)
!6831 = !DILocation(line: 1398, column: 12, scope: !6830)
!6832 = !DILocation(line: 1399, column: 3, scope: !6830)
!6833 = !DILocation(line: 1401, column: 15, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6827, file: !3, line: 1400, column: 8)
!6835 = !DILocation(line: 1401, column: 14, scope: !6834)
!6836 = !DILocation(line: 1401, column: 12, scope: !6834)
!6837 = !DILocation(line: 1403, column: 2, scope: !6812)
!6838 = !DILocation(line: 1405, column: 11, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6808, file: !3, line: 1404, column: 7)
!6840 = !DILocation(line: 1405, column: 16, scope: !6839)
!6841 = !DILocation(line: 1405, column: 3, scope: !6839)
!6842 = !DILocation(line: 1410, column: 13, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6839, file: !3, line: 1405, column: 22)
!6844 = !DILocation(line: 1411, column: 5, scope: !6843)
!6845 = !DILocation(line: 1416, column: 5, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6843, file: !3, line: 1416, column: 5)
!6847 = !DILocation(line: 1416, column: 5, scope: !6843)
!6848 = !DILocation(line: 1416, column: 5, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6846, file: !3, line: 1416, column: 5)
!6850 = !DILocation(line: 1417, column: 10, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6843, file: !3, line: 1417, column: 9)
!6852 = !DILocation(line: 1417, column: 9, scope: !6851)
!6853 = !DILocation(line: 1417, column: 27, scope: !6851)
!6854 = !DILocation(line: 1417, column: 32, scope: !6851)
!6855 = !DILocation(line: 1417, column: 19, scope: !6851)
!6856 = !DILocation(line: 1417, column: 16, scope: !6851)
!6857 = !DILocation(line: 1417, column: 9, scope: !6843)
!6858 = !DILocation(line: 1417, column: 49, scope: !6851)
!6859 = !DILocation(line: 1417, column: 41, scope: !6851)
!6860 = !DILocation(line: 1418, column: 5, scope: !6843)
!6861 = !DILocation(line: 1422, column: 5, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6843, file: !3, line: 1422, column: 5)
!6863 = !DILocation(line: 1422, column: 5, scope: !6843)
!6864 = !DILocation(line: 1422, column: 5, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6862, file: !3, line: 1422, column: 5)
!6866 = !DILocation(line: 1423, column: 10, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6843, file: !3, line: 1423, column: 9)
!6868 = !DILocation(line: 1423, column: 9, scope: !6867)
!6869 = !DILocation(line: 1423, column: 16, scope: !6867)
!6870 = !DILocation(line: 1423, column: 9, scope: !6843)
!6871 = !DILocation(line: 1423, column: 32, scope: !6867)
!6872 = !DILocation(line: 1423, column: 24, scope: !6867)
!6873 = !DILocation(line: 1424, column: 5, scope: !6843)
!6874 = !DILocation(line: 1427, column: 5, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6843, file: !3, line: 1427, column: 5)
!6876 = !DILocation(line: 1427, column: 5, scope: !6843)
!6877 = !DILocation(line: 1427, column: 5, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 1427, column: 5)
!6879 = !DILocation(line: 1429, column: 9, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6843, file: !3, line: 1429, column: 9)
!6881 = !DILocation(line: 1429, column: 14, scope: !6880)
!6882 = !DILocation(line: 1429, column: 22, scope: !6880)
!6883 = !DILocation(line: 1429, column: 44, scope: !6880)
!6884 = !DILocation(line: 1429, column: 49, scope: !6880)
!6885 = !DILocation(line: 1429, column: 26, scope: !6880)
!6886 = !DILocation(line: 1429, column: 58, scope: !6880)
!6887 = !DILocation(line: 1429, column: 9, scope: !6843)
!6888 = !DILocation(line: 1430, column: 16, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6890, file: !3, line: 1430, column: 10)
!6890 = distinct !DILexicalBlock(scope: !6880, file: !3, line: 1429, column: 77)
!6891 = !DILocation(line: 1430, column: 15, scope: !6889)
!6892 = !DILocation(line: 1430, column: 10, scope: !6889)
!6893 = !DILocation(line: 1430, column: 29, scope: !6889)
!6894 = !DILocation(line: 1430, column: 34, scope: !6889)
!6895 = !DILocation(line: 1430, column: 24, scope: !6889)
!6896 = !DILocation(line: 1430, column: 22, scope: !6889)
!6897 = !DILocation(line: 1430, column: 10, scope: !6890)
!6898 = !DILocation(line: 1430, column: 51, scope: !6889)
!6899 = !DILocation(line: 1430, column: 43, scope: !6889)
!6900 = !DILocation(line: 1431, column: 5, scope: !6890)
!6901 = !DILocation(line: 1433, column: 11, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 1433, column: 10)
!6903 = distinct !DILexicalBlock(scope: !6880, file: !3, line: 1432, column: 10)
!6904 = !DILocation(line: 1433, column: 10, scope: !6902)
!6905 = !DILocation(line: 1433, column: 28, scope: !6902)
!6906 = !DILocation(line: 1433, column: 33, scope: !6902)
!6907 = !DILocation(line: 1433, column: 20, scope: !6902)
!6908 = !DILocation(line: 1433, column: 17, scope: !6902)
!6909 = !DILocation(line: 1433, column: 10, scope: !6903)
!6910 = !DILocation(line: 1433, column: 50, scope: !6902)
!6911 = !DILocation(line: 1433, column: 42, scope: !6902)
!6912 = !DILocation(line: 1435, column: 5, scope: !6843)
!6913 = !DILocation(line: 1437, column: 13, scope: !6843)
!6914 = !DILocation(line: 1438, column: 5, scope: !6843)
!6915 = !DILocation(line: 1442, column: 9, scope: !6798)
!6916 = !DILocation(line: 1442, column: 2, scope: !6798)
!6917 = distinct !DISubprogram(name: "ui_get_but_val", scope: !3, file: !3, line: 1776, type: !6918, scopeLine: 1777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!6918 = !DISubroutineType(types: !6919)
!6919 = !{!1540, !1558}
!6920 = !DILocalVariable(name: "but", arg: 1, scope: !6917, file: !3, line: 1776, type: !1558)
!6921 = !DILocation(line: 1776, column: 30, scope: !6917)
!6922 = !DILocalVariable(name: "prop", scope: !6917, file: !3, line: 1778, type: !3171)
!6923 = !DILocation(line: 1778, column: 15, scope: !6917)
!6924 = !DILocalVariable(name: "value", scope: !6917, file: !3, line: 1779, type: !1540)
!6925 = !DILocation(line: 1779, column: 9, scope: !6917)
!6926 = !DILocation(line: 1781, column: 6, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6917, file: !3, line: 1781, column: 6)
!6928 = !DILocation(line: 1781, column: 11, scope: !6927)
!6929 = !DILocation(line: 1781, column: 6, scope: !6917)
!6930 = !DILocation(line: 1781, column: 31, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6927, file: !3, line: 1781, column: 20)
!6932 = !DILocation(line: 1781, column: 36, scope: !6931)
!6933 = !DILocation(line: 1781, column: 29, scope: !6931)
!6934 = !DILocation(line: 1781, column: 22, scope: !6931)
!6935 = !DILocation(line: 1782, column: 6, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6917, file: !3, line: 1782, column: 6)
!6937 = !DILocation(line: 1782, column: 11, scope: !6936)
!6938 = !DILocation(line: 1782, column: 16, scope: !6936)
!6939 = !DILocation(line: 1782, column: 24, scope: !6936)
!6940 = !DILocation(line: 1782, column: 27, scope: !6936)
!6941 = !DILocation(line: 1782, column: 32, scope: !6936)
!6942 = !DILocation(line: 1782, column: 40, scope: !6936)
!6943 = !DILocation(line: 1782, column: 45, scope: !6936)
!6944 = !DILocation(line: 1782, column: 6, scope: !6917)
!6945 = !DILocation(line: 1782, column: 54, scope: !6936)
!6946 = !DILocation(line: 1784, column: 6, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6917, file: !3, line: 1784, column: 6)
!6948 = !DILocation(line: 1784, column: 11, scope: !6947)
!6949 = !DILocation(line: 1784, column: 6, scope: !6917)
!6950 = !DILocation(line: 1785, column: 10, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6947, file: !3, line: 1784, column: 20)
!6952 = !DILocation(line: 1785, column: 15, scope: !6951)
!6953 = !DILocation(line: 1785, column: 8, scope: !6951)
!6954 = !DILocation(line: 1789, column: 29, scope: !6951)
!6955 = !DILocation(line: 1789, column: 11, scope: !6951)
!6956 = !DILocation(line: 1789, column: 3, scope: !6951)
!6957 = !DILocation(line: 1791, column: 34, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 1791, column: 9)
!6959 = distinct !DILexicalBlock(scope: !6951, file: !3, line: 1789, column: 36)
!6960 = !DILocation(line: 1791, column: 9, scope: !6958)
!6961 = !DILocation(line: 1791, column: 9, scope: !6959)
!6962 = !DILocation(line: 1792, column: 46, scope: !6958)
!6963 = !DILocation(line: 1792, column: 51, scope: !6958)
!6964 = !DILocation(line: 1792, column: 60, scope: !6958)
!6965 = !DILocation(line: 1792, column: 66, scope: !6958)
!6966 = !DILocation(line: 1792, column: 71, scope: !6958)
!6967 = !DILocation(line: 1792, column: 14, scope: !6958)
!6968 = !DILocation(line: 1792, column: 12, scope: !6958)
!6969 = !DILocation(line: 1792, column: 6, scope: !6958)
!6970 = !DILocation(line: 1794, column: 40, scope: !6958)
!6971 = !DILocation(line: 1794, column: 45, scope: !6958)
!6972 = !DILocation(line: 1794, column: 54, scope: !6958)
!6973 = !DILocation(line: 1794, column: 14, scope: !6958)
!6974 = !DILocation(line: 1794, column: 12, scope: !6958)
!6975 = !DILocation(line: 1795, column: 5, scope: !6959)
!6976 = !DILocation(line: 1797, column: 34, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 1797, column: 9)
!6978 = !DILocation(line: 1797, column: 9, scope: !6977)
!6979 = !DILocation(line: 1797, column: 9, scope: !6959)
!6980 = !DILocation(line: 1798, column: 42, scope: !6977)
!6981 = !DILocation(line: 1798, column: 47, scope: !6977)
!6982 = !DILocation(line: 1798, column: 56, scope: !6977)
!6983 = !DILocation(line: 1798, column: 62, scope: !6977)
!6984 = !DILocation(line: 1798, column: 67, scope: !6977)
!6985 = !DILocation(line: 1798, column: 14, scope: !6977)
!6986 = !DILocation(line: 1798, column: 12, scope: !6977)
!6987 = !DILocation(line: 1798, column: 6, scope: !6977)
!6988 = !DILocation(line: 1800, column: 36, scope: !6977)
!6989 = !DILocation(line: 1800, column: 41, scope: !6977)
!6990 = !DILocation(line: 1800, column: 50, scope: !6977)
!6991 = !DILocation(line: 1800, column: 14, scope: !6977)
!6992 = !DILocation(line: 1800, column: 12, scope: !6977)
!6993 = !DILocation(line: 1801, column: 5, scope: !6959)
!6994 = !DILocation(line: 1803, column: 34, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 1803, column: 9)
!6996 = !DILocation(line: 1803, column: 9, scope: !6995)
!6997 = !DILocation(line: 1803, column: 9, scope: !6959)
!6998 = !DILocation(line: 1804, column: 44, scope: !6995)
!6999 = !DILocation(line: 1804, column: 49, scope: !6995)
!7000 = !DILocation(line: 1804, column: 58, scope: !6995)
!7001 = !DILocation(line: 1804, column: 64, scope: !6995)
!7002 = !DILocation(line: 1804, column: 69, scope: !6995)
!7003 = !DILocation(line: 1804, column: 14, scope: !6995)
!7004 = !DILocation(line: 1804, column: 12, scope: !6995)
!7005 = !DILocation(line: 1804, column: 6, scope: !6995)
!7006 = !DILocation(line: 1806, column: 38, scope: !6995)
!7007 = !DILocation(line: 1806, column: 43, scope: !6995)
!7008 = !DILocation(line: 1806, column: 52, scope: !6995)
!7009 = !DILocation(line: 1806, column: 14, scope: !6995)
!7010 = !DILocation(line: 1806, column: 12, scope: !6995)
!7011 = !DILocation(line: 1807, column: 5, scope: !6959)
!7012 = !DILocation(line: 1809, column: 36, scope: !6959)
!7013 = !DILocation(line: 1809, column: 41, scope: !6959)
!7014 = !DILocation(line: 1809, column: 50, scope: !6959)
!7015 = !DILocation(line: 1809, column: 13, scope: !6959)
!7016 = !DILocation(line: 1809, column: 11, scope: !6959)
!7017 = !DILocation(line: 1810, column: 5, scope: !6959)
!7018 = !DILocation(line: 1812, column: 11, scope: !6959)
!7019 = !DILocation(line: 1813, column: 5, scope: !6959)
!7020 = !DILocation(line: 1815, column: 2, scope: !6951)
!7021 = !DILocation(line: 1816, column: 11, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !6947, file: !3, line: 1816, column: 11)
!7023 = !DILocation(line: 1816, column: 16, scope: !7022)
!7024 = !DILocation(line: 1816, column: 25, scope: !7022)
!7025 = !DILocation(line: 1816, column: 11, scope: !6947)
!7026 = !DILocation(line: 1817, column: 20, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7022, file: !3, line: 1816, column: 46)
!7028 = !DILocation(line: 1817, column: 25, scope: !7027)
!7029 = !DILocation(line: 1817, column: 11, scope: !7027)
!7030 = !DILocation(line: 1817, column: 9, scope: !7027)
!7031 = !DILocation(line: 1818, column: 2, scope: !7027)
!7032 = !DILocation(line: 1819, column: 11, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7022, file: !3, line: 1819, column: 11)
!7034 = !DILocation(line: 1819, column: 16, scope: !7033)
!7035 = !DILocation(line: 1819, column: 25, scope: !7033)
!7036 = !DILocation(line: 1819, column: 11, scope: !7022)
!7037 = !DILocation(line: 1820, column: 21, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 1819, column: 47)
!7039 = !DILocation(line: 1820, column: 26, scope: !7038)
!7040 = !DILocation(line: 1820, column: 11, scope: !7038)
!7041 = !DILocation(line: 1820, column: 9, scope: !7038)
!7042 = !DILocation(line: 1821, column: 2, scope: !7038)
!7043 = !DILocation(line: 1822, column: 11, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 1822, column: 11)
!7045 = !DILocation(line: 1822, column: 16, scope: !7044)
!7046 = !DILocation(line: 1822, column: 25, scope: !7044)
!7047 = !DILocation(line: 1822, column: 11, scope: !7033)
!7048 = !DILocation(line: 1823, column: 19, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7044, file: !3, line: 1822, column: 45)
!7050 = !DILocation(line: 1823, column: 24, scope: !7049)
!7051 = !DILocation(line: 1823, column: 11, scope: !7049)
!7052 = !DILocation(line: 1823, column: 9, scope: !7049)
!7053 = !DILocation(line: 1824, column: 2, scope: !7049)
!7054 = !DILocation(line: 1825, column: 11, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7044, file: !3, line: 1825, column: 11)
!7056 = !DILocation(line: 1825, column: 16, scope: !7055)
!7057 = !DILocation(line: 1825, column: 25, scope: !7055)
!7058 = !DILocation(line: 1825, column: 11, scope: !7044)
!7059 = !DILocation(line: 1826, column: 21, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 1825, column: 47)
!7061 = !DILocation(line: 1826, column: 26, scope: !7060)
!7062 = !DILocation(line: 1826, column: 11, scope: !7060)
!7063 = !DILocation(line: 1826, column: 9, scope: !7060)
!7064 = !DILocation(line: 1827, column: 2, scope: !7060)
!7065 = !DILocation(line: 1829, column: 9, scope: !6917)
!7066 = !DILocation(line: 1829, column: 2, scope: !6917)
!7067 = !DILocation(line: 1830, column: 1, scope: !6917)
!7068 = distinct !DISubprogram(name: "ui_is_but_push", scope: !3, file: !3, line: 1444, type: !7069, scopeLine: 1445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!7069 = !DISubroutineType(types: !7070)
!7070 = !{!1067, !1558}
!7071 = !DILocalVariable(name: "but", arg: 1, scope: !7068, file: !3, line: 1444, type: !1558)
!7072 = !DILocation(line: 1444, column: 27, scope: !7068)
!7073 = !DILocalVariable(name: "value", scope: !7068, file: !3, line: 1446, type: !1540)
!7074 = !DILocation(line: 1446, column: 9, scope: !7068)
!7075 = !DILocation(line: 1447, column: 27, scope: !7068)
!7076 = !DILocation(line: 1447, column: 9, scope: !7068)
!7077 = !DILocation(line: 1447, column: 2, scope: !7068)
!7078 = distinct !DISubprogram(name: "uiFindInlink", scope: !3, file: !3, line: 1487, type: !7079, scopeLine: 1488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!7079 = !DISubroutineType(types: !7080)
!7080 = !{!1558, !1695, !1535}
!7081 = !DILocalVariable(name: "block", arg: 1, scope: !7078, file: !3, line: 1487, type: !1695)
!7082 = !DILocation(line: 1487, column: 30, scope: !7078)
!7083 = !DILocalVariable(name: "poin", arg: 2, scope: !7078, file: !3, line: 1487, type: !1535)
!7084 = !DILocation(line: 1487, column: 43, scope: !7078)
!7085 = !DILocation(line: 1489, column: 24, scope: !7078)
!7086 = !DILocation(line: 1489, column: 31, scope: !7078)
!7087 = !DILocation(line: 1489, column: 9, scope: !7078)
!7088 = !DILocation(line: 1489, column: 2, scope: !7078)
!7089 = distinct !DISubprogram(name: "ui_find_inlink", scope: !3, file: !3, line: 1462, type: !7079, scopeLine: 1463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!7090 = !DILocalVariable(name: "block", arg: 1, scope: !7089, file: !3, line: 1462, type: !1695)
!7091 = !DILocation(line: 1462, column: 39, scope: !7089)
!7092 = !DILocalVariable(name: "poin", arg: 2, scope: !7089, file: !3, line: 1462, type: !1535)
!7093 = !DILocation(line: 1462, column: 52, scope: !7089)
!7094 = !DILocalVariable(name: "but", scope: !7089, file: !3, line: 1464, type: !1558)
!7095 = !DILocation(line: 1464, column: 9, scope: !7089)
!7096 = !DILocation(line: 1466, column: 8, scope: !7089)
!7097 = !DILocation(line: 1466, column: 15, scope: !7089)
!7098 = !DILocation(line: 1466, column: 23, scope: !7089)
!7099 = !DILocation(line: 1466, column: 6, scope: !7089)
!7100 = !DILocation(line: 1467, column: 2, scope: !7089)
!7101 = !DILocation(line: 1467, column: 9, scope: !7089)
!7102 = !DILocation(line: 1468, column: 7, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7104, file: !3, line: 1468, column: 7)
!7104 = distinct !DILexicalBlock(scope: !7089, file: !3, line: 1467, column: 14)
!7105 = !DILocation(line: 1468, column: 12, scope: !7103)
!7106 = !DILocation(line: 1468, column: 17, scope: !7103)
!7107 = !DILocation(line: 1468, column: 7, scope: !7104)
!7108 = !DILocation(line: 1469, column: 8, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 1469, column: 8)
!7110 = distinct !DILexicalBlock(scope: !7103, file: !3, line: 1468, column: 28)
!7111 = !DILocation(line: 1469, column: 13, scope: !7109)
!7112 = !DILocation(line: 1469, column: 21, scope: !7109)
!7113 = !DILocation(line: 1469, column: 18, scope: !7109)
!7114 = !DILocation(line: 1469, column: 8, scope: !7110)
!7115 = !DILocation(line: 1469, column: 34, scope: !7109)
!7116 = !DILocation(line: 1469, column: 27, scope: !7109)
!7117 = !DILocation(line: 1470, column: 3, scope: !7110)
!7118 = !DILocation(line: 1471, column: 9, scope: !7104)
!7119 = !DILocation(line: 1471, column: 14, scope: !7104)
!7120 = !DILocation(line: 1471, column: 7, scope: !7104)
!7121 = distinct !{!7121, !7100, !7122}
!7122 = !DILocation(line: 1472, column: 2, scope: !7089)
!7123 = !DILocation(line: 1473, column: 2, scope: !7089)
!7124 = !DILocation(line: 1474, column: 1, scope: !7089)
!7125 = distinct !DISubprogram(name: "uiComposeLinks", scope: !3, file: !3, line: 1492, type: !3750, scopeLine: 1493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!7126 = !DILocalVariable(name: "block", arg: 1, scope: !7125, file: !3, line: 1492, type: !1695)
!7127 = !DILocation(line: 1492, column: 30, scope: !7125)
!7128 = !DILocalVariable(name: "but", scope: !7125, file: !3, line: 1494, type: !1558)
!7129 = !DILocation(line: 1494, column: 9, scope: !7125)
!7130 = !DILocalVariable(name: "bt", scope: !7125, file: !3, line: 1494, type: !1558)
!7131 = !DILocation(line: 1494, column: 15, scope: !7125)
!7132 = !DILocalVariable(name: "link", scope: !7125, file: !3, line: 1495, type: !1661)
!7133 = !DILocation(line: 1495, column: 10, scope: !7125)
!7134 = !DILocalVariable(name: "ppoin", scope: !7125, file: !3, line: 1496, type: !1668)
!7135 = !DILocation(line: 1496, column: 10, scope: !7125)
!7136 = !DILocalVariable(name: "a", scope: !7125, file: !3, line: 1497, type: !1067)
!7137 = !DILocation(line: 1497, column: 6, scope: !7125)
!7138 = !DILocation(line: 1499, column: 8, scope: !7125)
!7139 = !DILocation(line: 1499, column: 15, scope: !7125)
!7140 = !DILocation(line: 1499, column: 23, scope: !7125)
!7141 = !DILocation(line: 1499, column: 6, scope: !7125)
!7142 = !DILocation(line: 1500, column: 2, scope: !7125)
!7143 = !DILocation(line: 1500, column: 9, scope: !7125)
!7144 = !DILocation(line: 1501, column: 7, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7146, file: !3, line: 1501, column: 7)
!7146 = distinct !DILexicalBlock(scope: !7125, file: !3, line: 1500, column: 14)
!7147 = !DILocation(line: 1501, column: 12, scope: !7145)
!7148 = !DILocation(line: 1501, column: 17, scope: !7145)
!7149 = !DILocation(line: 1501, column: 7, scope: !7146)
!7150 = !DILocation(line: 1502, column: 11, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7145, file: !3, line: 1501, column: 26)
!7152 = !DILocation(line: 1502, column: 16, scope: !7151)
!7153 = !DILocation(line: 1502, column: 9, scope: !7151)
!7154 = !DILocation(line: 1505, column: 8, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7151, file: !3, line: 1505, column: 8)
!7156 = !DILocation(line: 1505, column: 8, scope: !7151)
!7157 = !DILocation(line: 1506, column: 9, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7159, file: !3, line: 1506, column: 9)
!7159 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 1505, column: 14)
!7160 = !DILocation(line: 1506, column: 15, scope: !7158)
!7161 = !DILocation(line: 1506, column: 9, scope: !7159)
!7162 = !DILocation(line: 1507, column: 14, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7158, file: !3, line: 1506, column: 22)
!7164 = !DILocation(line: 1507, column: 20, scope: !7163)
!7165 = !DILocation(line: 1507, column: 12, scope: !7163)
!7166 = !DILocation(line: 1508, column: 13, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7163, file: !3, line: 1508, column: 6)
!7168 = !DILocation(line: 1508, column: 11, scope: !7167)
!7169 = !DILocation(line: 1508, column: 18, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 1508, column: 6)
!7171 = !DILocation(line: 1508, column: 24, scope: !7170)
!7172 = !DILocation(line: 1508, column: 30, scope: !7170)
!7173 = !DILocation(line: 1508, column: 22, scope: !7170)
!7174 = !DILocation(line: 1508, column: 20, scope: !7170)
!7175 = !DILocation(line: 1508, column: 6, scope: !7167)
!7176 = !DILocation(line: 1509, column: 27, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7170, file: !3, line: 1508, column: 45)
!7178 = !DILocation(line: 1509, column: 36, scope: !7177)
!7179 = !DILocation(line: 1509, column: 35, scope: !7177)
!7180 = !DILocation(line: 1509, column: 43, scope: !7177)
!7181 = !DILocation(line: 1509, column: 34, scope: !7177)
!7182 = !DILocation(line: 1509, column: 12, scope: !7177)
!7183 = !DILocation(line: 1509, column: 10, scope: !7177)
!7184 = !DILocation(line: 1510, column: 11, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 1510, column: 11)
!7186 = !DILocation(line: 1510, column: 11, scope: !7177)
!7187 = !DILocation(line: 1511, column: 13, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7189, file: !3, line: 1511, column: 12)
!7189 = distinct !DILexicalBlock(scope: !7185, file: !3, line: 1510, column: 15)
!7190 = !DILocation(line: 1511, column: 18, scope: !7188)
!7191 = !DILocation(line: 1511, column: 23, scope: !7188)
!7192 = !DILocation(line: 1511, column: 47, scope: !7188)
!7193 = !DILocation(line: 1511, column: 51, scope: !7188)
!7194 = !DILocation(line: 1511, column: 55, scope: !7188)
!7195 = !DILocation(line: 1511, column: 60, scope: !7188)
!7196 = !DILocation(line: 1511, column: 12, scope: !7189)
!7197 = !DILocation(line: 1512, column: 27, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7188, file: !3, line: 1511, column: 85)
!7199 = !DILocation(line: 1512, column: 33, scope: !7198)
!7200 = !DILocation(line: 1512, column: 40, scope: !7198)
!7201 = !DILocation(line: 1512, column: 45, scope: !7198)
!7202 = !DILocation(line: 1512, column: 9, scope: !7198)
!7203 = !DILocation(line: 1513, column: 8, scope: !7198)
!7204 = !DILocation(line: 1515, column: 27, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7188, file: !3, line: 1514, column: 13)
!7206 = !DILocation(line: 1515, column: 33, scope: !7205)
!7207 = !DILocation(line: 1515, column: 40, scope: !7205)
!7208 = !DILocation(line: 1515, column: 45, scope: !7205)
!7209 = !DILocation(line: 1515, column: 9, scope: !7205)
!7210 = !DILocation(line: 1518, column: 7, scope: !7189)
!7211 = !DILocation(line: 1519, column: 6, scope: !7177)
!7212 = !DILocation(line: 1508, column: 41, scope: !7170)
!7213 = !DILocation(line: 1508, column: 6, scope: !7170)
!7214 = distinct !{!7214, !7175, !7215}
!7215 = !DILocation(line: 1519, column: 6, scope: !7167)
!7216 = !DILocation(line: 1520, column: 5, scope: !7163)
!7217 = !DILocation(line: 1521, column: 14, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7158, file: !3, line: 1521, column: 14)
!7219 = !DILocation(line: 1521, column: 20, scope: !7218)
!7220 = !DILocation(line: 1521, column: 14, scope: !7158)
!7221 = !DILocation(line: 1522, column: 26, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 1521, column: 26)
!7223 = !DILocation(line: 1522, column: 34, scope: !7222)
!7224 = !DILocation(line: 1522, column: 40, scope: !7222)
!7225 = !DILocation(line: 1522, column: 33, scope: !7222)
!7226 = !DILocation(line: 1522, column: 11, scope: !7222)
!7227 = !DILocation(line: 1522, column: 9, scope: !7222)
!7228 = !DILocation(line: 1523, column: 10, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7222, file: !3, line: 1523, column: 10)
!7230 = !DILocation(line: 1523, column: 10, scope: !7222)
!7231 = !DILocation(line: 1524, column: 12, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7233, file: !3, line: 1524, column: 11)
!7233 = distinct !DILexicalBlock(scope: !7229, file: !3, line: 1523, column: 14)
!7234 = !DILocation(line: 1524, column: 17, scope: !7232)
!7235 = !DILocation(line: 1524, column: 22, scope: !7232)
!7236 = !DILocation(line: 1524, column: 46, scope: !7232)
!7237 = !DILocation(line: 1524, column: 50, scope: !7232)
!7238 = !DILocation(line: 1524, column: 54, scope: !7232)
!7239 = !DILocation(line: 1524, column: 59, scope: !7232)
!7240 = !DILocation(line: 1524, column: 11, scope: !7233)
!7241 = !DILocation(line: 1525, column: 26, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7232, file: !3, line: 1524, column: 84)
!7243 = !DILocation(line: 1525, column: 32, scope: !7242)
!7244 = !DILocation(line: 1525, column: 39, scope: !7242)
!7245 = !DILocation(line: 1525, column: 44, scope: !7242)
!7246 = !DILocation(line: 1525, column: 8, scope: !7242)
!7247 = !DILocation(line: 1526, column: 7, scope: !7242)
!7248 = !DILocation(line: 1528, column: 26, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7232, file: !3, line: 1527, column: 12)
!7250 = !DILocation(line: 1528, column: 32, scope: !7249)
!7251 = !DILocation(line: 1528, column: 39, scope: !7249)
!7252 = !DILocation(line: 1528, column: 44, scope: !7249)
!7253 = !DILocation(line: 1528, column: 8, scope: !7249)
!7254 = !DILocation(line: 1530, column: 6, scope: !7233)
!7255 = !DILocation(line: 1531, column: 5, scope: !7222)
!7256 = !DILocation(line: 1532, column: 4, scope: !7159)
!7257 = !DILocation(line: 1533, column: 3, scope: !7151)
!7258 = !DILocation(line: 1534, column: 9, scope: !7146)
!7259 = !DILocation(line: 1534, column: 14, scope: !7146)
!7260 = !DILocation(line: 1534, column: 7, scope: !7146)
!7261 = distinct !{!7261, !7142, !7262}
!7262 = !DILocation(line: 1535, column: 2, scope: !7125)
!7263 = !DILocation(line: 1536, column: 1, scope: !7125)
!7264 = distinct !DISubprogram(name: "ui_add_link_line", scope: !3, file: !3, line: 1476, type: !7265, scopeLine: 1477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!7265 = !DISubroutineType(types: !7266)
!7266 = !{null, !7267, !1558, !1558, !1545}
!7267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!7268 = !DILocalVariable(name: "listb", arg: 1, scope: !7264, file: !3, line: 1476, type: !7267)
!7269 = !DILocation(line: 1476, column: 40, scope: !7264)
!7270 = !DILocalVariable(name: "but", arg: 2, scope: !7264, file: !3, line: 1476, type: !1558)
!7271 = !DILocation(line: 1476, column: 54, scope: !7264)
!7272 = !DILocalVariable(name: "bt", arg: 3, scope: !7264, file: !3, line: 1476, type: !1558)
!7273 = !DILocation(line: 1476, column: 66, scope: !7264)
!7274 = !DILocalVariable(name: "deactive", arg: 4, scope: !7264, file: !3, line: 1476, type: !1545)
!7275 = !DILocation(line: 1476, column: 76, scope: !7264)
!7276 = !DILocalVariable(name: "line", scope: !7264, file: !3, line: 1478, type: !6574)
!7277 = !DILocation(line: 1478, column: 14, scope: !7264)
!7278 = !DILocation(line: 1480, column: 9, scope: !7264)
!7279 = !DILocation(line: 1480, column: 7, scope: !7264)
!7280 = !DILocation(line: 1481, column: 14, scope: !7264)
!7281 = !DILocation(line: 1481, column: 21, scope: !7264)
!7282 = !DILocation(line: 1481, column: 2, scope: !7264)
!7283 = !DILocation(line: 1482, column: 15, scope: !7264)
!7284 = !DILocation(line: 1482, column: 2, scope: !7264)
!7285 = !DILocation(line: 1482, column: 8, scope: !7264)
!7286 = !DILocation(line: 1482, column: 13, scope: !7264)
!7287 = !DILocation(line: 1483, column: 13, scope: !7264)
!7288 = !DILocation(line: 1483, column: 2, scope: !7264)
!7289 = !DILocation(line: 1483, column: 8, scope: !7264)
!7290 = !DILocation(line: 1483, column: 11, scope: !7264)
!7291 = !DILocation(line: 1484, column: 19, scope: !7264)
!7292 = !DILocation(line: 1484, column: 2, scope: !7264)
!7293 = !DILocation(line: 1484, column: 8, scope: !7264)
!7294 = !DILocation(line: 1484, column: 17, scope: !7264)
!7295 = !DILocation(line: 1485, column: 1, scope: !7264)
!7296 = distinct !DISubprogram(name: "uiBlockSetButLock", scope: !3, file: !3, line: 1541, type: !7297, scopeLine: 1542, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!7297 = !DISubroutineType(types: !7298)
!7298 = !{null, !1695, !1550, !1647}
!7299 = !DILocalVariable(name: "block", arg: 1, scope: !7296, file: !3, line: 1541, type: !1695)
!7300 = !DILocation(line: 1541, column: 33, scope: !7296)
!7301 = !DILocalVariable(name: "val", arg: 2, scope: !7296, file: !3, line: 1541, type: !1550)
!7302 = !DILocation(line: 1541, column: 45, scope: !7296)
!7303 = !DILocalVariable(name: "lockstr", arg: 3, scope: !7296, file: !3, line: 1541, type: !1647)
!7304 = !DILocation(line: 1541, column: 62, scope: !7296)
!7305 = !DILocation(line: 1543, column: 6, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7296, file: !3, line: 1543, column: 6)
!7307 = !DILocation(line: 1543, column: 6, scope: !7296)
!7308 = !DILocation(line: 1544, column: 17, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 1543, column: 11)
!7310 = !DILocation(line: 1544, column: 3, scope: !7309)
!7311 = !DILocation(line: 1544, column: 10, scope: !7309)
!7312 = !DILocation(line: 1544, column: 15, scope: !7309)
!7313 = !DILocation(line: 1545, column: 20, scope: !7309)
!7314 = !DILocation(line: 1545, column: 3, scope: !7309)
!7315 = !DILocation(line: 1545, column: 10, scope: !7309)
!7316 = !DILocation(line: 1545, column: 18, scope: !7309)
!7317 = !DILocation(line: 1546, column: 2, scope: !7309)
!7318 = !DILocation(line: 1547, column: 1, scope: !7296)
!7319 = distinct !DISubprogram(name: "uiBlockClearButLock", scope: !3, file: !3, line: 1549, type: !3750, scopeLine: 1550, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!7320 = !DILocalVariable(name: "block", arg: 1, scope: !7319, file: !3, line: 1549, type: !1695)
!7321 = !DILocation(line: 1549, column: 35, scope: !7319)
!7322 = !DILocation(line: 1551, column: 2, scope: !7319)
!7323 = !DILocation(line: 1551, column: 9, scope: !7319)
!7324 = !DILocation(line: 1551, column: 14, scope: !7319)
!7325 = !DILocation(line: 1552, column: 2, scope: !7319)
!7326 = !DILocation(line: 1552, column: 9, scope: !7319)
!7327 = !DILocation(line: 1552, column: 17, scope: !7319)
!7328 = !DILocation(line: 1553, column: 1, scope: !7319)
!7329 = distinct !DISubprogram(name: "ui_delete_linkline", scope: !3, file: !3, line: 1557, type: !7330, scopeLine: 1558, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!7330 = !DISubroutineType(types: !7331)
!7331 = !{null, !6574, !1558}
!7332 = !DILocalVariable(name: "line", arg: 1, scope: !7329, file: !3, line: 1557, type: !6574)
!7333 = !DILocation(line: 1557, column: 37, scope: !7329)
!7334 = !DILocalVariable(name: "but", arg: 2, scope: !7329, file: !3, line: 1557, type: !1558)
!7335 = !DILocation(line: 1557, column: 50, scope: !7329)
!7336 = !DILocalVariable(name: "link", scope: !7329, file: !3, line: 1559, type: !1661)
!7337 = !DILocation(line: 1559, column: 10, scope: !7329)
!7338 = !DILocalVariable(name: "a", scope: !7329, file: !3, line: 1560, type: !1067)
!7339 = !DILocation(line: 1560, column: 6, scope: !7329)
!7340 = !DILocalVariable(name: "b", scope: !7329, file: !3, line: 1560, type: !1067)
!7341 = !DILocation(line: 1560, column: 9, scope: !7329)
!7342 = !DILocation(line: 1562, column: 15, scope: !7329)
!7343 = !DILocation(line: 1562, column: 20, scope: !7329)
!7344 = !DILocation(line: 1562, column: 26, scope: !7329)
!7345 = !DILocation(line: 1562, column: 33, scope: !7329)
!7346 = !DILocation(line: 1562, column: 2, scope: !7329)
!7347 = !DILocation(line: 1564, column: 9, scope: !7329)
!7348 = !DILocation(line: 1564, column: 15, scope: !7329)
!7349 = !DILocation(line: 1564, column: 21, scope: !7329)
!7350 = !DILocation(line: 1564, column: 7, scope: !7329)
!7351 = !DILocation(line: 1567, column: 6, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7329, file: !3, line: 1567, column: 6)
!7353 = !DILocation(line: 1567, column: 12, scope: !7352)
!7354 = !DILocation(line: 1567, column: 6, scope: !7329)
!7355 = !DILocation(line: 1569, column: 9, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7357, file: !3, line: 1569, column: 7)
!7357 = distinct !DILexicalBlock(scope: !7352, file: !3, line: 1567, column: 19)
!7358 = !DILocation(line: 1569, column: 15, scope: !7356)
!7359 = !DILocation(line: 1569, column: 7, scope: !7356)
!7360 = !DILocation(line: 1569, column: 24, scope: !7356)
!7361 = !DILocation(line: 1569, column: 7, scope: !7357)
!7362 = !DILocation(line: 1570, column: 6, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7356, file: !3, line: 1569, column: 30)
!7364 = !DILocation(line: 1570, column: 12, scope: !7363)
!7365 = !DILocation(line: 1570, column: 21, scope: !7363)
!7366 = !DILocation(line: 1571, column: 4, scope: !7363)
!7367 = !DILocation(line: 1571, column: 16, scope: !7363)
!7368 = !DILocation(line: 1571, column: 22, scope: !7363)
!7369 = !DILocation(line: 1571, column: 14, scope: !7363)
!7370 = !DILocation(line: 1572, column: 6, scope: !7363)
!7371 = !DILocation(line: 1572, column: 12, scope: !7363)
!7372 = !DILocation(line: 1572, column: 19, scope: !7363)
!7373 = !DILocation(line: 1573, column: 3, scope: !7363)
!7374 = !DILocation(line: 1575, column: 6, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7356, file: !3, line: 1574, column: 8)
!7376 = !DILocation(line: 1576, column: 11, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7375, file: !3, line: 1576, column: 4)
!7378 = !DILocation(line: 1576, column: 9, scope: !7377)
!7379 = !DILocation(line: 1576, column: 16, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7377, file: !3, line: 1576, column: 4)
!7381 = !DILocation(line: 1576, column: 23, scope: !7380)
!7382 = !DILocation(line: 1576, column: 29, scope: !7380)
!7383 = !DILocation(line: 1576, column: 21, scope: !7380)
!7384 = !DILocation(line: 1576, column: 20, scope: !7380)
!7385 = !DILocation(line: 1576, column: 18, scope: !7380)
!7386 = !DILocation(line: 1576, column: 4, scope: !7377)
!7387 = !DILocation(line: 1577, column: 12, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7389, file: !3, line: 1577, column: 9)
!7389 = distinct !DILexicalBlock(scope: !7380, file: !3, line: 1576, column: 45)
!7390 = !DILocation(line: 1577, column: 18, scope: !7388)
!7391 = !DILocation(line: 1577, column: 10, scope: !7388)
!7392 = !DILocation(line: 1577, column: 26, scope: !7388)
!7393 = !DILocation(line: 1577, column: 9, scope: !7388)
!7394 = !DILocation(line: 1577, column: 32, scope: !7388)
!7395 = !DILocation(line: 1577, column: 38, scope: !7388)
!7396 = !DILocation(line: 1577, column: 42, scope: !7388)
!7397 = !DILocation(line: 1577, column: 29, scope: !7388)
!7398 = !DILocation(line: 1577, column: 9, scope: !7389)
!7399 = !DILocation(line: 1578, column: 31, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 1577, column: 48)
!7401 = !DILocation(line: 1578, column: 37, scope: !7400)
!7402 = !DILocation(line: 1578, column: 29, scope: !7400)
!7403 = !DILocation(line: 1578, column: 45, scope: !7400)
!7404 = !DILocation(line: 1578, column: 28, scope: !7400)
!7405 = !DILocation(line: 1578, column: 9, scope: !7400)
!7406 = !DILocation(line: 1578, column: 15, scope: !7400)
!7407 = !DILocation(line: 1578, column: 7, scope: !7400)
!7408 = !DILocation(line: 1578, column: 23, scope: !7400)
!7409 = !DILocation(line: 1578, column: 6, scope: !7400)
!7410 = !DILocation(line: 1578, column: 26, scope: !7400)
!7411 = !DILocation(line: 1579, column: 7, scope: !7400)
!7412 = !DILocation(line: 1580, column: 5, scope: !7400)
!7413 = !DILocation(line: 1581, column: 4, scope: !7389)
!7414 = !DILocation(line: 1576, column: 41, scope: !7380)
!7415 = !DILocation(line: 1576, column: 4, scope: !7380)
!7416 = distinct !{!7416, !7386, !7417}
!7417 = !DILocation(line: 1581, column: 4, scope: !7377)
!7418 = !DILocation(line: 1582, column: 7, scope: !7375)
!7419 = !DILocation(line: 1582, column: 13, scope: !7375)
!7420 = !DILocation(line: 1582, column: 22, scope: !7375)
!7421 = !DILocation(line: 1584, column: 2, scope: !7357)
!7422 = !DILocation(line: 1586, column: 5, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7352, file: !3, line: 1585, column: 7)
!7424 = !DILocation(line: 1586, column: 11, scope: !7423)
!7425 = !DILocation(line: 1586, column: 17, scope: !7423)
!7426 = !DILocation(line: 1589, column: 2, scope: !7329)
!7427 = !DILocation(line: 1589, column: 12, scope: !7329)
!7428 = !DILocation(line: 1591, column: 1, scope: !7329)
!7429 = distinct !DISubprogram(name: "ui_get_but_vectorf", scope: !3, file: !3, line: 1598, type: !7430, scopeLine: 1599, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!7430 = !DISubroutineType(types: !7431)
!7431 = !{null, !1558, !1543}
!7432 = !DILocalVariable(name: "but", arg: 1, scope: !7429, file: !3, line: 1598, type: !1558)
!7433 = !DILocation(line: 1598, column: 32, scope: !7429)
!7434 = !DILocalVariable(name: "vec", arg: 2, scope: !7429, file: !3, line: 1598, type: !1543)
!7435 = !DILocation(line: 1598, column: 43, scope: !7429)
!7436 = !DILocalVariable(name: "prop", scope: !7429, file: !3, line: 1600, type: !3171)
!7437 = !DILocation(line: 1600, column: 15, scope: !7429)
!7438 = !DILocalVariable(name: "a", scope: !7429, file: !3, line: 1601, type: !1067)
!7439 = !DILocation(line: 1601, column: 6, scope: !7429)
!7440 = !DILocation(line: 1603, column: 6, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 1603, column: 6)
!7442 = !DILocation(line: 1603, column: 11, scope: !7441)
!7443 = !DILocation(line: 1603, column: 6, scope: !7429)
!7444 = !DILocation(line: 1604, column: 14, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7441, file: !3, line: 1603, column: 20)
!7446 = !DILocation(line: 1604, column: 19, scope: !7445)
!7447 = !DILocation(line: 1604, column: 24, scope: !7445)
!7448 = !DILocation(line: 1604, column: 3, scope: !7445)
!7449 = !DILocation(line: 1605, column: 2, scope: !7445)
!7450 = !DILocation(line: 1607, column: 6, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 1607, column: 6)
!7452 = !DILocation(line: 1607, column: 11, scope: !7451)
!7453 = !DILocation(line: 1607, column: 6, scope: !7429)
!7454 = !DILocation(line: 1608, column: 10, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7451, file: !3, line: 1607, column: 20)
!7456 = !DILocation(line: 1608, column: 15, scope: !7455)
!7457 = !DILocation(line: 1608, column: 8, scope: !7455)
!7458 = !DILocation(line: 1610, column: 11, scope: !7455)
!7459 = !DILocation(line: 1610, column: 3, scope: !7455)
!7460 = !DILocation(line: 1612, column: 25, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 1612, column: 7)
!7462 = !DILocation(line: 1612, column: 7, scope: !7461)
!7463 = !DILocation(line: 1612, column: 31, scope: !7461)
!7464 = !DILocation(line: 1612, column: 7, scope: !7455)
!7465 = !DILocalVariable(name: "tot", scope: !7466, file: !3, line: 1613, type: !1067)
!7466 = distinct !DILexicalBlock(scope: !7461, file: !3, line: 1612, column: 46)
!7467 = !DILocation(line: 1613, column: 8, scope: !7466)
!7468 = !DILocation(line: 1613, column: 41, scope: !7466)
!7469 = !DILocation(line: 1613, column: 46, scope: !7466)
!7470 = !DILocation(line: 1613, column: 55, scope: !7466)
!7471 = !DILocation(line: 1613, column: 14, scope: !7466)
!7472 = !DILocation(line: 1615, column: 8, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7466, file: !3, line: 1615, column: 8)
!7474 = !DILocation(line: 1615, column: 12, scope: !7473)
!7475 = !DILocation(line: 1615, column: 8, scope: !7466)
!7476 = !DILocation(line: 1616, column: 35, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7473, file: !3, line: 1615, column: 18)
!7478 = !DILocation(line: 1616, column: 40, scope: !7477)
!7479 = !DILocation(line: 1616, column: 49, scope: !7477)
!7480 = !DILocation(line: 1616, column: 55, scope: !7477)
!7481 = !DILocation(line: 1616, column: 5, scope: !7477)
!7482 = !DILocation(line: 1617, column: 4, scope: !7477)
!7483 = !DILocation(line: 1619, column: 18, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7473, file: !3, line: 1618, column: 9)
!7485 = !DILocation(line: 1619, column: 11, scope: !7484)
!7486 = !DILocation(line: 1619, column: 9, scope: !7484)
!7487 = !DILocation(line: 1620, column: 12, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 1620, column: 5)
!7489 = !DILocation(line: 1620, column: 10, scope: !7488)
!7490 = !DILocation(line: 1620, column: 17, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7488, file: !3, line: 1620, column: 5)
!7492 = !DILocation(line: 1620, column: 21, scope: !7491)
!7493 = !DILocation(line: 1620, column: 19, scope: !7491)
!7494 = !DILocation(line: 1620, column: 5, scope: !7488)
!7495 = !DILocation(line: 1621, column: 45, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7491, file: !3, line: 1620, column: 31)
!7497 = !DILocation(line: 1621, column: 50, scope: !7496)
!7498 = !DILocation(line: 1621, column: 59, scope: !7496)
!7499 = !DILocation(line: 1621, column: 65, scope: !7496)
!7500 = !DILocation(line: 1621, column: 15, scope: !7496)
!7501 = !DILocation(line: 1621, column: 6, scope: !7496)
!7502 = !DILocation(line: 1621, column: 10, scope: !7496)
!7503 = !DILocation(line: 1621, column: 13, scope: !7496)
!7504 = !DILocation(line: 1622, column: 5, scope: !7496)
!7505 = !DILocation(line: 1620, column: 27, scope: !7491)
!7506 = !DILocation(line: 1620, column: 5, scope: !7491)
!7507 = distinct !{!7507, !7494, !7508}
!7508 = !DILocation(line: 1622, column: 5, scope: !7488)
!7509 = !DILocation(line: 1624, column: 3, scope: !7466)
!7510 = !DILocation(line: 1625, column: 2, scope: !7455)
!7511 = !DILocation(line: 1626, column: 11, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7451, file: !3, line: 1626, column: 11)
!7513 = !DILocation(line: 1626, column: 16, scope: !7512)
!7514 = !DILocation(line: 1626, column: 25, scope: !7512)
!7515 = !DILocation(line: 1626, column: 11, scope: !7451)
!7516 = !DILocalVariable(name: "cp", scope: !7517, file: !3, line: 1627, type: !1647)
!7517 = distinct !DILexicalBlock(scope: !7512, file: !3, line: 1626, column: 46)
!7518 = !DILocation(line: 1627, column: 15, scope: !7517)
!7519 = !DILocation(line: 1627, column: 28, scope: !7517)
!7520 = !DILocation(line: 1627, column: 33, scope: !7517)
!7521 = !DILocation(line: 1629, column: 20, scope: !7517)
!7522 = !DILocation(line: 1629, column: 13, scope: !7517)
!7523 = !DILocation(line: 1629, column: 27, scope: !7517)
!7524 = !DILocation(line: 1629, column: 3, scope: !7517)
!7525 = !DILocation(line: 1629, column: 10, scope: !7517)
!7526 = !DILocation(line: 1630, column: 20, scope: !7517)
!7527 = !DILocation(line: 1630, column: 13, scope: !7517)
!7528 = !DILocation(line: 1630, column: 27, scope: !7517)
!7529 = !DILocation(line: 1630, column: 3, scope: !7517)
!7530 = !DILocation(line: 1630, column: 10, scope: !7517)
!7531 = !DILocation(line: 1631, column: 20, scope: !7517)
!7532 = !DILocation(line: 1631, column: 13, scope: !7517)
!7533 = !DILocation(line: 1631, column: 27, scope: !7517)
!7534 = !DILocation(line: 1631, column: 3, scope: !7517)
!7535 = !DILocation(line: 1631, column: 10, scope: !7517)
!7536 = !DILocation(line: 1632, column: 2, scope: !7517)
!7537 = !DILocation(line: 1633, column: 11, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7512, file: !3, line: 1633, column: 11)
!7539 = !DILocation(line: 1633, column: 16, scope: !7538)
!7540 = !DILocation(line: 1633, column: 25, scope: !7538)
!7541 = !DILocation(line: 1633, column: 11, scope: !7512)
!7542 = !DILocalVariable(name: "fp", scope: !7543, file: !3, line: 1634, type: !5313)
!7543 = distinct !DILexicalBlock(scope: !7538, file: !3, line: 1633, column: 47)
!7544 = !DILocation(line: 1634, column: 16, scope: !7543)
!7545 = !DILocation(line: 1634, column: 30, scope: !7543)
!7546 = !DILocation(line: 1634, column: 35, scope: !7543)
!7547 = !DILocation(line: 1634, column: 21, scope: !7543)
!7548 = !DILocation(line: 1635, column: 14, scope: !7543)
!7549 = !DILocation(line: 1635, column: 19, scope: !7543)
!7550 = !DILocation(line: 1635, column: 3, scope: !7543)
!7551 = !DILocation(line: 1636, column: 2, scope: !7543)
!7552 = !DILocation(line: 1638, column: 7, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7554, file: !3, line: 1638, column: 7)
!7554 = distinct !DILexicalBlock(scope: !7538, file: !3, line: 1637, column: 7)
!7555 = !DILocation(line: 1638, column: 12, scope: !7553)
!7556 = !DILocation(line: 1638, column: 20, scope: !7553)
!7557 = !DILocation(line: 1638, column: 7, scope: !7554)
!7558 = !DILocation(line: 1639, column: 12, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7553, file: !3, line: 1638, column: 29)
!7560 = !DILocation(line: 1639, column: 4, scope: !7559)
!7561 = !DILocation(line: 1640, column: 12, scope: !7559)
!7562 = !DILocation(line: 1640, column: 4, scope: !7559)
!7563 = !DILocation(line: 1641, column: 3, scope: !7559)
!7564 = !DILocation(line: 1644, column: 6, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 1644, column: 6)
!7566 = !DILocation(line: 1644, column: 11, scope: !7565)
!7567 = !DILocation(line: 1644, column: 16, scope: !7565)
!7568 = !DILocation(line: 1644, column: 6, scope: !7429)
!7569 = !DILocation(line: 1645, column: 16, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7565, file: !3, line: 1644, column: 31)
!7571 = !DILocation(line: 1645, column: 3, scope: !7570)
!7572 = !DILocation(line: 1646, column: 2, scope: !7570)
!7573 = !DILocation(line: 1647, column: 1, scope: !7429)
!7574 = distinct !DISubprogram(name: "zero_v3", scope: !5310, file: !5310, line: 43, type: !7575, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!7575 = !DISubroutineType(types: !7576)
!7576 = !{null, !1543}
!7577 = !DILocalVariable(name: "r", arg: 1, scope: !7574, file: !5310, line: 43, type: !1543)
!7578 = !DILocation(line: 43, column: 28, scope: !7574)
!7579 = !DILocation(line: 45, column: 2, scope: !7574)
!7580 = !DILocation(line: 45, column: 7, scope: !7574)
!7581 = !DILocation(line: 46, column: 2, scope: !7574)
!7582 = !DILocation(line: 46, column: 7, scope: !7574)
!7583 = !DILocation(line: 47, column: 2, scope: !7574)
!7584 = !DILocation(line: 47, column: 7, scope: !7574)
!7585 = !DILocation(line: 48, column: 1, scope: !7574)
!7586 = distinct !DISubprogram(name: "min_ii", scope: !3923, file: !3923, line: 211, type: !7587, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!7587 = !DISubroutineType(types: !7588)
!7588 = !{!1067, !1067, !1067}
!7589 = !DILocalVariable(name: "a", arg: 1, scope: !7586, file: !3923, line: 211, type: !1067)
!7590 = !DILocation(line: 211, column: 24, scope: !7586)
!7591 = !DILocalVariable(name: "b", arg: 2, scope: !7586, file: !3923, line: 211, type: !1067)
!7592 = !DILocation(line: 211, column: 31, scope: !7586)
!7593 = !DILocation(line: 213, column: 10, scope: !7586)
!7594 = !DILocation(line: 213, column: 14, scope: !7586)
!7595 = !DILocation(line: 213, column: 12, scope: !7586)
!7596 = !DILocation(line: 213, column: 9, scope: !7586)
!7597 = !DILocation(line: 213, column: 19, scope: !7586)
!7598 = !DILocation(line: 213, column: 23, scope: !7586)
!7599 = !DILocation(line: 213, column: 2, scope: !7586)
!7600 = distinct !DISubprogram(name: "normalize_v3", scope: !5310, file: !5310, line: 830, type: !7601, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!7601 = !DISubroutineType(types: !7602)
!7602 = !{!1534, !1543}
!7603 = !DILocalVariable(name: "n", arg: 1, scope: !7600, file: !5310, line: 830, type: !1543)
!7604 = !DILocation(line: 830, column: 34, scope: !7600)
!7605 = !DILocation(line: 832, column: 25, scope: !7600)
!7606 = !DILocation(line: 832, column: 28, scope: !7600)
!7607 = !DILocation(line: 832, column: 9, scope: !7600)
!7608 = !DILocation(line: 832, column: 2, scope: !7600)
!7609 = distinct !DISubprogram(name: "ui_set_but_vectorf", scope: !3, file: !3, line: 1650, type: !7610, scopeLine: 1651, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!7610 = !DISubroutineType(types: !7611)
!7611 = !{null, !1558, !5313}
!7612 = !DILocalVariable(name: "but", arg: 1, scope: !7609, file: !3, line: 1650, type: !1558)
!7613 = !DILocation(line: 1650, column: 32, scope: !7609)
!7614 = !DILocalVariable(name: "vec", arg: 2, scope: !7609, file: !3, line: 1650, type: !5313)
!7615 = !DILocation(line: 1650, column: 49, scope: !7609)
!7616 = !DILocalVariable(name: "prop", scope: !7609, file: !3, line: 1652, type: !3171)
!7617 = !DILocation(line: 1652, column: 15, scope: !7609)
!7618 = !DILocation(line: 1654, column: 6, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 1654, column: 6)
!7620 = !DILocation(line: 1654, column: 11, scope: !7619)
!7621 = !DILocation(line: 1654, column: 6, scope: !7609)
!7622 = !DILocation(line: 1655, column: 14, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 1654, column: 20)
!7624 = !DILocation(line: 1655, column: 19, scope: !7623)
!7625 = !DILocation(line: 1655, column: 28, scope: !7623)
!7626 = !DILocation(line: 1655, column: 3, scope: !7623)
!7627 = !DILocation(line: 1656, column: 2, scope: !7623)
!7628 = !DILocation(line: 1658, column: 6, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 1658, column: 6)
!7630 = !DILocation(line: 1658, column: 11, scope: !7629)
!7631 = !DILocation(line: 1658, column: 6, scope: !7609)
!7632 = !DILocation(line: 1659, column: 10, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7629, file: !3, line: 1658, column: 20)
!7634 = !DILocation(line: 1659, column: 15, scope: !7633)
!7635 = !DILocation(line: 1659, column: 8, scope: !7633)
!7636 = !DILocation(line: 1661, column: 25, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7633, file: !3, line: 1661, column: 7)
!7638 = !DILocation(line: 1661, column: 7, scope: !7637)
!7639 = !DILocation(line: 1661, column: 31, scope: !7637)
!7640 = !DILocation(line: 1661, column: 7, scope: !7633)
!7641 = !DILocalVariable(name: "tot", scope: !7642, file: !3, line: 1662, type: !1067)
!7642 = distinct !DILexicalBlock(scope: !7637, file: !3, line: 1661, column: 46)
!7643 = !DILocation(line: 1662, column: 8, scope: !7642)
!7644 = !DILocalVariable(name: "a", scope: !7642, file: !3, line: 1663, type: !1067)
!7645 = !DILocation(line: 1663, column: 8, scope: !7642)
!7646 = !DILocation(line: 1665, column: 37, scope: !7642)
!7647 = !DILocation(line: 1665, column: 42, scope: !7642)
!7648 = !DILocation(line: 1665, column: 51, scope: !7642)
!7649 = !DILocation(line: 1665, column: 10, scope: !7642)
!7650 = !DILocation(line: 1665, column: 8, scope: !7642)
!7651 = !DILocation(line: 1667, column: 8, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7642, file: !3, line: 1667, column: 8)
!7653 = !DILocation(line: 1667, column: 12, scope: !7652)
!7654 = !DILocation(line: 1667, column: 8, scope: !7642)
!7655 = !DILocation(line: 1668, column: 35, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7652, file: !3, line: 1667, column: 18)
!7657 = !DILocation(line: 1668, column: 40, scope: !7656)
!7658 = !DILocation(line: 1668, column: 49, scope: !7656)
!7659 = !DILocation(line: 1668, column: 55, scope: !7656)
!7660 = !DILocation(line: 1668, column: 5, scope: !7656)
!7661 = !DILocation(line: 1669, column: 4, scope: !7656)
!7662 = !DILocation(line: 1671, column: 18, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7652, file: !3, line: 1670, column: 9)
!7664 = !DILocation(line: 1671, column: 11, scope: !7663)
!7665 = !DILocation(line: 1671, column: 9, scope: !7663)
!7666 = !DILocation(line: 1672, column: 12, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7663, file: !3, line: 1672, column: 5)
!7668 = !DILocation(line: 1672, column: 10, scope: !7667)
!7669 = !DILocation(line: 1672, column: 17, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7667, file: !3, line: 1672, column: 5)
!7671 = !DILocation(line: 1672, column: 21, scope: !7670)
!7672 = !DILocation(line: 1672, column: 19, scope: !7670)
!7673 = !DILocation(line: 1672, column: 5, scope: !7667)
!7674 = !DILocation(line: 1673, column: 36, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7670, file: !3, line: 1672, column: 31)
!7676 = !DILocation(line: 1673, column: 41, scope: !7675)
!7677 = !DILocation(line: 1673, column: 50, scope: !7675)
!7678 = !DILocation(line: 1673, column: 56, scope: !7675)
!7679 = !DILocation(line: 1673, column: 59, scope: !7675)
!7680 = !DILocation(line: 1673, column: 63, scope: !7675)
!7681 = !DILocation(line: 1673, column: 6, scope: !7675)
!7682 = !DILocation(line: 1674, column: 5, scope: !7675)
!7683 = !DILocation(line: 1672, column: 27, scope: !7670)
!7684 = !DILocation(line: 1672, column: 5, scope: !7670)
!7685 = distinct !{!7685, !7673, !7686}
!7686 = !DILocation(line: 1674, column: 5, scope: !7667)
!7687 = !DILocation(line: 1676, column: 3, scope: !7642)
!7688 = !DILocation(line: 1677, column: 2, scope: !7633)
!7689 = !DILocation(line: 1678, column: 11, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7629, file: !3, line: 1678, column: 11)
!7691 = !DILocation(line: 1678, column: 16, scope: !7690)
!7692 = !DILocation(line: 1678, column: 25, scope: !7690)
!7693 = !DILocation(line: 1678, column: 11, scope: !7629)
!7694 = !DILocalVariable(name: "cp", scope: !7695, file: !3, line: 1679, type: !1541)
!7695 = distinct !DILexicalBlock(scope: !7690, file: !3, line: 1678, column: 46)
!7696 = !DILocation(line: 1679, column: 9, scope: !7695)
!7697 = !DILocation(line: 1679, column: 22, scope: !7695)
!7698 = !DILocation(line: 1679, column: 27, scope: !7695)
!7699 = !DILocation(line: 1680, column: 25, scope: !7695)
!7700 = !DILocation(line: 1680, column: 32, scope: !7695)
!7701 = !DILocation(line: 1680, column: 23, scope: !7695)
!7702 = !DILocation(line: 1680, column: 11, scope: !7695)
!7703 = !DILocation(line: 1680, column: 3, scope: !7695)
!7704 = !DILocation(line: 1680, column: 9, scope: !7695)
!7705 = !DILocation(line: 1681, column: 25, scope: !7695)
!7706 = !DILocation(line: 1681, column: 32, scope: !7695)
!7707 = !DILocation(line: 1681, column: 23, scope: !7695)
!7708 = !DILocation(line: 1681, column: 11, scope: !7695)
!7709 = !DILocation(line: 1681, column: 3, scope: !7695)
!7710 = !DILocation(line: 1681, column: 9, scope: !7695)
!7711 = !DILocation(line: 1682, column: 25, scope: !7695)
!7712 = !DILocation(line: 1682, column: 32, scope: !7695)
!7713 = !DILocation(line: 1682, column: 23, scope: !7695)
!7714 = !DILocation(line: 1682, column: 11, scope: !7695)
!7715 = !DILocation(line: 1682, column: 3, scope: !7695)
!7716 = !DILocation(line: 1682, column: 9, scope: !7695)
!7717 = !DILocation(line: 1683, column: 2, scope: !7695)
!7718 = !DILocation(line: 1684, column: 11, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7690, file: !3, line: 1684, column: 11)
!7720 = !DILocation(line: 1684, column: 16, scope: !7719)
!7721 = !DILocation(line: 1684, column: 25, scope: !7719)
!7722 = !DILocation(line: 1684, column: 11, scope: !7690)
!7723 = !DILocalVariable(name: "fp", scope: !7724, file: !3, line: 1685, type: !1543)
!7724 = distinct !DILexicalBlock(scope: !7719, file: !3, line: 1684, column: 47)
!7725 = !DILocation(line: 1685, column: 10, scope: !7724)
!7726 = !DILocation(line: 1685, column: 24, scope: !7724)
!7727 = !DILocation(line: 1685, column: 29, scope: !7724)
!7728 = !DILocation(line: 1685, column: 15, scope: !7724)
!7729 = !DILocation(line: 1686, column: 14, scope: !7724)
!7730 = !DILocation(line: 1686, column: 18, scope: !7724)
!7731 = !DILocation(line: 1686, column: 3, scope: !7724)
!7732 = !DILocation(line: 1687, column: 2, scope: !7724)
!7733 = !DILocation(line: 1688, column: 1, scope: !7609)
!7734 = distinct !DISubprogram(name: "ui_is_but_float", scope: !3, file: !3, line: 1690, type: !7735, scopeLine: 1691, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!7735 = !DISubroutineType(types: !7736)
!7736 = !{!1550, !4088}
!7737 = !DILocalVariable(name: "but", arg: 1, scope: !7734, file: !3, line: 1690, type: !4088)
!7738 = !DILocation(line: 1690, column: 35, scope: !7734)
!7739 = !DILocation(line: 1692, column: 6, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7734, file: !3, line: 1692, column: 6)
!7741 = !DILocation(line: 1692, column: 11, scope: !7740)
!7742 = !DILocation(line: 1692, column: 20, scope: !7740)
!7743 = !DILocation(line: 1692, column: 41, scope: !7740)
!7744 = !DILocation(line: 1692, column: 44, scope: !7740)
!7745 = !DILocation(line: 1692, column: 49, scope: !7740)
!7746 = !DILocation(line: 1692, column: 6, scope: !7734)
!7747 = !DILocation(line: 1693, column: 3, scope: !7740)
!7748 = !DILocation(line: 1695, column: 6, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7734, file: !3, line: 1695, column: 6)
!7750 = !DILocation(line: 1695, column: 11, scope: !7749)
!7751 = !DILocation(line: 1695, column: 19, scope: !7749)
!7752 = !DILocation(line: 1695, column: 40, scope: !7749)
!7753 = !DILocation(line: 1695, column: 45, scope: !7749)
!7754 = !DILocation(line: 1695, column: 22, scope: !7749)
!7755 = !DILocation(line: 1695, column: 54, scope: !7749)
!7756 = !DILocation(line: 1695, column: 6, scope: !7734)
!7757 = !DILocation(line: 1696, column: 3, scope: !7749)
!7758 = !DILocation(line: 1698, column: 2, scope: !7734)
!7759 = !DILocation(line: 1699, column: 1, scope: !7734)
!7760 = distinct !DISubprogram(name: "ui_is_but_bool", scope: !3, file: !3, line: 1701, type: !7735, scopeLine: 1702, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!7761 = !DILocalVariable(name: "but", arg: 1, scope: !7760, file: !3, line: 1701, type: !4088)
!7762 = !DILocation(line: 1701, column: 34, scope: !7760)
!7763 = !DILocation(line: 1703, column: 6, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7760, file: !3, line: 1703, column: 6)
!7765 = !DILocation(line: 1703, column: 6, scope: !7760)
!7766 = !DILocation(line: 1704, column: 3, scope: !7764)
!7767 = !DILocation(line: 1706, column: 6, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7760, file: !3, line: 1706, column: 6)
!7769 = !DILocation(line: 1706, column: 11, scope: !7768)
!7770 = !DILocation(line: 1706, column: 19, scope: !7768)
!7771 = !DILocation(line: 1706, column: 40, scope: !7768)
!7772 = !DILocation(line: 1706, column: 45, scope: !7768)
!7773 = !DILocation(line: 1706, column: 22, scope: !7768)
!7774 = !DILocation(line: 1706, column: 54, scope: !7768)
!7775 = !DILocation(line: 1706, column: 6, scope: !7760)
!7776 = !DILocation(line: 1707, column: 3, scope: !7768)
!7777 = !DILocation(line: 1709, column: 2, scope: !7760)
!7778 = !DILocation(line: 1710, column: 1, scope: !7760)
!7779 = distinct !DISubprogram(name: "ui_is_but_unit", scope: !3, file: !3, line: 1713, type: !7735, scopeLine: 1714, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!7780 = !DILocalVariable(name: "but", arg: 1, scope: !7779, file: !3, line: 1713, type: !4088)
!7781 = !DILocation(line: 1713, column: 34, scope: !7779)
!7782 = !DILocalVariable(name: "unit", scope: !7779, file: !3, line: 1715, type: !7783)
!7783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7784, size: 64)
!7784 = !DIDerivedType(tag: DW_TAG_typedef, name: "UnitSettings", file: !2038, line: 1203, baseType: !2764)
!7785 = !DILocation(line: 1715, column: 16, scope: !7779)
!7786 = !DILocation(line: 1715, column: 23, scope: !7779)
!7787 = !DILocation(line: 1715, column: 28, scope: !7779)
!7788 = !DILocation(line: 1715, column: 35, scope: !7779)
!7789 = !DILocalVariable(name: "unit_type", scope: !7779, file: !3, line: 1716, type: !4766)
!7790 = !DILocation(line: 1716, column: 12, scope: !7779)
!7791 = !DILocation(line: 1716, column: 41, scope: !7779)
!7792 = !DILocation(line: 1716, column: 24, scope: !7779)
!7793 = !DILocation(line: 1718, column: 6, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 1718, column: 6)
!7795 = !DILocation(line: 1718, column: 16, scope: !7794)
!7796 = !DILocation(line: 1718, column: 6, scope: !7779)
!7797 = !DILocation(line: 1719, column: 3, scope: !7794)
!7798 = !DILocation(line: 1722, column: 32, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 1722, column: 6)
!7800 = !DILocation(line: 1722, column: 38, scope: !7799)
!7801 = !DILocation(line: 1722, column: 6, scope: !7799)
!7802 = !DILocation(line: 1722, column: 6, scope: !7779)
!7803 = !DILocation(line: 1723, column: 3, scope: !7799)
!7804 = !DILocation(line: 1727, column: 6, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 1727, column: 6)
!7806 = !DILocation(line: 1727, column: 16, scope: !7805)
!7807 = !DILocation(line: 1727, column: 6, scope: !7779)
!7808 = !DILocation(line: 1728, column: 3, scope: !7805)
!7809 = !DILocation(line: 1730, column: 6, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 1730, column: 6)
!7811 = !DILocation(line: 1730, column: 12, scope: !7810)
!7812 = !DILocation(line: 1730, column: 19, scope: !7810)
!7813 = !DILocation(line: 1730, column: 6, scope: !7779)
!7814 = !DILocation(line: 1731, column: 7, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7816, file: !3, line: 1731, column: 7)
!7816 = distinct !DILexicalBlock(scope: !7810, file: !3, line: 1730, column: 38)
!7817 = !DILocation(line: 1731, column: 17, scope: !7815)
!7818 = !DILocation(line: 1731, column: 7, scope: !7816)
!7819 = !DILocation(line: 1732, column: 4, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7815, file: !3, line: 1731, column: 40)
!7821 = !DILocation(line: 1734, column: 2, scope: !7816)
!7822 = !DILocation(line: 1736, column: 2, scope: !7779)
!7823 = !DILocation(line: 1737, column: 1, scope: !7779)
!7824 = distinct !DISubprogram(name: "uiButGetUnitType", scope: !3, file: !3, line: 3974, type: !7825, scopeLine: 3975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!7825 = !DISubroutineType(types: !7826)
!7826 = !{!1067, !4088}
!7827 = !DILocalVariable(name: "but", arg: 1, scope: !7824, file: !3, line: 3974, type: !4088)
!7828 = !DILocation(line: 3974, column: 35, scope: !7824)
!7829 = !DILocalVariable(name: "ownUnit", scope: !7824, file: !3, line: 3976, type: !1067)
!7830 = !DILocation(line: 3976, column: 6, scope: !7824)
!7831 = !DILocation(line: 3976, column: 21, scope: !7824)
!7832 = !DILocation(line: 3976, column: 26, scope: !7824)
!7833 = !DILocation(line: 3976, column: 16, scope: !7824)
!7834 = !DILocation(line: 3982, column: 7, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7824, file: !3, line: 3982, column: 6)
!7836 = !DILocation(line: 3982, column: 15, scope: !7835)
!7837 = !DILocation(line: 3982, column: 21, scope: !7835)
!7838 = !DILocation(line: 3982, column: 25, scope: !7835)
!7839 = !DILocation(line: 3982, column: 30, scope: !7835)
!7840 = !DILocation(line: 3982, column: 38, scope: !7835)
!7841 = !DILocation(line: 3982, column: 6, scope: !7824)
!7842 = !DILocation(line: 3983, column: 10, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 3982, column: 48)
!7844 = !DILocation(line: 3983, column: 18, scope: !7843)
!7845 = !DILocation(line: 3983, column: 3, scope: !7843)
!7846 = !DILocation(line: 3986, column: 10, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 3985, column: 7)
!7848 = !DILocation(line: 3986, column: 3, scope: !7847)
!7849 = !DILocation(line: 3988, column: 1, scope: !7824)
!7850 = distinct !DISubprogram(name: "ui_is_but_unit_radians_ex", scope: !3, file: !3, line: 106, type: !7851, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!7851 = !DISubroutineType(types: !7852)
!7852 = !{!1550, !7783, !4766}
!7853 = !DILocalVariable(name: "unit", arg: 1, scope: !7850, file: !3, line: 106, type: !7783)
!7854 = !DILocation(line: 106, column: 53, scope: !7850)
!7855 = !DILocalVariable(name: "unit_type", arg: 2, scope: !7850, file: !3, line: 106, type: !4766)
!7856 = !DILocation(line: 106, column: 69, scope: !7850)
!7857 = !DILocation(line: 108, column: 10, scope: !7850)
!7858 = !DILocation(line: 108, column: 16, scope: !7850)
!7859 = !DILocation(line: 108, column: 32, scope: !7850)
!7860 = !DILocation(line: 108, column: 57, scope: !7850)
!7861 = !DILocation(line: 108, column: 60, scope: !7850)
!7862 = !DILocation(line: 108, column: 70, scope: !7850)
!7863 = !DILocation(line: 0, scope: !7850)
!7864 = !DILocation(line: 108, column: 9, scope: !7850)
!7865 = !DILocation(line: 108, column: 2, scope: !7850)
!7866 = distinct !DISubprogram(name: "ui_is_but_compatible", scope: !3, file: !3, line: 1742, type: !4123, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!7867 = !DILocalVariable(name: "but_a", arg: 1, scope: !7866, file: !3, line: 1742, type: !4088)
!7868 = !DILocation(line: 1742, column: 40, scope: !7866)
!7869 = !DILocalVariable(name: "but_b", arg: 2, scope: !7866, file: !3, line: 1742, type: !4088)
!7870 = !DILocation(line: 1742, column: 60, scope: !7866)
!7871 = !DILocation(line: 1744, column: 6, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7866, file: !3, line: 1744, column: 6)
!7873 = !DILocation(line: 1744, column: 13, scope: !7872)
!7874 = !DILocation(line: 1744, column: 21, scope: !7872)
!7875 = !DILocation(line: 1744, column: 28, scope: !7872)
!7876 = !DILocation(line: 1744, column: 18, scope: !7872)
!7877 = !DILocation(line: 1744, column: 6, scope: !7866)
!7878 = !DILocation(line: 1745, column: 3, scope: !7872)
!7879 = !DILocation(line: 1746, column: 6, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7866, file: !3, line: 1746, column: 6)
!7881 = !DILocation(line: 1746, column: 13, scope: !7880)
!7882 = !DILocation(line: 1746, column: 25, scope: !7880)
!7883 = !DILocation(line: 1746, column: 32, scope: !7880)
!7884 = !DILocation(line: 1746, column: 22, scope: !7880)
!7885 = !DILocation(line: 1746, column: 6, scope: !7866)
!7886 = !DILocation(line: 1747, column: 3, scope: !7880)
!7887 = !DILocation(line: 1749, column: 6, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7866, file: !3, line: 1749, column: 6)
!7889 = !DILocation(line: 1749, column: 13, scope: !7888)
!7890 = !DILocation(line: 1749, column: 6, scope: !7866)
!7891 = !DILocation(line: 1750, column: 7, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7893, file: !3, line: 1750, column: 7)
!7893 = distinct !DILexicalBlock(scope: !7888, file: !3, line: 1749, column: 22)
!7894 = !DILocation(line: 1750, column: 14, scope: !7892)
!7895 = !DILocation(line: 1750, column: 22, scope: !7892)
!7896 = !DILocation(line: 1750, column: 30, scope: !7892)
!7897 = !DILocation(line: 1750, column: 37, scope: !7892)
!7898 = !DILocation(line: 1750, column: 45, scope: !7892)
!7899 = !DILocation(line: 1750, column: 27, scope: !7892)
!7900 = !DILocation(line: 1750, column: 7, scope: !7893)
!7901 = !DILocation(line: 1751, column: 4, scope: !7892)
!7902 = !DILocation(line: 1752, column: 7, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7893, file: !3, line: 1752, column: 7)
!7904 = !DILocation(line: 1752, column: 14, scope: !7903)
!7905 = !DILocation(line: 1752, column: 22, scope: !7903)
!7906 = !DILocation(line: 1752, column: 30, scope: !7903)
!7907 = !DILocation(line: 1752, column: 37, scope: !7903)
!7908 = !DILocation(line: 1752, column: 45, scope: !7903)
!7909 = !DILocation(line: 1752, column: 27, scope: !7903)
!7910 = !DILocation(line: 1752, column: 7, scope: !7893)
!7911 = !DILocation(line: 1753, column: 4, scope: !7903)
!7912 = !DILocation(line: 1754, column: 7, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7893, file: !3, line: 1754, column: 7)
!7914 = !DILocation(line: 1754, column: 14, scope: !7913)
!7915 = !DILocation(line: 1754, column: 22, scope: !7913)
!7916 = !DILocation(line: 1754, column: 25, scope: !7913)
!7917 = !DILocation(line: 1754, column: 33, scope: !7913)
!7918 = !DILocation(line: 1754, column: 40, scope: !7913)
!7919 = !DILocation(line: 1754, column: 48, scope: !7913)
!7920 = !DILocation(line: 1754, column: 51, scope: !7913)
!7921 = !DILocation(line: 1754, column: 30, scope: !7913)
!7922 = !DILocation(line: 1754, column: 7, scope: !7893)
!7923 = !DILocation(line: 1755, column: 4, scope: !7913)
!7924 = !DILocation(line: 1756, column: 25, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7893, file: !3, line: 1756, column: 7)
!7926 = !DILocation(line: 1756, column: 32, scope: !7925)
!7927 = !DILocation(line: 1756, column: 7, scope: !7925)
!7928 = !DILocation(line: 1756, column: 62, scope: !7925)
!7929 = !DILocation(line: 1756, column: 69, scope: !7925)
!7930 = !DILocation(line: 1756, column: 44, scope: !7925)
!7931 = !DILocation(line: 1756, column: 41, scope: !7925)
!7932 = !DILocation(line: 1756, column: 7, scope: !7893)
!7933 = !DILocation(line: 1757, column: 4, scope: !7925)
!7934 = !DILocation(line: 1758, column: 28, scope: !7935)
!7935 = distinct !DILexicalBlock(scope: !7893, file: !3, line: 1758, column: 7)
!7936 = !DILocation(line: 1758, column: 35, scope: !7935)
!7937 = !DILocation(line: 1758, column: 7, scope: !7935)
!7938 = !DILocation(line: 1758, column: 68, scope: !7935)
!7939 = !DILocation(line: 1758, column: 75, scope: !7935)
!7940 = !DILocation(line: 1758, column: 47, scope: !7935)
!7941 = !DILocation(line: 1758, column: 44, scope: !7935)
!7942 = !DILocation(line: 1758, column: 7, scope: !7893)
!7943 = !DILocation(line: 1759, column: 4, scope: !7935)
!7944 = !DILocation(line: 1760, column: 2, scope: !7893)
!7945 = !DILocation(line: 1762, column: 2, scope: !7866)
!7946 = !DILocation(line: 1763, column: 1, scope: !7866)
!7947 = distinct !DISubprogram(name: "ui_is_but_rna_valid", scope: !3, file: !3, line: 1765, type: !7948, scopeLine: 1766, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!7948 = !DISubroutineType(types: !7949)
!7949 = !{!1550, !1558}
!7950 = !DILocalVariable(name: "but", arg: 1, scope: !7947, file: !3, line: 1765, type: !1558)
!7951 = !DILocation(line: 1765, column: 33, scope: !7947)
!7952 = !DILocation(line: 1767, column: 6, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 1767, column: 6)
!7954 = !DILocation(line: 1767, column: 11, scope: !7953)
!7955 = !DILocation(line: 1767, column: 19, scope: !7953)
!7956 = !DILocation(line: 1767, column: 27, scope: !7953)
!7957 = !DILocation(line: 1767, column: 60, scope: !7953)
!7958 = !DILocation(line: 1767, column: 65, scope: !7953)
!7959 = !DILocation(line: 1767, column: 74, scope: !7953)
!7960 = !DILocation(line: 1767, column: 79, scope: !7953)
!7961 = !DILocation(line: 1767, column: 30, scope: !7953)
!7962 = !DILocation(line: 1767, column: 6, scope: !7947)
!7963 = !DILocation(line: 1768, column: 3, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7953, file: !3, line: 1767, column: 89)
!7965 = !DILocation(line: 1771, column: 39, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7953, file: !3, line: 1770, column: 7)
!7967 = !DILocation(line: 1771, column: 44, scope: !7966)
!7968 = !DILocation(line: 1771, column: 61, scope: !7966)
!7969 = !DILocation(line: 1771, column: 66, scope: !7966)
!7970 = !DILocation(line: 1771, column: 53, scope: !7966)
!7971 = !DILocation(line: 1771, column: 3, scope: !7966)
!7972 = !DILocation(line: 1772, column: 3, scope: !7966)
!7973 = !DILocation(line: 1774, column: 1, scope: !7947)
!7974 = distinct !DISubprogram(name: "ui_set_but_val", scope: !3, file: !3, line: 1832, type: !7975, scopeLine: 1833, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!7975 = !DISubroutineType(types: !7976)
!7976 = !{null, !1558, !1540}
!7977 = !DILocalVariable(name: "but", arg: 1, scope: !7974, file: !3, line: 1832, type: !1558)
!7978 = !DILocation(line: 1832, column: 28, scope: !7974)
!7979 = !DILocalVariable(name: "value", arg: 2, scope: !7974, file: !3, line: 1832, type: !1540)
!7980 = !DILocation(line: 1832, column: 40, scope: !7974)
!7981 = !DILocalVariable(name: "prop", scope: !7974, file: !3, line: 1834, type: !3171)
!7982 = !DILocation(line: 1834, column: 15, scope: !7974)
!7983 = !DILocation(line: 1837, column: 6, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 1837, column: 6)
!7985 = !DILocation(line: 1837, column: 11, scope: !7984)
!7986 = !DILocation(line: 1837, column: 6, scope: !7974)
!7987 = !DILocation(line: 1838, column: 10, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7984, file: !3, line: 1837, column: 20)
!7989 = !DILocation(line: 1838, column: 15, scope: !7988)
!7990 = !DILocation(line: 1838, column: 8, scope: !7988)
!7991 = !DILocation(line: 1840, column: 30, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7988, file: !3, line: 1840, column: 7)
!7993 = !DILocation(line: 1840, column: 35, scope: !7992)
!7994 = !DILocation(line: 1840, column: 44, scope: !7992)
!7995 = !DILocation(line: 1840, column: 7, scope: !7992)
!7996 = !DILocation(line: 1840, column: 7, scope: !7988)
!7997 = !DILocation(line: 1841, column: 30, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7992, file: !3, line: 1840, column: 51)
!7999 = !DILocation(line: 1841, column: 12, scope: !7998)
!8000 = !DILocation(line: 1841, column: 4, scope: !7998)
!8001 = !DILocation(line: 1843, column: 35, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 1843, column: 10)
!8003 = distinct !DILexicalBlock(scope: !7998, file: !3, line: 1841, column: 37)
!8004 = !DILocation(line: 1843, column: 10, scope: !8002)
!8005 = !DILocation(line: 1843, column: 10, scope: !8003)
!8006 = !DILocation(line: 1844, column: 39, scope: !8002)
!8007 = !DILocation(line: 1844, column: 44, scope: !8002)
!8008 = !DILocation(line: 1844, column: 53, scope: !8002)
!8009 = !DILocation(line: 1844, column: 59, scope: !8002)
!8010 = !DILocation(line: 1844, column: 64, scope: !8002)
!8011 = !DILocation(line: 1844, column: 74, scope: !8002)
!8012 = !DILocation(line: 1844, column: 7, scope: !8002)
!8013 = !DILocation(line: 1846, column: 33, scope: !8002)
!8014 = !DILocation(line: 1846, column: 38, scope: !8002)
!8015 = !DILocation(line: 1846, column: 47, scope: !8002)
!8016 = !DILocation(line: 1846, column: 53, scope: !8002)
!8017 = !DILocation(line: 1846, column: 7, scope: !8002)
!8018 = !DILocation(line: 1847, column: 6, scope: !8003)
!8019 = !DILocation(line: 1849, column: 35, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 1849, column: 10)
!8021 = !DILocation(line: 1849, column: 10, scope: !8020)
!8022 = !DILocation(line: 1849, column: 10, scope: !8003)
!8023 = !DILocation(line: 1850, column: 35, scope: !8020)
!8024 = !DILocation(line: 1850, column: 40, scope: !8020)
!8025 = !DILocation(line: 1850, column: 49, scope: !8020)
!8026 = !DILocation(line: 1850, column: 55, scope: !8020)
!8027 = !DILocation(line: 1850, column: 60, scope: !8020)
!8028 = !DILocation(line: 1850, column: 75, scope: !8020)
!8029 = !DILocation(line: 1850, column: 70, scope: !8020)
!8030 = !DILocation(line: 1850, column: 7, scope: !8020)
!8031 = !DILocation(line: 1852, column: 29, scope: !8020)
!8032 = !DILocation(line: 1852, column: 34, scope: !8020)
!8033 = !DILocation(line: 1852, column: 43, scope: !8020)
!8034 = !DILocation(line: 1852, column: 54, scope: !8020)
!8035 = !DILocation(line: 1852, column: 49, scope: !8020)
!8036 = !DILocation(line: 1852, column: 7, scope: !8020)
!8037 = !DILocation(line: 1853, column: 6, scope: !8003)
!8038 = !DILocation(line: 1855, column: 35, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 1855, column: 10)
!8040 = !DILocation(line: 1855, column: 10, scope: !8039)
!8041 = !DILocation(line: 1855, column: 10, scope: !8003)
!8042 = !DILocation(line: 1856, column: 37, scope: !8039)
!8043 = !DILocation(line: 1856, column: 42, scope: !8039)
!8044 = !DILocation(line: 1856, column: 51, scope: !8039)
!8045 = !DILocation(line: 1856, column: 57, scope: !8039)
!8046 = !DILocation(line: 1856, column: 62, scope: !8039)
!8047 = !DILocation(line: 1856, column: 72, scope: !8039)
!8048 = !DILocation(line: 1856, column: 7, scope: !8039)
!8049 = !DILocation(line: 1858, column: 31, scope: !8039)
!8050 = !DILocation(line: 1858, column: 36, scope: !8039)
!8051 = !DILocation(line: 1858, column: 45, scope: !8039)
!8052 = !DILocation(line: 1858, column: 51, scope: !8039)
!8053 = !DILocation(line: 1858, column: 7, scope: !8039)
!8054 = !DILocation(line: 1859, column: 6, scope: !8003)
!8055 = !DILocation(line: 1861, column: 28, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 1861, column: 10)
!8057 = !DILocation(line: 1861, column: 10, scope: !8056)
!8058 = !DILocation(line: 1861, column: 34, scope: !8056)
!8059 = !DILocation(line: 1861, column: 10, scope: !8003)
!8060 = !DILocalVariable(name: "ivalue", scope: !8061, file: !3, line: 1862, type: !1067)
!8061 = distinct !DILexicalBlock(scope: !8056, file: !3, line: 1861, column: 52)
!8062 = !DILocation(line: 1862, column: 11, scope: !8061)
!8063 = !DILocation(line: 1862, column: 25, scope: !8061)
!8064 = !DILocation(line: 1862, column: 20, scope: !8061)
!8065 = !DILocation(line: 1863, column: 40, scope: !8061)
!8066 = !DILocation(line: 1863, column: 45, scope: !8061)
!8067 = !DILocation(line: 1863, column: 54, scope: !8061)
!8068 = !DILocation(line: 1863, column: 17, scope: !8061)
!8069 = !DILocation(line: 1863, column: 14, scope: !8061)
!8070 = !DILocation(line: 1864, column: 30, scope: !8061)
!8071 = !DILocation(line: 1864, column: 35, scope: !8061)
!8072 = !DILocation(line: 1864, column: 44, scope: !8061)
!8073 = !DILocation(line: 1864, column: 50, scope: !8061)
!8074 = !DILocation(line: 1864, column: 7, scope: !8061)
!8075 = !DILocation(line: 1865, column: 6, scope: !8061)
!8076 = !DILocation(line: 1867, column: 30, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8056, file: !3, line: 1866, column: 11)
!8078 = !DILocation(line: 1867, column: 35, scope: !8077)
!8079 = !DILocation(line: 1867, column: 44, scope: !8077)
!8080 = !DILocation(line: 1867, column: 50, scope: !8077)
!8081 = !DILocation(line: 1867, column: 7, scope: !8077)
!8082 = !DILocation(line: 1869, column: 6, scope: !8003)
!8083 = !DILocation(line: 1871, column: 6, scope: !8003)
!8084 = !DILocation(line: 1873, column: 3, scope: !7998)
!8085 = !DILocation(line: 1877, column: 9, scope: !7988)
!8086 = !DILocation(line: 1878, column: 2, scope: !7988)
!8087 = !DILocation(line: 1879, column: 11, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !7984, file: !3, line: 1879, column: 11)
!8089 = !DILocation(line: 1879, column: 16, scope: !8088)
!8090 = !DILocation(line: 1879, column: 25, scope: !8088)
!8091 = !DILocation(line: 1879, column: 11, scope: !7984)
!8092 = !DILocation(line: 1881, column: 2, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 1879, column: 31)
!8094 = !DILocation(line: 1884, column: 7, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 1884, column: 7)
!8096 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 1882, column: 7)
!8097 = !DILocation(line: 1884, column: 12, scope: !8095)
!8098 = !DILocation(line: 1884, column: 21, scope: !8095)
!8099 = !DILocation(line: 1884, column: 7, scope: !8096)
!8100 = !DILocation(line: 1885, column: 24, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 1884, column: 42)
!8102 = !DILocation(line: 1885, column: 30, scope: !8101)
!8103 = !DILocation(line: 1885, column: 18, scope: !8101)
!8104 = !DILocation(line: 1885, column: 12, scope: !8101)
!8105 = !DILocation(line: 1885, column: 10, scope: !8101)
!8106 = !DILocation(line: 1886, column: 3, scope: !8101)
!8107 = !DILocation(line: 1887, column: 12, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 1887, column: 12)
!8109 = !DILocation(line: 1887, column: 17, scope: !8108)
!8110 = !DILocation(line: 1887, column: 26, scope: !8108)
!8111 = !DILocation(line: 1887, column: 12, scope: !8095)
!8112 = !DILocation(line: 1888, column: 25, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8108, file: !3, line: 1887, column: 48)
!8114 = !DILocation(line: 1888, column: 31, scope: !8113)
!8115 = !DILocation(line: 1888, column: 19, scope: !8113)
!8116 = !DILocation(line: 1888, column: 12, scope: !8113)
!8117 = !DILocation(line: 1888, column: 10, scope: !8113)
!8118 = !DILocation(line: 1889, column: 3, scope: !8113)
!8119 = !DILocation(line: 1890, column: 12, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8108, file: !3, line: 1890, column: 12)
!8121 = !DILocation(line: 1890, column: 17, scope: !8120)
!8122 = !DILocation(line: 1890, column: 26, scope: !8120)
!8123 = !DILocation(line: 1890, column: 12, scope: !8108)
!8124 = !DILocation(line: 1891, column: 23, scope: !8120)
!8125 = !DILocation(line: 1891, column: 29, scope: !8120)
!8126 = !DILocation(line: 1891, column: 17, scope: !8120)
!8127 = !DILocation(line: 1891, column: 12, scope: !8120)
!8128 = !DILocation(line: 1891, column: 10, scope: !8120)
!8129 = !DILocation(line: 1891, column: 4, scope: !8120)
!8130 = !DILocation(line: 1892, column: 12, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8120, file: !3, line: 1892, column: 12)
!8132 = !DILocation(line: 1892, column: 17, scope: !8131)
!8133 = !DILocation(line: 1892, column: 26, scope: !8131)
!8134 = !DILocation(line: 1892, column: 12, scope: !8120)
!8135 = !DILocalVariable(name: "fval", scope: !8136, file: !3, line: 1893, type: !1534)
!8136 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 1892, column: 48)
!8137 = !DILocation(line: 1893, column: 10, scope: !8136)
!8138 = !DILocation(line: 1893, column: 24, scope: !8136)
!8139 = !DILocation(line: 1893, column: 17, scope: !8136)
!8140 = !DILocation(line: 1894, column: 8, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8136, file: !3, line: 1894, column: 8)
!8142 = !DILocation(line: 1894, column: 13, scope: !8141)
!8143 = !DILocation(line: 1894, column: 26, scope: !8141)
!8144 = !DILocation(line: 1894, column: 29, scope: !8141)
!8145 = !DILocation(line: 1894, column: 34, scope: !8141)
!8146 = !DILocation(line: 1894, column: 8, scope: !8136)
!8147 = !DILocation(line: 1894, column: 52, scope: !8141)
!8148 = !DILocation(line: 1894, column: 47, scope: !8141)
!8149 = !DILocation(line: 1895, column: 12, scope: !8136)
!8150 = !DILocation(line: 1895, column: 10, scope: !8136)
!8151 = !DILocation(line: 1896, column: 3, scope: !8136)
!8152 = !DILocation(line: 1899, column: 7, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 1899, column: 7)
!8154 = !DILocation(line: 1899, column: 12, scope: !8153)
!8155 = !DILocation(line: 1899, column: 7, scope: !8096)
!8156 = !DILocation(line: 1900, column: 28, scope: !8153)
!8157 = !DILocation(line: 1900, column: 13, scope: !8153)
!8158 = !DILocation(line: 1900, column: 18, scope: !8153)
!8159 = !DILocation(line: 1900, column: 26, scope: !8153)
!8160 = !DILocation(line: 1900, column: 10, scope: !8153)
!8161 = !DILocation(line: 1900, column: 4, scope: !8153)
!8162 = !DILocation(line: 1901, column: 12, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8153, file: !3, line: 1901, column: 12)
!8164 = !DILocation(line: 1901, column: 17, scope: !8163)
!8165 = !DILocation(line: 1901, column: 26, scope: !8163)
!8166 = !DILocation(line: 1901, column: 12, scope: !8153)
!8167 = !DILocation(line: 1902, column: 41, scope: !8163)
!8168 = !DILocation(line: 1902, column: 35, scope: !8163)
!8169 = !DILocation(line: 1902, column: 22, scope: !8163)
!8170 = !DILocation(line: 1902, column: 27, scope: !8163)
!8171 = !DILocation(line: 1902, column: 33, scope: !8163)
!8172 = !DILocation(line: 1902, column: 12, scope: !8163)
!8173 = !DILocation(line: 1902, column: 10, scope: !8163)
!8174 = !DILocation(line: 1902, column: 4, scope: !8163)
!8175 = !DILocation(line: 1903, column: 12, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 1903, column: 12)
!8177 = !DILocation(line: 1903, column: 17, scope: !8176)
!8178 = !DILocation(line: 1903, column: 26, scope: !8176)
!8179 = !DILocation(line: 1903, column: 12, scope: !8163)
!8180 = !DILocation(line: 1904, column: 43, scope: !8176)
!8181 = !DILocation(line: 1904, column: 36, scope: !8176)
!8182 = !DILocation(line: 1904, column: 23, scope: !8176)
!8183 = !DILocation(line: 1904, column: 28, scope: !8176)
!8184 = !DILocation(line: 1904, column: 12, scope: !8176)
!8185 = !DILocation(line: 1904, column: 34, scope: !8176)
!8186 = !DILocation(line: 1904, column: 10, scope: !8176)
!8187 = !DILocation(line: 1904, column: 4, scope: !8176)
!8188 = !DILocation(line: 1905, column: 12, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 1905, column: 12)
!8190 = !DILocation(line: 1905, column: 17, scope: !8189)
!8191 = !DILocation(line: 1905, column: 26, scope: !8189)
!8192 = !DILocation(line: 1905, column: 12, scope: !8176)
!8193 = !DILocation(line: 1906, column: 39, scope: !8189)
!8194 = !DILocation(line: 1906, column: 34, scope: !8189)
!8195 = !DILocation(line: 1906, column: 21, scope: !8189)
!8196 = !DILocation(line: 1906, column: 26, scope: !8189)
!8197 = !DILocation(line: 1906, column: 12, scope: !8189)
!8198 = !DILocation(line: 1906, column: 32, scope: !8189)
!8199 = !DILocation(line: 1906, column: 10, scope: !8189)
!8200 = !DILocation(line: 1906, column: 4, scope: !8189)
!8201 = !DILocation(line: 1907, column: 12, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8189, file: !3, line: 1907, column: 12)
!8203 = !DILocation(line: 1907, column: 17, scope: !8202)
!8204 = !DILocation(line: 1907, column: 26, scope: !8202)
!8205 = !DILocation(line: 1907, column: 12, scope: !8189)
!8206 = !DILocation(line: 1908, column: 43, scope: !8202)
!8207 = !DILocation(line: 1908, column: 36, scope: !8202)
!8208 = !DILocation(line: 1908, column: 23, scope: !8202)
!8209 = !DILocation(line: 1908, column: 28, scope: !8202)
!8210 = !DILocation(line: 1908, column: 12, scope: !8202)
!8211 = !DILocation(line: 1908, column: 34, scope: !8202)
!8212 = !DILocation(line: 1908, column: 10, scope: !8202)
!8213 = !DILocation(line: 1908, column: 4, scope: !8202)
!8214 = !DILocation(line: 1911, column: 22, scope: !7974)
!8215 = !DILocation(line: 1911, column: 2, scope: !7974)
!8216 = !DILocation(line: 1912, column: 1, scope: !7974)
!8217 = distinct !DISubprogram(name: "ui_check_but_select", scope: !3, file: !3, line: 1450, type: !8218, scopeLine: 1451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!8218 = !DISubroutineType(types: !8219)
!8219 = !{null, !1558, !3254}
!8220 = !DILocalVariable(name: "but", arg: 1, scope: !8217, file: !3, line: 1450, type: !1558)
!8221 = !DILocation(line: 1450, column: 40, scope: !8217)
!8222 = !DILocalVariable(name: "value", arg: 2, scope: !8217, file: !3, line: 1450, type: !3254)
!8223 = !DILocation(line: 1450, column: 53, scope: !8217)
!8224 = !DILocation(line: 1452, column: 28, scope: !8217)
!8225 = !DILocation(line: 1452, column: 33, scope: !8217)
!8226 = !DILocation(line: 1452, column: 10, scope: !8217)
!8227 = !DILocation(line: 1452, column: 2, scope: !8217)
!8228 = !DILocation(line: 1454, column: 4, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8217, file: !3, line: 1452, column: 41)
!8230 = !DILocation(line: 1454, column: 9, scope: !8229)
!8231 = !DILocation(line: 1454, column: 14, scope: !8229)
!8232 = !DILocation(line: 1455, column: 4, scope: !8229)
!8233 = !DILocation(line: 1457, column: 4, scope: !8229)
!8234 = !DILocation(line: 1457, column: 9, scope: !8229)
!8235 = !DILocation(line: 1457, column: 14, scope: !8229)
!8236 = !DILocation(line: 1458, column: 4, scope: !8229)
!8237 = !DILocation(line: 1460, column: 1, scope: !8217)
!8238 = distinct !DISubprogram(name: "ui_get_but_string_max_length", scope: !3, file: !3, line: 1914, type: !7069, scopeLine: 1915, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!8239 = !DILocalVariable(name: "but", arg: 1, scope: !8238, file: !3, line: 1914, type: !1558)
!8240 = !DILocation(line: 1914, column: 41, scope: !8238)
!8241 = !DILocation(line: 1916, column: 6, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8238, file: !3, line: 1916, column: 6)
!8243 = !DILocation(line: 1916, column: 6, scope: !8238)
!8244 = !DILocation(line: 1917, column: 10, scope: !8242)
!8245 = !DILocation(line: 1917, column: 15, scope: !8242)
!8246 = !DILocation(line: 1917, column: 3, scope: !8242)
!8247 = !DILocation(line: 1919, column: 3, scope: !8242)
!8248 = !DILocation(line: 1920, column: 1, scope: !8238)
!8249 = distinct !DISubprogram(name: "ui_get_but_drag_multi_edit", scope: !3, file: !3, line: 1922, type: !8250, scopeLine: 1923, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!8250 = !DISubroutineType(types: !8251)
!8251 = !{!1558, !1558}
!8252 = !DILocalVariable(name: "but", arg: 1, scope: !8249, file: !3, line: 1922, type: !1558)
!8253 = !DILocation(line: 1922, column: 42, scope: !8249)
!8254 = !DILocalVariable(name: "but_iter", scope: !8249, file: !3, line: 1924, type: !1558)
!8255 = !DILocation(line: 1924, column: 9, scope: !8249)
!8256 = !DILocation(line: 1928, column: 18, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 1928, column: 2)
!8258 = !DILocation(line: 1928, column: 23, scope: !8257)
!8259 = !DILocation(line: 1928, column: 30, scope: !8257)
!8260 = !DILocation(line: 1928, column: 38, scope: !8257)
!8261 = !DILocation(line: 1928, column: 16, scope: !8257)
!8262 = !DILocation(line: 1928, column: 7, scope: !8257)
!8263 = !DILocation(line: 1928, column: 45, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8257, file: !3, line: 1928, column: 2)
!8265 = !DILocation(line: 1928, column: 2, scope: !8257)
!8266 = !DILocation(line: 1929, column: 7, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8268, file: !3, line: 1929, column: 7)
!8268 = distinct !DILexicalBlock(scope: !8264, file: !3, line: 1928, column: 82)
!8269 = !DILocation(line: 1929, column: 17, scope: !8267)
!8270 = !DILocation(line: 1929, column: 7, scope: !8268)
!8271 = !DILocation(line: 1930, column: 4, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8267, file: !3, line: 1929, column: 26)
!8273 = !DILocation(line: 1932, column: 2, scope: !8268)
!8274 = !DILocation(line: 1928, column: 66, scope: !8264)
!8275 = !DILocation(line: 1928, column: 76, scope: !8264)
!8276 = !DILocation(line: 1928, column: 64, scope: !8264)
!8277 = !DILocation(line: 1928, column: 2, scope: !8264)
!8278 = distinct !{!8278, !8265, !8279}
!8279 = !DILocation(line: 1932, column: 2, scope: !8257)
!8280 = !DILocation(line: 1934, column: 9, scope: !8249)
!8281 = !DILocation(line: 1934, column: 2, scope: !8249)
!8282 = distinct !DISubprogram(name: "ui_convert_to_unit_alt_name", scope: !3, file: !3, line: 1953, type: !8283, scopeLine: 1954, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!8283 = !DISubroutineType(types: !8284)
!8284 = !{null, !1558, !1541, !1547}
!8285 = !DILocalVariable(name: "but", arg: 1, scope: !8282, file: !3, line: 1953, type: !1558)
!8286 = !DILocation(line: 1953, column: 41, scope: !8282)
!8287 = !DILocalVariable(name: "str", arg: 2, scope: !8282, file: !3, line: 1953, type: !1541)
!8288 = !DILocation(line: 1953, column: 52, scope: !8282)
!8289 = !DILocalVariable(name: "maxlen", arg: 3, scope: !8282, file: !3, line: 1953, type: !1547)
!8290 = !DILocation(line: 1953, column: 64, scope: !8282)
!8291 = !DILocation(line: 1955, column: 21, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 1955, column: 6)
!8293 = !DILocation(line: 1955, column: 6, scope: !8292)
!8294 = !DILocation(line: 1955, column: 6, scope: !8282)
!8295 = !DILocalVariable(name: "unit", scope: !8296, file: !3, line: 1956, type: !7783)
!8296 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 1955, column: 27)
!8297 = !DILocation(line: 1956, column: 17, scope: !8296)
!8298 = !DILocation(line: 1956, column: 24, scope: !8296)
!8299 = !DILocation(line: 1956, column: 29, scope: !8296)
!8300 = !DILocation(line: 1956, column: 36, scope: !8296)
!8301 = !DILocalVariable(name: "unit_type", scope: !8296, file: !3, line: 1957, type: !1067)
!8302 = !DILocation(line: 1957, column: 7, scope: !8296)
!8303 = !DILocation(line: 1957, column: 36, scope: !8296)
!8304 = !DILocation(line: 1957, column: 19, scope: !8296)
!8305 = !DILocalVariable(name: "orig_str", scope: !8296, file: !3, line: 1958, type: !1541)
!8306 = !DILocation(line: 1958, column: 9, scope: !8296)
!8307 = !DILocation(line: 1960, column: 25, scope: !8296)
!8308 = !DILocation(line: 1960, column: 14, scope: !8296)
!8309 = !DILocation(line: 1960, column: 12, scope: !8296)
!8310 = !DILocation(line: 1962, column: 23, scope: !8296)
!8311 = !DILocation(line: 1962, column: 28, scope: !8296)
!8312 = !DILocation(line: 1962, column: 36, scope: !8296)
!8313 = !DILocation(line: 1962, column: 46, scope: !8296)
!8314 = !DILocation(line: 1962, column: 52, scope: !8296)
!8315 = !DILocation(line: 1962, column: 60, scope: !8296)
!8316 = !DILocation(line: 1962, column: 3, scope: !8296)
!8317 = !DILocation(line: 1964, column: 3, scope: !8296)
!8318 = !DILocation(line: 1964, column: 13, scope: !8296)
!8319 = !DILocation(line: 1965, column: 2, scope: !8296)
!8320 = !DILocation(line: 1966, column: 1, scope: !8282)
!8321 = distinct !DISubprogram(name: "ui_get_but_string_ex", scope: !3, file: !3, line: 2015, type: !8322, scopeLine: 2016, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!8322 = !DISubroutineType(types: !8323)
!8323 = !{null, !1558, !1541, !8324, !4766}
!8324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1547)
!8325 = !DILocalVariable(name: "but", arg: 1, scope: !8321, file: !3, line: 2015, type: !1558)
!8326 = !DILocation(line: 2015, column: 34, scope: !8321)
!8327 = !DILocalVariable(name: "str", arg: 2, scope: !8321, file: !3, line: 2015, type: !1541)
!8328 = !DILocation(line: 2015, column: 45, scope: !8321)
!8329 = !DILocalVariable(name: "maxlen", arg: 3, scope: !8321, file: !3, line: 2015, type: !8324)
!8330 = !DILocation(line: 2015, column: 63, scope: !8321)
!8331 = !DILocalVariable(name: "float_precision", arg: 4, scope: !8321, file: !3, line: 2015, type: !4766)
!8332 = !DILocation(line: 2015, column: 81, scope: !8321)
!8333 = !DILocation(line: 2017, column: 6, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8321, file: !3, line: 2017, column: 6)
!8335 = !DILocation(line: 2017, column: 11, scope: !8334)
!8336 = !DILocation(line: 2017, column: 19, scope: !8334)
!8337 = !DILocation(line: 2017, column: 22, scope: !8334)
!8338 = !DILocation(line: 2017, column: 6, scope: !8321)
!8339 = !DILocalVariable(name: "type", scope: !8340, file: !3, line: 2018, type: !8341)
!8340 = distinct !DILexicalBlock(scope: !8334, file: !3, line: 2017, column: 77)
!8341 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyType", file: !965, line: 79, baseType: !998)
!8342 = !DILocation(line: 2018, column: 16, scope: !8340)
!8343 = !DILocalVariable(name: "buf", scope: !8340, file: !3, line: 2019, type: !1647)
!8344 = !DILocation(line: 2019, column: 15, scope: !8340)
!8345 = !DILocalVariable(name: "buf_len", scope: !8340, file: !3, line: 2020, type: !1067)
!8346 = !DILocation(line: 2020, column: 7, scope: !8340)
!8347 = !DILocation(line: 2022, column: 28, scope: !8340)
!8348 = !DILocation(line: 2022, column: 33, scope: !8340)
!8349 = !DILocation(line: 2022, column: 10, scope: !8340)
!8350 = !DILocation(line: 2022, column: 8, scope: !8340)
!8351 = !DILocation(line: 2024, column: 7, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8340, file: !3, line: 2024, column: 7)
!8353 = !DILocation(line: 2024, column: 12, scope: !8352)
!8354 = !DILocation(line: 2024, column: 7, scope: !8340)
!8355 = !DILocation(line: 2026, column: 41, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !8352, file: !3, line: 2024, column: 28)
!8357 = !DILocation(line: 2026, column: 46, scope: !8356)
!8358 = !DILocation(line: 2026, column: 55, scope: !8356)
!8359 = !DILocation(line: 2026, column: 60, scope: !8356)
!8360 = !DILocation(line: 2026, column: 69, scope: !8356)
!8361 = !DILocation(line: 2026, column: 74, scope: !8356)
!8362 = !DILocation(line: 2026, column: 10, scope: !8356)
!8363 = !DILocation(line: 2026, column: 8, scope: !8356)
!8364 = !DILocation(line: 2027, column: 3, scope: !8356)
!8365 = !DILocation(line: 2028, column: 12, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8352, file: !3, line: 2028, column: 12)
!8367 = !DILocation(line: 2028, column: 17, scope: !8366)
!8368 = !DILocation(line: 2028, column: 12, scope: !8352)
!8369 = !DILocalVariable(name: "value", scope: !8370, file: !3, line: 2030, type: !1067)
!8370 = distinct !DILexicalBlock(scope: !8366, file: !3, line: 2028, column: 31)
!8371 = !DILocation(line: 2030, column: 8, scope: !8370)
!8372 = !DILocation(line: 2030, column: 39, scope: !8370)
!8373 = !DILocation(line: 2030, column: 44, scope: !8370)
!8374 = !DILocation(line: 2030, column: 53, scope: !8370)
!8375 = !DILocation(line: 2030, column: 58, scope: !8370)
!8376 = !DILocation(line: 2030, column: 16, scope: !8370)
!8377 = !DILocation(line: 2031, column: 31, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8370, file: !3, line: 2031, column: 8)
!8379 = !DILocation(line: 2031, column: 36, scope: !8378)
!8380 = !DILocation(line: 2031, column: 43, scope: !8378)
!8381 = !DILocation(line: 2031, column: 52, scope: !8378)
!8382 = !DILocation(line: 2031, column: 57, scope: !8378)
!8383 = !DILocation(line: 2031, column: 66, scope: !8378)
!8384 = !DILocation(line: 2031, column: 71, scope: !8378)
!8385 = !DILocation(line: 2031, column: 80, scope: !8378)
!8386 = !DILocation(line: 2031, column: 8, scope: !8378)
!8387 = !DILocation(line: 2031, column: 8, scope: !8370)
!8388 = !DILocation(line: 2032, column: 17, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8378, file: !3, line: 2031, column: 94)
!8390 = !DILocation(line: 2032, column: 22, scope: !8389)
!8391 = !DILocation(line: 2032, column: 27, scope: !8389)
!8392 = !DILocation(line: 2032, column: 5, scope: !8389)
!8393 = !DILocation(line: 2033, column: 11, scope: !8389)
!8394 = !DILocation(line: 2033, column: 9, scope: !8389)
!8395 = !DILocation(line: 2034, column: 4, scope: !8389)
!8396 = !DILocation(line: 2035, column: 3, scope: !8370)
!8397 = !DILocation(line: 2036, column: 12, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8366, file: !3, line: 2036, column: 12)
!8399 = !DILocation(line: 2036, column: 17, scope: !8398)
!8400 = !DILocation(line: 2036, column: 12, scope: !8366)
!8401 = !DILocalVariable(name: "ptr", scope: !8402, file: !3, line: 2038, type: !8403)
!8402 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 2036, column: 34)
!8403 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !965, line: 62, baseType: !1753)
!8404 = !DILocation(line: 2038, column: 15, scope: !8402)
!8405 = !DILocation(line: 2038, column: 47, scope: !8402)
!8406 = !DILocation(line: 2038, column: 52, scope: !8402)
!8407 = !DILocation(line: 2038, column: 61, scope: !8402)
!8408 = !DILocation(line: 2038, column: 66, scope: !8402)
!8409 = !DILocation(line: 2038, column: 21, scope: !8402)
!8410 = !DILocation(line: 2039, column: 42, scope: !8402)
!8411 = !DILocation(line: 2039, column: 47, scope: !8402)
!8412 = !DILocation(line: 2039, column: 10, scope: !8402)
!8413 = !DILocation(line: 2039, column: 8, scope: !8402)
!8414 = !DILocation(line: 2040, column: 3, scope: !8402)
!8415 = !DILocation(line: 2045, column: 8, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8340, file: !3, line: 2045, column: 7)
!8417 = !DILocation(line: 2045, column: 7, scope: !8340)
!8418 = !DILocation(line: 2046, column: 4, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8416, file: !3, line: 2045, column: 13)
!8420 = !DILocation(line: 2046, column: 11, scope: !8419)
!8421 = !DILocation(line: 2047, column: 3, scope: !8419)
!8422 = !DILocation(line: 2048, column: 12, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8416, file: !3, line: 2048, column: 12)
!8424 = !DILocation(line: 2048, column: 16, scope: !8423)
!8425 = !DILocation(line: 2048, column: 19, scope: !8423)
!8426 = !DILocation(line: 2048, column: 26, scope: !8423)
!8427 = !DILocation(line: 2048, column: 23, scope: !8423)
!8428 = !DILocation(line: 2048, column: 12, scope: !8416)
!8429 = !DILocation(line: 2050, column: 11, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8423, file: !3, line: 2048, column: 31)
!8431 = !DILocation(line: 2050, column: 16, scope: !8430)
!8432 = !DILocation(line: 2050, column: 21, scope: !8430)
!8433 = !DILocation(line: 2050, column: 4, scope: !8430)
!8434 = !DILocation(line: 2051, column: 4, scope: !8430)
!8435 = !DILocation(line: 2051, column: 22, scope: !8430)
!8436 = !DILocation(line: 2052, column: 3, scope: !8430)
!8437 = !DILocation(line: 2053, column: 2, scope: !8340)
!8438 = !DILocation(line: 2054, column: 11, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8334, file: !3, line: 2054, column: 11)
!8440 = !DILocation(line: 2054, column: 16, scope: !8439)
!8441 = !DILocation(line: 2054, column: 21, scope: !8439)
!8442 = !DILocation(line: 2054, column: 11, scope: !8334)
!8443 = !DILocation(line: 2056, column: 15, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8439, file: !3, line: 2054, column: 29)
!8445 = !DILocation(line: 2056, column: 20, scope: !8444)
!8446 = !DILocation(line: 2056, column: 25, scope: !8444)
!8447 = !DILocation(line: 2056, column: 31, scope: !8444)
!8448 = !DILocation(line: 2056, column: 3, scope: !8444)
!8449 = !DILocation(line: 2057, column: 3, scope: !8444)
!8450 = !DILocation(line: 2059, column: 11, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8439, file: !3, line: 2059, column: 11)
!8452 = !DILocation(line: 2059, column: 11, scope: !8439)
!8453 = !DILocation(line: 2061, column: 15, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8451, file: !3, line: 2059, column: 61)
!8455 = !DILocation(line: 2061, column: 20, scope: !8454)
!8456 = !DILocation(line: 2061, column: 25, scope: !8454)
!8457 = !DILocation(line: 2061, column: 31, scope: !8454)
!8458 = !DILocation(line: 2061, column: 3, scope: !8454)
!8459 = !DILocation(line: 2062, column: 3, scope: !8454)
!8460 = !DILocation(line: 2064, column: 38, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8451, file: !3, line: 2064, column: 11)
!8462 = !DILocation(line: 2064, column: 43, scope: !8461)
!8463 = !DILocation(line: 2064, column: 48, scope: !8461)
!8464 = !DILocation(line: 2064, column: 11, scope: !8461)
!8465 = !DILocation(line: 2064, column: 11, scope: !8451)
!8466 = !DILocation(line: 2066, column: 2, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8461, file: !3, line: 2064, column: 57)
!8468 = !DILocalVariable(name: "value", scope: !8469, file: !3, line: 2069, type: !1540)
!8469 = distinct !DILexicalBlock(scope: !8461, file: !3, line: 2067, column: 7)
!8470 = !DILocation(line: 2069, column: 10, scope: !8469)
!8471 = !DILocation(line: 2071, column: 26, scope: !8469)
!8472 = !DILocation(line: 2071, column: 11, scope: !8469)
!8473 = !DILocation(line: 2071, column: 9, scope: !8469)
!8474 = !DILocation(line: 2073, column: 23, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8469, file: !3, line: 2073, column: 7)
!8476 = !DILocation(line: 2073, column: 7, scope: !8475)
!8477 = !DILocation(line: 2073, column: 7, scope: !8469)
!8478 = !DILocation(line: 2074, column: 23, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8480, file: !3, line: 2074, column: 8)
!8480 = distinct !DILexicalBlock(scope: !8475, file: !3, line: 2073, column: 29)
!8481 = !DILocation(line: 2074, column: 8, scope: !8479)
!8482 = !DILocation(line: 2074, column: 8, scope: !8480)
!8483 = !DILocation(line: 2075, column: 28, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 2074, column: 29)
!8485 = !DILocation(line: 2075, column: 33, scope: !8484)
!8486 = !DILocation(line: 2075, column: 38, scope: !8484)
!8487 = !DILocation(line: 2075, column: 46, scope: !8484)
!8488 = !DILocation(line: 2075, column: 60, scope: !8484)
!8489 = !DILocation(line: 2075, column: 5, scope: !8484)
!8490 = !DILocation(line: 2076, column: 4, scope: !8484)
!8491 = !DILocalVariable(name: "prec", scope: !8492, file: !3, line: 2078, type: !4766)
!8492 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 2077, column: 9)
!8493 = !DILocation(line: 2078, column: 15, scope: !8492)
!8494 = !DILocation(line: 2078, column: 23, scope: !8492)
!8495 = !DILocation(line: 2078, column: 39, scope: !8492)
!8496 = !DILocation(line: 2078, column: 22, scope: !8492)
!8497 = !DILocation(line: 2078, column: 71, scope: !8492)
!8498 = !DILocation(line: 2078, column: 76, scope: !8492)
!8499 = !DILocation(line: 2078, column: 48, scope: !8492)
!8500 = !DILocation(line: 2078, column: 85, scope: !8492)
!8501 = !DILocation(line: 2079, column: 18, scope: !8492)
!8502 = !DILocation(line: 2079, column: 23, scope: !8492)
!8503 = !DILocation(line: 2079, column: 39, scope: !8492)
!8504 = !DILocation(line: 2079, column: 45, scope: !8492)
!8505 = !DILocation(line: 2079, column: 5, scope: !8492)
!8506 = !DILocation(line: 2081, column: 3, scope: !8480)
!8507 = !DILocation(line: 2083, column: 17, scope: !8475)
!8508 = !DILocation(line: 2083, column: 22, scope: !8475)
!8509 = !DILocation(line: 2083, column: 41, scope: !8475)
!8510 = !DILocation(line: 2083, column: 36, scope: !8475)
!8511 = !DILocation(line: 2083, column: 4, scope: !8475)
!8512 = !DILocation(line: 2085, column: 1, scope: !8321)
!8513 = distinct !DISubprogram(name: "ui_get_but_string_unit", scope: !3, file: !3, line: 1971, type: !8514, scopeLine: 1972, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!8514 = !DISubroutineType(types: !8515)
!8515 = !{null, !1558, !1541, !1067, !1540, !1550, !1067}
!8516 = !DILocalVariable(name: "but", arg: 1, scope: !8513, file: !3, line: 1971, type: !1558)
!8517 = !DILocation(line: 1971, column: 43, scope: !8513)
!8518 = !DILocalVariable(name: "str", arg: 2, scope: !8513, file: !3, line: 1971, type: !1541)
!8519 = !DILocation(line: 1971, column: 54, scope: !8513)
!8520 = !DILocalVariable(name: "len_max", arg: 3, scope: !8513, file: !3, line: 1971, type: !1067)
!8521 = !DILocation(line: 1971, column: 63, scope: !8513)
!8522 = !DILocalVariable(name: "value", arg: 4, scope: !8513, file: !3, line: 1971, type: !1540)
!8523 = !DILocation(line: 1971, column: 79, scope: !8513)
!8524 = !DILocalVariable(name: "pad", arg: 5, scope: !8513, file: !3, line: 1971, type: !1550)
!8525 = !DILocation(line: 1971, column: 91, scope: !8513)
!8526 = !DILocalVariable(name: "float_precision", arg: 6, scope: !8513, file: !3, line: 1971, type: !1067)
!8527 = !DILocation(line: 1971, column: 100, scope: !8513)
!8528 = !DILocalVariable(name: "unit", scope: !8513, file: !3, line: 1973, type: !7783)
!8529 = !DILocation(line: 1973, column: 16, scope: !8513)
!8530 = !DILocation(line: 1973, column: 23, scope: !8513)
!8531 = !DILocation(line: 1973, column: 28, scope: !8513)
!8532 = !DILocation(line: 1973, column: 35, scope: !8513)
!8533 = !DILocalVariable(name: "do_split", scope: !8513, file: !3, line: 1974, type: !4461)
!8534 = !DILocation(line: 1974, column: 13, scope: !8513)
!8535 = !DILocation(line: 1974, column: 25, scope: !8513)
!8536 = !DILocation(line: 1974, column: 31, scope: !8513)
!8537 = !DILocation(line: 1974, column: 36, scope: !8513)
!8538 = !DILocation(line: 1974, column: 59, scope: !8513)
!8539 = !DILocation(line: 1974, column: 24, scope: !8513)
!8540 = !DILocalVariable(name: "unit_type", scope: !8513, file: !3, line: 1975, type: !1067)
!8541 = !DILocation(line: 1975, column: 6, scope: !8513)
!8542 = !DILocation(line: 1975, column: 35, scope: !8513)
!8543 = !DILocation(line: 1975, column: 18, scope: !8513)
!8544 = !DILocalVariable(name: "precision", scope: !8513, file: !3, line: 1976, type: !1067)
!8545 = !DILocation(line: 1976, column: 6, scope: !8513)
!8546 = !DILocation(line: 1978, column: 6, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8513, file: !3, line: 1978, column: 6)
!8548 = !DILocation(line: 1978, column: 12, scope: !8547)
!8549 = !DILocation(line: 1978, column: 25, scope: !8547)
!8550 = !DILocation(line: 1978, column: 6, scope: !8513)
!8551 = !DILocation(line: 1978, column: 36, scope: !8547)
!8552 = !DILocation(line: 1978, column: 42, scope: !8547)
!8553 = !DILocation(line: 1978, column: 55, scope: !8547)
!8554 = !DILocation(line: 1981, column: 6, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8513, file: !3, line: 1981, column: 6)
!8556 = !DILocation(line: 1981, column: 22, scope: !8555)
!8557 = !DILocation(line: 1981, column: 6, scope: !8513)
!8558 = !DILocation(line: 1983, column: 20, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 1981, column: 29)
!8560 = !DILocation(line: 1983, column: 25, scope: !8559)
!8561 = !DILocation(line: 1983, column: 15, scope: !8559)
!8562 = !DILocation(line: 1983, column: 13, scope: !8559)
!8563 = !DILocation(line: 1984, column: 12, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8559, file: !3, line: 1984, column: 12)
!8565 = !DILocation(line: 1984, column: 22, scope: !8564)
!8566 = !DILocation(line: 1984, column: 12, scope: !8559)
!8567 = !DILocation(line: 1984, column: 58, scope: !8564)
!8568 = !DILocation(line: 1984, column: 48, scope: !8564)
!8569 = !DILocation(line: 1985, column: 12, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8564, file: !3, line: 1985, column: 12)
!8571 = !DILocation(line: 1985, column: 22, scope: !8570)
!8572 = !DILocation(line: 1985, column: 12, scope: !8564)
!8573 = !DILocation(line: 1985, column: 58, scope: !8570)
!8574 = !DILocation(line: 1985, column: 48, scope: !8570)
!8575 = !DILocation(line: 1986, column: 2, scope: !8559)
!8576 = !DILocation(line: 1988, column: 15, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 1987, column: 7)
!8578 = !DILocation(line: 1988, column: 13, scope: !8577)
!8579 = !DILocation(line: 1991, column: 17, scope: !8513)
!8580 = !DILocation(line: 1991, column: 22, scope: !8513)
!8581 = !DILocation(line: 1991, column: 53, scope: !8513)
!8582 = !DILocation(line: 1991, column: 58, scope: !8513)
!8583 = !DILocation(line: 1991, column: 31, scope: !8513)
!8584 = !DILocation(line: 1991, column: 66, scope: !8513)
!8585 = !DILocation(line: 1992, column: 17, scope: !8513)
!8586 = !DILocation(line: 1992, column: 23, scope: !8513)
!8587 = !DILocation(line: 1992, column: 31, scope: !8513)
!8588 = !DILocation(line: 1992, column: 66, scope: !8513)
!8589 = !DILocation(line: 1992, column: 76, scope: !8513)
!8590 = !DILocation(line: 1991, column: 2, scope: !8513)
!8591 = !DILocation(line: 1993, column: 1, scope: !8513)
!8592 = distinct !DISubprogram(name: "ui_but_float_precision", scope: !3, file: !3, line: 461, type: !8593, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!8593 = !DISubroutineType(types: !8594)
!8594 = !{!1067, !1558, !1540}
!8595 = !DILocalVariable(name: "but", arg: 1, scope: !8592, file: !3, line: 461, type: !1558)
!8596 = !DILocation(line: 461, column: 42, scope: !8592)
!8597 = !DILocalVariable(name: "value", arg: 2, scope: !8592, file: !3, line: 461, type: !1540)
!8598 = !DILocation(line: 461, column: 54, scope: !8592)
!8599 = !DILocalVariable(name: "prec", scope: !8592, file: !3, line: 463, type: !1067)
!8600 = !DILocation(line: 463, column: 6, scope: !8592)
!8601 = !DILocation(line: 463, column: 18, scope: !8592)
!8602 = !DILocation(line: 463, column: 23, scope: !8592)
!8603 = !DILocation(line: 463, column: 13, scope: !8592)
!8604 = !DILocation(line: 468, column: 29, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8592, file: !3, line: 468, column: 6)
!8606 = !DILocation(line: 468, column: 6, scope: !8605)
!8607 = !DILocation(line: 468, column: 34, scope: !8605)
!8608 = !DILocation(line: 468, column: 37, scope: !8605)
!8609 = !DILocation(line: 468, column: 42, scope: !8605)
!8610 = !DILocation(line: 468, column: 6, scope: !8592)
!8611 = !DILocation(line: 469, column: 8, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8605, file: !3, line: 468, column: 47)
!8613 = !DILocation(line: 470, column: 2, scope: !8612)
!8614 = !DILocation(line: 471, column: 11, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8605, file: !3, line: 471, column: 11)
!8616 = !DILocation(line: 471, column: 16, scope: !8615)
!8617 = !DILocation(line: 471, column: 11, scope: !8605)
!8618 = !DILocation(line: 472, column: 11, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8615, file: !3, line: 471, column: 23)
!8620 = !DILocation(line: 472, column: 16, scope: !8619)
!8621 = !DILocation(line: 472, column: 24, scope: !8619)
!8622 = !DILocation(line: 472, column: 10, scope: !8619)
!8623 = !DILocation(line: 472, column: 8, scope: !8619)
!8624 = !DILocation(line: 473, column: 2, scope: !8619)
!8625 = !DILocation(line: 475, column: 30, scope: !8592)
!8626 = !DILocation(line: 475, column: 36, scope: !8592)
!8627 = !DILocation(line: 475, column: 9, scope: !8592)
!8628 = !DILocation(line: 475, column: 2, scope: !8592)
!8629 = distinct !DISubprogram(name: "ui_get_but_string", scope: !3, file: !3, line: 2086, type: !8630, scopeLine: 2087, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!8630 = !DISubroutineType(types: !8631)
!8631 = !{null, !1558, !1541, !8324}
!8632 = !DILocalVariable(name: "but", arg: 1, scope: !8629, file: !3, line: 2086, type: !1558)
!8633 = !DILocation(line: 2086, column: 31, scope: !8629)
!8634 = !DILocalVariable(name: "str", arg: 2, scope: !8629, file: !3, line: 2086, type: !1541)
!8635 = !DILocation(line: 2086, column: 42, scope: !8629)
!8636 = !DILocalVariable(name: "maxlen", arg: 3, scope: !8629, file: !3, line: 2086, type: !8324)
!8637 = !DILocation(line: 2086, column: 60, scope: !8629)
!8638 = !DILocation(line: 2088, column: 23, scope: !8629)
!8639 = !DILocation(line: 2088, column: 28, scope: !8629)
!8640 = !DILocation(line: 2088, column: 33, scope: !8629)
!8641 = !DILocation(line: 2088, column: 2, scope: !8629)
!8642 = !DILocation(line: 2089, column: 1, scope: !8629)
!8643 = distinct !DISubprogram(name: "ui_set_but_string_eval_num", scope: !3, file: !3, line: 2111, type: !8644, scopeLine: 2112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!8644 = !DISubroutineType(types: !8645)
!8645 = !{!1550, !1536, !1558, !1647, !3254}
!8646 = !DILocalVariable(name: "C", arg: 1, scope: !8643, file: !3, line: 2111, type: !1536)
!8647 = !DILocation(line: 2111, column: 43, scope: !8643)
!8648 = !DILocalVariable(name: "but", arg: 2, scope: !8643, file: !3, line: 2111, type: !1558)
!8649 = !DILocation(line: 2111, column: 53, scope: !8643)
!8650 = !DILocalVariable(name: "str", arg: 3, scope: !8643, file: !3, line: 2111, type: !1647)
!8651 = !DILocation(line: 2111, column: 70, scope: !8643)
!8652 = !DILocalVariable(name: "value", arg: 4, scope: !8643, file: !3, line: 2111, type: !3254)
!8653 = !DILocation(line: 2111, column: 83, scope: !8643)
!8654 = !DILocalVariable(name: "ok", scope: !8643, file: !3, line: 2113, type: !1550)
!8655 = !DILocation(line: 2113, column: 7, scope: !8643)
!8656 = !DILocation(line: 2140, column: 16, scope: !8643)
!8657 = !DILocation(line: 2140, column: 11, scope: !8643)
!8658 = !DILocation(line: 2140, column: 3, scope: !8643)
!8659 = !DILocation(line: 2140, column: 9, scope: !8643)
!8660 = !DILocation(line: 2141, column: 5, scope: !8643)
!8661 = !DILocation(line: 2143, column: 8, scope: !8643)
!8662 = !DILocation(line: 2144, column: 8, scope: !8643)
!8663 = !DILocation(line: 2148, column: 9, scope: !8643)
!8664 = !DILocation(line: 2148, column: 2, scope: !8643)
!8665 = distinct !DISubprogram(name: "ui_set_but_string", scope: !3, file: !3, line: 2152, type: !8666, scopeLine: 2153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!8666 = !DISubroutineType(types: !8667)
!8667 = !{!1550, !1536, !1558, !1647}
!8668 = !DILocalVariable(name: "C", arg: 1, scope: !8665, file: !3, line: 2152, type: !1536)
!8669 = !DILocation(line: 2152, column: 34, scope: !8665)
!8670 = !DILocalVariable(name: "but", arg: 2, scope: !8665, file: !3, line: 2152, type: !1558)
!8671 = !DILocation(line: 2152, column: 44, scope: !8665)
!8672 = !DILocalVariable(name: "str", arg: 3, scope: !8665, file: !3, line: 2152, type: !1647)
!8673 = !DILocation(line: 2152, column: 61, scope: !8665)
!8674 = !DILocation(line: 2154, column: 6, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8665, file: !3, line: 2154, column: 6)
!8676 = !DILocation(line: 2154, column: 11, scope: !8675)
!8677 = !DILocation(line: 2154, column: 19, scope: !8675)
!8678 = !DILocation(line: 2154, column: 22, scope: !8675)
!8679 = !DILocation(line: 2154, column: 6, scope: !8665)
!8680 = !DILocation(line: 2155, column: 30, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 2155, column: 7)
!8682 = distinct !DILexicalBlock(scope: !8675, file: !3, line: 2154, column: 77)
!8683 = !DILocation(line: 2155, column: 35, scope: !8681)
!8684 = !DILocation(line: 2155, column: 44, scope: !8681)
!8685 = !DILocation(line: 2155, column: 49, scope: !8681)
!8686 = !DILocation(line: 2155, column: 7, scope: !8681)
!8687 = !DILocation(line: 2155, column: 7, scope: !8682)
!8688 = !DILocalVariable(name: "type", scope: !8689, file: !3, line: 2156, type: !8341)
!8689 = distinct !DILexicalBlock(scope: !8681, file: !3, line: 2155, column: 59)
!8690 = !DILocation(line: 2156, column: 17, scope: !8689)
!8691 = !DILocation(line: 2158, column: 29, scope: !8689)
!8692 = !DILocation(line: 2158, column: 34, scope: !8689)
!8693 = !DILocation(line: 2158, column: 11, scope: !8689)
!8694 = !DILocation(line: 2158, column: 9, scope: !8689)
!8695 = !DILocation(line: 2160, column: 8, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 2160, column: 8)
!8697 = !DILocation(line: 2160, column: 13, scope: !8696)
!8698 = !DILocation(line: 2160, column: 8, scope: !8689)
!8699 = !DILocation(line: 2162, column: 30, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8696, file: !3, line: 2160, column: 29)
!8701 = !DILocation(line: 2162, column: 35, scope: !8700)
!8702 = !DILocation(line: 2162, column: 44, scope: !8700)
!8703 = !DILocation(line: 2162, column: 49, scope: !8700)
!8704 = !DILocation(line: 2162, column: 58, scope: !8700)
!8705 = !DILocation(line: 2162, column: 5, scope: !8700)
!8706 = !DILocation(line: 2163, column: 5, scope: !8700)
!8707 = !DILocation(line: 2165, column: 13, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8696, file: !3, line: 2165, column: 13)
!8709 = !DILocation(line: 2165, column: 18, scope: !8708)
!8710 = !DILocation(line: 2165, column: 13, scope: !8696)
!8711 = !DILocalVariable(name: "ptr", scope: !8712, file: !3, line: 2167, type: !8403)
!8712 = distinct !DILexicalBlock(scope: !8708, file: !3, line: 2165, column: 35)
!8713 = !DILocation(line: 2167, column: 16, scope: !8712)
!8714 = !DILocalVariable(name: "rptr", scope: !8712, file: !3, line: 2167, type: !8403)
!8715 = !DILocation(line: 2167, column: 21, scope: !8712)
!8716 = !DILocalVariable(name: "prop", scope: !8712, file: !3, line: 2168, type: !3171)
!8717 = !DILocation(line: 2168, column: 18, scope: !8712)
!8718 = !DILocation(line: 2170, column: 9, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8712, file: !3, line: 2170, column: 9)
!8720 = !DILocation(line: 2170, column: 16, scope: !8719)
!8721 = !DILocation(line: 2170, column: 9, scope: !8712)
!8722 = !DILocation(line: 2171, column: 32, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8719, file: !3, line: 2170, column: 25)
!8724 = !DILocation(line: 2171, column: 37, scope: !8723)
!8725 = !DILocation(line: 2171, column: 46, scope: !8723)
!8726 = !DILocation(line: 2171, column: 51, scope: !8723)
!8727 = !DILocation(line: 2171, column: 6, scope: !8723)
!8728 = !DILocation(line: 2172, column: 6, scope: !8723)
!8729 = !DILocation(line: 2175, column: 12, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8719, file: !3, line: 2174, column: 10)
!8731 = !DILocation(line: 2175, column: 17, scope: !8730)
!8732 = !DILocation(line: 2176, column: 13, scope: !8730)
!8733 = !DILocation(line: 2176, column: 18, scope: !8730)
!8734 = !DILocation(line: 2176, column: 11, scope: !8730)
!8735 = !DILocation(line: 2178, column: 10, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 2178, column: 10)
!8737 = !DILocation(line: 2178, column: 15, scope: !8736)
!8738 = !DILocation(line: 2178, column: 62, scope: !8736)
!8739 = !DILocation(line: 2178, column: 68, scope: !8736)
!8740 = !DILocation(line: 2178, column: 18, scope: !8736)
!8741 = !DILocation(line: 2178, column: 10, scope: !8730)
!8742 = !DILocation(line: 2179, column: 33, scope: !8736)
!8743 = !DILocation(line: 2179, column: 38, scope: !8736)
!8744 = !DILocation(line: 2179, column: 47, scope: !8736)
!8745 = !DILocation(line: 2179, column: 52, scope: !8736)
!8746 = !DILocation(line: 2179, column: 7, scope: !8736)
!8747 = !DILocation(line: 2181, column: 6, scope: !8730)
!8748 = !DILocation(line: 2186, column: 13, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8708, file: !3, line: 2186, column: 13)
!8750 = !DILocation(line: 2186, column: 18, scope: !8749)
!8751 = !DILocation(line: 2186, column: 13, scope: !8708)
!8752 = !DILocalVariable(name: "value", scope: !8753, file: !3, line: 2187, type: !1067)
!8753 = distinct !DILexicalBlock(scope: !8749, file: !3, line: 2186, column: 32)
!8754 = !DILocation(line: 2187, column: 9, scope: !8753)
!8755 = !DILocation(line: 2188, column: 33, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8753, file: !3, line: 2188, column: 9)
!8757 = !DILocation(line: 2188, column: 38, scope: !8756)
!8758 = !DILocation(line: 2188, column: 45, scope: !8756)
!8759 = !DILocation(line: 2188, column: 54, scope: !8756)
!8760 = !DILocation(line: 2188, column: 59, scope: !8756)
!8761 = !DILocation(line: 2188, column: 68, scope: !8756)
!8762 = !DILocation(line: 2188, column: 73, scope: !8756)
!8763 = !DILocation(line: 2188, column: 82, scope: !8756)
!8764 = !DILocation(line: 2188, column: 9, scope: !8756)
!8765 = !DILocation(line: 2188, column: 9, scope: !8753)
!8766 = !DILocation(line: 2189, column: 29, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8756, file: !3, line: 2188, column: 96)
!8768 = !DILocation(line: 2189, column: 34, scope: !8767)
!8769 = !DILocation(line: 2189, column: 43, scope: !8767)
!8770 = !DILocation(line: 2189, column: 48, scope: !8767)
!8771 = !DILocation(line: 2189, column: 57, scope: !8767)
!8772 = !DILocation(line: 2189, column: 6, scope: !8767)
!8773 = !DILocation(line: 2190, column: 6, scope: !8767)
!8774 = !DILocation(line: 2192, column: 5, scope: !8753)
!8775 = !DILocation(line: 2197, column: 3, scope: !8689)
!8776 = !DILocation(line: 2198, column: 2, scope: !8682)
!8777 = !DILocation(line: 2199, column: 11, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8675, file: !3, line: 2199, column: 11)
!8779 = !DILocation(line: 2199, column: 16, scope: !8778)
!8780 = !DILocation(line: 2199, column: 21, scope: !8778)
!8781 = !DILocation(line: 2199, column: 11, scope: !8675)
!8782 = !DILocation(line: 2201, column: 22, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8784, file: !3, line: 2201, column: 7)
!8784 = distinct !DILexicalBlock(scope: !8778, file: !3, line: 2199, column: 29)
!8785 = !DILocation(line: 2201, column: 7, scope: !8783)
!8786 = !DILocation(line: 2201, column: 7, scope: !8784)
!8787 = !DILocation(line: 2201, column: 45, scope: !8783)
!8788 = !DILocation(line: 2201, column: 50, scope: !8783)
!8789 = !DILocation(line: 2201, column: 56, scope: !8783)
!8790 = !DILocation(line: 2201, column: 61, scope: !8783)
!8791 = !DILocation(line: 2201, column: 66, scope: !8783)
!8792 = !DILocation(line: 2201, column: 28, scope: !8783)
!8793 = !DILocation(line: 2202, column: 20, scope: !8783)
!8794 = !DILocation(line: 2202, column: 25, scope: !8783)
!8795 = !DILocation(line: 2202, column: 31, scope: !8783)
!8796 = !DILocation(line: 2202, column: 36, scope: !8783)
!8797 = !DILocation(line: 2202, column: 41, scope: !8783)
!8798 = !DILocation(line: 2202, column: 8, scope: !8783)
!8799 = !DILocation(line: 2204, column: 3, scope: !8784)
!8800 = !DILocation(line: 2206, column: 11, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8778, file: !3, line: 2206, column: 11)
!8802 = !DILocation(line: 2206, column: 11, scope: !8778)
!8803 = !DILocation(line: 2208, column: 15, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 2206, column: 61)
!8805 = !DILocation(line: 2208, column: 20, scope: !8804)
!8806 = !DILocation(line: 2208, column: 26, scope: !8804)
!8807 = !DILocation(line: 2208, column: 31, scope: !8804)
!8808 = !DILocation(line: 2208, column: 36, scope: !8804)
!8809 = !DILocation(line: 2208, column: 3, scope: !8804)
!8810 = !DILocation(line: 2209, column: 3, scope: !8804)
!8811 = !DILocation(line: 2211, column: 38, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 2211, column: 11)
!8813 = !DILocation(line: 2211, column: 43, scope: !8812)
!8814 = !DILocation(line: 2211, column: 11, scope: !8812)
!8815 = !DILocation(line: 2211, column: 11, scope: !8801)
!8816 = !DILocation(line: 2213, column: 3, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8812, file: !3, line: 2211, column: 49)
!8818 = !DILocation(line: 2215, column: 11, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8812, file: !3, line: 2215, column: 11)
!8820 = !DILocation(line: 2215, column: 18, scope: !8819)
!8821 = !DILocation(line: 2215, column: 11, scope: !8812)
!8822 = !DILocation(line: 2217, column: 40, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 2215, column: 26)
!8824 = !DILocation(line: 2217, column: 45, scope: !8823)
!8825 = !DILocation(line: 2217, column: 49, scope: !8823)
!8826 = !DILocation(line: 2217, column: 10, scope: !8823)
!8827 = !DILocation(line: 2217, column: 3, scope: !8823)
!8828 = !DILocalVariable(name: "value", scope: !8829, file: !3, line: 2221, type: !1540)
!8829 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 2219, column: 7)
!8830 = !DILocation(line: 2221, column: 10, scope: !8829)
!8831 = !DILocation(line: 2223, column: 34, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 2223, column: 7)
!8833 = !DILocation(line: 2223, column: 37, scope: !8832)
!8834 = !DILocation(line: 2223, column: 42, scope: !8832)
!8835 = !DILocation(line: 2223, column: 7, scope: !8832)
!8836 = !DILocation(line: 2223, column: 55, scope: !8832)
!8837 = !DILocation(line: 2223, column: 7, scope: !8829)
!8838 = !DILocation(line: 2224, column: 4, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 2223, column: 65)
!8840 = !DILocation(line: 2227, column: 24, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 2227, column: 7)
!8842 = !DILocation(line: 2227, column: 8, scope: !8841)
!8843 = !DILocation(line: 2227, column: 7, scope: !8829)
!8844 = !DILocation(line: 2227, column: 49, scope: !8841)
!8845 = !DILocation(line: 2227, column: 55, scope: !8841)
!8846 = !DILocation(line: 2227, column: 43, scope: !8841)
!8847 = !DILocation(line: 2227, column: 38, scope: !8841)
!8848 = !DILocation(line: 2227, column: 36, scope: !8841)
!8849 = !DILocation(line: 2227, column: 30, scope: !8841)
!8850 = !DILocation(line: 2230, column: 7, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 2230, column: 7)
!8852 = !DILocation(line: 2230, column: 23, scope: !8851)
!8853 = !DILocation(line: 2230, column: 28, scope: !8851)
!8854 = !DILocation(line: 2230, column: 15, scope: !8851)
!8855 = !DILocation(line: 2230, column: 13, scope: !8851)
!8856 = !DILocation(line: 2230, column: 7, scope: !8829)
!8857 = !DILocation(line: 2230, column: 45, scope: !8851)
!8858 = !DILocation(line: 2230, column: 50, scope: !8851)
!8859 = !DILocation(line: 2230, column: 43, scope: !8851)
!8860 = !DILocation(line: 2230, column: 37, scope: !8851)
!8861 = !DILocation(line: 2231, column: 7, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 2231, column: 7)
!8863 = !DILocation(line: 2231, column: 23, scope: !8862)
!8864 = !DILocation(line: 2231, column: 28, scope: !8862)
!8865 = !DILocation(line: 2231, column: 15, scope: !8862)
!8866 = !DILocation(line: 2231, column: 13, scope: !8862)
!8867 = !DILocation(line: 2231, column: 7, scope: !8829)
!8868 = !DILocation(line: 2231, column: 45, scope: !8862)
!8869 = !DILocation(line: 2231, column: 50, scope: !8862)
!8870 = !DILocation(line: 2231, column: 43, scope: !8862)
!8871 = !DILocation(line: 2231, column: 37, scope: !8862)
!8872 = !DILocation(line: 2233, column: 18, scope: !8829)
!8873 = !DILocation(line: 2233, column: 23, scope: !8829)
!8874 = !DILocation(line: 2233, column: 3, scope: !8829)
!8875 = !DILocation(line: 2234, column: 3, scope: !8829)
!8876 = !DILocation(line: 2237, column: 2, scope: !8665)
!8877 = !DILocation(line: 2238, column: 1, scope: !8665)
!8878 = distinct !DISubprogram(name: "ui_set_but_default", scope: !3, file: !3, line: 2240, type: !8879, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!8879 = !DISubroutineType(types: !8880)
!8880 = !{null, !1536, !4461, !4461}
!8881 = !DILocalVariable(name: "C", arg: 1, scope: !8878, file: !3, line: 2240, type: !1536)
!8882 = !DILocation(line: 2240, column: 35, scope: !8878)
!8883 = !DILocalVariable(name: "all", arg: 2, scope: !8878, file: !3, line: 2240, type: !4461)
!8884 = !DILocation(line: 2240, column: 49, scope: !8878)
!8885 = !DILocalVariable(name: "use_afterfunc", arg: 3, scope: !8878, file: !3, line: 2240, type: !4461)
!8886 = !DILocation(line: 2240, column: 65, scope: !8878)
!8887 = !DILocalVariable(name: "opstring", scope: !8878, file: !3, line: 2242, type: !1647)
!8888 = !DILocation(line: 2242, column: 14, scope: !8878)
!8889 = !DILocation(line: 2244, column: 6, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 2244, column: 6)
!8891 = !DILocation(line: 2244, column: 6, scope: !8878)
!8892 = !DILocalVariable(name: "ptr", scope: !8893, file: !3, line: 2245, type: !8894)
!8893 = distinct !DILexicalBlock(scope: !8890, file: !3, line: 2244, column: 21)
!8894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8403, size: 64)
!8895 = !DILocation(line: 2245, column: 15, scope: !8893)
!8896 = !DILocalVariable(name: "ot", scope: !8893, file: !3, line: 2246, type: !5372)
!8897 = !DILocation(line: 2246, column: 19, scope: !8893)
!8898 = !DILocation(line: 2246, column: 45, scope: !8893)
!8899 = !DILocation(line: 2246, column: 24, scope: !8893)
!8900 = !DILocation(line: 2247, column: 42, scope: !8893)
!8901 = !DILocation(line: 2247, column: 9, scope: !8893)
!8902 = !DILocation(line: 2247, column: 7, scope: !8893)
!8903 = !DILocation(line: 2248, column: 19, scope: !8893)
!8904 = !DILocation(line: 2248, column: 31, scope: !8893)
!8905 = !DILocation(line: 2248, column: 3, scope: !8893)
!8906 = !DILocation(line: 2249, column: 2, scope: !8893)
!8907 = !DILocalVariable(name: "ptr", scope: !8908, file: !3, line: 2251, type: !8403)
!8908 = distinct !DILexicalBlock(scope: !8890, file: !3, line: 2250, column: 7)
!8909 = !DILocation(line: 2251, column: 14, scope: !8908)
!8910 = !DILocation(line: 2252, column: 39, scope: !8908)
!8911 = !DILocation(line: 2252, column: 3, scope: !8908)
!8912 = !DILocation(line: 2253, column: 32, scope: !8908)
!8913 = !DILocation(line: 2253, column: 3, scope: !8908)
!8914 = !DILocation(line: 2254, column: 25, scope: !8908)
!8915 = !DILocation(line: 2254, column: 28, scope: !8908)
!8916 = !DILocation(line: 2254, column: 3, scope: !8908)
!8917 = !DILocation(line: 2255, column: 3, scope: !8908)
!8918 = !DILocation(line: 2257, column: 1, scope: !8878)
!8919 = distinct !DISubprogram(name: "uiFreeBlock", scope: !3, file: !3, line: 2430, type: !4994, scopeLine: 2431, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!8920 = !DILocalVariable(name: "C", arg: 1, scope: !8919, file: !3, line: 2430, type: !4272)
!8921 = !DILocation(line: 2430, column: 34, scope: !8919)
!8922 = !DILocalVariable(name: "block", arg: 2, scope: !8919, file: !3, line: 2430, type: !1695)
!8923 = !DILocation(line: 2430, column: 46, scope: !8919)
!8924 = !DILocalVariable(name: "but", scope: !8919, file: !3, line: 2432, type: !1558)
!8925 = !DILocation(line: 2432, column: 9, scope: !8919)
!8926 = !DILocation(line: 2434, column: 20, scope: !8919)
!8927 = !DILocation(line: 2434, column: 2, scope: !8919)
!8928 = !DILocation(line: 2436, column: 2, scope: !8919)
!8929 = !DILocation(line: 2436, column: 29, scope: !8919)
!8930 = !DILocation(line: 2436, column: 36, scope: !8919)
!8931 = !DILocation(line: 2436, column: 16, scope: !8919)
!8932 = !DILocation(line: 2436, column: 14, scope: !8919)
!8933 = !DILocation(line: 2437, column: 15, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8919, file: !3, line: 2436, column: 47)
!8935 = !DILocation(line: 2437, column: 18, scope: !8934)
!8936 = !DILocation(line: 2437, column: 3, scope: !8934)
!8937 = distinct !{!8937, !8928, !8938}
!8938 = !DILocation(line: 2438, column: 2, scope: !8919)
!8939 = !DILocation(line: 2440, column: 6, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8919, file: !3, line: 2440, column: 6)
!8941 = !DILocation(line: 2440, column: 13, scope: !8940)
!8942 = !DILocation(line: 2440, column: 6, scope: !8919)
!8943 = !DILocation(line: 2441, column: 3, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8940, file: !3, line: 2440, column: 19)
!8945 = !DILocation(line: 2441, column: 13, scope: !8944)
!8946 = !DILocation(line: 2441, column: 20, scope: !8944)
!8947 = !DILocation(line: 2442, column: 2, scope: !8944)
!8948 = !DILocation(line: 2444, column: 6, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8919, file: !3, line: 2444, column: 6)
!8950 = !DILocation(line: 2444, column: 13, scope: !8949)
!8951 = !DILocation(line: 2444, column: 6, scope: !8919)
!8952 = !DILocation(line: 2445, column: 3, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 2444, column: 24)
!8954 = !DILocation(line: 2445, column: 13, scope: !8953)
!8955 = !DILocation(line: 2445, column: 20, scope: !8953)
!8956 = !DILocation(line: 2446, column: 2, scope: !8953)
!8957 = !DILocation(line: 2448, column: 23, scope: !8919)
!8958 = !DILocation(line: 2448, column: 30, scope: !8919)
!8959 = !DILocation(line: 2448, column: 2, scope: !8919)
!8960 = !DILocation(line: 2450, column: 17, scope: !8919)
!8961 = !DILocation(line: 2450, column: 24, scope: !8919)
!8962 = !DILocation(line: 2450, column: 2, scope: !8919)
!8963 = !DILocation(line: 2452, column: 2, scope: !8919)
!8964 = !DILocation(line: 2452, column: 12, scope: !8919)
!8965 = !DILocation(line: 2453, column: 1, scope: !8919)
!8966 = distinct !DISubprogram(name: "uiFreeBlocks", scope: !3, file: !3, line: 2456, type: !8967, scopeLine: 2457, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!8967 = !DISubroutineType(types: !8968)
!8968 = !{null, !4272, !7267}
!8969 = !DILocalVariable(name: "C", arg: 1, scope: !8966, file: !3, line: 2456, type: !4272)
!8970 = !DILocation(line: 2456, column: 35, scope: !8966)
!8971 = !DILocalVariable(name: "lb", arg: 2, scope: !8966, file: !3, line: 2456, type: !7267)
!8972 = !DILocation(line: 2456, column: 48, scope: !8966)
!8973 = !DILocalVariable(name: "block", scope: !8966, file: !3, line: 2458, type: !1695)
!8974 = !DILocation(line: 2458, column: 11, scope: !8966)
!8975 = !DILocation(line: 2460, column: 2, scope: !8966)
!8976 = !DILocation(line: 2460, column: 30, scope: !8966)
!8977 = !DILocation(line: 2460, column: 18, scope: !8966)
!8978 = !DILocation(line: 2460, column: 16, scope: !8966)
!8979 = !DILocation(line: 2461, column: 15, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8966, file: !3, line: 2460, column: 36)
!8981 = !DILocation(line: 2461, column: 18, scope: !8980)
!8982 = !DILocation(line: 2461, column: 3, scope: !8980)
!8983 = distinct !{!8983, !8975, !8984}
!8984 = !DILocation(line: 2462, column: 2, scope: !8966)
!8985 = !DILocation(line: 2463, column: 1, scope: !8966)
!8986 = distinct !DISubprogram(name: "uiFreeInactiveBlocks", scope: !3, file: !3, line: 2465, type: !8967, scopeLine: 2466, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!8987 = !DILocalVariable(name: "C", arg: 1, scope: !8986, file: !3, line: 2465, type: !4272)
!8988 = !DILocation(line: 2465, column: 43, scope: !8986)
!8989 = !DILocalVariable(name: "lb", arg: 2, scope: !8986, file: !3, line: 2465, type: !7267)
!8990 = !DILocation(line: 2465, column: 56, scope: !8986)
!8991 = !DILocalVariable(name: "block", scope: !8986, file: !3, line: 2467, type: !1695)
!8992 = !DILocation(line: 2467, column: 11, scope: !8986)
!8993 = !DILocalVariable(name: "nextblock", scope: !8986, file: !3, line: 2467, type: !1695)
!8994 = !DILocation(line: 2467, column: 19, scope: !8986)
!8995 = !DILocation(line: 2469, column: 15, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8986, file: !3, line: 2469, column: 2)
!8997 = !DILocation(line: 2469, column: 19, scope: !8996)
!8998 = !DILocation(line: 2469, column: 13, scope: !8996)
!8999 = !DILocation(line: 2469, column: 7, scope: !8996)
!9000 = !DILocation(line: 2469, column: 26, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 2469, column: 2)
!9002 = !DILocation(line: 2469, column: 2, scope: !8996)
!9003 = !DILocation(line: 2470, column: 15, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !9001, file: !3, line: 2469, column: 52)
!9005 = !DILocation(line: 2470, column: 22, scope: !9004)
!9006 = !DILocation(line: 2470, column: 13, scope: !9004)
!9007 = !DILocation(line: 2472, column: 8, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !9004, file: !3, line: 2472, column: 7)
!9009 = !DILocation(line: 2472, column: 15, scope: !9008)
!9010 = !DILocation(line: 2472, column: 7, scope: !9004)
!9011 = !DILocation(line: 2473, column: 9, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !9013, file: !3, line: 2473, column: 8)
!9013 = distinct !DILexicalBlock(scope: !9008, file: !3, line: 2472, column: 23)
!9014 = !DILocation(line: 2473, column: 16, scope: !9012)
!9015 = !DILocation(line: 2473, column: 8, scope: !9013)
!9016 = !DILocation(line: 2474, column: 17, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9012, file: !3, line: 2473, column: 24)
!9018 = !DILocation(line: 2474, column: 21, scope: !9017)
!9019 = !DILocation(line: 2474, column: 5, scope: !9017)
!9020 = !DILocation(line: 2475, column: 17, scope: !9017)
!9021 = !DILocation(line: 2475, column: 20, scope: !9017)
!9022 = !DILocation(line: 2475, column: 5, scope: !9017)
!9023 = !DILocation(line: 2476, column: 4, scope: !9017)
!9024 = !DILocation(line: 2478, column: 5, scope: !9012)
!9025 = !DILocation(line: 2478, column: 12, scope: !9012)
!9026 = !DILocation(line: 2478, column: 19, scope: !9012)
!9027 = !DILocation(line: 2479, column: 3, scope: !9013)
!9028 = !DILocation(line: 2480, column: 2, scope: !9004)
!9029 = !DILocation(line: 2469, column: 41, scope: !9001)
!9030 = !DILocation(line: 2469, column: 39, scope: !9001)
!9031 = !DILocation(line: 2469, column: 2, scope: !9001)
!9032 = distinct !{!9032, !9002, !9033}
!9033 = !DILocation(line: 2480, column: 2, scope: !8996)
!9034 = !DILocation(line: 2481, column: 1, scope: !8986)
!9035 = distinct !DISubprogram(name: "uiBlockSetRegion", scope: !3, file: !3, line: 2483, type: !9036, scopeLine: 2484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!9036 = !DISubroutineType(types: !9037)
!9037 = !{null, !1695, !3112}
!9038 = !DILocalVariable(name: "block", arg: 1, scope: !9035, file: !3, line: 2483, type: !1695)
!9039 = !DILocation(line: 2483, column: 32, scope: !9035)
!9040 = !DILocalVariable(name: "region", arg: 2, scope: !9035, file: !3, line: 2483, type: !3112)
!9041 = !DILocation(line: 2483, column: 48, scope: !9035)
!9042 = !DILocalVariable(name: "lb", scope: !9035, file: !3, line: 2485, type: !7267)
!9043 = !DILocation(line: 2485, column: 12, scope: !9035)
!9044 = !DILocation(line: 2485, column: 18, scope: !9035)
!9045 = !DILocation(line: 2485, column: 26, scope: !9035)
!9046 = !DILocalVariable(name: "oldblock", scope: !9035, file: !3, line: 2486, type: !1695)
!9047 = !DILocation(line: 2486, column: 11, scope: !9035)
!9048 = !DILocation(line: 2490, column: 6, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9035, file: !3, line: 2490, column: 6)
!9050 = !DILocation(line: 2490, column: 6, scope: !9035)
!9051 = !DILocation(line: 2491, column: 29, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9049, file: !3, line: 2490, column: 10)
!9053 = !DILocation(line: 2491, column: 33, scope: !9052)
!9054 = !DILocation(line: 2491, column: 40, scope: !9052)
!9055 = !DILocation(line: 2491, column: 14, scope: !9052)
!9056 = !DILocation(line: 2491, column: 12, scope: !9052)
!9057 = !DILocation(line: 2493, column: 7, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9052, file: !3, line: 2493, column: 7)
!9059 = !DILocation(line: 2493, column: 7, scope: !9052)
!9060 = !DILocation(line: 2494, column: 4, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9058, file: !3, line: 2493, column: 17)
!9062 = !DILocation(line: 2494, column: 14, scope: !9061)
!9063 = !DILocation(line: 2494, column: 21, scope: !9061)
!9064 = !DILocation(line: 2495, column: 4, scope: !9061)
!9065 = !DILocation(line: 2495, column: 14, scope: !9061)
!9066 = !DILocation(line: 2495, column: 20, scope: !9061)
!9067 = !DILocation(line: 2496, column: 4, scope: !9061)
!9068 = !DILocation(line: 2496, column: 14, scope: !9061)
!9069 = !DILocation(line: 2496, column: 21, scope: !9061)
!9070 = !DILocation(line: 2497, column: 3, scope: !9061)
!9071 = !DILocation(line: 2500, column: 15, scope: !9052)
!9072 = !DILocation(line: 2500, column: 19, scope: !9052)
!9073 = !DILocation(line: 2500, column: 3, scope: !9052)
!9074 = !DILocation(line: 2501, column: 2, scope: !9052)
!9075 = !DILocation(line: 2503, column: 20, scope: !9035)
!9076 = !DILocation(line: 2503, column: 2, scope: !9035)
!9077 = !DILocation(line: 2503, column: 9, scope: !9035)
!9078 = !DILocation(line: 2503, column: 18, scope: !9035)
!9079 = !DILocation(line: 2504, column: 1, scope: !9035)
!9080 = distinct !DISubprogram(name: "uiBeginBlock", scope: !3, file: !3, line: 2506, type: !9081, scopeLine: 2507, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!9081 = !DISubroutineType(types: !9082)
!9082 = !{!1695, !4272, !3112, !1647, !1545}
!9083 = !DILocalVariable(name: "C", arg: 1, scope: !9080, file: !3, line: 2506, type: !4272)
!9084 = !DILocation(line: 2506, column: 39, scope: !9080)
!9085 = !DILocalVariable(name: "region", arg: 2, scope: !9080, file: !3, line: 2506, type: !3112)
!9086 = !DILocation(line: 2506, column: 51, scope: !9080)
!9087 = !DILocalVariable(name: "name", arg: 3, scope: !9080, file: !3, line: 2506, type: !1647)
!9088 = !DILocation(line: 2506, column: 71, scope: !9080)
!9089 = !DILocalVariable(name: "dt", arg: 4, scope: !9080, file: !3, line: 2506, type: !1545)
!9090 = !DILocation(line: 2506, column: 83, scope: !9080)
!9091 = !DILocalVariable(name: "block", scope: !9080, file: !3, line: 2508, type: !1695)
!9092 = !DILocation(line: 2508, column: 11, scope: !9080)
!9093 = !DILocalVariable(name: "window", scope: !9080, file: !3, line: 2509, type: !5340)
!9094 = !DILocation(line: 2509, column: 12, scope: !9080)
!9095 = !DILocalVariable(name: "scn", scope: !9080, file: !3, line: 2510, type: !5346)
!9096 = !DILocation(line: 2510, column: 9, scope: !9080)
!9097 = !DILocalVariable(name: "getsizex", scope: !9080, file: !3, line: 2511, type: !1067)
!9098 = !DILocation(line: 2511, column: 6, scope: !9080)
!9099 = !DILocalVariable(name: "getsizey", scope: !9080, file: !3, line: 2511, type: !1067)
!9100 = !DILocation(line: 2511, column: 16, scope: !9080)
!9101 = !DILocation(line: 2513, column: 25, scope: !9080)
!9102 = !DILocation(line: 2513, column: 11, scope: !9080)
!9103 = !DILocation(line: 2513, column: 9, scope: !9080)
!9104 = !DILocation(line: 2514, column: 23, scope: !9080)
!9105 = !DILocation(line: 2514, column: 8, scope: !9080)
!9106 = !DILocation(line: 2514, column: 6, scope: !9080)
!9107 = !DILocation(line: 2516, column: 10, scope: !9080)
!9108 = !DILocation(line: 2516, column: 8, scope: !9080)
!9109 = !DILocation(line: 2517, column: 2, scope: !9080)
!9110 = !DILocation(line: 2517, column: 9, scope: !9080)
!9111 = !DILocation(line: 2517, column: 16, scope: !9080)
!9112 = !DILocation(line: 2518, column: 14, scope: !9080)
!9113 = !DILocation(line: 2518, column: 2, scope: !9080)
!9114 = !DILocation(line: 2518, column: 9, scope: !9080)
!9115 = !DILocation(line: 2518, column: 12, scope: !9080)
!9116 = !DILocation(line: 2519, column: 26, scope: !9080)
!9117 = !DILocation(line: 2519, column: 18, scope: !9080)
!9118 = !DILocation(line: 2519, column: 2, scope: !9080)
!9119 = !DILocation(line: 2519, column: 9, scope: !9080)
!9120 = !DILocation(line: 2519, column: 16, scope: !9080)
!9121 = !DILocation(line: 2521, column: 6, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9080, file: !3, line: 2521, column: 6)
!9123 = !DILocation(line: 2521, column: 6, scope: !9080)
!9124 = !DILocation(line: 2522, column: 3, scope: !9125)
!9125 = distinct !DILexicalBlock(scope: !9122, file: !3, line: 2521, column: 11)
!9126 = !DILocation(line: 2522, column: 10, scope: !9125)
!9127 = !DILocation(line: 2522, column: 24, scope: !9125)
!9128 = !DILocation(line: 2529, column: 15, scope: !9125)
!9129 = !DILocation(line: 2529, column: 22, scope: !9125)
!9130 = !DILocation(line: 2529, column: 38, scope: !9125)
!9131 = !DILocation(line: 2529, column: 43, scope: !9125)
!9132 = !DILocation(line: 2529, column: 60, scope: !9125)
!9133 = !DILocation(line: 2529, column: 3, scope: !9125)
!9134 = !DILocation(line: 2532, column: 17, scope: !9125)
!9135 = !DILocation(line: 2532, column: 3, scope: !9125)
!9136 = !DILocation(line: 2532, column: 10, scope: !9125)
!9137 = !DILocation(line: 2532, column: 15, scope: !9125)
!9138 = !DILocation(line: 2533, column: 10, scope: !9125)
!9139 = !DILocation(line: 2533, column: 17, scope: !9125)
!9140 = !DILocation(line: 2533, column: 3, scope: !9125)
!9141 = !DILocation(line: 2533, column: 24, scope: !9125)
!9142 = !DILocation(line: 2533, column: 29, scope: !9125)
!9143 = !DILocation(line: 2534, column: 2, scope: !9125)
!9144 = !DILocation(line: 2536, column: 14, scope: !9080)
!9145 = !DILocation(line: 2536, column: 21, scope: !9080)
!9146 = !DILocation(line: 2536, column: 27, scope: !9080)
!9147 = !DILocation(line: 2536, column: 2, scope: !9080)
!9148 = !DILocation(line: 2538, column: 6, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9080, file: !3, line: 2538, column: 6)
!9150 = !DILocation(line: 2538, column: 6, scope: !9080)
!9151 = !DILocation(line: 2539, column: 20, scope: !9149)
!9152 = !DILocation(line: 2539, column: 27, scope: !9149)
!9153 = !DILocation(line: 2539, column: 3, scope: !9149)
!9154 = !DILocation(line: 2542, column: 6, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9080, file: !3, line: 2542, column: 6)
!9156 = !DILocation(line: 2542, column: 13, scope: !9155)
!9157 = !DILocation(line: 2542, column: 16, scope: !9155)
!9158 = !DILocation(line: 2542, column: 24, scope: !9155)
!9159 = !DILocation(line: 2542, column: 6, scope: !9080)
!9160 = !DILocation(line: 2543, column: 27, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9155, file: !3, line: 2542, column: 32)
!9162 = !DILocation(line: 2543, column: 35, scope: !9161)
!9163 = !DILocation(line: 2543, column: 43, scope: !9161)
!9164 = !DILocation(line: 2543, column: 51, scope: !9161)
!9165 = !DILocation(line: 2543, column: 58, scope: !9161)
!9166 = !DILocation(line: 2543, column: 3, scope: !9161)
!9167 = !DILocation(line: 2544, column: 25, scope: !9161)
!9168 = !DILocation(line: 2544, column: 33, scope: !9161)
!9169 = !DILocation(line: 2544, column: 41, scope: !9161)
!9170 = !DILocation(line: 2544, column: 3, scope: !9161)
!9171 = !DILocation(line: 2546, column: 32, scope: !9161)
!9172 = !DILocation(line: 2546, column: 43, scope: !9161)
!9173 = !DILocation(line: 2546, column: 50, scope: !9161)
!9174 = !DILocation(line: 2546, column: 41, scope: !9161)
!9175 = !DILocation(line: 2546, column: 26, scope: !9161)
!9176 = !DILocation(line: 2546, column: 24, scope: !9161)
!9177 = !DILocation(line: 2546, column: 3, scope: !9161)
!9178 = !DILocation(line: 2546, column: 10, scope: !9161)
!9179 = !DILocation(line: 2546, column: 17, scope: !9161)
!9180 = !DILocation(line: 2547, column: 2, scope: !9161)
!9181 = !DILocation(line: 2552, column: 27, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9155, file: !3, line: 2548, column: 7)
!9183 = !DILocation(line: 2552, column: 35, scope: !9182)
!9184 = !DILocation(line: 2552, column: 43, scope: !9182)
!9185 = !DILocation(line: 2552, column: 51, scope: !9182)
!9186 = !DILocation(line: 2552, column: 60, scope: !9182)
!9187 = !DILocation(line: 2552, column: 67, scope: !9182)
!9188 = !DILocation(line: 2552, column: 3, scope: !9182)
!9189 = !DILocation(line: 2553, column: 25, scope: !9182)
!9190 = !DILocation(line: 2553, column: 33, scope: !9182)
!9191 = !DILocation(line: 2553, column: 41, scope: !9182)
!9192 = !DILocation(line: 2553, column: 49, scope: !9182)
!9193 = !DILocation(line: 2553, column: 3, scope: !9182)
!9194 = !DILocation(line: 2555, column: 32, scope: !9182)
!9195 = !DILocation(line: 2555, column: 43, scope: !9182)
!9196 = !DILocation(line: 2555, column: 50, scope: !9182)
!9197 = !DILocation(line: 2555, column: 41, scope: !9182)
!9198 = !DILocation(line: 2555, column: 26, scope: !9182)
!9199 = !DILocation(line: 2555, column: 24, scope: !9182)
!9200 = !DILocation(line: 2555, column: 3, scope: !9182)
!9201 = !DILocation(line: 2555, column: 10, scope: !9182)
!9202 = !DILocation(line: 2555, column: 17, scope: !9182)
!9203 = !DILocation(line: 2556, column: 3, scope: !9182)
!9204 = !DILocation(line: 2556, column: 10, scope: !9182)
!9205 = !DILocation(line: 2556, column: 20, scope: !9182)
!9206 = !DILocation(line: 2557, column: 3, scope: !9182)
!9207 = !DILocation(line: 2557, column: 10, scope: !9182)
!9208 = !DILocation(line: 2557, column: 15, scope: !9182)
!9209 = !DILocation(line: 2560, column: 9, scope: !9080)
!9210 = !DILocation(line: 2560, column: 2, scope: !9080)
!9211 = distinct !DISubprogram(name: "uiGetBlock", scope: !3, file: !3, line: 2563, type: !9212, scopeLine: 2564, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!9212 = !DISubroutineType(types: !9213)
!9213 = !{!1695, !1647, !3112}
!9214 = !DILocalVariable(name: "name", arg: 1, scope: !9211, file: !3, line: 2563, type: !1647)
!9215 = !DILocation(line: 2563, column: 33, scope: !9211)
!9216 = !DILocalVariable(name: "ar", arg: 2, scope: !9211, file: !3, line: 2563, type: !3112)
!9217 = !DILocation(line: 2563, column: 48, scope: !9211)
!9218 = !DILocation(line: 2565, column: 25, scope: !9211)
!9219 = !DILocation(line: 2565, column: 29, scope: !9211)
!9220 = !DILocation(line: 2565, column: 39, scope: !9211)
!9221 = !DILocation(line: 2565, column: 9, scope: !9211)
!9222 = !DILocation(line: 2565, column: 2, scope: !9211)
!9223 = distinct !DISubprogram(name: "uiBlockSetEmboss", scope: !3, file: !3, line: 2568, type: !9224, scopeLine: 2569, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!9224 = !DISubroutineType(types: !9225)
!9225 = !{null, !1695, !1542}
!9226 = !DILocalVariable(name: "block", arg: 1, scope: !9223, file: !3, line: 2568, type: !1695)
!9227 = !DILocation(line: 2568, column: 32, scope: !9223)
!9228 = !DILocalVariable(name: "dt", arg: 2, scope: !9223, file: !3, line: 2568, type: !1542)
!9229 = !DILocation(line: 2568, column: 44, scope: !9223)
!9230 = !DILocation(line: 2570, column: 14, scope: !9223)
!9231 = !DILocation(line: 2570, column: 2, scope: !9223)
!9232 = !DILocation(line: 2570, column: 9, scope: !9223)
!9233 = !DILocation(line: 2570, column: 12, scope: !9223)
!9234 = !DILocation(line: 2571, column: 1, scope: !9223)
!9235 = distinct !DISubprogram(name: "ui_set_but_soft_range", scope: !3, file: !3, line: 2288, type: !4535, scopeLine: 2289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!9236 = !DILocalVariable(name: "but", arg: 1, scope: !9235, file: !3, line: 2288, type: !1558)
!9237 = !DILocation(line: 2288, column: 42, scope: !9235)
!9238 = !DILocation(line: 2294, column: 6, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9235, file: !3, line: 2294, column: 6)
!9240 = !DILocation(line: 2294, column: 11, scope: !9239)
!9241 = !DILocation(line: 2294, column: 6, scope: !9235)
!9242 = !DILocalVariable(name: "type", scope: !9243, file: !3, line: 2295, type: !9244)
!9243 = distinct !DILexicalBlock(scope: !9239, file: !3, line: 2294, column: 20)
!9244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8341)
!9245 = !DILocation(line: 2295, column: 22, scope: !9243)
!9246 = !DILocation(line: 2295, column: 47, scope: !9243)
!9247 = !DILocation(line: 2295, column: 52, scope: !9243)
!9248 = !DILocation(line: 2295, column: 29, scope: !9243)
!9249 = !DILocalVariable(name: "softmin", scope: !9243, file: !3, line: 2296, type: !1540)
!9250 = !DILocation(line: 2296, column: 10, scope: !9243)
!9251 = !DILocalVariable(name: "softmax", scope: !9243, file: !3, line: 2296, type: !1540)
!9252 = !DILocation(line: 2296, column: 19, scope: !9243)
!9253 = !DILocalVariable(name: "value_min", scope: !9243, file: !3, line: 2297, type: !1540)
!9254 = !DILocation(line: 2297, column: 10, scope: !9243)
!9255 = !DILocalVariable(name: "value_max", scope: !9243, file: !3, line: 2298, type: !1540)
!9256 = !DILocation(line: 2298, column: 10, scope: !9243)
!9257 = !DILocation(line: 2302, column: 7, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9243, file: !3, line: 2302, column: 7)
!9259 = !DILocation(line: 2302, column: 12, scope: !9258)
!9260 = !DILocation(line: 2302, column: 7, scope: !9243)
!9261 = !DILocalVariable(name: "is_array", scope: !9262, file: !3, line: 2303, type: !4461)
!9262 = distinct !DILexicalBlock(scope: !9258, file: !3, line: 2302, column: 25)
!9263 = !DILocation(line: 2303, column: 15, scope: !9262)
!9264 = !DILocation(line: 2303, column: 51, scope: !9262)
!9265 = !DILocation(line: 2303, column: 56, scope: !9262)
!9266 = !DILocation(line: 2303, column: 26, scope: !9262)
!9267 = !DILocalVariable(name: "imin", scope: !9262, file: !3, line: 2304, type: !1067)
!9268 = !DILocation(line: 2304, column: 8, scope: !9262)
!9269 = !DILocalVariable(name: "imax", scope: !9262, file: !3, line: 2304, type: !1067)
!9270 = !DILocation(line: 2304, column: 14, scope: !9262)
!9271 = !DILocalVariable(name: "istep", scope: !9262, file: !3, line: 2304, type: !1067)
!9272 = !DILocation(line: 2304, column: 20, scope: !9262)
!9273 = !DILocation(line: 2306, column: 31, scope: !9262)
!9274 = !DILocation(line: 2306, column: 36, scope: !9262)
!9275 = !DILocation(line: 2306, column: 45, scope: !9262)
!9276 = !DILocation(line: 2306, column: 50, scope: !9262)
!9277 = !DILocation(line: 2306, column: 4, scope: !9262)
!9278 = !DILocation(line: 2307, column: 15, scope: !9262)
!9279 = !DILocation(line: 2307, column: 20, scope: !9262)
!9280 = !DILocation(line: 2307, column: 14, scope: !9262)
!9281 = !DILocation(line: 2307, column: 41, scope: !9262)
!9282 = !DILocation(line: 2307, column: 12, scope: !9262)
!9283 = !DILocation(line: 2308, column: 15, scope: !9262)
!9284 = !DILocation(line: 2308, column: 20, scope: !9262)
!9285 = !DILocation(line: 2308, column: 14, scope: !9262)
!9286 = !DILocation(line: 2308, column: 40, scope: !9262)
!9287 = !DILocation(line: 2308, column: 12, scope: !9262)
!9288 = !DILocation(line: 2312, column: 8, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9262, file: !3, line: 2312, column: 8)
!9290 = !DILocation(line: 2312, column: 8, scope: !9262)
!9291 = !DILocalVariable(name: "value_range", scope: !9292, file: !3, line: 2313, type: !1840)
!9292 = distinct !DILexicalBlock(scope: !9289, file: !3, line: 2312, column: 18)
!9293 = !DILocation(line: 2313, column: 9, scope: !9292)
!9294 = !DILocation(line: 2314, column: 39, scope: !9292)
!9295 = !DILocation(line: 2314, column: 44, scope: !9292)
!9296 = !DILocation(line: 2314, column: 53, scope: !9292)
!9297 = !DILocation(line: 2314, column: 58, scope: !9292)
!9298 = !DILocation(line: 2314, column: 67, scope: !9292)
!9299 = !DILocation(line: 2314, column: 5, scope: !9292)
!9300 = !DILocation(line: 2315, column: 25, scope: !9292)
!9301 = !DILocation(line: 2315, column: 17, scope: !9292)
!9302 = !DILocation(line: 2315, column: 15, scope: !9292)
!9303 = !DILocation(line: 2316, column: 25, scope: !9292)
!9304 = !DILocation(line: 2316, column: 17, scope: !9292)
!9305 = !DILocation(line: 2316, column: 15, scope: !9292)
!9306 = !DILocation(line: 2317, column: 4, scope: !9292)
!9307 = !DILocation(line: 2319, column: 59, scope: !9308)
!9308 = distinct !DILexicalBlock(scope: !9289, file: !3, line: 2318, column: 9)
!9309 = !DILocation(line: 2319, column: 64, scope: !9308)
!9310 = !DILocation(line: 2319, column: 73, scope: !9308)
!9311 = !DILocation(line: 2319, column: 78, scope: !9308)
!9312 = !DILocation(line: 2319, column: 37, scope: !9308)
!9313 = !DILocation(line: 2319, column: 29, scope: !9308)
!9314 = !DILocation(line: 2319, column: 27, scope: !9308)
!9315 = !DILocation(line: 2319, column: 15, scope: !9308)
!9316 = !DILocation(line: 2321, column: 3, scope: !9262)
!9317 = !DILocation(line: 2322, column: 12, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9258, file: !3, line: 2322, column: 12)
!9319 = !DILocation(line: 2322, column: 17, scope: !9318)
!9320 = !DILocation(line: 2322, column: 12, scope: !9258)
!9321 = !DILocalVariable(name: "is_array", scope: !9322, file: !3, line: 2323, type: !4461)
!9322 = distinct !DILexicalBlock(scope: !9318, file: !3, line: 2322, column: 32)
!9323 = !DILocation(line: 2323, column: 15, scope: !9322)
!9324 = !DILocation(line: 2323, column: 51, scope: !9322)
!9325 = !DILocation(line: 2323, column: 56, scope: !9322)
!9326 = !DILocation(line: 2323, column: 26, scope: !9322)
!9327 = !DILocalVariable(name: "fmin", scope: !9322, file: !3, line: 2324, type: !1534)
!9328 = !DILocation(line: 2324, column: 10, scope: !9322)
!9329 = !DILocalVariable(name: "fmax", scope: !9322, file: !3, line: 2324, type: !1534)
!9330 = !DILocation(line: 2324, column: 16, scope: !9322)
!9331 = !DILocalVariable(name: "fstep", scope: !9322, file: !3, line: 2324, type: !1534)
!9332 = !DILocation(line: 2324, column: 22, scope: !9322)
!9333 = !DILocalVariable(name: "fprecision", scope: !9322, file: !3, line: 2324, type: !1534)
!9334 = !DILocation(line: 2324, column: 29, scope: !9322)
!9335 = !DILocation(line: 2326, column: 33, scope: !9322)
!9336 = !DILocation(line: 2326, column: 38, scope: !9322)
!9337 = !DILocation(line: 2326, column: 47, scope: !9322)
!9338 = !DILocation(line: 2326, column: 52, scope: !9322)
!9339 = !DILocation(line: 2326, column: 4, scope: !9322)
!9340 = !DILocation(line: 2327, column: 15, scope: !9322)
!9341 = !DILocation(line: 2327, column: 20, scope: !9322)
!9342 = !DILocation(line: 2327, column: 14, scope: !9322)
!9343 = !DILocation(line: 2327, column: 49, scope: !9322)
!9344 = !DILocation(line: 2327, column: 12, scope: !9322)
!9345 = !DILocation(line: 2328, column: 15, scope: !9322)
!9346 = !DILocation(line: 2328, column: 20, scope: !9322)
!9347 = !DILocation(line: 2328, column: 14, scope: !9322)
!9348 = !DILocation(line: 2328, column: 47, scope: !9322)
!9349 = !DILocation(line: 2328, column: 12, scope: !9322)
!9350 = !DILocation(line: 2332, column: 8, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 2332, column: 8)
!9352 = !DILocation(line: 2332, column: 8, scope: !9322)
!9353 = !DILocalVariable(name: "value_range", scope: !9354, file: !3, line: 2333, type: !1932)
!9354 = distinct !DILexicalBlock(scope: !9351, file: !3, line: 2332, column: 18)
!9355 = !DILocation(line: 2333, column: 11, scope: !9354)
!9356 = !DILocation(line: 2334, column: 41, scope: !9354)
!9357 = !DILocation(line: 2334, column: 46, scope: !9354)
!9358 = !DILocation(line: 2334, column: 55, scope: !9354)
!9359 = !DILocation(line: 2334, column: 60, scope: !9354)
!9360 = !DILocation(line: 2334, column: 69, scope: !9354)
!9361 = !DILocation(line: 2334, column: 5, scope: !9354)
!9362 = !DILocation(line: 2335, column: 25, scope: !9354)
!9363 = !DILocation(line: 2335, column: 17, scope: !9354)
!9364 = !DILocation(line: 2335, column: 15, scope: !9354)
!9365 = !DILocation(line: 2336, column: 25, scope: !9354)
!9366 = !DILocation(line: 2336, column: 17, scope: !9354)
!9367 = !DILocation(line: 2336, column: 15, scope: !9354)
!9368 = !DILocation(line: 2337, column: 4, scope: !9354)
!9369 = !DILocation(line: 2339, column: 61, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9351, file: !3, line: 2338, column: 9)
!9371 = !DILocation(line: 2339, column: 66, scope: !9370)
!9372 = !DILocation(line: 2339, column: 75, scope: !9370)
!9373 = !DILocation(line: 2339, column: 80, scope: !9370)
!9374 = !DILocation(line: 2339, column: 37, scope: !9370)
!9375 = !DILocation(line: 2339, column: 29, scope: !9370)
!9376 = !DILocation(line: 2339, column: 27, scope: !9370)
!9377 = !DILocation(line: 2339, column: 15, scope: !9370)
!9378 = !DILocation(line: 2341, column: 3, scope: !9322)
!9379 = !DILocation(line: 2343, column: 4, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9318, file: !3, line: 2342, column: 8)
!9381 = !DILocation(line: 2347, column: 7, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9243, file: !3, line: 2347, column: 7)
!9383 = !DILocation(line: 2347, column: 17, scope: !9382)
!9384 = !DILocation(line: 2347, column: 27, scope: !9382)
!9385 = !DILocation(line: 2347, column: 25, scope: !9382)
!9386 = !DILocation(line: 2347, column: 7, scope: !9243)
!9387 = !DILocation(line: 2348, column: 8, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9389, file: !3, line: 2348, column: 8)
!9389 = distinct !DILexicalBlock(scope: !9382, file: !3, line: 2347, column: 36)
!9390 = !DILocation(line: 2348, column: 18, scope: !9388)
!9391 = !DILocation(line: 2348, column: 8, scope: !9389)
!9392 = !DILocation(line: 2349, column: 37, scope: !9388)
!9393 = !DILocation(line: 2349, column: 36, scope: !9388)
!9394 = !DILocation(line: 2349, column: 49, scope: !9388)
!9395 = !DILocation(line: 2349, column: 48, scope: !9388)
!9396 = !DILocation(line: 2349, column: 16, scope: !9388)
!9397 = !DILocation(line: 2349, column: 15, scope: !9388)
!9398 = !DILocation(line: 2349, column: 13, scope: !9388)
!9399 = !DILocation(line: 2349, column: 5, scope: !9388)
!9400 = !DILocation(line: 2351, column: 37, scope: !9388)
!9401 = !DILocation(line: 2351, column: 48, scope: !9388)
!9402 = !DILocation(line: 2351, column: 15, scope: !9388)
!9403 = !DILocation(line: 2351, column: 13, scope: !9388)
!9404 = !DILocation(line: 2353, column: 8, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9389, file: !3, line: 2353, column: 8)
!9406 = !DILocation(line: 2353, column: 26, scope: !9405)
!9407 = !DILocation(line: 2353, column: 31, scope: !9405)
!9408 = !DILocation(line: 2353, column: 18, scope: !9405)
!9409 = !DILocation(line: 2353, column: 16, scope: !9405)
!9410 = !DILocation(line: 2353, column: 8, scope: !9389)
!9411 = !DILocation(line: 2354, column: 23, scope: !9405)
!9412 = !DILocation(line: 2354, column: 28, scope: !9405)
!9413 = !DILocation(line: 2354, column: 15, scope: !9405)
!9414 = !DILocation(line: 2354, column: 13, scope: !9405)
!9415 = !DILocation(line: 2354, column: 5, scope: !9405)
!9416 = !DILocation(line: 2355, column: 3, scope: !9389)
!9417 = !DILocation(line: 2356, column: 7, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9243, file: !3, line: 2356, column: 7)
!9419 = !DILocation(line: 2356, column: 17, scope: !9418)
!9420 = !DILocation(line: 2356, column: 27, scope: !9418)
!9421 = !DILocation(line: 2356, column: 25, scope: !9418)
!9422 = !DILocation(line: 2356, column: 7, scope: !9243)
!9423 = !DILocation(line: 2357, column: 8, scope: !9424)
!9424 = distinct !DILexicalBlock(scope: !9425, file: !3, line: 2357, column: 8)
!9425 = distinct !DILexicalBlock(scope: !9418, file: !3, line: 2356, column: 36)
!9426 = !DILocation(line: 2357, column: 18, scope: !9424)
!9427 = !DILocation(line: 2357, column: 8, scope: !9425)
!9428 = !DILocation(line: 2358, column: 39, scope: !9424)
!9429 = !DILocation(line: 2358, column: 38, scope: !9424)
!9430 = !DILocation(line: 2358, column: 51, scope: !9424)
!9431 = !DILocation(line: 2358, column: 50, scope: !9424)
!9432 = !DILocation(line: 2358, column: 16, scope: !9424)
!9433 = !DILocation(line: 2358, column: 15, scope: !9424)
!9434 = !DILocation(line: 2358, column: 13, scope: !9424)
!9435 = !DILocation(line: 2358, column: 5, scope: !9424)
!9436 = !DILocation(line: 2360, column: 35, scope: !9424)
!9437 = !DILocation(line: 2360, column: 46, scope: !9424)
!9438 = !DILocation(line: 2360, column: 15, scope: !9424)
!9439 = !DILocation(line: 2360, column: 13, scope: !9424)
!9440 = !DILocation(line: 2362, column: 8, scope: !9441)
!9441 = distinct !DILexicalBlock(scope: !9425, file: !3, line: 2362, column: 8)
!9442 = !DILocation(line: 2362, column: 26, scope: !9441)
!9443 = !DILocation(line: 2362, column: 31, scope: !9441)
!9444 = !DILocation(line: 2362, column: 18, scope: !9441)
!9445 = !DILocation(line: 2362, column: 16, scope: !9441)
!9446 = !DILocation(line: 2362, column: 8, scope: !9425)
!9447 = !DILocation(line: 2363, column: 15, scope: !9441)
!9448 = !DILocation(line: 2363, column: 20, scope: !9441)
!9449 = !DILocation(line: 2363, column: 13, scope: !9441)
!9450 = !DILocation(line: 2363, column: 5, scope: !9441)
!9451 = !DILocation(line: 2364, column: 3, scope: !9425)
!9452 = !DILocation(line: 2366, column: 18, scope: !9243)
!9453 = !DILocation(line: 2366, column: 3, scope: !9243)
!9454 = !DILocation(line: 2366, column: 8, scope: !9243)
!9455 = !DILocation(line: 2366, column: 16, scope: !9243)
!9456 = !DILocation(line: 2367, column: 18, scope: !9243)
!9457 = !DILocation(line: 2367, column: 3, scope: !9243)
!9458 = !DILocation(line: 2367, column: 8, scope: !9243)
!9459 = !DILocation(line: 2367, column: 16, scope: !9243)
!9460 = !DILocation(line: 2368, column: 2, scope: !9243)
!9461 = !DILocation(line: 2369, column: 11, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9239, file: !3, line: 2369, column: 11)
!9463 = !DILocation(line: 2369, column: 16, scope: !9462)
!9464 = !DILocation(line: 2369, column: 21, scope: !9462)
!9465 = !DILocation(line: 2369, column: 25, scope: !9462)
!9466 = !DILocation(line: 2369, column: 30, scope: !9462)
!9467 = !DILocation(line: 2369, column: 39, scope: !9462)
!9468 = !DILocation(line: 2369, column: 11, scope: !9239)
!9469 = !DILocalVariable(name: "value", scope: !9470, file: !3, line: 2370, type: !1534)
!9470 = distinct !DILexicalBlock(scope: !9462, file: !3, line: 2369, column: 61)
!9471 = !DILocation(line: 2370, column: 9, scope: !9470)
!9472 = !DILocation(line: 2370, column: 32, scope: !9470)
!9473 = !DILocation(line: 2370, column: 17, scope: !9470)
!9474 = !DILocation(line: 2371, column: 3, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9476, file: !3, line: 2371, column: 3)
!9476 = distinct !DILexicalBlock(scope: !9470, file: !3, line: 2371, column: 3)
!9477 = !DILocation(line: 2371, column: 3, scope: !9476)
!9478 = !DILocation(line: 2371, column: 3, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9475, file: !3, line: 2371, column: 3)
!9480 = !DILocation(line: 2372, column: 25, scope: !9470)
!9481 = !DILocation(line: 2372, column: 30, scope: !9470)
!9482 = !DILocation(line: 2372, column: 39, scope: !9470)
!9483 = !DILocation(line: 2372, column: 18, scope: !9470)
!9484 = !DILocation(line: 2372, column: 3, scope: !9470)
!9485 = !DILocation(line: 2372, column: 8, scope: !9470)
!9486 = !DILocation(line: 2372, column: 16, scope: !9470)
!9487 = !DILocation(line: 2373, column: 25, scope: !9470)
!9488 = !DILocation(line: 2373, column: 30, scope: !9470)
!9489 = !DILocation(line: 2373, column: 39, scope: !9470)
!9490 = !DILocation(line: 2373, column: 18, scope: !9470)
!9491 = !DILocation(line: 2373, column: 3, scope: !9470)
!9492 = !DILocation(line: 2373, column: 8, scope: !9470)
!9493 = !DILocation(line: 2373, column: 16, scope: !9470)
!9494 = !DILocation(line: 2374, column: 2, scope: !9470)
!9495 = !DILocation(line: 2378, column: 1, scope: !9235)
!9496 = distinct !DISubprogram(name: "uiBlockBeginAlign", scope: !3, file: !3, line: 2770, type: !3750, scopeLine: 2771, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!9497 = !DILocalVariable(name: "block", arg: 1, scope: !9496, file: !3, line: 2770, type: !1695)
!9498 = !DILocation(line: 2770, column: 33, scope: !9496)
!9499 = !DILocation(line: 2773, column: 6, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9496, file: !3, line: 2773, column: 6)
!9501 = !DILocation(line: 2773, column: 13, scope: !9500)
!9502 = !DILocation(line: 2773, column: 18, scope: !9500)
!9503 = !DILocation(line: 2773, column: 6, scope: !9496)
!9504 = !DILocation(line: 2773, column: 50, scope: !9500)
!9505 = !DILocation(line: 2773, column: 34, scope: !9500)
!9506 = !DILocation(line: 2775, column: 2, scope: !9496)
!9507 = !DILocation(line: 2775, column: 9, scope: !9496)
!9508 = !DILocation(line: 2775, column: 14, scope: !9496)
!9509 = !DILocation(line: 2776, column: 2, scope: !9496)
!9510 = !DILocation(line: 2776, column: 9, scope: !9496)
!9511 = !DILocation(line: 2776, column: 16, scope: !9496)
!9512 = !DILocation(line: 2779, column: 1, scope: !9496)
!9513 = distinct !DISubprogram(name: "ui_but_can_align", scope: !3, file: !3, line: 2804, type: !7948, scopeLine: 2805, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!9514 = !DILocalVariable(name: "but", arg: 1, scope: !9513, file: !3, line: 2804, type: !1558)
!9515 = !DILocation(line: 2804, column: 30, scope: !9513)
!9516 = !DILocation(line: 2806, column: 10, scope: !9513)
!9517 = !DILocation(line: 2806, column: 9, scope: !9513)
!9518 = !DILocation(line: 2806, column: 2, scope: !9513)
!9519 = distinct !DISubprogram(name: "ui_block_do_align_but", scope: !3, file: !3, line: 2809, type: !9520, scopeLine: 2810, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!9520 = !DISubroutineType(types: !9521)
!9521 = !{null, !1558, !1545}
!9522 = !DILocalVariable(name: "first", arg: 1, scope: !9519, file: !3, line: 2809, type: !1558)
!9523 = !DILocation(line: 2809, column: 42, scope: !9519)
!9524 = !DILocalVariable(name: "nr", arg: 2, scope: !9519, file: !3, line: 2809, type: !1545)
!9525 = !DILocation(line: 2809, column: 55, scope: !9519)
!9526 = !DILocalVariable(name: "prev", scope: !9519, file: !3, line: 2811, type: !1558)
!9527 = !DILocation(line: 2811, column: 9, scope: !9519)
!9528 = !DILocalVariable(name: "but", scope: !9519, file: !3, line: 2811, type: !1558)
!9529 = !DILocation(line: 2811, column: 16, scope: !9519)
!9530 = !DILocalVariable(name: "next", scope: !9519, file: !3, line: 2811, type: !1558)
!9531 = !DILocation(line: 2811, column: 29, scope: !9519)
!9532 = !DILocalVariable(name: "flag", scope: !9519, file: !3, line: 2812, type: !1067)
!9533 = !DILocation(line: 2812, column: 6, scope: !9519)
!9534 = !DILocalVariable(name: "cols", scope: !9519, file: !3, line: 2812, type: !1067)
!9535 = !DILocation(line: 2812, column: 16, scope: !9519)
!9536 = !DILocalVariable(name: "rows", scope: !9519, file: !3, line: 2812, type: !1067)
!9537 = !DILocation(line: 2812, column: 26, scope: !9519)
!9538 = !DILocation(line: 2816, column: 13, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 2816, column: 2)
!9540 = !DILocation(line: 2816, column: 11, scope: !9539)
!9541 = !DILocation(line: 2816, column: 7, scope: !9539)
!9542 = !DILocation(line: 2816, column: 20, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9539, file: !3, line: 2816, column: 2)
!9544 = !DILocation(line: 2816, column: 24, scope: !9543)
!9545 = !DILocation(line: 2816, column: 27, scope: !9543)
!9546 = !DILocation(line: 2816, column: 32, scope: !9543)
!9547 = !DILocation(line: 2816, column: 43, scope: !9543)
!9548 = !DILocation(line: 2816, column: 40, scope: !9543)
!9549 = !DILocation(line: 0, scope: !9543)
!9550 = !DILocation(line: 2816, column: 2, scope: !9539)
!9551 = !DILocation(line: 2817, column: 7, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9553, file: !3, line: 2817, column: 7)
!9553 = distinct !DILexicalBlock(scope: !9543, file: !3, line: 2816, column: 64)
!9554 = !DILocation(line: 2817, column: 12, scope: !9552)
!9555 = !DILocation(line: 2817, column: 17, scope: !9552)
!9556 = !DILocation(line: 2817, column: 20, scope: !9552)
!9557 = !DILocation(line: 2817, column: 25, scope: !9552)
!9558 = !DILocation(line: 2817, column: 31, scope: !9552)
!9559 = !DILocation(line: 2817, column: 42, scope: !9552)
!9560 = !DILocation(line: 2817, column: 39, scope: !9552)
!9561 = !DILocation(line: 2817, column: 7, scope: !9553)
!9562 = !DILocation(line: 2818, column: 23, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9564, file: !3, line: 2818, column: 8)
!9564 = distinct !DILexicalBlock(scope: !9552, file: !3, line: 2817, column: 46)
!9565 = !DILocation(line: 2818, column: 28, scope: !9563)
!9566 = !DILocation(line: 2818, column: 33, scope: !9563)
!9567 = !DILocation(line: 2818, column: 8, scope: !9563)
!9568 = !DILocation(line: 2818, column: 8, scope: !9564)
!9569 = !DILocation(line: 2818, column: 44, scope: !9563)
!9570 = !DILocation(line: 2818, column: 40, scope: !9563)
!9571 = !DILocation(line: 2819, column: 13, scope: !9563)
!9572 = !DILocation(line: 2820, column: 3, scope: !9564)
!9573 = !DILocation(line: 2821, column: 2, scope: !9553)
!9574 = !DILocation(line: 2816, column: 53, scope: !9543)
!9575 = !DILocation(line: 2816, column: 58, scope: !9543)
!9576 = !DILocation(line: 2816, column: 51, scope: !9543)
!9577 = !DILocation(line: 2816, column: 2, scope: !9543)
!9578 = distinct !{!9578, !9550, !9579}
!9579 = !DILocation(line: 2821, column: 2, scope: !9539)
!9580 = !DILocation(line: 2826, column: 13, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 2826, column: 2)
!9582 = !DILocation(line: 2826, column: 11, scope: !9581)
!9583 = !DILocation(line: 2826, column: 25, scope: !9581)
!9584 = !DILocation(line: 2826, column: 7, scope: !9581)
!9585 = !DILocation(line: 2826, column: 33, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9581, file: !3, line: 2826, column: 2)
!9587 = !DILocation(line: 2826, column: 37, scope: !9586)
!9588 = !DILocation(line: 2826, column: 40, scope: !9586)
!9589 = !DILocation(line: 2826, column: 45, scope: !9586)
!9590 = !DILocation(line: 2826, column: 56, scope: !9586)
!9591 = !DILocation(line: 2826, column: 53, scope: !9586)
!9592 = !DILocation(line: 0, scope: !9586)
!9593 = !DILocation(line: 2826, column: 2, scope: !9581)
!9594 = !DILocation(line: 2827, column: 10, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9586, file: !3, line: 2826, column: 89)
!9596 = !DILocation(line: 2827, column: 15, scope: !9595)
!9597 = !DILocation(line: 2827, column: 8, scope: !9595)
!9598 = !DILocation(line: 2828, column: 7, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9595, file: !3, line: 2828, column: 7)
!9600 = !DILocation(line: 2828, column: 12, scope: !9599)
!9601 = !DILocation(line: 2828, column: 15, scope: !9599)
!9602 = !DILocation(line: 2828, column: 21, scope: !9599)
!9603 = !DILocation(line: 2828, column: 32, scope: !9599)
!9604 = !DILocation(line: 2828, column: 29, scope: !9599)
!9605 = !DILocation(line: 2828, column: 7, scope: !9595)
!9606 = !DILocation(line: 2829, column: 9, scope: !9599)
!9607 = !DILocation(line: 2829, column: 4, scope: !9599)
!9608 = !DILocation(line: 2832, column: 3, scope: !9595)
!9609 = !DILocation(line: 2832, column: 8, scope: !9595)
!9610 = !DILocation(line: 2832, column: 17, scope: !9595)
!9611 = !DILocation(line: 2834, column: 7, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9595, file: !3, line: 2834, column: 7)
!9613 = !DILocation(line: 2834, column: 12, scope: !9612)
!9614 = !DILocation(line: 2834, column: 7, scope: !9595)
!9615 = !DILocation(line: 2835, column: 8, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9617, file: !3, line: 2835, column: 8)
!9617 = distinct !DILexicalBlock(scope: !9612, file: !3, line: 2834, column: 18)
!9618 = !DILocation(line: 2835, column: 8, scope: !9617)
!9619 = !DILocation(line: 2836, column: 24, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9621, file: !3, line: 2836, column: 9)
!9621 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 2835, column: 14)
!9622 = !DILocation(line: 2836, column: 29, scope: !9620)
!9623 = !DILocation(line: 2836, column: 9, scope: !9620)
!9624 = !DILocation(line: 2836, column: 9, scope: !9621)
!9625 = !DILocation(line: 2837, column: 10, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9627, file: !3, line: 2837, column: 10)
!9627 = distinct !DILexicalBlock(scope: !9620, file: !3, line: 2836, column: 36)
!9628 = !DILocation(line: 2837, column: 15, scope: !9626)
!9629 = !DILocation(line: 2837, column: 10, scope: !9627)
!9630 = !DILocation(line: 2838, column: 12, scope: !9626)
!9631 = !DILocation(line: 2838, column: 7, scope: !9626)
!9632 = !DILocation(line: 2840, column: 12, scope: !9626)
!9633 = !DILocation(line: 2841, column: 5, scope: !9627)
!9634 = !DILocation(line: 2843, column: 11, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9620, file: !3, line: 2842, column: 10)
!9636 = !DILocation(line: 2845, column: 4, scope: !9621)
!9637 = !DILocation(line: 2846, column: 3, scope: !9617)
!9638 = !DILocation(line: 2847, column: 12, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9612, file: !3, line: 2847, column: 12)
!9640 = !DILocation(line: 2847, column: 17, scope: !9639)
!9641 = !DILocation(line: 2847, column: 12, scope: !9612)
!9642 = !DILocation(line: 2848, column: 8, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9644, file: !3, line: 2848, column: 8)
!9644 = distinct !DILexicalBlock(scope: !9639, file: !3, line: 2847, column: 26)
!9645 = !DILocation(line: 2848, column: 8, scope: !9644)
!9646 = !DILocation(line: 2849, column: 24, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9648, file: !3, line: 2849, column: 9)
!9648 = distinct !DILexicalBlock(scope: !9643, file: !3, line: 2848, column: 14)
!9649 = !DILocation(line: 2849, column: 30, scope: !9647)
!9650 = !DILocation(line: 2849, column: 9, scope: !9647)
!9651 = !DILocation(line: 2849, column: 9, scope: !9648)
!9652 = !DILocation(line: 2850, column: 10, scope: !9653)
!9653 = distinct !DILexicalBlock(scope: !9654, file: !3, line: 2850, column: 10)
!9654 = distinct !DILexicalBlock(scope: !9647, file: !3, line: 2849, column: 36)
!9655 = !DILocation(line: 2850, column: 15, scope: !9653)
!9656 = !DILocation(line: 2850, column: 10, scope: !9654)
!9657 = !DILocation(line: 2851, column: 12, scope: !9653)
!9658 = !DILocation(line: 2851, column: 7, scope: !9653)
!9659 = !DILocation(line: 2853, column: 12, scope: !9653)
!9660 = !DILocation(line: 2854, column: 5, scope: !9654)
!9661 = !DILocation(line: 2856, column: 11, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9647, file: !3, line: 2855, column: 10)
!9663 = !DILocation(line: 2858, column: 4, scope: !9648)
!9664 = !DILocation(line: 2859, column: 3, scope: !9644)
!9665 = !DILocation(line: 2860, column: 27, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9639, file: !3, line: 2860, column: 12)
!9667 = !DILocation(line: 2860, column: 32, scope: !9666)
!9668 = !DILocation(line: 2860, column: 12, scope: !9666)
!9669 = !DILocation(line: 2860, column: 12, scope: !9639)
!9670 = !DILocation(line: 2862, column: 8, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9672, file: !3, line: 2862, column: 8)
!9672 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 2860, column: 39)
!9673 = !DILocation(line: 2862, column: 13, scope: !9671)
!9674 = !DILocation(line: 2862, column: 31, scope: !9671)
!9675 = !DILocation(line: 2862, column: 37, scope: !9671)
!9676 = !DILocation(line: 2862, column: 16, scope: !9671)
!9677 = !DILocation(line: 2862, column: 42, scope: !9671)
!9678 = !DILocation(line: 2862, column: 8, scope: !9672)
!9679 = !DILocation(line: 2863, column: 10, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9671, file: !3, line: 2862, column: 48)
!9681 = !DILocation(line: 2864, column: 10, scope: !9680)
!9682 = !DILocation(line: 2866, column: 9, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !9680, file: !3, line: 2866, column: 9)
!9684 = !DILocation(line: 2866, column: 14, scope: !9683)
!9685 = !DILocation(line: 2866, column: 9, scope: !9680)
!9686 = !DILocalVariable(name: "bt", scope: !9687, file: !3, line: 2867, type: !1558)
!9687 = distinct !DILexicalBlock(scope: !9683, file: !3, line: 2866, column: 19)
!9688 = !DILocation(line: 2867, column: 13, scope: !9687)
!9689 = !DILocation(line: 2867, column: 18, scope: !9687)
!9690 = !DILocation(line: 2868, column: 6, scope: !9687)
!9691 = !DILocation(line: 2868, column: 13, scope: !9687)
!9692 = !DILocation(line: 2868, column: 16, scope: !9687)
!9693 = !DILocation(line: 2868, column: 19, scope: !9687)
!9694 = !DILocation(line: 2868, column: 23, scope: !9687)
!9695 = !DILocation(line: 2868, column: 34, scope: !9687)
!9696 = !DILocation(line: 2868, column: 31, scope: !9687)
!9697 = !DILocation(line: 0, scope: !9687)
!9698 = !DILocation(line: 2869, column: 11, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9700, file: !3, line: 2869, column: 11)
!9700 = distinct !DILexicalBlock(scope: !9687, file: !3, line: 2868, column: 38)
!9701 = !DILocation(line: 2869, column: 15, scope: !9699)
!9702 = !DILocation(line: 2869, column: 20, scope: !9699)
!9703 = !DILocation(line: 2869, column: 23, scope: !9699)
!9704 = !DILocation(line: 2869, column: 27, scope: !9699)
!9705 = !DILocation(line: 2869, column: 33, scope: !9699)
!9706 = !DILocation(line: 2869, column: 44, scope: !9699)
!9707 = !DILocation(line: 2869, column: 41, scope: !9699)
!9708 = !DILocation(line: 2869, column: 47, scope: !9699)
!9709 = !DILocation(line: 2869, column: 65, scope: !9699)
!9710 = !DILocation(line: 2869, column: 69, scope: !9699)
!9711 = !DILocation(line: 2869, column: 73, scope: !9699)
!9712 = !DILocation(line: 2869, column: 50, scope: !9699)
!9713 = !DILocation(line: 2869, column: 79, scope: !9699)
!9714 = !DILocation(line: 2869, column: 11, scope: !9700)
!9715 = !DILocation(line: 2870, column: 8, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9699, file: !3, line: 2869, column: 85)
!9717 = !DILocation(line: 2872, column: 12, scope: !9700)
!9718 = !DILocation(line: 2872, column: 16, scope: !9700)
!9719 = !DILocation(line: 2872, column: 10, scope: !9700)
!9720 = distinct !{!9720, !9690, !9721}
!9721 = !DILocation(line: 2873, column: 6, scope: !9687)
!9722 = !DILocation(line: 2874, column: 10, scope: !9723)
!9723 = distinct !DILexicalBlock(scope: !9687, file: !3, line: 2874, column: 10)
!9724 = !DILocation(line: 2874, column: 13, scope: !9723)
!9725 = !DILocation(line: 2874, column: 21, scope: !9723)
!9726 = !DILocation(line: 2874, column: 24, scope: !9723)
!9727 = !DILocation(line: 2874, column: 28, scope: !9723)
!9728 = !DILocation(line: 2874, column: 39, scope: !9723)
!9729 = !DILocation(line: 2874, column: 36, scope: !9723)
!9730 = !DILocation(line: 2874, column: 10, scope: !9687)
!9731 = !DILocation(line: 2874, column: 48, scope: !9723)
!9732 = !DILocation(line: 2874, column: 43, scope: !9723)
!9733 = !DILocation(line: 2875, column: 5, scope: !9687)
!9734 = !DILocation(line: 2876, column: 4, scope: !9680)
!9735 = !DILocation(line: 2878, column: 10, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !9671, file: !3, line: 2877, column: 9)
!9737 = !DILocation(line: 2880, column: 3, scope: !9672)
!9738 = !DILocation(line: 2882, column: 8, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9740, file: !3, line: 2882, column: 8)
!9740 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 2881, column: 8)
!9741 = !DILocation(line: 2882, column: 13, scope: !9739)
!9742 = !DILocation(line: 2882, column: 8, scope: !9740)
!9743 = !DILocation(line: 2883, column: 10, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9739, file: !3, line: 2882, column: 19)
!9745 = !DILocation(line: 2884, column: 4, scope: !9744)
!9746 = !DILocation(line: 2887, column: 9, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9748, file: !3, line: 2887, column: 9)
!9748 = distinct !DILexicalBlock(scope: !9739, file: !3, line: 2885, column: 9)
!9749 = !DILocation(line: 2887, column: 14, scope: !9747)
!9750 = !DILocation(line: 2887, column: 32, scope: !9747)
!9751 = !DILocation(line: 2887, column: 38, scope: !9747)
!9752 = !DILocation(line: 2887, column: 17, scope: !9747)
!9753 = !DILocation(line: 2887, column: 9, scope: !9748)
!9754 = !DILocation(line: 2888, column: 11, scope: !9747)
!9755 = !DILocation(line: 2888, column: 6, scope: !9747)
!9756 = !DILocation(line: 2890, column: 11, scope: !9757)
!9757 = distinct !DILexicalBlock(scope: !9747, file: !3, line: 2889, column: 10)
!9758 = !DILocation(line: 2891, column: 11, scope: !9757)
!9759 = !DILocation(line: 2894, column: 10, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !9748, file: !3, line: 2894, column: 9)
!9761 = !DILocation(line: 2894, column: 15, scope: !9760)
!9762 = !DILocation(line: 2894, column: 35, scope: !9760)
!9763 = !DILocation(line: 2894, column: 9, scope: !9748)
!9764 = !DILocation(line: 2895, column: 10, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9766, file: !3, line: 2895, column: 10)
!9766 = distinct !DILexicalBlock(scope: !9760, file: !3, line: 2894, column: 41)
!9767 = !DILocation(line: 2895, column: 10, scope: !9766)
!9768 = !DILocation(line: 2896, column: 11, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9770, file: !3, line: 2896, column: 11)
!9770 = distinct !DILexicalBlock(scope: !9765, file: !3, line: 2895, column: 16)
!9771 = !DILocation(line: 2896, column: 16, scope: !9769)
!9772 = !DILocation(line: 2896, column: 34, scope: !9769)
!9773 = !DILocation(line: 2896, column: 39, scope: !9769)
!9774 = !DILocation(line: 2896, column: 19, scope: !9769)
!9775 = !DILocation(line: 2896, column: 11, scope: !9770)
!9776 = !DILocation(line: 2897, column: 13, scope: !9769)
!9777 = !DILocation(line: 2897, column: 8, scope: !9769)
!9778 = !DILocation(line: 2900, column: 13, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9769, file: !3, line: 2898, column: 12)
!9780 = !DILocation(line: 2902, column: 6, scope: !9770)
!9781 = !DILocation(line: 2904, column: 12, scope: !9765)
!9782 = !DILocation(line: 2905, column: 5, scope: !9766)
!9783 = !DILocation(line: 2907, column: 11, scope: !9760)
!9784 = !DILocation(line: 2911, column: 20, scope: !9595)
!9785 = !DILocation(line: 2911, column: 3, scope: !9595)
!9786 = !DILocation(line: 2911, column: 8, scope: !9595)
!9787 = !DILocation(line: 2911, column: 17, scope: !9595)
!9788 = !DILocation(line: 2914, column: 7, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9595, file: !3, line: 2914, column: 7)
!9790 = !DILocation(line: 2914, column: 7, scope: !9595)
!9791 = !DILocation(line: 2916, column: 8, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9793, file: !3, line: 2916, column: 8)
!9793 = distinct !DILexicalBlock(scope: !9789, file: !3, line: 2914, column: 13)
!9794 = !DILocation(line: 2916, column: 13, scope: !9792)
!9795 = !DILocation(line: 2916, column: 8, scope: !9793)
!9796 = !DILocation(line: 2917, column: 23, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 2916, column: 19)
!9798 = !DILocation(line: 2917, column: 29, scope: !9797)
!9799 = !DILocation(line: 2917, column: 34, scope: !9797)
!9800 = !DILocation(line: 2917, column: 41, scope: !9797)
!9801 = !DILocation(line: 2917, column: 46, scope: !9797)
!9802 = !DILocation(line: 2917, column: 51, scope: !9797)
!9803 = !DILocation(line: 2917, column: 39, scope: !9797)
!9804 = !DILocation(line: 2917, column: 57, scope: !9797)
!9805 = !DILocation(line: 2917, column: 5, scope: !9797)
!9806 = !DILocation(line: 2917, column: 10, scope: !9797)
!9807 = !DILocation(line: 2917, column: 15, scope: !9797)
!9808 = !DILocation(line: 2917, column: 20, scope: !9797)
!9809 = !DILocation(line: 2918, column: 23, scope: !9797)
!9810 = !DILocation(line: 2918, column: 28, scope: !9797)
!9811 = !DILocation(line: 2918, column: 33, scope: !9797)
!9812 = !DILocation(line: 2918, column: 5, scope: !9797)
!9813 = !DILocation(line: 2918, column: 11, scope: !9797)
!9814 = !DILocation(line: 2918, column: 16, scope: !9797)
!9815 = !DILocation(line: 2918, column: 21, scope: !9797)
!9816 = !DILocation(line: 2919, column: 4, scope: !9797)
!9817 = !DILocation(line: 2920, column: 13, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 2920, column: 13)
!9819 = !DILocation(line: 2920, column: 18, scope: !9818)
!9820 = !DILocation(line: 2920, column: 13, scope: !9792)
!9821 = !DILocation(line: 2921, column: 23, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9818, file: !3, line: 2920, column: 24)
!9823 = !DILocation(line: 2921, column: 29, scope: !9822)
!9824 = !DILocation(line: 2921, column: 34, scope: !9822)
!9825 = !DILocation(line: 2921, column: 41, scope: !9822)
!9826 = !DILocation(line: 2921, column: 46, scope: !9822)
!9827 = !DILocation(line: 2921, column: 51, scope: !9822)
!9828 = !DILocation(line: 2921, column: 39, scope: !9822)
!9829 = !DILocation(line: 2921, column: 57, scope: !9822)
!9830 = !DILocation(line: 2921, column: 5, scope: !9822)
!9831 = !DILocation(line: 2921, column: 10, scope: !9822)
!9832 = !DILocation(line: 2921, column: 15, scope: !9822)
!9833 = !DILocation(line: 2921, column: 20, scope: !9822)
!9834 = !DILocation(line: 2922, column: 23, scope: !9822)
!9835 = !DILocation(line: 2922, column: 28, scope: !9822)
!9836 = !DILocation(line: 2922, column: 33, scope: !9822)
!9837 = !DILocation(line: 2922, column: 5, scope: !9822)
!9838 = !DILocation(line: 2922, column: 11, scope: !9822)
!9839 = !DILocation(line: 2922, column: 16, scope: !9822)
!9840 = !DILocation(line: 2922, column: 21, scope: !9822)
!9841 = !DILocation(line: 2923, column: 4, scope: !9822)
!9842 = !DILocation(line: 2925, column: 24, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9844, file: !3, line: 2925, column: 9)
!9844 = distinct !DILexicalBlock(scope: !9818, file: !3, line: 2924, column: 9)
!9845 = !DILocation(line: 2925, column: 30, scope: !9843)
!9846 = !DILocation(line: 2925, column: 9, scope: !9843)
!9847 = !DILocation(line: 2925, column: 9, scope: !9844)
!9848 = !DILocation(line: 2926, column: 24, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9843, file: !3, line: 2925, column: 36)
!9850 = !DILocation(line: 2926, column: 30, scope: !9849)
!9851 = !DILocation(line: 2926, column: 35, scope: !9849)
!9852 = !DILocation(line: 2926, column: 42, scope: !9849)
!9853 = !DILocation(line: 2926, column: 47, scope: !9849)
!9854 = !DILocation(line: 2926, column: 52, scope: !9849)
!9855 = !DILocation(line: 2926, column: 40, scope: !9849)
!9856 = !DILocation(line: 2926, column: 58, scope: !9849)
!9857 = !DILocation(line: 2926, column: 6, scope: !9849)
!9858 = !DILocation(line: 2926, column: 11, scope: !9849)
!9859 = !DILocation(line: 2926, column: 16, scope: !9849)
!9860 = !DILocation(line: 2926, column: 21, scope: !9849)
!9861 = !DILocation(line: 2927, column: 24, scope: !9849)
!9862 = !DILocation(line: 2927, column: 29, scope: !9849)
!9863 = !DILocation(line: 2927, column: 34, scope: !9849)
!9864 = !DILocation(line: 2927, column: 6, scope: !9849)
!9865 = !DILocation(line: 2927, column: 12, scope: !9849)
!9866 = !DILocation(line: 2927, column: 17, scope: !9849)
!9867 = !DILocation(line: 2927, column: 22, scope: !9849)
!9868 = !DILocation(line: 2929, column: 23, scope: !9849)
!9869 = !DILocation(line: 2929, column: 29, scope: !9849)
!9870 = !DILocation(line: 2929, column: 34, scope: !9849)
!9871 = !DILocation(line: 2929, column: 6, scope: !9849)
!9872 = !DILocation(line: 2929, column: 11, scope: !9849)
!9873 = !DILocation(line: 2929, column: 16, scope: !9849)
!9874 = !DILocation(line: 2929, column: 21, scope: !9849)
!9875 = !DILocation(line: 2930, column: 5, scope: !9849)
!9876 = !DILocation(line: 2931, column: 14, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9843, file: !3, line: 2931, column: 14)
!9878 = !DILocation(line: 2931, column: 20, scope: !9877)
!9879 = !DILocation(line: 2931, column: 25, scope: !9877)
!9880 = !DILocation(line: 2931, column: 43, scope: !9877)
!9881 = !DILocation(line: 2931, column: 49, scope: !9877)
!9882 = !DILocation(line: 2931, column: 55, scope: !9877)
!9883 = !DILocation(line: 2931, column: 28, scope: !9877)
!9884 = !DILocation(line: 2931, column: 61, scope: !9877)
!9885 = !DILocation(line: 2931, column: 14, scope: !9843)
!9886 = !DILocation(line: 2933, column: 24, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9877, file: !3, line: 2931, column: 67)
!9888 = !DILocation(line: 2933, column: 30, scope: !9887)
!9889 = !DILocation(line: 2933, column: 35, scope: !9887)
!9890 = !DILocation(line: 2933, column: 42, scope: !9887)
!9891 = !DILocation(line: 2933, column: 47, scope: !9887)
!9892 = !DILocation(line: 2933, column: 52, scope: !9887)
!9893 = !DILocation(line: 2933, column: 40, scope: !9887)
!9894 = !DILocation(line: 2933, column: 58, scope: !9887)
!9895 = !DILocation(line: 2933, column: 6, scope: !9887)
!9896 = !DILocation(line: 2933, column: 11, scope: !9887)
!9897 = !DILocation(line: 2933, column: 16, scope: !9887)
!9898 = !DILocation(line: 2933, column: 21, scope: !9887)
!9899 = !DILocation(line: 2934, column: 24, scope: !9887)
!9900 = !DILocation(line: 2934, column: 29, scope: !9887)
!9901 = !DILocation(line: 2934, column: 34, scope: !9887)
!9902 = !DILocation(line: 2934, column: 6, scope: !9887)
!9903 = !DILocation(line: 2934, column: 12, scope: !9887)
!9904 = !DILocation(line: 2934, column: 17, scope: !9887)
!9905 = !DILocation(line: 2934, column: 22, scope: !9887)
!9906 = !DILocation(line: 2936, column: 23, scope: !9887)
!9907 = !DILocation(line: 2936, column: 29, scope: !9887)
!9908 = !DILocation(line: 2936, column: 34, scope: !9887)
!9909 = !DILocation(line: 2936, column: 6, scope: !9887)
!9910 = !DILocation(line: 2936, column: 11, scope: !9887)
!9911 = !DILocation(line: 2936, column: 16, scope: !9887)
!9912 = !DILocation(line: 2936, column: 21, scope: !9887)
!9913 = !DILocation(line: 2937, column: 10, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 2937, column: 10)
!9915 = !DILocation(line: 2937, column: 15, scope: !9914)
!9916 = !DILocation(line: 2937, column: 33, scope: !9914)
!9917 = !DILocation(line: 2937, column: 38, scope: !9914)
!9918 = !DILocation(line: 2937, column: 18, scope: !9914)
!9919 = !DILocation(line: 2937, column: 44, scope: !9914)
!9920 = !DILocation(line: 2937, column: 10, scope: !9887)
!9921 = !DILocation(line: 2938, column: 24, scope: !9914)
!9922 = !DILocation(line: 2938, column: 30, scope: !9914)
!9923 = !DILocation(line: 2938, column: 35, scope: !9914)
!9924 = !DILocation(line: 2938, column: 7, scope: !9914)
!9925 = !DILocation(line: 2938, column: 12, scope: !9914)
!9926 = !DILocation(line: 2938, column: 17, scope: !9914)
!9927 = !DILocation(line: 2938, column: 22, scope: !9914)
!9928 = !DILocation(line: 2939, column: 5, scope: !9887)
!9929 = !DILocation(line: 2942, column: 23, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9877, file: !3, line: 2940, column: 10)
!9931 = !DILocation(line: 2942, column: 29, scope: !9930)
!9932 = !DILocation(line: 2942, column: 34, scope: !9930)
!9933 = !DILocation(line: 2942, column: 6, scope: !9930)
!9934 = !DILocation(line: 2942, column: 11, scope: !9930)
!9935 = !DILocation(line: 2942, column: 16, scope: !9930)
!9936 = !DILocation(line: 2942, column: 21, scope: !9930)
!9937 = !DILocation(line: 2945, column: 3, scope: !9793)
!9938 = !DILocation(line: 2946, column: 2, scope: !9595)
!9939 = !DILocation(line: 2826, column: 67, scope: !9586)
!9940 = !DILocation(line: 2826, column: 65, scope: !9586)
!9941 = !DILocation(line: 2826, column: 78, scope: !9586)
!9942 = !DILocation(line: 2826, column: 83, scope: !9586)
!9943 = !DILocation(line: 2826, column: 76, scope: !9586)
!9944 = !DILocation(line: 2826, column: 2, scope: !9586)
!9945 = distinct !{!9945, !9593, !9946}
!9946 = !DILocation(line: 2946, column: 2, scope: !9581)
!9947 = !DILocation(line: 2947, column: 1, scope: !9519)
!9948 = distinct !DISubprogram(name: "ui_block_display_get", scope: !3, file: !3, line: 2975, type: !9949, scopeLine: 2976, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!9949 = !DISubroutineType(types: !9950)
!9950 = !{!9951, !1695}
!9951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9952, size: 64)
!9952 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplay", file: !9953, line: 38, flags: DIFlagFwdDecl)
!9953 = !DIFile(filename: "blender/source/blender/blenfont/BLF_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9954 = !DILocalVariable(name: "block", arg: 1, scope: !9948, file: !3, line: 2975, type: !1695)
!9955 = !DILocation(line: 2975, column: 59, scope: !9948)
!9956 = !DILocation(line: 2977, column: 47, scope: !9948)
!9957 = !DILocation(line: 2977, column: 54, scope: !9948)
!9958 = !DILocation(line: 2977, column: 9, scope: !9948)
!9959 = !DILocation(line: 2977, column: 2, scope: !9948)
!9960 = distinct !DISubprogram(name: "ui_block_to_display_space_v3", scope: !3, file: !3, line: 2980, type: !9961, scopeLine: 2981, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!9961 = !DISubroutineType(types: !9962)
!9962 = !{null, !1695, !1543}
!9963 = !DILocalVariable(name: "block", arg: 1, scope: !9960, file: !3, line: 2980, type: !1695)
!9964 = !DILocation(line: 2980, column: 44, scope: !9960)
!9965 = !DILocalVariable(name: "pixel", arg: 2, scope: !9960, file: !3, line: 2980, type: !1543)
!9966 = !DILocation(line: 2980, column: 57, scope: !9960)
!9967 = !DILocalVariable(name: "display", scope: !9960, file: !3, line: 2982, type: !9951)
!9968 = !DILocation(line: 2982, column: 30, scope: !9960)
!9969 = !DILocation(line: 2982, column: 61, scope: !9960)
!9970 = !DILocation(line: 2982, column: 40, scope: !9960)
!9971 = !DILocation(line: 2984, column: 49, scope: !9960)
!9972 = !DILocation(line: 2984, column: 56, scope: !9960)
!9973 = !DILocation(line: 2984, column: 2, scope: !9960)
!9974 = !DILocation(line: 2985, column: 1, scope: !9960)
!9975 = distinct !DISubprogram(name: "ui_block_to_scene_linear_v3", scope: !3, file: !3, line: 2987, type: !9961, scopeLine: 2988, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!9976 = !DILocalVariable(name: "block", arg: 1, scope: !9975, file: !3, line: 2987, type: !1695)
!9977 = !DILocation(line: 2987, column: 43, scope: !9975)
!9978 = !DILocalVariable(name: "pixel", arg: 2, scope: !9975, file: !3, line: 2987, type: !1543)
!9979 = !DILocation(line: 2987, column: 56, scope: !9975)
!9980 = !DILocalVariable(name: "display", scope: !9975, file: !3, line: 2989, type: !9951)
!9981 = !DILocation(line: 2989, column: 30, scope: !9975)
!9982 = !DILocation(line: 2989, column: 61, scope: !9975)
!9983 = !DILocation(line: 2989, column: 40, scope: !9975)
!9984 = !DILocation(line: 2991, column: 49, scope: !9975)
!9985 = !DILocation(line: 2991, column: 56, scope: !9975)
!9986 = !DILocation(line: 2991, column: 2, scope: !9975)
!9987 = !DILocation(line: 2992, column: 1, scope: !9975)
!9988 = distinct !DISubprogram(name: "uiDefBut", scope: !3, file: !3, line: 3467, type: !9989, scopeLine: 3468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!9989 = !DISubroutineType(types: !9990)
!9990 = !{!1558, !1695, !1067, !1067, !1647, !1067, !1067, !1545, !1545, !1535, !1534, !1534, !1534, !1534, !1647}
!9991 = !DILocalVariable(name: "block", arg: 1, scope: !9988, file: !3, line: 3467, type: !1695)
!9992 = !DILocation(line: 3467, column: 26, scope: !9988)
!9993 = !DILocalVariable(name: "type", arg: 2, scope: !9988, file: !3, line: 3467, type: !1067)
!9994 = !DILocation(line: 3467, column: 37, scope: !9988)
!9995 = !DILocalVariable(name: "retval", arg: 3, scope: !9988, file: !3, line: 3467, type: !1067)
!9996 = !DILocation(line: 3467, column: 47, scope: !9988)
!9997 = !DILocalVariable(name: "str", arg: 4, scope: !9988, file: !3, line: 3467, type: !1647)
!9998 = !DILocation(line: 3467, column: 67, scope: !9988)
!9999 = !DILocalVariable(name: "x", arg: 5, scope: !9988, file: !3, line: 3467, type: !1067)
!10000 = !DILocation(line: 3467, column: 76, scope: !9988)
!10001 = !DILocalVariable(name: "y", arg: 6, scope: !9988, file: !3, line: 3467, type: !1067)
!10002 = !DILocation(line: 3467, column: 83, scope: !9988)
!10003 = !DILocalVariable(name: "width", arg: 7, scope: !9988, file: !3, line: 3467, type: !1545)
!10004 = !DILocation(line: 3467, column: 92, scope: !9988)
!10005 = !DILocalVariable(name: "height", arg: 8, scope: !9988, file: !3, line: 3467, type: !1545)
!10006 = !DILocation(line: 3467, column: 105, scope: !9988)
!10007 = !DILocalVariable(name: "poin", arg: 9, scope: !9988, file: !3, line: 3467, type: !1535)
!10008 = !DILocation(line: 3467, column: 119, scope: !9988)
!10009 = !DILocalVariable(name: "min", arg: 10, scope: !9988, file: !3, line: 3467, type: !1534)
!10010 = !DILocation(line: 3467, column: 131, scope: !9988)
!10011 = !DILocalVariable(name: "max", arg: 11, scope: !9988, file: !3, line: 3467, type: !1534)
!10012 = !DILocation(line: 3467, column: 142, scope: !9988)
!10013 = !DILocalVariable(name: "a1", arg: 12, scope: !9988, file: !3, line: 3467, type: !1534)
!10014 = !DILocation(line: 3467, column: 153, scope: !9988)
!10015 = !DILocalVariable(name: "a2", arg: 13, scope: !9988, file: !3, line: 3467, type: !1534)
!10016 = !DILocation(line: 3467, column: 163, scope: !9988)
!10017 = !DILocalVariable(name: "tip", arg: 14, scope: !9988, file: !3, line: 3467, type: !1647)
!10018 = !DILocation(line: 3467, column: 179, scope: !9988)
!10019 = !DILocalVariable(name: "but", scope: !9988, file: !3, line: 3469, type: !1558)
!10020 = !DILocation(line: 3469, column: 9, scope: !9988)
!10021 = !DILocation(line: 3469, column: 26, scope: !9988)
!10022 = !DILocation(line: 3469, column: 33, scope: !9988)
!10023 = !DILocation(line: 3469, column: 39, scope: !9988)
!10024 = !DILocation(line: 3469, column: 47, scope: !9988)
!10025 = !DILocation(line: 3469, column: 52, scope: !9988)
!10026 = !DILocation(line: 3469, column: 55, scope: !9988)
!10027 = !DILocation(line: 3469, column: 58, scope: !9988)
!10028 = !DILocation(line: 3469, column: 65, scope: !9988)
!10029 = !DILocation(line: 3469, column: 73, scope: !9988)
!10030 = !DILocation(line: 3469, column: 79, scope: !9988)
!10031 = !DILocation(line: 3469, column: 84, scope: !9988)
!10032 = !DILocation(line: 3469, column: 89, scope: !9988)
!10033 = !DILocation(line: 3469, column: 93, scope: !9988)
!10034 = !DILocation(line: 3469, column: 97, scope: !9988)
!10035 = !DILocation(line: 3469, column: 15, scope: !9988)
!10036 = !DILocation(line: 3471, column: 15, scope: !9988)
!10037 = !DILocation(line: 3471, column: 2, scope: !9988)
!10038 = !DILocation(line: 3473, column: 9, scope: !9988)
!10039 = !DILocation(line: 3473, column: 2, scope: !9988)
!10040 = distinct !DISubprogram(name: "ui_def_but", scope: !3, file: !3, line: 3005, type: !9989, scopeLine: 3008, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!10041 = !DILocalVariable(name: "block", arg: 1, scope: !10040, file: !3, line: 3005, type: !1695)
!10042 = !DILocation(line: 3005, column: 35, scope: !10040)
!10043 = !DILocalVariable(name: "type", arg: 2, scope: !10040, file: !3, line: 3005, type: !1067)
!10044 = !DILocation(line: 3005, column: 46, scope: !10040)
!10045 = !DILocalVariable(name: "retval", arg: 3, scope: !10040, file: !3, line: 3005, type: !1067)
!10046 = !DILocation(line: 3005, column: 56, scope: !10040)
!10047 = !DILocalVariable(name: "str", arg: 4, scope: !10040, file: !3, line: 3005, type: !1647)
!10048 = !DILocation(line: 3005, column: 76, scope: !10040)
!10049 = !DILocalVariable(name: "x", arg: 5, scope: !10040, file: !3, line: 3006, type: !1067)
!10050 = !DILocation(line: 3006, column: 30, scope: !10040)
!10051 = !DILocalVariable(name: "y", arg: 6, scope: !10040, file: !3, line: 3006, type: !1067)
!10052 = !DILocation(line: 3006, column: 37, scope: !10040)
!10053 = !DILocalVariable(name: "width", arg: 7, scope: !10040, file: !3, line: 3006, type: !1545)
!10054 = !DILocation(line: 3006, column: 46, scope: !10040)
!10055 = !DILocalVariable(name: "height", arg: 8, scope: !10040, file: !3, line: 3006, type: !1545)
!10056 = !DILocation(line: 3006, column: 59, scope: !10040)
!10057 = !DILocalVariable(name: "poin", arg: 9, scope: !10040, file: !3, line: 3007, type: !1535)
!10058 = !DILocation(line: 3007, column: 32, scope: !10040)
!10059 = !DILocalVariable(name: "min", arg: 10, scope: !10040, file: !3, line: 3007, type: !1534)
!10060 = !DILocation(line: 3007, column: 44, scope: !10040)
!10061 = !DILocalVariable(name: "max", arg: 11, scope: !10040, file: !3, line: 3007, type: !1534)
!10062 = !DILocation(line: 3007, column: 55, scope: !10040)
!10063 = !DILocalVariable(name: "a1", arg: 12, scope: !10040, file: !3, line: 3007, type: !1534)
!10064 = !DILocation(line: 3007, column: 66, scope: !10040)
!10065 = !DILocalVariable(name: "a2", arg: 13, scope: !10040, file: !3, line: 3007, type: !1534)
!10066 = !DILocation(line: 3007, column: 76, scope: !10040)
!10067 = !DILocalVariable(name: "tip", arg: 14, scope: !10040, file: !3, line: 3007, type: !1647)
!10068 = !DILocation(line: 3007, column: 92, scope: !10040)
!10069 = !DILocalVariable(name: "but", scope: !10040, file: !3, line: 3009, type: !1558)
!10070 = !DILocation(line: 3009, column: 9, scope: !10040)
!10071 = !DILocalVariable(name: "slen", scope: !10040, file: !3, line: 3010, type: !1067)
!10072 = !DILocation(line: 3010, column: 6, scope: !10040)
!10073 = !DILocation(line: 3015, column: 7, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 3015, column: 6)
!10075 = !DILocation(line: 3015, column: 12, scope: !10074)
!10076 = !DILocation(line: 3015, column: 23, scope: !10074)
!10077 = !DILocation(line: 3015, column: 6, scope: !10040)
!10078 = !DILocation(line: 3017, column: 2, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10074, file: !3, line: 3015, column: 33)
!10080 = !DILocation(line: 3019, column: 6, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 3019, column: 6)
!10082 = !DILocation(line: 3019, column: 11, scope: !10081)
!10083 = !DILocation(line: 3019, column: 6, scope: !10040)
!10084 = !DILocation(line: 3020, column: 7, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10086, file: !3, line: 3020, column: 7)
!10086 = distinct !DILexicalBlock(scope: !10081, file: !3, line: 3019, column: 32)
!10087 = !DILocation(line: 3020, column: 12, scope: !10085)
!10088 = !DILocation(line: 3020, column: 7, scope: !10086)
!10089 = !DILocation(line: 3022, column: 4, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10085, file: !3, line: 3020, column: 21)
!10091 = !DILocation(line: 3024, column: 2, scope: !10086)
!10092 = !DILocation(line: 3026, column: 8, scope: !10040)
!10093 = !DILocation(line: 3026, column: 6, scope: !10040)
!10094 = !DILocation(line: 3028, column: 14, scope: !10040)
!10095 = !DILocation(line: 3028, column: 19, scope: !10040)
!10096 = !DILocation(line: 3028, column: 2, scope: !10040)
!10097 = !DILocation(line: 3028, column: 7, scope: !10040)
!10098 = !DILocation(line: 3028, column: 12, scope: !10040)
!10099 = !DILocation(line: 3029, column: 18, scope: !10040)
!10100 = !DILocation(line: 3029, column: 23, scope: !10040)
!10101 = !DILocation(line: 3029, column: 2, scope: !10040)
!10102 = !DILocation(line: 3029, column: 7, scope: !10040)
!10103 = !DILocation(line: 3029, column: 16, scope: !10040)
!10104 = !DILocation(line: 3030, column: 13, scope: !10040)
!10105 = !DILocation(line: 3030, column: 18, scope: !10040)
!10106 = !DILocation(line: 3030, column: 2, scope: !10040)
!10107 = !DILocation(line: 3030, column: 7, scope: !10040)
!10108 = !DILocation(line: 3030, column: 11, scope: !10040)
!10109 = !DILocation(line: 3031, column: 15, scope: !10040)
!10110 = !DILocation(line: 3031, column: 20, scope: !10040)
!10111 = !DILocation(line: 3031, column: 2, scope: !10040)
!10112 = !DILocation(line: 3031, column: 7, scope: !10040)
!10113 = !DILocation(line: 3031, column: 13, scope: !10040)
!10114 = !DILocation(line: 3032, column: 2, scope: !10040)
!10115 = !DILocation(line: 3032, column: 7, scope: !10040)
!10116 = !DILocation(line: 3032, column: 12, scope: !10040)
!10117 = !DILocation(line: 3033, column: 2, scope: !10040)
!10118 = !DILocation(line: 3033, column: 7, scope: !10040)
!10119 = !DILocation(line: 3033, column: 15, scope: !10040)
!10120 = !DILocation(line: 3035, column: 16, scope: !10040)
!10121 = !DILocation(line: 3035, column: 2, scope: !10040)
!10122 = !DILocation(line: 3035, column: 7, scope: !10040)
!10123 = !DILocation(line: 3035, column: 14, scope: !10040)
!10124 = !DILocation(line: 3037, column: 16, scope: !10040)
!10125 = !DILocation(line: 3037, column: 9, scope: !10040)
!10126 = !DILocation(line: 3037, column: 7, scope: !10040)
!10127 = !DILocation(line: 3038, column: 6, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 3038, column: 6)
!10129 = !DILocation(line: 3038, column: 11, scope: !10128)
!10130 = !DILocation(line: 3038, column: 6, scope: !10040)
!10131 = !DILocation(line: 3039, column: 14, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10128, file: !3, line: 3038, column: 31)
!10133 = !DILocation(line: 3039, column: 26, scope: !10132)
!10134 = !DILocation(line: 3039, column: 31, scope: !10132)
!10135 = !DILocation(line: 3039, column: 3, scope: !10132)
!10136 = !DILocation(line: 3039, column: 8, scope: !10132)
!10137 = !DILocation(line: 3039, column: 12, scope: !10132)
!10138 = !DILocation(line: 3040, column: 2, scope: !10132)
!10139 = !DILocation(line: 3042, column: 14, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10128, file: !3, line: 3041, column: 7)
!10141 = !DILocation(line: 3042, column: 19, scope: !10140)
!10142 = !DILocation(line: 3042, column: 3, scope: !10140)
!10143 = !DILocation(line: 3042, column: 8, scope: !10140)
!10144 = !DILocation(line: 3042, column: 12, scope: !10140)
!10145 = !DILocation(line: 3044, column: 9, scope: !10040)
!10146 = !DILocation(line: 3044, column: 14, scope: !10040)
!10147 = !DILocation(line: 3044, column: 19, scope: !10040)
!10148 = !DILocation(line: 3044, column: 24, scope: !10040)
!10149 = !DILocation(line: 3044, column: 29, scope: !10040)
!10150 = !DILocation(line: 3044, column: 2, scope: !10040)
!10151 = !DILocation(line: 3046, column: 19, scope: !10040)
!10152 = !DILocation(line: 3046, column: 2, scope: !10040)
!10153 = !DILocation(line: 3046, column: 7, scope: !10040)
!10154 = !DILocation(line: 3046, column: 12, scope: !10040)
!10155 = !DILocation(line: 3046, column: 17, scope: !10040)
!10156 = !DILocation(line: 3047, column: 19, scope: !10040)
!10157 = !DILocation(line: 3047, column: 2, scope: !10040)
!10158 = !DILocation(line: 3047, column: 7, scope: !10040)
!10159 = !DILocation(line: 3047, column: 12, scope: !10040)
!10160 = !DILocation(line: 3047, column: 17, scope: !10040)
!10161 = !DILocation(line: 3048, column: 19, scope: !10040)
!10162 = !DILocation(line: 3048, column: 24, scope: !10040)
!10163 = !DILocation(line: 3048, column: 29, scope: !10040)
!10164 = !DILocation(line: 3048, column: 36, scope: !10040)
!10165 = !DILocation(line: 3048, column: 34, scope: !10040)
!10166 = !DILocation(line: 3048, column: 2, scope: !10040)
!10167 = !DILocation(line: 3048, column: 7, scope: !10040)
!10168 = !DILocation(line: 3048, column: 12, scope: !10040)
!10169 = !DILocation(line: 3048, column: 17, scope: !10040)
!10170 = !DILocation(line: 3049, column: 19, scope: !10040)
!10171 = !DILocation(line: 3049, column: 24, scope: !10040)
!10172 = !DILocation(line: 3049, column: 29, scope: !10040)
!10173 = !DILocation(line: 3049, column: 36, scope: !10040)
!10174 = !DILocation(line: 3049, column: 34, scope: !10040)
!10175 = !DILocation(line: 3049, column: 2, scope: !10040)
!10176 = !DILocation(line: 3049, column: 7, scope: !10040)
!10177 = !DILocation(line: 3049, column: 12, scope: !10040)
!10178 = !DILocation(line: 3049, column: 17, scope: !10040)
!10179 = !DILocation(line: 3051, column: 14, scope: !10040)
!10180 = !DILocation(line: 3051, column: 2, scope: !10040)
!10181 = !DILocation(line: 3051, column: 7, scope: !10040)
!10182 = !DILocation(line: 3051, column: 12, scope: !10040)
!10183 = !DILocation(line: 3052, column: 32, scope: !10040)
!10184 = !DILocation(line: 3052, column: 17, scope: !10040)
!10185 = !DILocation(line: 3052, column: 22, scope: !10040)
!10186 = !DILocation(line: 3052, column: 30, scope: !10040)
!10187 = !DILocation(line: 3052, column: 2, scope: !10040)
!10188 = !DILocation(line: 3052, column: 7, scope: !10040)
!10189 = !DILocation(line: 3052, column: 15, scope: !10040)
!10190 = !DILocation(line: 3053, column: 32, scope: !10040)
!10191 = !DILocation(line: 3053, column: 17, scope: !10040)
!10192 = !DILocation(line: 3053, column: 22, scope: !10040)
!10193 = !DILocation(line: 3053, column: 30, scope: !10040)
!10194 = !DILocation(line: 3053, column: 2, scope: !10040)
!10195 = !DILocation(line: 3053, column: 7, scope: !10040)
!10196 = !DILocation(line: 3053, column: 15, scope: !10040)
!10197 = !DILocation(line: 3054, column: 12, scope: !10040)
!10198 = !DILocation(line: 3054, column: 2, scope: !10040)
!10199 = !DILocation(line: 3054, column: 7, scope: !10040)
!10200 = !DILocation(line: 3054, column: 10, scope: !10040)
!10201 = !DILocation(line: 3055, column: 12, scope: !10040)
!10202 = !DILocation(line: 3055, column: 2, scope: !10040)
!10203 = !DILocation(line: 3055, column: 7, scope: !10040)
!10204 = !DILocation(line: 3055, column: 10, scope: !10040)
!10205 = !DILocation(line: 3056, column: 13, scope: !10040)
!10206 = !DILocation(line: 3056, column: 2, scope: !10040)
!10207 = !DILocation(line: 3056, column: 7, scope: !10040)
!10208 = !DILocation(line: 3056, column: 11, scope: !10040)
!10209 = !DILocation(line: 3058, column: 14, scope: !10040)
!10210 = !DILocation(line: 3058, column: 21, scope: !10040)
!10211 = !DILocation(line: 3058, column: 2, scope: !10040)
!10212 = !DILocation(line: 3058, column: 7, scope: !10040)
!10213 = !DILocation(line: 3058, column: 12, scope: !10040)
!10214 = !DILocation(line: 3059, column: 17, scope: !10040)
!10215 = !DILocation(line: 3059, column: 24, scope: !10040)
!10216 = !DILocation(line: 3059, column: 2, scope: !10040)
!10217 = !DILocation(line: 3059, column: 7, scope: !10040)
!10218 = !DILocation(line: 3059, column: 15, scope: !10040)
!10219 = !DILocation(line: 3060, column: 12, scope: !10040)
!10220 = !DILocation(line: 3060, column: 19, scope: !10040)
!10221 = !DILocation(line: 3060, column: 2, scope: !10040)
!10222 = !DILocation(line: 3060, column: 7, scope: !10040)
!10223 = !DILocation(line: 3060, column: 10, scope: !10040)
!10224 = !DILocation(line: 3061, column: 2, scope: !10040)
!10225 = !DILocation(line: 3061, column: 7, scope: !10040)
!10226 = !DILocation(line: 3061, column: 15, scope: !10040)
!10227 = !DILocation(line: 3063, column: 15, scope: !10040)
!10228 = !DILocation(line: 3063, column: 2, scope: !10040)
!10229 = !DILocation(line: 3063, column: 7, scope: !10040)
!10230 = !DILocation(line: 3063, column: 13, scope: !10040)
!10231 = !DILocation(line: 3065, column: 7, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 3065, column: 6)
!10233 = !DILocation(line: 3065, column: 14, scope: !10232)
!10234 = !DILocation(line: 3065, column: 19, scope: !10232)
!10235 = !DILocation(line: 3065, column: 35, scope: !10232)
!10236 = !DILocation(line: 3065, column: 55, scope: !10232)
!10237 = !DILocation(line: 3065, column: 38, scope: !10232)
!10238 = !DILocation(line: 3065, column: 6, scope: !10040)
!10239 = !DILocation(line: 3066, column: 18, scope: !10232)
!10240 = !DILocation(line: 3066, column: 25, scope: !10232)
!10241 = !DILocation(line: 3066, column: 3, scope: !10232)
!10242 = !DILocation(line: 3066, column: 8, scope: !10232)
!10243 = !DILocation(line: 3066, column: 16, scope: !10232)
!10244 = !DILocation(line: 3068, column: 14, scope: !10040)
!10245 = !DILocation(line: 3068, column: 21, scope: !10040)
!10246 = !DILocation(line: 3068, column: 2, scope: !10040)
!10247 = !DILocation(line: 3068, column: 7, scope: !10040)
!10248 = !DILocation(line: 3068, column: 12, scope: !10040)
!10249 = !DILocation(line: 3069, column: 19, scope: !10040)
!10250 = !DILocation(line: 3069, column: 26, scope: !10040)
!10251 = !DILocation(line: 3069, column: 2, scope: !10040)
!10252 = !DILocation(line: 3069, column: 7, scope: !10040)
!10253 = !DILocation(line: 3069, column: 17, scope: !10040)
!10254 = !DILocation(line: 3070, column: 19, scope: !10040)
!10255 = !DILocation(line: 3070, column: 26, scope: !10040)
!10256 = !DILocation(line: 3070, column: 2, scope: !10040)
!10257 = !DILocation(line: 3070, column: 7, scope: !10040)
!10258 = !DILocation(line: 3070, column: 17, scope: !10040)
!10259 = !DILocation(line: 3072, column: 15, scope: !10040)
!10260 = !DILocation(line: 3072, column: 22, scope: !10040)
!10261 = !DILocation(line: 3072, column: 2, scope: !10040)
!10262 = !DILocation(line: 3072, column: 7, scope: !10040)
!10263 = !DILocation(line: 3072, column: 13, scope: !10040)
!10264 = !DILocation(line: 3073, column: 6, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 3073, column: 6)
!10266 = !DILocation(line: 3073, column: 13, scope: !10265)
!10267 = !DILocation(line: 3073, column: 6, scope: !10040)
!10268 = !DILocation(line: 3074, column: 20, scope: !10265)
!10269 = !DILocation(line: 3074, column: 34, scope: !10265)
!10270 = !DILocation(line: 3074, column: 41, scope: !10265)
!10271 = !DILocation(line: 3074, column: 3, scope: !10265)
!10272 = !DILocation(line: 3074, column: 8, scope: !10265)
!10273 = !DILocation(line: 3074, column: 18, scope: !10265)
!10274 = !DILocation(line: 3076, column: 2, scope: !10040)
!10275 = !DILocation(line: 3076, column: 7, scope: !10040)
!10276 = !DILocation(line: 3076, column: 11, scope: !10040)
!10277 = !DILocation(line: 3078, column: 6, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 3078, column: 6)
!10279 = !DILocation(line: 3078, column: 6, scope: !10040)
!10280 = !DILocation(line: 3080, column: 7, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10282, file: !3, line: 3080, column: 7)
!10282 = distinct !DILexicalBlock(scope: !10278, file: !3, line: 3078, column: 36)
!10283 = !DILocation(line: 3080, column: 12, scope: !10281)
!10284 = !DILocation(line: 3080, column: 16, scope: !10281)
!10285 = !DILocation(line: 3080, column: 19, scope: !10281)
!10286 = !DILocation(line: 3080, column: 24, scope: !10281)
!10287 = !DILocation(line: 3080, column: 7, scope: !10282)
!10288 = !DILocation(line: 3081, column: 8, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10290, file: !3, line: 3081, column: 8)
!10290 = distinct !DILexicalBlock(scope: !10281, file: !3, line: 3080, column: 47)
!10291 = !DILocation(line: 3081, column: 13, scope: !10289)
!10292 = !DILocation(line: 3081, column: 17, scope: !10289)
!10293 = !DILocation(line: 3081, column: 22, scope: !10289)
!10294 = !DILocation(line: 3081, column: 27, scope: !10289)
!10295 = !DILocation(line: 3081, column: 8, scope: !10290)
!10296 = !DILocation(line: 3082, column: 5, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !10289, file: !3, line: 3081, column: 35)
!10298 = !DILocation(line: 3082, column: 10, scope: !10297)
!10299 = !DILocation(line: 3082, column: 14, scope: !10297)
!10300 = !DILocation(line: 3082, column: 20, scope: !10297)
!10301 = !DILocation(line: 3083, column: 5, scope: !10297)
!10302 = !DILocation(line: 3083, column: 10, scope: !10297)
!10303 = !DILocation(line: 3083, column: 14, scope: !10297)
!10304 = !DILocation(line: 3083, column: 19, scope: !10297)
!10305 = !DILocation(line: 3083, column: 24, scope: !10297)
!10306 = !DILocation(line: 3084, column: 4, scope: !10297)
!10307 = !DILocation(line: 3085, column: 3, scope: !10290)
!10308 = !DILocation(line: 3086, column: 2, scope: !10282)
!10309 = !DILocation(line: 3088, column: 6, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 3088, column: 6)
!10311 = !DILocation(line: 3088, column: 13, scope: !10310)
!10312 = !DILocation(line: 3088, column: 18, scope: !10310)
!10313 = !DILocation(line: 3088, column: 6, scope: !10040)
!10314 = !DILocation(line: 3089, column: 3, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10310, file: !3, line: 3088, column: 37)
!10316 = !DILocation(line: 3089, column: 8, scope: !10315)
!10317 = !DILocation(line: 3089, column: 17, scope: !10315)
!10318 = !DILocation(line: 3090, column: 2, scope: !10315)
!10319 = !DILocation(line: 3091, column: 12, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10310, file: !3, line: 3091, column: 11)
!10321 = !DILocation(line: 3091, column: 19, scope: !10320)
!10322 = !DILocation(line: 3091, column: 24, scope: !10320)
!10323 = !DILocation(line: 3091, column: 41, scope: !10320)
!10324 = !DILocation(line: 3092, column: 11, scope: !10320)
!10325 = !DILocation(line: 3091, column: 11, scope: !10310)
!10326 = !DILocation(line: 3094, column: 3, scope: !10327)
!10327 = distinct !DILexicalBlock(scope: !10320, file: !3, line: 3093, column: 2)
!10328 = !DILocation(line: 3094, column: 8, scope: !10327)
!10329 = !DILocation(line: 3094, column: 17, scope: !10327)
!10330 = !DILocation(line: 3095, column: 2, scope: !10327)
!10331 = !DILocation(line: 3097, column: 11, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10320, file: !3, line: 3097, column: 11)
!10333 = !DILocation(line: 3097, column: 11, scope: !10320)
!10334 = !DILocation(line: 3098, column: 3, scope: !10335)
!10335 = distinct !DILexicalBlock(scope: !10332, file: !3, line: 3097, column: 41)
!10336 = !DILocation(line: 3098, column: 8, scope: !10335)
!10337 = !DILocation(line: 3098, column: 17, scope: !10335)
!10338 = !DILocation(line: 3099, column: 2, scope: !10335)
!10339 = !DILocation(line: 3102, column: 20, scope: !10040)
!10340 = !DILocation(line: 3102, column: 27, scope: !10040)
!10341 = !DILocation(line: 3102, column: 32, scope: !10040)
!10342 = !DILocation(line: 3102, column: 2, scope: !10040)
!10343 = !DILocation(line: 3102, column: 7, scope: !10040)
!10344 = !DILocation(line: 3102, column: 16, scope: !10040)
!10345 = !DILocation(line: 3104, column: 6, scope: !10346)
!10346 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 3104, column: 6)
!10347 = !DILocation(line: 3104, column: 11, scope: !10346)
!10348 = !DILocation(line: 3104, column: 16, scope: !10346)
!10349 = !DILocation(line: 3104, column: 6, scope: !10040)
!10350 = !DILocation(line: 3105, column: 7, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10352, file: !3, line: 3105, column: 7)
!10352 = distinct !DILexicalBlock(scope: !10346, file: !3, line: 3104, column: 25)
!10353 = !DILocation(line: 3105, column: 12, scope: !10351)
!10354 = !DILocation(line: 3105, column: 7, scope: !10352)
!10355 = !DILocation(line: 3106, column: 4, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10351, file: !3, line: 3105, column: 21)
!10357 = !DILocation(line: 3106, column: 9, scope: !10356)
!10358 = !DILocation(line: 3106, column: 14, scope: !10356)
!10359 = !DILocation(line: 3107, column: 3, scope: !10356)
!10360 = !DILocation(line: 3108, column: 2, scope: !10352)
!10361 = !DILocation(line: 3111, column: 11, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 3111, column: 11)
!10363 = !DILocation(line: 3111, column: 11, scope: !10040)
!10364 = !DILocation(line: 3111, column: 113, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10362, file: !3, line: 3111, column: 112)
!10366 = !DILocation(line: 3112, column: 11, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10362, file: !3, line: 3112, column: 11)
!10368 = !DILocation(line: 3112, column: 16, scope: !10367)
!10369 = !DILocation(line: 3112, column: 21, scope: !10367)
!10370 = !DILocation(line: 3112, column: 11, scope: !10362)
!10371 = !DILocation(line: 3112, column: 38, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10367, file: !3, line: 3112, column: 37)
!10373 = !DILocation(line: 3113, column: 7, scope: !10367)
!10374 = !DILocation(line: 3113, column: 12, scope: !10367)
!10375 = !DILocation(line: 3113, column: 17, scope: !10367)
!10376 = !DILocation(line: 3115, column: 15, scope: !10040)
!10377 = !DILocation(line: 3115, column: 22, scope: !10040)
!10378 = !DILocation(line: 3115, column: 31, scope: !10040)
!10379 = !DILocation(line: 3115, column: 2, scope: !10040)
!10380 = !DILocation(line: 3117, column: 6, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 3117, column: 6)
!10382 = !DILocation(line: 3117, column: 13, scope: !10381)
!10383 = !DILocation(line: 3117, column: 6, scope: !10040)
!10384 = !DILocation(line: 3118, column: 21, scope: !10381)
!10385 = !DILocation(line: 3118, column: 28, scope: !10381)
!10386 = !DILocation(line: 3118, column: 39, scope: !10381)
!10387 = !DILocation(line: 3118, column: 3, scope: !10381)
!10388 = !DILocation(line: 3127, column: 9, scope: !10040)
!10389 = !DILocation(line: 3127, column: 2, scope: !10040)
!10390 = !DILocation(line: 3128, column: 1, scope: !10040)
!10391 = distinct !DISubprogram(name: "autocomplete_begin", scope: !3, file: !3, line: 3511, type: !10392, scopeLine: 3512, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!10392 = !DISubroutineType(types: !10393)
!10393 = !{!10394, !1647, !1547}
!10394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10395, size: 64)
!10395 = !DIDerivedType(tag: DW_TAG_typedef, name: "AutoComplete", file: !6, line: 677, baseType: !10396)
!10396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AutoComplete", file: !3, line: 3504, size: 256, elements: !10397)
!10397 = !{!10398, !10399, !10400, !10401}
!10398 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !10396, file: !3, line: 3505, baseType: !1547, size: 64)
!10399 = !DIDerivedType(tag: DW_TAG_member, name: "matches", scope: !10396, file: !3, line: 3506, baseType: !1067, size: 32, offset: 64)
!10400 = !DIDerivedType(tag: DW_TAG_member, name: "truncate", scope: !10396, file: !3, line: 3507, baseType: !1541, size: 64, offset: 128)
!10401 = !DIDerivedType(tag: DW_TAG_member, name: "startname", scope: !10396, file: !3, line: 3508, baseType: !1647, size: 64, offset: 192)
!10402 = !DILocalVariable(name: "startname", arg: 1, scope: !10391, file: !3, line: 3511, type: !1647)
!10403 = !DILocation(line: 3511, column: 46, scope: !10391)
!10404 = !DILocalVariable(name: "maxlen", arg: 2, scope: !10391, file: !3, line: 3511, type: !1547)
!10405 = !DILocation(line: 3511, column: 64, scope: !10391)
!10406 = !DILocalVariable(name: "autocpl", scope: !10391, file: !3, line: 3513, type: !10394)
!10407 = !DILocation(line: 3513, column: 16, scope: !10391)
!10408 = !DILocation(line: 3515, column: 12, scope: !10391)
!10409 = !DILocation(line: 3515, column: 10, scope: !10391)
!10410 = !DILocation(line: 3516, column: 20, scope: !10391)
!10411 = !DILocation(line: 3516, column: 2, scope: !10391)
!10412 = !DILocation(line: 3516, column: 11, scope: !10391)
!10413 = !DILocation(line: 3516, column: 18, scope: !10391)
!10414 = !DILocation(line: 3517, column: 2, scope: !10391)
!10415 = !DILocation(line: 3517, column: 11, scope: !10391)
!10416 = !DILocation(line: 3517, column: 19, scope: !10391)
!10417 = !DILocation(line: 3518, column: 22, scope: !10391)
!10418 = !DILocation(line: 3518, column: 49, scope: !10391)
!10419 = !DILocation(line: 3518, column: 47, scope: !10391)
!10420 = !DILocation(line: 3518, column: 2, scope: !10391)
!10421 = !DILocation(line: 3518, column: 11, scope: !10391)
!10422 = !DILocation(line: 3518, column: 20, scope: !10391)
!10423 = !DILocation(line: 3519, column: 23, scope: !10391)
!10424 = !DILocation(line: 3519, column: 2, scope: !10391)
!10425 = !DILocation(line: 3519, column: 11, scope: !10391)
!10426 = !DILocation(line: 3519, column: 21, scope: !10391)
!10427 = !DILocation(line: 3521, column: 9, scope: !10391)
!10428 = !DILocation(line: 3521, column: 2, scope: !10391)
!10429 = distinct !DISubprogram(name: "autocomplete_do_name", scope: !3, file: !3, line: 3524, type: !10430, scopeLine: 3525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!10430 = !DISubroutineType(types: !10431)
!10431 = !{null, !10394, !1647}
!10432 = !DILocalVariable(name: "autocpl", arg: 1, scope: !10429, file: !3, line: 3524, type: !10394)
!10433 = !DILocation(line: 3524, column: 41, scope: !10429)
!10434 = !DILocalVariable(name: "name", arg: 2, scope: !10429, file: !3, line: 3524, type: !1647)
!10435 = !DILocation(line: 3524, column: 62, scope: !10429)
!10436 = !DILocalVariable(name: "truncate", scope: !10429, file: !3, line: 3526, type: !1541)
!10437 = !DILocation(line: 3526, column: 8, scope: !10429)
!10438 = !DILocation(line: 3526, column: 19, scope: !10429)
!10439 = !DILocation(line: 3526, column: 28, scope: !10429)
!10440 = !DILocalVariable(name: "startname", scope: !10429, file: !3, line: 3527, type: !1647)
!10441 = !DILocation(line: 3527, column: 14, scope: !10429)
!10442 = !DILocation(line: 3527, column: 26, scope: !10429)
!10443 = !DILocation(line: 3527, column: 35, scope: !10429)
!10444 = !DILocalVariable(name: "a", scope: !10429, file: !3, line: 3528, type: !1067)
!10445 = !DILocation(line: 3528, column: 6, scope: !10429)
!10446 = !DILocation(line: 3530, column: 9, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10429, file: !3, line: 3530, column: 2)
!10448 = !DILocation(line: 3530, column: 7, scope: !10447)
!10449 = !DILocation(line: 3530, column: 14, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !10447, file: !3, line: 3530, column: 2)
!10451 = !DILocation(line: 3530, column: 18, scope: !10450)
!10452 = !DILocation(line: 3530, column: 27, scope: !10450)
!10453 = !DILocation(line: 3530, column: 34, scope: !10450)
!10454 = !DILocation(line: 3530, column: 16, scope: !10450)
!10455 = !DILocation(line: 3530, column: 2, scope: !10447)
!10456 = !DILocation(line: 3531, column: 7, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10458, file: !3, line: 3531, column: 7)
!10458 = distinct !DILexicalBlock(scope: !10450, file: !3, line: 3530, column: 44)
!10459 = !DILocation(line: 3531, column: 17, scope: !10457)
!10460 = !DILocation(line: 3531, column: 20, scope: !10457)
!10461 = !DILocation(line: 3531, column: 25, scope: !10457)
!10462 = !DILocation(line: 3531, column: 28, scope: !10457)
!10463 = !DILocation(line: 3531, column: 38, scope: !10457)
!10464 = !DILocation(line: 3531, column: 44, scope: !10457)
!10465 = !DILocation(line: 3531, column: 49, scope: !10457)
!10466 = !DILocation(line: 3531, column: 41, scope: !10457)
!10467 = !DILocation(line: 3531, column: 7, scope: !10458)
!10468 = !DILocation(line: 3532, column: 4, scope: !10457)
!10469 = !DILocation(line: 3533, column: 2, scope: !10458)
!10470 = !DILocation(line: 3530, column: 40, scope: !10450)
!10471 = !DILocation(line: 3530, column: 2, scope: !10450)
!10472 = distinct !{!10472, !10455, !10473}
!10473 = !DILocation(line: 3533, column: 2, scope: !10447)
!10474 = !DILocation(line: 3535, column: 6, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10429, file: !3, line: 3535, column: 6)
!10476 = !DILocation(line: 3535, column: 16, scope: !10475)
!10477 = !DILocation(line: 3535, column: 19, scope: !10475)
!10478 = !DILocation(line: 3535, column: 6, scope: !10429)
!10479 = !DILocation(line: 3536, column: 3, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10475, file: !3, line: 3535, column: 25)
!10481 = !DILocation(line: 3536, column: 12, scope: !10480)
!10482 = !DILocation(line: 3536, column: 19, scope: !10480)
!10483 = !DILocation(line: 3538, column: 7, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10480, file: !3, line: 3538, column: 7)
!10485 = !DILocation(line: 3538, column: 19, scope: !10484)
!10486 = !DILocation(line: 3538, column: 7, scope: !10480)
!10487 = !DILocation(line: 3539, column: 16, scope: !10484)
!10488 = !DILocation(line: 3539, column: 26, scope: !10484)
!10489 = !DILocation(line: 3539, column: 32, scope: !10484)
!10490 = !DILocation(line: 3539, column: 41, scope: !10484)
!10491 = !DILocation(line: 3539, column: 4, scope: !10484)
!10492 = !DILocation(line: 3542, column: 11, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 3542, column: 4)
!10494 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 3540, column: 8)
!10495 = !DILocation(line: 3542, column: 9, scope: !10493)
!10496 = !DILocation(line: 3542, column: 16, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10493, file: !3, line: 3542, column: 4)
!10498 = !DILocation(line: 3542, column: 20, scope: !10497)
!10499 = !DILocation(line: 3542, column: 29, scope: !10497)
!10500 = !DILocation(line: 3542, column: 36, scope: !10497)
!10501 = !DILocation(line: 3542, column: 18, scope: !10497)
!10502 = !DILocation(line: 3542, column: 4, scope: !10493)
!10503 = !DILocation(line: 3543, column: 9, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10505, file: !3, line: 3543, column: 9)
!10505 = distinct !DILexicalBlock(scope: !10497, file: !3, line: 3542, column: 46)
!10506 = !DILocation(line: 3543, column: 14, scope: !10504)
!10507 = !DILocation(line: 3543, column: 17, scope: !10504)
!10508 = !DILocation(line: 3543, column: 9, scope: !10505)
!10509 = !DILocation(line: 3544, column: 6, scope: !10510)
!10510 = distinct !DILexicalBlock(scope: !10504, file: !3, line: 3543, column: 23)
!10511 = !DILocation(line: 3544, column: 15, scope: !10510)
!10512 = !DILocation(line: 3544, column: 18, scope: !10510)
!10513 = !DILocation(line: 3545, column: 6, scope: !10510)
!10514 = !DILocation(line: 3547, column: 14, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10504, file: !3, line: 3547, column: 14)
!10516 = !DILocation(line: 3547, column: 23, scope: !10515)
!10517 = !DILocation(line: 3547, column: 29, scope: !10515)
!10518 = !DILocation(line: 3547, column: 34, scope: !10515)
!10519 = !DILocation(line: 3547, column: 26, scope: !10515)
!10520 = !DILocation(line: 3547, column: 14, scope: !10504)
!10521 = !DILocation(line: 3548, column: 6, scope: !10515)
!10522 = !DILocation(line: 3548, column: 15, scope: !10515)
!10523 = !DILocation(line: 3548, column: 18, scope: !10515)
!10524 = !DILocation(line: 3549, column: 4, scope: !10505)
!10525 = !DILocation(line: 3542, column: 42, scope: !10497)
!10526 = !DILocation(line: 3542, column: 4, scope: !10497)
!10527 = distinct !{!10527, !10502, !10528}
!10528 = !DILocation(line: 3549, column: 4, scope: !10493)
!10529 = !DILocation(line: 3551, column: 2, scope: !10480)
!10530 = !DILocation(line: 3552, column: 1, scope: !10429)
!10531 = distinct !DISubprogram(name: "autocomplete_end", scope: !3, file: !3, line: 3554, type: !10532, scopeLine: 3555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!10532 = !DISubroutineType(types: !10533)
!10533 = !{!1067, !10394, !1541}
!10534 = !DILocalVariable(name: "autocpl", arg: 1, scope: !10531, file: !3, line: 3554, type: !10394)
!10535 = !DILocation(line: 3554, column: 36, scope: !10531)
!10536 = !DILocalVariable(name: "autoname", arg: 2, scope: !10531, file: !3, line: 3554, type: !1541)
!10537 = !DILocation(line: 3554, column: 51, scope: !10531)
!10538 = !DILocalVariable(name: "match", scope: !10531, file: !3, line: 3556, type: !1067)
!10539 = !DILocation(line: 3556, column: 6, scope: !10531)
!10540 = !DILocation(line: 3557, column: 6, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10531, file: !3, line: 3557, column: 6)
!10542 = !DILocation(line: 3557, column: 15, scope: !10541)
!10543 = !DILocation(line: 3557, column: 6, scope: !10531)
!10544 = !DILocation(line: 3558, column: 7, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10546, file: !3, line: 3558, column: 7)
!10546 = distinct !DILexicalBlock(scope: !10541, file: !3, line: 3557, column: 28)
!10547 = !DILocation(line: 3558, column: 16, scope: !10545)
!10548 = !DILocation(line: 3558, column: 24, scope: !10545)
!10549 = !DILocation(line: 3558, column: 7, scope: !10546)
!10550 = !DILocation(line: 3559, column: 10, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10545, file: !3, line: 3558, column: 30)
!10552 = !DILocation(line: 3560, column: 3, scope: !10551)
!10553 = !DILocation(line: 3562, column: 10, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10545, file: !3, line: 3561, column: 8)
!10555 = !DILocation(line: 3564, column: 15, scope: !10546)
!10556 = !DILocation(line: 3564, column: 25, scope: !10546)
!10557 = !DILocation(line: 3564, column: 34, scope: !10546)
!10558 = !DILocation(line: 3564, column: 44, scope: !10546)
!10559 = !DILocation(line: 3564, column: 53, scope: !10546)
!10560 = !DILocation(line: 3564, column: 3, scope: !10546)
!10561 = !DILocation(line: 3565, column: 2, scope: !10546)
!10562 = !DILocation(line: 3567, column: 7, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10564, file: !3, line: 3567, column: 7)
!10564 = distinct !DILexicalBlock(scope: !10541, file: !3, line: 3566, column: 7)
!10565 = !DILocation(line: 3567, column: 19, scope: !10563)
!10566 = !DILocation(line: 3567, column: 28, scope: !10563)
!10567 = !DILocation(line: 3567, column: 16, scope: !10563)
!10568 = !DILocation(line: 3567, column: 7, scope: !10564)
!10569 = !DILocation(line: 3568, column: 16, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 3567, column: 39)
!10571 = !DILocation(line: 3568, column: 26, scope: !10570)
!10572 = !DILocation(line: 3568, column: 35, scope: !10570)
!10573 = !DILocation(line: 3568, column: 46, scope: !10570)
!10574 = !DILocation(line: 3568, column: 55, scope: !10570)
!10575 = !DILocation(line: 3568, column: 4, scope: !10570)
!10576 = !DILocation(line: 3569, column: 3, scope: !10570)
!10577 = !DILocation(line: 3572, column: 2, scope: !10531)
!10578 = !DILocation(line: 3572, column: 12, scope: !10531)
!10579 = !DILocation(line: 3572, column: 21, scope: !10531)
!10580 = !DILocation(line: 3573, column: 2, scope: !10531)
!10581 = !DILocation(line: 3573, column: 12, scope: !10531)
!10582 = !DILocation(line: 3574, column: 9, scope: !10531)
!10583 = !DILocation(line: 3574, column: 2, scope: !10531)
!10584 = distinct !DISubprogram(name: "uiDefButF", scope: !3, file: !3, line: 3597, type: !10585, scopeLine: 3598, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!10585 = !DISubroutineType(types: !10586)
!10586 = !{!1558, !1695, !1067, !1067, !1647, !1067, !1067, !1545, !1545, !1543, !1534, !1534, !1534, !1534, !1647}
!10587 = !DILocalVariable(name: "block", arg: 1, scope: !10584, file: !3, line: 3597, type: !1695)
!10588 = !DILocation(line: 3597, column: 27, scope: !10584)
!10589 = !DILocalVariable(name: "type", arg: 2, scope: !10584, file: !3, line: 3597, type: !1067)
!10590 = !DILocation(line: 3597, column: 38, scope: !10584)
!10591 = !DILocalVariable(name: "retval", arg: 3, scope: !10584, file: !3, line: 3597, type: !1067)
!10592 = !DILocation(line: 3597, column: 48, scope: !10584)
!10593 = !DILocalVariable(name: "str", arg: 4, scope: !10584, file: !3, line: 3597, type: !1647)
!10594 = !DILocation(line: 3597, column: 68, scope: !10584)
!10595 = !DILocalVariable(name: "x", arg: 5, scope: !10584, file: !3, line: 3597, type: !1067)
!10596 = !DILocation(line: 3597, column: 77, scope: !10584)
!10597 = !DILocalVariable(name: "y", arg: 6, scope: !10584, file: !3, line: 3597, type: !1067)
!10598 = !DILocation(line: 3597, column: 84, scope: !10584)
!10599 = !DILocalVariable(name: "width", arg: 7, scope: !10584, file: !3, line: 3597, type: !1545)
!10600 = !DILocation(line: 3597, column: 93, scope: !10584)
!10601 = !DILocalVariable(name: "height", arg: 8, scope: !10584, file: !3, line: 3597, type: !1545)
!10602 = !DILocation(line: 3597, column: 106, scope: !10584)
!10603 = !DILocalVariable(name: "poin", arg: 9, scope: !10584, file: !3, line: 3597, type: !1543)
!10604 = !DILocation(line: 3597, column: 121, scope: !10584)
!10605 = !DILocalVariable(name: "min", arg: 10, scope: !10584, file: !3, line: 3597, type: !1534)
!10606 = !DILocation(line: 3597, column: 133, scope: !10584)
!10607 = !DILocalVariable(name: "max", arg: 11, scope: !10584, file: !3, line: 3597, type: !1534)
!10608 = !DILocation(line: 3597, column: 144, scope: !10584)
!10609 = !DILocalVariable(name: "a1", arg: 12, scope: !10584, file: !3, line: 3597, type: !1534)
!10610 = !DILocation(line: 3597, column: 155, scope: !10584)
!10611 = !DILocalVariable(name: "a2", arg: 13, scope: !10584, file: !3, line: 3597, type: !1534)
!10612 = !DILocation(line: 3597, column: 165, scope: !10584)
!10613 = !DILocalVariable(name: "tip", arg: 14, scope: !10584, file: !3, line: 3597, type: !1647)
!10614 = !DILocation(line: 3597, column: 182, scope: !10584)
!10615 = !DILocation(line: 3599, column: 18, scope: !10584)
!10616 = !DILocation(line: 3599, column: 25, scope: !10584)
!10617 = !DILocation(line: 3599, column: 30, scope: !10584)
!10618 = !DILocation(line: 3599, column: 51, scope: !10584)
!10619 = !DILocation(line: 3599, column: 59, scope: !10584)
!10620 = !DILocation(line: 3599, column: 64, scope: !10584)
!10621 = !DILocation(line: 3599, column: 67, scope: !10584)
!10622 = !DILocation(line: 3599, column: 70, scope: !10584)
!10623 = !DILocation(line: 3599, column: 77, scope: !10584)
!10624 = !DILocation(line: 3599, column: 94, scope: !10584)
!10625 = !DILocation(line: 3599, column: 85, scope: !10584)
!10626 = !DILocation(line: 3599, column: 100, scope: !10584)
!10627 = !DILocation(line: 3599, column: 105, scope: !10584)
!10628 = !DILocation(line: 3599, column: 110, scope: !10584)
!10629 = !DILocation(line: 3599, column: 114, scope: !10584)
!10630 = !DILocation(line: 3599, column: 118, scope: !10584)
!10631 = !DILocation(line: 3599, column: 9, scope: !10584)
!10632 = !DILocation(line: 3599, column: 2, scope: !10584)
!10633 = distinct !DISubprogram(name: "uiDefButBitF", scope: !3, file: !3, line: 3601, type: !10634, scopeLine: 3602, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!10634 = !DISubroutineType(types: !10635)
!10635 = !{!1558, !1695, !1067, !1067, !1067, !1647, !1067, !1067, !1545, !1545, !1543, !1534, !1534, !1534, !1534, !1647}
!10636 = !DILocalVariable(name: "block", arg: 1, scope: !10633, file: !3, line: 3601, type: !1695)
!10637 = !DILocation(line: 3601, column: 30, scope: !10633)
!10638 = !DILocalVariable(name: "type", arg: 2, scope: !10633, file: !3, line: 3601, type: !1067)
!10639 = !DILocation(line: 3601, column: 41, scope: !10633)
!10640 = !DILocalVariable(name: "bit", arg: 3, scope: !10633, file: !3, line: 3601, type: !1067)
!10641 = !DILocation(line: 3601, column: 51, scope: !10633)
!10642 = !DILocalVariable(name: "retval", arg: 4, scope: !10633, file: !3, line: 3601, type: !1067)
!10643 = !DILocation(line: 3601, column: 60, scope: !10633)
!10644 = !DILocalVariable(name: "str", arg: 5, scope: !10633, file: !3, line: 3601, type: !1647)
!10645 = !DILocation(line: 3601, column: 80, scope: !10633)
!10646 = !DILocalVariable(name: "x", arg: 6, scope: !10633, file: !3, line: 3601, type: !1067)
!10647 = !DILocation(line: 3601, column: 89, scope: !10633)
!10648 = !DILocalVariable(name: "y", arg: 7, scope: !10633, file: !3, line: 3601, type: !1067)
!10649 = !DILocation(line: 3601, column: 96, scope: !10633)
!10650 = !DILocalVariable(name: "width", arg: 8, scope: !10633, file: !3, line: 3601, type: !1545)
!10651 = !DILocation(line: 3601, column: 105, scope: !10633)
!10652 = !DILocalVariable(name: "height", arg: 9, scope: !10633, file: !3, line: 3601, type: !1545)
!10653 = !DILocation(line: 3601, column: 118, scope: !10633)
!10654 = !DILocalVariable(name: "poin", arg: 10, scope: !10633, file: !3, line: 3601, type: !1543)
!10655 = !DILocation(line: 3601, column: 133, scope: !10633)
!10656 = !DILocalVariable(name: "min", arg: 11, scope: !10633, file: !3, line: 3601, type: !1534)
!10657 = !DILocation(line: 3601, column: 145, scope: !10633)
!10658 = !DILocalVariable(name: "max", arg: 12, scope: !10633, file: !3, line: 3601, type: !1534)
!10659 = !DILocation(line: 3601, column: 156, scope: !10633)
!10660 = !DILocalVariable(name: "a1", arg: 13, scope: !10633, file: !3, line: 3601, type: !1534)
!10661 = !DILocation(line: 3601, column: 167, scope: !10633)
!10662 = !DILocalVariable(name: "a2", arg: 14, scope: !10633, file: !3, line: 3601, type: !1534)
!10663 = !DILocation(line: 3601, column: 177, scope: !10633)
!10664 = !DILocalVariable(name: "tip", arg: 15, scope: !10633, file: !3, line: 3601, type: !1647)
!10665 = !DILocation(line: 3601, column: 194, scope: !10633)
!10666 = !DILocation(line: 3603, column: 21, scope: !10633)
!10667 = !DILocation(line: 3603, column: 28, scope: !10633)
!10668 = !DILocation(line: 3603, column: 33, scope: !10633)
!10669 = !DILocation(line: 3603, column: 54, scope: !10633)
!10670 = !DILocation(line: 3603, column: 59, scope: !10633)
!10671 = !DILocation(line: 3603, column: 67, scope: !10633)
!10672 = !DILocation(line: 3603, column: 72, scope: !10633)
!10673 = !DILocation(line: 3603, column: 75, scope: !10633)
!10674 = !DILocation(line: 3603, column: 78, scope: !10633)
!10675 = !DILocation(line: 3603, column: 85, scope: !10633)
!10676 = !DILocation(line: 3603, column: 102, scope: !10633)
!10677 = !DILocation(line: 3603, column: 93, scope: !10633)
!10678 = !DILocation(line: 3603, column: 108, scope: !10633)
!10679 = !DILocation(line: 3603, column: 113, scope: !10633)
!10680 = !DILocation(line: 3603, column: 118, scope: !10633)
!10681 = !DILocation(line: 3603, column: 122, scope: !10633)
!10682 = !DILocation(line: 3603, column: 126, scope: !10633)
!10683 = !DILocation(line: 3603, column: 9, scope: !10633)
!10684 = !DILocation(line: 3603, column: 2, scope: !10633)
!10685 = distinct !DISubprogram(name: "uiDefButBit", scope: !3, file: !3, line: 3587, type: !10686, scopeLine: 3588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!10686 = !DISubroutineType(types: !10687)
!10687 = !{!1558, !1695, !1067, !1067, !1067, !1647, !1067, !1067, !1545, !1545, !1535, !1534, !1534, !1534, !1534, !1647}
!10688 = !DILocalVariable(name: "block", arg: 1, scope: !10685, file: !3, line: 3587, type: !1695)
!10689 = !DILocation(line: 3587, column: 36, scope: !10685)
!10690 = !DILocalVariable(name: "type", arg: 2, scope: !10685, file: !3, line: 3587, type: !1067)
!10691 = !DILocation(line: 3587, column: 47, scope: !10685)
!10692 = !DILocalVariable(name: "bit", arg: 3, scope: !10685, file: !3, line: 3587, type: !1067)
!10693 = !DILocation(line: 3587, column: 57, scope: !10685)
!10694 = !DILocalVariable(name: "retval", arg: 4, scope: !10685, file: !3, line: 3587, type: !1067)
!10695 = !DILocation(line: 3587, column: 66, scope: !10685)
!10696 = !DILocalVariable(name: "str", arg: 5, scope: !10685, file: !3, line: 3587, type: !1647)
!10697 = !DILocation(line: 3587, column: 86, scope: !10685)
!10698 = !DILocalVariable(name: "x", arg: 6, scope: !10685, file: !3, line: 3587, type: !1067)
!10699 = !DILocation(line: 3587, column: 95, scope: !10685)
!10700 = !DILocalVariable(name: "y", arg: 7, scope: !10685, file: !3, line: 3587, type: !1067)
!10701 = !DILocation(line: 3587, column: 102, scope: !10685)
!10702 = !DILocalVariable(name: "width", arg: 8, scope: !10685, file: !3, line: 3587, type: !1545)
!10703 = !DILocation(line: 3587, column: 111, scope: !10685)
!10704 = !DILocalVariable(name: "height", arg: 9, scope: !10685, file: !3, line: 3587, type: !1545)
!10705 = !DILocation(line: 3587, column: 124, scope: !10685)
!10706 = !DILocalVariable(name: "poin", arg: 10, scope: !10685, file: !3, line: 3587, type: !1535)
!10707 = !DILocation(line: 3587, column: 138, scope: !10685)
!10708 = !DILocalVariable(name: "min", arg: 11, scope: !10685, file: !3, line: 3587, type: !1534)
!10709 = !DILocation(line: 3587, column: 150, scope: !10685)
!10710 = !DILocalVariable(name: "max", arg: 12, scope: !10685, file: !3, line: 3587, type: !1534)
!10711 = !DILocation(line: 3587, column: 161, scope: !10685)
!10712 = !DILocalVariable(name: "a1", arg: 13, scope: !10685, file: !3, line: 3587, type: !1534)
!10713 = !DILocation(line: 3587, column: 172, scope: !10685)
!10714 = !DILocalVariable(name: "a2", arg: 14, scope: !10685, file: !3, line: 3587, type: !1534)
!10715 = !DILocation(line: 3587, column: 182, scope: !10685)
!10716 = !DILocalVariable(name: "tip", arg: 15, scope: !10685, file: !3, line: 3587, type: !1647)
!10717 = !DILocation(line: 3587, column: 199, scope: !10685)
!10718 = !DILocalVariable(name: "bitIdx", scope: !10685, file: !3, line: 3589, type: !1067)
!10719 = !DILocation(line: 3589, column: 6, scope: !10685)
!10720 = !DILocation(line: 3589, column: 28, scope: !10685)
!10721 = !DILocation(line: 3589, column: 15, scope: !10685)
!10722 = !DILocation(line: 3590, column: 6, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10685, file: !3, line: 3590, column: 6)
!10724 = !DILocation(line: 3590, column: 13, scope: !10723)
!10725 = !DILocation(line: 3590, column: 6, scope: !10685)
!10726 = !DILocation(line: 3591, column: 3, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10723, file: !3, line: 3590, column: 20)
!10728 = !DILocation(line: 3594, column: 19, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10723, file: !3, line: 3593, column: 7)
!10730 = !DILocation(line: 3594, column: 26, scope: !10729)
!10731 = !DILocation(line: 3594, column: 31, scope: !10729)
!10732 = !DILocation(line: 3594, column: 51, scope: !10729)
!10733 = !DILocation(line: 3594, column: 49, scope: !10729)
!10734 = !DILocation(line: 3594, column: 59, scope: !10729)
!10735 = !DILocation(line: 3594, column: 67, scope: !10729)
!10736 = !DILocation(line: 3594, column: 72, scope: !10729)
!10737 = !DILocation(line: 3594, column: 75, scope: !10729)
!10738 = !DILocation(line: 3594, column: 78, scope: !10729)
!10739 = !DILocation(line: 3594, column: 85, scope: !10729)
!10740 = !DILocation(line: 3594, column: 93, scope: !10729)
!10741 = !DILocation(line: 3594, column: 99, scope: !10729)
!10742 = !DILocation(line: 3594, column: 104, scope: !10729)
!10743 = !DILocation(line: 3594, column: 109, scope: !10729)
!10744 = !DILocation(line: 3594, column: 113, scope: !10729)
!10745 = !DILocation(line: 3594, column: 117, scope: !10729)
!10746 = !DILocation(line: 3594, column: 10, scope: !10729)
!10747 = !DILocation(line: 3594, column: 3, scope: !10729)
!10748 = !DILocation(line: 3596, column: 1, scope: !10685)
!10749 = distinct !DISubprogram(name: "uiDefButI", scope: !3, file: !3, line: 3605, type: !10750, scopeLine: 3606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!10750 = !DISubroutineType(types: !10751)
!10751 = !{!1558, !1695, !1067, !1067, !1647, !1067, !1067, !1545, !1545, !1546, !1534, !1534, !1534, !1534, !1647}
!10752 = !DILocalVariable(name: "block", arg: 1, scope: !10749, file: !3, line: 3605, type: !1695)
!10753 = !DILocation(line: 3605, column: 27, scope: !10749)
!10754 = !DILocalVariable(name: "type", arg: 2, scope: !10749, file: !3, line: 3605, type: !1067)
!10755 = !DILocation(line: 3605, column: 38, scope: !10749)
!10756 = !DILocalVariable(name: "retval", arg: 3, scope: !10749, file: !3, line: 3605, type: !1067)
!10757 = !DILocation(line: 3605, column: 48, scope: !10749)
!10758 = !DILocalVariable(name: "str", arg: 4, scope: !10749, file: !3, line: 3605, type: !1647)
!10759 = !DILocation(line: 3605, column: 68, scope: !10749)
!10760 = !DILocalVariable(name: "x", arg: 5, scope: !10749, file: !3, line: 3605, type: !1067)
!10761 = !DILocation(line: 3605, column: 77, scope: !10749)
!10762 = !DILocalVariable(name: "y", arg: 6, scope: !10749, file: !3, line: 3605, type: !1067)
!10763 = !DILocation(line: 3605, column: 84, scope: !10749)
!10764 = !DILocalVariable(name: "width", arg: 7, scope: !10749, file: !3, line: 3605, type: !1545)
!10765 = !DILocation(line: 3605, column: 93, scope: !10749)
!10766 = !DILocalVariable(name: "height", arg: 8, scope: !10749, file: !3, line: 3605, type: !1545)
!10767 = !DILocation(line: 3605, column: 106, scope: !10749)
!10768 = !DILocalVariable(name: "poin", arg: 9, scope: !10749, file: !3, line: 3605, type: !1546)
!10769 = !DILocation(line: 3605, column: 119, scope: !10749)
!10770 = !DILocalVariable(name: "min", arg: 10, scope: !10749, file: !3, line: 3605, type: !1534)
!10771 = !DILocation(line: 3605, column: 131, scope: !10749)
!10772 = !DILocalVariable(name: "max", arg: 11, scope: !10749, file: !3, line: 3605, type: !1534)
!10773 = !DILocation(line: 3605, column: 142, scope: !10749)
!10774 = !DILocalVariable(name: "a1", arg: 12, scope: !10749, file: !3, line: 3605, type: !1534)
!10775 = !DILocation(line: 3605, column: 153, scope: !10749)
!10776 = !DILocalVariable(name: "a2", arg: 13, scope: !10749, file: !3, line: 3605, type: !1534)
!10777 = !DILocation(line: 3605, column: 163, scope: !10749)
!10778 = !DILocalVariable(name: "tip", arg: 14, scope: !10749, file: !3, line: 3605, type: !1647)
!10779 = !DILocation(line: 3605, column: 180, scope: !10749)
!10780 = !DILocation(line: 3607, column: 18, scope: !10749)
!10781 = !DILocation(line: 3607, column: 25, scope: !10749)
!10782 = !DILocation(line: 3607, column: 30, scope: !10749)
!10783 = !DILocation(line: 3607, column: 49, scope: !10749)
!10784 = !DILocation(line: 3607, column: 57, scope: !10749)
!10785 = !DILocation(line: 3607, column: 62, scope: !10749)
!10786 = !DILocation(line: 3607, column: 65, scope: !10749)
!10787 = !DILocation(line: 3607, column: 68, scope: !10749)
!10788 = !DILocation(line: 3607, column: 75, scope: !10749)
!10789 = !DILocation(line: 3607, column: 92, scope: !10749)
!10790 = !DILocation(line: 3607, column: 83, scope: !10749)
!10791 = !DILocation(line: 3607, column: 98, scope: !10749)
!10792 = !DILocation(line: 3607, column: 103, scope: !10749)
!10793 = !DILocation(line: 3607, column: 108, scope: !10749)
!10794 = !DILocation(line: 3607, column: 112, scope: !10749)
!10795 = !DILocation(line: 3607, column: 116, scope: !10749)
!10796 = !DILocation(line: 3607, column: 9, scope: !10749)
!10797 = !DILocation(line: 3607, column: 2, scope: !10749)
!10798 = distinct !DISubprogram(name: "uiDefButBitI", scope: !3, file: !3, line: 3609, type: !10799, scopeLine: 3610, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!10799 = !DISubroutineType(types: !10800)
!10800 = !{!1558, !1695, !1067, !1067, !1067, !1647, !1067, !1067, !1545, !1545, !1546, !1534, !1534, !1534, !1534, !1647}
!10801 = !DILocalVariable(name: "block", arg: 1, scope: !10798, file: !3, line: 3609, type: !1695)
!10802 = !DILocation(line: 3609, column: 30, scope: !10798)
!10803 = !DILocalVariable(name: "type", arg: 2, scope: !10798, file: !3, line: 3609, type: !1067)
!10804 = !DILocation(line: 3609, column: 41, scope: !10798)
!10805 = !DILocalVariable(name: "bit", arg: 3, scope: !10798, file: !3, line: 3609, type: !1067)
!10806 = !DILocation(line: 3609, column: 51, scope: !10798)
!10807 = !DILocalVariable(name: "retval", arg: 4, scope: !10798, file: !3, line: 3609, type: !1067)
!10808 = !DILocation(line: 3609, column: 60, scope: !10798)
!10809 = !DILocalVariable(name: "str", arg: 5, scope: !10798, file: !3, line: 3609, type: !1647)
!10810 = !DILocation(line: 3609, column: 80, scope: !10798)
!10811 = !DILocalVariable(name: "x", arg: 6, scope: !10798, file: !3, line: 3609, type: !1067)
!10812 = !DILocation(line: 3609, column: 89, scope: !10798)
!10813 = !DILocalVariable(name: "y", arg: 7, scope: !10798, file: !3, line: 3609, type: !1067)
!10814 = !DILocation(line: 3609, column: 96, scope: !10798)
!10815 = !DILocalVariable(name: "width", arg: 8, scope: !10798, file: !3, line: 3609, type: !1545)
!10816 = !DILocation(line: 3609, column: 105, scope: !10798)
!10817 = !DILocalVariable(name: "height", arg: 9, scope: !10798, file: !3, line: 3609, type: !1545)
!10818 = !DILocation(line: 3609, column: 118, scope: !10798)
!10819 = !DILocalVariable(name: "poin", arg: 10, scope: !10798, file: !3, line: 3609, type: !1546)
!10820 = !DILocation(line: 3609, column: 131, scope: !10798)
!10821 = !DILocalVariable(name: "min", arg: 11, scope: !10798, file: !3, line: 3609, type: !1534)
!10822 = !DILocation(line: 3609, column: 143, scope: !10798)
!10823 = !DILocalVariable(name: "max", arg: 12, scope: !10798, file: !3, line: 3609, type: !1534)
!10824 = !DILocation(line: 3609, column: 154, scope: !10798)
!10825 = !DILocalVariable(name: "a1", arg: 13, scope: !10798, file: !3, line: 3609, type: !1534)
!10826 = !DILocation(line: 3609, column: 165, scope: !10798)
!10827 = !DILocalVariable(name: "a2", arg: 14, scope: !10798, file: !3, line: 3609, type: !1534)
!10828 = !DILocation(line: 3609, column: 175, scope: !10798)
!10829 = !DILocalVariable(name: "tip", arg: 15, scope: !10798, file: !3, line: 3609, type: !1647)
!10830 = !DILocation(line: 3609, column: 192, scope: !10798)
!10831 = !DILocation(line: 3611, column: 21, scope: !10798)
!10832 = !DILocation(line: 3611, column: 28, scope: !10798)
!10833 = !DILocation(line: 3611, column: 33, scope: !10798)
!10834 = !DILocation(line: 3611, column: 52, scope: !10798)
!10835 = !DILocation(line: 3611, column: 57, scope: !10798)
!10836 = !DILocation(line: 3611, column: 65, scope: !10798)
!10837 = !DILocation(line: 3611, column: 70, scope: !10798)
!10838 = !DILocation(line: 3611, column: 73, scope: !10798)
!10839 = !DILocation(line: 3611, column: 76, scope: !10798)
!10840 = !DILocation(line: 3611, column: 83, scope: !10798)
!10841 = !DILocation(line: 3611, column: 100, scope: !10798)
!10842 = !DILocation(line: 3611, column: 91, scope: !10798)
!10843 = !DILocation(line: 3611, column: 106, scope: !10798)
!10844 = !DILocation(line: 3611, column: 111, scope: !10798)
!10845 = !DILocation(line: 3611, column: 116, scope: !10798)
!10846 = !DILocation(line: 3611, column: 120, scope: !10798)
!10847 = !DILocation(line: 3611, column: 124, scope: !10798)
!10848 = !DILocation(line: 3611, column: 9, scope: !10798)
!10849 = !DILocation(line: 3611, column: 2, scope: !10798)
!10850 = distinct !DISubprogram(name: "uiDefButS", scope: !3, file: !3, line: 3613, type: !10851, scopeLine: 3614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!10851 = !DISubroutineType(types: !10852)
!10852 = !{!1558, !1695, !1067, !1067, !1647, !1067, !1067, !1545, !1545, !1544, !1534, !1534, !1534, !1534, !1647}
!10853 = !DILocalVariable(name: "block", arg: 1, scope: !10850, file: !3, line: 3613, type: !1695)
!10854 = !DILocation(line: 3613, column: 27, scope: !10850)
!10855 = !DILocalVariable(name: "type", arg: 2, scope: !10850, file: !3, line: 3613, type: !1067)
!10856 = !DILocation(line: 3613, column: 38, scope: !10850)
!10857 = !DILocalVariable(name: "retval", arg: 3, scope: !10850, file: !3, line: 3613, type: !1067)
!10858 = !DILocation(line: 3613, column: 48, scope: !10850)
!10859 = !DILocalVariable(name: "str", arg: 4, scope: !10850, file: !3, line: 3613, type: !1647)
!10860 = !DILocation(line: 3613, column: 68, scope: !10850)
!10861 = !DILocalVariable(name: "x", arg: 5, scope: !10850, file: !3, line: 3613, type: !1067)
!10862 = !DILocation(line: 3613, column: 77, scope: !10850)
!10863 = !DILocalVariable(name: "y", arg: 6, scope: !10850, file: !3, line: 3613, type: !1067)
!10864 = !DILocation(line: 3613, column: 84, scope: !10850)
!10865 = !DILocalVariable(name: "width", arg: 7, scope: !10850, file: !3, line: 3613, type: !1545)
!10866 = !DILocation(line: 3613, column: 93, scope: !10850)
!10867 = !DILocalVariable(name: "height", arg: 8, scope: !10850, file: !3, line: 3613, type: !1545)
!10868 = !DILocation(line: 3613, column: 106, scope: !10850)
!10869 = !DILocalVariable(name: "poin", arg: 9, scope: !10850, file: !3, line: 3613, type: !1544)
!10870 = !DILocation(line: 3613, column: 121, scope: !10850)
!10871 = !DILocalVariable(name: "min", arg: 10, scope: !10850, file: !3, line: 3613, type: !1534)
!10872 = !DILocation(line: 3613, column: 133, scope: !10850)
!10873 = !DILocalVariable(name: "max", arg: 11, scope: !10850, file: !3, line: 3613, type: !1534)
!10874 = !DILocation(line: 3613, column: 144, scope: !10850)
!10875 = !DILocalVariable(name: "a1", arg: 12, scope: !10850, file: !3, line: 3613, type: !1534)
!10876 = !DILocation(line: 3613, column: 155, scope: !10850)
!10877 = !DILocalVariable(name: "a2", arg: 13, scope: !10850, file: !3, line: 3613, type: !1534)
!10878 = !DILocation(line: 3613, column: 165, scope: !10850)
!10879 = !DILocalVariable(name: "tip", arg: 14, scope: !10850, file: !3, line: 3613, type: !1647)
!10880 = !DILocation(line: 3613, column: 182, scope: !10850)
!10881 = !DILocation(line: 3615, column: 18, scope: !10850)
!10882 = !DILocation(line: 3615, column: 25, scope: !10850)
!10883 = !DILocation(line: 3615, column: 30, scope: !10850)
!10884 = !DILocation(line: 3615, column: 51, scope: !10850)
!10885 = !DILocation(line: 3615, column: 59, scope: !10850)
!10886 = !DILocation(line: 3615, column: 64, scope: !10850)
!10887 = !DILocation(line: 3615, column: 67, scope: !10850)
!10888 = !DILocation(line: 3615, column: 70, scope: !10850)
!10889 = !DILocation(line: 3615, column: 77, scope: !10850)
!10890 = !DILocation(line: 3615, column: 94, scope: !10850)
!10891 = !DILocation(line: 3615, column: 85, scope: !10850)
!10892 = !DILocation(line: 3615, column: 100, scope: !10850)
!10893 = !DILocation(line: 3615, column: 105, scope: !10850)
!10894 = !DILocation(line: 3615, column: 110, scope: !10850)
!10895 = !DILocation(line: 3615, column: 114, scope: !10850)
!10896 = !DILocation(line: 3615, column: 118, scope: !10850)
!10897 = !DILocation(line: 3615, column: 9, scope: !10850)
!10898 = !DILocation(line: 3615, column: 2, scope: !10850)
!10899 = distinct !DISubprogram(name: "uiDefButBitS", scope: !3, file: !3, line: 3617, type: !10900, scopeLine: 3618, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!10900 = !DISubroutineType(types: !10901)
!10901 = !{!1558, !1695, !1067, !1067, !1067, !1647, !1067, !1067, !1545, !1545, !1544, !1534, !1534, !1534, !1534, !1647}
!10902 = !DILocalVariable(name: "block", arg: 1, scope: !10899, file: !3, line: 3617, type: !1695)
!10903 = !DILocation(line: 3617, column: 30, scope: !10899)
!10904 = !DILocalVariable(name: "type", arg: 2, scope: !10899, file: !3, line: 3617, type: !1067)
!10905 = !DILocation(line: 3617, column: 41, scope: !10899)
!10906 = !DILocalVariable(name: "bit", arg: 3, scope: !10899, file: !3, line: 3617, type: !1067)
!10907 = !DILocation(line: 3617, column: 51, scope: !10899)
!10908 = !DILocalVariable(name: "retval", arg: 4, scope: !10899, file: !3, line: 3617, type: !1067)
!10909 = !DILocation(line: 3617, column: 60, scope: !10899)
!10910 = !DILocalVariable(name: "str", arg: 5, scope: !10899, file: !3, line: 3617, type: !1647)
!10911 = !DILocation(line: 3617, column: 80, scope: !10899)
!10912 = !DILocalVariable(name: "x", arg: 6, scope: !10899, file: !3, line: 3617, type: !1067)
!10913 = !DILocation(line: 3617, column: 89, scope: !10899)
!10914 = !DILocalVariable(name: "y", arg: 7, scope: !10899, file: !3, line: 3617, type: !1067)
!10915 = !DILocation(line: 3617, column: 96, scope: !10899)
!10916 = !DILocalVariable(name: "width", arg: 8, scope: !10899, file: !3, line: 3617, type: !1545)
!10917 = !DILocation(line: 3617, column: 105, scope: !10899)
!10918 = !DILocalVariable(name: "height", arg: 9, scope: !10899, file: !3, line: 3617, type: !1545)
!10919 = !DILocation(line: 3617, column: 118, scope: !10899)
!10920 = !DILocalVariable(name: "poin", arg: 10, scope: !10899, file: !3, line: 3617, type: !1544)
!10921 = !DILocation(line: 3617, column: 133, scope: !10899)
!10922 = !DILocalVariable(name: "min", arg: 11, scope: !10899, file: !3, line: 3617, type: !1534)
!10923 = !DILocation(line: 3617, column: 145, scope: !10899)
!10924 = !DILocalVariable(name: "max", arg: 12, scope: !10899, file: !3, line: 3617, type: !1534)
!10925 = !DILocation(line: 3617, column: 156, scope: !10899)
!10926 = !DILocalVariable(name: "a1", arg: 13, scope: !10899, file: !3, line: 3617, type: !1534)
!10927 = !DILocation(line: 3617, column: 167, scope: !10899)
!10928 = !DILocalVariable(name: "a2", arg: 14, scope: !10899, file: !3, line: 3617, type: !1534)
!10929 = !DILocation(line: 3617, column: 177, scope: !10899)
!10930 = !DILocalVariable(name: "tip", arg: 15, scope: !10899, file: !3, line: 3617, type: !1647)
!10931 = !DILocation(line: 3617, column: 194, scope: !10899)
!10932 = !DILocation(line: 3619, column: 21, scope: !10899)
!10933 = !DILocation(line: 3619, column: 28, scope: !10899)
!10934 = !DILocation(line: 3619, column: 33, scope: !10899)
!10935 = !DILocation(line: 3619, column: 54, scope: !10899)
!10936 = !DILocation(line: 3619, column: 59, scope: !10899)
!10937 = !DILocation(line: 3619, column: 67, scope: !10899)
!10938 = !DILocation(line: 3619, column: 72, scope: !10899)
!10939 = !DILocation(line: 3619, column: 75, scope: !10899)
!10940 = !DILocation(line: 3619, column: 78, scope: !10899)
!10941 = !DILocation(line: 3619, column: 85, scope: !10899)
!10942 = !DILocation(line: 3619, column: 102, scope: !10899)
!10943 = !DILocation(line: 3619, column: 93, scope: !10899)
!10944 = !DILocation(line: 3619, column: 108, scope: !10899)
!10945 = !DILocation(line: 3619, column: 113, scope: !10899)
!10946 = !DILocation(line: 3619, column: 118, scope: !10899)
!10947 = !DILocation(line: 3619, column: 122, scope: !10899)
!10948 = !DILocation(line: 3619, column: 126, scope: !10899)
!10949 = !DILocation(line: 3619, column: 9, scope: !10899)
!10950 = !DILocation(line: 3619, column: 2, scope: !10899)
!10951 = distinct !DISubprogram(name: "uiDefButC", scope: !3, file: !3, line: 3621, type: !10952, scopeLine: 3622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!10952 = !DISubroutineType(types: !10953)
!10953 = !{!1558, !1695, !1067, !1067, !1647, !1067, !1067, !1545, !1545, !1541, !1534, !1534, !1534, !1534, !1647}
!10954 = !DILocalVariable(name: "block", arg: 1, scope: !10951, file: !3, line: 3621, type: !1695)
!10955 = !DILocation(line: 3621, column: 27, scope: !10951)
!10956 = !DILocalVariable(name: "type", arg: 2, scope: !10951, file: !3, line: 3621, type: !1067)
!10957 = !DILocation(line: 3621, column: 38, scope: !10951)
!10958 = !DILocalVariable(name: "retval", arg: 3, scope: !10951, file: !3, line: 3621, type: !1067)
!10959 = !DILocation(line: 3621, column: 48, scope: !10951)
!10960 = !DILocalVariable(name: "str", arg: 4, scope: !10951, file: !3, line: 3621, type: !1647)
!10961 = !DILocation(line: 3621, column: 68, scope: !10951)
!10962 = !DILocalVariable(name: "x", arg: 5, scope: !10951, file: !3, line: 3621, type: !1067)
!10963 = !DILocation(line: 3621, column: 77, scope: !10951)
!10964 = !DILocalVariable(name: "y", arg: 6, scope: !10951, file: !3, line: 3621, type: !1067)
!10965 = !DILocation(line: 3621, column: 84, scope: !10951)
!10966 = !DILocalVariable(name: "width", arg: 7, scope: !10951, file: !3, line: 3621, type: !1545)
!10967 = !DILocation(line: 3621, column: 93, scope: !10951)
!10968 = !DILocalVariable(name: "height", arg: 8, scope: !10951, file: !3, line: 3621, type: !1545)
!10969 = !DILocation(line: 3621, column: 106, scope: !10951)
!10970 = !DILocalVariable(name: "poin", arg: 9, scope: !10951, file: !3, line: 3621, type: !1541)
!10971 = !DILocation(line: 3621, column: 120, scope: !10951)
!10972 = !DILocalVariable(name: "min", arg: 10, scope: !10951, file: !3, line: 3621, type: !1534)
!10973 = !DILocation(line: 3621, column: 132, scope: !10951)
!10974 = !DILocalVariable(name: "max", arg: 11, scope: !10951, file: !3, line: 3621, type: !1534)
!10975 = !DILocation(line: 3621, column: 143, scope: !10951)
!10976 = !DILocalVariable(name: "a1", arg: 12, scope: !10951, file: !3, line: 3621, type: !1534)
!10977 = !DILocation(line: 3621, column: 154, scope: !10951)
!10978 = !DILocalVariable(name: "a2", arg: 13, scope: !10951, file: !3, line: 3621, type: !1534)
!10979 = !DILocation(line: 3621, column: 164, scope: !10951)
!10980 = !DILocalVariable(name: "tip", arg: 14, scope: !10951, file: !3, line: 3621, type: !1647)
!10981 = !DILocation(line: 3621, column: 181, scope: !10951)
!10982 = !DILocation(line: 3623, column: 18, scope: !10951)
!10983 = !DILocation(line: 3623, column: 25, scope: !10951)
!10984 = !DILocation(line: 3623, column: 30, scope: !10951)
!10985 = !DILocation(line: 3623, column: 50, scope: !10951)
!10986 = !DILocation(line: 3623, column: 58, scope: !10951)
!10987 = !DILocation(line: 3623, column: 63, scope: !10951)
!10988 = !DILocation(line: 3623, column: 66, scope: !10951)
!10989 = !DILocation(line: 3623, column: 69, scope: !10951)
!10990 = !DILocation(line: 3623, column: 76, scope: !10951)
!10991 = !DILocation(line: 3623, column: 93, scope: !10951)
!10992 = !DILocation(line: 3623, column: 99, scope: !10951)
!10993 = !DILocation(line: 3623, column: 104, scope: !10951)
!10994 = !DILocation(line: 3623, column: 109, scope: !10951)
!10995 = !DILocation(line: 3623, column: 113, scope: !10951)
!10996 = !DILocation(line: 3623, column: 117, scope: !10951)
!10997 = !DILocation(line: 3623, column: 9, scope: !10951)
!10998 = !DILocation(line: 3623, column: 2, scope: !10951)
!10999 = distinct !DISubprogram(name: "uiDefButBitC", scope: !3, file: !3, line: 3625, type: !11000, scopeLine: 3626, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!11000 = !DISubroutineType(types: !11001)
!11001 = !{!1558, !1695, !1067, !1067, !1067, !1647, !1067, !1067, !1545, !1545, !1541, !1534, !1534, !1534, !1534, !1647}
!11002 = !DILocalVariable(name: "block", arg: 1, scope: !10999, file: !3, line: 3625, type: !1695)
!11003 = !DILocation(line: 3625, column: 30, scope: !10999)
!11004 = !DILocalVariable(name: "type", arg: 2, scope: !10999, file: !3, line: 3625, type: !1067)
!11005 = !DILocation(line: 3625, column: 41, scope: !10999)
!11006 = !DILocalVariable(name: "bit", arg: 3, scope: !10999, file: !3, line: 3625, type: !1067)
!11007 = !DILocation(line: 3625, column: 51, scope: !10999)
!11008 = !DILocalVariable(name: "retval", arg: 4, scope: !10999, file: !3, line: 3625, type: !1067)
!11009 = !DILocation(line: 3625, column: 60, scope: !10999)
!11010 = !DILocalVariable(name: "str", arg: 5, scope: !10999, file: !3, line: 3625, type: !1647)
!11011 = !DILocation(line: 3625, column: 80, scope: !10999)
!11012 = !DILocalVariable(name: "x", arg: 6, scope: !10999, file: !3, line: 3625, type: !1067)
!11013 = !DILocation(line: 3625, column: 89, scope: !10999)
!11014 = !DILocalVariable(name: "y", arg: 7, scope: !10999, file: !3, line: 3625, type: !1067)
!11015 = !DILocation(line: 3625, column: 96, scope: !10999)
!11016 = !DILocalVariable(name: "width", arg: 8, scope: !10999, file: !3, line: 3625, type: !1545)
!11017 = !DILocation(line: 3625, column: 105, scope: !10999)
!11018 = !DILocalVariable(name: "height", arg: 9, scope: !10999, file: !3, line: 3625, type: !1545)
!11019 = !DILocation(line: 3625, column: 118, scope: !10999)
!11020 = !DILocalVariable(name: "poin", arg: 10, scope: !10999, file: !3, line: 3625, type: !1541)
!11021 = !DILocation(line: 3625, column: 132, scope: !10999)
!11022 = !DILocalVariable(name: "min", arg: 11, scope: !10999, file: !3, line: 3625, type: !1534)
!11023 = !DILocation(line: 3625, column: 144, scope: !10999)
!11024 = !DILocalVariable(name: "max", arg: 12, scope: !10999, file: !3, line: 3625, type: !1534)
!11025 = !DILocation(line: 3625, column: 155, scope: !10999)
!11026 = !DILocalVariable(name: "a1", arg: 13, scope: !10999, file: !3, line: 3625, type: !1534)
!11027 = !DILocation(line: 3625, column: 166, scope: !10999)
!11028 = !DILocalVariable(name: "a2", arg: 14, scope: !10999, file: !3, line: 3625, type: !1534)
!11029 = !DILocation(line: 3625, column: 176, scope: !10999)
!11030 = !DILocalVariable(name: "tip", arg: 15, scope: !10999, file: !3, line: 3625, type: !1647)
!11031 = !DILocation(line: 3625, column: 193, scope: !10999)
!11032 = !DILocation(line: 3627, column: 21, scope: !10999)
!11033 = !DILocation(line: 3627, column: 28, scope: !10999)
!11034 = !DILocation(line: 3627, column: 33, scope: !10999)
!11035 = !DILocation(line: 3627, column: 53, scope: !10999)
!11036 = !DILocation(line: 3627, column: 58, scope: !10999)
!11037 = !DILocation(line: 3627, column: 66, scope: !10999)
!11038 = !DILocation(line: 3627, column: 71, scope: !10999)
!11039 = !DILocation(line: 3627, column: 74, scope: !10999)
!11040 = !DILocation(line: 3627, column: 77, scope: !10999)
!11041 = !DILocation(line: 3627, column: 84, scope: !10999)
!11042 = !DILocation(line: 3627, column: 101, scope: !10999)
!11043 = !DILocation(line: 3627, column: 107, scope: !10999)
!11044 = !DILocation(line: 3627, column: 112, scope: !10999)
!11045 = !DILocation(line: 3627, column: 117, scope: !10999)
!11046 = !DILocation(line: 3627, column: 121, scope: !10999)
!11047 = !DILocation(line: 3627, column: 125, scope: !10999)
!11048 = !DILocation(line: 3627, column: 9, scope: !10999)
!11049 = !DILocation(line: 3627, column: 2, scope: !10999)
!11050 = distinct !DISubprogram(name: "uiDefButR", scope: !3, file: !3, line: 3629, type: !11051, scopeLine: 3630, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!11051 = !DISubroutineType(types: !11052)
!11052 = !{!1558, !1695, !1067, !1067, !1647, !1067, !1067, !1545, !1545, !8894, !1647, !1067, !1534, !1534, !1534, !1534, !1647}
!11053 = !DILocalVariable(name: "block", arg: 1, scope: !11050, file: !3, line: 3629, type: !1695)
!11054 = !DILocation(line: 3629, column: 27, scope: !11050)
!11055 = !DILocalVariable(name: "type", arg: 2, scope: !11050, file: !3, line: 3629, type: !1067)
!11056 = !DILocation(line: 3629, column: 38, scope: !11050)
!11057 = !DILocalVariable(name: "retval", arg: 3, scope: !11050, file: !3, line: 3629, type: !1067)
!11058 = !DILocation(line: 3629, column: 48, scope: !11050)
!11059 = !DILocalVariable(name: "str", arg: 4, scope: !11050, file: !3, line: 3629, type: !1647)
!11060 = !DILocation(line: 3629, column: 68, scope: !11050)
!11061 = !DILocalVariable(name: "x", arg: 5, scope: !11050, file: !3, line: 3629, type: !1067)
!11062 = !DILocation(line: 3629, column: 77, scope: !11050)
!11063 = !DILocalVariable(name: "y", arg: 6, scope: !11050, file: !3, line: 3629, type: !1067)
!11064 = !DILocation(line: 3629, column: 84, scope: !11050)
!11065 = !DILocalVariable(name: "width", arg: 7, scope: !11050, file: !3, line: 3629, type: !1545)
!11066 = !DILocation(line: 3629, column: 93, scope: !11050)
!11067 = !DILocalVariable(name: "height", arg: 8, scope: !11050, file: !3, line: 3629, type: !1545)
!11068 = !DILocation(line: 3629, column: 106, scope: !11050)
!11069 = !DILocalVariable(name: "ptr", arg: 9, scope: !11050, file: !3, line: 3629, type: !8894)
!11070 = !DILocation(line: 3629, column: 126, scope: !11050)
!11071 = !DILocalVariable(name: "propname", arg: 10, scope: !11050, file: !3, line: 3629, type: !1647)
!11072 = !DILocation(line: 3629, column: 143, scope: !11050)
!11073 = !DILocalVariable(name: "index", arg: 11, scope: !11050, file: !3, line: 3629, type: !1067)
!11074 = !DILocation(line: 3629, column: 157, scope: !11050)
!11075 = !DILocalVariable(name: "min", arg: 12, scope: !11050, file: !3, line: 3629, type: !1534)
!11076 = !DILocation(line: 3629, column: 170, scope: !11050)
!11077 = !DILocalVariable(name: "max", arg: 13, scope: !11050, file: !3, line: 3629, type: !1534)
!11078 = !DILocation(line: 3629, column: 181, scope: !11050)
!11079 = !DILocalVariable(name: "a1", arg: 14, scope: !11050, file: !3, line: 3629, type: !1534)
!11080 = !DILocation(line: 3629, column: 192, scope: !11050)
!11081 = !DILocalVariable(name: "a2", arg: 15, scope: !11050, file: !3, line: 3629, type: !1534)
!11082 = !DILocation(line: 3629, column: 202, scope: !11050)
!11083 = !DILocalVariable(name: "tip", arg: 16, scope: !11050, file: !3, line: 3629, type: !1647)
!11084 = !DILocation(line: 3629, column: 219, scope: !11050)
!11085 = !DILocalVariable(name: "but", scope: !11050, file: !3, line: 3631, type: !1558)
!11086 = !DILocation(line: 3631, column: 9, scope: !11050)
!11087 = !DILocation(line: 3632, column: 32, scope: !11050)
!11088 = !DILocation(line: 3632, column: 39, scope: !11050)
!11089 = !DILocation(line: 3632, column: 45, scope: !11050)
!11090 = !DILocation(line: 3632, column: 53, scope: !11050)
!11091 = !DILocation(line: 3632, column: 58, scope: !11050)
!11092 = !DILocation(line: 3632, column: 61, scope: !11050)
!11093 = !DILocation(line: 3632, column: 64, scope: !11050)
!11094 = !DILocation(line: 3632, column: 71, scope: !11050)
!11095 = !DILocation(line: 3632, column: 79, scope: !11050)
!11096 = !DILocation(line: 3632, column: 84, scope: !11050)
!11097 = !DILocation(line: 3632, column: 94, scope: !11050)
!11098 = !DILocation(line: 3632, column: 101, scope: !11050)
!11099 = !DILocation(line: 3632, column: 106, scope: !11050)
!11100 = !DILocation(line: 3632, column: 111, scope: !11050)
!11101 = !DILocation(line: 3632, column: 115, scope: !11050)
!11102 = !DILocation(line: 3632, column: 119, scope: !11050)
!11103 = !DILocation(line: 3632, column: 8, scope: !11050)
!11104 = !DILocation(line: 3632, column: 6, scope: !11050)
!11105 = !DILocation(line: 3633, column: 15, scope: !11050)
!11106 = !DILocation(line: 3633, column: 2, scope: !11050)
!11107 = !DILocation(line: 3634, column: 9, scope: !11050)
!11108 = !DILocation(line: 3634, column: 2, scope: !11050)
!11109 = distinct !DISubprogram(name: "ui_def_but_rna_propname", scope: !3, file: !3, line: 3421, type: !11051, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!11110 = !DILocalVariable(name: "block", arg: 1, scope: !11109, file: !3, line: 3421, type: !1695)
!11111 = !DILocation(line: 3421, column: 48, scope: !11109)
!11112 = !DILocalVariable(name: "type", arg: 2, scope: !11109, file: !3, line: 3421, type: !1067)
!11113 = !DILocation(line: 3421, column: 59, scope: !11109)
!11114 = !DILocalVariable(name: "retval", arg: 3, scope: !11109, file: !3, line: 3421, type: !1067)
!11115 = !DILocation(line: 3421, column: 69, scope: !11109)
!11116 = !DILocalVariable(name: "str", arg: 4, scope: !11109, file: !3, line: 3421, type: !1647)
!11117 = !DILocation(line: 3421, column: 89, scope: !11109)
!11118 = !DILocalVariable(name: "x", arg: 5, scope: !11109, file: !3, line: 3421, type: !1067)
!11119 = !DILocation(line: 3421, column: 98, scope: !11109)
!11120 = !DILocalVariable(name: "y", arg: 6, scope: !11109, file: !3, line: 3421, type: !1067)
!11121 = !DILocation(line: 3421, column: 105, scope: !11109)
!11122 = !DILocalVariable(name: "width", arg: 7, scope: !11109, file: !3, line: 3421, type: !1545)
!11123 = !DILocation(line: 3421, column: 114, scope: !11109)
!11124 = !DILocalVariable(name: "height", arg: 8, scope: !11109, file: !3, line: 3421, type: !1545)
!11125 = !DILocation(line: 3421, column: 127, scope: !11109)
!11126 = !DILocalVariable(name: "ptr", arg: 9, scope: !11109, file: !3, line: 3421, type: !8894)
!11127 = !DILocation(line: 3421, column: 147, scope: !11109)
!11128 = !DILocalVariable(name: "propname", arg: 10, scope: !11109, file: !3, line: 3421, type: !1647)
!11129 = !DILocation(line: 3421, column: 164, scope: !11109)
!11130 = !DILocalVariable(name: "index", arg: 11, scope: !11109, file: !3, line: 3421, type: !1067)
!11131 = !DILocation(line: 3421, column: 178, scope: !11109)
!11132 = !DILocalVariable(name: "min", arg: 12, scope: !11109, file: !3, line: 3421, type: !1534)
!11133 = !DILocation(line: 3421, column: 191, scope: !11109)
!11134 = !DILocalVariable(name: "max", arg: 13, scope: !11109, file: !3, line: 3421, type: !1534)
!11135 = !DILocation(line: 3421, column: 202, scope: !11109)
!11136 = !DILocalVariable(name: "a1", arg: 14, scope: !11109, file: !3, line: 3421, type: !1534)
!11137 = !DILocation(line: 3421, column: 213, scope: !11109)
!11138 = !DILocalVariable(name: "a2", arg: 15, scope: !11109, file: !3, line: 3421, type: !1534)
!11139 = !DILocation(line: 3421, column: 223, scope: !11109)
!11140 = !DILocalVariable(name: "tip", arg: 16, scope: !11109, file: !3, line: 3421, type: !1647)
!11141 = !DILocation(line: 3421, column: 240, scope: !11109)
!11142 = !DILocalVariable(name: "prop", scope: !11109, file: !3, line: 3423, type: !3171)
!11143 = !DILocation(line: 3423, column: 15, scope: !11109)
!11144 = !DILocation(line: 3423, column: 47, scope: !11109)
!11145 = !DILocation(line: 3423, column: 52, scope: !11109)
!11146 = !DILocation(line: 3423, column: 22, scope: !11109)
!11147 = !DILocalVariable(name: "but", scope: !11109, file: !3, line: 3424, type: !1558)
!11148 = !DILocation(line: 3424, column: 9, scope: !11109)
!11149 = !DILocation(line: 3426, column: 6, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11109, file: !3, line: 3426, column: 6)
!11151 = !DILocation(line: 3426, column: 6, scope: !11109)
!11152 = !DILocation(line: 3427, column: 24, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11150, file: !3, line: 3426, column: 12)
!11154 = !DILocation(line: 3427, column: 31, scope: !11153)
!11155 = !DILocation(line: 3427, column: 37, scope: !11153)
!11156 = !DILocation(line: 3427, column: 45, scope: !11153)
!11157 = !DILocation(line: 3427, column: 50, scope: !11153)
!11158 = !DILocation(line: 3427, column: 53, scope: !11153)
!11159 = !DILocation(line: 3427, column: 56, scope: !11153)
!11160 = !DILocation(line: 3427, column: 63, scope: !11153)
!11161 = !DILocation(line: 3427, column: 71, scope: !11153)
!11162 = !DILocation(line: 3427, column: 76, scope: !11153)
!11163 = !DILocation(line: 3427, column: 82, scope: !11153)
!11164 = !DILocation(line: 3427, column: 89, scope: !11153)
!11165 = !DILocation(line: 3427, column: 94, scope: !11153)
!11166 = !DILocation(line: 3427, column: 99, scope: !11153)
!11167 = !DILocation(line: 3427, column: 103, scope: !11153)
!11168 = !DILocation(line: 3427, column: 108, scope: !11153)
!11169 = !DILocation(line: 3427, column: 9, scope: !11153)
!11170 = !DILocation(line: 3427, column: 7, scope: !11153)
!11171 = !DILocation(line: 3428, column: 2, scope: !11153)
!11172 = !DILocation(line: 3430, column: 20, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11150, file: !3, line: 3429, column: 7)
!11174 = !DILocation(line: 3430, column: 27, scope: !11173)
!11175 = !DILocation(line: 3430, column: 33, scope: !11173)
!11176 = !DILocation(line: 3430, column: 41, scope: !11173)
!11177 = !DILocation(line: 3430, column: 51, scope: !11173)
!11178 = !DILocation(line: 3430, column: 54, scope: !11173)
!11179 = !DILocation(line: 3430, column: 57, scope: !11173)
!11180 = !DILocation(line: 3430, column: 64, scope: !11173)
!11181 = !DILocation(line: 3430, column: 78, scope: !11173)
!11182 = !DILocation(line: 3430, column: 83, scope: !11173)
!11183 = !DILocation(line: 3430, column: 88, scope: !11173)
!11184 = !DILocation(line: 3430, column: 92, scope: !11173)
!11185 = !DILocation(line: 3430, column: 96, scope: !11173)
!11186 = !DILocation(line: 3430, column: 9, scope: !11173)
!11187 = !DILocation(line: 3430, column: 7, scope: !11173)
!11188 = !DILocation(line: 3432, column: 27, scope: !11173)
!11189 = !DILocation(line: 3432, column: 3, scope: !11173)
!11190 = !DILocation(line: 3435, column: 9, scope: !11109)
!11191 = !DILocation(line: 3435, column: 2, scope: !11109)
!11192 = distinct !DISubprogram(name: "uiDefButR_prop", scope: !3, file: !3, line: 3636, type: !11193, scopeLine: 3637, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!11193 = !DISubroutineType(types: !11194)
!11194 = !{!1558, !1695, !1067, !1067, !1647, !1067, !1067, !1545, !1545, !8894, !3171, !1067, !1534, !1534, !1534, !1534, !1647}
!11195 = !DILocalVariable(name: "block", arg: 1, scope: !11192, file: !3, line: 3636, type: !1695)
!11196 = !DILocation(line: 3636, column: 32, scope: !11192)
!11197 = !DILocalVariable(name: "type", arg: 2, scope: !11192, file: !3, line: 3636, type: !1067)
!11198 = !DILocation(line: 3636, column: 43, scope: !11192)
!11199 = !DILocalVariable(name: "retval", arg: 3, scope: !11192, file: !3, line: 3636, type: !1067)
!11200 = !DILocation(line: 3636, column: 53, scope: !11192)
!11201 = !DILocalVariable(name: "str", arg: 4, scope: !11192, file: !3, line: 3636, type: !1647)
!11202 = !DILocation(line: 3636, column: 73, scope: !11192)
!11203 = !DILocalVariable(name: "x", arg: 5, scope: !11192, file: !3, line: 3636, type: !1067)
!11204 = !DILocation(line: 3636, column: 82, scope: !11192)
!11205 = !DILocalVariable(name: "y", arg: 6, scope: !11192, file: !3, line: 3636, type: !1067)
!11206 = !DILocation(line: 3636, column: 89, scope: !11192)
!11207 = !DILocalVariable(name: "width", arg: 7, scope: !11192, file: !3, line: 3636, type: !1545)
!11208 = !DILocation(line: 3636, column: 98, scope: !11192)
!11209 = !DILocalVariable(name: "height", arg: 8, scope: !11192, file: !3, line: 3636, type: !1545)
!11210 = !DILocation(line: 3636, column: 111, scope: !11192)
!11211 = !DILocalVariable(name: "ptr", arg: 9, scope: !11192, file: !3, line: 3636, type: !8894)
!11212 = !DILocation(line: 3636, column: 131, scope: !11192)
!11213 = !DILocalVariable(name: "prop", arg: 10, scope: !11192, file: !3, line: 3636, type: !3171)
!11214 = !DILocation(line: 3636, column: 149, scope: !11192)
!11215 = !DILocalVariable(name: "index", arg: 11, scope: !11192, file: !3, line: 3636, type: !1067)
!11216 = !DILocation(line: 3636, column: 159, scope: !11192)
!11217 = !DILocalVariable(name: "min", arg: 12, scope: !11192, file: !3, line: 3636, type: !1534)
!11218 = !DILocation(line: 3636, column: 172, scope: !11192)
!11219 = !DILocalVariable(name: "max", arg: 13, scope: !11192, file: !3, line: 3636, type: !1534)
!11220 = !DILocation(line: 3636, column: 183, scope: !11192)
!11221 = !DILocalVariable(name: "a1", arg: 14, scope: !11192, file: !3, line: 3636, type: !1534)
!11222 = !DILocation(line: 3636, column: 194, scope: !11192)
!11223 = !DILocalVariable(name: "a2", arg: 15, scope: !11192, file: !3, line: 3636, type: !1534)
!11224 = !DILocation(line: 3636, column: 204, scope: !11192)
!11225 = !DILocalVariable(name: "tip", arg: 16, scope: !11192, file: !3, line: 3636, type: !1647)
!11226 = !DILocation(line: 3636, column: 221, scope: !11192)
!11227 = !DILocalVariable(name: "but", scope: !11192, file: !3, line: 3638, type: !1558)
!11228 = !DILocation(line: 3638, column: 9, scope: !11192)
!11229 = !DILocation(line: 3639, column: 23, scope: !11192)
!11230 = !DILocation(line: 3639, column: 30, scope: !11192)
!11231 = !DILocation(line: 3639, column: 36, scope: !11192)
!11232 = !DILocation(line: 3639, column: 44, scope: !11192)
!11233 = !DILocation(line: 3639, column: 49, scope: !11192)
!11234 = !DILocation(line: 3639, column: 52, scope: !11192)
!11235 = !DILocation(line: 3639, column: 55, scope: !11192)
!11236 = !DILocation(line: 3639, column: 62, scope: !11192)
!11237 = !DILocation(line: 3639, column: 70, scope: !11192)
!11238 = !DILocation(line: 3639, column: 75, scope: !11192)
!11239 = !DILocation(line: 3639, column: 81, scope: !11192)
!11240 = !DILocation(line: 3639, column: 88, scope: !11192)
!11241 = !DILocation(line: 3639, column: 93, scope: !11192)
!11242 = !DILocation(line: 3639, column: 98, scope: !11192)
!11243 = !DILocation(line: 3639, column: 102, scope: !11192)
!11244 = !DILocation(line: 3639, column: 106, scope: !11192)
!11245 = !DILocation(line: 3639, column: 8, scope: !11192)
!11246 = !DILocation(line: 3639, column: 6, scope: !11192)
!11247 = !DILocation(line: 3640, column: 15, scope: !11192)
!11248 = !DILocation(line: 3640, column: 2, scope: !11192)
!11249 = !DILocation(line: 3641, column: 9, scope: !11192)
!11250 = !DILocation(line: 3641, column: 2, scope: !11192)
!11251 = distinct !DISubprogram(name: "ui_def_but_rna", scope: !3, file: !3, line: 3266, type: !11193, scopeLine: 3270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!11252 = !DILocalVariable(name: "block", arg: 1, scope: !11251, file: !3, line: 3266, type: !1695)
!11253 = !DILocation(line: 3266, column: 39, scope: !11251)
!11254 = !DILocalVariable(name: "type", arg: 2, scope: !11251, file: !3, line: 3266, type: !1067)
!11255 = !DILocation(line: 3266, column: 50, scope: !11251)
!11256 = !DILocalVariable(name: "retval", arg: 3, scope: !11251, file: !3, line: 3266, type: !1067)
!11257 = !DILocation(line: 3266, column: 60, scope: !11251)
!11258 = !DILocalVariable(name: "str", arg: 4, scope: !11251, file: !3, line: 3266, type: !1647)
!11259 = !DILocation(line: 3266, column: 80, scope: !11251)
!11260 = !DILocalVariable(name: "x", arg: 5, scope: !11251, file: !3, line: 3267, type: !1067)
!11261 = !DILocation(line: 3267, column: 34, scope: !11251)
!11262 = !DILocalVariable(name: "y", arg: 6, scope: !11251, file: !3, line: 3267, type: !1067)
!11263 = !DILocation(line: 3267, column: 41, scope: !11251)
!11264 = !DILocalVariable(name: "width", arg: 7, scope: !11251, file: !3, line: 3267, type: !1545)
!11265 = !DILocation(line: 3267, column: 50, scope: !11251)
!11266 = !DILocalVariable(name: "height", arg: 8, scope: !11251, file: !3, line: 3267, type: !1545)
!11267 = !DILocation(line: 3267, column: 63, scope: !11251)
!11268 = !DILocalVariable(name: "ptr", arg: 9, scope: !11251, file: !3, line: 3268, type: !8894)
!11269 = !DILocation(line: 3268, column: 42, scope: !11251)
!11270 = !DILocalVariable(name: "prop", arg: 10, scope: !11251, file: !3, line: 3268, type: !3171)
!11271 = !DILocation(line: 3268, column: 60, scope: !11251)
!11272 = !DILocalVariable(name: "index", arg: 11, scope: !11251, file: !3, line: 3268, type: !1067)
!11273 = !DILocation(line: 3268, column: 70, scope: !11251)
!11274 = !DILocalVariable(name: "min", arg: 12, scope: !11251, file: !3, line: 3269, type: !1534)
!11275 = !DILocation(line: 3269, column: 36, scope: !11251)
!11276 = !DILocalVariable(name: "max", arg: 13, scope: !11251, file: !3, line: 3269, type: !1534)
!11277 = !DILocation(line: 3269, column: 47, scope: !11251)
!11278 = !DILocalVariable(name: "a1", arg: 14, scope: !11251, file: !3, line: 3269, type: !1534)
!11279 = !DILocation(line: 3269, column: 58, scope: !11251)
!11280 = !DILocalVariable(name: "a2", arg: 15, scope: !11251, file: !3, line: 3269, type: !1534)
!11281 = !DILocation(line: 3269, column: 68, scope: !11251)
!11282 = !DILocalVariable(name: "tip", arg: 16, scope: !11251, file: !3, line: 3269, type: !1647)
!11283 = !DILocation(line: 3269, column: 85, scope: !11251)
!11284 = !DILocalVariable(name: "proptype", scope: !11251, file: !3, line: 3271, type: !9244)
!11285 = !DILocation(line: 3271, column: 21, scope: !11251)
!11286 = !DILocation(line: 3271, column: 50, scope: !11251)
!11287 = !DILocation(line: 3271, column: 32, scope: !11251)
!11288 = !DILocalVariable(name: "but", scope: !11251, file: !3, line: 3272, type: !1558)
!11289 = !DILocation(line: 3272, column: 9, scope: !11251)
!11290 = !DILocalVariable(name: "icon", scope: !11251, file: !3, line: 3273, type: !1067)
!11291 = !DILocation(line: 3273, column: 6, scope: !11251)
!11292 = !DILocalVariable(name: "func", scope: !11251, file: !3, line: 3274, type: !3228)
!11293 = !DILocation(line: 3274, column: 19, scope: !11251)
!11294 = !DILocation(line: 3276, column: 6, scope: !11295)
!11295 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 3276, column: 6)
!11296 = !DILocation(line: 3276, column: 6, scope: !11251)
!11297 = !DILocation(line: 3278, column: 2, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11295, file: !3, line: 3276, column: 45)
!11299 = !DILocation(line: 3281, column: 7, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 3281, column: 6)
!11301 = !DILocation(line: 3281, column: 16, scope: !11300)
!11302 = !DILocation(line: 3281, column: 30, scope: !11300)
!11303 = !DILocation(line: 3281, column: 33, scope: !11300)
!11304 = !DILocation(line: 3281, column: 6, scope: !11251)
!11305 = !DILocalVariable(name: "item", scope: !11306, file: !3, line: 3283, type: !11307)
!11306 = distinct !DILexicalBlock(scope: !11300, file: !3, line: 3281, column: 65)
!11307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11308, size: 64)
!11308 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyItem", file: !965, line: 308, baseType: !11309)
!11309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyItem", file: !965, line: 302, size: 320, elements: !11310)
!11310 = !{!11311, !11312, !11313, !11314, !11315}
!11311 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !11309, file: !965, line: 303, baseType: !1067, size: 32)
!11312 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !11309, file: !965, line: 304, baseType: !1647, size: 64, offset: 64)
!11313 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !11309, file: !965, line: 305, baseType: !1067, size: 32, offset: 128)
!11314 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11309, file: !965, line: 306, baseType: !1647, size: 64, offset: 192)
!11315 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !11309, file: !965, line: 307, baseType: !1647, size: 64, offset: 256)
!11316 = !DILocation(line: 3283, column: 21, scope: !11306)
!11317 = !DILocalVariable(name: "value", scope: !11306, file: !3, line: 3284, type: !1067)
!11318 = !DILocation(line: 3284, column: 7, scope: !11306)
!11319 = !DILocalVariable(name: "free", scope: !11306, file: !3, line: 3285, type: !1550)
!11320 = !DILocation(line: 3285, column: 8, scope: !11306)
!11321 = !DILocalVariable(name: "i", scope: !11306, file: !3, line: 3286, type: !1067)
!11322 = !DILocation(line: 3286, column: 7, scope: !11306)
!11323 = !DILocation(line: 3288, column: 27, scope: !11306)
!11324 = !DILocation(line: 3288, column: 34, scope: !11306)
!11325 = !DILocation(line: 3288, column: 42, scope: !11306)
!11326 = !DILocation(line: 3288, column: 47, scope: !11306)
!11327 = !DILocation(line: 3288, column: 3, scope: !11306)
!11328 = !DILocation(line: 3290, column: 7, scope: !11329)
!11329 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 3290, column: 7)
!11330 = !DILocation(line: 3290, column: 12, scope: !11329)
!11331 = !DILocation(line: 3290, column: 7, scope: !11306)
!11332 = !DILocation(line: 3291, column: 34, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11329, file: !3, line: 3290, column: 21)
!11334 = !DILocation(line: 3291, column: 39, scope: !11333)
!11335 = !DILocation(line: 3291, column: 12, scope: !11333)
!11336 = !DILocation(line: 3291, column: 10, scope: !11333)
!11337 = !DILocation(line: 3292, column: 3, scope: !11333)
!11338 = !DILocation(line: 3294, column: 17, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11329, file: !3, line: 3293, column: 8)
!11340 = !DILocation(line: 3294, column: 12, scope: !11339)
!11341 = !DILocation(line: 3294, column: 10, scope: !11339)
!11342 = !DILocation(line: 3297, column: 27, scope: !11306)
!11343 = !DILocation(line: 3297, column: 33, scope: !11306)
!11344 = !DILocation(line: 3297, column: 7, scope: !11306)
!11345 = !DILocation(line: 3297, column: 5, scope: !11306)
!11346 = !DILocation(line: 3298, column: 7, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 3298, column: 7)
!11348 = !DILocation(line: 3298, column: 9, scope: !11347)
!11349 = !DILocation(line: 3298, column: 7, scope: !11306)
!11350 = !DILocation(line: 3300, column: 9, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11352, file: !3, line: 3300, column: 8)
!11352 = distinct !DILexicalBlock(scope: !11347, file: !3, line: 3298, column: 16)
!11353 = !DILocation(line: 3300, column: 8, scope: !11352)
!11354 = !DILocation(line: 3301, column: 11, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11351, file: !3, line: 3300, column: 14)
!11356 = !DILocation(line: 3301, column: 16, scope: !11355)
!11357 = !DILocation(line: 3301, column: 19, scope: !11355)
!11358 = !DILocation(line: 3301, column: 9, scope: !11355)
!11359 = !DILocation(line: 3305, column: 4, scope: !11355)
!11360 = !DILocation(line: 3307, column: 11, scope: !11352)
!11361 = !DILocation(line: 3307, column: 16, scope: !11352)
!11362 = !DILocation(line: 3307, column: 19, scope: !11352)
!11363 = !DILocation(line: 3307, column: 9, scope: !11352)
!11364 = !DILocation(line: 3308, column: 3, scope: !11352)
!11365 = !DILocation(line: 3310, column: 9, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11367, file: !3, line: 3310, column: 8)
!11367 = distinct !DILexicalBlock(scope: !11347, file: !3, line: 3309, column: 8)
!11368 = !DILocation(line: 3310, column: 8, scope: !11367)
!11369 = !DILocation(line: 3311, column: 9, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11371, file: !3, line: 3311, column: 9)
!11371 = distinct !DILexicalBlock(scope: !11366, file: !3, line: 3310, column: 14)
!11372 = !DILocation(line: 3311, column: 14, scope: !11370)
!11373 = !DILocation(line: 3311, column: 9, scope: !11371)
!11374 = !DILocation(line: 3312, column: 10, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11370, file: !3, line: 3311, column: 23)
!11376 = !DILocation(line: 3313, column: 5, scope: !11375)
!11377 = !DILocation(line: 3315, column: 33, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !11370, file: !3, line: 3314, column: 10)
!11379 = !DILocation(line: 3315, column: 12, scope: !11378)
!11380 = !DILocation(line: 3315, column: 10, scope: !11378)
!11381 = !DILocation(line: 3317, column: 4, scope: !11371)
!11382 = !DILocation(line: 3320, column: 7, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 3320, column: 7)
!11384 = !DILocation(line: 3320, column: 12, scope: !11383)
!11385 = !DILocation(line: 3320, column: 7, scope: !11306)
!11386 = !DILocation(line: 3321, column: 9, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11383, file: !3, line: 3320, column: 21)
!11388 = !DILocation(line: 3322, column: 3, scope: !11387)
!11389 = !DILocation(line: 3324, column: 7, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11306, file: !3, line: 3324, column: 7)
!11391 = !DILocation(line: 3324, column: 7, scope: !11306)
!11392 = !DILocation(line: 3325, column: 4, scope: !11393)
!11393 = distinct !DILexicalBlock(scope: !11390, file: !3, line: 3324, column: 13)
!11394 = !DILocation(line: 3325, column: 14, scope: !11393)
!11395 = !DILocation(line: 3326, column: 3, scope: !11393)
!11396 = !DILocation(line: 3327, column: 2, scope: !11306)
!11397 = !DILocation(line: 3329, column: 8, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11399, file: !3, line: 3329, column: 7)
!11399 = distinct !DILexicalBlock(scope: !11300, file: !3, line: 3328, column: 7)
!11400 = !DILocation(line: 3329, column: 7, scope: !11399)
!11401 = !DILocation(line: 3330, column: 31, scope: !11402)
!11402 = distinct !DILexicalBlock(scope: !11398, file: !3, line: 3329, column: 13)
!11403 = !DILocation(line: 3330, column: 10, scope: !11402)
!11404 = !DILocation(line: 3330, column: 8, scope: !11402)
!11405 = !DILocation(line: 3331, column: 3, scope: !11402)
!11406 = !DILocation(line: 3332, column: 31, scope: !11399)
!11407 = !DILocation(line: 3332, column: 10, scope: !11399)
!11408 = !DILocation(line: 3332, column: 8, scope: !11399)
!11409 = !DILocation(line: 3335, column: 7, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 3335, column: 6)
!11411 = !DILocation(line: 3335, column: 11, scope: !11410)
!11412 = !DILocation(line: 3335, column: 14, scope: !11410)
!11413 = !DILocation(line: 3335, column: 23, scope: !11410)
!11414 = !DILocation(line: 3335, column: 6, scope: !11251)
!11415 = !DILocation(line: 3336, column: 37, scope: !11410)
!11416 = !DILocation(line: 3336, column: 9, scope: !11410)
!11417 = !DILocation(line: 3336, column: 7, scope: !11410)
!11418 = !DILocation(line: 3336, column: 3, scope: !11410)
!11419 = !DILocation(line: 3338, column: 6, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 3338, column: 6)
!11421 = !DILocation(line: 3338, column: 13, scope: !11420)
!11422 = !DILocation(line: 3338, column: 10, scope: !11420)
!11423 = !DILocation(line: 3338, column: 17, scope: !11420)
!11424 = !DILocation(line: 3338, column: 20, scope: !11420)
!11425 = !DILocation(line: 3338, column: 23, scope: !11420)
!11426 = !DILocation(line: 3338, column: 29, scope: !11420)
!11427 = !DILocation(line: 3338, column: 32, scope: !11420)
!11428 = !DILocation(line: 3338, column: 35, scope: !11420)
!11429 = !DILocation(line: 3338, column: 6, scope: !11251)
!11430 = !DILocation(line: 3339, column: 7, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11432, file: !3, line: 3339, column: 7)
!11432 = distinct !DILexicalBlock(scope: !11420, file: !3, line: 3338, column: 42)
!11433 = !DILocation(line: 3339, column: 16, scope: !11431)
!11434 = !DILocation(line: 3339, column: 7, scope: !11432)
!11435 = !DILocalVariable(name: "hardmin", scope: !11436, file: !3, line: 3340, type: !1067)
!11436 = distinct !DILexicalBlock(scope: !11431, file: !3, line: 3339, column: 29)
!11437 = !DILocation(line: 3340, column: 8, scope: !11436)
!11438 = !DILocalVariable(name: "hardmax", scope: !11436, file: !3, line: 3340, type: !1067)
!11439 = !DILocation(line: 3340, column: 17, scope: !11436)
!11440 = !DILocalVariable(name: "softmin", scope: !11436, file: !3, line: 3340, type: !1067)
!11441 = !DILocation(line: 3340, column: 26, scope: !11436)
!11442 = !DILocalVariable(name: "softmax", scope: !11436, file: !3, line: 3340, type: !1067)
!11443 = !DILocation(line: 3340, column: 35, scope: !11436)
!11444 = !DILocalVariable(name: "step", scope: !11436, file: !3, line: 3340, type: !1067)
!11445 = !DILocation(line: 3340, column: 44, scope: !11436)
!11446 = !DILocation(line: 3342, column: 27, scope: !11436)
!11447 = !DILocation(line: 3342, column: 32, scope: !11436)
!11448 = !DILocation(line: 3342, column: 4, scope: !11436)
!11449 = !DILocation(line: 3343, column: 30, scope: !11436)
!11450 = !DILocation(line: 3343, column: 35, scope: !11436)
!11451 = !DILocation(line: 3343, column: 4, scope: !11436)
!11452 = !DILocation(line: 3345, column: 9, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11436, file: !3, line: 3345, column: 8)
!11454 = !DILocation(line: 3345, column: 34, scope: !11453)
!11455 = !DILocation(line: 3345, column: 37, scope: !11453)
!11456 = !DILocation(line: 3345, column: 44, scope: !11453)
!11457 = !DILocation(line: 3345, column: 41, scope: !11453)
!11458 = !DILocation(line: 3345, column: 8, scope: !11436)
!11459 = !DILocation(line: 3346, column: 11, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11453, file: !3, line: 3345, column: 49)
!11461 = !DILocation(line: 3346, column: 9, scope: !11460)
!11462 = !DILocation(line: 3347, column: 11, scope: !11460)
!11463 = !DILocation(line: 3347, column: 9, scope: !11460)
!11464 = !DILocation(line: 3348, column: 4, scope: !11460)
!11465 = !DILocation(line: 3349, column: 8, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11436, file: !3, line: 3349, column: 8)
!11467 = !DILocation(line: 3349, column: 11, scope: !11466)
!11468 = !DILocation(line: 3349, column: 8, scope: !11436)
!11469 = !DILocation(line: 3350, column: 10, scope: !11466)
!11470 = !DILocation(line: 3350, column: 8, scope: !11466)
!11471 = !DILocation(line: 3350, column: 5, scope: !11466)
!11472 = !DILocation(line: 3351, column: 8, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !11436, file: !3, line: 3351, column: 8)
!11474 = !DILocation(line: 3351, column: 11, scope: !11473)
!11475 = !DILocation(line: 3351, column: 8, scope: !11436)
!11476 = !DILocation(line: 3352, column: 8, scope: !11473)
!11477 = !DILocation(line: 3352, column: 5, scope: !11473)
!11478 = !DILocation(line: 3353, column: 3, scope: !11436)
!11479 = !DILocation(line: 3354, column: 12, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11431, file: !3, line: 3354, column: 12)
!11481 = !DILocation(line: 3354, column: 21, scope: !11480)
!11482 = !DILocation(line: 3354, column: 12, scope: !11431)
!11483 = !DILocalVariable(name: "hardmin", scope: !11484, file: !3, line: 3355, type: !1534)
!11484 = distinct !DILexicalBlock(scope: !11480, file: !3, line: 3354, column: 36)
!11485 = !DILocation(line: 3355, column: 10, scope: !11484)
!11486 = !DILocalVariable(name: "hardmax", scope: !11484, file: !3, line: 3355, type: !1534)
!11487 = !DILocation(line: 3355, column: 19, scope: !11484)
!11488 = !DILocalVariable(name: "softmin", scope: !11484, file: !3, line: 3355, type: !1534)
!11489 = !DILocation(line: 3355, column: 28, scope: !11484)
!11490 = !DILocalVariable(name: "softmax", scope: !11484, file: !3, line: 3355, type: !1534)
!11491 = !DILocation(line: 3355, column: 37, scope: !11484)
!11492 = !DILocalVariable(name: "step", scope: !11484, file: !3, line: 3355, type: !1534)
!11493 = !DILocation(line: 3355, column: 46, scope: !11484)
!11494 = !DILocalVariable(name: "precision", scope: !11484, file: !3, line: 3355, type: !1534)
!11495 = !DILocation(line: 3355, column: 52, scope: !11484)
!11496 = !DILocation(line: 3357, column: 29, scope: !11484)
!11497 = !DILocation(line: 3357, column: 34, scope: !11484)
!11498 = !DILocation(line: 3357, column: 4, scope: !11484)
!11499 = !DILocation(line: 3358, column: 32, scope: !11484)
!11500 = !DILocation(line: 3358, column: 37, scope: !11484)
!11501 = !DILocation(line: 3358, column: 4, scope: !11484)
!11502 = !DILocation(line: 3360, column: 9, scope: !11503)
!11503 = distinct !DILexicalBlock(scope: !11484, file: !3, line: 3360, column: 8)
!11504 = !DILocation(line: 3360, column: 34, scope: !11503)
!11505 = !DILocation(line: 3360, column: 37, scope: !11503)
!11506 = !DILocation(line: 3360, column: 44, scope: !11503)
!11507 = !DILocation(line: 3360, column: 41, scope: !11503)
!11508 = !DILocation(line: 3360, column: 8, scope: !11484)
!11509 = !DILocation(line: 3361, column: 11, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11503, file: !3, line: 3360, column: 49)
!11511 = !DILocation(line: 3361, column: 9, scope: !11510)
!11512 = !DILocation(line: 3362, column: 11, scope: !11510)
!11513 = !DILocation(line: 3362, column: 9, scope: !11510)
!11514 = !DILocation(line: 3363, column: 4, scope: !11510)
!11515 = !DILocation(line: 3364, column: 8, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11484, file: !3, line: 3364, column: 8)
!11517 = !DILocation(line: 3364, column: 11, scope: !11516)
!11518 = !DILocation(line: 3364, column: 8, scope: !11484)
!11519 = !DILocation(line: 3365, column: 10, scope: !11516)
!11520 = !DILocation(line: 3365, column: 8, scope: !11516)
!11521 = !DILocation(line: 3365, column: 5, scope: !11516)
!11522 = !DILocation(line: 3366, column: 8, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11484, file: !3, line: 3366, column: 8)
!11524 = !DILocation(line: 3366, column: 11, scope: !11523)
!11525 = !DILocation(line: 3366, column: 8, scope: !11484)
!11526 = !DILocation(line: 3367, column: 10, scope: !11523)
!11527 = !DILocation(line: 3367, column: 8, scope: !11523)
!11528 = !DILocation(line: 3367, column: 5, scope: !11523)
!11529 = !DILocation(line: 3368, column: 3, scope: !11484)
!11530 = !DILocation(line: 3369, column: 12, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11480, file: !3, line: 3369, column: 12)
!11532 = !DILocation(line: 3369, column: 21, scope: !11531)
!11533 = !DILocation(line: 3369, column: 12, scope: !11480)
!11534 = !DILocation(line: 3370, column: 8, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11531, file: !3, line: 3369, column: 37)
!11536 = !DILocation(line: 3371, column: 40, scope: !11535)
!11537 = !DILocation(line: 3371, column: 10, scope: !11535)
!11538 = !DILocation(line: 3371, column: 8, scope: !11535)
!11539 = !DILocation(line: 3372, column: 8, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11535, file: !3, line: 3372, column: 8)
!11541 = !DILocation(line: 3372, column: 12, scope: !11540)
!11542 = !DILocation(line: 3372, column: 8, scope: !11535)
!11543 = !DILocation(line: 3373, column: 9, scope: !11540)
!11544 = !DILocation(line: 3373, column: 5, scope: !11540)
!11545 = !DILocation(line: 3374, column: 3, scope: !11535)
!11546 = !DILocation(line: 3375, column: 2, scope: !11432)
!11547 = !DILocation(line: 3378, column: 19, scope: !11251)
!11548 = !DILocation(line: 3378, column: 26, scope: !11251)
!11549 = !DILocation(line: 3378, column: 32, scope: !11251)
!11550 = !DILocation(line: 3378, column: 40, scope: !11251)
!11551 = !DILocation(line: 3378, column: 45, scope: !11251)
!11552 = !DILocation(line: 3378, column: 48, scope: !11251)
!11553 = !DILocation(line: 3378, column: 51, scope: !11251)
!11554 = !DILocation(line: 3378, column: 58, scope: !11251)
!11555 = !DILocation(line: 3378, column: 72, scope: !11251)
!11556 = !DILocation(line: 3378, column: 77, scope: !11251)
!11557 = !DILocation(line: 3378, column: 82, scope: !11251)
!11558 = !DILocation(line: 3378, column: 86, scope: !11251)
!11559 = !DILocation(line: 3378, column: 90, scope: !11251)
!11560 = !DILocation(line: 3378, column: 8, scope: !11251)
!11561 = !DILocation(line: 3378, column: 6, scope: !11251)
!11562 = !DILocation(line: 3380, column: 2, scope: !11251)
!11563 = !DILocation(line: 3380, column: 7, scope: !11251)
!11564 = !DILocation(line: 3380, column: 18, scope: !11251)
!11565 = !DILocation(line: 3380, column: 17, scope: !11251)
!11566 = !DILocation(line: 3381, column: 17, scope: !11251)
!11567 = !DILocation(line: 3381, column: 2, scope: !11251)
!11568 = !DILocation(line: 3381, column: 7, scope: !11251)
!11569 = !DILocation(line: 3381, column: 15, scope: !11251)
!11570 = !DILocation(line: 3383, column: 31, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 3383, column: 6)
!11572 = !DILocation(line: 3383, column: 36, scope: !11571)
!11573 = !DILocation(line: 3383, column: 6, scope: !11571)
!11574 = !DILocation(line: 3383, column: 6, scope: !11251)
!11575 = !DILocation(line: 3384, column: 19, scope: !11571)
!11576 = !DILocation(line: 3384, column: 3, scope: !11571)
!11577 = !DILocation(line: 3384, column: 8, scope: !11571)
!11578 = !DILocation(line: 3384, column: 17, scope: !11571)
!11579 = !DILocation(line: 3386, column: 3, scope: !11571)
!11580 = !DILocation(line: 3386, column: 8, scope: !11571)
!11581 = !DILocation(line: 3386, column: 17, scope: !11571)
!11582 = !DILocation(line: 3388, column: 6, scope: !11583)
!11583 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 3388, column: 6)
!11584 = !DILocation(line: 3388, column: 6, scope: !11251)
!11585 = !DILocation(line: 3389, column: 26, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11583, file: !3, line: 3388, column: 12)
!11587 = !DILocation(line: 3389, column: 3, scope: !11586)
!11588 = !DILocation(line: 3389, column: 8, scope: !11586)
!11589 = !DILocation(line: 3389, column: 13, scope: !11586)
!11590 = !DILocation(line: 3390, column: 3, scope: !11586)
!11591 = !DILocation(line: 3390, column: 8, scope: !11586)
!11592 = !DILocation(line: 3390, column: 13, scope: !11586)
!11593 = !DILocation(line: 3391, column: 7, scope: !11594)
!11594 = distinct !DILexicalBlock(scope: !11586, file: !3, line: 3391, column: 7)
!11595 = !DILocation(line: 3391, column: 7, scope: !11586)
!11596 = !DILocation(line: 3392, column: 4, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11594, file: !3, line: 3391, column: 15)
!11598 = !DILocation(line: 3392, column: 9, scope: !11597)
!11599 = !DILocation(line: 3392, column: 18, scope: !11597)
!11600 = !DILocation(line: 3393, column: 3, scope: !11597)
!11601 = !DILocation(line: 3394, column: 2, scope: !11586)
!11602 = !DILocation(line: 3396, column: 7, scope: !11603)
!11603 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 3396, column: 6)
!11604 = !DILocation(line: 3396, column: 12, scope: !11603)
!11605 = !DILocation(line: 3396, column: 21, scope: !11603)
!11606 = !DILocation(line: 3396, column: 25, scope: !11603)
!11607 = !DILocation(line: 3396, column: 30, scope: !11603)
!11608 = !DILocation(line: 3396, column: 33, scope: !11603)
!11609 = !DILocation(line: 3396, column: 6, scope: !11251)
!11610 = !DILocation(line: 3397, column: 3, scope: !11611)
!11611 = distinct !DILexicalBlock(scope: !11603, file: !3, line: 3396, column: 49)
!11612 = !DILocation(line: 3397, column: 8, scope: !11611)
!11613 = !DILocation(line: 3397, column: 13, scope: !11611)
!11614 = !DILocation(line: 3398, column: 2, scope: !11611)
!11615 = !DILocation(line: 3400, column: 30, scope: !11616)
!11616 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 3400, column: 6)
!11617 = !DILocation(line: 3400, column: 35, scope: !11616)
!11618 = !DILocation(line: 3400, column: 44, scope: !11616)
!11619 = !DILocation(line: 3400, column: 7, scope: !11616)
!11620 = !DILocation(line: 3400, column: 6, scope: !11251)
!11621 = !DILocation(line: 3401, column: 27, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 3400, column: 51)
!11623 = !DILocation(line: 3401, column: 3, scope: !11622)
!11624 = !DILocation(line: 3402, column: 2, scope: !11622)
!11625 = !DILocation(line: 3404, column: 6, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 3404, column: 6)
!11627 = !DILocation(line: 3404, column: 11, scope: !11626)
!11628 = !DILocation(line: 3404, column: 16, scope: !11626)
!11629 = !DILocation(line: 3404, column: 30, scope: !11626)
!11630 = !DILocation(line: 3404, column: 53, scope: !11626)
!11631 = !DILocation(line: 3404, column: 34, scope: !11626)
!11632 = !DILocation(line: 3404, column: 58, scope: !11626)
!11633 = !DILocation(line: 3404, column: 6, scope: !11251)
!11634 = !DILocation(line: 3405, column: 3, scope: !11635)
!11635 = distinct !DILexicalBlock(scope: !11626, file: !3, line: 3404, column: 69)
!11636 = !DILocation(line: 3405, column: 8, scope: !11635)
!11637 = !DILocation(line: 3405, column: 13, scope: !11635)
!11638 = !DILocation(line: 3406, column: 2, scope: !11635)
!11639 = !DILocation(line: 3409, column: 7, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 3409, column: 6)
!11641 = !DILocation(line: 3409, column: 16, scope: !11640)
!11642 = !DILocation(line: 3409, column: 31, scope: !11640)
!11643 = !DILocation(line: 3409, column: 49, scope: !11640)
!11644 = !DILocation(line: 3409, column: 34, scope: !11640)
!11645 = !DILocation(line: 3409, column: 6, scope: !11251)
!11646 = !DILocation(line: 3410, column: 34, scope: !11647)
!11647 = distinct !DILexicalBlock(scope: !11640, file: !3, line: 3409, column: 55)
!11648 = !DILocation(line: 3410, column: 39, scope: !11647)
!11649 = !DILocation(line: 3410, column: 44, scope: !11647)
!11650 = !DILocation(line: 3410, column: 13, scope: !11647)
!11651 = !DILocation(line: 3410, column: 3, scope: !11647)
!11652 = !DILocation(line: 3410, column: 8, scope: !11647)
!11653 = !DILocation(line: 3410, column: 11, scope: !11647)
!11654 = !DILocation(line: 3411, column: 2, scope: !11647)
!11655 = !DILocation(line: 3413, column: 6, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 3413, column: 6)
!11657 = !DILocation(line: 3413, column: 6, scope: !11251)
!11658 = !DILocation(line: 3414, column: 27, scope: !11659)
!11659 = distinct !DILexicalBlock(scope: !11656, file: !3, line: 3413, column: 12)
!11660 = !DILocation(line: 3414, column: 3, scope: !11659)
!11661 = !DILocation(line: 3414, column: 8, scope: !11659)
!11662 = !DILocation(line: 3414, column: 25, scope: !11659)
!11663 = !DILocation(line: 3415, column: 23, scope: !11659)
!11664 = !DILocation(line: 3415, column: 15, scope: !11659)
!11665 = !DILocation(line: 3415, column: 3, scope: !11659)
!11666 = !DILocation(line: 3415, column: 8, scope: !11659)
!11667 = !DILocation(line: 3415, column: 13, scope: !11659)
!11668 = !DILocation(line: 3416, column: 2, scope: !11659)
!11669 = !DILocation(line: 3418, column: 9, scope: !11251)
!11670 = !DILocation(line: 3418, column: 2, scope: !11251)
!11671 = distinct !DISubprogram(name: "uiDefButO_ptr", scope: !3, file: !3, line: 3644, type: !11672, scopeLine: 3645, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!11672 = !DISubroutineType(types: !11673)
!11673 = !{!1558, !1695, !1067, !5372, !1067, !1647, !1067, !1067, !1545, !1545, !1647}
!11674 = !DILocalVariable(name: "block", arg: 1, scope: !11671, file: !3, line: 3644, type: !1695)
!11675 = !DILocation(line: 3644, column: 31, scope: !11671)
!11676 = !DILocalVariable(name: "type", arg: 2, scope: !11671, file: !3, line: 3644, type: !1067)
!11677 = !DILocation(line: 3644, column: 42, scope: !11671)
!11678 = !DILocalVariable(name: "ot", arg: 3, scope: !11671, file: !3, line: 3644, type: !5372)
!11679 = !DILocation(line: 3644, column: 64, scope: !11671)
!11680 = !DILocalVariable(name: "opcontext", arg: 4, scope: !11671, file: !3, line: 3644, type: !1067)
!11681 = !DILocation(line: 3644, column: 72, scope: !11671)
!11682 = !DILocalVariable(name: "str", arg: 5, scope: !11671, file: !3, line: 3644, type: !1647)
!11683 = !DILocation(line: 3644, column: 95, scope: !11671)
!11684 = !DILocalVariable(name: "x", arg: 6, scope: !11671, file: !3, line: 3644, type: !1067)
!11685 = !DILocation(line: 3644, column: 104, scope: !11671)
!11686 = !DILocalVariable(name: "y", arg: 7, scope: !11671, file: !3, line: 3644, type: !1067)
!11687 = !DILocation(line: 3644, column: 111, scope: !11671)
!11688 = !DILocalVariable(name: "width", arg: 8, scope: !11671, file: !3, line: 3644, type: !1545)
!11689 = !DILocation(line: 3644, column: 120, scope: !11671)
!11690 = !DILocalVariable(name: "height", arg: 9, scope: !11671, file: !3, line: 3644, type: !1545)
!11691 = !DILocation(line: 3644, column: 133, scope: !11671)
!11692 = !DILocalVariable(name: "tip", arg: 10, scope: !11671, file: !3, line: 3644, type: !1647)
!11693 = !DILocation(line: 3644, column: 153, scope: !11671)
!11694 = !DILocalVariable(name: "but", scope: !11671, file: !3, line: 3646, type: !1558)
!11695 = !DILocation(line: 3646, column: 9, scope: !11671)
!11696 = !DILocation(line: 3647, column: 32, scope: !11671)
!11697 = !DILocation(line: 3647, column: 39, scope: !11671)
!11698 = !DILocation(line: 3647, column: 45, scope: !11671)
!11699 = !DILocation(line: 3647, column: 49, scope: !11671)
!11700 = !DILocation(line: 3647, column: 60, scope: !11671)
!11701 = !DILocation(line: 3647, column: 65, scope: !11671)
!11702 = !DILocation(line: 3647, column: 68, scope: !11671)
!11703 = !DILocation(line: 3647, column: 71, scope: !11671)
!11704 = !DILocation(line: 3647, column: 78, scope: !11671)
!11705 = !DILocation(line: 3647, column: 86, scope: !11671)
!11706 = !DILocation(line: 3647, column: 8, scope: !11671)
!11707 = !DILocation(line: 3647, column: 6, scope: !11671)
!11708 = !DILocation(line: 3648, column: 15, scope: !11671)
!11709 = !DILocation(line: 3648, column: 2, scope: !11671)
!11710 = !DILocation(line: 3649, column: 9, scope: !11671)
!11711 = !DILocation(line: 3649, column: 2, scope: !11671)
!11712 = distinct !DISubprogram(name: "ui_def_but_operator_ptr", scope: !3, file: !3, line: 3438, type: !11672, scopeLine: 3439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!11713 = !DILocalVariable(name: "block", arg: 1, scope: !11712, file: !3, line: 3438, type: !1695)
!11714 = !DILocation(line: 3438, column: 48, scope: !11712)
!11715 = !DILocalVariable(name: "type", arg: 2, scope: !11712, file: !3, line: 3438, type: !1067)
!11716 = !DILocation(line: 3438, column: 59, scope: !11712)
!11717 = !DILocalVariable(name: "ot", arg: 3, scope: !11712, file: !3, line: 3438, type: !5372)
!11718 = !DILocation(line: 3438, column: 81, scope: !11712)
!11719 = !DILocalVariable(name: "opcontext", arg: 4, scope: !11712, file: !3, line: 3438, type: !1067)
!11720 = !DILocation(line: 3438, column: 89, scope: !11712)
!11721 = !DILocalVariable(name: "str", arg: 5, scope: !11712, file: !3, line: 3438, type: !1647)
!11722 = !DILocation(line: 3438, column: 112, scope: !11712)
!11723 = !DILocalVariable(name: "x", arg: 6, scope: !11712, file: !3, line: 3438, type: !1067)
!11724 = !DILocation(line: 3438, column: 121, scope: !11712)
!11725 = !DILocalVariable(name: "y", arg: 7, scope: !11712, file: !3, line: 3438, type: !1067)
!11726 = !DILocation(line: 3438, column: 128, scope: !11712)
!11727 = !DILocalVariable(name: "width", arg: 8, scope: !11712, file: !3, line: 3438, type: !1545)
!11728 = !DILocation(line: 3438, column: 137, scope: !11712)
!11729 = !DILocalVariable(name: "height", arg: 9, scope: !11712, file: !3, line: 3438, type: !1545)
!11730 = !DILocation(line: 3438, column: 150, scope: !11712)
!11731 = !DILocalVariable(name: "tip", arg: 10, scope: !11712, file: !3, line: 3438, type: !1647)
!11732 = !DILocation(line: 3438, column: 170, scope: !11712)
!11733 = !DILocalVariable(name: "but", scope: !11712, file: !3, line: 3440, type: !1558)
!11734 = !DILocation(line: 3440, column: 9, scope: !11712)
!11735 = !DILocation(line: 3442, column: 7, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11712, file: !3, line: 3442, column: 6)
!11737 = !DILocation(line: 3442, column: 6, scope: !11712)
!11738 = !DILocation(line: 3443, column: 7, scope: !11739)
!11739 = distinct !DILexicalBlock(scope: !11740, file: !3, line: 3443, column: 7)
!11740 = distinct !DILexicalBlock(scope: !11736, file: !3, line: 3442, column: 12)
!11741 = !DILocation(line: 3443, column: 10, scope: !11739)
!11742 = !DILocation(line: 3443, column: 13, scope: !11739)
!11743 = !DILocation(line: 3443, column: 17, scope: !11739)
!11744 = !DILocation(line: 3443, column: 7, scope: !11740)
!11745 = !DILocation(line: 3444, column: 29, scope: !11739)
!11746 = !DILocation(line: 3444, column: 33, scope: !11739)
!11747 = !DILocation(line: 3444, column: 10, scope: !11739)
!11748 = !DILocation(line: 3444, column: 8, scope: !11739)
!11749 = !DILocation(line: 3444, column: 4, scope: !11739)
!11750 = !DILocation(line: 3446, column: 8, scope: !11739)
!11751 = !DILocation(line: 3447, column: 2, scope: !11740)
!11752 = !DILocation(line: 3449, column: 8, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11712, file: !3, line: 3449, column: 6)
!11754 = !DILocation(line: 3449, column: 12, scope: !11753)
!11755 = !DILocation(line: 3449, column: 15, scope: !11753)
!11756 = !DILocation(line: 3449, column: 22, scope: !11753)
!11757 = !DILocation(line: 3449, column: 31, scope: !11753)
!11758 = !DILocation(line: 3449, column: 34, scope: !11753)
!11759 = !DILocation(line: 3449, column: 37, scope: !11753)
!11760 = !DILocation(line: 3449, column: 40, scope: !11753)
!11761 = !DILocation(line: 3449, column: 44, scope: !11753)
!11762 = !DILocation(line: 3449, column: 6, scope: !11712)
!11763 = !DILocation(line: 3450, column: 35, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11753, file: !3, line: 3449, column: 50)
!11765 = !DILocation(line: 3450, column: 39, scope: !11764)
!11766 = !DILocation(line: 3450, column: 9, scope: !11764)
!11767 = !DILocation(line: 3450, column: 7, scope: !11764)
!11768 = !DILocation(line: 3451, column: 2, scope: !11764)
!11769 = !DILocation(line: 3453, column: 19, scope: !11712)
!11770 = !DILocation(line: 3453, column: 26, scope: !11712)
!11771 = !DILocation(line: 3453, column: 36, scope: !11712)
!11772 = !DILocation(line: 3453, column: 41, scope: !11712)
!11773 = !DILocation(line: 3453, column: 44, scope: !11712)
!11774 = !DILocation(line: 3453, column: 47, scope: !11712)
!11775 = !DILocation(line: 3453, column: 54, scope: !11712)
!11776 = !DILocation(line: 3453, column: 80, scope: !11712)
!11777 = !DILocation(line: 3453, column: 8, scope: !11712)
!11778 = !DILocation(line: 3453, column: 6, scope: !11712)
!11779 = !DILocation(line: 3454, column: 16, scope: !11712)
!11780 = !DILocation(line: 3454, column: 2, scope: !11712)
!11781 = !DILocation(line: 3454, column: 7, scope: !11712)
!11782 = !DILocation(line: 3454, column: 14, scope: !11712)
!11783 = !DILocation(line: 3455, column: 19, scope: !11712)
!11784 = !DILocation(line: 3455, column: 2, scope: !11712)
!11785 = !DILocation(line: 3455, column: 7, scope: !11712)
!11786 = !DILocation(line: 3455, column: 17, scope: !11712)
!11787 = !DILocation(line: 3456, column: 2, scope: !11712)
!11788 = !DILocation(line: 3456, column: 7, scope: !11712)
!11789 = !DILocation(line: 3456, column: 12, scope: !11712)
!11790 = !DILocation(line: 3458, column: 7, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11712, file: !3, line: 3458, column: 6)
!11792 = !DILocation(line: 3458, column: 6, scope: !11712)
!11793 = !DILocation(line: 3459, column: 3, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11791, file: !3, line: 3458, column: 11)
!11795 = !DILocation(line: 3459, column: 8, scope: !11794)
!11796 = !DILocation(line: 3459, column: 13, scope: !11794)
!11797 = !DILocation(line: 3460, column: 3, scope: !11794)
!11798 = !DILocation(line: 3460, column: 8, scope: !11794)
!11799 = !DILocation(line: 3460, column: 13, scope: !11794)
!11800 = !DILocation(line: 3461, column: 3, scope: !11794)
!11801 = !DILocation(line: 3461, column: 8, scope: !11794)
!11802 = !DILocation(line: 3461, column: 16, scope: !11794)
!11803 = !DILocation(line: 3462, column: 2, scope: !11794)
!11804 = !DILocation(line: 3464, column: 9, scope: !11712)
!11805 = !DILocation(line: 3464, column: 2, scope: !11712)
!11806 = distinct !DISubprogram(name: "uiDefButO", scope: !3, file: !3, line: 3651, type: !11807, scopeLine: 3652, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!11807 = !DISubroutineType(types: !11808)
!11808 = !{!1558, !1695, !1067, !1647, !1067, !1647, !1067, !1067, !1545, !1545, !1647}
!11809 = !DILocalVariable(name: "block", arg: 1, scope: !11806, file: !3, line: 3651, type: !1695)
!11810 = !DILocation(line: 3651, column: 27, scope: !11806)
!11811 = !DILocalVariable(name: "type", arg: 2, scope: !11806, file: !3, line: 3651, type: !1067)
!11812 = !DILocation(line: 3651, column: 38, scope: !11806)
!11813 = !DILocalVariable(name: "opname", arg: 3, scope: !11806, file: !3, line: 3651, type: !1647)
!11814 = !DILocation(line: 3651, column: 56, scope: !11806)
!11815 = !DILocalVariable(name: "opcontext", arg: 4, scope: !11806, file: !3, line: 3651, type: !1067)
!11816 = !DILocation(line: 3651, column: 68, scope: !11806)
!11817 = !DILocalVariable(name: "str", arg: 5, scope: !11806, file: !3, line: 3651, type: !1647)
!11818 = !DILocation(line: 3651, column: 91, scope: !11806)
!11819 = !DILocalVariable(name: "x", arg: 6, scope: !11806, file: !3, line: 3651, type: !1067)
!11820 = !DILocation(line: 3651, column: 100, scope: !11806)
!11821 = !DILocalVariable(name: "y", arg: 7, scope: !11806, file: !3, line: 3651, type: !1067)
!11822 = !DILocation(line: 3651, column: 107, scope: !11806)
!11823 = !DILocalVariable(name: "width", arg: 8, scope: !11806, file: !3, line: 3651, type: !1545)
!11824 = !DILocation(line: 3651, column: 116, scope: !11806)
!11825 = !DILocalVariable(name: "height", arg: 9, scope: !11806, file: !3, line: 3651, type: !1545)
!11826 = !DILocation(line: 3651, column: 129, scope: !11806)
!11827 = !DILocalVariable(name: "tip", arg: 10, scope: !11806, file: !3, line: 3651, type: !1647)
!11828 = !DILocation(line: 3651, column: 149, scope: !11806)
!11829 = !DILocalVariable(name: "ot", scope: !11806, file: !3, line: 3653, type: !5372)
!11830 = !DILocation(line: 3653, column: 18, scope: !11806)
!11831 = !DILocation(line: 3653, column: 44, scope: !11806)
!11832 = !DILocation(line: 3653, column: 23, scope: !11806)
!11833 = !DILocation(line: 3654, column: 6, scope: !11834)
!11834 = distinct !DILexicalBlock(scope: !11806, file: !3, line: 3654, column: 6)
!11835 = !DILocation(line: 3654, column: 10, scope: !11834)
!11836 = !DILocation(line: 3654, column: 18, scope: !11834)
!11837 = !DILocation(line: 3654, column: 21, scope: !11834)
!11838 = !DILocation(line: 3654, column: 24, scope: !11834)
!11839 = !DILocation(line: 3654, column: 6, scope: !11806)
!11840 = !DILocation(line: 3654, column: 39, scope: !11834)
!11841 = !DILocation(line: 3654, column: 37, scope: !11834)
!11842 = !DILocation(line: 3654, column: 33, scope: !11834)
!11843 = !DILocation(line: 3655, column: 23, scope: !11806)
!11844 = !DILocation(line: 3655, column: 30, scope: !11806)
!11845 = !DILocation(line: 3655, column: 36, scope: !11806)
!11846 = !DILocation(line: 3655, column: 40, scope: !11806)
!11847 = !DILocation(line: 3655, column: 51, scope: !11806)
!11848 = !DILocation(line: 3655, column: 56, scope: !11806)
!11849 = !DILocation(line: 3655, column: 59, scope: !11806)
!11850 = !DILocation(line: 3655, column: 62, scope: !11806)
!11851 = !DILocation(line: 3655, column: 69, scope: !11806)
!11852 = !DILocation(line: 3655, column: 77, scope: !11806)
!11853 = !DILocation(line: 3655, column: 9, scope: !11806)
!11854 = !DILocation(line: 3655, column: 2, scope: !11806)
!11855 = distinct !DISubprogram(name: "uiDefIconBut", scope: !3, file: !3, line: 3659, type: !11856, scopeLine: 3660, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!11856 = !DISubroutineType(types: !11857)
!11857 = !{!1558, !1695, !1067, !1067, !1067, !1067, !1067, !1545, !1545, !1535, !1534, !1534, !1534, !1534, !1647}
!11858 = !DILocalVariable(name: "block", arg: 1, scope: !11855, file: !3, line: 3659, type: !1695)
!11859 = !DILocation(line: 3659, column: 30, scope: !11855)
!11860 = !DILocalVariable(name: "type", arg: 2, scope: !11855, file: !3, line: 3659, type: !1067)
!11861 = !DILocation(line: 3659, column: 41, scope: !11855)
!11862 = !DILocalVariable(name: "retval", arg: 3, scope: !11855, file: !3, line: 3659, type: !1067)
!11863 = !DILocation(line: 3659, column: 51, scope: !11855)
!11864 = !DILocalVariable(name: "icon", arg: 4, scope: !11855, file: !3, line: 3659, type: !1067)
!11865 = !DILocation(line: 3659, column: 63, scope: !11855)
!11866 = !DILocalVariable(name: "x", arg: 5, scope: !11855, file: !3, line: 3659, type: !1067)
!11867 = !DILocation(line: 3659, column: 73, scope: !11855)
!11868 = !DILocalVariable(name: "y", arg: 6, scope: !11855, file: !3, line: 3659, type: !1067)
!11869 = !DILocation(line: 3659, column: 80, scope: !11855)
!11870 = !DILocalVariable(name: "width", arg: 7, scope: !11855, file: !3, line: 3659, type: !1545)
!11871 = !DILocation(line: 3659, column: 89, scope: !11855)
!11872 = !DILocalVariable(name: "height", arg: 8, scope: !11855, file: !3, line: 3659, type: !1545)
!11873 = !DILocation(line: 3659, column: 102, scope: !11855)
!11874 = !DILocalVariable(name: "poin", arg: 9, scope: !11855, file: !3, line: 3659, type: !1535)
!11875 = !DILocation(line: 3659, column: 116, scope: !11855)
!11876 = !DILocalVariable(name: "min", arg: 10, scope: !11855, file: !3, line: 3659, type: !1534)
!11877 = !DILocation(line: 3659, column: 128, scope: !11855)
!11878 = !DILocalVariable(name: "max", arg: 11, scope: !11855, file: !3, line: 3659, type: !1534)
!11879 = !DILocation(line: 3659, column: 139, scope: !11855)
!11880 = !DILocalVariable(name: "a1", arg: 12, scope: !11855, file: !3, line: 3659, type: !1534)
!11881 = !DILocation(line: 3659, column: 150, scope: !11855)
!11882 = !DILocalVariable(name: "a2", arg: 13, scope: !11855, file: !3, line: 3659, type: !1534)
!11883 = !DILocation(line: 3659, column: 160, scope: !11855)
!11884 = !DILocalVariable(name: "tip", arg: 14, scope: !11855, file: !3, line: 3659, type: !1647)
!11885 = !DILocation(line: 3659, column: 177, scope: !11855)
!11886 = !DILocalVariable(name: "but", scope: !11855, file: !3, line: 3661, type: !1558)
!11887 = !DILocation(line: 3661, column: 9, scope: !11855)
!11888 = !DILocation(line: 3661, column: 26, scope: !11855)
!11889 = !DILocation(line: 3661, column: 33, scope: !11855)
!11890 = !DILocation(line: 3661, column: 39, scope: !11855)
!11891 = !DILocation(line: 3661, column: 51, scope: !11855)
!11892 = !DILocation(line: 3661, column: 54, scope: !11855)
!11893 = !DILocation(line: 3661, column: 57, scope: !11855)
!11894 = !DILocation(line: 3661, column: 64, scope: !11855)
!11895 = !DILocation(line: 3661, column: 72, scope: !11855)
!11896 = !DILocation(line: 3661, column: 78, scope: !11855)
!11897 = !DILocation(line: 3661, column: 83, scope: !11855)
!11898 = !DILocation(line: 3661, column: 88, scope: !11855)
!11899 = !DILocation(line: 3661, column: 92, scope: !11855)
!11900 = !DILocation(line: 3661, column: 96, scope: !11855)
!11901 = !DILocation(line: 3661, column: 15, scope: !11855)
!11902 = !DILocation(line: 3662, column: 27, scope: !11855)
!11903 = !DILocation(line: 3662, column: 32, scope: !11855)
!11904 = !DILocation(line: 3662, column: 2, scope: !11855)
!11905 = !DILocation(line: 3663, column: 9, scope: !11855)
!11906 = !DILocation(line: 3663, column: 2, scope: !11855)
!11907 = distinct !DISubprogram(name: "ui_check_but_and_iconize", scope: !3, file: !3, line: 3577, type: !11908, scopeLine: 3578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!11908 = !DISubroutineType(types: !11909)
!11909 = !{null, !1558, !1067}
!11910 = !DILocalVariable(name: "but", arg: 1, scope: !11907, file: !3, line: 3577, type: !1558)
!11911 = !DILocation(line: 3577, column: 45, scope: !11907)
!11912 = !DILocalVariable(name: "icon", arg: 2, scope: !11907, file: !3, line: 3577, type: !1067)
!11913 = !DILocation(line: 3577, column: 54, scope: !11907)
!11914 = !DILocation(line: 3579, column: 6, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !11907, file: !3, line: 3579, column: 6)
!11916 = !DILocation(line: 3579, column: 6, scope: !11907)
!11917 = !DILocation(line: 3580, column: 27, scope: !11918)
!11918 = distinct !DILexicalBlock(scope: !11915, file: !3, line: 3579, column: 12)
!11919 = !DILocation(line: 3580, column: 3, scope: !11918)
!11920 = !DILocation(line: 3580, column: 8, scope: !11918)
!11921 = !DILocation(line: 3580, column: 13, scope: !11918)
!11922 = !DILocation(line: 3581, column: 3, scope: !11918)
!11923 = !DILocation(line: 3581, column: 8, scope: !11918)
!11924 = !DILocation(line: 3581, column: 13, scope: !11918)
!11925 = !DILocation(line: 3582, column: 2, scope: !11918)
!11926 = !DILocation(line: 3584, column: 15, scope: !11907)
!11927 = !DILocation(line: 3584, column: 2, scope: !11907)
!11928 = !DILocation(line: 3585, column: 1, scope: !11907)
!11929 = distinct !DISubprogram(name: "uiDefIconButF", scope: !3, file: !3, line: 3676, type: !11930, scopeLine: 3677, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!11930 = !DISubroutineType(types: !11931)
!11931 = !{!1558, !1695, !1067, !1067, !1067, !1067, !1067, !1545, !1545, !1543, !1534, !1534, !1534, !1534, !1647}
!11932 = !DILocalVariable(name: "block", arg: 1, scope: !11929, file: !3, line: 3676, type: !1695)
!11933 = !DILocation(line: 3676, column: 31, scope: !11929)
!11934 = !DILocalVariable(name: "type", arg: 2, scope: !11929, file: !3, line: 3676, type: !1067)
!11935 = !DILocation(line: 3676, column: 42, scope: !11929)
!11936 = !DILocalVariable(name: "retval", arg: 3, scope: !11929, file: !3, line: 3676, type: !1067)
!11937 = !DILocation(line: 3676, column: 52, scope: !11929)
!11938 = !DILocalVariable(name: "icon", arg: 4, scope: !11929, file: !3, line: 3676, type: !1067)
!11939 = !DILocation(line: 3676, column: 64, scope: !11929)
!11940 = !DILocalVariable(name: "x", arg: 5, scope: !11929, file: !3, line: 3676, type: !1067)
!11941 = !DILocation(line: 3676, column: 74, scope: !11929)
!11942 = !DILocalVariable(name: "y", arg: 6, scope: !11929, file: !3, line: 3676, type: !1067)
!11943 = !DILocation(line: 3676, column: 81, scope: !11929)
!11944 = !DILocalVariable(name: "width", arg: 7, scope: !11929, file: !3, line: 3676, type: !1545)
!11945 = !DILocation(line: 3676, column: 90, scope: !11929)
!11946 = !DILocalVariable(name: "height", arg: 8, scope: !11929, file: !3, line: 3676, type: !1545)
!11947 = !DILocation(line: 3676, column: 103, scope: !11929)
!11948 = !DILocalVariable(name: "poin", arg: 9, scope: !11929, file: !3, line: 3676, type: !1543)
!11949 = !DILocation(line: 3676, column: 118, scope: !11929)
!11950 = !DILocalVariable(name: "min", arg: 10, scope: !11929, file: !3, line: 3676, type: !1534)
!11951 = !DILocation(line: 3676, column: 130, scope: !11929)
!11952 = !DILocalVariable(name: "max", arg: 11, scope: !11929, file: !3, line: 3676, type: !1534)
!11953 = !DILocation(line: 3676, column: 141, scope: !11929)
!11954 = !DILocalVariable(name: "a1", arg: 12, scope: !11929, file: !3, line: 3676, type: !1534)
!11955 = !DILocation(line: 3676, column: 152, scope: !11929)
!11956 = !DILocalVariable(name: "a2", arg: 13, scope: !11929, file: !3, line: 3676, type: !1534)
!11957 = !DILocation(line: 3676, column: 162, scope: !11929)
!11958 = !DILocalVariable(name: "tip", arg: 14, scope: !11929, file: !3, line: 3676, type: !1647)
!11959 = !DILocation(line: 3676, column: 179, scope: !11929)
!11960 = !DILocation(line: 3678, column: 22, scope: !11929)
!11961 = !DILocation(line: 3678, column: 29, scope: !11929)
!11962 = !DILocation(line: 3678, column: 34, scope: !11929)
!11963 = !DILocation(line: 3678, column: 55, scope: !11929)
!11964 = !DILocation(line: 3678, column: 63, scope: !11929)
!11965 = !DILocation(line: 3678, column: 69, scope: !11929)
!11966 = !DILocation(line: 3678, column: 72, scope: !11929)
!11967 = !DILocation(line: 3678, column: 75, scope: !11929)
!11968 = !DILocation(line: 3678, column: 82, scope: !11929)
!11969 = !DILocation(line: 3678, column: 99, scope: !11929)
!11970 = !DILocation(line: 3678, column: 90, scope: !11929)
!11971 = !DILocation(line: 3678, column: 105, scope: !11929)
!11972 = !DILocation(line: 3678, column: 110, scope: !11929)
!11973 = !DILocation(line: 3678, column: 115, scope: !11929)
!11974 = !DILocation(line: 3678, column: 119, scope: !11929)
!11975 = !DILocation(line: 3678, column: 123, scope: !11929)
!11976 = !DILocation(line: 3678, column: 9, scope: !11929)
!11977 = !DILocation(line: 3678, column: 2, scope: !11929)
!11978 = distinct !DISubprogram(name: "uiDefIconButBitF", scope: !3, file: !3, line: 3680, type: !11979, scopeLine: 3681, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!11979 = !DISubroutineType(types: !11980)
!11980 = !{!1558, !1695, !1067, !1067, !1067, !1067, !1067, !1067, !1545, !1545, !1543, !1534, !1534, !1534, !1534, !1647}
!11981 = !DILocalVariable(name: "block", arg: 1, scope: !11978, file: !3, line: 3680, type: !1695)
!11982 = !DILocation(line: 3680, column: 34, scope: !11978)
!11983 = !DILocalVariable(name: "type", arg: 2, scope: !11978, file: !3, line: 3680, type: !1067)
!11984 = !DILocation(line: 3680, column: 45, scope: !11978)
!11985 = !DILocalVariable(name: "bit", arg: 3, scope: !11978, file: !3, line: 3680, type: !1067)
!11986 = !DILocation(line: 3680, column: 55, scope: !11978)
!11987 = !DILocalVariable(name: "retval", arg: 4, scope: !11978, file: !3, line: 3680, type: !1067)
!11988 = !DILocation(line: 3680, column: 64, scope: !11978)
!11989 = !DILocalVariable(name: "icon", arg: 5, scope: !11978, file: !3, line: 3680, type: !1067)
!11990 = !DILocation(line: 3680, column: 76, scope: !11978)
!11991 = !DILocalVariable(name: "x", arg: 6, scope: !11978, file: !3, line: 3680, type: !1067)
!11992 = !DILocation(line: 3680, column: 86, scope: !11978)
!11993 = !DILocalVariable(name: "y", arg: 7, scope: !11978, file: !3, line: 3680, type: !1067)
!11994 = !DILocation(line: 3680, column: 93, scope: !11978)
!11995 = !DILocalVariable(name: "width", arg: 8, scope: !11978, file: !3, line: 3680, type: !1545)
!11996 = !DILocation(line: 3680, column: 102, scope: !11978)
!11997 = !DILocalVariable(name: "height", arg: 9, scope: !11978, file: !3, line: 3680, type: !1545)
!11998 = !DILocation(line: 3680, column: 115, scope: !11978)
!11999 = !DILocalVariable(name: "poin", arg: 10, scope: !11978, file: !3, line: 3680, type: !1543)
!12000 = !DILocation(line: 3680, column: 130, scope: !11978)
!12001 = !DILocalVariable(name: "min", arg: 11, scope: !11978, file: !3, line: 3680, type: !1534)
!12002 = !DILocation(line: 3680, column: 142, scope: !11978)
!12003 = !DILocalVariable(name: "max", arg: 12, scope: !11978, file: !3, line: 3680, type: !1534)
!12004 = !DILocation(line: 3680, column: 153, scope: !11978)
!12005 = !DILocalVariable(name: "a1", arg: 13, scope: !11978, file: !3, line: 3680, type: !1534)
!12006 = !DILocation(line: 3680, column: 164, scope: !11978)
!12007 = !DILocalVariable(name: "a2", arg: 14, scope: !11978, file: !3, line: 3680, type: !1534)
!12008 = !DILocation(line: 3680, column: 174, scope: !11978)
!12009 = !DILocalVariable(name: "tip", arg: 15, scope: !11978, file: !3, line: 3680, type: !1647)
!12010 = !DILocation(line: 3680, column: 191, scope: !11978)
!12011 = !DILocation(line: 3682, column: 25, scope: !11978)
!12012 = !DILocation(line: 3682, column: 32, scope: !11978)
!12013 = !DILocation(line: 3682, column: 37, scope: !11978)
!12014 = !DILocation(line: 3682, column: 58, scope: !11978)
!12015 = !DILocation(line: 3682, column: 63, scope: !11978)
!12016 = !DILocation(line: 3682, column: 71, scope: !11978)
!12017 = !DILocation(line: 3682, column: 77, scope: !11978)
!12018 = !DILocation(line: 3682, column: 80, scope: !11978)
!12019 = !DILocation(line: 3682, column: 83, scope: !11978)
!12020 = !DILocation(line: 3682, column: 90, scope: !11978)
!12021 = !DILocation(line: 3682, column: 107, scope: !11978)
!12022 = !DILocation(line: 3682, column: 98, scope: !11978)
!12023 = !DILocation(line: 3682, column: 113, scope: !11978)
!12024 = !DILocation(line: 3682, column: 118, scope: !11978)
!12025 = !DILocation(line: 3682, column: 123, scope: !11978)
!12026 = !DILocation(line: 3682, column: 127, scope: !11978)
!12027 = !DILocation(line: 3682, column: 131, scope: !11978)
!12028 = !DILocation(line: 3682, column: 9, scope: !11978)
!12029 = !DILocation(line: 3682, column: 2, scope: !11978)
!12030 = distinct !DISubprogram(name: "uiDefIconButBit", scope: !3, file: !3, line: 3665, type: !12031, scopeLine: 3666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!12031 = !DISubroutineType(types: !12032)
!12032 = !{!1558, !1695, !1067, !1067, !1067, !1067, !1067, !1067, !1545, !1545, !1535, !1534, !1534, !1534, !1534, !1647}
!12033 = !DILocalVariable(name: "block", arg: 1, scope: !12030, file: !3, line: 3665, type: !1695)
!12034 = !DILocation(line: 3665, column: 40, scope: !12030)
!12035 = !DILocalVariable(name: "type", arg: 2, scope: !12030, file: !3, line: 3665, type: !1067)
!12036 = !DILocation(line: 3665, column: 51, scope: !12030)
!12037 = !DILocalVariable(name: "bit", arg: 3, scope: !12030, file: !3, line: 3665, type: !1067)
!12038 = !DILocation(line: 3665, column: 61, scope: !12030)
!12039 = !DILocalVariable(name: "retval", arg: 4, scope: !12030, file: !3, line: 3665, type: !1067)
!12040 = !DILocation(line: 3665, column: 70, scope: !12030)
!12041 = !DILocalVariable(name: "icon", arg: 5, scope: !12030, file: !3, line: 3665, type: !1067)
!12042 = !DILocation(line: 3665, column: 82, scope: !12030)
!12043 = !DILocalVariable(name: "x", arg: 6, scope: !12030, file: !3, line: 3665, type: !1067)
!12044 = !DILocation(line: 3665, column: 92, scope: !12030)
!12045 = !DILocalVariable(name: "y", arg: 7, scope: !12030, file: !3, line: 3665, type: !1067)
!12046 = !DILocation(line: 3665, column: 99, scope: !12030)
!12047 = !DILocalVariable(name: "width", arg: 8, scope: !12030, file: !3, line: 3665, type: !1545)
!12048 = !DILocation(line: 3665, column: 108, scope: !12030)
!12049 = !DILocalVariable(name: "height", arg: 9, scope: !12030, file: !3, line: 3665, type: !1545)
!12050 = !DILocation(line: 3665, column: 121, scope: !12030)
!12051 = !DILocalVariable(name: "poin", arg: 10, scope: !12030, file: !3, line: 3665, type: !1535)
!12052 = !DILocation(line: 3665, column: 135, scope: !12030)
!12053 = !DILocalVariable(name: "min", arg: 11, scope: !12030, file: !3, line: 3665, type: !1534)
!12054 = !DILocation(line: 3665, column: 147, scope: !12030)
!12055 = !DILocalVariable(name: "max", arg: 12, scope: !12030, file: !3, line: 3665, type: !1534)
!12056 = !DILocation(line: 3665, column: 158, scope: !12030)
!12057 = !DILocalVariable(name: "a1", arg: 13, scope: !12030, file: !3, line: 3665, type: !1534)
!12058 = !DILocation(line: 3665, column: 169, scope: !12030)
!12059 = !DILocalVariable(name: "a2", arg: 14, scope: !12030, file: !3, line: 3665, type: !1534)
!12060 = !DILocation(line: 3665, column: 179, scope: !12030)
!12061 = !DILocalVariable(name: "tip", arg: 15, scope: !12030, file: !3, line: 3665, type: !1647)
!12062 = !DILocation(line: 3665, column: 195, scope: !12030)
!12063 = !DILocalVariable(name: "bitIdx", scope: !12030, file: !3, line: 3667, type: !1067)
!12064 = !DILocation(line: 3667, column: 6, scope: !12030)
!12065 = !DILocation(line: 3667, column: 28, scope: !12030)
!12066 = !DILocation(line: 3667, column: 15, scope: !12030)
!12067 = !DILocation(line: 3668, column: 6, scope: !12068)
!12068 = distinct !DILexicalBlock(scope: !12030, file: !3, line: 3668, column: 6)
!12069 = !DILocation(line: 3668, column: 13, scope: !12068)
!12070 = !DILocation(line: 3668, column: 6, scope: !12030)
!12071 = !DILocation(line: 3669, column: 3, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !12068, file: !3, line: 3668, column: 20)
!12073 = !DILocation(line: 3672, column: 23, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !12068, file: !3, line: 3671, column: 7)
!12075 = !DILocation(line: 3672, column: 30, scope: !12074)
!12076 = !DILocation(line: 3672, column: 35, scope: !12074)
!12077 = !DILocation(line: 3672, column: 55, scope: !12074)
!12078 = !DILocation(line: 3672, column: 53, scope: !12074)
!12079 = !DILocation(line: 3672, column: 63, scope: !12074)
!12080 = !DILocation(line: 3672, column: 71, scope: !12074)
!12081 = !DILocation(line: 3672, column: 77, scope: !12074)
!12082 = !DILocation(line: 3672, column: 80, scope: !12074)
!12083 = !DILocation(line: 3672, column: 83, scope: !12074)
!12084 = !DILocation(line: 3672, column: 90, scope: !12074)
!12085 = !DILocation(line: 3672, column: 98, scope: !12074)
!12086 = !DILocation(line: 3672, column: 104, scope: !12074)
!12087 = !DILocation(line: 3672, column: 109, scope: !12074)
!12088 = !DILocation(line: 3672, column: 114, scope: !12074)
!12089 = !DILocation(line: 3672, column: 118, scope: !12074)
!12090 = !DILocation(line: 3672, column: 122, scope: !12074)
!12091 = !DILocation(line: 3672, column: 10, scope: !12074)
!12092 = !DILocation(line: 3672, column: 3, scope: !12074)
!12093 = !DILocation(line: 3674, column: 1, scope: !12030)
!12094 = distinct !DISubprogram(name: "uiDefIconButI", scope: !3, file: !3, line: 3684, type: !12095, scopeLine: 3685, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!12095 = !DISubroutineType(types: !12096)
!12096 = !{!1558, !1695, !1067, !1067, !1067, !1067, !1067, !1545, !1545, !1546, !1534, !1534, !1534, !1534, !1647}
!12097 = !DILocalVariable(name: "block", arg: 1, scope: !12094, file: !3, line: 3684, type: !1695)
!12098 = !DILocation(line: 3684, column: 31, scope: !12094)
!12099 = !DILocalVariable(name: "type", arg: 2, scope: !12094, file: !3, line: 3684, type: !1067)
!12100 = !DILocation(line: 3684, column: 42, scope: !12094)
!12101 = !DILocalVariable(name: "retval", arg: 3, scope: !12094, file: !3, line: 3684, type: !1067)
!12102 = !DILocation(line: 3684, column: 52, scope: !12094)
!12103 = !DILocalVariable(name: "icon", arg: 4, scope: !12094, file: !3, line: 3684, type: !1067)
!12104 = !DILocation(line: 3684, column: 64, scope: !12094)
!12105 = !DILocalVariable(name: "x", arg: 5, scope: !12094, file: !3, line: 3684, type: !1067)
!12106 = !DILocation(line: 3684, column: 74, scope: !12094)
!12107 = !DILocalVariable(name: "y", arg: 6, scope: !12094, file: !3, line: 3684, type: !1067)
!12108 = !DILocation(line: 3684, column: 81, scope: !12094)
!12109 = !DILocalVariable(name: "width", arg: 7, scope: !12094, file: !3, line: 3684, type: !1545)
!12110 = !DILocation(line: 3684, column: 90, scope: !12094)
!12111 = !DILocalVariable(name: "height", arg: 8, scope: !12094, file: !3, line: 3684, type: !1545)
!12112 = !DILocation(line: 3684, column: 103, scope: !12094)
!12113 = !DILocalVariable(name: "poin", arg: 9, scope: !12094, file: !3, line: 3684, type: !1546)
!12114 = !DILocation(line: 3684, column: 116, scope: !12094)
!12115 = !DILocalVariable(name: "min", arg: 10, scope: !12094, file: !3, line: 3684, type: !1534)
!12116 = !DILocation(line: 3684, column: 128, scope: !12094)
!12117 = !DILocalVariable(name: "max", arg: 11, scope: !12094, file: !3, line: 3684, type: !1534)
!12118 = !DILocation(line: 3684, column: 139, scope: !12094)
!12119 = !DILocalVariable(name: "a1", arg: 12, scope: !12094, file: !3, line: 3684, type: !1534)
!12120 = !DILocation(line: 3684, column: 150, scope: !12094)
!12121 = !DILocalVariable(name: "a2", arg: 13, scope: !12094, file: !3, line: 3684, type: !1534)
!12122 = !DILocation(line: 3684, column: 160, scope: !12094)
!12123 = !DILocalVariable(name: "tip", arg: 14, scope: !12094, file: !3, line: 3684, type: !1647)
!12124 = !DILocation(line: 3684, column: 177, scope: !12094)
!12125 = !DILocation(line: 3686, column: 22, scope: !12094)
!12126 = !DILocation(line: 3686, column: 29, scope: !12094)
!12127 = !DILocation(line: 3686, column: 34, scope: !12094)
!12128 = !DILocation(line: 3686, column: 53, scope: !12094)
!12129 = !DILocation(line: 3686, column: 61, scope: !12094)
!12130 = !DILocation(line: 3686, column: 67, scope: !12094)
!12131 = !DILocation(line: 3686, column: 70, scope: !12094)
!12132 = !DILocation(line: 3686, column: 73, scope: !12094)
!12133 = !DILocation(line: 3686, column: 80, scope: !12094)
!12134 = !DILocation(line: 3686, column: 97, scope: !12094)
!12135 = !DILocation(line: 3686, column: 88, scope: !12094)
!12136 = !DILocation(line: 3686, column: 103, scope: !12094)
!12137 = !DILocation(line: 3686, column: 108, scope: !12094)
!12138 = !DILocation(line: 3686, column: 113, scope: !12094)
!12139 = !DILocation(line: 3686, column: 117, scope: !12094)
!12140 = !DILocation(line: 3686, column: 121, scope: !12094)
!12141 = !DILocation(line: 3686, column: 9, scope: !12094)
!12142 = !DILocation(line: 3686, column: 2, scope: !12094)
!12143 = distinct !DISubprogram(name: "uiDefIconButBitI", scope: !3, file: !3, line: 3688, type: !12144, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!12144 = !DISubroutineType(types: !12145)
!12145 = !{!1558, !1695, !1067, !1067, !1067, !1067, !1067, !1067, !1545, !1545, !1546, !1534, !1534, !1534, !1534, !1647}
!12146 = !DILocalVariable(name: "block", arg: 1, scope: !12143, file: !3, line: 3688, type: !1695)
!12147 = !DILocation(line: 3688, column: 34, scope: !12143)
!12148 = !DILocalVariable(name: "type", arg: 2, scope: !12143, file: !3, line: 3688, type: !1067)
!12149 = !DILocation(line: 3688, column: 45, scope: !12143)
!12150 = !DILocalVariable(name: "bit", arg: 3, scope: !12143, file: !3, line: 3688, type: !1067)
!12151 = !DILocation(line: 3688, column: 55, scope: !12143)
!12152 = !DILocalVariable(name: "retval", arg: 4, scope: !12143, file: !3, line: 3688, type: !1067)
!12153 = !DILocation(line: 3688, column: 64, scope: !12143)
!12154 = !DILocalVariable(name: "icon", arg: 5, scope: !12143, file: !3, line: 3688, type: !1067)
!12155 = !DILocation(line: 3688, column: 76, scope: !12143)
!12156 = !DILocalVariable(name: "x", arg: 6, scope: !12143, file: !3, line: 3688, type: !1067)
!12157 = !DILocation(line: 3688, column: 86, scope: !12143)
!12158 = !DILocalVariable(name: "y", arg: 7, scope: !12143, file: !3, line: 3688, type: !1067)
!12159 = !DILocation(line: 3688, column: 93, scope: !12143)
!12160 = !DILocalVariable(name: "width", arg: 8, scope: !12143, file: !3, line: 3688, type: !1545)
!12161 = !DILocation(line: 3688, column: 102, scope: !12143)
!12162 = !DILocalVariable(name: "height", arg: 9, scope: !12143, file: !3, line: 3688, type: !1545)
!12163 = !DILocation(line: 3688, column: 115, scope: !12143)
!12164 = !DILocalVariable(name: "poin", arg: 10, scope: !12143, file: !3, line: 3688, type: !1546)
!12165 = !DILocation(line: 3688, column: 128, scope: !12143)
!12166 = !DILocalVariable(name: "min", arg: 11, scope: !12143, file: !3, line: 3688, type: !1534)
!12167 = !DILocation(line: 3688, column: 140, scope: !12143)
!12168 = !DILocalVariable(name: "max", arg: 12, scope: !12143, file: !3, line: 3688, type: !1534)
!12169 = !DILocation(line: 3688, column: 151, scope: !12143)
!12170 = !DILocalVariable(name: "a1", arg: 13, scope: !12143, file: !3, line: 3688, type: !1534)
!12171 = !DILocation(line: 3688, column: 162, scope: !12143)
!12172 = !DILocalVariable(name: "a2", arg: 14, scope: !12143, file: !3, line: 3688, type: !1534)
!12173 = !DILocation(line: 3688, column: 172, scope: !12143)
!12174 = !DILocalVariable(name: "tip", arg: 15, scope: !12143, file: !3, line: 3688, type: !1647)
!12175 = !DILocation(line: 3688, column: 189, scope: !12143)
!12176 = !DILocation(line: 3690, column: 25, scope: !12143)
!12177 = !DILocation(line: 3690, column: 32, scope: !12143)
!12178 = !DILocation(line: 3690, column: 37, scope: !12143)
!12179 = !DILocation(line: 3690, column: 56, scope: !12143)
!12180 = !DILocation(line: 3690, column: 61, scope: !12143)
!12181 = !DILocation(line: 3690, column: 69, scope: !12143)
!12182 = !DILocation(line: 3690, column: 75, scope: !12143)
!12183 = !DILocation(line: 3690, column: 78, scope: !12143)
!12184 = !DILocation(line: 3690, column: 81, scope: !12143)
!12185 = !DILocation(line: 3690, column: 88, scope: !12143)
!12186 = !DILocation(line: 3690, column: 105, scope: !12143)
!12187 = !DILocation(line: 3690, column: 96, scope: !12143)
!12188 = !DILocation(line: 3690, column: 111, scope: !12143)
!12189 = !DILocation(line: 3690, column: 116, scope: !12143)
!12190 = !DILocation(line: 3690, column: 121, scope: !12143)
!12191 = !DILocation(line: 3690, column: 125, scope: !12143)
!12192 = !DILocation(line: 3690, column: 129, scope: !12143)
!12193 = !DILocation(line: 3690, column: 9, scope: !12143)
!12194 = !DILocation(line: 3690, column: 2, scope: !12143)
!12195 = distinct !DISubprogram(name: "uiDefIconButS", scope: !3, file: !3, line: 3692, type: !12196, scopeLine: 3693, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!12196 = !DISubroutineType(types: !12197)
!12197 = !{!1558, !1695, !1067, !1067, !1067, !1067, !1067, !1545, !1545, !1544, !1534, !1534, !1534, !1534, !1647}
!12198 = !DILocalVariable(name: "block", arg: 1, scope: !12195, file: !3, line: 3692, type: !1695)
!12199 = !DILocation(line: 3692, column: 31, scope: !12195)
!12200 = !DILocalVariable(name: "type", arg: 2, scope: !12195, file: !3, line: 3692, type: !1067)
!12201 = !DILocation(line: 3692, column: 42, scope: !12195)
!12202 = !DILocalVariable(name: "retval", arg: 3, scope: !12195, file: !3, line: 3692, type: !1067)
!12203 = !DILocation(line: 3692, column: 52, scope: !12195)
!12204 = !DILocalVariable(name: "icon", arg: 4, scope: !12195, file: !3, line: 3692, type: !1067)
!12205 = !DILocation(line: 3692, column: 64, scope: !12195)
!12206 = !DILocalVariable(name: "x", arg: 5, scope: !12195, file: !3, line: 3692, type: !1067)
!12207 = !DILocation(line: 3692, column: 74, scope: !12195)
!12208 = !DILocalVariable(name: "y", arg: 6, scope: !12195, file: !3, line: 3692, type: !1067)
!12209 = !DILocation(line: 3692, column: 81, scope: !12195)
!12210 = !DILocalVariable(name: "width", arg: 7, scope: !12195, file: !3, line: 3692, type: !1545)
!12211 = !DILocation(line: 3692, column: 90, scope: !12195)
!12212 = !DILocalVariable(name: "height", arg: 8, scope: !12195, file: !3, line: 3692, type: !1545)
!12213 = !DILocation(line: 3692, column: 103, scope: !12195)
!12214 = !DILocalVariable(name: "poin", arg: 9, scope: !12195, file: !3, line: 3692, type: !1544)
!12215 = !DILocation(line: 3692, column: 118, scope: !12195)
!12216 = !DILocalVariable(name: "min", arg: 10, scope: !12195, file: !3, line: 3692, type: !1534)
!12217 = !DILocation(line: 3692, column: 130, scope: !12195)
!12218 = !DILocalVariable(name: "max", arg: 11, scope: !12195, file: !3, line: 3692, type: !1534)
!12219 = !DILocation(line: 3692, column: 141, scope: !12195)
!12220 = !DILocalVariable(name: "a1", arg: 12, scope: !12195, file: !3, line: 3692, type: !1534)
!12221 = !DILocation(line: 3692, column: 152, scope: !12195)
!12222 = !DILocalVariable(name: "a2", arg: 13, scope: !12195, file: !3, line: 3692, type: !1534)
!12223 = !DILocation(line: 3692, column: 162, scope: !12195)
!12224 = !DILocalVariable(name: "tip", arg: 14, scope: !12195, file: !3, line: 3692, type: !1647)
!12225 = !DILocation(line: 3692, column: 179, scope: !12195)
!12226 = !DILocation(line: 3694, column: 22, scope: !12195)
!12227 = !DILocation(line: 3694, column: 29, scope: !12195)
!12228 = !DILocation(line: 3694, column: 34, scope: !12195)
!12229 = !DILocation(line: 3694, column: 55, scope: !12195)
!12230 = !DILocation(line: 3694, column: 63, scope: !12195)
!12231 = !DILocation(line: 3694, column: 69, scope: !12195)
!12232 = !DILocation(line: 3694, column: 72, scope: !12195)
!12233 = !DILocation(line: 3694, column: 75, scope: !12195)
!12234 = !DILocation(line: 3694, column: 82, scope: !12195)
!12235 = !DILocation(line: 3694, column: 99, scope: !12195)
!12236 = !DILocation(line: 3694, column: 90, scope: !12195)
!12237 = !DILocation(line: 3694, column: 105, scope: !12195)
!12238 = !DILocation(line: 3694, column: 110, scope: !12195)
!12239 = !DILocation(line: 3694, column: 115, scope: !12195)
!12240 = !DILocation(line: 3694, column: 119, scope: !12195)
!12241 = !DILocation(line: 3694, column: 123, scope: !12195)
!12242 = !DILocation(line: 3694, column: 9, scope: !12195)
!12243 = !DILocation(line: 3694, column: 2, scope: !12195)
!12244 = distinct !DISubprogram(name: "uiDefIconButBitS", scope: !3, file: !3, line: 3696, type: !12245, scopeLine: 3697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!12245 = !DISubroutineType(types: !12246)
!12246 = !{!1558, !1695, !1067, !1067, !1067, !1067, !1067, !1067, !1545, !1545, !1544, !1534, !1534, !1534, !1534, !1647}
!12247 = !DILocalVariable(name: "block", arg: 1, scope: !12244, file: !3, line: 3696, type: !1695)
!12248 = !DILocation(line: 3696, column: 34, scope: !12244)
!12249 = !DILocalVariable(name: "type", arg: 2, scope: !12244, file: !3, line: 3696, type: !1067)
!12250 = !DILocation(line: 3696, column: 45, scope: !12244)
!12251 = !DILocalVariable(name: "bit", arg: 3, scope: !12244, file: !3, line: 3696, type: !1067)
!12252 = !DILocation(line: 3696, column: 55, scope: !12244)
!12253 = !DILocalVariable(name: "retval", arg: 4, scope: !12244, file: !3, line: 3696, type: !1067)
!12254 = !DILocation(line: 3696, column: 64, scope: !12244)
!12255 = !DILocalVariable(name: "icon", arg: 5, scope: !12244, file: !3, line: 3696, type: !1067)
!12256 = !DILocation(line: 3696, column: 76, scope: !12244)
!12257 = !DILocalVariable(name: "x", arg: 6, scope: !12244, file: !3, line: 3696, type: !1067)
!12258 = !DILocation(line: 3696, column: 86, scope: !12244)
!12259 = !DILocalVariable(name: "y", arg: 7, scope: !12244, file: !3, line: 3696, type: !1067)
!12260 = !DILocation(line: 3696, column: 93, scope: !12244)
!12261 = !DILocalVariable(name: "width", arg: 8, scope: !12244, file: !3, line: 3696, type: !1545)
!12262 = !DILocation(line: 3696, column: 102, scope: !12244)
!12263 = !DILocalVariable(name: "height", arg: 9, scope: !12244, file: !3, line: 3696, type: !1545)
!12264 = !DILocation(line: 3696, column: 115, scope: !12244)
!12265 = !DILocalVariable(name: "poin", arg: 10, scope: !12244, file: !3, line: 3696, type: !1544)
!12266 = !DILocation(line: 3696, column: 130, scope: !12244)
!12267 = !DILocalVariable(name: "min", arg: 11, scope: !12244, file: !3, line: 3696, type: !1534)
!12268 = !DILocation(line: 3696, column: 142, scope: !12244)
!12269 = !DILocalVariable(name: "max", arg: 12, scope: !12244, file: !3, line: 3696, type: !1534)
!12270 = !DILocation(line: 3696, column: 153, scope: !12244)
!12271 = !DILocalVariable(name: "a1", arg: 13, scope: !12244, file: !3, line: 3696, type: !1534)
!12272 = !DILocation(line: 3696, column: 164, scope: !12244)
!12273 = !DILocalVariable(name: "a2", arg: 14, scope: !12244, file: !3, line: 3696, type: !1534)
!12274 = !DILocation(line: 3696, column: 174, scope: !12244)
!12275 = !DILocalVariable(name: "tip", arg: 15, scope: !12244, file: !3, line: 3696, type: !1647)
!12276 = !DILocation(line: 3696, column: 191, scope: !12244)
!12277 = !DILocation(line: 3698, column: 25, scope: !12244)
!12278 = !DILocation(line: 3698, column: 32, scope: !12244)
!12279 = !DILocation(line: 3698, column: 37, scope: !12244)
!12280 = !DILocation(line: 3698, column: 58, scope: !12244)
!12281 = !DILocation(line: 3698, column: 63, scope: !12244)
!12282 = !DILocation(line: 3698, column: 71, scope: !12244)
!12283 = !DILocation(line: 3698, column: 77, scope: !12244)
!12284 = !DILocation(line: 3698, column: 80, scope: !12244)
!12285 = !DILocation(line: 3698, column: 83, scope: !12244)
!12286 = !DILocation(line: 3698, column: 90, scope: !12244)
!12287 = !DILocation(line: 3698, column: 107, scope: !12244)
!12288 = !DILocation(line: 3698, column: 98, scope: !12244)
!12289 = !DILocation(line: 3698, column: 113, scope: !12244)
!12290 = !DILocation(line: 3698, column: 118, scope: !12244)
!12291 = !DILocation(line: 3698, column: 123, scope: !12244)
!12292 = !DILocation(line: 3698, column: 127, scope: !12244)
!12293 = !DILocation(line: 3698, column: 131, scope: !12244)
!12294 = !DILocation(line: 3698, column: 9, scope: !12244)
!12295 = !DILocation(line: 3698, column: 2, scope: !12244)
!12296 = distinct !DISubprogram(name: "uiDefIconButC", scope: !3, file: !3, line: 3700, type: !12297, scopeLine: 3701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!12297 = !DISubroutineType(types: !12298)
!12298 = !{!1558, !1695, !1067, !1067, !1067, !1067, !1067, !1545, !1545, !1541, !1534, !1534, !1534, !1534, !1647}
!12299 = !DILocalVariable(name: "block", arg: 1, scope: !12296, file: !3, line: 3700, type: !1695)
!12300 = !DILocation(line: 3700, column: 31, scope: !12296)
!12301 = !DILocalVariable(name: "type", arg: 2, scope: !12296, file: !3, line: 3700, type: !1067)
!12302 = !DILocation(line: 3700, column: 42, scope: !12296)
!12303 = !DILocalVariable(name: "retval", arg: 3, scope: !12296, file: !3, line: 3700, type: !1067)
!12304 = !DILocation(line: 3700, column: 52, scope: !12296)
!12305 = !DILocalVariable(name: "icon", arg: 4, scope: !12296, file: !3, line: 3700, type: !1067)
!12306 = !DILocation(line: 3700, column: 64, scope: !12296)
!12307 = !DILocalVariable(name: "x", arg: 5, scope: !12296, file: !3, line: 3700, type: !1067)
!12308 = !DILocation(line: 3700, column: 74, scope: !12296)
!12309 = !DILocalVariable(name: "y", arg: 6, scope: !12296, file: !3, line: 3700, type: !1067)
!12310 = !DILocation(line: 3700, column: 81, scope: !12296)
!12311 = !DILocalVariable(name: "width", arg: 7, scope: !12296, file: !3, line: 3700, type: !1545)
!12312 = !DILocation(line: 3700, column: 90, scope: !12296)
!12313 = !DILocalVariable(name: "height", arg: 8, scope: !12296, file: !3, line: 3700, type: !1545)
!12314 = !DILocation(line: 3700, column: 103, scope: !12296)
!12315 = !DILocalVariable(name: "poin", arg: 9, scope: !12296, file: !3, line: 3700, type: !1541)
!12316 = !DILocation(line: 3700, column: 117, scope: !12296)
!12317 = !DILocalVariable(name: "min", arg: 10, scope: !12296, file: !3, line: 3700, type: !1534)
!12318 = !DILocation(line: 3700, column: 129, scope: !12296)
!12319 = !DILocalVariable(name: "max", arg: 11, scope: !12296, file: !3, line: 3700, type: !1534)
!12320 = !DILocation(line: 3700, column: 140, scope: !12296)
!12321 = !DILocalVariable(name: "a1", arg: 12, scope: !12296, file: !3, line: 3700, type: !1534)
!12322 = !DILocation(line: 3700, column: 151, scope: !12296)
!12323 = !DILocalVariable(name: "a2", arg: 13, scope: !12296, file: !3, line: 3700, type: !1534)
!12324 = !DILocation(line: 3700, column: 161, scope: !12296)
!12325 = !DILocalVariable(name: "tip", arg: 14, scope: !12296, file: !3, line: 3700, type: !1647)
!12326 = !DILocation(line: 3700, column: 178, scope: !12296)
!12327 = !DILocation(line: 3702, column: 22, scope: !12296)
!12328 = !DILocation(line: 3702, column: 29, scope: !12296)
!12329 = !DILocation(line: 3702, column: 34, scope: !12296)
!12330 = !DILocation(line: 3702, column: 54, scope: !12296)
!12331 = !DILocation(line: 3702, column: 62, scope: !12296)
!12332 = !DILocation(line: 3702, column: 68, scope: !12296)
!12333 = !DILocation(line: 3702, column: 71, scope: !12296)
!12334 = !DILocation(line: 3702, column: 74, scope: !12296)
!12335 = !DILocation(line: 3702, column: 81, scope: !12296)
!12336 = !DILocation(line: 3702, column: 98, scope: !12296)
!12337 = !DILocation(line: 3702, column: 104, scope: !12296)
!12338 = !DILocation(line: 3702, column: 109, scope: !12296)
!12339 = !DILocation(line: 3702, column: 114, scope: !12296)
!12340 = !DILocation(line: 3702, column: 118, scope: !12296)
!12341 = !DILocation(line: 3702, column: 122, scope: !12296)
!12342 = !DILocation(line: 3702, column: 9, scope: !12296)
!12343 = !DILocation(line: 3702, column: 2, scope: !12296)
!12344 = distinct !DISubprogram(name: "uiDefIconButBitC", scope: !3, file: !3, line: 3704, type: !12345, scopeLine: 3705, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!12345 = !DISubroutineType(types: !12346)
!12346 = !{!1558, !1695, !1067, !1067, !1067, !1067, !1067, !1067, !1545, !1545, !1541, !1534, !1534, !1534, !1534, !1647}
!12347 = !DILocalVariable(name: "block", arg: 1, scope: !12344, file: !3, line: 3704, type: !1695)
!12348 = !DILocation(line: 3704, column: 34, scope: !12344)
!12349 = !DILocalVariable(name: "type", arg: 2, scope: !12344, file: !3, line: 3704, type: !1067)
!12350 = !DILocation(line: 3704, column: 45, scope: !12344)
!12351 = !DILocalVariable(name: "bit", arg: 3, scope: !12344, file: !3, line: 3704, type: !1067)
!12352 = !DILocation(line: 3704, column: 55, scope: !12344)
!12353 = !DILocalVariable(name: "retval", arg: 4, scope: !12344, file: !3, line: 3704, type: !1067)
!12354 = !DILocation(line: 3704, column: 64, scope: !12344)
!12355 = !DILocalVariable(name: "icon", arg: 5, scope: !12344, file: !3, line: 3704, type: !1067)
!12356 = !DILocation(line: 3704, column: 76, scope: !12344)
!12357 = !DILocalVariable(name: "x", arg: 6, scope: !12344, file: !3, line: 3704, type: !1067)
!12358 = !DILocation(line: 3704, column: 86, scope: !12344)
!12359 = !DILocalVariable(name: "y", arg: 7, scope: !12344, file: !3, line: 3704, type: !1067)
!12360 = !DILocation(line: 3704, column: 93, scope: !12344)
!12361 = !DILocalVariable(name: "width", arg: 8, scope: !12344, file: !3, line: 3704, type: !1545)
!12362 = !DILocation(line: 3704, column: 102, scope: !12344)
!12363 = !DILocalVariable(name: "height", arg: 9, scope: !12344, file: !3, line: 3704, type: !1545)
!12364 = !DILocation(line: 3704, column: 115, scope: !12344)
!12365 = !DILocalVariable(name: "poin", arg: 10, scope: !12344, file: !3, line: 3704, type: !1541)
!12366 = !DILocation(line: 3704, column: 129, scope: !12344)
!12367 = !DILocalVariable(name: "min", arg: 11, scope: !12344, file: !3, line: 3704, type: !1534)
!12368 = !DILocation(line: 3704, column: 141, scope: !12344)
!12369 = !DILocalVariable(name: "max", arg: 12, scope: !12344, file: !3, line: 3704, type: !1534)
!12370 = !DILocation(line: 3704, column: 152, scope: !12344)
!12371 = !DILocalVariable(name: "a1", arg: 13, scope: !12344, file: !3, line: 3704, type: !1534)
!12372 = !DILocation(line: 3704, column: 163, scope: !12344)
!12373 = !DILocalVariable(name: "a2", arg: 14, scope: !12344, file: !3, line: 3704, type: !1534)
!12374 = !DILocation(line: 3704, column: 173, scope: !12344)
!12375 = !DILocalVariable(name: "tip", arg: 15, scope: !12344, file: !3, line: 3704, type: !1647)
!12376 = !DILocation(line: 3704, column: 190, scope: !12344)
!12377 = !DILocation(line: 3706, column: 25, scope: !12344)
!12378 = !DILocation(line: 3706, column: 32, scope: !12344)
!12379 = !DILocation(line: 3706, column: 37, scope: !12344)
!12380 = !DILocation(line: 3706, column: 57, scope: !12344)
!12381 = !DILocation(line: 3706, column: 62, scope: !12344)
!12382 = !DILocation(line: 3706, column: 70, scope: !12344)
!12383 = !DILocation(line: 3706, column: 76, scope: !12344)
!12384 = !DILocation(line: 3706, column: 79, scope: !12344)
!12385 = !DILocation(line: 3706, column: 82, scope: !12344)
!12386 = !DILocation(line: 3706, column: 89, scope: !12344)
!12387 = !DILocation(line: 3706, column: 106, scope: !12344)
!12388 = !DILocation(line: 3706, column: 112, scope: !12344)
!12389 = !DILocation(line: 3706, column: 117, scope: !12344)
!12390 = !DILocation(line: 3706, column: 122, scope: !12344)
!12391 = !DILocation(line: 3706, column: 126, scope: !12344)
!12392 = !DILocation(line: 3706, column: 130, scope: !12344)
!12393 = !DILocation(line: 3706, column: 9, scope: !12344)
!12394 = !DILocation(line: 3706, column: 2, scope: !12344)
!12395 = distinct !DISubprogram(name: "uiDefIconButR", scope: !3, file: !3, line: 3708, type: !12396, scopeLine: 3709, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!12396 = !DISubroutineType(types: !12397)
!12397 = !{!1558, !1695, !1067, !1067, !1067, !1067, !1067, !1545, !1545, !8894, !1647, !1067, !1534, !1534, !1534, !1534, !1647}
!12398 = !DILocalVariable(name: "block", arg: 1, scope: !12395, file: !3, line: 3708, type: !1695)
!12399 = !DILocation(line: 3708, column: 31, scope: !12395)
!12400 = !DILocalVariable(name: "type", arg: 2, scope: !12395, file: !3, line: 3708, type: !1067)
!12401 = !DILocation(line: 3708, column: 42, scope: !12395)
!12402 = !DILocalVariable(name: "retval", arg: 3, scope: !12395, file: !3, line: 3708, type: !1067)
!12403 = !DILocation(line: 3708, column: 52, scope: !12395)
!12404 = !DILocalVariable(name: "icon", arg: 4, scope: !12395, file: !3, line: 3708, type: !1067)
!12405 = !DILocation(line: 3708, column: 64, scope: !12395)
!12406 = !DILocalVariable(name: "x", arg: 5, scope: !12395, file: !3, line: 3708, type: !1067)
!12407 = !DILocation(line: 3708, column: 74, scope: !12395)
!12408 = !DILocalVariable(name: "y", arg: 6, scope: !12395, file: !3, line: 3708, type: !1067)
!12409 = !DILocation(line: 3708, column: 81, scope: !12395)
!12410 = !DILocalVariable(name: "width", arg: 7, scope: !12395, file: !3, line: 3708, type: !1545)
!12411 = !DILocation(line: 3708, column: 90, scope: !12395)
!12412 = !DILocalVariable(name: "height", arg: 8, scope: !12395, file: !3, line: 3708, type: !1545)
!12413 = !DILocation(line: 3708, column: 103, scope: !12395)
!12414 = !DILocalVariable(name: "ptr", arg: 9, scope: !12395, file: !3, line: 3708, type: !8894)
!12415 = !DILocation(line: 3708, column: 123, scope: !12395)
!12416 = !DILocalVariable(name: "propname", arg: 10, scope: !12395, file: !3, line: 3708, type: !1647)
!12417 = !DILocation(line: 3708, column: 140, scope: !12395)
!12418 = !DILocalVariable(name: "index", arg: 11, scope: !12395, file: !3, line: 3708, type: !1067)
!12419 = !DILocation(line: 3708, column: 154, scope: !12395)
!12420 = !DILocalVariable(name: "min", arg: 12, scope: !12395, file: !3, line: 3708, type: !1534)
!12421 = !DILocation(line: 3708, column: 167, scope: !12395)
!12422 = !DILocalVariable(name: "max", arg: 13, scope: !12395, file: !3, line: 3708, type: !1534)
!12423 = !DILocation(line: 3708, column: 178, scope: !12395)
!12424 = !DILocalVariable(name: "a1", arg: 14, scope: !12395, file: !3, line: 3708, type: !1534)
!12425 = !DILocation(line: 3708, column: 189, scope: !12395)
!12426 = !DILocalVariable(name: "a2", arg: 15, scope: !12395, file: !3, line: 3708, type: !1534)
!12427 = !DILocation(line: 3708, column: 199, scope: !12395)
!12428 = !DILocalVariable(name: "tip", arg: 16, scope: !12395, file: !3, line: 3708, type: !1647)
!12429 = !DILocation(line: 3708, column: 216, scope: !12395)
!12430 = !DILocalVariable(name: "but", scope: !12395, file: !3, line: 3710, type: !1558)
!12431 = !DILocation(line: 3710, column: 9, scope: !12395)
!12432 = !DILocation(line: 3711, column: 32, scope: !12395)
!12433 = !DILocation(line: 3711, column: 39, scope: !12395)
!12434 = !DILocation(line: 3711, column: 45, scope: !12395)
!12435 = !DILocation(line: 3711, column: 57, scope: !12395)
!12436 = !DILocation(line: 3711, column: 60, scope: !12395)
!12437 = !DILocation(line: 3711, column: 63, scope: !12395)
!12438 = !DILocation(line: 3711, column: 70, scope: !12395)
!12439 = !DILocation(line: 3711, column: 78, scope: !12395)
!12440 = !DILocation(line: 3711, column: 83, scope: !12395)
!12441 = !DILocation(line: 3711, column: 93, scope: !12395)
!12442 = !DILocation(line: 3711, column: 100, scope: !12395)
!12443 = !DILocation(line: 3711, column: 105, scope: !12395)
!12444 = !DILocation(line: 3711, column: 110, scope: !12395)
!12445 = !DILocation(line: 3711, column: 114, scope: !12395)
!12446 = !DILocation(line: 3711, column: 118, scope: !12395)
!12447 = !DILocation(line: 3711, column: 8, scope: !12395)
!12448 = !DILocation(line: 3711, column: 6, scope: !12395)
!12449 = !DILocation(line: 3712, column: 27, scope: !12395)
!12450 = !DILocation(line: 3712, column: 32, scope: !12395)
!12451 = !DILocation(line: 3712, column: 2, scope: !12395)
!12452 = !DILocation(line: 3713, column: 9, scope: !12395)
!12453 = !DILocation(line: 3713, column: 2, scope: !12395)
!12454 = distinct !DISubprogram(name: "uiDefIconButR_prop", scope: !3, file: !3, line: 3715, type: !12455, scopeLine: 3716, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!12455 = !DISubroutineType(types: !12456)
!12456 = !{!1558, !1695, !1067, !1067, !1067, !1067, !1067, !1545, !1545, !8894, !3171, !1067, !1534, !1534, !1534, !1534, !1647}
!12457 = !DILocalVariable(name: "block", arg: 1, scope: !12454, file: !3, line: 3715, type: !1695)
!12458 = !DILocation(line: 3715, column: 36, scope: !12454)
!12459 = !DILocalVariable(name: "type", arg: 2, scope: !12454, file: !3, line: 3715, type: !1067)
!12460 = !DILocation(line: 3715, column: 47, scope: !12454)
!12461 = !DILocalVariable(name: "retval", arg: 3, scope: !12454, file: !3, line: 3715, type: !1067)
!12462 = !DILocation(line: 3715, column: 57, scope: !12454)
!12463 = !DILocalVariable(name: "icon", arg: 4, scope: !12454, file: !3, line: 3715, type: !1067)
!12464 = !DILocation(line: 3715, column: 69, scope: !12454)
!12465 = !DILocalVariable(name: "x", arg: 5, scope: !12454, file: !3, line: 3715, type: !1067)
!12466 = !DILocation(line: 3715, column: 79, scope: !12454)
!12467 = !DILocalVariable(name: "y", arg: 6, scope: !12454, file: !3, line: 3715, type: !1067)
!12468 = !DILocation(line: 3715, column: 86, scope: !12454)
!12469 = !DILocalVariable(name: "width", arg: 7, scope: !12454, file: !3, line: 3715, type: !1545)
!12470 = !DILocation(line: 3715, column: 95, scope: !12454)
!12471 = !DILocalVariable(name: "height", arg: 8, scope: !12454, file: !3, line: 3715, type: !1545)
!12472 = !DILocation(line: 3715, column: 108, scope: !12454)
!12473 = !DILocalVariable(name: "ptr", arg: 9, scope: !12454, file: !3, line: 3715, type: !8894)
!12474 = !DILocation(line: 3715, column: 128, scope: !12454)
!12475 = !DILocalVariable(name: "prop", arg: 10, scope: !12454, file: !3, line: 3715, type: !3171)
!12476 = !DILocation(line: 3715, column: 146, scope: !12454)
!12477 = !DILocalVariable(name: "index", arg: 11, scope: !12454, file: !3, line: 3715, type: !1067)
!12478 = !DILocation(line: 3715, column: 156, scope: !12454)
!12479 = !DILocalVariable(name: "min", arg: 12, scope: !12454, file: !3, line: 3715, type: !1534)
!12480 = !DILocation(line: 3715, column: 169, scope: !12454)
!12481 = !DILocalVariable(name: "max", arg: 13, scope: !12454, file: !3, line: 3715, type: !1534)
!12482 = !DILocation(line: 3715, column: 180, scope: !12454)
!12483 = !DILocalVariable(name: "a1", arg: 14, scope: !12454, file: !3, line: 3715, type: !1534)
!12484 = !DILocation(line: 3715, column: 191, scope: !12454)
!12485 = !DILocalVariable(name: "a2", arg: 15, scope: !12454, file: !3, line: 3715, type: !1534)
!12486 = !DILocation(line: 3715, column: 201, scope: !12454)
!12487 = !DILocalVariable(name: "tip", arg: 16, scope: !12454, file: !3, line: 3715, type: !1647)
!12488 = !DILocation(line: 3715, column: 218, scope: !12454)
!12489 = !DILocalVariable(name: "but", scope: !12454, file: !3, line: 3717, type: !1558)
!12490 = !DILocation(line: 3717, column: 9, scope: !12454)
!12491 = !DILocation(line: 3718, column: 23, scope: !12454)
!12492 = !DILocation(line: 3718, column: 30, scope: !12454)
!12493 = !DILocation(line: 3718, column: 36, scope: !12454)
!12494 = !DILocation(line: 3718, column: 48, scope: !12454)
!12495 = !DILocation(line: 3718, column: 51, scope: !12454)
!12496 = !DILocation(line: 3718, column: 54, scope: !12454)
!12497 = !DILocation(line: 3718, column: 61, scope: !12454)
!12498 = !DILocation(line: 3718, column: 69, scope: !12454)
!12499 = !DILocation(line: 3718, column: 74, scope: !12454)
!12500 = !DILocation(line: 3718, column: 80, scope: !12454)
!12501 = !DILocation(line: 3718, column: 87, scope: !12454)
!12502 = !DILocation(line: 3718, column: 92, scope: !12454)
!12503 = !DILocation(line: 3718, column: 97, scope: !12454)
!12504 = !DILocation(line: 3718, column: 101, scope: !12454)
!12505 = !DILocation(line: 3718, column: 105, scope: !12454)
!12506 = !DILocation(line: 3718, column: 8, scope: !12454)
!12507 = !DILocation(line: 3718, column: 6, scope: !12454)
!12508 = !DILocation(line: 3719, column: 27, scope: !12454)
!12509 = !DILocation(line: 3719, column: 32, scope: !12454)
!12510 = !DILocation(line: 3719, column: 2, scope: !12454)
!12511 = !DILocation(line: 3720, column: 9, scope: !12454)
!12512 = !DILocation(line: 3720, column: 2, scope: !12454)
!12513 = distinct !DISubprogram(name: "uiDefIconButO_ptr", scope: !3, file: !3, line: 3723, type: !12514, scopeLine: 3724, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!12514 = !DISubroutineType(types: !12515)
!12515 = !{!1558, !1695, !1067, !5372, !1067, !1067, !1067, !1067, !1545, !1545, !1647}
!12516 = !DILocalVariable(name: "block", arg: 1, scope: !12513, file: !3, line: 3723, type: !1695)
!12517 = !DILocation(line: 3723, column: 35, scope: !12513)
!12518 = !DILocalVariable(name: "type", arg: 2, scope: !12513, file: !3, line: 3723, type: !1067)
!12519 = !DILocation(line: 3723, column: 46, scope: !12513)
!12520 = !DILocalVariable(name: "ot", arg: 3, scope: !12513, file: !3, line: 3723, type: !5372)
!12521 = !DILocation(line: 3723, column: 68, scope: !12513)
!12522 = !DILocalVariable(name: "opcontext", arg: 4, scope: !12513, file: !3, line: 3723, type: !1067)
!12523 = !DILocation(line: 3723, column: 76, scope: !12513)
!12524 = !DILocalVariable(name: "icon", arg: 5, scope: !12513, file: !3, line: 3723, type: !1067)
!12525 = !DILocation(line: 3723, column: 91, scope: !12513)
!12526 = !DILocalVariable(name: "x", arg: 6, scope: !12513, file: !3, line: 3723, type: !1067)
!12527 = !DILocation(line: 3723, column: 101, scope: !12513)
!12528 = !DILocalVariable(name: "y", arg: 7, scope: !12513, file: !3, line: 3723, type: !1067)
!12529 = !DILocation(line: 3723, column: 108, scope: !12513)
!12530 = !DILocalVariable(name: "width", arg: 8, scope: !12513, file: !3, line: 3723, type: !1545)
!12531 = !DILocation(line: 3723, column: 117, scope: !12513)
!12532 = !DILocalVariable(name: "height", arg: 9, scope: !12513, file: !3, line: 3723, type: !1545)
!12533 = !DILocation(line: 3723, column: 130, scope: !12513)
!12534 = !DILocalVariable(name: "tip", arg: 10, scope: !12513, file: !3, line: 3723, type: !1647)
!12535 = !DILocation(line: 3723, column: 150, scope: !12513)
!12536 = !DILocalVariable(name: "but", scope: !12513, file: !3, line: 3725, type: !1558)
!12537 = !DILocation(line: 3725, column: 9, scope: !12513)
!12538 = !DILocation(line: 3726, column: 32, scope: !12513)
!12539 = !DILocation(line: 3726, column: 39, scope: !12513)
!12540 = !DILocation(line: 3726, column: 45, scope: !12513)
!12541 = !DILocation(line: 3726, column: 49, scope: !12513)
!12542 = !DILocation(line: 3726, column: 64, scope: !12513)
!12543 = !DILocation(line: 3726, column: 67, scope: !12513)
!12544 = !DILocation(line: 3726, column: 70, scope: !12513)
!12545 = !DILocation(line: 3726, column: 77, scope: !12513)
!12546 = !DILocation(line: 3726, column: 85, scope: !12513)
!12547 = !DILocation(line: 3726, column: 8, scope: !12513)
!12548 = !DILocation(line: 3726, column: 6, scope: !12513)
!12549 = !DILocation(line: 3727, column: 27, scope: !12513)
!12550 = !DILocation(line: 3727, column: 32, scope: !12513)
!12551 = !DILocation(line: 3727, column: 2, scope: !12513)
!12552 = !DILocation(line: 3728, column: 9, scope: !12513)
!12553 = !DILocation(line: 3728, column: 2, scope: !12513)
!12554 = distinct !DISubprogram(name: "uiDefIconButO", scope: !3, file: !3, line: 3730, type: !12555, scopeLine: 3731, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!12555 = !DISubroutineType(types: !12556)
!12556 = !{!1558, !1695, !1067, !1647, !1067, !1067, !1067, !1067, !1545, !1545, !1647}
!12557 = !DILocalVariable(name: "block", arg: 1, scope: !12554, file: !3, line: 3730, type: !1695)
!12558 = !DILocation(line: 3730, column: 31, scope: !12554)
!12559 = !DILocalVariable(name: "type", arg: 2, scope: !12554, file: !3, line: 3730, type: !1067)
!12560 = !DILocation(line: 3730, column: 42, scope: !12554)
!12561 = !DILocalVariable(name: "opname", arg: 3, scope: !12554, file: !3, line: 3730, type: !1647)
!12562 = !DILocation(line: 3730, column: 60, scope: !12554)
!12563 = !DILocalVariable(name: "opcontext", arg: 4, scope: !12554, file: !3, line: 3730, type: !1067)
!12564 = !DILocation(line: 3730, column: 72, scope: !12554)
!12565 = !DILocalVariable(name: "icon", arg: 5, scope: !12554, file: !3, line: 3730, type: !1067)
!12566 = !DILocation(line: 3730, column: 87, scope: !12554)
!12567 = !DILocalVariable(name: "x", arg: 6, scope: !12554, file: !3, line: 3730, type: !1067)
!12568 = !DILocation(line: 3730, column: 97, scope: !12554)
!12569 = !DILocalVariable(name: "y", arg: 7, scope: !12554, file: !3, line: 3730, type: !1067)
!12570 = !DILocation(line: 3730, column: 104, scope: !12554)
!12571 = !DILocalVariable(name: "width", arg: 8, scope: !12554, file: !3, line: 3730, type: !1545)
!12572 = !DILocation(line: 3730, column: 113, scope: !12554)
!12573 = !DILocalVariable(name: "height", arg: 9, scope: !12554, file: !3, line: 3730, type: !1545)
!12574 = !DILocation(line: 3730, column: 126, scope: !12554)
!12575 = !DILocalVariable(name: "tip", arg: 10, scope: !12554, file: !3, line: 3730, type: !1647)
!12576 = !DILocation(line: 3730, column: 146, scope: !12554)
!12577 = !DILocalVariable(name: "ot", scope: !12554, file: !3, line: 3732, type: !5372)
!12578 = !DILocation(line: 3732, column: 18, scope: !12554)
!12579 = !DILocation(line: 3732, column: 44, scope: !12554)
!12580 = !DILocation(line: 3732, column: 23, scope: !12554)
!12581 = !DILocation(line: 3733, column: 27, scope: !12554)
!12582 = !DILocation(line: 3733, column: 34, scope: !12554)
!12583 = !DILocation(line: 3733, column: 40, scope: !12554)
!12584 = !DILocation(line: 3733, column: 44, scope: !12554)
!12585 = !DILocation(line: 3733, column: 55, scope: !12554)
!12586 = !DILocation(line: 3733, column: 61, scope: !12554)
!12587 = !DILocation(line: 3733, column: 64, scope: !12554)
!12588 = !DILocation(line: 3733, column: 67, scope: !12554)
!12589 = !DILocation(line: 3733, column: 74, scope: !12554)
!12590 = !DILocation(line: 3733, column: 82, scope: !12554)
!12591 = !DILocation(line: 3733, column: 9, scope: !12554)
!12592 = !DILocation(line: 3733, column: 2, scope: !12554)
!12593 = distinct !DISubprogram(name: "uiDefIconTextBut", scope: !3, file: !3, line: 3737, type: !10686, scopeLine: 3738, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!12594 = !DILocalVariable(name: "block", arg: 1, scope: !12593, file: !3, line: 3737, type: !1695)
!12595 = !DILocation(line: 3737, column: 34, scope: !12593)
!12596 = !DILocalVariable(name: "type", arg: 2, scope: !12593, file: !3, line: 3737, type: !1067)
!12597 = !DILocation(line: 3737, column: 45, scope: !12593)
!12598 = !DILocalVariable(name: "retval", arg: 3, scope: !12593, file: !3, line: 3737, type: !1067)
!12599 = !DILocation(line: 3737, column: 55, scope: !12593)
!12600 = !DILocalVariable(name: "icon", arg: 4, scope: !12593, file: !3, line: 3737, type: !1067)
!12601 = !DILocation(line: 3737, column: 67, scope: !12593)
!12602 = !DILocalVariable(name: "str", arg: 5, scope: !12593, file: !3, line: 3737, type: !1647)
!12603 = !DILocation(line: 3737, column: 85, scope: !12593)
!12604 = !DILocalVariable(name: "x", arg: 6, scope: !12593, file: !3, line: 3737, type: !1067)
!12605 = !DILocation(line: 3737, column: 94, scope: !12593)
!12606 = !DILocalVariable(name: "y", arg: 7, scope: !12593, file: !3, line: 3737, type: !1067)
!12607 = !DILocation(line: 3737, column: 101, scope: !12593)
!12608 = !DILocalVariable(name: "width", arg: 8, scope: !12593, file: !3, line: 3737, type: !1545)
!12609 = !DILocation(line: 3737, column: 110, scope: !12593)
!12610 = !DILocalVariable(name: "height", arg: 9, scope: !12593, file: !3, line: 3737, type: !1545)
!12611 = !DILocation(line: 3737, column: 123, scope: !12593)
!12612 = !DILocalVariable(name: "poin", arg: 10, scope: !12593, file: !3, line: 3737, type: !1535)
!12613 = !DILocation(line: 3737, column: 137, scope: !12593)
!12614 = !DILocalVariable(name: "min", arg: 11, scope: !12593, file: !3, line: 3737, type: !1534)
!12615 = !DILocation(line: 3737, column: 149, scope: !12593)
!12616 = !DILocalVariable(name: "max", arg: 12, scope: !12593, file: !3, line: 3737, type: !1534)
!12617 = !DILocation(line: 3737, column: 160, scope: !12593)
!12618 = !DILocalVariable(name: "a1", arg: 13, scope: !12593, file: !3, line: 3737, type: !1534)
!12619 = !DILocation(line: 3737, column: 171, scope: !12593)
!12620 = !DILocalVariable(name: "a2", arg: 14, scope: !12593, file: !3, line: 3737, type: !1534)
!12621 = !DILocation(line: 3737, column: 181, scope: !12593)
!12622 = !DILocalVariable(name: "tip", arg: 15, scope: !12593, file: !3, line: 3737, type: !1647)
!12623 = !DILocation(line: 3737, column: 198, scope: !12593)
!12624 = !DILocalVariable(name: "but", scope: !12593, file: !3, line: 3739, type: !1558)
!12625 = !DILocation(line: 3739, column: 9, scope: !12593)
!12626 = !DILocation(line: 3739, column: 26, scope: !12593)
!12627 = !DILocation(line: 3739, column: 33, scope: !12593)
!12628 = !DILocation(line: 3739, column: 39, scope: !12593)
!12629 = !DILocation(line: 3739, column: 47, scope: !12593)
!12630 = !DILocation(line: 3739, column: 52, scope: !12593)
!12631 = !DILocation(line: 3739, column: 55, scope: !12593)
!12632 = !DILocation(line: 3739, column: 58, scope: !12593)
!12633 = !DILocation(line: 3739, column: 65, scope: !12593)
!12634 = !DILocation(line: 3739, column: 73, scope: !12593)
!12635 = !DILocation(line: 3739, column: 79, scope: !12593)
!12636 = !DILocation(line: 3739, column: 84, scope: !12593)
!12637 = !DILocation(line: 3739, column: 89, scope: !12593)
!12638 = !DILocation(line: 3739, column: 93, scope: !12593)
!12639 = !DILocation(line: 3739, column: 97, scope: !12593)
!12640 = !DILocation(line: 3739, column: 15, scope: !12593)
!12641 = !DILocation(line: 3740, column: 27, scope: !12593)
!12642 = !DILocation(line: 3740, column: 32, scope: !12593)
!12643 = !DILocation(line: 3740, column: 2, scope: !12593)
!12644 = !DILocation(line: 3741, column: 2, scope: !12593)
!12645 = !DILocation(line: 3741, column: 7, scope: !12593)
!12646 = !DILocation(line: 3741, column: 16, scope: !12593)
!12647 = !DILocation(line: 3742, column: 9, scope: !12593)
!12648 = !DILocation(line: 3742, column: 2, scope: !12593)
!12649 = distinct !DISubprogram(name: "uiDefIconTextButF", scope: !3, file: !3, line: 3755, type: !10634, scopeLine: 3756, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!12650 = !DILocalVariable(name: "block", arg: 1, scope: !12649, file: !3, line: 3755, type: !1695)
!12651 = !DILocation(line: 3755, column: 35, scope: !12649)
!12652 = !DILocalVariable(name: "type", arg: 2, scope: !12649, file: !3, line: 3755, type: !1067)
!12653 = !DILocation(line: 3755, column: 46, scope: !12649)
!12654 = !DILocalVariable(name: "retval", arg: 3, scope: !12649, file: !3, line: 3755, type: !1067)
!12655 = !DILocation(line: 3755, column: 56, scope: !12649)
!12656 = !DILocalVariable(name: "icon", arg: 4, scope: !12649, file: !3, line: 3755, type: !1067)
!12657 = !DILocation(line: 3755, column: 68, scope: !12649)
!12658 = !DILocalVariable(name: "str", arg: 5, scope: !12649, file: !3, line: 3755, type: !1647)
!12659 = !DILocation(line: 3755, column: 86, scope: !12649)
!12660 = !DILocalVariable(name: "x", arg: 6, scope: !12649, file: !3, line: 3755, type: !1067)
!12661 = !DILocation(line: 3755, column: 95, scope: !12649)
!12662 = !DILocalVariable(name: "y", arg: 7, scope: !12649, file: !3, line: 3755, type: !1067)
!12663 = !DILocation(line: 3755, column: 102, scope: !12649)
!12664 = !DILocalVariable(name: "width", arg: 8, scope: !12649, file: !3, line: 3755, type: !1545)
!12665 = !DILocation(line: 3755, column: 111, scope: !12649)
!12666 = !DILocalVariable(name: "height", arg: 9, scope: !12649, file: !3, line: 3755, type: !1545)
!12667 = !DILocation(line: 3755, column: 124, scope: !12649)
!12668 = !DILocalVariable(name: "poin", arg: 10, scope: !12649, file: !3, line: 3755, type: !1543)
!12669 = !DILocation(line: 3755, column: 139, scope: !12649)
!12670 = !DILocalVariable(name: "min", arg: 11, scope: !12649, file: !3, line: 3755, type: !1534)
!12671 = !DILocation(line: 3755, column: 151, scope: !12649)
!12672 = !DILocalVariable(name: "max", arg: 12, scope: !12649, file: !3, line: 3755, type: !1534)
!12673 = !DILocation(line: 3755, column: 162, scope: !12649)
!12674 = !DILocalVariable(name: "a1", arg: 13, scope: !12649, file: !3, line: 3755, type: !1534)
!12675 = !DILocation(line: 3755, column: 173, scope: !12649)
!12676 = !DILocalVariable(name: "a2", arg: 14, scope: !12649, file: !3, line: 3755, type: !1534)
!12677 = !DILocation(line: 3755, column: 183, scope: !12649)
!12678 = !DILocalVariable(name: "tip", arg: 15, scope: !12649, file: !3, line: 3755, type: !1647)
!12679 = !DILocation(line: 3755, column: 200, scope: !12649)
!12680 = !DILocation(line: 3757, column: 26, scope: !12649)
!12681 = !DILocation(line: 3757, column: 33, scope: !12649)
!12682 = !DILocation(line: 3757, column: 38, scope: !12649)
!12683 = !DILocation(line: 3757, column: 59, scope: !12649)
!12684 = !DILocation(line: 3757, column: 67, scope: !12649)
!12685 = !DILocation(line: 3757, column: 73, scope: !12649)
!12686 = !DILocation(line: 3757, column: 78, scope: !12649)
!12687 = !DILocation(line: 3757, column: 81, scope: !12649)
!12688 = !DILocation(line: 3757, column: 84, scope: !12649)
!12689 = !DILocation(line: 3757, column: 91, scope: !12649)
!12690 = !DILocation(line: 3757, column: 108, scope: !12649)
!12691 = !DILocation(line: 3757, column: 99, scope: !12649)
!12692 = !DILocation(line: 3757, column: 114, scope: !12649)
!12693 = !DILocation(line: 3757, column: 119, scope: !12649)
!12694 = !DILocation(line: 3757, column: 124, scope: !12649)
!12695 = !DILocation(line: 3757, column: 128, scope: !12649)
!12696 = !DILocation(line: 3757, column: 132, scope: !12649)
!12697 = !DILocation(line: 3757, column: 9, scope: !12649)
!12698 = !DILocation(line: 3757, column: 2, scope: !12649)
!12699 = distinct !DISubprogram(name: "uiDefIconTextButBitF", scope: !3, file: !3, line: 3759, type: !12700, scopeLine: 3760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!12700 = !DISubroutineType(types: !12701)
!12701 = !{!1558, !1695, !1067, !1067, !1067, !1067, !1647, !1067, !1067, !1545, !1545, !1543, !1534, !1534, !1534, !1534, !1647}
!12702 = !DILocalVariable(name: "block", arg: 1, scope: !12699, file: !3, line: 3759, type: !1695)
!12703 = !DILocation(line: 3759, column: 38, scope: !12699)
!12704 = !DILocalVariable(name: "type", arg: 2, scope: !12699, file: !3, line: 3759, type: !1067)
!12705 = !DILocation(line: 3759, column: 49, scope: !12699)
!12706 = !DILocalVariable(name: "bit", arg: 3, scope: !12699, file: !3, line: 3759, type: !1067)
!12707 = !DILocation(line: 3759, column: 59, scope: !12699)
!12708 = !DILocalVariable(name: "retval", arg: 4, scope: !12699, file: !3, line: 3759, type: !1067)
!12709 = !DILocation(line: 3759, column: 68, scope: !12699)
!12710 = !DILocalVariable(name: "icon", arg: 5, scope: !12699, file: !3, line: 3759, type: !1067)
!12711 = !DILocation(line: 3759, column: 80, scope: !12699)
!12712 = !DILocalVariable(name: "str", arg: 6, scope: !12699, file: !3, line: 3759, type: !1647)
!12713 = !DILocation(line: 3759, column: 98, scope: !12699)
!12714 = !DILocalVariable(name: "x", arg: 7, scope: !12699, file: !3, line: 3759, type: !1067)
!12715 = !DILocation(line: 3759, column: 107, scope: !12699)
!12716 = !DILocalVariable(name: "y", arg: 8, scope: !12699, file: !3, line: 3759, type: !1067)
!12717 = !DILocation(line: 3759, column: 114, scope: !12699)
!12718 = !DILocalVariable(name: "width", arg: 9, scope: !12699, file: !3, line: 3759, type: !1545)
!12719 = !DILocation(line: 3759, column: 123, scope: !12699)
!12720 = !DILocalVariable(name: "height", arg: 10, scope: !12699, file: !3, line: 3759, type: !1545)
!12721 = !DILocation(line: 3759, column: 136, scope: !12699)
!12722 = !DILocalVariable(name: "poin", arg: 11, scope: !12699, file: !3, line: 3759, type: !1543)
!12723 = !DILocation(line: 3759, column: 151, scope: !12699)
!12724 = !DILocalVariable(name: "min", arg: 12, scope: !12699, file: !3, line: 3759, type: !1534)
!12725 = !DILocation(line: 3759, column: 163, scope: !12699)
!12726 = !DILocalVariable(name: "max", arg: 13, scope: !12699, file: !3, line: 3759, type: !1534)
!12727 = !DILocation(line: 3759, column: 174, scope: !12699)
!12728 = !DILocalVariable(name: "a1", arg: 14, scope: !12699, file: !3, line: 3759, type: !1534)
!12729 = !DILocation(line: 3759, column: 185, scope: !12699)
!12730 = !DILocalVariable(name: "a2", arg: 15, scope: !12699, file: !3, line: 3759, type: !1534)
!12731 = !DILocation(line: 3759, column: 195, scope: !12699)
!12732 = !DILocalVariable(name: "tip", arg: 16, scope: !12699, file: !3, line: 3759, type: !1647)
!12733 = !DILocation(line: 3759, column: 212, scope: !12699)
!12734 = !DILocation(line: 3761, column: 29, scope: !12699)
!12735 = !DILocation(line: 3761, column: 36, scope: !12699)
!12736 = !DILocation(line: 3761, column: 41, scope: !12699)
!12737 = !DILocation(line: 3761, column: 62, scope: !12699)
!12738 = !DILocation(line: 3761, column: 67, scope: !12699)
!12739 = !DILocation(line: 3761, column: 75, scope: !12699)
!12740 = !DILocation(line: 3761, column: 81, scope: !12699)
!12741 = !DILocation(line: 3761, column: 86, scope: !12699)
!12742 = !DILocation(line: 3761, column: 89, scope: !12699)
!12743 = !DILocation(line: 3761, column: 92, scope: !12699)
!12744 = !DILocation(line: 3761, column: 99, scope: !12699)
!12745 = !DILocation(line: 3761, column: 116, scope: !12699)
!12746 = !DILocation(line: 3761, column: 107, scope: !12699)
!12747 = !DILocation(line: 3761, column: 122, scope: !12699)
!12748 = !DILocation(line: 3761, column: 127, scope: !12699)
!12749 = !DILocation(line: 3761, column: 132, scope: !12699)
!12750 = !DILocation(line: 3761, column: 136, scope: !12699)
!12751 = !DILocation(line: 3761, column: 140, scope: !12699)
!12752 = !DILocation(line: 3761, column: 9, scope: !12699)
!12753 = !DILocation(line: 3761, column: 2, scope: !12699)
!12754 = distinct !DISubprogram(name: "uiDefIconTextButBit", scope: !3, file: !3, line: 3744, type: !12755, scopeLine: 3745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!12755 = !DISubroutineType(types: !12756)
!12756 = !{!1558, !1695, !1067, !1067, !1067, !1067, !1647, !1067, !1067, !1545, !1545, !1535, !1534, !1534, !1534, !1534, !1647}
!12757 = !DILocalVariable(name: "block", arg: 1, scope: !12754, file: !3, line: 3744, type: !1695)
!12758 = !DILocation(line: 3744, column: 44, scope: !12754)
!12759 = !DILocalVariable(name: "type", arg: 2, scope: !12754, file: !3, line: 3744, type: !1067)
!12760 = !DILocation(line: 3744, column: 55, scope: !12754)
!12761 = !DILocalVariable(name: "bit", arg: 3, scope: !12754, file: !3, line: 3744, type: !1067)
!12762 = !DILocation(line: 3744, column: 65, scope: !12754)
!12763 = !DILocalVariable(name: "retval", arg: 4, scope: !12754, file: !3, line: 3744, type: !1067)
!12764 = !DILocation(line: 3744, column: 74, scope: !12754)
!12765 = !DILocalVariable(name: "icon", arg: 5, scope: !12754, file: !3, line: 3744, type: !1067)
!12766 = !DILocation(line: 3744, column: 86, scope: !12754)
!12767 = !DILocalVariable(name: "str", arg: 6, scope: !12754, file: !3, line: 3744, type: !1647)
!12768 = !DILocation(line: 3744, column: 104, scope: !12754)
!12769 = !DILocalVariable(name: "x", arg: 7, scope: !12754, file: !3, line: 3744, type: !1067)
!12770 = !DILocation(line: 3744, column: 113, scope: !12754)
!12771 = !DILocalVariable(name: "y", arg: 8, scope: !12754, file: !3, line: 3744, type: !1067)
!12772 = !DILocation(line: 3744, column: 120, scope: !12754)
!12773 = !DILocalVariable(name: "width", arg: 9, scope: !12754, file: !3, line: 3744, type: !1545)
!12774 = !DILocation(line: 3744, column: 129, scope: !12754)
!12775 = !DILocalVariable(name: "height", arg: 10, scope: !12754, file: !3, line: 3744, type: !1545)
!12776 = !DILocation(line: 3744, column: 142, scope: !12754)
!12777 = !DILocalVariable(name: "poin", arg: 11, scope: !12754, file: !3, line: 3744, type: !1535)
!12778 = !DILocation(line: 3744, column: 156, scope: !12754)
!12779 = !DILocalVariable(name: "min", arg: 12, scope: !12754, file: !3, line: 3744, type: !1534)
!12780 = !DILocation(line: 3744, column: 168, scope: !12754)
!12781 = !DILocalVariable(name: "max", arg: 13, scope: !12754, file: !3, line: 3744, type: !1534)
!12782 = !DILocation(line: 3744, column: 179, scope: !12754)
!12783 = !DILocalVariable(name: "a1", arg: 14, scope: !12754, file: !3, line: 3744, type: !1534)
!12784 = !DILocation(line: 3744, column: 190, scope: !12754)
!12785 = !DILocalVariable(name: "a2", arg: 15, scope: !12754, file: !3, line: 3744, type: !1534)
!12786 = !DILocation(line: 3744, column: 200, scope: !12754)
!12787 = !DILocalVariable(name: "tip", arg: 16, scope: !12754, file: !3, line: 3744, type: !1647)
!12788 = !DILocation(line: 3744, column: 217, scope: !12754)
!12789 = !DILocalVariable(name: "bitIdx", scope: !12754, file: !3, line: 3746, type: !1067)
!12790 = !DILocation(line: 3746, column: 6, scope: !12754)
!12791 = !DILocation(line: 3746, column: 28, scope: !12754)
!12792 = !DILocation(line: 3746, column: 15, scope: !12754)
!12793 = !DILocation(line: 3747, column: 6, scope: !12794)
!12794 = distinct !DILexicalBlock(scope: !12754, file: !3, line: 3747, column: 6)
!12795 = !DILocation(line: 3747, column: 13, scope: !12794)
!12796 = !DILocation(line: 3747, column: 6, scope: !12754)
!12797 = !DILocation(line: 3748, column: 3, scope: !12798)
!12798 = distinct !DILexicalBlock(scope: !12794, file: !3, line: 3747, column: 20)
!12799 = !DILocation(line: 3751, column: 27, scope: !12800)
!12800 = distinct !DILexicalBlock(scope: !12794, file: !3, line: 3750, column: 7)
!12801 = !DILocation(line: 3751, column: 34, scope: !12800)
!12802 = !DILocation(line: 3751, column: 39, scope: !12800)
!12803 = !DILocation(line: 3751, column: 59, scope: !12800)
!12804 = !DILocation(line: 3751, column: 57, scope: !12800)
!12805 = !DILocation(line: 3751, column: 67, scope: !12800)
!12806 = !DILocation(line: 3751, column: 75, scope: !12800)
!12807 = !DILocation(line: 3751, column: 81, scope: !12800)
!12808 = !DILocation(line: 3751, column: 86, scope: !12800)
!12809 = !DILocation(line: 3751, column: 89, scope: !12800)
!12810 = !DILocation(line: 3751, column: 92, scope: !12800)
!12811 = !DILocation(line: 3751, column: 99, scope: !12800)
!12812 = !DILocation(line: 3751, column: 107, scope: !12800)
!12813 = !DILocation(line: 3751, column: 113, scope: !12800)
!12814 = !DILocation(line: 3751, column: 118, scope: !12800)
!12815 = !DILocation(line: 3751, column: 123, scope: !12800)
!12816 = !DILocation(line: 3751, column: 127, scope: !12800)
!12817 = !DILocation(line: 3751, column: 131, scope: !12800)
!12818 = !DILocation(line: 3751, column: 10, scope: !12800)
!12819 = !DILocation(line: 3751, column: 3, scope: !12800)
!12820 = !DILocation(line: 3753, column: 1, scope: !12754)
!12821 = distinct !DISubprogram(name: "uiDefIconTextButI", scope: !3, file: !3, line: 3763, type: !10799, scopeLine: 3764, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!12822 = !DILocalVariable(name: "block", arg: 1, scope: !12821, file: !3, line: 3763, type: !1695)
!12823 = !DILocation(line: 3763, column: 35, scope: !12821)
!12824 = !DILocalVariable(name: "type", arg: 2, scope: !12821, file: !3, line: 3763, type: !1067)
!12825 = !DILocation(line: 3763, column: 46, scope: !12821)
!12826 = !DILocalVariable(name: "retval", arg: 3, scope: !12821, file: !3, line: 3763, type: !1067)
!12827 = !DILocation(line: 3763, column: 56, scope: !12821)
!12828 = !DILocalVariable(name: "icon", arg: 4, scope: !12821, file: !3, line: 3763, type: !1067)
!12829 = !DILocation(line: 3763, column: 68, scope: !12821)
!12830 = !DILocalVariable(name: "str", arg: 5, scope: !12821, file: !3, line: 3763, type: !1647)
!12831 = !DILocation(line: 3763, column: 86, scope: !12821)
!12832 = !DILocalVariable(name: "x", arg: 6, scope: !12821, file: !3, line: 3763, type: !1067)
!12833 = !DILocation(line: 3763, column: 95, scope: !12821)
!12834 = !DILocalVariable(name: "y", arg: 7, scope: !12821, file: !3, line: 3763, type: !1067)
!12835 = !DILocation(line: 3763, column: 102, scope: !12821)
!12836 = !DILocalVariable(name: "width", arg: 8, scope: !12821, file: !3, line: 3763, type: !1545)
!12837 = !DILocation(line: 3763, column: 111, scope: !12821)
!12838 = !DILocalVariable(name: "height", arg: 9, scope: !12821, file: !3, line: 3763, type: !1545)
!12839 = !DILocation(line: 3763, column: 124, scope: !12821)
!12840 = !DILocalVariable(name: "poin", arg: 10, scope: !12821, file: !3, line: 3763, type: !1546)
!12841 = !DILocation(line: 3763, column: 137, scope: !12821)
!12842 = !DILocalVariable(name: "min", arg: 11, scope: !12821, file: !3, line: 3763, type: !1534)
!12843 = !DILocation(line: 3763, column: 149, scope: !12821)
!12844 = !DILocalVariable(name: "max", arg: 12, scope: !12821, file: !3, line: 3763, type: !1534)
!12845 = !DILocation(line: 3763, column: 160, scope: !12821)
!12846 = !DILocalVariable(name: "a1", arg: 13, scope: !12821, file: !3, line: 3763, type: !1534)
!12847 = !DILocation(line: 3763, column: 171, scope: !12821)
!12848 = !DILocalVariable(name: "a2", arg: 14, scope: !12821, file: !3, line: 3763, type: !1534)
!12849 = !DILocation(line: 3763, column: 181, scope: !12821)
!12850 = !DILocalVariable(name: "tip", arg: 15, scope: !12821, file: !3, line: 3763, type: !1647)
!12851 = !DILocation(line: 3763, column: 198, scope: !12821)
!12852 = !DILocation(line: 3765, column: 26, scope: !12821)
!12853 = !DILocation(line: 3765, column: 33, scope: !12821)
!12854 = !DILocation(line: 3765, column: 38, scope: !12821)
!12855 = !DILocation(line: 3765, column: 57, scope: !12821)
!12856 = !DILocation(line: 3765, column: 65, scope: !12821)
!12857 = !DILocation(line: 3765, column: 71, scope: !12821)
!12858 = !DILocation(line: 3765, column: 76, scope: !12821)
!12859 = !DILocation(line: 3765, column: 79, scope: !12821)
!12860 = !DILocation(line: 3765, column: 82, scope: !12821)
!12861 = !DILocation(line: 3765, column: 89, scope: !12821)
!12862 = !DILocation(line: 3765, column: 106, scope: !12821)
!12863 = !DILocation(line: 3765, column: 97, scope: !12821)
!12864 = !DILocation(line: 3765, column: 112, scope: !12821)
!12865 = !DILocation(line: 3765, column: 117, scope: !12821)
!12866 = !DILocation(line: 3765, column: 122, scope: !12821)
!12867 = !DILocation(line: 3765, column: 126, scope: !12821)
!12868 = !DILocation(line: 3765, column: 130, scope: !12821)
!12869 = !DILocation(line: 3765, column: 9, scope: !12821)
!12870 = !DILocation(line: 3765, column: 2, scope: !12821)
!12871 = distinct !DISubprogram(name: "uiDefIconTextButBitI", scope: !3, file: !3, line: 3767, type: !12872, scopeLine: 3768, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!12872 = !DISubroutineType(types: !12873)
!12873 = !{!1558, !1695, !1067, !1067, !1067, !1067, !1647, !1067, !1067, !1545, !1545, !1546, !1534, !1534, !1534, !1534, !1647}
!12874 = !DILocalVariable(name: "block", arg: 1, scope: !12871, file: !3, line: 3767, type: !1695)
!12875 = !DILocation(line: 3767, column: 38, scope: !12871)
!12876 = !DILocalVariable(name: "type", arg: 2, scope: !12871, file: !3, line: 3767, type: !1067)
!12877 = !DILocation(line: 3767, column: 49, scope: !12871)
!12878 = !DILocalVariable(name: "bit", arg: 3, scope: !12871, file: !3, line: 3767, type: !1067)
!12879 = !DILocation(line: 3767, column: 59, scope: !12871)
!12880 = !DILocalVariable(name: "retval", arg: 4, scope: !12871, file: !3, line: 3767, type: !1067)
!12881 = !DILocation(line: 3767, column: 68, scope: !12871)
!12882 = !DILocalVariable(name: "icon", arg: 5, scope: !12871, file: !3, line: 3767, type: !1067)
!12883 = !DILocation(line: 3767, column: 80, scope: !12871)
!12884 = !DILocalVariable(name: "str", arg: 6, scope: !12871, file: !3, line: 3767, type: !1647)
!12885 = !DILocation(line: 3767, column: 98, scope: !12871)
!12886 = !DILocalVariable(name: "x", arg: 7, scope: !12871, file: !3, line: 3767, type: !1067)
!12887 = !DILocation(line: 3767, column: 107, scope: !12871)
!12888 = !DILocalVariable(name: "y", arg: 8, scope: !12871, file: !3, line: 3767, type: !1067)
!12889 = !DILocation(line: 3767, column: 114, scope: !12871)
!12890 = !DILocalVariable(name: "width", arg: 9, scope: !12871, file: !3, line: 3767, type: !1545)
!12891 = !DILocation(line: 3767, column: 123, scope: !12871)
!12892 = !DILocalVariable(name: "height", arg: 10, scope: !12871, file: !3, line: 3767, type: !1545)
!12893 = !DILocation(line: 3767, column: 136, scope: !12871)
!12894 = !DILocalVariable(name: "poin", arg: 11, scope: !12871, file: !3, line: 3767, type: !1546)
!12895 = !DILocation(line: 3767, column: 149, scope: !12871)
!12896 = !DILocalVariable(name: "min", arg: 12, scope: !12871, file: !3, line: 3767, type: !1534)
!12897 = !DILocation(line: 3767, column: 161, scope: !12871)
!12898 = !DILocalVariable(name: "max", arg: 13, scope: !12871, file: !3, line: 3767, type: !1534)
!12899 = !DILocation(line: 3767, column: 172, scope: !12871)
!12900 = !DILocalVariable(name: "a1", arg: 14, scope: !12871, file: !3, line: 3767, type: !1534)
!12901 = !DILocation(line: 3767, column: 183, scope: !12871)
!12902 = !DILocalVariable(name: "a2", arg: 15, scope: !12871, file: !3, line: 3767, type: !1534)
!12903 = !DILocation(line: 3767, column: 193, scope: !12871)
!12904 = !DILocalVariable(name: "tip", arg: 16, scope: !12871, file: !3, line: 3767, type: !1647)
!12905 = !DILocation(line: 3767, column: 210, scope: !12871)
!12906 = !DILocation(line: 3769, column: 29, scope: !12871)
!12907 = !DILocation(line: 3769, column: 36, scope: !12871)
!12908 = !DILocation(line: 3769, column: 41, scope: !12871)
!12909 = !DILocation(line: 3769, column: 60, scope: !12871)
!12910 = !DILocation(line: 3769, column: 65, scope: !12871)
!12911 = !DILocation(line: 3769, column: 73, scope: !12871)
!12912 = !DILocation(line: 3769, column: 79, scope: !12871)
!12913 = !DILocation(line: 3769, column: 84, scope: !12871)
!12914 = !DILocation(line: 3769, column: 87, scope: !12871)
!12915 = !DILocation(line: 3769, column: 90, scope: !12871)
!12916 = !DILocation(line: 3769, column: 97, scope: !12871)
!12917 = !DILocation(line: 3769, column: 114, scope: !12871)
!12918 = !DILocation(line: 3769, column: 105, scope: !12871)
!12919 = !DILocation(line: 3769, column: 120, scope: !12871)
!12920 = !DILocation(line: 3769, column: 125, scope: !12871)
!12921 = !DILocation(line: 3769, column: 130, scope: !12871)
!12922 = !DILocation(line: 3769, column: 134, scope: !12871)
!12923 = !DILocation(line: 3769, column: 138, scope: !12871)
!12924 = !DILocation(line: 3769, column: 9, scope: !12871)
!12925 = !DILocation(line: 3769, column: 2, scope: !12871)
!12926 = distinct !DISubprogram(name: "uiDefIconTextButS", scope: !3, file: !3, line: 3771, type: !10900, scopeLine: 3772, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!12927 = !DILocalVariable(name: "block", arg: 1, scope: !12926, file: !3, line: 3771, type: !1695)
!12928 = !DILocation(line: 3771, column: 35, scope: !12926)
!12929 = !DILocalVariable(name: "type", arg: 2, scope: !12926, file: !3, line: 3771, type: !1067)
!12930 = !DILocation(line: 3771, column: 46, scope: !12926)
!12931 = !DILocalVariable(name: "retval", arg: 3, scope: !12926, file: !3, line: 3771, type: !1067)
!12932 = !DILocation(line: 3771, column: 56, scope: !12926)
!12933 = !DILocalVariable(name: "icon", arg: 4, scope: !12926, file: !3, line: 3771, type: !1067)
!12934 = !DILocation(line: 3771, column: 68, scope: !12926)
!12935 = !DILocalVariable(name: "str", arg: 5, scope: !12926, file: !3, line: 3771, type: !1647)
!12936 = !DILocation(line: 3771, column: 86, scope: !12926)
!12937 = !DILocalVariable(name: "x", arg: 6, scope: !12926, file: !3, line: 3771, type: !1067)
!12938 = !DILocation(line: 3771, column: 95, scope: !12926)
!12939 = !DILocalVariable(name: "y", arg: 7, scope: !12926, file: !3, line: 3771, type: !1067)
!12940 = !DILocation(line: 3771, column: 102, scope: !12926)
!12941 = !DILocalVariable(name: "width", arg: 8, scope: !12926, file: !3, line: 3771, type: !1545)
!12942 = !DILocation(line: 3771, column: 111, scope: !12926)
!12943 = !DILocalVariable(name: "height", arg: 9, scope: !12926, file: !3, line: 3771, type: !1545)
!12944 = !DILocation(line: 3771, column: 124, scope: !12926)
!12945 = !DILocalVariable(name: "poin", arg: 10, scope: !12926, file: !3, line: 3771, type: !1544)
!12946 = !DILocation(line: 3771, column: 139, scope: !12926)
!12947 = !DILocalVariable(name: "min", arg: 11, scope: !12926, file: !3, line: 3771, type: !1534)
!12948 = !DILocation(line: 3771, column: 151, scope: !12926)
!12949 = !DILocalVariable(name: "max", arg: 12, scope: !12926, file: !3, line: 3771, type: !1534)
!12950 = !DILocation(line: 3771, column: 162, scope: !12926)
!12951 = !DILocalVariable(name: "a1", arg: 13, scope: !12926, file: !3, line: 3771, type: !1534)
!12952 = !DILocation(line: 3771, column: 173, scope: !12926)
!12953 = !DILocalVariable(name: "a2", arg: 14, scope: !12926, file: !3, line: 3771, type: !1534)
!12954 = !DILocation(line: 3771, column: 183, scope: !12926)
!12955 = !DILocalVariable(name: "tip", arg: 15, scope: !12926, file: !3, line: 3771, type: !1647)
!12956 = !DILocation(line: 3771, column: 200, scope: !12926)
!12957 = !DILocation(line: 3773, column: 26, scope: !12926)
!12958 = !DILocation(line: 3773, column: 33, scope: !12926)
!12959 = !DILocation(line: 3773, column: 38, scope: !12926)
!12960 = !DILocation(line: 3773, column: 59, scope: !12926)
!12961 = !DILocation(line: 3773, column: 67, scope: !12926)
!12962 = !DILocation(line: 3773, column: 73, scope: !12926)
!12963 = !DILocation(line: 3773, column: 78, scope: !12926)
!12964 = !DILocation(line: 3773, column: 81, scope: !12926)
!12965 = !DILocation(line: 3773, column: 84, scope: !12926)
!12966 = !DILocation(line: 3773, column: 91, scope: !12926)
!12967 = !DILocation(line: 3773, column: 108, scope: !12926)
!12968 = !DILocation(line: 3773, column: 99, scope: !12926)
!12969 = !DILocation(line: 3773, column: 114, scope: !12926)
!12970 = !DILocation(line: 3773, column: 119, scope: !12926)
!12971 = !DILocation(line: 3773, column: 124, scope: !12926)
!12972 = !DILocation(line: 3773, column: 128, scope: !12926)
!12973 = !DILocation(line: 3773, column: 132, scope: !12926)
!12974 = !DILocation(line: 3773, column: 9, scope: !12926)
!12975 = !DILocation(line: 3773, column: 2, scope: !12926)
!12976 = distinct !DISubprogram(name: "uiDefIconTextButBitS", scope: !3, file: !3, line: 3775, type: !12977, scopeLine: 3776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!12977 = !DISubroutineType(types: !12978)
!12978 = !{!1558, !1695, !1067, !1067, !1067, !1067, !1647, !1067, !1067, !1545, !1545, !1544, !1534, !1534, !1534, !1534, !1647}
!12979 = !DILocalVariable(name: "block", arg: 1, scope: !12976, file: !3, line: 3775, type: !1695)
!12980 = !DILocation(line: 3775, column: 38, scope: !12976)
!12981 = !DILocalVariable(name: "type", arg: 2, scope: !12976, file: !3, line: 3775, type: !1067)
!12982 = !DILocation(line: 3775, column: 49, scope: !12976)
!12983 = !DILocalVariable(name: "bit", arg: 3, scope: !12976, file: !3, line: 3775, type: !1067)
!12984 = !DILocation(line: 3775, column: 59, scope: !12976)
!12985 = !DILocalVariable(name: "retval", arg: 4, scope: !12976, file: !3, line: 3775, type: !1067)
!12986 = !DILocation(line: 3775, column: 68, scope: !12976)
!12987 = !DILocalVariable(name: "icon", arg: 5, scope: !12976, file: !3, line: 3775, type: !1067)
!12988 = !DILocation(line: 3775, column: 80, scope: !12976)
!12989 = !DILocalVariable(name: "str", arg: 6, scope: !12976, file: !3, line: 3775, type: !1647)
!12990 = !DILocation(line: 3775, column: 98, scope: !12976)
!12991 = !DILocalVariable(name: "x", arg: 7, scope: !12976, file: !3, line: 3775, type: !1067)
!12992 = !DILocation(line: 3775, column: 107, scope: !12976)
!12993 = !DILocalVariable(name: "y", arg: 8, scope: !12976, file: !3, line: 3775, type: !1067)
!12994 = !DILocation(line: 3775, column: 114, scope: !12976)
!12995 = !DILocalVariable(name: "width", arg: 9, scope: !12976, file: !3, line: 3775, type: !1545)
!12996 = !DILocation(line: 3775, column: 123, scope: !12976)
!12997 = !DILocalVariable(name: "height", arg: 10, scope: !12976, file: !3, line: 3775, type: !1545)
!12998 = !DILocation(line: 3775, column: 136, scope: !12976)
!12999 = !DILocalVariable(name: "poin", arg: 11, scope: !12976, file: !3, line: 3775, type: !1544)
!13000 = !DILocation(line: 3775, column: 151, scope: !12976)
!13001 = !DILocalVariable(name: "min", arg: 12, scope: !12976, file: !3, line: 3775, type: !1534)
!13002 = !DILocation(line: 3775, column: 163, scope: !12976)
!13003 = !DILocalVariable(name: "max", arg: 13, scope: !12976, file: !3, line: 3775, type: !1534)
!13004 = !DILocation(line: 3775, column: 174, scope: !12976)
!13005 = !DILocalVariable(name: "a1", arg: 14, scope: !12976, file: !3, line: 3775, type: !1534)
!13006 = !DILocation(line: 3775, column: 185, scope: !12976)
!13007 = !DILocalVariable(name: "a2", arg: 15, scope: !12976, file: !3, line: 3775, type: !1534)
!13008 = !DILocation(line: 3775, column: 195, scope: !12976)
!13009 = !DILocalVariable(name: "tip", arg: 16, scope: !12976, file: !3, line: 3775, type: !1647)
!13010 = !DILocation(line: 3775, column: 212, scope: !12976)
!13011 = !DILocation(line: 3777, column: 29, scope: !12976)
!13012 = !DILocation(line: 3777, column: 36, scope: !12976)
!13013 = !DILocation(line: 3777, column: 41, scope: !12976)
!13014 = !DILocation(line: 3777, column: 62, scope: !12976)
!13015 = !DILocation(line: 3777, column: 67, scope: !12976)
!13016 = !DILocation(line: 3777, column: 75, scope: !12976)
!13017 = !DILocation(line: 3777, column: 81, scope: !12976)
!13018 = !DILocation(line: 3777, column: 86, scope: !12976)
!13019 = !DILocation(line: 3777, column: 89, scope: !12976)
!13020 = !DILocation(line: 3777, column: 92, scope: !12976)
!13021 = !DILocation(line: 3777, column: 99, scope: !12976)
!13022 = !DILocation(line: 3777, column: 116, scope: !12976)
!13023 = !DILocation(line: 3777, column: 107, scope: !12976)
!13024 = !DILocation(line: 3777, column: 122, scope: !12976)
!13025 = !DILocation(line: 3777, column: 127, scope: !12976)
!13026 = !DILocation(line: 3777, column: 132, scope: !12976)
!13027 = !DILocation(line: 3777, column: 136, scope: !12976)
!13028 = !DILocation(line: 3777, column: 140, scope: !12976)
!13029 = !DILocation(line: 3777, column: 9, scope: !12976)
!13030 = !DILocation(line: 3777, column: 2, scope: !12976)
!13031 = distinct !DISubprogram(name: "uiDefIconTextButC", scope: !3, file: !3, line: 3779, type: !11000, scopeLine: 3780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13032 = !DILocalVariable(name: "block", arg: 1, scope: !13031, file: !3, line: 3779, type: !1695)
!13033 = !DILocation(line: 3779, column: 35, scope: !13031)
!13034 = !DILocalVariable(name: "type", arg: 2, scope: !13031, file: !3, line: 3779, type: !1067)
!13035 = !DILocation(line: 3779, column: 46, scope: !13031)
!13036 = !DILocalVariable(name: "retval", arg: 3, scope: !13031, file: !3, line: 3779, type: !1067)
!13037 = !DILocation(line: 3779, column: 56, scope: !13031)
!13038 = !DILocalVariable(name: "icon", arg: 4, scope: !13031, file: !3, line: 3779, type: !1067)
!13039 = !DILocation(line: 3779, column: 68, scope: !13031)
!13040 = !DILocalVariable(name: "str", arg: 5, scope: !13031, file: !3, line: 3779, type: !1647)
!13041 = !DILocation(line: 3779, column: 86, scope: !13031)
!13042 = !DILocalVariable(name: "x", arg: 6, scope: !13031, file: !3, line: 3779, type: !1067)
!13043 = !DILocation(line: 3779, column: 95, scope: !13031)
!13044 = !DILocalVariable(name: "y", arg: 7, scope: !13031, file: !3, line: 3779, type: !1067)
!13045 = !DILocation(line: 3779, column: 102, scope: !13031)
!13046 = !DILocalVariable(name: "width", arg: 8, scope: !13031, file: !3, line: 3779, type: !1545)
!13047 = !DILocation(line: 3779, column: 111, scope: !13031)
!13048 = !DILocalVariable(name: "height", arg: 9, scope: !13031, file: !3, line: 3779, type: !1545)
!13049 = !DILocation(line: 3779, column: 124, scope: !13031)
!13050 = !DILocalVariable(name: "poin", arg: 10, scope: !13031, file: !3, line: 3779, type: !1541)
!13051 = !DILocation(line: 3779, column: 138, scope: !13031)
!13052 = !DILocalVariable(name: "min", arg: 11, scope: !13031, file: !3, line: 3779, type: !1534)
!13053 = !DILocation(line: 3779, column: 150, scope: !13031)
!13054 = !DILocalVariable(name: "max", arg: 12, scope: !13031, file: !3, line: 3779, type: !1534)
!13055 = !DILocation(line: 3779, column: 161, scope: !13031)
!13056 = !DILocalVariable(name: "a1", arg: 13, scope: !13031, file: !3, line: 3779, type: !1534)
!13057 = !DILocation(line: 3779, column: 172, scope: !13031)
!13058 = !DILocalVariable(name: "a2", arg: 14, scope: !13031, file: !3, line: 3779, type: !1534)
!13059 = !DILocation(line: 3779, column: 182, scope: !13031)
!13060 = !DILocalVariable(name: "tip", arg: 15, scope: !13031, file: !3, line: 3779, type: !1647)
!13061 = !DILocation(line: 3779, column: 199, scope: !13031)
!13062 = !DILocation(line: 3781, column: 26, scope: !13031)
!13063 = !DILocation(line: 3781, column: 33, scope: !13031)
!13064 = !DILocation(line: 3781, column: 38, scope: !13031)
!13065 = !DILocation(line: 3781, column: 58, scope: !13031)
!13066 = !DILocation(line: 3781, column: 66, scope: !13031)
!13067 = !DILocation(line: 3781, column: 72, scope: !13031)
!13068 = !DILocation(line: 3781, column: 77, scope: !13031)
!13069 = !DILocation(line: 3781, column: 80, scope: !13031)
!13070 = !DILocation(line: 3781, column: 83, scope: !13031)
!13071 = !DILocation(line: 3781, column: 90, scope: !13031)
!13072 = !DILocation(line: 3781, column: 107, scope: !13031)
!13073 = !DILocation(line: 3781, column: 113, scope: !13031)
!13074 = !DILocation(line: 3781, column: 118, scope: !13031)
!13075 = !DILocation(line: 3781, column: 123, scope: !13031)
!13076 = !DILocation(line: 3781, column: 127, scope: !13031)
!13077 = !DILocation(line: 3781, column: 131, scope: !13031)
!13078 = !DILocation(line: 3781, column: 9, scope: !13031)
!13079 = !DILocation(line: 3781, column: 2, scope: !13031)
!13080 = distinct !DISubprogram(name: "uiDefIconTextButBitC", scope: !3, file: !3, line: 3783, type: !13081, scopeLine: 3784, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13081 = !DISubroutineType(types: !13082)
!13082 = !{!1558, !1695, !1067, !1067, !1067, !1067, !1647, !1067, !1067, !1545, !1545, !1541, !1534, !1534, !1534, !1534, !1647}
!13083 = !DILocalVariable(name: "block", arg: 1, scope: !13080, file: !3, line: 3783, type: !1695)
!13084 = !DILocation(line: 3783, column: 38, scope: !13080)
!13085 = !DILocalVariable(name: "type", arg: 2, scope: !13080, file: !3, line: 3783, type: !1067)
!13086 = !DILocation(line: 3783, column: 49, scope: !13080)
!13087 = !DILocalVariable(name: "bit", arg: 3, scope: !13080, file: !3, line: 3783, type: !1067)
!13088 = !DILocation(line: 3783, column: 59, scope: !13080)
!13089 = !DILocalVariable(name: "retval", arg: 4, scope: !13080, file: !3, line: 3783, type: !1067)
!13090 = !DILocation(line: 3783, column: 68, scope: !13080)
!13091 = !DILocalVariable(name: "icon", arg: 5, scope: !13080, file: !3, line: 3783, type: !1067)
!13092 = !DILocation(line: 3783, column: 80, scope: !13080)
!13093 = !DILocalVariable(name: "str", arg: 6, scope: !13080, file: !3, line: 3783, type: !1647)
!13094 = !DILocation(line: 3783, column: 98, scope: !13080)
!13095 = !DILocalVariable(name: "x", arg: 7, scope: !13080, file: !3, line: 3783, type: !1067)
!13096 = !DILocation(line: 3783, column: 107, scope: !13080)
!13097 = !DILocalVariable(name: "y", arg: 8, scope: !13080, file: !3, line: 3783, type: !1067)
!13098 = !DILocation(line: 3783, column: 114, scope: !13080)
!13099 = !DILocalVariable(name: "width", arg: 9, scope: !13080, file: !3, line: 3783, type: !1545)
!13100 = !DILocation(line: 3783, column: 123, scope: !13080)
!13101 = !DILocalVariable(name: "height", arg: 10, scope: !13080, file: !3, line: 3783, type: !1545)
!13102 = !DILocation(line: 3783, column: 136, scope: !13080)
!13103 = !DILocalVariable(name: "poin", arg: 11, scope: !13080, file: !3, line: 3783, type: !1541)
!13104 = !DILocation(line: 3783, column: 150, scope: !13080)
!13105 = !DILocalVariable(name: "min", arg: 12, scope: !13080, file: !3, line: 3783, type: !1534)
!13106 = !DILocation(line: 3783, column: 162, scope: !13080)
!13107 = !DILocalVariable(name: "max", arg: 13, scope: !13080, file: !3, line: 3783, type: !1534)
!13108 = !DILocation(line: 3783, column: 173, scope: !13080)
!13109 = !DILocalVariable(name: "a1", arg: 14, scope: !13080, file: !3, line: 3783, type: !1534)
!13110 = !DILocation(line: 3783, column: 184, scope: !13080)
!13111 = !DILocalVariable(name: "a2", arg: 15, scope: !13080, file: !3, line: 3783, type: !1534)
!13112 = !DILocation(line: 3783, column: 194, scope: !13080)
!13113 = !DILocalVariable(name: "tip", arg: 16, scope: !13080, file: !3, line: 3783, type: !1647)
!13114 = !DILocation(line: 3783, column: 211, scope: !13080)
!13115 = !DILocation(line: 3785, column: 29, scope: !13080)
!13116 = !DILocation(line: 3785, column: 36, scope: !13080)
!13117 = !DILocation(line: 3785, column: 41, scope: !13080)
!13118 = !DILocation(line: 3785, column: 61, scope: !13080)
!13119 = !DILocation(line: 3785, column: 66, scope: !13080)
!13120 = !DILocation(line: 3785, column: 74, scope: !13080)
!13121 = !DILocation(line: 3785, column: 80, scope: !13080)
!13122 = !DILocation(line: 3785, column: 85, scope: !13080)
!13123 = !DILocation(line: 3785, column: 88, scope: !13080)
!13124 = !DILocation(line: 3785, column: 91, scope: !13080)
!13125 = !DILocation(line: 3785, column: 98, scope: !13080)
!13126 = !DILocation(line: 3785, column: 115, scope: !13080)
!13127 = !DILocation(line: 3785, column: 121, scope: !13080)
!13128 = !DILocation(line: 3785, column: 126, scope: !13080)
!13129 = !DILocation(line: 3785, column: 131, scope: !13080)
!13130 = !DILocation(line: 3785, column: 135, scope: !13080)
!13131 = !DILocation(line: 3785, column: 139, scope: !13080)
!13132 = !DILocation(line: 3785, column: 9, scope: !13080)
!13133 = !DILocation(line: 3785, column: 2, scope: !13080)
!13134 = distinct !DISubprogram(name: "uiDefIconTextButR", scope: !3, file: !3, line: 3787, type: !13135, scopeLine: 3788, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13135 = !DISubroutineType(types: !13136)
!13136 = !{!1558, !1695, !1067, !1067, !1067, !1647, !1067, !1067, !1545, !1545, !8894, !1647, !1067, !1534, !1534, !1534, !1534, !1647}
!13137 = !DILocalVariable(name: "block", arg: 1, scope: !13134, file: !3, line: 3787, type: !1695)
!13138 = !DILocation(line: 3787, column: 35, scope: !13134)
!13139 = !DILocalVariable(name: "type", arg: 2, scope: !13134, file: !3, line: 3787, type: !1067)
!13140 = !DILocation(line: 3787, column: 46, scope: !13134)
!13141 = !DILocalVariable(name: "retval", arg: 3, scope: !13134, file: !3, line: 3787, type: !1067)
!13142 = !DILocation(line: 3787, column: 56, scope: !13134)
!13143 = !DILocalVariable(name: "icon", arg: 4, scope: !13134, file: !3, line: 3787, type: !1067)
!13144 = !DILocation(line: 3787, column: 68, scope: !13134)
!13145 = !DILocalVariable(name: "str", arg: 5, scope: !13134, file: !3, line: 3787, type: !1647)
!13146 = !DILocation(line: 3787, column: 86, scope: !13134)
!13147 = !DILocalVariable(name: "x", arg: 6, scope: !13134, file: !3, line: 3787, type: !1067)
!13148 = !DILocation(line: 3787, column: 95, scope: !13134)
!13149 = !DILocalVariable(name: "y", arg: 7, scope: !13134, file: !3, line: 3787, type: !1067)
!13150 = !DILocation(line: 3787, column: 102, scope: !13134)
!13151 = !DILocalVariable(name: "width", arg: 8, scope: !13134, file: !3, line: 3787, type: !1545)
!13152 = !DILocation(line: 3787, column: 111, scope: !13134)
!13153 = !DILocalVariable(name: "height", arg: 9, scope: !13134, file: !3, line: 3787, type: !1545)
!13154 = !DILocation(line: 3787, column: 124, scope: !13134)
!13155 = !DILocalVariable(name: "ptr", arg: 10, scope: !13134, file: !3, line: 3787, type: !8894)
!13156 = !DILocation(line: 3787, column: 144, scope: !13134)
!13157 = !DILocalVariable(name: "propname", arg: 11, scope: !13134, file: !3, line: 3787, type: !1647)
!13158 = !DILocation(line: 3787, column: 161, scope: !13134)
!13159 = !DILocalVariable(name: "index", arg: 12, scope: !13134, file: !3, line: 3787, type: !1067)
!13160 = !DILocation(line: 3787, column: 175, scope: !13134)
!13161 = !DILocalVariable(name: "min", arg: 13, scope: !13134, file: !3, line: 3787, type: !1534)
!13162 = !DILocation(line: 3787, column: 188, scope: !13134)
!13163 = !DILocalVariable(name: "max", arg: 14, scope: !13134, file: !3, line: 3787, type: !1534)
!13164 = !DILocation(line: 3787, column: 199, scope: !13134)
!13165 = !DILocalVariable(name: "a1", arg: 15, scope: !13134, file: !3, line: 3787, type: !1534)
!13166 = !DILocation(line: 3787, column: 210, scope: !13134)
!13167 = !DILocalVariable(name: "a2", arg: 16, scope: !13134, file: !3, line: 3787, type: !1534)
!13168 = !DILocation(line: 3787, column: 220, scope: !13134)
!13169 = !DILocalVariable(name: "tip", arg: 17, scope: !13134, file: !3, line: 3787, type: !1647)
!13170 = !DILocation(line: 3787, column: 237, scope: !13134)
!13171 = !DILocalVariable(name: "but", scope: !13134, file: !3, line: 3789, type: !1558)
!13172 = !DILocation(line: 3789, column: 9, scope: !13134)
!13173 = !DILocation(line: 3790, column: 32, scope: !13134)
!13174 = !DILocation(line: 3790, column: 39, scope: !13134)
!13175 = !DILocation(line: 3790, column: 45, scope: !13134)
!13176 = !DILocation(line: 3790, column: 53, scope: !13134)
!13177 = !DILocation(line: 3790, column: 58, scope: !13134)
!13178 = !DILocation(line: 3790, column: 61, scope: !13134)
!13179 = !DILocation(line: 3790, column: 64, scope: !13134)
!13180 = !DILocation(line: 3790, column: 71, scope: !13134)
!13181 = !DILocation(line: 3790, column: 79, scope: !13134)
!13182 = !DILocation(line: 3790, column: 84, scope: !13134)
!13183 = !DILocation(line: 3790, column: 94, scope: !13134)
!13184 = !DILocation(line: 3790, column: 101, scope: !13134)
!13185 = !DILocation(line: 3790, column: 106, scope: !13134)
!13186 = !DILocation(line: 3790, column: 111, scope: !13134)
!13187 = !DILocation(line: 3790, column: 115, scope: !13134)
!13188 = !DILocation(line: 3790, column: 119, scope: !13134)
!13189 = !DILocation(line: 3790, column: 8, scope: !13134)
!13190 = !DILocation(line: 3790, column: 6, scope: !13134)
!13191 = !DILocation(line: 3791, column: 27, scope: !13134)
!13192 = !DILocation(line: 3791, column: 32, scope: !13134)
!13193 = !DILocation(line: 3791, column: 2, scope: !13134)
!13194 = !DILocation(line: 3792, column: 2, scope: !13134)
!13195 = !DILocation(line: 3792, column: 7, scope: !13134)
!13196 = !DILocation(line: 3792, column: 16, scope: !13134)
!13197 = !DILocation(line: 3793, column: 9, scope: !13134)
!13198 = !DILocation(line: 3793, column: 2, scope: !13134)
!13199 = distinct !DISubprogram(name: "uiDefIconTextButR_prop", scope: !3, file: !3, line: 3795, type: !13200, scopeLine: 3796, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13200 = !DISubroutineType(types: !13201)
!13201 = !{!1558, !1695, !1067, !1067, !1067, !1647, !1067, !1067, !1545, !1545, !8894, !3171, !1067, !1534, !1534, !1534, !1534, !1647}
!13202 = !DILocalVariable(name: "block", arg: 1, scope: !13199, file: !3, line: 3795, type: !1695)
!13203 = !DILocation(line: 3795, column: 40, scope: !13199)
!13204 = !DILocalVariable(name: "type", arg: 2, scope: !13199, file: !3, line: 3795, type: !1067)
!13205 = !DILocation(line: 3795, column: 51, scope: !13199)
!13206 = !DILocalVariable(name: "retval", arg: 3, scope: !13199, file: !3, line: 3795, type: !1067)
!13207 = !DILocation(line: 3795, column: 61, scope: !13199)
!13208 = !DILocalVariable(name: "icon", arg: 4, scope: !13199, file: !3, line: 3795, type: !1067)
!13209 = !DILocation(line: 3795, column: 73, scope: !13199)
!13210 = !DILocalVariable(name: "str", arg: 5, scope: !13199, file: !3, line: 3795, type: !1647)
!13211 = !DILocation(line: 3795, column: 91, scope: !13199)
!13212 = !DILocalVariable(name: "x", arg: 6, scope: !13199, file: !3, line: 3795, type: !1067)
!13213 = !DILocation(line: 3795, column: 100, scope: !13199)
!13214 = !DILocalVariable(name: "y", arg: 7, scope: !13199, file: !3, line: 3795, type: !1067)
!13215 = !DILocation(line: 3795, column: 107, scope: !13199)
!13216 = !DILocalVariable(name: "width", arg: 8, scope: !13199, file: !3, line: 3795, type: !1545)
!13217 = !DILocation(line: 3795, column: 116, scope: !13199)
!13218 = !DILocalVariable(name: "height", arg: 9, scope: !13199, file: !3, line: 3795, type: !1545)
!13219 = !DILocation(line: 3795, column: 129, scope: !13199)
!13220 = !DILocalVariable(name: "ptr", arg: 10, scope: !13199, file: !3, line: 3795, type: !8894)
!13221 = !DILocation(line: 3795, column: 149, scope: !13199)
!13222 = !DILocalVariable(name: "prop", arg: 11, scope: !13199, file: !3, line: 3795, type: !3171)
!13223 = !DILocation(line: 3795, column: 167, scope: !13199)
!13224 = !DILocalVariable(name: "index", arg: 12, scope: !13199, file: !3, line: 3795, type: !1067)
!13225 = !DILocation(line: 3795, column: 177, scope: !13199)
!13226 = !DILocalVariable(name: "min", arg: 13, scope: !13199, file: !3, line: 3795, type: !1534)
!13227 = !DILocation(line: 3795, column: 190, scope: !13199)
!13228 = !DILocalVariable(name: "max", arg: 14, scope: !13199, file: !3, line: 3795, type: !1534)
!13229 = !DILocation(line: 3795, column: 201, scope: !13199)
!13230 = !DILocalVariable(name: "a1", arg: 15, scope: !13199, file: !3, line: 3795, type: !1534)
!13231 = !DILocation(line: 3795, column: 212, scope: !13199)
!13232 = !DILocalVariable(name: "a2", arg: 16, scope: !13199, file: !3, line: 3795, type: !1534)
!13233 = !DILocation(line: 3795, column: 222, scope: !13199)
!13234 = !DILocalVariable(name: "tip", arg: 17, scope: !13199, file: !3, line: 3795, type: !1647)
!13235 = !DILocation(line: 3795, column: 239, scope: !13199)
!13236 = !DILocalVariable(name: "but", scope: !13199, file: !3, line: 3797, type: !1558)
!13237 = !DILocation(line: 3797, column: 9, scope: !13199)
!13238 = !DILocation(line: 3798, column: 23, scope: !13199)
!13239 = !DILocation(line: 3798, column: 30, scope: !13199)
!13240 = !DILocation(line: 3798, column: 36, scope: !13199)
!13241 = !DILocation(line: 3798, column: 44, scope: !13199)
!13242 = !DILocation(line: 3798, column: 49, scope: !13199)
!13243 = !DILocation(line: 3798, column: 52, scope: !13199)
!13244 = !DILocation(line: 3798, column: 55, scope: !13199)
!13245 = !DILocation(line: 3798, column: 62, scope: !13199)
!13246 = !DILocation(line: 3798, column: 70, scope: !13199)
!13247 = !DILocation(line: 3798, column: 75, scope: !13199)
!13248 = !DILocation(line: 3798, column: 81, scope: !13199)
!13249 = !DILocation(line: 3798, column: 88, scope: !13199)
!13250 = !DILocation(line: 3798, column: 93, scope: !13199)
!13251 = !DILocation(line: 3798, column: 98, scope: !13199)
!13252 = !DILocation(line: 3798, column: 102, scope: !13199)
!13253 = !DILocation(line: 3798, column: 106, scope: !13199)
!13254 = !DILocation(line: 3798, column: 8, scope: !13199)
!13255 = !DILocation(line: 3798, column: 6, scope: !13199)
!13256 = !DILocation(line: 3799, column: 27, scope: !13199)
!13257 = !DILocation(line: 3799, column: 32, scope: !13199)
!13258 = !DILocation(line: 3799, column: 2, scope: !13199)
!13259 = !DILocation(line: 3800, column: 2, scope: !13199)
!13260 = !DILocation(line: 3800, column: 7, scope: !13199)
!13261 = !DILocation(line: 3800, column: 16, scope: !13199)
!13262 = !DILocation(line: 3801, column: 9, scope: !13199)
!13263 = !DILocation(line: 3801, column: 2, scope: !13199)
!13264 = distinct !DISubprogram(name: "uiDefIconTextButO_ptr", scope: !3, file: !3, line: 3803, type: !13265, scopeLine: 3804, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13265 = !DISubroutineType(types: !13266)
!13266 = !{!1558, !1695, !1067, !5372, !1067, !1067, !1647, !1067, !1067, !1545, !1545, !1647}
!13267 = !DILocalVariable(name: "block", arg: 1, scope: !13264, file: !3, line: 3803, type: !1695)
!13268 = !DILocation(line: 3803, column: 39, scope: !13264)
!13269 = !DILocalVariable(name: "type", arg: 2, scope: !13264, file: !3, line: 3803, type: !1067)
!13270 = !DILocation(line: 3803, column: 50, scope: !13264)
!13271 = !DILocalVariable(name: "ot", arg: 3, scope: !13264, file: !3, line: 3803, type: !5372)
!13272 = !DILocation(line: 3803, column: 72, scope: !13264)
!13273 = !DILocalVariable(name: "opcontext", arg: 4, scope: !13264, file: !3, line: 3803, type: !1067)
!13274 = !DILocation(line: 3803, column: 80, scope: !13264)
!13275 = !DILocalVariable(name: "icon", arg: 5, scope: !13264, file: !3, line: 3803, type: !1067)
!13276 = !DILocation(line: 3803, column: 95, scope: !13264)
!13277 = !DILocalVariable(name: "str", arg: 6, scope: !13264, file: !3, line: 3803, type: !1647)
!13278 = !DILocation(line: 3803, column: 113, scope: !13264)
!13279 = !DILocalVariable(name: "x", arg: 7, scope: !13264, file: !3, line: 3803, type: !1067)
!13280 = !DILocation(line: 3803, column: 122, scope: !13264)
!13281 = !DILocalVariable(name: "y", arg: 8, scope: !13264, file: !3, line: 3803, type: !1067)
!13282 = !DILocation(line: 3803, column: 129, scope: !13264)
!13283 = !DILocalVariable(name: "width", arg: 9, scope: !13264, file: !3, line: 3803, type: !1545)
!13284 = !DILocation(line: 3803, column: 138, scope: !13264)
!13285 = !DILocalVariable(name: "height", arg: 10, scope: !13264, file: !3, line: 3803, type: !1545)
!13286 = !DILocation(line: 3803, column: 151, scope: !13264)
!13287 = !DILocalVariable(name: "tip", arg: 11, scope: !13264, file: !3, line: 3803, type: !1647)
!13288 = !DILocation(line: 3803, column: 171, scope: !13264)
!13289 = !DILocalVariable(name: "but", scope: !13264, file: !3, line: 3805, type: !1558)
!13290 = !DILocation(line: 3805, column: 9, scope: !13264)
!13291 = !DILocation(line: 3806, column: 32, scope: !13264)
!13292 = !DILocation(line: 3806, column: 39, scope: !13264)
!13293 = !DILocation(line: 3806, column: 45, scope: !13264)
!13294 = !DILocation(line: 3806, column: 49, scope: !13264)
!13295 = !DILocation(line: 3806, column: 60, scope: !13264)
!13296 = !DILocation(line: 3806, column: 65, scope: !13264)
!13297 = !DILocation(line: 3806, column: 68, scope: !13264)
!13298 = !DILocation(line: 3806, column: 71, scope: !13264)
!13299 = !DILocation(line: 3806, column: 78, scope: !13264)
!13300 = !DILocation(line: 3806, column: 86, scope: !13264)
!13301 = !DILocation(line: 3806, column: 8, scope: !13264)
!13302 = !DILocation(line: 3806, column: 6, scope: !13264)
!13303 = !DILocation(line: 3807, column: 27, scope: !13264)
!13304 = !DILocation(line: 3807, column: 32, scope: !13264)
!13305 = !DILocation(line: 3807, column: 2, scope: !13264)
!13306 = !DILocation(line: 3808, column: 2, scope: !13264)
!13307 = !DILocation(line: 3808, column: 7, scope: !13264)
!13308 = !DILocation(line: 3808, column: 16, scope: !13264)
!13309 = !DILocation(line: 3809, column: 9, scope: !13264)
!13310 = !DILocation(line: 3809, column: 2, scope: !13264)
!13311 = distinct !DISubprogram(name: "uiDefIconTextButO", scope: !3, file: !3, line: 3811, type: !13312, scopeLine: 3812, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13312 = !DISubroutineType(types: !13313)
!13313 = !{!1558, !1695, !1067, !1647, !1067, !1067, !1647, !1067, !1067, !1545, !1545, !1647}
!13314 = !DILocalVariable(name: "block", arg: 1, scope: !13311, file: !3, line: 3811, type: !1695)
!13315 = !DILocation(line: 3811, column: 35, scope: !13311)
!13316 = !DILocalVariable(name: "type", arg: 2, scope: !13311, file: !3, line: 3811, type: !1067)
!13317 = !DILocation(line: 3811, column: 46, scope: !13311)
!13318 = !DILocalVariable(name: "opname", arg: 3, scope: !13311, file: !3, line: 3811, type: !1647)
!13319 = !DILocation(line: 3811, column: 64, scope: !13311)
!13320 = !DILocalVariable(name: "opcontext", arg: 4, scope: !13311, file: !3, line: 3811, type: !1067)
!13321 = !DILocation(line: 3811, column: 76, scope: !13311)
!13322 = !DILocalVariable(name: "icon", arg: 5, scope: !13311, file: !3, line: 3811, type: !1067)
!13323 = !DILocation(line: 3811, column: 91, scope: !13311)
!13324 = !DILocalVariable(name: "str", arg: 6, scope: !13311, file: !3, line: 3811, type: !1647)
!13325 = !DILocation(line: 3811, column: 109, scope: !13311)
!13326 = !DILocalVariable(name: "x", arg: 7, scope: !13311, file: !3, line: 3811, type: !1067)
!13327 = !DILocation(line: 3811, column: 118, scope: !13311)
!13328 = !DILocalVariable(name: "y", arg: 8, scope: !13311, file: !3, line: 3811, type: !1067)
!13329 = !DILocation(line: 3811, column: 125, scope: !13311)
!13330 = !DILocalVariable(name: "width", arg: 9, scope: !13311, file: !3, line: 3811, type: !1545)
!13331 = !DILocation(line: 3811, column: 134, scope: !13311)
!13332 = !DILocalVariable(name: "height", arg: 10, scope: !13311, file: !3, line: 3811, type: !1545)
!13333 = !DILocation(line: 3811, column: 147, scope: !13311)
!13334 = !DILocalVariable(name: "tip", arg: 11, scope: !13311, file: !3, line: 3811, type: !1647)
!13335 = !DILocation(line: 3811, column: 167, scope: !13311)
!13336 = !DILocalVariable(name: "ot", scope: !13311, file: !3, line: 3813, type: !5372)
!13337 = !DILocation(line: 3813, column: 18, scope: !13311)
!13338 = !DILocation(line: 3813, column: 44, scope: !13311)
!13339 = !DILocation(line: 3813, column: 23, scope: !13311)
!13340 = !DILocation(line: 3814, column: 31, scope: !13311)
!13341 = !DILocation(line: 3814, column: 38, scope: !13311)
!13342 = !DILocation(line: 3814, column: 44, scope: !13311)
!13343 = !DILocation(line: 3814, column: 48, scope: !13311)
!13344 = !DILocation(line: 3814, column: 59, scope: !13311)
!13345 = !DILocation(line: 3814, column: 65, scope: !13311)
!13346 = !DILocation(line: 3814, column: 70, scope: !13311)
!13347 = !DILocation(line: 3814, column: 73, scope: !13311)
!13348 = !DILocation(line: 3814, column: 76, scope: !13311)
!13349 = !DILocation(line: 3814, column: 83, scope: !13311)
!13350 = !DILocation(line: 3814, column: 91, scope: !13311)
!13351 = !DILocation(line: 3814, column: 9, scope: !13311)
!13352 = !DILocation(line: 3814, column: 2, scope: !13311)
!13353 = distinct !DISubprogram(name: "uiSetButLink", scope: !3, file: !3, line: 3819, type: !13354, scopeLine: 3820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13354 = !DISubroutineType(types: !13355)
!13355 = !{null, !1558, !1666, !1668, !1544, !1067, !1067}
!13356 = !DILocalVariable(name: "but", arg: 1, scope: !13353, file: !3, line: 3819, type: !1558)
!13357 = !DILocation(line: 3819, column: 26, scope: !13353)
!13358 = !DILocalVariable(name: "poin", arg: 2, scope: !13353, file: !3, line: 3819, type: !1666)
!13359 = !DILocation(line: 3819, column: 38, scope: !13353)
!13360 = !DILocalVariable(name: "ppoin", arg: 3, scope: !13353, file: !3, line: 3819, type: !1668)
!13361 = !DILocation(line: 3819, column: 52, scope: !13353)
!13362 = !DILocalVariable(name: "tot", arg: 4, scope: !13353, file: !3, line: 3819, type: !1544)
!13363 = !DILocation(line: 3819, column: 66, scope: !13353)
!13364 = !DILocalVariable(name: "from", arg: 5, scope: !13353, file: !3, line: 3819, type: !1067)
!13365 = !DILocation(line: 3819, column: 75, scope: !13353)
!13366 = !DILocalVariable(name: "to", arg: 6, scope: !13353, file: !3, line: 3819, type: !1067)
!13367 = !DILocation(line: 3819, column: 85, scope: !13353)
!13368 = !DILocalVariable(name: "link", scope: !13353, file: !3, line: 3821, type: !1661)
!13369 = !DILocation(line: 3821, column: 10, scope: !13353)
!13370 = !DILocation(line: 3823, column: 21, scope: !13353)
!13371 = !DILocation(line: 3823, column: 9, scope: !13353)
!13372 = !DILocation(line: 3823, column: 14, scope: !13353)
!13373 = !DILocation(line: 3823, column: 19, scope: !13353)
!13374 = !DILocation(line: 3823, column: 7, scope: !13353)
!13375 = !DILocation(line: 3825, column: 15, scope: !13353)
!13376 = !DILocation(line: 3825, column: 2, scope: !13353)
!13377 = !DILocation(line: 3825, column: 8, scope: !13353)
!13378 = !DILocation(line: 3825, column: 13, scope: !13353)
!13379 = !DILocation(line: 3826, column: 16, scope: !13353)
!13380 = !DILocation(line: 3826, column: 2, scope: !13353)
!13381 = !DILocation(line: 3826, column: 8, scope: !13353)
!13382 = !DILocation(line: 3826, column: 14, scope: !13353)
!13383 = !DILocation(line: 3827, column: 18, scope: !13353)
!13384 = !DILocation(line: 3827, column: 2, scope: !13353)
!13385 = !DILocation(line: 3827, column: 8, scope: !13353)
!13386 = !DILocation(line: 3827, column: 16, scope: !13353)
!13387 = !DILocation(line: 3828, column: 19, scope: !13353)
!13388 = !DILocation(line: 3828, column: 2, scope: !13353)
!13389 = !DILocation(line: 3828, column: 8, scope: !13353)
!13390 = !DILocation(line: 3828, column: 17, scope: !13353)
!13391 = !DILocation(line: 3829, column: 17, scope: !13353)
!13392 = !DILocation(line: 3829, column: 2, scope: !13353)
!13393 = !DILocation(line: 3829, column: 8, scope: !13353)
!13394 = !DILocation(line: 3829, column: 15, scope: !13353)
!13395 = !DILocation(line: 3830, column: 1, scope: !13353)
!13396 = distinct !DISubprogram(name: "uiBlocksGetYMin", scope: !3, file: !3, line: 3834, type: !13397, scopeLine: 3835, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13397 = !DISubroutineType(types: !13398)
!13398 = !{!1067, !7267}
!13399 = !DILocalVariable(name: "lb", arg: 1, scope: !13396, file: !3, line: 3834, type: !7267)
!13400 = !DILocation(line: 3834, column: 31, scope: !13396)
!13401 = !DILocalVariable(name: "block", scope: !13396, file: !3, line: 3836, type: !1695)
!13402 = !DILocation(line: 3836, column: 11, scope: !13396)
!13403 = !DILocalVariable(name: "min", scope: !13396, file: !3, line: 3837, type: !1067)
!13404 = !DILocation(line: 3837, column: 6, scope: !13396)
!13405 = !DILocation(line: 3839, column: 15, scope: !13406)
!13406 = distinct !DILexicalBlock(scope: !13396, file: !3, line: 3839, column: 2)
!13407 = !DILocation(line: 3839, column: 19, scope: !13406)
!13408 = !DILocation(line: 3839, column: 13, scope: !13406)
!13409 = !DILocation(line: 3839, column: 7, scope: !13406)
!13410 = !DILocation(line: 3839, column: 26, scope: !13411)
!13411 = distinct !DILexicalBlock(scope: !13406, file: !3, line: 3839, column: 2)
!13412 = !DILocation(line: 3839, column: 2, scope: !13406)
!13413 = !DILocation(line: 3840, column: 7, scope: !13414)
!13414 = distinct !DILexicalBlock(scope: !13411, file: !3, line: 3840, column: 7)
!13415 = !DILocation(line: 3840, column: 16, scope: !13414)
!13416 = !DILocation(line: 3840, column: 20, scope: !13414)
!13417 = !DILocation(line: 3840, column: 13, scope: !13414)
!13418 = !DILocation(line: 3840, column: 26, scope: !13414)
!13419 = !DILocation(line: 3840, column: 29, scope: !13414)
!13420 = !DILocation(line: 3840, column: 36, scope: !13414)
!13421 = !DILocation(line: 3840, column: 41, scope: !13414)
!13422 = !DILocation(line: 3840, column: 48, scope: !13414)
!13423 = !DILocation(line: 3840, column: 46, scope: !13414)
!13424 = !DILocation(line: 3840, column: 7, scope: !13411)
!13425 = !DILocation(line: 3841, column: 10, scope: !13414)
!13426 = !DILocation(line: 3841, column: 17, scope: !13414)
!13427 = !DILocation(line: 3841, column: 22, scope: !13414)
!13428 = !DILocation(line: 3841, column: 8, scope: !13414)
!13429 = !DILocation(line: 3841, column: 4, scope: !13414)
!13430 = !DILocation(line: 3839, column: 41, scope: !13411)
!13431 = !DILocation(line: 3839, column: 48, scope: !13411)
!13432 = !DILocation(line: 3839, column: 39, scope: !13411)
!13433 = !DILocation(line: 3839, column: 2, scope: !13411)
!13434 = distinct !{!13434, !13412, !13435}
!13435 = !DILocation(line: 3841, column: 22, scope: !13406)
!13436 = !DILocation(line: 3843, column: 9, scope: !13396)
!13437 = !DILocation(line: 3843, column: 2, scope: !13396)
!13438 = distinct !DISubprogram(name: "uiBlockSetDirection", scope: !3, file: !3, line: 3846, type: !9224, scopeLine: 3847, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13439 = !DILocalVariable(name: "block", arg: 1, scope: !13438, file: !3, line: 3846, type: !1695)
!13440 = !DILocation(line: 3846, column: 35, scope: !13438)
!13441 = !DILocalVariable(name: "direction", arg: 2, scope: !13438, file: !3, line: 3846, type: !1542)
!13442 = !DILocation(line: 3846, column: 47, scope: !13438)
!13443 = !DILocation(line: 3848, column: 21, scope: !13438)
!13444 = !DILocation(line: 3848, column: 2, scope: !13438)
!13445 = !DILocation(line: 3848, column: 9, scope: !13438)
!13446 = !DILocation(line: 3848, column: 19, scope: !13438)
!13447 = !DILocation(line: 3849, column: 1, scope: !13438)
!13448 = distinct !DISubprogram(name: "uiBlockFlipOrder", scope: !3, file: !3, line: 3852, type: !3750, scopeLine: 3853, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13449 = !DILocalVariable(name: "block", arg: 1, scope: !13448, file: !3, line: 3852, type: !1695)
!13450 = !DILocation(line: 3852, column: 32, scope: !13448)
!13451 = !DILocalVariable(name: "but", scope: !13448, file: !3, line: 3854, type: !1558)
!13452 = !DILocation(line: 3854, column: 9, scope: !13448)
!13453 = !DILocalVariable(name: "centy", scope: !13448, file: !3, line: 3855, type: !1534)
!13454 = !DILocation(line: 3855, column: 8, scope: !13448)
!13455 = !DILocalVariable(name: "miny", scope: !13448, file: !3, line: 3855, type: !1534)
!13456 = !DILocation(line: 3855, column: 15, scope: !13448)
!13457 = !DILocalVariable(name: "maxy", scope: !13448, file: !3, line: 3855, type: !1534)
!13458 = !DILocation(line: 3855, column: 29, scope: !13448)
!13459 = !DILocation(line: 3857, column: 8, scope: !13460)
!13460 = distinct !DILexicalBlock(scope: !13448, file: !3, line: 3857, column: 6)
!13461 = !DILocation(line: 3857, column: 15, scope: !13460)
!13462 = !DILocation(line: 3857, column: 6, scope: !13448)
!13463 = !DILocation(line: 3858, column: 3, scope: !13460)
!13464 = !DILocation(line: 3859, column: 11, scope: !13465)
!13465 = distinct !DILexicalBlock(scope: !13460, file: !3, line: 3859, column: 11)
!13466 = !DILocation(line: 3859, column: 18, scope: !13465)
!13467 = !DILocation(line: 3859, column: 23, scope: !13465)
!13468 = !DILocation(line: 3859, column: 11, scope: !13460)
!13469 = !DILocation(line: 3860, column: 3, scope: !13465)
!13470 = !DILocation(line: 3862, column: 13, scope: !13471)
!13471 = distinct !DILexicalBlock(scope: !13448, file: !3, line: 3862, column: 2)
!13472 = !DILocation(line: 3862, column: 20, scope: !13471)
!13473 = !DILocation(line: 3862, column: 28, scope: !13471)
!13474 = !DILocation(line: 3862, column: 11, scope: !13471)
!13475 = !DILocation(line: 3862, column: 7, scope: !13471)
!13476 = !DILocation(line: 3862, column: 35, scope: !13477)
!13477 = distinct !DILexicalBlock(scope: !13471, file: !3, line: 3862, column: 2)
!13478 = !DILocation(line: 3862, column: 2, scope: !13471)
!13479 = !DILocation(line: 3863, column: 7, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13481, file: !3, line: 3863, column: 7)
!13481 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 3862, column: 57)
!13482 = !DILocation(line: 3863, column: 12, scope: !13480)
!13483 = !DILocation(line: 3863, column: 21, scope: !13480)
!13484 = !DILocation(line: 3863, column: 7, scope: !13481)
!13485 = !DILocation(line: 3863, column: 37, scope: !13480)
!13486 = !DILocation(line: 3864, column: 7, scope: !13487)
!13487 = distinct !DILexicalBlock(scope: !13481, file: !3, line: 3864, column: 7)
!13488 = !DILocation(line: 3864, column: 12, scope: !13487)
!13489 = !DILocation(line: 3864, column: 17, scope: !13487)
!13490 = !DILocation(line: 3864, column: 24, scope: !13487)
!13491 = !DILocation(line: 3864, column: 22, scope: !13487)
!13492 = !DILocation(line: 3864, column: 7, scope: !13481)
!13493 = !DILocation(line: 3864, column: 37, scope: !13487)
!13494 = !DILocation(line: 3864, column: 42, scope: !13487)
!13495 = !DILocation(line: 3864, column: 47, scope: !13487)
!13496 = !DILocation(line: 3864, column: 35, scope: !13487)
!13497 = !DILocation(line: 3864, column: 30, scope: !13487)
!13498 = !DILocation(line: 3865, column: 7, scope: !13499)
!13499 = distinct !DILexicalBlock(scope: !13481, file: !3, line: 3865, column: 7)
!13500 = !DILocation(line: 3865, column: 12, scope: !13499)
!13501 = !DILocation(line: 3865, column: 17, scope: !13499)
!13502 = !DILocation(line: 3865, column: 24, scope: !13499)
!13503 = !DILocation(line: 3865, column: 22, scope: !13499)
!13504 = !DILocation(line: 3865, column: 7, scope: !13481)
!13505 = !DILocation(line: 3865, column: 37, scope: !13499)
!13506 = !DILocation(line: 3865, column: 42, scope: !13499)
!13507 = !DILocation(line: 3865, column: 47, scope: !13499)
!13508 = !DILocation(line: 3865, column: 35, scope: !13499)
!13509 = !DILocation(line: 3865, column: 30, scope: !13499)
!13510 = !DILocation(line: 3866, column: 2, scope: !13481)
!13511 = !DILocation(line: 3862, column: 46, scope: !13477)
!13512 = !DILocation(line: 3862, column: 51, scope: !13477)
!13513 = !DILocation(line: 3862, column: 44, scope: !13477)
!13514 = !DILocation(line: 3862, column: 2, scope: !13477)
!13515 = distinct !{!13515, !13478, !13516}
!13516 = !DILocation(line: 3866, column: 2, scope: !13471)
!13517 = !DILocation(line: 3868, column: 11, scope: !13448)
!13518 = !DILocation(line: 3868, column: 18, scope: !13448)
!13519 = !DILocation(line: 3868, column: 16, scope: !13448)
!13520 = !DILocation(line: 3868, column: 24, scope: !13448)
!13521 = !DILocation(line: 3868, column: 8, scope: !13448)
!13522 = !DILocation(line: 3869, column: 13, scope: !13523)
!13523 = distinct !DILexicalBlock(scope: !13448, file: !3, line: 3869, column: 2)
!13524 = !DILocation(line: 3869, column: 20, scope: !13523)
!13525 = !DILocation(line: 3869, column: 28, scope: !13523)
!13526 = !DILocation(line: 3869, column: 11, scope: !13523)
!13527 = !DILocation(line: 3869, column: 7, scope: !13523)
!13528 = !DILocation(line: 3869, column: 35, scope: !13529)
!13529 = distinct !DILexicalBlock(scope: !13523, file: !3, line: 3869, column: 2)
!13530 = !DILocation(line: 3869, column: 2, scope: !13523)
!13531 = !DILocation(line: 3870, column: 20, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13529, file: !3, line: 3869, column: 57)
!13533 = !DILocation(line: 3870, column: 29, scope: !13532)
!13534 = !DILocation(line: 3870, column: 34, scope: !13532)
!13535 = !DILocation(line: 3870, column: 39, scope: !13532)
!13536 = !DILocation(line: 3870, column: 46, scope: !13532)
!13537 = !DILocation(line: 3870, column: 44, scope: !13532)
!13538 = !DILocation(line: 3870, column: 26, scope: !13532)
!13539 = !DILocation(line: 3870, column: 3, scope: !13532)
!13540 = !DILocation(line: 3870, column: 8, scope: !13532)
!13541 = !DILocation(line: 3870, column: 13, scope: !13532)
!13542 = !DILocation(line: 3870, column: 18, scope: !13532)
!13543 = !DILocation(line: 3871, column: 20, scope: !13532)
!13544 = !DILocation(line: 3871, column: 29, scope: !13532)
!13545 = !DILocation(line: 3871, column: 34, scope: !13532)
!13546 = !DILocation(line: 3871, column: 39, scope: !13532)
!13547 = !DILocation(line: 3871, column: 46, scope: !13532)
!13548 = !DILocation(line: 3871, column: 44, scope: !13532)
!13549 = !DILocation(line: 3871, column: 26, scope: !13532)
!13550 = !DILocation(line: 3871, column: 3, scope: !13532)
!13551 = !DILocation(line: 3871, column: 8, scope: !13532)
!13552 = !DILocation(line: 3871, column: 13, scope: !13532)
!13553 = !DILocation(line: 3871, column: 18, scope: !13532)
!13554 = !DILocalVariable(name: "sw_ap", scope: !13555, file: !3, line: 3872, type: !1534)
!13555 = distinct !DILexicalBlock(scope: !13532, file: !3, line: 3872, column: 3)
!13556 = !DILocation(line: 3872, column: 3, scope: !13555)
!13557 = !DILocation(line: 3873, column: 2, scope: !13532)
!13558 = !DILocation(line: 3869, column: 46, scope: !13529)
!13559 = !DILocation(line: 3869, column: 51, scope: !13529)
!13560 = !DILocation(line: 3869, column: 44, scope: !13529)
!13561 = !DILocation(line: 3869, column: 2, scope: !13529)
!13562 = distinct !{!13562, !13530, !13563}
!13563 = !DILocation(line: 3873, column: 2, scope: !13523)
!13564 = !DILocation(line: 3874, column: 1, scope: !13448)
!13565 = distinct !DISubprogram(name: "uiBlockSetFlag", scope: !3, file: !3, line: 3877, type: !3951, scopeLine: 3878, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13566 = !DILocalVariable(name: "block", arg: 1, scope: !13565, file: !3, line: 3877, type: !1695)
!13567 = !DILocation(line: 3877, column: 30, scope: !13565)
!13568 = !DILocalVariable(name: "flag", arg: 2, scope: !13565, file: !3, line: 3877, type: !1067)
!13569 = !DILocation(line: 3877, column: 41, scope: !13565)
!13570 = !DILocation(line: 3879, column: 17, scope: !13565)
!13571 = !DILocation(line: 3879, column: 2, scope: !13565)
!13572 = !DILocation(line: 3879, column: 9, scope: !13565)
!13573 = !DILocation(line: 3879, column: 14, scope: !13565)
!13574 = !DILocation(line: 3880, column: 1, scope: !13565)
!13575 = distinct !DISubprogram(name: "uiBlockClearFlag", scope: !3, file: !3, line: 3882, type: !3951, scopeLine: 3883, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13576 = !DILocalVariable(name: "block", arg: 1, scope: !13575, file: !3, line: 3882, type: !1695)
!13577 = !DILocation(line: 3882, column: 32, scope: !13575)
!13578 = !DILocalVariable(name: "flag", arg: 2, scope: !13575, file: !3, line: 3882, type: !1067)
!13579 = !DILocation(line: 3882, column: 43, scope: !13575)
!13580 = !DILocation(line: 3884, column: 18, scope: !13575)
!13581 = !DILocation(line: 3884, column: 17, scope: !13575)
!13582 = !DILocation(line: 3884, column: 2, scope: !13575)
!13583 = !DILocation(line: 3884, column: 9, scope: !13575)
!13584 = !DILocation(line: 3884, column: 14, scope: !13575)
!13585 = !DILocation(line: 3885, column: 1, scope: !13575)
!13586 = distinct !DISubprogram(name: "uiButSetFlag", scope: !3, file: !3, line: 3887, type: !11908, scopeLine: 3888, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13587 = !DILocalVariable(name: "but", arg: 1, scope: !13586, file: !3, line: 3887, type: !1558)
!13588 = !DILocation(line: 3887, column: 26, scope: !13586)
!13589 = !DILocalVariable(name: "flag", arg: 2, scope: !13586, file: !3, line: 3887, type: !1067)
!13590 = !DILocation(line: 3887, column: 35, scope: !13586)
!13591 = !DILocation(line: 3889, column: 15, scope: !13586)
!13592 = !DILocation(line: 3889, column: 2, scope: !13586)
!13593 = !DILocation(line: 3889, column: 7, scope: !13586)
!13594 = !DILocation(line: 3889, column: 12, scope: !13586)
!13595 = !DILocation(line: 3890, column: 1, scope: !13586)
!13596 = distinct !DISubprogram(name: "uiButClearFlag", scope: !3, file: !3, line: 3892, type: !11908, scopeLine: 3893, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13597 = !DILocalVariable(name: "but", arg: 1, scope: !13596, file: !3, line: 3892, type: !1558)
!13598 = !DILocation(line: 3892, column: 28, scope: !13596)
!13599 = !DILocalVariable(name: "flag", arg: 2, scope: !13596, file: !3, line: 3892, type: !1067)
!13600 = !DILocation(line: 3892, column: 37, scope: !13596)
!13601 = !DILocation(line: 3894, column: 16, scope: !13596)
!13602 = !DILocation(line: 3894, column: 15, scope: !13596)
!13603 = !DILocation(line: 3894, column: 2, scope: !13596)
!13604 = !DILocation(line: 3894, column: 7, scope: !13596)
!13605 = !DILocation(line: 3894, column: 12, scope: !13596)
!13606 = !DILocation(line: 3895, column: 1, scope: !13596)
!13607 = distinct !DISubprogram(name: "uiButSetDrawFlag", scope: !3, file: !3, line: 3897, type: !11908, scopeLine: 3898, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13608 = !DILocalVariable(name: "but", arg: 1, scope: !13607, file: !3, line: 3897, type: !1558)
!13609 = !DILocation(line: 3897, column: 30, scope: !13607)
!13610 = !DILocalVariable(name: "flag", arg: 2, scope: !13607, file: !3, line: 3897, type: !1067)
!13611 = !DILocation(line: 3897, column: 39, scope: !13607)
!13612 = !DILocation(line: 3899, column: 19, scope: !13607)
!13613 = !DILocation(line: 3899, column: 2, scope: !13607)
!13614 = !DILocation(line: 3899, column: 7, scope: !13607)
!13615 = !DILocation(line: 3899, column: 16, scope: !13607)
!13616 = !DILocation(line: 3900, column: 1, scope: !13607)
!13617 = distinct !DISubprogram(name: "uiButClearDrawFlag", scope: !3, file: !3, line: 3902, type: !11908, scopeLine: 3903, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13618 = !DILocalVariable(name: "but", arg: 1, scope: !13617, file: !3, line: 3902, type: !1558)
!13619 = !DILocation(line: 3902, column: 32, scope: !13617)
!13620 = !DILocalVariable(name: "flag", arg: 2, scope: !13617, file: !3, line: 3902, type: !1067)
!13621 = !DILocation(line: 3902, column: 41, scope: !13617)
!13622 = !DILocation(line: 3904, column: 20, scope: !13617)
!13623 = !DILocation(line: 3904, column: 19, scope: !13617)
!13624 = !DILocation(line: 3904, column: 2, scope: !13617)
!13625 = !DILocation(line: 3904, column: 7, scope: !13617)
!13626 = !DILocation(line: 3904, column: 16, scope: !13617)
!13627 = !DILocation(line: 3905, column: 1, scope: !13617)
!13628 = distinct !DISubprogram(name: "uiButSetMenuFromPulldown", scope: !3, file: !3, line: 3907, type: !4535, scopeLine: 3908, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13629 = !DILocalVariable(name: "but", arg: 1, scope: !13628, file: !3, line: 3907, type: !1558)
!13630 = !DILocation(line: 3907, column: 38, scope: !13628)
!13631 = !DILocation(line: 3910, column: 2, scope: !13628)
!13632 = !DILocation(line: 3910, column: 7, scope: !13628)
!13633 = !DILocation(line: 3910, column: 12, scope: !13628)
!13634 = !DILocation(line: 3911, column: 21, scope: !13628)
!13635 = !DILocation(line: 3911, column: 2, scope: !13628)
!13636 = !DILocation(line: 3912, column: 19, scope: !13628)
!13637 = !DILocation(line: 3912, column: 2, scope: !13628)
!13638 = !DILocation(line: 3913, column: 1, scope: !13628)
!13639 = distinct !DISubprogram(name: "uiButGetRetVal", scope: !3, file: !3, line: 3915, type: !7069, scopeLine: 3916, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13640 = !DILocalVariable(name: "but", arg: 1, scope: !13639, file: !3, line: 3915, type: !1558)
!13641 = !DILocation(line: 3915, column: 27, scope: !13639)
!13642 = !DILocation(line: 3917, column: 9, scope: !13639)
!13643 = !DILocation(line: 3917, column: 14, scope: !13639)
!13644 = !DILocation(line: 3917, column: 2, scope: !13639)
!13645 = distinct !DISubprogram(name: "uiButSetDragID", scope: !3, file: !3, line: 3920, type: !13646, scopeLine: 3921, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13646 = !DISubroutineType(types: !13647)
!13647 = !{null, !1558, !1987}
!13648 = !DILocalVariable(name: "but", arg: 1, scope: !13645, file: !3, line: 3920, type: !1558)
!13649 = !DILocation(line: 3920, column: 28, scope: !13645)
!13650 = !DILocalVariable(name: "id", arg: 2, scope: !13645, file: !3, line: 3920, type: !1987)
!13651 = !DILocation(line: 3920, column: 37, scope: !13645)
!13652 = !DILocation(line: 3922, column: 2, scope: !13645)
!13653 = !DILocation(line: 3922, column: 7, scope: !13645)
!13654 = !DILocation(line: 3922, column: 16, scope: !13645)
!13655 = !DILocation(line: 3923, column: 26, scope: !13645)
!13656 = !DILocation(line: 3923, column: 18, scope: !13645)
!13657 = !DILocation(line: 3923, column: 2, scope: !13645)
!13658 = !DILocation(line: 3923, column: 7, scope: !13645)
!13659 = !DILocation(line: 3923, column: 16, scope: !13645)
!13660 = !DILocation(line: 3924, column: 1, scope: !13645)
!13661 = distinct !DISubprogram(name: "uiButSetDragRNA", scope: !3, file: !3, line: 3926, type: !13662, scopeLine: 3927, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13662 = !DISubroutineType(types: !13663)
!13663 = !{null, !1558, !8894}
!13664 = !DILocalVariable(name: "but", arg: 1, scope: !13661, file: !3, line: 3926, type: !1558)
!13665 = !DILocation(line: 3926, column: 29, scope: !13661)
!13666 = !DILocalVariable(name: "ptr", arg: 2, scope: !13661, file: !3, line: 3926, type: !8894)
!13667 = !DILocation(line: 3926, column: 46, scope: !13661)
!13668 = !DILocation(line: 3928, column: 2, scope: !13661)
!13669 = !DILocation(line: 3928, column: 7, scope: !13661)
!13670 = !DILocation(line: 3928, column: 16, scope: !13661)
!13671 = !DILocation(line: 3929, column: 26, scope: !13661)
!13672 = !DILocation(line: 3929, column: 18, scope: !13661)
!13673 = !DILocation(line: 3929, column: 2, scope: !13661)
!13674 = !DILocation(line: 3929, column: 7, scope: !13661)
!13675 = !DILocation(line: 3929, column: 16, scope: !13661)
!13676 = !DILocation(line: 3930, column: 1, scope: !13661)
!13677 = distinct !DISubprogram(name: "uiButSetDragPath", scope: !3, file: !3, line: 3932, type: !13678, scopeLine: 3933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13678 = !DISubroutineType(types: !13679)
!13679 = !{null, !1558, !1647}
!13680 = !DILocalVariable(name: "but", arg: 1, scope: !13677, file: !3, line: 3932, type: !1558)
!13681 = !DILocation(line: 3932, column: 30, scope: !13677)
!13682 = !DILocalVariable(name: "path", arg: 2, scope: !13677, file: !3, line: 3932, type: !1647)
!13683 = !DILocation(line: 3932, column: 47, scope: !13677)
!13684 = !DILocation(line: 3934, column: 2, scope: !13677)
!13685 = !DILocation(line: 3934, column: 7, scope: !13677)
!13686 = !DILocation(line: 3934, column: 16, scope: !13677)
!13687 = !DILocation(line: 3935, column: 26, scope: !13677)
!13688 = !DILocation(line: 3935, column: 2, scope: !13677)
!13689 = !DILocation(line: 3935, column: 7, scope: !13677)
!13690 = !DILocation(line: 3935, column: 16, scope: !13677)
!13691 = !DILocation(line: 3936, column: 1, scope: !13677)
!13692 = distinct !DISubprogram(name: "uiButSetDragName", scope: !3, file: !3, line: 3938, type: !13678, scopeLine: 3939, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13693 = !DILocalVariable(name: "but", arg: 1, scope: !13692, file: !3, line: 3938, type: !1558)
!13694 = !DILocation(line: 3938, column: 30, scope: !13692)
!13695 = !DILocalVariable(name: "name", arg: 2, scope: !13692, file: !3, line: 3938, type: !1647)
!13696 = !DILocation(line: 3938, column: 47, scope: !13692)
!13697 = !DILocation(line: 3940, column: 2, scope: !13692)
!13698 = !DILocation(line: 3940, column: 7, scope: !13692)
!13699 = !DILocation(line: 3940, column: 16, scope: !13692)
!13700 = !DILocation(line: 3941, column: 26, scope: !13692)
!13701 = !DILocation(line: 3941, column: 2, scope: !13692)
!13702 = !DILocation(line: 3941, column: 7, scope: !13692)
!13703 = !DILocation(line: 3941, column: 16, scope: !13692)
!13704 = !DILocation(line: 3942, column: 1, scope: !13692)
!13705 = distinct !DISubprogram(name: "uiButSetDragValue", scope: !3, file: !3, line: 3945, type: !4535, scopeLine: 3946, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13706 = !DILocalVariable(name: "but", arg: 1, scope: !13705, file: !3, line: 3945, type: !1558)
!13707 = !DILocation(line: 3945, column: 31, scope: !13705)
!13708 = !DILocation(line: 3947, column: 2, scope: !13705)
!13709 = !DILocation(line: 3947, column: 7, scope: !13705)
!13710 = !DILocation(line: 3947, column: 16, scope: !13705)
!13711 = !DILocation(line: 3948, column: 1, scope: !13705)
!13712 = distinct !DISubprogram(name: "uiButSetDragImage", scope: !3, file: !3, line: 3950, type: !13713, scopeLine: 3951, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13713 = !DISubroutineType(types: !13714)
!13714 = !{null, !1558, !1647, !1067, !3245, !1534}
!13715 = !DILocalVariable(name: "but", arg: 1, scope: !13712, file: !3, line: 3950, type: !1558)
!13716 = !DILocation(line: 3950, column: 31, scope: !13712)
!13717 = !DILocalVariable(name: "path", arg: 2, scope: !13712, file: !3, line: 3950, type: !1647)
!13718 = !DILocation(line: 3950, column: 48, scope: !13712)
!13719 = !DILocalVariable(name: "icon", arg: 3, scope: !13712, file: !3, line: 3950, type: !1067)
!13720 = !DILocation(line: 3950, column: 58, scope: !13712)
!13721 = !DILocalVariable(name: "imb", arg: 4, scope: !13712, file: !3, line: 3950, type: !3245)
!13722 = !DILocation(line: 3950, column: 78, scope: !13712)
!13723 = !DILocalVariable(name: "scale", arg: 5, scope: !13712, file: !3, line: 3950, type: !1534)
!13724 = !DILocation(line: 3950, column: 89, scope: !13712)
!13725 = !DILocation(line: 3952, column: 2, scope: !13712)
!13726 = !DILocation(line: 3952, column: 7, scope: !13712)
!13727 = !DILocation(line: 3952, column: 16, scope: !13712)
!13728 = !DILocation(line: 3953, column: 14, scope: !13712)
!13729 = !DILocation(line: 3953, column: 2, scope: !13712)
!13730 = !DILocation(line: 3953, column: 7, scope: !13712)
!13731 = !DILocation(line: 3953, column: 12, scope: !13712)
!13732 = !DILocation(line: 3954, column: 26, scope: !13712)
!13733 = !DILocation(line: 3954, column: 2, scope: !13712)
!13734 = !DILocation(line: 3954, column: 7, scope: !13712)
!13735 = !DILocation(line: 3954, column: 16, scope: !13712)
!13736 = !DILocation(line: 3955, column: 13, scope: !13712)
!13737 = !DILocation(line: 3955, column: 2, scope: !13712)
!13738 = !DILocation(line: 3955, column: 7, scope: !13712)
!13739 = !DILocation(line: 3955, column: 11, scope: !13712)
!13740 = !DILocation(line: 3956, column: 19, scope: !13712)
!13741 = !DILocation(line: 3956, column: 2, scope: !13712)
!13742 = !DILocation(line: 3956, column: 7, scope: !13712)
!13743 = !DILocation(line: 3956, column: 17, scope: !13712)
!13744 = !DILocation(line: 3957, column: 1, scope: !13712)
!13745 = distinct !DISubprogram(name: "uiButGetOperatorPtrRNA", scope: !3, file: !3, line: 3959, type: !13746, scopeLine: 3960, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13746 = !DISubroutineType(types: !13747)
!13747 = !{!1752, !1558}
!13748 = !DILocalVariable(name: "but", arg: 1, scope: !13745, file: !3, line: 3959, type: !1558)
!13749 = !DILocation(line: 3959, column: 43, scope: !13745)
!13750 = !DILocation(line: 3961, column: 6, scope: !13751)
!13751 = distinct !DILexicalBlock(scope: !13745, file: !3, line: 3961, column: 6)
!13752 = !DILocation(line: 3961, column: 11, scope: !13751)
!13753 = !DILocation(line: 3961, column: 18, scope: !13751)
!13754 = !DILocation(line: 3961, column: 22, scope: !13751)
!13755 = !DILocation(line: 3961, column: 27, scope: !13751)
!13756 = !DILocation(line: 3961, column: 6, scope: !13745)
!13757 = !DILocation(line: 3962, column: 16, scope: !13758)
!13758 = distinct !DILexicalBlock(scope: !13751, file: !3, line: 3961, column: 34)
!13759 = !DILocation(line: 3962, column: 3, scope: !13758)
!13760 = !DILocation(line: 3962, column: 8, scope: !13758)
!13761 = !DILocation(line: 3962, column: 14, scope: !13758)
!13762 = !DILocation(line: 3963, column: 37, scope: !13758)
!13763 = !DILocation(line: 3963, column: 42, scope: !13758)
!13764 = !DILocation(line: 3963, column: 49, scope: !13758)
!13765 = !DILocation(line: 3963, column: 54, scope: !13758)
!13766 = !DILocation(line: 3963, column: 3, scope: !13758)
!13767 = !DILocation(line: 3964, column: 2, scope: !13758)
!13768 = !DILocation(line: 3966, column: 9, scope: !13745)
!13769 = !DILocation(line: 3966, column: 14, scope: !13745)
!13770 = !DILocation(line: 3966, column: 2, scope: !13745)
!13771 = distinct !DISubprogram(name: "uiButSetUnitType", scope: !3, file: !3, line: 3969, type: !13772, scopeLine: 3970, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13772 = !DISubroutineType(types: !13773)
!13773 = !{null, !1558, !4766}
!13774 = !DILocalVariable(name: "but", arg: 1, scope: !13771, file: !3, line: 3969, type: !1558)
!13775 = !DILocation(line: 3969, column: 30, scope: !13771)
!13776 = !DILocalVariable(name: "unit_type", arg: 2, scope: !13771, file: !3, line: 3969, type: !4766)
!13777 = !DILocation(line: 3969, column: 45, scope: !13771)
!13778 = !DILocation(line: 3971, column: 35, scope: !13771)
!13779 = !DILocation(line: 3971, column: 19, scope: !13771)
!13780 = !DILocation(line: 3971, column: 2, scope: !13771)
!13781 = !DILocation(line: 3971, column: 7, scope: !13771)
!13782 = !DILocation(line: 3971, column: 17, scope: !13771)
!13783 = !DILocation(line: 3972, column: 1, scope: !13771)
!13784 = distinct !DISubprogram(name: "uiBlockSetHandleFunc", scope: !3, file: !3, line: 3990, type: !13785, scopeLine: 3991, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13785 = !DISubroutineType(types: !13786)
!13786 = !{null, !1695, !1821, !1535}
!13787 = !DILocalVariable(name: "block", arg: 1, scope: !13784, file: !3, line: 3990, type: !1695)
!13788 = !DILocation(line: 3990, column: 36, scope: !13784)
!13789 = !DILocalVariable(name: "func", arg: 2, scope: !13784, file: !3, line: 3990, type: !1821)
!13790 = !DILocation(line: 3990, column: 61, scope: !13784)
!13791 = !DILocalVariable(name: "arg", arg: 3, scope: !13784, file: !3, line: 3990, type: !1535)
!13792 = !DILocation(line: 3990, column: 73, scope: !13784)
!13793 = !DILocation(line: 3992, column: 23, scope: !13784)
!13794 = !DILocation(line: 3992, column: 2, scope: !13784)
!13795 = !DILocation(line: 3992, column: 9, scope: !13784)
!13796 = !DILocation(line: 3992, column: 21, scope: !13784)
!13797 = !DILocation(line: 3993, column: 27, scope: !13784)
!13798 = !DILocation(line: 3993, column: 2, scope: !13784)
!13799 = !DILocation(line: 3993, column: 9, scope: !13784)
!13800 = !DILocation(line: 3993, column: 25, scope: !13784)
!13801 = !DILocation(line: 3994, column: 1, scope: !13784)
!13802 = distinct !DISubprogram(name: "uiBlockSetButmFunc", scope: !3, file: !3, line: 3996, type: !13803, scopeLine: 3997, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13803 = !DISubroutineType(types: !13804)
!13804 = !{null, !1695, !1815, !1535}
!13805 = !DILocalVariable(name: "block", arg: 1, scope: !13802, file: !3, line: 3996, type: !1695)
!13806 = !DILocation(line: 3996, column: 34, scope: !13802)
!13807 = !DILocalVariable(name: "func", arg: 2, scope: !13802, file: !3, line: 3996, type: !1815)
!13808 = !DILocation(line: 3996, column: 58, scope: !13802)
!13809 = !DILocalVariable(name: "arg", arg: 3, scope: !13802, file: !3, line: 3996, type: !1535)
!13810 = !DILocation(line: 3996, column: 70, scope: !13802)
!13811 = !DILocation(line: 3998, column: 21, scope: !13802)
!13812 = !DILocation(line: 3998, column: 2, scope: !13802)
!13813 = !DILocation(line: 3998, column: 9, scope: !13802)
!13814 = !DILocation(line: 3998, column: 19, scope: !13802)
!13815 = !DILocation(line: 3999, column: 25, scope: !13802)
!13816 = !DILocation(line: 3999, column: 2, scope: !13802)
!13817 = !DILocation(line: 3999, column: 9, scope: !13802)
!13818 = !DILocation(line: 3999, column: 23, scope: !13802)
!13819 = !DILocation(line: 4000, column: 1, scope: !13802)
!13820 = distinct !DISubprogram(name: "uiBlockSetFunc", scope: !3, file: !3, line: 4002, type: !13821, scopeLine: 4003, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13821 = !DISubroutineType(types: !13822)
!13822 = !{null, !1695, !1610, !1535, !1535}
!13823 = !DILocalVariable(name: "block", arg: 1, scope: !13820, file: !3, line: 4002, type: !1695)
!13824 = !DILocation(line: 4002, column: 30, scope: !13820)
!13825 = !DILocalVariable(name: "func", arg: 2, scope: !13820, file: !3, line: 4002, type: !1610)
!13826 = !DILocation(line: 4002, column: 53, scope: !13820)
!13827 = !DILocalVariable(name: "arg1", arg: 3, scope: !13820, file: !3, line: 4002, type: !1535)
!13828 = !DILocation(line: 4002, column: 65, scope: !13820)
!13829 = !DILocalVariable(name: "arg2", arg: 4, scope: !13820, file: !3, line: 4002, type: !1535)
!13830 = !DILocation(line: 4002, column: 77, scope: !13820)
!13831 = !DILocation(line: 4004, column: 16, scope: !13820)
!13832 = !DILocation(line: 4004, column: 2, scope: !13820)
!13833 = !DILocation(line: 4004, column: 9, scope: !13820)
!13834 = !DILocation(line: 4004, column: 14, scope: !13820)
!13835 = !DILocation(line: 4005, column: 21, scope: !13820)
!13836 = !DILocation(line: 4005, column: 2, scope: !13820)
!13837 = !DILocation(line: 4005, column: 9, scope: !13820)
!13838 = !DILocation(line: 4005, column: 19, scope: !13820)
!13839 = !DILocation(line: 4006, column: 21, scope: !13820)
!13840 = !DILocation(line: 4006, column: 2, scope: !13820)
!13841 = !DILocation(line: 4006, column: 9, scope: !13820)
!13842 = !DILocation(line: 4006, column: 19, scope: !13820)
!13843 = !DILocation(line: 4007, column: 1, scope: !13820)
!13844 = distinct !DISubprogram(name: "uiBlockSetNFunc", scope: !3, file: !3, line: 4009, type: !13845, scopeLine: 4010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13845 = !DISubroutineType(types: !13846)
!13846 = !{null, !1695, !1618, !1535, !1535}
!13847 = !DILocalVariable(name: "block", arg: 1, scope: !13844, file: !3, line: 4009, type: !1695)
!13848 = !DILocation(line: 4009, column: 31, scope: !13844)
!13849 = !DILocalVariable(name: "funcN", arg: 2, scope: !13844, file: !3, line: 4009, type: !1618)
!13850 = !DILocation(line: 4009, column: 55, scope: !13844)
!13851 = !DILocalVariable(name: "argN", arg: 3, scope: !13844, file: !3, line: 4009, type: !1535)
!13852 = !DILocation(line: 4009, column: 68, scope: !13844)
!13853 = !DILocalVariable(name: "arg2", arg: 4, scope: !13844, file: !3, line: 4009, type: !1535)
!13854 = !DILocation(line: 4009, column: 80, scope: !13844)
!13855 = !DILocation(line: 4011, column: 6, scope: !13856)
!13856 = distinct !DILexicalBlock(scope: !13844, file: !3, line: 4011, column: 6)
!13857 = !DILocation(line: 4011, column: 13, scope: !13856)
!13858 = !DILocation(line: 4011, column: 6, scope: !13844)
!13859 = !DILocation(line: 4012, column: 3, scope: !13860)
!13860 = distinct !DILexicalBlock(scope: !13856, file: !3, line: 4011, column: 24)
!13861 = !DILocation(line: 4012, column: 13, scope: !13860)
!13862 = !DILocation(line: 4012, column: 20, scope: !13860)
!13863 = !DILocation(line: 4013, column: 2, scope: !13860)
!13864 = !DILocation(line: 4015, column: 17, scope: !13844)
!13865 = !DILocation(line: 4015, column: 2, scope: !13844)
!13866 = !DILocation(line: 4015, column: 9, scope: !13844)
!13867 = !DILocation(line: 4015, column: 15, scope: !13844)
!13868 = !DILocation(line: 4016, column: 21, scope: !13844)
!13869 = !DILocation(line: 4016, column: 2, scope: !13844)
!13870 = !DILocation(line: 4016, column: 9, scope: !13844)
!13871 = !DILocation(line: 4016, column: 19, scope: !13844)
!13872 = !DILocation(line: 4017, column: 21, scope: !13844)
!13873 = !DILocation(line: 4017, column: 2, scope: !13844)
!13874 = !DILocation(line: 4017, column: 9, scope: !13844)
!13875 = !DILocation(line: 4017, column: 19, scope: !13844)
!13876 = !DILocation(line: 4018, column: 1, scope: !13844)
!13877 = distinct !DISubprogram(name: "uiButSetRenameFunc", scope: !3, file: !3, line: 4020, type: !13878, scopeLine: 4021, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13878 = !DISubroutineType(types: !13879)
!13879 = !{null, !1558, !1654, !1535}
!13880 = !DILocalVariable(name: "but", arg: 1, scope: !13877, file: !3, line: 4020, type: !1558)
!13881 = !DILocation(line: 4020, column: 32, scope: !13877)
!13882 = !DILocalVariable(name: "func", arg: 2, scope: !13877, file: !3, line: 4020, type: !1654)
!13883 = !DILocation(line: 4020, column: 59, scope: !13877)
!13884 = !DILocalVariable(name: "arg1", arg: 3, scope: !13877, file: !3, line: 4020, type: !1535)
!13885 = !DILocation(line: 4020, column: 71, scope: !13877)
!13886 = !DILocation(line: 4022, column: 21, scope: !13877)
!13887 = !DILocation(line: 4022, column: 2, scope: !13877)
!13888 = !DILocation(line: 4022, column: 7, scope: !13877)
!13889 = !DILocation(line: 4022, column: 19, scope: !13877)
!13890 = !DILocation(line: 4023, column: 21, scope: !13877)
!13891 = !DILocation(line: 4023, column: 2, scope: !13877)
!13892 = !DILocation(line: 4023, column: 7, scope: !13877)
!13893 = !DILocation(line: 4023, column: 19, scope: !13877)
!13894 = !DILocation(line: 4024, column: 1, scope: !13877)
!13895 = distinct !DISubprogram(name: "uiBlockSetDrawExtraFunc", scope: !3, file: !3, line: 4026, type: !13896, scopeLine: 4027, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13896 = !DISubroutineType(types: !13897)
!13897 = !{null, !1695, !13898, !1535, !1535}
!13898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13899, size: 64)
!13899 = !DISubroutineType(types: !13900)
!13900 = !{null, !4272, !1535, !1535, !1535, !1877}
!13901 = !DILocalVariable(name: "block", arg: 1, scope: !13895, file: !3, line: 4026, type: !1695)
!13902 = !DILocation(line: 4026, column: 39, scope: !13895)
!13903 = !DILocalVariable(name: "func", arg: 2, scope: !13895, file: !3, line: 4026, type: !13898)
!13904 = !DILocation(line: 4026, column: 53, scope: !13895)
!13905 = !DILocalVariable(name: "arg1", arg: 3, scope: !13895, file: !3, line: 4026, type: !1535)
!13906 = !DILocation(line: 4026, column: 132, scope: !13895)
!13907 = !DILocalVariable(name: "arg2", arg: 4, scope: !13895, file: !3, line: 4026, type: !1535)
!13908 = !DILocation(line: 4026, column: 144, scope: !13895)
!13909 = !DILocation(line: 4028, column: 21, scope: !13895)
!13910 = !DILocation(line: 4028, column: 2, scope: !13895)
!13911 = !DILocation(line: 4028, column: 9, scope: !13895)
!13912 = !DILocation(line: 4028, column: 19, scope: !13895)
!13913 = !DILocation(line: 4029, column: 26, scope: !13895)
!13914 = !DILocation(line: 4029, column: 2, scope: !13895)
!13915 = !DILocation(line: 4029, column: 9, scope: !13895)
!13916 = !DILocation(line: 4029, column: 24, scope: !13895)
!13917 = !DILocation(line: 4030, column: 26, scope: !13895)
!13918 = !DILocation(line: 4030, column: 2, scope: !13895)
!13919 = !DILocation(line: 4030, column: 9, scope: !13895)
!13920 = !DILocation(line: 4030, column: 24, scope: !13895)
!13921 = !DILocation(line: 4031, column: 1, scope: !13895)
!13922 = distinct !DISubprogram(name: "uiButSetFunc", scope: !3, file: !3, line: 4033, type: !13923, scopeLine: 4034, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13923 = !DISubroutineType(types: !13924)
!13924 = !{null, !1558, !1610, !1535, !1535}
!13925 = !DILocalVariable(name: "but", arg: 1, scope: !13922, file: !3, line: 4033, type: !1558)
!13926 = !DILocation(line: 4033, column: 26, scope: !13922)
!13927 = !DILocalVariable(name: "func", arg: 2, scope: !13922, file: !3, line: 4033, type: !1610)
!13928 = !DILocation(line: 4033, column: 47, scope: !13922)
!13929 = !DILocalVariable(name: "arg1", arg: 3, scope: !13922, file: !3, line: 4033, type: !1535)
!13930 = !DILocation(line: 4033, column: 59, scope: !13922)
!13931 = !DILocalVariable(name: "arg2", arg: 4, scope: !13922, file: !3, line: 4033, type: !1535)
!13932 = !DILocation(line: 4033, column: 71, scope: !13922)
!13933 = !DILocation(line: 4035, column: 14, scope: !13922)
!13934 = !DILocation(line: 4035, column: 2, scope: !13922)
!13935 = !DILocation(line: 4035, column: 7, scope: !13922)
!13936 = !DILocation(line: 4035, column: 12, scope: !13922)
!13937 = !DILocation(line: 4036, column: 19, scope: !13922)
!13938 = !DILocation(line: 4036, column: 2, scope: !13922)
!13939 = !DILocation(line: 4036, column: 7, scope: !13922)
!13940 = !DILocation(line: 4036, column: 17, scope: !13922)
!13941 = !DILocation(line: 4037, column: 19, scope: !13922)
!13942 = !DILocation(line: 4037, column: 2, scope: !13922)
!13943 = !DILocation(line: 4037, column: 7, scope: !13922)
!13944 = !DILocation(line: 4037, column: 17, scope: !13922)
!13945 = !DILocation(line: 4038, column: 1, scope: !13922)
!13946 = distinct !DISubprogram(name: "uiButSetNFunc", scope: !3, file: !3, line: 4040, type: !13947, scopeLine: 4041, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13947 = !DISubroutineType(types: !13948)
!13948 = !{null, !1558, !1618, !1535, !1535}
!13949 = !DILocalVariable(name: "but", arg: 1, scope: !13946, file: !3, line: 4040, type: !1558)
!13950 = !DILocation(line: 4040, column: 27, scope: !13946)
!13951 = !DILocalVariable(name: "funcN", arg: 2, scope: !13946, file: !3, line: 4040, type: !1618)
!13952 = !DILocation(line: 4040, column: 49, scope: !13946)
!13953 = !DILocalVariable(name: "argN", arg: 3, scope: !13946, file: !3, line: 4040, type: !1535)
!13954 = !DILocation(line: 4040, column: 62, scope: !13946)
!13955 = !DILocalVariable(name: "arg2", arg: 4, scope: !13946, file: !3, line: 4040, type: !1535)
!13956 = !DILocation(line: 4040, column: 74, scope: !13946)
!13957 = !DILocation(line: 4042, column: 6, scope: !13958)
!13958 = distinct !DILexicalBlock(scope: !13946, file: !3, line: 4042, column: 6)
!13959 = !DILocation(line: 4042, column: 11, scope: !13958)
!13960 = !DILocation(line: 4042, column: 6, scope: !13946)
!13961 = !DILocation(line: 4043, column: 3, scope: !13962)
!13962 = distinct !DILexicalBlock(scope: !13958, file: !3, line: 4042, column: 22)
!13963 = !DILocation(line: 4043, column: 13, scope: !13962)
!13964 = !DILocation(line: 4043, column: 18, scope: !13962)
!13965 = !DILocation(line: 4044, column: 2, scope: !13962)
!13966 = !DILocation(line: 4046, column: 15, scope: !13946)
!13967 = !DILocation(line: 4046, column: 2, scope: !13946)
!13968 = !DILocation(line: 4046, column: 7, scope: !13946)
!13969 = !DILocation(line: 4046, column: 13, scope: !13946)
!13970 = !DILocation(line: 4047, column: 19, scope: !13946)
!13971 = !DILocation(line: 4047, column: 2, scope: !13946)
!13972 = !DILocation(line: 4047, column: 7, scope: !13946)
!13973 = !DILocation(line: 4047, column: 17, scope: !13946)
!13974 = !DILocation(line: 4048, column: 19, scope: !13946)
!13975 = !DILocation(line: 4048, column: 2, scope: !13946)
!13976 = !DILocation(line: 4048, column: 7, scope: !13946)
!13977 = !DILocation(line: 4048, column: 17, scope: !13946)
!13978 = !DILocation(line: 4049, column: 1, scope: !13946)
!13979 = distinct !DISubprogram(name: "uiButSetCompleteFunc", scope: !3, file: !3, line: 4051, type: !13980, scopeLine: 4052, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13980 = !DISubroutineType(types: !13981)
!13981 = !{null, !1558, !1635, !1535}
!13982 = !DILocalVariable(name: "but", arg: 1, scope: !13979, file: !3, line: 4051, type: !1558)
!13983 = !DILocation(line: 4051, column: 34, scope: !13979)
!13984 = !DILocalVariable(name: "func", arg: 2, scope: !13979, file: !3, line: 4051, type: !1635)
!13985 = !DILocation(line: 4051, column: 57, scope: !13979)
!13986 = !DILocalVariable(name: "arg", arg: 3, scope: !13979, file: !3, line: 4051, type: !1535)
!13987 = !DILocation(line: 4051, column: 69, scope: !13979)
!13988 = !DILocation(line: 4053, column: 27, scope: !13979)
!13989 = !DILocation(line: 4053, column: 2, scope: !13979)
!13990 = !DILocation(line: 4053, column: 7, scope: !13979)
!13991 = !DILocation(line: 4053, column: 25, scope: !13979)
!13992 = !DILocation(line: 4054, column: 22, scope: !13979)
!13993 = !DILocation(line: 4054, column: 2, scope: !13979)
!13994 = !DILocation(line: 4054, column: 7, scope: !13979)
!13995 = !DILocation(line: 4054, column: 20, scope: !13979)
!13996 = !DILocation(line: 4055, column: 1, scope: !13979)
!13997 = distinct !DISubprogram(name: "uiDefBlockBut", scope: !3, file: !3, line: 4057, type: !13998, scopeLine: 4058, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!13998 = !DISubroutineType(types: !13999)
!13999 = !{!1558, !1695, !1691, !1535, !1647, !1067, !1067, !1545, !1545, !1647}
!14000 = !DILocalVariable(name: "block", arg: 1, scope: !13997, file: !3, line: 4057, type: !1695)
!14001 = !DILocation(line: 4057, column: 31, scope: !13997)
!14002 = !DILocalVariable(name: "func", arg: 2, scope: !13997, file: !3, line: 4057, type: !1691)
!14003 = !DILocation(line: 4057, column: 56, scope: !13997)
!14004 = !DILocalVariable(name: "arg", arg: 3, scope: !13997, file: !3, line: 4057, type: !1535)
!14005 = !DILocation(line: 4057, column: 68, scope: !13997)
!14006 = !DILocalVariable(name: "str", arg: 4, scope: !13997, file: !3, line: 4057, type: !1647)
!14007 = !DILocation(line: 4057, column: 85, scope: !13997)
!14008 = !DILocalVariable(name: "x", arg: 5, scope: !13997, file: !3, line: 4057, type: !1067)
!14009 = !DILocation(line: 4057, column: 94, scope: !13997)
!14010 = !DILocalVariable(name: "y", arg: 6, scope: !13997, file: !3, line: 4057, type: !1067)
!14011 = !DILocation(line: 4057, column: 101, scope: !13997)
!14012 = !DILocalVariable(name: "width", arg: 7, scope: !13997, file: !3, line: 4057, type: !1545)
!14013 = !DILocation(line: 4057, column: 110, scope: !13997)
!14014 = !DILocalVariable(name: "height", arg: 8, scope: !13997, file: !3, line: 4057, type: !1545)
!14015 = !DILocation(line: 4057, column: 123, scope: !13997)
!14016 = !DILocalVariable(name: "tip", arg: 9, scope: !13997, file: !3, line: 4057, type: !1647)
!14017 = !DILocation(line: 4057, column: 143, scope: !13997)
!14018 = !DILocalVariable(name: "but", scope: !13997, file: !3, line: 4059, type: !1558)
!14019 = !DILocation(line: 4059, column: 9, scope: !13997)
!14020 = !DILocation(line: 4059, column: 26, scope: !13997)
!14021 = !DILocation(line: 4059, column: 43, scope: !13997)
!14022 = !DILocation(line: 4059, column: 48, scope: !13997)
!14023 = !DILocation(line: 4059, column: 51, scope: !13997)
!14024 = !DILocation(line: 4059, column: 54, scope: !13997)
!14025 = !DILocation(line: 4059, column: 61, scope: !13997)
!14026 = !DILocation(line: 4059, column: 69, scope: !13997)
!14027 = !DILocation(line: 4059, column: 94, scope: !13997)
!14028 = !DILocation(line: 4059, column: 15, scope: !13997)
!14029 = !DILocation(line: 4060, column: 27, scope: !13997)
!14030 = !DILocation(line: 4060, column: 2, scope: !13997)
!14031 = !DILocation(line: 4060, column: 7, scope: !13997)
!14032 = !DILocation(line: 4060, column: 25, scope: !13997)
!14033 = !DILocation(line: 4061, column: 15, scope: !13997)
!14034 = !DILocation(line: 4061, column: 2, scope: !13997)
!14035 = !DILocation(line: 4062, column: 9, scope: !13997)
!14036 = !DILocation(line: 4062, column: 2, scope: !13997)
!14037 = distinct !DISubprogram(name: "uiDefBlockButN", scope: !3, file: !3, line: 4065, type: !13998, scopeLine: 4066, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!14038 = !DILocalVariable(name: "block", arg: 1, scope: !14037, file: !3, line: 4065, type: !1695)
!14039 = !DILocation(line: 4065, column: 32, scope: !14037)
!14040 = !DILocalVariable(name: "func", arg: 2, scope: !14037, file: !3, line: 4065, type: !1691)
!14041 = !DILocation(line: 4065, column: 57, scope: !14037)
!14042 = !DILocalVariable(name: "argN", arg: 3, scope: !14037, file: !3, line: 4065, type: !1535)
!14043 = !DILocation(line: 4065, column: 69, scope: !14037)
!14044 = !DILocalVariable(name: "str", arg: 4, scope: !14037, file: !3, line: 4065, type: !1647)
!14045 = !DILocation(line: 4065, column: 87, scope: !14037)
!14046 = !DILocalVariable(name: "x", arg: 5, scope: !14037, file: !3, line: 4065, type: !1067)
!14047 = !DILocation(line: 4065, column: 96, scope: !14037)
!14048 = !DILocalVariable(name: "y", arg: 6, scope: !14037, file: !3, line: 4065, type: !1067)
!14049 = !DILocation(line: 4065, column: 103, scope: !14037)
!14050 = !DILocalVariable(name: "width", arg: 7, scope: !14037, file: !3, line: 4065, type: !1545)
!14051 = !DILocation(line: 4065, column: 112, scope: !14037)
!14052 = !DILocalVariable(name: "height", arg: 8, scope: !14037, file: !3, line: 4065, type: !1545)
!14053 = !DILocation(line: 4065, column: 125, scope: !14037)
!14054 = !DILocalVariable(name: "tip", arg: 9, scope: !14037, file: !3, line: 4065, type: !1647)
!14055 = !DILocation(line: 4065, column: 145, scope: !14037)
!14056 = !DILocalVariable(name: "but", scope: !14037, file: !3, line: 4067, type: !1558)
!14057 = !DILocation(line: 4067, column: 9, scope: !14037)
!14058 = !DILocation(line: 4067, column: 26, scope: !14037)
!14059 = !DILocation(line: 4067, column: 43, scope: !14037)
!14060 = !DILocation(line: 4067, column: 48, scope: !14037)
!14061 = !DILocation(line: 4067, column: 51, scope: !14037)
!14062 = !DILocation(line: 4067, column: 54, scope: !14037)
!14063 = !DILocation(line: 4067, column: 61, scope: !14037)
!14064 = !DILocation(line: 4067, column: 95, scope: !14037)
!14065 = !DILocation(line: 4067, column: 15, scope: !14037)
!14066 = !DILocation(line: 4068, column: 27, scope: !14037)
!14067 = !DILocation(line: 4068, column: 2, scope: !14037)
!14068 = !DILocation(line: 4068, column: 7, scope: !14037)
!14069 = !DILocation(line: 4068, column: 25, scope: !14037)
!14070 = !DILocation(line: 4069, column: 6, scope: !14071)
!14071 = distinct !DILexicalBlock(scope: !14037, file: !3, line: 4069, column: 6)
!14072 = !DILocation(line: 4069, column: 11, scope: !14071)
!14073 = !DILocation(line: 4069, column: 6, scope: !14037)
!14074 = !DILocation(line: 4070, column: 3, scope: !14075)
!14075 = distinct !DILexicalBlock(scope: !14071, file: !3, line: 4069, column: 22)
!14076 = !DILocation(line: 4070, column: 13, scope: !14075)
!14077 = !DILocation(line: 4070, column: 18, scope: !14075)
!14078 = !DILocation(line: 4071, column: 2, scope: !14075)
!14079 = !DILocation(line: 4072, column: 19, scope: !14037)
!14080 = !DILocation(line: 4072, column: 2, scope: !14037)
!14081 = !DILocation(line: 4072, column: 7, scope: !14037)
!14082 = !DILocation(line: 4072, column: 17, scope: !14037)
!14083 = !DILocation(line: 4073, column: 15, scope: !14037)
!14084 = !DILocation(line: 4073, column: 2, scope: !14037)
!14085 = !DILocation(line: 4074, column: 9, scope: !14037)
!14086 = !DILocation(line: 4074, column: 2, scope: !14037)
!14087 = distinct !DISubprogram(name: "uiDefPulldownBut", scope: !3, file: !3, line: 4078, type: !13998, scopeLine: 4079, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!14088 = !DILocalVariable(name: "block", arg: 1, scope: !14087, file: !3, line: 4078, type: !1695)
!14089 = !DILocation(line: 4078, column: 34, scope: !14087)
!14090 = !DILocalVariable(name: "func", arg: 2, scope: !14087, file: !3, line: 4078, type: !1691)
!14091 = !DILocation(line: 4078, column: 59, scope: !14087)
!14092 = !DILocalVariable(name: "arg", arg: 3, scope: !14087, file: !3, line: 4078, type: !1535)
!14093 = !DILocation(line: 4078, column: 71, scope: !14087)
!14094 = !DILocalVariable(name: "str", arg: 4, scope: !14087, file: !3, line: 4078, type: !1647)
!14095 = !DILocation(line: 4078, column: 88, scope: !14087)
!14096 = !DILocalVariable(name: "x", arg: 5, scope: !14087, file: !3, line: 4078, type: !1067)
!14097 = !DILocation(line: 4078, column: 97, scope: !14087)
!14098 = !DILocalVariable(name: "y", arg: 6, scope: !14087, file: !3, line: 4078, type: !1067)
!14099 = !DILocation(line: 4078, column: 104, scope: !14087)
!14100 = !DILocalVariable(name: "width", arg: 7, scope: !14087, file: !3, line: 4078, type: !1545)
!14101 = !DILocation(line: 4078, column: 113, scope: !14087)
!14102 = !DILocalVariable(name: "height", arg: 8, scope: !14087, file: !3, line: 4078, type: !1545)
!14103 = !DILocation(line: 4078, column: 126, scope: !14087)
!14104 = !DILocalVariable(name: "tip", arg: 9, scope: !14087, file: !3, line: 4078, type: !1647)
!14105 = !DILocation(line: 4078, column: 146, scope: !14087)
!14106 = !DILocalVariable(name: "but", scope: !14087, file: !3, line: 4080, type: !1558)
!14107 = !DILocation(line: 4080, column: 9, scope: !14087)
!14108 = !DILocation(line: 4080, column: 26, scope: !14087)
!14109 = !DILocation(line: 4080, column: 46, scope: !14087)
!14110 = !DILocation(line: 4080, column: 51, scope: !14087)
!14111 = !DILocation(line: 4080, column: 54, scope: !14087)
!14112 = !DILocation(line: 4080, column: 57, scope: !14087)
!14113 = !DILocation(line: 4080, column: 64, scope: !14087)
!14114 = !DILocation(line: 4080, column: 72, scope: !14087)
!14115 = !DILocation(line: 4080, column: 97, scope: !14087)
!14116 = !DILocation(line: 4080, column: 15, scope: !14087)
!14117 = !DILocation(line: 4081, column: 27, scope: !14087)
!14118 = !DILocation(line: 4081, column: 2, scope: !14087)
!14119 = !DILocation(line: 4081, column: 7, scope: !14087)
!14120 = !DILocation(line: 4081, column: 25, scope: !14087)
!14121 = !DILocation(line: 4082, column: 15, scope: !14087)
!14122 = !DILocation(line: 4082, column: 2, scope: !14087)
!14123 = !DILocation(line: 4083, column: 9, scope: !14087)
!14124 = !DILocation(line: 4083, column: 2, scope: !14087)
!14125 = distinct !DISubprogram(name: "uiDefMenuBut", scope: !3, file: !3, line: 4086, type: !14126, scopeLine: 4087, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!14126 = !DISubroutineType(types: !14127)
!14127 = !{!1558, !1695, !3228, !1535, !1647, !1067, !1067, !1545, !1545, !1647}
!14128 = !DILocalVariable(name: "block", arg: 1, scope: !14125, file: !3, line: 4086, type: !1695)
!14129 = !DILocation(line: 4086, column: 30, scope: !14125)
!14130 = !DILocalVariable(name: "func", arg: 2, scope: !14125, file: !3, line: 4086, type: !3228)
!14131 = !DILocation(line: 4086, column: 54, scope: !14125)
!14132 = !DILocalVariable(name: "arg", arg: 3, scope: !14125, file: !3, line: 4086, type: !1535)
!14133 = !DILocation(line: 4086, column: 66, scope: !14125)
!14134 = !DILocalVariable(name: "str", arg: 4, scope: !14125, file: !3, line: 4086, type: !1647)
!14135 = !DILocation(line: 4086, column: 83, scope: !14125)
!14136 = !DILocalVariable(name: "x", arg: 5, scope: !14125, file: !3, line: 4086, type: !1067)
!14137 = !DILocation(line: 4086, column: 92, scope: !14125)
!14138 = !DILocalVariable(name: "y", arg: 6, scope: !14125, file: !3, line: 4086, type: !1067)
!14139 = !DILocation(line: 4086, column: 99, scope: !14125)
!14140 = !DILocalVariable(name: "width", arg: 7, scope: !14125, file: !3, line: 4086, type: !1545)
!14141 = !DILocation(line: 4086, column: 108, scope: !14125)
!14142 = !DILocalVariable(name: "height", arg: 8, scope: !14125, file: !3, line: 4086, type: !1545)
!14143 = !DILocation(line: 4086, column: 121, scope: !14125)
!14144 = !DILocalVariable(name: "tip", arg: 9, scope: !14125, file: !3, line: 4086, type: !1647)
!14145 = !DILocation(line: 4086, column: 141, scope: !14125)
!14146 = !DILocalVariable(name: "but", scope: !14125, file: !3, line: 4088, type: !1558)
!14147 = !DILocation(line: 4088, column: 9, scope: !14125)
!14148 = !DILocation(line: 4088, column: 26, scope: !14125)
!14149 = !DILocation(line: 4088, column: 46, scope: !14125)
!14150 = !DILocation(line: 4088, column: 51, scope: !14125)
!14151 = !DILocation(line: 4088, column: 54, scope: !14125)
!14152 = !DILocation(line: 4088, column: 57, scope: !14125)
!14153 = !DILocation(line: 4088, column: 64, scope: !14125)
!14154 = !DILocation(line: 4088, column: 72, scope: !14125)
!14155 = !DILocation(line: 4088, column: 97, scope: !14125)
!14156 = !DILocation(line: 4088, column: 15, scope: !14125)
!14157 = !DILocation(line: 4089, column: 26, scope: !14125)
!14158 = !DILocation(line: 4089, column: 2, scope: !14125)
!14159 = !DILocation(line: 4089, column: 7, scope: !14125)
!14160 = !DILocation(line: 4089, column: 24, scope: !14125)
!14161 = !DILocation(line: 4090, column: 15, scope: !14125)
!14162 = !DILocation(line: 4090, column: 2, scope: !14125)
!14163 = !DILocation(line: 4091, column: 9, scope: !14125)
!14164 = !DILocation(line: 4091, column: 2, scope: !14125)
!14165 = distinct !DISubprogram(name: "uiDefIconTextMenuBut", scope: !3, file: !3, line: 4094, type: !14166, scopeLine: 4095, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!14166 = !DISubroutineType(types: !14167)
!14167 = !{!1558, !1695, !3228, !1535, !1067, !1647, !1067, !1067, !1545, !1545, !1647}
!14168 = !DILocalVariable(name: "block", arg: 1, scope: !14165, file: !3, line: 4094, type: !1695)
!14169 = !DILocation(line: 4094, column: 38, scope: !14165)
!14170 = !DILocalVariable(name: "func", arg: 2, scope: !14165, file: !3, line: 4094, type: !3228)
!14171 = !DILocation(line: 4094, column: 62, scope: !14165)
!14172 = !DILocalVariable(name: "arg", arg: 3, scope: !14165, file: !3, line: 4094, type: !1535)
!14173 = !DILocation(line: 4094, column: 74, scope: !14165)
!14174 = !DILocalVariable(name: "icon", arg: 4, scope: !14165, file: !3, line: 4094, type: !1067)
!14175 = !DILocation(line: 4094, column: 83, scope: !14165)
!14176 = !DILocalVariable(name: "str", arg: 5, scope: !14165, file: !3, line: 4094, type: !1647)
!14177 = !DILocation(line: 4094, column: 101, scope: !14165)
!14178 = !DILocalVariable(name: "x", arg: 6, scope: !14165, file: !3, line: 4094, type: !1067)
!14179 = !DILocation(line: 4094, column: 110, scope: !14165)
!14180 = !DILocalVariable(name: "y", arg: 7, scope: !14165, file: !3, line: 4094, type: !1067)
!14181 = !DILocation(line: 4094, column: 117, scope: !14165)
!14182 = !DILocalVariable(name: "width", arg: 8, scope: !14165, file: !3, line: 4094, type: !1545)
!14183 = !DILocation(line: 4094, column: 126, scope: !14165)
!14184 = !DILocalVariable(name: "height", arg: 9, scope: !14165, file: !3, line: 4094, type: !1545)
!14185 = !DILocation(line: 4094, column: 139, scope: !14165)
!14186 = !DILocalVariable(name: "tip", arg: 10, scope: !14165, file: !3, line: 4094, type: !1647)
!14187 = !DILocation(line: 4094, column: 159, scope: !14165)
!14188 = !DILocalVariable(name: "but", scope: !14165, file: !3, line: 4096, type: !1558)
!14189 = !DILocation(line: 4096, column: 9, scope: !14165)
!14190 = !DILocation(line: 4096, column: 26, scope: !14165)
!14191 = !DILocation(line: 4096, column: 46, scope: !14165)
!14192 = !DILocation(line: 4096, column: 51, scope: !14165)
!14193 = !DILocation(line: 4096, column: 54, scope: !14165)
!14194 = !DILocation(line: 4096, column: 57, scope: !14165)
!14195 = !DILocation(line: 4096, column: 64, scope: !14165)
!14196 = !DILocation(line: 4096, column: 72, scope: !14165)
!14197 = !DILocation(line: 4096, column: 97, scope: !14165)
!14198 = !DILocation(line: 4096, column: 15, scope: !14165)
!14199 = !DILocation(line: 4098, column: 26, scope: !14165)
!14200 = !DILocation(line: 4098, column: 2, scope: !14165)
!14201 = !DILocation(line: 4098, column: 7, scope: !14165)
!14202 = !DILocation(line: 4098, column: 12, scope: !14165)
!14203 = !DILocation(line: 4099, column: 2, scope: !14165)
!14204 = !DILocation(line: 4099, column: 7, scope: !14165)
!14205 = !DILocation(line: 4099, column: 12, scope: !14165)
!14206 = !DILocation(line: 4101, column: 2, scope: !14165)
!14207 = !DILocation(line: 4101, column: 7, scope: !14165)
!14208 = !DILocation(line: 4101, column: 16, scope: !14165)
!14209 = !DILocation(line: 4102, column: 2, scope: !14165)
!14210 = !DILocation(line: 4102, column: 7, scope: !14165)
!14211 = !DILocation(line: 4102, column: 12, scope: !14165)
!14212 = !DILocation(line: 4104, column: 26, scope: !14165)
!14213 = !DILocation(line: 4104, column: 2, scope: !14165)
!14214 = !DILocation(line: 4104, column: 7, scope: !14165)
!14215 = !DILocation(line: 4104, column: 24, scope: !14165)
!14216 = !DILocation(line: 4105, column: 15, scope: !14165)
!14217 = !DILocation(line: 4105, column: 2, scope: !14165)
!14218 = !DILocation(line: 4107, column: 9, scope: !14165)
!14219 = !DILocation(line: 4107, column: 2, scope: !14165)
!14220 = distinct !DISubprogram(name: "uiDefIconMenuBut", scope: !3, file: !3, line: 4110, type: !14221, scopeLine: 4111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!14221 = !DISubroutineType(types: !14222)
!14222 = !{!1558, !1695, !3228, !1535, !1067, !1067, !1067, !1545, !1545, !1647}
!14223 = !DILocalVariable(name: "block", arg: 1, scope: !14220, file: !3, line: 4110, type: !1695)
!14224 = !DILocation(line: 4110, column: 34, scope: !14220)
!14225 = !DILocalVariable(name: "func", arg: 2, scope: !14220, file: !3, line: 4110, type: !3228)
!14226 = !DILocation(line: 4110, column: 58, scope: !14220)
!14227 = !DILocalVariable(name: "arg", arg: 3, scope: !14220, file: !3, line: 4110, type: !1535)
!14228 = !DILocation(line: 4110, column: 70, scope: !14220)
!14229 = !DILocalVariable(name: "icon", arg: 4, scope: !14220, file: !3, line: 4110, type: !1067)
!14230 = !DILocation(line: 4110, column: 79, scope: !14220)
!14231 = !DILocalVariable(name: "x", arg: 5, scope: !14220, file: !3, line: 4110, type: !1067)
!14232 = !DILocation(line: 4110, column: 89, scope: !14220)
!14233 = !DILocalVariable(name: "y", arg: 6, scope: !14220, file: !3, line: 4110, type: !1067)
!14234 = !DILocation(line: 4110, column: 96, scope: !14220)
!14235 = !DILocalVariable(name: "width", arg: 7, scope: !14220, file: !3, line: 4110, type: !1545)
!14236 = !DILocation(line: 4110, column: 105, scope: !14220)
!14237 = !DILocalVariable(name: "height", arg: 8, scope: !14220, file: !3, line: 4110, type: !1545)
!14238 = !DILocation(line: 4110, column: 118, scope: !14220)
!14239 = !DILocalVariable(name: "tip", arg: 9, scope: !14220, file: !3, line: 4110, type: !1647)
!14240 = !DILocation(line: 4110, column: 138, scope: !14220)
!14241 = !DILocalVariable(name: "but", scope: !14220, file: !3, line: 4112, type: !1558)
!14242 = !DILocation(line: 4112, column: 9, scope: !14220)
!14243 = !DILocation(line: 4112, column: 26, scope: !14220)
!14244 = !DILocation(line: 4112, column: 50, scope: !14220)
!14245 = !DILocation(line: 4112, column: 53, scope: !14220)
!14246 = !DILocation(line: 4112, column: 56, scope: !14220)
!14247 = !DILocation(line: 4112, column: 63, scope: !14220)
!14248 = !DILocation(line: 4112, column: 71, scope: !14220)
!14249 = !DILocation(line: 4112, column: 96, scope: !14220)
!14250 = !DILocation(line: 4112, column: 15, scope: !14220)
!14251 = !DILocation(line: 4114, column: 26, scope: !14220)
!14252 = !DILocation(line: 4114, column: 2, scope: !14220)
!14253 = !DILocation(line: 4114, column: 7, scope: !14220)
!14254 = !DILocation(line: 4114, column: 12, scope: !14220)
!14255 = !DILocation(line: 4115, column: 2, scope: !14220)
!14256 = !DILocation(line: 4115, column: 7, scope: !14220)
!14257 = !DILocation(line: 4115, column: 12, scope: !14220)
!14258 = !DILocation(line: 4116, column: 2, scope: !14220)
!14259 = !DILocation(line: 4116, column: 7, scope: !14220)
!14260 = !DILocation(line: 4116, column: 16, scope: !14220)
!14261 = !DILocation(line: 4118, column: 26, scope: !14220)
!14262 = !DILocation(line: 4118, column: 2, scope: !14220)
!14263 = !DILocation(line: 4118, column: 7, scope: !14220)
!14264 = !DILocation(line: 4118, column: 24, scope: !14220)
!14265 = !DILocation(line: 4119, column: 15, scope: !14220)
!14266 = !DILocation(line: 4119, column: 2, scope: !14220)
!14267 = !DILocation(line: 4121, column: 9, scope: !14220)
!14268 = !DILocation(line: 4121, column: 2, scope: !14220)
!14269 = distinct !DISubprogram(name: "uiDefIconTextBlockBut", scope: !3, file: !3, line: 4125, type: !14270, scopeLine: 4126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!14270 = !DISubroutineType(types: !14271)
!14271 = !{!1558, !1695, !1691, !1535, !1067, !1647, !1067, !1067, !1545, !1545, !1647}
!14272 = !DILocalVariable(name: "block", arg: 1, scope: !14269, file: !3, line: 4125, type: !1695)
!14273 = !DILocation(line: 4125, column: 39, scope: !14269)
!14274 = !DILocalVariable(name: "func", arg: 2, scope: !14269, file: !3, line: 4125, type: !1691)
!14275 = !DILocation(line: 4125, column: 64, scope: !14269)
!14276 = !DILocalVariable(name: "arg", arg: 3, scope: !14269, file: !3, line: 4125, type: !1535)
!14277 = !DILocation(line: 4125, column: 76, scope: !14269)
!14278 = !DILocalVariable(name: "icon", arg: 4, scope: !14269, file: !3, line: 4125, type: !1067)
!14279 = !DILocation(line: 4125, column: 85, scope: !14269)
!14280 = !DILocalVariable(name: "str", arg: 5, scope: !14269, file: !3, line: 4125, type: !1647)
!14281 = !DILocation(line: 4125, column: 103, scope: !14269)
!14282 = !DILocalVariable(name: "x", arg: 6, scope: !14269, file: !3, line: 4125, type: !1067)
!14283 = !DILocation(line: 4125, column: 112, scope: !14269)
!14284 = !DILocalVariable(name: "y", arg: 7, scope: !14269, file: !3, line: 4125, type: !1067)
!14285 = !DILocation(line: 4125, column: 119, scope: !14269)
!14286 = !DILocalVariable(name: "width", arg: 8, scope: !14269, file: !3, line: 4125, type: !1545)
!14287 = !DILocation(line: 4125, column: 128, scope: !14269)
!14288 = !DILocalVariable(name: "height", arg: 9, scope: !14269, file: !3, line: 4125, type: !1545)
!14289 = !DILocation(line: 4125, column: 141, scope: !14269)
!14290 = !DILocalVariable(name: "tip", arg: 10, scope: !14269, file: !3, line: 4125, type: !1647)
!14291 = !DILocation(line: 4125, column: 161, scope: !14269)
!14292 = !DILocalVariable(name: "but", scope: !14269, file: !3, line: 4127, type: !1558)
!14293 = !DILocation(line: 4127, column: 9, scope: !14269)
!14294 = !DILocation(line: 4127, column: 26, scope: !14269)
!14295 = !DILocation(line: 4127, column: 43, scope: !14269)
!14296 = !DILocation(line: 4127, column: 48, scope: !14269)
!14297 = !DILocation(line: 4127, column: 51, scope: !14269)
!14298 = !DILocation(line: 4127, column: 54, scope: !14269)
!14299 = !DILocation(line: 4127, column: 61, scope: !14269)
!14300 = !DILocation(line: 4127, column: 69, scope: !14269)
!14301 = !DILocation(line: 4127, column: 94, scope: !14269)
!14302 = !DILocation(line: 4127, column: 15, scope: !14269)
!14303 = !DILocation(line: 4130, column: 6, scope: !14304)
!14304 = distinct !DILexicalBlock(scope: !14269, file: !3, line: 4130, column: 6)
!14305 = !DILocation(line: 4130, column: 11, scope: !14304)
!14306 = !DILocation(line: 4130, column: 6, scope: !14269)
!14307 = !DILocation(line: 4131, column: 27, scope: !14308)
!14308 = distinct !DILexicalBlock(scope: !14304, file: !3, line: 4130, column: 36)
!14309 = !DILocation(line: 4131, column: 3, scope: !14308)
!14310 = !DILocation(line: 4131, column: 8, scope: !14308)
!14311 = !DILocation(line: 4131, column: 13, scope: !14308)
!14312 = !DILocation(line: 4132, column: 3, scope: !14308)
!14313 = !DILocation(line: 4132, column: 8, scope: !14308)
!14314 = !DILocation(line: 4132, column: 17, scope: !14308)
!14315 = !DILocation(line: 4133, column: 2, scope: !14308)
!14316 = !DILocation(line: 4134, column: 2, scope: !14269)
!14317 = !DILocation(line: 4134, column: 7, scope: !14269)
!14318 = !DILocation(line: 4134, column: 12, scope: !14269)
!14319 = !DILocation(line: 4135, column: 2, scope: !14269)
!14320 = !DILocation(line: 4135, column: 7, scope: !14269)
!14321 = !DILocation(line: 4135, column: 12, scope: !14269)
!14322 = !DILocation(line: 4137, column: 27, scope: !14269)
!14323 = !DILocation(line: 4137, column: 2, scope: !14269)
!14324 = !DILocation(line: 4137, column: 7, scope: !14269)
!14325 = !DILocation(line: 4137, column: 25, scope: !14269)
!14326 = !DILocation(line: 4138, column: 15, scope: !14269)
!14327 = !DILocation(line: 4138, column: 2, scope: !14269)
!14328 = !DILocation(line: 4140, column: 9, scope: !14269)
!14329 = !DILocation(line: 4140, column: 2, scope: !14269)
!14330 = distinct !DISubprogram(name: "uiDefIconBlockBut", scope: !3, file: !3, line: 4144, type: !14331, scopeLine: 4145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!14331 = !DISubroutineType(types: !14332)
!14332 = !{!1558, !1695, !1691, !1535, !1067, !1067, !1067, !1067, !1545, !1545, !1647}
!14333 = !DILocalVariable(name: "block", arg: 1, scope: !14330, file: !3, line: 4144, type: !1695)
!14334 = !DILocation(line: 4144, column: 35, scope: !14330)
!14335 = !DILocalVariable(name: "func", arg: 2, scope: !14330, file: !3, line: 4144, type: !1691)
!14336 = !DILocation(line: 4144, column: 60, scope: !14330)
!14337 = !DILocalVariable(name: "arg", arg: 3, scope: !14330, file: !3, line: 4144, type: !1535)
!14338 = !DILocation(line: 4144, column: 72, scope: !14330)
!14339 = !DILocalVariable(name: "retval", arg: 4, scope: !14330, file: !3, line: 4144, type: !1067)
!14340 = !DILocation(line: 4144, column: 81, scope: !14330)
!14341 = !DILocalVariable(name: "icon", arg: 5, scope: !14330, file: !3, line: 4144, type: !1067)
!14342 = !DILocation(line: 4144, column: 93, scope: !14330)
!14343 = !DILocalVariable(name: "x", arg: 6, scope: !14330, file: !3, line: 4144, type: !1067)
!14344 = !DILocation(line: 4144, column: 103, scope: !14330)
!14345 = !DILocalVariable(name: "y", arg: 7, scope: !14330, file: !3, line: 4144, type: !1067)
!14346 = !DILocation(line: 4144, column: 110, scope: !14330)
!14347 = !DILocalVariable(name: "width", arg: 8, scope: !14330, file: !3, line: 4144, type: !1545)
!14348 = !DILocation(line: 4144, column: 119, scope: !14330)
!14349 = !DILocalVariable(name: "height", arg: 9, scope: !14330, file: !3, line: 4144, type: !1545)
!14350 = !DILocation(line: 4144, column: 132, scope: !14330)
!14351 = !DILocalVariable(name: "tip", arg: 10, scope: !14330, file: !3, line: 4144, type: !1647)
!14352 = !DILocation(line: 4144, column: 152, scope: !14330)
!14353 = !DILocalVariable(name: "but", scope: !14330, file: !3, line: 4146, type: !1558)
!14354 = !DILocation(line: 4146, column: 9, scope: !14330)
!14355 = !DILocation(line: 4146, column: 26, scope: !14330)
!14356 = !DILocation(line: 4146, column: 40, scope: !14330)
!14357 = !DILocation(line: 4146, column: 52, scope: !14330)
!14358 = !DILocation(line: 4146, column: 55, scope: !14330)
!14359 = !DILocation(line: 4146, column: 58, scope: !14330)
!14360 = !DILocation(line: 4146, column: 65, scope: !14330)
!14361 = !DILocation(line: 4146, column: 73, scope: !14330)
!14362 = !DILocation(line: 4146, column: 98, scope: !14330)
!14363 = !DILocation(line: 4146, column: 15, scope: !14330)
!14364 = !DILocation(line: 4148, column: 26, scope: !14330)
!14365 = !DILocation(line: 4148, column: 2, scope: !14330)
!14366 = !DILocation(line: 4148, column: 7, scope: !14330)
!14367 = !DILocation(line: 4148, column: 12, scope: !14330)
!14368 = !DILocation(line: 4149, column: 2, scope: !14330)
!14369 = !DILocation(line: 4149, column: 7, scope: !14330)
!14370 = !DILocation(line: 4149, column: 12, scope: !14330)
!14371 = !DILocation(line: 4151, column: 2, scope: !14330)
!14372 = !DILocation(line: 4151, column: 7, scope: !14330)
!14373 = !DILocation(line: 4151, column: 16, scope: !14330)
!14374 = !DILocation(line: 4153, column: 27, scope: !14330)
!14375 = !DILocation(line: 4153, column: 2, scope: !14330)
!14376 = !DILocation(line: 4153, column: 7, scope: !14330)
!14377 = !DILocation(line: 4153, column: 25, scope: !14330)
!14378 = !DILocation(line: 4154, column: 15, scope: !14330)
!14379 = !DILocation(line: 4154, column: 2, scope: !14330)
!14380 = !DILocation(line: 4156, column: 9, scope: !14330)
!14381 = !DILocation(line: 4156, column: 2, scope: !14330)
!14382 = distinct !DISubprogram(name: "uiDefKeyevtButS", scope: !3, file: !3, line: 4159, type: !14383, scopeLine: 4160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!14383 = !DISubroutineType(types: !14384)
!14384 = !{!1558, !1695, !1067, !1647, !1067, !1067, !1545, !1545, !1544, !1647}
!14385 = !DILocalVariable(name: "block", arg: 1, scope: !14382, file: !3, line: 4159, type: !1695)
!14386 = !DILocation(line: 4159, column: 33, scope: !14382)
!14387 = !DILocalVariable(name: "retval", arg: 2, scope: !14382, file: !3, line: 4159, type: !1067)
!14388 = !DILocation(line: 4159, column: 44, scope: !14382)
!14389 = !DILocalVariable(name: "str", arg: 3, scope: !14382, file: !3, line: 4159, type: !1647)
!14390 = !DILocation(line: 4159, column: 64, scope: !14382)
!14391 = !DILocalVariable(name: "x", arg: 4, scope: !14382, file: !3, line: 4159, type: !1067)
!14392 = !DILocation(line: 4159, column: 73, scope: !14382)
!14393 = !DILocalVariable(name: "y", arg: 5, scope: !14382, file: !3, line: 4159, type: !1067)
!14394 = !DILocation(line: 4159, column: 80, scope: !14382)
!14395 = !DILocalVariable(name: "width", arg: 6, scope: !14382, file: !3, line: 4159, type: !1545)
!14396 = !DILocation(line: 4159, column: 89, scope: !14382)
!14397 = !DILocalVariable(name: "height", arg: 7, scope: !14382, file: !3, line: 4159, type: !1545)
!14398 = !DILocation(line: 4159, column: 102, scope: !14382)
!14399 = !DILocalVariable(name: "spoin", arg: 8, scope: !14382, file: !3, line: 4159, type: !1544)
!14400 = !DILocation(line: 4159, column: 117, scope: !14382)
!14401 = !DILocalVariable(name: "tip", arg: 9, scope: !14382, file: !3, line: 4159, type: !1647)
!14402 = !DILocation(line: 4159, column: 136, scope: !14382)
!14403 = !DILocalVariable(name: "but", scope: !14382, file: !3, line: 4161, type: !1558)
!14404 = !DILocation(line: 4161, column: 9, scope: !14382)
!14405 = !DILocation(line: 4161, column: 26, scope: !14382)
!14406 = !DILocation(line: 4161, column: 61, scope: !14382)
!14407 = !DILocation(line: 4161, column: 69, scope: !14382)
!14408 = !DILocation(line: 4161, column: 74, scope: !14382)
!14409 = !DILocation(line: 4161, column: 77, scope: !14382)
!14410 = !DILocation(line: 4161, column: 80, scope: !14382)
!14411 = !DILocation(line: 4161, column: 87, scope: !14382)
!14412 = !DILocation(line: 4161, column: 95, scope: !14382)
!14413 = !DILocation(line: 4161, column: 122, scope: !14382)
!14414 = !DILocation(line: 4161, column: 15, scope: !14382)
!14415 = !DILocation(line: 4162, column: 15, scope: !14382)
!14416 = !DILocation(line: 4162, column: 2, scope: !14382)
!14417 = !DILocation(line: 4163, column: 9, scope: !14382)
!14418 = !DILocation(line: 4163, column: 2, scope: !14382)
!14419 = distinct !DISubprogram(name: "uiDefHotKeyevtButS", scope: !3, file: !3, line: 4168, type: !14420, scopeLine: 4169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!14420 = !DISubroutineType(types: !14421)
!14421 = !{!1558, !1695, !1067, !1647, !1067, !1067, !1545, !1545, !1544, !1544, !1647}
!14422 = !DILocalVariable(name: "block", arg: 1, scope: !14419, file: !3, line: 4168, type: !1695)
!14423 = !DILocation(line: 4168, column: 36, scope: !14419)
!14424 = !DILocalVariable(name: "retval", arg: 2, scope: !14419, file: !3, line: 4168, type: !1067)
!14425 = !DILocation(line: 4168, column: 47, scope: !14419)
!14426 = !DILocalVariable(name: "str", arg: 3, scope: !14419, file: !3, line: 4168, type: !1647)
!14427 = !DILocation(line: 4168, column: 67, scope: !14419)
!14428 = !DILocalVariable(name: "x", arg: 4, scope: !14419, file: !3, line: 4168, type: !1067)
!14429 = !DILocation(line: 4168, column: 76, scope: !14419)
!14430 = !DILocalVariable(name: "y", arg: 5, scope: !14419, file: !3, line: 4168, type: !1067)
!14431 = !DILocation(line: 4168, column: 83, scope: !14419)
!14432 = !DILocalVariable(name: "width", arg: 6, scope: !14419, file: !3, line: 4168, type: !1545)
!14433 = !DILocation(line: 4168, column: 92, scope: !14419)
!14434 = !DILocalVariable(name: "height", arg: 7, scope: !14419, file: !3, line: 4168, type: !1545)
!14435 = !DILocation(line: 4168, column: 105, scope: !14419)
!14436 = !DILocalVariable(name: "keypoin", arg: 8, scope: !14419, file: !3, line: 4168, type: !1544)
!14437 = !DILocation(line: 4168, column: 120, scope: !14419)
!14438 = !DILocalVariable(name: "modkeypoin", arg: 9, scope: !14419, file: !3, line: 4168, type: !1544)
!14439 = !DILocation(line: 4168, column: 136, scope: !14419)
!14440 = !DILocalVariable(name: "tip", arg: 10, scope: !14419, file: !3, line: 4168, type: !1647)
!14441 = !DILocation(line: 4168, column: 160, scope: !14419)
!14442 = !DILocalVariable(name: "but", scope: !14419, file: !3, line: 4170, type: !1558)
!14443 = !DILocation(line: 4170, column: 9, scope: !14419)
!14444 = !DILocation(line: 4170, column: 26, scope: !14419)
!14445 = !DILocation(line: 4170, column: 64, scope: !14419)
!14446 = !DILocation(line: 4170, column: 72, scope: !14419)
!14447 = !DILocation(line: 4170, column: 77, scope: !14419)
!14448 = !DILocation(line: 4170, column: 80, scope: !14419)
!14449 = !DILocation(line: 4170, column: 83, scope: !14419)
!14450 = !DILocation(line: 4170, column: 90, scope: !14419)
!14451 = !DILocation(line: 4170, column: 98, scope: !14419)
!14452 = !DILocation(line: 4170, column: 127, scope: !14419)
!14453 = !DILocation(line: 4170, column: 15, scope: !14419)
!14454 = !DILocation(line: 4171, column: 23, scope: !14419)
!14455 = !DILocation(line: 4171, column: 22, scope: !14419)
!14456 = !DILocation(line: 4171, column: 2, scope: !14419)
!14457 = !DILocation(line: 4171, column: 7, scope: !14419)
!14458 = !DILocation(line: 4171, column: 20, scope: !14419)
!14459 = !DILocation(line: 4172, column: 15, scope: !14419)
!14460 = !DILocation(line: 4172, column: 2, scope: !14419)
!14461 = !DILocation(line: 4173, column: 9, scope: !14419)
!14462 = !DILocation(line: 4173, column: 2, scope: !14419)
!14463 = distinct !DISubprogram(name: "uiDefSearchBut", scope: !3, file: !3, line: 4179, type: !14464, scopeLine: 4180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!14464 = !DISubroutineType(types: !14465)
!14465 = !{!1558, !1695, !1535, !1067, !1067, !1067, !1067, !1067, !1545, !1545, !1534, !1534, !1647}
!14466 = !DILocalVariable(name: "block", arg: 1, scope: !14463, file: !3, line: 4179, type: !1695)
!14467 = !DILocation(line: 4179, column: 32, scope: !14463)
!14468 = !DILocalVariable(name: "arg", arg: 2, scope: !14463, file: !3, line: 4179, type: !1535)
!14469 = !DILocation(line: 4179, column: 45, scope: !14463)
!14470 = !DILocalVariable(name: "retval", arg: 3, scope: !14463, file: !3, line: 4179, type: !1067)
!14471 = !DILocation(line: 4179, column: 54, scope: !14463)
!14472 = !DILocalVariable(name: "icon", arg: 4, scope: !14463, file: !3, line: 4179, type: !1067)
!14473 = !DILocation(line: 4179, column: 66, scope: !14463)
!14474 = !DILocalVariable(name: "maxlen", arg: 5, scope: !14463, file: !3, line: 4179, type: !1067)
!14475 = !DILocation(line: 4179, column: 76, scope: !14463)
!14476 = !DILocalVariable(name: "x", arg: 6, scope: !14463, file: !3, line: 4179, type: !1067)
!14477 = !DILocation(line: 4179, column: 88, scope: !14463)
!14478 = !DILocalVariable(name: "y", arg: 7, scope: !14463, file: !3, line: 4179, type: !1067)
!14479 = !DILocation(line: 4179, column: 95, scope: !14463)
!14480 = !DILocalVariable(name: "width", arg: 8, scope: !14463, file: !3, line: 4179, type: !1545)
!14481 = !DILocation(line: 4179, column: 104, scope: !14463)
!14482 = !DILocalVariable(name: "height", arg: 9, scope: !14463, file: !3, line: 4179, type: !1545)
!14483 = !DILocation(line: 4179, column: 117, scope: !14463)
!14484 = !DILocalVariable(name: "a1", arg: 10, scope: !14463, file: !3, line: 4179, type: !1534)
!14485 = !DILocation(line: 4179, column: 131, scope: !14463)
!14486 = !DILocalVariable(name: "a2", arg: 11, scope: !14463, file: !3, line: 4179, type: !1534)
!14487 = !DILocation(line: 4179, column: 141, scope: !14463)
!14488 = !DILocalVariable(name: "tip", arg: 12, scope: !14463, file: !3, line: 4179, type: !1647)
!14489 = !DILocation(line: 4179, column: 157, scope: !14463)
!14490 = !DILocalVariable(name: "but", scope: !14463, file: !3, line: 4181, type: !1558)
!14491 = !DILocation(line: 4181, column: 9, scope: !14463)
!14492 = !DILocation(line: 4181, column: 26, scope: !14463)
!14493 = !DILocation(line: 4181, column: 46, scope: !14463)
!14494 = !DILocation(line: 4181, column: 58, scope: !14463)
!14495 = !DILocation(line: 4181, column: 61, scope: !14463)
!14496 = !DILocation(line: 4181, column: 64, scope: !14463)
!14497 = !DILocation(line: 4181, column: 71, scope: !14463)
!14498 = !DILocation(line: 4181, column: 79, scope: !14463)
!14499 = !DILocation(line: 4181, column: 89, scope: !14463)
!14500 = !DILocation(line: 4181, column: 97, scope: !14463)
!14501 = !DILocation(line: 4181, column: 101, scope: !14463)
!14502 = !DILocation(line: 4181, column: 105, scope: !14463)
!14503 = !DILocation(line: 4181, column: 15, scope: !14463)
!14504 = !DILocation(line: 4183, column: 26, scope: !14463)
!14505 = !DILocation(line: 4183, column: 2, scope: !14463)
!14506 = !DILocation(line: 4183, column: 7, scope: !14463)
!14507 = !DILocation(line: 4183, column: 12, scope: !14463)
!14508 = !DILocation(line: 4184, column: 2, scope: !14463)
!14509 = !DILocation(line: 4184, column: 7, scope: !14463)
!14510 = !DILocation(line: 4184, column: 12, scope: !14463)
!14511 = !DILocation(line: 4186, column: 2, scope: !14463)
!14512 = !DILocation(line: 4186, column: 7, scope: !14463)
!14513 = !DILocation(line: 4186, column: 16, scope: !14463)
!14514 = !DILocation(line: 4188, column: 15, scope: !14463)
!14515 = !DILocation(line: 4188, column: 2, scope: !14463)
!14516 = !DILocation(line: 4190, column: 9, scope: !14463)
!14517 = !DILocation(line: 4190, column: 2, scope: !14463)
!14518 = distinct !DISubprogram(name: "uiButSetSearchFunc", scope: !3, file: !3, line: 4196, type: !14519, scopeLine: 4197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!14519 = !DISubroutineType(types: !14520)
!14520 = !{null, !1558, !1641, !1535, !1610, !1535}
!14521 = !DILocalVariable(name: "but", arg: 1, scope: !14518, file: !3, line: 4196, type: !1558)
!14522 = !DILocation(line: 4196, column: 32, scope: !14518)
!14523 = !DILocalVariable(name: "sfunc", arg: 2, scope: !14518, file: !3, line: 4196, type: !1641)
!14524 = !DILocation(line: 4196, column: 53, scope: !14518)
!14525 = !DILocalVariable(name: "arg", arg: 3, scope: !14518, file: !3, line: 4196, type: !1535)
!14526 = !DILocation(line: 4196, column: 66, scope: !14518)
!14527 = !DILocalVariable(name: "bfunc", arg: 4, scope: !14518, file: !3, line: 4196, type: !1610)
!14528 = !DILocation(line: 4196, column: 87, scope: !14518)
!14529 = !DILocalVariable(name: "active", arg: 5, scope: !14518, file: !3, line: 4196, type: !1535)
!14530 = !DILocation(line: 4196, column: 100, scope: !14518)
!14531 = !DILocation(line: 4198, column: 21, scope: !14518)
!14532 = !DILocation(line: 4198, column: 2, scope: !14518)
!14533 = !DILocation(line: 4198, column: 7, scope: !14518)
!14534 = !DILocation(line: 4198, column: 19, scope: !14518)
!14535 = !DILocation(line: 4199, column: 20, scope: !14518)
!14536 = !DILocation(line: 4199, column: 2, scope: !14518)
!14537 = !DILocation(line: 4199, column: 7, scope: !14518)
!14538 = !DILocation(line: 4199, column: 18, scope: !14518)
!14539 = !DILocation(line: 4201, column: 15, scope: !14518)
!14540 = !DILocation(line: 4201, column: 20, scope: !14518)
!14541 = !DILocation(line: 4201, column: 27, scope: !14518)
!14542 = !DILocation(line: 4201, column: 32, scope: !14518)
!14543 = !DILocation(line: 4201, column: 2, scope: !14518)
!14544 = !DILocation(line: 4204, column: 12, scope: !14545)
!14545 = distinct !DILexicalBlock(scope: !14518, file: !3, line: 4204, column: 6)
!14546 = !DILocation(line: 4204, column: 17, scope: !14545)
!14547 = !DILocation(line: 4204, column: 24, scope: !14545)
!14548 = !DILocation(line: 4204, column: 29, scope: !14545)
!14549 = !DILocation(line: 4204, column: 8, scope: !14545)
!14550 = !DILocation(line: 4204, column: 6, scope: !14518)
!14551 = !DILocation(line: 4206, column: 7, scope: !14552)
!14552 = distinct !DILexicalBlock(scope: !14553, file: !3, line: 4206, column: 7)
!14553 = distinct !DILexicalBlock(scope: !14545, file: !3, line: 4204, column: 47)
!14554 = !DILocation(line: 4206, column: 12, scope: !14552)
!14555 = !DILocation(line: 4206, column: 7, scope: !14553)
!14556 = !DILocation(line: 4207, column: 23, scope: !14552)
!14557 = !DILocation(line: 4207, column: 4, scope: !14552)
!14558 = !DILocation(line: 4208, column: 2, scope: !14553)
!14559 = !DILocation(line: 4209, column: 1, scope: !14518)
!14560 = distinct !DISubprogram(name: "uiDefSearchButO_ptr", scope: !3, file: !3, line: 4266, type: !14561, scopeLine: 4269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!14561 = !DISubroutineType(types: !14562)
!14562 = !{!1558, !1695, !5372, !2009, !1535, !1067, !1067, !1067, !1067, !1067, !1545, !1545, !1534, !1534, !1647}
!14563 = !DILocalVariable(name: "block", arg: 1, scope: !14560, file: !3, line: 4266, type: !1695)
!14564 = !DILocation(line: 4266, column: 37, scope: !14560)
!14565 = !DILocalVariable(name: "ot", arg: 2, scope: !14560, file: !3, line: 4266, type: !5372)
!14566 = !DILocation(line: 4266, column: 60, scope: !14560)
!14567 = !DILocalVariable(name: "properties", arg: 3, scope: !14560, file: !3, line: 4266, type: !2009)
!14568 = !DILocation(line: 4266, column: 76, scope: !14560)
!14569 = !DILocalVariable(name: "arg", arg: 4, scope: !14560, file: !3, line: 4267, type: !1535)
!14570 = !DILocation(line: 4267, column: 34, scope: !14560)
!14571 = !DILocalVariable(name: "retval", arg: 5, scope: !14560, file: !3, line: 4267, type: !1067)
!14572 = !DILocation(line: 4267, column: 43, scope: !14560)
!14573 = !DILocalVariable(name: "icon", arg: 6, scope: !14560, file: !3, line: 4267, type: !1067)
!14574 = !DILocation(line: 4267, column: 55, scope: !14560)
!14575 = !DILocalVariable(name: "maxlen", arg: 7, scope: !14560, file: !3, line: 4267, type: !1067)
!14576 = !DILocation(line: 4267, column: 65, scope: !14560)
!14577 = !DILocalVariable(name: "x", arg: 8, scope: !14560, file: !3, line: 4267, type: !1067)
!14578 = !DILocation(line: 4267, column: 77, scope: !14560)
!14579 = !DILocalVariable(name: "y", arg: 9, scope: !14560, file: !3, line: 4267, type: !1067)
!14580 = !DILocation(line: 4267, column: 84, scope: !14560)
!14581 = !DILocalVariable(name: "width", arg: 10, scope: !14560, file: !3, line: 4268, type: !1545)
!14582 = !DILocation(line: 4268, column: 34, scope: !14560)
!14583 = !DILocalVariable(name: "height", arg: 11, scope: !14560, file: !3, line: 4268, type: !1545)
!14584 = !DILocation(line: 4268, column: 47, scope: !14560)
!14585 = !DILocalVariable(name: "a1", arg: 12, scope: !14560, file: !3, line: 4268, type: !1534)
!14586 = !DILocation(line: 4268, column: 61, scope: !14560)
!14587 = !DILocalVariable(name: "a2", arg: 13, scope: !14560, file: !3, line: 4268, type: !1534)
!14588 = !DILocation(line: 4268, column: 71, scope: !14560)
!14589 = !DILocalVariable(name: "tip", arg: 14, scope: !14560, file: !3, line: 4268, type: !1647)
!14590 = !DILocation(line: 4268, column: 87, scope: !14560)
!14591 = !DILocalVariable(name: "but", scope: !14560, file: !3, line: 4270, type: !1558)
!14592 = !DILocation(line: 4270, column: 9, scope: !14560)
!14593 = !DILocation(line: 4272, column: 23, scope: !14560)
!14594 = !DILocation(line: 4272, column: 30, scope: !14560)
!14595 = !DILocation(line: 4272, column: 35, scope: !14560)
!14596 = !DILocation(line: 4272, column: 43, scope: !14560)
!14597 = !DILocation(line: 4272, column: 49, scope: !14560)
!14598 = !DILocation(line: 4272, column: 57, scope: !14560)
!14599 = !DILocation(line: 4272, column: 60, scope: !14560)
!14600 = !DILocation(line: 4272, column: 63, scope: !14560)
!14601 = !DILocation(line: 4272, column: 70, scope: !14560)
!14602 = !DILocation(line: 4272, column: 78, scope: !14560)
!14603 = !DILocation(line: 4272, column: 82, scope: !14560)
!14604 = !DILocation(line: 4272, column: 86, scope: !14560)
!14605 = !DILocation(line: 4272, column: 8, scope: !14560)
!14606 = !DILocation(line: 4272, column: 6, scope: !14560)
!14607 = !DILocation(line: 4273, column: 21, scope: !14560)
!14608 = !DILocation(line: 4273, column: 51, scope: !14560)
!14609 = !DILocation(line: 4273, column: 2, scope: !14560)
!14610 = !DILocation(line: 4275, column: 16, scope: !14560)
!14611 = !DILocation(line: 4275, column: 2, scope: !14560)
!14612 = !DILocation(line: 4275, column: 7, scope: !14560)
!14613 = !DILocation(line: 4275, column: 14, scope: !14560)
!14614 = !DILocation(line: 4276, column: 2, scope: !14560)
!14615 = !DILocation(line: 4276, column: 7, scope: !14560)
!14616 = !DILocation(line: 4276, column: 17, scope: !14560)
!14617 = !DILocation(line: 4278, column: 6, scope: !14618)
!14618 = distinct !DILexicalBlock(scope: !14560, file: !3, line: 4278, column: 6)
!14619 = !DILocation(line: 4278, column: 6, scope: !14560)
!14620 = !DILocalVariable(name: "ptr", scope: !14621, file: !3, line: 4279, type: !8894)
!14621 = distinct !DILexicalBlock(scope: !14618, file: !3, line: 4278, column: 18)
!14622 = !DILocation(line: 4279, column: 15, scope: !14621)
!14623 = !DILocation(line: 4279, column: 44, scope: !14621)
!14624 = !DILocation(line: 4279, column: 21, scope: !14621)
!14625 = !DILocation(line: 4281, column: 32, scope: !14621)
!14626 = !DILocation(line: 4281, column: 15, scope: !14621)
!14627 = !DILocation(line: 4281, column: 3, scope: !14621)
!14628 = !DILocation(line: 4281, column: 8, scope: !14621)
!14629 = !DILocation(line: 4281, column: 13, scope: !14621)
!14630 = !DILocation(line: 4282, column: 2, scope: !14621)
!14631 = !DILocation(line: 4284, column: 9, scope: !14560)
!14632 = !DILocation(line: 4284, column: 2, scope: !14560)
!14633 = distinct !DISubprogram(name: "operator_enum_search_cb", scope: !3, file: !3, line: 4212, type: !1643, scopeLine: 4213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!14634 = !DILocalVariable(name: "C", arg: 1, scope: !14633, file: !3, line: 4212, type: !1645)
!14635 = !DILocation(line: 4212, column: 60, scope: !14633)
!14636 = !DILocalVariable(name: "but", arg: 2, scope: !14633, file: !3, line: 4212, type: !1535)
!14637 = !DILocation(line: 4212, column: 69, scope: !14633)
!14638 = !DILocalVariable(name: "str", arg: 3, scope: !14633, file: !3, line: 4212, type: !1647)
!14639 = !DILocation(line: 4212, column: 86, scope: !14633)
!14640 = !DILocalVariable(name: "items", arg: 4, scope: !14633, file: !3, line: 4212, type: !1649)
!14641 = !DILocation(line: 4212, column: 106, scope: !14633)
!14642 = !DILocalVariable(name: "ot", scope: !14633, file: !3, line: 4214, type: !5372)
!14643 = !DILocation(line: 4214, column: 18, scope: !14633)
!14644 = !DILocation(line: 4214, column: 33, scope: !14633)
!14645 = !DILocation(line: 4214, column: 24, scope: !14633)
!14646 = !DILocation(line: 4214, column: 39, scope: !14633)
!14647 = !DILocalVariable(name: "prop", scope: !14633, file: !3, line: 4215, type: !3171)
!14648 = !DILocation(line: 4215, column: 15, scope: !14633)
!14649 = !DILocation(line: 4215, column: 22, scope: !14633)
!14650 = !DILocation(line: 4215, column: 26, scope: !14633)
!14651 = !DILocation(line: 4217, column: 6, scope: !14652)
!14652 = distinct !DILexicalBlock(scope: !14633, file: !3, line: 4217, column: 6)
!14653 = !DILocation(line: 4217, column: 11, scope: !14652)
!14654 = !DILocation(line: 4217, column: 6, scope: !14633)
!14655 = !DILocation(line: 4219, column: 20, scope: !14656)
!14656 = distinct !DILexicalBlock(scope: !14652, file: !3, line: 4217, column: 20)
!14657 = !DILocation(line: 4219, column: 24, scope: !14656)
!14658 = !DILocation(line: 4218, column: 3, scope: !14656)
!14659 = !DILocation(line: 4220, column: 2, scope: !14656)
!14660 = !DILocation(line: 4221, column: 29, scope: !14661)
!14661 = distinct !DILexicalBlock(scope: !14652, file: !3, line: 4221, column: 11)
!14662 = !DILocation(line: 4221, column: 11, scope: !14661)
!14663 = !DILocation(line: 4221, column: 35, scope: !14661)
!14664 = !DILocation(line: 4221, column: 11, scope: !14652)
!14665 = !DILocation(line: 4223, column: 20, scope: !14666)
!14666 = distinct !DILexicalBlock(scope: !14661, file: !3, line: 4221, column: 49)
!14667 = !DILocation(line: 4223, column: 24, scope: !14666)
!14668 = !DILocation(line: 4223, column: 56, scope: !14666)
!14669 = !DILocation(line: 4223, column: 32, scope: !14666)
!14670 = !DILocation(line: 4222, column: 3, scope: !14666)
!14671 = !DILocation(line: 4224, column: 2, scope: !14666)
!14672 = !DILocalVariable(name: "ptr", scope: !14673, file: !3, line: 4226, type: !8894)
!14673 = distinct !DILexicalBlock(scope: !14661, file: !3, line: 4225, column: 7)
!14674 = !DILocation(line: 4226, column: 15, scope: !14673)
!14675 = !DILocation(line: 4226, column: 44, scope: !14673)
!14676 = !DILocation(line: 4226, column: 21, scope: !14673)
!14677 = !DILocalVariable(name: "item", scope: !14673, file: !3, line: 4227, type: !11307)
!14678 = !DILocation(line: 4227, column: 21, scope: !14673)
!14679 = !DILocalVariable(name: "item_array", scope: !14673, file: !3, line: 4227, type: !11307)
!14680 = !DILocation(line: 4227, column: 28, scope: !14673)
!14681 = !DILocalVariable(name: "do_free", scope: !14673, file: !3, line: 4228, type: !1550)
!14682 = !DILocation(line: 4228, column: 8, scope: !14673)
!14683 = !DILocation(line: 4230, column: 39, scope: !14673)
!14684 = !DILocation(line: 4230, column: 42, scope: !14673)
!14685 = !DILocation(line: 4230, column: 47, scope: !14673)
!14686 = !DILocation(line: 4230, column: 3, scope: !14673)
!14687 = !DILocation(line: 4232, column: 15, scope: !14688)
!14688 = distinct !DILexicalBlock(scope: !14673, file: !3, line: 4232, column: 3)
!14689 = !DILocation(line: 4232, column: 13, scope: !14688)
!14690 = !DILocation(line: 4232, column: 8, scope: !14688)
!14691 = !DILocation(line: 4232, column: 27, scope: !14692)
!14692 = distinct !DILexicalBlock(scope: !14688, file: !3, line: 4232, column: 3)
!14693 = !DILocation(line: 4232, column: 33, scope: !14692)
!14694 = !DILocation(line: 4232, column: 3, scope: !14688)
!14695 = !DILocation(line: 4234, column: 23, scope: !14696)
!14696 = distinct !DILexicalBlock(scope: !14697, file: !3, line: 4234, column: 8)
!14697 = distinct !DILexicalBlock(scope: !14692, file: !3, line: 4232, column: 53)
!14698 = !DILocation(line: 4234, column: 29, scope: !14696)
!14699 = !DILocation(line: 4234, column: 35, scope: !14696)
!14700 = !DILocation(line: 4234, column: 8, scope: !14696)
!14701 = !DILocation(line: 4234, column: 8, scope: !14697)
!14702 = !DILocation(line: 4235, column: 34, scope: !14703)
!14703 = distinct !DILexicalBlock(scope: !14704, file: !3, line: 4235, column: 9)
!14704 = distinct !DILexicalBlock(scope: !14696, file: !3, line: 4234, column: 41)
!14705 = !DILocation(line: 4235, column: 41, scope: !14703)
!14706 = !DILocation(line: 4235, column: 47, scope: !14703)
!14707 = !DILocation(line: 4235, column: 53, scope: !14703)
!14708 = !DILocation(line: 4235, column: 18, scope: !14703)
!14709 = !DILocation(line: 4235, column: 15, scope: !14703)
!14710 = !DILocation(line: 4235, column: 9, scope: !14704)
!14711 = !DILocation(line: 4236, column: 6, scope: !14703)
!14712 = !DILocation(line: 4237, column: 4, scope: !14704)
!14713 = !DILocation(line: 4238, column: 3, scope: !14697)
!14714 = !DILocation(line: 4232, column: 49, scope: !14692)
!14715 = !DILocation(line: 4232, column: 3, scope: !14692)
!14716 = distinct !{!14716, !14694, !14717}
!14717 = !DILocation(line: 4238, column: 3, scope: !14688)
!14718 = !DILocation(line: 4240, column: 7, scope: !14719)
!14719 = distinct !DILexicalBlock(scope: !14673, file: !3, line: 4240, column: 7)
!14720 = !DILocation(line: 4240, column: 7, scope: !14673)
!14721 = !DILocation(line: 4241, column: 4, scope: !14719)
!14722 = !DILocation(line: 4241, column: 14, scope: !14719)
!14723 = !DILocation(line: 4243, column: 1, scope: !14633)
!14724 = distinct !DISubprogram(name: "operator_enum_call_cb", scope: !3, file: !3, line: 4245, type: !1612, scopeLine: 4246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!14725 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !14724, file: !3, line: 4245, type: !1614)
!14726 = !DILocation(line: 4245, column: 52, scope: !14724)
!14727 = !DILocalVariable(name: "but", arg: 2, scope: !14724, file: !3, line: 4245, type: !1535)
!14728 = !DILocation(line: 4245, column: 69, scope: !14724)
!14729 = !DILocalVariable(name: "arg2", arg: 3, scope: !14724, file: !3, line: 4245, type: !1535)
!14730 = !DILocation(line: 4245, column: 80, scope: !14724)
!14731 = !DILocalVariable(name: "ot", scope: !14724, file: !3, line: 4247, type: !5372)
!14732 = !DILocation(line: 4247, column: 18, scope: !14724)
!14733 = !DILocation(line: 4247, column: 33, scope: !14724)
!14734 = !DILocation(line: 4247, column: 24, scope: !14724)
!14735 = !DILocation(line: 4247, column: 39, scope: !14724)
!14736 = !DILocalVariable(name: "opptr", scope: !14724, file: !3, line: 4248, type: !8894)
!14737 = !DILocation(line: 4248, column: 14, scope: !14724)
!14738 = !DILocation(line: 4248, column: 45, scope: !14724)
!14739 = !DILocation(line: 4248, column: 22, scope: !14724)
!14740 = !DILocation(line: 4250, column: 6, scope: !14741)
!14741 = distinct !DILexicalBlock(scope: !14724, file: !3, line: 4250, column: 6)
!14742 = !DILocation(line: 4250, column: 6, scope: !14724)
!14743 = !DILocation(line: 4251, column: 7, scope: !14744)
!14744 = distinct !DILexicalBlock(scope: !14745, file: !3, line: 4251, column: 7)
!14745 = distinct !DILexicalBlock(scope: !14741, file: !3, line: 4250, column: 10)
!14746 = !DILocation(line: 4251, column: 11, scope: !14744)
!14747 = !DILocation(line: 4251, column: 7, scope: !14745)
!14748 = !DILocation(line: 4252, column: 26, scope: !14749)
!14749 = distinct !DILexicalBlock(scope: !14744, file: !3, line: 4251, column: 17)
!14750 = !DILocation(line: 4252, column: 33, scope: !14749)
!14751 = !DILocation(line: 4252, column: 37, scope: !14749)
!14752 = !DILocation(line: 4252, column: 43, scope: !14749)
!14753 = !DILocation(line: 4252, column: 4, scope: !14749)
!14754 = !DILocation(line: 4257, column: 3, scope: !14749)
!14755 = !DILocation(line: 4259, column: 56, scope: !14756)
!14756 = distinct !DILexicalBlock(scope: !14744, file: !3, line: 4258, column: 8)
!14757 = !DILocation(line: 4259, column: 60, scope: !14756)
!14758 = !DILocation(line: 4259, column: 4, scope: !14756)
!14759 = !DILocation(line: 4261, column: 2, scope: !14745)
!14760 = !DILocation(line: 4262, column: 1, scope: !14724)
!14761 = distinct !DISubprogram(name: "uiButSetFocusOnEnter", scope: !3, file: !3, line: 4290, type: !14762, scopeLine: 4291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!14762 = !DISubroutineType(types: !14763)
!14763 = !{null, !5340, !1558}
!14764 = !DILocalVariable(name: "win", arg: 1, scope: !14761, file: !3, line: 4290, type: !5340)
!14765 = !DILocation(line: 4290, column: 37, scope: !14761)
!14766 = !DILocalVariable(name: "but", arg: 2, scope: !14761, file: !3, line: 4290, type: !1558)
!14767 = !DILocation(line: 4290, column: 49, scope: !14761)
!14768 = !DILocalVariable(name: "event", scope: !14761, file: !3, line: 4292, type: !14769)
!14769 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEvent", file: !1020, line: 460, baseType: !1830)
!14770 = !DILocation(line: 4292, column: 10, scope: !14761)
!14771 = !DILocation(line: 4294, column: 28, scope: !14761)
!14772 = !DILocation(line: 4294, column: 2, scope: !14761)
!14773 = !DILocation(line: 4296, column: 8, scope: !14761)
!14774 = !DILocation(line: 4296, column: 13, scope: !14761)
!14775 = !DILocation(line: 4297, column: 8, scope: !14761)
!14776 = !DILocation(line: 4297, column: 12, scope: !14761)
!14777 = !DILocation(line: 4298, column: 21, scope: !14761)
!14778 = !DILocation(line: 4298, column: 8, scope: !14761)
!14779 = !DILocation(line: 4298, column: 19, scope: !14761)
!14780 = !DILocation(line: 4299, column: 8, scope: !14761)
!14781 = !DILocation(line: 4299, column: 23, scope: !14761)
!14782 = !DILocation(line: 4301, column: 15, scope: !14761)
!14783 = !DILocation(line: 4301, column: 2, scope: !14761)
!14784 = !DILocation(line: 4302, column: 1, scope: !14761)
!14785 = distinct !DISubprogram(name: "uiButGetStrInfo", scope: !3, file: !3, line: 4304, type: !14786, scopeLine: 4305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!14786 = !DISubroutineType(types: !14787)
!14787 = !{null, !1536, !1558, null}
!14788 = !DILocalVariable(name: "C", arg: 1, scope: !14785, file: !3, line: 4304, type: !1536)
!14789 = !DILocation(line: 4304, column: 32, scope: !14785)
!14790 = !DILocalVariable(name: "but", arg: 2, scope: !14785, file: !3, line: 4304, type: !1558)
!14791 = !DILocation(line: 4304, column: 42, scope: !14785)
!14792 = !DILocalVariable(name: "args", scope: !14785, file: !3, line: 4306, type: !14793)
!14793 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !14794, line: 52, baseType: !14795)
!14794 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!14795 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !14796, line: 32, baseType: !14797)
!14796 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stdarg.h", directory: "/home/venkat/IF-DV")
!14797 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 4306, baseType: !14798)
!14798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14799, size: 192, elements: !2079)
!14799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, line: 4306, size: 192, elements: !14800)
!14800 = !{!14801, !14802, !14803, !14804}
!14801 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !14799, file: !3, line: 4306, baseType: !7, size: 32)
!14802 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !14799, file: !3, line: 4306, baseType: !7, size: 32, offset: 32)
!14803 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !14799, file: !3, line: 4306, baseType: !1535, size: 64, offset: 64)
!14804 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !14799, file: !3, line: 4306, baseType: !1535, size: 64, offset: 128)
!14805 = !DILocation(line: 4306, column: 10, scope: !14785)
!14806 = !DILocalVariable(name: "si", scope: !14785, file: !3, line: 4307, type: !1552)
!14807 = !DILocation(line: 4307, column: 16, scope: !14785)
!14808 = !DILocalVariable(name: "items", scope: !14785, file: !3, line: 4309, type: !11307)
!14809 = !DILocation(line: 4309, column: 20, scope: !14785)
!14810 = !DILocalVariable(name: "item", scope: !14785, file: !3, line: 4309, type: !11307)
!14811 = !DILocation(line: 4309, column: 35, scope: !14785)
!14812 = !DILocalVariable(name: "totitems", scope: !14785, file: !3, line: 4310, type: !1067)
!14813 = !DILocation(line: 4310, column: 6, scope: !14785)
!14814 = !DILocalVariable(name: "free_items", scope: !14785, file: !3, line: 4311, type: !1550)
!14815 = !DILocation(line: 4311, column: 7, scope: !14785)
!14816 = !DILocation(line: 4313, column: 2, scope: !14785)
!14817 = !DILocation(line: 4314, column: 2, scope: !14785)
!14818 = !DILocation(line: 4314, column: 32, scope: !14785)
!14819 = !DILocation(line: 4314, column: 15, scope: !14785)
!14820 = !DILocation(line: 4314, column: 13, scope: !14785)
!14821 = !DILocalVariable(name: "type", scope: !14822, file: !3, line: 4315, type: !1067)
!14822 = distinct !DILexicalBlock(scope: !14785, file: !3, line: 4314, column: 55)
!14823 = !DILocation(line: 4315, column: 7, scope: !14822)
!14824 = !DILocation(line: 4315, column: 14, scope: !14822)
!14825 = !DILocation(line: 4315, column: 18, scope: !14822)
!14826 = !DILocalVariable(name: "tmp", scope: !14822, file: !3, line: 4316, type: !1541)
!14827 = !DILocation(line: 4316, column: 9, scope: !14822)
!14828 = !DILocation(line: 4318, column: 7, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14822, file: !3, line: 4318, column: 7)
!14830 = !DILocation(line: 4318, column: 12, scope: !14829)
!14831 = !DILocation(line: 4318, column: 7, scope: !14822)
!14832 = !DILocation(line: 4319, column: 8, scope: !14833)
!14833 = distinct !DILexicalBlock(scope: !14834, file: !3, line: 4319, column: 8)
!14834 = distinct !DILexicalBlock(scope: !14829, file: !3, line: 4318, column: 30)
!14835 = !DILocation(line: 4319, column: 13, scope: !14833)
!14836 = !DILocation(line: 4319, column: 8, scope: !14834)
!14837 = !DILocation(line: 4320, column: 22, scope: !14838)
!14838 = distinct !DILexicalBlock(scope: !14833, file: !3, line: 4319, column: 18)
!14839 = !DILocation(line: 4320, column: 27, scope: !14838)
!14840 = !DILocation(line: 4320, column: 11, scope: !14838)
!14841 = !DILocation(line: 4320, column: 9, scope: !14838)
!14842 = !DILocation(line: 4321, column: 4, scope: !14838)
!14843 = !DILocation(line: 4323, column: 10, scope: !14844)
!14844 = distinct !DILexicalBlock(scope: !14833, file: !3, line: 4322, column: 9)
!14845 = !DILocation(line: 4325, column: 3, scope: !14834)
!14846 = !DILocation(line: 4326, column: 12, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14829, file: !3, line: 4326, column: 12)
!14848 = !DILocation(line: 4326, column: 17, scope: !14847)
!14849 = !DILocation(line: 4326, column: 12, scope: !14829)
!14850 = !DILocation(line: 4327, column: 8, scope: !14851)
!14851 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 4327, column: 8)
!14852 = distinct !DILexicalBlock(scope: !14847, file: !3, line: 4326, column: 33)
!14853 = !DILocation(line: 4327, column: 13, scope: !14851)
!14854 = !DILocation(line: 4327, column: 17, scope: !14851)
!14855 = !DILocation(line: 4327, column: 20, scope: !14851)
!14856 = !DILocation(line: 4327, column: 25, scope: !14851)
!14857 = !DILocation(line: 4327, column: 8, scope: !14852)
!14858 = !DILocation(line: 4328, column: 22, scope: !14851)
!14859 = !DILocation(line: 4328, column: 27, scope: !14851)
!14860 = !DILocation(line: 4328, column: 11, scope: !14851)
!14861 = !DILocation(line: 4328, column: 9, scope: !14851)
!14862 = !DILocation(line: 4328, column: 5, scope: !14851)
!14863 = !DILocation(line: 4330, column: 10, scope: !14851)
!14864 = !DILocation(line: 4331, column: 3, scope: !14852)
!14865 = !DILocation(line: 4333, column: 7, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14822, file: !3, line: 4333, column: 7)
!14867 = !DILocation(line: 4333, column: 12, scope: !14866)
!14868 = !DILocation(line: 4333, column: 7, scope: !14822)
!14869 = !DILocation(line: 4334, column: 8, scope: !14870)
!14870 = distinct !DILexicalBlock(scope: !14871, file: !3, line: 4334, column: 8)
!14871 = distinct !DILexicalBlock(scope: !14866, file: !3, line: 4333, column: 43)
!14872 = !DILocation(line: 4334, column: 13, scope: !14870)
!14873 = !DILocation(line: 4334, column: 8, scope: !14871)
!14874 = !DILocation(line: 4335, column: 46, scope: !14870)
!14875 = !DILocation(line: 4335, column: 51, scope: !14870)
!14876 = !DILocation(line: 4335, column: 22, scope: !14870)
!14877 = !DILocation(line: 4335, column: 11, scope: !14870)
!14878 = !DILocation(line: 4335, column: 9, scope: !14870)
!14879 = !DILocation(line: 4335, column: 5, scope: !14870)
!14880 = !DILocation(line: 4336, column: 3, scope: !14871)
!14881 = !DILocation(line: 4337, column: 12, scope: !14882)
!14882 = distinct !DILexicalBlock(scope: !14866, file: !3, line: 4337, column: 12)
!14883 = !DILocation(line: 4337, column: 17, scope: !14882)
!14884 = !DILocation(line: 4337, column: 12, scope: !14866)
!14885 = !DILocation(line: 4338, column: 8, scope: !14886)
!14886 = distinct !DILexicalBlock(scope: !14887, file: !3, line: 4338, column: 8)
!14887 = distinct !DILexicalBlock(scope: !14882, file: !3, line: 4337, column: 50)
!14888 = !DILocation(line: 4338, column: 13, scope: !14886)
!14889 = !DILocation(line: 4338, column: 8, scope: !14887)
!14890 = !DILocation(line: 4339, column: 44, scope: !14886)
!14891 = !DILocation(line: 4339, column: 49, scope: !14886)
!14892 = !DILocation(line: 4339, column: 57, scope: !14886)
!14893 = !DILocation(line: 4339, column: 22, scope: !14886)
!14894 = !DILocation(line: 4339, column: 11, scope: !14886)
!14895 = !DILocation(line: 4339, column: 9, scope: !14886)
!14896 = !DILocation(line: 4339, column: 5, scope: !14886)
!14897 = !DILocation(line: 4340, column: 13, scope: !14898)
!14898 = distinct !DILexicalBlock(scope: !14886, file: !3, line: 4340, column: 13)
!14899 = !DILocation(line: 4340, column: 18, scope: !14898)
!14900 = !DILocation(line: 4340, column: 13, scope: !14886)
!14901 = !DILocation(line: 4341, column: 22, scope: !14898)
!14902 = !DILocation(line: 4341, column: 27, scope: !14898)
!14903 = !DILocation(line: 4341, column: 35, scope: !14898)
!14904 = !DILocation(line: 4341, column: 11, scope: !14898)
!14905 = !DILocation(line: 4341, column: 9, scope: !14898)
!14906 = !DILocation(line: 4341, column: 5, scope: !14898)
!14907 = !DILocation(line: 4342, column: 13, scope: !14908)
!14908 = distinct !DILexicalBlock(scope: !14898, file: !3, line: 4342, column: 13)
!14909 = !DILocation(line: 4342, column: 13, scope: !14898)
!14910 = !DILocalVariable(name: "mt", scope: !14911, file: !3, line: 4343, type: !14912)
!14911 = distinct !DILexicalBlock(scope: !14908, file: !3, line: 4342, column: 46)
!14912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14913, size: 64)
!14913 = !DIDerivedType(tag: DW_TAG_typedef, name: "MenuType", file: !1714, line: 256, baseType: !14914)
!14914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MenuType", file: !1714, line: 241, size: 2112, elements: !14915)
!14915 = !{!14916, !14918, !14919, !14920, !14921, !14922, !14923, !14927, !14936}
!14916 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14914, file: !1714, line: 242, baseType: !14917, size: 64)
!14917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14914, size: 64)
!14918 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14914, file: !1714, line: 242, baseType: !14917, size: 64, offset: 64)
!14919 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !14914, file: !1714, line: 244, baseType: !1719, size: 512, offset: 128)
!14920 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !14914, file: !1714, line: 245, baseType: !1719, size: 512, offset: 640)
!14921 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !14914, file: !1714, line: 246, baseType: !1719, size: 512, offset: 1152)
!14922 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !14914, file: !1714, line: 247, baseType: !1647, size: 64, offset: 1664)
!14923 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !14914, file: !1714, line: 250, baseType: !14924, size: 64, offset: 1728)
!14924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14925, size: 64)
!14925 = !DISubroutineType(types: !14926)
!14926 = !{!1067, !1645, !14917}
!14927 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !14914, file: !1714, line: 252, baseType: !14928, size: 64, offset: 1792)
!14928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14929, size: 64)
!14929 = !DISubroutineType(types: !14930)
!14930 = !{null, !1645, !14931}
!14931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14932, size: 64)
!14932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Menu", file: !1714, line: 258, size: 128, elements: !14933)
!14933 = !{!14934, !14935}
!14934 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !14932, file: !1714, line: 259, baseType: !14917, size: 64)
!14935 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !14932, file: !1714, line: 260, baseType: !1779, size: 64, offset: 64)
!14936 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !14914, file: !1714, line: 255, baseType: !1739, size: 256, offset: 1856)
!14937 = !DILocation(line: 4343, column: 15, scope: !14911)
!14938 = !DILocation(line: 4343, column: 37, scope: !14911)
!14939 = !DILocation(line: 4343, column: 20, scope: !14911)
!14940 = !DILocation(line: 4344, column: 9, scope: !14941)
!14941 = distinct !DILexicalBlock(scope: !14911, file: !3, line: 4344, column: 9)
!14942 = !DILocation(line: 4344, column: 9, scope: !14911)
!14943 = !DILocation(line: 4345, column: 23, scope: !14941)
!14944 = !DILocation(line: 4345, column: 27, scope: !14941)
!14945 = !DILocation(line: 4345, column: 12, scope: !14941)
!14946 = !DILocation(line: 4345, column: 10, scope: !14941)
!14947 = !DILocation(line: 4345, column: 6, scope: !14941)
!14948 = !DILocation(line: 4346, column: 4, scope: !14911)
!14949 = !DILocation(line: 4347, column: 3, scope: !14887)
!14950 = !DILocation(line: 4348, column: 12, scope: !14951)
!14951 = distinct !DILexicalBlock(scope: !14882, file: !3, line: 4348, column: 12)
!14952 = !DILocation(line: 4348, column: 12, scope: !14882)
!14953 = !DILocation(line: 4349, column: 8, scope: !14954)
!14954 = distinct !DILexicalBlock(scope: !14955, file: !3, line: 4349, column: 8)
!14955 = distinct !DILexicalBlock(scope: !14951, file: !3, line: 4348, column: 60)
!14956 = !DILocation(line: 4349, column: 13, scope: !14954)
!14957 = !DILocation(line: 4349, column: 8, scope: !14955)
!14958 = !DILocation(line: 4350, column: 9, scope: !14959)
!14959 = distinct !DILexicalBlock(scope: !14960, file: !3, line: 4350, column: 9)
!14960 = distinct !DILexicalBlock(scope: !14954, file: !3, line: 4349, column: 22)
!14961 = !DILocation(line: 4350, column: 14, scope: !14959)
!14962 = !DILocation(line: 4350, column: 9, scope: !14960)
!14963 = !DILocation(line: 4351, column: 44, scope: !14959)
!14964 = !DILocation(line: 4351, column: 49, scope: !14959)
!14965 = !DILocation(line: 4351, column: 23, scope: !14959)
!14966 = !DILocation(line: 4351, column: 12, scope: !14959)
!14967 = !DILocation(line: 4351, column: 10, scope: !14959)
!14968 = !DILocation(line: 4351, column: 6, scope: !14959)
!14969 = !DILocalVariable(name: "t", scope: !14970, file: !3, line: 4353, type: !1647)
!14970 = distinct !DILexicalBlock(scope: !14959, file: !3, line: 4352, column: 10)
!14971 = !DILocation(line: 4353, column: 18, scope: !14970)
!14972 = !DILocation(line: 4353, column: 50, scope: !14970)
!14973 = !DILocation(line: 4353, column: 55, scope: !14970)
!14974 = !DILocation(line: 4353, column: 22, scope: !14970)
!14975 = !DILocation(line: 4354, column: 10, scope: !14976)
!14976 = distinct !DILexicalBlock(scope: !14970, file: !3, line: 4354, column: 10)
!14977 = !DILocation(line: 4354, column: 12, scope: !14976)
!14978 = !DILocation(line: 4354, column: 15, scope: !14976)
!14979 = !DILocation(line: 4354, column: 10, scope: !14970)
!14980 = !DILocation(line: 4355, column: 24, scope: !14976)
!14981 = !DILocation(line: 4355, column: 13, scope: !14976)
!14982 = !DILocation(line: 4355, column: 11, scope: !14976)
!14983 = !DILocation(line: 4355, column: 7, scope: !14976)
!14984 = !DILocation(line: 4357, column: 4, scope: !14960)
!14985 = !DILocation(line: 4358, column: 13, scope: !14986)
!14986 = distinct !DILexicalBlock(scope: !14954, file: !3, line: 4358, column: 13)
!14987 = !DILocation(line: 4358, column: 18, scope: !14986)
!14988 = !DILocation(line: 4358, column: 13, scope: !14954)
!14989 = !DILocation(line: 4359, column: 9, scope: !14990)
!14990 = distinct !DILexicalBlock(scope: !14991, file: !3, line: 4359, column: 9)
!14991 = distinct !DILexicalBlock(scope: !14986, file: !3, line: 4358, column: 26)
!14992 = !DILocation(line: 4359, column: 14, scope: !14990)
!14993 = !DILocation(line: 4359, column: 9, scope: !14991)
!14994 = !DILocation(line: 4360, column: 42, scope: !14990)
!14995 = !DILocation(line: 4360, column: 47, scope: !14990)
!14996 = !DILocation(line: 4360, column: 55, scope: !14990)
!14997 = !DILocation(line: 4360, column: 23, scope: !14990)
!14998 = !DILocation(line: 4360, column: 12, scope: !14990)
!14999 = !DILocation(line: 4360, column: 10, scope: !14990)
!15000 = !DILocation(line: 4360, column: 6, scope: !14990)
!15001 = !DILocalVariable(name: "t", scope: !15002, file: !3, line: 4362, type: !1647)
!15002 = distinct !DILexicalBlock(scope: !14990, file: !3, line: 4361, column: 10)
!15003 = !DILocation(line: 4362, column: 18, scope: !15002)
!15004 = !DILocation(line: 4362, column: 48, scope: !15002)
!15005 = !DILocation(line: 4362, column: 53, scope: !15002)
!15006 = !DILocation(line: 4362, column: 61, scope: !15002)
!15007 = !DILocation(line: 4362, column: 22, scope: !15002)
!15008 = !DILocation(line: 4363, column: 10, scope: !15009)
!15009 = distinct !DILexicalBlock(scope: !15002, file: !3, line: 4363, column: 10)
!15010 = !DILocation(line: 4363, column: 12, scope: !15009)
!15011 = !DILocation(line: 4363, column: 15, scope: !15009)
!15012 = !DILocation(line: 4363, column: 10, scope: !15002)
!15013 = !DILocation(line: 4364, column: 24, scope: !15009)
!15014 = !DILocation(line: 4364, column: 13, scope: !15009)
!15015 = !DILocation(line: 4364, column: 11, scope: !15009)
!15016 = !DILocation(line: 4364, column: 7, scope: !15009)
!15017 = !DILocation(line: 4366, column: 4, scope: !14991)
!15018 = !DILocation(line: 4367, column: 13, scope: !15019)
!15019 = distinct !DILexicalBlock(scope: !14986, file: !3, line: 4367, column: 13)
!15020 = !DILocation(line: 4367, column: 13, scope: !14986)
!15021 = !DILocalVariable(name: "mt", scope: !15022, file: !3, line: 4368, type: !14912)
!15022 = distinct !DILexicalBlock(scope: !15019, file: !3, line: 4367, column: 46)
!15023 = !DILocation(line: 4368, column: 15, scope: !15022)
!15024 = !DILocation(line: 4368, column: 37, scope: !15022)
!15025 = !DILocation(line: 4368, column: 20, scope: !15022)
!15026 = !DILocation(line: 4369, column: 9, scope: !15027)
!15027 = distinct !DILexicalBlock(scope: !15022, file: !3, line: 4369, column: 9)
!15028 = !DILocation(line: 4369, column: 9, scope: !15022)
!15029 = !DILocation(line: 4371, column: 10, scope: !15030)
!15030 = distinct !DILexicalBlock(scope: !15031, file: !3, line: 4371, column: 10)
!15031 = distinct !DILexicalBlock(scope: !15027, file: !3, line: 4369, column: 13)
!15032 = !DILocation(line: 4371, column: 14, scope: !15030)
!15033 = !DILocation(line: 4371, column: 18, scope: !15030)
!15034 = !DILocation(line: 4371, column: 10, scope: !15031)
!15035 = !DILocation(line: 4372, column: 11, scope: !15036)
!15036 = distinct !DILexicalBlock(scope: !15037, file: !3, line: 4372, column: 11)
!15037 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 4371, column: 24)
!15038 = !DILocation(line: 4372, column: 16, scope: !15036)
!15039 = !DILocation(line: 4372, column: 11, scope: !15037)
!15040 = !DILocation(line: 4373, column: 44, scope: !15036)
!15041 = !DILocation(line: 4373, column: 48, scope: !15036)
!15042 = !DILocation(line: 4373, column: 52, scope: !15036)
!15043 = !DILocation(line: 4373, column: 25, scope: !15036)
!15044 = !DILocation(line: 4373, column: 14, scope: !15036)
!15045 = !DILocation(line: 4373, column: 12, scope: !15036)
!15046 = !DILocation(line: 4373, column: 8, scope: !15036)
!15047 = !DILocalVariable(name: "t", scope: !15048, file: !3, line: 4375, type: !1647)
!15048 = distinct !DILexicalBlock(scope: !15036, file: !3, line: 4374, column: 12)
!15049 = !DILocation(line: 4375, column: 20, scope: !15048)
!15050 = !DILocation(line: 4375, column: 50, scope: !15048)
!15051 = !DILocation(line: 4375, column: 54, scope: !15048)
!15052 = !DILocation(line: 4375, column: 58, scope: !15048)
!15053 = !DILocation(line: 4375, column: 24, scope: !15048)
!15054 = !DILocation(line: 4376, column: 12, scope: !15055)
!15055 = distinct !DILexicalBlock(scope: !15048, file: !3, line: 4376, column: 12)
!15056 = !DILocation(line: 4376, column: 14, scope: !15055)
!15057 = !DILocation(line: 4376, column: 17, scope: !15055)
!15058 = !DILocation(line: 4376, column: 12, scope: !15048)
!15059 = !DILocation(line: 4377, column: 26, scope: !15055)
!15060 = !DILocation(line: 4377, column: 15, scope: !15055)
!15061 = !DILocation(line: 4377, column: 13, scope: !15055)
!15062 = !DILocation(line: 4377, column: 9, scope: !15055)
!15063 = !DILocation(line: 4379, column: 6, scope: !15037)
!15064 = !DILocation(line: 4380, column: 5, scope: !15031)
!15065 = !DILocation(line: 4381, column: 4, scope: !15022)
!15066 = !DILocation(line: 4382, column: 3, scope: !14955)
!15067 = !DILocation(line: 4383, column: 12, scope: !15068)
!15068 = distinct !DILexicalBlock(scope: !14951, file: !3, line: 4383, column: 12)
!15069 = !DILocation(line: 4383, column: 17, scope: !15068)
!15070 = !DILocation(line: 4383, column: 12, scope: !14951)
!15071 = !DILocalVariable(name: "_tmp", scope: !15072, file: !3, line: 4384, type: !1647)
!15072 = distinct !DILexicalBlock(scope: !15068, file: !3, line: 4383, column: 47)
!15073 = !DILocation(line: 4384, column: 16, scope: !15072)
!15074 = !DILocation(line: 4385, column: 8, scope: !15075)
!15075 = distinct !DILexicalBlock(scope: !15072, file: !3, line: 4385, column: 8)
!15076 = !DILocation(line: 4385, column: 13, scope: !15075)
!15077 = !DILocation(line: 4385, column: 8, scope: !15072)
!15078 = !DILocation(line: 4386, column: 45, scope: !15075)
!15079 = !DILocation(line: 4386, column: 50, scope: !15075)
!15080 = !DILocation(line: 4386, column: 12, scope: !15075)
!15081 = !DILocation(line: 4386, column: 10, scope: !15075)
!15082 = !DILocation(line: 4386, column: 5, scope: !15075)
!15083 = !DILocation(line: 4387, column: 13, scope: !15084)
!15084 = distinct !DILexicalBlock(scope: !15075, file: !3, line: 4387, column: 13)
!15085 = !DILocation(line: 4387, column: 18, scope: !15084)
!15086 = !DILocation(line: 4387, column: 13, scope: !15075)
!15087 = !DILocation(line: 4388, column: 43, scope: !15084)
!15088 = !DILocation(line: 4388, column: 48, scope: !15084)
!15089 = !DILocation(line: 4388, column: 56, scope: !15084)
!15090 = !DILocation(line: 4388, column: 12, scope: !15084)
!15091 = !DILocation(line: 4388, column: 10, scope: !15084)
!15092 = !DILocation(line: 4388, column: 5, scope: !15084)
!15093 = !DILocation(line: 4389, column: 13, scope: !15094)
!15094 = distinct !DILexicalBlock(scope: !15084, file: !3, line: 4389, column: 13)
!15095 = !DILocation(line: 4389, column: 13, scope: !15084)
!15096 = !DILocalVariable(name: "mt", scope: !15097, file: !3, line: 4390, type: !14912)
!15097 = distinct !DILexicalBlock(scope: !15094, file: !3, line: 4389, column: 46)
!15098 = !DILocation(line: 4390, column: 15, scope: !15097)
!15099 = !DILocation(line: 4390, column: 37, scope: !15097)
!15100 = !DILocation(line: 4390, column: 20, scope: !15097)
!15101 = !DILocation(line: 4391, column: 9, scope: !15102)
!15102 = distinct !DILexicalBlock(scope: !15097, file: !3, line: 4391, column: 9)
!15103 = !DILocation(line: 4391, column: 9, scope: !15097)
!15104 = !DILocation(line: 4392, column: 44, scope: !15102)
!15105 = !DILocation(line: 4392, column: 48, scope: !15102)
!15106 = !DILocation(line: 4392, column: 52, scope: !15102)
!15107 = !DILocation(line: 4392, column: 13, scope: !15102)
!15108 = !DILocation(line: 4392, column: 11, scope: !15102)
!15109 = !DILocation(line: 4392, column: 6, scope: !15102)
!15110 = !DILocation(line: 4393, column: 4, scope: !15097)
!15111 = !DILocation(line: 4394, column: 31, scope: !15112)
!15112 = distinct !DILexicalBlock(scope: !15072, file: !3, line: 4394, column: 8)
!15113 = !DILocation(line: 4394, column: 8, scope: !15112)
!15114 = !DILocation(line: 4394, column: 8, scope: !15072)
!15115 = !DILocation(line: 4395, column: 10, scope: !15116)
!15116 = distinct !DILexicalBlock(scope: !15112, file: !3, line: 4394, column: 38)
!15117 = !DILocation(line: 4396, column: 4, scope: !15116)
!15118 = !DILocation(line: 4397, column: 21, scope: !15072)
!15119 = !DILocation(line: 4397, column: 10, scope: !15072)
!15120 = !DILocation(line: 4397, column: 8, scope: !15072)
!15121 = !DILocation(line: 4398, column: 3, scope: !15072)
!15122 = !DILocation(line: 4399, column: 12, scope: !15123)
!15123 = distinct !DILexicalBlock(scope: !15068, file: !3, line: 4399, column: 12)
!15124 = !DILocation(line: 4399, column: 12, scope: !15068)
!15125 = !DILocalVariable(name: "ptr", scope: !15126, file: !3, line: 4400, type: !8894)
!15126 = distinct !DILexicalBlock(scope: !15123, file: !3, line: 4399, column: 96)
!15127 = !DILocation(line: 4400, column: 16, scope: !15126)
!15128 = !DILocalVariable(name: "prop", scope: !15126, file: !3, line: 4401, type: !3171)
!15129 = !DILocation(line: 4401, column: 17, scope: !15126)
!15130 = !DILocalVariable(name: "value", scope: !15126, file: !3, line: 4402, type: !1067)
!15131 = !DILocation(line: 4402, column: 8, scope: !15126)
!15132 = !DILocation(line: 4405, column: 8, scope: !15133)
!15133 = distinct !DILexicalBlock(scope: !15126, file: !3, line: 4405, column: 8)
!15134 = !DILocation(line: 4405, column: 13, scope: !15133)
!15135 = !DILocation(line: 4405, column: 21, scope: !15133)
!15136 = !DILocation(line: 4405, column: 42, scope: !15133)
!15137 = !DILocation(line: 4405, column: 47, scope: !15133)
!15138 = !DILocation(line: 4405, column: 24, scope: !15133)
!15139 = !DILocation(line: 4405, column: 56, scope: !15133)
!15140 = !DILocation(line: 4405, column: 8, scope: !15126)
!15141 = !DILocation(line: 4407, column: 12, scope: !15142)
!15142 = distinct !DILexicalBlock(scope: !15133, file: !3, line: 4405, column: 70)
!15143 = !DILocation(line: 4407, column: 17, scope: !15142)
!15144 = !DILocation(line: 4407, column: 9, scope: !15142)
!15145 = !DILocation(line: 4408, column: 12, scope: !15142)
!15146 = !DILocation(line: 4408, column: 17, scope: !15142)
!15147 = !DILocation(line: 4408, column: 10, scope: !15142)
!15148 = !DILocation(line: 4409, column: 14, scope: !15142)
!15149 = !DILocation(line: 4409, column: 19, scope: !15142)
!15150 = !DILocation(line: 4409, column: 24, scope: !15142)
!15151 = !DILocation(line: 4409, column: 13, scope: !15142)
!15152 = !DILocation(line: 4409, column: 39, scope: !15142)
!15153 = !DILocation(line: 4409, column: 44, scope: !15142)
!15154 = !DILocation(line: 4409, column: 34, scope: !15142)
!15155 = !DILocation(line: 4409, column: 74, scope: !15142)
!15156 = !DILocation(line: 4409, column: 59, scope: !15142)
!15157 = !DILocation(line: 4409, column: 54, scope: !15142)
!15158 = !DILocation(line: 4409, column: 11, scope: !15142)
!15159 = !DILocation(line: 4410, column: 4, scope: !15142)
!15160 = !DILocation(line: 4411, column: 13, scope: !15161)
!15161 = distinct !DILexicalBlock(scope: !15133, file: !3, line: 4411, column: 13)
!15162 = !DILocation(line: 4411, column: 18, scope: !15161)
!15163 = !DILocation(line: 4411, column: 13, scope: !15133)
!15164 = !DILocalVariable(name: "opptr", scope: !15165, file: !3, line: 4412, type: !8894)
!15165 = distinct !DILexicalBlock(scope: !15161, file: !3, line: 4411, column: 26)
!15166 = !DILocation(line: 4412, column: 17, scope: !15165)
!15167 = !DILocation(line: 4412, column: 48, scope: !15165)
!15168 = !DILocation(line: 4412, column: 25, scope: !15165)
!15169 = !DILocalVariable(name: "ot", scope: !15165, file: !3, line: 4413, type: !5372)
!15170 = !DILocation(line: 4413, column: 21, scope: !15165)
!15171 = !DILocation(line: 4413, column: 26, scope: !15165)
!15172 = !DILocation(line: 4413, column: 31, scope: !15165)
!15173 = !DILocation(line: 4420, column: 9, scope: !15174)
!15174 = distinct !DILexicalBlock(scope: !15165, file: !3, line: 4420, column: 9)
!15175 = !DILocation(line: 4420, column: 13, scope: !15174)
!15176 = !DILocation(line: 4420, column: 18, scope: !15174)
!15177 = !DILocation(line: 4420, column: 39, scope: !15174)
!15178 = !DILocation(line: 4420, column: 43, scope: !15174)
!15179 = !DILocation(line: 4420, column: 21, scope: !15174)
!15180 = !DILocation(line: 4420, column: 49, scope: !15174)
!15181 = !DILocation(line: 4420, column: 9, scope: !15165)
!15182 = !DILocation(line: 4421, column: 39, scope: !15183)
!15183 = distinct !DILexicalBlock(scope: !15184, file: !3, line: 4421, column: 10)
!15184 = distinct !DILexicalBlock(scope: !15174, file: !3, line: 4420, column: 63)
!15185 = !DILocation(line: 4421, column: 46, scope: !15183)
!15186 = !DILocation(line: 4421, column: 50, scope: !15183)
!15187 = !DILocation(line: 4421, column: 10, scope: !15183)
!15188 = !DILocation(line: 4421, column: 10, scope: !15184)
!15189 = !DILocation(line: 4422, column: 13, scope: !15190)
!15190 = distinct !DILexicalBlock(scope: !15183, file: !3, line: 4421, column: 57)
!15191 = !DILocation(line: 4422, column: 11, scope: !15190)
!15192 = !DILocation(line: 4423, column: 14, scope: !15190)
!15193 = !DILocation(line: 4423, column: 18, scope: !15190)
!15194 = !DILocation(line: 4423, column: 12, scope: !15190)
!15195 = !DILocation(line: 4424, column: 37, scope: !15190)
!15196 = !DILocation(line: 4424, column: 44, scope: !15190)
!15197 = !DILocation(line: 4424, column: 48, scope: !15190)
!15198 = !DILocation(line: 4424, column: 15, scope: !15190)
!15199 = !DILocation(line: 4424, column: 13, scope: !15190)
!15200 = !DILocation(line: 4425, column: 6, scope: !15190)
!15201 = !DILocation(line: 4426, column: 5, scope: !15184)
!15202 = !DILocation(line: 4427, column: 4, scope: !15165)
!15203 = !DILocation(line: 4430, column: 8, scope: !15204)
!15204 = distinct !DILexicalBlock(scope: !15126, file: !3, line: 4430, column: 8)
!15205 = !DILocation(line: 4430, column: 12, scope: !15204)
!15206 = !DILocation(line: 4430, column: 15, scope: !15204)
!15207 = !DILocation(line: 4430, column: 8, scope: !15126)
!15208 = !DILocation(line: 4431, column: 10, scope: !15209)
!15209 = distinct !DILexicalBlock(scope: !15210, file: !3, line: 4431, column: 9)
!15210 = distinct !DILexicalBlock(scope: !15204, file: !3, line: 4430, column: 21)
!15211 = !DILocation(line: 4431, column: 9, scope: !15210)
!15212 = !DILocalVariable(name: "i", scope: !15213, file: !3, line: 4432, type: !1067)
!15213 = distinct !DILexicalBlock(scope: !15209, file: !3, line: 4431, column: 16)
!15214 = !DILocation(line: 4432, column: 10, scope: !15213)
!15215 = !DILocation(line: 4434, column: 40, scope: !15213)
!15216 = !DILocation(line: 4434, column: 43, scope: !15213)
!15217 = !DILocation(line: 4434, column: 48, scope: !15213)
!15218 = !DILocation(line: 4434, column: 6, scope: !15213)
!15219 = !DILocation(line: 4435, column: 13, scope: !15220)
!15220 = distinct !DILexicalBlock(scope: !15213, file: !3, line: 4435, column: 6)
!15221 = !DILocation(line: 4435, column: 25, scope: !15220)
!15222 = !DILocation(line: 4435, column: 23, scope: !15220)
!15223 = !DILocation(line: 4435, column: 11, scope: !15220)
!15224 = !DILocation(line: 4435, column: 32, scope: !15225)
!15225 = distinct !DILexicalBlock(scope: !15220, file: !3, line: 4435, column: 6)
!15226 = !DILocation(line: 4435, column: 36, scope: !15225)
!15227 = !DILocation(line: 4435, column: 34, scope: !15225)
!15228 = !DILocation(line: 4435, column: 6, scope: !15220)
!15229 = !DILocation(line: 4436, column: 11, scope: !15230)
!15230 = distinct !DILexicalBlock(scope: !15231, file: !3, line: 4436, column: 11)
!15231 = distinct !DILexicalBlock(scope: !15225, file: !3, line: 4435, column: 59)
!15232 = !DILocation(line: 4436, column: 17, scope: !15230)
!15233 = !DILocation(line: 4436, column: 31, scope: !15230)
!15234 = !DILocation(line: 4436, column: 34, scope: !15230)
!15235 = !DILocation(line: 4436, column: 40, scope: !15230)
!15236 = !DILocation(line: 4436, column: 49, scope: !15230)
!15237 = !DILocation(line: 4436, column: 46, scope: !15230)
!15238 = !DILocation(line: 4436, column: 11, scope: !15231)
!15239 = !DILocation(line: 4437, column: 8, scope: !15230)
!15240 = !DILocation(line: 4438, column: 6, scope: !15231)
!15241 = !DILocation(line: 4435, column: 47, scope: !15225)
!15242 = !DILocation(line: 4435, column: 55, scope: !15225)
!15243 = !DILocation(line: 4435, column: 6, scope: !15225)
!15244 = distinct !{!15244, !15228, !15245}
!15245 = !DILocation(line: 4438, column: 6, scope: !15220)
!15246 = !DILocation(line: 4439, column: 5, scope: !15213)
!15247 = !DILocation(line: 4440, column: 9, scope: !15248)
!15248 = distinct !DILexicalBlock(scope: !15210, file: !3, line: 4440, column: 9)
!15249 = !DILocation(line: 4440, column: 14, scope: !15248)
!15250 = !DILocation(line: 4440, column: 17, scope: !15248)
!15251 = !DILocation(line: 4440, column: 23, scope: !15248)
!15252 = !DILocation(line: 4440, column: 9, scope: !15210)
!15253 = !DILocation(line: 4441, column: 10, scope: !15254)
!15254 = distinct !DILexicalBlock(scope: !15255, file: !3, line: 4441, column: 10)
!15255 = distinct !DILexicalBlock(scope: !15248, file: !3, line: 4440, column: 35)
!15256 = !DILocation(line: 4441, column: 15, scope: !15254)
!15257 = !DILocation(line: 4441, column: 10, scope: !15255)
!15258 = !DILocation(line: 4442, column: 24, scope: !15254)
!15259 = !DILocation(line: 4442, column: 30, scope: !15254)
!15260 = !DILocation(line: 4442, column: 13, scope: !15254)
!15261 = !DILocation(line: 4442, column: 11, scope: !15254)
!15262 = !DILocation(line: 4442, column: 7, scope: !15254)
!15263 = !DILocation(line: 4443, column: 15, scope: !15264)
!15264 = distinct !DILexicalBlock(scope: !15254, file: !3, line: 4443, column: 15)
!15265 = !DILocation(line: 4443, column: 20, scope: !15264)
!15266 = !DILocation(line: 4443, column: 15, scope: !15254)
!15267 = !DILocation(line: 4444, column: 24, scope: !15264)
!15268 = !DILocation(line: 4444, column: 30, scope: !15264)
!15269 = !DILocation(line: 4444, column: 13, scope: !15264)
!15270 = !DILocation(line: 4444, column: 11, scope: !15264)
!15271 = !DILocation(line: 4444, column: 7, scope: !15264)
!15272 = !DILocation(line: 4445, column: 15, scope: !15273)
!15273 = distinct !DILexicalBlock(scope: !15264, file: !3, line: 4445, column: 15)
!15274 = !DILocation(line: 4445, column: 21, scope: !15273)
!15275 = !DILocation(line: 4445, column: 33, scope: !15273)
!15276 = !DILocation(line: 4445, column: 36, scope: !15273)
!15277 = !DILocation(line: 4445, column: 42, scope: !15273)
!15278 = !DILocation(line: 4445, column: 15, scope: !15264)
!15279 = !DILocation(line: 4446, column: 24, scope: !15273)
!15280 = !DILocation(line: 4446, column: 30, scope: !15273)
!15281 = !DILocation(line: 4446, column: 13, scope: !15273)
!15282 = !DILocation(line: 4446, column: 11, scope: !15273)
!15283 = !DILocation(line: 4446, column: 7, scope: !15273)
!15284 = !DILocation(line: 4447, column: 5, scope: !15255)
!15285 = !DILocation(line: 4448, column: 4, scope: !15210)
!15286 = !DILocation(line: 4449, column: 3, scope: !15126)
!15287 = !DILocation(line: 4450, column: 12, scope: !15288)
!15288 = distinct !DILexicalBlock(scope: !15123, file: !3, line: 4450, column: 12)
!15289 = !DILocation(line: 4450, column: 17, scope: !15288)
!15290 = !DILocation(line: 4450, column: 12, scope: !15123)
!15291 = !DILocation(line: 4451, column: 26, scope: !15292)
!15292 = distinct !DILexicalBlock(scope: !15293, file: !3, line: 4451, column: 8)
!15293 = distinct !DILexicalBlock(scope: !15288, file: !3, line: 4450, column: 39)
!15294 = !DILocation(line: 4451, column: 31, scope: !15292)
!15295 = !DILocation(line: 4451, column: 9, scope: !15292)
!15296 = !DILocation(line: 4451, column: 8, scope: !15293)
!15297 = !DILocalVariable(name: "buf", scope: !15298, file: !3, line: 4452, type: !1582)
!15298 = distinct !DILexicalBlock(scope: !15292, file: !3, line: 4451, column: 39)
!15299 = !DILocation(line: 4452, column: 10, scope: !15298)
!15300 = !DILocation(line: 4453, column: 38, scope: !15301)
!15301 = distinct !DILexicalBlock(scope: !15298, file: !3, line: 4453, column: 9)
!15302 = !DILocation(line: 4453, column: 41, scope: !15301)
!15303 = !DILocation(line: 4453, column: 46, scope: !15301)
!15304 = !DILocation(line: 4453, column: 9, scope: !15301)
!15305 = !DILocation(line: 4453, column: 9, scope: !15298)
!15306 = !DILocation(line: 4454, column: 23, scope: !15307)
!15307 = distinct !DILexicalBlock(scope: !15301, file: !3, line: 4453, column: 65)
!15308 = !DILocation(line: 4454, column: 12, scope: !15307)
!15309 = !DILocation(line: 4454, column: 10, scope: !15307)
!15310 = !DILocation(line: 4455, column: 5, scope: !15307)
!15311 = !DILocation(line: 4456, column: 4, scope: !15298)
!15312 = !DILocation(line: 4457, column: 3, scope: !15293)
!15313 = !DILocation(line: 4458, column: 12, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15288, file: !3, line: 4458, column: 12)
!15315 = !DILocation(line: 4458, column: 17, scope: !15314)
!15316 = !DILocation(line: 4458, column: 12, scope: !15288)
!15317 = !DILocalVariable(name: "buf", scope: !15318, file: !3, line: 4460, type: !1582)
!15318 = distinct !DILexicalBlock(scope: !15314, file: !3, line: 4458, column: 41)
!15319 = !DILocation(line: 4460, column: 9, scope: !15318)
!15320 = !DILocation(line: 4461, column: 46, scope: !15321)
!15321 = distinct !DILexicalBlock(scope: !15318, file: !3, line: 4461, column: 8)
!15322 = !DILocation(line: 4461, column: 49, scope: !15321)
!15323 = !DILocation(line: 4461, column: 54, scope: !15321)
!15324 = !DILocation(line: 4461, column: 8, scope: !15321)
!15325 = !DILocation(line: 4461, column: 8, scope: !15318)
!15326 = !DILocation(line: 4462, column: 22, scope: !15327)
!15327 = distinct !DILexicalBlock(scope: !15321, file: !3, line: 4461, column: 73)
!15328 = !DILocation(line: 4462, column: 11, scope: !15327)
!15329 = !DILocation(line: 4462, column: 9, scope: !15327)
!15330 = !DILocation(line: 4463, column: 4, scope: !15327)
!15331 = !DILocation(line: 4464, column: 3, scope: !15318)
!15332 = !DILocation(line: 4466, column: 17, scope: !14822)
!15333 = !DILocation(line: 4466, column: 3, scope: !14822)
!15334 = !DILocation(line: 4466, column: 7, scope: !14822)
!15335 = !DILocation(line: 4466, column: 15, scope: !14822)
!15336 = distinct !{!15336, !14817, !15337}
!15337 = !DILocation(line: 4467, column: 2, scope: !14785)
!15338 = !DILocation(line: 4468, column: 2, scope: !14785)
!15339 = !DILocation(line: 4470, column: 6, scope: !15340)
!15340 = distinct !DILexicalBlock(scope: !14785, file: !3, line: 4470, column: 6)
!15341 = !DILocation(line: 4470, column: 17, scope: !15340)
!15342 = !DILocation(line: 4470, column: 20, scope: !15340)
!15343 = !DILocation(line: 4470, column: 6, scope: !14785)
!15344 = !DILocation(line: 4471, column: 3, scope: !15340)
!15345 = !DILocation(line: 4471, column: 13, scope: !15340)
!15346 = !DILocation(line: 4472, column: 1, scope: !14785)
!15347 = distinct !DISubprogram(name: "ui_but_event_operator_string", scope: !3, file: !3, line: 937, type: !15348, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!15348 = !DISubroutineType(types: !15349)
!15349 = !{!1550, !4272, !1558, !1541, !8324}
!15350 = !DILocalVariable(name: "C", arg: 1, scope: !15347, file: !3, line: 937, type: !4272)
!15351 = !DILocation(line: 937, column: 58, scope: !15347)
!15352 = !DILocalVariable(name: "but", arg: 2, scope: !15347, file: !3, line: 937, type: !1558)
!15353 = !DILocation(line: 937, column: 68, scope: !15347)
!15354 = !DILocalVariable(name: "buf", arg: 3, scope: !15347, file: !3, line: 937, type: !1541)
!15355 = !DILocation(line: 937, column: 79, scope: !15347)
!15356 = !DILocalVariable(name: "buf_len", arg: 4, scope: !15347, file: !3, line: 937, type: !8324)
!15357 = !DILocation(line: 937, column: 97, scope: !15347)
!15358 = !DILocalVariable(name: "mt", scope: !15347, file: !3, line: 939, type: !14912)
!15359 = !DILocation(line: 939, column: 12, scope: !15347)
!15360 = !DILocalVariable(name: "found", scope: !15347, file: !3, line: 940, type: !1550)
!15361 = !DILocation(line: 940, column: 7, scope: !15347)
!15362 = !DILocation(line: 942, column: 6, scope: !15363)
!15363 = distinct !DILexicalBlock(scope: !15347, file: !3, line: 942, column: 6)
!15364 = !DILocation(line: 942, column: 11, scope: !15363)
!15365 = !DILocation(line: 942, column: 6, scope: !15347)
!15366 = !DILocalVariable(name: "prop", scope: !15367, file: !3, line: 943, type: !2009)
!15367 = distinct !DILexicalBlock(scope: !15363, file: !3, line: 942, column: 19)
!15368 = !DILocation(line: 943, column: 15, scope: !15367)
!15369 = !DILocation(line: 943, column: 23, scope: !15367)
!15370 = !DILocation(line: 943, column: 28, scope: !15367)
!15371 = !DILocation(line: 943, column: 22, scope: !15367)
!15372 = !DILocation(line: 943, column: 37, scope: !15367)
!15373 = !DILocation(line: 943, column: 42, scope: !15367)
!15374 = !DILocation(line: 943, column: 49, scope: !15367)
!15375 = !DILocation(line: 945, column: 36, scope: !15376)
!15376 = distinct !DILexicalBlock(scope: !15367, file: !3, line: 945, column: 7)
!15377 = !DILocation(line: 945, column: 39, scope: !15376)
!15378 = !DILocation(line: 945, column: 44, scope: !15376)
!15379 = !DILocation(line: 945, column: 52, scope: !15376)
!15380 = !DILocation(line: 945, column: 60, scope: !15376)
!15381 = !DILocation(line: 945, column: 65, scope: !15376)
!15382 = !DILocation(line: 945, column: 76, scope: !15376)
!15383 = !DILocation(line: 946, column: 36, scope: !15376)
!15384 = !DILocation(line: 946, column: 41, scope: !15376)
!15385 = !DILocation(line: 945, column: 7, scope: !15376)
!15386 = !DILocation(line: 945, column: 7, scope: !15367)
!15387 = !DILocation(line: 948, column: 10, scope: !15388)
!15388 = distinct !DILexicalBlock(scope: !15376, file: !3, line: 947, column: 3)
!15389 = !DILocation(line: 949, column: 3, scope: !15388)
!15390 = !DILocation(line: 950, column: 2, scope: !15367)
!15391 = !DILocation(line: 951, column: 34, scope: !15392)
!15392 = distinct !DILexicalBlock(scope: !15363, file: !3, line: 951, column: 11)
!15393 = !DILocation(line: 951, column: 17, scope: !15392)
!15394 = !DILocation(line: 951, column: 15, scope: !15392)
!15395 = !DILocation(line: 951, column: 11, scope: !15363)
!15396 = !DILocalVariable(name: "prop_menu", scope: !15397, file: !3, line: 952, type: !2009)
!15397 = distinct !DILexicalBlock(scope: !15392, file: !3, line: 951, column: 41)
!15398 = !DILocation(line: 952, column: 15, scope: !15397)
!15399 = !DILocalVariable(name: "prop_menu_name", scope: !15397, file: !3, line: 953, type: !2009)
!15400 = !DILocation(line: 953, column: 15, scope: !15397)
!15401 = !DILocalVariable(name: "val", scope: !15397, file: !3, line: 956, type: !15402)
!15402 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyTemplate", file: !15403, line: 56, baseType: !15404)
!15403 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_idprop.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!15404 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "IDPropertyTemplate", file: !15403, line: 38, size: 128, elements: !15405)
!15405 = !{!15406, !15407, !15408, !15409, !15415, !15416, !15421}
!15406 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !15404, file: !15403, line: 39, baseType: !1067, size: 32)
!15407 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !15404, file: !15403, line: 40, baseType: !1534, size: 32)
!15408 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !15404, file: !15403, line: 41, baseType: !1540, size: 64)
!15409 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !15404, file: !15403, line: 46, baseType: !15410, size: 128)
!15410 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15404, file: !15403, line: 42, size: 128, elements: !15411)
!15411 = !{!15412, !15413, !15414}
!15412 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !15410, file: !15403, line: 43, baseType: !1541, size: 64)
!15413 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !15410, file: !15403, line: 44, baseType: !1545, size: 16, offset: 64)
!15414 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !15410, file: !15403, line: 45, baseType: !1542, size: 8, offset: 80)
!15415 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !15404, file: !15403, line: 47, baseType: !1980, size: 64)
!15416 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !15404, file: !15403, line: 51, baseType: !15417, size: 32)
!15417 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15404, file: !15403, line: 48, size: 32, elements: !15418)
!15418 = !{!15419, !15420}
!15419 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !15417, file: !15403, line: 49, baseType: !1545, size: 16)
!15420 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !15417, file: !15403, line: 50, baseType: !1545, size: 16, offset: 16)
!15421 = !DIDerivedType(tag: DW_TAG_member, name: "matrix_or_vector", scope: !15404, file: !15403, line: 55, baseType: !15422, size: 128)
!15422 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15404, file: !15403, line: 52, size: 128, elements: !15423)
!15423 = !{!15424, !15425}
!15424 = !DIDerivedType(tag: DW_TAG_member, name: "matvec_size", scope: !15422, file: !15403, line: 53, baseType: !1067, size: 32)
!15425 = !DIDerivedType(tag: DW_TAG_member, name: "example", scope: !15422, file: !15403, line: 54, baseType: !1543, size: 64, offset: 64)
!15426 = !DILocation(line: 956, column: 22, scope: !15397)
!15427 = !DILocation(line: 957, column: 15, scope: !15397)
!15428 = !DILocation(line: 957, column: 13, scope: !15397)
!15429 = !DILocation(line: 958, column: 18, scope: !15397)
!15430 = !DILocation(line: 958, column: 47, scope: !15397)
!15431 = !DILocation(line: 958, column: 45, scope: !15397)
!15432 = !DILocation(line: 958, column: 3, scope: !15397)
!15433 = !DILocation(line: 960, column: 20, scope: !15397)
!15434 = !DILocation(line: 960, column: 36, scope: !15397)
!15435 = !DILocation(line: 960, column: 40, scope: !15397)
!15436 = !DILocation(line: 960, column: 3, scope: !15397)
!15437 = !DILocation(line: 962, column: 36, scope: !15438)
!15438 = distinct !DILexicalBlock(scope: !15397, file: !3, line: 962, column: 7)
!15439 = !DILocation(line: 962, column: 83, scope: !15438)
!15440 = !DILocation(line: 963, column: 36, scope: !15438)
!15441 = !DILocation(line: 963, column: 41, scope: !15438)
!15442 = !DILocation(line: 962, column: 7, scope: !15438)
!15443 = !DILocation(line: 962, column: 7, scope: !15397)
!15444 = !DILocation(line: 965, column: 10, scope: !15445)
!15445 = distinct !DILexicalBlock(scope: !15438, file: !3, line: 964, column: 3)
!15446 = !DILocation(line: 966, column: 3, scope: !15445)
!15447 = !DILocation(line: 968, column: 20, scope: !15397)
!15448 = !DILocation(line: 968, column: 3, scope: !15397)
!15449 = !DILocation(line: 969, column: 3, scope: !15397)
!15450 = !DILocation(line: 969, column: 13, scope: !15397)
!15451 = !DILocation(line: 970, column: 2, scope: !15397)
!15452 = !DILocation(line: 972, column: 9, scope: !15347)
!15453 = !DILocation(line: 972, column: 2, scope: !15347)
!15454 = distinct !DISubprogram(name: "ui_but_event_property_operator_string", scope: !3, file: !3, line: 975, type: !15348, scopeLine: 976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!15455 = !DILocalVariable(name: "C", arg: 1, scope: !15454, file: !3, line: 975, type: !4272)
!15456 = !DILocation(line: 975, column: 67, scope: !15454)
!15457 = !DILocalVariable(name: "but", arg: 2, scope: !15454, file: !3, line: 975, type: !1558)
!15458 = !DILocation(line: 975, column: 77, scope: !15454)
!15459 = !DILocalVariable(name: "buf", arg: 3, scope: !15454, file: !3, line: 975, type: !1541)
!15460 = !DILocation(line: 975, column: 88, scope: !15454)
!15461 = !DILocalVariable(name: "buf_len", arg: 4, scope: !15454, file: !3, line: 975, type: !8324)
!15462 = !DILocation(line: 975, column: 106, scope: !15454)
!15463 = !DILocalVariable(name: "ctx_toggle_opnames", scope: !15454, file: !3, line: 978, type: !15464)
!15464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1647, size: 448, elements: !1894)
!15465 = !DILocation(line: 978, column: 14, scope: !15454)
!15466 = !DILocalVariable(name: "num_ops", scope: !15454, file: !3, line: 987, type: !8324)
!15467 = !DILocation(line: 987, column: 15, scope: !15454)
!15468 = !DILocalVariable(name: "found", scope: !15454, file: !3, line: 989, type: !1550)
!15469 = !DILocation(line: 989, column: 7, scope: !15454)
!15470 = !DILocation(line: 992, column: 6, scope: !15471)
!15471 = distinct !DILexicalBlock(scope: !15454, file: !3, line: 992, column: 6)
!15472 = !DILocation(line: 992, column: 11, scope: !15471)
!15473 = !DILocation(line: 992, column: 6, scope: !15454)
!15474 = !DILocalVariable(name: "data_path", scope: !15475, file: !3, line: 999, type: !1541)
!15475 = distinct !DILexicalBlock(scope: !15471, file: !3, line: 992, column: 20)
!15476 = !DILocation(line: 999, column: 9, scope: !15475)
!15477 = !DILocation(line: 1001, column: 7, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15475, file: !3, line: 1001, column: 7)
!15479 = !DILocation(line: 1001, column: 12, scope: !15478)
!15480 = !DILocation(line: 1001, column: 20, scope: !15478)
!15481 = !DILocation(line: 1001, column: 23, scope: !15478)
!15482 = !DILocation(line: 1001, column: 7, scope: !15475)
!15483 = !DILocalVariable(name: "id", scope: !15484, file: !3, line: 1002, type: !1987)
!15484 = distinct !DILexicalBlock(scope: !15478, file: !3, line: 1001, column: 29)
!15485 = !DILocation(line: 1002, column: 8, scope: !15484)
!15486 = !DILocation(line: 1002, column: 13, scope: !15484)
!15487 = !DILocation(line: 1002, column: 18, scope: !15484)
!15488 = !DILocation(line: 1002, column: 26, scope: !15484)
!15489 = !DILocation(line: 1002, column: 29, scope: !15484)
!15490 = !DILocation(line: 1004, column: 8, scope: !15491)
!15491 = distinct !DILexicalBlock(scope: !15484, file: !3, line: 1004, column: 8)
!15492 = !DILocation(line: 1004, column: 21, scope: !15491)
!15493 = !DILocation(line: 1004, column: 8, scope: !15484)
!15494 = !DILocation(line: 1009, column: 25, scope: !15495)
!15495 = distinct !DILexicalBlock(scope: !15496, file: !3, line: 1009, column: 9)
!15496 = distinct !DILexicalBlock(scope: !15491, file: !3, line: 1004, column: 32)
!15497 = !DILocation(line: 1009, column: 30, scope: !15495)
!15498 = !DILocation(line: 1009, column: 38, scope: !15495)
!15499 = !DILocation(line: 1009, column: 9, scope: !15495)
!15500 = !DILocation(line: 1009, column: 9, scope: !15496)
!15501 = !DILocation(line: 1011, column: 72, scope: !15502)
!15502 = distinct !DILexicalBlock(scope: !15495, file: !3, line: 1009, column: 57)
!15503 = !DILocation(line: 1011, column: 77, scope: !15502)
!15504 = !DILocation(line: 1011, column: 48, scope: !15502)
!15505 = !DILocation(line: 1011, column: 18, scope: !15502)
!15506 = !DILocation(line: 1011, column: 16, scope: !15502)
!15507 = !DILocation(line: 1012, column: 5, scope: !15502)
!15508 = !DILocation(line: 1015, column: 26, scope: !15509)
!15509 = distinct !DILexicalBlock(scope: !15510, file: !3, line: 1015, column: 10)
!15510 = distinct !DILexicalBlock(scope: !15495, file: !3, line: 1013, column: 10)
!15511 = !DILocation(line: 1015, column: 31, scope: !15509)
!15512 = !DILocation(line: 1015, column: 39, scope: !15509)
!15513 = !DILocation(line: 1015, column: 10, scope: !15509)
!15514 = !DILocation(line: 1015, column: 10, scope: !15510)
!15515 = !DILocation(line: 1017, column: 83, scope: !15516)
!15516 = distinct !DILexicalBlock(scope: !15509, file: !3, line: 1015, column: 62)
!15517 = !DILocation(line: 1017, column: 88, scope: !15516)
!15518 = !DILocation(line: 1017, column: 59, scope: !15516)
!15519 = !DILocation(line: 1017, column: 19, scope: !15516)
!15520 = !DILocation(line: 1017, column: 17, scope: !15516)
!15521 = !DILocation(line: 1018, column: 6, scope: !15516)
!15522 = !DILocation(line: 1020, column: 4, scope: !15496)
!15523 = !DILocation(line: 1021, column: 13, scope: !15524)
!15524 = distinct !DILexicalBlock(scope: !15491, file: !3, line: 1021, column: 13)
!15525 = !DILocation(line: 1021, column: 26, scope: !15524)
!15526 = !DILocation(line: 1021, column: 13, scope: !15491)
!15527 = !DILocation(line: 1022, column: 25, scope: !15528)
!15528 = distinct !DILexicalBlock(scope: !15529, file: !3, line: 1022, column: 9)
!15529 = distinct !DILexicalBlock(scope: !15524, file: !3, line: 1021, column: 37)
!15530 = !DILocation(line: 1022, column: 30, scope: !15528)
!15531 = !DILocation(line: 1022, column: 38, scope: !15528)
!15532 = !DILocation(line: 1022, column: 9, scope: !15528)
!15533 = !DILocation(line: 1022, column: 9, scope: !15529)
!15534 = !DILocation(line: 1026, column: 48, scope: !15535)
!15535 = distinct !DILexicalBlock(scope: !15528, file: !3, line: 1022, column: 64)
!15536 = !DILocation(line: 1026, column: 53, scope: !15535)
!15537 = !DILocation(line: 1026, column: 62, scope: !15535)
!15538 = !DILocation(line: 1026, column: 67, scope: !15535)
!15539 = !DILocation(line: 1026, column: 18, scope: !15535)
!15540 = !DILocation(line: 1026, column: 16, scope: !15535)
!15541 = !DILocation(line: 1027, column: 5, scope: !15535)
!15542 = !DILocalVariable(name: "path", scope: !15543, file: !3, line: 1030, type: !1541)
!15543 = distinct !DILexicalBlock(scope: !15528, file: !3, line: 1028, column: 10)
!15544 = !DILocation(line: 1030, column: 12, scope: !15543)
!15545 = !DILocation(line: 1030, column: 49, scope: !15543)
!15546 = !DILocation(line: 1030, column: 54, scope: !15543)
!15547 = !DILocation(line: 1030, column: 63, scope: !15543)
!15548 = !DILocation(line: 1030, column: 68, scope: !15543)
!15549 = !DILocation(line: 1030, column: 19, scope: !15543)
!15550 = !DILocation(line: 1032, column: 10, scope: !15551)
!15551 = distinct !DILexicalBlock(scope: !15543, file: !3, line: 1032, column: 10)
!15552 = !DILocation(line: 1032, column: 10, scope: !15543)
!15553 = !DILocation(line: 1033, column: 44, scope: !15554)
!15554 = distinct !DILexicalBlock(scope: !15551, file: !3, line: 1032, column: 16)
!15555 = !DILocation(line: 1033, column: 19, scope: !15554)
!15556 = !DILocation(line: 1033, column: 17, scope: !15554)
!15557 = !DILocation(line: 1034, column: 7, scope: !15554)
!15558 = !DILocation(line: 1034, column: 17, scope: !15554)
!15559 = !DILocation(line: 1035, column: 6, scope: !15554)
!15560 = !DILocation(line: 1043, column: 4, scope: !15529)
!15561 = !DILocation(line: 1049, column: 3, scope: !15484)
!15562 = !DILocation(line: 1052, column: 7, scope: !15563)
!15563 = distinct !DILexicalBlock(scope: !15475, file: !3, line: 1052, column: 7)
!15564 = !DILocation(line: 1052, column: 7, scope: !15475)
!15565 = !DILocalVariable(name: "i", scope: !15566, file: !3, line: 1053, type: !1547)
!15566 = distinct !DILexicalBlock(scope: !15563, file: !3, line: 1052, column: 18)
!15567 = !DILocation(line: 1053, column: 11, scope: !15566)
!15568 = !DILocalVariable(name: "prop_path", scope: !15566, file: !3, line: 1056, type: !2009)
!15569 = !DILocation(line: 1056, column: 16, scope: !15566)
!15570 = !DILocalVariable(name: "prop_path_value", scope: !15566, file: !3, line: 1057, type: !2009)
!15571 = !DILocation(line: 1057, column: 16, scope: !15566)
!15572 = !DILocalVariable(name: "val", scope: !15566, file: !3, line: 1059, type: !15402)
!15573 = !DILocation(line: 1059, column: 23, scope: !15566)
!15574 = !DILocation(line: 1060, column: 16, scope: !15566)
!15575 = !DILocation(line: 1060, column: 14, scope: !15566)
!15576 = !DILocation(line: 1061, column: 36, scope: !15566)
!15577 = !DILocation(line: 1061, column: 67, scope: !15566)
!15578 = !DILocation(line: 1061, column: 60, scope: !15566)
!15579 = !DILocation(line: 1061, column: 78, scope: !15566)
!15580 = !DILocation(line: 1061, column: 22, scope: !15566)
!15581 = !DILocation(line: 1061, column: 20, scope: !15566)
!15582 = !DILocation(line: 1062, column: 19, scope: !15566)
!15583 = !DILocation(line: 1062, column: 30, scope: !15566)
!15584 = !DILocation(line: 1062, column: 4, scope: !15566)
!15585 = !DILocation(line: 1065, column: 11, scope: !15586)
!15586 = distinct !DILexicalBlock(scope: !15566, file: !3, line: 1065, column: 4)
!15587 = !DILocation(line: 1065, column: 9, scope: !15586)
!15588 = !DILocation(line: 1065, column: 17, scope: !15589)
!15589 = distinct !DILexicalBlock(scope: !15586, file: !3, line: 1065, column: 4)
!15590 = !DILocation(line: 1065, column: 19, scope: !15589)
!15591 = !DILocation(line: 1065, column: 30, scope: !15589)
!15592 = !DILocation(line: 1065, column: 53, scope: !15589)
!15593 = !DILocation(line: 1065, column: 34, scope: !15589)
!15594 = !DILocation(line: 0, scope: !15589)
!15595 = !DILocation(line: 1065, column: 4, scope: !15586)
!15596 = !DILocation(line: 1067, column: 38, scope: !15597)
!15597 = distinct !DILexicalBlock(scope: !15598, file: !3, line: 1067, column: 9)
!15598 = distinct !DILexicalBlock(scope: !15589, file: !3, line: 1065, column: 63)
!15599 = !DILocation(line: 1067, column: 60, scope: !15597)
!15600 = !DILocation(line: 1067, column: 41, scope: !15597)
!15601 = !DILocation(line: 1067, column: 89, scope: !15597)
!15602 = !DILocation(line: 1068, column: 38, scope: !15597)
!15603 = !DILocation(line: 1068, column: 43, scope: !15597)
!15604 = !DILocation(line: 1067, column: 9, scope: !15597)
!15605 = !DILocation(line: 1067, column: 9, scope: !15598)
!15606 = !DILocation(line: 1070, column: 12, scope: !15607)
!15607 = distinct !DILexicalBlock(scope: !15597, file: !3, line: 1069, column: 5)
!15608 = !DILocation(line: 1071, column: 6, scope: !15607)
!15609 = !DILocation(line: 1073, column: 4, scope: !15598)
!15610 = !DILocation(line: 1065, column: 59, scope: !15589)
!15611 = !DILocation(line: 1065, column: 4, scope: !15589)
!15612 = distinct !{!15612, !15595, !15613}
!15613 = !DILocation(line: 1073, column: 4, scope: !15586)
!15614 = !DILocation(line: 1076, column: 21, scope: !15566)
!15615 = !DILocation(line: 1076, column: 4, scope: !15566)
!15616 = !DILocation(line: 1077, column: 4, scope: !15566)
!15617 = !DILocation(line: 1077, column: 14, scope: !15566)
!15618 = !DILocation(line: 1078, column: 4, scope: !15566)
!15619 = !DILocation(line: 1078, column: 14, scope: !15566)
!15620 = !DILocation(line: 1079, column: 3, scope: !15566)
!15621 = !DILocation(line: 1080, column: 2, scope: !15475)
!15622 = !DILocation(line: 1082, column: 9, scope: !15454)
!15623 = !DILocation(line: 1082, column: 2, scope: !15454)
!15624 = distinct !DISubprogram(name: "UI_init", scope: !3, file: !3, line: 4476, type: !3033, scopeLine: 4477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!15625 = !DILocation(line: 4478, column: 2, scope: !15624)
!15626 = !DILocation(line: 4479, column: 1, scope: !15624)
!15627 = distinct !DISubprogram(name: "UI_init_userdef", scope: !3, file: !3, line: 4482, type: !3033, scopeLine: 4483, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!15628 = !DILocation(line: 4485, column: 2, scope: !15627)
!15629 = !DILocation(line: 4486, column: 2, scope: !15627)
!15630 = !DILocation(line: 4487, column: 1, scope: !15627)
!15631 = distinct !DISubprogram(name: "UI_reinit_font", scope: !3, file: !3, line: 4489, type: !3033, scopeLine: 4490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!15632 = !DILocation(line: 4491, column: 2, scope: !15631)
!15633 = !DILocation(line: 4492, column: 1, scope: !15631)
!15634 = distinct !DISubprogram(name: "UI_exit", scope: !3, file: !3, line: 4494, type: !3033, scopeLine: 4495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!15635 = !DILocation(line: 4496, column: 2, scope: !15634)
!15636 = !DILocation(line: 4497, column: 2, scope: !15634)
!15637 = !DILocation(line: 4498, column: 1, scope: !15634)
!15638 = distinct !DISubprogram(name: "ui_but_update_linklines", scope: !3, file: !3, line: 601, type: !15639, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!15639 = !DISubroutineType(types: !15640)
!15640 = !{null, !1695, !1558, !1558}
!15641 = !DILocalVariable(name: "block", arg: 1, scope: !15638, file: !3, line: 601, type: !1695)
!15642 = !DILocation(line: 601, column: 46, scope: !15638)
!15643 = !DILocalVariable(name: "oldbut", arg: 2, scope: !15638, file: !3, line: 601, type: !1558)
!15644 = !DILocation(line: 601, column: 60, scope: !15638)
!15645 = !DILocalVariable(name: "newbut", arg: 3, scope: !15638, file: !3, line: 601, type: !1558)
!15646 = !DILocation(line: 601, column: 75, scope: !15638)
!15647 = !DILocalVariable(name: "line", scope: !15638, file: !3, line: 603, type: !6574)
!15648 = !DILocation(line: 603, column: 14, scope: !15638)
!15649 = !DILocalVariable(name: "but", scope: !15638, file: !3, line: 604, type: !1558)
!15650 = !DILocation(line: 604, column: 9, scope: !15638)
!15651 = !DILocation(line: 607, column: 6, scope: !15652)
!15652 = distinct !DILexicalBlock(scope: !15638, file: !3, line: 607, column: 6)
!15653 = !DILocation(line: 607, column: 14, scope: !15652)
!15654 = !DILocation(line: 607, column: 19, scope: !15652)
!15655 = !DILocation(line: 607, column: 27, scope: !15652)
!15656 = !DILocation(line: 607, column: 30, scope: !15652)
!15657 = !DILocation(line: 607, column: 38, scope: !15652)
!15658 = !DILocation(line: 607, column: 6, scope: !15638)
!15659 = !DILocalVariable(name: "sw_ap", scope: !15660, file: !3, line: 609, type: !1661)
!15660 = distinct !DILexicalBlock(scope: !15661, file: !3, line: 609, column: 3)
!15661 = distinct !DILexicalBlock(scope: !15652, file: !3, line: 607, column: 44)
!15662 = !DILocation(line: 609, column: 3, scope: !15660)
!15663 = !DILocation(line: 611, column: 15, scope: !15664)
!15664 = distinct !DILexicalBlock(scope: !15661, file: !3, line: 611, column: 3)
!15665 = !DILocation(line: 611, column: 23, scope: !15664)
!15666 = !DILocation(line: 611, column: 29, scope: !15664)
!15667 = !DILocation(line: 611, column: 35, scope: !15664)
!15668 = !DILocation(line: 611, column: 13, scope: !15664)
!15669 = !DILocation(line: 611, column: 8, scope: !15664)
!15670 = !DILocation(line: 611, column: 42, scope: !15671)
!15671 = distinct !DILexicalBlock(scope: !15664, file: !3, line: 611, column: 3)
!15672 = !DILocation(line: 611, column: 3, scope: !15664)
!15673 = !DILocation(line: 612, column: 8, scope: !15674)
!15674 = distinct !DILexicalBlock(scope: !15675, file: !3, line: 612, column: 8)
!15675 = distinct !DILexicalBlock(scope: !15671, file: !3, line: 611, column: 67)
!15676 = !DILocation(line: 612, column: 14, scope: !15674)
!15677 = !DILocation(line: 612, column: 20, scope: !15674)
!15678 = !DILocation(line: 612, column: 17, scope: !15674)
!15679 = !DILocation(line: 612, column: 8, scope: !15675)
!15680 = !DILocation(line: 613, column: 16, scope: !15674)
!15681 = !DILocation(line: 613, column: 5, scope: !15674)
!15682 = !DILocation(line: 613, column: 11, scope: !15674)
!15683 = !DILocation(line: 613, column: 14, scope: !15674)
!15684 = !DILocation(line: 614, column: 8, scope: !15685)
!15685 = distinct !DILexicalBlock(scope: !15675, file: !3, line: 614, column: 8)
!15686 = !DILocation(line: 614, column: 14, scope: !15685)
!15687 = !DILocation(line: 614, column: 22, scope: !15685)
!15688 = !DILocation(line: 614, column: 19, scope: !15685)
!15689 = !DILocation(line: 614, column: 8, scope: !15675)
!15690 = !DILocation(line: 615, column: 18, scope: !15685)
!15691 = !DILocation(line: 615, column: 5, scope: !15685)
!15692 = !DILocation(line: 615, column: 11, scope: !15685)
!15693 = !DILocation(line: 615, column: 16, scope: !15685)
!15694 = !DILocation(line: 616, column: 3, scope: !15675)
!15695 = !DILocation(line: 611, column: 55, scope: !15671)
!15696 = !DILocation(line: 611, column: 61, scope: !15671)
!15697 = !DILocation(line: 611, column: 53, scope: !15671)
!15698 = !DILocation(line: 611, column: 3, scope: !15671)
!15699 = distinct !{!15699, !15672, !15700}
!15700 = !DILocation(line: 616, column: 3, scope: !15664)
!15701 = !DILocation(line: 617, column: 2, scope: !15661)
!15702 = !DILocation(line: 620, column: 13, scope: !15703)
!15703 = distinct !DILexicalBlock(scope: !15638, file: !3, line: 620, column: 2)
!15704 = !DILocation(line: 620, column: 20, scope: !15703)
!15705 = !DILocation(line: 620, column: 28, scope: !15703)
!15706 = !DILocation(line: 620, column: 11, scope: !15703)
!15707 = !DILocation(line: 620, column: 7, scope: !15703)
!15708 = !DILocation(line: 620, column: 35, scope: !15709)
!15709 = distinct !DILexicalBlock(scope: !15703, file: !3, line: 620, column: 2)
!15710 = !DILocation(line: 620, column: 2, scope: !15703)
!15711 = !DILocation(line: 621, column: 7, scope: !15712)
!15712 = distinct !DILexicalBlock(scope: !15713, file: !3, line: 621, column: 7)
!15713 = distinct !DILexicalBlock(scope: !15709, file: !3, line: 620, column: 57)
!15714 = !DILocation(line: 621, column: 14, scope: !15712)
!15715 = !DILocation(line: 621, column: 11, scope: !15712)
!15716 = !DILocation(line: 621, column: 21, scope: !15712)
!15717 = !DILocation(line: 621, column: 24, scope: !15712)
!15718 = !DILocation(line: 621, column: 29, scope: !15712)
!15719 = !DILocation(line: 621, column: 34, scope: !15712)
!15720 = !DILocation(line: 621, column: 42, scope: !15712)
!15721 = !DILocation(line: 621, column: 45, scope: !15712)
!15722 = !DILocation(line: 621, column: 50, scope: !15712)
!15723 = !DILocation(line: 621, column: 7, scope: !15713)
!15724 = !DILocation(line: 622, column: 16, scope: !15725)
!15725 = distinct !DILexicalBlock(scope: !15726, file: !3, line: 622, column: 4)
!15726 = distinct !DILexicalBlock(scope: !15712, file: !3, line: 621, column: 56)
!15727 = !DILocation(line: 622, column: 21, scope: !15725)
!15728 = !DILocation(line: 622, column: 27, scope: !15725)
!15729 = !DILocation(line: 622, column: 33, scope: !15725)
!15730 = !DILocation(line: 622, column: 14, scope: !15725)
!15731 = !DILocation(line: 622, column: 9, scope: !15725)
!15732 = !DILocation(line: 622, column: 40, scope: !15733)
!15733 = distinct !DILexicalBlock(scope: !15725, file: !3, line: 622, column: 4)
!15734 = !DILocation(line: 622, column: 4, scope: !15725)
!15735 = !DILocation(line: 623, column: 9, scope: !15736)
!15736 = distinct !DILexicalBlock(scope: !15737, file: !3, line: 623, column: 9)
!15737 = distinct !DILexicalBlock(scope: !15733, file: !3, line: 622, column: 65)
!15738 = !DILocation(line: 623, column: 15, scope: !15736)
!15739 = !DILocation(line: 623, column: 21, scope: !15736)
!15740 = !DILocation(line: 623, column: 18, scope: !15736)
!15741 = !DILocation(line: 623, column: 9, scope: !15737)
!15742 = !DILocation(line: 624, column: 17, scope: !15736)
!15743 = !DILocation(line: 624, column: 6, scope: !15736)
!15744 = !DILocation(line: 624, column: 12, scope: !15736)
!15745 = !DILocation(line: 624, column: 15, scope: !15736)
!15746 = !DILocation(line: 625, column: 9, scope: !15747)
!15747 = distinct !DILexicalBlock(scope: !15737, file: !3, line: 625, column: 9)
!15748 = !DILocation(line: 625, column: 15, scope: !15747)
!15749 = !DILocation(line: 625, column: 23, scope: !15747)
!15750 = !DILocation(line: 625, column: 20, scope: !15747)
!15751 = !DILocation(line: 625, column: 9, scope: !15737)
!15752 = !DILocation(line: 626, column: 19, scope: !15747)
!15753 = !DILocation(line: 626, column: 6, scope: !15747)
!15754 = !DILocation(line: 626, column: 12, scope: !15747)
!15755 = !DILocation(line: 626, column: 17, scope: !15747)
!15756 = !DILocation(line: 627, column: 4, scope: !15737)
!15757 = !DILocation(line: 622, column: 53, scope: !15733)
!15758 = !DILocation(line: 622, column: 59, scope: !15733)
!15759 = !DILocation(line: 622, column: 51, scope: !15733)
!15760 = !DILocation(line: 622, column: 4, scope: !15733)
!15761 = distinct !{!15761, !15734, !15762}
!15762 = !DILocation(line: 627, column: 4, scope: !15725)
!15763 = !DILocation(line: 628, column: 3, scope: !15726)
!15764 = !DILocation(line: 629, column: 2, scope: !15713)
!15765 = !DILocation(line: 620, column: 46, scope: !15709)
!15766 = !DILocation(line: 620, column: 51, scope: !15709)
!15767 = !DILocation(line: 620, column: 44, scope: !15709)
!15768 = !DILocation(line: 620, column: 2, scope: !15709)
!15769 = distinct !{!15769, !15710, !15770}
!15770 = !DILocation(line: 629, column: 2, scope: !15703)
!15771 = !DILocation(line: 630, column: 1, scope: !15638)
!15772 = distinct !DISubprogram(name: "ui_but_pie_direction_string", scope: !3, file: !3, line: 1114, type: !15773, scopeLine: 1115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!15773 = !DISubroutineType(types: !15774)
!15774 = !{null, !1558, !1541, !1067}
!15775 = !DILocalVariable(name: "but", arg: 1, scope: !15772, file: !3, line: 1114, type: !1558)
!15776 = !DILocation(line: 1114, column: 48, scope: !15772)
!15777 = !DILocalVariable(name: "buf", arg: 2, scope: !15772, file: !3, line: 1114, type: !1541)
!15778 = !DILocation(line: 1114, column: 59, scope: !15772)
!15779 = !DILocalVariable(name: "size", arg: 3, scope: !15772, file: !3, line: 1114, type: !1067)
!15780 = !DILocation(line: 1114, column: 68, scope: !15772)
!15781 = !DILocation(line: 1117, column: 15, scope: !15772)
!15782 = !DILocation(line: 1117, column: 20, scope: !15772)
!15783 = !DILocation(line: 1117, column: 56, scope: !15772)
!15784 = !DILocation(line: 1117, column: 61, scope: !15772)
!15785 = !DILocation(line: 1117, column: 32, scope: !15772)
!15786 = !DILocation(line: 1117, column: 2, scope: !15772)
!15787 = !DILocation(line: 1118, column: 1, scope: !15772)
!15788 = distinct !DISubprogram(name: "BLI_rctf_size_y", scope: !3413, file: !3413, line: 108, type: !3938, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!15789 = !DILocalVariable(name: "rct", arg: 1, scope: !15788, file: !3413, line: 108, type: !3940)
!15790 = !DILocation(line: 108, column: 53, scope: !15788)
!15791 = !DILocation(line: 108, column: 68, scope: !15788)
!15792 = !DILocation(line: 108, column: 73, scope: !15788)
!15793 = !DILocation(line: 108, column: 80, scope: !15788)
!15794 = !DILocation(line: 108, column: 85, scope: !15788)
!15795 = !DILocation(line: 108, column: 78, scope: !15788)
!15796 = !DILocation(line: 108, column: 60, scope: !15788)
!15797 = distinct !DISubprogram(name: "ui_draw_linkline", scope: !3, file: !3, line: 482, type: !15798, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!15798 = !DISubroutineType(types: !15799)
!15799 = !{null, !6574, !1067, !1067}
!15800 = !DILocalVariable(name: "line", arg: 1, scope: !15797, file: !3, line: 482, type: !6574)
!15801 = !DILocation(line: 482, column: 42, scope: !15797)
!15802 = !DILocalVariable(name: "highlightActiveLines", arg: 2, scope: !15797, file: !3, line: 482, type: !1067)
!15803 = !DILocation(line: 482, column: 52, scope: !15797)
!15804 = !DILocalVariable(name: "dashInactiveLines", arg: 3, scope: !15797, file: !3, line: 482, type: !1067)
!15805 = !DILocation(line: 482, column: 78, scope: !15797)
!15806 = !DILocalVariable(name: "rect", scope: !15797, file: !3, line: 484, type: !1878)
!15807 = !DILocation(line: 484, column: 7, scope: !15797)
!15808 = !DILocation(line: 486, column: 6, scope: !15809)
!15809 = distinct !DILexicalBlock(scope: !15797, file: !3, line: 486, column: 6)
!15810 = !DILocation(line: 486, column: 12, scope: !15809)
!15811 = !DILocation(line: 486, column: 17, scope: !15809)
!15812 = !DILocation(line: 486, column: 25, scope: !15809)
!15813 = !DILocation(line: 486, column: 28, scope: !15809)
!15814 = !DILocation(line: 486, column: 34, scope: !15809)
!15815 = !DILocation(line: 486, column: 37, scope: !15809)
!15816 = !DILocation(line: 486, column: 6, scope: !15797)
!15817 = !DILocation(line: 486, column: 46, scope: !15809)
!15818 = !DILocation(line: 488, column: 31, scope: !15797)
!15819 = !DILocation(line: 488, column: 37, scope: !15797)
!15820 = !DILocation(line: 488, column: 43, scope: !15797)
!15821 = !DILocation(line: 488, column: 14, scope: !15797)
!15822 = !DILocation(line: 488, column: 7, scope: !15797)
!15823 = !DILocation(line: 488, column: 12, scope: !15797)
!15824 = !DILocation(line: 489, column: 31, scope: !15797)
!15825 = !DILocation(line: 489, column: 37, scope: !15797)
!15826 = !DILocation(line: 489, column: 43, scope: !15797)
!15827 = !DILocation(line: 489, column: 14, scope: !15797)
!15828 = !DILocation(line: 489, column: 7, scope: !15797)
!15829 = !DILocation(line: 489, column: 12, scope: !15797)
!15830 = !DILocation(line: 490, column: 31, scope: !15797)
!15831 = !DILocation(line: 490, column: 37, scope: !15797)
!15832 = !DILocation(line: 490, column: 41, scope: !15797)
!15833 = !DILocation(line: 490, column: 14, scope: !15797)
!15834 = !DILocation(line: 490, column: 7, scope: !15797)
!15835 = !DILocation(line: 490, column: 12, scope: !15797)
!15836 = !DILocation(line: 491, column: 31, scope: !15797)
!15837 = !DILocation(line: 491, column: 37, scope: !15797)
!15838 = !DILocation(line: 491, column: 41, scope: !15797)
!15839 = !DILocation(line: 491, column: 14, scope: !15797)
!15840 = !DILocation(line: 491, column: 7, scope: !15797)
!15841 = !DILocation(line: 491, column: 12, scope: !15797)
!15842 = !DILocation(line: 493, column: 6, scope: !15843)
!15843 = distinct !DILexicalBlock(scope: !15797, file: !3, line: 493, column: 6)
!15844 = !DILocation(line: 493, column: 6, scope: !15797)
!15845 = !DILocation(line: 494, column: 3, scope: !15843)
!15846 = !DILocation(line: 495, column: 11, scope: !15847)
!15847 = distinct !DILexicalBlock(scope: !15843, file: !3, line: 495, column: 11)
!15848 = !DILocation(line: 495, column: 17, scope: !15847)
!15849 = !DILocation(line: 495, column: 22, scope: !15847)
!15850 = !DILocation(line: 495, column: 11, scope: !15843)
!15851 = !DILocation(line: 496, column: 3, scope: !15847)
!15852 = !DILocation(line: 497, column: 11, scope: !15853)
!15853 = distinct !DILexicalBlock(scope: !15847, file: !3, line: 497, column: 11)
!15854 = !DILocation(line: 497, column: 32, scope: !15853)
!15855 = !DILocation(line: 497, column: 37, scope: !15853)
!15856 = !DILocation(line: 497, column: 43, scope: !15853)
!15857 = !DILocation(line: 497, column: 49, scope: !15853)
!15858 = !DILocation(line: 497, column: 54, scope: !15853)
!15859 = !DILocation(line: 497, column: 67, scope: !15853)
!15860 = !DILocation(line: 497, column: 71, scope: !15853)
!15861 = !DILocation(line: 497, column: 77, scope: !15853)
!15862 = !DILocation(line: 497, column: 81, scope: !15853)
!15863 = !DILocation(line: 497, column: 86, scope: !15853)
!15864 = !DILocation(line: 497, column: 11, scope: !15847)
!15865 = !DILocation(line: 498, column: 3, scope: !15853)
!15866 = !DILocation(line: 500, column: 3, scope: !15853)
!15867 = !DILocation(line: 502, column: 2, scope: !15797)
!15868 = !DILocation(line: 503, column: 1, scope: !15797)
!15869 = distinct !DISubprogram(name: "BLI_rctf_cent_x", scope: !3413, file: !3413, line: 102, type: !3938, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!15870 = !DILocalVariable(name: "rct", arg: 1, scope: !15869, file: !3413, line: 102, type: !3940)
!15871 = !DILocation(line: 102, column: 53, scope: !15869)
!15872 = !DILocation(line: 102, column: 68, scope: !15869)
!15873 = !DILocation(line: 102, column: 73, scope: !15869)
!15874 = !DILocation(line: 102, column: 80, scope: !15869)
!15875 = !DILocation(line: 102, column: 85, scope: !15869)
!15876 = !DILocation(line: 102, column: 78, scope: !15869)
!15877 = !DILocation(line: 102, column: 91, scope: !15869)
!15878 = !DILocation(line: 102, column: 60, scope: !15869)
!15879 = distinct !DISubprogram(name: "BLI_rctf_cent_y", scope: !3413, file: !3413, line: 103, type: !3938, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!15880 = !DILocalVariable(name: "rct", arg: 1, scope: !15879, file: !3413, line: 103, type: !3940)
!15881 = !DILocation(line: 103, column: 53, scope: !15879)
!15882 = !DILocation(line: 103, column: 68, scope: !15879)
!15883 = !DILocation(line: 103, column: 73, scope: !15879)
!15884 = !DILocation(line: 103, column: 80, scope: !15879)
!15885 = !DILocation(line: 103, column: 85, scope: !15879)
!15886 = !DILocation(line: 103, column: 78, scope: !15879)
!15887 = !DILocation(line: 103, column: 91, scope: !15879)
!15888 = !DILocation(line: 103, column: 60, scope: !15879)
!15889 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !5310, file: !5310, line: 788, type: !15890, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!15890 = !DISubroutineType(types: !15891)
!15891 = !{!1534, !1543, !5313}
!15892 = !DILocalVariable(name: "r", arg: 1, scope: !15889, file: !5310, line: 788, type: !1543)
!15893 = !DILocation(line: 788, column: 37, scope: !15889)
!15894 = !DILocalVariable(name: "a", arg: 2, scope: !15889, file: !5310, line: 788, type: !5313)
!15895 = !DILocation(line: 788, column: 55, scope: !15889)
!15896 = !DILocalVariable(name: "d", scope: !15889, file: !5310, line: 790, type: !1534)
!15897 = !DILocation(line: 790, column: 8, scope: !15889)
!15898 = !DILocation(line: 790, column: 21, scope: !15889)
!15899 = !DILocation(line: 790, column: 24, scope: !15889)
!15900 = !DILocation(line: 790, column: 12, scope: !15889)
!15901 = !DILocation(line: 794, column: 6, scope: !15902)
!15902 = distinct !DILexicalBlock(scope: !15889, file: !5310, line: 794, column: 6)
!15903 = !DILocation(line: 794, column: 8, scope: !15902)
!15904 = !DILocation(line: 794, column: 6, scope: !15889)
!15905 = !DILocation(line: 795, column: 13, scope: !15906)
!15906 = distinct !DILexicalBlock(scope: !15902, file: !5310, line: 794, column: 20)
!15907 = !DILocation(line: 795, column: 7, scope: !15906)
!15908 = !DILocation(line: 795, column: 5, scope: !15906)
!15909 = !DILocation(line: 796, column: 15, scope: !15906)
!15910 = !DILocation(line: 796, column: 18, scope: !15906)
!15911 = !DILocation(line: 796, column: 28, scope: !15906)
!15912 = !DILocation(line: 796, column: 26, scope: !15906)
!15913 = !DILocation(line: 796, column: 3, scope: !15906)
!15914 = !DILocation(line: 797, column: 2, scope: !15906)
!15915 = !DILocation(line: 799, column: 11, scope: !15916)
!15916 = distinct !DILexicalBlock(scope: !15902, file: !5310, line: 798, column: 7)
!15917 = !DILocation(line: 799, column: 3, scope: !15916)
!15918 = !DILocation(line: 800, column: 5, scope: !15916)
!15919 = !DILocation(line: 803, column: 9, scope: !15889)
!15920 = !DILocation(line: 803, column: 2, scope: !15889)
!15921 = distinct !DISubprogram(name: "dot_v3v3", scope: !5310, file: !5310, line: 619, type: !15922, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!15922 = !DISubroutineType(types: !15923)
!15923 = !{!1534, !5313, !5313}
!15924 = !DILocalVariable(name: "a", arg: 1, scope: !15921, file: !5310, line: 619, type: !5313)
!15925 = !DILocation(line: 619, column: 36, scope: !15921)
!15926 = !DILocalVariable(name: "b", arg: 2, scope: !15921, file: !5310, line: 619, type: !5313)
!15927 = !DILocation(line: 619, column: 54, scope: !15921)
!15928 = !DILocation(line: 621, column: 9, scope: !15921)
!15929 = !DILocation(line: 621, column: 16, scope: !15921)
!15930 = !DILocation(line: 621, column: 14, scope: !15921)
!15931 = !DILocation(line: 621, column: 23, scope: !15921)
!15932 = !DILocation(line: 621, column: 30, scope: !15921)
!15933 = !DILocation(line: 621, column: 28, scope: !15921)
!15934 = !DILocation(line: 621, column: 21, scope: !15921)
!15935 = !DILocation(line: 621, column: 37, scope: !15921)
!15936 = !DILocation(line: 621, column: 44, scope: !15921)
!15937 = !DILocation(line: 621, column: 42, scope: !15921)
!15938 = !DILocation(line: 621, column: 35, scope: !15921)
!15939 = !DILocation(line: 621, column: 2, scope: !15921)
!15940 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !5310, file: !5310, line: 399, type: !15941, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!15941 = !DISubroutineType(types: !15942)
!15942 = !{null, !1543, !5313, !1534}
!15943 = !DILocalVariable(name: "r", arg: 1, scope: !15940, file: !5310, line: 399, type: !1543)
!15944 = !DILocation(line: 399, column: 32, scope: !15940)
!15945 = !DILocalVariable(name: "a", arg: 2, scope: !15940, file: !5310, line: 399, type: !5313)
!15946 = !DILocation(line: 399, column: 50, scope: !15940)
!15947 = !DILocalVariable(name: "f", arg: 3, scope: !15940, file: !5310, line: 399, type: !1534)
!15948 = !DILocation(line: 399, column: 62, scope: !15940)
!15949 = !DILocation(line: 401, column: 9, scope: !15940)
!15950 = !DILocation(line: 401, column: 16, scope: !15940)
!15951 = !DILocation(line: 401, column: 14, scope: !15940)
!15952 = !DILocation(line: 401, column: 2, scope: !15940)
!15953 = !DILocation(line: 401, column: 7, scope: !15940)
!15954 = !DILocation(line: 402, column: 9, scope: !15940)
!15955 = !DILocation(line: 402, column: 16, scope: !15940)
!15956 = !DILocation(line: 402, column: 14, scope: !15940)
!15957 = !DILocation(line: 402, column: 2, scope: !15940)
!15958 = !DILocation(line: 402, column: 7, scope: !15940)
!15959 = !DILocation(line: 403, column: 9, scope: !15940)
!15960 = !DILocation(line: 403, column: 16, scope: !15940)
!15961 = !DILocation(line: 403, column: 14, scope: !15940)
!15962 = !DILocation(line: 403, column: 2, scope: !15940)
!15963 = !DILocation(line: 403, column: 7, scope: !15940)
!15964 = !DILocation(line: 404, column: 1, scope: !15940)
!15965 = distinct !DISubprogram(name: "ui_get_but_scale_unit", scope: !3, file: !3, line: 1937, type: !15966, scopeLine: 1938, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!15966 = !DISubroutineType(types: !15967)
!15967 = !{!1540, !1558, !1540}
!15968 = !DILocalVariable(name: "but", arg: 1, scope: !15965, file: !3, line: 1937, type: !1558)
!15969 = !DILocation(line: 1937, column: 44, scope: !15965)
!15970 = !DILocalVariable(name: "value", arg: 2, scope: !15965, file: !3, line: 1937, type: !1540)
!15971 = !DILocation(line: 1937, column: 56, scope: !15965)
!15972 = !DILocalVariable(name: "unit", scope: !15965, file: !3, line: 1939, type: !7783)
!15973 = !DILocation(line: 1939, column: 16, scope: !15965)
!15974 = !DILocation(line: 1939, column: 23, scope: !15965)
!15975 = !DILocation(line: 1939, column: 28, scope: !15965)
!15976 = !DILocation(line: 1939, column: 35, scope: !15965)
!15977 = !DILocalVariable(name: "unit_type", scope: !15965, file: !3, line: 1940, type: !1067)
!15978 = !DILocation(line: 1940, column: 6, scope: !15965)
!15979 = !DILocation(line: 1940, column: 35, scope: !15965)
!15980 = !DILocation(line: 1940, column: 18, scope: !15965)
!15981 = !DILocation(line: 1943, column: 6, scope: !15982)
!15982 = distinct !DILexicalBlock(scope: !15965, file: !3, line: 1943, column: 6)
!15983 = !DILocation(line: 1943, column: 16, scope: !15982)
!15984 = !DILocation(line: 1943, column: 6, scope: !15965)
!15985 = !DILocalVariable(name: "scene", scope: !15986, file: !3, line: 1944, type: !5346)
!15986 = distinct !DILexicalBlock(scope: !15982, file: !3, line: 1943, column: 35)
!15987 = !DILocation(line: 1944, column: 10, scope: !15986)
!15988 = !DILocation(line: 1944, column: 33, scope: !15986)
!15989 = !DILocation(line: 1944, column: 38, scope: !15986)
!15990 = !DILocation(line: 1944, column: 45, scope: !15986)
!15991 = !DILocation(line: 1944, column: 18, scope: !15986)
!15992 = !DILocation(line: 1945, column: 10, scope: !15986)
!15993 = !DILocation(line: 1945, column: 3, scope: !15986)
!15994 = !DILocation(line: 1948, column: 31, scope: !15995)
!15995 = distinct !DILexicalBlock(scope: !15982, file: !3, line: 1947, column: 7)
!15996 = !DILocation(line: 1948, column: 37, scope: !15995)
!15997 = !DILocation(line: 1948, column: 72, scope: !15995)
!15998 = !DILocation(line: 1948, column: 10, scope: !15995)
!15999 = !DILocation(line: 1948, column: 3, scope: !15995)
!16000 = !DILocation(line: 1950, column: 1, scope: !15965)
!16001 = distinct !DISubprogram(name: "ui_is_but_unit_radians", scope: !3, file: !3, line: 111, type: !7735, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!16002 = !DILocalVariable(name: "but", arg: 1, scope: !16001, file: !3, line: 111, type: !4088)
!16003 = !DILocation(line: 111, column: 49, scope: !16001)
!16004 = !DILocalVariable(name: "unit", scope: !16001, file: !3, line: 113, type: !7783)
!16005 = !DILocation(line: 113, column: 16, scope: !16001)
!16006 = !DILocation(line: 113, column: 23, scope: !16001)
!16007 = !DILocation(line: 113, column: 28, scope: !16001)
!16008 = !DILocation(line: 113, column: 35, scope: !16001)
!16009 = !DILocalVariable(name: "unit_type", scope: !16001, file: !3, line: 114, type: !4766)
!16010 = !DILocation(line: 114, column: 12, scope: !16001)
!16011 = !DILocation(line: 114, column: 41, scope: !16001)
!16012 = !DILocation(line: 114, column: 24, scope: !16001)
!16013 = !DILocation(line: 116, column: 35, scope: !16001)
!16014 = !DILocation(line: 116, column: 41, scope: !16001)
!16015 = !DILocation(line: 116, column: 9, scope: !16001)
!16016 = !DILocation(line: 116, column: 2, scope: !16001)
!16017 = distinct !DISubprogram(name: "ui_free_link", scope: !3, file: !3, line: 2382, type: !16018, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!16018 = !DISubroutineType(types: !16019)
!16019 = !{null, !1661}
!16020 = !DILocalVariable(name: "link", arg: 1, scope: !16017, file: !3, line: 2382, type: !1661)
!16021 = !DILocation(line: 2382, column: 34, scope: !16017)
!16022 = !DILocation(line: 2384, column: 6, scope: !16023)
!16023 = distinct !DILexicalBlock(scope: !16017, file: !3, line: 2384, column: 6)
!16024 = !DILocation(line: 2384, column: 6, scope: !16017)
!16025 = !DILocation(line: 2385, column: 18, scope: !16026)
!16026 = distinct !DILexicalBlock(scope: !16023, file: !3, line: 2384, column: 12)
!16027 = !DILocation(line: 2385, column: 24, scope: !16026)
!16028 = !DILocation(line: 2385, column: 3, scope: !16026)
!16029 = !DILocation(line: 2386, column: 3, scope: !16026)
!16030 = !DILocation(line: 2386, column: 13, scope: !16026)
!16031 = !DILocation(line: 2387, column: 2, scope: !16026)
!16032 = !DILocation(line: 2388, column: 1, scope: !16017)
!16033 = distinct !DISubprogram(name: "soft_range_round_up", scope: !3, file: !3, line: 2259, type: !16034, scopeLine: 2260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!16034 = !DISubroutineType(types: !16035)
!16035 = !{!1540, !1540, !1540}
!16036 = !DILocalVariable(name: "value", arg: 1, scope: !16033, file: !3, line: 2259, type: !1540)
!16037 = !DILocation(line: 2259, column: 42, scope: !16033)
!16038 = !DILocalVariable(name: "max", arg: 2, scope: !16033, file: !3, line: 2259, type: !1540)
!16039 = !DILocation(line: 2259, column: 56, scope: !16033)
!16040 = !DILocalVariable(name: "newmax", scope: !16033, file: !3, line: 2263, type: !1540)
!16041 = !DILocation(line: 2263, column: 9, scope: !16033)
!16042 = !DILocation(line: 2263, column: 19, scope: !16033)
!16043 = !DILocation(line: 2263, column: 25, scope: !16033)
!16044 = !DILocation(line: 2263, column: 18, scope: !16033)
!16045 = !DILocation(line: 2263, column: 54, scope: !16033)
!16046 = !DILocation(line: 2263, column: 50, scope: !16033)
!16047 = !DILocation(line: 2263, column: 61, scope: !16033)
!16048 = !DILocation(line: 2263, column: 45, scope: !16033)
!16049 = !DILocation(line: 2263, column: 35, scope: !16033)
!16050 = !DILocation(line: 2265, column: 6, scope: !16051)
!16051 = distinct !DILexicalBlock(scope: !16033, file: !3, line: 2265, column: 6)
!16052 = !DILocation(line: 2265, column: 13, scope: !16051)
!16053 = !DILocation(line: 2265, column: 22, scope: !16051)
!16054 = !DILocation(line: 2265, column: 19, scope: !16051)
!16055 = !DILocation(line: 2265, column: 26, scope: !16051)
!16056 = !DILocation(line: 2265, column: 29, scope: !16051)
!16057 = !DILocation(line: 2265, column: 36, scope: !16051)
!16058 = !DILocation(line: 2265, column: 45, scope: !16051)
!16059 = !DILocation(line: 2265, column: 42, scope: !16051)
!16060 = !DILocation(line: 2265, column: 6, scope: !16033)
!16061 = !DILocation(line: 2266, column: 10, scope: !16051)
!16062 = !DILocation(line: 2266, column: 17, scope: !16051)
!16063 = !DILocation(line: 2266, column: 3, scope: !16051)
!16064 = !DILocation(line: 2267, column: 11, scope: !16065)
!16065 = distinct !DILexicalBlock(scope: !16051, file: !3, line: 2267, column: 11)
!16066 = !DILocation(line: 2267, column: 18, scope: !16065)
!16067 = !DILocation(line: 2267, column: 27, scope: !16065)
!16068 = !DILocation(line: 2267, column: 24, scope: !16065)
!16069 = !DILocation(line: 2267, column: 31, scope: !16065)
!16070 = !DILocation(line: 2267, column: 34, scope: !16065)
!16071 = !DILocation(line: 2267, column: 41, scope: !16065)
!16072 = !DILocation(line: 2267, column: 50, scope: !16065)
!16073 = !DILocation(line: 2267, column: 47, scope: !16065)
!16074 = !DILocation(line: 2267, column: 11, scope: !16051)
!16075 = !DILocation(line: 2268, column: 10, scope: !16065)
!16076 = !DILocation(line: 2268, column: 17, scope: !16065)
!16077 = !DILocation(line: 2268, column: 3, scope: !16065)
!16078 = !DILocation(line: 2270, column: 10, scope: !16065)
!16079 = !DILocation(line: 2270, column: 3, scope: !16065)
!16080 = !DILocation(line: 2271, column: 1, scope: !16033)
!16081 = distinct !DISubprogram(name: "soft_range_round_down", scope: !3, file: !3, line: 2273, type: !16034, scopeLine: 2274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!16082 = !DILocalVariable(name: "value", arg: 1, scope: !16081, file: !3, line: 2273, type: !1540)
!16083 = !DILocation(line: 2273, column: 44, scope: !16081)
!16084 = !DILocalVariable(name: "max", arg: 2, scope: !16081, file: !3, line: 2273, type: !1540)
!16085 = !DILocation(line: 2273, column: 58, scope: !16081)
!16086 = !DILocalVariable(name: "newmax", scope: !16081, file: !3, line: 2277, type: !1540)
!16087 = !DILocation(line: 2277, column: 9, scope: !16081)
!16088 = !DILocation(line: 2277, column: 19, scope: !16081)
!16089 = !DILocation(line: 2277, column: 25, scope: !16081)
!16090 = !DILocation(line: 2277, column: 18, scope: !16081)
!16091 = !DILocation(line: 2277, column: 55, scope: !16081)
!16092 = !DILocation(line: 2277, column: 51, scope: !16081)
!16093 = !DILocation(line: 2277, column: 62, scope: !16081)
!16094 = !DILocation(line: 2277, column: 45, scope: !16081)
!16095 = !DILocation(line: 2277, column: 35, scope: !16081)
!16096 = !DILocation(line: 2279, column: 6, scope: !16097)
!16097 = distinct !DILexicalBlock(scope: !16081, file: !3, line: 2279, column: 6)
!16098 = !DILocation(line: 2279, column: 13, scope: !16097)
!16099 = !DILocation(line: 2279, column: 22, scope: !16097)
!16100 = !DILocation(line: 2279, column: 19, scope: !16097)
!16101 = !DILocation(line: 2279, column: 26, scope: !16097)
!16102 = !DILocation(line: 2279, column: 29, scope: !16097)
!16103 = !DILocation(line: 2279, column: 36, scope: !16097)
!16104 = !DILocation(line: 2279, column: 45, scope: !16097)
!16105 = !DILocation(line: 2279, column: 42, scope: !16097)
!16106 = !DILocation(line: 2279, column: 6, scope: !16081)
!16107 = !DILocation(line: 2280, column: 10, scope: !16097)
!16108 = !DILocation(line: 2280, column: 17, scope: !16097)
!16109 = !DILocation(line: 2280, column: 3, scope: !16097)
!16110 = !DILocation(line: 2281, column: 11, scope: !16111)
!16111 = distinct !DILexicalBlock(scope: !16097, file: !3, line: 2281, column: 11)
!16112 = !DILocation(line: 2281, column: 18, scope: !16111)
!16113 = !DILocation(line: 2281, column: 27, scope: !16111)
!16114 = !DILocation(line: 2281, column: 24, scope: !16111)
!16115 = !DILocation(line: 2281, column: 31, scope: !16111)
!16116 = !DILocation(line: 2281, column: 34, scope: !16111)
!16117 = !DILocation(line: 2281, column: 41, scope: !16111)
!16118 = !DILocation(line: 2281, column: 50, scope: !16111)
!16119 = !DILocation(line: 2281, column: 47, scope: !16111)
!16120 = !DILocation(line: 2281, column: 11, scope: !16097)
!16121 = !DILocation(line: 2282, column: 10, scope: !16111)
!16122 = !DILocation(line: 2282, column: 17, scope: !16111)
!16123 = !DILocation(line: 2282, column: 3, scope: !16111)
!16124 = !DILocation(line: 2284, column: 10, scope: !16111)
!16125 = !DILocation(line: 2284, column: 3, scope: !16111)
!16126 = !DILocation(line: 2285, column: 1, scope: !16081)
!16127 = distinct !DISubprogram(name: "min_ff", scope: !3923, file: !3923, line: 202, type: !3924, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!16128 = !DILocalVariable(name: "a", arg: 1, scope: !16127, file: !3923, line: 202, type: !1534)
!16129 = !DILocation(line: 202, column: 28, scope: !16127)
!16130 = !DILocalVariable(name: "b", arg: 2, scope: !16127, file: !3923, line: 202, type: !1534)
!16131 = !DILocation(line: 202, column: 37, scope: !16127)
!16132 = !DILocation(line: 204, column: 10, scope: !16127)
!16133 = !DILocation(line: 204, column: 14, scope: !16127)
!16134 = !DILocation(line: 204, column: 12, scope: !16127)
!16135 = !DILocation(line: 204, column: 9, scope: !16127)
!16136 = !DILocation(line: 204, column: 19, scope: !16127)
!16137 = !DILocation(line: 204, column: 23, scope: !16127)
!16138 = !DILocation(line: 204, column: 2, scope: !16127)
!16139 = distinct !DISubprogram(name: "buts_are_horiz", scope: !3, file: !3, line: 2781, type: !16140, scopeLine: 2782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!16140 = !DISubroutineType(types: !16141)
!16141 = !{!1550, !1558, !1558}
!16142 = !DILocalVariable(name: "but1", arg: 1, scope: !16139, file: !3, line: 2781, type: !1558)
!16143 = !DILocation(line: 2781, column: 35, scope: !16139)
!16144 = !DILocalVariable(name: "but2", arg: 2, scope: !16139, file: !3, line: 2781, type: !1558)
!16145 = !DILocation(line: 2781, column: 48, scope: !16139)
!16146 = !DILocalVariable(name: "dx", scope: !16139, file: !3, line: 2783, type: !1534)
!16147 = !DILocation(line: 2783, column: 8, scope: !16139)
!16148 = !DILocalVariable(name: "dy", scope: !16139, file: !3, line: 2783, type: !1534)
!16149 = !DILocation(line: 2783, column: 12, scope: !16139)
!16150 = !DILocation(line: 2787, column: 7, scope: !16151)
!16151 = distinct !DILexicalBlock(scope: !16139, file: !3, line: 2787, column: 6)
!16152 = !DILocation(line: 2787, column: 13, scope: !16151)
!16153 = !DILocation(line: 2787, column: 18, scope: !16151)
!16154 = !DILocation(line: 2787, column: 26, scope: !16151)
!16155 = !DILocation(line: 2787, column: 32, scope: !16151)
!16156 = !DILocation(line: 2787, column: 37, scope: !16151)
!16157 = !DILocation(line: 2787, column: 23, scope: !16151)
!16158 = !DILocation(line: 2787, column: 43, scope: !16151)
!16159 = !DILocation(line: 2788, column: 7, scope: !16151)
!16160 = !DILocation(line: 2788, column: 13, scope: !16151)
!16161 = !DILocation(line: 2788, column: 18, scope: !16151)
!16162 = !DILocation(line: 2788, column: 26, scope: !16151)
!16163 = !DILocation(line: 2788, column: 32, scope: !16151)
!16164 = !DILocation(line: 2788, column: 37, scope: !16151)
!16165 = !DILocation(line: 2788, column: 23, scope: !16151)
!16166 = !DILocation(line: 2787, column: 6, scope: !16139)
!16167 = !DILocation(line: 2790, column: 3, scope: !16168)
!16168 = distinct !DILexicalBlock(scope: !16151, file: !3, line: 2789, column: 2)
!16169 = !DILocation(line: 2793, column: 13, scope: !16139)
!16170 = !DILocation(line: 2793, column: 19, scope: !16139)
!16171 = !DILocation(line: 2793, column: 24, scope: !16139)
!16172 = !DILocation(line: 2793, column: 31, scope: !16139)
!16173 = !DILocation(line: 2793, column: 37, scope: !16139)
!16174 = !DILocation(line: 2793, column: 42, scope: !16139)
!16175 = !DILocation(line: 2793, column: 29, scope: !16139)
!16176 = !DILocation(line: 2793, column: 7, scope: !16139)
!16177 = !DILocation(line: 2793, column: 5, scope: !16139)
!16178 = !DILocation(line: 2794, column: 13, scope: !16139)
!16179 = !DILocation(line: 2794, column: 19, scope: !16139)
!16180 = !DILocation(line: 2794, column: 24, scope: !16139)
!16181 = !DILocation(line: 2794, column: 31, scope: !16139)
!16182 = !DILocation(line: 2794, column: 37, scope: !16139)
!16183 = !DILocation(line: 2794, column: 42, scope: !16139)
!16184 = !DILocation(line: 2794, column: 29, scope: !16139)
!16185 = !DILocation(line: 2794, column: 7, scope: !16139)
!16186 = !DILocation(line: 2794, column: 5, scope: !16139)
!16187 = !DILocation(line: 2796, column: 10, scope: !16139)
!16188 = !DILocation(line: 2796, column: 16, scope: !16139)
!16189 = !DILocation(line: 2796, column: 13, scope: !16139)
!16190 = !DILocation(line: 2796, column: 9, scope: !16139)
!16191 = !DILocation(line: 2796, column: 2, scope: !16139)
!16192 = !DILocation(line: 2797, column: 1, scope: !16139)
!16193 = distinct !DISubprogram(name: "findBitIndex", scope: !3, file: !3, line: 3485, type: !16194, scopeLine: 3486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!16194 = !DISubroutineType(types: !16195)
!16195 = !{!1067, !7}
!16196 = !DILocalVariable(name: "x", arg: 1, scope: !16193, file: !3, line: 3485, type: !7)
!16197 = !DILocation(line: 3485, column: 38, scope: !16193)
!16198 = !DILocation(line: 3487, column: 7, scope: !16199)
!16199 = distinct !DILexicalBlock(scope: !16193, file: !3, line: 3487, column: 6)
!16200 = !DILocation(line: 3487, column: 9, scope: !16199)
!16201 = !DILocation(line: 3487, column: 29, scope: !16199)
!16202 = !DILocation(line: 3487, column: 13, scope: !16199)
!16203 = !DILocation(line: 3487, column: 6, scope: !16193)
!16204 = !DILocation(line: 3488, column: 3, scope: !16205)
!16205 = distinct !DILexicalBlock(scope: !16199, file: !3, line: 3487, column: 33)
!16206 = !DILocalVariable(name: "idx", scope: !16207, file: !3, line: 3491, type: !1067)
!16207 = distinct !DILexicalBlock(scope: !16199, file: !3, line: 3490, column: 7)
!16208 = !DILocation(line: 3491, column: 7, scope: !16207)
!16209 = !DILocation(line: 3493, column: 7, scope: !16210)
!16210 = distinct !DILexicalBlock(scope: !16207, file: !3, line: 3493, column: 7)
!16211 = !DILocation(line: 3493, column: 9, scope: !16210)
!16212 = !DILocation(line: 3493, column: 7, scope: !16207)
!16213 = !DILocation(line: 3493, column: 27, scope: !16210)
!16214 = !DILocation(line: 3493, column: 36, scope: !16210)
!16215 = !DILocation(line: 3493, column: 23, scope: !16210)
!16216 = !DILocation(line: 3494, column: 7, scope: !16217)
!16217 = distinct !DILexicalBlock(scope: !16207, file: !3, line: 3494, column: 7)
!16218 = !DILocation(line: 3494, column: 9, scope: !16217)
!16219 = !DILocation(line: 3494, column: 7, scope: !16207)
!16220 = !DILocation(line: 3494, column: 23, scope: !16217)
!16221 = !DILocation(line: 3494, column: 31, scope: !16217)
!16222 = !DILocation(line: 3494, column: 19, scope: !16217)
!16223 = !DILocation(line: 3495, column: 7, scope: !16224)
!16224 = distinct !DILexicalBlock(scope: !16207, file: !3, line: 3495, column: 7)
!16225 = !DILocation(line: 3495, column: 9, scope: !16224)
!16226 = !DILocation(line: 3495, column: 7, scope: !16207)
!16227 = !DILocation(line: 3495, column: 21, scope: !16224)
!16228 = !DILocation(line: 3495, column: 29, scope: !16224)
!16229 = !DILocation(line: 3495, column: 17, scope: !16224)
!16230 = !DILocation(line: 3496, column: 7, scope: !16231)
!16231 = distinct !DILexicalBlock(scope: !16207, file: !3, line: 3496, column: 7)
!16232 = !DILocation(line: 3496, column: 9, scope: !16231)
!16233 = !DILocation(line: 3496, column: 7, scope: !16207)
!16234 = !DILocation(line: 3496, column: 20, scope: !16231)
!16235 = !DILocation(line: 3496, column: 28, scope: !16231)
!16236 = !DILocation(line: 3496, column: 16, scope: !16231)
!16237 = !DILocation(line: 3497, column: 7, scope: !16238)
!16238 = distinct !DILexicalBlock(scope: !16207, file: !3, line: 3497, column: 7)
!16239 = !DILocation(line: 3497, column: 9, scope: !16238)
!16240 = !DILocation(line: 3497, column: 7, scope: !16207)
!16241 = !DILocation(line: 3497, column: 20, scope: !16238)
!16242 = !DILocation(line: 3497, column: 16, scope: !16238)
!16243 = !DILocation(line: 3499, column: 10, scope: !16207)
!16244 = !DILocation(line: 3499, column: 3, scope: !16207)
!16245 = !DILocation(line: 3501, column: 1, scope: !16193)
!16246 = distinct !DISubprogram(name: "is_power_of_2_i", scope: !3923, file: !3923, line: 117, type: !16247, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!16247 = !DISubroutineType(types: !16248)
!16248 = !{!1067, !1067}
!16249 = !DILocalVariable(name: "n", arg: 1, scope: !16246, file: !3923, line: 117, type: !1067)
!16250 = !DILocation(line: 117, column: 33, scope: !16246)
!16251 = !DILocation(line: 119, column: 10, scope: !16246)
!16252 = !DILocation(line: 119, column: 15, scope: !16246)
!16253 = !DILocation(line: 119, column: 17, scope: !16246)
!16254 = !DILocation(line: 119, column: 12, scope: !16246)
!16255 = !DILocation(line: 119, column: 23, scope: !16246)
!16256 = !DILocation(line: 119, column: 2, scope: !16246)
!16257 = distinct !DISubprogram(name: "ui_def_but_rna__disable", scope: !3, file: !3, line: 3130, type: !4535, scopeLine: 3131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!16258 = !DILocalVariable(name: "but", arg: 1, scope: !16257, file: !3, line: 3130, type: !1558)
!16259 = !DILocation(line: 3130, column: 44, scope: !16257)
!16260 = !DILocation(line: 3132, column: 2, scope: !16257)
!16261 = !DILocation(line: 3132, column: 7, scope: !16257)
!16262 = !DILocation(line: 3132, column: 12, scope: !16257)
!16263 = !DILocation(line: 3133, column: 2, scope: !16257)
!16264 = !DILocation(line: 3133, column: 7, scope: !16257)
!16265 = !DILocation(line: 3133, column: 12, scope: !16257)
!16266 = !DILocation(line: 3134, column: 2, scope: !16257)
!16267 = !DILocation(line: 3134, column: 7, scope: !16257)
!16268 = !DILocation(line: 3134, column: 15, scope: !16257)
!16269 = !DILocation(line: 3135, column: 1, scope: !16257)
!16270 = distinct !DISubprogram(name: "ui_def_but_rna__menu", scope: !3, file: !3, line: 3137, type: !16271, scopeLine: 3138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!16271 = !DISubroutineType(types: !16272)
!16272 = !{null, !1536, !16273, !1535}
!16273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16274, size: 64)
!16274 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiLayout", file: !6, line: 85, baseType: !1780)
!16275 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !16270, file: !3, line: 3137, type: !1536)
!16276 = !DILocation(line: 3137, column: 44, scope: !16270)
!16277 = !DILocalVariable(name: "layout", arg: 2, scope: !16270, file: !3, line: 3137, type: !16273)
!16278 = !DILocation(line: 3137, column: 65, scope: !16270)
!16279 = !DILocalVariable(name: "but_p", arg: 3, scope: !16270, file: !3, line: 3137, type: !1535)
!16280 = !DILocation(line: 3137, column: 79, scope: !16270)
!16281 = !DILocalVariable(name: "block", scope: !16270, file: !3, line: 3139, type: !1695)
!16282 = !DILocation(line: 3139, column: 11, scope: !16270)
!16283 = !DILocation(line: 3139, column: 36, scope: !16270)
!16284 = !DILocation(line: 3139, column: 19, scope: !16270)
!16285 = !DILocalVariable(name: "handle", scope: !16270, file: !3, line: 3140, type: !1911)
!16286 = !DILocation(line: 3140, column: 22, scope: !16270)
!16287 = !DILocation(line: 3140, column: 31, scope: !16270)
!16288 = !DILocation(line: 3140, column: 38, scope: !16270)
!16289 = !DILocalVariable(name: "but", scope: !16270, file: !3, line: 3141, type: !1558)
!16290 = !DILocation(line: 3141, column: 9, scope: !16270)
!16291 = !DILocation(line: 3141, column: 24, scope: !16270)
!16292 = !DILocation(line: 3141, column: 15, scope: !16270)
!16293 = !DILocalVariable(name: "item", scope: !16270, file: !3, line: 3144, type: !11307)
!16294 = !DILocation(line: 3144, column: 20, scope: !16270)
!16295 = !DILocalVariable(name: "item_array", scope: !16270, file: !3, line: 3144, type: !11307)
!16296 = !DILocation(line: 3144, column: 27, scope: !16270)
!16297 = !DILocalVariable(name: "free", scope: !16270, file: !3, line: 3145, type: !1550)
!16298 = !DILocation(line: 3145, column: 7, scope: !16270)
!16299 = !DILocalVariable(name: "split", scope: !16270, file: !3, line: 3147, type: !16273)
!16300 = !DILocation(line: 3147, column: 12, scope: !16270)
!16301 = !DILocalVariable(name: "column", scope: !16270, file: !3, line: 3147, type: !16273)
!16302 = !DILocation(line: 3147, column: 20, scope: !16270)
!16303 = !DILocalVariable(name: "totitems", scope: !16270, file: !3, line: 3149, type: !1067)
!16304 = !DILocation(line: 3149, column: 6, scope: !16270)
!16305 = !DILocalVariable(name: "columns", scope: !16270, file: !3, line: 3150, type: !1067)
!16306 = !DILocation(line: 3150, column: 6, scope: !16270)
!16307 = !DILocalVariable(name: "rows", scope: !16270, file: !3, line: 3150, type: !1067)
!16308 = !DILocation(line: 3150, column: 15, scope: !16270)
!16309 = !DILocalVariable(name: "a", scope: !16270, file: !3, line: 3150, type: !1067)
!16310 = !DILocation(line: 3150, column: 21, scope: !16270)
!16311 = !DILocalVariable(name: "b", scope: !16270, file: !3, line: 3150, type: !1067)
!16312 = !DILocation(line: 3150, column: 24, scope: !16270)
!16313 = !DILocalVariable(name: "column_start", scope: !16270, file: !3, line: 3151, type: !1067)
!16314 = !DILocation(line: 3151, column: 6, scope: !16270)
!16315 = !DILocalVariable(name: "column_end", scope: !16270, file: !3, line: 3151, type: !1067)
!16316 = !DILocation(line: 3151, column: 24, scope: !16270)
!16317 = !DILocalVariable(name: "nbr_entries_nosepr", scope: !16270, file: !3, line: 3152, type: !1067)
!16318 = !DILocation(line: 3152, column: 6, scope: !16270)
!16319 = !DILocation(line: 3154, column: 17, scope: !16270)
!16320 = !DILocation(line: 3154, column: 2, scope: !16270)
!16321 = !DILocation(line: 3156, column: 36, scope: !16270)
!16322 = !DILocation(line: 3156, column: 43, scope: !16270)
!16323 = !DILocation(line: 3156, column: 52, scope: !16270)
!16324 = !DILocation(line: 3156, column: 57, scope: !16270)
!16325 = !DILocation(line: 3156, column: 66, scope: !16270)
!16326 = !DILocation(line: 3156, column: 71, scope: !16270)
!16327 = !DILocation(line: 3156, column: 2, scope: !16270)
!16328 = !DILocation(line: 3160, column: 22, scope: !16270)
!16329 = !DILocation(line: 3160, column: 29, scope: !16270)
!16330 = !DILocation(line: 3160, column: 2, scope: !16270)
!16331 = !DILocation(line: 3162, column: 14, scope: !16332)
!16332 = distinct !DILexicalBlock(scope: !16270, file: !3, line: 3162, column: 2)
!16333 = !DILocation(line: 3162, column: 12, scope: !16332)
!16334 = !DILocation(line: 3162, column: 7, scope: !16332)
!16335 = !DILocation(line: 3162, column: 26, scope: !16336)
!16336 = distinct !DILexicalBlock(scope: !16332, file: !3, line: 3162, column: 2)
!16337 = !DILocation(line: 3162, column: 32, scope: !16336)
!16338 = !DILocation(line: 3162, column: 2, scope: !16332)
!16339 = !DILocation(line: 3163, column: 8, scope: !16340)
!16340 = distinct !DILexicalBlock(scope: !16341, file: !3, line: 3163, column: 7)
!16341 = distinct !DILexicalBlock(scope: !16336, file: !3, line: 3162, column: 64)
!16342 = !DILocation(line: 3163, column: 14, scope: !16340)
!16343 = !DILocation(line: 3163, column: 7, scope: !16341)
!16344 = !DILocation(line: 3165, column: 8, scope: !16345)
!16345 = distinct !DILexicalBlock(scope: !16346, file: !3, line: 3165, column: 8)
!16346 = distinct !DILexicalBlock(scope: !16340, file: !3, line: 3163, column: 29)
!16347 = !DILocation(line: 3165, column: 14, scope: !16345)
!16348 = !DILocation(line: 3165, column: 8, scope: !16346)
!16349 = !DILocation(line: 3166, column: 5, scope: !16350)
!16350 = distinct !DILexicalBlock(scope: !16345, file: !3, line: 3165, column: 20)
!16351 = !DILocation(line: 3166, column: 12, scope: !16350)
!16352 = !DILocation(line: 3166, column: 17, scope: !16350)
!16353 = !DILocation(line: 3167, column: 23, scope: !16350)
!16354 = !DILocation(line: 3168, column: 4, scope: !16350)
!16355 = !DILocation(line: 3170, column: 4, scope: !16346)
!16356 = !DILocation(line: 3172, column: 21, scope: !16341)
!16357 = !DILocation(line: 3173, column: 2, scope: !16341)
!16358 = !DILocation(line: 3162, column: 48, scope: !16336)
!16359 = !DILocation(line: 3162, column: 60, scope: !16336)
!16360 = !DILocation(line: 3162, column: 2, scope: !16336)
!16361 = distinct !{!16361, !16338, !16362}
!16362 = !DILocation(line: 3173, column: 2, scope: !16332)
!16363 = !DILocation(line: 3176, column: 13, scope: !16270)
!16364 = !DILocation(line: 3176, column: 32, scope: !16270)
!16365 = !DILocation(line: 3176, column: 38, scope: !16270)
!16366 = !DILocation(line: 3176, column: 10, scope: !16270)
!16367 = !DILocation(line: 3177, column: 6, scope: !16368)
!16368 = distinct !DILexicalBlock(scope: !16270, file: !3, line: 3177, column: 6)
!16369 = !DILocation(line: 3177, column: 14, scope: !16368)
!16370 = !DILocation(line: 3177, column: 6, scope: !16270)
!16371 = !DILocation(line: 3178, column: 11, scope: !16368)
!16372 = !DILocation(line: 3178, column: 3, scope: !16368)
!16373 = !DILocation(line: 3179, column: 6, scope: !16374)
!16374 = distinct !DILexicalBlock(scope: !16270, file: !3, line: 3179, column: 6)
!16375 = !DILocation(line: 3179, column: 14, scope: !16374)
!16376 = !DILocation(line: 3179, column: 6, scope: !16270)
!16377 = !DILocation(line: 3180, column: 14, scope: !16374)
!16378 = !DILocation(line: 3180, column: 33, scope: !16374)
!16379 = !DILocation(line: 3180, column: 39, scope: !16374)
!16380 = !DILocation(line: 3180, column: 11, scope: !16374)
!16381 = !DILocation(line: 3180, column: 3, scope: !16374)
!16382 = !DILocation(line: 3182, column: 9, scope: !16270)
!16383 = !DILocation(line: 3182, column: 20, scope: !16270)
!16384 = !DILocation(line: 3182, column: 18, scope: !16270)
!16385 = !DILocation(line: 3182, column: 7, scope: !16270)
!16386 = !DILocation(line: 3183, column: 6, scope: !16387)
!16387 = distinct !DILexicalBlock(scope: !16270, file: !3, line: 3183, column: 6)
!16388 = !DILocation(line: 3183, column: 11, scope: !16387)
!16389 = !DILocation(line: 3183, column: 6, scope: !16270)
!16390 = !DILocation(line: 3184, column: 8, scope: !16387)
!16391 = !DILocation(line: 3184, column: 3, scope: !16387)
!16392 = !DILocation(line: 3185, column: 2, scope: !16270)
!16393 = !DILocation(line: 3185, column: 9, scope: !16270)
!16394 = !DILocation(line: 3185, column: 16, scope: !16270)
!16395 = !DILocation(line: 3185, column: 14, scope: !16270)
!16396 = !DILocation(line: 3185, column: 26, scope: !16270)
!16397 = !DILocation(line: 3185, column: 24, scope: !16270)
!16398 = !DILocation(line: 3186, column: 7, scope: !16270)
!16399 = distinct !{!16399, !16392, !16398}
!16400 = !DILocation(line: 3189, column: 11, scope: !16270)
!16401 = !DILocation(line: 3189, column: 49, scope: !16270)
!16402 = !DILocation(line: 3189, column: 54, scope: !16270)
!16403 = !DILocation(line: 3189, column: 28, scope: !16270)
!16404 = !DILocation(line: 3190, column: 17, scope: !16270)
!16405 = !DILocation(line: 3190, column: 27, scope: !16270)
!16406 = !DILocation(line: 3190, column: 32, scope: !16270)
!16407 = !DILocation(line: 3189, column: 2, scope: !16270)
!16408 = !DILocation(line: 3191, column: 10, scope: !16270)
!16409 = !DILocation(line: 3191, column: 2, scope: !16270)
!16410 = !DILocation(line: 3196, column: 24, scope: !16270)
!16411 = !DILocation(line: 3196, column: 10, scope: !16270)
!16412 = !DILocation(line: 3196, column: 8, scope: !16270)
!16413 = !DILocation(line: 3198, column: 9, scope: !16414)
!16414 = distinct !DILexicalBlock(scope: !16270, file: !3, line: 3198, column: 2)
!16415 = !DILocation(line: 3198, column: 7, scope: !16414)
!16416 = !DILocation(line: 3198, column: 14, scope: !16417)
!16417 = distinct !DILexicalBlock(scope: !16414, file: !3, line: 3198, column: 2)
!16418 = !DILocation(line: 3198, column: 18, scope: !16417)
!16419 = !DILocation(line: 3198, column: 16, scope: !16417)
!16420 = !DILocation(line: 3198, column: 2, scope: !16414)
!16421 = !DILocation(line: 3199, column: 7, scope: !16422)
!16422 = distinct !DILexicalBlock(scope: !16423, file: !3, line: 3199, column: 7)
!16423 = distinct !DILexicalBlock(scope: !16417, file: !3, line: 3198, column: 33)
!16424 = !DILocation(line: 3199, column: 12, scope: !16422)
!16425 = !DILocation(line: 3199, column: 9, scope: !16422)
!16426 = !DILocation(line: 3199, column: 7, scope: !16423)
!16427 = !DILocation(line: 3202, column: 19, scope: !16428)
!16428 = distinct !DILexicalBlock(scope: !16422, file: !3, line: 3199, column: 24)
!16429 = !DILocation(line: 3202, column: 17, scope: !16428)
!16430 = !DILocation(line: 3203, column: 17, scope: !16428)
!16431 = !DILocation(line: 3203, column: 15, scope: !16428)
!16432 = !DILocation(line: 3205, column: 13, scope: !16433)
!16433 = distinct !DILexicalBlock(scope: !16428, file: !3, line: 3205, column: 4)
!16434 = !DILocation(line: 3205, column: 15, scope: !16433)
!16435 = !DILocation(line: 3205, column: 11, scope: !16433)
!16436 = !DILocation(line: 3205, column: 9, scope: !16433)
!16437 = !DILocation(line: 3205, column: 20, scope: !16438)
!16438 = distinct !DILexicalBlock(scope: !16433, file: !3, line: 3205, column: 4)
!16439 = !DILocation(line: 3205, column: 24, scope: !16438)
!16440 = !DILocation(line: 3205, column: 22, scope: !16438)
!16441 = !DILocation(line: 3205, column: 4, scope: !16433)
!16442 = !DILocation(line: 3206, column: 13, scope: !16443)
!16443 = distinct !DILexicalBlock(scope: !16438, file: !3, line: 3205, column: 39)
!16444 = !DILocation(line: 3206, column: 24, scope: !16443)
!16445 = !DILocation(line: 3206, column: 10, scope: !16443)
!16446 = !DILocation(line: 3209, column: 11, scope: !16447)
!16447 = distinct !DILexicalBlock(scope: !16443, file: !3, line: 3209, column: 9)
!16448 = !DILocation(line: 3209, column: 15, scope: !16447)
!16449 = !DILocation(line: 3209, column: 13, scope: !16447)
!16450 = !DILocation(line: 3209, column: 20, scope: !16447)
!16451 = !DILocation(line: 3209, column: 18, scope: !16447)
!16452 = !DILocation(line: 3209, column: 25, scope: !16447)
!16453 = !DILocation(line: 3209, column: 31, scope: !16447)
!16454 = !DILocation(line: 3209, column: 36, scope: !16447)
!16455 = !DILocation(line: 3209, column: 42, scope: !16447)
!16456 = !DILocation(line: 3209, column: 56, scope: !16447)
!16457 = !DILocation(line: 3209, column: 59, scope: !16447)
!16458 = !DILocation(line: 3209, column: 65, scope: !16447)
!16459 = !DILocation(line: 3209, column: 9, scope: !16443)
!16460 = !DILocation(line: 3210, column: 19, scope: !16461)
!16461 = distinct !DILexicalBlock(scope: !16447, file: !3, line: 3209, column: 72)
!16462 = !DILocation(line: 3210, column: 17, scope: !16461)
!16463 = !DILocation(line: 3211, column: 6, scope: !16461)
!16464 = !DILocation(line: 3213, column: 4, scope: !16443)
!16465 = !DILocation(line: 3205, column: 35, scope: !16438)
!16466 = !DILocation(line: 3205, column: 4, scope: !16438)
!16467 = distinct !{!16467, !16441, !16468}
!16468 = !DILocation(line: 3213, column: 4, scope: !16433)
!16469 = !DILocation(line: 3215, column: 28, scope: !16428)
!16470 = !DILocation(line: 3215, column: 13, scope: !16428)
!16471 = !DILocation(line: 3215, column: 11, scope: !16428)
!16472 = !DILocation(line: 3216, column: 3, scope: !16428)
!16473 = !DILocation(line: 3218, column: 7, scope: !16474)
!16474 = distinct !DILexicalBlock(scope: !16423, file: !3, line: 3218, column: 7)
!16475 = !DILocation(line: 3218, column: 14, scope: !16474)
!16476 = !DILocation(line: 3218, column: 19, scope: !16474)
!16477 = !DILocation(line: 3218, column: 7, scope: !16423)
!16478 = !DILocation(line: 3219, column: 12, scope: !16479)
!16479 = distinct !DILexicalBlock(scope: !16474, file: !3, line: 3218, column: 39)
!16480 = !DILocation(line: 3219, column: 23, scope: !16479)
!16481 = !DILocation(line: 3219, column: 9, scope: !16479)
!16482 = !DILocation(line: 3220, column: 3, scope: !16479)
!16483 = !DILocation(line: 3222, column: 12, scope: !16484)
!16484 = distinct !DILexicalBlock(scope: !16474, file: !3, line: 3221, column: 8)
!16485 = !DILocation(line: 3222, column: 24, scope: !16484)
!16486 = !DILocation(line: 3222, column: 39, scope: !16484)
!16487 = !DILocation(line: 3222, column: 37, scope: !16484)
!16488 = !DILocation(line: 3222, column: 50, scope: !16484)
!16489 = !DILocation(line: 3222, column: 56, scope: !16484)
!16490 = !DILocation(line: 3222, column: 54, scope: !16484)
!16491 = !DILocation(line: 3222, column: 9, scope: !16484)
!16492 = !DILocation(line: 3225, column: 8, scope: !16493)
!16493 = distinct !DILexicalBlock(scope: !16423, file: !3, line: 3225, column: 7)
!16494 = !DILocation(line: 3225, column: 14, scope: !16493)
!16495 = !DILocation(line: 3225, column: 7, scope: !16423)
!16496 = !DILocation(line: 3226, column: 8, scope: !16497)
!16497 = distinct !DILexicalBlock(scope: !16498, file: !3, line: 3226, column: 8)
!16498 = distinct !DILexicalBlock(scope: !16493, file: !3, line: 3225, column: 29)
!16499 = !DILocation(line: 3226, column: 14, scope: !16497)
!16500 = !DILocation(line: 3226, column: 8, scope: !16498)
!16501 = !DILocation(line: 3227, column: 9, scope: !16502)
!16502 = distinct !DILexicalBlock(scope: !16503, file: !3, line: 3227, column: 9)
!16503 = distinct !DILexicalBlock(scope: !16497, file: !3, line: 3226, column: 20)
!16504 = !DILocation(line: 3227, column: 15, scope: !16502)
!16505 = !DILocation(line: 3227, column: 9, scope: !16503)
!16506 = !DILocation(line: 3228, column: 14, scope: !16507)
!16507 = distinct !DILexicalBlock(scope: !16502, file: !3, line: 3227, column: 21)
!16508 = !DILocation(line: 3228, column: 22, scope: !16507)
!16509 = !DILocation(line: 3228, column: 28, scope: !16507)
!16510 = !DILocation(line: 3228, column: 34, scope: !16507)
!16511 = !DILocation(line: 3228, column: 40, scope: !16507)
!16512 = !DILocation(line: 3228, column: 6, scope: !16507)
!16513 = !DILocation(line: 3229, column: 5, scope: !16507)
!16514 = !DILocation(line: 3232, column: 15, scope: !16515)
!16515 = distinct !DILexicalBlock(scope: !16502, file: !3, line: 3230, column: 10)
!16516 = !DILocation(line: 3232, column: 32, scope: !16515)
!16517 = !DILocation(line: 3232, column: 38, scope: !16515)
!16518 = !DILocation(line: 3232, column: 50, scope: !16515)
!16519 = !DILocation(line: 3232, column: 60, scope: !16515)
!16520 = !DILocation(line: 3232, column: 65, scope: !16515)
!16521 = !DILocation(line: 3232, column: 6, scope: !16515)
!16522 = !DILocation(line: 3234, column: 4, scope: !16503)
!16523 = !DILocation(line: 3236, column: 13, scope: !16524)
!16524 = distinct !DILexicalBlock(scope: !16497, file: !3, line: 3235, column: 9)
!16525 = !DILocation(line: 3236, column: 5, scope: !16524)
!16526 = !DILocation(line: 3238, column: 3, scope: !16498)
!16527 = !DILocation(line: 3240, column: 8, scope: !16528)
!16528 = distinct !DILexicalBlock(scope: !16529, file: !3, line: 3240, column: 8)
!16529 = distinct !DILexicalBlock(scope: !16493, file: !3, line: 3239, column: 8)
!16530 = !DILocation(line: 3240, column: 14, scope: !16528)
!16531 = !DILocation(line: 3240, column: 8, scope: !16529)
!16532 = !DILocation(line: 3241, column: 23, scope: !16533)
!16533 = distinct !DILexicalBlock(scope: !16528, file: !3, line: 3240, column: 20)
!16534 = !DILocation(line: 3241, column: 43, scope: !16533)
!16535 = !DILocation(line: 3241, column: 49, scope: !16533)
!16536 = !DILocation(line: 3241, column: 55, scope: !16533)
!16537 = !DILocation(line: 3241, column: 61, scope: !16533)
!16538 = !DILocation(line: 3242, column: 23, scope: !16533)
!16539 = !DILocation(line: 3242, column: 33, scope: !16533)
!16540 = !DILocation(line: 3242, column: 38, scope: !16533)
!16541 = !DILocation(line: 3242, column: 50, scope: !16533)
!16542 = !DILocation(line: 3242, column: 58, scope: !16533)
!16543 = !DILocation(line: 3242, column: 68, scope: !16533)
!16544 = !DILocation(line: 3242, column: 74, scope: !16533)
!16545 = !DILocation(line: 3242, column: 93, scope: !16533)
!16546 = !DILocation(line: 3242, column: 99, scope: !16533)
!16547 = !DILocation(line: 3241, column: 5, scope: !16533)
!16548 = !DILocation(line: 3243, column: 4, scope: !16533)
!16549 = !DILocation(line: 3245, column: 15, scope: !16550)
!16550 = distinct !DILexicalBlock(scope: !16528, file: !3, line: 3244, column: 9)
!16551 = !DILocation(line: 3245, column: 35, scope: !16550)
!16552 = !DILocation(line: 3245, column: 41, scope: !16550)
!16553 = !DILocation(line: 3246, column: 15, scope: !16550)
!16554 = !DILocation(line: 3246, column: 25, scope: !16550)
!16555 = !DILocation(line: 3246, column: 30, scope: !16550)
!16556 = !DILocation(line: 3246, column: 42, scope: !16550)
!16557 = !DILocation(line: 3246, column: 50, scope: !16550)
!16558 = !DILocation(line: 3246, column: 60, scope: !16550)
!16559 = !DILocation(line: 3246, column: 66, scope: !16550)
!16560 = !DILocation(line: 3246, column: 85, scope: !16550)
!16561 = !DILocation(line: 3246, column: 91, scope: !16550)
!16562 = !DILocation(line: 3245, column: 5, scope: !16550)
!16563 = !DILocation(line: 3249, column: 2, scope: !16423)
!16564 = !DILocation(line: 3198, column: 29, scope: !16417)
!16565 = !DILocation(line: 3198, column: 2, scope: !16417)
!16566 = distinct !{!16566, !16420, !16567}
!16567 = !DILocation(line: 3249, column: 2, scope: !16414)
!16568 = !DILocation(line: 3251, column: 22, scope: !16270)
!16569 = !DILocation(line: 3251, column: 29, scope: !16270)
!16570 = !DILocation(line: 3251, column: 2, scope: !16270)
!16571 = !DILocation(line: 3253, column: 6, scope: !16572)
!16572 = distinct !DILexicalBlock(scope: !16270, file: !3, line: 3253, column: 6)
!16573 = !DILocation(line: 3253, column: 6, scope: !16270)
!16574 = !DILocation(line: 3254, column: 3, scope: !16575)
!16575 = distinct !DILexicalBlock(scope: !16572, file: !3, line: 3253, column: 12)
!16576 = !DILocation(line: 3254, column: 13, scope: !16575)
!16577 = !DILocation(line: 3255, column: 2, scope: !16575)
!16578 = !DILocation(line: 3256, column: 1, scope: !16270)
!16579 = distinct !DISubprogram(name: "ui_is_but_rna_undo", scope: !3, file: !3, line: 810, type: !7735, scopeLine: 811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!16580 = !DILocalVariable(name: "but", arg: 1, scope: !16579, file: !3, line: 810, type: !4088)
!16581 = !DILocation(line: 810, column: 45, scope: !16579)
!16582 = !DILocation(line: 812, column: 6, scope: !16583)
!16583 = distinct !DILexicalBlock(scope: !16579, file: !3, line: 812, column: 6)
!16584 = !DILocation(line: 812, column: 11, scope: !16583)
!16585 = !DILocation(line: 812, column: 19, scope: !16583)
!16586 = !DILocation(line: 812, column: 22, scope: !16583)
!16587 = !DILocation(line: 812, column: 6, scope: !16579)
!16588 = !DILocalVariable(name: "id", scope: !16589, file: !3, line: 817, type: !1987)
!16589 = distinct !DILexicalBlock(scope: !16583, file: !3, line: 812, column: 28)
!16590 = !DILocation(line: 817, column: 7, scope: !16589)
!16591 = !DILocation(line: 817, column: 12, scope: !16589)
!16592 = !DILocation(line: 817, column: 17, scope: !16589)
!16593 = !DILocation(line: 817, column: 25, scope: !16589)
!16594 = !DILocation(line: 817, column: 28, scope: !16589)
!16595 = !DILocation(line: 818, column: 7, scope: !16596)
!16596 = distinct !DILexicalBlock(scope: !16589, file: !3, line: 818, column: 7)
!16597 = !DILocation(line: 0, scope: !16596)
!16598 = !DILocation(line: 818, column: 25, scope: !16596)
!16599 = !DILocation(line: 818, column: 7, scope: !16589)
!16600 = !DILocation(line: 819, column: 4, scope: !16601)
!16601 = distinct !DILexicalBlock(scope: !16596, file: !3, line: 818, column: 35)
!16602 = !DILocation(line: 822, column: 4, scope: !16603)
!16603 = distinct !DILexicalBlock(scope: !16596, file: !3, line: 821, column: 8)
!16604 = !DILocation(line: 825, column: 11, scope: !16605)
!16605 = distinct !DILexicalBlock(scope: !16583, file: !3, line: 825, column: 11)
!16606 = !DILocation(line: 825, column: 16, scope: !16605)
!16607 = !DILocation(line: 825, column: 24, scope: !16605)
!16608 = !DILocation(line: 825, column: 29, scope: !16605)
!16609 = !DILocation(line: 825, column: 55, scope: !16605)
!16610 = !DILocation(line: 825, column: 60, scope: !16605)
!16611 = !DILocation(line: 825, column: 68, scope: !16605)
!16612 = !DILocation(line: 825, column: 33, scope: !16605)
!16613 = !DILocation(line: 825, column: 11, scope: !16583)
!16614 = !DILocation(line: 826, column: 3, scope: !16615)
!16615 = distinct !DILexicalBlock(scope: !16605, file: !3, line: 825, column: 75)
!16616 = !DILocation(line: 829, column: 2, scope: !16579)
!16617 = !DILocation(line: 830, column: 1, scope: !16579)
!16618 = distinct !DISubprogram(name: "ui_get_but_step_unit", scope: !3, file: !3, line: 1995, type: !16619, scopeLine: 1996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3280)
!16619 = !DISubroutineType(types: !16620)
!16620 = !{!1534, !1558, !1534}
!16621 = !DILocalVariable(name: "but", arg: 1, scope: !16618, file: !3, line: 1995, type: !1558)
!16622 = !DILocation(line: 1995, column: 42, scope: !16618)
!16623 = !DILocalVariable(name: "step_default", arg: 2, scope: !16618, file: !3, line: 1995, type: !1534)
!16624 = !DILocation(line: 1995, column: 53, scope: !16618)
!16625 = !DILocalVariable(name: "unit_type", scope: !16618, file: !3, line: 1997, type: !1067)
!16626 = !DILocation(line: 1997, column: 6, scope: !16618)
!16627 = !DILocation(line: 1997, column: 18, scope: !16618)
!16628 = !DILocalVariable(name: "step", scope: !16618, file: !3, line: 1998, type: !1540)
!16629 = !DILocation(line: 1998, column: 9, scope: !16618)
!16630 = !DILocation(line: 2000, column: 51, scope: !16618)
!16631 = !DILocation(line: 2000, column: 56, scope: !16618)
!16632 = !DILocation(line: 2000, column: 29, scope: !16618)
!16633 = !DILocation(line: 2000, column: 71, scope: !16618)
!16634 = !DILocation(line: 2000, column: 76, scope: !16618)
!16635 = !DILocation(line: 2000, column: 83, scope: !16618)
!16636 = !DILocation(line: 2000, column: 89, scope: !16618)
!16637 = !DILocation(line: 2000, column: 97, scope: !16618)
!16638 = !DILocation(line: 2000, column: 9, scope: !16618)
!16639 = !DILocation(line: 2000, column: 7, scope: !16618)
!16640 = !DILocation(line: 2003, column: 6, scope: !16641)
!16641 = distinct !DILexicalBlock(scope: !16618, file: !3, line: 2003, column: 6)
!16642 = !DILocation(line: 2003, column: 11, scope: !16641)
!16643 = !DILocation(line: 2003, column: 6, scope: !16618)
!16644 = !DILocation(line: 2005, column: 18, scope: !16645)
!16645 = distinct !DILexicalBlock(scope: !16641, file: !3, line: 2003, column: 20)
!16646 = !DILocation(line: 2005, column: 47, scope: !16645)
!16647 = !DILocation(line: 2005, column: 25, scope: !16645)
!16648 = !DILocation(line: 2005, column: 23, scope: !16645)
!16649 = !DILocation(line: 2005, column: 10, scope: !16645)
!16650 = !DILocation(line: 2005, column: 58, scope: !16645)
!16651 = !DILocation(line: 2005, column: 3, scope: !16645)
!16652 = !DILocation(line: 2008, column: 10, scope: !16653)
!16653 = distinct !DILexicalBlock(scope: !16641, file: !3, line: 2007, column: 7)
!16654 = !DILocation(line: 2008, column: 3, scope: !16653)
!16655 = !DILocation(line: 2010, column: 1, scope: !16618)
